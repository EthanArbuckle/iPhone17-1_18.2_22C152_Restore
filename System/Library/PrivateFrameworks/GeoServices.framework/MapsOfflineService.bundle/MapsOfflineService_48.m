char *sub_1426430(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  char *result;
  int v6;
  int v7;

  v7 = 0;
  result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    result = sub_1430120(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_14264C0(uint64_t a1, unsigned char *__dst, void *a3)
{
  v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 104);
    unsigned char *v4 = 16;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v10 = *(unsigned char *)(a1 + 108);
    unsigned char *v4 = 24;
    v4[1] = v10;
    v4 += 2;
    if ((v6 & 2) == 0)
    {
LABEL_12:
      if ((v6 & 0x80) == 0) {
        goto LABEL_24;
      }
      goto LABEL_18;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_12;
  }
  v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x80) == 0) {
    goto LABEL_24;
  }
LABEL_18:
  if (*a3 <= (unint64_t)v4) {
    v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  unint64_t v11 = *(int *)(a1 + 112);
  unsigned char *v4 = 40;
  v4[1] = v11;
  if (v11 > 0x7F)
  {
    v4[1] = v11 | 0x80;
    unint64_t v12 = v11 >> 7;
    v4[2] = v11 >> 7;
    v4 += 3;
    if (v11 >= 0x4000)
    {
      do
      {
        *(v4 - 1) |= 0x80u;
        unint64_t v13 = v12 >> 14;
        v12 >>= 7;
        *v4++ = v12;
      }
      while (v13);
    }
  }
  else
  {
    v4 += 2;
  }
LABEL_24:
  int v14 = *(_DWORD *)(a1 + 32);
  if (v14)
  {
    for (int i = 0; i != v14; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v16 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      unsigned char *v4 = 50;
      unsigned int v17 = *(_DWORD *)(v16 + 20);
      v4[1] = v17;
      if (v17 > 0x7F) {
        v18 = sub_188A9CC(v17, v4 + 1);
      }
      else {
        v18 = v4 + 2;
      }
      v4 = sub_14303E4(v16, (unint64_t)v18, a3);
    }
  }
  int v19 = *(_DWORD *)(a1 + 56);
  if (v19)
  {
    for (int j = 0; j != v19; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v21 = *(void *)(*(void *)(a1 + 64) + 8 * j + 8);
      unsigned char *v4 = 58;
      unsigned int v22 = *(_DWORD *)(v21 + 20);
      v4[1] = v22;
      if (v22 > 0x7F) {
        v23 = sub_188A9CC(v22, v4 + 1);
      }
      else {
        v23 = v4 + 2;
      }
      v4 = sub_14303E4(v21, (unint64_t)v23, a3);
    }
  }
  if ((v6 & 4) != 0)
  {
    v4 = sub_117A0AC(a3, 8, (const void **)(*(void *)(a1 + 88) & 0xFFFFFFFFFFFFFFFELL), v4);
    if ((v6 & 8) == 0)
    {
LABEL_42:
      if ((v6 & 0x40) == 0) {
        goto LABEL_54;
      }
      goto LABEL_51;
    }
  }
  else if ((v6 & 8) == 0)
  {
    goto LABEL_42;
  }
  if (*a3 <= (unint64_t)v4) {
    v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v24 = *(void *)(a1 + 96);
  unsigned char *v4 = 74;
  unsigned int v25 = *(_DWORD *)(v24 + 20);
  v4[1] = v25;
  if (v25 > 0x7F) {
    v26 = sub_188A9CC(v25, v4 + 1);
  }
  else {
    v26 = v4 + 2;
  }
  v4 = sub_1438258(v24, (unint64_t)v26, a3);
  if ((v6 & 0x40) != 0)
  {
LABEL_51:
    if (*a3 <= (unint64_t)v4) {
      v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v27 = *(unsigned char *)(a1 + 109);
    unsigned char *v4 = 80;
    v4[1] = v27;
    v4 += 2;
  }
LABEL_54:
  uint64_t v28 = *(void *)(a1 + 8);
  if ((v28 & 1) == 0) {
    return v4;
  }
  unint64_t v30 = v28 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v30 + 31) < 0)
  {
    v31 = *(void **)(v30 + 8);
    uint64_t v32 = *(void *)(v30 + 16);
  }
  else
  {
    v31 = (void *)(v30 + 8);
    LODWORD(v32) = *(unsigned __int8 *)(v30 + 31);
  }
  if (*a3 - (void)v4 >= (int)v32)
  {
    uint64_t v33 = (int)v32;
    memcpy(v4, v31, (int)v32);
    v4 += v33;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v31, v32, v4);
}

uint64_t sub_14268D0(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 0x10) != 0) {
    uint64_t v2 = ((9 * (__clz(*(_DWORD *)(a1 + 104) | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  else {
    uint64_t v2 = 0;
  }
  uint64_t v3 = *(int *)(a1 + 32);
  uint64_t v4 = v2 + v3;
  uint64_t v5 = *(void *)(a1 + 40);
  if (v5) {
    int v6 = (uint64_t *)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = sub_143063C(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  uint64_t v10 = *(int *)(a1 + 56);
  uint64_t v11 = v4 + v10;
  uint64_t v12 = *(void *)(a1 + 64);
  if (v12) {
    unint64_t v13 = (uint64_t *)(v12 + 8);
  }
  else {
    unint64_t v13 = 0;
  }
  if (v10)
  {
    uint64_t v14 = 8 * v10;
    do
    {
      uint64_t v15 = *v13++;
      uint64_t v16 = sub_143063C(v15);
      v11 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6);
      v14 -= 8;
    }
    while (v14);
  }
  int v17 = *(_DWORD *)(a1 + 16);
  if ((v17 & 0xF) == 0) {
    goto LABEL_22;
  }
  if ((v17 & 1) == 0)
  {
    if ((v17 & 2) == 0) {
      goto LABEL_19;
    }
LABEL_38:
    unint64_t v28 = *(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v29 = *(unsigned __int8 *)(v28 + 23);
    uint64_t v30 = *(void *)(v28 + 8);
    if ((v29 & 0x80u) == 0) {
      uint64_t v30 = v29;
    }
    v11 += v30 + ((9 * (__clz(v30 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v17 & 4) == 0)
    {
LABEL_20:
      if ((v17 & 8) == 0) {
        goto LABEL_22;
      }
      goto LABEL_21;
    }
    goto LABEL_41;
  }
  unint64_t v25 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v26 = *(unsigned __int8 *)(v25 + 23);
  uint64_t v27 = *(void *)(v25 + 8);
  if ((v26 & 0x80u) == 0) {
    uint64_t v27 = v26;
  }
  v11 += v27 + ((9 * (__clz(v27 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v17 & 2) != 0) {
    goto LABEL_38;
  }
LABEL_19:
  if ((v17 & 4) == 0) {
    goto LABEL_20;
  }
LABEL_41:
  unint64_t v31 = *(void *)(a1 + 88) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v32 = *(unsigned __int8 *)(v31 + 23);
  uint64_t v33 = *(void *)(v31 + 8);
  if ((v32 & 0x80u) == 0) {
    uint64_t v33 = v32;
  }
  v11 += v33 + ((9 * (__clz(v33 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v17 & 8) != 0)
  {
LABEL_21:
    uint64_t v18 = sub_14386C8(*(void *)(a1 + 96));
    v11 += v18 + ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_22:
  if ((v17 & 0xE0) != 0)
  {
    uint64_t v19 = v11 + 2;
    if ((v17 & 0x20) == 0) {
      uint64_t v19 = v11;
    }
    if ((v17 & 0x40) != 0) {
      uint64_t v11 = v19 + 2;
    }
    else {
      uint64_t v11 = v19;
    }
    if ((v17 & 0x80) != 0)
    {
      int v20 = *(_DWORD *)(a1 + 112);
      uint64_t v21 = ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if (v20 >= 0) {
        uint64_t v22 = v21;
      }
      else {
        uint64_t v22 = 11;
      }
      v11 += v22;
    }
  }
  uint64_t v23 = *(void *)(a1 + 8);
  if (v23)
  {
    unint64_t v34 = v23 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v34 + 31) < 0) {
      uint64_t v35 = *(void *)(v34 + 16);
    }
    else {
      uint64_t v35 = *(unsigned __int8 *)(v34 + 31);
    }
    v11 += v35;
  }
  *(_DWORD *)(a1 + 20) = v11;
  return v11;
}

std::string *sub_1426B68(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    int v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    result = sub_14922F4(v3 + 1, v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2] - LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    uint64_t v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    uint64_t v11 = (std::string **)sub_188CCE4((uint64_t)&v3[2], *(_DWORD *)(a2 + 56));
    result = sub_14922F4(v3 + 2, v11, v10, v9, *(_DWORD *)v3[2].__r_.__value_.__r.__words[2] - LODWORD(v3[2].__r_.__value_.__r.__words[1]));
    int v12 = LODWORD(v3[2].__r_.__value_.__r.__words[1]) + v9;
    LODWORD(v3[2].__r_.__value_.__r.__words[1]) = v12;
    unint64_t v13 = (int *)v3[2].__r_.__value_.__r.__words[2];
    if (*v13 < v12) {
      *unint64_t v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 16);
  if ((_BYTE)v14)
  {
    if (v14)
    {
      uint64_t v16 = (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v18 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v18 = (uint64_t *)*v18;
      }
      result = sub_1881DF4((std::string **)&v3[3], v16, v18);
      if ((v14 & 2) == 0)
      {
LABEL_10:
        if ((v14 & 4) == 0) {
          goto LABEL_11;
        }
        goto LABEL_28;
      }
    }
    else if ((v14 & 2) == 0)
    {
      goto LABEL_10;
    }
    uint64_t v19 = (long long *)(*(void *)(a2 + 80) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    std::string::size_type v20 = v3->__r_.__value_.__l.__size_;
    uint64_t v21 = (uint64_t *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
    if (v20) {
      uint64_t v21 = (uint64_t *)*v21;
    }
    result = sub_1881DF4((std::string **)&v3[3].__r_.__value_.__l.__size_, v19, v21);
    if ((v14 & 4) == 0)
    {
LABEL_11:
      if ((v14 & 8) == 0) {
        goto LABEL_12;
      }
      goto LABEL_31;
    }
LABEL_28:
    uint64_t v22 = (long long *)(*(void *)(a2 + 88) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
    std::string::size_type v23 = v3->__r_.__value_.__l.__size_;
    uint64_t v24 = (uint64_t *)(v23 & 0xFFFFFFFFFFFFFFFCLL);
    if (v23) {
      uint64_t v24 = (uint64_t *)*v24;
    }
    result = sub_1881DF4((std::string **)&v3[3].__r_.__value_.__r.__words[2], v22, v24);
    if ((v14 & 8) == 0)
    {
LABEL_12:
      if ((v14 & 0x10) == 0) {
        goto LABEL_13;
      }
      goto LABEL_39;
    }
LABEL_31:
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 8u;
    data = (std::string *)v3[4].__r_.__value_.__l.__data_;
    if (!data)
    {
      std::string::size_type v26 = v3->__r_.__value_.__l.__size_;
      uint64_t v27 = (void *)(v26 & 0xFFFFFFFFFFFFFFFCLL);
      if (v26) {
        uint64_t v27 = (void *)*v27;
      }
      sub_144C21C((uint64_t)v27);
      v3[4].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
    }
    if (*(void *)(a2 + 96)) {
      unint64_t v28 = *(uint64_t (****)())(a2 + 96);
    }
    else {
      unint64_t v28 = &off_2538878;
    }
    result = sub_1415FFC(data, (uint64_t)v28);
    if ((v14 & 0x10) == 0)
    {
LABEL_13:
      if ((v14 & 0x20) == 0) {
        goto LABEL_14;
      }
      goto LABEL_40;
    }
LABEL_39:
    LODWORD(v3[4].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 104);
    if ((v14 & 0x20) == 0)
    {
LABEL_14:
      if ((v14 & 0x40) == 0) {
        goto LABEL_15;
      }
      goto LABEL_41;
    }
LABEL_40:
    v3[4].__r_.__value_.__s.__data_[12] = *(unsigned char *)(a2 + 108);
    if ((v14 & 0x40) == 0)
    {
LABEL_15:
      if ((v14 & 0x80) == 0)
      {
LABEL_17:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v14;
        goto LABEL_18;
      }
LABEL_16:
      LODWORD(v3[4].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 112);
      goto LABEL_17;
    }
LABEL_41:
    v3[4].__r_.__value_.__s.__data_[13] = *(unsigned char *)(a2 + 109);
    if ((v14 & 0x80) == 0) {
      goto LABEL_17;
    }
    goto LABEL_16;
  }
LABEL_18:
  uint64_t v15 = *(void *)(a2 + 8);
  if (v15)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v15 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

std::string *sub_1426DEC(std::string *result, uint64_t a2)
{
  if ((std::string *)a2 != result)
  {
    int v4 = result;
    sub_1425D24((uint64_t)result);
    return sub_1426B68(v4, a2);
  }
  return result;
}

uint64_t sub_1426E38(uint64_t a1)
{
  return (*(unsigned __int8 *)(a1 + 16) >> 4) & 1;
}

__n128 sub_1426E44(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a2 + 8) = v2;
  LODWORD(v2) = *(_DWORD *)(a1 + 16);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a2 + 16) = v2;
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = v4;
  uint64_t v5 = *(void *)(a1 + 40);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = v5;
  uint64_t v6 = *(void *)(a1 + 48);
  uint64_t v7 = *(void *)(a1 + 56);
  __n128 result = *(__n128 *)(a2 + 48);
  *(__n128 *)(a1 + 48) = result;
  *(void *)(a2 + 48) = v6;
  *(void *)(a2 + 56) = v7;
  uint64_t v9 = *(void *)(a1 + 64);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a2 + 64) = v9;
  uint64_t v10 = *(void *)(a2 + 72);
  *(void *)(a2 + 72) = *(void *)(a1 + 72);
  *(void *)(a1 + 72) = v10;
  uint64_t v11 = *(void *)(a2 + 80);
  *(void *)(a2 + 80) = *(void *)(a1 + 80);
  *(void *)(a1 + 80) = v11;
  uint64_t v12 = *(void *)(a2 + 88);
  *(void *)(a2 + 88) = *(void *)(a1 + 88);
  *(void *)(a1 + 88) = v12;
  uint64_t v13 = *(void *)(a1 + 96);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a2 + 96) = v13;
  LODWORD(v13) = *(_DWORD *)(a1 + 104);
  *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
  *(_DWORD *)(a2 + 104) = v13;
  LOWORD(v13) = *(_WORD *)(a1 + 108);
  *(_WORD *)(a1 + 108) = *(_WORD *)(a2 + 108);
  *(_WORD *)(a2 + 108) = v13;
  LODWORD(v13) = *(_DWORD *)(a1 + 112);
  *(_DWORD *)(a1 + 112) = *(_DWORD *)(a2 + 112);
  *(_DWORD *)(a2 + 112) = v13;
  return result;
}

void *sub_1426F18@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gemini.Taxonomy.IconMapping");
}

uint64_t sub_1426F28(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_24B3788;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  return a1;
}

void sub_1426FA4(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_1426FD4(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1427048(void *a1)
{
  sub_1426FD4(a1);

  operator delete();
}

uint64_t sub_1427080(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 16) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_1427098(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v19 = a2;
  if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
    return v19;
  }
  uint64_t v5 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v6 = v19 + 1;
    unsigned int v7 = *v19;
    if (*v19 < 0)
    {
      unsigned int v8 = v7 + (*v6 << 7);
      unsigned int v7 = v8 - 128;
      if (*v6 < 0)
      {
        uint64_t v6 = (char *)sub_188C180((uint64_t)v19, v8 - 128);
        unsigned int v7 = v9;
      }
      else
      {
        uint64_t v6 = v19 + 2;
      }
    }
    uint64_t v19 = v6;
    if (v7 == 8)
    {
      uint64_t v12 = v6 + 1;
      unint64_t v13 = *v6;
      if (*v6 < 0)
      {
        int v14 = *v12;
        int v15 = v13 + (v14 << 7);
        unint64_t v13 = (v15 - 128);
        if (v14 < 0)
        {
          uint64_t v19 = (char *)sub_188C138((uint64_t)v6, (v15 - 128));
          if (!v19) {
            return 0;
          }
          unint64_t v13 = v16;
          goto LABEL_20;
        }
        uint64_t v12 = v6 + 2;
      }
      uint64_t v19 = v12;
LABEL_20:
      if (v13 > 2)
      {
        if (*v5) {
          int v17 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          int v17 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        sub_188C020(1, v13, v17);
      }
      else
      {
        *(_DWORD *)(a1 + 16) |= 1u;
        *(_DWORD *)(a1 + 24) = v13;
      }
      goto LABEL_22;
    }
    if (!v7 || (v7 & 7) == 4) {
      break;
    }
    if (*v5)
    {
      uint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v6 = v19;
    }
    uint64_t v19 = (char *)sub_1885AC0(v7, v11, v6, a3);
    if (!v19) {
      return 0;
    }
LABEL_22:
    if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
      return v19;
    }
  }
  if (v6)
  {
    a3[10].i32[0] = v7 - 1;
    return v19;
  }
  return 0;
}

unsigned char *sub_1427240(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v6 = *(int *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v6;
    if (v6 > 0x7F)
    {
      v4[1] = v6 | 0x80;
      unint64_t v7 = v6 >> 7;
      v4[2] = v6 >> 7;
      v4 += 3;
      if (v6 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v8 = v7 >> 14;
          v7 >>= 7;
          *v4++ = v7;
        }
        while (v8);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    uint64_t v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    uint64_t v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    v4 += v14;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v12, v13, v4);
}

uint64_t sub_1427368(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    int v2 = *(_DWORD *)(a1 + 24);
    if (v2 < 0) {
      uint64_t v1 = 11;
    }
    else {
      uint64_t v1 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  else
  {
    uint64_t v1 = 0;
  }
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v5 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    v1 += v6;
  }
  *(_DWORD *)(a1 + 20) = v1;
  return v1;
}

uint64_t sub_14273DC()
{
  return 1;
}

void *sub_14273E4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gemini.Taxonomy.SFSymbolMapping.Color");
}

void *sub_14273F4(void *result, uint64_t a2, int a3)
{
  uint64_t v3 = a2 | 2;
  if (!a3) {
    uint64_t v3 = a2;
  }
  *uint64_t result = off_24B3808;
  result[1] = v3;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = &qword_2550250;
  result[5] = &qword_2550250;
  result[6] = 0;
  return result;
}

uint64_t sub_1427434(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (void *)(a1 + 8);
  *(void *)a1 = off_24B3808;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 24) = &qword_2550250;
  int v6 = *(_DWORD *)(a2 + 16);
  if (v6)
  {
    unint64_t v7 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      unint64_t v7 = (uint64_t *)*v7;
    }
    sub_1881DF4((std::string **)(a1 + 24), (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL), v7);
    int v6 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 32) = &qword_2550250;
  if ((v6 & 2) != 0)
  {
    unint64_t v8 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      unint64_t v8 = (uint64_t *)*v8;
    }
    sub_1881DF4((std::string **)(a1 + 32), (long long *)(*(void *)(a2 + 32) & 0xFFFFFFFFFFFFFFFELL), v8);
    int v6 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 40) = &qword_2550250;
  if ((v6 & 4) != 0)
  {
    uint64_t v9 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v9 = (uint64_t *)*v9;
    }
    sub_1881DF4((std::string **)(a1 + 40), (long long *)(*(void *)(a2 + 40) & 0xFFFFFFFFFFFFFFFELL), v9);
    int v6 = *(_DWORD *)(a2 + 16);
  }
  if ((v6 & 8) != 0) {
    operator new();
  }
  *(void *)(a1 + 48) = 0;
  return a1;
}

void sub_1427578()
{
}

uint64_t sub_14275CC(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_14;
    }
  }
  else if (v4)
  {
    goto LABEL_14;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(uint64_t **)(a1 + 40) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 40));
  }
  if ((uint64_t (***)())a1 != &off_2538228)
  {
    int v6 = *(void **)(a1 + 48);
    if (v6)
    {
      sub_1426FD4(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_14:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_14276C8(uint64_t a1)
{
  sub_14275CC(a1);

  operator delete();
}

uint64_t sub_1427700(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 0xF) == 0) {
    goto LABEL_21;
  }
  if (v2)
  {
    unint64_t v3 = *(void *)(result + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)unint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
      if ((v2 & 2) != 0) {
        goto LABEL_11;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
      if ((v2 & 2) != 0) {
        goto LABEL_11;
      }
    }
LABEL_4:
    if ((v2 & 4) == 0) {
      goto LABEL_5;
    }
LABEL_15:
    unint64_t v5 = *(void *)(result + 40) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v5 + 23) < 0)
    {
      **(unsigned char **)unint64_t v5 = 0;
      *(void *)(v5 + 8) = 0;
      if ((v2 & 8) == 0) {
        goto LABEL_21;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v5 = 0;
      *(unsigned char *)(v5 + 23) = 0;
      if ((v2 & 8) == 0) {
        goto LABEL_21;
      }
    }
    goto LABEL_19;
  }
  if ((v2 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_11:
  unint64_t v4 = *(void *)(result + 32) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v4 + 23) < 0)
  {
    **(unsigned char **)unint64_t v4 = 0;
    *(void *)(v4 + 8) = 0;
    if ((v2 & 4) != 0) {
      goto LABEL_15;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v4 = 0;
    *(unsigned char *)(v4 + 23) = 0;
    if ((v2 & 4) != 0) {
      goto LABEL_15;
    }
  }
LABEL_5:
  if ((v2 & 8) == 0) {
    goto LABEL_21;
  }
LABEL_19:
  uint64_t v6 = *(void *)(result + 48);
  char v7 = *(unsigned char *)(v6 + 8);
  uint64_t result = v6 + 8;
  *(_DWORD *)(result + 16) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v7) {
    uint64_t result = sub_188B4AC((uint64_t *)result);
  }
LABEL_21:
  char v9 = *(unsigned char *)(v1 + 8);
  uint64_t v8 = v1 + 8;
  *(_DWORD *)(v8 + 8) = 0;
  if (v9)
  {
    return sub_188B4AC((uint64_t *)v8);
  }
  return result;
}

uint64_t sub_1427814(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v22 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v22, a3[11].i32[1])) {
    return *(void *)v22;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    char v7 = (unsigned __int8 *)(*(void *)v22 + 1);
    unsigned int v8 = **(unsigned char **)v22;
    if ((char)**(unsigned char **)v22 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if ((char)*v7 < 0)
      {
        char v7 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v22, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        char v7 = (unsigned __int8 *)(*(void *)v22 + 2);
      }
    }
    *(void *)uint64_t v22 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 10) {
          goto LABEL_28;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v11 = *(void *)(a1 + 8);
        uint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
        if (v11) {
          uint64_t v12 = (uint64_t *)*v12;
        }
        uint64_t v13 = (void *)(a1 + 24);
        goto LABEL_21;
      case 2u:
        if (v8 != 18) {
          goto LABEL_28;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v14 = *(void *)(a1 + 8);
        uint64_t v12 = (uint64_t *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
        if (v14) {
          uint64_t v12 = (uint64_t *)*v12;
        }
        uint64_t v13 = (void *)(a1 + 32);
        goto LABEL_21;
      case 3u:
        if (v8 != 26) {
          goto LABEL_28;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v15 = *(void *)(a1 + 8);
        uint64_t v12 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          uint64_t v12 = (uint64_t *)*v12;
        }
        uint64_t v13 = (void *)(a1 + 40);
LABEL_21:
        unint64_t v16 = (std::string *)sub_1880F84(v13, v12);
        int v17 = (void *)sub_188C244(v16, *(char **)v22, (uint64_t)a3);
        goto LABEL_35;
      case 4u:
        if (v8 != 34) {
          goto LABEL_28;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v18 = *(void *)(a1 + 48);
        if (!v18)
        {
          uint64_t v19 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v19 = (void *)*v19;
          }
          uint64_t v18 = sub_144B4F8((uint64_t)v19);
          *(void *)(a1 + 48) = v18;
          char v7 = *(unsigned __int8 **)v22;
        }
        int v17 = sub_1427A7C(a3, v18, v7);
        goto LABEL_35;
      default:
LABEL_28:
        if (v8) {
          BOOL v20 = (v8 & 7) == 4;
        }
        else {
          BOOL v20 = 1;
        }
        if (!v20)
        {
          if (*v6)
          {
            uint64_t v21 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v21 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            char v7 = *(unsigned __int8 **)v22;
          }
          int v17 = sub_1885AC0(v8, v21, (char *)v7, a3);
LABEL_35:
          *(void *)uint64_t v22 = v17;
          if (!v17) {
            return 0;
          }
          if (sub_11947B8((uint64_t)a3, (char **)v22, a3[11].i32[1])) {
            return *(void *)v22;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return *(void *)v22;
    }
  }
}

char *sub_1427A7C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1427098(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_1427B0C(uint64_t a1, unsigned char *__dst, void *a3)
{
  unint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    unint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_8;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  unint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_15;
    }
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 8) == 0) {
    goto LABEL_15;
  }
LABEL_9:
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v7 = *(void *)(a1 + 48);
  unsigned char *v4 = 34;
  unsigned int v8 = *(_DWORD *)(v7 + 20);
  v4[1] = v8;
  if (v8 > 0x7F) {
    unsigned int v9 = sub_188A9CC(v8, v4 + 1);
  }
  else {
    unsigned int v9 = v4 + 2;
  }
  unint64_t v4 = sub_1427240(v7, (unint64_t)v9, a3);
LABEL_15:
  uint64_t v10 = *(void *)(a1 + 8);
  if ((v10 & 1) == 0) {
    return v4;
  }
  unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v12 + 31) < 0)
  {
    uint64_t v13 = *(void **)(v12 + 8);
    uint64_t v14 = *(void *)(v12 + 16);
  }
  else
  {
    uint64_t v13 = (void *)(v12 + 8);
    LODWORD(v14) = *(unsigned __int8 *)(v12 + 31);
  }
  if (*a3 - (void)v4 >= (int)v14)
  {
    uint64_t v15 = (int)v14;
    memcpy(v4, v13, (int)v14);
    v4 += v15;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v13, v14, v4);
}

uint64_t sub_1427C8C(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 2) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 1) == 0) {
      goto LABEL_10;
    }
    goto LABEL_7;
  }
  unint64_t v4 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
  uint64_t v6 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    uint64_t v6 = v5;
  }
  uint64_t v3 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if (v2)
  {
LABEL_7:
    unint64_t v7 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v8 = *(unsigned __int8 *)(v7 + 23);
    uint64_t v9 = *(void *)(v7 + 8);
    if ((v8 & 0x80u) == 0) {
      uint64_t v9 = v8;
    }
    v3 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  if ((v2 & 0xC) != 0)
  {
    if ((v2 & 4) != 0)
    {
      unint64_t v10 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v11 = *(unsigned __int8 *)(v10 + 23);
      uint64_t v12 = *(void *)(v10 + 8);
      if ((v11 & 0x80u) == 0) {
        uint64_t v12 = v11;
      }
      v3 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v2 & 8) != 0)
    {
      uint64_t v13 = sub_1427368(*(void *)(a1 + 48));
      v3 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  uint64_t v14 = *(void *)(a1 + 8);
  if (v14)
  {
    unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v16 + 31) < 0) {
      uint64_t v17 = *(void *)(v16 + 16);
    }
    else {
      uint64_t v17 = *(unsigned __int8 *)(v16 + 31);
    }
    v3 += v17;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_1427DF0(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0xF) == 0) {
    goto LABEL_24;
  }
  if (v4)
  {
    uint64_t v5 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
    uint64_t v6 = (std::string **)&result[1];
    std::string::size_type size = v3->__r_.__value_.__l.__size_;
    uint64_t v8 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
    if (size) {
      uint64_t v8 = (uint64_t *)*v8;
    }
    uint64_t result = sub_1881DF4(v6, v5, v8);
    if ((v4 & 2) == 0)
    {
LABEL_4:
      if ((v4 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_13;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_4;
  }
  uint64_t v9 = (long long *)(*(void *)(a2 + 32) & 0xFFFFFFFFFFFFFFFELL);
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
  std::string::size_type v10 = v3->__r_.__value_.__l.__size_;
  uint64_t v11 = (uint64_t *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
  if (v10) {
    uint64_t v11 = (uint64_t *)*v11;
  }
  uint64_t result = sub_1881DF4((std::string **)&v3[1].__r_.__value_.__l.__size_, v9, v11);
  if ((v4 & 4) == 0)
  {
LABEL_5:
    if ((v4 & 8) == 0) {
      goto LABEL_24;
    }
    goto LABEL_16;
  }
LABEL_13:
  uint64_t v12 = (long long *)(*(void *)(a2 + 40) & 0xFFFFFFFFFFFFFFFELL);
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
  std::string::size_type v13 = v3->__r_.__value_.__l.__size_;
  uint64_t v14 = (uint64_t *)(v13 & 0xFFFFFFFFFFFFFFFCLL);
  if (v13) {
    uint64_t v14 = (uint64_t *)*v14;
  }
  uint64_t result = sub_1881DF4((std::string **)&v3[1].__r_.__value_.__r.__words[2], v12, v14);
  if ((v4 & 8) != 0)
  {
LABEL_16:
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 8u;
    data = (std::string *)v3[2].__r_.__value_.__l.__data_;
    if (!data)
    {
      std::string::size_type v16 = v3->__r_.__value_.__l.__size_;
      uint64_t v17 = (void *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
      if (v16) {
        uint64_t v17 = (void *)*v17;
      }
      data = (std::string *)sub_144B4F8((uint64_t)v17);
      v3[2].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
    }
    if (*(void *)(a2 + 48)) {
      uint64_t v18 = *(uint64_t (****)())(a2 + 48);
    }
    else {
      uint64_t v18 = &off_2538208;
    }
    uint64_t result = sub_11A7934(data, (uint64_t)v18);
  }
LABEL_24:
  uint64_t v19 = *(void *)(a2 + 8);
  if (v19)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v19 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

std::string *sub_1427F54(std::string *result, uint64_t a2)
{
  if ((std::string *)a2 != result)
  {
    int v4 = result;
    sub_1427700((uint64_t)result);
    return sub_1427DF0(v4, a2);
  }
  return result;
}

uint64_t sub_1427FA0(uint64_t a1)
{
  return (*(unsigned __int8 *)(a1 + 16) >> 1) & 1;
}

uint64_t sub_1427FAC(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *(void *)(result + 8) = *(void *)(a2 + 8);
  *(void *)(a2 + 8) = v2;
  LODWORD(v2) = *(_DWORD *)(result + 16);
  *(_DWORD *)(result + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a2 + 16) = v2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a2 + 24) = *(void *)(result + 24);
  *(void *)(result + 24) = v3;
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a2 + 32) = *(void *)(result + 32);
  *(void *)(result + 32) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = *(void *)(result + 40);
  *(void *)(result + 40) = v5;
  uint64_t v6 = *(void *)(result + 48);
  *(void *)(result + 48) = *(void *)(a2 + 48);
  *(void *)(a2 + 48) = v6;
  return result;
}

void *sub_1428010@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gemini.Taxonomy.SFSymbolMapping");
}

uint64_t sub_1428020(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1428268(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_14280B0(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_9;
    }
  }
  else if (v4)
  {
    goto LABEL_9;
  }
  uint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 56) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 56));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_9:
  sub_1889DE8((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1428170(uint64_t a1)
{
  sub_14280B0(a1);

  operator delete();
}

uint64_t sub_14281A8(uint64_t a1)
{
  uint64_t result = sub_188CC00(a1 + 24);
  int v3 = *(_DWORD *)(a1 + 16);
  if ((v3 & 3) != 0)
  {
    if (v3)
    {
      unint64_t v4 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v4 + 23) < 0)
      {
        **(unsigned char **)unint64_t v4 = 0;
        *(void *)(v4 + 8) = 0;
        if ((v3 & 2) == 0) {
          goto LABEL_11;
        }
        goto LABEL_6;
      }
      *(unsigned char *)unint64_t v4 = 0;
      *(unsigned char *)(v4 + 23) = 0;
    }
    if ((v3 & 2) == 0) {
      goto LABEL_11;
    }
LABEL_6:
    unint64_t v5 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v5 + 23) < 0)
    {
      **(unsigned char **)unint64_t v5 = 0;
      *(void *)(v5 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v5 = 0;
      *(unsigned char *)(v5 + 23) = 0;
    }
  }
LABEL_11:
  char v7 = *(unsigned char *)(a1 + 8);
  uint64_t v6 = a1 + 8;
  *(void *)(v6 + 56) = 0;
  *(_DWORD *)(v6 + 8) = 0;
  if (v7)
  {
    return sub_188B4AC((uint64_t *)v6);
  }
  return result;
}

uint64_t sub_1428268(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v33 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v33, a3[11].i32[1])) {
    goto LABEL_2;
  }
  char v7 = (uint64_t **)(a1 + 24);
  uint64_t v8 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v9 = (char *)(*(void *)v33 + 1);
    unsigned int v10 = **(unsigned char **)v33;
    if ((char)**(unsigned char **)v33 < 0)
    {
      unsigned int v11 = v10 + (*v9 << 7);
      unsigned int v10 = v11 - 128;
      if (*v9 < 0)
      {
        uint64_t v9 = (char *)sub_188C180(*(uint64_t *)v33, v11 - 128);
        unsigned int v10 = v12;
      }
      else
      {
        uint64_t v9 = (char *)(*(void *)v33 + 2);
      }
    }
    *(void *)uint64_t v33 = v9;
    switch(v10 >> 3)
    {
      case 1u:
        if (v10 != 10) {
          goto LABEL_35;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v13 = *(void *)(a1 + 8);
        uint64_t v14 = (uint64_t *)(v13 & 0xFFFFFFFFFFFFFFFCLL);
        if (v13) {
          uint64_t v14 = (uint64_t *)*v14;
        }
        uint64_t v15 = (void *)(a1 + 48);
        goto LABEL_17;
      case 2u:
        if (v10 != 18) {
          goto LABEL_35;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v16 = *(void *)(a1 + 8);
        uint64_t v14 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
        if (v16) {
          uint64_t v14 = (uint64_t *)*v14;
        }
        uint64_t v15 = (void *)(a1 + 56);
LABEL_17:
        uint64_t v17 = (std::string *)sub_1880F84(v15, v14);
        uint64_t v18 = (void *)sub_188C244(v17, *(char **)v33, (uint64_t)a3);
        goto LABEL_42;
      case 3u:
        if (v10 != 24) {
          goto LABEL_35;
        }
        v5 |= 4u;
        uint64_t v19 = v9 + 1;
        uint64_t v20 = *v9;
        if ((*v9 & 0x80000000) == 0) {
          goto LABEL_22;
        }
        int v21 = *v19;
        uint64_t v20 = v20 + (v21 << 7) - 128;
        if (v21 < 0)
        {
          uint64_t v31 = sub_188C138((uint64_t)v9, v20);
          *(void *)uint64_t v33 = v31;
          *(void *)(a1 + 64) = v32;
          if (!v31) {
            goto LABEL_50;
          }
        }
        else
        {
          uint64_t v19 = v9 + 2;
LABEL_22:
          *(void *)uint64_t v33 = v19;
          *(void *)(a1 + 64) = v20;
        }
        goto LABEL_43;
      case 4u:
        if (v10 != 34) {
          goto LABEL_35;
        }
        uint64_t v22 = v9 - 1;
        while (1)
        {
          std::string::size_type v23 = (char *)(v22 + 1);
          *(void *)uint64_t v33 = v22 + 1;
          uint64_t v24 = *(_DWORD **)(a1 + 40);
          if (v24 && (uint64_t v25 = *(int *)(a1 + 32), (int)v25 < *v24))
          {
            *(_DWORD *)(a1 + 32) = v25 + 1;
            std::string::size_type v26 = *(std::string **)&v24[2 * v25 + 2];
          }
          else
          {
            if (!*v7) {
              operator new();
            }
            *unint64_t v28 = v27;
            v28[1] = sub_3A6EDC;
            *uint64_t v27 = 0;
            v27[1] = 0;
            v27[2] = 0;
            std::string::size_type v26 = (std::string *)sub_188CDC8(a1 + 24, (uint64_t)v27);
            std::string::size_type v23 = *(char **)v33;
          }
          uint64_t v22 = sub_188C244(v26, v23, (uint64_t)a3);
          *(void *)uint64_t v33 = v22;
          if (!v22) {
            goto LABEL_50;
          }
          if (*(void *)a3 <= (unint64_t)v22 || *v22 != 34) {
            goto LABEL_43;
          }
        }
      default:
LABEL_35:
        if (v10) {
          BOOL v29 = (v10 & 7) == 4;
        }
        else {
          BOOL v29 = 1;
        }
        if (!v29)
        {
          if (*v8)
          {
            uint64_t v30 = (std::string *)((*v8 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v30 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v9 = *(char **)v33;
          }
          uint64_t v18 = sub_1885AC0(v10, v30, v9, a3);
LABEL_42:
          *(void *)uint64_t v33 = v18;
          if (!v18) {
            goto LABEL_50;
          }
LABEL_43:
          if (sub_11947B8((uint64_t)a3, (char **)v33, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v9) {
          a3[10].i32[0] = v10 - 1;
        }
        else {
LABEL_50:
        }
          *(void *)uint64_t v33 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v33;
    }
  }
}

char *sub_1428598(uint64_t a1, char *__dst, void *a3)
{
  unint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    unint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_13;
      }
      goto LABEL_7;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  unint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) == 0) {
    goto LABEL_13;
  }
LABEL_7:
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  unint64_t v7 = *(void *)(a1 + 64);
  char *v4 = 24;
  v4[1] = v7;
  if (v7 > 0x7F)
  {
    v4[1] = v7 | 0x80;
    unint64_t v8 = v7 >> 7;
    v4[2] = v7 >> 7;
    v4 += 3;
    if (v7 >= 0x4000)
    {
      do
      {
        *(v4 - 1) |= 0x80u;
        unint64_t v9 = v8 >> 14;
        v8 >>= 7;
        *v4++ = v8;
      }
      while (v9);
    }
  }
  else
  {
    v4 += 2;
  }
LABEL_13:
  uint64_t v10 = *(unsigned int *)(a1 + 32);
  if ((int)v10 >= 1)
  {
    uint64_t v11 = 0;
    uint64_t v12 = 8 * v10;
    do
    {
      uint64_t v13 = *(void **)(*(void *)(a1 + 40) + v11 + 8);
      if (*((char *)v13 + 23) < 0)
      {
        int64_t v14 = v13[1];
        if (v14 > 127) {
          goto LABEL_24;
        }
      }
      else
      {
        int64_t v14 = *((unsigned __int8 *)v13 + 23);
      }
      if (*a3 - (void)v4 + 14 >= v14)
      {
        char *v4 = 34;
        v4[1] = v14;
        if (*((char *)v13 + 23) < 0) {
          uint64_t v13 = (void *)*v13;
        }
        uint64_t v15 = v4 + 2;
        memcpy(v15, v13, v14);
        unint64_t v4 = &v15[v14];
        goto LABEL_22;
      }
LABEL_24:
      unint64_t v4 = (char *)sub_188A868(a3, 4, (uint64_t)v13, v4);
LABEL_22:
      v11 += 8;
    }
    while (v12 != v11);
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return v4;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    uint64_t v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    uint64_t v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if (*a3 - (void)v4 >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(v4, v19, (int)v20);
    v4 += v21;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v19, v20, v4);
}

uint64_t sub_14287CC(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 32);
  if ((int)v1 < 1)
  {
    uint64_t v3 = *(unsigned int *)(a1 + 32);
  }
  else
  {
    uint64_t v2 = (uint64_t *)(*(void *)(a1 + 40) + 8);
    uint64_t v3 = *(unsigned int *)(a1 + 32);
    do
    {
      uint64_t v4 = *v2++;
      uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
      uint64_t v6 = *(void *)(v4 + 8);
      if ((v5 & 0x80u) == 0) {
        uint64_t v6 = v5;
      }
      v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6);
      --v1;
    }
    while (v1);
  }
  int v7 = *(_DWORD *)(a1 + 16);
  if ((v7 & 7) != 0)
  {
    if (v7)
    {
      unint64_t v10 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v11 = *(unsigned __int8 *)(v10 + 23);
      uint64_t v12 = *(void *)(v10 + 8);
      if ((v11 & 0x80u) == 0) {
        uint64_t v12 = v11;
      }
      v3 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v7 & 2) == 0)
      {
LABEL_11:
        if ((v7 & 4) == 0) {
          goto LABEL_13;
        }
        goto LABEL_12;
      }
    }
    else if ((v7 & 2) == 0)
    {
      goto LABEL_11;
    }
    unint64_t v13 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v14 = *(unsigned __int8 *)(v13 + 23);
    uint64_t v15 = *(void *)(v13 + 8);
    if ((v14 & 0x80u) == 0) {
      uint64_t v15 = v14;
    }
    v3 += v15 + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v7 & 4) != 0) {
LABEL_12:
    }
      v3 += ((9 * (__clz(*(void *)(a1 + 64) | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
LABEL_13:
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v16 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v16 + 31) < 0) {
      uint64_t v17 = *(void *)(v16 + 16);
    }
    else {
      uint64_t v17 = *(unsigned __int8 *)(v16 + 31);
    }
    v3 += v17;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_1428928(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (const std::string **)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = (std::string *)sub_188FB98((uint64_t)&v3[1], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2]- LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    uint64_t v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 7) != 0)
  {
    if (v9)
    {
      uint64_t v11 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      unint64_t v13 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        unint64_t v13 = (uint64_t *)*v13;
      }
      uint64_t result = sub_1881DF4((std::string **)&v3[2], v11, v13);
      if ((v9 & 2) == 0)
      {
LABEL_7:
        if ((v9 & 4) == 0)
        {
LABEL_9:
          LODWORD(v3->__r_.__value_.__r.__words[2]) |= v9;
          goto LABEL_10;
        }
LABEL_8:
        v3[2].__r_.__value_.__r.__words[2] = *(void *)(a2 + 64);
        goto LABEL_9;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_7;
    }
    uint64_t v14 = (long long *)(*(void *)(a2 + 56) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    std::string::size_type v15 = v3->__r_.__value_.__l.__size_;
    unint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
    if (v15) {
      unint64_t v16 = (uint64_t *)*v16;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[2].__r_.__value_.__l.__size_, v14, v16);
    if ((v9 & 4) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
LABEL_10:
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1428A90()
{
  return 1;
}

void *sub_1428A98@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gemini.Taxonomy.CategoryMetadata");
}

uint64_t sub_1428AA8(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_25382A8)
  {
    uint64_t v6 = *(void *)(a1 + 24);
    if (v6)
    {
      sub_14280B0(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1428B60(uint64_t a1)
{
  sub_1428AA8(a1);

  operator delete();
}

uint64_t sub_1428B98(uint64_t result)
{
  uint64_t v1 = result;
  if (*(unsigned char *)(result + 16)) {
    uint64_t result = sub_14281A8(*(void *)(result + 24));
  }
  char v3 = *(unsigned char *)(v1 + 8);
  uint64_t v2 = v1 + 8;
  *(_DWORD *)(v2 + 24) = 0;
  *(_DWORD *)(v2 + 8) = 0;
  if (v3)
  {
    return sub_188B4AC((uint64_t *)v2);
  }
  return result;
}

char *sub_1428BF8(uint64_t a1, char *a2, int32x2_t *a3)
{
  std::string::size_type v23 = a2;
  if (sub_11947B8((uint64_t)a3, &v23, a3[11].i32[1])) {
    return v23;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    int v7 = v23 + 1;
    unsigned int v8 = *v23;
    if (*v23 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        int v7 = (char *)sub_188C180((uint64_t)v23, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        int v7 = v23 + 2;
      }
    }
    std::string::size_type v23 = v7;
    if (v8 >> 3 != 2) {
      break;
    }
    if (v8 != 18) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    std::string::size_type v15 = *(void **)(a1 + 24);
    if (!v15)
    {
      unint64_t v16 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        unint64_t v16 = (void *)*v16;
      }
      std::string::size_type v15 = sub_144B5FC((uint64_t)v16);
      *(void *)(a1 + 24) = v15;
      int v7 = v23;
    }
    uint64_t v14 = (char *)sub_1428020(a3, (uint64_t)v15, (unsigned __int8 *)v7);
LABEL_26:
    std::string::size_type v23 = v14;
    if (!v14) {
      return 0;
    }
LABEL_34:
    if (sub_11947B8((uint64_t)a3, &v23, a3[11].i32[1])) {
      return v23;
    }
  }
  if (v8 >> 3 == 1 && v8 == 8)
  {
    uint64_t v17 = v7 + 1;
    unint64_t v18 = *v7;
    if ((*v7 & 0x80000000) == 0) {
      goto LABEL_31;
    }
    int v19 = *v17;
    int v20 = v18 + (v19 << 7);
    unint64_t v18 = (v20 - 128);
    if (v19 < 0)
    {
      std::string::size_type v23 = (char *)sub_188C138((uint64_t)v7, (v20 - 128));
      if (!v23) {
        return 0;
      }
      unint64_t v18 = v21;
    }
    else
    {
      uint64_t v17 = v7 + 2;
LABEL_31:
      std::string::size_type v23 = v17;
    }
    if (v18 > 2)
    {
      if (*v6) {
        uint64_t v22 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        uint64_t v22 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      sub_188C020(1, v18, v22);
    }
    else
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      *(_DWORD *)(a1 + 32) = v18;
    }
    goto LABEL_34;
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      unint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v7 = v23;
    }
    uint64_t v14 = (char *)sub_1885AC0(v8, v13, v7, a3);
    goto LABEL_26;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v23;
  }
  return 0;
}

char *sub_1428E08(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  int v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*a3 <= __dst) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 32);
    char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 24);
    char *v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 20);
    v4[1] = v11;
    if (v11 > 0x7F) {
      BOOL v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      BOOL v12 = v4 + 2;
    }
    int v4 = sub_1428598(v10, v12, a3);
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    unint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    unint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_1428F94(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 3) == 0)
  {
    uint64_t result = 0;
    goto LABEL_11;
  }
  if (v2)
  {
    uint64_t v4 = sub_14287CC(*(void *)(a1 + 24));
    uint64_t result = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_11;
    }
  }
  else
  {
    uint64_t result = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_11;
    }
  }
  int v5 = *(_DWORD *)(a1 + 32);
  if (v5 < 0) {
    uint64_t v6 = 11;
  }
  else {
    uint64_t v6 = ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  result += v6;
LABEL_11:
  uint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    unint64_t v8 = v7 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v8 + 31) < 0) {
      uint64_t v9 = *(void *)(v8 + 16);
    }
    else {
      uint64_t v9 = *(unsigned __int8 *)(v8 + 31);
    }
    result += v9;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

std::string *sub_1429064(std::string *result, uint64_t a2)
{
  char v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 3) != 0)
  {
    if (v4)
    {
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      data = (std::string *)result[1].__r_.__value_.__l.__data_;
      if (!data)
      {
        std::string::size_type size = v3->__r_.__value_.__l.__size_;
        uint64_t v7 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
        if (size) {
          uint64_t v7 = (void *)*v7;
        }
        data = (std::string *)sub_144B5FC((uint64_t)v7);
        v3[1].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      }
      if (*(void *)(a2 + 24)) {
        unint64_t v8 = *(uint64_t (****)(uint64_t))(a2 + 24);
      }
      else {
        unint64_t v8 = &off_2538260;
      }
      uint64_t result = sub_1428928(data, (uint64_t)v8);
    }
    if ((v4 & 2) != 0) {
      LODWORD(v3[1].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 32);
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1429134()
{
  return 1;
}

void *sub_142913C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gemini.Taxonomy.CategoryRelationship");
}

uint64_t sub_142914C(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = &off_24B3988;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

void sub_14291C8(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_14291F8(void *a1)
{
  char v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_142926C(void *a1)
{
  sub_14291F8(a1);

  operator delete();
}

uint64_t sub_14292A4(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(unsigned char *)(result + 16) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_14292BC(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v19 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
    goto LABEL_27;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v19 + 1;
    unsigned int v8 = *v19;
    if (*v19 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v19, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v19 + 2;
      }
    }
    int v19 = v7;
    if (v8 != 8) {
      break;
    }
    uint64_t v13 = v7 + 1;
    uint64_t v14 = *v7;
    if ((*v7 & 0x80000000) == 0) {
      goto LABEL_19;
    }
    int v15 = *v13;
    uint64_t v14 = v14 + (v15 << 7) - 128;
    if ((v15 & 0x80000000) == 0)
    {
      uint64_t v13 = v7 + 2;
LABEL_19:
      int v19 = v13;
      *(unsigned char *)(a1 + 24) = v14 != 0;
      int v5 = 1;
      goto LABEL_20;
    }
    unint64_t v16 = (char *)sub_188C138((uint64_t)v7, v14);
    int v19 = v16;
    *(unsigned char *)(a1 + 24) = v17 != 0;
    int v5 = 1;
    if (!v16) {
      goto LABEL_28;
    }
LABEL_20:
    if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
      goto LABEL_27;
    }
  }
  if (v8) {
    BOOL v11 = (v8 & 7) == 4;
  }
  else {
    BOOL v11 = 1;
  }
  if (!v11)
  {
    if (*v6)
    {
      BOOL v12 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      BOOL v12 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = v19;
    }
    int v19 = (char *)sub_1885AC0(v8, v12, v7, a3);
    if (!v19) {
      goto LABEL_28;
    }
    goto LABEL_20;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    goto LABEL_27;
  }
LABEL_28:
  int v19 = 0;
LABEL_27:
  *(_DWORD *)(a1 + 16) |= v5;
  return v19;
}

unsigned char *sub_142944C(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    char v6 = *(unsigned char *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v6;
    v4 += 2;
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v9 + 31) < 0)
  {
    unsigned int v10 = *(void **)(v9 + 8);
    uint64_t v11 = *(void *)(v9 + 16);
  }
  else
  {
    unsigned int v10 = (void *)(v9 + 8);
    LODWORD(v11) = *(unsigned __int8 *)(v9 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v11)
  {
    uint64_t v12 = (int)v11;
    memcpy(v4, v10, (int)v11);
    v4 += v12;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v10, v11, v4);
}

uint64_t sub_1429530(uint64_t a1)
{
  uint64_t v1 = 2 * (*(_DWORD *)(a1 + 16) & 1);
  uint64_t v2 = *(void *)(a1 + 8);
  if (v2)
  {
    unint64_t v4 = v2 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v5 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v5 = *(unsigned __int8 *)(v4 + 31);
    }
    v1 += v5;
  }
  *(_DWORD *)(a1 + 20) = v1;
  return v1;
}

uint64_t sub_1429570()
{
  return 1;
}

void *sub_1429578@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gemini.Taxonomy.SuppressExportFields");
}

uint64_t sub_1429588(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  unint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = a1 + 16;
  *(void *)a1 = &off_24B3A08;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  int v6 = *(_DWORD *)(a2 + 24);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 32);
    unsigned int v8 = (std::string **)sub_188CCE4(a1 + 16, *(_DWORD *)(a2 + 24));
    sub_188FB98(v5, v8, (const std::string **)(v7 + 8), v6, **(_DWORD **)(a1 + 32) - *(_DWORD *)(a1 + 24));
    int v9 = *(_DWORD *)(a1 + 24) + v6;
    *(_DWORD *)(a1 + 24) = v9;
    unsigned int v10 = *(int **)(a1 + 32);
    if (*v10 < v9) {
      *unsigned int v10 = v9;
    }
  }
  *(_DWORD *)(a1 + 40) = 0;
  uint64_t v11 = *(void *)(a2 + 8);
  if (v11) {
    sub_188B4F8(v4, (v11 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return a1;
}

void sub_1429668(_Unwind_Exception *a1)
{
  sub_1889DE8(v3);
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_14296A8(void *a1)
{
  char v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1889DE8(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1429724(void *a1)
{
  sub_14296A8(a1);

  operator delete();
}

uint64_t sub_142975C(uint64_t a1)
{
  uint64_t result = sub_188CC00(a1 + 16);
  char v4 = *(unsigned char *)(a1 + 8);
  char v3 = (uint64_t *)(a1 + 8);
  if (v4)
  {
    return sub_188B4AC(v3);
  }
  return result;
}

uint64_t sub_14297AC(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unint64_t v21 = a2;
  if ((sub_11947B8((uint64_t)a3, (char **)v21, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v5 = (void *)(a1 + 8);
    int v6 = (uint64_t **)(a1 + 16);
    while (1)
    {
      uint64_t v7 = (char *)(*(void *)v21 + 1);
      unsigned int v8 = **(unsigned char **)v21;
      if ((char)**(unsigned char **)v21 < 0)
      {
        unsigned int v9 = v8 + (*v7 << 7);
        unsigned int v8 = v9 - 128;
        if (*v7 < 0)
        {
          uint64_t v7 = (char *)sub_188C180(*(uint64_t *)v21, v9 - 128);
          unsigned int v8 = v10;
        }
        else
        {
          uint64_t v7 = (char *)(*(void *)v21 + 2);
        }
      }
      *(void *)unint64_t v21 = v7;
      if (v8 == 10)
      {
        uint64_t v13 = v7 - 1;
        while (1)
        {
          uint64_t v14 = (char *)(v13 + 1);
          *(void *)unint64_t v21 = v13 + 1;
          int v15 = *(_DWORD **)(a1 + 32);
          if (v15 && (uint64_t v16 = *(int *)(a1 + 24), (int)v16 < *v15))
          {
            *(_DWORD *)(a1 + 24) = v16 + 1;
            uint64_t v17 = *(std::string **)&v15[2 * v16 + 2];
          }
          else
          {
            if (!*v6) {
              operator new();
            }
            *int v19 = v18;
            v19[1] = sub_3A6EDC;
            void *v18 = 0;
            v18[1] = 0;
            v18[2] = 0;
            uint64_t v17 = (std::string *)sub_188CDC8(a1 + 16, (uint64_t)v18);
            uint64_t v14 = *(char **)v21;
          }
          uint64_t v13 = sub_188C244(v17, v14, (uint64_t)a3);
          *(void *)unint64_t v21 = v13;
          if (!v13) {
            goto LABEL_31;
          }
          if (*(void *)a3 <= (unint64_t)v13 || *v13 != 10) {
            goto LABEL_26;
          }
        }
      }
      if (!v8 || (v8 & 7) == 4) {
        break;
      }
      if (*v5)
      {
        uint64_t v12 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        uint64_t v12 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        uint64_t v7 = *(char **)v21;
      }
      *(void *)unint64_t v21 = sub_1885AC0(v8, v12, v7, a3);
      if (!*(void *)v21) {
        goto LABEL_31;
      }
LABEL_26:
      if (sub_11947B8((uint64_t)a3, (char **)v21, a3[11].i32[1])) {
        return *(void *)v21;
      }
    }
    if (v7)
    {
      a3[10].i32[0] = v8 - 1;
      return *(void *)v21;
    }
LABEL_31:
    *(void *)unint64_t v21 = 0;
  }
  return *(void *)v21;
}

char *sub_1429998(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v6 = *(unsigned int *)(a1 + 24);
  if ((int)v6 >= 1)
  {
    uint64_t v7 = 0;
    uint64_t v8 = 8 * v6;
    do
    {
      unsigned int v9 = *(void **)(*(void *)(a1 + 32) + v7 + 8);
      if (*((char *)v9 + 23) < 0)
      {
        int64_t v10 = v9[1];
        if (v10 > 127) {
          goto LABEL_12;
        }
      }
      else
      {
        int64_t v10 = *((unsigned __int8 *)v9 + 23);
      }
      if (*(void *)a3 - (void)__dst + 14 >= v10)
      {
        *__dst = 10;
        __dst[1] = v10;
        if (*((char *)v9 + 23) < 0) {
          unsigned int v9 = (void *)*v9;
        }
        uint64_t v11 = __dst + 2;
        memcpy(v11, v9, v10);
        __dst = &v11[v10];
        goto LABEL_10;
      }
LABEL_12:
      __dst = (char *)sub_188A868(a3, 1, (uint64_t)v9, __dst);
LABEL_10:
      v7 += 8;
    }
    while (v8 != v7);
  }
  uint64_t v12 = *(void *)(a1 + 8);
  if ((v12 & 1) == 0) {
    return __dst;
  }
  unint64_t v14 = v12 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v14 + 31) < 0)
  {
    int v15 = *(void **)(v14 + 8);
    uint64_t v16 = *(void *)(v14 + 16);
  }
  else
  {
    int v15 = (void *)(v14 + 8);
    LODWORD(v16) = *(unsigned __int8 *)(v14 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v16)
  {
    uint64_t v17 = (int)v16;
    memcpy(__dst, v15, (int)v16);
    __dst += v17;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v15, v16, __dst);
}

uint64_t sub_1429B00(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 24);
  if ((int)v1 < 1)
  {
    uint64_t v3 = *(unsigned int *)(a1 + 24);
  }
  else
  {
    uint64_t v2 = (uint64_t *)(*(void *)(a1 + 32) + 8);
    uint64_t v3 = *(unsigned int *)(a1 + 24);
    do
    {
      uint64_t v4 = *v2++;
      uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
      uint64_t v6 = *(void *)(v4 + 8);
      if ((v5 & 0x80u) == 0) {
        uint64_t v6 = v5;
      }
      v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6);
      --v1;
    }
    while (v1);
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v9 + 31) < 0) {
      uint64_t v10 = *(void *)(v9 + 16);
    }
    else {
      uint64_t v10 = *(unsigned __int8 *)(v9 + 31);
    }
    v3 += v10;
  }
  *(_DWORD *)(a1 + 40) = v3;
  return v3;
}

uint64_t sub_1429B98()
{
  return 1;
}

void *sub_1429BA0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gemini.Taxonomy.Category.Applicability");
}

double sub_1429BB0(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3 = a2 | 2;
  if (!a3) {
    uint64_t v3 = a2;
  }
  *(void *)a1 = off_24B3A88;
  *(void *)(a1 + 8) = v3;
  double result = 0.0;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = a2;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = a2;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = a2;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 104) = a2;
  *(void *)(a1 + 112) = 0;
  *(void *)(a1 + 120) = a2;
  *(void *)(a1 + 128) = a2;
  *(void *)(a1 + 136) = 0;
  *(void *)(a1 + 144) = 0;
  *(void *)(a1 + 152) = a2;
  *(void *)(a1 + 160) = 0;
  *(void *)(a1 + 168) = 0;
  *(void *)(a1 + 176) = a2;
  *(void *)(a1 + 184) = 0;
  *(void *)(a1 + 192) = 0;
  *(void *)(a1 + 200) = a2;
  *(void *)(a1 + 208) = 0;
  *(void *)(a1 + 216) = 0;
  *(void *)(a1 + 224) = a2;
  *(void *)(a1 + 232) = 0;
  *(void *)(a1 + 240) = 0;
  *(void *)(a1 + 248) = a2;
  *(void *)(a1 + 256) = 0;
  *(void *)(a1 + 264) = 0;
  *(void *)(a1 + 272) = a2;
  *(void *)(a1 + 280) = 0;
  *(void *)(a1 + 288) = 0;
  *(void *)(a1 + 296) = &qword_2550250;
  *(void *)(a1 + 304) = &qword_2550250;
  *(_OWORD *)(a1 + 312) = 0u;
  *(_OWORD *)(a1 + 328) = 0u;
  *(_OWORD *)(a1 + 344) = 0u;
  *(_OWORD *)(a1 + 360) = 0u;
  *(_OWORD *)(a1 + 373) = 0u;
  return result;
}

uint64_t sub_1429C4C(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  v66 = (uint64_t *)(a1 + 8);
  *(void *)a1 = off_24B3A88;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v4 = (std::string *)(a1 + 24);
  *(_DWORD *)(a1 + 44) = 0;
  *(void *)(a1 + 28) = 0;
  *(void *)(a1 + 36) = 0;
  *(void *)(a1 + 20) = 0;
  int v5 = *(_DWORD *)(a2 + 32);
  if (v5)
  {
    uint64_t v6 = *(void *)(a2 + 40);
    uint64_t v7 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_1492380(v4, v7, (uint64_t *)(v6 + 8), v5, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v8 = *(_DWORD *)(a1 + 32) + v5;
    *(_DWORD *)(a1 + 32) = v8;
    unint64_t v9 = *(int **)(a1 + 40);
    if (*v9 < v8) {
      *unint64_t v9 = v8;
    }
  }
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  int v10 = *(_DWORD *)(a2 + 56);
  if (v10)
  {
    uint64_t v11 = *(void *)(a2 + 64);
    uint64_t v12 = (std::string **)sub_188CCE4(a1 + 48, v10);
    sub_14923FC((uint64_t *)(a1 + 48), v12, (uint64_t *)(v11 + 8), v10, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v13 = *(_DWORD *)(a1 + 56) + v10;
    *(_DWORD *)(a1 + 56) = v13;
    unint64_t v14 = *(int **)(a1 + 64);
    if (*v14 < v13) {
      *unint64_t v14 = v13;
    }
  }
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0;
  int v15 = *(_DWORD *)(a2 + 80);
  if (v15)
  {
    uint64_t v16 = *(void *)(a2 + 88);
    uint64_t v17 = (std::string **)sub_188CCE4(a1 + 72, v15);
    sub_1492268((std::string *)(a1 + 72), v17, (uint64_t *)(v16 + 8), v15, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v18 = *(_DWORD *)(a1 + 80) + v15;
    *(_DWORD *)(a1 + 80) = v18;
    int v19 = *(int **)(a1 + 88);
    if (*v19 < v18) {
      *int v19 = v18;
    }
  }
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 104) = 0;
  int v20 = *(_DWORD *)(a2 + 96);
  if (v20)
  {
    sub_188C80C((unsigned int *)(a1 + 96), v20);
    unint64_t v21 = *(void **)(a1 + 104);
    *(_DWORD *)(a1 + 96) += *(_DWORD *)(a2 + 96);
    memcpy(v21, *(const void **)(a2 + 104), 4 * *(int *)(a2 + 96));
  }
  *(void *)(a1 + 112) = 0;
  *(void *)(a1 + 120) = 0;
  int v22 = *(_DWORD *)(a2 + 112);
  if (v22)
  {
    sub_188C80C((unsigned int *)(a1 + 112), v22);
    std::string::size_type v23 = *(void **)(a1 + 120);
    *(_DWORD *)(a1 + 112) += *(_DWORD *)(a2 + 112);
    memcpy(v23, *(const void **)(a2 + 120), 4 * *(int *)(a2 + 112));
  }
  *(void *)(a1 + 128) = 0;
  *(void *)(a1 + 136) = 0;
  *(void *)(a1 + 144) = 0;
  int v24 = *(_DWORD *)(a2 + 136);
  if (v24)
  {
    uint64_t v25 = *(void *)(a2 + 144);
    std::string::size_type v26 = (std::string **)sub_188CCE4(a1 + 128, *(_DWORD *)(a2 + 136));
    sub_1492488((std::string *)(a1 + 128), v26, (uint64_t *)(v25 + 8), v24, **(_DWORD **)(a1 + 144) - *(_DWORD *)(a1 + 136));
    int v27 = *(_DWORD *)(a1 + 136) + v24;
    *(_DWORD *)(a1 + 136) = v27;
    unint64_t v28 = *(int **)(a1 + 144);
    if (*v28 < v27) {
      *unint64_t v28 = v27;
    }
  }
  *(void *)(a1 + 152) = 0;
  *(void *)(a1 + 160) = 0;
  *(void *)(a1 + 168) = 0;
  int v29 = *(_DWORD *)(a2 + 160);
  if (v29)
  {
    uint64_t v30 = *(void *)(a2 + 168);
    uint64_t v31 = (std::string **)sub_188CCE4(a1 + 152, v29);
    sub_188FB98(a1 + 152, v31, (const std::string **)(v30 + 8), v29, **(_DWORD **)(a1 + 168) - *(_DWORD *)(a1 + 160));
    int v32 = *(_DWORD *)(a1 + 160) + v29;
    *(_DWORD *)(a1 + 160) = v32;
    uint64_t v33 = *(int **)(a1 + 168);
    if (*v33 < v32) {
      *uint64_t v33 = v32;
    }
  }
  *(void *)(a1 + 176) = 0;
  *(void *)(a1 + 184) = 0;
  *(void *)(a1 + 192) = 0;
  int v34 = *(_DWORD *)(a2 + 184);
  if (v34)
  {
    uint64_t v35 = *(void *)(a2 + 192);
    v36 = (std::string **)sub_188CCE4(a1 + 176, *(_DWORD *)(a2 + 184));
    sub_188FB98(a1 + 176, v36, (const std::string **)(v35 + 8), v34, **(_DWORD **)(a1 + 192) - *(_DWORD *)(a1 + 184));
    int v37 = *(_DWORD *)(a1 + 184) + v34;
    *(_DWORD *)(a1 + 184) = v37;
    v38 = *(int **)(a1 + 192);
    if (*v38 < v37) {
      int *v38 = v37;
    }
  }
  *(void *)(a1 + 200) = 0;
  *(void *)(a1 + 208) = 0;
  *(void *)(a1 + 216) = 0;
  int v39 = *(_DWORD *)(a2 + 208);
  if (v39)
  {
    uint64_t v40 = *(void *)(a2 + 216);
    v41 = (std::string **)sub_188CCE4(a1 + 200, *(_DWORD *)(a2 + 208));
    sub_188FB98(a1 + 200, v41, (const std::string **)(v40 + 8), v39, **(_DWORD **)(a1 + 216) - *(_DWORD *)(a1 + 208));
    int v42 = *(_DWORD *)(a1 + 208) + v39;
    *(_DWORD *)(a1 + 208) = v42;
    v43 = *(int **)(a1 + 216);
    if (*v43 < v42) {
      int *v43 = v42;
    }
  }
  *(void *)(a1 + 224) = 0;
  *(void *)(a1 + 232) = 0;
  *(void *)(a1 + 240) = 0;
  int v44 = *(_DWORD *)(a2 + 232);
  if (v44)
  {
    uint64_t v45 = *(void *)(a2 + 240);
    v46 = (std::string **)sub_188CCE4(a1 + 224, *(_DWORD *)(a2 + 232));
    sub_188FB98(a1 + 224, v46, (const std::string **)(v45 + 8), v44, **(_DWORD **)(a1 + 240) - *(_DWORD *)(a1 + 232));
    int v47 = *(_DWORD *)(a1 + 232) + v44;
    *(_DWORD *)(a1 + 232) = v47;
    v48 = *(int **)(a1 + 240);
    if (*v48 < v47) {
      int *v48 = v47;
    }
  }
  *(void *)(a1 + 248) = 0;
  *(void *)(a1 + 256) = 0;
  *(void *)(a1 + 264) = 0;
  int v49 = *(_DWORD *)(a2 + 256);
  if (v49)
  {
    uint64_t v50 = *(void *)(a2 + 264);
    v51 = (std::string **)sub_188CCE4(a1 + 248, *(_DWORD *)(a2 + 256));
    sub_188FB98(a1 + 248, v51, (const std::string **)(v50 + 8), v49, **(_DWORD **)(a1 + 264) - *(_DWORD *)(a1 + 256));
    int v52 = *(_DWORD *)(a1 + 256) + v49;
    *(_DWORD *)(a1 + 256) = v52;
    v53 = *(int **)(a1 + 264);
    if (*v53 < v52) {
      int *v53 = v52;
    }
  }
  v65 = (uint64_t *)(a1 + 272);
  *(void *)(a1 + 272) = 0;
  *(void *)(a1 + 280) = 0;
  *(void *)(a1 + 288) = 0;
  int v54 = *(_DWORD *)(a2 + 280);
  if (v54)
  {
    uint64_t v55 = *(void *)(a2 + 288);
    v56 = (std::string **)sub_188CCE4((uint64_t)v65, *(_DWORD *)(a2 + 280));
    sub_1492514(v65, v56, (uint64_t *)(v55 + 8), v54, **(_DWORD **)(a1 + 288) - *(_DWORD *)(a1 + 280));
    int v57 = *(_DWORD *)(a1 + 280) + v54;
    *(_DWORD *)(a1 + 280) = v57;
    v58 = *(int **)(a1 + 288);
    if (*v58 < v57) {
      int *v58 = v57;
    }
  }
  uint64_t v59 = *(void *)(a2 + 8);
  if (v59) {
    sub_188B4F8(v66, (v59 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 296) = &qword_2550250;
  int v60 = *(_DWORD *)(a2 + 16);
  if (v60)
  {
    v61 = (uint64_t *)(*v66 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v66) {
      v61 = (uint64_t *)*v61;
    }
    sub_1881DF4((std::string **)(a1 + 296), (long long *)(*(void *)(a2 + 296) & 0xFFFFFFFFFFFFFFFELL), v61);
    int v60 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 304) = &qword_2550250;
  if ((v60 & 2) != 0)
  {
    v62 = (uint64_t *)(*v66 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v66) {
      v62 = (uint64_t *)*v62;
    }
    sub_1881DF4((std::string **)(a1 + 304), (long long *)(*(void *)(a2 + 304) & 0xFFFFFFFFFFFFFFFELL), v62);
    int v60 = *(_DWORD *)(a2 + 16);
  }
  if ((v60 & 4) != 0) {
    operator new();
  }
  *(void *)(a1 + 312) = 0;
  if ((v60 & 8) != 0) {
    operator new();
  }
  *(void *)(a1 + 320) = 0;
  if ((v60 & 0x10) != 0) {
    operator new();
  }
  *(void *)(a1 + 328) = 0;
  if ((v60 & 0x20) != 0) {
    operator new();
  }
  *(void *)(a1 + 336) = 0;
  if ((v60 & 0x40) != 0) {
    operator new();
  }
  *(void *)(a1 + 344) = 0;
  if ((v60 & 0x80) != 0) {
    operator new();
  }
  *(void *)(a1 + 352) = 0;
  if ((v60 & 0x100) != 0) {
    operator new();
  }
  *(void *)(a1 + 360) = 0;
  if ((v60 & 0x200) != 0) {
    operator new();
  }
  *(void *)(a1 + 368) = 0;
  uint64_t v63 = *(void *)(a2 + 376);
  *(void *)(a1 + 381) = *(void *)(a2 + 381);
  *(void *)(a1 + 376) = v63;
  return a1;
}

void sub_142A3D8()
{
}

void *sub_142A550(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_142A648((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  sub_14908FC(a1 + 34);
  sub_1889DE8(a1 + 31);
  sub_1889DE8(a1 + 28);
  sub_1889DE8(a1 + 25);
  sub_1889DE8(a1 + 22);
  sub_1889DE8(a1 + 19);
  sub_149087C(a1 + 16);
  sub_1889DA8((uint64_t)(a1 + 14));
  sub_1889DA8((uint64_t)(a1 + 12));
  sub_149067C(a1 + 9);
  sub_14907FC(a1 + 6);
  sub_149077C(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

uint64_t sub_142A648(uint64_t result)
{
  uint64_t v1 = (void *)result;
  if (*(uint64_t **)(result + 296) != &qword_2550250) {
    sub_1881C6C((void ***)(result + 296));
  }
  if (*(uint64_t **)(result + 304) != &qword_2550250) {
    sub_1881C6C((void ***)(result + 304));
  }
  if ((uint64_t (***)())result != &off_2538320)
  {
    uint64_t v2 = *(void **)(result + 312);
    if (v2)
    {
      sub_14296A8(v2);
      operator delete();
    }
    uint64_t v3 = v1[40];
    if (v3)
    {
      sub_14239EC(v3);
      operator delete();
    }
    uint64_t v4 = v1[41];
    if (v4)
    {
      sub_142E538(v4);
      operator delete();
    }
    uint64_t v5 = v1[42];
    if (v5)
    {
      sub_1448068(v5);
      operator delete();
    }
    uint64_t v6 = v1[43];
    if (v6)
    {
      sub_142EC54(v6);
      operator delete();
    }
    uint64_t v7 = v1[44];
    if (v7)
    {
      sub_142F370(v7);
      operator delete();
    }
    uint64_t v8 = v1[45];
    if (v8)
    {
      sub_142FA8C(v8);
      operator delete();
    }
    double result = v1[46];
    if (result)
    {
      sub_14291F8((void *)result);
      operator delete();
    }
  }
  return result;
}

void sub_142A7C4(void *a1)
{
  sub_142A550(a1);

  operator delete();
}

uint64_t sub_142A7FC(uint64_t a1)
{
  uint64_t result = sub_188CC00(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v3 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)unint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t v4 = a1 + 8;
  *(_DWORD *)(v4 + 8) = 0;
  if (v5)
  {
    return sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

uint64_t sub_142A880(uint64_t a1)
{
  uint64_t result = sub_188CC00(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v3 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)unint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t v4 = a1 + 8;
  *(_DWORD *)(v4 + 8) = 0;
  if (v5)
  {
    return sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

uint64_t sub_142A904(uint64_t a1)
{
  uint64_t result = sub_188CC00(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v3 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)unint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t v4 = a1 + 8;
  *(_DWORD *)(v4 + 8) = 0;
  if (v5)
  {
    return sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

uint64_t sub_142A988(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)v158 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v158, a3[11].i32[1]))
  {
    int v152 = 0;
    goto LABEL_3;
  }
  int v152 = 0;
  v151 = (uint64_t *)(a1 + 272);
  v156 = (uint64_t **)(a1 + 224);
  v157 = (uint64_t **)(a1 + 248);
  v154 = (uint64_t **)(a1 + 176);
  v155 = (uint64_t **)(a1 + 200);
  v153 = (uint64_t **)(a1 + 152);
  v149 = (uint64_t *)(a1 + 8);
  v150 = (uint64_t *)(a1 + 128);
  while (2)
  {
    uint64_t v6 = (char *)(*(void *)v158 + 1);
    unsigned int v7 = **(unsigned char **)v158;
    if ((char)**(unsigned char **)v158 < 0)
    {
      int v8 = *v6;
      unsigned int v9 = v7 + (v8 << 7);
      unsigned int v7 = v9 - 128;
      if (v8 < 0)
      {
        uint64_t v6 = (char *)sub_188C180(*(uint64_t *)v158, v9 - 128);
        unsigned int v7 = v10;
      }
      else
      {
        uint64_t v6 = (char *)(*(void *)v158 + 2);
      }
    }
    *(void *)v158 = v6;
    switch(v7 >> 3)
    {
      case 1u:
        if (v7 != 10) {
          goto LABEL_264;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v11 = *(void *)(a1 + 8);
        uint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
        if (v11) {
          uint64_t v12 = (uint64_t *)*v12;
        }
        int v13 = (void *)(a1 + 296);
        goto LABEL_18;
      case 2u:
        if (v7 != 18) {
          goto LABEL_264;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v14 = *(void *)(a1 + 8);
        uint64_t v12 = (uint64_t *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
        if (v14) {
          uint64_t v12 = (uint64_t *)*v12;
        }
        int v13 = (void *)(a1 + 304);
LABEL_18:
        int v15 = (std::string *)sub_1880F84(v13, v12);
        uint64_t v16 = (uint64_t)sub_188C244(v15, *(char **)v158, (uint64_t)a3);
        goto LABEL_271;
      case 3u:
        if (v7 != 26) {
          goto LABEL_264;
        }
        uint64_t v17 = v6 - 1;
        while (1)
        {
          int v18 = (unsigned __int8 *)(v17 + 1);
          *(void *)v158 = v17 + 1;
          int v19 = *(_DWORD **)(a1 + 40);
          if (v19 && (uint64_t v20 = *(int *)(a1 + 32), (int)v20 < *v19))
          {
            *(_DWORD *)(a1 + 32) = v20 + 1;
            uint64_t v21 = *(void *)&v19[2 * v20 + 2];
          }
          else
          {
            int v22 = sub_144B3AC(*(void *)(a1 + 24));
            uint64_t v21 = sub_188CDC8(a1 + 24, (uint64_t)v22);
            int v18 = *(unsigned __int8 **)v158;
          }
          uint64_t v17 = (char *)sub_142BAF4(a3, v21, v18);
          *(void *)v158 = v17;
          if (!v17) {
            goto LABEL_277;
          }
          if (*(void *)a3 <= (unint64_t)v17 || *v17 != 26) {
            goto LABEL_272;
          }
        }
      case 4u:
        if (v7 != 32) {
          goto LABEL_264;
        }
        std::string::size_type v23 = v6 + 1;
        uint64_t v24 = *v6;
        v152 |= 0x800u;
        if ((*v6 & 0x80000000) == 0) {
          goto LABEL_33;
        }
        int v25 = *v23;
        uint64_t v24 = v24 + (v25 << 7) - 128;
        if (v25 < 0)
        {
          uint64_t v134 = sub_188C138((uint64_t)v6, v24);
          *(void *)v158 = v134;
          *(unsigned char *)(a1 + 384) = v135 != 0;
          if (!v134) {
            goto LABEL_277;
          }
        }
        else
        {
          std::string::size_type v23 = v6 + 2;
LABEL_33:
          *(void *)v158 = v23;
          *(unsigned char *)(a1 + 384) = v24 != 0;
        }
        goto LABEL_272;
      case 5u:
        if (v7 != 42) {
          goto LABEL_264;
        }
        std::string::size_type v26 = v6 - 1;
        while (1)
        {
          int v27 = (unsigned __int8 *)(v26 + 1);
          *(void *)v158 = v26 + 1;
          unint64_t v28 = *(_DWORD **)(a1 + 64);
          if (v28 && (uint64_t v29 = *(int *)(a1 + 56), (int)v29 < *v28))
          {
            *(_DWORD *)(a1 + 56) = v29 + 1;
            uint64_t v30 = *(void *)&v28[2 * v29 + 2];
          }
          else
          {
            uint64_t v31 = sub_144B438(*(void *)(a1 + 48));
            uint64_t v30 = sub_188CDC8(a1 + 48, v31);
            int v27 = *(unsigned __int8 **)v158;
          }
          std::string::size_type v26 = (char *)sub_142BB84(a3, v30, v27);
          *(void *)v158 = v26;
          if (!v26) {
            goto LABEL_277;
          }
          if (*(void *)a3 <= (unint64_t)v26 || *v26 != 42) {
            goto LABEL_272;
          }
        }
      case 6u:
        if (v7 != 50) {
          goto LABEL_264;
        }
        int v32 = v6 - 1;
        while (1)
        {
          uint64_t v33 = (unsigned __int8 *)(v32 + 1);
          *(void *)v158 = v32 + 1;
          int v34 = *(_DWORD **)(a1 + 88);
          if (v34 && (uint64_t v35 = *(int *)(a1 + 80), (int)v35 < *v34))
          {
            *(_DWORD *)(a1 + 80) = v35 + 1;
            uint64_t v36 = *(void *)&v34[2 * v35 + 2];
          }
          else
          {
            int v37 = sub_144B574(*(void *)(a1 + 72));
            uint64_t v36 = sub_188CDC8(a1 + 72, (uint64_t)v37);
            uint64_t v33 = *(unsigned __int8 **)v158;
          }
          int v32 = (char *)sub_14248AC(a3, v36, v33);
          *(void *)v158 = v32;
          if (!v32) {
            goto LABEL_277;
          }
          if (*(void *)a3 <= (unint64_t)v32 || *v32 != 50) {
            goto LABEL_272;
          }
        }
      case 7u:
        if (v7 == 56)
        {
          uint64_t v38 = (uint64_t)(v6 - 1);
          while (1)
          {
            *(void *)v158 = v38 + 1;
            unint64_t v39 = *(unsigned __int8 *)(v38 + 1);
            uint64_t v40 = (char *)(v38 + 2);
            if (*(char *)(v38 + 1) < 0)
            {
              int v41 = *v40;
              int v42 = v39 + (v41 << 7);
              unint64_t v39 = (v42 - 128);
              if (v41 < 0)
              {
                *(void *)v158 = sub_188C138(v38 + 1, (v42 - 128));
                if (!*(void *)v158) {
                  goto LABEL_277;
                }
                unint64_t v39 = v45;
                goto LABEL_60;
              }
              uint64_t v40 = (char *)(v38 + 3);
            }
            *(void *)v158 = v40;
LABEL_60:
            if (sub_16BAFD8(v39))
            {
              uint64_t v43 = *(unsigned int *)(a1 + 96);
              if (v43 == *(_DWORD *)(a1 + 100))
              {
                int v44 = v43 + 1;
                sub_188C80C((unsigned int *)(a1 + 96), v43 + 1);
                *(_DWORD *)(*(void *)(a1 + 104) + 4 * v43) = v39;
              }
              else
              {
                *(_DWORD *)(*(void *)(a1 + 104) + 4 * v43) = v39;
                int v44 = v43 + 1;
              }
              *(_DWORD *)(a1 + 96) = v44;
            }
            else
            {
              if (*v149) {
                v46 = (std::string *)((*v149 & 0xFFFFFFFFFFFFFFFCLL) + 8);
              }
              else {
                v46 = (std::string *)sub_188DBD8(v149);
              }
              sub_188C020(7, v39, v46);
            }
            uint64_t v38 = *(void *)v158;
            if (*(void *)a3 <= *(void *)v158 || **(unsigned char **)v158 != 56) {
              goto LABEL_272;
            }
          }
        }
        if (v7 != 58) {
          goto LABEL_264;
        }
        *(void *)&long long v159 = a1 + 96;
        *((void *)&v159 + 1) = sub_16BAFD8;
        uint64_t v160 = a1 + 8;
        int v146 = 7;
        goto LABEL_263;
      case 8u:
        if (v7 == 64)
        {
          uint64_t v47 = (uint64_t)(v6 - 1);
          while (1)
          {
            *(void *)v158 = v47 + 1;
            unint64_t v48 = *(unsigned __int8 *)(v47 + 1);
            int v49 = (char *)(v47 + 2);
            if (*(char *)(v47 + 1) < 0)
            {
              int v50 = *v49;
              int v51 = v48 + (v50 << 7);
              unint64_t v48 = (v51 - 128);
              if (v50 < 0)
              {
                *(void *)v158 = sub_188C138(v47 + 1, (v51 - 128));
                if (!*(void *)v158) {
                  goto LABEL_277;
                }
                unint64_t v48 = v54;
                goto LABEL_80;
              }
              int v49 = (char *)(v47 + 3);
            }
            *(void *)v158 = v49;
LABEL_80:
            if (sub_16CD218(v48))
            {
              uint64_t v52 = *(unsigned int *)(a1 + 112);
              if (v52 == *(_DWORD *)(a1 + 116))
              {
                int v53 = v52 + 1;
                sub_188C80C((unsigned int *)(a1 + 112), v52 + 1);
                *(_DWORD *)(*(void *)(a1 + 120) + 4 * v52) = v48;
              }
              else
              {
                *(_DWORD *)(*(void *)(a1 + 120) + 4 * v52) = v48;
                int v53 = v52 + 1;
              }
              *(_DWORD *)(a1 + 112) = v53;
            }
            else
            {
              if (*v149) {
                uint64_t v55 = (std::string *)((*v149 & 0xFFFFFFFFFFFFFFFCLL) + 8);
              }
              else {
                uint64_t v55 = (std::string *)sub_188DBD8(v149);
              }
              sub_188C020(8, v48, v55);
            }
            uint64_t v47 = *(void *)v158;
            if (*(void *)a3 <= *(void *)v158 || **(unsigned char **)v158 != 64) {
              goto LABEL_272;
            }
          }
        }
        if (v7 == 66)
        {
          *(void *)&long long v159 = a1 + 112;
          *((void *)&v159 + 1) = sub_16CD218;
          uint64_t v160 = a1 + 8;
          int v146 = 8;
LABEL_263:
          int v161 = v146;
          uint64_t v16 = (uint64_t)sub_1112E88((uint64_t)a3, v6, &v159);
LABEL_271:
          *(void *)v158 = v16;
          if (!v16) {
            goto LABEL_277;
          }
LABEL_272:
          if (sub_11947B8((uint64_t)a3, (char **)v158, a3[11].i32[1])) {
            goto LABEL_3;
          }
          continue;
        }
LABEL_264:
        if (v7) {
          BOOL v147 = (v7 & 7) == 4;
        }
        else {
          BOOL v147 = 1;
        }
        if (!v147)
        {
          if (*v149)
          {
            v148 = (std::string *)((*v149 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            v148 = (std::string *)sub_188DBD8(v149);
            uint64_t v6 = *(char **)v158;
          }
          uint64_t v16 = (uint64_t)sub_1885AC0(v7, v148, v6, a3);
          goto LABEL_271;
        }
        if (v6) {
          a3[10].i32[0] = v7 - 1;
        }
        else {
LABEL_277:
        }
          *(void *)v158 = 0;
LABEL_3:
        *(_DWORD *)(a1 + 16) |= v152;
        return *(void *)v158;
      case 0xAu:
        if (v7 != 82) {
          goto LABEL_264;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v56 = *(void *)(a1 + 312);
        if (!v56)
        {
          int v57 = (void *)(*v149 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v149) {
            int v57 = (void *)*v57;
          }
          uint64_t v56 = sub_144B79C((uint64_t)v57);
          *(void *)(a1 + 312) = v56;
          uint64_t v6 = *(char **)v158;
        }
        uint64_t v16 = sub_142BC14(a3, v56, (unsigned __int8 *)v6);
        goto LABEL_271;
      case 0xBu:
        if (v7 != 90) {
          goto LABEL_264;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v58 = *(void *)(a1 + 320);
        if (!v58)
        {
          uint64_t v59 = (void *)(*v149 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v149) {
            uint64_t v59 = (void *)*v59;
          }
          uint64_t v58 = sub_144B250((uint64_t)v59);
          *(void *)(a1 + 320) = v58;
          uint64_t v6 = *(char **)v158;
        }
        uint64_t v16 = sub_14159C8(a3, v58, (unsigned __int8 *)v6);
        goto LABEL_271;
      case 0xCu:
        if (v7 != 96) {
          goto LABEL_264;
        }
        int v60 = v6 + 1;
        uint64_t v61 = *v6;
        v152 |= 0x400u;
        if ((*v6 & 0x80000000) == 0) {
          goto LABEL_110;
        }
        int v62 = *v60;
        uint64_t v61 = v61 + (v62 << 7) - 128;
        if (v62 < 0)
        {
          uint64_t v136 = sub_188C138((uint64_t)v6, v61);
          *(void *)v158 = v136;
          *(void *)(a1 + 376) = v137;
          if (!v136) {
            goto LABEL_277;
          }
        }
        else
        {
          int v60 = v6 + 2;
LABEL_110:
          *(void *)v158 = v60;
          *(void *)(a1 + 376) = v61;
        }
        goto LABEL_272;
      case 0xFu:
        if (v7 != 122) {
          goto LABEL_264;
        }
        *(_DWORD *)(a1 + 16) |= 0x10u;
        uint64_t v63 = *(void **)(a1 + 328);
        if (!v63)
        {
          v64 = (void *)(*v149 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v149) {
            v64 = (void *)*v64;
          }
          uint64_t v63 = sub_144B9C8((uint64_t)v64);
          *(void *)(a1 + 328) = v63;
          uint64_t v6 = *(char **)v158;
        }
        uint64_t v16 = sub_1415AE8(a3, (uint64_t)v63, (unsigned __int8 *)v6);
        goto LABEL_271;
      case 0x10u:
        if (v7 != 130) {
          goto LABEL_264;
        }
        v65 = v6 - 2;
        while (1)
        {
          v66 = (unsigned __int8 *)(v65 + 2);
          *(void *)v158 = v65 + 2;
          v67 = *(_DWORD **)(a1 + 144);
          if (v67 && (uint64_t v68 = *(int *)(a1 + 136), (int)v68 < *v67))
          {
            *(_DWORD *)(a1 + 136) = v68 + 1;
            uint64_t v69 = *(void *)&v67[2 * v68 + 2];
          }
          else
          {
            v70 = sub_144B89C(*v150);
            uint64_t v69 = sub_188CDC8((uint64_t)v150, (uint64_t)v70);
            v66 = *(unsigned __int8 **)v158;
          }
          v65 = (char *)sub_142BCA4(a3, v69, v66);
          *(void *)v158 = v65;
          if (!v65) {
            goto LABEL_277;
          }
          if (*(void *)a3 <= (unint64_t)v65 || *(_WORD *)v65 != 386) {
            goto LABEL_272;
          }
        }
      case 0x11u:
        if (v7 != 138) {
          goto LABEL_264;
        }
        *(_DWORD *)(a1 + 16) |= 0x20u;
        v71 = *(void **)(a1 + 336);
        if (!v71)
        {
          v72 = (void *)(*v149 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v149) {
            v72 = (void *)*v72;
          }
          v71 = sub_144CDDC((uint64_t)v72);
          *(void *)(a1 + 336) = v71;
          uint64_t v6 = *(char **)v158;
        }
        uint64_t v16 = sub_142BD34(a3, (uint64_t)v71, (unsigned __int8 *)v6);
        goto LABEL_271;
      case 0x12u:
        if (v7 != 146) {
          goto LABEL_264;
        }
        *(_DWORD *)(a1 + 16) |= 0x40u;
        v73 = *(void **)(a1 + 344);
        if (!v73)
        {
          v74 = (void *)(*v149 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v149) {
            v74 = (void *)*v74;
          }
          v73 = sub_144BA6C((uint64_t)v74);
          *(void *)(a1 + 344) = v73;
          uint64_t v6 = *(char **)v158;
        }
        uint64_t v16 = sub_142BDC4(a3, (uint64_t)v73, (unsigned __int8 *)v6);
        goto LABEL_271;
      case 0x13u:
        if (v7 != 152) {
          goto LABEL_264;
        }
        v75 = v6 + 1;
        uint64_t v76 = *v6;
        v152 |= 0x1000u;
        if ((*v6 & 0x80000000) == 0) {
          goto LABEL_143;
        }
        int v77 = *v75;
        uint64_t v76 = v76 + (v77 << 7) - 128;
        if (v77 < 0)
        {
          uint64_t v138 = sub_188C138((uint64_t)v6, v76);
          *(void *)v158 = v138;
          *(unsigned char *)(a1 + 385) = v139 != 0;
          if (!v138) {
            goto LABEL_277;
          }
        }
        else
        {
          v75 = v6 + 2;
LABEL_143:
          *(void *)v158 = v75;
          *(unsigned char *)(a1 + 385) = v76 != 0;
        }
        goto LABEL_272;
      case 0x14u:
        if (v7 != 162) {
          goto LABEL_264;
        }
        *(_DWORD *)(a1 + 16) |= 0x80u;
        v78 = *(void **)(a1 + 352);
        if (!v78)
        {
          v79 = (void *)(*v149 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v149) {
            v79 = (void *)*v79;
          }
          v78 = sub_144BB10((uint64_t)v79);
          *(void *)(a1 + 352) = v78;
          uint64_t v6 = *(char **)v158;
        }
        uint64_t v16 = sub_1415B78(a3, (uint64_t)v78, (unsigned __int8 *)v6);
        goto LABEL_271;
      case 0x15u:
        if (v7 != 170) {
          goto LABEL_264;
        }
        v80 = v6 - 2;
        while (1)
        {
          v81 = (char *)(v80 + 2);
          *(void *)v158 = v80 + 2;
          v82 = *(_DWORD **)(a1 + 168);
          if (v82 && (uint64_t v83 = *(int *)(a1 + 160), (int)v83 < *v82))
          {
            *(_DWORD *)(a1 + 160) = v83 + 1;
            v84 = *(std::string **)&v82[2 * v83 + 2];
          }
          else
          {
            if (!*v153) {
              operator new();
            }
            void *v86 = v85;
            v86[1] = sub_3A6EDC;
            void *v85 = 0;
            v85[1] = 0;
            v85[2] = 0;
            v84 = (std::string *)sub_188CDC8((uint64_t)v153, (uint64_t)v85);
            v81 = *(char **)v158;
          }
          v80 = sub_188C244(v84, v81, (uint64_t)a3);
          *(void *)v158 = v80;
          if (!v80) {
            goto LABEL_277;
          }
          if (*(void *)a3 <= (unint64_t)v80 || *(_WORD *)v80 != 426) {
            goto LABEL_272;
          }
        }
      case 0x16u:
        if (v7 != 176) {
          goto LABEL_264;
        }
        v87 = v6 + 1;
        uint64_t v88 = *v6;
        v152 |= 0x2000u;
        if ((*v6 & 0x80000000) == 0) {
          goto LABEL_166;
        }
        int v89 = *v87;
        uint64_t v88 = v88 + (v89 << 7) - 128;
        if (v89 < 0)
        {
          uint64_t v140 = sub_188C138((uint64_t)v6, v88);
          *(void *)v158 = v140;
          *(unsigned char *)(a1 + 386) = v141 != 0;
          if (!v140) {
            goto LABEL_277;
          }
        }
        else
        {
          v87 = v6 + 2;
LABEL_166:
          *(void *)v158 = v87;
          *(unsigned char *)(a1 + 386) = v88 != 0;
        }
        goto LABEL_272;
      case 0x17u:
        if (v7 != 186) {
          goto LABEL_264;
        }
        v90 = v6 - 2;
        while (1)
        {
          v91 = (char *)(v90 + 2);
          *(void *)v158 = v90 + 2;
          v92 = *(_DWORD **)(a1 + 192);
          if (v92 && (uint64_t v93 = *(int *)(a1 + 184), (int)v93 < *v92))
          {
            *(_DWORD *)(a1 + 184) = v93 + 1;
            v94 = *(std::string **)&v92[2 * v93 + 2];
          }
          else
          {
            if (!*v154) {
              operator new();
            }
            void *v96 = v95;
            v96[1] = sub_3A6EDC;
            void *v95 = 0;
            v95[1] = 0;
            v95[2] = 0;
            v94 = (std::string *)sub_188CDC8((uint64_t)v154, (uint64_t)v95);
            v91 = *(char **)v158;
          }
          v90 = sub_188C244(v94, v91, (uint64_t)a3);
          *(void *)v158 = v90;
          if (!v90) {
            goto LABEL_277;
          }
          if (*(void *)a3 <= (unint64_t)v90 || *(_WORD *)v90 != 442) {
            goto LABEL_272;
          }
        }
      case 0x18u:
        if (v7 != 194) {
          goto LABEL_264;
        }
        v97 = v6 - 2;
        while (1)
        {
          v98 = (char *)(v97 + 2);
          *(void *)v158 = v97 + 2;
          v99 = *(_DWORD **)(a1 + 216);
          if (v99 && (uint64_t v100 = *(int *)(a1 + 208), (int)v100 < *v99))
          {
            *(_DWORD *)(a1 + 208) = v100 + 1;
            v101 = *(std::string **)&v99[2 * v100 + 2];
          }
          else
          {
            if (!*v155) {
              operator new();
            }
            void *v103 = v102;
            v103[1] = sub_3A6EDC;
            void *v102 = 0;
            v102[1] = 0;
            v102[2] = 0;
            v101 = (std::string *)sub_188CDC8((uint64_t)v155, (uint64_t)v102);
            v98 = *(char **)v158;
          }
          v97 = sub_188C244(v101, v98, (uint64_t)a3);
          *(void *)v158 = v97;
          if (!v97) {
            goto LABEL_277;
          }
          if (*(void *)a3 <= (unint64_t)v97 || *(_WORD *)v97 != 450) {
            goto LABEL_272;
          }
        }
      case 0x19u:
        if (v7 != 202) {
          goto LABEL_264;
        }
        *(_DWORD *)(a1 + 16) |= 0x100u;
        v104 = *(void **)(a1 + 360);
        if (!v104)
        {
          v105 = (void *)(*v149 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v149) {
            v105 = (void *)*v105;
          }
          v104 = sub_144BBB4((uint64_t)v105);
          *(void *)(a1 + 360) = v104;
          uint64_t v6 = *(char **)v158;
        }
        uint64_t v16 = sub_142BE54(a3, (uint64_t)v104, (unsigned __int8 *)v6);
        goto LABEL_271;
      case 0x1Au:
        if (v7 != 210) {
          goto LABEL_264;
        }
        v106 = v6 - 2;
        while (1)
        {
          v107 = (char *)(v106 + 2);
          *(void *)v158 = v106 + 2;
          v108 = *(_DWORD **)(a1 + 240);
          if (v108 && (uint64_t v109 = *(int *)(a1 + 232), (int)v109 < *v108))
          {
            *(_DWORD *)(a1 + 232) = v109 + 1;
            v110 = *(std::string **)&v108[2 * v109 + 2];
          }
          else
          {
            if (!*v156) {
              operator new();
            }
            void *v112 = v111;
            v112[1] = sub_3A6EDC;
            void *v111 = 0;
            v111[1] = 0;
            v111[2] = 0;
            v110 = (std::string *)sub_188CDC8((uint64_t)v156, (uint64_t)v111);
            v107 = *(char **)v158;
          }
          v106 = sub_188C244(v110, v107, (uint64_t)a3);
          *(void *)v158 = v106;
          if (!v106) {
            goto LABEL_277;
          }
          if (*(void *)a3 <= (unint64_t)v106 || *(_WORD *)v106 != 466) {
            goto LABEL_272;
          }
        }
      case 0x1Bu:
        if (v7 != 218) {
          goto LABEL_264;
        }
        v113 = v6 - 2;
        while (1)
        {
          v114 = (char *)(v113 + 2);
          *(void *)v158 = v113 + 2;
          v115 = *(_DWORD **)(a1 + 264);
          if (v115 && (uint64_t v116 = *(int *)(a1 + 256), (int)v116 < *v115))
          {
            *(_DWORD *)(a1 + 256) = v116 + 1;
            v117 = *(std::string **)&v115[2 * v116 + 2];
          }
          else
          {
            if (!*v157) {
              operator new();
            }
            void *v119 = v118;
            v119[1] = sub_3A6EDC;
            void *v118 = 0;
            v118[1] = 0;
            v118[2] = 0;
            v117 = (std::string *)sub_188CDC8((uint64_t)v157, (uint64_t)v118);
            v114 = *(char **)v158;
          }
          v113 = sub_188C244(v117, v114, (uint64_t)a3);
          *(void *)v158 = v113;
          if (!v113) {
            goto LABEL_277;
          }
          if (*(void *)a3 <= (unint64_t)v113 || *(_WORD *)v113 != 474) {
            goto LABEL_272;
          }
        }
      case 0x1Cu:
        if (v7 != 226) {
          goto LABEL_264;
        }
        v120 = v6 - 2;
        while (1)
        {
          v121 = (unsigned __int8 *)(v120 + 2);
          *(void *)v158 = v120 + 2;
          v122 = *(_DWORD **)(a1 + 288);
          if (v122 && (uint64_t v123 = *(int *)(a1 + 280), (int)v123 < *v122))
          {
            *(_DWORD *)(a1 + 280) = v123 + 1;
            uint64_t v124 = *(void *)&v122[2 * v123 + 2];
          }
          else
          {
            uint64_t v125 = sub_144B6A4(*v151);
            uint64_t v124 = sub_188CDC8((uint64_t)v151, v125);
            v121 = *(unsigned __int8 **)v158;
          }
          v120 = sub_142BEE4(a3, v124, v121);
          *(void *)v158 = v120;
          if (!v120) {
            goto LABEL_277;
          }
          if (*(void *)a3 <= (unint64_t)v120 || *(_WORD *)v120 != 482) {
            goto LABEL_272;
          }
        }
      case 0x1Du:
        if (v7 != 232) {
          goto LABEL_264;
        }
        v126 = v6 + 1;
        uint64_t v127 = *v6;
        v152 |= 0x4000u;
        if ((*v6 & 0x80000000) == 0) {
          goto LABEL_235;
        }
        int v128 = *v126;
        uint64_t v127 = v127 + (v128 << 7) - 128;
        if (v128 < 0)
        {
          uint64_t v142 = sub_188C138((uint64_t)v6, v127);
          *(void *)v158 = v142;
          *(unsigned char *)(a1 + 387) = v143 != 0;
          if (!v142) {
            goto LABEL_277;
          }
        }
        else
        {
          v126 = v6 + 2;
LABEL_235:
          *(void *)v158 = v126;
          *(unsigned char *)(a1 + 387) = v127 != 0;
        }
        goto LABEL_272;
      case 0x1Eu:
        if (v7 != 240) {
          goto LABEL_264;
        }
        v129 = v6 + 1;
        uint64_t v130 = *v6;
        v152 |= 0x8000u;
        if ((*v6 & 0x80000000) == 0) {
          goto LABEL_240;
        }
        int v131 = *v129;
        uint64_t v130 = v130 + (v131 << 7) - 128;
        if (v131 < 0)
        {
          uint64_t v144 = sub_188C138((uint64_t)v6, v130);
          *(void *)v158 = v144;
          *(unsigned char *)(a1 + 388) = v145 != 0;
          if (!v144) {
            goto LABEL_277;
          }
        }
        else
        {
          v129 = v6 + 2;
LABEL_240:
          *(void *)v158 = v129;
          *(unsigned char *)(a1 + 388) = v130 != 0;
        }
        goto LABEL_272;
      case 0x1Fu:
        if (v7 != 250) {
          goto LABEL_264;
        }
        *(_DWORD *)(a1 + 16) |= 0x200u;
        uint64_t v132 = *(void *)(a1 + 368);
        if (!v132)
        {
          v133 = (void *)(*v149 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v149) {
            v133 = (void *)*v133;
          }
          uint64_t v132 = sub_144B720((uint64_t)v133);
          *(void *)(a1 + 368) = v132;
          uint64_t v6 = *(char **)v158;
        }
        uint64_t v16 = (uint64_t)sub_142BF74(a3, v132, (unsigned __int8 *)v6);
        goto LABEL_271;
      default:
        goto LABEL_264;
    }
  }
}

uint64_t sub_142BAF4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_142524C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_142BB84(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1425E9C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_142BC14(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_14297AC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_142BCA4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_142D828(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_142BD34(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1448148(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_142BDC4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_142ED34(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_142BE54(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_142FB6C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_142BEE4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1428BF8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_142BF74(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_14292BC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_142C004(uint64_t a1, char *__dst, unint64_t *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 296) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 2) != 0) {
    uint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 304) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  int v7 = *(_DWORD *)(a1 + 32);
  if (v7)
  {
    for (int i = 0; i != v7; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      char *v4 = 26;
      unsigned int v10 = *(_DWORD *)(v9 + 20);
      v4[1] = v10;
      if (v10 > 0x7F) {
        uint64_t v11 = sub_188A9CC(v10, v4 + 1);
      }
      else {
        uint64_t v11 = v4 + 2;
      }
      uint64_t v4 = sub_14254E0(v9, v11, a3);
    }
  }
  if ((v6 & 0x800) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v12 = *(unsigned char *)(a1 + 384);
    char *v4 = 32;
    v4[1] = v12;
    v4 += 2;
  }
  int v13 = *(_DWORD *)(a1 + 56);
  if (v13)
  {
    for (int j = 0; j != v13; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v15 = *(void *)(*(void *)(a1 + 64) + 8 * j + 8);
      char *v4 = 42;
      unsigned int v16 = *(_DWORD *)(v15 + 20);
      v4[1] = v16;
      if (v16 > 0x7F) {
        uint64_t v17 = sub_188A9CC(v16, v4 + 1);
      }
      else {
        uint64_t v17 = v4 + 2;
      }
      uint64_t v4 = sub_14264C0(v15, v17, a3);
    }
  }
  int v18 = *(_DWORD *)(a1 + 80);
  if (v18)
  {
    for (int k = 0; k != v18; ++k)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v20 = *(void *)(*(void *)(a1 + 88) + 8 * k + 8);
      char *v4 = 50;
      unsigned int v21 = *(_DWORD *)(v20 + 20);
      v4[1] = v21;
      if (v21 > 0x7F) {
        int v22 = sub_188A9CC(v21, v4 + 1);
      }
      else {
        int v22 = v4 + 2;
      }
      uint64_t v4 = sub_1427B0C(v20, v22, a3);
    }
  }
  uint64_t v23 = *(unsigned int *)(a1 + 96);
  if ((int)v23 >= 1)
  {
    for (uint64_t m = 0; m != v23; ++m)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v25 = *(int *)(*(void *)(a1 + 104) + 4 * m);
      char *v4 = 56;
      v4[1] = v25;
      if (v25 > 0x7F)
      {
        v4[1] = v25 | 0x80;
        unint64_t v26 = v25 >> 7;
        v4[2] = v25 >> 7;
        v4 += 3;
        if (v25 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v27 = v26 >> 14;
            v26 >>= 7;
            *v4++ = v26;
          }
          while (v27);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  uint64_t v28 = *(unsigned int *)(a1 + 112);
  if ((int)v28 >= 1)
  {
    for (uint64_t n = 0; n != v28; ++n)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v30 = *(int *)(*(void *)(a1 + 120) + 4 * n);
      char *v4 = 64;
      v4[1] = v30;
      if (v30 > 0x7F)
      {
        v4[1] = v30 | 0x80;
        unint64_t v31 = v30 >> 7;
        v4[2] = v30 >> 7;
        v4 += 3;
        if (v30 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v32 = v31 >> 14;
            v31 >>= 7;
            *v4++ = v31;
          }
          while (v32);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v33 = *(void *)(a1 + 312);
    char *v4 = 82;
    unsigned int v34 = *(_DWORD *)(v33 + 40);
    v4[1] = v34;
    if (v34 > 0x7F) {
      uint64_t v35 = sub_188A9CC(v34, v4 + 1);
    }
    else {
      uint64_t v35 = v4 + 2;
    }
    uint64_t v4 = sub_1429998(v33, v35, a3);
    if ((v6 & 8) == 0)
    {
LABEL_53:
      if ((v6 & 0x400) == 0) {
        goto LABEL_73;
      }
      goto LABEL_67;
    }
  }
  else if ((v6 & 8) == 0)
  {
    goto LABEL_53;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v36 = *(void *)(a1 + 320);
  char *v4 = 90;
  unsigned int v37 = *(_DWORD *)(v36 + 20);
  v4[1] = v37;
  if (v37 > 0x7F) {
    uint64_t v38 = sub_188A9CC(v37, v4 + 1);
  }
  else {
    uint64_t v38 = v4 + 2;
  }
  uint64_t v4 = sub_1423EA8(v36, v38, a3);
  if ((v6 & 0x400) != 0)
  {
LABEL_67:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v39 = *(void *)(a1 + 376);
    char *v4 = 96;
    v4[1] = v39;
    if (v39 > 0x7F)
    {
      v4[1] = v39 | 0x80;
      unint64_t v40 = v39 >> 7;
      v4[2] = v39 >> 7;
      v4 += 3;
      if (v39 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v41 = v40 >> 14;
          v40 >>= 7;
          *v4++ = v40;
        }
        while (v41);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_73:
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v42 = *(void *)(a1 + 328);
    char *v4 = 122;
    unsigned int v43 = *(_DWORD *)(v42 + 20);
    v4[1] = v43;
    if (v43 > 0x7F) {
      int v44 = sub_188A9CC(v43, v4 + 1);
    }
    else {
      int v44 = v4 + 2;
    }
    uint64_t v4 = sub_142E86C(v42, v44, a3);
  }
  int v45 = *(_DWORD *)(a1 + 136);
  if (v45)
  {
    for (iint i = 0; ii != v45; ++ii)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v47 = *(void *)(*(void *)(a1 + 144) + 8 * ii + 8);
      *(_WORD *)uint64_t v4 = 386;
      unsigned int v48 = *(_DWORD *)(v47 + 20);
      v4[2] = v48;
      if (v48 > 0x7F) {
        int v49 = sub_188A9CC(v48, v4 + 2);
      }
      else {
        int v49 = v4 + 3;
      }
      uint64_t v4 = sub_142DAB8(v47, v49, a3);
    }
  }
  if ((v6 & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v50 = *(void *)(a1 + 336);
    *(_WORD *)uint64_t v4 = 394;
    unsigned int v51 = *(_DWORD *)(v50 + 20);
    v4[2] = v51;
    if (v51 > 0x7F) {
      uint64_t v52 = sub_188A9CC(v51, v4 + 2);
    }
    else {
      uint64_t v52 = v4 + 3;
    }
    uint64_t v4 = sub_144839C(v50, v52, a3);
    if ((v6 & 0x40) == 0)
    {
LABEL_90:
      if ((v6 & 0x1000) == 0) {
        goto LABEL_91;
      }
      goto LABEL_105;
    }
  }
  else if ((v6 & 0x40) == 0)
  {
    goto LABEL_90;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v53 = *(void *)(a1 + 344);
  *(_WORD *)uint64_t v4 = 402;
  unsigned int v54 = *(_DWORD *)(v53 + 20);
  v4[2] = v54;
  if (v54 > 0x7F) {
    uint64_t v55 = sub_188A9CC(v54, v4 + 2);
  }
  else {
    uint64_t v55 = v4 + 3;
  }
  uint64_t v4 = sub_142EF88(v53, v55, a3);
  if ((v6 & 0x1000) == 0)
  {
LABEL_91:
    if ((v6 & 0x80) == 0) {
      goto LABEL_114;
    }
    goto LABEL_108;
  }
LABEL_105:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v56 = *(unsigned char *)(a1 + 385);
  *(_WORD *)uint64_t v4 = 408;
  v4[2] = v56;
  v4 += 3;
  if ((v6 & 0x80) != 0)
  {
LABEL_108:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v57 = *(void *)(a1 + 352);
    *(_WORD *)uint64_t v4 = 418;
    unsigned int v58 = *(_DWORD *)(v57 + 20);
    v4[2] = v58;
    if (v58 > 0x7F) {
      uint64_t v59 = sub_188A9CC(v58, v4 + 2);
    }
    else {
      uint64_t v59 = v4 + 3;
    }
    uint64_t v4 = sub_142F6A4(v57, v59, a3);
  }
LABEL_114:
  uint64_t v60 = *(unsigned int *)(a1 + 160);
  if ((int)v60 >= 1)
  {
    uint64_t v61 = 0;
    uint64_t v62 = 8 * v60;
    do
    {
      uint64_t v63 = *(void **)(*(void *)(a1 + 168) + v61 + 8);
      if (*((char *)v63 + 23) < 0)
      {
        int64_t v64 = v63[1];
        if (v64 > 127) {
          goto LABEL_125;
        }
      }
      else
      {
        int64_t v64 = *((unsigned __int8 *)v63 + 23);
      }
      if ((uint64_t)(*a3 - (void)v4 + 13) >= v64)
      {
        *(_WORD *)uint64_t v4 = 426;
        v4[2] = v64;
        if (*((char *)v63 + 23) < 0) {
          uint64_t v63 = (void *)*v63;
        }
        v65 = v4 + 3;
        memcpy(v65, v63, v64);
        uint64_t v4 = &v65[v64];
        goto LABEL_123;
      }
LABEL_125:
      uint64_t v4 = (char *)sub_188A868(a3, 21, (uint64_t)v63, v4);
LABEL_123:
      v61 += 8;
    }
    while (v62 != v61);
  }
  if ((v6 & 0x2000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v66 = *(unsigned char *)(a1 + 386);
    *(_WORD *)uint64_t v4 = 432;
    v4[2] = v66;
    v4 += 3;
  }
  uint64_t v67 = *(unsigned int *)(a1 + 184);
  if ((int)v67 >= 1)
  {
    uint64_t v68 = 0;
    uint64_t v69 = 8 * v67;
    do
    {
      v70 = *(void **)(*(void *)(a1 + 192) + v68 + 8);
      if (*((char *)v70 + 23) < 0)
      {
        int64_t v71 = v70[1];
        if (v71 > 127) {
          goto LABEL_141;
        }
      }
      else
      {
        int64_t v71 = *((unsigned __int8 *)v70 + 23);
      }
      if ((uint64_t)(*a3 - (void)v4 + 13) >= v71)
      {
        *(_WORD *)uint64_t v4 = 442;
        v4[2] = v71;
        if (*((char *)v70 + 23) < 0) {
          v70 = (void *)*v70;
        }
        v72 = v4 + 3;
        memcpy(v72, v70, v71);
        uint64_t v4 = &v72[v71];
        goto LABEL_139;
      }
LABEL_141:
      uint64_t v4 = (char *)sub_188A868(a3, 23, (uint64_t)v70, v4);
LABEL_139:
      v68 += 8;
    }
    while (v69 != v68);
  }
  uint64_t v73 = *(unsigned int *)(a1 + 208);
  if ((int)v73 >= 1)
  {
    uint64_t v74 = 0;
    uint64_t v75 = 8 * v73;
    do
    {
      uint64_t v76 = *(void **)(*(void *)(a1 + 216) + v74 + 8);
      if (*((char *)v76 + 23) < 0)
      {
        int64_t v77 = v76[1];
        if (v77 > 127) {
          goto LABEL_153;
        }
      }
      else
      {
        int64_t v77 = *((unsigned __int8 *)v76 + 23);
      }
      if ((uint64_t)(*a3 - (void)v4 + 13) >= v77)
      {
        *(_WORD *)uint64_t v4 = 450;
        v4[2] = v77;
        if (*((char *)v76 + 23) < 0) {
          uint64_t v76 = (void *)*v76;
        }
        v78 = v4 + 3;
        memcpy(v78, v76, v77);
        uint64_t v4 = &v78[v77];
        goto LABEL_151;
      }
LABEL_153:
      uint64_t v4 = (char *)sub_188A868(a3, 24, (uint64_t)v76, v4);
LABEL_151:
      v74 += 8;
    }
    while (v75 != v74);
  }
  if ((v6 & 0x100) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v79 = *(void *)(a1 + 360);
    *(_WORD *)uint64_t v4 = 458;
    unsigned int v80 = *(_DWORD *)(v79 + 20);
    v4[2] = v80;
    if (v80 > 0x7F) {
      v81 = sub_188A9CC(v80, v4 + 2);
    }
    else {
      v81 = v4 + 3;
    }
    uint64_t v4 = sub_142FDC0(v79, v81, a3);
  }
  uint64_t v82 = *(unsigned int *)(a1 + 232);
  if ((int)v82 >= 1)
  {
    uint64_t v83 = 0;
    uint64_t v84 = 8 * v82;
    do
    {
      v85 = *(void **)(*(void *)(a1 + 240) + v83 + 8);
      if (*((char *)v85 + 23) < 0)
      {
        int64_t v86 = v85[1];
        if (v86 > 127) {
          goto LABEL_172;
        }
      }
      else
      {
        int64_t v86 = *((unsigned __int8 *)v85 + 23);
      }
      if ((uint64_t)(*a3 - (void)v4 + 13) >= v86)
      {
        *(_WORD *)uint64_t v4 = 466;
        v4[2] = v86;
        if (*((char *)v85 + 23) < 0) {
          v85 = (void *)*v85;
        }
        v87 = v4 + 3;
        memcpy(v87, v85, v86);
        uint64_t v4 = &v87[v86];
        goto LABEL_170;
      }
LABEL_172:
      uint64_t v4 = (char *)sub_188A868(a3, 26, (uint64_t)v85, v4);
LABEL_170:
      v83 += 8;
    }
    while (v84 != v83);
  }
  uint64_t v88 = *(unsigned int *)(a1 + 256);
  if ((int)v88 >= 1)
  {
    uint64_t v89 = 0;
    uint64_t v90 = 8 * v88;
    do
    {
      v91 = *(void **)(*(void *)(a1 + 264) + v89 + 8);
      if (*((char *)v91 + 23) < 0)
      {
        int64_t v92 = v91[1];
        if (v92 > 127) {
          goto LABEL_184;
        }
      }
      else
      {
        int64_t v92 = *((unsigned __int8 *)v91 + 23);
      }
      if ((uint64_t)(*a3 - (void)v4 + 13) >= v92)
      {
        *(_WORD *)uint64_t v4 = 474;
        v4[2] = v92;
        if (*((char *)v91 + 23) < 0) {
          v91 = (void *)*v91;
        }
        uint64_t v93 = v4 + 3;
        memcpy(v93, v91, v92);
        uint64_t v4 = &v93[v92];
        goto LABEL_182;
      }
LABEL_184:
      uint64_t v4 = (char *)sub_188A868(a3, 27, (uint64_t)v91, v4);
LABEL_182:
      v89 += 8;
    }
    while (v90 != v89);
  }
  int v94 = *(_DWORD *)(a1 + 280);
  if (v94)
  {
    for (jint j = 0; jj != v94; ++jj)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v96 = *(void *)(*(void *)(a1 + 288) + 8 * jj + 8);
      *(_WORD *)uint64_t v4 = 482;
      unsigned int v97 = *(_DWORD *)(v96 + 20);
      v4[2] = v97;
      if (v97 > 0x7F) {
        v98 = sub_188A9CC(v97, v4 + 2);
      }
      else {
        v98 = v4 + 3;
      }
      uint64_t v4 = sub_1428E08(v96, (unint64_t)v98, a3);
    }
  }
  if ((v6 & 0x4000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v99 = *(unsigned char *)(a1 + 387);
    *(_WORD *)uint64_t v4 = 488;
    v4[2] = v99;
    v4 += 3;
    if ((v6 & 0x8000) == 0)
    {
LABEL_195:
      if ((v6 & 0x200) == 0) {
        goto LABEL_209;
      }
      goto LABEL_203;
    }
  }
  else if ((v6 & 0x8000) == 0)
  {
    goto LABEL_195;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v100 = *(unsigned char *)(a1 + 388);
  *(_WORD *)uint64_t v4 = 496;
  v4[2] = v100;
  v4 += 3;
  if ((v6 & 0x200) != 0)
  {
LABEL_203:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v101 = *(void *)(a1 + 368);
    *(_WORD *)uint64_t v4 = 506;
    unsigned int v102 = *(_DWORD *)(v101 + 20);
    v4[2] = v102;
    if (v102 > 0x7F) {
      v103 = sub_188A9CC(v102, v4 + 2);
    }
    else {
      v103 = v4 + 3;
    }
    uint64_t v4 = sub_142944C(v101, (unint64_t)v103, a3);
  }
LABEL_209:
  uint64_t v104 = *(void *)(a1 + 8);
  if ((v104 & 1) == 0) {
    return v4;
  }
  unint64_t v106 = v104 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v106 + 31) < 0)
  {
    v107 = *(void **)(v106 + 8);
    uint64_t v108 = *(void *)(v106 + 16);
  }
  else
  {
    v107 = (void *)(v106 + 8);
    LODWORD(v108) = *(unsigned __int8 *)(v106 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v108)
  {
    uint64_t v109 = (int)v108;
    memcpy(v4, v107, (int)v108);
    v4 += v109;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v107, v108, v4);
}

uint64_t sub_142CCF8(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v3 = *(void *)(a1 + 296) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
    uint64_t v5 = *(void *)(v3 + 8);
    if ((v4 & 0x80u) == 0) {
      uint64_t v5 = v4;
    }
    uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v6 = *(int *)(a1 + 32);
  uint64_t v7 = v2 + v6;
  uint64_t v8 = *(void *)(a1 + 40);
  if (v8) {
    uint64_t v9 = (uint64_t *)(v8 + 8);
  }
  else {
    uint64_t v9 = 0;
  }
  if (v6)
  {
    uint64_t v10 = 8 * v6;
    do
    {
      uint64_t v11 = *v9++;
      uint64_t v12 = sub_1425640(v11);
      v7 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6);
      v10 -= 8;
    }
    while (v10);
  }
  uint64_t v13 = *(int *)(a1 + 56);
  uint64_t v14 = v7 + v13;
  uint64_t v15 = *(void *)(a1 + 64);
  if (v15) {
    unsigned int v16 = (uint64_t *)(v15 + 8);
  }
  else {
    unsigned int v16 = 0;
  }
  if (v13)
  {
    uint64_t v17 = 8 * v13;
    do
    {
      uint64_t v18 = *v16++;
      uint64_t v19 = sub_14268D0(v18);
      v14 += v19 + ((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6);
      v17 -= 8;
    }
    while (v17);
  }
  uint64_t v20 = *(int *)(a1 + 80);
  uint64_t v21 = v14 + v20;
  uint64_t v22 = *(void *)(a1 + 88);
  if (v22) {
    uint64_t v23 = (uint64_t *)(v22 + 8);
  }
  else {
    uint64_t v23 = 0;
  }
  if (v20)
  {
    uint64_t v24 = 8 * v20;
    do
    {
      uint64_t v25 = *v23++;
      uint64_t v26 = sub_1427C8C(v25);
      v21 += v26 + ((9 * (__clz(v26 | 1) ^ 0x1F) + 73) >> 6);
      v24 -= 8;
    }
    while (v24);
  }
  uint64_t v27 = *(unsigned int *)(a1 + 96);
  if (v27)
  {
    uint64_t v28 = 0;
    int v29 = 0;
    do
    {
      int v30 = *(_DWORD *)(*(void *)(a1 + 104) + 4 * v29);
      if (v30 < 0) {
        uint64_t v31 = 10;
      }
      else {
        uint64_t v31 = (9 * (__clz(v30 | 1) ^ 0x1F) + 73) >> 6;
      }
      v28 += v31;
      ++v29;
    }
    while (v27 != v29);
  }
  else
  {
    uint64_t v28 = 0;
  }
  uint64_t v32 = *(unsigned int *)(a1 + 112);
  if (v32)
  {
    int v33 = 0;
    uint64_t v34 = 0;
    do
    {
      int v35 = *(_DWORD *)(*(void *)(a1 + 120) + 4 * v33);
      if (v35 < 0) {
        uint64_t v36 = 10;
      }
      else {
        uint64_t v36 = (9 * (__clz(v35 | 1) ^ 0x1F) + 73) >> 6;
      }
      v34 += v36;
      ++v33;
    }
    while (v32 != v33);
  }
  else
  {
    uint64_t v34 = 0;
  }
  uint64_t v37 = *(int *)(a1 + 136);
  uint64_t v38 = v21 + v27 + v28 + v32 + v34 + 2 * v37;
  uint64_t v39 = *(void *)(a1 + 144);
  if (v39) {
    unint64_t v40 = (uint64_t *)(v39 + 8);
  }
  else {
    unint64_t v40 = 0;
  }
  if (v37)
  {
    uint64_t v41 = 8 * v37;
    do
    {
      uint64_t v42 = *v40++;
      uint64_t v43 = sub_142DC20(v42);
      v38 += v43 + ((9 * (__clz(v43 | 1) ^ 0x1F) + 73) >> 6);
      v41 -= 8;
    }
    while (v41);
  }
  uint64_t v44 = *(unsigned int *)(a1 + 160);
  uint64_t v45 = v38 + 2 * v44;
  if ((int)v44 >= 1)
  {
    v46 = (uint64_t *)(*(void *)(a1 + 168) + 8);
    do
    {
      uint64_t v47 = *v46++;
      uint64_t v48 = *(unsigned __int8 *)(v47 + 23);
      uint64_t v49 = *(void *)(v47 + 8);
      if ((v48 & 0x80u) == 0) {
        uint64_t v49 = v48;
      }
      v45 += v49 + ((9 * (__clz(v49 | 1) ^ 0x1F) + 73) >> 6);
      --v44;
    }
    while (v44);
  }
  uint64_t v50 = *(unsigned int *)(a1 + 184);
  uint64_t v51 = v45 + 2 * v50;
  if ((int)v50 >= 1)
  {
    uint64_t v52 = (uint64_t *)(*(void *)(a1 + 192) + 8);
    do
    {
      uint64_t v53 = *v52++;
      uint64_t v54 = *(unsigned __int8 *)(v53 + 23);
      uint64_t v55 = *(void *)(v53 + 8);
      if ((v54 & 0x80u) == 0) {
        uint64_t v55 = v54;
      }
      v51 += v55 + ((9 * (__clz(v55 | 1) ^ 0x1F) + 73) >> 6);
      --v50;
    }
    while (v50);
  }
  uint64_t v56 = *(unsigned int *)(a1 + 208);
  uint64_t v57 = v51 + 2 * v56;
  if ((int)v56 >= 1)
  {
    unsigned int v58 = (uint64_t *)(*(void *)(a1 + 216) + 8);
    do
    {
      uint64_t v59 = *v58++;
      uint64_t v60 = *(unsigned __int8 *)(v59 + 23);
      uint64_t v61 = *(void *)(v59 + 8);
      if ((v60 & 0x80u) == 0) {
        uint64_t v61 = v60;
      }
      v57 += v61 + ((9 * (__clz(v61 | 1) ^ 0x1F) + 73) >> 6);
      --v56;
    }
    while (v56);
  }
  uint64_t v62 = *(unsigned int *)(a1 + 232);
  uint64_t v63 = v57 + 2 * v62;
  if ((int)v62 >= 1)
  {
    int64_t v64 = (uint64_t *)(*(void *)(a1 + 240) + 8);
    do
    {
      uint64_t v65 = *v64++;
      uint64_t v66 = *(unsigned __int8 *)(v65 + 23);
      uint64_t v67 = *(void *)(v65 + 8);
      if ((v66 & 0x80u) == 0) {
        uint64_t v67 = v66;
      }
      v63 += v67 + ((9 * (__clz(v67 | 1) ^ 0x1F) + 73) >> 6);
      --v62;
    }
    while (v62);
  }
  uint64_t v68 = *(unsigned int *)(a1 + 256);
  uint64_t v69 = v63 + 2 * v68;
  if ((int)v68 >= 1)
  {
    v70 = (uint64_t *)(*(void *)(a1 + 264) + 8);
    do
    {
      uint64_t v71 = *v70++;
      uint64_t v72 = *(unsigned __int8 *)(v71 + 23);
      uint64_t v73 = *(void *)(v71 + 8);
      if ((v72 & 0x80u) == 0) {
        uint64_t v73 = v72;
      }
      v69 += v73 + ((9 * (__clz(v73 | 1) ^ 0x1F) + 73) >> 6);
      --v68;
    }
    while (v68);
  }
  uint64_t v74 = *(int *)(a1 + 280);
  uint64_t v75 = v69 + 2 * v74;
  uint64_t v76 = *(void *)(a1 + 288);
  if (v76) {
    int64_t v77 = (uint64_t *)(v76 + 8);
  }
  else {
    int64_t v77 = 0;
  }
  if (v74)
  {
    uint64_t v78 = 8 * v74;
    do
    {
      uint64_t v79 = *v77++;
      uint64_t v80 = sub_1428F94(v79);
      v75 += v80 + ((9 * (__clz(v80 | 1) ^ 0x1F) + 73) >> 6);
      v78 -= 8;
    }
    while (v78);
  }
  int v81 = *(_DWORD *)(a1 + 16);
  if ((v81 & 0xFE) == 0) {
    goto LABEL_86;
  }
  if ((v81 & 2) != 0)
  {
    unint64_t v86 = *(void *)(a1 + 304) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v87 = *(unsigned __int8 *)(v86 + 23);
    uint64_t v88 = *(void *)(v86 + 8);
    if ((v87 & 0x80u) == 0) {
      uint64_t v88 = v87;
    }
    v75 += v88 + ((9 * (__clz(v88 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v81 & 4) == 0)
    {
LABEL_80:
      if ((v81 & 8) == 0) {
        goto LABEL_81;
      }
      goto LABEL_108;
    }
  }
  else if ((v81 & 4) == 0)
  {
    goto LABEL_80;
  }
  uint64_t v89 = sub_1429B00(*(void *)(a1 + 312));
  v75 += v89 + ((9 * (__clz(v89 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v81 & 8) == 0)
  {
LABEL_81:
    if ((v81 & 0x10) == 0) {
      goto LABEL_82;
    }
    goto LABEL_109;
  }
LABEL_108:
  uint64_t v90 = sub_14240E8(*(void *)(a1 + 320));
  v75 += v90 + ((9 * (__clz(v90 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v81 & 0x10) == 0)
  {
LABEL_82:
    if ((v81 & 0x20) == 0) {
      goto LABEL_83;
    }
LABEL_110:
    uint64_t v92 = sub_1448528(*(void *)(a1 + 336));
    v75 += v92 + ((9 * (__clz(v92 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v81 & 0x40) == 0)
    {
LABEL_84:
      if ((v81 & 0x80) == 0) {
        goto LABEL_86;
      }
      goto LABEL_85;
    }
    goto LABEL_111;
  }
LABEL_109:
  uint64_t v91 = sub_142E9F8(*(void *)(a1 + 328));
  v75 += v91 + ((9 * (__clz(v91 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v81 & 0x20) != 0) {
    goto LABEL_110;
  }
LABEL_83:
  if ((v81 & 0x40) == 0) {
    goto LABEL_84;
  }
LABEL_111:
  uint64_t v93 = sub_142F114(*(void *)(a1 + 344));
  v75 += v93 + ((9 * (__clz(v93 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v81 & 0x80) != 0)
  {
LABEL_85:
    uint64_t v82 = sub_142F830(*(void *)(a1 + 352));
    v75 += v82 + ((9 * (__clz(v82 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
LABEL_86:
  if ((v81 & 0xFF00) == 0) {
    goto LABEL_102;
  }
  if ((v81 & 0x100) == 0)
  {
    if ((v81 & 0x200) == 0) {
      goto LABEL_89;
    }
LABEL_114:
    uint64_t v95 = *(void *)(a1 + 368);
    uint64_t v96 = 2 * (*(_DWORD *)(v95 + 16) & 1);
    uint64_t v97 = *(void *)(v95 + 8);
    if (v97)
    {
      unint64_t v100 = v97 & 0xFFFFFFFFFFFFFFFCLL;
      if (*(char *)(v100 + 31) < 0) {
        uint64_t v101 = *(void *)(v100 + 16);
      }
      else {
        uint64_t v101 = *(unsigned __int8 *)(v100 + 31);
      }
      v96 += v101;
    }
    *(_DWORD *)(v95 + 20) = v96;
    v75 += v96 + ((9 * (__clz(v96 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v81 & 0x400) == 0) {
      goto LABEL_91;
    }
    goto LABEL_90;
  }
  uint64_t v94 = sub_142FF4C(*(void *)(a1 + 360));
  v75 += v94 + ((9 * (__clz(v94 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v81 & 0x200) != 0) {
    goto LABEL_114;
  }
LABEL_89:
  if ((v81 & 0x400) != 0) {
LABEL_90:
  }
    v75 += ((9 * (__clz(*(void *)(a1 + 376) | 1) ^ 0x3F) + 73) >> 6) + 1;
LABEL_91:
  uint64_t v83 = v75 + 2;
  if ((v81 & 0x800) == 0) {
    uint64_t v83 = v75;
  }
  if ((v81 & 0x1000) != 0) {
    v83 += 3;
  }
  if ((v81 & 0x2000) != 0) {
    v83 += 3;
  }
  if ((v81 & 0x4000) != 0) {
    v83 += 3;
  }
  if ((v81 & 0x8000) != 0) {
    uint64_t v75 = v83 + 3;
  }
  else {
    uint64_t v75 = v83;
  }
LABEL_102:
  uint64_t v84 = *(void *)(a1 + 8);
  if (v84)
  {
    unint64_t v98 = v84 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v98 + 31) < 0) {
      uint64_t v99 = *(void *)(v98 + 16);
    }
    else {
      uint64_t v99 = *(unsigned __int8 *)(v98 + 31);
    }
    v75 += v99;
  }
  *(_DWORD *)(a1 + 20) = v75;
  return v75;
}

std::string *sub_142D430(std::string *result, uint64_t a2)
{
  if ((std::string *)a2 != result)
  {
    uint64_t v4 = result;
    sub_13F4F74((uint64_t)result);
    return sub_13F5CD0(v4, a2);
  }
  return result;
}

uint64_t sub_142D47C(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 8);
  if ((int)v1 >= 1)
  {
    do
    {
      uint64_t v2 = v1--;
      uint64_t v3 = *(void *)(*(void *)(a1 + 16) + 8 * v1 + 8);
      uint64_t v4 = *(unsigned int *)(v3 + 32);
      uint64_t v5 = *(void *)(v3 + 40);
      while ((int)v4 >= 1)
      {
        uint64_t v6 = *(void *)(v5 + 8 * v4--);
        if ((*(unsigned char *)(v6 + 16) & 1) == 0) {
          return 0;
        }
      }
    }
    while (v2 >= 2);
  }
  return 1;
}

double sub_142D4D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a2 + 8) = v2;
  LODWORD(v2) = *(_DWORD *)(a1 + 16);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a2 + 16) = v2;
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = v4;
  uint64_t v5 = *(void *)(a1 + 40);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = v5;
  uint64_t v6 = *(void *)(a1 + 48);
  uint64_t v7 = *(void *)(a1 + 56);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(void *)(a2 + 48) = v6;
  *(void *)(a2 + 56) = v7;
  uint64_t v8 = *(void *)(a1 + 64);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a2 + 64) = v8;
  uint64_t v9 = *(void *)(a1 + 72);
  uint64_t v10 = *(void *)(a1 + 80);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(void *)(a2 + 72) = v9;
  *(void *)(a2 + 80) = v10;
  uint64_t v11 = *(void *)(a1 + 88);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a2 + 88) = v11;
  uint64_t v12 = *(void *)(a1 + 96);
  uint64_t v13 = *(void *)(a1 + 104);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(void *)(a2 + 96) = v12;
  *(void *)(a2 + 104) = v13;
  uint64_t v14 = *(void *)(a1 + 112);
  uint64_t v15 = *(void *)(a1 + 120);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(void *)(a2 + 112) = v14;
  *(void *)(a2 + 120) = v15;
  uint64_t v16 = *(void *)(a1 + 128);
  uint64_t v17 = *(void *)(a1 + 136);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(void *)(a2 + 128) = v16;
  *(void *)(a2 + 136) = v17;
  uint64_t v18 = *(void *)(a1 + 144);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a2 + 144) = v18;
  uint64_t v19 = *(void *)(a1 + 152);
  uint64_t v20 = *(void *)(a1 + 160);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(void *)(a2 + 152) = v19;
  *(void *)(a2 + 160) = v20;
  uint64_t v21 = *(void *)(a1 + 168);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a2 + 168) = v21;
  uint64_t v22 = *(void *)(a1 + 176);
  uint64_t v23 = *(void *)(a1 + 184);
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(void *)(a2 + 176) = v22;
  *(void *)(a2 + 184) = v23;
  uint64_t v24 = *(void *)(a1 + 192);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a2 + 192) = v24;
  uint64_t v25 = *(void *)(a1 + 200);
  uint64_t v26 = *(void *)(a1 + 208);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(void *)(a2 + 200) = v25;
  *(void *)(a2 + 208) = v26;
  uint64_t v27 = *(void *)(a1 + 216);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(void *)(a2 + 216) = v27;
  uint64_t v28 = *(void *)(a1 + 224);
  uint64_t v29 = *(void *)(a1 + 232);
  *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
  *(void *)(a2 + 224) = v28;
  *(void *)(a2 + 232) = v29;
  uint64_t v30 = *(void *)(a1 + 240);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  *(void *)(a2 + 240) = v30;
  uint64_t v31 = *(void *)(a1 + 248);
  uint64_t v32 = *(void *)(a1 + 256);
  *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
  *(void *)(a2 + 248) = v31;
  *(void *)(a2 + 256) = v32;
  uint64_t v33 = *(void *)(a1 + 264);
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  *(void *)(a2 + 264) = v33;
  uint64_t v34 = *(void *)(a1 + 272);
  uint64_t v35 = *(void *)(a1 + 280);
  *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
  *(void *)(a2 + 272) = v34;
  *(void *)(a2 + 280) = v35;
  uint64_t v36 = *(void *)(a1 + 288);
  *(void *)(a1 + 288) = *(void *)(a2 + 288);
  *(void *)(a2 + 288) = v36;
  uint64_t v37 = *(void *)(a2 + 296);
  *(void *)(a2 + 296) = *(void *)(a1 + 296);
  *(void *)(a1 + 296) = v37;
  uint64_t v38 = *(void *)(a2 + 304);
  *(void *)(a2 + 304) = *(void *)(a1 + 304);
  *(void *)(a1 + 304) = v38;
  *(void *)&double result = sub_12634E8((uint64_t *)(a1 + 312), a2 + 312).n128_u64[0];
  return result;
}

void *sub_142D684@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gemini.Taxonomy.Category");
}

uint64_t sub_142D694(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  sub_149097C((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_142D740(uint64_t a1)
{
  sub_142D694(a1);

  operator delete();
}

uint64_t sub_142D778(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      double result = sub_142DF38(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  if (*(unsigned char *)(v1 + 16))
  {
    unint64_t v5 = *(void *)(v1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v5 + 23) < 0)
    {
      **(unsigned char **)unint64_t v5 = 0;
      *(void *)(v5 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v5 = 0;
      *(unsigned char *)(v5 + 23) = 0;
    }
  }
  char v7 = *(unsigned char *)(v1 + 8);
  uint64_t v6 = v1 + 8;
  *(_DWORD *)(v6 + 8) = 0;
  if (v7)
  {
    return sub_188B4AC((uint64_t *)v6);
  }
  return result;
}

uint64_t sub_142D828(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v24 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v24, a3[11].i32[1])) {
    return *(void *)v24;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    char v7 = (char *)(*(void *)v24 + 1);
    unsigned int v8 = **(unsigned char **)v24;
    if ((char)**(unsigned char **)v24 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        char v7 = (char *)sub_188C180(*(uint64_t *)v24, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        char v7 = (char *)(*(void *)v24 + 2);
      }
    }
    *(void *)uint64_t v24 = v7;
    if (v8 >> 3 == 2) {
      break;
    }
    if (v8 >> 3 != 1 || v8 != 10) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v21 = *(void *)(a1 + 8);
    uint64_t v22 = (uint64_t *)(v21 & 0xFFFFFFFFFFFFFFFCLL);
    if (v21) {
      uint64_t v22 = (uint64_t *)*v22;
    }
    uint64_t v23 = (std::string *)sub_1880F84((void *)(a1 + 48), v22);
    uint64_t v14 = (void *)sub_188C244(v23, *(char **)v24, (uint64_t)a3);
LABEL_33:
    *(void *)uint64_t v24 = v14;
    if (!v14) {
      goto LABEL_39;
    }
LABEL_34:
    if (sub_11947B8((uint64_t)a3, (char **)v24, a3[11].i32[1])) {
      return *(void *)v24;
    }
  }
  if (v8 == 18)
  {
    uint64_t v15 = v7 - 1;
    while (1)
    {
      uint64_t v16 = (unsigned __int8 *)(v15 + 1);
      *(void *)uint64_t v24 = v15 + 1;
      uint64_t v17 = *(_DWORD **)(a1 + 40);
      if (v17 && (uint64_t v18 = *(int *)(a1 + 32), (int)v18 < *v17))
      {
        *(_DWORD *)(a1 + 32) = v18 + 1;
        uint64_t v19 = *(void *)&v17[2 * v18 + 2];
      }
      else
      {
        uint64_t v20 = sub_144B940(*(void *)(a1 + 24));
        uint64_t v19 = sub_188CDC8(a1 + 24, v20);
        uint64_t v16 = *(unsigned __int8 **)v24;
      }
      uint64_t v15 = (char *)sub_142DA28(a3, v19, v16);
      *(void *)uint64_t v24 = v15;
      if (!v15) {
        goto LABEL_39;
      }
      if (*(void *)a3 <= (unint64_t)v15 || *v15 != 18) {
        goto LABEL_34;
      }
    }
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      char v7 = *(char **)v24;
    }
    uint64_t v14 = sub_1885AC0(v8, v13, v7, a3);
    goto LABEL_33;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v24;
  }
LABEL_39:
  *(void *)uint64_t v24 = 0;
  return *(void *)v24;
}

uint64_t sub_142DA28(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_142DF80(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_142DAB8(uint64_t a1, unsigned char *__dst, void *a3)
{
  uint64_t v4 = __dst;
  if (*(unsigned char *)(a1 + 16)) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  int v6 = *(_DWORD *)(a1 + 32);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      unsigned char *v4 = 18;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      v4[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, v4 + 1);
      }
      else {
        unsigned int v10 = v4 + 2;
      }
      uint64_t v4 = sub_142E16C(v8, v10, a3);
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return v4;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    uint64_t v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    uint64_t v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*a3 - (void)v4 >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(v4, v14, (int)v15);
    v4 += v16;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v14, v15, v4);
}

uint64_t sub_142DC20(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_142E270(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v8 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v9 = *(unsigned __int8 *)(v8 + 23);
    uint64_t v10 = *(void *)(v8 + 8);
    if ((v9 & 0x80u) == 0) {
      uint64_t v10 = v9;
    }
    v2 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v13 + 31) < 0) {
      uint64_t v14 = *(void *)(v13 + 16);
    }
    else {
      uint64_t v14 = *(unsigned __int8 *)(v13 + 31);
    }
    v2 += v14;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_142DD18(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = (std::string *)sub_14925A0((uint64_t *)&v3[1], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2]- LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    unint64_t v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *unint64_t v8 = v7;
    }
  }
  if (*(unsigned char *)(a2 + 16))
  {
    uint64_t v9 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
    std::string::size_type size = v3->__r_.__value_.__l.__size_;
    uint64_t v11 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
    if (size) {
      uint64_t v11 = (uint64_t *)*v11;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[2], v9, v11);
  }
  uint64_t v12 = *(void *)(a2 + 8);
  if (v12)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v12 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

BOOL sub_142DE20(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 32);
  do
  {
    int v2 = v1;
    if ((int)v1 < 1) {
      break;
    }
    uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8 * v1--);
  }
  while ((*(unsigned char *)(v3 + 16) & 1) != 0);
  return v2 < 1;
}

void *sub_142DE50@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gemini.ContainmentCategoryGroup");
}

uint64_t sub_142DE60(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_142DF00(uint64_t a1)
{
  sub_142DE60(a1);

  operator delete();
}

uint64_t sub_142DF38(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v1 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v1 + 23) < 0)
    {
      **(unsigned char **)unint64_t v1 = 0;
      *(void *)(v1 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v1 = 0;
      *(unsigned char *)(v1 + 23) = 0;
    }
  }
  char v3 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(unsigned char *)(result + 24) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v3) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_142DF80(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v24 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v24, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (1)
  {
    unint64_t v8 = (char *)(*(void *)v24 + 1);
    unsigned int v9 = **(unsigned char **)v24;
    if ((char)**(unsigned char **)v24 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unint64_t v8 = (char *)sub_188C180(*(uint64_t *)v24, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unint64_t v8 = (char *)(*(void *)v24 + 2);
      }
    }
    *(void *)uint64_t v24 = v8;
    if (v9 >> 3 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_13;
    }
    v5 |= 2u;
    uint64_t v16 = v8 + 1;
    uint64_t v17 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_24;
    }
    int v18 = *v16;
    uint64_t v17 = v17 + (v18 << 7) - 128;
    if ((v18 & 0x80000000) == 0)
    {
      uint64_t v16 = v8 + 2;
LABEL_24:
      *(void *)uint64_t v24 = v16;
      *(unsigned char *)(a1 + 32) = v17 != 0;
      goto LABEL_29;
    }
    uint64_t v22 = sub_188C138((uint64_t)v8, v17);
    *(void *)uint64_t v24 = v22;
    *(unsigned char *)(a1 + 32) = v23 != 0;
    if (!v22) {
      goto LABEL_36;
    }
LABEL_29:
    if (sub_11947B8((uint64_t)a3, (char **)v24, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 >> 3 == 1 && v9 == 10)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v19 = *(void *)(a1 + 8);
    uint64_t v20 = (uint64_t *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
    if (v19) {
      uint64_t v20 = (uint64_t *)*v20;
    }
    uint64_t v21 = (std::string *)sub_1880F84((void *)(a1 + 24), v20);
    uint64_t v15 = (void *)sub_188C244(v21, *(char **)v24, (uint64_t)a3);
LABEL_28:
    *(void *)uint64_t v24 = v15;
    if (!v15) {
      goto LABEL_36;
    }
    goto LABEL_29;
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      uint64_t v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unint64_t v8 = *(char **)v24;
    }
    uint64_t v15 = sub_1885AC0(v9, v14, v8, a3);
    goto LABEL_28;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_36:
  *(void *)uint64_t v24 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return *(void *)v24;
}

unsigned char *sub_142E16C(uint64_t a1, unsigned char *__dst, void *a3)
{
  int v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    int v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v7 = *(unsigned char *)(a1 + 32);
    unsigned char *v4 = 16;
    v4[1] = v7;
    v4 += 2;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if ((v8 & 1) == 0) {
    return v4;
  }
  unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v10 + 31) < 0)
  {
    unsigned int v11 = *(void **)(v10 + 8);
    uint64_t v12 = *(void *)(v10 + 16);
  }
  else
  {
    unsigned int v11 = (void *)(v10 + 8);
    LODWORD(v12) = *(unsigned __int8 *)(v10 + 31);
  }
  if (*a3 - (void)v4 >= (int)v12)
  {
    uint64_t v13 = (int)v12;
    memcpy(v4, v11, (int)v12);
    v4 += v13;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v11, v12, v4);
}

uint64_t sub_142E270(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if (v1)
  {
    unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
    uint64_t v5 = *(void *)(v3 + 8);
    if ((v4 & 0x80u) == 0) {
      uint64_t v5 = v4;
    }
    uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  else
  {
    uint64_t v2 = 0;
  }
  if ((v1 & 2) != 0) {
    uint64_t v6 = v2 + 2;
  }
  else {
    uint64_t v6 = v2;
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v9 + 31) < 0) {
      uint64_t v10 = *(void *)(v9 + 16);
    }
    else {
      uint64_t v10 = *(unsigned __int8 *)(v9 + 31);
    }
    v6 += v10;
  }
  *(_DWORD *)(a1 + 20) = v6;
  return v6;
}

std::string *sub_142E300(std::string *result, uint64_t a2)
{
  unint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 3) != 0)
  {
    if (v4)
    {
      uint64_t v5 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      uint64_t v6 = (std::string **)&result[1];
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v8 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v8 = (uint64_t *)*v8;
      }
      uint64_t result = sub_1881DF4(v6, v5, v8);
    }
    if ((v4 & 2) != 0) {
      v3[1].__r_.__value_.__s.__data_[8] = *(unsigned char *)(a2 + 32);
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_142E3B8(uint64_t a1)
{
  return *(_DWORD *)(a1 + 16) & 1;
}

void *sub_142E3C4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gemini.ContainmentCategory");
}

uint64_t sub_142E3D4(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (uint64_t *)(a1 + 8);
  *(void *)a1 = off_24B3C08;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v5 = a1 + 24;
  *(_DWORD *)(a1 + 44) = 0;
  *(void *)(a1 + 28) = 0;
  *(void *)(a1 + 36) = 0;
  *(void *)(a1 + 20) = 0;
  int v6 = *(_DWORD *)(a2 + 32);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 40);
    uint64_t v8 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_188FB98(v5, v8, (const std::string **)(v7 + 8), v6, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v9 = *(_DWORD *)(a1 + 32) + v6;
    *(_DWORD *)(a1 + 32) = v9;
    uint64_t v10 = *(int **)(a1 + 40);
    if (*v10 < v9) {
      *uint64_t v10 = v9;
    }
  }
  uint64_t v11 = *(void *)(a2 + 8);
  if (v11) {
    sub_188B4F8(v4, (v11 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 48) = &qword_2550250;
  if (*(unsigned char *)(a2 + 16))
  {
    uint64_t v12 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v12 = (uint64_t *)*v12;
    }
    sub_1881DF4((std::string **)(a1 + 48), (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL), v12);
  }
  return a1;
}

void sub_142E4F8(_Unwind_Exception *a1)
{
  sub_1889DE8(v3);
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_142E538(uint64_t a1)
{
  unint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  sub_1889DE8((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_142E5E0(uint64_t a1)
{
  sub_142E538(a1);

  operator delete();
}

uint64_t sub_142E618(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v26 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v26, a3[11].i32[1])) {
    return *(void *)v26;
  }
  int v6 = (uint64_t **)(a1 + 24);
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = (char *)(*(void *)v26 + 1);
    unsigned int v9 = **(unsigned char **)v26;
    if ((char)**(unsigned char **)v26 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180(*(uint64_t *)v26, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (char *)(*(void *)v26 + 2);
      }
    }
    *(void *)uint64_t v26 = v8;
    if (v9 >> 3 == 2) {
      break;
    }
    if (v9 >> 3 != 1 || v9 != 10) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v23 = *(void *)(a1 + 8);
    uint64_t v24 = (uint64_t *)(v23 & 0xFFFFFFFFFFFFFFFCLL);
    if (v23) {
      uint64_t v24 = (uint64_t *)*v24;
    }
    uint64_t v25 = (std::string *)sub_1880F84((void *)(a1 + 48), v24);
    uint64_t v15 = (void *)sub_188C244(v25, *(char **)v26, (uint64_t)a3);
LABEL_35:
    *(void *)uint64_t v26 = v15;
    if (!v15) {
      goto LABEL_41;
    }
LABEL_36:
    if (sub_11947B8((uint64_t)a3, (char **)v26, a3[11].i32[1])) {
      return *(void *)v26;
    }
  }
  if (v9 == 18)
  {
    uint64_t v16 = v8 - 1;
    while (1)
    {
      uint64_t v17 = (char *)(v16 + 1);
      *(void *)uint64_t v26 = v16 + 1;
      int v18 = *(_DWORD **)(a1 + 40);
      if (v18 && (uint64_t v19 = *(int *)(a1 + 32), (int)v19 < *v18))
      {
        *(_DWORD *)(a1 + 32) = v19 + 1;
        uint64_t v20 = *(std::string **)&v18[2 * v19 + 2];
      }
      else
      {
        if (!*v6) {
          operator new();
        }
        *uint64_t v22 = v21;
        v22[1] = sub_3A6EDC;
        *uint64_t v21 = 0;
        v21[1] = 0;
        int v21[2] = 0;
        uint64_t v20 = (std::string *)sub_188CDC8(a1 + 24, (uint64_t)v21);
        uint64_t v17 = *(char **)v26;
      }
      uint64_t v16 = sub_188C244(v20, v17, (uint64_t)a3);
      *(void *)uint64_t v26 = v16;
      if (!v16) {
        goto LABEL_41;
      }
      if (*(void *)a3 <= (unint64_t)v16 || *v16 != 18) {
        goto LABEL_36;
      }
    }
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      uint64_t v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = *(char **)v26;
    }
    uint64_t v15 = sub_1885AC0(v9, v14, v8, a3);
    goto LABEL_35;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    return *(void *)v26;
  }
LABEL_41:
  *(void *)uint64_t v26 = 0;
  return *(void *)v26;
}

char *sub_142E86C(uint64_t a1, char *__dst, void *a3)
{
  int v4 = __dst;
  if (*(unsigned char *)(a1 + 16)) {
    int v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  uint64_t v6 = *(unsigned int *)(a1 + 32);
  if ((int)v6 >= 1)
  {
    uint64_t v7 = 0;
    uint64_t v8 = 8 * v6;
    do
    {
      unsigned int v9 = *(void **)(*(void *)(a1 + 40) + v7 + 8);
      if (*((char *)v9 + 23) < 0)
      {
        int64_t v10 = v9[1];
        if (v10 > 127) {
          goto LABEL_14;
        }
      }
      else
      {
        int64_t v10 = *((unsigned __int8 *)v9 + 23);
      }
      if (*a3 - (void)v4 + 14 >= v10)
      {
        char *v4 = 18;
        v4[1] = v10;
        if (*((char *)v9 + 23) < 0) {
          unsigned int v9 = (void *)*v9;
        }
        unsigned int v11 = v4 + 2;
        memcpy(v11, v9, v10);
        int v4 = &v11[v10];
        goto LABEL_12;
      }
LABEL_14:
      int v4 = (char *)sub_188A868(a3, 2, (uint64_t)v9, v4);
LABEL_12:
      v7 += 8;
    }
    while (v8 != v7);
  }
  uint64_t v12 = *(void *)(a1 + 8);
  if ((v12 & 1) == 0) {
    return v4;
  }
  unint64_t v14 = v12 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v14 + 31) < 0)
  {
    uint64_t v15 = *(void **)(v14 + 8);
    uint64_t v16 = *(void *)(v14 + 16);
  }
  else
  {
    uint64_t v15 = (void *)(v14 + 8);
    LODWORD(v16) = *(unsigned __int8 *)(v14 + 31);
  }
  if (*a3 - (void)v4 >= (int)v16)
  {
    uint64_t v17 = (int)v16;
    memcpy(v4, v15, (int)v16);
    v4 += v17;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v15, v16, v4);
}

uint64_t sub_142E9F8(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 32);
  if ((int)v1 < 1)
  {
    uint64_t v3 = *(unsigned int *)(a1 + 32);
  }
  else
  {
    uint64_t v2 = (uint64_t *)(*(void *)(a1 + 40) + 8);
    uint64_t v3 = *(unsigned int *)(a1 + 32);
    do
    {
      uint64_t v4 = *v2++;
      uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
      uint64_t v6 = *(void *)(v4 + 8);
      if ((v5 & 0x80u) == 0) {
        uint64_t v6 = v5;
      }
      v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6);
      --v1;
    }
    while (v1);
  }
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v7 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v8 = *(unsigned __int8 *)(v7 + 23);
    uint64_t v9 = *(void *)(v7 + 8);
    if ((v8 & 0x80u) == 0) {
      uint64_t v9 = v8;
    }
    v3 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v12 + 31) < 0) {
      uint64_t v13 = *(void *)(v12 + 16);
    }
    else {
      uint64_t v13 = *(unsigned __int8 *)(v12 + 31);
    }
    v3 += v13;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

uint64_t sub_142EAD8()
{
  return 1;
}

void *sub_142EAE0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gemini.PhotoCategoryGroup");
}

uint64_t sub_142EAF0(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)a1 = off_24B3C88;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v5 = a1 + 24;
  *(_DWORD *)(a1 + 44) = 0;
  *(void *)(a1 + 28) = 0;
  *(void *)(a1 + 36) = 0;
  *(void *)(a1 + 20) = 0;
  int v6 = *(_DWORD *)(a2 + 32);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 40);
    uint64_t v8 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_188FB98(v5, v8, (const std::string **)(v7 + 8), v6, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v9 = *(_DWORD *)(a1 + 32) + v6;
    *(_DWORD *)(a1 + 32) = v9;
    uint64_t v10 = *(int **)(a1 + 40);
    if (*v10 < v9) {
      *uint64_t v10 = v9;
    }
  }
  uint64_t v11 = *(void *)(a2 + 8);
  if (v11) {
    sub_188B4F8(v4, (v11 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 48) = &qword_2550250;
  if (*(unsigned char *)(a2 + 16))
  {
    unint64_t v12 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      unint64_t v12 = (uint64_t *)*v12;
    }
    sub_1881DF4((std::string **)(a1 + 48), (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL), v12);
  }
  return a1;
}

void sub_142EC14(_Unwind_Exception *a1)
{
  sub_1889DE8(v3);
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_142EC54(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  sub_1889DE8((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_142ECFC(uint64_t a1)
{
  sub_142EC54(a1);

  operator delete();
}

uint64_t sub_142ED34(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v26 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v26, a3[11].i32[1])) {
    return *(void *)v26;
  }
  int v6 = (uint64_t **)(a1 + 24);
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = (char *)(*(void *)v26 + 1);
    unsigned int v9 = **(unsigned char **)v26;
    if ((char)**(unsigned char **)v26 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180(*(uint64_t *)v26, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (char *)(*(void *)v26 + 2);
      }
    }
    *(void *)uint64_t v26 = v8;
    if (v9 >> 3 == 2) {
      break;
    }
    if (v9 >> 3 != 1 || v9 != 10) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v23 = *(void *)(a1 + 8);
    uint64_t v24 = (uint64_t *)(v23 & 0xFFFFFFFFFFFFFFFCLL);
    if (v23) {
      uint64_t v24 = (uint64_t *)*v24;
    }
    uint64_t v25 = (std::string *)sub_1880F84((void *)(a1 + 48), v24);
    uint64_t v15 = (void *)sub_188C244(v25, *(char **)v26, (uint64_t)a3);
LABEL_35:
    *(void *)uint64_t v26 = v15;
    if (!v15) {
      goto LABEL_41;
    }
LABEL_36:
    if (sub_11947B8((uint64_t)a3, (char **)v26, a3[11].i32[1])) {
      return *(void *)v26;
    }
  }
  if (v9 == 18)
  {
    uint64_t v16 = v8 - 1;
    while (1)
    {
      uint64_t v17 = (char *)(v16 + 1);
      *(void *)uint64_t v26 = v16 + 1;
      int v18 = *(_DWORD **)(a1 + 40);
      if (v18 && (uint64_t v19 = *(int *)(a1 + 32), (int)v19 < *v18))
      {
        *(_DWORD *)(a1 + 32) = v19 + 1;
        uint64_t v20 = *(std::string **)&v18[2 * v19 + 2];
      }
      else
      {
        if (!*v6) {
          operator new();
        }
        *uint64_t v22 = v21;
        v22[1] = sub_3A6EDC;
        *uint64_t v21 = 0;
        v21[1] = 0;
        int v21[2] = 0;
        uint64_t v20 = (std::string *)sub_188CDC8(a1 + 24, (uint64_t)v21);
        uint64_t v17 = *(char **)v26;
      }
      uint64_t v16 = sub_188C244(v20, v17, (uint64_t)a3);
      *(void *)uint64_t v26 = v16;
      if (!v16) {
        goto LABEL_41;
      }
      if (*(void *)a3 <= (unint64_t)v16 || *v16 != 18) {
        goto LABEL_36;
      }
    }
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      unint64_t v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = *(char **)v26;
    }
    uint64_t v15 = sub_1885AC0(v9, v14, v8, a3);
    goto LABEL_35;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    return *(void *)v26;
  }
LABEL_41:
  *(void *)uint64_t v26 = 0;
  return *(void *)v26;
}

char *sub_142EF88(uint64_t a1, char *__dst, void *a3)
{
  uint64_t v4 = __dst;
  if (*(unsigned char *)(a1 + 16)) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  uint64_t v6 = *(unsigned int *)(a1 + 32);
  if ((int)v6 >= 1)
  {
    uint64_t v7 = 0;
    uint64_t v8 = 8 * v6;
    do
    {
      unsigned int v9 = *(void **)(*(void *)(a1 + 40) + v7 + 8);
      if (*((char *)v9 + 23) < 0)
      {
        int64_t v10 = v9[1];
        if (v10 > 127) {
          goto LABEL_14;
        }
      }
      else
      {
        int64_t v10 = *((unsigned __int8 *)v9 + 23);
      }
      if (*a3 - (void)v4 + 14 >= v10)
      {
        char *v4 = 18;
        v4[1] = v10;
        if (*((char *)v9 + 23) < 0) {
          unsigned int v9 = (void *)*v9;
        }
        unsigned int v11 = v4 + 2;
        memcpy(v11, v9, v10);
        uint64_t v4 = &v11[v10];
        goto LABEL_12;
      }
LABEL_14:
      uint64_t v4 = (char *)sub_188A868(a3, 2, (uint64_t)v9, v4);
LABEL_12:
      v7 += 8;
    }
    while (v8 != v7);
  }
  uint64_t v12 = *(void *)(a1 + 8);
  if ((v12 & 1) == 0) {
    return v4;
  }
  unint64_t v14 = v12 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v14 + 31) < 0)
  {
    uint64_t v15 = *(void **)(v14 + 8);
    uint64_t v16 = *(void *)(v14 + 16);
  }
  else
  {
    uint64_t v15 = (void *)(v14 + 8);
    LODWORD(v16) = *(unsigned __int8 *)(v14 + 31);
  }
  if (*a3 - (void)v4 >= (int)v16)
  {
    uint64_t v17 = (int)v16;
    memcpy(v4, v15, (int)v16);
    v4 += v17;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v15, v16, v4);
}

uint64_t sub_142F114(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 32);
  if ((int)v1 < 1)
  {
    uint64_t v3 = *(unsigned int *)(a1 + 32);
  }
  else
  {
    uint64_t v2 = (uint64_t *)(*(void *)(a1 + 40) + 8);
    uint64_t v3 = *(unsigned int *)(a1 + 32);
    do
    {
      uint64_t v4 = *v2++;
      uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
      uint64_t v6 = *(void *)(v4 + 8);
      if ((v5 & 0x80u) == 0) {
        uint64_t v6 = v5;
      }
      v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6);
      --v1;
    }
    while (v1);
  }
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v7 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v8 = *(unsigned __int8 *)(v7 + 23);
    uint64_t v9 = *(void *)(v7 + 8);
    if ((v8 & 0x80u) == 0) {
      uint64_t v9 = v8;
    }
    v3 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v12 + 31) < 0) {
      uint64_t v13 = *(void *)(v12 + 16);
    }
    else {
      uint64_t v13 = *(unsigned __int8 *)(v12 + 31);
    }
    v3 += v13;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

uint64_t sub_142F1F4()
{
  return 1;
}

void *sub_142F1FC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gemini.ModuleCategoryGroup");
}

uint64_t sub_142F20C(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)a1 = off_24B3D08;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v5 = a1 + 24;
  *(_DWORD *)(a1 + 44) = 0;
  *(void *)(a1 + 28) = 0;
  *(void *)(a1 + 36) = 0;
  *(void *)(a1 + 20) = 0;
  int v6 = *(_DWORD *)(a2 + 32);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 40);
    uint64_t v8 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_188FB98(v5, v8, (const std::string **)(v7 + 8), v6, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v9 = *(_DWORD *)(a1 + 32) + v6;
    *(_DWORD *)(a1 + 32) = v9;
    uint64_t v10 = *(int **)(a1 + 40);
    if (*v10 < v9) {
      *uint64_t v10 = v9;
    }
  }
  uint64_t v11 = *(void *)(a2 + 8);
  if (v11) {
    sub_188B4F8(v4, (v11 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 48) = &qword_2550250;
  if (*(unsigned char *)(a2 + 16))
  {
    unint64_t v12 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      unint64_t v12 = (uint64_t *)*v12;
    }
    sub_1881DF4((std::string **)(a1 + 48), (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL), v12);
  }
  return a1;
}

void sub_142F330(_Unwind_Exception *a1)
{
  sub_1889DE8(v3);
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_142F370(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  sub_1889DE8((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_142F418(uint64_t a1)
{
  sub_142F370(a1);

  operator delete();
}

uint64_t sub_142F450(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v26 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v26, a3[11].i32[1])) {
    return *(void *)v26;
  }
  int v6 = (uint64_t **)(a1 + 24);
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = (char *)(*(void *)v26 + 1);
    unsigned int v9 = **(unsigned char **)v26;
    if ((char)**(unsigned char **)v26 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180(*(uint64_t *)v26, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (char *)(*(void *)v26 + 2);
      }
    }
    *(void *)uint64_t v26 = v8;
    if (v9 >> 3 == 2) {
      break;
    }
    if (v9 >> 3 != 1 || v9 != 10) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v23 = *(void *)(a1 + 8);
    uint64_t v24 = (uint64_t *)(v23 & 0xFFFFFFFFFFFFFFFCLL);
    if (v23) {
      uint64_t v24 = (uint64_t *)*v24;
    }
    uint64_t v25 = (std::string *)sub_1880F84((void *)(a1 + 48), v24);
    uint64_t v15 = (void *)sub_188C244(v25, *(char **)v26, (uint64_t)a3);
LABEL_35:
    *(void *)uint64_t v26 = v15;
    if (!v15) {
      goto LABEL_41;
    }
LABEL_36:
    if (sub_11947B8((uint64_t)a3, (char **)v26, a3[11].i32[1])) {
      return *(void *)v26;
    }
  }
  if (v9 == 18)
  {
    uint64_t v16 = v8 - 1;
    while (1)
    {
      uint64_t v17 = (char *)(v16 + 1);
      *(void *)uint64_t v26 = v16 + 1;
      int v18 = *(_DWORD **)(a1 + 40);
      if (v18 && (uint64_t v19 = *(int *)(a1 + 32), (int)v19 < *v18))
      {
        *(_DWORD *)(a1 + 32) = v19 + 1;
        uint64_t v20 = *(std::string **)&v18[2 * v19 + 2];
      }
      else
      {
        if (!*v6) {
          operator new();
        }
        *uint64_t v22 = v21;
        v22[1] = sub_3A6EDC;
        *uint64_t v21 = 0;
        v21[1] = 0;
        int v21[2] = 0;
        uint64_t v20 = (std::string *)sub_188CDC8(a1 + 24, (uint64_t)v21);
        uint64_t v17 = *(char **)v26;
      }
      uint64_t v16 = sub_188C244(v20, v17, (uint64_t)a3);
      *(void *)uint64_t v26 = v16;
      if (!v16) {
        goto LABEL_41;
      }
      if (*(void *)a3 <= (unint64_t)v16 || *v16 != 18) {
        goto LABEL_36;
      }
    }
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      unint64_t v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = *(char **)v26;
    }
    uint64_t v15 = sub_1885AC0(v9, v14, v8, a3);
    goto LABEL_35;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    return *(void *)v26;
  }
LABEL_41:
  *(void *)uint64_t v26 = 0;
  return *(void *)v26;
}

char *sub_142F6A4(uint64_t a1, char *__dst, void *a3)
{
  uint64_t v4 = __dst;
  if (*(unsigned char *)(a1 + 16)) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  uint64_t v6 = *(unsigned int *)(a1 + 32);
  if ((int)v6 >= 1)
  {
    uint64_t v7 = 0;
    uint64_t v8 = 8 * v6;
    do
    {
      unsigned int v9 = *(void **)(*(void *)(a1 + 40) + v7 + 8);
      if (*((char *)v9 + 23) < 0)
      {
        int64_t v10 = v9[1];
        if (v10 > 127) {
          goto LABEL_14;
        }
      }
      else
      {
        int64_t v10 = *((unsigned __int8 *)v9 + 23);
      }
      if (*a3 - (void)v4 + 14 >= v10)
      {
        char *v4 = 18;
        v4[1] = v10;
        if (*((char *)v9 + 23) < 0) {
          unsigned int v9 = (void *)*v9;
        }
        unsigned int v11 = v4 + 2;
        memcpy(v11, v9, v10);
        uint64_t v4 = &v11[v10];
        goto LABEL_12;
      }
LABEL_14:
      uint64_t v4 = (char *)sub_188A868(a3, 2, (uint64_t)v9, v4);
LABEL_12:
      v7 += 8;
    }
    while (v8 != v7);
  }
  uint64_t v12 = *(void *)(a1 + 8);
  if ((v12 & 1) == 0) {
    return v4;
  }
  unint64_t v14 = v12 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v14 + 31) < 0)
  {
    uint64_t v15 = *(void **)(v14 + 8);
    uint64_t v16 = *(void *)(v14 + 16);
  }
  else
  {
    uint64_t v15 = (void *)(v14 + 8);
    LODWORD(v16) = *(unsigned __int8 *)(v14 + 31);
  }
  if (*a3 - (void)v4 >= (int)v16)
  {
    uint64_t v17 = (int)v16;
    memcpy(v4, v15, (int)v16);
    v4 += v17;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v15, v16, v4);
}

uint64_t sub_142F830(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 32);
  if ((int)v1 < 1)
  {
    uint64_t v3 = *(unsigned int *)(a1 + 32);
  }
  else
  {
    uint64_t v2 = (uint64_t *)(*(void *)(a1 + 40) + 8);
    uint64_t v3 = *(unsigned int *)(a1 + 32);
    do
    {
      uint64_t v4 = *v2++;
      uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
      uint64_t v6 = *(void *)(v4 + 8);
      if ((v5 & 0x80u) == 0) {
        uint64_t v6 = v5;
      }
      v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6);
      --v1;
    }
    while (v1);
  }
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v7 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v8 = *(unsigned __int8 *)(v7 + 23);
    uint64_t v9 = *(void *)(v7 + 8);
    if ((v8 & 0x80u) == 0) {
      uint64_t v9 = v8;
    }
    v3 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v12 + 31) < 0) {
      uint64_t v13 = *(void *)(v12 + 16);
    }
    else {
      uint64_t v13 = *(unsigned __int8 *)(v12 + 31);
    }
    v3 += v13;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

uint64_t sub_142F910()
{
  return 1;
}

void *sub_142F918@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gemini.ActionCategoryGroup");
}

uint64_t sub_142F928(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)a1 = off_24B3D88;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v5 = a1 + 24;
  *(_DWORD *)(a1 + 44) = 0;
  *(void *)(a1 + 28) = 0;
  *(void *)(a1 + 36) = 0;
  *(void *)(a1 + 20) = 0;
  int v6 = *(_DWORD *)(a2 + 32);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 40);
    uint64_t v8 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_188FB98(v5, v8, (const std::string **)(v7 + 8), v6, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v9 = *(_DWORD *)(a1 + 32) + v6;
    *(_DWORD *)(a1 + 32) = v9;
    uint64_t v10 = *(int **)(a1 + 40);
    if (*v10 < v9) {
      *uint64_t v10 = v9;
    }
  }
  uint64_t v11 = *(void *)(a2 + 8);
  if (v11) {
    sub_188B4F8(v4, (v11 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 48) = &qword_2550250;
  if (*(unsigned char *)(a2 + 16))
  {
    unint64_t v12 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      unint64_t v12 = (uint64_t *)*v12;
    }
    sub_1881DF4((std::string **)(a1 + 48), (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL), v12);
  }
  return a1;
}

void sub_142FA4C(_Unwind_Exception *a1)
{
  sub_1889DE8(v3);
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_142FA8C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  sub_1889DE8((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_142FB34(uint64_t a1)
{
  sub_142FA8C(a1);

  operator delete();
}

uint64_t sub_142FB6C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v26 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v26, a3[11].i32[1])) {
    return *(void *)v26;
  }
  int v6 = (uint64_t **)(a1 + 24);
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = (char *)(*(void *)v26 + 1);
    unsigned int v9 = **(unsigned char **)v26;
    if ((char)**(unsigned char **)v26 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180(*(uint64_t *)v26, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (char *)(*(void *)v26 + 2);
      }
    }
    *(void *)uint64_t v26 = v8;
    if (v9 >> 3 == 2) {
      break;
    }
    if (v9 >> 3 != 1 || v9 != 10) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v23 = *(void *)(a1 + 8);
    uint64_t v24 = (uint64_t *)(v23 & 0xFFFFFFFFFFFFFFFCLL);
    if (v23) {
      uint64_t v24 = (uint64_t *)*v24;
    }
    uint64_t v25 = (std::string *)sub_1880F84((void *)(a1 + 48), v24);
    uint64_t v15 = (void *)sub_188C244(v25, *(char **)v26, (uint64_t)a3);
LABEL_35:
    *(void *)uint64_t v26 = v15;
    if (!v15) {
      goto LABEL_41;
    }
LABEL_36:
    if (sub_11947B8((uint64_t)a3, (char **)v26, a3[11].i32[1])) {
      return *(void *)v26;
    }
  }
  if (v9 == 18)
  {
    uint64_t v16 = v8 - 1;
    while (1)
    {
      uint64_t v17 = (char *)(v16 + 1);
      *(void *)uint64_t v26 = v16 + 1;
      int v18 = *(_DWORD **)(a1 + 40);
      if (v18 && (uint64_t v19 = *(int *)(a1 + 32), (int)v19 < *v18))
      {
        *(_DWORD *)(a1 + 32) = v19 + 1;
        uint64_t v20 = *(std::string **)&v18[2 * v19 + 2];
      }
      else
      {
        if (!*v6) {
          operator new();
        }
        *uint64_t v22 = v21;
        v22[1] = sub_3A6EDC;
        *uint64_t v21 = 0;
        v21[1] = 0;
        int v21[2] = 0;
        uint64_t v20 = (std::string *)sub_188CDC8(a1 + 24, (uint64_t)v21);
        uint64_t v17 = *(char **)v26;
      }
      uint64_t v16 = sub_188C244(v20, v17, (uint64_t)a3);
      *(void *)uint64_t v26 = v16;
      if (!v16) {
        goto LABEL_41;
      }
      if (*(void *)a3 <= (unint64_t)v16 || *v16 != 18) {
        goto LABEL_36;
      }
    }
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      unint64_t v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = *(char **)v26;
    }
    uint64_t v15 = sub_1885AC0(v9, v14, v8, a3);
    goto LABEL_35;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    return *(void *)v26;
  }
LABEL_41:
  *(void *)uint64_t v26 = 0;
  return *(void *)v26;
}

char *sub_142FDC0(uint64_t a1, char *__dst, void *a3)
{
  uint64_t v4 = __dst;
  if (*(unsigned char *)(a1 + 16)) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  uint64_t v6 = *(unsigned int *)(a1 + 32);
  if ((int)v6 >= 1)
  {
    uint64_t v7 = 0;
    uint64_t v8 = 8 * v6;
    do
    {
      unsigned int v9 = *(void **)(*(void *)(a1 + 40) + v7 + 8);
      if (*((char *)v9 + 23) < 0)
      {
        int64_t v10 = v9[1];
        if (v10 > 127) {
          goto LABEL_14;
        }
      }
      else
      {
        int64_t v10 = *((unsigned __int8 *)v9 + 23);
      }
      if (*a3 - (void)v4 + 14 >= v10)
      {
        char *v4 = 18;
        v4[1] = v10;
        if (*((char *)v9 + 23) < 0) {
          unsigned int v9 = (void *)*v9;
        }
        unsigned int v11 = v4 + 2;
        memcpy(v11, v9, v10);
        uint64_t v4 = &v11[v10];
        goto LABEL_12;
      }
LABEL_14:
      uint64_t v4 = (char *)sub_188A868(a3, 2, (uint64_t)v9, v4);
LABEL_12:
      v7 += 8;
    }
    while (v8 != v7);
  }
  uint64_t v12 = *(void *)(a1 + 8);
  if ((v12 & 1) == 0) {
    return v4;
  }
  unint64_t v14 = v12 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v14 + 31) < 0)
  {
    uint64_t v15 = *(void **)(v14 + 8);
    uint64_t v16 = *(void *)(v14 + 16);
  }
  else
  {
    uint64_t v15 = (void *)(v14 + 8);
    LODWORD(v16) = *(unsigned __int8 *)(v14 + 31);
  }
  if (*a3 - (void)v4 >= (int)v16)
  {
    uint64_t v17 = (int)v16;
    memcpy(v4, v15, (int)v16);
    v4 += v17;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v15, v16, v4);
}

uint64_t sub_142FF4C(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 32);
  if ((int)v1 < 1)
  {
    uint64_t v3 = *(unsigned int *)(a1 + 32);
  }
  else
  {
    uint64_t v2 = (uint64_t *)(*(void *)(a1 + 40) + 8);
    uint64_t v3 = *(unsigned int *)(a1 + 32);
    do
    {
      uint64_t v4 = *v2++;
      uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
      uint64_t v6 = *(void *)(v4 + 8);
      if ((v5 & 0x80u) == 0) {
        uint64_t v6 = v5;
      }
      v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6);
      --v1;
    }
    while (v1);
  }
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v7 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v8 = *(unsigned __int8 *)(v7 + 23);
    uint64_t v9 = *(void *)(v7 + 8);
    if ((v8 & 0x80u) == 0) {
      uint64_t v9 = v8;
    }
    v3 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v12 + 31) < 0) {
      uint64_t v13 = *(void *)(v12 + 16);
    }
    else {
      uint64_t v13 = *(unsigned __int8 *)(v12 + 31);
    }
    v3 += v13;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

uint64_t sub_143002C()
{
  return 1;
}

void *sub_1430034@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gemini.StatCategoryGroup");
}

void *sub_1430044(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_14300B8(void *a1)
{
  sub_1430044(a1);

  operator delete();
}

uint64_t sub_14300F0(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 0x3F) != 0)
  {
    *(void *)(a1 + 24) = 0;
    *(void *)(a1 + 32) = 0;
    *(void *)(a1 + 40) = 0xFFFFFFF700000000;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_1430120(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v28 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v28, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = v28 + 1;
    unsigned int v9 = *v28;
    if (*v28 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v28, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v28 + 2;
      }
    }
    uint64_t v28 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 13) {
          goto LABEL_15;
        }
        int v13 = *(_DWORD *)v8;
        unint64_t v12 = v8 + 4;
        v5 |= 1u;
        *(_DWORD *)(a1 + 24) = v13;
        goto LABEL_31;
      case 2u:
        if (v9 != 21) {
          goto LABEL_15;
        }
        int v17 = *(_DWORD *)v8;
        unint64_t v12 = v8 + 4;
        v5 |= 2u;
        *(_DWORD *)(a1 + 28) = v17;
        goto LABEL_31;
      case 3u:
      case 4u:
      case 5u:
      case 6u:
      case 7u:
      case 8u:
      case 9u:
        goto LABEL_15;
      case 0xAu:
        if (v9 != 85) {
          goto LABEL_15;
        }
        int v18 = *(_DWORD *)v8;
        unint64_t v12 = v8 + 4;
        v5 |= 8u;
        *(_DWORD *)(a1 + 36) = v18;
        goto LABEL_31;
      case 0xBu:
        if (v9 != 93) {
          goto LABEL_15;
        }
        int v19 = *(_DWORD *)v8;
        unint64_t v12 = v8 + 4;
        v5 |= 0x10u;
        *(_DWORD *)(a1 + 40) = v19;
        goto LABEL_31;
      case 0xCu:
        if (v9 != 101) {
          goto LABEL_15;
        }
        int v20 = *(_DWORD *)v8;
        unint64_t v12 = v8 + 4;
        v5 |= 4u;
        *(_DWORD *)(a1 + 32) = v20;
LABEL_31:
        uint64_t v28 = v12;
        goto LABEL_32;
      default:
        if (v9 >> 3 == 99 && v9 == 24)
        {
          uint64_t v21 = v8 + 1;
          unint64_t v22 = *v8;
          if ((*v8 & 0x80000000) == 0) {
            goto LABEL_37;
          }
          int v23 = *v21;
          int v24 = v22 + (v23 << 7);
          unint64_t v22 = (v24 - 128);
          if (v23 < 0)
          {
            uint64_t v28 = (char *)sub_188C138((uint64_t)v8, (v24 - 128));
            if (!v28) {
              goto LABEL_53;
            }
            unint64_t v22 = v26;
          }
          else
          {
            uint64_t v21 = v8 + 2;
LABEL_37:
            uint64_t v28 = v21;
          }
          if ((v22 + 3) < 7 || v22 == -9)
          {
            *(_DWORD *)(a1 + 16) |= 0x20u;
            *(_DWORD *)(a1 + 44) = v22;
          }
          else
          {
            if (*v7) {
              uint64_t v27 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else {
              uint64_t v27 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            }
            sub_188C020(99, v22, v27);
          }
          goto LABEL_32;
        }
LABEL_15:
        if (v9) {
          BOOL v15 = (v9 & 7) == 4;
        }
        else {
          BOOL v15 = 1;
        }
        if (!v15)
        {
          if (*v7)
          {
            uint64_t v16 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v16 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = v28;
          }
          uint64_t v28 = (char *)sub_1885AC0(v9, v16, v8, a3);
          if (!v28) {
            goto LABEL_53;
          }
LABEL_32:
          if (sub_11947B8((uint64_t)a3, &v28, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_53:
        }
          uint64_t v28 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v28;
    }
  }
}

_OWORD *sub_14303E4(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (_OWORD *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    int v7 = *(_DWORD *)(a1 + 24);
    *(unsigned char *)uint64_t v4 = 13;
    *(_DWORD *)((char *)v4 + 1) = v7;
    uint64_t v4 = (_OWORD *)((char *)v4 + 5);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 8) == 0) {
        goto LABEL_4;
      }
      goto LABEL_14;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  int v8 = *(_DWORD *)(a1 + 28);
  *(unsigned char *)uint64_t v4 = 21;
  *(_DWORD *)((char *)v4 + 1) = v8;
  uint64_t v4 = (_OWORD *)((char *)v4 + 5);
  if ((v6 & 8) == 0)
  {
LABEL_4:
    if ((v6 & 0x10) == 0) {
      goto LABEL_5;
    }
    goto LABEL_17;
  }
LABEL_14:
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  int v9 = *(_DWORD *)(a1 + 36);
  *(unsigned char *)uint64_t v4 = 85;
  *(_DWORD *)((char *)v4 + 1) = v9;
  uint64_t v4 = (_OWORD *)((char *)v4 + 5);
  if ((v6 & 0x10) == 0)
  {
LABEL_5:
    if ((v6 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_20;
  }
LABEL_17:
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  int v10 = *(_DWORD *)(a1 + 40);
  *(unsigned char *)uint64_t v4 = 93;
  *(_DWORD *)((char *)v4 + 1) = v10;
  uint64_t v4 = (_OWORD *)((char *)v4 + 5);
  if ((v6 & 4) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_29;
    }
    goto LABEL_23;
  }
LABEL_20:
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  int v11 = *(_DWORD *)(a1 + 32);
  *(unsigned char *)uint64_t v4 = 101;
  *(_DWORD *)((char *)v4 + 1) = v11;
  uint64_t v4 = (_OWORD *)((char *)v4 + 5);
  if ((v6 & 0x20) != 0)
  {
LABEL_23:
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v12 = *(int *)(a1 + 44);
    *(_WORD *)uint64_t v4 = 1688;
    *((unsigned char *)v4 + 2) = v12;
    if (v12 > 0x7F)
    {
      *((unsigned char *)v4 + 2) = v12 | 0x80;
      unint64_t v13 = v12 >> 7;
      *((unsigned char *)v4 + 3) = v12 >> 7;
      uint64_t v4 = (_OWORD *)((char *)v4 + 4);
      if (v12 >= 0x4000)
      {
        do
        {
          *((unsigned char *)v4 - 1) |= 0x80u;
          unint64_t v14 = v13 >> 14;
          v13 >>= 7;
          *(unsigned char *)uint64_t v4 = v13;
          uint64_t v4 = (_OWORD *)((char *)v4 + 1);
        }
        while (v14);
      }
    }
    else
    {
      uint64_t v4 = (_OWORD *)((char *)v4 + 3);
    }
  }
LABEL_29:
  uint64_t v15 = *(void *)(a1 + 8);
  if ((v15 & 1) == 0) {
    return v4;
  }
  unint64_t v17 = v15 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v17 + 31) < 0)
  {
    int v18 = *(void **)(v17 + 8);
    uint64_t v19 = *(void *)(v17 + 16);
  }
  else
  {
    int v18 = (void *)(v17 + 8);
    LODWORD(v19) = *(unsigned __int8 *)(v17 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v19)
  {
    uint64_t v20 = (int)v19;
    memcpy(v4, v18, (int)v19);
    return (_OWORD *)((char *)v4 + v20);
  }

  return (_OWORD *)sub_188A528(a3, (char *)v18, v19, v4);
}

uint64_t sub_143063C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 0x3F) != 0)
  {
    uint64_t v2 = 5;
    if ((v1 & 1) == 0) {
      uint64_t v2 = 0;
    }
    if ((v1 & 2) != 0) {
      v2 += 5;
    }
    if ((v1 & 4) != 0) {
      v2 += 5;
    }
    if ((v1 & 8) != 0) {
      v2 += 5;
    }
    if ((v1 & 0x10) != 0) {
      v2 += 5;
    }
    if ((v1 & 0x20) != 0)
    {
      int v3 = *(_DWORD *)(a1 + 44);
      uint64_t v4 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 2;
      if (v3 >= 0) {
        uint64_t v5 = v4;
      }
      else {
        uint64_t v5 = 12;
      }
      v2 += v5;
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v6 = *(void *)(a1 + 8);
  if (v6)
  {
    unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v8 + 31) < 0) {
      uint64_t v9 = *(void *)(v8 + 16);
    }
    else {
      uint64_t v9 = *(unsigned __int8 *)(v8 + 31);
    }
    v2 += v9;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_14306F8(std::string *result, uint64_t a2)
{
  int v2 = *(_DWORD *)(a2 + 16);
  if ((v2 & 0x3F) == 0) {
    goto LABEL_10;
  }
  if (v2)
  {
    LODWORD(result[1].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 24);
    if ((v2 & 2) == 0)
    {
LABEL_4:
      if ((v2 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_14;
    }
  }
  else if ((v2 & 2) == 0)
  {
    goto LABEL_4;
  }
  HIDWORD(result[1].__r_.__value_.__r.__words[0]) = *(_DWORD *)(a2 + 28);
  if ((v2 & 4) == 0)
  {
LABEL_5:
    if ((v2 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_15;
  }
LABEL_14:
  LODWORD(result[1].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 32);
  if ((v2 & 8) == 0)
  {
LABEL_6:
    if ((v2 & 0x10) == 0) {
      goto LABEL_7;
    }
LABEL_16:
    LODWORD(result[1].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 40);
    if ((v2 & 0x20) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
LABEL_15:
  HIDWORD(result[1].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 36);
  if ((v2 & 0x10) != 0) {
    goto LABEL_16;
  }
LABEL_7:
  if ((v2 & 0x20) != 0) {
LABEL_8:
  }
    HIDWORD(result[1].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 44);
LABEL_9:
  LODWORD(result->__r_.__value_.__r.__words[2]) |= v2;
LABEL_10:
  uint64_t v3 = *(void *)(a2 + 8);
  if (v3) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v3 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_143078C()
{
  return 1;
}

void *sub_1430794@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gemini.CartoIconZoom");
}

void *sub_14307A4(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1430818(void *a1)
{
  sub_14307A4(a1);

  operator delete();
}

char *sub_1430850(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v19 = a2;
  if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
    return v19;
  }
  uint64_t v5 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v6 = v19 + 1;
    unsigned int v7 = *v19;
    if (*v19 < 0)
    {
      unsigned int v8 = v7 + (*v6 << 7);
      unsigned int v7 = v8 - 128;
      if (*v6 < 0)
      {
        uint64_t v6 = (char *)sub_188C180((uint64_t)v19, v8 - 128);
        unsigned int v7 = v9;
      }
      else
      {
        uint64_t v6 = v19 + 2;
      }
    }
    uint64_t v19 = v6;
    if (v7 == 8)
    {
      unint64_t v12 = v6 + 1;
      unint64_t v13 = *v6;
      if (*v6 < 0)
      {
        int v14 = *v12;
        int v15 = v13 + (v14 << 7);
        unint64_t v13 = (v15 - 128);
        if (v14 < 0)
        {
          uint64_t v19 = (char *)sub_188C138((uint64_t)v6, (v15 - 128));
          if (!v19) {
            return 0;
          }
          unint64_t v13 = v16;
          goto LABEL_20;
        }
        unint64_t v12 = v6 + 2;
      }
      uint64_t v19 = v12;
LABEL_20:
      if (v13 > 5)
      {
        if (*v5) {
          unint64_t v17 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          unint64_t v17 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        sub_188C020(1, v13, v17);
      }
      else
      {
        *(_DWORD *)(a1 + 16) |= 1u;
        *(_DWORD *)(a1 + 24) = v13;
      }
      goto LABEL_22;
    }
    if (!v7 || (v7 & 7) == 4) {
      break;
    }
    if (*v5)
    {
      int v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      int v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v6 = v19;
    }
    uint64_t v19 = (char *)sub_1885AC0(v7, v11, v6, a3);
    if (!v19) {
      return 0;
    }
LABEL_22:
    if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
      return v19;
    }
  }
  if (v6)
  {
    a3[10].i32[0] = v7 - 1;
    return v19;
  }
  return 0;
}

unsigned char *sub_14309F8(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v6 = *(int *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v6;
    if (v6 > 0x7F)
    {
      v4[1] = v6 | 0x80;
      unint64_t v7 = v6 >> 7;
      v4[2] = v6 >> 7;
      v4 += 3;
      if (v6 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v8 = v7 >> 14;
          v7 >>= 7;
          *v4++ = v7;
        }
        while (v8);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    unint64_t v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    unint64_t v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    v4 += v14;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v12, v13, v4);
}

uint64_t sub_1430B20(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    int v2 = *(_DWORD *)(a1 + 24);
    if (v2 < 0) {
      uint64_t v1 = 11;
    }
    else {
      uint64_t v1 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  else
  {
    uint64_t v1 = 0;
  }
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v5 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    v1 += v6;
  }
  *(_DWORD *)(a1 + 20) = v1;
  return v1;
}

uint64_t sub_1430B94()
{
  return 1;
}

void *sub_1430B9C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gemini.PoiStructure");
}

uint64_t sub_1430BAC(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  unint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_25385A8)
  {
    uint64_t v6 = *(void *)(a1 + 32);
    if (v6)
    {
      sub_1431820(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1430C78(uint64_t a1)
{
  sub_1430BAC(a1);

  operator delete();
}

uint64_t sub_1430CB0(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_15B2C80(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  uint64_t v5 = *(unsigned int *)(v1 + 56);
  if ((int)v5 >= 1)
  {
    uint64_t v6 = (uint64_t *)(*(void *)(v1 + 64) + 8);
    do
    {
      uint64_t v7 = *v6++;
      uint64_t result = sub_1418C04(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(v1 + 56) = 0;
  }
  uint64_t v8 = *(unsigned int *)(v1 + 80);
  if ((int)v8 >= 1)
  {
    uint64_t v9 = (uint64_t *)(*(void *)(v1 + 88) + 8);
    do
    {
      uint64_t v10 = *v9++;
      uint64_t result = sub_1411AA0(v10);
      --v8;
    }
    while (v8);
    *(_DWORD *)(v1 + 80) = 0;
  }
  *(_DWORD *)(v1 + 96) = 0;
  uint64_t v11 = *(unsigned int *)(v1 + 120);
  if ((int)v11 >= 1)
  {
    unint64_t v12 = (uint64_t *)(*(void *)(v1 + 128) + 8);
    do
    {
      uint64_t v13 = *v12++;
      uint64_t result = sub_13F6FC8(v13);
      --v11;
    }
    while (v11);
    *(_DWORD *)(v1 + 120) = 0;
  }
  *(_DWORD *)(v1 + 136) = 0;
  uint64_t v14 = *(unsigned int *)(v1 + 160);
  if ((int)v14 >= 1)
  {
    int v15 = (uint64_t *)(*(void *)(v1 + 168) + 8);
    do
    {
      uint64_t v16 = *v15++;
      uint64_t result = sub_140BC40(v16);
      --v14;
    }
    while (v14);
    *(_DWORD *)(v1 + 160) = 0;
  }
  if (*(unsigned char *)(v1 + 16)) {
    uint64_t result = sub_15BC23C(*(void *)(v1 + 176));
  }
  char v18 = *(unsigned char *)(v1 + 8);
  uint64_t v17 = v1 + 8;
  *(_DWORD *)(v17 + 176) = 0;
  *(_DWORD *)(v17 + 8) = 0;
  if (v18)
  {
    return sub_188B4AC((uint64_t *)v17);
  }
  return result;
}

uint64_t sub_1430DEC(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v30 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v30, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (unsigned __int8 *)(*(void *)v30 + 1);
    unsigned int v9 = **(unsigned char **)v30;
    if ((char)**(unsigned char **)v30 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        uint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v30, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (unsigned __int8 *)(*(void *)v30 + 2);
      }
    }
    *(void *)uint64_t v30 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_29;
        }
        v5 |= 4u;
        unint64_t v12 = (char *)(v8 + 1);
        uint64_t v13 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        uint64_t v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          unint64_t v12 = (char *)(v8 + 2);
LABEL_13:
          *(void *)uint64_t v30 = v12;
          *(void *)(a1 + 40) = v13;
          goto LABEL_37;
        }
        uint64_t v26 = sub_188C138((uint64_t)v8, v13);
        *(void *)uint64_t v30 = v26;
        *(void *)(a1 + 40) = v27;
        if (v26) {
          goto LABEL_37;
        }
        goto LABEL_46;
      case 3u:
        if (v9 != 26) {
          goto LABEL_29;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v15 = *(void *)(a1 + 32);
        if (!v15)
        {
          uint64_t v16 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v16 = (void *)*v16;
          }
          uint64_t v15 = sub_144BDE0((uint64_t)v16);
          *(void *)(a1 + 32) = v15;
          uint64_t v8 = *(unsigned __int8 **)v30;
        }
        uint64_t v17 = sub_14310B8(a3, v15, v8);
        goto LABEL_36;
      case 4u:
        if (v9 != 32) {
          goto LABEL_29;
        }
        v5 |= 8u;
        char v18 = (char *)(v8 + 1);
        uint64_t v19 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_24;
        }
        int v20 = *v18;
        uint64_t v19 = v19 + (v20 << 7) - 128;
        if (v20 < 0)
        {
          uint64_t v28 = sub_188C138((uint64_t)v8, v19);
          *(void *)uint64_t v30 = v28;
          *(unsigned char *)(a1 + 48) = v29 != 0;
          if (!v28) {
            goto LABEL_46;
          }
        }
        else
        {
          char v18 = (char *)(v8 + 2);
LABEL_24:
          *(void *)uint64_t v30 = v18;
          *(unsigned char *)(a1 + 48) = v19 != 0;
        }
        goto LABEL_37;
      case 5u:
        if (v9 != 42) {
          goto LABEL_29;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v21 = *(void *)(a1 + 8);
        unint64_t v22 = (uint64_t *)(v21 & 0xFFFFFFFFFFFFFFFCLL);
        if (v21) {
          unint64_t v22 = (uint64_t *)*v22;
        }
        int v23 = (std::string *)sub_1880F84((void *)(a1 + 24), v22);
        uint64_t v17 = (void *)sub_188C244(v23, *(char **)v30, (uint64_t)a3);
        goto LABEL_36;
      default:
LABEL_29:
        if (v9) {
          BOOL v24 = (v9 & 7) == 4;
        }
        else {
          BOOL v24 = 1;
        }
        if (!v24)
        {
          if (*v7)
          {
            uint64_t v25 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v25 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = *(unsigned __int8 **)v30;
          }
          uint64_t v17 = sub_1885AC0(v9, v25, (char *)v8, a3);
LABEL_36:
          *(void *)uint64_t v30 = v17;
          if (!v17) {
            goto LABEL_46;
          }
LABEL_37:
          if (sub_11947B8((uint64_t)a3, (char **)v30, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_46:
        }
          *(void *)uint64_t v30 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v30;
    }
  }
}

char *sub_14310B8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_143195C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1431148(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 4) != 0)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(void *)(a1 + 40);
    char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v12 = *(void *)(a1 + 32);
    char *v4 = 26;
    unsigned int v13 = *(_DWORD *)(v12 + 20);
    v4[1] = v13;
    if (v13 > 0x7F) {
      int v14 = sub_188A9CC(v13, v4 + 1);
    }
    else {
      int v14 = v4 + 2;
    }
    uint64_t v4 = sub_14321C8(v12, v14, a3);
    if ((v6 & 8) == 0)
    {
LABEL_10:
      if ((v6 & 1) == 0) {
        goto LABEL_12;
      }
      goto LABEL_11;
    }
  }
  else if ((v6 & 8) == 0)
  {
    goto LABEL_10;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v15 = *(unsigned char *)(a1 + 48);
  char *v4 = 32;
  v4[1] = v15;
  v4 += 2;
  if (v6) {
LABEL_11:
  }
    uint64_t v4 = sub_117A0AC(a3, 5, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
LABEL_12:
  uint64_t v10 = *(void *)(a1 + 8);
  if ((v10 & 1) == 0) {
    return v4;
  }
  unint64_t v16 = v10 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v16 + 31) < 0)
  {
    uint64_t v17 = *(void **)(v16 + 8);
    uint64_t v18 = *(void *)(v16 + 16);
  }
  else
  {
    uint64_t v17 = (void *)(v16 + 8);
    LODWORD(v18) = *(unsigned __int8 *)(v16 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v18)
  {
    uint64_t v19 = (int)v18;
    memcpy(v4, v17, (int)v18);
    v4 += v19;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v17, v18, v4);
}

uint64_t sub_1431344(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0xF) == 0)
  {
    uint64_t result = 0;
    goto LABEL_15;
  }
  if (v2)
  {
    unint64_t v5 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
    uint64_t v7 = *(void *)(v5 + 8);
    if ((v6 & 0x80u) == 0) {
      uint64_t v7 = v6;
    }
    uint64_t v3 = v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_10;
    }
  }
  uint64_t v8 = sub_1432738(*(void *)(a1 + 32));
  v3 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_10:
  if ((v2 & 4) != 0) {
    v3 += ((9 * (__clz(*(void *)(a1 + 40) | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
  if ((v2 & 8) != 0) {
    uint64_t result = v3 + 2;
  }
  else {
    uint64_t result = v3;
  }
LABEL_15:
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    result += v11;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

std::string *sub_143145C(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    unint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = sub_12C1E38(v3 + 1, v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2] - LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    uint64_t v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    unint64_t v10 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    uint64_t v11 = (std::string **)sub_188CCE4((uint64_t)&v3[2], *(_DWORD *)(a2 + 56));
    uint64_t result = (std::string *)sub_149262C((uint64_t *)&v3[2], v11, v10, v9, *(_DWORD *)v3[2].__r_.__value_.__r.__words[2]- LODWORD(v3[2].__r_.__value_.__r.__words[1]));
    int v12 = LODWORD(v3[2].__r_.__value_.__r.__words[1]) + v9;
    LODWORD(v3[2].__r_.__value_.__r.__words[1]) = v12;
    unsigned int v13 = (int *)v3[2].__r_.__value_.__r.__words[2];
    if (*v13 < v12) {
      *unsigned int v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 80);
  if (v14)
  {
    char v15 = (uint64_t *)(*(void *)(a2 + 88) + 8);
    unint64_t v16 = (std::string **)sub_188CCE4((uint64_t)&v3[3], *(_DWORD *)(a2 + 80));
    uint64_t result = (std::string *)sub_124EC14((uint64_t *)&v3[3], v16, v15, v14, *(_DWORD *)v3[3].__r_.__value_.__r.__words[2]- LODWORD(v3[3].__r_.__value_.__r.__words[1]));
    int v17 = LODWORD(v3[3].__r_.__value_.__r.__words[1]) + v14;
    LODWORD(v3[3].__r_.__value_.__r.__words[1]) = v17;
    uint64_t v18 = (int *)v3[3].__r_.__value_.__r.__words[2];
    if (*v18 < v17) {
      int *v18 = v17;
    }
  }
  int v19 = *(_DWORD *)(a2 + 96);
  if (v19)
  {
    uint64_t data_low = SLODWORD(v3[4].__r_.__value_.__l.__data_);
    sub_188CA54((unsigned int *)&v3[4], data_low + v19);
    std::string::size_type size = v3[4].__r_.__value_.__l.__size_;
    LODWORD(v3[4].__r_.__value_.__l.__data_) += *(_DWORD *)(a2 + 96);
    uint64_t result = (std::string *)memcpy((void *)(size + 8 * data_low), *(const void **)(a2 + 104), 8 * *(int *)(a2 + 96));
  }
  int v22 = *(_DWORD *)(a2 + 120);
  if (v22)
  {
    int v23 = (uint64_t *)(*(void *)(a2 + 128) + 8);
    BOOL v24 = (std::string **)sub_188CCE4((uint64_t)&v3[4].__r_.__value_.__r.__words[2], *(_DWORD *)(a2 + 120));
    uint64_t result = sub_124EFB8((std::string *)((char *)v3 + 112), v24, v23, v22, *(_DWORD *)v3[5].__r_.__value_.__l.__size_ - LODWORD(v3[5].__r_.__value_.__l.__data_));
    int v25 = LODWORD(v3[5].__r_.__value_.__l.__data_) + v22;
    LODWORD(v3[5].__r_.__value_.__l.__data_) = v25;
    uint64_t v26 = (int *)v3[5].__r_.__value_.__l.__size_;
    if (*v26 < v25) {
      int *v26 = v25;
    }
  }
  int v27 = *(_DWORD *)(a2 + 136);
  if (v27)
  {
    uint64_t v28 = SLODWORD(v3[5].__r_.__value_.__r.__words[2]);
    sub_188C80C((unsigned int *)&v3[5].__r_.__value_.__r.__words[2], v28 + v27);
    std::string::pointer data = v3[6].__r_.__value_.__l.__data_;
    LODWORD(v3[5].__r_.__value_.__r.__words[2]) += *(_DWORD *)(a2 + 136);
    uint64_t result = (std::string *)memcpy(&data[4 * v28], *(const void **)(a2 + 144), 4 * *(int *)(a2 + 136));
  }
  int v30 = *(_DWORD *)(a2 + 160);
  if (v30)
  {
    uint64_t v31 = (uint64_t *)(*(void *)(a2 + 168) + 8);
    uint64_t v32 = (std::string **)sub_188CCE4((uint64_t)&v3[6].__r_.__value_.__l.__size_, *(_DWORD *)(a2 + 160));
    uint64_t result = sub_14926B8((std::string *)((char *)v3 + 152), v32, v31, v30, *(_DWORD *)v3[7].__r_.__value_.__l.__data_ - LODWORD(v3[6].__r_.__value_.__r.__words[2]));
    int v33 = LODWORD(v3[6].__r_.__value_.__r.__words[2]) + v30;
    LODWORD(v3[6].__r_.__value_.__r.__words[2]) = v33;
    uint64_t v34 = (int *)v3[7].__r_.__value_.__l.__data_;
    if (*v34 < v33) {
      *uint64_t v34 = v33;
    }
  }
  int v35 = *(_DWORD *)(a2 + 16);
  if ((v35 & 3) != 0)
  {
    if (v35)
    {
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      uint64_t v36 = (std::string *)v3[7].__r_.__value_.__l.__size_;
      if (!v36)
      {
        std::string::size_type v37 = v3->__r_.__value_.__l.__size_;
        uint64_t v38 = (void *)(v37 & 0xFFFFFFFFFFFFFFFCLL);
        if (v37) {
          uint64_t v38 = (void *)*v38;
        }
        uint64_t v36 = (std::string *)sub_15C221C((uint64_t)v38);
        v3[7].__r_.__value_.__l.__size_ = (std::string::size_type)v36;
      }
      if (*(void *)(a2 + 176)) {
        uint64_t v39 = *(uint64_t (****)())(a2 + 176);
      }
      else {
        uint64_t v39 = &off_253F5C0;
      }
      uint64_t result = sub_12329D0(v36, (uint64_t)v39);
    }
    if ((v35 & 2) != 0) {
      LODWORD(v3[7].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 184);
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= v35;
  }
  uint64_t v40 = *(void *)(a2 + 8);
  if (v40)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v40 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_14317B4(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 56);
  while ((int)v1 >= 1)
  {
    uint64_t v2 = *(void *)(*(void *)(a1 + 64) + 8 * v1--);
    if ((~*(_DWORD *)(v2 + 16) & 9) != 0) {
      return 0;
    }
  }
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 1;
  }
  uint64_t result = sub_15BC528(*(void *)(a1 + 176));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_1431810@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gemini.BusinessCardEvent");
}

uint64_t sub_1431820(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  if ((uint64_t (***)())a1 != &off_25385E0 && *(void *)(a1 + 176))
  {
    sub_15BC200();
    operator delete();
  }
  if (*(void *)(a1 + 8)) {
    sub_10E4F74(v3);
  }
LABEL_8:
  sub_1490A7C((void *)(a1 + 152));
  sub_1889DA8(a1 + 136);
  sub_124E3CC((void *)(a1 + 112));
  sub_1889DA8(a1 + 96);
  sub_124E04C((void *)(a1 + 72));
  sub_14909FC((void *)(a1 + 48));
  sub_12C1DB8((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1431924(uint64_t a1)
{
  sub_1431820(a1);

  operator delete();
}

char *sub_143195C(uint64_t a1, char *a2, int32x2_t *a3)
{
  v70 = a2;
  if ((sub_11947B8((uint64_t)a3, &v70, a3[11].i32[1]) & 1) == 0)
  {
    int v67 = 0;
    uint64_t v66 = (uint64_t *)(a1 + 8);
    uint64_t v68 = (uint64_t *)(a1 + 112);
    uint64_t v69 = (uint64_t *)(a1 + 152);
    while (1)
    {
      uint64_t v6 = v70 + 1;
      unsigned int v7 = *v70;
      if (*v70 < 0)
      {
        int v8 = *v6;
        unsigned int v9 = v7 + (v8 << 7);
        unsigned int v7 = v9 - 128;
        if (v8 < 0)
        {
          uint64_t v6 = (char *)sub_188C180((uint64_t)v70, v9 - 128);
          unsigned int v7 = v10;
        }
        else
        {
          uint64_t v6 = v70 + 2;
        }
      }
      v70 = v6;
      switch(v7 >> 3)
      {
        case 1u:
          if (v7 != 10) {
            goto LABEL_111;
          }
          uint64_t v11 = v6 - 1;
          while (1)
          {
            int v12 = (unsigned __int8 *)(v11 + 1);
            v70 = v11 + 1;
            unsigned int v13 = *(_DWORD **)(a1 + 40);
            if (v13 && (uint64_t v14 = *(int *)(a1 + 32), (int)v14 < *v13))
            {
              *(_DWORD *)(a1 + 32) = v14 + 1;
              uint64_t v15 = *(void *)&v13[2 * v14 + 2];
            }
            else
            {
              unint64_t v16 = sub_15C1B30(*(void *)(a1 + 24));
              uint64_t v15 = sub_188CDC8(a1 + 24, (uint64_t)v16);
              int v12 = (unsigned __int8 *)v70;
            }
            uint64_t v11 = (char *)sub_125CF74(a3, v15, v12);
            v70 = v11;
            if (!v11) {
              goto LABEL_124;
            }
            if (*(void *)a3 <= (unint64_t)v11 || *v11 != 10) {
              goto LABEL_119;
            }
          }
        case 2u:
          if (v7 != 18) {
            goto LABEL_111;
          }
          int v17 = v6 - 1;
          while (1)
          {
            uint64_t v18 = (unsigned __int8 *)(v17 + 1);
            v70 = v17 + 1;
            int v19 = *(_DWORD **)(a1 + 64);
            if (v19 && (uint64_t v20 = *(int *)(a1 + 56), (int)v20 < *v19))
            {
              *(_DWORD *)(a1 + 56) = v20 + 1;
              uint64_t v21 = *(void *)&v19[2 * v20 + 2];
            }
            else
            {
              uint64_t v22 = sub_144A8B0(*(void *)(a1 + 48));
              uint64_t v21 = sub_188CDC8(a1 + 48, v22);
              uint64_t v18 = (unsigned __int8 *)v70;
            }
            int v17 = (char *)sub_14320A8(a3, v21, v18);
            v70 = v17;
            if (!v17) {
              goto LABEL_124;
            }
            if (*(void *)a3 <= (unint64_t)v17 || *v17 != 18) {
              goto LABEL_119;
            }
          }
        case 3u:
          if (v7 != 26) {
            goto LABEL_111;
          }
          *(_DWORD *)(a1 + 16) |= 1u;
          int v23 = *(void **)(a1 + 176);
          if (!v23)
          {
            BOOL v24 = (void *)(*v66 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v66) {
              BOOL v24 = (void *)*v24;
            }
            int v23 = sub_15C221C((uint64_t)v24);
            *(void *)(a1 + 176) = v23;
            uint64_t v6 = v70;
          }
          int v25 = (char *)sub_123B1B4(a3, (uint64_t)v23, (unsigned __int8 *)v6);
          goto LABEL_118;
        case 4u:
          if (v7 != 34) {
            goto LABEL_111;
          }
          uint64_t v26 = v6 - 1;
          while (1)
          {
            int v27 = (unsigned __int8 *)(v26 + 1);
            v70 = v26 + 1;
            uint64_t v28 = *(_DWORD **)(a1 + 88);
            if (v28 && (uint64_t v29 = *(int *)(a1 + 80), (int)v29 < *v28))
            {
              *(_DWORD *)(a1 + 80) = v29 + 1;
              uint64_t v30 = *(void *)&v28[2 * v29 + 2];
            }
            else
            {
              uint64_t v31 = sub_144A378(*(void *)(a1 + 72));
              uint64_t v30 = sub_188CDC8(a1 + 72, v31);
              int v27 = (unsigned __int8 *)v70;
            }
            uint64_t v26 = sub_123B6C4(a3, v30, v27);
            v70 = v26;
            if (!v26) {
              goto LABEL_124;
            }
            if (*(void *)a3 <= (unint64_t)v26 || *v26 != 34) {
              goto LABEL_119;
            }
          }
        case 5u:
          if (v7 == 40)
          {
            uint64_t v32 = v6 - 1;
            while (1)
            {
              v70 = v32 + 1;
              uint64_t v33 = v32[1];
              if (v32[1] < 0)
              {
                int v34 = v33 + (v32[2] << 7);
                uint64_t v33 = (v34 - 128);
                if (v32[2] < 0)
                {
                  uint64_t v32 = (char *)sub_188C138((uint64_t)(v32 + 1), (v34 - 128));
                  uint64_t v33 = v35;
                }
                else
                {
                  v32 += 3;
                }
              }
              else
              {
                v32 += 2;
              }
              v70 = v32;
              uint64_t v36 = *(unsigned int *)(a1 + 96);
              if (v36 == *(_DWORD *)(a1 + 100))
              {
                int v37 = v36 + 1;
                sub_188CA54((unsigned int *)(a1 + 96), v36 + 1);
                *(void *)(*(void *)(a1 + 104) + 8 * v36) = v33;
                uint64_t v32 = v70;
              }
              else
              {
                *(void *)(*(void *)(a1 + 104) + 8 * v36) = v33;
                int v37 = v36 + 1;
              }
              *(_DWORD *)(a1 + 96) = v37;
              if (!v32) {
                goto LABEL_124;
              }
              if (*(void *)a3 <= (unint64_t)v32 || *v32 != 40) {
                goto LABEL_119;
              }
            }
          }
          if (v7 != 42) {
            goto LABEL_111;
          }
          int v25 = (char *)sub_188C2EC((unsigned int *)(a1 + 96), (unsigned __int8 *)v6, (uint64_t)a3);
          goto LABEL_118;
        case 6u:
          if (v7 != 50) {
            goto LABEL_111;
          }
          uint64_t v38 = v6 - 1;
          while (1)
          {
            uint64_t v39 = (unsigned __int8 *)(v38 + 1);
            v70 = v38 + 1;
            uint64_t v40 = *(_DWORD **)(a1 + 128);
            if (v40 && (uint64_t v41 = *(int *)(a1 + 120), (int)v41 < *v40))
            {
              *(_DWORD *)(a1 + 120) = v41 + 1;
              uint64_t v42 = *(void *)&v40[2 * v41 + 2];
            }
            else
            {
              uint64_t v43 = sub_1448DC4(*v68);
              uint64_t v42 = sub_188CDC8((uint64_t)v68, (uint64_t)v43);
              uint64_t v39 = (unsigned __int8 *)v70;
            }
            uint64_t v38 = (char *)sub_123B5A4(a3, v42, v39);
            v70 = v38;
            if (!v38) {
              goto LABEL_124;
            }
            if (*(void *)a3 <= (unint64_t)v38 || *v38 != 50) {
              goto LABEL_119;
            }
          }
        case 7u:
          if (v7 == 56)
          {
            uint64_t v44 = v6 - 1;
            while (1)
            {
              v70 = v44 + 1;
              unint64_t v45 = v44[1];
              v46 = v44 + 2;
              if (v44[1] < 0)
              {
                int v47 = *v46;
                int v48 = v45 + (v47 << 7);
                unint64_t v45 = (v48 - 128);
                if (v47 < 0)
                {
                  v70 = (char *)sub_188C138((uint64_t)(v44 + 1), (v48 - 128));
                  if (!v70) {
                    goto LABEL_124;
                  }
                  unint64_t v45 = v51;
                  goto LABEL_76;
                }
                v46 = v44 + 3;
              }
              v70 = v46;
LABEL_76:
              if (sub_16CD218(v45))
              {
                uint64_t v49 = *(unsigned int *)(a1 + 136);
                if (v49 == *(_DWORD *)(a1 + 140))
                {
                  int v50 = v49 + 1;
                  sub_188C80C((unsigned int *)(a1 + 136), v49 + 1);
                  *(_DWORD *)(*(void *)(a1 + 144) + 4 * v49) = v45;
                }
                else
                {
                  *(_DWORD *)(*(void *)(a1 + 144) + 4 * v49) = v45;
                  int v50 = v49 + 1;
                }
                *(_DWORD *)(a1 + 136) = v50;
              }
              else
              {
                if (*v66) {
                  uint64_t v52 = (std::string *)((*v66 & 0xFFFFFFFFFFFFFFFCLL) + 8);
                }
                else {
                  uint64_t v52 = (std::string *)sub_188DBD8(v66);
                }
                sub_188C020(7, v45, v52);
              }
              uint64_t v44 = v70;
              if (*(void *)a3 <= (unint64_t)v70 || *v70 != 56) {
                goto LABEL_119;
              }
            }
          }
          if (v7 == 58)
          {
            *(void *)&long long v71 = a1 + 136;
            *((void *)&v71 + 1) = sub_16CD218;
            uint64_t v72 = a1 + 8;
            int v73 = 7;
            int v25 = sub_1112E88((uint64_t)a3, v6, &v71);
          }
          else
          {
LABEL_111:
            if (v7) {
              BOOL v64 = (v7 & 7) == 4;
            }
            else {
              BOOL v64 = 1;
            }
            if (v64)
            {
              if (v6)
              {
                a3[10].i32[0] = v7 - 1;
                goto LABEL_3;
              }
LABEL_124:
              v70 = 0;
              goto LABEL_3;
            }
            if (*v66)
            {
              uint64_t v65 = (std::string *)((*v66 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              uint64_t v65 = (std::string *)sub_188DBD8(v66);
              uint64_t v6 = v70;
            }
            int v25 = (char *)sub_1885AC0(v7, v65, v6, a3);
          }
LABEL_118:
          v70 = v25;
          if (!v25) {
            goto LABEL_124;
          }
LABEL_119:
          if (sub_11947B8((uint64_t)a3, &v70, a3[11].i32[1])) {
            goto LABEL_3;
          }
          break;
        case 0xAu:
          if (v7 != 82) {
            goto LABEL_111;
          }
          uint64_t v53 = v6 - 1;
          while (1)
          {
            uint64_t v54 = (unsigned __int8 *)(v53 + 1);
            v70 = v53 + 1;
            uint64_t v55 = *(_DWORD **)(a1 + 168);
            if (v55 && (uint64_t v56 = *(int *)(a1 + 160), (int)v56 < *v55))
            {
              *(_DWORD *)(a1 + 160) = v56 + 1;
              uint64_t v57 = *(void *)&v55[2 * v56 + 2];
            }
            else
            {
              unsigned int v58 = sub_1449E2C(*v69);
              uint64_t v57 = sub_188CDC8((uint64_t)v69, (uint64_t)v58);
              uint64_t v54 = (unsigned __int8 *)v70;
            }
            uint64_t v53 = (char *)sub_1432138(a3, v57, v54);
            v70 = v53;
            if (!v53) {
              goto LABEL_124;
            }
            if (*(void *)a3 <= (unint64_t)v53 || *v53 != 82) {
              goto LABEL_119;
            }
          }
        case 0xBu:
          if (v7 != 88) {
            goto LABEL_111;
          }
          uint64_t v60 = v6 + 1;
          LODWORD(v59) = *v6;
          v67 |= 2u;
          if ((v59 & 0x80) == 0) {
            goto LABEL_104;
          }
          int v61 = *v60;
          uint64_t v59 = v59 + (v61 << 7) - 128;
          if (v61 < 0)
          {
            uint64_t v62 = (char *)sub_188C138((uint64_t)v6, v59);
            v70 = v62;
            *(_DWORD *)(a1 + 184) = v63;
            if (!v62) {
              goto LABEL_124;
            }
          }
          else
          {
            uint64_t v60 = v6 + 2;
LABEL_104:
            v70 = v60;
            *(_DWORD *)(a1 + 184) = v59;
          }
          goto LABEL_119;
        default:
          goto LABEL_111;
      }
    }
  }
  int v67 = 0;
LABEL_3:
  *(_DWORD *)(a1 + 16) |= v67;
  return v70;
}

uint64_t sub_14320A8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1418C94(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_1432138(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_140BD10(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_14321C8(uint64_t a1, char *__dst, void *a3)
{
  int v6 = *(_DWORD *)(a1 + 32);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unsigned int v10 = __dst + 2;
      }
      __dst = sub_15B2EA4(v8, v10, a3);
    }
  }
  int v11 = *(_DWORD *)(a1 + 56);
  if (v11)
  {
    for (int j = 0; j != v11; ++j)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v13 = *(void *)(*(void *)(a1 + 64) + 8 * j + 8);
      *__dst = 18;
      unsigned int v14 = *(_DWORD *)(v13 + 20);
      __dst[1] = v14;
      if (v14 > 0x7F) {
        uint64_t v15 = sub_188A9CC(v14, __dst + 1);
      }
      else {
        uint64_t v15 = __dst + 2;
      }
      __dst = sub_1418FB4(v13, v15, a3);
    }
  }
  int v16 = *(_DWORD *)(a1 + 16);
  if (v16)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    uint64_t v17 = *(void *)(a1 + 176);
    *__dst = 26;
    unsigned int v18 = *(_DWORD *)(v17 + 20);
    __dst[1] = v18;
    if (v18 > 0x7F) {
      int v19 = sub_188A9CC(v18, __dst + 1);
    }
    else {
      int v19 = __dst + 2;
    }
    __dst = sub_15BC3D8(v17, v19, a3);
  }
  int v20 = *(_DWORD *)(a1 + 80);
  if (v20)
  {
    for (int k = 0; k != v20; ++k)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v22 = *(void *)(*(void *)(a1 + 88) + 8 * k + 8);
      *__dst = 34;
      unsigned int v23 = *(_DWORD *)(v22 + 20);
      __dst[1] = v23;
      if (v23 > 0x7F) {
        BOOL v24 = sub_188A9CC(v23, __dst + 1);
      }
      else {
        BOOL v24 = __dst + 2;
      }
      __dst = sub_1411F40(v22, (unint64_t)v24, a3);
    }
  }
  uint64_t v25 = *(unsigned int *)(a1 + 96);
  if ((int)v25 >= 1)
  {
    for (uint64_t m = 0; m != v25; ++m)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      unint64_t v27 = *(void *)(*(void *)(a1 + 104) + 8 * m);
      *__dst = 40;
      __dst[1] = v27;
      if (v27 > 0x7F)
      {
        __dst[1] = v27 | 0x80;
        unint64_t v28 = v27 >> 7;
        __dst[2] = v27 >> 7;
        __dst += 3;
        if (v27 >= 0x4000)
        {
          do
          {
            *(__dst - 1) |= 0x80u;
            unint64_t v29 = v28 >> 14;
            v28 >>= 7;
            *__dst++ = v28;
          }
          while (v29);
        }
      }
      else
      {
        __dst += 2;
      }
    }
  }
  int v30 = *(_DWORD *)(a1 + 120);
  if (v30)
  {
    for (int n = 0; n != v30; ++n)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v32 = *(void *)(*(void *)(a1 + 128) + 8 * n + 8);
      *__dst = 50;
      unsigned int v33 = *(_DWORD *)(v32 + 20);
      __dst[1] = v33;
      if (v33 > 0x7F) {
        int v34 = sub_188A9CC(v33, __dst + 1);
      }
      else {
        int v34 = __dst + 2;
      }
      __dst = sub_13F721C(v32, v34, a3);
    }
  }
  uint64_t v35 = *(unsigned int *)(a1 + 136);
  if ((int)v35 >= 1)
  {
    for (iint i = 0; ii != v35; ++ii)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      unint64_t v37 = *(int *)(*(void *)(a1 + 144) + 4 * ii);
      *__dst = 56;
      __dst[1] = v37;
      if (v37 > 0x7F)
      {
        __dst[1] = v37 | 0x80;
        unint64_t v38 = v37 >> 7;
        __dst[2] = v37 >> 7;
        __dst += 3;
        if (v37 >= 0x4000)
        {
          do
          {
            *(__dst - 1) |= 0x80u;
            unint64_t v39 = v38 >> 14;
            v38 >>= 7;
            *__dst++ = v38;
          }
          while (v39);
        }
      }
      else
      {
        __dst += 2;
      }
    }
  }
  int v40 = *(_DWORD *)(a1 + 160);
  if (v40)
  {
    for (jint j = 0; jj != v40; ++jj)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v42 = *(void *)(*(void *)(a1 + 168) + 8 * jj + 8);
      *__dst = 82;
      unsigned int v43 = *(_DWORD *)(v42 + 20);
      __dst[1] = v43;
      if (v43 > 0x7F) {
        uint64_t v44 = sub_188A9CC(v43, __dst + 1);
      }
      else {
        uint64_t v44 = __dst + 2;
      }
      __dst = sub_140BF10(v42, v44, a3);
    }
  }
  if ((v16 & 2) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unint64_t v45 = *(int *)(a1 + 184);
    *__dst = 88;
    __dst[1] = v45;
    if (v45 > 0x7F)
    {
      __dst[1] = v45 | 0x80;
      unint64_t v46 = v45 >> 7;
      __dst[2] = v45 >> 7;
      __dst += 3;
      if (v45 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unint64_t v47 = v46 >> 14;
          v46 >>= 7;
          *__dst++ = v46;
        }
        while (v47);
      }
    }
    else
    {
      __dst += 2;
    }
  }
  uint64_t v48 = *(void *)(a1 + 8);
  if ((v48 & 1) == 0) {
    return __dst;
  }
  unint64_t v50 = v48 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v50 + 31) < 0)
  {
    unint64_t v51 = *(void **)(v50 + 8);
    uint64_t v52 = *(void *)(v50 + 16);
  }
  else
  {
    unint64_t v51 = (void *)(v50 + 8);
    LODWORD(v52) = *(unsigned __int8 *)(v50 + 31);
  }
  if (*a3 - (void)__dst >= (int)v52)
  {
    uint64_t v53 = (int)v52;
    memcpy(__dst, v51, (int)v52);
    __dst += v53;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v51, v52, __dst);
}

uint64_t sub_1432738(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    int v4 = (uint64_t *)(v3 + 8);
  }
  else {
    int v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_15B2F90(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(int *)(a1 + 56);
  uint64_t v9 = v2 + v8;
  uint64_t v10 = *(void *)(a1 + 64);
  if (v10) {
    int v11 = (uint64_t *)(v10 + 8);
  }
  else {
    int v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_14191E0(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  uint64_t v15 = *(int *)(a1 + 80);
  uint64_t v16 = v9 + v15;
  uint64_t v17 = *(void *)(a1 + 88);
  if (v17) {
    unsigned int v18 = (uint64_t *)(v17 + 8);
  }
  else {
    unsigned int v18 = 0;
  }
  if (v15)
  {
    uint64_t v19 = 8 * v15;
    do
    {
      uint64_t v20 = *v18++;
      uint64_t v21 = sub_14121EC(v20);
      v16 += v21 + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6);
      v19 -= 8;
    }
    while (v19);
  }
  uint64_t v22 = sub_188D5A8((unsigned int *)(a1 + 96));
  uint64_t v23 = *(int *)(a1 + 120);
  uint64_t v24 = v22 + v23 + v16 + *(unsigned int *)(a1 + 96);
  uint64_t v25 = *(void *)(a1 + 128);
  if (v25) {
    uint64_t v26 = (uint64_t *)(v25 + 8);
  }
  else {
    uint64_t v26 = 0;
  }
  if (v23)
  {
    uint64_t v27 = 8 * v23;
    do
    {
      uint64_t v28 = *v26++;
      uint64_t v29 = sub_13F73A8(v28);
      v24 += v29 + ((9 * (__clz(v29 | 1) ^ 0x1F) + 73) >> 6);
      v27 -= 8;
    }
    while (v27);
  }
  uint64_t v30 = *(unsigned int *)(a1 + 136);
  if (v30)
  {
    uint64_t v31 = 0;
    int v32 = 0;
    do
    {
      int v33 = *(_DWORD *)(*(void *)(a1 + 144) + 4 * v32);
      if (v33 < 0) {
        uint64_t v34 = 10;
      }
      else {
        uint64_t v34 = (9 * (__clz(v33 | 1) ^ 0x1F) + 73) >> 6;
      }
      v31 += v34;
      ++v32;
    }
    while (v30 != v32);
  }
  else
  {
    uint64_t v31 = 0;
  }
  uint64_t v35 = *(int *)(a1 + 160);
  uint64_t v36 = v24 + v30 + v31 + v35;
  uint64_t v37 = *(void *)(a1 + 168);
  if (v37) {
    unint64_t v38 = (uint64_t *)(v37 + 8);
  }
  else {
    unint64_t v38 = 0;
  }
  if (v35)
  {
    uint64_t v39 = 8 * v35;
    do
    {
      uint64_t v40 = *v38++;
      uint64_t v41 = sub_140C06C(v40);
      v36 += v41 + ((9 * (__clz(v41 | 1) ^ 0x1F) + 73) >> 6);
      v39 -= 8;
    }
    while (v39);
  }
  int v42 = *(_DWORD *)(a1 + 16);
  if ((v42 & 3) != 0)
  {
    if (v42)
    {
      uint64_t v43 = sub_15BC4A4(*(void *)(a1 + 176));
      v36 += v43 + ((9 * (__clz(v43 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v42 & 2) != 0)
    {
      int v44 = *(_DWORD *)(a1 + 184);
      uint64_t v45 = ((9 * (__clz(v44 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if (v44 >= 0) {
        uint64_t v46 = v45;
      }
      else {
        uint64_t v46 = 11;
      }
      v36 += v46;
    }
  }
  uint64_t v47 = *(void *)(a1 + 8);
  if (v47)
  {
    unint64_t v49 = v47 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v49 + 31) < 0) {
      uint64_t v50 = *(void *)(v49 + 16);
    }
    else {
      uint64_t v50 = *(unsigned __int8 *)(v49 + 31);
    }
    v36 += v50;
  }
  *(_DWORD *)(a1 + 20) = v36;
  return v36;
}

void *sub_1432A08@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gemini.EventDetails");
}

void *sub_1432A18(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1432A8C(void *a1)
{
  sub_1432A18(a1);

  operator delete();
}

uint64_t sub_1432AC4(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 3) != 0)
  {
    *(_DWORD *)(a1 + 32) = 0;
    *(void *)(a1 + 24) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_1432AEC(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v26 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v26 + 1;
    unsigned int v9 = *v26;
    if (*v26 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v26, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v26 + 2;
      }
    }
    uint64_t v26 = v8;
    if (v9 >> 3 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_13;
    }
    uint64_t v15 = v8 + 1;
    uint64_t v16 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_25;
    }
    int v17 = *v15;
    uint64_t v16 = v16 + (v17 << 7) - 128;
    if ((v17 & 0x80000000) == 0)
    {
      uint64_t v15 = v8 + 2;
LABEL_25:
      uint64_t v26 = v15;
      *(void *)(a1 + 24) = v16;
      int v5 = 1;
      goto LABEL_32;
    }
    uint64_t v22 = (char *)sub_188C138((uint64_t)v8, v16);
    uint64_t v26 = v22;
    *(void *)(a1 + 24) = v23;
    int v5 = 1;
    if (!v22) {
      goto LABEL_45;
    }
LABEL_32:
    if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 >> 3 == 1 && v9 == 8)
  {
    unsigned int v18 = v8 + 1;
    unint64_t v19 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_29;
    }
    int v20 = *v18;
    int v21 = v19 + (v20 << 7);
    unint64_t v19 = (v21 - 128);
    if (v20 < 0)
    {
      uint64_t v26 = (char *)sub_188C138((uint64_t)v8, (v21 - 128));
      if (!v26) {
        goto LABEL_45;
      }
      unint64_t v19 = v24;
    }
    else
    {
      unsigned int v18 = v8 + 2;
LABEL_29:
      uint64_t v26 = v18;
    }
    if (v19 > 4)
    {
      if (*v7) {
        uint64_t v25 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        uint64_t v25 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      sub_188C020(1, v19, v25);
    }
    else
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      *(_DWORD *)(a1 + 32) = v19;
    }
    goto LABEL_32;
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      uint64_t v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = v26;
    }
    uint64_t v26 = (char *)sub_1885AC0(v9, v14, v8, a3);
    if (!v26) {
      goto LABEL_45;
    }
    goto LABEL_32;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_45:
  uint64_t v26 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v26;
}

unsigned char *sub_1432D24(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 32);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(void *)(a1 + 24);
    unsigned char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    uint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    uint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

unint64_t sub_1432EC8(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    unint64_t v2 = 0;
    goto LABEL_11;
  }
  if (v1)
  {
    unint64_t v2 = ((9 * (__clz(*(void *)(a1 + 24) | 1) ^ 0x3F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_11;
    }
  }
  else
  {
    unint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_11;
    }
  }
  int v3 = *(_DWORD *)(a1 + 32);
  if (v3 < 0) {
    uint64_t v4 = 11;
  }
  else {
    uint64_t v4 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v2 += v4;
LABEL_11:
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5)
  {
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v7 + 31) < 0) {
      uint64_t v8 = *(void *)(v7 + 16);
    }
    else {
      uint64_t v8 = *(unsigned __int8 *)(v7 + 31);
    }
    v2 += v8;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_1432F78()
{
  return 1;
}

void *sub_1432F80@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gemini.VendorDisplay.PublisherInfo.PublisherImage");
}

void *sub_1432F90(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1433004(void *a1)
{
  sub_1432F90(a1);

  operator delete();
}

uint64_t sub_143303C(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(void *)(result + 16) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_1433054(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v19 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
    goto LABEL_27;
  }
  int v6 = (void *)(a1 + 8);
  while (1)
  {
    unint64_t v7 = v19 + 1;
    unsigned int v8 = *v19;
    if (*v19 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        unint64_t v7 = (char *)sub_188C180((uint64_t)v19, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        unint64_t v7 = v19 + 2;
      }
    }
    unint64_t v19 = v7;
    if (v8 != 8) {
      break;
    }
    uint64_t v13 = v7 + 1;
    uint64_t v14 = *v7;
    if ((*v7 & 0x80000000) == 0) {
      goto LABEL_19;
    }
    int v15 = *v13;
    uint64_t v14 = v14 + (v15 << 7) - 128;
    if ((v15 & 0x80000000) == 0)
    {
      uint64_t v13 = v7 + 2;
LABEL_19:
      unint64_t v19 = v13;
      *(void *)(a1 + 24) = v14;
      int v5 = 1;
      goto LABEL_20;
    }
    uint64_t v16 = (char *)sub_188C138((uint64_t)v7, v14);
    unint64_t v19 = v16;
    *(void *)(a1 + 24) = v17;
    int v5 = 1;
    if (!v16) {
      goto LABEL_28;
    }
LABEL_20:
    if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
      goto LABEL_27;
    }
  }
  if (v8) {
    BOOL v11 = (v8 & 7) == 4;
  }
  else {
    BOOL v11 = 1;
  }
  if (!v11)
  {
    if (*v6)
    {
      unint64_t v12 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v12 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unint64_t v7 = v19;
    }
    unint64_t v19 = (char *)sub_1885AC0(v8, v12, v7, a3);
    if (!v19) {
      goto LABEL_28;
    }
    goto LABEL_20;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    goto LABEL_27;
  }
LABEL_28:
  unint64_t v19 = 0;
LABEL_27:
  *(_DWORD *)(a1 + 16) |= v5;
  return v19;
}

unsigned char *sub_14331D4(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v6 = *(void *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v6;
    if (v6 > 0x7F)
    {
      v4[1] = v6 | 0x80;
      unint64_t v7 = v6 >> 7;
      v4[2] = v6 >> 7;
      v4 += 3;
      if (v6 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v8 = v7 >> 14;
          v7 >>= 7;
          *v4++ = v7;
        }
        while (v8);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    unint64_t v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    unint64_t v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    v4 += v14;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v12, v13, v4);
}

unint64_t sub_14332FC(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16)) {
    unint64_t v1 = ((9 * (__clz(*(void *)(a1 + 24) | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
  else {
    unint64_t v1 = 0;
  }
  uint64_t v2 = *(void *)(a1 + 8);
  if (v2)
  {
    unint64_t v4 = v2 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v5 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v5 = *(unsigned __int8 *)(v4 + 31);
    }
    v1 += v5;
  }
  *(_DWORD *)(a1 + 20) = v1;
  return v1;
}

uint64_t sub_1433364()
{
  return 1;
}

void *sub_143336C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gemini.VendorDisplay.PublisherInfo.PinnedGuide");
}

uint64_t sub_143337C(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  *(void *)(a1 + 8) = v5;
  *(void *)a1 = &off_24B4108;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = a2;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = a2;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = a2;
  *(void *)(a1 + 104) = 0;
  *(void *)(a1 + 112) = 0;
  *(void *)(a1 + 120) = a2;
  *(void *)(a1 + 128) = 0;
  *(void *)(a1 + 136) = 0;
  *(void *)(a1 + 144) = a2;
  *(void *)(a1 + 152) = 0;
  *(void *)(a1 + 160) = 0;
  *(void *)(a1 + 168) = a2;
  *(void *)(a1 + 176) = 0;
  *(void *)(a1 + 184) = 0;
  *(void *)(a1 + 192) = a2;
  *(void *)(a1 + 200) = 0;
  *(void *)(a1 + 208) = 0;
  *(void *)(a1 + 216) = a2;
  *(void *)(a1 + 224) = 0;
  *(void *)(a1 + 232) = 0;
  *(void *)(a1 + 240) = &qword_2550250;
  *(void *)(a1 + 248) = &qword_2550250;
  *(void *)(a1 + 256) = &qword_2550250;
  *(void *)(a1 + 264) = &qword_2550250;
  *(_OWORD *)(a1 + 272) = 0u;
  *(_OWORD *)(a1 + 288) = 0u;
  *(void *)(a1 + 302) = 0;
  return a1;
}

void sub_1433434(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_1433464(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  unint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_1433548((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  sub_12C1DB8(a1 + 27);
  sub_12C1DB8(a1 + 24);
  sub_1490B7C(a1 + 21);
  sub_12C1DB8(a1 + 18);
  sub_12C1DB8(a1 + 15);
  sub_1490AFC(a1 + 12);
  sub_1889DE8(a1 + 9);
  sub_1889DE8(a1 + 6);
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void ***sub_1433548(uint64_t a1)
{
  int v3 = *(uint64_t **)(a1 + 240);
  uint64_t v2 = (void ***)(a1 + 240);
  if (v3 != &qword_2550250) {
    sub_1881C6C(v2);
  }
  uint64_t result = (void ***)(a1 + 248);
  if (*(uint64_t **)(a1 + 248) != &qword_2550250) {
    sub_1881C6C(result);
  }
  if (*(uint64_t **)(a1 + 256) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 256));
  }
  if (*(uint64_t **)(a1 + 264) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 264));
  }
  if ((uint64_t (***)())a1 != &off_25386C0)
  {
    uint64_t v5 = *(void *)(a1 + 272);
    if (v5)
    {
      sub_1416F38(v5);
      operator delete();
    }
    unint64_t v6 = *(void **)(a1 + 280);
    if (v6)
    {
      sub_14367F0(v6);
      operator delete();
    }
    uint64_t v7 = *(void *)(a1 + 288);
    if (v7)
    {
      sub_1418B14(v7);
      operator delete();
    }
    uint64_t result = *(void ****)(a1 + 296);
    if (result)
    {
      sub_1432F90(result);
      operator delete();
    }
  }
  return result;
}

void sub_1433668(void *a1)
{
  sub_1433464(a1);

  operator delete();
}

uint64_t sub_14336A0(uint64_t a1)
{
  sub_18843A4((unsigned char *)(a1 + 16));
  sub_188CC00(a1 + 48);
  uint64_t result = sub_188CC00(a1 + 72);
  uint64_t v3 = *(unsigned int *)(a1 + 104);
  if ((int)v3 >= 1)
  {
    unint64_t v4 = (uint64_t *)(*(void *)(a1 + 112) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = sub_1446B98(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 104) = 0;
  }
  uint64_t v6 = *(unsigned int *)(a1 + 128);
  if ((int)v6 >= 1)
  {
    uint64_t v7 = (uint64_t *)(*(void *)(a1 + 136) + 8);
    do
    {
      uint64_t v8 = *v7++;
      uint64_t result = sub_15B2C80(v8);
      --v6;
    }
    while (v6);
    *(_DWORD *)(a1 + 128) = 0;
  }
  uint64_t v9 = *(unsigned int *)(a1 + 152);
  if ((int)v9 >= 1)
  {
    unsigned int v10 = (uint64_t *)(*(void *)(a1 + 160) + 8);
    do
    {
      uint64_t v11 = *v10++;
      uint64_t result = sub_15B2C80(v11);
      --v9;
    }
    while (v9);
    *(_DWORD *)(a1 + 152) = 0;
  }
  uint64_t v12 = *(unsigned int *)(a1 + 176);
  if ((int)v12 >= 1)
  {
    uint64_t v13 = (uint64_t *)(*(void *)(a1 + 184) + 8);
    do
    {
      uint64_t v14 = *v13++;
      uint64_t result = sub_1432AC4(v14);
      --v12;
    }
    while (v12);
    *(_DWORD *)(a1 + 176) = 0;
  }
  uint64_t v15 = *(unsigned int *)(a1 + 200);
  if ((int)v15 >= 1)
  {
    uint64_t v16 = (uint64_t *)(*(void *)(a1 + 208) + 8);
    do
    {
      uint64_t v17 = *v16++;
      uint64_t result = sub_15B2C80(v17);
      --v15;
    }
    while (v15);
    *(_DWORD *)(a1 + 200) = 0;
  }
  uint64_t v18 = *(unsigned int *)(a1 + 224);
  if ((int)v18 >= 1)
  {
    unint64_t v19 = (uint64_t *)(*(void *)(a1 + 232) + 8);
    do
    {
      uint64_t v20 = *v19++;
      uint64_t result = sub_15B2C80(v20);
      --v18;
    }
    while (v18);
    *(_DWORD *)(a1 + 224) = 0;
  }
  int v21 = *(_DWORD *)(a1 + 40);
  if ((_BYTE)v21)
  {
    if ((v21 & 1) == 0)
    {
      if ((v21 & 2) == 0) {
        goto LABEL_28;
      }
LABEL_39:
      unint64_t v23 = *(void *)(a1 + 248) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v23 + 23) < 0)
      {
        **(unsigned char **)unint64_t v23 = 0;
        *(void *)(v23 + 8) = 0;
        if ((v21 & 4) != 0) {
          goto LABEL_43;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v23 = 0;
        *(unsigned char *)(v23 + 23) = 0;
        if ((v21 & 4) != 0) {
          goto LABEL_43;
        }
      }
LABEL_29:
      if ((v21 & 8) == 0) {
        goto LABEL_30;
      }
LABEL_47:
      unint64_t v25 = *(void *)(a1 + 264) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v25 + 23) < 0)
      {
        **(unsigned char **)unint64_t v25 = 0;
        *(void *)(v25 + 8) = 0;
        if ((v21 & 0x10) != 0) {
          goto LABEL_51;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v25 = 0;
        *(unsigned char *)(v25 + 23) = 0;
        if ((v21 & 0x10) != 0) {
          goto LABEL_51;
        }
      }
LABEL_31:
      if ((v21 & 0x20) == 0) {
        goto LABEL_32;
      }
      goto LABEL_52;
    }
    unint64_t v22 = *(void *)(a1 + 240) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v22 + 23) < 0)
    {
      **(unsigned char **)unint64_t v22 = 0;
      *(void *)(v22 + 8) = 0;
      if ((v21 & 2) != 0) {
        goto LABEL_39;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v22 = 0;
      *(unsigned char *)(v22 + 23) = 0;
      if ((v21 & 2) != 0) {
        goto LABEL_39;
      }
    }
LABEL_28:
    if ((v21 & 4) == 0) {
      goto LABEL_29;
    }
LABEL_43:
    unint64_t v24 = *(void *)(a1 + 256) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v24 + 23) < 0)
    {
      **(unsigned char **)unint64_t v24 = 0;
      *(void *)(v24 + 8) = 0;
      if ((v21 & 8) != 0) {
        goto LABEL_47;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v24 = 0;
      *(unsigned char *)(v24 + 23) = 0;
      if ((v21 & 8) != 0) {
        goto LABEL_47;
      }
    }
LABEL_30:
    if ((v21 & 0x10) == 0) {
      goto LABEL_31;
    }
LABEL_51:
    uint64_t result = sub_1417070(*(void *)(a1 + 272));
    if ((v21 & 0x20) == 0)
    {
LABEL_32:
      if ((v21 & 0x40) == 0) {
        goto LABEL_33;
      }
      goto LABEL_53;
    }
LABEL_52:
    uint64_t result = sub_143393C(*(void *)(a1 + 280));
    if ((v21 & 0x40) == 0)
    {
LABEL_33:
      if ((v21 & 0x80) == 0) {
        goto LABEL_56;
      }
      goto LABEL_54;
    }
LABEL_53:
    uint64_t result = sub_1418C04(*(void *)(a1 + 288));
    if ((v21 & 0x80) == 0) {
      goto LABEL_56;
    }
LABEL_54:
    uint64_t v26 = *(void *)(a1 + 296);
    char v27 = *(unsigned char *)(v26 + 8);
    uint64_t result = v26 + 8;
    *(void *)(result + 16) = 0;
    *(_DWORD *)(result + 8) = 0;
    if (v27) {
      uint64_t result = sub_188B4AC((uint64_t *)result);
    }
  }
LABEL_56:
  if ((v21 & 0x700) != 0)
  {
    *(_WORD *)(a1 + 308) = 0;
    *(_DWORD *)(a1 + 304) = 0;
  }
  char v29 = *(unsigned char *)(a1 + 8);
  uint64_t v28 = a1 + 8;
  *(_DWORD *)(v28 + 32) = 0;
  if (v29)
  {
    return sub_188B4AC((uint64_t *)v28);
  }
  return result;
}

uint64_t sub_143393C(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 24);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 32) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_1435C70(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 24) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = (uint64_t *)(v1 + 8);
  if (v6)
  {
    return sub_188B4AC(v5);
  }
  return result;
}

uint64_t sub_14339B8(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unint64_t v98 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v98, a3[11].i32[1]))
  {
    int v96 = 0;
    goto LABEL_3;
  }
  int v96 = 0;
  uint64_t v97 = (uint64_t *)(a1 + 216);
  uint64_t v95 = (uint64_t *)(a1 + 8);
  char v6 = (uint64_t **)(a1 + 72);
  uint64_t v7 = (uint64_t **)(a1 + 48);
  while (2)
  {
    uint64_t v8 = (unsigned __int8 *)(*(void *)v98 + 1);
    unsigned int v9 = **(unsigned char **)v98;
    if ((char)**(unsigned char **)v98 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        uint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v98, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (unsigned __int8 *)(*(void *)v98 + 2);
      }
    }
    *(void *)unint64_t v98 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_150;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        uint64_t v12 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        uint64_t v14 = (void *)(a1 + 240);
        goto LABEL_112;
      case 2u:
        if (v9 != 18) {
          goto LABEL_150;
        }
        *(_DWORD *)(a1 + 40) |= 0x10u;
        uint64_t v15 = *(void **)(a1 + 272);
        if (!v15)
        {
          uint64_t v16 = (void *)(*v95 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v95) {
            uint64_t v16 = (void *)*v16;
          }
          uint64_t v15 = sub_144A6DC((uint64_t)v16);
          *(void *)(a1 + 272) = v15;
          uint64_t v8 = *(unsigned __int8 **)v98;
        }
        uint64_t v17 = sub_1415788(a3, (uint64_t)v15, v8);
        goto LABEL_159;
      case 3u:
        if (v9 != 24) {
          goto LABEL_150;
        }
        uint64_t v18 = (char *)(v8 + 1);
        int v19 = *v8;
        v96 |= 0x100u;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_24;
        }
        int v20 = *v18;
        int v19 = v19 + (v20 << 7) - 128;
        if (v20 < 0)
        {
          uint64_t v89 = sub_188C0D0((uint64_t)v8, v19);
          *(void *)unint64_t v98 = v89;
          *(_DWORD *)(a1 + 304) = v90;
          if (!v89) {
            goto LABEL_171;
          }
        }
        else
        {
          uint64_t v18 = (char *)(v8 + 2);
LABEL_24:
          *(void *)unint64_t v98 = v18;
          *(_DWORD *)(a1 + 304) = v19;
        }
        goto LABEL_160;
      case 4u:
        if (v9 != 34) {
          goto LABEL_150;
        }
        int v21 = (const std::string::value_type *)(v8 - 1);
        while (1)
        {
          unint64_t v22 = (char *)(v21 + 1);
          *(void *)unint64_t v98 = v21 + 1;
          unint64_t v23 = *(_DWORD **)(a1 + 64);
          if (v23 && (uint64_t v24 = *(int *)(a1 + 56), (int)v24 < *v23))
          {
            *(_DWORD *)(a1 + 56) = v24 + 1;
            unint64_t v25 = *(std::string **)&v23[2 * v24 + 2];
          }
          else
          {
            if (!*v7) {
              operator new();
            }
            *char v27 = v26;
            v27[1] = sub_3A6EDC;
            void *v26 = 0;
            v26[1] = 0;
            int v26[2] = 0;
            unint64_t v25 = (std::string *)sub_188CDC8(a1 + 48, (uint64_t)v26);
            unint64_t v22 = *(char **)v98;
          }
          int v21 = sub_188C244(v25, v22, (uint64_t)a3);
          *(void *)unint64_t v98 = v21;
          if (!v21) {
            goto LABEL_171;
          }
          if (*(void *)a3 <= (unint64_t)v21 || *v21 != 34) {
            goto LABEL_160;
          }
        }
      case 5u:
        if (v9 != 42) {
          goto LABEL_150;
        }
        uint64_t v28 = (const std::string::value_type *)(v8 - 1);
        while (1)
        {
          char v29 = (char *)(v28 + 1);
          *(void *)unint64_t v98 = v28 + 1;
          uint64_t v30 = *(_DWORD **)(a1 + 88);
          if (v30 && (uint64_t v31 = *(int *)(a1 + 80), (int)v31 < *v30))
          {
            *(_DWORD *)(a1 + 80) = v31 + 1;
            int v32 = *(std::string **)&v30[2 * v31 + 2];
          }
          else
          {
            if (!*v6) {
              operator new();
            }
            *uint64_t v34 = v33;
            v34[1] = sub_3A6EDC;
            *int v33 = 0;
            v33[1] = 0;
            int v33[2] = 0;
            int v32 = (std::string *)sub_188CDC8(a1 + 72, (uint64_t)v33);
            char v29 = *(char **)v98;
          }
          uint64_t v28 = sub_188C244(v32, v29, (uint64_t)a3);
          *(void *)unint64_t v98 = v28;
          if (!v28) {
            goto LABEL_171;
          }
          if (*(void *)a3 <= (unint64_t)v28 || *v28 != 42) {
            goto LABEL_160;
          }
        }
      case 6u:
        if (v9 != 48) {
          goto LABEL_150;
        }
        uint64_t v35 = (char *)(v8 + 1);
        uint64_t v36 = *v8;
        v96 |= 0x200u;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_53;
        }
        int v37 = *v35;
        uint64_t v36 = v36 + (v37 << 7) - 128;
        if (v37 < 0)
        {
          uint64_t v91 = sub_188C138((uint64_t)v8, v36);
          *(void *)unint64_t v98 = v91;
          *(unsigned char *)(a1 + 308) = v92 != 0;
          if (!v91) {
            goto LABEL_171;
          }
        }
        else
        {
          uint64_t v35 = (char *)(v8 + 2);
LABEL_53:
          *(void *)unint64_t v98 = v35;
          *(unsigned char *)(a1 + 308) = v36 != 0;
        }
        goto LABEL_160;
      case 7u:
        if (v9 != 58) {
          goto LABEL_150;
        }
        unint64_t v38 = v8 - 1;
        while (1)
        {
          uint64_t v39 = v38 + 1;
          *(void *)unint64_t v98 = v38 + 1;
          uint64_t v40 = *(_DWORD **)(a1 + 112);
          if (v40 && (uint64_t v41 = *(int *)(a1 + 104), (int)v41 < *v40))
          {
            *(_DWORD *)(a1 + 104) = v41 + 1;
            uint64_t v42 = *(void *)&v40[2 * v41 + 2];
          }
          else
          {
            sub_144CD14(*(void *)(a1 + 96));
            uint64_t v42 = sub_188CDC8(a1 + 96, v43);
            uint64_t v39 = *(unsigned __int8 **)v98;
          }
          unint64_t v38 = (unsigned __int8 *)sub_1434478(a3, v42, v39);
          *(void *)unint64_t v98 = v38;
          if (!v38) {
            goto LABEL_171;
          }
          if (*(void *)a3 <= (unint64_t)v38 || *v38 != 58) {
            goto LABEL_160;
          }
        }
      case 8u:
        if (v9 != 66) {
          goto LABEL_150;
        }
        int v44 = v8 - 1;
        while (1)
        {
          uint64_t v45 = v44 + 1;
          *(void *)unint64_t v98 = v44 + 1;
          uint64_t v46 = *(_DWORD **)(a1 + 136);
          if (v46 && (uint64_t v47 = *(int *)(a1 + 128), (int)v47 < *v46))
          {
            *(_DWORD *)(a1 + 128) = v47 + 1;
            uint64_t v48 = *(void *)&v46[2 * v47 + 2];
          }
          else
          {
            unint64_t v49 = sub_15C1B30(*(void *)(a1 + 120));
            uint64_t v48 = sub_188CDC8(a1 + 120, (uint64_t)v49);
            uint64_t v45 = *(unsigned __int8 **)v98;
          }
          int v44 = (unsigned __int8 *)sub_125CF74(a3, v48, v45);
          *(void *)unint64_t v98 = v44;
          if (!v44) {
            goto LABEL_171;
          }
          if (*(void *)a3 <= (unint64_t)v44 || *v44 != 66) {
            goto LABEL_160;
          }
        }
      case 9u:
        if (v9 != 74) {
          goto LABEL_150;
        }
        uint64_t v50 = v8 - 1;
        while (1)
        {
          unint64_t v51 = v50 + 1;
          *(void *)unint64_t v98 = v50 + 1;
          uint64_t v52 = *(_DWORD **)(a1 + 160);
          if (v52 && (uint64_t v53 = *(int *)(a1 + 152), (int)v53 < *v52))
          {
            *(_DWORD *)(a1 + 152) = v53 + 1;
            uint64_t v54 = *(void *)&v52[2 * v53 + 2];
          }
          else
          {
            uint64_t v55 = sub_15C1B30(*(void *)(a1 + 144));
            uint64_t v54 = sub_188CDC8(a1 + 144, (uint64_t)v55);
            unint64_t v51 = *(unsigned __int8 **)v98;
          }
          uint64_t v50 = (unsigned __int8 *)sub_125CF74(a3, v54, v51);
          *(void *)unint64_t v98 = v50;
          if (!v50) {
            goto LABEL_171;
          }
          if (*(void *)a3 <= (unint64_t)v50 || *v50 != 74) {
            goto LABEL_160;
          }
        }
      case 0xCu:
        if (v9 != 98) {
          goto LABEL_150;
        }
        uint64_t v56 = (char *)(v8 - 1);
        while (1)
        {
          uint64_t v57 = (unsigned __int8 *)(v56 + 1);
          *(void *)unint64_t v98 = v56 + 1;
          unsigned int v58 = *(_DWORD **)(a1 + 184);
          if (v58 && (uint64_t v59 = *(int *)(a1 + 176), (int)v59 < *v58))
          {
            *(_DWORD *)(a1 + 176) = v59 + 1;
            uint64_t v60 = *(void *)&v58[2 * v59 + 2];
          }
          else
          {
            uint64_t v61 = sub_144BEB4(*(void *)(a1 + 168));
            uint64_t v60 = sub_188CDC8(a1 + 168, v61);
            uint64_t v57 = *(unsigned __int8 **)v98;
          }
          uint64_t v56 = sub_1434508(a3, v60, v57);
          *(void *)unint64_t v98 = v56;
          if (!v56) {
            goto LABEL_171;
          }
          if (*(void *)a3 <= (unint64_t)v56 || *v56 != 98) {
            goto LABEL_160;
          }
        }
      case 0xDu:
        if (v9 != 106) {
          goto LABEL_150;
        }
        *(_DWORD *)(a1 + 40) |= 2u;
        uint64_t v62 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v62 & 0xFFFFFFFFFFFFFFFCLL);
        if (v62) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        uint64_t v14 = (void *)(a1 + 248);
        goto LABEL_112;
      case 0xFu:
        if (v9 != 122) {
          goto LABEL_150;
        }
        *(_DWORD *)(a1 + 40) |= 0x20u;
        uint64_t v63 = *(void *)(a1 + 280);
        if (!v63)
        {
          BOOL v64 = (void *)(*v95 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v95) {
            BOOL v64 = (void *)*v64;
          }
          uint64_t v63 = sub_144C084((uint64_t)v64);
          *(void *)(a1 + 280) = v63;
          uint64_t v8 = *(unsigned __int8 **)v98;
        }
        uint64_t v17 = (uint64_t)sub_1434598(a3, v63, v8);
        goto LABEL_159;
      case 0x10u:
        if (v9 != 130) {
          goto LABEL_150;
        }
        *(_DWORD *)(a1 + 40) |= 4u;
        uint64_t v65 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v65 & 0xFFFFFFFFFFFFFFFCLL);
        if (v65) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        uint64_t v14 = (void *)(a1 + 256);
        goto LABEL_112;
      case 0x11u:
        if (v9 != 138) {
          goto LABEL_150;
        }
        *(_DWORD *)(a1 + 40) |= 8u;
        uint64_t v66 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v66 & 0xFFFFFFFFFFFFFFFCLL);
        if (v66) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        uint64_t v14 = (void *)(a1 + 264);
LABEL_112:
        int v67 = (std::string *)sub_1880F84(v14, v13);
        uint64_t v17 = (uint64_t)sub_188C244(v67, *(char **)v98, (uint64_t)a3);
        goto LABEL_159;
      case 0x12u:
        if (v9 != 146) {
          goto LABEL_150;
        }
        *(_DWORD *)(a1 + 40) |= 0x40u;
        uint64_t v68 = *(void *)(a1 + 288);
        if (!v68)
        {
          uint64_t v69 = (void *)(*v95 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v95) {
            uint64_t v69 = (void *)*v69;
          }
          uint64_t v68 = sub_144A8B0((uint64_t)v69);
          *(void *)(a1 + 288) = v68;
          uint64_t v8 = *(unsigned __int8 **)v98;
        }
        uint64_t v17 = sub_14320A8(a3, v68, v8);
        goto LABEL_159;
      case 0x13u:
        if (v9 != 152) {
          goto LABEL_150;
        }
        v70 = (char *)(v8 + 1);
        uint64_t v71 = *v8;
        v96 |= 0x400u;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_123;
        }
        int v72 = *v70;
        uint64_t v71 = v71 + (v72 << 7) - 128;
        if (v72 < 0)
        {
          uint64_t v93 = sub_188C138((uint64_t)v8, v71);
          *(void *)unint64_t v98 = v93;
          *(unsigned char *)(a1 + 309) = v94 != 0;
          if (!v93) {
            goto LABEL_171;
          }
        }
        else
        {
          v70 = (char *)(v8 + 2);
LABEL_123:
          *(void *)unint64_t v98 = v70;
          *(unsigned char *)(a1 + 309) = v71 != 0;
        }
        goto LABEL_160;
      case 0x14u:
        if (v9 != 162) {
          goto LABEL_150;
        }
        int v73 = v8 - 2;
        while (1)
        {
          uint64_t v74 = v73 + 2;
          *(void *)unint64_t v98 = v73 + 2;
          uint64_t v75 = *(_DWORD **)(a1 + 208);
          if (v75 && (uint64_t v76 = *(int *)(a1 + 200), (int)v76 < *v75))
          {
            *(_DWORD *)(a1 + 200) = v76 + 1;
            uint64_t v77 = *(void *)&v75[2 * v76 + 2];
          }
          else
          {
            uint64_t v78 = sub_15C1B30(*(void *)(a1 + 192));
            uint64_t v77 = sub_188CDC8(a1 + 192, (uint64_t)v78);
            uint64_t v74 = *(unsigned __int8 **)v98;
          }
          int v73 = (unsigned __int8 *)sub_125CF74(a3, v77, v74);
          *(void *)unint64_t v98 = v73;
          if (!v73) {
            goto LABEL_171;
          }
          if (*(void *)a3 <= (unint64_t)v73 || *(_WORD *)v73 != 418) {
            goto LABEL_160;
          }
        }
      case 0x19u:
        if (v9 != 202) {
          goto LABEL_150;
        }
        *(_DWORD *)(a1 + 40) |= 0x80u;
        uint64_t v79 = *(void **)(a1 + 296);
        if (!v79)
        {
          uint64_t v80 = (void *)(*v95 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v95) {
            uint64_t v80 = (void *)*v80;
          }
          uint64_t v79 = sub_144BF30((uint64_t)v80);
          *(void *)(a1 + 296) = v79;
          uint64_t v8 = *(unsigned __int8 **)v98;
        }
        uint64_t v17 = (uint64_t)sub_1434628(a3, (uint64_t)v79, v8);
        goto LABEL_159;
      case 0x1Au:
        if (v9 != 210) {
          goto LABEL_150;
        }
        int v81 = v8 - 2;
        while (1)
        {
          uint64_t v82 = v81 + 2;
          *(void *)unint64_t v98 = v81 + 2;
          uint64_t v83 = *(_DWORD **)(a1 + 232);
          if (v83 && (uint64_t v84 = *(int *)(a1 + 224), (int)v84 < *v83))
          {
            *(_DWORD *)(a1 + 224) = v84 + 1;
            uint64_t v85 = *(void *)&v83[2 * v84 + 2];
          }
          else
          {
            unint64_t v86 = sub_15C1B30(*v97);
            uint64_t v85 = sub_188CDC8((uint64_t)v97, (uint64_t)v86);
            uint64_t v82 = *(unsigned __int8 **)v98;
          }
          int v81 = (unsigned __int8 *)sub_125CF74(a3, v85, v82);
          *(void *)unint64_t v98 = v81;
          if (!v81) {
            goto LABEL_171;
          }
          if (*(void *)a3 <= (unint64_t)v81 || *(_WORD *)v81 != 466) {
            goto LABEL_160;
          }
        }
      default:
LABEL_150:
        if (v9) {
          BOOL v87 = (v9 & 7) == 4;
        }
        else {
          BOOL v87 = 1;
        }
        if (!v87)
        {
          if (v9 - 8000 > 0x31F)
          {
            if (*v95)
            {
              uint64_t v88 = (std::string *)((*v95 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              uint64_t v88 = (std::string *)sub_188DBD8(v95);
              uint64_t v8 = *(unsigned __int8 **)v98;
            }
            uint64_t v17 = (uint64_t)sub_1885AC0(v9, v88, (char *)v8, a3);
          }
          else
          {
            uint64_t v17 = (uint64_t)sub_18859DC((uint64_t **)(a1 + 16), v9, (char *)v8, (uint64_t)&off_25386C0, v95, a3);
          }
LABEL_159:
          *(void *)unint64_t v98 = v17;
          if (!v17) {
            goto LABEL_171;
          }
LABEL_160:
          if (sub_11947B8((uint64_t)a3, (char **)v98, a3[11].i32[1])) {
            goto LABEL_3;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_171:
        }
          *(void *)unint64_t v98 = 0;
LABEL_3:
        *(_DWORD *)(a1 + 40) |= v96;
        return *(void *)v98;
    }
  }
}

uint64_t sub_1434478(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1446CC8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1434508(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1432AEC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1434598(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_14368A8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1434628(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1433054(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_14346B8(uint64_t a1, char *a2, unint64_t *a3)
{
  uint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if (v6)
  {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 240) & 0xFFFFFFFFFFFFFFFELL), a2);
    if ((v6 & 0x10) == 0)
    {
LABEL_3:
      if ((v6 & 0x100) == 0) {
        goto LABEL_18;
      }
      goto LABEL_12;
    }
  }
  else if ((v6 & 0x10) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v7 = *(void *)(a1 + 272);
  char *v4 = 18;
  unsigned int v8 = *(_DWORD *)(v7 + 20);
  v4[1] = v8;
  if (v8 > 0x7F) {
    unsigned int v9 = sub_188A9CC(v8, v4 + 1);
  }
  else {
    unsigned int v9 = v4 + 2;
  }
  uint64_t v4 = sub_1417780(v7, (unint64_t)v9, a3);
  if ((v6 & 0x100) != 0)
  {
LABEL_12:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 304);
    char *v4 = 24;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_18:
  uint64_t v13 = *(unsigned int *)(a1 + 56);
  if ((int)v13 >= 1)
  {
    uint64_t v14 = 0;
    uint64_t v15 = 8 * v13;
    do
    {
      uint64_t v16 = *(void **)(*(void *)(a1 + 64) + v14 + 8);
      if (*((char *)v16 + 23) < 0)
      {
        int64_t v17 = v16[1];
        if (v17 > 127) {
          goto LABEL_29;
        }
      }
      else
      {
        int64_t v17 = *((unsigned __int8 *)v16 + 23);
      }
      if ((uint64_t)(*a3 - (void)v4 + 14) >= v17)
      {
        char *v4 = 34;
        v4[1] = v17;
        if (*((char *)v16 + 23) < 0) {
          uint64_t v16 = (void *)*v16;
        }
        uint64_t v18 = v4 + 2;
        memcpy(v18, v16, v17);
        uint64_t v4 = &v18[v17];
        goto LABEL_27;
      }
LABEL_29:
      uint64_t v4 = (char *)sub_188A868(a3, 4, (uint64_t)v16, v4);
LABEL_27:
      v14 += 8;
    }
    while (v15 != v14);
  }
  uint64_t v19 = *(unsigned int *)(a1 + 80);
  if ((int)v19 >= 1)
  {
    uint64_t v20 = 0;
    uint64_t v21 = 8 * v19;
    do
    {
      unint64_t v22 = *(void **)(*(void *)(a1 + 88) + v20 + 8);
      if (*((char *)v22 + 23) < 0)
      {
        int64_t v23 = v22[1];
        if (v23 > 127) {
          goto LABEL_41;
        }
      }
      else
      {
        int64_t v23 = *((unsigned __int8 *)v22 + 23);
      }
      if ((uint64_t)(*a3 - (void)v4 + 14) >= v23)
      {
        char *v4 = 42;
        v4[1] = v23;
        if (*((char *)v22 + 23) < 0) {
          unint64_t v22 = (void *)*v22;
        }
        uint64_t v24 = v4 + 2;
        memcpy(v24, v22, v23);
        uint64_t v4 = &v24[v23];
        goto LABEL_39;
      }
LABEL_41:
      uint64_t v4 = (char *)sub_188A868(a3, 5, (uint64_t)v22, v4);
LABEL_39:
      v20 += 8;
    }
    while (v21 != v20);
  }
  if ((v6 & 0x200) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v25 = *(unsigned char *)(a1 + 308);
    char *v4 = 48;
    v4[1] = v25;
    v4 += 2;
  }
  int v26 = *(_DWORD *)(a1 + 104);
  if (v26)
  {
    for (int i = 0; i != v26; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v28 = *(void *)(*(void *)(a1 + 112) + 8 * i + 8);
      char *v4 = 58;
      unsigned int v29 = *(_DWORD *)(v28 + 20);
      v4[1] = v29;
      if (v29 > 0x7F) {
        uint64_t v30 = sub_188A9CC(v29, v4 + 1);
      }
      else {
        uint64_t v30 = v4 + 2;
      }
      uint64_t v4 = sub_1447378(v28, (unint64_t)v30, a3);
    }
  }
  int v31 = *(_DWORD *)(a1 + 128);
  if (v31)
  {
    for (int j = 0; j != v31; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v33 = *(void *)(*(void *)(a1 + 136) + 8 * j + 8);
      char *v4 = 66;
      unsigned int v34 = *(_DWORD *)(v33 + 20);
      v4[1] = v34;
      if (v34 > 0x7F) {
        uint64_t v35 = sub_188A9CC(v34, v4 + 1);
      }
      else {
        uint64_t v35 = v4 + 2;
      }
      uint64_t v4 = sub_15B2EA4(v33, v35, a3);
    }
  }
  int v36 = *(_DWORD *)(a1 + 152);
  if (v36)
  {
    for (int k = 0; k != v36; ++k)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v38 = *(void *)(*(void *)(a1 + 160) + 8 * k + 8);
      char *v4 = 74;
      unsigned int v39 = *(_DWORD *)(v38 + 20);
      v4[1] = v39;
      if (v39 > 0x7F) {
        uint64_t v40 = sub_188A9CC(v39, v4 + 1);
      }
      else {
        uint64_t v40 = v4 + 2;
      }
      uint64_t v4 = sub_15B2EA4(v38, v40, a3);
    }
  }
  int v41 = *(_DWORD *)(a1 + 176);
  if (v41)
  {
    for (int m = 0; m != v41; ++m)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v43 = *(void *)(*(void *)(a1 + 184) + 8 * m + 8);
      char *v4 = 98;
      unsigned int v44 = *(_DWORD *)(v43 + 20);
      v4[1] = v44;
      if (v44 > 0x7F) {
        uint64_t v45 = sub_188A9CC(v44, v4 + 1);
      }
      else {
        uint64_t v45 = v4 + 2;
      }
      uint64_t v4 = sub_1432D24(v43, (unint64_t)v45, a3);
    }
  }
  if ((v6 & 2) != 0)
  {
    uint64_t v4 = sub_117A0AC(a3, 13, (const void **)(*(void *)(a1 + 248) & 0xFFFFFFFFFFFFFFFELL), v4);
    if ((v6 & 0x20) == 0)
    {
LABEL_80:
      if ((v6 & 4) == 0) {
        goto LABEL_81;
      }
      goto LABEL_92;
    }
  }
  else if ((v6 & 0x20) == 0)
  {
    goto LABEL_80;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v46 = *(void *)(a1 + 280);
  char *v4 = 122;
  unsigned int v47 = *(_DWORD *)(v46 + 40);
  v4[1] = v47;
  if (v47 > 0x7F) {
    uint64_t v48 = sub_188A9CC(v47, v4 + 1);
  }
  else {
    uint64_t v48 = v4 + 2;
  }
  uint64_t v4 = sub_1436AD8(v46, v48, a3);
  if ((v6 & 4) == 0)
  {
LABEL_81:
    if ((v6 & 8) == 0) {
      goto LABEL_82;
    }
    goto LABEL_93;
  }
LABEL_92:
  uint64_t v4 = sub_117A0AC(a3, 16, (const void **)(*(void *)(a1 + 256) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 8) == 0)
  {
LABEL_82:
    if ((v6 & 0x40) == 0) {
      goto LABEL_83;
    }
    goto LABEL_94;
  }
LABEL_93:
  uint64_t v4 = sub_117A0AC(a3, 17, (const void **)(*(void *)(a1 + 264) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x40) == 0)
  {
LABEL_83:
    if ((v6 & 0x400) == 0) {
      goto LABEL_103;
    }
    goto LABEL_100;
  }
LABEL_94:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v49 = *(void *)(a1 + 288);
  *(_WORD *)uint64_t v4 = 402;
  unsigned int v50 = *(_DWORD *)(v49 + 20);
  v4[2] = v50;
  if (v50 > 0x7F) {
    unint64_t v51 = sub_188A9CC(v50, v4 + 2);
  }
  else {
    unint64_t v51 = v4 + 3;
  }
  uint64_t v4 = sub_1418FB4(v49, v51, a3);
  if ((v6 & 0x400) != 0)
  {
LABEL_100:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v52 = *(unsigned char *)(a1 + 309);
    *(_WORD *)uint64_t v4 = 408;
    v4[2] = v52;
    v4 += 3;
  }
LABEL_103:
  int v53 = *(_DWORD *)(a1 + 200);
  if (v53)
  {
    for (int n = 0; n != v53; ++n)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v55 = *(void *)(*(void *)(a1 + 208) + 8 * n + 8);
      *(_WORD *)uint64_t v4 = 418;
      unsigned int v56 = *(_DWORD *)(v55 + 20);
      v4[2] = v56;
      if (v56 > 0x7F) {
        uint64_t v57 = sub_188A9CC(v56, v4 + 2);
      }
      else {
        uint64_t v57 = v4 + 3;
      }
      uint64_t v4 = sub_15B2EA4(v55, v57, a3);
    }
  }
  if ((v6 & 0x80) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v58 = *(void *)(a1 + 296);
    *(_WORD *)uint64_t v4 = 458;
    unsigned int v59 = *(_DWORD *)(v58 + 20);
    v4[2] = v59;
    if (v59 > 0x7F) {
      uint64_t v60 = sub_188A9CC(v59, v4 + 2);
    }
    else {
      uint64_t v60 = v4 + 3;
    }
    uint64_t v4 = sub_14331D4(v58, (unint64_t)v60, a3);
  }
  int v61 = *(_DWORD *)(a1 + 224);
  if (v61)
  {
    for (iint i = 0; ii != v61; ++ii)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v63 = *(void *)(*(void *)(a1 + 232) + 8 * ii + 8);
      *(_WORD *)uint64_t v4 = 466;
      unsigned int v64 = *(_DWORD *)(v63 + 20);
      v4[2] = v64;
      if (v64 > 0x7F) {
        uint64_t v65 = sub_188A9CC(v64, v4 + 2);
      }
      else {
        uint64_t v65 = v4 + 3;
      }
      uint64_t v4 = sub_15B2EA4(v63, v65, a3);
    }
  }
  if (*(_WORD *)(a1 + 26)) {
    uint64_t v4 = sub_1886844(a1 + 16, 1000, 1100, v4, a3);
  }
  uint64_t v66 = *(void *)(a1 + 8);
  if ((v66 & 1) == 0) {
    return v4;
  }
  unint64_t v68 = v66 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v68 + 31) < 0)
  {
    uint64_t v69 = *(void **)(v68 + 8);
    uint64_t v70 = *(void *)(v68 + 16);
  }
  else
  {
    uint64_t v69 = (void *)(v68 + 8);
    LODWORD(v70) = *(unsigned __int8 *)(v68 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v70)
  {
    uint64_t v71 = (int)v70;
    memcpy(v4, v69, (int)v70);
    v4 += v71;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v69, v70, v4);
}

uint64_t sub_1434F28(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(unsigned int *)(a1 + 56);
  uint64_t v4 = v2 + v3;
  if ((int)v3 >= 1)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v6 = *v5++;
      uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
      uint64_t v8 = *(void *)(v6 + 8);
      if ((v7 & 0x80u) == 0) {
        uint64_t v8 = v7;
      }
      v4 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6);
      --v3;
    }
    while (v3);
  }
  uint64_t v9 = *(unsigned int *)(a1 + 80);
  uint64_t v10 = v4 + v9;
  if ((int)v9 >= 1)
  {
    unsigned int v11 = (uint64_t *)(*(void *)(a1 + 88) + 8);
    do
    {
      uint64_t v12 = *v11++;
      uint64_t v13 = *(unsigned __int8 *)(v12 + 23);
      uint64_t v14 = *(void *)(v12 + 8);
      if ((v13 & 0x80u) == 0) {
        uint64_t v14 = v13;
      }
      v10 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      --v9;
    }
    while (v9);
  }
  uint64_t v15 = *(int *)(a1 + 104);
  uint64_t v16 = v10 + v15;
  uint64_t v17 = *(void *)(a1 + 112);
  if (v17) {
    uint64_t v18 = (uint64_t *)(v17 + 8);
  }
  else {
    uint64_t v18 = 0;
  }
  if (v15)
  {
    uint64_t v19 = 8 * v15;
    do
    {
      uint64_t v20 = *v18++;
      uint64_t v21 = sub_14478BC(v20);
      v16 += v21 + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6);
      v19 -= 8;
    }
    while (v19);
  }
  uint64_t v22 = *(int *)(a1 + 128);
  uint64_t v23 = v16 + v22;
  uint64_t v24 = *(void *)(a1 + 136);
  if (v24) {
    char v25 = (uint64_t *)(v24 + 8);
  }
  else {
    char v25 = 0;
  }
  if (v22)
  {
    uint64_t v26 = 8 * v22;
    do
    {
      uint64_t v27 = *v25++;
      uint64_t v28 = sub_15B2F90(v27);
      v23 += v28 + ((9 * (__clz(v28 | 1) ^ 0x1F) + 73) >> 6);
      v26 -= 8;
    }
    while (v26);
  }
  uint64_t v29 = *(int *)(a1 + 152);
  uint64_t v30 = v23 + v29;
  uint64_t v31 = *(void *)(a1 + 160);
  if (v31) {
    int v32 = (uint64_t *)(v31 + 8);
  }
  else {
    int v32 = 0;
  }
  if (v29)
  {
    uint64_t v33 = 8 * v29;
    do
    {
      uint64_t v34 = *v32++;
      uint64_t v35 = sub_15B2F90(v34);
      v30 += v35 + ((9 * (__clz(v35 | 1) ^ 0x1F) + 73) >> 6);
      v33 -= 8;
    }
    while (v33);
  }
  uint64_t v36 = *(int *)(a1 + 176);
  uint64_t v37 = v30 + v36;
  uint64_t v38 = *(void *)(a1 + 184);
  if (v38) {
    unsigned int v39 = (uint64_t *)(v38 + 8);
  }
  else {
    unsigned int v39 = 0;
  }
  if (v36)
  {
    uint64_t v40 = 8 * v36;
    do
    {
      uint64_t v41 = *v39++;
      unint64_t v42 = sub_1432EC8(v41);
      v37 += v42 + ((9 * (__clz(v42 | 1) ^ 0x1F) + 73) >> 6);
      v40 -= 8;
    }
    while (v40);
  }
  uint64_t v43 = *(int *)(a1 + 200);
  uint64_t v44 = v37 + 2 * v43;
  uint64_t v45 = *(void *)(a1 + 208);
  if (v45) {
    uint64_t v46 = (uint64_t *)(v45 + 8);
  }
  else {
    uint64_t v46 = 0;
  }
  if (v43)
  {
    uint64_t v47 = 8 * v43;
    do
    {
      uint64_t v48 = *v46++;
      uint64_t v49 = sub_15B2F90(v48);
      v44 += v49 + ((9 * (__clz(v49 | 1) ^ 0x1F) + 73) >> 6);
      v47 -= 8;
    }
    while (v47);
  }
  uint64_t v50 = *(int *)(a1 + 224);
  uint64_t v51 = v44 + 2 * v50;
  uint64_t v52 = *(void *)(a1 + 232);
  if (v52) {
    int v53 = (uint64_t *)(v52 + 8);
  }
  else {
    int v53 = 0;
  }
  if (v50)
  {
    uint64_t v54 = 8 * v50;
    do
    {
      uint64_t v55 = *v53++;
      uint64_t v56 = sub_15B2F90(v55);
      v51 += v56 + ((9 * (__clz(v56 | 1) ^ 0x1F) + 73) >> 6);
      v54 -= 8;
    }
    while (v54);
  }
  int v57 = *(_DWORD *)(a1 + 40);
  if (!(_BYTE)v57) {
    goto LABEL_57;
  }
  if (v57)
  {
    unint64_t v62 = *(void *)(a1 + 240) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v63 = *(unsigned __int8 *)(v62 + 23);
    uint64_t v64 = *(void *)(v62 + 8);
    if ((v63 & 0x80u) == 0) {
      uint64_t v64 = v63;
    }
    v51 += v64 + ((9 * (__clz(v64 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v57 & 2) == 0)
    {
LABEL_50:
      if ((v57 & 4) == 0) {
        goto LABEL_51;
      }
      goto LABEL_73;
    }
  }
  else if ((v57 & 2) == 0)
  {
    goto LABEL_50;
  }
  unint64_t v65 = *(void *)(a1 + 248) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v66 = *(unsigned __int8 *)(v65 + 23);
  uint64_t v67 = *(void *)(v65 + 8);
  if ((v66 & 0x80u) == 0) {
    uint64_t v67 = v66;
  }
  v51 += v67 + ((9 * (__clz(v67 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v57 & 4) == 0)
  {
LABEL_51:
    if ((v57 & 8) == 0) {
      goto LABEL_52;
    }
    goto LABEL_76;
  }
LABEL_73:
  unint64_t v68 = *(void *)(a1 + 256) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v69 = *(unsigned __int8 *)(v68 + 23);
  uint64_t v70 = *(void *)(v68 + 8);
  if ((v69 & 0x80u) == 0) {
    uint64_t v70 = v69;
  }
  v51 += v70 + ((9 * (__clz(v70 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v57 & 8) == 0)
  {
LABEL_52:
    if ((v57 & 0x10) == 0) {
      goto LABEL_53;
    }
    goto LABEL_79;
  }
LABEL_76:
  unint64_t v71 = *(void *)(a1 + 264) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v72 = *(unsigned __int8 *)(v71 + 23);
  uint64_t v73 = *(void *)(v71 + 8);
  if ((v72 & 0x80u) == 0) {
    uint64_t v73 = v72;
  }
  v51 += v73 + ((9 * (__clz(v73 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v57 & 0x10) == 0)
  {
LABEL_53:
    if ((v57 & 0x20) == 0) {
      goto LABEL_54;
    }
LABEL_80:
    uint64_t v75 = sub_1436C1C(*(void *)(a1 + 280));
    v51 += v75 + ((9 * (__clz(v75 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v57 & 0x40) == 0)
    {
LABEL_55:
      if ((v57 & 0x80) == 0) {
        goto LABEL_57;
      }
      goto LABEL_56;
    }
    goto LABEL_81;
  }
LABEL_79:
  uint64_t v74 = sub_1417BAC(*(void *)(a1 + 272));
  v51 += v74 + ((9 * (__clz(v74 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v57 & 0x20) != 0) {
    goto LABEL_80;
  }
LABEL_54:
  if ((v57 & 0x40) == 0) {
    goto LABEL_55;
  }
LABEL_81:
  uint64_t v76 = sub_14191E0(*(void *)(a1 + 288));
  v51 += v76 + ((9 * (__clz(v76 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v57 & 0x80) != 0)
  {
LABEL_56:
    unint64_t v58 = sub_14332FC(*(void *)(a1 + 296));
    v51 += v58 + ((9 * (__clz(v58 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
LABEL_57:
  if ((v57 & 0x700) != 0)
  {
    if ((v57 & 0x100) != 0) {
      v51 += ((9 * (__clz(*(_DWORD *)(a1 + 304) | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    uint64_t v59 = v51 + 2;
    if ((v57 & 0x200) == 0) {
      uint64_t v59 = v51;
    }
    if ((v57 & 0x400) != 0) {
      uint64_t v51 = v59 + 3;
    }
    else {
      uint64_t v51 = v59;
    }
  }
  uint64_t v60 = *(void *)(a1 + 8);
  if (v60)
  {
    unint64_t v77 = v60 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v77 + 31) < 0) {
      uint64_t v78 = *(void *)(v77 + 16);
    }
    else {
      uint64_t v78 = *(unsigned __int8 *)(v77 + 31);
    }
    v51 += v78;
  }
  *(_DWORD *)(a1 + 44) = v51;
  return v51;
}

void sub_1435460(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 56);
  if (v4)
  {
    uint64_t v5 = (const std::string **)(*(void *)(a2 + 64) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_188FB98(a1 + 48, v6, v5, v4, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v7 = *(_DWORD *)(a1 + 56) + v4;
    *(_DWORD *)(a1 + 56) = v7;
    uint64_t v8 = *(int **)(a1 + 64);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 80);
  if (v9)
  {
    uint64_t v10 = (const std::string **)(*(void *)(a2 + 88) + 8);
    unsigned int v11 = (std::string **)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_188FB98(a1 + 72, v11, v10, v9, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v12 = *(_DWORD *)(a1 + 80) + v9;
    *(_DWORD *)(a1 + 80) = v12;
    uint64_t v13 = *(int **)(a1 + 88);
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 104);
  if (v14)
  {
    uint64_t v15 = (uint64_t *)(*(void *)(a2 + 112) + 8);
    uint64_t v16 = (uint64_t *)sub_188CCE4(a1 + 96, *(_DWORD *)(a2 + 104));
    sub_1492744((uint64_t *)(a1 + 96), v16, v15, v14, **(_DWORD **)(a1 + 112) - *(_DWORD *)(a1 + 104));
    int v17 = *(_DWORD *)(a1 + 104) + v14;
    *(_DWORD *)(a1 + 104) = v17;
    uint64_t v18 = *(int **)(a1 + 112);
    if (*v18 < v17) {
      int *v18 = v17;
    }
  }
  int v19 = *(_DWORD *)(a2 + 128);
  if (v19)
  {
    uint64_t v20 = (uint64_t *)(*(void *)(a2 + 136) + 8);
    uint64_t v21 = (std::string **)sub_188CCE4(a1 + 120, *(_DWORD *)(a2 + 128));
    sub_12C1E38((std::string *)(a1 + 120), v21, v20, v19, **(_DWORD **)(a1 + 136) - *(_DWORD *)(a1 + 128));
    int v22 = *(_DWORD *)(a1 + 128) + v19;
    *(_DWORD *)(a1 + 128) = v22;
    uint64_t v23 = *(int **)(a1 + 136);
    if (*v23 < v22) {
      int *v23 = v22;
    }
  }
  int v24 = *(_DWORD *)(a2 + 152);
  if (v24)
  {
    char v25 = (uint64_t *)(*(void *)(a2 + 160) + 8);
    uint64_t v26 = (std::string **)sub_188CCE4(a1 + 144, *(_DWORD *)(a2 + 152));
    sub_12C1E38((std::string *)(a1 + 144), v26, v25, v24, **(_DWORD **)(a1 + 160) - *(_DWORD *)(a1 + 152));
    int v27 = *(_DWORD *)(a1 + 152) + v24;
    *(_DWORD *)(a1 + 152) = v27;
    uint64_t v28 = *(int **)(a1 + 160);
    if (*v28 < v27) {
      *uint64_t v28 = v27;
    }
  }
  int v29 = *(_DWORD *)(a2 + 176);
  if (v29)
  {
    uint64_t v30 = (uint64_t *)(*(void *)(a2 + 184) + 8);
    uint64_t v31 = (std::string **)sub_188CCE4(a1 + 168, *(_DWORD *)(a2 + 176));
    sub_14927D0((uint64_t *)(a1 + 168), v31, v30, v29, **(_DWORD **)(a1 + 184) - *(_DWORD *)(a1 + 176));
    int v32 = *(_DWORD *)(a1 + 176) + v29;
    *(_DWORD *)(a1 + 176) = v32;
    uint64_t v33 = *(int **)(a1 + 184);
    if (*v33 < v32) {
      *uint64_t v33 = v32;
    }
  }
  int v34 = *(_DWORD *)(a2 + 200);
  if (v34)
  {
    uint64_t v35 = (uint64_t *)(*(void *)(a2 + 208) + 8);
    uint64_t v36 = (std::string **)sub_188CCE4(a1 + 192, *(_DWORD *)(a2 + 200));
    sub_12C1E38((std::string *)(a1 + 192), v36, v35, v34, **(_DWORD **)(a1 + 208) - *(_DWORD *)(a1 + 200));
    int v37 = *(_DWORD *)(a1 + 200) + v34;
    *(_DWORD *)(a1 + 200) = v37;
    uint64_t v38 = *(int **)(a1 + 208);
    if (*v38 < v37) {
      int *v38 = v37;
    }
  }
  int v39 = *(_DWORD *)(a2 + 224);
  if (v39)
  {
    uint64_t v40 = (uint64_t *)(*(void *)(a2 + 232) + 8);
    uint64_t v41 = (std::string **)sub_188CCE4(a1 + 216, *(_DWORD *)(a2 + 224));
    sub_12C1E38((std::string *)(a1 + 216), v41, v40, v39, **(_DWORD **)(a1 + 232) - *(_DWORD *)(a1 + 224));
    int v42 = *(_DWORD *)(a1 + 224) + v39;
    *(_DWORD *)(a1 + 224) = v42;
    uint64_t v43 = *(int **)(a1 + 232);
    if (*v43 < v42) {
      int *v43 = v42;
    }
  }
  int v44 = *(_DWORD *)(a2 + 40);
  if (!(_BYTE)v44) {
    goto LABEL_79;
  }
  if (v44)
  {
    uint64_t v45 = (long long *)(*(void *)(a2 + 240) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 40) |= 1u;
    uint64_t v46 = *(void *)(a1 + 8);
    uint64_t v47 = (uint64_t *)(v46 & 0xFFFFFFFFFFFFFFFCLL);
    if (v46) {
      uint64_t v47 = (uint64_t *)*v47;
    }
    sub_1881DF4((std::string **)(a1 + 240), v45, v47);
    if ((v44 & 2) == 0)
    {
LABEL_28:
      if ((v44 & 4) == 0) {
        goto LABEL_29;
      }
      goto LABEL_41;
    }
  }
  else if ((v44 & 2) == 0)
  {
    goto LABEL_28;
  }
  uint64_t v48 = (long long *)(*(void *)(a2 + 248) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 40) |= 2u;
  uint64_t v49 = *(void *)(a1 + 8);
  uint64_t v50 = (uint64_t *)(v49 & 0xFFFFFFFFFFFFFFFCLL);
  if (v49) {
    uint64_t v50 = (uint64_t *)*v50;
  }
  sub_1881DF4((std::string **)(a1 + 248), v48, v50);
  if ((v44 & 4) == 0)
  {
LABEL_29:
    if ((v44 & 8) == 0) {
      goto LABEL_30;
    }
    goto LABEL_44;
  }
LABEL_41:
  uint64_t v51 = (long long *)(*(void *)(a2 + 256) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 40) |= 4u;
  uint64_t v52 = *(void *)(a1 + 8);
  int v53 = (uint64_t *)(v52 & 0xFFFFFFFFFFFFFFFCLL);
  if (v52) {
    int v53 = (uint64_t *)*v53;
  }
  sub_1881DF4((std::string **)(a1 + 256), v51, v53);
  if ((v44 & 8) == 0)
  {
LABEL_30:
    if ((v44 & 0x10) == 0) {
      goto LABEL_31;
    }
    goto LABEL_47;
  }
LABEL_44:
  uint64_t v54 = (long long *)(*(void *)(a2 + 264) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 40) |= 8u;
  uint64_t v55 = *(void *)(a1 + 8);
  uint64_t v56 = (uint64_t *)(v55 & 0xFFFFFFFFFFFFFFFCLL);
  if (v55) {
    uint64_t v56 = (uint64_t *)*v56;
  }
  sub_1881DF4((std::string **)(a1 + 264), v54, v56);
  if ((v44 & 0x10) == 0)
  {
LABEL_31:
    if ((v44 & 0x20) == 0) {
      goto LABEL_32;
    }
LABEL_55:
    *(_DWORD *)(a1 + 40) |= 0x20u;
    uint64_t v61 = *(void *)(a1 + 280);
    if (!v61)
    {
      uint64_t v62 = *(void *)(a1 + 8);
      uint64_t v63 = (void *)(v62 & 0xFFFFFFFFFFFFFFFCLL);
      if (v62) {
        uint64_t v63 = (void *)*v63;
      }
      uint64_t v61 = sub_144C084((uint64_t)v63);
      *(void *)(a1 + 280) = v61;
    }
    if (*(void *)(a2 + 280)) {
      uint64_t v64 = *(void *(****)(void *))(a2 + 280);
    }
    else {
      uint64_t v64 = &off_25387F8;
    }
    sub_1435A68(v61, (uint64_t)v64);
    if ((v44 & 0x40) == 0)
    {
LABEL_33:
      if ((v44 & 0x80) == 0) {
        goto LABEL_79;
      }
      goto LABEL_71;
    }
    goto LABEL_63;
  }
LABEL_47:
  *(_DWORD *)(a1 + 40) |= 0x10u;
  int v57 = *(std::string **)(a1 + 272);
  if (!v57)
  {
    uint64_t v58 = *(void *)(a1 + 8);
    uint64_t v59 = (void *)(v58 & 0xFFFFFFFFFFFFFFFCLL);
    if (v58) {
      uint64_t v59 = (void *)*v59;
    }
    int v57 = (std::string *)sub_144A6DC((uint64_t)v59);
    *(void *)(a1 + 272) = v57;
  }
  if (*(void *)(a2 + 272)) {
    uint64_t v60 = *(uint64_t (****)())(a2 + 272);
  }
  else {
    uint64_t v60 = &off_2537CC0;
  }
  sub_1417E18(v57, (uint64_t)v60);
  if ((v44 & 0x20) != 0) {
    goto LABEL_55;
  }
LABEL_32:
  if ((v44 & 0x40) == 0) {
    goto LABEL_33;
  }
LABEL_63:
  *(_DWORD *)(a1 + 40) |= 0x40u;
  unint64_t v65 = *(std::string **)(a1 + 288);
  if (!v65)
  {
    uint64_t v66 = *(void *)(a1 + 8);
    uint64_t v67 = (void *)(v66 & 0xFFFFFFFFFFFFFFFCLL);
    if (v66) {
      uint64_t v67 = (void *)*v67;
    }
    unint64_t v65 = (std::string *)sub_144A8B0((uint64_t)v67);
    *(void *)(a1 + 288) = v65;
  }
  if (*(void *)(a2 + 288)) {
    unint64_t v68 = *(uint64_t (****)(uint64_t))(a2 + 288);
  }
  else {
    unint64_t v68 = &off_2537D88;
  }
  sub_141930C(v65, (uint64_t)v68);
  if ((v44 & 0x80) != 0)
  {
LABEL_71:
    *(_DWORD *)(a1 + 40) |= 0x80u;
    uint64_t v69 = *(std::string **)(a1 + 296);
    if (!v69)
    {
      uint64_t v70 = *(void *)(a1 + 8);
      unint64_t v71 = (void *)(v70 & 0xFFFFFFFFFFFFFFFCLL);
      if (v70) {
        unint64_t v71 = (void *)*v71;
      }
      uint64_t v69 = (std::string *)sub_144BF30((uint64_t)v71);
      *(void *)(a1 + 296) = v69;
    }
    if (*(void *)(a2 + 296)) {
      uint64_t v72 = *(void *(****)(void *))(a2 + 296);
    }
    else {
      uint64_t v72 = &off_25386A0;
    }
    sub_11A442C(v69, (uint64_t)v72);
  }
LABEL_79:
  if ((v44 & 0x700) == 0) {
    goto LABEL_85;
  }
  if ((v44 & 0x100) == 0)
  {
    if ((v44 & 0x200) == 0) {
      goto LABEL_82;
    }
LABEL_90:
    *(unsigned char *)(a1 + 308) = *(unsigned char *)(a2 + 308);
    if ((v44 & 0x400) == 0) {
      goto LABEL_84;
    }
    goto LABEL_83;
  }
  *(_DWORD *)(a1 + 304) = *(_DWORD *)(a2 + 304);
  if ((v44 & 0x200) != 0) {
    goto LABEL_90;
  }
LABEL_82:
  if ((v44 & 0x400) != 0) {
LABEL_83:
  }
    *(unsigned char *)(a1 + 309) = *(unsigned char *)(a2 + 309);
LABEL_84:
  *(_DWORD *)(a1 + 40) |= v44;
LABEL_85:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v73 = *(void *)(a2 + 8);
  if (v73)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v73 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_1435A68(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 32) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4(a1 + 16, *(_DWORD *)(a2 + 24));
    sub_149284C((uint64_t *)(a1 + 16), v6, v5, v4, **(_DWORD **)(a1 + 32) - *(_DWORD *)(a1 + 24));
    int v7 = *(_DWORD *)(a1 + 24) + v4;
    *(_DWORD *)(a1 + 24) = v7;
    uint64_t v8 = *(int **)(a1 + 32);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_1435B38(uint64_t a1)
{
  uint64_t result = sub_18856CC(a1 + 16);
  if (result)
  {
    uint64_t v3 = *(unsigned int *)(a1 + 104);
    while ((int)v3 >= 1)
    {
      uint64_t v4 = v3 - 1;
      char v5 = sub_1447E94(*(void *)(*(void *)(a1 + 112) + 8 * v3));
      uint64_t v3 = v4;
      if ((v5 & 1) == 0) {
        return 0;
      }
    }
    return (*(unsigned char *)(a1 + 40) & 0x40) == 0 || (~*(_DWORD *)(*(void *)(a1 + 288) + 16) & 9) == 0;
  }
  return result;
}

void *sub_1435BB4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gemini.VendorDisplay.PublisherInfo");
}

void *sub_1435BC4(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1435C38(void *a1)
{
  sub_1435BC4(a1);

  operator delete();
}

uint64_t sub_1435C70(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    *(void *)(a1 + 56) = 0;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_1435C9C(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v54 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v54, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = v54 + 1;
    unsigned int v9 = *v54;
    if (*v54 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v54, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v54 + 2;
      }
    }
    uint64_t v54 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_49;
        }
        v5 |= 1u;
        int v12 = v8 + 1;
        uint64_t v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        uint64_t v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          int v12 = v8 + 2;
LABEL_13:
          uint64_t v54 = v12;
          *(void *)(a1 + 24) = v13;
          goto LABEL_56;
        }
        uint64_t v38 = (char *)sub_188C138((uint64_t)v8, v13);
        uint64_t v54 = v38;
        *(void *)(a1 + 24) = v39;
        if (v38) {
          goto LABEL_56;
        }
        goto LABEL_77;
      case 2u:
        if (v9 != 16) {
          goto LABEL_49;
        }
        v5 |= 2u;
        uint64_t v15 = v8 + 1;
        uint64_t v16 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_18;
        }
        int v17 = *v15;
        uint64_t v16 = v16 + (v17 << 7) - 128;
        if (v17 < 0)
        {
          uint64_t v40 = (char *)sub_188C138((uint64_t)v8, v16);
          uint64_t v54 = v40;
          *(void *)(a1 + 32) = v41;
          if (!v40) {
            goto LABEL_77;
          }
        }
        else
        {
          uint64_t v15 = v8 + 2;
LABEL_18:
          uint64_t v54 = v15;
          *(void *)(a1 + 32) = v16;
        }
        goto LABEL_56;
      case 3u:
        if (v9 != 24) {
          goto LABEL_49;
        }
        v5 |= 4u;
        uint64_t v18 = v8 + 1;
        int v19 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_23;
        }
        int v20 = *v18;
        int v19 = v19 + (v20 << 7) - 128;
        if (v20 < 0)
        {
          int v42 = (char *)sub_188C0D0((uint64_t)v8, v19);
          uint64_t v54 = v42;
          *(_DWORD *)(a1 + 40) = v43;
          if (!v42) {
            goto LABEL_77;
          }
        }
        else
        {
          uint64_t v18 = v8 + 2;
LABEL_23:
          uint64_t v54 = v18;
          *(_DWORD *)(a1 + 40) = v19;
        }
        goto LABEL_56;
      case 4u:
        if (v9 != 32) {
          goto LABEL_49;
        }
        v5 |= 8u;
        uint64_t v21 = v8 + 1;
        int v22 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_28;
        }
        int v23 = *v21;
        int v22 = v22 + (v23 << 7) - 128;
        if (v23 < 0)
        {
          int v44 = (char *)sub_188C0D0((uint64_t)v8, v22);
          uint64_t v54 = v44;
          *(_DWORD *)(a1 + 44) = v45;
          if (!v44) {
            goto LABEL_77;
          }
        }
        else
        {
          uint64_t v21 = v8 + 2;
LABEL_28:
          uint64_t v54 = v21;
          *(_DWORD *)(a1 + 44) = v22;
        }
        goto LABEL_56;
      case 5u:
        if (v9 != 40) {
          goto LABEL_49;
        }
        v5 |= 0x10u;
        int v24 = v8 + 1;
        int v25 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_33;
        }
        int v26 = *v24;
        int v25 = v25 + (v26 << 7) - 128;
        if (v26 < 0)
        {
          uint64_t v46 = (char *)sub_188C0D0((uint64_t)v8, v25);
          uint64_t v54 = v46;
          *(_DWORD *)(a1 + 48) = v47;
          if (!v46) {
            goto LABEL_77;
          }
        }
        else
        {
          int v24 = v8 + 2;
LABEL_33:
          uint64_t v54 = v24;
          *(_DWORD *)(a1 + 48) = v25;
        }
        goto LABEL_56;
      case 6u:
        if (v9 != 48) {
          goto LABEL_49;
        }
        v5 |= 0x20u;
        int v27 = v8 + 1;
        int v28 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_38;
        }
        int v29 = *v27;
        int v28 = v28 + (v29 << 7) - 128;
        if (v29 < 0)
        {
          uint64_t v48 = (char *)sub_188C0D0((uint64_t)v8, v28);
          uint64_t v54 = v48;
          *(_DWORD *)(a1 + 52) = v49;
          if (!v48) {
            goto LABEL_77;
          }
        }
        else
        {
          int v27 = v8 + 2;
LABEL_38:
          uint64_t v54 = v27;
          *(_DWORD *)(a1 + 52) = v28;
        }
        goto LABEL_56;
      case 7u:
        if (v9 != 56) {
          goto LABEL_49;
        }
        v5 |= 0x40u;
        uint64_t v30 = v8 + 1;
        int v31 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_43;
        }
        int v32 = *v30;
        int v31 = v31 + (v32 << 7) - 128;
        if (v32 < 0)
        {
          uint64_t v50 = (char *)sub_188C0D0((uint64_t)v8, v31);
          uint64_t v54 = v50;
          *(_DWORD *)(a1 + 56) = v51;
          if (!v50) {
            goto LABEL_77;
          }
        }
        else
        {
          uint64_t v30 = v8 + 2;
LABEL_43:
          uint64_t v54 = v30;
          *(_DWORD *)(a1 + 56) = v31;
        }
        goto LABEL_56;
      case 8u:
        if (v9 != 64) {
          goto LABEL_49;
        }
        v5 |= 0x80u;
        uint64_t v33 = v8 + 1;
        int v34 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_48;
        }
        int v35 = *v33;
        int v34 = v34 + (v35 << 7) - 128;
        if (v35 < 0)
        {
          uint64_t v52 = (char *)sub_188C0D0((uint64_t)v8, v34);
          uint64_t v54 = v52;
          *(_DWORD *)(a1 + 60) = v53;
          if (!v52) {
            goto LABEL_77;
          }
        }
        else
        {
          uint64_t v33 = v8 + 2;
LABEL_48:
          uint64_t v54 = v33;
          *(_DWORD *)(a1 + 60) = v34;
        }
        goto LABEL_56;
      default:
LABEL_49:
        if (v9) {
          BOOL v36 = (v9 & 7) == 4;
        }
        else {
          BOOL v36 = 1;
        }
        if (!v36)
        {
          if (*v7)
          {
            int v37 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            int v37 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = v54;
          }
          uint64_t v54 = (char *)sub_1885AC0(v9, v37, v8, a3);
          if (!v54) {
            goto LABEL_77;
          }
LABEL_56:
          if (sub_11947B8((uint64_t)a3, &v54, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_77:
        }
          uint64_t v54 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v54;
    }
  }
}

unsigned char *sub_14360F4(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(void *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(void *)(a1 + 32);
    unsigned char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v13 = *(_DWORD *)(a1 + 40);
    unsigned char *v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unsigned int v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v16 = *(_DWORD *)(a1 + 44);
    unsigned char *v4 = 32;
    v4[1] = v16;
    if (v16 > 0x7F)
    {
      v4[1] = v16 | 0x80;
      unsigned int v17 = v16 >> 7;
      v4[2] = v16 >> 7;
      v4 += 3;
      if (v16 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v18 = v17 >> 14;
          v17 >>= 7;
          *v4++ = v17;
        }
        while (v18);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v19 = *(_DWORD *)(a1 + 48);
    unsigned char *v4 = 40;
    v4[1] = v19;
    if (v19 > 0x7F)
    {
      v4[1] = v19 | 0x80;
      unsigned int v20 = v19 >> 7;
      v4[2] = v19 >> 7;
      v4 += 3;
      if (v19 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v21 = v20 >> 14;
          v20 >>= 7;
          *v4++ = v20;
        }
        while (v21);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x20) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v22 = *(_DWORD *)(a1 + 52);
    unsigned char *v4 = 48;
    v4[1] = v22;
    if (v22 > 0x7F)
    {
      v4[1] = v22 | 0x80;
      unsigned int v23 = v22 >> 7;
      v4[2] = v22 >> 7;
      v4 += 3;
      if (v22 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v24 = v23 >> 14;
          v23 >>= 7;
          *v4++ = v23;
        }
        while (v24);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x40) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v25 = *(_DWORD *)(a1 + 56);
    unsigned char *v4 = 56;
    v4[1] = v25;
    if (v25 > 0x7F)
    {
      v4[1] = v25 | 0x80;
      unsigned int v26 = v25 >> 7;
      v4[2] = v25 >> 7;
      v4 += 3;
      if (v25 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v27 = v26 >> 14;
          v26 >>= 7;
          *v4++ = v26;
        }
        while (v27);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x80) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v28 = *(_DWORD *)(a1 + 60);
    unsigned char *v4 = 64;
    v4[1] = v28;
    if (v28 > 0x7F)
    {
      v4[1] = v28 | 0x80;
      unsigned int v29 = v28 >> 7;
      v4[2] = v28 >> 7;
      v4 += 3;
      if (v28 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v30 = v29 >> 14;
          v29 >>= 7;
          *v4++ = v29;
        }
        while (v30);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v31 = *(void *)(a1 + 8);
  if ((v31 & 1) == 0) {
    return v4;
  }
  unint64_t v33 = v31 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v33 + 31) < 0)
  {
    int v34 = *(void **)(v33 + 8);
    uint64_t v35 = *(void *)(v33 + 16);
  }
  else
  {
    int v34 = (void *)(v33 + 8);
    LODWORD(v35) = *(unsigned __int8 *)(v33 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v35)
  {
    uint64_t v36 = (int)v35;
    memcpy(v4, v34, (int)v35);
    v4 += v36;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v34, v35, v4);
}

unint64_t sub_1436580(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 16))
  {
    unint64_t v1 = 0;
    goto LABEL_15;
  }
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v1 = ((9 * (__clz(*(void *)(a1 + 24) | 1) ^ 0x3F) + 73) >> 6) + 1;
    if ((*(unsigned char *)(a1 + 16) & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  unint64_t v1 = 0;
  if ((*(unsigned char *)(a1 + 16) & 2) != 0) {
LABEL_7:
  }
    v1 += ((9 * (__clz(*(void *)(a1 + 32) | 1) ^ 0x3F) + 73) >> 6) + 1;
LABEL_8:
  if ((*(unsigned char *)(a1 + 16) & 4) != 0)
  {
    v1 += ((9 * (__clz(*(_DWORD *)(a1 + 40) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((*(unsigned char *)(a1 + 16) & 8) == 0)
    {
LABEL_10:
      if ((*(unsigned char *)(a1 + 16) & 0x10) == 0) {
        goto LABEL_11;
      }
      goto LABEL_19;
    }
  }
  else if ((*(unsigned char *)(a1 + 16) & 8) == 0)
  {
    goto LABEL_10;
  }
  v1 += ((9 * (__clz(*(_DWORD *)(a1 + 44) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((*(unsigned char *)(a1 + 16) & 0x10) == 0)
  {
LABEL_11:
    if ((*(unsigned char *)(a1 + 16) & 0x20) == 0) {
      goto LABEL_12;
    }
    goto LABEL_20;
  }
LABEL_19:
  v1 += ((9 * (__clz(*(_DWORD *)(a1 + 48) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((*(unsigned char *)(a1 + 16) & 0x20) == 0)
  {
LABEL_12:
    if ((*(unsigned char *)(a1 + 16) & 0x40) == 0) {
      goto LABEL_13;
    }
    goto LABEL_21;
  }
LABEL_20:
  v1 += ((9 * (__clz(*(_DWORD *)(a1 + 52) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((*(unsigned char *)(a1 + 16) & 0x40) == 0)
  {
LABEL_13:
    if ((*(unsigned char *)(a1 + 16) & 0x80) == 0) {
      goto LABEL_15;
    }
    goto LABEL_14;
  }
LABEL_21:
  v1 += ((9 * (__clz(*(_DWORD *)(a1 + 56) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((*(unsigned char *)(a1 + 16) & 0x80) != 0) {
LABEL_14:
  }
    v1 += ((9 * (__clz(*(_DWORD *)(a1 + 60) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_15:
  uint64_t v2 = *(void *)(a1 + 8);
  if (v2)
  {
    unint64_t v4 = v2 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v5 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v5 = *(unsigned __int8 *)(v4 + 31);
    }
    v1 += v5;
  }
  *(_DWORD *)(a1 + 20) = v1;
  return v1;
}

std::string *sub_1436724(std::string *result, uint64_t a2)
{
  int v2 = *(_DWORD *)(a2 + 16);
  if (!(_BYTE)v2) {
    goto LABEL_12;
  }
  if (v2)
  {
    result[1].__r_.__value_.__r.__words[0] = *(void *)(a2 + 24);
    if ((v2 & 2) == 0)
    {
LABEL_4:
      if ((v2 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_16;
    }
  }
  else if ((v2 & 2) == 0)
  {
    goto LABEL_4;
  }
  result[1].__r_.__value_.__l.__size_ = *(void *)(a2 + 32);
  if ((v2 & 4) == 0)
  {
LABEL_5:
    if ((v2 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_17;
  }
LABEL_16:
  LODWORD(result[1].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 40);
  if ((v2 & 8) == 0)
  {
LABEL_6:
    if ((v2 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_18;
  }
LABEL_17:
  HIDWORD(result[1].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 44);
  if ((v2 & 0x10) == 0)
  {
LABEL_7:
    if ((v2 & 0x20) == 0) {
      goto LABEL_8;
    }
    goto LABEL_19;
  }
LABEL_18:
  LODWORD(result[2].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 48);
  if ((v2 & 0x20) == 0)
  {
LABEL_8:
    if ((v2 & 0x40) == 0) {
      goto LABEL_9;
    }
LABEL_20:
    LODWORD(result[2].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 56);
    if ((v2 & 0x80) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
LABEL_19:
  HIDWORD(result[2].__r_.__value_.__r.__words[0]) = *(_DWORD *)(a2 + 52);
  if ((v2 & 0x40) != 0) {
    goto LABEL_20;
  }
LABEL_9:
  if ((v2 & 0x80) != 0) {
LABEL_10:
  }
    HIDWORD(result[2].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 60);
LABEL_11:
  LODWORD(result->__r_.__value_.__r.__words[2]) |= v2;
LABEL_12:
  uint64_t v3 = *(void *)(a2 + 8);
  if (v3) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v3 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_14367D8()
{
  return 1;
}

void *sub_14367E0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gemini.PublisherPopularity.Vector");
}

void *sub_14367F0(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1490BFC(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1436870(void *a1)
{
  sub_14367F0(a1);

  operator delete();
}

char *sub_14368A8(uint64_t a1, char *a2, int32x2_t *a3)
{
  unsigned int v19 = a2;
  if ((sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v5 = (void *)(a1 + 8);
    while (1)
    {
      int v6 = v19 + 1;
      unsigned int v7 = *v19;
      if (*v19 < 0)
      {
        unsigned int v8 = v7 + (*v6 << 7);
        unsigned int v7 = v8 - 128;
        if (*v6 < 0)
        {
          int v6 = (char *)sub_188C180((uint64_t)v19, v8 - 128);
          unsigned int v7 = v9;
        }
        else
        {
          int v6 = v19 + 2;
        }
      }
      unsigned int v19 = v6;
      if (v7 == 10)
      {
        unint64_t v12 = v6 - 1;
        while (1)
        {
          unsigned int v13 = (unsigned __int8 *)(v12 + 1);
          unsigned int v19 = v12 + 1;
          unsigned int v14 = *(_DWORD **)(a1 + 32);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 24), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 24) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            sub_144C004(*(void *)(a1 + 16));
            uint64_t v16 = sub_188CDC8(a1 + 16, v17);
            unsigned int v13 = (unsigned __int8 *)v19;
          }
          unint64_t v12 = sub_1436A48(a3, v16, v13);
          unsigned int v19 = v12;
          if (!v12) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_24;
          }
        }
      }
      if (!v7 || (v7 & 7) == 4) {
        break;
      }
      if (*v5)
      {
        unint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        unint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        int v6 = v19;
      }
      unsigned int v19 = (char *)sub_1885AC0(v7, v11, v6, a3);
      if (!v19) {
        return 0;
      }
LABEL_24:
      if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
        return v19;
      }
    }
    if (v6)
    {
      a3[10].i32[0] = v7 - 1;
      return v19;
    }
    return 0;
  }
  return v19;
}

char *sub_1436A48(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1435C9C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1436AD8(uint64_t a1, char *__dst, _DWORD *a3)
{
  int v6 = *(_DWORD *)(a1 + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unint64_t v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unint64_t v10 = __dst + 2;
      }
      __dst = sub_14360F4(v8, (unint64_t)v10, a3);
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return __dst;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    unsigned int v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    unsigned int v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(__dst, v14, (int)v15);
    __dst += v16;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, __dst);
}

uint64_t sub_1436C1C(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    unint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    unint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      unint64_t v7 = sub_1436580(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 40) = v2;
  return v2;
}

uint64_t sub_1436CCC()
{
  return 1;
}

void *sub_1436CD4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gemini.PublisherPopularity");
}

uint64_t sub_1436CE4(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_24B4288;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  return a1;
}

void sub_1436D60(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_1436D90(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1436E04(void *a1)
{
  sub_1436D90(a1);

  operator delete();
}

uint64_t sub_1436E3C(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 3) != 0)
  {
    *(void *)(a1 + 24) = 0;
    *(void *)(a1 + 32) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_1436E60(uint64_t a1, char *a2, int32x2_t *a3)
{
  unsigned int v18 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v18, a3[11].i32[1])) {
    goto LABEL_29;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    unint64_t v7 = v18 + 1;
    unsigned int v8 = *v18;
    if (*v18 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        unint64_t v7 = (char *)sub_188C180((uint64_t)v18, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        unint64_t v7 = v18 + 2;
      }
    }
    unsigned int v18 = v7;
    if (v8 >> 3 == 2)
    {
      if (v8 == 17)
      {
        uint64_t v15 = *(void *)v7;
        unsigned int v14 = v7 + 8;
        v5 |= 2u;
        *(void *)(a1 + 32) = v15;
LABEL_23:
        unsigned int v18 = v14;
        goto LABEL_24;
      }
    }
    else if (v8 >> 3 == 1 && v8 == 9)
    {
      uint64_t v16 = *(void *)v7;
      unsigned int v14 = v7 + 8;
      v5 |= 1u;
      *(void *)(a1 + 24) = v16;
      goto LABEL_23;
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      unint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unint64_t v7 = v18;
    }
    unsigned int v18 = (char *)sub_1885AC0(v8, v13, v7, a3);
    if (!v18) {
      goto LABEL_30;
    }
LABEL_24:
    if (sub_11947B8((uint64_t)a3, &v18, a3[11].i32[1])) {
      goto LABEL_29;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    goto LABEL_29;
  }
LABEL_30:
  unsigned int v18 = 0;
LABEL_29:
  *(_DWORD *)(a1 + 16) |= v5;
  return v18;
}

_OWORD *sub_1436FD0(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (_OWORD *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    *(unsigned char *)uint64_t v4 = 9;
    *(void *)((char *)v4 + 1) = v7;
    uint64_t v4 = (_OWORD *)((char *)v4 + 9);
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v8 = *(void *)(a1 + 32);
    *(unsigned char *)uint64_t v4 = 17;
    *(void *)((char *)v4 + 1) = v8;
    uint64_t v4 = (_OWORD *)((char *)v4 + 9);
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    unint64_t v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    unint64_t v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    return (_OWORD *)((char *)v4 + v14);
  }

  return (_OWORD *)sub_188A528(a3, (char *)v12, v13, v4);
}

uint64_t sub_14370EC(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  uint64_t v2 = 9;
  if ((v1 & 1) == 0) {
    uint64_t v2 = 0;
  }
  if ((v1 & 2) != 0) {
    v2 += 9;
  }
  if ((v1 & 3) != 0) {
    uint64_t v3 = v2;
  }
  else {
    uint64_t v3 = 0;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v6 + 31) < 0) {
      uint64_t v7 = *(void *)(v6 + 16);
    }
    else {
      uint64_t v7 = *(unsigned __int8 *)(v6 + 31);
    }
    v3 += v7;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

uint64_t sub_1437148()
{
  return 1;
}

void *sub_1437150@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gemini.VectorPoiDisplayDV.ZoomInfo");
}

uint64_t sub_1437160(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_24B4308;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  if (*(unsigned char *)(a2 + 16)) {
    operator new();
  }
  *(void *)(a1 + 24) = 0;
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  return a1;
}

void sub_1437214()
{
}

uint64_t sub_1437264(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_2538850)
  {
    unint64_t v6 = *(void **)(a1 + 24);
    if (v6)
    {
      sub_147B4F4(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_143731C(uint64_t a1)
{
  sub_1437264(a1);

  operator delete();
}

uint64_t sub_1437354(uint64_t result)
{
  uint64_t v1 = result;
  if (*(unsigned char *)(result + 16)) {
    uint64_t result = sub_14152BC(*(void *)(result + 24));
  }
  char v3 = *(unsigned char *)(v1 + 8);
  uint64_t v2 = v1 + 8;
  *(_DWORD *)(v2 + 24) = 0;
  *(_DWORD *)(v2 + 8) = 0;
  if (v3)
  {
    return sub_188B4AC((uint64_t *)v2);
  }
  return result;
}

char *sub_14373B4(uint64_t a1, char *a2, int32x2_t *a3)
{
  unsigned int v24 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v24, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v24 + 1;
    unsigned int v9 = *v24;
    if (*v24 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v24, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v24 + 2;
      }
    }
    unsigned int v24 = v8;
    if (v9 >> 3 == 2) {
      break;
    }
    if (v9 >> 3 != 1 || v9 != 8) {
      goto LABEL_13;
    }
    v5 |= 2u;
    unsigned int v19 = v8 + 1;
    int v20 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_31;
    }
    int v21 = *v19;
    int v20 = v20 + (v21 << 7) - 128;
    if ((v21 & 0x80000000) == 0)
    {
      unsigned int v19 = v8 + 2;
LABEL_31:
      unsigned int v24 = v19;
      *(_DWORD *)(a1 + 32) = v20;
      goto LABEL_32;
    }
    unsigned int v22 = (char *)sub_188C0D0((uint64_t)v8, v20);
    unsigned int v24 = v22;
    *(_DWORD *)(a1 + 32) = v23;
    if (!v22) {
      goto LABEL_39;
    }
LABEL_32:
    if (sub_11947B8((uint64_t)a3, &v24, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 == 18)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v16 = *(void *)(a1 + 24);
    if (!v16)
    {
      uint64_t v17 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v7) {
        uint64_t v17 = (void *)*v17;
      }
      sub_1481CB0((uint64_t)v17);
      uint64_t v16 = v18;
      *(void *)(a1 + 24) = v18;
      uint64_t v8 = v24;
    }
    uint64_t v15 = sub_1415818(a3, v16, (unsigned __int8 *)v8);
LABEL_26:
    unsigned int v24 = v15;
    if (!v15) {
      goto LABEL_39;
    }
    goto LABEL_32;
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      uint64_t v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = v24;
    }
    uint64_t v15 = (char *)sub_1885AC0(v9, v14, v8, a3);
    goto LABEL_26;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_39:
  unsigned int v24 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v24;
}

unsigned char *sub_1437598(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 32);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 24);
    unsigned char *v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 20);
    v4[1] = v11;
    if (v11 > 0x7F) {
      unint64_t v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      unint64_t v12 = v4 + 2;
    }
    uint64_t v4 = sub_147B738(v10, (unint64_t)v12, a3);
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    uint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    uint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_1437724(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 3) == 0)
  {
    uint64_t result = 0;
    goto LABEL_8;
  }
  if (v2)
  {
    uint64_t v4 = sub_147B898(*(void *)(a1 + 24));
    uint64_t result = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t result = 0;
  if ((v2 & 2) != 0) {
LABEL_7:
  }
    result += ((9 * (__clz(*(_DWORD *)(a1 + 32) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_8:
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5)
  {
    unint64_t v6 = v5 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v6 + 31) < 0) {
      uint64_t v7 = *(void *)(v6 + 16);
    }
    else {
      uint64_t v7 = *(unsigned __int8 *)(v6 + 31);
    }
    result += v7;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

std::string *sub_14377E8(std::string *result, uint64_t a2)
{
  char v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 3) != 0)
  {
    if (v4)
    {
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::pointer data = (std::string *)result[1].__r_.__value_.__l.__data_;
      if (!data)
      {
        std::string::size_type size = v3->__r_.__value_.__l.__size_;
        uint64_t v7 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
        if (size) {
          uint64_t v7 = (void *)*v7;
        }
        sub_1481CB0((uint64_t)v7);
        v3[1].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      }
      if (*(void *)(a2 + 24)) {
        unsigned int v8 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        unsigned int v8 = &off_2539D18;
      }
      uint64_t result = sub_1415F98(data, (uint64_t)v8);
    }
    if ((v4 & 2) != 0) {
      LODWORD(v3[1].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 32);
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_14378B8()
{
  return 1;
}

void *sub_14378C0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gemini.VectorPoiDisplayDV.CustomLandmark");
}

uint64_t sub_14378D0(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_24B4388;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  int v5 = *(_DWORD *)(a2 + 16);
  if (v5) {
    operator new();
  }
  *(void *)(a1 + 24) = 0;
  if ((v5 & 2) != 0) {
    operator new();
  }
  *(void *)(a1 + 32) = 0;
  if ((v5 & 4) != 0) {
    operator new();
  }
  *(void *)(a1 + 40) = 0;
  if ((v5 & 8) != 0) {
    operator new();
  }
  *(void *)(a1 + 48) = 0;
  if ((v5 & 0x10) != 0) {
    operator new();
  }
  *(void *)(a1 + 56) = 0;
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 69) = *(void *)(a2 + 69);
  *(void *)(a1 + 64) = v6;
  return a1;
}

void sub_1437A6C()
{
}

uint64_t sub_1437AE4(uint64_t a1)
{
  char v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_1437B68((uint64_t (***)())a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

uint64_t (***sub_1437B68(uint64_t (***result)()))()
{
  if (result != &off_2538878)
  {
    uint64_t v1 = result;
    uint64_t v2 = result[3];
    if (v2)
    {
      sub_1436D90(v2);
      operator delete();
    }
    char v3 = v1[4];
    if (v3)
    {
      sub_1436D90(v3);
      operator delete();
    }
    uint64_t v4 = (uint64_t)v1[5];
    if (v4)
    {
      sub_1437264(v4);
      operator delete();
    }
    int v5 = v1[6];
    if (v5)
    {
      sub_1436D90(v5);
      operator delete();
    }
    uint64_t result = (uint64_t (***)())v1[7];
    if (result)
    {
      sub_1436D90(result);
      operator delete();
    }
  }
  return result;
}

void sub_1437C54(uint64_t a1)
{
  sub_1437AE4(a1);

  operator delete();
}

char *sub_1437C8C(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v43 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v43, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    unsigned int v8 = v43 + 1;
    unsigned int v9 = *v43;
    if (*v43 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unsigned int v8 = (char *)sub_188C180((uint64_t)v43, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unsigned int v8 = v43 + 2;
      }
    }
    int v43 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_62;
        }
        v5 |= 0x20u;
        unint64_t v12 = v8 + 1;
        int v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        int v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          unint64_t v12 = v8 + 2;
LABEL_13:
          int v43 = v12;
          *(_DWORD *)(a1 + 64) = v13;
          goto LABEL_55;
        }
        uint64_t v35 = (char *)sub_188C0D0((uint64_t)v8, v13);
        int v43 = v35;
        *(_DWORD *)(a1 + 64) = v36;
        if (v35) {
          goto LABEL_55;
        }
        goto LABEL_84;
      case 2u:
        if (v9 != 18) {
          goto LABEL_62;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        unint64_t v15 = *(void **)(a1 + 24);
        if (v15) {
          goto LABEL_53;
        }
        uint64_t v16 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          uint64_t v16 = (void *)*v16;
        }
        unint64_t v15 = sub_144C124((uint64_t)v16);
        *(void *)(a1 + 24) = v15;
        goto LABEL_52;
      case 3u:
        if (v9 != 24) {
          goto LABEL_62;
        }
        v5 |= 0x40u;
        uint64_t v17 = v8 + 1;
        int v18 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_23;
        }
        int v19 = *v17;
        int v18 = v18 + (v19 << 7) - 128;
        if (v19 < 0)
        {
          int v37 = (char *)sub_188C0D0((uint64_t)v8, v18);
          int v43 = v37;
          *(_DWORD *)(a1 + 68) = v38;
          if (!v37) {
            goto LABEL_84;
          }
        }
        else
        {
          uint64_t v17 = v8 + 2;
LABEL_23:
          int v43 = v17;
          *(_DWORD *)(a1 + 68) = v18;
        }
        goto LABEL_55;
      case 4u:
        if (v9 != 34) {
          goto LABEL_62;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        unint64_t v15 = *(void **)(a1 + 32);
        if (v15) {
          goto LABEL_53;
        }
        int v20 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          int v20 = (void *)*v20;
        }
        unint64_t v15 = sub_144C124((uint64_t)v20);
        *(void *)(a1 + 32) = v15;
        goto LABEL_52;
      case 5u:
        if (v9 != 42) {
          goto LABEL_62;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v21 = *(void *)(a1 + 40);
        if (!v21)
        {
          unsigned int v22 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            unsigned int v22 = (void *)*v22;
          }
          uint64_t v21 = sub_144C1A0((uint64_t)v22);
          *(void *)(a1 + 40) = v21;
          unsigned int v8 = v43;
        }
        int v23 = sub_14381C8(a3, v21, (unsigned __int8 *)v8);
        goto LABEL_54;
      case 6u:
        if (v9 != 48) {
          goto LABEL_62;
        }
        unsigned int v24 = v8 + 1;
        unint64_t v25 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_39;
        }
        int v26 = *v24;
        int v27 = v25 + (v26 << 7);
        unint64_t v25 = (v27 - 128);
        if (v26 < 0)
        {
          int v43 = (char *)sub_188C138((uint64_t)v8, (v27 - 128));
          if (!v43) {
            goto LABEL_84;
          }
          unint64_t v25 = v39;
        }
        else
        {
          unsigned int v24 = v8 + 2;
LABEL_39:
          int v43 = v24;
        }
        if (v25 > 4)
        {
          if (*v7) {
            int v42 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            int v42 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(6, v25, v42);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 0x80u;
          *(_DWORD *)(a1 + 72) = v25;
        }
        goto LABEL_55;
      case 7u:
        if (v9 != 58) {
          goto LABEL_62;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        unint64_t v15 = *(void **)(a1 + 48);
        if (v15) {
          goto LABEL_53;
        }
        unsigned int v28 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          unsigned int v28 = (void *)*v28;
        }
        unint64_t v15 = sub_144C124((uint64_t)v28);
        *(void *)(a1 + 48) = v15;
        goto LABEL_52;
      case 8u:
        if (v9 != 66) {
          goto LABEL_62;
        }
        *(_DWORD *)(a1 + 16) |= 0x10u;
        unint64_t v15 = *(void **)(a1 + 56);
        if (v15) {
          goto LABEL_53;
        }
        unsigned int v29 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          unsigned int v29 = (void *)*v29;
        }
        unint64_t v15 = sub_144C124((uint64_t)v29);
        *(void *)(a1 + 56) = v15;
LABEL_52:
        unsigned int v8 = v43;
LABEL_53:
        int v23 = sub_1438138(a3, (uint64_t)v15, (unsigned __int8 *)v8);
        goto LABEL_54;
      case 9u:
        if (v9 != 72) {
          goto LABEL_62;
        }
        v5 |= 0x100u;
        unsigned int v30 = v8 + 1;
        uint64_t v31 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_61;
        }
        int v32 = *v30;
        uint64_t v31 = v31 + (v32 << 7) - 128;
        if (v32 < 0)
        {
          uint64_t v40 = (char *)sub_188C138((uint64_t)v8, v31);
          int v43 = v40;
          *(unsigned char *)(a1 + 76) = v41 != 0;
          if (!v40) {
            goto LABEL_84;
          }
        }
        else
        {
          unsigned int v30 = v8 + 2;
LABEL_61:
          int v43 = v30;
          *(unsigned char *)(a1 + 76) = v31 != 0;
        }
        goto LABEL_55;
      default:
LABEL_62:
        if (v9) {
          BOOL v33 = (v9 & 7) == 4;
        }
        else {
          BOOL v33 = 1;
        }
        if (!v33)
        {
          if (*v7)
          {
            int v34 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            int v34 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unsigned int v8 = v43;
          }
          int v23 = (char *)sub_1885AC0(v9, v34, v8, a3);
LABEL_54:
          int v43 = v23;
          if (!v23) {
            goto LABEL_84;
          }
LABEL_55:
          if (sub_11947B8((uint64_t)a3, &v43, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_84:
        }
          int v43 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v43;
    }
  }
}

char *sub_1438138(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1436E60(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_14381C8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_14373B4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_1438258(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 0x20) != 0)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 64);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 24);
    unsigned char *v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 20);
    v4[1] = v11;
    if (v11 > 0x7F) {
      unint64_t v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      unint64_t v12 = v4 + 2;
    }
    uint64_t v4 = sub_1436FD0(v10, (unint64_t)v12, a3);
  }
  if ((v6 & 0x40) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v13 = *(_DWORD *)(a1 + 68);
    unsigned char *v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unsigned int v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v16 = *(void *)(a1 + 32);
    unsigned char *v4 = 34;
    unsigned int v17 = *(_DWORD *)(v16 + 20);
    v4[1] = v17;
    if (v17 > 0x7F) {
      int v18 = sub_188A9CC(v17, v4 + 1);
    }
    else {
      int v18 = v4 + 2;
    }
    uint64_t v4 = sub_1436FD0(v16, (unint64_t)v18, a3);
    if ((v6 & 4) == 0)
    {
LABEL_24:
      if ((v6 & 0x80) == 0) {
        goto LABEL_44;
      }
      goto LABEL_38;
    }
  }
  else if ((v6 & 4) == 0)
  {
    goto LABEL_24;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v19 = *(void *)(a1 + 40);
  unsigned char *v4 = 42;
  unsigned int v20 = *(_DWORD *)(v19 + 20);
  v4[1] = v20;
  if (v20 > 0x7F) {
    uint64_t v21 = sub_188A9CC(v20, v4 + 1);
  }
  else {
    uint64_t v21 = v4 + 2;
  }
  uint64_t v4 = sub_1437598(v19, (unint64_t)v21, a3);
  if ((v6 & 0x80) != 0)
  {
LABEL_38:
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v22 = *(int *)(a1 + 72);
    unsigned char *v4 = 48;
    v4[1] = v22;
    if (v22 > 0x7F)
    {
      v4[1] = v22 | 0x80;
      unint64_t v23 = v22 >> 7;
      v4[2] = v22 >> 7;
      v4 += 3;
      if (v22 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v24 = v23 >> 14;
          v23 >>= 7;
          *v4++ = v23;
        }
        while (v24);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_44:
  if ((v6 & 8) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v25 = *(void *)(a1 + 48);
    unsigned char *v4 = 58;
    unsigned int v26 = *(_DWORD *)(v25 + 20);
    v4[1] = v26;
    if (v26 > 0x7F) {
      int v27 = sub_188A9CC(v26, v4 + 1);
    }
    else {
      int v27 = v4 + 2;
    }
    uint64_t v4 = sub_1436FD0(v25, (unint64_t)v27, a3);
    if ((v6 & 0x10) == 0)
    {
LABEL_46:
      if ((v6 & 0x100) == 0) {
        goto LABEL_63;
      }
      goto LABEL_60;
    }
  }
  else if ((v6 & 0x10) == 0)
  {
    goto LABEL_46;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v28 = *(void *)(a1 + 56);
  unsigned char *v4 = 66;
  unsigned int v29 = *(_DWORD *)(v28 + 20);
  v4[1] = v29;
  if (v29 > 0x7F) {
    unsigned int v30 = sub_188A9CC(v29, v4 + 1);
  }
  else {
    unsigned int v30 = v4 + 2;
  }
  uint64_t v4 = sub_1436FD0(v28, (unint64_t)v30, a3);
  if ((v6 & 0x100) != 0)
  {
LABEL_60:
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v31 = *(unsigned char *)(a1 + 76);
    unsigned char *v4 = 72;
    v4[1] = v31;
    v4 += 2;
  }
LABEL_63:
  uint64_t v32 = *(void *)(a1 + 8);
  if ((v32 & 1) == 0) {
    return v4;
  }
  unint64_t v34 = v32 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v34 + 31) < 0)
  {
    uint64_t v35 = *(void **)(v34 + 8);
    uint64_t v36 = *(void *)(v34 + 16);
  }
  else
  {
    uint64_t v35 = (void *)(v34 + 8);
    LODWORD(v36) = *(unsigned __int8 *)(v34 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v36)
  {
    uint64_t v37 = (int)v36;
    memcpy(v4, v35, (int)v36);
    v4 += v37;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v35, v36, v4);
}

uint64_t sub_14386C8(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if (!(_BYTE)v2)
  {
    uint64_t v3 = 0;
    goto LABEL_24;
  }
  if (v2)
  {
    uint64_t v4 = sub_14370EC(*(void *)(a1 + 24));
    uint64_t v3 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_7:
    uint64_t v5 = sub_14370EC(*(void *)(a1 + 32));
    v3 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_8:
  if ((v2 & 4) != 0)
  {
    uint64_t v6 = sub_1437724(*(void *)(a1 + 40));
    v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 8) == 0)
    {
LABEL_10:
      if ((v2 & 0x10) == 0) {
        goto LABEL_11;
      }
      goto LABEL_17;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_10;
  }
  uint64_t v7 = sub_14370EC(*(void *)(a1 + 48));
  v3 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x10) == 0)
  {
LABEL_11:
    if ((v2 & 0x20) == 0) {
      goto LABEL_12;
    }
    goto LABEL_18;
  }
LABEL_17:
  uint64_t v8 = sub_14370EC(*(void *)(a1 + 56));
  v3 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x20) == 0)
  {
LABEL_12:
    if ((v2 & 0x40) == 0) {
      goto LABEL_13;
    }
    goto LABEL_19;
  }
LABEL_18:
  v3 += ((9 * (__clz(*(_DWORD *)(a1 + 64) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x40) == 0)
  {
LABEL_13:
    if ((v2 & 0x80) == 0) {
      goto LABEL_24;
    }
    goto LABEL_20;
  }
LABEL_19:
  v3 += ((9 * (__clz(*(_DWORD *)(a1 + 68) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x80) == 0) {
    goto LABEL_24;
  }
LABEL_20:
  int v9 = *(_DWORD *)(a1 + 72);
  if (v9 < 0) {
    uint64_t v10 = 11;
  }
  else {
    uint64_t v10 = ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v3 += v10;
LABEL_24:
  if ((v2 & 0x100) != 0) {
    uint64_t result = v3 + 2;
  }
  else {
    uint64_t result = v3;
  }
  uint64_t v12 = *(void *)(a1 + 8);
  if (v12)
  {
    unint64_t v13 = v12 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v13 + 31) < 0) {
      uint64_t v14 = *(void *)(v13 + 16);
    }
    else {
      uint64_t v14 = *(unsigned __int8 *)(v13 + 31);
    }
    result += v14;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

uint64_t sub_14388D4()
{
  return 1;
}

void *sub_14388DC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gemini.VectorPoiDisplayDV");
}

void *sub_14388EC(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1889DA8((uint64_t)(a1 + 12));
  sub_14901FC(a1 + 9);
  sub_124E3CC(a1 + 6);
  sub_124E3CC(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_143898C(void *a1)
{
  sub_14388EC(a1);

  operator delete();
}

uint64_t sub_14389C4(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_13F6FC8(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  uint64_t v5 = *(unsigned int *)(v1 + 56);
  if ((int)v5 >= 1)
  {
    uint64_t v6 = (uint64_t *)(*(void *)(v1 + 64) + 8);
    do
    {
      uint64_t v7 = *v6++;
      uint64_t result = sub_13F6FC8(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(v1 + 56) = 0;
  }
  uint64_t v8 = *(unsigned int *)(v1 + 80);
  if ((int)v8 >= 1)
  {
    int v9 = (uint64_t *)(*(void *)(v1 + 88) + 8);
    do
    {
      uint64_t v10 = *v9++;
      uint64_t result = sub_16F0B90(v10);
      --v8;
    }
    while (v8);
    *(_DWORD *)(v1 + 80) = 0;
  }
  *(_DWORD *)(v1 + 96) = 0;
  if ((*(unsigned char *)(v1 + 16) & 7) != 0)
  {
    *(_WORD *)(v1 + 116) = 0;
    *(_DWORD *)(v1 + 112) = 0;
  }
  char v12 = *(unsigned char *)(v1 + 8);
  uint64_t v11 = v1 + 8;
  *(_DWORD *)(v11 + 8) = 0;
  if (v12)
  {
    return sub_188B4AC((uint64_t *)v11);
  }
  return result;
}

char *sub_1438AAC(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v55 = a2;
  int v5 = 0;
  if ((sub_11947B8((uint64_t)a3, &v55, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v54 = (uint64_t *)(a1 + 8);
    while (1)
    {
      uint64_t v7 = v55 + 1;
      unsigned int v8 = *v55;
      if (*v55 < 0)
      {
        unsigned int v9 = v8 + (*v7 << 7);
        unsigned int v8 = v9 - 128;
        if (*v7 < 0)
        {
          uint64_t v7 = (char *)sub_188C180((uint64_t)v55, v9 - 128);
          unsigned int v8 = v10;
        }
        else
        {
          uint64_t v7 = v55 + 2;
        }
      }
      uint64_t v55 = v7;
      switch(v8 >> 3)
      {
        case 1u:
          if (v8 != 8) {
            goto LABEL_78;
          }
          uint64_t v11 = v7 + 1;
          unint64_t v12 = *v7;
          if ((*v7 & 0x80000000) == 0) {
            goto LABEL_13;
          }
          int v13 = *v11;
          int v14 = v12 + (v13 << 7);
          unint64_t v12 = (v14 - 128);
          if (v13 < 0)
          {
            uint64_t v55 = (char *)sub_188C138((uint64_t)v7, (v14 - 128));
            if (!v55) {
              goto LABEL_95;
            }
            unint64_t v12 = v45;
          }
          else
          {
            uint64_t v11 = v7 + 2;
LABEL_13:
            uint64_t v55 = v11;
          }
          if (v12 > 2)
          {
            if (*v54) {
              int v53 = (std::string *)((*v54 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else {
              int v53 = (std::string *)sub_188DBD8(v54);
            }
            sub_188C020(1, v12, v53);
          }
          else
          {
            *(_DWORD *)(a1 + 16) |= 1u;
            *(_DWORD *)(a1 + 112) = v12;
          }
          goto LABEL_86;
        case 2u:
          if (v8 != 18) {
            goto LABEL_78;
          }
          unsigned int v15 = v7 - 1;
          while (1)
          {
            uint64_t v16 = (unsigned __int8 *)(v15 + 1);
            uint64_t v55 = v15 + 1;
            unsigned int v17 = *(_DWORD **)(a1 + 40);
            if (v17 && (uint64_t v18 = *(int *)(a1 + 32), (int)v18 < *v17))
            {
              *(_DWORD *)(a1 + 32) = v18 + 1;
              uint64_t v19 = *(void *)&v17[2 * v18 + 2];
            }
            else
            {
              unsigned int v20 = sub_1448DC4(*(void *)(a1 + 24));
              uint64_t v19 = sub_188CDC8(a1 + 24, (uint64_t)v20);
              uint64_t v16 = (unsigned __int8 *)v55;
            }
            unsigned int v15 = (char *)sub_123B5A4(a3, v19, v16);
            uint64_t v55 = v15;
            if (!v15) {
              goto LABEL_95;
            }
            if (*(void *)a3 <= (unint64_t)v15 || *v15 != 18) {
              goto LABEL_86;
            }
          }
        case 3u:
          if (v8 != 26) {
            goto LABEL_78;
          }
          uint64_t v21 = v7 - 1;
          while (1)
          {
            unint64_t v22 = (unsigned __int8 *)(v21 + 1);
            uint64_t v55 = v21 + 1;
            unint64_t v23 = *(_DWORD **)(a1 + 64);
            if (v23 && (uint64_t v24 = *(int *)(a1 + 56), (int)v24 < *v23))
            {
              *(_DWORD *)(a1 + 56) = v24 + 1;
              uint64_t v25 = *(void *)&v23[2 * v24 + 2];
            }
            else
            {
              unsigned int v26 = sub_1448DC4(*(void *)(a1 + 48));
              uint64_t v25 = sub_188CDC8(a1 + 48, (uint64_t)v26);
              unint64_t v22 = (unsigned __int8 *)v55;
            }
            uint64_t v21 = (char *)sub_123B5A4(a3, v25, v22);
            uint64_t v55 = v21;
            if (!v21) {
              goto LABEL_95;
            }
            if (*(void *)a3 <= (unint64_t)v21 || *v21 != 26) {
              goto LABEL_86;
            }
          }
        case 4u:
          if (v8 != 34) {
            goto LABEL_78;
          }
          int v27 = v7 - 1;
          while (1)
          {
            uint64_t v28 = (unsigned __int8 *)(v27 + 1);
            uint64_t v55 = v27 + 1;
            unsigned int v29 = *(_DWORD **)(a1 + 88);
            if (v29 && (uint64_t v30 = *(int *)(a1 + 80), (int)v30 < *v29))
            {
              *(_DWORD *)(a1 + 80) = v30 + 1;
              uint64_t v31 = *(void *)&v29[2 * v30 + 2];
            }
            else
            {
              uint64_t v32 = sub_1788ABC(*(void *)(a1 + 72));
              uint64_t v31 = sub_188CDC8(a1 + 72, v32);
              uint64_t v28 = (unsigned __int8 *)v55;
            }
            int v27 = (char *)sub_1415938(a3, v31, v28);
            uint64_t v55 = v27;
            if (!v27) {
              goto LABEL_95;
            }
            if (*(void *)a3 <= (unint64_t)v27 || *v27 != 34) {
              goto LABEL_86;
            }
          }
        case 5u:
          if (v8 != 40) {
            goto LABEL_78;
          }
          v5 |= 2u;
          BOOL v33 = v7 + 1;
          uint64_t v34 = *v7;
          if ((*v7 & 0x80000000) == 0) {
            goto LABEL_50;
          }
          int v35 = *v33;
          uint64_t v34 = v34 + (v35 << 7) - 128;
          if (v35 < 0)
          {
            uint64_t v46 = (char *)sub_188C138((uint64_t)v7, v34);
            uint64_t v55 = v46;
            *(unsigned char *)(a1 + 116) = v47 != 0;
            if (!v46) {
              goto LABEL_95;
            }
          }
          else
          {
            BOOL v33 = v7 + 2;
LABEL_50:
            uint64_t v55 = v33;
            *(unsigned char *)(a1 + 116) = v34 != 0;
          }
          goto LABEL_86;
        case 6u:
          if (v8 != 48) {
            goto LABEL_78;
          }
          v5 |= 4u;
          uint64_t v36 = v7 + 1;
          uint64_t v37 = *v7;
          if ((*v7 & 0x80000000) == 0) {
            goto LABEL_55;
          }
          int v38 = *v36;
          uint64_t v37 = v37 + (v38 << 7) - 128;
          if (v38 < 0)
          {
            uint64_t v48 = (char *)sub_188C138((uint64_t)v7, v37);
            uint64_t v55 = v48;
            *(unsigned char *)(a1 + 117) = v49 != 0;
            if (!v48) {
              goto LABEL_95;
            }
          }
          else
          {
            uint64_t v36 = v7 + 2;
LABEL_55:
            uint64_t v55 = v36;
            *(unsigned char *)(a1 + 117) = v37 != 0;
          }
          goto LABEL_86;
        case 7u:
          if (v8 == 56)
          {
            unint64_t v39 = v7 - 1;
            while (1)
            {
              uint64_t v55 = v39 + 1;
              uint64_t v40 = v39[1];
              if (v39[1] < 0)
              {
                int v41 = v40 + (v39[2] << 7);
                uint64_t v40 = (v41 - 128);
                if (v39[2] < 0)
                {
                  unint64_t v39 = (char *)sub_188C138((uint64_t)(v39 + 1), (v41 - 128));
                  uint64_t v40 = v42;
                }
                else
                {
                  v39 += 3;
                }
              }
              else
              {
                v39 += 2;
              }
              uint64_t v55 = v39;
              uint64_t v43 = *(unsigned int *)(a1 + 96);
              if (v43 == *(_DWORD *)(a1 + 100))
              {
                int v44 = v43 + 1;
                sub_188CA54((unsigned int *)(a1 + 96), v43 + 1);
                *(void *)(*(void *)(a1 + 104) + 8 * v43) = v40;
                unint64_t v39 = v55;
              }
              else
              {
                *(void *)(*(void *)(a1 + 104) + 8 * v43) = v40;
                int v44 = v43 + 1;
              }
              *(_DWORD *)(a1 + 96) = v44;
              if (!v39) {
                goto LABEL_95;
              }
              if (*(void *)a3 <= (unint64_t)v39 || *v39 != 56) {
                goto LABEL_86;
              }
            }
          }
          if (v8 == 58)
          {
            uint64_t v50 = sub_188C2EC((unsigned int *)(a1 + 96), (unsigned __int8 *)v7, (uint64_t)a3);
          }
          else
          {
LABEL_78:
            if (v8) {
              BOOL v51 = (v8 & 7) == 4;
            }
            else {
              BOOL v51 = 1;
            }
            if (v51)
            {
              if (v7)
              {
                a3[10].i32[0] = v8 - 1;
                goto LABEL_2;
              }
LABEL_95:
              uint64_t v55 = 0;
              goto LABEL_2;
            }
            if (*v54)
            {
              uint64_t v52 = (std::string *)((*v54 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              uint64_t v52 = (std::string *)sub_188DBD8(v54);
              uint64_t v7 = v55;
            }
            uint64_t v50 = sub_1885AC0(v8, v52, v7, a3);
          }
          uint64_t v55 = (char *)v50;
          if (!v50) {
            goto LABEL_95;
          }
LABEL_86:
          if (sub_11947B8((uint64_t)a3, &v55, a3[11].i32[1])) {
            goto LABEL_2;
          }
          break;
        default:
          goto LABEL_78;
      }
    }
  }
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v55;
}

unsigned char *sub_1439040(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 112);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v10 = *(_DWORD *)(a1 + 32);
  if (v10)
  {
    for (int i = 0; i != v10; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v12 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      unsigned char *v4 = 18;
      unsigned int v13 = *(_DWORD *)(v12 + 20);
      v4[1] = v13;
      if (v13 > 0x7F) {
        int v14 = sub_188A9CC(v13, v4 + 1);
      }
      else {
        int v14 = v4 + 2;
      }
      uint64_t v4 = sub_13F721C(v12, v14, a3);
    }
  }
  int v15 = *(_DWORD *)(a1 + 56);
  if (v15)
  {
    for (int j = 0; j != v15; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v17 = *(void *)(*(void *)(a1 + 64) + 8 * j + 8);
      unsigned char *v4 = 26;
      unsigned int v18 = *(_DWORD *)(v17 + 20);
      v4[1] = v18;
      if (v18 > 0x7F) {
        uint64_t v19 = sub_188A9CC(v18, v4 + 1);
      }
      else {
        uint64_t v19 = v4 + 2;
      }
      uint64_t v4 = sub_13F721C(v17, v19, a3);
    }
  }
  int v20 = *(_DWORD *)(a1 + 80);
  if (v20)
  {
    for (int k = 0; k != v20; ++k)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v22 = *(void *)(*(void *)(a1 + 88) + 8 * k + 8);
      unsigned char *v4 = 34;
      unsigned int v23 = *(_DWORD *)(v22 + 44);
      v4[1] = v23;
      if (v23 > 0x7F) {
        uint64_t v24 = sub_188A9CC(v23, v4 + 1);
      }
      else {
        uint64_t v24 = v4 + 2;
      }
      uint64_t v4 = sub_16F10D8(v22, v24, a3);
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v25 = *(unsigned char *)(a1 + 116);
    unsigned char *v4 = 40;
    v4[1] = v25;
    v4 += 2;
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v26 = *(unsigned char *)(a1 + 117);
    unsigned char *v4 = 48;
    v4[1] = v26;
    v4 += 2;
  }
  uint64_t v27 = *(unsigned int *)(a1 + 96);
  if ((int)v27 >= 1)
  {
    for (uint64_t m = 0; m != v27; ++m)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v29 = *(void *)(*(void *)(a1 + 104) + 8 * m);
      unsigned char *v4 = 56;
      v4[1] = v29;
      if (v29 > 0x7F)
      {
        v4[1] = v29 | 0x80;
        unint64_t v30 = v29 >> 7;
        v4[2] = v29 >> 7;
        v4 += 3;
        if (v29 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v31 = v30 >> 14;
            v30 >>= 7;
            *v4++ = v30;
          }
          while (v31);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  uint64_t v32 = *(void *)(a1 + 8);
  if ((v32 & 1) == 0) {
    return v4;
  }
  unint64_t v34 = v32 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v34 + 31) < 0)
  {
    int v35 = *(void **)(v34 + 8);
    uint64_t v36 = *(void *)(v34 + 16);
  }
  else
  {
    int v35 = (void *)(v34 + 8);
    LODWORD(v36) = *(unsigned __int8 *)(v34 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v36)
  {
    uint64_t v37 = (int)v36;
    memcpy(v4, v35, (int)v36);
    v4 += v37;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v35, v36, v4);
}

uint64_t sub_1439418(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_13F73A8(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(int *)(a1 + 56);
  uint64_t v9 = v2 + v8;
  uint64_t v10 = *(void *)(a1 + 64);
  if (v10) {
    uint64_t v11 = (uint64_t *)(v10 + 8);
  }
  else {
    uint64_t v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_13F73A8(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  uint64_t v15 = *(int *)(a1 + 80);
  uint64_t v16 = v9 + v15;
  uint64_t v17 = *(void *)(a1 + 88);
  if (v17) {
    unsigned int v18 = (uint64_t *)(v17 + 8);
  }
  else {
    unsigned int v18 = 0;
  }
  if (v15)
  {
    uint64_t v19 = 8 * v15;
    do
    {
      uint64_t v20 = *v18++;
      uint64_t v21 = sub_16F1364(v20);
      v16 += v21 + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6);
      v19 -= 8;
    }
    while (v19);
  }
  uint64_t result = sub_188D5A8((unsigned int *)(a1 + 96)) + v16 + *(unsigned int *)(a1 + 96);
  int v23 = *(_DWORD *)(a1 + 16);
  if ((v23 & 7) != 0)
  {
    if (v23)
    {
      int v24 = *(_DWORD *)(a1 + 112);
      uint64_t v25 = ((9 * (__clz(v24 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if (v24 >= 0) {
        uint64_t v26 = v25;
      }
      else {
        uint64_t v26 = 11;
      }
      result += v26;
    }
    uint64_t v27 = result + 2;
    if ((v23 & 2) == 0) {
      uint64_t v27 = result;
    }
    if ((v23 & 4) != 0) {
      uint64_t result = v27 + 2;
    }
    else {
      uint64_t result = v27;
    }
  }
  uint64_t v28 = *(void *)(a1 + 8);
  if (v28)
  {
    unint64_t v29 = v28 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v29 + 31) < 0) {
      uint64_t v30 = *(void *)(v29 + 16);
    }
    else {
      uint64_t v30 = *(unsigned __int8 *)(v29 + 31);
    }
    result += v30;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

void sub_14395D0(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_124EFB8((std::string *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    uint64_t v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    uint64_t v11 = (std::string **)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_124EFB8((std::string *)(a1 + 48), v11, v10, v9, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v12 = *(_DWORD *)(a1 + 56) + v9;
    *(_DWORD *)(a1 + 56) = v12;
    uint64_t v13 = *(int **)(a1 + 64);
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 80);
  if (v14)
  {
    uint64_t v15 = (uint64_t *)(*(void *)(a2 + 88) + 8);
    uint64_t v16 = (uint64_t *)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_1491D9C((uint64_t *)(a1 + 72), v16, v15, v14, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v17 = *(_DWORD *)(a1 + 80) + v14;
    *(_DWORD *)(a1 + 80) = v17;
    unsigned int v18 = *(int **)(a1 + 88);
    if (*v18 < v17) {
      int *v18 = v17;
    }
  }
  int v19 = *(_DWORD *)(a2 + 96);
  if (v19)
  {
    uint64_t v20 = *(int *)(a1 + 96);
    sub_188CA54((unsigned int *)(a1 + 96), v20 + v19);
    uint64_t v21 = *(void *)(a1 + 104);
    *(_DWORD *)(a1 + 96) += *(_DWORD *)(a2 + 96);
    memcpy((void *)(v21 + 8 * v20), *(const void **)(a2 + 104), 8 * *(int *)(a2 + 96));
  }
  int v22 = *(_DWORD *)(a2 + 16);
  if ((v22 & 7) != 0)
  {
    if (v22)
    {
      *(_DWORD *)(a1 + 112) = *(_DWORD *)(a2 + 112);
      if ((v22 & 2) == 0)
      {
LABEL_15:
        if ((v22 & 4) == 0)
        {
LABEL_17:
          *(_DWORD *)(a1 + 16) |= v22;
          goto LABEL_18;
        }
LABEL_16:
        *(unsigned char *)(a1 + 117) = *(unsigned char *)(a2 + 117);
        goto LABEL_17;
      }
    }
    else if ((v22 & 2) == 0)
    {
      goto LABEL_15;
    }
    *(unsigned char *)(a1 + 116) = *(unsigned char *)(a2 + 116);
    if ((v22 & 4) == 0) {
      goto LABEL_17;
    }
    goto LABEL_16;
  }
LABEL_18:
  uint64_t v23 = *(void *)(a2 + 8);
  if (v23)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v23 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

BOOL sub_14397F4(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 80);
  do
  {
    int v3 = v2;
    if ((int)v2 < 1) {
      break;
    }
    uint64_t v4 = v2 - 1;
    char v5 = sub_16F16FC(*(void *)(*(void *)(a1 + 88) + 8 * v2));
    uint64_t v2 = v4;
  }
  while ((v5 & 1) != 0);
  return v3 < 1;
}

void *sub_143984C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gemini.Containment.SummaryData.DisplaySummary");
}

uint64_t sub_143985C(uint64_t a1)
{
  int v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_12;
    }
  }
  else if (v4)
  {
    goto LABEL_12;
  }
  if ((uint64_t (***)())a1 != &off_2538940)
  {
    char v5 = *(void **)(a1 + 24);
    if (v5)
    {
      sub_14388EC(v5);
      operator delete();
    }
    uint64_t v6 = *(void **)(a1 + 32);
    if (v6)
    {
      sub_14388EC(v6);
      operator delete();
    }
    int v7 = *(void **)(a1 + 40);
    if (v7)
    {
      sub_14388EC(v7);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_12:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_143994C(uint64_t a1)
{
  sub_143985C(a1);

  operator delete();
}

uint64_t sub_1439984(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 0xF) != 0)
  {
    if (v2)
    {
      uint64_t result = sub_14389C4(*(void *)(result + 24));
      if ((v2 & 2) == 0)
      {
LABEL_4:
        if ((v2 & 4) == 0)
        {
LABEL_6:
          *(_DWORD *)(v1 + 48) = 1;
          goto LABEL_7;
        }
LABEL_5:
        uint64_t result = sub_14389C4(*(void *)(v1 + 40));
        goto LABEL_6;
      }
    }
    else if ((v2 & 2) == 0)
    {
      goto LABEL_4;
    }
    uint64_t result = sub_14389C4(*(void *)(v1 + 32));
    if ((v2 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_7:
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_1439A14(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v24 = a2;
  if (sub_11947B8((uint64_t)a3, &v24, a3[11].i32[1])) {
    return v24;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    int v7 = v24 + 1;
    unsigned int v8 = *v24;
    if (*v24 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        int v7 = (char *)sub_188C180((uint64_t)v24, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        int v7 = v24 + 2;
      }
    }
    int v24 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 10) {
          goto LABEL_33;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v11 = *(void *)(a1 + 24);
        if (v11) {
          goto LABEL_25;
        }
        int v12 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          int v12 = (void *)*v12;
        }
        uint64_t v11 = sub_144C2A0((uint64_t)v12);
        *(void *)(a1 + 24) = v11;
        goto LABEL_24;
      case 2u:
        if (v8 != 18) {
          goto LABEL_33;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v11 = *(void *)(a1 + 32);
        if (v11) {
          goto LABEL_25;
        }
        uint64_t v13 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          uint64_t v13 = (void *)*v13;
        }
        uint64_t v11 = sub_144C2A0((uint64_t)v13);
        *(void *)(a1 + 32) = v11;
        goto LABEL_24;
      case 3u:
        if (v8 != 26) {
          goto LABEL_33;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v11 = *(void *)(a1 + 40);
        if (v11) {
          goto LABEL_25;
        }
        int v14 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          int v14 = (void *)*v14;
        }
        uint64_t v11 = sub_144C2A0((uint64_t)v14);
        *(void *)(a1 + 40) = v11;
LABEL_24:
        int v7 = v24;
LABEL_25:
        uint64_t v15 = sub_1439CE0(a3, v11, (unsigned __int8 *)v7);
        goto LABEL_40;
      case 4u:
        if (v8 != 32) {
          goto LABEL_33;
        }
        uint64_t v16 = v7 + 1;
        unint64_t v17 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_30;
        }
        int v18 = *v16;
        int v19 = v17 + (v18 << 7);
        unint64_t v17 = (v19 - 128);
        if (v18 < 0)
        {
          int v24 = (char *)sub_188C138((uint64_t)v7, (v19 - 128));
          if (!v24) {
            return 0;
          }
          unint64_t v17 = v22;
        }
        else
        {
          uint64_t v16 = v7 + 2;
LABEL_30:
          int v24 = v16;
        }
        if ((v17 - 1) > 8)
        {
          if (*v6) {
            uint64_t v23 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v23 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(4, v17, v23);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 8u;
          *(_DWORD *)(a1 + 48) = v17;
        }
        goto LABEL_41;
      default:
LABEL_33:
        if (v8) {
          BOOL v20 = (v8 & 7) == 4;
        }
        else {
          BOOL v20 = 1;
        }
        if (!v20)
        {
          if (*v6)
          {
            uint64_t v21 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v21 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            int v7 = v24;
          }
          uint64_t v15 = (char *)sub_1885AC0(v8, v21, v7, a3);
LABEL_40:
          int v24 = v15;
          if (!v15) {
            return 0;
          }
LABEL_41:
          if (sub_11947B8((uint64_t)a3, &v24, a3[11].i32[1])) {
            return v24;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return v24;
    }
  }
}

char *sub_1439CE0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1438AAC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_1439D70(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    unsigned char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    char v4 = sub_1439040(v7, (unint64_t)v9, a3);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_18;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v10 = *(void *)(a1 + 32);
  unsigned char *v4 = 18;
  unsigned int v11 = *(_DWORD *)(v10 + 20);
  v4[1] = v11;
  if (v11 > 0x7F) {
    int v12 = sub_188A9CC(v11, v4 + 1);
  }
  else {
    int v12 = v4 + 2;
  }
  char v4 = sub_1439040(v10, (unint64_t)v12, a3);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_30;
    }
    goto LABEL_24;
  }
LABEL_18:
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v13 = *(void *)(a1 + 40);
  unsigned char *v4 = 26;
  unsigned int v14 = *(_DWORD *)(v13 + 20);
  v4[1] = v14;
  if (v14 > 0x7F) {
    uint64_t v15 = sub_188A9CC(v14, v4 + 1);
  }
  else {
    uint64_t v15 = v4 + 2;
  }
  char v4 = sub_1439040(v13, (unint64_t)v15, a3);
  if ((v6 & 8) != 0)
  {
LABEL_24:
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v16 = *(int *)(a1 + 48);
    unsigned char *v4 = 32;
    v4[1] = v16;
    if (v16 > 0x7F)
    {
      v4[1] = v16 | 0x80;
      unint64_t v17 = v16 >> 7;
      v4[2] = v16 >> 7;
      v4 += 3;
      if (v16 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v18 = v17 >> 14;
          v17 >>= 7;
          *v4++ = v17;
        }
        while (v18);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_30:
  uint64_t v19 = *(void *)(a1 + 8);
  if ((v19 & 1) == 0) {
    return v4;
  }
  unint64_t v21 = v19 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v21 + 31) < 0)
  {
    unint64_t v22 = *(void **)(v21 + 8);
    uint64_t v23 = *(void *)(v21 + 16);
  }
  else
  {
    unint64_t v22 = (void *)(v21 + 8);
    LODWORD(v23) = *(unsigned __int8 *)(v21 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v23)
  {
    uint64_t v24 = (int)v23;
    memcpy(v4, v22, (int)v23);
    v4 += v24;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v22, v23, v4);
}

uint64_t sub_1439FE0(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0xF) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_16;
  }
  if (v2)
  {
    uint64_t v4 = sub_1439418(*(void *)(a1 + 24));
    uint64_t v3 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_7:
    uint64_t v5 = sub_1439418(*(void *)(a1 + 32));
    v3 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_8:
  if ((v2 & 4) != 0)
  {
    uint64_t v6 = sub_1439418(*(void *)(a1 + 40));
    v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 8) == 0) {
      goto LABEL_16;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_16;
  }
  int v7 = *(_DWORD *)(a1 + 48);
  if (v7 < 0) {
    uint64_t v8 = 11;
  }
  else {
    uint64_t v8 = ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v3 += v8;
LABEL_16:
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    v3 += v12;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

void sub_143A124(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0xF) != 0)
  {
    if (v4)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v6 = *(void *)(a1 + 24);
      if (!v6)
      {
        uint64_t v7 = *(void *)(a1 + 8);
        uint64_t v8 = (void *)(v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (v7) {
          uint64_t v8 = (void *)*v8;
        }
        uint64_t v6 = sub_144C2A0((uint64_t)v8);
        *(void *)(a1 + 24) = v6;
      }
      if (*(void *)(a2 + 24)) {
        uint64_t v9 = *(void *(****)(void *))(a2 + 24);
      }
      else {
        uint64_t v9 = &off_25388C8;
      }
      sub_14395D0(v6, (uint64_t)v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_28;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v10 = *(void *)(a1 + 32);
    if (!v10)
    {
      uint64_t v11 = *(void *)(a1 + 8);
      uint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        uint64_t v12 = (void *)*v12;
      }
      uint64_t v10 = sub_144C2A0((uint64_t)v12);
      *(void *)(a1 + 32) = v10;
    }
    if (*(void *)(a2 + 32)) {
      uint64_t v13 = *(void *(****)(void *))(a2 + 32);
    }
    else {
      uint64_t v13 = &off_25388C8;
    }
    sub_14395D0(v10, (uint64_t)v13);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0)
      {
LABEL_7:
        *(_DWORD *)(a1 + 16) |= v4;
        goto LABEL_8;
      }
LABEL_6:
      *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
      goto LABEL_7;
    }
LABEL_28:
    *(_DWORD *)(a1 + 16) |= 4u;
    uint64_t v14 = *(void *)(a1 + 40);
    if (!v14)
    {
      uint64_t v15 = *(void *)(a1 + 8);
      unint64_t v16 = (void *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
      if (v15) {
        unint64_t v16 = (void *)*v16;
      }
      uint64_t v14 = sub_144C2A0((uint64_t)v16);
      *(void *)(a1 + 40) = v14;
    }
    if (*(void *)(a2 + 40)) {
      unint64_t v17 = *(void *(****)(void *))(a2 + 40);
    }
    else {
      unint64_t v17 = &off_25388C8;
    }
    sub_14395D0(v14, (uint64_t)v17);
    if ((v4 & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_8:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_143A28C(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if (v2)
  {
    uint64_t v3 = *(void *)(a1 + 24);
    uint64_t v4 = *(unsigned int *)(v3 + 80);
    do
    {
      if ((int)v4 < 1)
      {
        int v2 = *(_DWORD *)(a1 + 16);
        goto LABEL_7;
      }
      uint64_t v5 = v4 - 1;
      char v6 = sub_16F16FC(*(void *)(*(void *)(v3 + 88) + 8 * v4));
      uint64_t v4 = v5;
    }
    while ((v6 & 1) != 0);
    return 0;
  }
  else
  {
LABEL_7:
    if ((v2 & 2) != 0)
    {
      uint64_t v7 = *(void *)(a1 + 32);
      uint64_t v8 = *(unsigned int *)(v7 + 80);
      while ((int)v8 >= 1)
      {
        uint64_t v9 = v8 - 1;
        char v10 = sub_16F16FC(*(void *)(*(void *)(v7 + 88) + 8 * v8));
        uint64_t v8 = v9;
        if ((v10 & 1) == 0) {
          return 0;
        }
      }
      int v2 = *(_DWORD *)(a1 + 16);
    }
    if ((v2 & 4) != 0)
    {
      uint64_t v12 = *(void *)(a1 + 40);
      uint64_t v13 = *(unsigned int *)(v12 + 80);
      do
      {
        BOOL v11 = (int)v13 < 1;
        if ((int)v13 < 1) {
          break;
        }
        uint64_t v14 = v13 - 1;
        char v15 = sub_16F16FC(*(void *)(*(void *)(v12 + 88) + 8 * v13));
        uint64_t v13 = v14;
      }
      while ((v15 & 1) != 0);
    }
    else
    {
      return 1;
    }
  }
  return v11;
}

void *sub_143A360@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gemini.Containment.SummaryData");
}

uint64_t sub_143A370(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_2538978)
  {
    uint64_t v6 = *(void *)(a1 + 48);
    if (v6)
    {
      sub_143985C(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  sub_149017C((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_143A434(uint64_t a1)
{
  sub_143A370(a1);

  operator delete();
}

uint64_t sub_143A46C(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_143B410(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  if (*(unsigned char *)(v1 + 16)) {
    uint64_t result = sub_1439984(*(void *)(v1 + 48));
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = v1 + 8;
  *(void *)(v5 + 48) = 0;
  *(_DWORD *)(v5 + 8) = 0;
  if (v6)
  {
    return sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

char *sub_143A500(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v31 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v31, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v31 + 1;
    unsigned int v9 = *v31;
    if (*v31 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v31, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v31 + 2;
      }
    }
    unint64_t v31 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 == 3)
    {
      if (v9 != 26) {
        goto LABEL_14;
      }
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v17 = *(void *)(a1 + 48);
      if (!v17)
      {
        unint64_t v18 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          unint64_t v18 = (void *)*v18;
        }
        sub_144C35C((uint64_t)v18);
        uint64_t v17 = v19;
        *(void *)(a1 + 48) = v19;
        uint64_t v8 = v31;
      }
      unint64_t v16 = sub_143A77C(a3, v17, (unsigned __int8 *)v8);
LABEL_27:
      unint64_t v31 = v16;
      if (!v16) {
        goto LABEL_50;
      }
      goto LABEL_43;
    }
    if (v12 == 2) {
      break;
    }
    if (v12 != 1 || v9 != 8) {
      goto LABEL_14;
    }
    v5 |= 2u;
    uint64_t v26 = v8 + 1;
    uint64_t v27 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_42;
    }
    int v28 = *v26;
    uint64_t v27 = v27 + (v28 << 7) - 128;
    if ((v28 & 0x80000000) == 0)
    {
      uint64_t v26 = v8 + 2;
LABEL_42:
      unint64_t v31 = v26;
      *(void *)(a1 + 56) = v27;
      goto LABEL_43;
    }
    unint64_t v29 = (char *)sub_188C138((uint64_t)v8, v27);
    unint64_t v31 = v29;
    *(void *)(a1 + 56) = v30;
    if (!v29) {
      goto LABEL_50;
    }
LABEL_43:
    if (sub_11947B8((uint64_t)a3, &v31, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 == 18)
  {
    BOOL v20 = v8 - 1;
    while (1)
    {
      unint64_t v21 = (unsigned __int8 *)(v20 + 1);
      unint64_t v31 = v20 + 1;
      unint64_t v22 = *(_DWORD **)(a1 + 40);
      if (v22 && (uint64_t v23 = *(int *)(a1 + 32), (int)v23 < *v22))
      {
        *(_DWORD *)(a1 + 32) = v23 + 1;
        uint64_t v24 = *(void *)&v22[2 * v23 + 2];
      }
      else
      {
        uint64_t v25 = sub_144C4F8(*(void *)(a1 + 24));
        uint64_t v24 = sub_188CDC8(a1 + 24, v25);
        unint64_t v21 = (unsigned __int8 *)v31;
      }
      BOOL v20 = sub_14158A8(a3, v24, v21);
      unint64_t v31 = v20;
      if (!v20) {
        goto LABEL_50;
      }
      if (*(void *)a3 <= (unint64_t)v20 || *v20 != 18) {
        goto LABEL_43;
      }
    }
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (*v7)
    {
      char v15 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      char v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = v31;
    }
    unint64_t v16 = (char *)sub_1885AC0(v9, v15, v8, a3);
    goto LABEL_27;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_50:
  unint64_t v31 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v31;
}

char *sub_143A77C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1439A14(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_143A80C(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(void *)(a1 + 56);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v10 = *(_DWORD *)(a1 + 32);
  if (v10)
  {
    for (int i = 0; i != v10; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v12 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      unsigned char *v4 = 18;
      unsigned int v13 = *(_DWORD *)(v12 + 20);
      v4[1] = v13;
      if (v13 > 0x7F) {
        BOOL v14 = sub_188A9CC(v13, v4 + 1);
      }
      else {
        BOOL v14 = v4 + 2;
      }
      uint64_t v4 = sub_143B898(v12, (unint64_t)v14, a3);
    }
  }
  if (v6)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v15 = *(void *)(a1 + 48);
    unsigned char *v4 = 26;
    unsigned int v16 = *(_DWORD *)(v15 + 20);
    v4[1] = v16;
    if (v16 > 0x7F) {
      uint64_t v17 = sub_188A9CC(v16, v4 + 1);
    }
    else {
      uint64_t v17 = v4 + 2;
    }
    uint64_t v4 = sub_1439D70(v15, (unint64_t)v17, a3);
  }
  uint64_t v18 = *(void *)(a1 + 8);
  if ((v18 & 1) == 0) {
    return v4;
  }
  unint64_t v20 = v18 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v20 + 31) < 0)
  {
    unint64_t v21 = *(void **)(v20 + 8);
    uint64_t v22 = *(void *)(v20 + 16);
  }
  else
  {
    unint64_t v21 = (void *)(v20 + 8);
    LODWORD(v22) = *(unsigned __int8 *)(v20 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v22)
  {
    uint64_t v23 = (int)v22;
    memcpy(v4, v21, (int)v22);
    v4 += v23;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v21, v22, v4);
}

uint64_t sub_143AA34(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_143BB3C(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 3) != 0)
  {
    if (v8)
    {
      uint64_t v9 = sub_1439FE0(*(void *)(a1 + 48));
      v2 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v8 & 2) != 0) {
      v2 += ((9 * (__clz(*(void *)(a1 + 56) | 1) ^ 0x3F) + 73) >> 6) + 1;
    }
  }
  uint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v12 + 31) < 0) {
      uint64_t v13 = *(void *)(v12 + 16);
    }
    else {
      uint64_t v13 = *(unsigned __int8 *)(v12 + 31);
    }
    v2 += v13;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

void sub_143AB44(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_1491D10((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    int v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *int v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 3) != 0)
  {
    if (v9)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v10 = *(void *)(a1 + 48);
      if (!v10)
      {
        uint64_t v11 = *(void *)(a1 + 8);
        unint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
        if (v11) {
          unint64_t v12 = (void *)*v12;
        }
        sub_144C35C((uint64_t)v12);
        *(void *)(a1 + 48) = v10;
      }
      if (*(void *)(a2 + 48)) {
        uint64_t v13 = *(uint64_t (****)())(a2 + 48);
      }
      else {
        uint64_t v13 = &off_2538940;
      }
      sub_143A124(v10, (uint64_t)v13);
    }
    if ((v9 & 2) != 0) {
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
    }
    *(_DWORD *)(a1 + 16) |= v9;
  }
  uint64_t v14 = *(void *)(a2 + 8);
  if (v14)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v14 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_143AC84(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 32);
  while ((int)v1 >= 1)
  {
    uint64_t v2 = *(void *)(*(void *)(a1 + 40) + 8 * v1--);
    if ((*(unsigned char *)(v2 + 16) & 2) == 0) {
      return 0;
    }
  }
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 1;
  }
  uint64_t result = sub_143A28C(*(void *)(a1 + 48));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_143ACD8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gemini.Containment");
}

void *sub_143ACE8(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_143AD5C(void *a1)
{
  sub_143ACE8(a1);

  operator delete();
}

uint64_t sub_143AD94(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 7) != 0)
  {
    *(_DWORD *)(a1 + 32) = 0;
    *(void *)(a1 + 24) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_143ADBC(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v31 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v31, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (1)
  {
    int v8 = v31 + 1;
    unsigned int v9 = *v31;
    if (*v31 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        int v8 = (char *)sub_188C180((uint64_t)v31, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        int v8 = v31 + 2;
      }
    }
    unint64_t v31 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 == 3)
    {
      if (v9 != 24) {
        goto LABEL_14;
      }
      v5 |= 4u;
      unsigned int v16 = v8 + 1;
      int v17 = *v8;
      if ((*v8 & 0x80000000) == 0) {
        goto LABEL_26;
      }
      int v18 = *v16;
      int v17 = v17 + (v18 << 7) - 128;
      if ((v18 & 0x80000000) == 0)
      {
        unsigned int v16 = v8 + 2;
LABEL_26:
        unint64_t v31 = v16;
        *(_DWORD *)(a1 + 32) = v17;
        goto LABEL_36;
      }
      uint64_t v25 = (char *)sub_188C0D0((uint64_t)v8, v17);
      unint64_t v31 = v25;
      *(_DWORD *)(a1 + 32) = v26;
      if (!v25) {
        goto LABEL_47;
      }
      goto LABEL_36;
    }
    if (v12 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_14;
    }
    v5 |= 2u;
    uint64_t v19 = v8 + 1;
    int v20 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_31;
    }
    int v21 = *v19;
    int v20 = v20 + (v21 << 7) - 128;
    if ((v21 & 0x80000000) == 0)
    {
      uint64_t v19 = v8 + 2;
LABEL_31:
      unint64_t v31 = v19;
      *(_DWORD *)(a1 + 28) = v20;
      goto LABEL_36;
    }
    uint64_t v27 = (char *)sub_188C0D0((uint64_t)v8, v20);
    unint64_t v31 = v27;
    *(_DWORD *)(a1 + 28) = v28;
    if (!v27) {
      goto LABEL_47;
    }
LABEL_36:
    if (sub_11947B8((uint64_t)a3, &v31, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v12 == 1 && v9 == 8)
  {
    v5 |= 1u;
    uint64_t v22 = v8 + 1;
    int v23 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_35;
    }
    int v24 = *v22;
    int v23 = v23 + (v24 << 7) - 128;
    if ((v24 & 0x80000000) == 0)
    {
      uint64_t v22 = v8 + 2;
LABEL_35:
      unint64_t v31 = v22;
      *(_DWORD *)(a1 + 24) = v23;
      goto LABEL_36;
    }
    unint64_t v29 = (char *)sub_188C0D0((uint64_t)v8, v23);
    unint64_t v31 = v29;
    *(_DWORD *)(a1 + 24) = v30;
    if (!v29) {
      goto LABEL_47;
    }
    goto LABEL_36;
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (*v7)
    {
      uint64_t v15 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v8 = v31;
    }
    unint64_t v31 = (char *)sub_1885AC0(v9, v15, v8, a3);
    if (!v31) {
      goto LABEL_47;
    }
    goto LABEL_36;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_47:
  unint64_t v31 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v31;
}

unsigned char *sub_143B010(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 28);
    unsigned char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v13 = *(_DWORD *)(a1 + 32);
    unsigned char *v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unsigned int v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return v4;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    uint64_t v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    uint64_t v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(v4, v19, (int)v20);
    v4 += v21;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v19, v20, v4);
}

uint64_t sub_143B230(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 7) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_10;
  }
  if (v1)
  {
    uint64_t v2 = ((9 * (__clz(*(_DWORD *)(a1 + 24) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v2 = 0;
  if ((v1 & 2) != 0) {
LABEL_7:
  }
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 28) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_8:
  if ((v1 & 4) != 0) {
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 32) | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v5 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    v2 += v6;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_143B2FC()
{
  return 1;
}

void *sub_143B304@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gemini.BusinessRelationship.RelationshipRank");
}

uint64_t sub_143B314(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_25389E0)
  {
    uint64_t v6 = *(void **)(a1 + 48);
    if (v6)
    {
      sub_143ACE8(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  sub_124E3CC((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_143B3D8(uint64_t a1)
{
  sub_143B314(a1);

  operator delete();
}

uint64_t sub_143B410(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_13F6FC8(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  int v5 = *(_DWORD *)(v1 + 16);
  if (v5) {
    uint64_t result = sub_143AD94(*(void *)(v1 + 48));
  }
  if ((v5 & 6) != 0)
  {
    *(void *)(v1 + 56) = 0;
    *(_DWORD *)(v1 + 64) = 1;
  }
  char v7 = *(unsigned char *)(v1 + 8);
  uint64_t v6 = v1 + 8;
  *(_DWORD *)(v6 + 8) = 0;
  if (v7)
  {
    return sub_188B4AC((uint64_t *)v6);
  }
  return result;
}

char *sub_143B4B4(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v35 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v35, a3[11].i32[1])) {
    goto LABEL_2;
  }
  char v7 = (void *)(a1 + 8);
  while (2)
  {
    unsigned int v8 = v35 + 1;
    unsigned int v9 = *v35;
    if (*v35 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unsigned int v8 = (char *)sub_188C180((uint64_t)v35, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unsigned int v8 = v35 + 2;
      }
    }
    int v35 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_41;
        }
        v5 |= 2u;
        unsigned int v12 = v8 + 1;
        uint64_t v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        uint64_t v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          unsigned int v12 = v8 + 2;
LABEL_13:
          int v35 = v12;
          *(void *)(a1 + 56) = v13;
          goto LABEL_49;
        }
        uint64_t v32 = (char *)sub_188C138((uint64_t)v8, v13);
        int v35 = v32;
        *(void *)(a1 + 56) = v33;
        if (v32) {
          goto LABEL_49;
        }
        goto LABEL_62;
      case 4u:
        if (v9 != 32) {
          goto LABEL_41;
        }
        unsigned int v15 = v8 + 1;
        unint64_t v16 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_18;
        }
        int v17 = *v15;
        int v18 = v16 + (v17 << 7);
        unint64_t v16 = (v18 - 128);
        if (v17 < 0)
        {
          int v35 = (char *)sub_188C138((uint64_t)v8, (v18 - 128));
          if (!v35) {
            goto LABEL_62;
          }
          unint64_t v16 = v34;
        }
        else
        {
          unsigned int v15 = v8 + 2;
LABEL_18:
          int v35 = v15;
        }
        if ((v16 - 3) < 4 || v16 == 1)
        {
          *(_DWORD *)(a1 + 16) |= 4u;
          *(_DWORD *)(a1 + 64) = v16;
        }
        else
        {
          if (*v7) {
            unint64_t v31 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            unint64_t v31 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(4, v16, v31);
        }
        goto LABEL_49;
      case 5u:
        if (v9 != 42) {
          goto LABEL_41;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v20 = *(void *)(a1 + 48);
        if (!v20)
        {
          uint64_t v21 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v21 = (void *)*v21;
          }
          uint64_t v20 = sub_144C47C((uint64_t)v21);
          *(void *)(a1 + 48) = v20;
          unsigned int v8 = v35;
        }
        uint64_t v22 = sub_143B808(a3, v20, (unsigned __int8 *)v8);
        goto LABEL_48;
      case 6u:
        if (v9 != 50) {
          goto LABEL_41;
        }
        int v23 = v8 - 1;
        while (1)
        {
          int v24 = (unsigned __int8 *)(v23 + 1);
          int v35 = v23 + 1;
          uint64_t v25 = *(_DWORD **)(a1 + 40);
          if (v25 && (uint64_t v26 = *(int *)(a1 + 32), (int)v26 < *v25))
          {
            *(_DWORD *)(a1 + 32) = v26 + 1;
            uint64_t v27 = *(void *)&v25[2 * v26 + 2];
          }
          else
          {
            int v28 = sub_1448DC4(*(void *)(a1 + 24));
            uint64_t v27 = sub_188CDC8(a1 + 24, (uint64_t)v28);
            int v24 = (unsigned __int8 *)v35;
          }
          int v23 = (char *)sub_123B5A4(a3, v27, v24);
          int v35 = v23;
          if (!v23) {
            goto LABEL_62;
          }
          if (*(void *)a3 <= (unint64_t)v23 || *v23 != 50) {
            goto LABEL_49;
          }
        }
      default:
LABEL_41:
        if (v9) {
          BOOL v29 = (v9 & 7) == 4;
        }
        else {
          BOOL v29 = 1;
        }
        if (!v29)
        {
          if (*v7)
          {
            int v30 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            int v30 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unsigned int v8 = v35;
          }
          uint64_t v22 = (char *)sub_1885AC0(v9, v30, v8, a3);
LABEL_48:
          int v35 = v22;
          if (!v22) {
            goto LABEL_62;
          }
LABEL_49:
          if (sub_11947B8((uint64_t)a3, &v35, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_62:
        }
          int v35 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v35;
    }
  }
}

char *sub_143B808(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_143ADBC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_143B898(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(void *)(a1 + 56);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 64);
    unsigned char *v4 = 32;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v13 = *(void *)(a1 + 48);
    unsigned char *v4 = 42;
    unsigned int v14 = *(_DWORD *)(v13 + 20);
    v4[1] = v14;
    if (v14 > 0x7F) {
      unsigned int v15 = sub_188A9CC(v14, v4 + 1);
    }
    else {
      unsigned int v15 = v4 + 2;
    }
    uint64_t v4 = sub_143B010(v13, (unint64_t)v15, a3);
  }
  int v16 = *(_DWORD *)(a1 + 32);
  if (v16)
  {
    for (int i = 0; i != v16; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v18 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      unsigned char *v4 = 50;
      unsigned int v19 = *(_DWORD *)(v18 + 20);
      v4[1] = v19;
      if (v19 > 0x7F) {
        uint64_t v20 = sub_188A9CC(v19, v4 + 1);
      }
      else {
        uint64_t v20 = v4 + 2;
      }
      uint64_t v4 = sub_13F721C(v18, v20, a3);
    }
  }
  uint64_t v21 = *(void *)(a1 + 8);
  if ((v21 & 1) == 0) {
    return v4;
  }
  unint64_t v23 = v21 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v23 + 31) < 0)
  {
    int v24 = *(void **)(v23 + 8);
    uint64_t v25 = *(void *)(v23 + 16);
  }
  else
  {
    int v24 = (void *)(v23 + 8);
    LODWORD(v25) = *(unsigned __int8 *)(v23 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v25)
  {
    uint64_t v26 = (int)v25;
    memcpy(v4, v24, (int)v25);
    v4 += v26;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v24, v25, v4);
}

uint64_t sub_143BB3C(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 2) != 0) {
    unint64_t v3 = ((9 * (__clz(*(void *)(a1 + 56) | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
  else {
    unint64_t v3 = 0;
  }
  uint64_t v4 = *(int *)(a1 + 32);
  uint64_t v5 = v3 + v4;
  uint64_t v6 = *(void *)(a1 + 40);
  if (v6) {
    unint64_t v7 = (uint64_t *)(v6 + 8);
  }
  else {
    unint64_t v7 = 0;
  }
  if (v4)
  {
    uint64_t v8 = 8 * v4;
    do
    {
      uint64_t v9 = *v7++;
      uint64_t v10 = sub_13F73A8(v9);
      v5 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6);
      v8 -= 8;
    }
    while (v8);
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if (v2)
  {
    uint64_t v11 = sub_143B230(*(void *)(a1 + 48));
    v5 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  if ((v2 & 4) != 0)
  {
    int v12 = *(_DWORD *)(a1 + 64);
    if (v12 < 0) {
      uint64_t v13 = 11;
    }
    else {
      uint64_t v13 = ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v5 += v13;
  }
  uint64_t v14 = *(void *)(a1 + 8);
  if (v14)
  {
    unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v16 + 31) < 0) {
      uint64_t v17 = *(void *)(v16 + 16);
    }
    else {
      uint64_t v17 = *(unsigned __int8 *)(v16 + 31);
    }
    v5 += v17;
  }
  *(_DWORD *)(a1 + 20) = v5;
  return v5;
}

std::string *sub_143BC80(std::string *result, uint64_t a2)
{
  unint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = sub_124EFB8(v3 + 1, v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2] - LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    uint64_t v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 7) != 0)
  {
    if (v9)
    {
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::pointer data = (std::string *)v3[2].__r_.__value_.__l.__data_;
      if (!data)
      {
        std::string::size_type size = v3->__r_.__value_.__l.__size_;
        uint64_t v13 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
        if (size) {
          uint64_t v13 = (void *)*v13;
        }
        std::string::pointer data = (std::string *)sub_144C47C((uint64_t)v13);
        v3[2].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      }
      if (*(void *)(a2 + 48)) {
        uint64_t v14 = *(void *(****)(void *))(a2 + 48);
      }
      else {
        uint64_t v14 = &off_25389B8;
      }
      uint64_t result = sub_117EF50(data, (uint64_t)v14);
      if ((v9 & 2) == 0)
      {
LABEL_7:
        if ((v9 & 4) == 0)
        {
LABEL_9:
          LODWORD(v3->__r_.__value_.__r.__words[2]) |= v9;
          goto LABEL_10;
        }
LABEL_8:
        LODWORD(v3[2].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 64);
        goto LABEL_9;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_7;
    }
    v3[2].__r_.__value_.__l.__size_ = *(void *)(a2 + 56);
    if ((v9 & 4) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
LABEL_10:
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_143BDD8(uint64_t a1)
{
  return (*(unsigned __int8 *)(a1 + 16) >> 1) & 1;
}

void *sub_143BDE4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gemini.BusinessRelationship");
}

void *sub_143BDF4(void *a1)
{
  unint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_143BE68(void *a1)
{
  sub_143BDF4(a1);

  operator delete();
}

uint64_t sub_143BEA0(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    *(void *)(a1 + 56) = 0;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_143BECC(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v54 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v54, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = v54 + 1;
    unsigned int v9 = *v54;
    if (*v54 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v54, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v54 + 2;
      }
    }
    uint64_t v54 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_49;
        }
        v5 |= 1u;
        int v12 = v8 + 1;
        uint64_t v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        uint64_t v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          int v12 = v8 + 2;
LABEL_13:
          uint64_t v54 = v12;
          *(void *)(a1 + 24) = v13;
          goto LABEL_56;
        }
        int v38 = (char *)sub_188C138((uint64_t)v8, v13);
        uint64_t v54 = v38;
        *(void *)(a1 + 24) = v39;
        if (v38) {
          goto LABEL_56;
        }
        goto LABEL_77;
      case 2u:
        if (v9 != 16) {
          goto LABEL_49;
        }
        v5 |= 2u;
        unsigned int v15 = v8 + 1;
        uint64_t v16 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_18;
        }
        int v17 = *v15;
        uint64_t v16 = v16 + (v17 << 7) - 128;
        if (v17 < 0)
        {
          uint64_t v40 = (char *)sub_188C138((uint64_t)v8, v16);
          uint64_t v54 = v40;
          *(void *)(a1 + 32) = v41;
          if (!v40) {
            goto LABEL_77;
          }
        }
        else
        {
          unsigned int v15 = v8 + 2;
LABEL_18:
          uint64_t v54 = v15;
          *(void *)(a1 + 32) = v16;
        }
        goto LABEL_56;
      case 3u:
        if (v9 != 24) {
          goto LABEL_49;
        }
        v5 |= 4u;
        uint64_t v18 = v8 + 1;
        int v19 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_23;
        }
        int v20 = *v18;
        int v19 = v19 + (v20 << 7) - 128;
        if (v20 < 0)
        {
          uint64_t v42 = (char *)sub_188C0D0((uint64_t)v8, v19);
          uint64_t v54 = v42;
          *(_DWORD *)(a1 + 40) = v43;
          if (!v42) {
            goto LABEL_77;
          }
        }
        else
        {
          uint64_t v18 = v8 + 2;
LABEL_23:
          uint64_t v54 = v18;
          *(_DWORD *)(a1 + 40) = v19;
        }
        goto LABEL_56;
      case 4u:
        if (v9 != 32) {
          goto LABEL_49;
        }
        v5 |= 8u;
        uint64_t v21 = v8 + 1;
        int v22 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_28;
        }
        int v23 = *v21;
        int v22 = v22 + (v23 << 7) - 128;
        if (v23 < 0)
        {
          int v44 = (char *)sub_188C0D0((uint64_t)v8, v22);
          uint64_t v54 = v44;
          *(_DWORD *)(a1 + 44) = v45;
          if (!v44) {
            goto LABEL_77;
          }
        }
        else
        {
          uint64_t v21 = v8 + 2;
LABEL_28:
          uint64_t v54 = v21;
          *(_DWORD *)(a1 + 44) = v22;
        }
        goto LABEL_56;
      case 5u:
        if (v9 != 40) {
          goto LABEL_49;
        }
        v5 |= 0x10u;
        int v24 = v8 + 1;
        int v25 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_33;
        }
        int v26 = *v24;
        int v25 = v25 + (v26 << 7) - 128;
        if (v26 < 0)
        {
          uint64_t v46 = (char *)sub_188C0D0((uint64_t)v8, v25);
          uint64_t v54 = v46;
          *(_DWORD *)(a1 + 48) = v47;
          if (!v46) {
            goto LABEL_77;
          }
        }
        else
        {
          int v24 = v8 + 2;
LABEL_33:
          uint64_t v54 = v24;
          *(_DWORD *)(a1 + 48) = v25;
        }
        goto LABEL_56;
      case 6u:
        if (v9 != 48) {
          goto LABEL_49;
        }
        v5 |= 0x20u;
        uint64_t v27 = v8 + 1;
        int v28 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_38;
        }
        int v29 = *v27;
        int v28 = v28 + (v29 << 7) - 128;
        if (v29 < 0)
        {
          uint64_t v48 = (char *)sub_188C0D0((uint64_t)v8, v28);
          uint64_t v54 = v48;
          *(_DWORD *)(a1 + 52) = v49;
          if (!v48) {
            goto LABEL_77;
          }
        }
        else
        {
          uint64_t v27 = v8 + 2;
LABEL_38:
          uint64_t v54 = v27;
          *(_DWORD *)(a1 + 52) = v28;
        }
        goto LABEL_56;
      case 7u:
        if (v9 != 56) {
          goto LABEL_49;
        }
        v5 |= 0x40u;
        int v30 = v8 + 1;
        int v31 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_43;
        }
        int v32 = *v30;
        int v31 = v31 + (v32 << 7) - 128;
        if (v32 < 0)
        {
          uint64_t v50 = (char *)sub_188C0D0((uint64_t)v8, v31);
          uint64_t v54 = v50;
          *(_DWORD *)(a1 + 56) = v51;
          if (!v50) {
            goto LABEL_77;
          }
        }
        else
        {
          int v30 = v8 + 2;
LABEL_43:
          uint64_t v54 = v30;
          *(_DWORD *)(a1 + 56) = v31;
        }
        goto LABEL_56;
      case 8u:
        if (v9 != 64) {
          goto LABEL_49;
        }
        v5 |= 0x80u;
        uint64_t v33 = v8 + 1;
        int v34 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_48;
        }
        int v35 = *v33;
        int v34 = v34 + (v35 << 7) - 128;
        if (v35 < 0)
        {
          uint64_t v52 = (char *)sub_188C0D0((uint64_t)v8, v34);
          uint64_t v54 = v52;
          *(_DWORD *)(a1 + 60) = v53;
          if (!v52) {
            goto LABEL_77;
          }
        }
        else
        {
          uint64_t v33 = v8 + 2;
LABEL_48:
          uint64_t v54 = v33;
          *(_DWORD *)(a1 + 60) = v34;
        }
        goto LABEL_56;
      default:
LABEL_49:
        if (v9) {
          BOOL v36 = (v9 & 7) == 4;
        }
        else {
          BOOL v36 = 1;
        }
        if (!v36)
        {
          if (*v7)
          {
            uint64_t v37 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v37 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = v54;
          }
          uint64_t v54 = (char *)sub_1885AC0(v9, v37, v8, a3);
          if (!v54) {
            goto LABEL_77;
          }
LABEL_56:
          if (sub_11947B8((uint64_t)a3, &v54, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_77:
        }
          uint64_t v54 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v54;
    }
  }
}

unsigned char *sub_143C324(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(void *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(void *)(a1 + 32);
    unsigned char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v13 = *(_DWORD *)(a1 + 40);
    unsigned char *v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unsigned int v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v16 = *(_DWORD *)(a1 + 44);
    unsigned char *v4 = 32;
    v4[1] = v16;
    if (v16 > 0x7F)
    {
      v4[1] = v16 | 0x80;
      unsigned int v17 = v16 >> 7;
      v4[2] = v16 >> 7;
      v4 += 3;
      if (v16 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v18 = v17 >> 14;
          v17 >>= 7;
          *v4++ = v17;
        }
        while (v18);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v19 = *(_DWORD *)(a1 + 48);
    unsigned char *v4 = 40;
    v4[1] = v19;
    if (v19 > 0x7F)
    {
      v4[1] = v19 | 0x80;
      unsigned int v20 = v19 >> 7;
      v4[2] = v19 >> 7;
      v4 += 3;
      if (v19 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v21 = v20 >> 14;
          v20 >>= 7;
          *v4++ = v20;
        }
        while (v21);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x20) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v22 = *(_DWORD *)(a1 + 52);
    unsigned char *v4 = 48;
    v4[1] = v22;
    if (v22 > 0x7F)
    {
      v4[1] = v22 | 0x80;
      unsigned int v23 = v22 >> 7;
      v4[2] = v22 >> 7;
      v4 += 3;
      if (v22 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v24 = v23 >> 14;
          v23 >>= 7;
          *v4++ = v23;
        }
        while (v24);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x40) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v25 = *(_DWORD *)(a1 + 56);
    unsigned char *v4 = 56;
    v4[1] = v25;
    if (v25 > 0x7F)
    {
      v4[1] = v25 | 0x80;
      unsigned int v26 = v25 >> 7;
      v4[2] = v25 >> 7;
      v4 += 3;
      if (v25 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v27 = v26 >> 14;
          v26 >>= 7;
          *v4++ = v26;
        }
        while (v27);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x80) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v28 = *(_DWORD *)(a1 + 60);
    unsigned char *v4 = 64;
    v4[1] = v28;
    if (v28 > 0x7F)
    {
      v4[1] = v28 | 0x80;
      unsigned int v29 = v28 >> 7;
      v4[2] = v28 >> 7;
      v4 += 3;
      if (v28 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v30 = v29 >> 14;
          v29 >>= 7;
          *v4++ = v29;
        }
        while (v30);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v31 = *(void *)(a1 + 8);
  if ((v31 & 1) == 0) {
    return v4;
  }
  unint64_t v33 = v31 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v33 + 31) < 0)
  {
    int v34 = *(void **)(v33 + 8);
    uint64_t v35 = *(void *)(v33 + 16);
  }
  else
  {
    int v34 = (void *)(v33 + 8);
    LODWORD(v35) = *(unsigned __int8 *)(v33 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v35)
  {
    uint64_t v36 = (int)v35;
    memcpy(v4, v34, (int)v35);
    v4 += v36;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v34, v35, v4);
}

unint64_t sub_143C7B0(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 16))
  {
    unint64_t v1 = 0;
    goto LABEL_15;
  }
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v1 = ((9 * (__clz(*(void *)(a1 + 24) | 1) ^ 0x3F) + 73) >> 6) + 1;
    if ((*(unsigned char *)(a1 + 16) & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  unint64_t v1 = 0;
  if ((*(unsigned char *)(a1 + 16) & 2) != 0) {
LABEL_7:
  }
    v1 += ((9 * (__clz(*(void *)(a1 + 32) | 1) ^ 0x3F) + 73) >> 6) + 1;
LABEL_8:
  if ((*(unsigned char *)(a1 + 16) & 4) != 0)
  {
    v1 += ((9 * (__clz(*(_DWORD *)(a1 + 40) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((*(unsigned char *)(a1 + 16) & 8) == 0)
    {
LABEL_10:
      if ((*(unsigned char *)(a1 + 16) & 0x10) == 0) {
        goto LABEL_11;
      }
      goto LABEL_19;
    }
  }
  else if ((*(unsigned char *)(a1 + 16) & 8) == 0)
  {
    goto LABEL_10;
  }
  v1 += ((9 * (__clz(*(_DWORD *)(a1 + 44) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((*(unsigned char *)(a1 + 16) & 0x10) == 0)
  {
LABEL_11:
    if ((*(unsigned char *)(a1 + 16) & 0x20) == 0) {
      goto LABEL_12;
    }
    goto LABEL_20;
  }
LABEL_19:
  v1 += ((9 * (__clz(*(_DWORD *)(a1 + 48) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((*(unsigned char *)(a1 + 16) & 0x20) == 0)
  {
LABEL_12:
    if ((*(unsigned char *)(a1 + 16) & 0x40) == 0) {
      goto LABEL_13;
    }
    goto LABEL_21;
  }
LABEL_20:
  v1 += ((9 * (__clz(*(_DWORD *)(a1 + 52) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((*(unsigned char *)(a1 + 16) & 0x40) == 0)
  {
LABEL_13:
    if ((*(unsigned char *)(a1 + 16) & 0x80) == 0) {
      goto LABEL_15;
    }
    goto LABEL_14;
  }
LABEL_21:
  v1 += ((9 * (__clz(*(_DWORD *)(a1 + 56) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((*(unsigned char *)(a1 + 16) & 0x80) != 0) {
LABEL_14:
  }
    v1 += ((9 * (__clz(*(_DWORD *)(a1 + 60) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_15:
  uint64_t v2 = *(void *)(a1 + 8);
  if (v2)
  {
    unint64_t v4 = v2 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v5 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v5 = *(unsigned __int8 *)(v4 + 31);
    }
    v1 += v5;
  }
  *(_DWORD *)(a1 + 20) = v1;
  return v1;
}

uint64_t sub_143C954()
{
  return 1;
}

void *sub_143C95C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gemini.CollectionPopularity.Vector");
}

void *sub_143C96C(void *a1)
{
  unint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1490C7C(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_143C9EC(void *a1)
{
  sub_143C96C(a1);

  operator delete();
}

uint64_t sub_143CA24(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 24);
  if ((int)v2 >= 1)
  {
    unint64_t v3 = (uint64_t *)(*(void *)(result + 32) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_143BEA0(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 24) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = (uint64_t *)(v1 + 8);
  if (v6)
  {
    return sub_188B4AC(v5);
  }
  return result;
}

char *sub_143CAA0(uint64_t a1, char *a2, int32x2_t *a3)
{
  unsigned int v19 = a2;
  if ((sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v5 = (void *)(a1 + 8);
    while (1)
    {
      char v6 = v19 + 1;
      unsigned int v7 = *v19;
      if (*v19 < 0)
      {
        unsigned int v8 = v7 + (*v6 << 7);
        unsigned int v7 = v8 - 128;
        if (*v6 < 0)
        {
          char v6 = (char *)sub_188C180((uint64_t)v19, v8 - 128);
          unsigned int v7 = v9;
        }
        else
        {
          char v6 = v19 + 2;
        }
      }
      unsigned int v19 = v6;
      if (v7 == 10)
      {
        unint64_t v12 = v6 - 1;
        while (1)
        {
          unsigned int v13 = (unsigned __int8 *)(v12 + 1);
          unsigned int v19 = v12 + 1;
          unsigned int v14 = *(_DWORD **)(a1 + 32);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 24), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 24) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            sub_144C59C(*(void *)(a1 + 16));
            uint64_t v16 = sub_188CDC8(a1 + 16, v17);
            unsigned int v13 = (unsigned __int8 *)v19;
          }
          unint64_t v12 = sub_143CC40(a3, v16, v13);
          unsigned int v19 = v12;
          if (!v12) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_24;
          }
        }
      }
      if (!v7 || (v7 & 7) == 4) {
        break;
      }
      if (*v5)
      {
        unint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        unint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        char v6 = v19;
      }
      unsigned int v19 = (char *)sub_1885AC0(v7, v11, v6, a3);
      if (!v19) {
        return 0;
      }
LABEL_24:
      if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
        return v19;
      }
    }
    if (v6)
    {
      a3[10].i32[0] = v7 - 1;
      return v19;
    }
    return 0;
  }
  return v19;
}

char *sub_143CC40(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_143BECC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_143CCD0(uint64_t a1, char *__dst, _DWORD *a3)
{
  int v6 = *(_DWORD *)(a1 + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unint64_t v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unint64_t v10 = __dst + 2;
      }
      __dst = sub_143C324(v8, (unint64_t)v10, a3);
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return __dst;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    unsigned int v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    unsigned int v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(__dst, v14, (int)v15);
    __dst += v16;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, __dst);
}

uint64_t sub_143CE14(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      unint64_t v7 = sub_143C7B0(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 40) = v2;
  return v2;
}

void sub_143CEC4(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 32) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4(a1 + 16, *(_DWORD *)(a2 + 24));
    sub_14928D8((uint64_t *)(a1 + 16), v6, v5, v4, **(_DWORD **)(a1 + 32) - *(_DWORD *)(a1 + 24));
    int v7 = *(_DWORD *)(a1 + 24) + v4;
    *(_DWORD *)(a1 + 24) = v7;
    uint64_t v8 = *(int **)(a1 + 32);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_143CF94()
{
  return 1;
}

void *sub_143CF9C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gemini.CollectionPopularity");
}

uint64_t sub_143CFAC(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_15;
    }
  }
  else if (v4)
  {
    goto LABEL_15;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(uint64_t **)(a1 + 40) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 40));
  }
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 48));
  }
  if (*(uint64_t **)(a1 + 56) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 56));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_15:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_143D0A0(uint64_t a1)
{
  sub_143CFAC(a1);

  operator delete();
}

uint64_t sub_143D0D8(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 0x1F) == 0) {
    goto LABEL_27;
  }
  if (v1)
  {
    unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)unint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
      if ((v1 & 2) != 0) {
        goto LABEL_12;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
      if ((v1 & 2) != 0) {
        goto LABEL_12;
      }
    }
LABEL_4:
    if ((v1 & 4) == 0) {
      goto LABEL_5;
    }
LABEL_16:
    unint64_t v4 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v4 + 23) < 0)
    {
      **(unsigned char **)unint64_t v4 = 0;
      *(void *)(v4 + 8) = 0;
      if ((v1 & 8) != 0) {
        goto LABEL_20;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v4 = 0;
      *(unsigned char *)(v4 + 23) = 0;
      if ((v1 & 8) != 0) {
        goto LABEL_20;
      }
    }
LABEL_6:
    if ((v1 & 0x10) == 0) {
      goto LABEL_27;
    }
LABEL_24:
    unint64_t v6 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v6 + 23) < 0)
    {
      **(unsigned char **)unint64_t v6 = 0;
      *(void *)(v6 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v6 = 0;
      *(unsigned char *)(v6 + 23) = 0;
    }
    goto LABEL_27;
  }
  if ((v1 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_12:
  unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v3 + 23) < 0)
  {
    **(unsigned char **)unint64_t v3 = 0;
    *(void *)(v3 + 8) = 0;
    if ((v1 & 4) != 0) {
      goto LABEL_16;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v3 = 0;
    *(unsigned char *)(v3 + 23) = 0;
    if ((v1 & 4) != 0) {
      goto LABEL_16;
    }
  }
LABEL_5:
  if ((v1 & 8) == 0) {
    goto LABEL_6;
  }
LABEL_20:
  unint64_t v5 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v5 + 23) < 0)
  {
    **(unsigned char **)unint64_t v5 = 0;
    *(void *)(v5 + 8) = 0;
    if ((v1 & 0x10) == 0) {
      goto LABEL_27;
    }
    goto LABEL_24;
  }
  *(unsigned char *)unint64_t v5 = 0;
  *(unsigned char *)(v5 + 23) = 0;
  if ((v1 & 0x10) != 0) {
    goto LABEL_24;
  }
LABEL_27:
  char v8 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v8) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_143D1F8(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unsigned int v22 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v22, a3[11].i32[1])) {
    return *(void *)v22;
  }
  unint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    int v7 = (char *)(*(void *)v22 + 1);
    unsigned int v8 = **(unsigned char **)v22;
    if ((char)**(unsigned char **)v22 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        int v7 = (char *)sub_188C180(*(uint64_t *)v22, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        int v7 = (char *)(*(void *)v22 + 2);
      }
    }
    *(void *)unsigned int v22 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 10) {
          goto LABEL_33;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v11 = *(void *)(a1 + 8);
        unint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
        if (v11) {
          unint64_t v12 = (uint64_t *)*v12;
        }
        unint64_t v13 = (void *)(a1 + 24);
        goto LABEL_29;
      case 2u:
        if (v8 != 18) {
          goto LABEL_33;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v14 = *(void *)(a1 + 8);
        unint64_t v12 = (uint64_t *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
        if (v14) {
          unint64_t v12 = (uint64_t *)*v12;
        }
        unint64_t v13 = (void *)(a1 + 32);
        goto LABEL_29;
      case 3u:
        if (v8 != 26) {
          goto LABEL_33;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v15 = *(void *)(a1 + 8);
        unint64_t v12 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          unint64_t v12 = (uint64_t *)*v12;
        }
        unint64_t v13 = (void *)(a1 + 40);
        goto LABEL_29;
      case 4u:
        if (v8 != 34) {
          goto LABEL_33;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v16 = *(void *)(a1 + 8);
        unint64_t v12 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
        if (v16) {
          unint64_t v12 = (uint64_t *)*v12;
        }
        unint64_t v13 = (void *)(a1 + 48);
        goto LABEL_29;
      case 5u:
        if (v8 != 42) {
          goto LABEL_33;
        }
        *(_DWORD *)(a1 + 16) |= 0x10u;
        uint64_t v17 = *(void *)(a1 + 8);
        unint64_t v12 = (uint64_t *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
        if (v17) {
          unint64_t v12 = (uint64_t *)*v12;
        }
        unint64_t v13 = (void *)(a1 + 56);
LABEL_29:
        unsigned int v18 = (std::string *)sub_1880F84(v13, v12);
        unsigned int v19 = (void *)sub_188C244(v18, *(char **)v22, (uint64_t)a3);
        goto LABEL_30;
      default:
LABEL_33:
        if (v8) {
          BOOL v20 = (v8 & 7) == 4;
        }
        else {
          BOOL v20 = 1;
        }
        if (!v20)
        {
          if (*v6)
          {
            unsigned int v21 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            unsigned int v21 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            int v7 = *(char **)v22;
          }
          unsigned int v19 = sub_1885AC0(v8, v21, v7, a3);
LABEL_30:
          *(void *)unsigned int v22 = v19;
          if (!v19) {
            return 0;
          }
          if (sub_11947B8((uint64_t)a3, (char **)v22, a3[11].i32[1])) {
            return *(void *)v22;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return *(void *)v22;
    }
  }
}

char *sub_143D48C(uint64_t a1, char *__dst, void *a3)
{
  unint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    unint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  unint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_12;
  }
LABEL_11:
  unint64_t v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_12:
  unint64_t v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x10) != 0) {
LABEL_6:
  }
    unint64_t v4 = sub_117A0AC(a3, 5, (const void **)(*(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL), v4);
LABEL_7:
  uint64_t v7 = *(void *)(a1 + 8);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v9 + 31) < 0)
  {
    unsigned int v10 = *(void **)(v9 + 8);
    uint64_t v11 = *(void *)(v9 + 16);
  }
  else
  {
    unsigned int v10 = (void *)(v9 + 8);
    LODWORD(v11) = *(unsigned __int8 *)(v9 + 31);
  }
  if (*a3 - (void)v4 >= (int)v11)
  {
    uint64_t v12 = (int)v11;
    memcpy(v4, v10, (int)v11);
    v4 += v12;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v10, v11, v4);
}

uint64_t sub_143D5EC(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 0x1F) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_18;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
  uint64_t v5 = *(void *)(v3 + 8);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = v4;
  }
  uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    unint64_t v6 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v1 & 4) != 0)
  {
    unint64_t v14 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v15 = *(unsigned __int8 *)(v14 + 23);
    uint64_t v16 = *(void *)(v14 + 8);
    if ((v15 & 0x80u) == 0) {
      uint64_t v16 = v15;
    }
    v2 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 8) == 0)
    {
LABEL_14:
      if ((v1 & 0x10) == 0) {
        goto LABEL_18;
      }
      goto LABEL_15;
    }
  }
  else if ((v1 & 8) == 0)
  {
    goto LABEL_14;
  }
  unint64_t v17 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v18 = *(unsigned __int8 *)(v17 + 23);
  uint64_t v19 = *(void *)(v17 + 8);
  if ((v18 & 0x80u) == 0) {
    uint64_t v19 = v18;
  }
  v2 += v19 + ((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 0x10) != 0)
  {
LABEL_15:
    unint64_t v9 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v10 = *(unsigned __int8 *)(v9 + 23);
    uint64_t v11 = *(void *)(v9 + 8);
    if ((v10 & 0x80u) == 0) {
      uint64_t v11 = v10;
    }
    v2 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_18:
  uint64_t v12 = *(void *)(a1 + 8);
  if (v12)
  {
    unint64_t v20 = v12 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v20 + 31) < 0) {
      uint64_t v21 = *(void *)(v20 + 16);
    }
    else {
      uint64_t v21 = *(unsigned __int8 *)(v20 + 31);
    }
    v2 += v21;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_143D7A0()
{
  return 1;
}

void *sub_143D7A8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gemini.LocalizedFormattedString");
}

uint64_t sub_143D7B8(uint64_t a1)
{
  unint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_11;
    }
  }
  else if (v4)
  {
    goto LABEL_11;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(uint64_t **)(a1 + 40) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 40));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_11:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_143D884(uint64_t a1)
{
  sub_143D7B8(a1);

  operator delete();
}

uint64_t sub_143D8BC(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 7) == 0) {
    goto LABEL_17;
  }
  if (v1)
  {
    unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)unint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
      if ((v1 & 2) != 0) {
        goto LABEL_10;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
      if ((v1 & 2) != 0) {
        goto LABEL_10;
      }
    }
LABEL_4:
    if ((v1 & 4) == 0) {
      goto LABEL_17;
    }
LABEL_14:
    unint64_t v4 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v4 + 23) < 0)
    {
      **(unsigned char **)unint64_t v4 = 0;
      *(void *)(v4 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v4 = 0;
      *(unsigned char *)(v4 + 23) = 0;
    }
    goto LABEL_17;
  }
  if ((v1 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_10:
  unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v3 + 23) < 0)
  {
    **(unsigned char **)unint64_t v3 = 0;
    *(void *)(v3 + 8) = 0;
    if ((v1 & 4) == 0) {
      goto LABEL_17;
    }
    goto LABEL_14;
  }
  *(unsigned char *)unint64_t v3 = 0;
  *(unsigned char *)(v3 + 23) = 0;
  if ((v1 & 4) != 0) {
    goto LABEL_14;
  }
LABEL_17:
  char v6 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v6) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_143D974(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unsigned int v22 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v22, a3[11].i32[1])) {
    return *(void *)v22;
  }
  char v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = (char *)(*(void *)v22 + 1);
    unsigned int v8 = **(unsigned char **)v22;
    if ((char)**(unsigned char **)v22 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180(*(uint64_t *)v22, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (char *)(*(void *)v22 + 2);
      }
    }
    *(void *)unsigned int v22 = v7;
    unsigned int v11 = v8 >> 3;
    if (v8 >> 3 == 9)
    {
      if (v8 == 74)
      {
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v16 = *(void *)(a1 + 8);
        unint64_t v17 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
        if (v16) {
          unint64_t v17 = (uint64_t *)*v17;
        }
        uint64_t v18 = (void *)(a1 + 40);
        goto LABEL_32;
      }
    }
    else if (v11 == 4)
    {
      if (v8 == 34)
      {
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v19 = *(void *)(a1 + 8);
        unint64_t v17 = (uint64_t *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
        if (v19) {
          unint64_t v17 = (uint64_t *)*v17;
        }
        uint64_t v18 = (void *)(a1 + 32);
        goto LABEL_32;
      }
    }
    else if (v11 == 2 && v8 == 18)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v20 = *(void *)(a1 + 8);
      unint64_t v17 = (uint64_t *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
      if (v20) {
        unint64_t v17 = (uint64_t *)*v17;
      }
      uint64_t v18 = (void *)(a1 + 24);
LABEL_32:
      uint64_t v21 = (std::string *)sub_1880F84(v18, v17);
      uint64_t v15 = (void *)sub_188C244(v21, *(char **)v22, (uint64_t)a3);
      goto LABEL_33;
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      unint64_t v14 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = *(char **)v22;
    }
    uint64_t v15 = sub_1885AC0(v8, v14, v7, a3);
LABEL_33:
    *(void *)unsigned int v22 = v15;
    if (!v15) {
      goto LABEL_39;
    }
    if (sub_11947B8((uint64_t)a3, (char **)v22, a3[11].i32[1])) {
      return *(void *)v22;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v22;
  }
LABEL_39:
  *(void *)unsigned int v22 = 0;
  return *(void *)v22;
}

char *sub_143DB64(uint64_t a1, char *__dst, void *a3)
{
  unint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    unint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_4;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  unint64_t v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) != 0) {
LABEL_4:
  }
    unint64_t v4 = sub_117A0AC(a3, 9, (const void **)(*(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL), v4);
LABEL_5:
  uint64_t v7 = *(void *)(a1 + 8);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v9 + 31) < 0)
  {
    unsigned int v10 = *(void **)(v9 + 8);
    uint64_t v11 = *(void *)(v9 + 16);
  }
  else
  {
    unsigned int v10 = (void *)(v9 + 8);
    LODWORD(v11) = *(unsigned __int8 *)(v9 + 31);
  }
  if (*a3 - (void)v4 >= (int)v11)
  {
    uint64_t v12 = (int)v11;
    memcpy(v4, v10, (int)v11);
    v4 += v12;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v10, v11, v4);
}

uint64_t sub_143DC7C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 7) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_16;
  }
  if (v1)
  {
    unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
    uint64_t v5 = *(void *)(v3 + 8);
    if ((v4 & 0x80u) == 0) {
      uint64_t v5 = v4;
    }
    uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  uint64_t v2 = 0;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    unint64_t v6 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v1 & 4) != 0)
  {
    unint64_t v9 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v10 = *(unsigned __int8 *)(v9 + 23);
    uint64_t v11 = *(void *)(v9 + 8);
    if ((v10 & 0x80u) == 0) {
      uint64_t v11 = v10;
    }
    v2 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_16:
  uint64_t v12 = *(void *)(a1 + 8);
  if (v12)
  {
    unint64_t v14 = v12 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v14 + 31) < 0) {
      uint64_t v15 = *(void *)(v14 + 16);
    }
    else {
      uint64_t v15 = *(unsigned __int8 *)(v14 + 31);
    }
    v2 += v15;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_143DD9C()
{
  return 1;
}

void *sub_143DDA4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gemini.BusinessCardCollection.LocalizedName");
}

uint64_t sub_143DDB4(uint64_t a1)
{
  unint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  if ((uint64_t (***)())a1 != &off_2538A58)
  {
    uint64_t v5 = *(void *)(a1 + 96);
    if (v5)
    {
      sub_1418B14(v5);
      operator delete();
    }
    uint64_t v6 = *(void *)(a1 + 104);
    if (v6)
    {
      sub_141ACF0(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  sub_1490CFC((void *)(a1 + 72));
  sub_12C1DB8((void *)(a1 + 48));
  sub_14900FC((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_143DEA8(uint64_t a1)
{
  sub_143DDB4(a1);

  operator delete();
}

uint64_t sub_143DEE0(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    unint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_1417070(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  uint64_t v5 = *(unsigned int *)(v1 + 56);
  if ((int)v5 >= 1)
  {
    uint64_t v6 = (uint64_t *)(*(void *)(v1 + 64) + 8);
    do
    {
      uint64_t v7 = *v6++;
      uint64_t result = sub_15B2C80(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(v1 + 56) = 0;
  }
  uint64_t v8 = *(unsigned int *)(v1 + 80);
  if ((int)v8 >= 1)
  {
    unint64_t v9 = (uint64_t *)(*(void *)(v1 + 88) + 8);
    do
    {
      uint64_t v10 = *v9++;
      uint64_t result = sub_143D0D8(v10);
      --v8;
    }
    while (v8);
    *(_DWORD *)(v1 + 80) = 0;
  }
  int v11 = *(_DWORD *)(v1 + 16);
  if ((v11 & 3) != 0)
  {
    if (v11) {
      uint64_t result = sub_1418C04(*(void *)(v1 + 96));
    }
    if ((v11 & 2) != 0) {
      uint64_t result = sub_141AE40(*(void *)(v1 + 104));
    }
  }
  if ((v11 & 0x1C) != 0)
  {
    *(_WORD *)(v1 + 120) = 0;
    *(void *)(v1 + 112) = 0;
  }
  char v13 = *(unsigned char *)(v1 + 8);
  uint64_t v12 = v1 + 8;
  *(_DWORD *)(v12 + 8) = 0;
  if (v13)
  {
    return sub_188B4AC((uint64_t *)v12);
  }
  return result;
}

char *sub_143DFE4(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v52 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v52, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = v52 + 1;
    unsigned int v9 = *v52;
    if (*v52 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v52, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v52 + 2;
      }
    }
    uint64_t v52 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_66;
        }
        v5 |= 4u;
        uint64_t v12 = v8 + 1;
        uint64_t v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        uint64_t v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          uint64_t v12 = v8 + 2;
LABEL_13:
          uint64_t v52 = v12;
          *(void *)(a1 + 112) = v13;
          goto LABEL_74;
        }
        uint64_t v46 = (char *)sub_188C138((uint64_t)v8, v13);
        uint64_t v52 = v46;
        *(void *)(a1 + 112) = v47;
        if (v46) {
          goto LABEL_74;
        }
        goto LABEL_85;
      case 2u:
        if (v9 != 18) {
          goto LABEL_66;
        }
        uint64_t v15 = v8 - 1;
        while (1)
        {
          uint64_t v16 = (unsigned __int8 *)(v15 + 1);
          uint64_t v52 = v15 + 1;
          unint64_t v17 = *(_DWORD **)(a1 + 40);
          if (v17 && (uint64_t v18 = *(int *)(a1 + 32), (int)v18 < *v17))
          {
            *(_DWORD *)(a1 + 32) = v18 + 1;
            uint64_t v19 = *(void *)&v17[2 * v18 + 2];
          }
          else
          {
            uint64_t v20 = sub_144A6DC(*(void *)(a1 + 24));
            uint64_t v19 = sub_188CDC8(a1 + 24, (uint64_t)v20);
            uint64_t v16 = (unsigned __int8 *)v52;
          }
          uint64_t v15 = (char *)sub_1415788(a3, v19, v16);
          uint64_t v52 = v15;
          if (!v15) {
            goto LABEL_85;
          }
          if (*(void *)a3 <= (unint64_t)v15 || *v15 != 18) {
            goto LABEL_74;
          }
        }
      case 3u:
        if (v9 != 26) {
          goto LABEL_66;
        }
        uint64_t v21 = v8 - 1;
        while (1)
        {
          unsigned int v22 = (unsigned __int8 *)(v21 + 1);
          uint64_t v52 = v21 + 1;
          unsigned int v23 = *(_DWORD **)(a1 + 64);
          if (v23 && (uint64_t v24 = *(int *)(a1 + 56), (int)v24 < *v23))
          {
            *(_DWORD *)(a1 + 56) = v24 + 1;
            uint64_t v25 = *(void *)&v23[2 * v24 + 2];
          }
          else
          {
            unsigned int v26 = sub_15C1B30(*(void *)(a1 + 48));
            uint64_t v25 = sub_188CDC8(a1 + 48, (uint64_t)v26);
            unsigned int v22 = (unsigned __int8 *)v52;
          }
          uint64_t v21 = (char *)sub_125CF74(a3, v25, v22);
          uint64_t v52 = v21;
          if (!v21) {
            goto LABEL_85;
          }
          if (*(void *)a3 <= (unint64_t)v21 || *v21 != 26) {
            goto LABEL_74;
          }
        }
      case 4u:
        if (v9 != 34) {
          goto LABEL_66;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v27 = *(void *)(a1 + 96);
        if (!v27)
        {
          unsigned int v28 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            unsigned int v28 = (void *)*v28;
          }
          uint64_t v27 = sub_144A8B0((uint64_t)v28);
          *(void *)(a1 + 96) = v27;
          uint64_t v8 = v52;
        }
        unsigned int v29 = (char *)sub_14320A8(a3, v27, (unsigned __int8 *)v8);
        goto LABEL_73;
      case 5u:
        if (v9 != 40) {
          goto LABEL_66;
        }
        v5 |= 8u;
        unsigned int v30 = v8 + 1;
        uint64_t v31 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_44;
        }
        int v32 = *v30;
        uint64_t v31 = v31 + (v32 << 7) - 128;
        if (v32 < 0)
        {
          uint64_t v48 = (char *)sub_188C138((uint64_t)v8, v31);
          uint64_t v52 = v48;
          *(unsigned char *)(a1 + 120) = v49 != 0;
          if (!v48) {
            goto LABEL_85;
          }
        }
        else
        {
          unsigned int v30 = v8 + 2;
LABEL_44:
          uint64_t v52 = v30;
          *(unsigned char *)(a1 + 120) = v31 != 0;
        }
        goto LABEL_74;
      case 6u:
        if (v9 != 50) {
          goto LABEL_66;
        }
        unint64_t v33 = v8 - 1;
        while (1)
        {
          int v34 = (unsigned __int8 *)(v33 + 1);
          uint64_t v52 = v33 + 1;
          uint64_t v35 = *(_DWORD **)(a1 + 88);
          if (v35 && (uint64_t v36 = *(int *)(a1 + 80), (int)v36 < *v35))
          {
            *(_DWORD *)(a1 + 80) = v36 + 1;
            uint64_t v37 = *(void *)&v35[2 * v36 + 2];
          }
          else
          {
            int v38 = sub_144C6BC(*(void *)(a1 + 72));
            uint64_t v37 = sub_188CDC8(a1 + 72, (uint64_t)v38);
            int v34 = (unsigned __int8 *)v52;
          }
          unint64_t v33 = (char *)sub_143E4E8(a3, v37, v34);
          uint64_t v52 = v33;
          if (!v33) {
            goto LABEL_85;
          }
          if (*(void *)a3 <= (unint64_t)v33 || *v33 != 50) {
            goto LABEL_74;
          }
        }
      case 7u:
        if (v9 != 58) {
          goto LABEL_66;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v39 = *(void *)(a1 + 104);
        if (!v39)
        {
          uint64_t v40 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v40 = (void *)*v40;
          }
          uint64_t v39 = sub_144AAAC((uint64_t)v40);
          *(void *)(a1 + 104) = v39;
          uint64_t v8 = v52;
        }
        unsigned int v29 = (char *)sub_14156F8(a3, v39, (unsigned __int8 *)v8);
        goto LABEL_73;
      case 8u:
        if (v9 != 64) {
          goto LABEL_66;
        }
        v5 |= 0x10u;
        uint64_t v41 = v8 + 1;
        uint64_t v42 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_65;
        }
        int v43 = *v41;
        uint64_t v42 = v42 + (v43 << 7) - 128;
        if (v43 < 0)
        {
          uint64_t v50 = (char *)sub_188C138((uint64_t)v8, v42);
          uint64_t v52 = v50;
          *(unsigned char *)(a1 + 121) = v51 != 0;
          if (!v50) {
            goto LABEL_85;
          }
        }
        else
        {
          uint64_t v41 = v8 + 2;
LABEL_65:
          uint64_t v52 = v41;
          *(unsigned char *)(a1 + 121) = v42 != 0;
        }
        goto LABEL_74;
      default:
LABEL_66:
        if (v9) {
          BOOL v44 = (v9 & 7) == 4;
        }
        else {
          BOOL v44 = 1;
        }
        if (!v44)
        {
          if (*v7)
          {
            int v45 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            int v45 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = v52;
          }
          unsigned int v29 = (char *)sub_1885AC0(v9, v45, v8, a3);
LABEL_73:
          uint64_t v52 = v29;
          if (!v29) {
            goto LABEL_85;
          }
LABEL_74:
          if (sub_11947B8((uint64_t)a3, &v52, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_85:
        }
          uint64_t v52 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v52;
    }
  }
}

uint64_t sub_143E4E8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_143D1F8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_143E578(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 4) != 0)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(void *)(a1 + 112);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v10 = *(_DWORD *)(a1 + 32);
  if (v10)
  {
    for (int i = 0; i != v10; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v12 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      unsigned char *v4 = 18;
      unsigned int v13 = *(_DWORD *)(v12 + 20);
      v4[1] = v13;
      if (v13 > 0x7F) {
        int v14 = sub_188A9CC(v13, v4 + 1);
      }
      else {
        int v14 = v4 + 2;
      }
      uint64_t v4 = sub_1417780(v12, (unint64_t)v14, a3);
    }
  }
  int v15 = *(_DWORD *)(a1 + 56);
  if (v15)
  {
    for (int j = 0; j != v15; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v17 = *(void *)(*(void *)(a1 + 64) + 8 * j + 8);
      unsigned char *v4 = 26;
      unsigned int v18 = *(_DWORD *)(v17 + 20);
      v4[1] = v18;
      if (v18 > 0x7F) {
        uint64_t v19 = sub_188A9CC(v18, v4 + 1);
      }
      else {
        uint64_t v19 = v4 + 2;
      }
      uint64_t v4 = sub_15B2EA4(v17, v19, a3);
    }
  }
  if (v6)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v20 = *(void *)(a1 + 96);
    unsigned char *v4 = 34;
    unsigned int v21 = *(_DWORD *)(v20 + 20);
    v4[1] = v21;
    if (v21 > 0x7F) {
      unsigned int v22 = sub_188A9CC(v21, v4 + 1);
    }
    else {
      unsigned int v22 = v4 + 2;
    }
    uint64_t v4 = sub_1418FB4(v20, v22, a3);
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v23 = *(unsigned char *)(a1 + 120);
    unsigned char *v4 = 40;
    v4[1] = v23;
    v4 += 2;
  }
  int v24 = *(_DWORD *)(a1 + 80);
  if (v24)
  {
    for (int k = 0; k != v24; ++k)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v26 = *(void *)(*(void *)(a1 + 88) + 8 * k + 8);
      unsigned char *v4 = 50;
      unsigned int v27 = *(_DWORD *)(v26 + 20);
      v4[1] = v27;
      if (v27 > 0x7F) {
        unsigned int v28 = sub_188A9CC(v27, v4 + 1);
      }
      else {
        unsigned int v28 = v4 + 2;
      }
      uint64_t v4 = sub_143D48C(v26, v28, a3);
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v29 = *(void *)(a1 + 104);
    unsigned char *v4 = 58;
    unsigned int v30 = *(_DWORD *)(v29 + 20);
    v4[1] = v30;
    if (v30 > 0x7F) {
      uint64_t v31 = sub_188A9CC(v30, v4 + 1);
    }
    else {
      uint64_t v31 = v4 + 2;
    }
    uint64_t v4 = sub_141B500(v29, v31, a3);
  }
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v32 = *(unsigned char *)(a1 + 121);
    unsigned char *v4 = 64;
    v4[1] = v32;
    v4 += 2;
  }
  uint64_t v33 = *(void *)(a1 + 8);
  if ((v33 & 1) == 0) {
    return v4;
  }
  unint64_t v35 = v33 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v35 + 31) < 0)
  {
    uint64_t v36 = *(void **)(v35 + 8);
    uint64_t v37 = *(void *)(v35 + 16);
  }
  else
  {
    uint64_t v36 = (void *)(v35 + 8);
    LODWORD(v37) = *(unsigned __int8 *)(v35 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v37)
  {
    uint64_t v38 = (int)v37;
    memcpy(v4, v36, (int)v37);
    v4 += v38;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v36, v37, v4);
}

uint64_t sub_143E97C(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_1417BAC(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(int *)(a1 + 56);
  uint64_t v9 = v2 + v8;
  uint64_t v10 = *(void *)(a1 + 64);
  if (v10) {
    unsigned int v11 = (uint64_t *)(v10 + 8);
  }
  else {
    unsigned int v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_15B2F90(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  uint64_t v15 = *(int *)(a1 + 80);
  uint64_t v16 = v9 + v15;
  uint64_t v17 = *(void *)(a1 + 88);
  if (v17) {
    unsigned int v18 = (uint64_t *)(v17 + 8);
  }
  else {
    unsigned int v18 = 0;
  }
  if (v15)
  {
    uint64_t v19 = 8 * v15;
    do
    {
      uint64_t v20 = *v18++;
      uint64_t v21 = sub_143D5EC(v20);
      v16 += v21 + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6);
      v19 -= 8;
    }
    while (v19);
  }
  int v22 = *(_DWORD *)(a1 + 16);
  if ((v22 & 0x1F) != 0)
  {
    if (v22)
    {
      uint64_t v26 = sub_14191E0(*(void *)(a1 + 96));
      v16 += v26 + ((9 * (__clz(v26 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v22 & 2) == 0)
      {
LABEL_24:
        if ((v22 & 4) == 0)
        {
LABEL_26:
          uint64_t v23 = v16 + 2;
          if ((v22 & 8) == 0) {
            uint64_t v23 = v16;
          }
          if ((v22 & 0x10) != 0) {
            uint64_t v16 = v23 + 2;
          }
          else {
            uint64_t v16 = v23;
          }
          goto LABEL_31;
        }
LABEL_25:
        v16 += ((9 * (__clz(*(void *)(a1 + 112) | 1) ^ 0x3F) + 73) >> 6) + 1;
        goto LABEL_26;
      }
    }
    else if ((v22 & 2) == 0)
    {
      goto LABEL_24;
    }
    uint64_t v27 = sub_141B884(*(void *)(a1 + 104));
    v16 += v27 + ((9 * (__clz(v27 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v22 & 4) == 0) {
      goto LABEL_26;
    }
    goto LABEL_25;
  }
LABEL_31:
  uint64_t v24 = *(void *)(a1 + 8);
  if (v24)
  {
    unint64_t v28 = v24 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v28 + 31) < 0) {
      uint64_t v29 = *(void *)(v28 + 16);
    }
    else {
      uint64_t v29 = *(unsigned __int8 *)(v28 + 31);
    }
    v16 += v29;
  }
  *(_DWORD *)(a1 + 20) = v16;
  return v16;
}

std::string *sub_143EB80(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = sub_1491C84(v3 + 1, v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2] - LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    uint64_t v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    unsigned int v11 = (std::string **)sub_188CCE4((uint64_t)&v3[2], *(_DWORD *)(a2 + 56));
    uint64_t result = sub_12C1E38(v3 + 2, v11, v10, v9, *(_DWORD *)v3[2].__r_.__value_.__r.__words[2] - LODWORD(v3[2].__r_.__value_.__r.__words[1]));
    int v12 = LODWORD(v3[2].__r_.__value_.__r.__words[1]) + v9;
    LODWORD(v3[2].__r_.__value_.__r.__words[1]) = v12;
    uint64_t v13 = (int *)v3[2].__r_.__value_.__r.__words[2];
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 80);
  if (v14)
  {
    uint64_t v15 = (uint64_t *)(*(void *)(a2 + 88) + 8);
    uint64_t v16 = (std::string **)sub_188CCE4((uint64_t)&v3[3], *(_DWORD *)(a2 + 80));
    uint64_t result = sub_1492954(v3 + 3, v16, v15, v14, *(_DWORD *)v3[3].__r_.__value_.__r.__words[2] - LODWORD(v3[3].__r_.__value_.__r.__words[1]));
    int v17 = LODWORD(v3[3].__r_.__value_.__r.__words[1]) + v14;
    LODWORD(v3[3].__r_.__value_.__r.__words[1]) = v17;
    unsigned int v18 = (int *)v3[3].__r_.__value_.__r.__words[2];
    if (*v18 < v17) {
      int *v18 = v17;
    }
  }
  int v19 = *(_DWORD *)(a2 + 16);
  if ((v19 & 0x1F) != 0)
  {
    if (v19)
    {
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::pointer data = (std::string *)v3[4].__r_.__value_.__l.__data_;
      if (!data)
      {
        std::string::size_type size = v3->__r_.__value_.__l.__size_;
        uint64_t v23 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
        if (size) {
          uint64_t v23 = (void *)*v23;
        }
        std::string::pointer data = (std::string *)sub_144A8B0((uint64_t)v23);
        v3[4].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      }
      if (*(void *)(a2 + 96)) {
        uint64_t v24 = *(uint64_t (****)(uint64_t))(a2 + 96);
      }
      else {
        uint64_t v24 = &off_2537D88;
      }
      uint64_t result = sub_141930C(data, (uint64_t)v24);
      if ((v19 & 2) == 0)
      {
LABEL_13:
        if ((v19 & 4) == 0) {
          goto LABEL_14;
        }
        goto LABEL_38;
      }
    }
    else if ((v19 & 2) == 0)
    {
      goto LABEL_13;
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    uint64_t v25 = (std::string *)v3[4].__r_.__value_.__l.__size_;
    if (!v25)
    {
      std::string::size_type v26 = v3->__r_.__value_.__l.__size_;
      uint64_t v27 = (void *)(v26 & 0xFFFFFFFFFFFFFFFCLL);
      if (v26) {
        uint64_t v27 = (void *)*v27;
      }
      uint64_t v25 = (std::string *)sub_144AAAC((uint64_t)v27);
      v3[4].__r_.__value_.__l.__size_ = (std::string::size_type)v25;
    }
    if (*(void *)(a2 + 104)) {
      unint64_t v28 = *(uint64_t (****)())(a2 + 104);
    }
    else {
      unint64_t v28 = &off_2537E30;
    }
    uint64_t result = sub_141BAFC(v25, (uint64_t)v28);
    if ((v19 & 4) == 0)
    {
LABEL_14:
      if ((v19 & 8) == 0) {
        goto LABEL_15;
      }
      goto LABEL_39;
    }
LABEL_38:
    v3[4].__r_.__value_.__r.__words[2] = *(void *)(a2 + 112);
    if ((v19 & 8) == 0)
    {
LABEL_15:
      if ((v19 & 0x10) == 0)
      {
LABEL_17:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v19;
        goto LABEL_18;
      }
LABEL_16:
      v3[5].__r_.__value_.__s.__data_[1] = *(unsigned char *)(a2 + 121);
      goto LABEL_17;
    }
LABEL_39:
    v3[5].__r_.__value_.__s.__data_[0] = *(unsigned char *)(a2 + 120);
    if ((v19 & 0x10) == 0) {
      goto LABEL_17;
    }
    goto LABEL_16;
  }
LABEL_18:
  uint64_t v20 = *(void *)(a2 + 8);
  if (v20)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v20 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

BOOL sub_143EE00(uint64_t a1)
{
  return (*(unsigned char *)(a1 + 16) & 1) == 0 || (~*(_DWORD *)(*(void *)(a1 + 96) + 16) & 9) == 0;
}

void *sub_143EE2C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gemini.BusinessCardCollection.CollectionEntity");
}

uint64_t sub_143EE3C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_14;
    }
  }
  else if (v4)
  {
    goto LABEL_14;
  }
  uint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_2538AD8)
  {
    uint64_t v6 = *(void *)(a1 + 56);
    if (v6)
    {
      sub_15B1678(v6);
      operator delete();
    }
    if (*(void *)(a1 + 64))
    {
      sub_15B6D48();
      operator delete();
    }
    if (*(void *)(a1 + 72))
    {
      sub_15B0994();
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_14:
  sub_1889DE8((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_143EF50(uint64_t a1)
{
  sub_143EE3C(a1);

  operator delete();
}

uint64_t sub_143EF88(uint64_t a1)
{
  uint64_t result = sub_188CC00(a1 + 24);
  int v3 = *(_DWORD *)(a1 + 16);
  if ((v3 & 0xF) == 0) {
    goto LABEL_7;
  }
  if ((v3 & 1) == 0)
  {
    if ((v3 & 2) == 0) {
      goto LABEL_4;
    }
LABEL_17:
    uint64_t result = (uint64_t)sub_15B16B4(*(unsigned char **)(a1 + 56));
    if ((v3 & 4) == 0)
    {
LABEL_5:
      if ((v3 & 8) == 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
    goto LABEL_18;
  }
  unint64_t v6 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v6 + 23) < 0)
  {
    **(unsigned char **)unint64_t v6 = 0;
    *(void *)(v6 + 8) = 0;
    if ((v3 & 2) != 0) {
      goto LABEL_17;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v6 = 0;
    *(unsigned char *)(v6 + 23) = 0;
    if ((v3 & 2) != 0) {
      goto LABEL_17;
    }
  }
LABEL_4:
  if ((v3 & 4) == 0) {
    goto LABEL_5;
  }
LABEL_18:
  uint64_t result = sub_15B6D84(*(void *)(a1 + 64));
  if ((v3 & 8) != 0) {
LABEL_6:
  }
    uint64_t result = (uint64_t)sub_15B09D0(*(void *)(a1 + 72));
LABEL_7:
  if ((v3 & 0xF0) != 0)
  {
    *(void *)(a1 + 80) = 0;
    *(void *)(a1 + 88) = 0;
    *(void *)(a1 + 96) = 0;
  }
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t v4 = a1 + 8;
  *(_DWORD *)(v4 + 8) = 0;
  if (v5)
  {
    return sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

uint64_t sub_143F05C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v53 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v53, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (uint64_t **)(a1 + 24);
  uint64_t v8 = (void *)(a1 + 8);
  while (2)
  {
    int v9 = (unsigned __int8 *)(*(void *)v53 + 1);
    unsigned int v10 = **(unsigned char **)v53;
    if ((char)**(unsigned char **)v53 < 0)
    {
      unsigned int v11 = v10 + (*v9 << 7);
      unsigned int v10 = v11 - 128;
      if ((char)*v9 < 0)
      {
        int v9 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v53, v11 - 128);
        unsigned int v10 = v12;
      }
      else
      {
        int v9 = (unsigned __int8 *)(*(void *)v53 + 2);
      }
    }
    *(void *)int v53 = v9;
    switch(v10 >> 3)
    {
      case 1u:
        if (v10 != 8) {
          goto LABEL_67;
        }
        uint64_t v13 = (char *)(v9 + 1);
        unint64_t v14 = *v9;
        if (((char)*v9 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v15 = *v13;
        int v16 = v14 + (v15 << 7);
        unint64_t v14 = (v16 - 128);
        if (v15 < 0)
        {
          *(void *)int v53 = sub_188C138((uint64_t)v9, (v16 - 128));
          if (!*(void *)v53) {
            goto LABEL_97;
          }
          unint64_t v14 = v45;
        }
        else
        {
          uint64_t v13 = (char *)(v9 + 2);
LABEL_13:
          *(void *)int v53 = v13;
        }
        if (v14 <= 1)
        {
          *(_DWORD *)(a1 + 16) |= 0x20u;
          *(_DWORD *)(a1 + 88) = v14;
          goto LABEL_75;
        }
        if (*v8) {
          uint64_t v51 = (std::string *)((*v8 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          uint64_t v51 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v52 = 1;
        goto LABEL_91;
      case 2u:
        if (v10 != 16) {
          goto LABEL_67;
        }
        v5 |= 0x10u;
        int v17 = (char *)(v9 + 1);
        uint64_t v18 = *v9;
        if (((char)*v9 & 0x80000000) == 0) {
          goto LABEL_20;
        }
        int v19 = *v17;
        uint64_t v18 = v18 + (v19 << 7) - 128;
        if (v19 < 0)
        {
          uint64_t v46 = sub_188C138((uint64_t)v9, v18);
          *(void *)int v53 = v46;
          *(void *)(a1 + 80) = v47;
          if (!v46) {
            goto LABEL_97;
          }
        }
        else
        {
          int v17 = (char *)(v9 + 2);
LABEL_20:
          *(void *)int v53 = v17;
          *(void *)(a1 + 80) = v18;
        }
        goto LABEL_75;
      case 3u:
        if (v10 != 26) {
          goto LABEL_67;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v20 = *(void *)(a1 + 56);
        if (!v20)
        {
          uint64_t v21 = (void *)(*v8 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v8) {
            uint64_t v21 = (void *)*v21;
          }
          uint64_t v20 = sub_15C19EC((uint64_t)v21);
          *(void *)(a1 + 56) = v20;
          int v9 = *(unsigned __int8 **)v53;
        }
        int v22 = sub_11E1C60(a3, v20, v9);
        goto LABEL_74;
      case 4u:
        if (v10 != 34) {
          goto LABEL_67;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v23 = *(void *)(a1 + 8);
        uint64_t v24 = (uint64_t *)(v23 & 0xFFFFFFFFFFFFFFFCLL);
        if (v23) {
          uint64_t v24 = (uint64_t *)*v24;
        }
        uint64_t v25 = (std::string *)sub_1880F84((void *)(a1 + 48), v24);
        int v22 = (void *)sub_188C244(v25, *(char **)v53, (uint64_t)a3);
        goto LABEL_74;
      case 5u:
        if (v10 != 42) {
          goto LABEL_67;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        std::string::size_type v26 = *(void **)(a1 + 64);
        if (!v26)
        {
          uint64_t v27 = (void *)(*v8 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v8) {
            uint64_t v27 = (void *)*v27;
          }
          std::string::size_type v26 = sub_15C1E94((uint64_t)v27);
          *(void *)(a1 + 64) = v26;
          int v9 = *(unsigned __int8 **)v53;
        }
        int v22 = sub_11EA9CC(a3, (uint64_t)v26, v9);
        goto LABEL_74;
      case 6u:
        if (v10 != 50) {
          goto LABEL_67;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v28 = *(void *)(a1 + 72);
        if (!v28)
        {
          uint64_t v29 = (void *)(*v8 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v8) {
            uint64_t v29 = (void *)*v29;
          }
          uint64_t v28 = sub_15C1918((uint64_t)v29);
          *(void *)(a1 + 72) = v28;
          int v9 = *(unsigned __int8 **)v53;
        }
        int v22 = sub_1198F14(a3, v28, v9);
        goto LABEL_74;
      case 7u:
        if (v10 != 56) {
          goto LABEL_67;
        }
        unsigned int v30 = (char *)(v9 + 1);
        unint64_t v14 = *v9;
        if (((char)*v9 & 0x80000000) == 0) {
          goto LABEL_47;
        }
        int v31 = *v30;
        int v32 = v14 + (v31 << 7);
        unint64_t v14 = (v32 - 128);
        if (v31 < 0)
        {
          *(void *)int v53 = sub_188C138((uint64_t)v9, (v32 - 128));
          if (!*(void *)v53) {
            goto LABEL_97;
          }
          unint64_t v14 = v48;
        }
        else
        {
          unsigned int v30 = (char *)(v9 + 2);
LABEL_47:
          *(void *)int v53 = v30;
        }
        if (sub_16BAF04(v14))
        {
          *(_DWORD *)(a1 + 16) |= 0x40u;
          *(_DWORD *)(a1 + 92) = v14;
        }
        else
        {
          if (*v8) {
            uint64_t v51 = (std::string *)((*v8 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v51 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          int v52 = 7;
LABEL_91:
          sub_188C020(v52, v14, v51);
        }
        goto LABEL_75;
      case 8u:
        if (v10 != 66) {
          goto LABEL_67;
        }
        uint64_t v33 = (const std::string::value_type *)(v9 - 1);
        while (1)
        {
          int v34 = (char *)(v33 + 1);
          *(void *)int v53 = v33 + 1;
          unint64_t v35 = *(_DWORD **)(a1 + 40);
          if (v35 && (uint64_t v36 = *(int *)(a1 + 32), (int)v36 < *v35))
          {
            *(_DWORD *)(a1 + 32) = v36 + 1;
            uint64_t v37 = *(std::string **)&v35[2 * v36 + 2];
          }
          else
          {
            if (!*v7) {
              operator new();
            }
            *uint64_t v39 = v38;
            v39[1] = sub_3A6EDC;
            void *v38 = 0;
            v38[1] = 0;
            v38[2] = 0;
            uint64_t v37 = (std::string *)sub_188CDC8(a1 + 24, (uint64_t)v38);
            int v34 = *(char **)v53;
          }
          uint64_t v33 = sub_188C244(v37, v34, (uint64_t)a3);
          *(void *)int v53 = v33;
          if (!v33) {
            goto LABEL_97;
          }
          if (*(void *)a3 <= (unint64_t)v33 || *v33 != 66) {
            goto LABEL_75;
          }
        }
      case 9u:
        if (v10 != 72) {
          goto LABEL_67;
        }
        v5 |= 0x80u;
        uint64_t v40 = (char *)(v9 + 1);
        uint64_t v41 = *v9;
        if (((char)*v9 & 0x80000000) == 0) {
          goto LABEL_66;
        }
        int v42 = *v40;
        uint64_t v41 = v41 + (v42 << 7) - 128;
        if (v42 < 0)
        {
          uint64_t v49 = sub_188C138((uint64_t)v9, v41);
          *(void *)int v53 = v49;
          *(void *)(a1 + 96) = v50;
          if (!v49) {
            goto LABEL_97;
          }
        }
        else
        {
          uint64_t v40 = (char *)(v9 + 2);
LABEL_66:
          *(void *)int v53 = v40;
          *(void *)(a1 + 96) = v41;
        }
        goto LABEL_75;
      default:
LABEL_67:
        if (v10) {
          BOOL v43 = (v10 & 7) == 4;
        }
        else {
          BOOL v43 = 1;
        }
        if (!v43)
        {
          if (*v8)
          {
            BOOL v44 = (std::string *)((*v8 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            BOOL v44 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            int v9 = *(unsigned __int8 **)v53;
          }
          int v22 = sub_1885AC0(v10, v44, (char *)v9, a3);
LABEL_74:
          *(void *)int v53 = v22;
          if (!v22) {
            goto LABEL_97;
          }
LABEL_75:
          if (sub_11947B8((uint64_t)a3, (char **)v53, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v9) {
          a3[10].i32[0] = v10 - 1;
        }
        else {
LABEL_97:
        }
          *(void *)int v53 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v53;
    }
  }
}

char *sub_143F5E8(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 0x20) != 0)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 88);
    char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(void *)(a1 + 80);
    char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v13 = *(void *)(a1 + 56);
    char *v4 = 26;
    unsigned int v14 = *(_DWORD *)(v13 + 20);
    v4[1] = v14;
    if (v14 > 0x7F) {
      int v15 = sub_188A9CC(v14, v4 + 1);
    }
    else {
      int v15 = v4 + 2;
    }
    uint64_t v4 = sub_15B1A68(v13, (unint64_t)v15, a3);
    if ((v6 & 1) == 0)
    {
LABEL_17:
      if ((v6 & 4) == 0) {
        goto LABEL_18;
      }
      goto LABEL_28;
    }
  }
  else if ((v6 & 1) == 0)
  {
    goto LABEL_17;
  }
  uint64_t v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) == 0)
  {
LABEL_18:
    if ((v6 & 8) == 0) {
      goto LABEL_19;
    }
    goto LABEL_34;
  }
LABEL_28:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v16 = *(void *)(a1 + 64);
  char *v4 = 42;
  unsigned int v17 = *(_DWORD *)(v16 + 20);
  v4[1] = v17;
  if (v17 > 0x7F) {
    uint64_t v18 = sub_188A9CC(v17, v4 + 1);
  }
  else {
    uint64_t v18 = v4 + 2;
  }
  uint64_t v4 = sub_15B7AE4(v16, v18, a3);
  if ((v6 & 8) == 0)
  {
LABEL_19:
    if ((v6 & 0x40) == 0) {
      goto LABEL_46;
    }
    goto LABEL_40;
  }
LABEL_34:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v19 = *(void *)(a1 + 72);
  char *v4 = 50;
  unsigned int v20 = *(_DWORD *)(v19 + 44);
  v4[1] = v20;
  if (v20 > 0x7F) {
    uint64_t v21 = sub_188A9CC(v20, v4 + 1);
  }
  else {
    uint64_t v21 = v4 + 2;
  }
  uint64_t v4 = sub_15B0C0C(v19, v21, a3);
  if ((v6 & 0x40) != 0)
  {
LABEL_40:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v22 = *(int *)(a1 + 92);
    char *v4 = 56;
    v4[1] = v22;
    if (v22 > 0x7F)
    {
      v4[1] = v22 | 0x80;
      unint64_t v23 = v22 >> 7;
      v4[2] = v22 >> 7;
      v4 += 3;
      if (v22 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v24 = v23 >> 14;
          v23 >>= 7;
          *v4++ = v23;
        }
        while (v24);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_46:
  uint64_t v25 = *(unsigned int *)(a1 + 32);
  if ((int)v25 >= 1)
  {
    uint64_t v26 = 0;
    uint64_t v27 = 8 * v25;
    do
    {
      uint64_t v28 = *(void **)(*(void *)(a1 + 40) + v26 + 8);
      if (*((char *)v28 + 23) < 0)
      {
        int64_t v29 = v28[1];
        if (v29 > 127) {
          goto LABEL_57;
        }
      }
      else
      {
        int64_t v29 = *((unsigned __int8 *)v28 + 23);
      }
      if ((uint64_t)(*a3 - (void)v4 + 14) >= v29)
      {
        char *v4 = 66;
        v4[1] = v29;
        if (*((char *)v28 + 23) < 0) {
          uint64_t v28 = (void *)*v28;
        }
        unsigned int v30 = v4 + 2;
        memcpy(v30, v28, v29);
        uint64_t v4 = &v30[v29];
        goto LABEL_55;
      }
LABEL_57:
      uint64_t v4 = (char *)sub_188A868(a3, 8, (uint64_t)v28, v4);
LABEL_55:
      v26 += 8;
    }
    while (v27 != v26);
  }
  if ((v6 & 0x80) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v31 = *(void *)(a1 + 96);
    char *v4 = 72;
    v4[1] = v31;
    if (v31 > 0x7F)
    {
      v4[1] = v31 | 0x80;
      unint64_t v32 = v31 >> 7;
      v4[2] = v31 >> 7;
      v4 += 3;
      if (v31 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v33 = v32 >> 14;
          v32 >>= 7;
          *v4++ = v32;
        }
        while (v33);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v34 = *(void *)(a1 + 8);
  if ((v34 & 1) == 0) {
    return v4;
  }
  unint64_t v36 = v34 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v36 + 31) < 0)
  {
    uint64_t v37 = *(void **)(v36 + 8);
    uint64_t v38 = *(void *)(v36 + 16);
  }
  else
  {
    uint64_t v37 = (void *)(v36 + 8);
    LODWORD(v38) = *(unsigned __int8 *)(v36 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v38)
  {
    uint64_t v39 = (int)v38;
    memcpy(v4, v37, (int)v38);
    v4 += v39;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v37, v38, v4);
}

uint64_t sub_143FAA4(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  if ((int)v2 < 1)
  {
    uint64_t v4 = *(unsigned int *)(a1 + 32);
  }
  else
  {
    int v3 = (uint64_t *)(*(void *)(a1 + 40) + 8);
    uint64_t v4 = *(unsigned int *)(a1 + 32);
    do
    {
      uint64_t v5 = *v3++;
      uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
      uint64_t v7 = *(void *)(v5 + 8);
      if ((v6 & 0x80u) == 0) {
        uint64_t v7 = v6;
      }
      v4 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      --v2;
    }
    while (v2);
  }
  char v8 = *(unsigned char *)(a1 + 16);
  if (!v8) {
    goto LABEL_18;
  }
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v11 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v12 = *(unsigned __int8 *)(v11 + 23);
    uint64_t v13 = *(void *)(v11 + 8);
    if ((v12 & 0x80u) == 0) {
      uint64_t v13 = v12;
    }
    v4 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((*(unsigned char *)(a1 + 16) & 2) == 0)
    {
LABEL_11:
      if ((*(unsigned char *)(a1 + 16) & 4) == 0) {
        goto LABEL_12;
      }
      goto LABEL_24;
    }
  }
  else if ((*(unsigned char *)(a1 + 16) & 2) == 0)
  {
    goto LABEL_11;
  }
  uint64_t v14 = sub_15B1D1C(*(void *)(a1 + 56));
  v4 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 4) == 0)
  {
LABEL_12:
    if ((v8 & 8) == 0) {
      goto LABEL_13;
    }
    goto LABEL_25;
  }
LABEL_24:
  uint64_t v15 = sub_15B806C(*(void *)(a1 + 64));
  v4 += v15 + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 8) == 0)
  {
LABEL_13:
    if ((v8 & 0x10) == 0) {
      goto LABEL_14;
    }
    goto LABEL_26;
  }
LABEL_25:
  uint64_t v16 = sub_15B0D90(*(void *)(a1 + 72));
  v4 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 0x10) == 0)
  {
LABEL_14:
    if ((v8 & 0x20) == 0) {
      goto LABEL_15;
    }
LABEL_27:
    int v17 = *(_DWORD *)(a1 + 88);
    if (v17 < 0) {
      uint64_t v18 = 11;
    }
    else {
      uint64_t v18 = ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v4 += v18;
    if ((v8 & 0x40) == 0)
    {
LABEL_16:
      if ((v8 & 0x80) == 0) {
        goto LABEL_18;
      }
      goto LABEL_17;
    }
    goto LABEL_31;
  }
LABEL_26:
  v4 += ((9 * (__clz(*(void *)(a1 + 80) | 1) ^ 0x3F) + 73) >> 6) + 1;
  if ((v8 & 0x20) != 0) {
    goto LABEL_27;
  }
LABEL_15:
  if ((v8 & 0x40) == 0) {
    goto LABEL_16;
  }
LABEL_31:
  int v19 = *(_DWORD *)(a1 + 92);
  if (v19 < 0) {
    uint64_t v20 = 11;
  }
  else {
    uint64_t v20 = ((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v4 += v20;
  if (v8 < 0) {
LABEL_17:
  }
    v4 += ((9 * (__clz(*(void *)(a1 + 96) | 1) ^ 0x3F) + 73) >> 6) + 1;
LABEL_18:
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v21 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v21 + 31) < 0) {
      uint64_t v22 = *(void *)(v21 + 16);
    }
    else {
      uint64_t v22 = *(unsigned __int8 *)(v21 + 31);
    }
    v4 += v22;
  }
  *(_DWORD *)(a1 + 20) = v4;
  return v4;
}

void sub_143FD0C(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (const std::string **)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_188FB98(a1 + 24, v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    char v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *char v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((_BYTE)v9)
  {
    if (v9)
    {
      unint64_t v11 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v12 = *(void *)(a1 + 8);
      uint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
      if (v12) {
        uint64_t v13 = (uint64_t *)*v13;
      }
      sub_1881DF4((std::string **)(a1 + 48), v11, v13);
      if ((v9 & 2) == 0)
      {
LABEL_7:
        if ((v9 & 4) == 0) {
          goto LABEL_8;
        }
        goto LABEL_30;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_7;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v14 = *(void *)(a1 + 56);
    if (!v14)
    {
      uint64_t v15 = *(void *)(a1 + 8);
      uint64_t v16 = (void *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
      if (v15) {
        uint64_t v16 = (void *)*v16;
      }
      uint64_t v14 = sub_15C19EC((uint64_t)v16);
      *(void *)(a1 + 56) = v14;
    }
    if (*(void *)(a2 + 56)) {
      int v17 = *(uint64_t (****)())(a2 + 56);
    }
    else {
      int v17 = &off_253F208;
    }
    sub_15B1E3C(v14, (uint64_t)v17);
    if ((v9 & 4) == 0)
    {
LABEL_8:
      if ((v9 & 8) == 0) {
        goto LABEL_9;
      }
      goto LABEL_38;
    }
LABEL_30:
    *(_DWORD *)(a1 + 16) |= 4u;
    uint64_t v18 = *(std::string **)(a1 + 64);
    if (!v18)
    {
      uint64_t v19 = *(void *)(a1 + 8);
      uint64_t v20 = (void *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
      if (v19) {
        uint64_t v20 = (void *)*v20;
      }
      uint64_t v18 = (std::string *)sub_15C1E94((uint64_t)v20);
      *(void *)(a1 + 64) = v18;
    }
    if (*(void *)(a2 + 64)) {
      unint64_t v21 = *(uint64_t (****)())(a2 + 64);
    }
    else {
      unint64_t v21 = &off_253F3D0;
    }
    sub_15B86B8(v18, (uint64_t)v21);
    if ((v9 & 8) == 0)
    {
LABEL_9:
      if ((v9 & 0x10) == 0) {
        goto LABEL_10;
      }
      goto LABEL_46;
    }
LABEL_38:
    *(_DWORD *)(a1 + 16) |= 8u;
    uint64_t v22 = *(void *)(a1 + 72);
    if (!v22)
    {
      uint64_t v23 = *(void *)(a1 + 8);
      unint64_t v24 = (void *)(v23 & 0xFFFFFFFFFFFFFFFCLL);
      if (v23) {
        unint64_t v24 = (void *)*v24;
      }
      uint64_t v22 = sub_15C1918((uint64_t)v24);
      *(void *)(a1 + 72) = v22;
    }
    if (*(void *)(a2 + 72)) {
      uint64_t v25 = *(uint64_t (****)())(a2 + 72);
    }
    else {
      uint64_t v25 = &off_253F1A0;
    }
    sub_15B0E24(v22, (uint64_t)v25);
    if ((v9 & 0x10) == 0)
    {
LABEL_10:
      if ((v9 & 0x20) == 0) {
        goto LABEL_11;
      }
      goto LABEL_47;
    }
LABEL_46:
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    if ((v9 & 0x20) == 0)
    {
LABEL_11:
      if ((v9 & 0x40) == 0) {
        goto LABEL_12;
      }
      goto LABEL_48;
    }
LABEL_47:
    *(_DWORD *)(a1 + 88) = *(_DWORD *)(a2 + 88);
    if ((v9 & 0x40) == 0)
    {
LABEL_12:
      if ((v9 & 0x80) == 0)
      {
LABEL_14:
        *(_DWORD *)(a1 + 16) |= v9;
        goto LABEL_15;
      }
LABEL_13:
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      goto LABEL_14;
    }
LABEL_48:
    *(_DWORD *)(a1 + 92) = *(_DWORD *)(a2 + 92);
    if ((v9 & 0x80) == 0) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }
LABEL_15:
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_143FF5C(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 2) != 0)
  {
    uint64_t result = sub_15B1FC0(*(void *)(a1 + 56));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 4) != 0)
  {
    uint64_t result = sub_15B8CAC(*(void *)(a1 + 64));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 8) == 0) {
    return 1;
  }
  uint64_t result = sub_15B0F18(*(void *)(a1 + 72));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_143FFBC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gemini.BusinessCardCollection.AnchorLocation");
}

uint64_t sub_143FFCC(uint64_t a1)
{
  int v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  if ((uint64_t (***)())a1 != &off_2538B40 && *(void *)(a1 + 24))
  {
    sub_15B2C44();
    operator delete();
  }
  if (*(void *)(a1 + 8)) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1440084(uint64_t a1)
{
  sub_143FFCC(a1);

  operator delete();
}

uint64_t sub_14400BC(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if (v2) {
    uint64_t result = sub_15B2C80(*(void *)(result + 24));
  }
  if ((v2 & 6) != 0) {
    *(void *)(v1 + 32) = 0;
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_1440124(uint64_t a1, char *a2, int32x2_t *a3)
{
  unsigned int v30 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v30, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (1)
  {
    char v8 = v30 + 1;
    unsigned int v9 = *v30;
    if (*v30 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        char v8 = (char *)sub_188C180((uint64_t)v30, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        char v8 = v30 + 2;
      }
    }
    unsigned int v30 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 == 3)
    {
      if (v9 != 24) {
        goto LABEL_14;
      }
      int v17 = v8 + 1;
      unint64_t v18 = *v8;
      if (*v8 < 0)
      {
        int v19 = *v17;
        int v20 = v18 + (v19 << 7);
        unint64_t v18 = (v20 - 128);
        if (v19 < 0)
        {
          unsigned int v30 = (char *)sub_188C138((uint64_t)v8, (v20 - 128));
          if (!v30) {
            goto LABEL_52;
          }
          unint64_t v18 = v26;
          goto LABEL_26;
        }
        int v17 = v8 + 2;
      }
      unsigned int v30 = v17;
LABEL_26:
      if (v18 > 2)
      {
        if (*v7) {
          int64_t v29 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          int64_t v29 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        sub_188C020(3, v18, v29);
      }
      else
      {
        *(_DWORD *)(a1 + 16) |= 4u;
        *(_DWORD *)(a1 + 36) = v18;
      }
      goto LABEL_39;
    }
    if (v12 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_14;
    }
    v5 |= 2u;
    unint64_t v21 = v8 + 1;
    uint64_t v22 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_32;
    }
    int v23 = *v21;
    uint64_t v22 = v22 + (v23 << 7) - 128;
    if ((v23 & 0x80000000) == 0)
    {
      unint64_t v21 = v8 + 2;
LABEL_32:
      unsigned int v30 = v21;
      *(unsigned char *)(a1 + 32) = v22 != 0;
      goto LABEL_39;
    }
    uint64_t v27 = (char *)sub_188C138((uint64_t)v8, v22);
    unsigned int v30 = v27;
    *(unsigned char *)(a1 + 32) = v28 != 0;
    if (!v27) {
      goto LABEL_52;
    }
LABEL_39:
    if (sub_11947B8((uint64_t)a3, &v30, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v12 == 1 && v9 == 10)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    unint64_t v24 = *(void **)(a1 + 24);
    if (!v24)
    {
      uint64_t v25 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v7) {
        uint64_t v25 = (void *)*v25;
      }
      unint64_t v24 = sub_15C1B30((uint64_t)v25);
      *(void *)(a1 + 24) = v24;
      char v8 = v30;
    }
    uint64_t v16 = (char *)sub_125CF74(a3, (uint64_t)v24, (unsigned __int8 *)v8);
LABEL_38:
    unsigned int v30 = v16;
    if (!v16) {
      goto LABEL_52;
    }
    goto LABEL_39;
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (*v7)
    {
      uint64_t v15 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      char v8 = v30;
    }
    uint64_t v16 = (char *)sub_1885AC0(v9, v15, v8, a3);
    goto LABEL_38;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_52:
  unsigned int v30 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v30;
}

char *sub_14403C0(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*a3 <= __dst) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    char v4 = sub_15B2EA4(v7, v9, a3);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_20;
      }
      goto LABEL_14;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v10 = *(unsigned char *)(a1 + 32);
  char *v4 = 16;
  v4[1] = v10;
  v4 += 2;
  if ((v6 & 4) != 0)
  {
LABEL_14:
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v11 = *(int *)(a1 + 36);
    char *v4 = 24;
    v4[1] = v11;
    if (v11 > 0x7F)
    {
      v4[1] = v11 | 0x80;
      unint64_t v12 = v11 >> 7;
      v4[2] = v11 >> 7;
      v4 += 3;
      if (v11 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v13 = v12 >> 14;
          v12 >>= 7;
          *v4++ = v12;
        }
        while (v13);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_20:
  uint64_t v14 = *(void *)(a1 + 8);
  if ((v14 & 1) == 0) {
    return v4;
  }
  unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v16 + 31) < 0)
  {
    int v17 = *(void **)(v16 + 8);
    uint64_t v18 = *(void *)(v16 + 16);
  }
  else
  {
    int v17 = (void *)(v16 + 8);
    LODWORD(v18) = *(unsigned __int8 *)(v16 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v18)
  {
    uint64_t v19 = (int)v18;
    memcpy(v4, v17, (int)v18);
    v4 += v19;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v17, v18, v4);
}

uint64_t sub_144059C(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 7) != 0)
  {
    if (v2)
    {
      uint64_t v5 = sub_15B2F90(*(void *)(a1 + 24));
      uint64_t v3 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    else
    {
      uint64_t v3 = 0;
    }
    if ((v2 & 2) != 0) {
      uint64_t result = v3 + 2;
    }
    else {
      uint64_t result = v3;
    }
    if ((v2 & 4) != 0)
    {
      int v6 = *(_DWORD *)(a1 + 36);
      uint64_t v7 = ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if (v6 >= 0) {
        uint64_t v8 = v7;
      }
      else {
        uint64_t v8 = 11;
      }
      result += v8;
    }
  }
  else
  {
    uint64_t result = 0;
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    result += v11;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

std::string *sub_1440674(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 7) != 0)
  {
    if (v4)
    {
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::pointer data = (std::string *)result[1].__r_.__value_.__l.__data_;
      if (!data)
      {
        std::string::size_type size = v3->__r_.__value_.__l.__size_;
        uint64_t v8 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
        if (size) {
          uint64_t v8 = (void *)*v8;
        }
        std::string::pointer data = (std::string *)sub_15C1B30((uint64_t)v8);
        v3[1].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      }
      if (*(void *)(a2 + 24)) {
        uint64_t v9 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        uint64_t v9 = &off_253F2A0;
      }
      uint64_t result = sub_11EC100(data, (uint64_t)v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0)
        {
LABEL_6:
          LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
          goto LABEL_7;
        }
LABEL_5:
        HIDWORD(v3[1].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 36);
        goto LABEL_6;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    v3[1].__r_.__value_.__s.__data_[8] = *(unsigned char *)(a2 + 32);
    if ((v4 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_7:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_144075C()
{
  return 1;
}

void *sub_1440764@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gemini.BusinessCardCollection.GuideKeyword");
}

void *sub_1440774(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1889DA8((uint64_t)(a1 + 5));
  sub_1889DA8((uint64_t)(a1 + 3));
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_14407F8(void *a1)
{
  sub_1440774(a1);

  operator delete();
}

uint64_t sub_1440830(uint64_t a1)
{
  *(_DWORD *)(a1 + 24) = 0;
  *(_DWORD *)(a1 + 40) = 0;
  if ((*(unsigned char *)(a1 + 16) & 3) != 0)
  {
    *(unsigned char *)(a1 + 64) = 0;
    *(void *)(a1 + 56) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_1440860(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v38 = a2;
  int v5 = 0;
  if ((sub_11947B8((uint64_t)a3, &v38, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v7 = (void *)(a1 + 8);
    while (1)
    {
      uint64_t v8 = v38 + 1;
      unsigned int v9 = *v38;
      if (*v38 < 0)
      {
        unsigned int v10 = v9 + (*v8 << 7);
        unsigned int v9 = v10 - 128;
        if (*v8 < 0)
        {
          uint64_t v8 = (char *)sub_188C180((uint64_t)v38, v10 - 128);
          unsigned int v9 = v11;
        }
        else
        {
          uint64_t v8 = v38 + 2;
        }
      }
      uint64_t v38 = v8;
      switch(v9 >> 3)
      {
        case 1u:
          if (v9 != 8)
          {
            if (v9 != 10) {
              goto LABEL_56;
            }
            uint64_t v34 = (unsigned int *)(a1 + 24);
            goto LABEL_55;
          }
          unint64_t v12 = v8 - 1;
          while (1)
          {
            uint64_t v38 = v12 + 1;
            uint64_t v13 = v12[1];
            if (v12[1] < 0)
            {
              int v14 = v13 + (v12[2] << 7);
              uint64_t v13 = (v14 - 128);
              if (v12[2] < 0)
              {
                unint64_t v12 = (char *)sub_188C138((uint64_t)(v12 + 1), (v14 - 128));
                uint64_t v13 = v15;
              }
              else
              {
                v12 += 3;
              }
            }
            else
            {
              v12 += 2;
            }
            uint64_t v38 = v12;
            uint64_t v16 = *(unsigned int *)(a1 + 24);
            if (v16 == *(_DWORD *)(a1 + 28))
            {
              int v17 = v16 + 1;
              sub_188CA54((unsigned int *)(a1 + 24), v16 + 1);
              *(void *)(*(void *)(a1 + 32) + 8 * v16) = v13;
              unint64_t v12 = v38;
            }
            else
            {
              *(void *)(*(void *)(a1 + 32) + 8 * v16) = v13;
              int v17 = v16 + 1;
            }
            *(_DWORD *)(a1 + 24) = v17;
            if (!v12) {
              goto LABEL_69;
            }
            if (*(void *)a3 <= (unint64_t)v12 || *v12 != 8) {
              goto LABEL_64;
            }
          }
        case 2u:
          if (v9 != 16) {
            goto LABEL_56;
          }
          v5 |= 1u;
          uint64_t v18 = v8 + 1;
          uint64_t v19 = *v8;
          if ((*v8 & 0x80000000) == 0) {
            goto LABEL_27;
          }
          int v20 = *v18;
          uint64_t v19 = v19 + (v20 << 7) - 128;
          if (v20 < 0)
          {
            unsigned int v30 = (char *)sub_188C138((uint64_t)v8, v19);
            uint64_t v38 = v30;
            *(void *)(a1 + 56) = v31;
            if (!v30) {
              goto LABEL_69;
            }
          }
          else
          {
            uint64_t v18 = v8 + 2;
LABEL_27:
            uint64_t v38 = v18;
            *(void *)(a1 + 56) = v19;
          }
          goto LABEL_64;
        case 3u:
          if (v9 == 24)
          {
            unint64_t v21 = v8 - 1;
            while (1)
            {
              uint64_t v38 = v21 + 1;
              uint64_t v22 = v21[1];
              if (v21[1] < 0)
              {
                int v23 = v22 + (v21[2] << 7);
                uint64_t v22 = (v23 - 128);
                if (v21[2] < 0)
                {
                  unint64_t v21 = (char *)sub_188C138((uint64_t)(v21 + 1), (v23 - 128));
                  uint64_t v22 = v24;
                }
                else
                {
                  v21 += 3;
                }
              }
              else
              {
                v21 += 2;
              }
              uint64_t v38 = v21;
              uint64_t v25 = *(unsigned int *)(a1 + 40);
              if (v25 == *(_DWORD *)(a1 + 44))
              {
                int v26 = v25 + 1;
                sub_188CA54((unsigned int *)(a1 + 40), v25 + 1);
                *(void *)(*(void *)(a1 + 48) + 8 * v25) = v22;
                unint64_t v21 = v38;
              }
              else
              {
                *(void *)(*(void *)(a1 + 48) + 8 * v25) = v22;
                int v26 = v25 + 1;
              }
              *(_DWORD *)(a1 + 40) = v26;
              if (!v21) {
                goto LABEL_69;
              }
              if (*(void *)a3 <= (unint64_t)v21 || *v21 != 24) {
                goto LABEL_64;
              }
            }
          }
          if (v9 == 26)
          {
            uint64_t v34 = (unsigned int *)(a1 + 40);
LABEL_55:
            unint64_t v35 = sub_188C2EC(v34, (unsigned __int8 *)v8, (uint64_t)a3);
          }
          else
          {
LABEL_56:
            if (v9) {
              BOOL v36 = (v9 & 7) == 4;
            }
            else {
              BOOL v36 = 1;
            }
            if (v36)
            {
              if (v8)
              {
                a3[10].i32[0] = v9 - 1;
                goto LABEL_2;
              }
LABEL_69:
              uint64_t v38 = 0;
              goto LABEL_2;
            }
            if (*v7)
            {
              uint64_t v37 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              uint64_t v37 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              uint64_t v8 = v38;
            }
            unint64_t v35 = sub_1885AC0(v9, v37, v8, a3);
          }
          uint64_t v38 = (char *)v35;
          if (!v35) {
            goto LABEL_69;
          }
LABEL_64:
          if (sub_11947B8((uint64_t)a3, &v38, a3[11].i32[1])) {
            goto LABEL_2;
          }
          break;
        case 4u:
          if (v9 != 32) {
            goto LABEL_56;
          }
          v5 |= 2u;
          uint64_t v27 = v8 + 1;
          uint64_t v28 = *v8;
          if ((*v8 & 0x80000000) == 0) {
            goto LABEL_46;
          }
          int v29 = *v27;
          uint64_t v28 = v28 + (v29 << 7) - 128;
          if (v29 < 0)
          {
            unint64_t v32 = (char *)sub_188C138((uint64_t)v8, v28);
            uint64_t v38 = v32;
            *(unsigned char *)(a1 + 64) = v33 != 0;
            if (!v32) {
              goto LABEL_69;
            }
          }
          else
          {
            uint64_t v27 = v8 + 2;
LABEL_46:
            uint64_t v38 = v27;
            *(unsigned char *)(a1 + 64) = v28 != 0;
          }
          goto LABEL_64;
        default:
          goto LABEL_56;
      }
    }
  }
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v38;
}

char *sub_1440C4C(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v6 = *(unsigned int *)(a1 + 24);
  if ((int)v6 >= 1)
  {
    for (uint64_t i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      unint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i);
      *__dst = 8;
      __dst[1] = v8;
      if (v8 > 0x7F)
      {
        __dst[1] = v8 | 0x80;
        unint64_t v9 = v8 >> 7;
        __dst[2] = v8 >> 7;
        __dst += 3;
        if (v8 >= 0x4000)
        {
          do
          {
            *(__dst - 1) |= 0x80u;
            unint64_t v10 = v9 >> 14;
            v9 >>= 7;
            *__dst++ = v9;
          }
          while (v10);
        }
      }
      else
      {
        __dst += 2;
      }
    }
  }
  int v11 = *(_DWORD *)(a1 + 16);
  if (v11)
  {
    if (*(void *)a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unint64_t v12 = *(void *)(a1 + 56);
    *__dst = 16;
    __dst[1] = v12;
    if (v12 > 0x7F)
    {
      __dst[1] = v12 | 0x80;
      unint64_t v13 = v12 >> 7;
      __dst[2] = v12 >> 7;
      __dst += 3;
      if (v12 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unint64_t v14 = v13 >> 14;
          v13 >>= 7;
          *__dst++ = v13;
        }
        while (v14);
      }
    }
    else
    {
      __dst += 2;
    }
  }
  uint64_t v15 = *(unsigned int *)(a1 + 40);
  if ((int)v15 >= 1)
  {
    for (uint64_t j = 0; j != v15; ++j)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      unint64_t v17 = *(void *)(*(void *)(a1 + 48) + 8 * j);
      *__dst = 24;
      __dst[1] = v17;
      if (v17 > 0x7F)
      {
        __dst[1] = v17 | 0x80;
        unint64_t v18 = v17 >> 7;
        __dst[2] = v17 >> 7;
        __dst += 3;
        if (v17 >= 0x4000)
        {
          do
          {
            *(__dst - 1) |= 0x80u;
            unint64_t v19 = v18 >> 14;
            v18 >>= 7;
            *__dst++ = v18;
          }
          while (v19);
        }
      }
      else
      {
        __dst += 2;
      }
    }
  }
  if ((v11 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    char v20 = *(unsigned char *)(a1 + 64);
    *__dst = 32;
    __dst[1] = v20;
    __dst += 2;
  }
  uint64_t v21 = *(void *)(a1 + 8);
  if ((v21 & 1) == 0) {
    return __dst;
  }
  unint64_t v23 = v21 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v23 + 31) < 0)
  {
    uint64_t v24 = *(void **)(v23 + 8);
    uint64_t v25 = *(void *)(v23 + 16);
  }
  else
  {
    uint64_t v24 = (void *)(v23 + 8);
    LODWORD(v25) = *(unsigned __int8 *)(v23 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v25)
  {
    uint64_t v26 = (int)v25;
    memcpy(__dst, v24, (int)v25);
    __dst += v26;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v24, v25, __dst);
}

uint64_t sub_1440EFC(uint64_t a1)
{
  uint64_t v2 = sub_188D5A8((unsigned int *)(a1 + 24));
  uint64_t v3 = *(unsigned int *)(a1 + 24);
  uint64_t result = v2 + sub_188D5A8((unsigned int *)(a1 + 40)) + v3 + *(unsigned int *)(a1 + 40);
  int v5 = *(_DWORD *)(a1 + 16);
  if ((v5 & 3) != 0)
  {
    if (v5) {
      result += ((9 * (__clz(*(void *)(a1 + 56) | 1) ^ 0x3F) + 73) >> 6) + 1;
    }
    if ((v5 & 2) != 0) {
      result += 2;
    }
  }
  uint64_t v6 = *(void *)(a1 + 8);
  if (v6)
  {
    unint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v7 + 31) < 0) {
      uint64_t v8 = *(void *)(v7 + 16);
    }
    else {
      uint64_t v8 = *(unsigned __int8 *)(v7 + 31);
    }
    result += v8;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

std::string *sub_1440FB8(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    int v5 = result + 1;
    uint64_t data_low = SLODWORD(result[1].__r_.__value_.__l.__data_);
    sub_188CA54((unsigned int *)&result[1], data_low + v4);
    std::string::size_type size = v3[1].__r_.__value_.__l.__size_;
    LODWORD(v5->__r_.__value_.__l.__data_) += *(_DWORD *)(a2 + 24);
    uint64_t result = (std::string *)memcpy((void *)(size + 8 * data_low), *(const void **)(a2 + 32), 8 * *(int *)(a2 + 24));
  }
  int v8 = *(_DWORD *)(a2 + 40);
  if (v8)
  {
    uint64_t v9 = SLODWORD(v3[1].__r_.__value_.__r.__words[2]);
    sub_188CA54((unsigned int *)&v3[1].__r_.__value_.__r.__words[2], v9 + v8);
    std::string::pointer data = v3[2].__r_.__value_.__l.__data_;
    LODWORD(v3[1].__r_.__value_.__r.__words[2]) += *(_DWORD *)(a2 + 40);
    uint64_t result = (std::string *)memcpy(&data[8 * v9], *(const void **)(a2 + 48), 8 * *(int *)(a2 + 40));
  }
  int v11 = *(_DWORD *)(a2 + 16);
  if ((v11 & 3) != 0)
  {
    if (v11) {
      v3[2].__r_.__value_.__l.__size_ = *(void *)(a2 + 56);
    }
    if ((v11 & 2) != 0) {
      v3[2].__r_.__value_.__s.__data_[16] = *(unsigned char *)(a2 + 64);
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= v11;
  }
  uint64_t v12 = *(void *)(a2 + 8);
  if (v12)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v12 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_14410D0()
{
  return 1;
}

void *sub_14410D8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gemini.BusinessCardCollection.SignificantChange");
}

uint64_t sub_14410E8(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_9;
    }
  }
  else if (v4)
  {
    goto LABEL_9;
  }
  int v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_9:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_14411A0(uint64_t a1)
{
  sub_14410E8(a1);

  operator delete();
}

uint64_t sub_14411D8(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0) {
    goto LABEL_11;
  }
  if ((v1 & 1) == 0)
  {
LABEL_5:
    if ((v1 & 2) != 0) {
      goto LABEL_6;
    }
    goto LABEL_11;
  }
  unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v2 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v2 = 0;
    *(unsigned char *)(v2 + 23) = 0;
    goto LABEL_5;
  }
  **(unsigned char **)unint64_t v2 = 0;
  *(void *)(v2 + 8) = 0;
  if ((v1 & 2) != 0)
  {
LABEL_6:
    unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)unint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
LABEL_11:
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v5) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_1441254(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)char v20 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
    return *(void *)v20;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    unint64_t v7 = (char *)(*(void *)v20 + 1);
    unsigned int v8 = **(unsigned char **)v20;
    if ((char)**(unsigned char **)v20 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        unint64_t v7 = (char *)sub_188C180(*(uint64_t *)v20, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        unint64_t v7 = (char *)(*(void *)v20 + 2);
      }
    }
    *(void *)char v20 = v7;
    if (v8 >> 3 == 2)
    {
      if (v8 == 18)
      {
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v15 = *(void *)(a1 + 8);
        uint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          uint64_t v16 = (uint64_t *)*v16;
        }
        unint64_t v17 = (void *)(a1 + 32);
        goto LABEL_27;
      }
    }
    else if (v8 >> 3 == 1 && v8 == 10)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v18 = *(void *)(a1 + 8);
      uint64_t v16 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
      if (v18) {
        uint64_t v16 = (uint64_t *)*v16;
      }
      unint64_t v17 = (void *)(a1 + 24);
LABEL_27:
      unint64_t v19 = (std::string *)sub_1880F84(v17, v16);
      unint64_t v14 = (void *)sub_188C244(v19, *(char **)v20, (uint64_t)a3);
      goto LABEL_28;
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      unint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unint64_t v7 = *(char **)v20;
    }
    unint64_t v14 = sub_1885AC0(v8, v13, v7, a3);
LABEL_28:
    *(void *)char v20 = v14;
    if (!v14) {
      goto LABEL_34;
    }
    if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
      return *(void *)v20;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v20;
  }
LABEL_34:
  *(void *)char v20 = 0;
  return *(void *)v20;
}

char *sub_14413FC(uint64_t a1, char *__dst, void *a3)
{
  int v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    int v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 2) != 0) {
    int v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v9 + 31) < 0)
  {
    unsigned int v10 = *(void **)(v9 + 8);
    uint64_t v11 = *(void *)(v9 + 16);
  }
  else
  {
    unsigned int v10 = (void *)(v9 + 8);
    LODWORD(v11) = *(unsigned __int8 *)(v9 + 31);
  }
  if (*a3 - (void)v4 >= (int)v11)
  {
    uint64_t v12 = (int)v11;
    memcpy(v4, v10, (int)v11);
    v4 += v12;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v10, v11, v4);
}

uint64_t sub_14414E8(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_12;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
  uint64_t v5 = *(void *)(v3 + 8);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = v4;
  }
  uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    unint64_t v6 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    v2 += v12;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_14415C4()
{
  return 1;
}

void *sub_14415CC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gemini.BusinessCardCollection.MediaLink.ThirdPartyLink");
}

uint64_t sub_14415DC(uint64_t a1)
{
  unint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_9;
    }
  }
  else if (v4)
  {
    goto LABEL_9;
  }
  uint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 56) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 56));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_9:
  sub_1490D7C((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_14416A0(uint64_t a1)
{
  sub_14415DC(a1);

  operator delete();
}

uint64_t sub_14416D8(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    unint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_14411D8(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  int v5 = *(_DWORD *)(v1 + 16);
  if ((v5 & 3) != 0)
  {
    if (v5)
    {
      unint64_t v6 = *(void *)(v1 + 48) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v6 + 23) < 0)
      {
        **(unsigned char **)unint64_t v6 = 0;
        *(void *)(v6 + 8) = 0;
        if ((v5 & 2) == 0) {
          goto LABEL_15;
        }
        goto LABEL_10;
      }
      *(unsigned char *)unint64_t v6 = 0;
      *(unsigned char *)(v6 + 23) = 0;
    }
    if ((v5 & 2) == 0) {
      goto LABEL_15;
    }
LABEL_10:
    unint64_t v7 = *(void *)(v1 + 56) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v7 + 23) < 0)
    {
      **(unsigned char **)unint64_t v7 = 0;
      *(void *)(v7 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v7 = 0;
      *(unsigned char *)(v7 + 23) = 0;
    }
  }
LABEL_15:
  if ((v5 & 0xC) != 0) {
    *(void *)(v1 + 64) = 0;
  }
  char v9 = *(unsigned char *)(v1 + 8);
  uint64_t v8 = v1 + 8;
  *(_DWORD *)(v8 + 8) = 0;
  if (v9)
  {
    return sub_188B4AC((uint64_t *)v8);
  }
  return result;
}

uint64_t sub_14417CC(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)BOOL v36 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v36, a3[11].i32[1])) {
    return *(void *)v36;
  }
  unint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    unint64_t v7 = (char *)(*(void *)v36 + 1);
    unsigned int v8 = **(unsigned char **)v36;
    if ((char)**(unsigned char **)v36 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        unint64_t v7 = (char *)sub_188C180(*(uint64_t *)v36, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        unint64_t v7 = (char *)(*(void *)v36 + 2);
      }
    }
    *(void *)BOOL v36 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 8) {
          goto LABEL_42;
        }
        unint64_t v11 = v7 + 1;
        unint64_t v12 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v13 = *v11;
        int v14 = v12 + (v13 << 7);
        unint64_t v12 = (v14 - 128);
        if (v13 < 0)
        {
          *(void *)BOOL v36 = sub_188C138((uint64_t)v7, (v14 - 128));
          if (!*(void *)v36) {
            return 0;
          }
          unint64_t v12 = v32;
        }
        else
        {
          unint64_t v11 = v7 + 2;
LABEL_13:
          *(void *)BOOL v36 = v11;
        }
        if (sub_129EB9C(v12))
        {
          *(_DWORD *)(a1 + 16) |= 4u;
          *(_DWORD *)(a1 + 64) = v12;
          goto LABEL_50;
        }
        if (*v6) {
          uint64_t v34 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          uint64_t v34 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v35 = 1;
        goto LABEL_62;
      case 2u:
        if (v8 != 16) {
          goto LABEL_42;
        }
        uint64_t v15 = v7 + 1;
        unint64_t v12 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_20;
        }
        int v16 = *v15;
        int v17 = v12 + (v16 << 7);
        unint64_t v12 = (v17 - 128);
        if (v16 < 0)
        {
          *(void *)BOOL v36 = sub_188C138((uint64_t)v7, (v17 - 128));
          if (!*(void *)v36) {
            return 0;
          }
          unint64_t v12 = v33;
        }
        else
        {
          uint64_t v15 = v7 + 2;
LABEL_20:
          *(void *)BOOL v36 = v15;
        }
        if (sub_15B0770(v12))
        {
          *(_DWORD *)(a1 + 16) |= 8u;
          *(_DWORD *)(a1 + 68) = v12;
        }
        else
        {
          if (*v6) {
            uint64_t v34 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v34 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          int v35 = 2;
LABEL_62:
          sub_188C020(v35, v12, v34);
        }
        goto LABEL_50;
      case 3u:
        if (v8 != 26) {
          goto LABEL_42;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v18 = *(void *)(a1 + 8);
        unint64_t v19 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
        if (v18) {
          unint64_t v19 = (uint64_t *)*v19;
        }
        char v20 = (void *)(a1 + 48);
        goto LABEL_31;
      case 4u:
        if (v8 != 34) {
          goto LABEL_42;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v21 = *(void *)(a1 + 8);
        unint64_t v19 = (uint64_t *)(v21 & 0xFFFFFFFFFFFFFFFCLL);
        if (v21) {
          unint64_t v19 = (uint64_t *)*v19;
        }
        char v20 = (void *)(a1 + 56);
LABEL_31:
        uint64_t v22 = (std::string *)sub_1880F84(v20, v19);
        unint64_t v23 = (void *)sub_188C244(v22, *(char **)v36, (uint64_t)a3);
        goto LABEL_49;
      case 5u:
        if (v8 != 42) {
          goto LABEL_42;
        }
        uint64_t v24 = v7 - 1;
        while (1)
        {
          uint64_t v25 = (unsigned __int8 *)(v24 + 1);
          *(void *)BOOL v36 = v24 + 1;
          uint64_t v26 = *(_DWORD **)(a1 + 40);
          if (v26 && (uint64_t v27 = *(int *)(a1 + 32), (int)v27 < *v26))
          {
            *(_DWORD *)(a1 + 32) = v27 + 1;
            uint64_t v28 = *(void *)&v26[2 * v27 + 2];
          }
          else
          {
            int v29 = sub_144CA54(*(void *)(a1 + 24));
            uint64_t v28 = sub_188CDC8(a1 + 24, (uint64_t)v29);
            uint64_t v25 = *(unsigned __int8 **)v36;
          }
          uint64_t v24 = (char *)sub_1441B80(a3, v28, v25);
          *(void *)BOOL v36 = v24;
          if (!v24) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v24 || *v24 != 42) {
            goto LABEL_50;
          }
        }
      default:
LABEL_42:
        if (v8) {
          BOOL v30 = (v8 & 7) == 4;
        }
        else {
          BOOL v30 = 1;
        }
        if (!v30)
        {
          if (*v6)
          {
            uint64_t v31 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v31 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unint64_t v7 = *(char **)v36;
          }
          unint64_t v23 = sub_1885AC0(v8, v31, v7, a3);
LABEL_49:
          *(void *)BOOL v36 = v23;
          if (!v23) {
            return 0;
          }
LABEL_50:
          if (sub_11947B8((uint64_t)a3, (char **)v36, a3[11].i32[1])) {
            return *(void *)v36;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return *(void *)v36;
    }
  }
}

uint64_t sub_1441B80(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1441254(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1441C10(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 4) != 0)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 64);
    char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 68);
    char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  if ((v6 & 2) != 0) {
    uint64_t v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  int v13 = *(_DWORD *)(a1 + 32);
  if (v13)
  {
    for (int i = 0; i != v13; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v15 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      char *v4 = 42;
      unsigned int v16 = *(_DWORD *)(v15 + 20);
      v4[1] = v16;
      if (v16 > 0x7F) {
        int v17 = sub_188A9CC(v16, v4 + 1);
      }
      else {
        int v17 = v4 + 2;
      }
      uint64_t v4 = sub_14413FC(v15, v17, a3);
    }
  }
  uint64_t v18 = *(void *)(a1 + 8);
  if ((v18 & 1) == 0) {
    return v4;
  }
  unint64_t v20 = v18 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v20 + 31) < 0)
  {
    uint64_t v21 = *(void **)(v20 + 8);
    uint64_t v22 = *(void *)(v20 + 16);
  }
  else
  {
    uint64_t v21 = (void *)(v20 + 8);
    LODWORD(v22) = *(unsigned __int8 *)(v20 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v22)
  {
    uint64_t v23 = (int)v22;
    memcpy(v4, v21, (int)v22);
    v4 += v23;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v21, v22, v4);
}

uint64_t sub_1441E90(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_14414E8(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 0xF) == 0) {
    goto LABEL_29;
  }
  if (v8)
  {
    unint64_t v9 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v10 = *(unsigned __int8 *)(v9 + 23);
    uint64_t v11 = *(void *)(v9 + 8);
    if ((v10 & 0x80u) == 0) {
      uint64_t v11 = v10;
    }
    v2 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v8 & 2) == 0)
    {
LABEL_12:
      if ((v8 & 4) == 0) {
        goto LABEL_13;
      }
      goto LABEL_21;
    }
  }
  else if ((v8 & 2) == 0)
  {
    goto LABEL_12;
  }
  unint64_t v12 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v13 = *(unsigned __int8 *)(v12 + 23);
  uint64_t v14 = *(void *)(v12 + 8);
  if ((v13 & 0x80u) == 0) {
    uint64_t v14 = v13;
  }
  v2 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 4) == 0)
  {
LABEL_13:
    if ((v8 & 8) == 0) {
      goto LABEL_29;
    }
    goto LABEL_25;
  }
LABEL_21:
  int v15 = *(_DWORD *)(a1 + 64);
  if (v15 < 0) {
    uint64_t v16 = 11;
  }
  else {
    uint64_t v16 = ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v2 += v16;
  if ((v8 & 8) != 0)
  {
LABEL_25:
    int v17 = *(_DWORD *)(a1 + 68);
    if (v17 < 0) {
      uint64_t v18 = 11;
    }
    else {
      uint64_t v18 = ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v18;
  }
LABEL_29:
  uint64_t v19 = *(void *)(a1 + 8);
  if (v19)
  {
    unint64_t v21 = v19 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v21 + 31) < 0) {
      uint64_t v22 = *(void *)(v21 + 16);
    }
    else {
      uint64_t v22 = *(unsigned __int8 *)(v21 + 31);
    }
    v2 += v22;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_144204C(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = sub_14929D0(v3 + 1, v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2] - LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    int v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *int v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 0xF) != 0)
  {
    if (v9)
    {
      uint64_t v11 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v13 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v13 = (uint64_t *)*v13;
      }
      uint64_t result = sub_1881DF4((std::string **)&v3[2], v11, v13);
      if ((v9 & 2) == 0)
      {
LABEL_7:
        if ((v9 & 4) == 0) {
          goto LABEL_8;
        }
        goto LABEL_21;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_7;
    }
    uint64_t v14 = (long long *)(*(void *)(a2 + 56) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    std::string::size_type v15 = v3->__r_.__value_.__l.__size_;
    uint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
    if (v15) {
      uint64_t v16 = (uint64_t *)*v16;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[2].__r_.__value_.__l.__size_, v14, v16);
    if ((v9 & 4) == 0)
    {
LABEL_8:
      if ((v9 & 8) == 0)
      {
LABEL_10:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v9;
        goto LABEL_11;
      }
LABEL_9:
      HIDWORD(v3[2].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 68);
      goto LABEL_10;
    }
LABEL_21:
    LODWORD(v3[2].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 64);
    if ((v9 & 8) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
LABEL_11:
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_14421C4()
{
  return 1;
}

void *sub_14421CC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gemini.BusinessCardCollection.MediaLink");
}

uint64_t sub_14421DC(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  *(void *)(a1 + 8) = v5;
  *(void *)a1 = &off_24B4B88;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = a2;
  *(void *)(a1 + 64) = a2;
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = a2;
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 104) = 0;
  *(void *)(a1 + 112) = a2;
  *(void *)(a1 + 120) = 0;
  *(void *)(a1 + 128) = 0;
  *(void *)(a1 + 136) = a2;
  *(void *)(a1 + 144) = 0;
  *(void *)(a1 + 152) = 0;
  *(void *)(a1 + 160) = a2;
  *(void *)(a1 + 168) = 0;
  *(void *)(a1 + 176) = 0;
  *(void *)(a1 + 184) = a2;
  *(void *)(a1 + 192) = 0;
  *(void *)(a1 + 200) = 0;
  *(void *)(a1 + 208) = a2;
  *(void *)(a1 + 216) = 0;
  *(void *)(a1 + 224) = 0;
  *(void *)(a1 + 232) = 0;
  *(void *)(a1 + 240) = a2;
  *(void *)(a1 + 248) = a2;
  *(void *)(a1 + 256) = 0;
  *(void *)(a1 + 264) = 0;
  *(void *)(a1 + 272) = a2;
  *(void *)(a1 + 280) = 0;
  *(void *)(a1 + 288) = 0;
  *(void *)(a1 + 296) = a2;
  *(void *)(a1 + 304) = 0;
  *(void *)(a1 + 312) = 0;
  *(void *)(a1 + 320) = a2;
  *(void *)(a1 + 328) = 0;
  *(void *)(a1 + 336) = 0;
  *(void *)(a1 + 344) = a2;
  *(void *)(a1 + 352) = 0;
  *(void *)(a1 + 360) = 0;
  *(void *)(a1 + 368) = a2;
  *(void *)(a1 + 376) = 0;
  *(void *)(a1 + 384) = 0;
  *(void *)(a1 + 392) = a2;
  *(void *)(a1 + 400) = 0;
  *(void *)(a1 + 408) = 0;
  *(void *)(a1 + 416) = a2;
  *(void *)(a1 + 424) = 0;
  *(void *)(a1 + 432) = 0;
  *(void *)(a1 + 440) = a2;
  *(void *)(a1 + 448) = 0;
  *(void *)(a1 + 456) = 0;
  *(void *)(a1 + 464) = &qword_2550250;
  *(void *)(a1 + 472) = &qword_2550250;
  *(_OWORD *)(a1 + 544) = 0u;
  *(_OWORD *)(a1 + 560) = 0u;
  *(_OWORD *)(a1 + 512) = 0u;
  *(_OWORD *)(a1 + 528) = 0u;
  *(_OWORD *)(a1 + 480) = 0u;
  *(_OWORD *)(a1 + 496) = 0u;
  return a1;
}

void sub_14422C8(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_14422F8(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_144244C((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  sub_1490FFC(a1 + 55);
  sub_1490DFC(a1 + 52);
  sub_1889DE8(a1 + 49);
  sub_1889DE8(a1 + 46);
  sub_1490AFC(a1 + 43);
  sub_1490F7C(a1 + 40);
  sub_12C1DB8(a1 + 37);
  sub_1490EFC(a1 + 34);
  sub_1490E7C(a1 + 31);
  sub_1889DA8((uint64_t)(a1 + 29));
  sub_14900FC(a1 + 26);
  sub_124E3CC(a1 + 23);
  sub_1490CFC(a1 + 20);
  sub_12C1DB8(a1 + 17);
  sub_14900FC(a1 + 14);
  sub_1490DFC(a1 + 11);
  sub_1490DFC(a1 + 8);
  sub_1889DA8((uint64_t)(a1 + 6));
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

uint64_t sub_144244C(uint64_t result)
{
  uint64_t v1 = (void *)result;
  if (*(uint64_t **)(result + 464) != &qword_2550250) {
    sub_1881C6C((void ***)(result + 464));
  }
  if (*(uint64_t **)(result + 472) != &qword_2550250) {
    sub_1881C6C((void ***)(result + 472));
  }
  if ((uint64_t (***)())result != &off_2538BB0)
  {
    uint64_t v2 = *(void *)(result + 480);
    if (v2)
    {
      sub_140C670(v2);
      operator delete();
    }
    uint64_t v3 = v1[61];
    if (v3)
    {
      sub_1418B14(v3);
      operator delete();
    }
    int v4 = (void *)v1[62];
    if (v4)
    {
      sub_1440774(v4);
      operator delete();
    }
    uint64_t result = v1[63];
    if (result)
    {
      sub_143C96C((void *)result);
      operator delete();
    }
  }
  return result;
}

void sub_1442548(void *a1)
{
  sub_14422F8(a1);

  operator delete();
}

char *sub_1442580(uint64_t a1, char *a2, int32x2_t *a3)
{
  v211 = a2;
  if ((sub_11947B8((uint64_t)a3, &v211, a3[11].i32[1]) & 1) == 0)
  {
    int v210 = 0;
    uint64_t v6 = (uint64_t **)(a1 + 392);
    int v7 = (uint64_t **)(a1 + 368);
    v197 = (uint64_t *)(a1 + 8);
    v198 = (uint64_t *)(a1 + 296);
    v207 = (uint64_t *)(a1 + 272);
    v208 = (uint64_t *)(a1 + 440);
    v205 = (uint64_t *)(a1 + 208);
    v206 = (uint64_t *)(a1 + 248);
    v203 = (uint64_t *)(a1 + 160);
    v204 = (uint64_t *)(a1 + 184);
    v201 = (uint64_t *)(a1 + 112);
    v202 = (uint64_t *)(a1 + 136);
    v199 = (uint64_t *)(a1 + 64);
    v200 = (uint64_t *)(a1 + 88);
    v209 = (unsigned int *)(a1 + 232);
    while (1)
    {
      int v8 = v211 + 1;
      unsigned int v9 = *v211;
      if (*v211 < 0)
      {
        int v10 = *v8;
        unsigned int v11 = v9 + (v10 << 7);
        unsigned int v9 = v11 - 128;
        if (v10 < 0)
        {
          int v8 = (char *)sub_188C180((uint64_t)v211, v11 - 128);
          unsigned int v9 = v12;
        }
        else
        {
          int v8 = v211 + 2;
        }
      }
      v211 = v8;
      unsigned int v13 = v9 >> 3;
      if (v9 >> 3 <= 0x3C)
      {
        switch(v13)
        {
          case 1u:
            if (v9 != 8) {
              goto LABEL_338;
            }
            v210 |= 0x40u;
            uint64_t v14 = v8 + 1;
            uint64_t v15 = *v8;
            if ((*v8 & 0x80000000) == 0) {
              goto LABEL_15;
            }
            int v16 = *v14;
            uint64_t v15 = v15 + (v16 << 7) - 128;
            if (v16 < 0)
            {
              v182 = (char *)sub_188C138((uint64_t)v8, v15);
              v211 = v182;
              *(void *)(a1 + 512) = v183;
              if (!v182) {
                goto LABEL_354;
              }
            }
            else
            {
              uint64_t v14 = v8 + 2;
LABEL_15:
              v211 = v14;
              *(void *)(a1 + 512) = v15;
            }
            goto LABEL_348;
          case 2u:
          case 8u:
          case 9u:
          case 0xEu:
          case 0x11u:
          case 0x12u:
          case 0x13u:
          case 0x16u:
          case 0x17u:
          case 0x18u:
          case 0x1Au:
          case 0x1Bu:
          case 0x1Cu:
          case 0x1Du:
          case 0x1Fu:
          case 0x20u:
          case 0x21u:
          case 0x22u:
          case 0x24u:
          case 0x25u:
          case 0x26u:
          case 0x27u:
          case 0x29u:
          case 0x2Au:
          case 0x2Bu:
          case 0x2Cu:
          case 0x2Eu:
          case 0x2Fu:
          case 0x30u:
          case 0x33u:
          case 0x34u:
          case 0x35u:
          case 0x36u:
            goto LABEL_338;
          case 3u:
            if (v9 != 24) {
              goto LABEL_338;
            }
            v210 |= 0x80u;
            uint64_t v80 = v8 + 1;
            uint64_t v81 = *v8;
            if ((*v8 & 0x80000000) == 0) {
              goto LABEL_143;
            }
            int v82 = *v80;
            uint64_t v81 = v81 + (v82 << 7) - 128;
            if (v82 < 0)
            {
              v184 = (char *)sub_188C138((uint64_t)v8, v81);
              v211 = v184;
              *(void *)(a1 + 520) = v185;
              if (!v184) {
                goto LABEL_354;
              }
            }
            else
            {
              uint64_t v80 = v8 + 2;
LABEL_143:
              v211 = v80;
              *(void *)(a1 + 520) = v81;
            }
            goto LABEL_348;
          case 4u:
            if (v9 != 32) {
              goto LABEL_338;
            }
            v210 |= 0x100u;
            uint64_t v83 = v8 + 1;
            uint64_t v84 = *v8;
            if ((*v8 & 0x80000000) == 0) {
              goto LABEL_148;
            }
            int v85 = *v83;
            uint64_t v84 = v84 + (v85 << 7) - 128;
            if (v85 < 0)
            {
              v186 = (char *)sub_188C138((uint64_t)v8, v84);
              v211 = v186;
              *(void *)(a1 + 528) = v187;
              if (!v186) {
                goto LABEL_354;
              }
            }
            else
            {
              uint64_t v83 = v8 + 2;
LABEL_148:
              v211 = v83;
              *(void *)(a1 + 528) = v84;
            }
            goto LABEL_348;
          case 5u:
            if (v9 != 42) {
              goto LABEL_338;
            }
            *(_DWORD *)(a1 + 40) |= 1u;
            uint64_t v86 = *(void *)(a1 + 8);
            BOOL v87 = (uint64_t *)(v86 & 0xFFFFFFFFFFFFFFFCLL);
            if (v86) {
              BOOL v87 = (uint64_t *)*v87;
            }
            uint64_t v88 = (void *)(a1 + 464);
            goto LABEL_202;
          case 6u:
            if (v9 != 48) {
              goto LABEL_338;
            }
            v210 |= 0x400u;
            uint64_t v89 = v8 + 1;
            uint64_t v90 = *v8;
            if ((*v8 & 0x80000000) == 0) {
              goto LABEL_157;
            }
            int v91 = *v89;
            uint64_t v90 = v90 + (v91 << 7) - 128;
            if (v91 < 0)
            {
              v188 = (char *)sub_188C138((uint64_t)v8, v90);
              v211 = v188;
              *(unsigned char *)(a1 + 544) = v189 != 0;
              if (!v188) {
                goto LABEL_354;
              }
            }
            else
            {
              uint64_t v89 = v8 + 2;
LABEL_157:
              v211 = v89;
              *(unsigned char *)(a1 + 544) = v90 != 0;
            }
            goto LABEL_348;
          case 7u:
            if (v9 == 56)
            {
              uint64_t v92 = v8 - 1;
              while (1)
              {
                v211 = v92 + 1;
                unint64_t v93 = v92[1];
                uint64_t v94 = v92 + 2;
                if (v92[1] < 0)
                {
                  int v95 = *v94;
                  int v96 = v93 + (v95 << 7);
                  unint64_t v93 = (v96 - 128);
                  if (v95 < 0)
                  {
                    v211 = (char *)sub_188C138((uint64_t)(v92 + 1), (v96 - 128));
                    if (!v211) {
                      goto LABEL_354;
                    }
                    unint64_t v93 = v100;
                    goto LABEL_164;
                  }
                  uint64_t v94 = v92 + 3;
                }
                v211 = v94;
LABEL_164:
                uint64_t v97 = (_DWORD *)(a1 + 48);
                if (v93 > 3)
                {
                  if (*v197) {
                    uint64_t v101 = (std::string *)((*v197 & 0xFFFFFFFFFFFFFFFCLL) + 8);
                  }
                  else {
                    uint64_t v101 = (std::string *)sub_188DBD8(v197);
                  }
                  sub_188C020(7, v93, v101);
                }
                else
                {
                  uint64_t v98 = *(unsigned int *)(a1 + 48);
                  if (v98 == *(_DWORD *)(a1 + 52))
                  {
                    int v99 = v98 + 1;
                    sub_188C80C((unsigned int *)(a1 + 48), v98 + 1);
                    uint64_t v97 = (_DWORD *)(a1 + 48);
                    *(_DWORD *)(*(void *)(a1 + 56) + 4 * v98) = v93;
                  }
                  else
                  {
                    *(_DWORD *)(*(void *)(a1 + 56) + 4 * v98) = v93;
                    int v99 = v98 + 1;
                  }
                  _DWORD *v97 = v99;
                }
                uint64_t v92 = v211;
                if (*(void *)a3 <= (unint64_t)v211 || *v211 != 56) {
                  goto LABEL_348;
                }
              }
            }
            if (v9 != 58) {
              goto LABEL_338;
            }
            *(void *)&long long v212 = a1 + 48;
            *((void *)&v212 + 1) = sub_13F4B2C;
            uint64_t v213 = a1 + 8;
            int v214 = 7;
            uint64_t v19 = sub_1112E88((uint64_t)a3, v8, &v212);
            break;
          case 0xAu:
            if (v9 != 82) {
              goto LABEL_338;
            }
            unsigned int v102 = v8 - 1;
            while (1)
            {
              v103 = (unsigned __int8 *)(v102 + 1);
              v211 = v102 + 1;
              uint64_t v104 = *(_DWORD **)(a1 + 80);
              if (v104 && (uint64_t v105 = *(int *)(a1 + 72), (int)v105 < *v104))
              {
                *(_DWORD *)(a1 + 72) = v105 + 1;
                uint64_t v106 = *(void *)&v104[2 * v105 + 2];
              }
              else
              {
                v107 = sub_144C748(*v199);
                uint64_t v106 = sub_188CDC8((uint64_t)v199, (uint64_t)v107);
                v103 = (unsigned __int8 *)v211;
              }
              unsigned int v102 = (char *)sub_1443B0C(a3, v106, v103);
              v211 = v102;
              if (!v102) {
                goto LABEL_354;
              }
              if (*(void *)a3 <= (unint64_t)v102 || *v102 != 82) {
                goto LABEL_348;
              }
            }
          case 0xBu:
            if (v9 != 90) {
              goto LABEL_338;
            }
            uint64_t v108 = v8 - 1;
            while (1)
            {
              uint64_t v109 = (unsigned __int8 *)(v108 + 1);
              v211 = v108 + 1;
              v110 = *(_DWORD **)(a1 + 104);
              if (v110 && (uint64_t v111 = *(int *)(a1 + 96), (int)v111 < *v110))
              {
                *(_DWORD *)(a1 + 96) = v111 + 1;
                uint64_t v112 = *(void *)&v110[2 * v111 + 2];
              }
              else
              {
                v113 = sub_144C748(*v200);
                uint64_t v112 = sub_188CDC8((uint64_t)v200, (uint64_t)v113);
                uint64_t v109 = (unsigned __int8 *)v211;
              }
              uint64_t v108 = (char *)sub_1443B0C(a3, v112, v109);
              v211 = v108;
              if (!v108) {
                goto LABEL_354;
              }
              if (*(void *)a3 <= (unint64_t)v108 || *v108 != 90) {
                goto LABEL_348;
              }
            }
          case 0xCu:
            if (v9 != 98) {
              goto LABEL_338;
            }
            *(_DWORD *)(a1 + 40) |= 2u;
            uint64_t v114 = *(void *)(a1 + 8);
            BOOL v87 = (uint64_t *)(v114 & 0xFFFFFFFFFFFFFFFCLL);
            if (v114) {
              BOOL v87 = (uint64_t *)*v87;
            }
            uint64_t v88 = (void *)(a1 + 472);
LABEL_202:
            v115 = (std::string *)sub_1880F84(v88, v87);
            uint64_t v19 = (char *)sub_188C244(v115, v211, (uint64_t)a3);
            goto LABEL_347;
          case 0xDu:
            if (v9 != 106) {
              goto LABEL_338;
            }
            uint64_t v116 = v8 - 1;
            while (1)
            {
              v117 = (unsigned __int8 *)(v116 + 1);
              v211 = v116 + 1;
              v118 = *(_DWORD **)(a1 + 128);
              if (v118 && (uint64_t v119 = *(int *)(a1 + 120), (int)v119 < *v118))
              {
                *(_DWORD *)(a1 + 120) = v119 + 1;
                uint64_t v120 = *(void *)&v118[2 * v119 + 2];
              }
              else
              {
                v121 = sub_144A6DC(*v201);
                uint64_t v120 = sub_188CDC8((uint64_t)v201, (uint64_t)v121);
                v117 = (unsigned __int8 *)v211;
              }
              uint64_t v116 = (char *)sub_1415788(a3, v120, v117);
              v211 = v116;
              if (!v116) {
                goto LABEL_354;
              }
              if (*(void *)a3 <= (unint64_t)v116 || *v116 != 106) {
                goto LABEL_348;
              }
            }
          case 0xFu:
            if (v9 != 122) {
              goto LABEL_338;
            }
            v122 = v8 - 1;
            while (1)
            {
              uint64_t v123 = (unsigned __int8 *)(v122 + 1);
              v211 = v122 + 1;
              uint64_t v124 = *(_DWORD **)(a1 + 152);
              if (v124 && (uint64_t v125 = *(int *)(a1 + 144), (int)v125 < *v124))
              {
                *(_DWORD *)(a1 + 144) = v125 + 1;
                uint64_t v126 = *(void *)&v124[2 * v125 + 2];
              }
              else
              {
                uint64_t v127 = sub_15C1B30(*v202);
                uint64_t v126 = sub_188CDC8((uint64_t)v202, (uint64_t)v127);
                uint64_t v123 = (unsigned __int8 *)v211;
              }
              v122 = (char *)sub_125CF74(a3, v126, v123);
              v211 = v122;
              if (!v122) {
                goto LABEL_354;
              }
              if (*(void *)a3 <= (unint64_t)v122 || *v122 != 122) {
                goto LABEL_348;
              }
            }
          case 0x10u:
            if (v9 != 130) {
              goto LABEL_338;
            }
            int v128 = v8 - 2;
            while (1)
            {
              v129 = (unsigned __int8 *)(v128 + 2);
              v211 = v128 + 2;
              uint64_t v130 = *(_DWORD **)(a1 + 176);
              if (v130 && (uint64_t v131 = *(int *)(a1 + 168), (int)v131 < *v130))
              {
                *(_DWORD *)(a1 + 168) = v131 + 1;
                uint64_t v132 = *(void *)&v130[2 * v131 + 2];
              }
              else
              {
                v133 = sub_144C6BC(*v203);
                uint64_t v132 = sub_188CDC8((uint64_t)v203, (uint64_t)v133);
                v129 = (unsigned __int8 *)v211;
              }
              int v128 = (char *)sub_143E4E8(a3, v132, v129);
              v211 = v128;
              if (!v128) {
                goto LABEL_354;
              }
              if (*(void *)a3 <= (unint64_t)v128 || *(_WORD *)v128 != 386) {
                goto LABEL_348;
              }
            }
          case 0x14u:
            if (v9 != 162) {
              goto LABEL_338;
            }
            *(_DWORD *)(a1 + 40) |= 4u;
            uint64_t v134 = *(void **)(a1 + 480);
            if (!v134)
            {
              uint64_t v135 = (void *)(*v197 & 0xFFFFFFFFFFFFFFFCLL);
              if (*v197) {
                uint64_t v135 = (void *)*v135;
              }
              uint64_t v134 = sub_1449EB4((uint64_t)v135);
              *(void *)(a1 + 480) = v134;
              int v8 = v211;
            }
            uint64_t v19 = (char *)sub_123257C(a3, (uint64_t)v134, (unsigned __int8 *)v8);
            goto LABEL_347;
          case 0x15u:
            if (v9 != 168) {
              goto LABEL_338;
            }
            v210 |= 0x200u;
            uint64_t v136 = v8 + 1;
            uint64_t v137 = *v8;
            if ((*v8 & 0x80000000) == 0) {
              goto LABEL_243;
            }
            int v138 = *v136;
            uint64_t v137 = v137 + (v138 << 7) - 128;
            if (v138 < 0)
            {
              v190 = (char *)sub_188C138((uint64_t)v8, v137);
              v211 = v190;
              *(void *)(a1 + 536) = v191;
              if (!v190) {
                goto LABEL_354;
              }
            }
            else
            {
              uint64_t v136 = v8 + 2;
LABEL_243:
              v211 = v136;
              *(void *)(a1 + 536) = v137;
            }
            goto LABEL_348;
          case 0x19u:
            if (v9 != 202) {
              goto LABEL_338;
            }
            uint64_t v139 = v8 - 2;
            while (1)
            {
              uint64_t v140 = (unsigned __int8 *)(v139 + 2);
              v211 = v139 + 2;
              uint64_t v141 = *(_DWORD **)(a1 + 200);
              if (v141 && (uint64_t v142 = *(int *)(a1 + 192), (int)v142 < *v141))
              {
                *(_DWORD *)(a1 + 192) = v142 + 1;
                uint64_t v143 = *(void *)&v141[2 * v142 + 2];
              }
              else
              {
                uint64_t v144 = sub_1448DC4(*v204);
                uint64_t v143 = sub_188CDC8((uint64_t)v204, (uint64_t)v144);
                uint64_t v140 = (unsigned __int8 *)v211;
              }
              uint64_t v139 = (char *)sub_123B5A4(a3, v143, v140);
              v211 = v139;
              if (!v139) {
                goto LABEL_354;
              }
              if (*(void *)a3 <= (unint64_t)v139 || *(_WORD *)v139 != 458) {
                goto LABEL_348;
              }
            }
          case 0x1Eu:
            if (v9 != 242) {
              goto LABEL_338;
            }
            *(_DWORD *)(a1 + 40) |= 8u;
            uint64_t v145 = *(void *)(a1 + 488);
            if (!v145)
            {
              int v146 = (void *)(*v197 & 0xFFFFFFFFFFFFFFFCLL);
              if (*v197) {
                int v146 = (void *)*v146;
              }
              uint64_t v145 = sub_144A8B0((uint64_t)v146);
              *(void *)(a1 + 488) = v145;
              int v8 = v211;
            }
            uint64_t v19 = (char *)sub_14320A8(a3, v145, (unsigned __int8 *)v8);
            goto LABEL_347;
          case 0x23u:
            if (v9 != 26) {
              goto LABEL_338;
            }
            BOOL v147 = v8 - 2;
            while (1)
            {
              v148 = (unsigned __int8 *)(v147 + 2);
              v211 = v147 + 2;
              v149 = *(_DWORD **)(a1 + 224);
              if (v149 && (uint64_t v150 = *(int *)(a1 + 216), (int)v150 < *v149))
              {
                *(_DWORD *)(a1 + 216) = v150 + 1;
                uint64_t v151 = *(void *)&v149[2 * v150 + 2];
              }
              else
              {
                int v152 = sub_144A6DC(*v205);
                uint64_t v151 = sub_188CDC8((uint64_t)v205, (uint64_t)v152);
                v148 = (unsigned __int8 *)v211;
              }
              BOOL v147 = (char *)sub_1415788(a3, v151, v148);
              v211 = v147;
              if (!v147) {
                goto LABEL_354;
              }
              if (*(void *)a3 <= (unint64_t)v147 || *(_WORD *)v147 != 666) {
                goto LABEL_348;
              }
            }
          case 0x28u:
            if (v9 != 69) {
              goto LABEL_338;
            }
            v210 |= 0x1000u;
            *(_DWORD *)(a1 + 548) = *(_DWORD *)v8;
            v211 = v8 + 4;
            goto LABEL_348;
          case 0x2Du:
            if (v9 == 104)
            {
              v153 = v8 - 2;
              while (1)
              {
                v211 = v153 + 2;
                uint64_t v154 = v153[2];
                if (v153[2] < 0)
                {
                  int v155 = v154 + (v153[3] << 7);
                  uint64_t v154 = (v155 - 128);
                  if (v153[3] < 0)
                  {
                    v153 = (char *)sub_188C138((uint64_t)(v153 + 2), (v155 - 128));
                    uint64_t v154 = v156;
                  }
                  else
                  {
                    v153 += 4;
                  }
                }
                else
                {
                  v153 += 3;
                }
                v211 = v153;
                uint64_t v157 = *(unsigned int *)(a1 + 232);
                v158 = (_DWORD *)(a1 + 232);
                if (v157 == *(_DWORD *)(a1 + 236))
                {
                  int v159 = v157 + 1;
                  sub_188CA54(v209, v157 + 1);
                  v158 = (_DWORD *)(a1 + 232);
                  *(void *)(*(void *)(a1 + 240) + 8 * v157) = v154;
                  v153 = v211;
                }
                else
                {
                  *(void *)(*(void *)(a1 + 240) + 8 * v157) = v154;
                  int v159 = v157 + 1;
                }
                _DWORD *v158 = v159;
                if (!v153) {
                  goto LABEL_354;
                }
                if (*(void *)a3 <= (unint64_t)v153 || *(_WORD *)v153 != 744) {
                  goto LABEL_348;
                }
              }
            }
            if (v9 != 106) {
              goto LABEL_338;
            }
            uint64_t v19 = (char *)sub_188C2EC(v209, (unsigned __int8 *)v8, (uint64_t)a3);
            goto LABEL_347;
          case 0x31u:
            if (v9 != 136) {
              goto LABEL_338;
            }
            v210 |= 0x2000u;
            int v161 = v8 + 1;
            LODWORD(v160) = *v8;
            if ((v160 & 0x80) == 0) {
              goto LABEL_290;
            }
            int v162 = *v161;
            uint64_t v160 = v160 + (v162 << 7) - 128;
            if (v162 < 0)
            {
              v192 = (char *)sub_188C138((uint64_t)v8, v160);
              v211 = v192;
              *(_DWORD *)(a1 + 552) = v193;
              if (!v192) {
                goto LABEL_354;
              }
            }
            else
            {
              int v161 = v8 + 2;
LABEL_290:
              v211 = v161;
              *(_DWORD *)(a1 + 552) = v160;
            }
            goto LABEL_348;
          case 0x32u:
            if (v9 != 146) {
              goto LABEL_338;
            }
            v163 = v8 - 2;
            while (1)
            {
              v164 = (unsigned __int8 *)(v163 + 2);
              v211 = v163 + 2;
              v165 = *(_DWORD **)(a1 + 264);
              if (v165 && (uint64_t v166 = *(int *)(a1 + 256), (int)v166 < *v165))
              {
                *(_DWORD *)(a1 + 256) = v166 + 1;
                uint64_t v167 = *(void *)&v165[2 * v166 + 2];
              }
              else
              {
                uint64_t v168 = sub_144C7D0(*v206);
                uint64_t v167 = sub_188CDC8((uint64_t)v206, v168);
                v164 = (unsigned __int8 *)v211;
              }
              v163 = sub_1443B9C(a3, v167, v164);
              v211 = v163;
              if (!v163) {
                goto LABEL_354;
              }
              if (*(void *)a3 <= (unint64_t)v163 || *(_WORD *)v163 != 914) {
                goto LABEL_348;
              }
            }
          case 0x37u:
            if (v9 != 186) {
              goto LABEL_338;
            }
            v169 = v8 - 2;
            while (1)
            {
              v170 = (unsigned __int8 *)(v169 + 2);
              v211 = v169 + 2;
              v171 = *(_DWORD **)(a1 + 288);
              if (v171 && (uint64_t v172 = *(int *)(a1 + 280), (int)v172 < *v171))
              {
                *(_DWORD *)(a1 + 280) = v172 + 1;
                uint64_t v173 = *(void *)&v171[2 * v172 + 2];
              }
              else
              {
                sub_144C880(*v207);
                uint64_t v173 = sub_188CDC8((uint64_t)v207, v174);
                v170 = (unsigned __int8 *)v211;
              }
              v169 = (char *)sub_1443C2C(a3, v173, v170);
              v211 = v169;
              if (!v169) {
                goto LABEL_354;
              }
              if (*(void *)a3 <= (unint64_t)v169 || *(_WORD *)v169 != 954) {
                goto LABEL_348;
              }
            }
          default:
            if (v13 != 60 || v9 != 226) {
              goto LABEL_338;
            }
            BOOL v30 = v8 - 2;
            while (1)
            {
              uint64_t v31 = (unsigned __int8 *)(v30 + 2);
              v211 = v30 + 2;
              unint64_t v32 = *(_DWORD **)(a1 + 312);
              if (v32 && (uint64_t v33 = *(int *)(a1 + 304), (int)v33 < *v32))
              {
                *(_DWORD *)(a1 + 304) = v33 + 1;
                uint64_t v34 = *(void *)&v32[2 * v33 + 2];
              }
              else
              {
                int v35 = sub_15C1B30(*v198);
                uint64_t v34 = sub_188CDC8((uint64_t)v198, (uint64_t)v35);
                uint64_t v31 = (unsigned __int8 *)v211;
              }
              BOOL v30 = (char *)sub_125CF74(a3, v34, v31);
              v211 = v30;
              if (!v30) {
                goto LABEL_354;
              }
              if (*(void *)a3 <= (unint64_t)v30 || *(_WORD *)v30 != 994) {
                goto LABEL_348;
              }
            }
        }
        goto LABEL_347;
      }
      if (v9 >> 3 > 0x4F) {
        break;
      }
      if (v9 >> 3 > 0x45)
      {
        if (v13 == 70)
        {
          if (v9 == 50)
          {
            uint64_t v74 = v8 - 2;
            while (1)
            {
              uint64_t v75 = (unsigned __int8 *)(v74 + 2);
              v211 = v74 + 2;
              uint64_t v76 = *(_DWORD **)(a1 + 360);
              if (v76 && (uint64_t v77 = *(int *)(a1 + 352), (int)v77 < *v76))
              {
                *(_DWORD *)(a1 + 352) = v77 + 1;
                uint64_t v78 = *(void *)&v76[2 * v77 + 2];
              }
              else
              {
                sub_144CD14(*(void *)(a1 + 344));
                uint64_t v78 = sub_188CDC8(a1 + 344, v79);
                uint64_t v75 = (unsigned __int8 *)v211;
              }
              uint64_t v74 = (char *)sub_1434478(a3, v78, v75);
              v211 = v74;
              if (!v74) {
                goto LABEL_354;
              }
              if (*(void *)a3 <= (unint64_t)v74 || *(_WORD *)v74 != 1202) {
                goto LABEL_348;
              }
            }
          }
          goto LABEL_338;
        }
        if (v13 != 75 || v9 != 90) {
          goto LABEL_338;
        }
        *(_DWORD *)(a1 + 40) |= 0x10u;
        uint64_t v28 = *(void *)(a1 + 496);
        if (!v28)
        {
          int v29 = (void *)(*v197 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v197) {
            int v29 = (void *)*v29;
          }
          uint64_t v28 = sub_144C9B0((uint64_t)v29);
          *(void *)(a1 + 496) = v28;
          int v8 = v211;
        }
        uint64_t v19 = sub_1443D4C(a3, v28, (unsigned __int8 *)v8);
        goto LABEL_347;
      }
      if (v13 == 61)
      {
        if (v9 == 234)
        {
          uint64_t v56 = v8 - 2;
          while (1)
          {
            int v57 = (unsigned __int8 *)(v56 + 2);
            v211 = v56 + 2;
            uint64_t v58 = *(_DWORD **)(a1 + 336);
            if (v58 && (uint64_t v59 = *(int *)(a1 + 328), (int)v59 < *v58))
            {
              *(_DWORD *)(a1 + 328) = v59 + 1;
              uint64_t v60 = *(void *)&v58[2 * v59 + 2];
            }
            else
            {
              uint64_t v61 = sub_144C934(*(void *)(a1 + 320));
              uint64_t v60 = sub_188CDC8(a1 + 320, (uint64_t)v61);
              int v57 = (unsigned __int8 *)v211;
            }
            uint64_t v56 = sub_1443CBC(a3, v60, v57);
            v211 = v56;
            if (!v56) {
              goto LABEL_354;
            }
            if (*(void *)a3 <= (unint64_t)v56 || *(_WORD *)v56 != 1002) {
              goto LABEL_348;
            }
          }
        }
        goto LABEL_338;
      }
      if (v13 != 65 || v9 != 8) {
        goto LABEL_338;
      }
      v210 |= 0x800u;
      unint64_t v21 = v8 + 1;
      uint64_t v22 = *v8;
      if (*v8 < 0)
      {
        int v23 = *v21;
        uint64_t v22 = v22 + (v23 << 7) - 128;
        if (v23 < 0)
        {
          v179 = (char *)sub_188C138((uint64_t)v8, v22);
          v211 = v179;
          *(unsigned char *)(a1 + 545) = v180 != 0;
          if (!v179) {
            goto LABEL_354;
          }
          goto LABEL_348;
        }
        unint64_t v21 = v8 + 2;
      }
      v211 = v21;
      *(unsigned char *)(a1 + 545) = v22 != 0;
LABEL_348:
      if (sub_11947B8((uint64_t)a3, &v211, a3[11].i32[1])) {
        goto LABEL_3;
      }
    }
    if (v9 >> 3 <= 0x63)
    {
      switch(v13)
      {
        case 'P':
          if (v9 != 130) {
            goto LABEL_338;
          }
          *(_DWORD *)(a1 + 40) |= 0x20u;
          uint64_t v17 = *(void *)(a1 + 504);
          if (!v17)
          {
            uint64_t v18 = (void *)(*v197 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v197) {
              uint64_t v18 = (void *)*v18;
            }
            uint64_t v17 = sub_144C61C((uint64_t)v18);
            *(void *)(a1 + 504) = v17;
            int v8 = v211;
          }
          uint64_t v19 = sub_1443DDC(a3, v17, (unsigned __int8 *)v8);
          goto LABEL_347;
        case 'U':
          if (v9 != 168) {
            goto LABEL_338;
          }
          v210 |= 0x8000u;
          BOOL v36 = v8 + 1;
          uint64_t v37 = *v8;
          if ((*v8 & 0x80000000) == 0) {
            goto LABEL_69;
          }
          int v38 = *v36;
          uint64_t v37 = v37 + (v38 << 7) - 128;
          if (v38 < 0)
          {
            v177 = (char *)sub_188C138((uint64_t)v8, v37);
            v211 = v177;
            *(void *)(a1 + 560) = v178;
            if (!v177) {
              goto LABEL_354;
            }
          }
          else
          {
            BOOL v36 = v8 + 2;
LABEL_69:
            v211 = v36;
            *(void *)(a1 + 560) = v37;
          }
          break;
        case 'V':
          if (v9 != 176) {
            goto LABEL_338;
          }
          v210 |= 0x10000u;
          uint64_t v39 = v8 + 1;
          uint64_t v40 = *v8;
          if ((*v8 & 0x80000000) == 0) {
            goto LABEL_74;
          }
          int v41 = *v39;
          uint64_t v40 = v40 + (v41 << 7) - 128;
          if (v41 < 0)
          {
            v175 = (char *)sub_188C138((uint64_t)v8, v40);
            v211 = v175;
            *(void *)(a1 + 568) = v176;
            if (!v175) {
              goto LABEL_354;
            }
          }
          else
          {
            uint64_t v39 = v8 + 2;
LABEL_74:
            v211 = v39;
            *(void *)(a1 + 568) = v40;
          }
          goto LABEL_348;
        case 'Z':
          if (v9 != 210) {
            goto LABEL_338;
          }
          int v42 = v8 - 2;
          while (1)
          {
            BOOL v43 = (char *)(v42 + 2);
            v211 = (char *)(v42 + 2);
            BOOL v44 = *(_DWORD **)(a1 + 384);
            if (v44 && (uint64_t v45 = *(int *)(a1 + 376), (int)v45 < *v44))
            {
              *(_DWORD *)(a1 + 376) = v45 + 1;
              uint64_t v46 = *(std::string **)&v44[2 * v45 + 2];
            }
            else
            {
              if (!*v7) {
                operator new();
              }
              void *v48 = v47;
              v48[1] = sub_3A6EDC;
              *uint64_t v47 = 0;
              v47[1] = 0;
              v47[2] = 0;
              uint64_t v46 = (std::string *)sub_188CDC8(a1 + 368, (uint64_t)v47);
              BOOL v43 = v211;
            }
            int v42 = sub_188C244(v46, v43, (uint64_t)a3);
            v211 = (char *)v42;
            if (!v42) {
              goto LABEL_354;
            }
            if (*(void *)a3 <= (unint64_t)v42 || *(_WORD *)v42 != 1490) {
              goto LABEL_348;
            }
          }
        case '[':
          if (v9 != 218) {
            goto LABEL_338;
          }
          uint64_t v49 = v8 - 2;
          while (1)
          {
            uint64_t v50 = (char *)(v49 + 2);
            v211 = (char *)(v49 + 2);
            uint64_t v51 = *(_DWORD **)(a1 + 408);
            if (v51 && (uint64_t v52 = *(int *)(a1 + 400), (int)v52 < *v51))
            {
              *(_DWORD *)(a1 + 400) = v52 + 1;
              int v53 = *(std::string **)&v51[2 * v52 + 2];
            }
            else
            {
              if (!*v6) {
                operator new();
              }
              *uint64_t v55 = v54;
              v55[1] = sub_3A6EDC;
              *uint64_t v54 = 0;
              v54[1] = 0;
              v54[2] = 0;
              int v53 = (std::string *)sub_188CDC8(a1 + 392, (uint64_t)v54);
              uint64_t v50 = v211;
            }
            uint64_t v49 = sub_188C244(v53, v50, (uint64_t)a3);
            v211 = (char *)v49;
            if (!v49) {
              goto LABEL_354;
            }
            if (*(void *)a3 <= (unint64_t)v49 || *(_WORD *)v49 != 1498) {
              goto LABEL_348;
            }
          }
        default:
          goto LABEL_338;
      }
      goto LABEL_348;
    }
    if (v13 == 100)
    {
      if (v9 == 34)
      {
        uint64_t v62 = v8 - 2;
        while (1)
        {
          uint64_t v63 = (unsigned __int8 *)(v62 + 2);
          v211 = v62 + 2;
          uint64_t v64 = *(_DWORD **)(a1 + 432);
          if (v64 && (uint64_t v65 = *(int *)(a1 + 424), (int)v65 < *v64))
          {
            *(_DWORD *)(a1 + 424) = v65 + 1;
            uint64_t v66 = *(void *)&v64[2 * v65 + 2];
          }
          else
          {
            uint64_t v67 = sub_144C748(*(void *)(a1 + 416));
            uint64_t v66 = sub_188CDC8(a1 + 416, (uint64_t)v67);
            uint64_t v63 = (unsigned __int8 *)v211;
          }
          uint64_t v62 = (char *)sub_1443B0C(a3, v66, v63);
          v211 = v62;
          if (!v62) {
            goto LABEL_354;
          }
          if (*(void *)a3 <= (unint64_t)v62 || *(_WORD *)v62 != 1698) {
            goto LABEL_348;
          }
        }
      }
      goto LABEL_338;
    }
    if (v13 == 110)
    {
      if (v9 == 114)
      {
        unint64_t v68 = v8 - 2;
        while (1)
        {
          uint64_t v69 = (unsigned __int8 *)(v68 + 2);
          v211 = v68 + 2;
          uint64_t v70 = *(_DWORD **)(a1 + 456);
          if (v70 && (uint64_t v71 = *(int *)(a1 + 448), (int)v71 < *v70))
          {
            *(_DWORD *)(a1 + 448) = v71 + 1;
            uint64_t v72 = *(void *)&v70[2 * v71 + 2];
          }
          else
          {
            uint64_t v73 = sub_144CAD8(*v208);
            uint64_t v72 = sub_188CDC8((uint64_t)v208, (uint64_t)v73);
            uint64_t v69 = (unsigned __int8 *)v211;
          }
          unint64_t v68 = (char *)sub_1443E6C(a3, v72, v69);
          v211 = v68;
          if (!v68) {
            goto LABEL_354;
          }
          if (*(void *)a3 <= (unint64_t)v68 || *(_WORD *)v68 != 1778) {
            goto LABEL_348;
          }
        }
      }
LABEL_338:
      if (v9) {
        BOOL v195 = (v9 & 7) == 4;
      }
      else {
        BOOL v195 = 1;
      }
      if (v195)
      {
        if (v8)
        {
          a3[10].i32[0] = v9 - 1;
          goto LABEL_3;
        }
LABEL_354:
        v211 = 0;
        goto LABEL_3;
      }
      if (v9 - 8000 > 0x31F)
      {
        if (*v197)
        {
          v196 = (std::string *)((*v197 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else
        {
          v196 = (std::string *)sub_188DBD8(v197);
          int v8 = v211;
        }
        uint64_t v19 = (char *)sub_1885AC0(v9, v196, v8, a3);
      }
      else
      {
        uint64_t v19 = (char *)sub_18859DC((uint64_t **)(a1 + 16), v9, v8, (uint64_t)&off_2538BB0, v197, a3);
      }
LABEL_347:
      v211 = v19;
      if (!v19) {
        goto LABEL_354;
      }
      goto LABEL_348;
    }
    if (v13 != 115 || v9 != 152) {
      goto LABEL_338;
    }
    uint64_t v24 = v8 + 1;
    unint64_t v25 = *v8;
    if (*v8 < 0)
    {
      int v26 = *v24;
      int v27 = v25 + (v26 << 7);
      unint64_t v25 = (v27 - 128);
      if (v26 < 0)
      {
        v211 = (char *)sub_188C138((uint64_t)v8, (v27 - 128));
        if (!v211) {
          goto LABEL_354;
        }
        unint64_t v25 = v181;
        goto LABEL_44;
      }
      uint64_t v24 = v8 + 2;
    }
    v211 = v24;
LABEL_44:
    if (v25 > 3)
    {
      if (*v197) {
        v194 = (std::string *)((*v197 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        v194 = (std::string *)sub_188DBD8(v197);
      }
      sub_188C020(115, v25, v194);
    }
    else
    {
      *(_DWORD *)(a1 + 40) |= 0x4000u;
      *(_DWORD *)(a1 + 556) = v25;
    }
    goto LABEL_348;
  }
  int v210 = 0;
LABEL_3:
  *(_DWORD *)(a1 + 40) |= v210;
  return v211;
}

uint64_t sub_1443B0C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_143D974(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1443B9C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_143DFE4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_1443C2C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_143F05C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1443CBC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1440124(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1443D4C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1440860(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1443DDC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_143CAA0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_1443E6C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_14417CC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1443EFC(uint64_t a1, char *a2, unint64_t *a3)
{
  int v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if ((v6 & 0x40) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unint64_t v7 = *(void *)(a1 + 512);
    char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x80) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(void *)(a1 + 520);
    char *v4 = 24;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x100) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v13 = *(void *)(a1 + 528);
    char *v4 = 32;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unint64_t v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6) {
    int v4 = sub_117A0AC(a3, 5, (const void **)(*(void *)(a1 + 464) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  if ((v6 & 0x400) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v16 = *(unsigned char *)(a1 + 544);
    char *v4 = 48;
    v4[1] = v16;
    v4 += 2;
  }
  uint64_t v17 = *(unsigned int *)(a1 + 48);
  if ((int)v17 >= 1)
  {
    for (uint64_t i = 0; i != v17; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v19 = *(int *)(*(void *)(a1 + 56) + 4 * i);
      char *v4 = 56;
      v4[1] = v19;
      if (v19 > 0x7F)
      {
        v4[1] = v19 | 0x80;
        unint64_t v20 = v19 >> 7;
        v4[2] = v19 >> 7;
        v4 += 3;
        if (v19 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v21 = v20 >> 14;
            v20 >>= 7;
            *v4++ = v20;
          }
          while (v21);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  int v22 = *(_DWORD *)(a1 + 72);
  if (v22)
  {
    for (int j = 0; j != v22; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v24 = *(void *)(*(void *)(a1 + 80) + 8 * j + 8);
      char *v4 = 82;
      unsigned int v25 = *(_DWORD *)(v24 + 20);
      v4[1] = v25;
      if (v25 > 0x7F) {
        int v26 = sub_188A9CC(v25, v4 + 1);
      }
      else {
        int v26 = v4 + 2;
      }
      int v4 = sub_143DB64(v24, v26, a3);
    }
  }
  int v27 = *(_DWORD *)(a1 + 96);
  if (v27)
  {
    for (int k = 0; k != v27; ++k)
    {
      if (*a3 <= (unint64_t)v4) {
        int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v29 = *(void *)(*(void *)(a1 + 104) + 8 * k + 8);
      char *v4 = 90;
      unsigned int v30 = *(_DWORD *)(v29 + 20);
      v4[1] = v30;
      if (v30 > 0x7F) {
        uint64_t v31 = sub_188A9CC(v30, v4 + 1);
      }
      else {
        uint64_t v31 = v4 + 2;
      }
      int v4 = sub_143DB64(v29, v31, a3);
    }
  }
  if ((v6 & 2) != 0) {
    int v4 = sub_117A0AC(a3, 12, (const void **)(*(void *)(a1 + 472) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  int v32 = *(_DWORD *)(a1 + 120);
  if (v32)
  {
    for (int m = 0; m != v32; ++m)
    {
      if (*a3 <= (unint64_t)v4) {
        int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v34 = *(void *)(*(void *)(a1 + 128) + 8 * m + 8);
      char *v4 = 106;
      unsigned int v35 = *(_DWORD *)(v34 + 20);
      v4[1] = v35;
      if (v35 > 0x7F) {
        BOOL v36 = sub_188A9CC(v35, v4 + 1);
      }
      else {
        BOOL v36 = v4 + 2;
      }
      int v4 = sub_1417780(v34, (unint64_t)v36, a3);
    }
  }
  int v37 = *(_DWORD *)(a1 + 144);
  if (v37)
  {
    for (int n = 0; n != v37; ++n)
    {
      if (*a3 <= (unint64_t)v4) {
        int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v39 = *(void *)(*(void *)(a1 + 152) + 8 * n + 8);
      char *v4 = 122;
      unsigned int v40 = *(_DWORD *)(v39 + 20);
      v4[1] = v40;
      if (v40 > 0x7F) {
        int v41 = sub_188A9CC(v40, v4 + 1);
      }
      else {
        int v41 = v4 + 2;
      }
      int v4 = sub_15B2EA4(v39, v41, a3);
    }
  }
  int v42 = *(_DWORD *)(a1 + 168);
  if (v42)
  {
    for (iuint64_t i = 0; ii != v42; ++ii)
    {
      if (*a3 <= (unint64_t)v4) {
        int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v44 = *(void *)(*(void *)(a1 + 176) + 8 * ii + 8);
      *(_WORD *)int v4 = 386;
      unsigned int v45 = *(_DWORD *)(v44 + 20);
      v4[2] = v45;
      if (v45 > 0x7F) {
        uint64_t v46 = sub_188A9CC(v45, v4 + 2);
      }
      else {
        uint64_t v46 = v4 + 3;
      }
      int v4 = sub_143D48C(v44, v46, a3);
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v47 = *(void *)(a1 + 480);
    *(_WORD *)int v4 = 418;
    unsigned int v48 = *(_DWORD *)(v47 + 20);
    v4[2] = v48;
    if (v48 > 0x7F) {
      uint64_t v49 = sub_188A9CC(v48, v4 + 2);
    }
    else {
      uint64_t v49 = v4 + 3;
    }
    int v4 = sub_140CAC4(v47, v49, a3);
  }
  if ((v6 & 0x200) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v50 = *(void *)(a1 + 536);
    *(_WORD *)int v4 = 424;
    v4[2] = v50;
    if (v50 > 0x7F)
    {
      v4[2] = v50 | 0x80;
      unint64_t v51 = v50 >> 7;
      v4[3] = v50 >> 7;
      v4 += 4;
      if (v50 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v52 = v51 >> 14;
          v51 >>= 7;
          *v4++ = v51;
        }
        while (v52);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  int v53 = *(_DWORD *)(a1 + 192);
  if (v53)
  {
    for (jint j = 0; jj != v53; ++jj)
    {
      if (*a3 <= (unint64_t)v4) {
        int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v55 = *(void *)(*(void *)(a1 + 200) + 8 * jj + 8);
      *(_WORD *)int v4 = 458;
      unsigned int v56 = *(_DWORD *)(v55 + 20);
      v4[2] = v56;
      if (v56 > 0x7F) {
        int v57 = sub_188A9CC(v56, v4 + 2);
      }
      else {
        int v57 = v4 + 3;
      }
      int v4 = sub_13F721C(v55, v57, a3);
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v58 = *(void *)(a1 + 488);
    *(_WORD *)int v4 = 498;
    unsigned int v59 = *(_DWORD *)(v58 + 20);
    v4[2] = v59;
    if (v59 > 0x7F) {
      uint64_t v60 = sub_188A9CC(v59, v4 + 2);
    }
    else {
      uint64_t v60 = v4 + 3;
    }
    int v4 = sub_1418FB4(v58, v60, a3);
  }
  int v61 = *(_DWORD *)(a1 + 216);
  if (v61)
  {
    for (kint k = 0; kk != v61; ++kk)
    {
      if (*a3 <= (unint64_t)v4) {
        int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v63 = *(void *)(*(void *)(a1 + 224) + 8 * kk + 8);
      *(_WORD *)int v4 = 666;
      unsigned int v64 = *(_DWORD *)(v63 + 20);
      v4[2] = v64;
      if (v64 > 0x7F) {
        uint64_t v65 = sub_188A9CC(v64, v4 + 2);
      }
      else {
        uint64_t v65 = v4 + 3;
      }
      int v4 = sub_1417780(v63, (unint64_t)v65, a3);
    }
  }
  if ((v6 & 0x1000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    int v66 = *(_DWORD *)(a1 + 548);
    *(_WORD *)int v4 = 709;
    *(_DWORD *)(v4 + 2) = v66;
    v4 += 6;
  }
  uint64_t v67 = *(unsigned int *)(a1 + 232);
  if ((int)v67 >= 1)
  {
    for (mint m = 0; mm != v67; ++mm)
    {
      if (*a3 <= (unint64_t)v4) {
        int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v69 = *(void *)(*(void *)(a1 + 240) + 8 * mm);
      *(_WORD *)int v4 = 744;
      v4[2] = v69;
      if (v69 > 0x7F)
      {
        v4[2] = v69 | 0x80;
        unint64_t v70 = v69 >> 7;
        v4[3] = v69 >> 7;
        v4 += 4;
        if (v69 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v71 = v70 >> 14;
            v70 >>= 7;
            *v4++ = v70;
          }
          while (v71);
        }
      }
      else
      {
        v4 += 3;
      }
    }
  }
  if ((v6 & 0x2000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v72 = *(int *)(a1 + 552);
    *(_WORD *)int v4 = 904;
    v4[2] = v72;
    if (v72 > 0x7F)
    {
      v4[2] = v72 | 0x80;
      unint64_t v73 = v72 >> 7;
      v4[3] = v72 >> 7;
      v4 += 4;
      if (v72 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v74 = v73 >> 14;
          v73 >>= 7;
          *v4++ = v73;
        }
        while (v74);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  int v75 = *(_DWORD *)(a1 + 256);
  if (v75)
  {
    for (nint n = 0; nn != v75; ++nn)
    {
      if (*a3 <= (unint64_t)v4) {
        int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v77 = *(void *)(*(void *)(a1 + 264) + 8 * nn + 8);
      *(_WORD *)int v4 = 914;
      unsigned int v78 = *(_DWORD *)(v77 + 20);
      v4[2] = v78;
      if (v78 > 0x7F) {
        uint64_t v79 = sub_188A9CC(v78, v4 + 2);
      }
      else {
        uint64_t v79 = v4 + 3;
      }
      int v4 = sub_143E578(v77, (unint64_t)v79, a3);
    }
  }
  int v80 = *(_DWORD *)(a1 + 280);
  if (v80)
  {
    for (int i1 = 0; i1 != v80; ++i1)
    {
      if (*a3 <= (unint64_t)v4) {
        int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v82 = *(void *)(*(void *)(a1 + 288) + 8 * i1 + 8);
      *(_WORD *)int v4 = 954;
      unsigned int v83 = *(_DWORD *)(v82 + 20);
      v4[2] = v83;
      if (v83 > 0x7F) {
        uint64_t v84 = sub_188A9CC(v83, v4 + 2);
      }
      else {
        uint64_t v84 = v4 + 3;
      }
      int v4 = sub_143F5E8(v82, (unint64_t)v84, a3);
    }
  }
  int v85 = *(_DWORD *)(a1 + 304);
  if (v85)
  {
    for (int i2 = 0; i2 != v85; ++i2)
    {
      if (*a3 <= (unint64_t)v4) {
        int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v87 = *(void *)(*(void *)(a1 + 312) + 8 * i2 + 8);
      *(_WORD *)int v4 = 994;
      unsigned int v88 = *(_DWORD *)(v87 + 20);
      v4[2] = v88;
      if (v88 > 0x7F) {
        uint64_t v89 = sub_188A9CC(v88, v4 + 2);
      }
      else {
        uint64_t v89 = v4 + 3;
      }
      int v4 = sub_15B2EA4(v87, v89, a3);
    }
  }
  int v90 = *(_DWORD *)(a1 + 328);
  if (v90)
  {
    for (int i3 = 0; i3 != v90; ++i3)
    {
      if (*a3 <= (unint64_t)v4) {
        int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v92 = *(void *)(*(void *)(a1 + 336) + 8 * i3 + 8);
      *(_WORD *)int v4 = 1002;
      unsigned int v93 = *(_DWORD *)(v92 + 20);
      v4[2] = v93;
      if (v93 > 0x7F) {
        uint64_t v94 = sub_188A9CC(v93, v4 + 2);
      }
      else {
        uint64_t v94 = v4 + 3;
      }
      int v4 = sub_14403C0(v92, (unint64_t)v94, a3);
    }
  }
  if ((v6 & 0x800) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v95 = *(unsigned char *)(a1 + 545);
    *(_WORD *)int v4 = 1160;
    v4[2] = v95;
    v4 += 3;
  }
  int v96 = *(_DWORD *)(a1 + 352);
  if (v96)
  {
    for (int i4 = 0; i4 != v96; ++i4)
    {
      if (*a3 <= (unint64_t)v4) {
        int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v98 = *(void *)(*(void *)(a1 + 360) + 8 * i4 + 8);
      *(_WORD *)int v4 = 1202;
      unsigned int v99 = *(_DWORD *)(v98 + 20);
      v4[2] = v99;
      if (v99 > 0x7F) {
        unint64_t v100 = sub_188A9CC(v99, v4 + 2);
      }
      else {
        unint64_t v100 = v4 + 3;
      }
      int v4 = sub_1447378(v98, (unint64_t)v100, a3);
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v101 = *(void *)(a1 + 496);
    *(_WORD *)int v4 = 1242;
    unsigned int v102 = *(_DWORD *)(v101 + 20);
    v4[2] = v102;
    if (v102 > 0x7F) {
      v103 = sub_188A9CC(v102, v4 + 2);
    }
    else {
      v103 = v4 + 3;
    }
    int v4 = sub_1440C4C(v101, v103, a3);
    if ((v6 & 0x20) == 0)
    {
LABEL_182:
      if ((v6 & 0x8000) == 0) {
        goto LABEL_202;
      }
      goto LABEL_196;
    }
  }
  else if ((v6 & 0x20) == 0)
  {
    goto LABEL_182;
  }
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v104 = *(void *)(a1 + 504);
  *(_WORD *)int v4 = 1410;
  unsigned int v105 = *(_DWORD *)(v104 + 40);
  v4[2] = v105;
  if (v105 > 0x7F) {
    uint64_t v106 = sub_188A9CC(v105, v4 + 2);
  }
  else {
    uint64_t v106 = v4 + 3;
  }
  int v4 = sub_143CCD0(v104, v106, a3);
  if ((v6 & 0x8000) != 0)
  {
LABEL_196:
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v107 = *(void *)(a1 + 560);
    *(_WORD *)int v4 = 1448;
    v4[2] = v107;
    if (v107 > 0x7F)
    {
      v4[2] = v107 | 0x80;
      unint64_t v108 = v107 >> 7;
      v4[3] = v107 >> 7;
      v4 += 4;
      if (v107 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v109 = v108 >> 14;
          v108 >>= 7;
          *v4++ = v108;
        }
        while (v109);
      }
    }
    else
    {
      v4 += 3;
    }
  }
LABEL_202:
  if ((v6 & 0x10000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v110 = *(void *)(a1 + 568);
    *(_WORD *)int v4 = 1456;
    v4[2] = v110;
    if (v110 > 0x7F)
    {
      v4[2] = v110 | 0x80;
      unint64_t v111 = v110 >> 7;
      v4[3] = v110 >> 7;
      v4 += 4;
      if (v110 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v112 = v111 >> 14;
          v111 >>= 7;
          *v4++ = v111;
        }
        while (v112);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  uint64_t v113 = *(unsigned int *)(a1 + 376);
  if ((int)v113 >= 1)
  {
    uint64_t v114 = 0;
    uint64_t v115 = 8 * v113;
    do
    {
      uint64_t v116 = *(void **)(*(void *)(a1 + 384) + v114 + 8);
      if (*((char *)v116 + 23) < 0)
      {
        int64_t v117 = v116[1];
        if (v117 > 127) {
          goto LABEL_220;
        }
      }
      else
      {
        int64_t v117 = *((unsigned __int8 *)v116 + 23);
      }
      if ((uint64_t)(*a3 - (void)v4 + 13) >= v117)
      {
        *(_WORD *)int v4 = 1490;
        v4[2] = v117;
        if (*((char *)v116 + 23) < 0) {
          uint64_t v116 = (void *)*v116;
        }
        v118 = v4 + 3;
        memcpy(v118, v116, v117);
        int v4 = &v118[v117];
        goto LABEL_218;
      }
LABEL_220:
      int v4 = (char *)sub_188A868(a3, 90, (uint64_t)v116, v4);
LABEL_218:
      v114 += 8;
    }
    while (v115 != v114);
  }
  uint64_t v119 = *(unsigned int *)(a1 + 400);
  if ((int)v119 >= 1)
  {
    uint64_t v120 = 0;
    uint64_t v121 = 8 * v119;
    do
    {
      v122 = *(void **)(*(void *)(a1 + 408) + v120 + 8);
      if (*((char *)v122 + 23) < 0)
      {
        int64_t v123 = v122[1];
        if (v123 > 127) {
          goto LABEL_232;
        }
      }
      else
      {
        int64_t v123 = *((unsigned __int8 *)v122 + 23);
      }
      if ((uint64_t)(*a3 - (void)v4 + 13) >= v123)
      {
        *(_WORD *)int v4 = 1498;
        v4[2] = v123;
        if (*((char *)v122 + 23) < 0) {
          v122 = (void *)*v122;
        }
        uint64_t v124 = v4 + 3;
        memcpy(v124, v122, v123);
        int v4 = &v124[v123];
        goto LABEL_230;
      }
LABEL_232:
      int v4 = (char *)sub_188A868(a3, 91, (uint64_t)v122, v4);
LABEL_230:
      v120 += 8;
    }
    while (v121 != v120);
  }
  int v125 = *(_DWORD *)(a1 + 424);
  if (v125)
  {
    for (int i5 = 0; i5 != v125; ++i5)
    {
      if (*a3 <= (unint64_t)v4) {
        int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v127 = *(void *)(*(void *)(a1 + 432) + 8 * i5 + 8);
      *(_WORD *)int v4 = 1698;
      unsigned int v128 = *(_DWORD *)(v127 + 20);
      v4[2] = v128;
      if (v128 > 0x7F) {
        v129 = sub_188A9CC(v128, v4 + 2);
      }
      else {
        v129 = v4 + 3;
      }
      int v4 = sub_143DB64(v127, v129, a3);
    }
  }
  int v130 = *(_DWORD *)(a1 + 448);
  if (v130)
  {
    for (int i6 = 0; i6 != v130; ++i6)
    {
      if (*a3 <= (unint64_t)v4) {
        int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v132 = *(void *)(*(void *)(a1 + 456) + 8 * i6 + 8);
      *(_WORD *)int v4 = 1778;
      unsigned int v133 = *(_DWORD *)(v132 + 20);
      v4[2] = v133;
      if (v133 > 0x7F) {
        uint64_t v134 = sub_188A9CC(v133, v4 + 2);
      }
      else {
        uint64_t v134 = v4 + 3;
      }
      int v4 = sub_1441C10(v132, (unint64_t)v134, a3);
    }
  }
  if ((v6 & 0x4000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v135 = *(int *)(a1 + 556);
    *(_WORD *)int v4 = 1944;
    v4[2] = v135;
    if (v135 > 0x7F)
    {
      v4[2] = v135 | 0x80;
      unint64_t v136 = v135 >> 7;
      v4[3] = v135 >> 7;
      v4 += 4;
      if (v135 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v137 = v136 >> 14;
          v136 >>= 7;
          *v4++ = v136;
        }
        while (v137);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if (*(_WORD *)(a1 + 26)) {
    int v4 = sub_1886844(a1 + 16, 1000, 1100, v4, a3);
  }
  uint64_t v138 = *(void *)(a1 + 8);
  if ((v138 & 1) == 0) {
    return v4;
  }
  unint64_t v140 = v138 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v140 + 31) < 0)
  {
    uint64_t v141 = *(void **)(v140 + 8);
    uint64_t v142 = *(void *)(v140 + 16);
  }
  else
  {
    uint64_t v141 = (void *)(v140 + 8);
    LODWORD(v142) = *(unsigned __int8 *)(v140 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v142)
  {
    uint64_t v143 = (int)v142;
    memcpy(v4, v141, (int)v142);
    v4 += v143;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v141, v142, v4);
}

uint64_t sub_1445008(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(unsigned int *)(a1 + 48);
  if (v3)
  {
    uint64_t v4 = 0;
    int v5 = 0;
    do
    {
      int v6 = *(_DWORD *)(*(void *)(a1 + 56) + 4 * v5);
      if (v6 < 0) {
        uint64_t v7 = 10;
      }
      else {
        uint64_t v7 = (9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6;
      }
      v4 += v7;
      ++v5;
    }
    while (v3 != v5);
  }
  else
  {
    uint64_t v4 = 0;
  }
  uint64_t v8 = *(int *)(a1 + 72);
  uint64_t v9 = v2 + v3 + v4 + v8;
  uint64_t v10 = *(void *)(a1 + 80);
  if (v10) {
    unint64_t v11 = (uint64_t *)(v10 + 8);
  }
  else {
    unint64_t v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_143DC7C(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  uint64_t v15 = *(int *)(a1 + 96);
  uint64_t v16 = v9 + v15;
  uint64_t v17 = *(void *)(a1 + 104);
  if (v17) {
    uint64_t v18 = (uint64_t *)(v17 + 8);
  }
  else {
    uint64_t v18 = 0;
  }
  if (v15)
  {
    uint64_t v19 = 8 * v15;
    do
    {
      uint64_t v20 = *v18++;
      uint64_t v21 = sub_143DC7C(v20);
      v16 += v21 + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6);
      v19 -= 8;
    }
    while (v19);
  }
  uint64_t v22 = *(int *)(a1 + 120);
  uint64_t v23 = v16 + v22;
  uint64_t v24 = *(void *)(a1 + 128);
  if (v24) {
    unsigned int v25 = (uint64_t *)(v24 + 8);
  }
  else {
    unsigned int v25 = 0;
  }
  if (v22)
  {
    uint64_t v26 = 8 * v22;
    do
    {
      uint64_t v27 = *v25++;
      uint64_t v28 = sub_1417BAC(v27);
      v23 += v28 + ((9 * (__clz(v28 | 1) ^ 0x1F) + 73) >> 6);
      v26 -= 8;
    }
    while (v26);
  }
  uint64_t v29 = *(int *)(a1 + 144);
  uint64_t v30 = v23 + v29;
  uint64_t v31 = *(void *)(a1 + 152);
  if (v31) {
    int v32 = (uint64_t *)(v31 + 8);
  }
  else {
    int v32 = 0;
  }
  if (v29)
  {
    uint64_t v33 = 8 * v29;
    do
    {
      uint64_t v34 = *v32++;
      uint64_t v35 = sub_15B2F90(v34);
      v30 += v35 + ((9 * (__clz(v35 | 1) ^ 0x1F) + 73) >> 6);
      v33 -= 8;
    }
    while (v33);
  }
  uint64_t v36 = *(int *)(a1 + 168);
  uint64_t v37 = v30 + 2 * v36;
  uint64_t v38 = *(void *)(a1 + 176);
  if (v38) {
    uint64_t v39 = (uint64_t *)(v38 + 8);
  }
  else {
    uint64_t v39 = 0;
  }
  if (v36)
  {
    uint64_t v40 = 8 * v36;
    do
    {
      uint64_t v41 = *v39++;
      uint64_t v42 = sub_143D5EC(v41);
      v37 += v42 + ((9 * (__clz(v42 | 1) ^ 0x1F) + 73) >> 6);
      v40 -= 8;
    }
    while (v40);
  }
  uint64_t v43 = *(int *)(a1 + 192);
  uint64_t v44 = v37 + 2 * v43;
  uint64_t v45 = *(void *)(a1 + 200);
  if (v45) {
    uint64_t v46 = (uint64_t *)(v45 + 8);
  }
  else {
    uint64_t v46 = 0;
  }
  if (v43)
  {
    uint64_t v47 = 8 * v43;
    do
    {
      uint64_t v48 = *v46++;
      uint64_t v49 = sub_13F73A8(v48);
      v44 += v49 + ((9 * (__clz(v49 | 1) ^ 0x1F) + 73) >> 6);
      v47 -= 8;
    }
    while (v47);
  }
  uint64_t v50 = *(int *)(a1 + 216);
  uint64_t v51 = v44 + 2 * v50;
  uint64_t v52 = *(void *)(a1 + 224);
  if (v52) {
    int v53 = (uint64_t *)(v52 + 8);
  }
  else {
    int v53 = 0;
  }
  if (v50)
  {
    uint64_t v54 = 8 * v50;
    do
    {
      uint64_t v55 = *v53++;
      uint64_t v56 = sub_1417BAC(v55);
      v51 += v56 + ((9 * (__clz(v56 | 1) ^ 0x1F) + 73) >> 6);
      v54 -= 8;
    }
    while (v54);
  }
  uint64_t v57 = sub_188D5A8((unsigned int *)(a1 + 232));
  uint64_t v58 = *(int *)(a1 + 256);
  uint64_t v59 = v57 + v51 + 2 * (v58 + *(unsigned int *)(a1 + 232));
  uint64_t v60 = *(void *)(a1 + 264);
  if (v60) {
    int v61 = (uint64_t *)(v60 + 8);
  }
  else {
    int v61 = 0;
  }
  if (v58)
  {
    uint64_t v62 = 8 * v58;
    do
    {
      uint64_t v63 = *v61++;
      uint64_t v64 = sub_143E97C(v63);
      v59 += v64 + ((9 * (__clz(v64 | 1) ^ 0x1F) + 73) >> 6);
      v62 -= 8;
    }
    while (v62);
  }
  uint64_t v65 = *(int *)(a1 + 280);
  uint64_t v66 = v59 + 2 * v65;
  uint64_t v67 = *(void *)(a1 + 288);
  if (v67) {
    unint64_t v68 = (uint64_t *)(v67 + 8);
  }
  else {
    unint64_t v68 = 0;
  }
  if (v65)
  {
    uint64_t v69 = 8 * v65;
    do
    {
      uint64_t v70 = *v68++;
      uint64_t v71 = sub_143FAA4(v70);
      v66 += v71 + ((9 * (__clz(v71 | 1) ^ 0x1F) + 73) >> 6);
      v69 -= 8;
    }
    while (v69);
  }
  uint64_t v72 = *(int *)(a1 + 304);
  uint64_t v73 = v66 + 2 * v72;
  uint64_t v74 = *(void *)(a1 + 312);
  if (v74) {
    int v75 = (uint64_t *)(v74 + 8);
  }
  else {
    int v75 = 0;
  }
  if (v72)
  {
    uint64_t v76 = 8 * v72;
    do
    {
      uint64_t v77 = *v75++;
      uint64_t v78 = sub_15B2F90(v77);
      v73 += v78 + ((9 * (__clz(v78 | 1) ^ 0x1F) + 73) >> 6);
      v76 -= 8;
    }
    while (v76);
  }
  uint64_t v79 = *(int *)(a1 + 328);
  uint64_t v80 = v73 + 2 * v79;
  uint64_t v81 = *(void *)(a1 + 336);
  if (v81) {
    uint64_t v82 = (uint64_t *)(v81 + 8);
  }
  else {
    uint64_t v82 = 0;
  }
  if (v79)
  {
    uint64_t v83 = 8 * v79;
    do
    {
      uint64_t v84 = *v82++;
      uint64_t v85 = sub_144059C(v84);
      v80 += v85 + ((9 * (__clz(v85 | 1) ^ 0x1F) + 73) >> 6);
      v83 -= 8;
    }
    while (v83);
  }
  uint64_t v86 = *(int *)(a1 + 352);
  uint64_t v87 = v80 + 2 * v86;
  uint64_t v88 = *(void *)(a1 + 360);
  if (v88) {
    uint64_t v89 = (uint64_t *)(v88 + 8);
  }
  else {
    uint64_t v89 = 0;
  }
  if (v86)
  {
    uint64_t v90 = 8 * v86;
    do
    {
      uint64_t v91 = *v89++;
      uint64_t v92 = sub_14478BC(v91);
      v87 += v92 + ((9 * (__clz(v92 | 1) ^ 0x1F) + 73) >> 6);
      v90 -= 8;
    }
    while (v90);
  }
  uint64_t v93 = *(unsigned int *)(a1 + 376);
  uint64_t v94 = v87 + 2 * v93;
  if ((int)v93 >= 1)
  {
    char v95 = (uint64_t *)(*(void *)(a1 + 384) + 8);
    do
    {
      uint64_t v96 = *v95++;
      uint64_t v97 = *(unsigned __int8 *)(v96 + 23);
      uint64_t v98 = *(void *)(v96 + 8);
      if ((v97 & 0x80u) == 0) {
        uint64_t v98 = v97;
      }
      v94 += v98 + ((9 * (__clz(v98 | 1) ^ 0x1F) + 73) >> 6);
      --v93;
    }
    while (v93);
  }
  uint64_t v99 = *(unsigned int *)(a1 + 400);
  uint64_t v100 = v94 + 2 * v99;
  if ((int)v99 >= 1)
  {
    uint64_t v101 = (uint64_t *)(*(void *)(a1 + 408) + 8);
    do
    {
      uint64_t v102 = *v101++;
      uint64_t v103 = *(unsigned __int8 *)(v102 + 23);
      uint64_t v104 = *(void *)(v102 + 8);
      if ((v103 & 0x80u) == 0) {
        uint64_t v104 = v103;
      }
      v100 += v104 + ((9 * (__clz(v104 | 1) ^ 0x1F) + 73) >> 6);
      --v99;
    }
    while (v99);
  }
  uint64_t v105 = *(int *)(a1 + 424);
  uint64_t v106 = v100 + 2 * v105;
  uint64_t v107 = *(void *)(a1 + 432);
  if (v107) {
    unint64_t v108 = (uint64_t *)(v107 + 8);
  }
  else {
    unint64_t v108 = 0;
  }
  if (v105)
  {
    uint64_t v109 = 8 * v105;
    do
    {
      uint64_t v110 = *v108++;
      uint64_t v111 = sub_143DC7C(v110);
      v106 += v111 + ((9 * (__clz(v111 | 1) ^ 0x1F) + 73) >> 6);
      v109 -= 8;
    }
    while (v109);
  }
  uint64_t v112 = *(int *)(a1 + 448);
  uint64_t v113 = v106 + 2 * v112;
  uint64_t v114 = *(void *)(a1 + 456);
  if (v114) {
    uint64_t v115 = (uint64_t *)(v114 + 8);
  }
  else {
    uint64_t v115 = 0;
  }
  if (v112)
  {
    uint64_t v116 = 8 * v112;
    do
    {
      uint64_t v117 = *v115++;
      uint64_t v118 = sub_1441E90(v117);
      v113 += v118 + ((9 * (__clz(v118 | 1) ^ 0x1F) + 73) >> 6);
      v116 -= 8;
    }
    while (v116);
  }
  int v119 = *(_DWORD *)(a1 + 40);
  if (!(_BYTE)v119) {
    goto LABEL_113;
  }
  if (v119)
  {
    unint64_t v123 = *(void *)(a1 + 464) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v124 = *(unsigned __int8 *)(v123 + 23);
    uint64_t v125 = *(void *)(v123 + 8);
    if ((v124 & 0x80u) == 0) {
      uint64_t v125 = v124;
    }
    v113 += v125 + ((9 * (__clz(v125 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v119 & 2) == 0)
    {
LABEL_106:
      if ((v119 & 4) == 0) {
        goto LABEL_107;
      }
      goto LABEL_139;
    }
  }
  else if ((v119 & 2) == 0)
  {
    goto LABEL_106;
  }
  unint64_t v126 = *(void *)(a1 + 472) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v127 = *(unsigned __int8 *)(v126 + 23);
  uint64_t v128 = *(void *)(v126 + 8);
  if ((v127 & 0x80u) == 0) {
    uint64_t v128 = v127;
  }
  v113 += v128 + ((9 * (__clz(v128 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v119 & 4) == 0)
  {
LABEL_107:
    if ((v119 & 8) == 0) {
      goto LABEL_108;
    }
    goto LABEL_140;
  }
LABEL_139:
  uint64_t v129 = sub_140CC00(*(void *)(a1 + 480));
  v113 += v129 + ((9 * (__clz(v129 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v119 & 8) == 0)
  {
LABEL_108:
    if ((v119 & 0x10) == 0) {
      goto LABEL_109;
    }
    goto LABEL_141;
  }
LABEL_140:
  uint64_t v130 = sub_14191E0(*(void *)(a1 + 488));
  v113 += v130 + ((9 * (__clz(v130 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v119 & 0x10) == 0)
  {
LABEL_109:
    if ((v119 & 0x20) == 0) {
      goto LABEL_110;
    }
LABEL_142:
    uint64_t v132 = sub_143CE14(*(void *)(a1 + 504));
    v113 += v132 + ((9 * (__clz(v132 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v119 & 0x40) == 0)
    {
LABEL_111:
      if ((v119 & 0x80) == 0) {
        goto LABEL_113;
      }
      goto LABEL_112;
    }
    goto LABEL_143;
  }
LABEL_141:
  uint64_t v131 = sub_1440EFC(*(void *)(a1 + 496));
  v113 += v131 + ((9 * (__clz(v131 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v119 & 0x20) != 0) {
    goto LABEL_142;
  }
LABEL_110:
  if ((v119 & 0x40) == 0) {
    goto LABEL_111;
  }
LABEL_143:
  v113 += ((9 * (__clz(*(void *)(a1 + 512) | 1) ^ 0x3F) + 73) >> 6) + 1;
  if ((v119 & 0x80) != 0) {
LABEL_112:
  }
    v113 += ((9 * (__clz(*(void *)(a1 + 520) | 1) ^ 0x3F) + 73) >> 6) + 1;
LABEL_113:
  if ((v119 & 0xFF00) == 0) {
    goto LABEL_129;
  }
  if ((v119 & 0x100) != 0) {
    v113 += ((9 * (__clz(*(void *)(a1 + 528) | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
  if ((v119 & 0x200) != 0) {
    v113 += ((9 * (__clz(*(void *)(a1 + 536) | 1) ^ 0x3F) + 73) >> 6) + 2;
  }
  uint64_t v120 = v113 + 2;
  if ((v119 & 0x400) == 0) {
    uint64_t v120 = v113;
  }
  if ((v119 & 0x800) != 0) {
    v120 += 3;
  }
  if ((v119 & 0x1000) != 0) {
    uint64_t v113 = v120 + 6;
  }
  else {
    uint64_t v113 = v120;
  }
  if ((v119 & 0x2000) != 0)
  {
    int v133 = *(_DWORD *)(a1 + 552);
    uint64_t v134 = ((9 * (__clz(v133 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if (v133 >= 0) {
      uint64_t v135 = v134;
    }
    else {
      uint64_t v135 = 12;
    }
    v113 += v135;
    if ((v119 & 0x4000) == 0)
    {
LABEL_127:
      if ((v119 & 0x8000) == 0) {
        goto LABEL_129;
      }
      goto LABEL_128;
    }
  }
  else if ((v119 & 0x4000) == 0)
  {
    goto LABEL_127;
  }
  int v136 = *(_DWORD *)(a1 + 556);
  uint64_t v137 = ((9 * (__clz(v136 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if (v136 >= 0) {
    uint64_t v138 = v137;
  }
  else {
    uint64_t v138 = 12;
  }
  v113 += v138;
  if ((v119 & 0x8000) != 0) {
LABEL_128:
  }
    v113 += ((9 * (__clz(*(void *)(a1 + 560) | 1) ^ 0x3F) + 73) >> 6) + 2;
LABEL_129:
  if ((v119 & 0x10000) != 0) {
    v113 += ((9 * (__clz(*(void *)(a1 + 568) | 1) ^ 0x3F) + 73) >> 6) + 2;
  }
  uint64_t v121 = *(void *)(a1 + 8);
  if (v121)
  {
    unint64_t v139 = v121 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v139 + 31) < 0) {
      uint64_t v140 = *(void *)(v139 + 16);
    }
    else {
      uint64_t v140 = *(unsigned __int8 *)(v139 + 31);
    }
    v113 += v140;
  }
  *(_DWORD *)(a1 + 44) = v113;
  return v113;
}

uint64_t sub_14458D8(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 8);
  if ((int)v1 < 1) {
    return 1;
  }
  uint64_t v2 = v1 + 1;
  for (unsigned int i = v1 - 1; ; --i)
  {
    uint64_t v4 = *(void *)(*(void *)(a1 + 16) + 8 * i + 8);
    if ((*(unsigned char *)(v4 + 16) & 1) != 0 && (~*(_DWORD *)(*(void *)(v4 + 96) + 16) & 9) != 0) {
      break;
    }
    if (--v2 <= 1) {
      return 1;
    }
  }
  return 0;
}

void *sub_1445934@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gemini.BusinessCardCollection");
}

void *sub_1445944(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_124DD4C(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_14459C4(void *a1)
{
  sub_1445944(a1);

  operator delete();
}

uint64_t sub_14459FC(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_14532E4(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  if ((*(unsigned char *)(v1 + 16) & 3) != 0) {
    *(void *)(v1 + 48) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = v1 + 8;
  *(_DWORD *)(v5 + 8) = 0;
  if (v6)
  {
    return sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

char *sub_1445A8C(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v32 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v32, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v32 + 1;
    unsigned int v9 = *v32;
    if (*v32 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v32, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v32 + 2;
      }
    }
    int v32 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 == 3)
    {
      if (v9 != 24) {
        goto LABEL_14;
      }
      v5 |= 2u;
      uint64_t v16 = v8 + 1;
      int v17 = *v8;
      if ((*v8 & 0x80000000) == 0) {
        goto LABEL_26;
      }
      int v18 = *v16;
      int v17 = v17 + (v18 << 7) - 128;
      if ((v18 & 0x80000000) == 0)
      {
        uint64_t v16 = v8 + 2;
LABEL_26:
        int v32 = v16;
        *(_DWORD *)(a1 + 52) = v17;
        goto LABEL_44;
      }
      uint64_t v28 = (char *)sub_188C0D0((uint64_t)v8, v17);
      int v32 = v28;
      *(_DWORD *)(a1 + 52) = v29;
      if (!v28) {
        goto LABEL_49;
      }
      goto LABEL_44;
    }
    if (v12 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_14;
    }
    v5 |= 1u;
    uint64_t v19 = v8 + 1;
    int v20 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_31;
    }
    int v21 = *v19;
    int v20 = v20 + (v21 << 7) - 128;
    if ((v21 & 0x80000000) == 0)
    {
      uint64_t v19 = v8 + 2;
LABEL_31:
      int v32 = v19;
      *(_DWORD *)(a1 + 48) = v20;
      goto LABEL_44;
    }
    uint64_t v30 = (char *)sub_188C0D0((uint64_t)v8, v20);
    int v32 = v30;
    *(_DWORD *)(a1 + 48) = v31;
    if (!v30) {
      goto LABEL_49;
    }
LABEL_44:
    if (sub_11947B8((uint64_t)a3, &v32, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v12 == 1 && v9 == 10)
  {
    uint64_t v22 = v8 - 1;
    while (1)
    {
      uint64_t v23 = (unsigned __int8 *)(v22 + 1);
      int v32 = v22 + 1;
      uint64_t v24 = *(_DWORD **)(a1 + 40);
      if (v24 && (uint64_t v25 = *(int *)(a1 + 32), (int)v25 < *v24))
      {
        *(_DWORD *)(a1 + 32) = v25 + 1;
        uint64_t v26 = *(void *)&v24[2 * v25 + 2];
      }
      else
      {
        uint64_t v27 = sub_14785D4(*(void *)(a1 + 24));
        uint64_t v26 = sub_188CDC8(a1 + 24, v27);
        uint64_t v23 = (unsigned __int8 *)v32;
      }
      uint64_t v22 = sub_123AF74(a3, v26, v23);
      int v32 = v22;
      if (!v22) {
        goto LABEL_49;
      }
      if (*(void *)a3 <= (unint64_t)v22 || *v22 != 10) {
        goto LABEL_44;
      }
    }
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (*v7)
    {
      uint64_t v15 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = v32;
    }
    int v32 = (char *)sub_1885AC0(v9, v15, v8, a3);
    if (!v32) {
      goto LABEL_49;
    }
    goto LABEL_44;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_49:
  int v32 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v32;
}

char *sub_1445D14(uint64_t a1, char *__dst, _DWORD *a3)
{
  int v6 = *(_DWORD *)(a1 + 32);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 56);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unsigned int v10 = __dst + 2;
      }
      __dst = sub_14536EC(v8, v10, a3);
    }
  }
  int v11 = *(_DWORD *)(a1 + 16);
  if (v11)
  {
    if (*(void *)a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unsigned int v12 = *(_DWORD *)(a1 + 48);
    *__dst = 16;
    __dst[1] = v12;
    if (v12 > 0x7F)
    {
      __dst[1] = v12 | 0x80;
      unsigned int v13 = v12 >> 7;
      __dst[2] = v12 >> 7;
      __dst += 3;
      if (v12 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unsigned int v14 = v13 >> 14;
          v13 >>= 7;
          *__dst++ = v13;
        }
        while (v14);
      }
    }
    else
    {
      __dst += 2;
    }
  }
  if ((v11 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unsigned int v15 = *(_DWORD *)(a1 + 52);
    *__dst = 24;
    __dst[1] = v15;
    if (v15 > 0x7F)
    {
      __dst[1] = v15 | 0x80;
      unsigned int v16 = v15 >> 7;
      __dst[2] = v15 >> 7;
      __dst += 3;
      if (v15 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unsigned int v17 = v16 >> 14;
          v16 >>= 7;
          *__dst++ = v16;
        }
        while (v17);
      }
    }
    else
    {
      __dst += 2;
    }
  }
  uint64_t v18 = *(void *)(a1 + 8);
  if ((v18 & 1) == 0) {
    return __dst;
  }
  unint64_t v20 = v18 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v20 + 31) < 0)
  {
    int v21 = *(void **)(v20 + 8);
    uint64_t v22 = *(void *)(v20 + 16);
  }
  else
  {
    int v21 = (void *)(v20 + 8);
    LODWORD(v22) = *(unsigned __int8 *)(v20 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v22)
  {
    uint64_t v23 = (int)v22;
    memcpy(__dst, v21, (int)v22);
    __dst += v23;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v21, v22, __dst);
}

uint64_t sub_1445F54(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_14538CC(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 3) != 0)
  {
    if (v8) {
      v2 += ((9 * (__clz(*(_DWORD *)(a1 + 48) | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v8 & 2) != 0) {
      v2 += ((9 * (__clz(*(_DWORD *)(a1 + 52) | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    v2 += v12;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_1446060(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = (std::string *)sub_124E8CC((uint64_t *)&v3[1], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2]- LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    int v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *int v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 3) != 0)
  {
    if (v9) {
      LODWORD(v3[2].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 48);
    }
    if ((v9 & 2) != 0) {
      HIDWORD(v3[2].__r_.__value_.__r.__words[0]) = *(_DWORD *)(a2 + 52);
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= v9;
  }
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1446160()
{
  return 1;
}

void *sub_1446168@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gemini.LocationBasedRank.TimeBasedRank");
}

void *sub_1446178(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_149107C(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_14461F8(void *a1)
{
  sub_1446178(a1);

  operator delete();
}

uint64_t sub_1446230(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_14459FC(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  if ((*(unsigned char *)(v1 + 16) & 3) != 0)
  {
    *(void *)(v1 + 48) = 0;
    *(void *)(v1 + 56) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = v1 + 8;
  *(_DWORD *)(v5 + 8) = 0;
  if (v6)
  {
    return sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

char *sub_14462C0(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v32 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v32, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (1)
  {
    int v8 = v32 + 1;
    unsigned int v9 = *v32;
    if (*v32 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        int v8 = (char *)sub_188C180((uint64_t)v32, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        int v8 = v32 + 2;
      }
    }
    int v32 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 == 3) {
      break;
    }
    if (v12 == 2)
    {
      if (v9 != 16) {
        goto LABEL_14;
      }
      v5 |= 2u;
      uint64_t v22 = v8 + 1;
      uint64_t v23 = *v8;
      if ((*v8 & 0x80000000) == 0) {
        goto LABEL_36;
      }
      int v24 = *v22;
      uint64_t v23 = v23 + (v24 << 7) - 128;
      if ((v24 & 0x80000000) == 0)
      {
        uint64_t v22 = v8 + 2;
LABEL_36:
        int v32 = v22;
        *(void *)(a1 + 56) = v23;
        goto LABEL_41;
      }
      uint64_t v28 = (char *)sub_188C138((uint64_t)v8, v23);
      int v32 = v28;
      *(void *)(a1 + 56) = v29;
      if (!v28) {
        goto LABEL_50;
      }
    }
    else
    {
      if (v12 != 1 || v9 != 8) {
        goto LABEL_14;
      }
      v5 |= 1u;
      uint64_t v25 = v8 + 1;
      uint64_t v26 = *v8;
      if ((*v8 & 0x80000000) == 0) {
        goto LABEL_40;
      }
      int v27 = *v25;
      uint64_t v26 = v26 + (v27 << 7) - 128;
      if ((v27 & 0x80000000) == 0)
      {
        uint64_t v25 = v8 + 2;
LABEL_40:
        int v32 = v25;
        *(void *)(a1 + 48) = v26;
        goto LABEL_41;
      }
      uint64_t v30 = (char *)sub_188C138((uint64_t)v8, v26);
      int v32 = v30;
      *(void *)(a1 + 48) = v31;
      if (!v30) {
        goto LABEL_50;
      }
    }
LABEL_41:
    if (sub_11947B8((uint64_t)a3, &v32, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 == 26)
  {
    unsigned int v16 = v8 - 1;
    while (1)
    {
      unsigned int v17 = (unsigned __int8 *)(v16 + 1);
      int v32 = v16 + 1;
      uint64_t v18 = *(_DWORD **)(a1 + 40);
      if (v18 && (uint64_t v19 = *(int *)(a1 + 32), (int)v19 < *v18))
      {
        *(_DWORD *)(a1 + 32) = v19 + 1;
        uint64_t v20 = *(void *)&v18[2 * v19 + 2];
      }
      else
      {
        int v21 = sub_144CBDC(*(void *)(a1 + 24));
        uint64_t v20 = sub_188CDC8(a1 + 24, (uint64_t)v21);
        unsigned int v17 = (unsigned __int8 *)v32;
      }
      unsigned int v16 = sub_1446548(a3, v20, v17);
      int v32 = v16;
      if (!v16) {
        goto LABEL_50;
      }
      if (*(void *)a3 <= (unint64_t)v16 || *v16 != 26) {
        goto LABEL_41;
      }
    }
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (*v7)
    {
      unsigned int v15 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unsigned int v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v8 = v32;
    }
    int v32 = (char *)sub_1885AC0(v9, v15, v8, a3);
    if (!v32) {
      goto LABEL_50;
    }
    goto LABEL_41;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_50:
  int v32 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v32;
}

char *sub_1446548(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1445A8C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_14465D8(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(void *)(a1 + 48);
    char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(void *)(a1 + 56);
    char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v13 = *(_DWORD *)(a1 + 32);
  if (v13)
  {
    for (int i = 0; i != v13; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v15 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      char *v4 = 26;
      unsigned int v16 = *(_DWORD *)(v15 + 20);
      v4[1] = v16;
      if (v16 > 0x7F) {
        unsigned int v17 = sub_188A9CC(v16, v4 + 1);
      }
      else {
        unsigned int v17 = v4 + 2;
      }
      uint64_t v4 = sub_1445D14(v15, v17, a3);
    }
  }
  uint64_t v18 = *(void *)(a1 + 8);
  if ((v18 & 1) == 0) {
    return v4;
  }
  unint64_t v20 = v18 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v20 + 31) < 0)
  {
    int v21 = *(void **)(v20 + 8);
    uint64_t v22 = *(void *)(v20 + 16);
  }
  else
  {
    int v21 = (void *)(v20 + 8);
    LODWORD(v22) = *(unsigned __int8 *)(v20 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v22)
  {
    uint64_t v23 = (int)v22;
    memcpy(v4, v21, (int)v22);
    v4 += v23;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v21, v22, v4);
}

uint64_t sub_1446818(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_1445F54(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 3) != 0)
  {
    if (v8) {
      v2 += ((9 * (__clz(*(void *)(a1 + 48) | 1) ^ 0x3F) + 73) >> 6) + 1;
    }
    if ((v8 & 2) != 0) {
      v2 += ((9 * (__clz(*(void *)(a1 + 56) | 1) ^ 0x3F) + 73) >> 6) + 1;
    }
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    v2 += v12;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_144691C(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = sub_1492CF8(v3 + 1, v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2] - LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    int v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *int v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 3) != 0)
  {
    if (v9) {
      v3[2].__r_.__value_.__r.__words[0] = *(void *)(a2 + 48);
    }
    if ((v9 & 2) != 0) {
      v3[2].__r_.__value_.__l.__size_ = *(void *)(a2 + 56);
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= v9;
  }
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1446A1C()
{
  return 1;
}

void *sub_1446A24@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gemini.LocationBasedRank.TimeBoundedRank");
}

uint64_t sub_1446A34(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_14;
    }
  }
  else if (v4)
  {
    goto LABEL_14;
  }
  uint64_t v5 = (void ***)(a1 + 96);
  if (*(uint64_t **)(a1 + 96) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_2538DF0)
  {
    uint64_t v6 = *(void *)(a1 + 104);
    if (v6)
    {
      sub_15B1678(v6);
      operator delete();
    }
    if (*(void *)(a1 + 112))
    {
      sub_15B6D48();
      operator delete();
    }
    if (*(void *)(a1 + 120))
    {
      sub_15B0994();
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_14:
  sub_1889DE8((void *)(a1 + 72));
  sub_14910FC((void *)(a1 + 48));
  sub_149107C((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1446B60(uint64_t a1)
{
  sub_1446A34(a1);

  operator delete();
}

uint64_t sub_1446B98(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(a1 + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      sub_14459FC(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(a1 + 32) = 0;
  }
  uint64_t v5 = *(unsigned int *)(a1 + 56);
  if ((int)v5 >= 1)
  {
    uint64_t v6 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v7 = *v6++;
      sub_1446230(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(a1 + 56) = 0;
  }
  uint64_t result = sub_188CC00(a1 + 72);
  int v9 = *(_DWORD *)(a1 + 16);
  if ((v9 & 0xF) == 0) {
    goto LABEL_15;
  }
  if ((v9 & 1) == 0)
  {
    if ((v9 & 2) == 0) {
      goto LABEL_12;
    }
LABEL_25:
    uint64_t result = (uint64_t)sub_15B16B4(*(unsigned char **)(a1 + 104));
    if ((v9 & 4) == 0)
    {
LABEL_13:
      if ((v9 & 8) == 0) {
        goto LABEL_15;
      }
      goto LABEL_14;
    }
    goto LABEL_26;
  }
  unint64_t v12 = *(void *)(a1 + 96) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v12 + 23) < 0)
  {
    **(unsigned char **)unint64_t v12 = 0;
    *(void *)(v12 + 8) = 0;
    if ((v9 & 2) != 0) {
      goto LABEL_25;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v12 = 0;
    *(unsigned char *)(v12 + 23) = 0;
    if ((v9 & 2) != 0) {
      goto LABEL_25;
    }
  }
LABEL_12:
  if ((v9 & 4) == 0) {
    goto LABEL_13;
  }
LABEL_26:
  uint64_t result = sub_15B6D84(*(void *)(a1 + 112));
  if ((v9 & 8) != 0) {
LABEL_14:
  }
    uint64_t result = (uint64_t)sub_15B09D0(*(void *)(a1 + 120));
LABEL_15:
  if ((v9 & 0x70) != 0)
  {
    *(void *)(a1 + 128) = 0;
    *(void *)(a1 + 136) = 0;
    *(_DWORD *)(a1 + 144) = 0;
  }
  char v11 = *(unsigned char *)(a1 + 8);
  uint64_t v10 = a1 + 8;
  *(_DWORD *)(v10 + 8) = 0;
  if (v11)
  {
    return sub_188B4AC((uint64_t *)v10);
  }
  return result;
}

uint64_t sub_1446CC8(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v60 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v60, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (uint64_t **)(a1 + 72);
  int v8 = (void *)(a1 + 8);
  while (2)
  {
    int v9 = (unsigned __int8 *)(*(void *)v60 + 1);
    unsigned int v10 = **(unsigned char **)v60;
    if ((char)**(unsigned char **)v60 < 0)
    {
      unsigned int v11 = v10 + (*v9 << 7);
      unsigned int v10 = v11 - 128;
      if ((char)*v9 < 0)
      {
        int v9 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v60, v11 - 128);
        unsigned int v10 = v12;
      }
      else
      {
        int v9 = (unsigned __int8 *)(*(void *)v60 + 2);
      }
    }
    *(void *)uint64_t v60 = v9;
    switch(v10 >> 3)
    {
      case 1u:
        if (v10 != 8) {
          goto LABEL_80;
        }
        v5 |= 0x10u;
        int v13 = (char *)(v9 + 1);
        uint64_t v14 = *v9;
        if (((char)*v9 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v15 = *v13;
        uint64_t v14 = v14 + (v15 << 7) - 128;
        if ((v15 & 0x80000000) == 0)
        {
          int v13 = (char *)(v9 + 2);
LABEL_13:
          *(void *)uint64_t v60 = v13;
          *(void *)(a1 + 128) = v14;
          goto LABEL_88;
        }
        uint64_t v54 = sub_188C138((uint64_t)v9, v14);
        *(void *)uint64_t v60 = v54;
        *(void *)(a1 + 128) = v55;
        if (v54) {
          goto LABEL_88;
        }
        goto LABEL_103;
      case 2u:
        if (v10 != 18) {
          goto LABEL_80;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v16 = *(void *)(a1 + 104);
        if (!v16)
        {
          unsigned int v17 = (void *)(*v8 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v8) {
            unsigned int v17 = (void *)*v17;
          }
          uint64_t v16 = sub_15C19EC((uint64_t)v17);
          *(void *)(a1 + 104) = v16;
          int v9 = *(unsigned __int8 **)v60;
        }
        uint64_t v18 = sub_11E1C60(a3, v16, v9);
        goto LABEL_87;
      case 3u:
        if (v10 != 26) {
          goto LABEL_80;
        }
        uint64_t v19 = (char *)(v9 - 1);
        while (1)
        {
          unint64_t v20 = (unsigned __int8 *)(v19 + 1);
          *(void *)uint64_t v60 = v19 + 1;
          int v21 = *(_DWORD **)(a1 + 40);
          if (v21 && (uint64_t v22 = *(int *)(a1 + 32), (int)v22 < *v21))
          {
            *(_DWORD *)(a1 + 32) = v22 + 1;
            uint64_t v23 = *(void *)&v21[2 * v22 + 2];
          }
          else
          {
            int v24 = sub_144CBDC(*(void *)(a1 + 24));
            uint64_t v23 = sub_188CDC8(a1 + 24, (uint64_t)v24);
            unint64_t v20 = *(unsigned __int8 **)v60;
          }
          uint64_t v19 = sub_1446548(a3, v23, v20);
          *(void *)uint64_t v60 = v19;
          if (!v19) {
            goto LABEL_103;
          }
          if (*(void *)a3 <= (unint64_t)v19 || *v19 != 26) {
            goto LABEL_88;
          }
        }
      case 4u:
        if (v10 != 34) {
          goto LABEL_80;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v25 = *(void *)(a1 + 8);
        uint64_t v26 = (uint64_t *)(v25 & 0xFFFFFFFFFFFFFFFCLL);
        if (v25) {
          uint64_t v26 = (uint64_t *)*v26;
        }
        int v27 = (std::string *)sub_1880F84((void *)(a1 + 96), v26);
        uint64_t v18 = (void *)sub_188C244(v27, *(char **)v60, (uint64_t)a3);
        goto LABEL_87;
      case 5u:
        if (v10 != 42) {
          goto LABEL_80;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v28 = *(void **)(a1 + 112);
        if (!v28)
        {
          uint64_t v29 = (void *)(*v8 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v8) {
            uint64_t v29 = (void *)*v29;
          }
          uint64_t v28 = sub_15C1E94((uint64_t)v29);
          *(void *)(a1 + 112) = v28;
          int v9 = *(unsigned __int8 **)v60;
        }
        uint64_t v18 = sub_11EA9CC(a3, (uint64_t)v28, v9);
        goto LABEL_87;
      case 6u:
        if (v10 != 50) {
          goto LABEL_80;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v30 = *(void *)(a1 + 120);
        if (!v30)
        {
          uint64_t v31 = (void *)(*v8 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v8) {
            uint64_t v31 = (void *)*v31;
          }
          uint64_t v30 = sub_15C1918((uint64_t)v31);
          *(void *)(a1 + 120) = v30;
          int v9 = *(unsigned __int8 **)v60;
        }
        uint64_t v18 = sub_1198F14(a3, v30, v9);
        goto LABEL_87;
      case 7u:
        if (v10 != 56) {
          goto LABEL_80;
        }
        int v32 = (char *)(v9 + 1);
        unint64_t v33 = *v9;
        if (((char)*v9 & 0x80000000) == 0) {
          goto LABEL_50;
        }
        int v34 = *v32;
        int v35 = v33 + (v34 << 7);
        unint64_t v33 = (v35 - 128);
        if (v34 < 0)
        {
          *(void *)uint64_t v60 = sub_188C138((uint64_t)v9, (v35 - 128));
          if (!*(void *)v60) {
            goto LABEL_103;
          }
          unint64_t v33 = v56;
        }
        else
        {
          int v32 = (char *)(v9 + 2);
LABEL_50:
          *(void *)uint64_t v60 = v32;
        }
        if (sub_16BAF04(v33))
        {
          *(_DWORD *)(a1 + 16) |= 0x40u;
          *(_DWORD *)(a1 + 144) = v33;
        }
        else
        {
          if (*v8) {
            uint64_t v59 = (std::string *)((*v8 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v59 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(7, v33, v59);
        }
        goto LABEL_88;
      case 8u:
        if (v10 != 66) {
          goto LABEL_80;
        }
        uint64_t v36 = (char *)(v9 - 1);
        while (1)
        {
          uint64_t v37 = (unsigned __int8 *)(v36 + 1);
          *(void *)uint64_t v60 = v36 + 1;
          uint64_t v38 = *(_DWORD **)(a1 + 64);
          if (v38 && (uint64_t v39 = *(int *)(a1 + 56), (int)v39 < *v38))
          {
            *(_DWORD *)(a1 + 56) = v39 + 1;
            uint64_t v40 = *(void *)&v38[2 * v39 + 2];
          }
          else
          {
            uint64_t v41 = sub_144CC78(*(void *)(a1 + 48));
            uint64_t v40 = sub_188CDC8(a1 + 48, v41);
            uint64_t v37 = *(unsigned __int8 **)v60;
          }
          uint64_t v36 = sub_14472E8(a3, v40, v37);
          *(void *)uint64_t v60 = v36;
          if (!v36) {
            goto LABEL_103;
          }
          if (*(void *)a3 <= (unint64_t)v36 || *v36 != 66) {
            goto LABEL_88;
          }
        }
      case 9u:
        if (v10 != 74) {
          goto LABEL_80;
        }
        uint64_t v42 = (const std::string::value_type *)(v9 - 1);
        while (1)
        {
          uint64_t v43 = (char *)(v42 + 1);
          *(void *)uint64_t v60 = v42 + 1;
          uint64_t v44 = *(_DWORD **)(a1 + 88);
          if (v44 && (uint64_t v45 = *(int *)(a1 + 80), (int)v45 < *v44))
          {
            *(_DWORD *)(a1 + 80) = v45 + 1;
            uint64_t v46 = *(std::string **)&v44[2 * v45 + 2];
          }
          else
          {
            if (!*v7) {
              operator new();
            }
            void *v48 = v47;
            v48[1] = sub_3A6EDC;
            *uint64_t v47 = 0;
            v47[1] = 0;
            v47[2] = 0;
            uint64_t v46 = (std::string *)sub_188CDC8(a1 + 72, (uint64_t)v47);
            uint64_t v43 = *(char **)v60;
          }
          uint64_t v42 = sub_188C244(v46, v43, (uint64_t)a3);
          *(void *)uint64_t v60 = v42;
          if (!v42) {
            goto LABEL_103;
          }
          if (*(void *)a3 <= (unint64_t)v42 || *v42 != 74) {
            goto LABEL_88;
          }
        }
      case 0xAu:
        if (v10 != 80) {
          goto LABEL_80;
        }
        v5 |= 0x20u;
        uint64_t v49 = (char *)(v9 + 1);
        uint64_t v50 = *v9;
        if (((char)*v9 & 0x80000000) == 0) {
          goto LABEL_79;
        }
        int v51 = *v49;
        uint64_t v50 = v50 + (v51 << 7) - 128;
        if (v51 < 0)
        {
          uint64_t v57 = sub_188C138((uint64_t)v9, v50);
          *(void *)uint64_t v60 = v57;
          *(void *)(a1 + 136) = v58;
          if (!v57) {
            goto LABEL_103;
          }
        }
        else
        {
          uint64_t v49 = (char *)(v9 + 2);
LABEL_79:
          *(void *)uint64_t v60 = v49;
          *(void *)(a1 + 136) = v50;
        }
        goto LABEL_88;
      default:
LABEL_80:
        if (v10) {
          BOOL v52 = (v10 & 7) == 4;
        }
        else {
          BOOL v52 = 1;
        }
        if (!v52)
        {
          if (*v8)
          {
            int v53 = (std::string *)((*v8 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            int v53 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            int v9 = *(unsigned __int8 **)v60;
          }
          uint64_t v18 = sub_1885AC0(v10, v53, (char *)v9, a3);
LABEL_87:
          *(void *)uint64_t v60 = v18;
          if (!v18) {
            goto LABEL_103;
          }
LABEL_88:
          if (sub_11947B8((uint64_t)a3, (char **)v60, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v9) {
          a3[10].i32[0] = v10 - 1;
        }
        else {
LABEL_103:
        }
          *(void *)uint64_t v60 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v60;
    }
  }
}

char *sub_14472E8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_14462C0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1447378(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(void *)(a1 + 128);
    char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 104);
    char *v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 20);
    v4[1] = v11;
    if (v11 > 0x7F) {
      unsigned int v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      unsigned int v12 = v4 + 2;
    }
    uint64_t v4 = sub_15B1A68(v10, (unint64_t)v12, a3);
  }
  int v13 = *(_DWORD *)(a1 + 32);
  if (v13)
  {
    for (int i = 0; i != v13; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v15 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      char *v4 = 26;
      unsigned int v16 = *(_DWORD *)(v15 + 20);
      v4[1] = v16;
      if (v16 > 0x7F) {
        unsigned int v17 = sub_188A9CC(v16, v4 + 1);
      }
      else {
        unsigned int v17 = v4 + 2;
      }
      uint64_t v4 = sub_1445D14(v15, v17, a3);
    }
  }
  if (v6)
  {
    uint64_t v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 96) & 0xFFFFFFFFFFFFFFFELL), v4);
    if ((v6 & 4) == 0)
    {
LABEL_25:
      if ((v6 & 8) == 0) {
        goto LABEL_26;
      }
      goto LABEL_35;
    }
  }
  else if ((v6 & 4) == 0)
  {
    goto LABEL_25;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v18 = *(void *)(a1 + 112);
  char *v4 = 42;
  unsigned int v19 = *(_DWORD *)(v18 + 20);
  v4[1] = v19;
  if (v19 > 0x7F) {
    unint64_t v20 = sub_188A9CC(v19, v4 + 1);
  }
  else {
    unint64_t v20 = v4 + 2;
  }
  uint64_t v4 = sub_15B7AE4(v18, v20, a3);
  if ((v6 & 8) == 0)
  {
LABEL_26:
    if ((v6 & 0x40) == 0) {
      goto LABEL_47;
    }
    goto LABEL_41;
  }
LABEL_35:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v21 = *(void *)(a1 + 120);
  char *v4 = 50;
  unsigned int v22 = *(_DWORD *)(v21 + 44);
  v4[1] = v22;
  if (v22 > 0x7F) {
    uint64_t v23 = sub_188A9CC(v22, v4 + 1);
  }
  else {
    uint64_t v23 = v4 + 2;
  }
  uint64_t v4 = sub_15B0C0C(v21, v23, a3);
  if ((v6 & 0x40) != 0)
  {
LABEL_41:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v24 = *(int *)(a1 + 144);
    char *v4 = 56;
    v4[1] = v24;
    if (v24 > 0x7F)
    {
      v4[1] = v24 | 0x80;
      unint64_t v25 = v24 >> 7;
      v4[2] = v24 >> 7;
      v4 += 3;
      if (v24 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v26 = v25 >> 14;
          v25 >>= 7;
          *v4++ = v25;
        }
        while (v26);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_47:
  int v27 = *(_DWORD *)(a1 + 56);
  if (v27)
  {
    for (int j = 0; j != v27; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v29 = *(void *)(*(void *)(a1 + 64) + 8 * j + 8);
      char *v4 = 66;
      unsigned int v30 = *(_DWORD *)(v29 + 20);
      v4[1] = v30;
      if (v30 > 0x7F) {
        uint64_t v31 = sub_188A9CC(v30, v4 + 1);
      }
      else {
        uint64_t v31 = v4 + 2;
      }
      uint64_t v4 = sub_14465D8(v29, (unint64_t)v31, a3);
    }
  }
  uint64_t v32 = *(unsigned int *)(a1 + 80);
  if ((int)v32 >= 1)
  {
    uint64_t v33 = 0;
    uint64_t v34 = 8 * v32;
    do
    {
      int v35 = *(void **)(*(void *)(a1 + 88) + v33 + 8);
      if (*((char *)v35 + 23) < 0)
      {
        int64_t v36 = v35[1];
        if (v36 > 127) {
          goto LABEL_66;
        }
      }
      else
      {
        int64_t v36 = *((unsigned __int8 *)v35 + 23);
      }
      if ((uint64_t)(*a3 - (void)v4 + 14) >= v36)
      {
        char *v4 = 74;
        v4[1] = v36;
        if (*((char *)v35 + 23) < 0) {
          int v35 = (void *)*v35;
        }
        uint64_t v37 = v4 + 2;
        memcpy(v37, v35, v36);
        uint64_t v4 = &v37[v36];
        goto LABEL_64;
      }
LABEL_66:
      uint64_t v4 = (char *)sub_188A868(a3, 9, (uint64_t)v35, v4);
LABEL_64:
      v33 += 8;
    }
    while (v34 != v33);
  }
  if ((v6 & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v38 = *(void *)(a1 + 136);
    char *v4 = 80;
    v4[1] = v38;
    if (v38 > 0x7F)
    {
      v4[1] = v38 | 0x80;
      unint64_t v39 = v38 >> 7;
      v4[2] = v38 >> 7;
      v4 += 3;
      if (v38 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v40 = v39 >> 14;
          v39 >>= 7;
          *v4++ = v39;
        }
        while (v40);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v41 = *(void *)(a1 + 8);
  if ((v41 & 1) == 0) {
    return v4;
  }
  unint64_t v43 = v41 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v43 + 31) < 0)
  {
    uint64_t v44 = *(void **)(v43 + 8);
    uint64_t v45 = *(void *)(v43 + 16);
  }
  else
  {
    uint64_t v44 = (void *)(v43 + 8);
    LODWORD(v45) = *(unsigned __int8 *)(v43 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v45)
  {
    uint64_t v46 = (int)v45;
    memcpy(v4, v44, (int)v45);
    v4 += v46;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v44, v45, v4);
}

uint64_t sub_14478BC(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_1445F54(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(int *)(a1 + 56);
  uint64_t v9 = v2 + v8;
  uint64_t v10 = *(void *)(a1 + 64);
  if (v10) {
    unsigned int v11 = (uint64_t *)(v10 + 8);
  }
  else {
    unsigned int v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_1446818(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  uint64_t v15 = *(unsigned int *)(a1 + 80);
  uint64_t v16 = v9 + v15;
  if ((int)v15 >= 1)
  {
    unsigned int v17 = (uint64_t *)(*(void *)(a1 + 88) + 8);
    do
    {
      uint64_t v18 = *v17++;
      uint64_t v19 = *(unsigned __int8 *)(v18 + 23);
      uint64_t v20 = *(void *)(v18 + 8);
      if ((v19 & 0x80u) == 0) {
        uint64_t v20 = v19;
      }
      v16 += v20 + ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6);
      --v15;
    }
    while (v15);
  }
  int v21 = *(_DWORD *)(a1 + 16);
  if ((v21 & 0x7F) != 0)
  {
    if (v21)
    {
      unint64_t v27 = *(void *)(a1 + 96) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v28 = *(unsigned __int8 *)(v27 + 23);
      uint64_t v29 = *(void *)(v27 + 8);
      if ((v28 & 0x80u) == 0) {
        uint64_t v29 = v28;
      }
      v16 += v29 + ((9 * (__clz(v29 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v21 & 2) == 0)
      {
LABEL_23:
        if ((v21 & 4) == 0) {
          goto LABEL_24;
        }
        goto LABEL_38;
      }
    }
    else if ((v21 & 2) == 0)
    {
      goto LABEL_23;
    }
    uint64_t v30 = sub_15B1D1C(*(void *)(a1 + 104));
    v16 += v30 + ((9 * (__clz(v30 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v21 & 4) == 0)
    {
LABEL_24:
      if ((v21 & 8) == 0) {
        goto LABEL_25;
      }
      goto LABEL_39;
    }
LABEL_38:
    uint64_t v31 = sub_15B806C(*(void *)(a1 + 112));
    v16 += v31 + ((9 * (__clz(v31 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v21 & 8) == 0)
    {
LABEL_25:
      if ((v21 & 0x10) == 0) {
        goto LABEL_26;
      }
      goto LABEL_40;
    }
LABEL_39:
    uint64_t v32 = sub_15B0D90(*(void *)(a1 + 120));
    v16 += v32 + ((9 * (__clz(v32 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v21 & 0x10) == 0)
    {
LABEL_26:
      if ((v21 & 0x20) == 0) {
        goto LABEL_27;
      }
      goto LABEL_41;
    }
LABEL_40:
    v16 += ((9 * (__clz(*(void *)(a1 + 128) | 1) ^ 0x3F) + 73) >> 6) + 1;
    if ((v21 & 0x20) == 0)
    {
LABEL_27:
      if ((v21 & 0x40) == 0) {
        goto LABEL_32;
      }
LABEL_28:
      int v22 = *(_DWORD *)(a1 + 144);
      uint64_t v23 = ((9 * (__clz(v22 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if (v22 >= 0) {
        uint64_t v24 = v23;
      }
      else {
        uint64_t v24 = 11;
      }
      v16 += v24;
      goto LABEL_32;
    }
LABEL_41:
    v16 += ((9 * (__clz(*(void *)(a1 + 136) | 1) ^ 0x3F) + 73) >> 6) + 1;
    if ((v21 & 0x40) == 0) {
      goto LABEL_32;
    }
    goto LABEL_28;
  }
LABEL_32:
  uint64_t v25 = *(void *)(a1 + 8);
  if (v25)
  {
    unint64_t v33 = v25 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v33 + 31) < 0) {
      uint64_t v34 = *(void *)(v33 + 16);
    }
    else {
      uint64_t v34 = *(unsigned __int8 *)(v33 + 31);
    }
    v16 += v34;
  }
  *(_DWORD *)(a1 + 20) = v16;
  return v16;
}

void sub_1447B8C(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_1492CF8((std::string *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    uint64_t v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    unsigned int v11 = (std::string **)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_1492D84((uint64_t *)(a1 + 48), v11, v10, v9, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v12 = *(_DWORD *)(a1 + 56) + v9;
    *(_DWORD *)(a1 + 56) = v12;
    uint64_t v13 = *(int **)(a1 + 64);
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 80);
  if (v14)
  {
    uint64_t v15 = (const std::string **)(*(void *)(a2 + 88) + 8);
    uint64_t v16 = (std::string **)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_188FB98(a1 + 72, v16, v15, v14, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v17 = *(_DWORD *)(a1 + 80) + v14;
    *(_DWORD *)(a1 + 80) = v17;
    uint64_t v18 = *(int **)(a1 + 88);
    if (*v18 < v17) {
      int *v18 = v17;
    }
  }
  int v19 = *(_DWORD *)(a2 + 16);
  if ((v19 & 0x7F) != 0)
  {
    if (v19)
    {
      int v21 = (long long *)(*(void *)(a2 + 96) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v22 = *(void *)(a1 + 8);
      uint64_t v23 = (uint64_t *)(v22 & 0xFFFFFFFFFFFFFFFCLL);
      if (v22) {
        uint64_t v23 = (uint64_t *)*v23;
      }
      sub_1881DF4((std::string **)(a1 + 96), v21, v23);
      if ((v19 & 2) == 0)
      {
LABEL_13:
        if ((v19 & 4) == 0) {
          goto LABEL_14;
        }
        goto LABEL_35;
      }
    }
    else if ((v19 & 2) == 0)
    {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v24 = *(void *)(a1 + 104);
    if (!v24)
    {
      uint64_t v25 = *(void *)(a1 + 8);
      unint64_t v26 = (void *)(v25 & 0xFFFFFFFFFFFFFFFCLL);
      if (v25) {
        unint64_t v26 = (void *)*v26;
      }
      uint64_t v24 = sub_15C19EC((uint64_t)v26);
      *(void *)(a1 + 104) = v24;
    }
    if (*(void *)(a2 + 104)) {
      unint64_t v27 = *(uint64_t (****)())(a2 + 104);
    }
    else {
      unint64_t v27 = &off_253F208;
    }
    sub_15B1E3C(v24, (uint64_t)v27);
    if ((v19 & 4) == 0)
    {
LABEL_14:
      if ((v19 & 8) == 0) {
        goto LABEL_15;
      }
      goto LABEL_43;
    }
LABEL_35:
    *(_DWORD *)(a1 + 16) |= 4u;
    uint64_t v28 = *(std::string **)(a1 + 112);
    if (!v28)
    {
      uint64_t v29 = *(void *)(a1 + 8);
      uint64_t v30 = (void *)(v29 & 0xFFFFFFFFFFFFFFFCLL);
      if (v29) {
        uint64_t v30 = (void *)*v30;
      }
      uint64_t v28 = (std::string *)sub_15C1E94((uint64_t)v30);
      *(void *)(a1 + 112) = v28;
    }
    if (*(void *)(a2 + 112)) {
      uint64_t v31 = *(uint64_t (****)())(a2 + 112);
    }
    else {
      uint64_t v31 = &off_253F3D0;
    }
    sub_15B86B8(v28, (uint64_t)v31);
    if ((v19 & 8) == 0)
    {
LABEL_15:
      if ((v19 & 0x10) == 0) {
        goto LABEL_16;
      }
      goto LABEL_51;
    }
LABEL_43:
    *(_DWORD *)(a1 + 16) |= 8u;
    uint64_t v32 = *(void *)(a1 + 120);
    if (!v32)
    {
      uint64_t v33 = *(void *)(a1 + 8);
      uint64_t v34 = (void *)(v33 & 0xFFFFFFFFFFFFFFFCLL);
      if (v33) {
        uint64_t v34 = (void *)*v34;
      }
      uint64_t v32 = sub_15C1918((uint64_t)v34);
      *(void *)(a1 + 120) = v32;
    }
    if (*(void *)(a2 + 120)) {
      int v35 = *(uint64_t (****)())(a2 + 120);
    }
    else {
      int v35 = &off_253F1A0;
    }
    sub_15B0E24(v32, (uint64_t)v35);
    if ((v19 & 0x10) == 0)
    {
LABEL_16:
      if ((v19 & 0x20) == 0) {
        goto LABEL_17;
      }
      goto LABEL_52;
    }
LABEL_51:
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    if ((v19 & 0x20) == 0)
    {
LABEL_17:
      if ((v19 & 0x40) == 0)
      {
LABEL_19:
        *(_DWORD *)(a1 + 16) |= v19;
        goto LABEL_20;
      }
LABEL_18:
      *(_DWORD *)(a1 + 144) = *(_DWORD *)(a2 + 144);
      goto LABEL_19;
    }
LABEL_52:
    *(void *)(a1 + 136) = *(void *)(a2 + 136);
    if ((v19 & 0x40) == 0) {
      goto LABEL_19;
    }
    goto LABEL_18;
  }
LABEL_20:
  uint64_t v20 = *(void *)(a2 + 8);
  if (v20)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v20 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_1447E94(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 2) != 0)
  {
    uint64_t result = sub_15B1FC0(*(void *)(a1 + 104));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 4) != 0)
  {
    uint64_t result = sub_15B8CAC(*(void *)(a1 + 112));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 8) == 0) {
    return 1;
  }
  uint64_t result = sub_15B0F18(*(void *)(a1 + 120));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_1447EF4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gemini.LocationBasedRank");
}

uint64_t sub_1447F04(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (uint64_t *)(a1 + 8);
  *(void *)a1 = off_24B4D88;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v5 = a1 + 24;
  *(_DWORD *)(a1 + 44) = 0;
  *(void *)(a1 + 28) = 0;
  *(void *)(a1 + 36) = 0;
  *(void *)(a1 + 20) = 0;
  int v6 = *(_DWORD *)(a2 + 32);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 40);
    uint64_t v8 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_188FB98(v5, v8, (const std::string **)(v7 + 8), v6, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v9 = *(_DWORD *)(a1 + 32) + v6;
    *(_DWORD *)(a1 + 32) = v9;
    uint64_t v10 = *(int **)(a1 + 40);
    if (*v10 < v9) {
      *uint64_t v10 = v9;
    }
  }
  uint64_t v11 = *(void *)(a2 + 8);
  if (v11) {
    sub_188B4F8(v4, (v11 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 48) = &qword_2550250;
  if (*(unsigned char *)(a2 + 16))
  {
    int v12 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      int v12 = (uint64_t *)*v12;
    }
    sub_1881DF4((std::string **)(a1 + 48), (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL), v12);
  }
  return a1;
}

void sub_1448028(_Unwind_Exception *a1)
{
  sub_1889DE8(v3);
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_1448068(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  sub_1889DE8((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1448110(uint64_t a1)
{
  sub_1448068(a1);

  operator delete();
}

uint64_t sub_1448148(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unint64_t v26 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v26, a3[11].i32[1])) {
    return *(void *)v26;
  }
  int v6 = (uint64_t **)(a1 + 24);
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = (char *)(*(void *)v26 + 1);
    unsigned int v9 = **(unsigned char **)v26;
    if ((char)**(unsigned char **)v26 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180(*(uint64_t *)v26, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (char *)(*(void *)v26 + 2);
      }
    }
    *(void *)unint64_t v26 = v8;
    if (v9 >> 3 == 2) {
      break;
    }
    if (v9 >> 3 != 1 || v9 != 10) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v23 = *(void *)(a1 + 8);
    uint64_t v24 = (uint64_t *)(v23 & 0xFFFFFFFFFFFFFFFCLL);
    if (v23) {
      uint64_t v24 = (uint64_t *)*v24;
    }
    uint64_t v25 = (std::string *)sub_1880F84((void *)(a1 + 48), v24);
    uint64_t v15 = (void *)sub_188C244(v25, *(char **)v26, (uint64_t)a3);
LABEL_35:
    *(void *)unint64_t v26 = v15;
    if (!v15) {
      goto LABEL_41;
    }
LABEL_36:
    if (sub_11947B8((uint64_t)a3, (char **)v26, a3[11].i32[1])) {
      return *(void *)v26;
    }
  }
  if (v9 == 18)
  {
    uint64_t v16 = v8 - 1;
    while (1)
    {
      int v17 = (char *)(v16 + 1);
      *(void *)unint64_t v26 = v16 + 1;
      uint64_t v18 = *(_DWORD **)(a1 + 40);
      if (v18 && (uint64_t v19 = *(int *)(a1 + 32), (int)v19 < *v18))
      {
        *(_DWORD *)(a1 + 32) = v19 + 1;
        uint64_t v20 = *(std::string **)&v18[2 * v19 + 2];
      }
      else
      {
        if (!*v6) {
          operator new();
        }
        *uint64_t v22 = v21;
        v22[1] = sub_3A6EDC;
        *int v21 = 0;
        v21[1] = 0;
        int v21[2] = 0;
        uint64_t v20 = (std::string *)sub_188CDC8(a1 + 24, (uint64_t)v21);
        int v17 = *(char **)v26;
      }
      uint64_t v16 = sub_188C244(v20, v17, (uint64_t)a3);
      *(void *)unint64_t v26 = v16;
      if (!v16) {
        goto LABEL_41;
      }
      if (*(void *)a3 <= (unint64_t)v16 || *v16 != 18) {
        goto LABEL_36;
      }
    }
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      int v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      int v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = *(char **)v26;
    }
    uint64_t v15 = sub_1885AC0(v9, v14, v8, a3);
    goto LABEL_35;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    return *(void *)v26;
  }
LABEL_41:
  *(void *)unint64_t v26 = 0;
  return *(void *)v26;
}

char *sub_144839C(uint64_t a1, char *__dst, void *a3)
{
  int v4 = __dst;
  if (*(unsigned char *)(a1 + 16)) {
    int v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  uint64_t v6 = *(unsigned int *)(a1 + 32);
  if ((int)v6 >= 1)
  {
    uint64_t v7 = 0;
    uint64_t v8 = 8 * v6;
    do
    {
      unsigned int v9 = *(void **)(*(void *)(a1 + 40) + v7 + 8);
      if (*((char *)v9 + 23) < 0)
      {
        int64_t v10 = v9[1];
        if (v10 > 127) {
          goto LABEL_14;
        }
      }
      else
      {
        int64_t v10 = *((unsigned __int8 *)v9 + 23);
      }
      if (*a3 - (void)v4 + 14 >= v10)
      {
        char *v4 = 18;
        v4[1] = v10;
        if (*((char *)v9 + 23) < 0) {
          unsigned int v9 = (void *)*v9;
        }
        unsigned int v11 = v4 + 2;
        memcpy(v11, v9, v10);
        int v4 = &v11[v10];
        goto LABEL_12;
      }
LABEL_14:
      int v4 = (char *)sub_188A868(a3, 2, (uint64_t)v9, v4);
LABEL_12:
      v7 += 8;
    }
    while (v8 != v7);
  }
  uint64_t v12 = *(void *)(a1 + 8);
  if ((v12 & 1) == 0) {
    return v4;
  }
  unint64_t v14 = v12 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v14 + 31) < 0)
  {
    uint64_t v15 = *(void **)(v14 + 8);
    uint64_t v16 = *(void *)(v14 + 16);
  }
  else
  {
    uint64_t v15 = (void *)(v14 + 8);
    LODWORD(v16) = *(unsigned __int8 *)(v14 + 31);
  }
  if (*a3 - (void)v4 >= (int)v16)
  {
    uint64_t v17 = (int)v16;
    memcpy(v4, v15, (int)v16);
    v4 += v17;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v15, v16, v4);
}

uint64_t sub_1448528(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 32);
  if ((int)v1 < 1)
  {
    uint64_t v3 = *(unsigned int *)(a1 + 32);
  }
  else
  {
    uint64_t v2 = (uint64_t *)(*(void *)(a1 + 40) + 8);
    uint64_t v3 = *(unsigned int *)(a1 + 32);
    do
    {
      uint64_t v4 = *v2++;
      uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
      uint64_t v6 = *(void *)(v4 + 8);
      if ((v5 & 0x80u) == 0) {
        uint64_t v6 = v5;
      }
      v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6);
      --v1;
    }
    while (v1);
  }
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v7 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v8 = *(unsigned __int8 *)(v7 + 23);
    uint64_t v9 = *(void *)(v7 + 8);
    if ((v8 & 0x80u) == 0) {
      uint64_t v9 = v8;
    }
    v3 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v12 + 31) < 0) {
      uint64_t v13 = *(void *)(v12 + 16);
    }
    else {
      uint64_t v13 = *(unsigned __int8 *)(v12 + 31);
    }
    v3 += v13;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

uint64_t sub_1448608()
{
  return 1;
}

void *sub_1448610@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gemini.BusinessAttributeCategoryGroup");
}

void *sub_1448620(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1448694(void *a1)
{
  sub_1448620(a1);

  operator delete();
}

uint64_t sub_14486CC(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 0xF) != 0)
  {
    *(void *)(a1 + 24) = 0;
    *(void *)(a1 + 32) = 0;
    *(_DWORD *)(a1 + 40) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_14486F4(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v30 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v30, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = v30 + 1;
    unsigned int v9 = *v30;
    if (*v30 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v30, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v30 + 2;
      }
    }
    uint64_t v30 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 9) {
          goto LABEL_28;
        }
        v5 |= 1u;
        *(void *)(a1 + 24) = *(void *)v8;
        uint64_t v30 = v8 + 8;
        goto LABEL_35;
      case 2u:
        if (v9 != 16) {
          goto LABEL_28;
        }
        unint64_t v12 = v8 + 1;
        unint64_t v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_15;
        }
        int v14 = *v12;
        int v15 = v13 + (v14 << 7);
        unint64_t v13 = (v15 - 128);
        if (v14 < 0)
        {
          uint64_t v30 = (char *)sub_188C138((uint64_t)v8, (v15 - 128));
          if (!v30) {
            goto LABEL_50;
          }
          unint64_t v13 = v24;
        }
        else
        {
          unint64_t v12 = v8 + 2;
LABEL_15:
          uint64_t v30 = v12;
        }
        if (v13 > 2)
        {
          if (*v7) {
            uint64_t v29 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v29 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(2, v13, v29);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 2u;
          *(_DWORD *)(a1 + 32) = v13;
        }
        goto LABEL_35;
      case 3u:
        if (v9 != 24) {
          goto LABEL_28;
        }
        v5 |= 4u;
        uint64_t v16 = v8 + 1;
        uint64_t v17 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_22;
        }
        int v18 = *v16;
        uint64_t v17 = v17 + (v18 << 7) - 128;
        if (v18 < 0)
        {
          uint64_t v25 = (char *)sub_188C138((uint64_t)v8, v17);
          uint64_t v30 = v25;
          *(unsigned char *)(a1 + 36) = v26 != 0;
          if (!v25) {
            goto LABEL_50;
          }
        }
        else
        {
          uint64_t v16 = v8 + 2;
LABEL_22:
          uint64_t v30 = v16;
          *(unsigned char *)(a1 + 36) = v17 != 0;
        }
        goto LABEL_35;
      case 4u:
        if (v9 != 32) {
          goto LABEL_28;
        }
        v5 |= 8u;
        uint64_t v19 = v8 + 1;
        int v20 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_27;
        }
        int v21 = *v19;
        int v20 = v20 + (v21 << 7) - 128;
        if (v21 < 0)
        {
          unint64_t v27 = (char *)sub_188C0D0((uint64_t)v8, v20);
          uint64_t v30 = v27;
          *(_DWORD *)(a1 + 40) = v28;
          if (!v27) {
            goto LABEL_50;
          }
        }
        else
        {
          uint64_t v19 = v8 + 2;
LABEL_27:
          uint64_t v30 = v19;
          *(_DWORD *)(a1 + 40) = v20;
        }
        goto LABEL_35;
      default:
LABEL_28:
        if (v9) {
          BOOL v22 = (v9 & 7) == 4;
        }
        else {
          BOOL v22 = 1;
        }
        if (!v22)
        {
          if (*v7)
          {
            uint64_t v23 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v23 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = v30;
          }
          uint64_t v30 = (char *)sub_1885AC0(v9, v23, v8, a3);
          if (!v30) {
            goto LABEL_50;
          }
LABEL_35:
          if (sub_11947B8((uint64_t)a3, &v30, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_50:
        }
          uint64_t v30 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v30;
    }
  }
}

unsigned char *sub_14489E4(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    unsigned char *v4 = 9;
    *(void *)(v4 + 1) = v7;
    v4 += 9;
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v8 = *(int *)(a1 + 32);
    unsigned char *v4 = 16;
    v4[1] = v8;
    if (v8 > 0x7F)
    {
      v4[1] = v8 | 0x80;
      unint64_t v9 = v8 >> 7;
      v4[2] = v8 >> 7;
      v4 += 3;
      if (v8 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v10 = v9 >> 14;
          v9 >>= 7;
          *v4++ = v9;
        }
        while (v10);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v11 = *(unsigned char *)(a1 + 36);
    unsigned char *v4 = 24;
    v4[1] = v11;
    v4 += 2;
  }
  if ((v6 & 8) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v12 = *(_DWORD *)(a1 + 40);
    unsigned char *v4 = 32;
    v4[1] = v12;
    if (v12 > 0x7F)
    {
      v4[1] = v12 | 0x80;
      unsigned int v13 = v12 >> 7;
      v4[2] = v12 >> 7;
      v4 += 3;
      if (v12 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v14 = v13 >> 14;
          v13 >>= 7;
          *v4++ = v13;
        }
        while (v14);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v15 = *(void *)(a1 + 8);
  if ((v15 & 1) == 0) {
    return v4;
  }
  unint64_t v17 = v15 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v17 + 31) < 0)
  {
    int v18 = *(void **)(v17 + 8);
    uint64_t v19 = *(void *)(v17 + 16);
  }
  else
  {
    int v18 = (void *)(v17 + 8);
    LODWORD(v19) = *(unsigned __int8 *)(v17 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v19)
  {
    uint64_t v20 = (int)v19;
    memcpy(v4, v18, (int)v19);
    v4 += v20;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v18, v19, v4);
}

uint64_t sub_1448BF8(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 0xF) != 0)
  {
    uint64_t v2 = 9;
    if ((v1 & 1) == 0) {
      uint64_t v2 = 0;
    }
    if ((v1 & 2) != 0)
    {
      int v3 = *(_DWORD *)(a1 + 32);
      if (v3 < 0) {
        uint64_t v4 = 11;
      }
      else {
        uint64_t v4 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
      v2 += v4;
    }
    if ((v1 & 4) != 0) {
      v2 += 2;
    }
    if ((v1 & 8) != 0) {
      v2 += ((9 * (__clz(*(_DWORD *)(a1 + 40) | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5)
  {
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v7 + 31) < 0) {
      uint64_t v8 = *(void *)(v7 + 16);
    }
    else {
      uint64_t v8 = *(unsigned __int8 *)(v7 + 31);
    }
    v2 += v8;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_1448CB8(std::string *result, uint64_t a2)
{
  int v2 = *(_DWORD *)(a2 + 16);
  if ((v2 & 0xF) == 0) {
    goto LABEL_8;
  }
  if (v2)
  {
    result[1].__r_.__value_.__r.__words[0] = *(void *)(a2 + 24);
    if ((v2 & 2) == 0)
    {
LABEL_4:
      if ((v2 & 4) == 0) {
        goto LABEL_5;
      }
LABEL_12:
      result[1].__r_.__value_.__s.__data_[12] = *(unsigned char *)(a2 + 36);
      if ((v2 & 8) == 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
  }
  else if ((v2 & 2) == 0)
  {
    goto LABEL_4;
  }
  LODWORD(result[1].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 32);
  if ((v2 & 4) != 0) {
    goto LABEL_12;
  }
LABEL_5:
  if ((v2 & 8) != 0) {
LABEL_6:
  }
    LODWORD(result[1].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 40);
LABEL_7:
  LODWORD(result->__r_.__value_.__r.__words[2]) |= v2;
LABEL_8:
  uint64_t v3 = *(void *)(a2 + 8);
  if (v3) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v3 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1448D2C()
{
  return 1;
}

void *sub_1448D34@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gemini.FeatureReference");
}

void *sub_1448D44(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = &off_24B1508;
  result[2] = 0;
  result[3] = 0;
  result[4] = 0;
  result[5] = 0x100000000;
  return result;
}

void *sub_1448DC4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = &off_24B1588;
  result[2] = 0;
  result[4] = 0;
  result[5] = 0;
  result[3] = &qword_2550250;
  return result;
}

void *sub_1448E4C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = &off_24B1608;
  result[2] = 0;
  *(void *)((char *)result + 21) = 0;
  return result;
}

void *sub_1448EC8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = &off_24B1688;
  result[2] = 0;
  *(void *)((char *)result + 21) = 0;
  return result;
}

void *sub_1448F44(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = &off_24B1708;
  result[2] = 0;
  *(void *)((char *)result + 21) = 0;
  return result;
}

void *sub_1448FC0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = &off_24B1788;
  result[2] = 0;
  *(void *)((char *)result + 21) = 0;
  return result;
}

void *sub_144903C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = &off_24B1808;
  result[2] = 0;
  *(void *)((char *)result + 21) = 0;
  return result;
}

void *sub_14490B8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = &off_24B1888;
  result[2] = 0;
  *(void *)((char *)result + 21) = 0;
  return result;
}

void *sub_1449134(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = &off_24B1908;
  result[2] = 0;
  *(void *)((char *)result + 21) = 0;
  return result;
}

void *sub_14491B0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = &off_24B1988;
  result[2] = 0;
  *(void *)((char *)result + 21) = 0;
  return result;
}

uint64_t sub_144922C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = &off_24B1A08;
  *(void *)(result + 16) = 0;
  *(unsigned char *)(result + 24) = 0;
  *(_DWORD *)(result + 28) = 1;
  return result;
}

void *sub_14492B0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = &off_24B1A88;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = &qword_2550250;
  return result;
}

uint64_t sub_1449334(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = &off_24B1B08;
  *(void *)(result + 16) = 0;
  *(unsigned char *)(result + 24) = 0;
  *(_DWORD *)(result + 28) = 1;
  return result;
}

uint64_t sub_14493B8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = &off_24B1B88;
  *(void *)(result + 16) = 0;
  *(unsigned char *)(result + 24) = 0;
  *(_DWORD *)(result + 28) = 1;
  return result;
}

uint64_t sub_144943C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = &off_24B1C08;
  *(void *)(result + 16) = 0;
  *(unsigned char *)(result + 24) = 0;
  *(_DWORD *)(result + 28) = 1;
  return result;
}

uint64_t sub_14494C0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = &off_24B1C88;
  *(void *)(result + 16) = 0;
  *(unsigned char *)(result + 24) = 0;
  *(_DWORD *)(result + 28) = 1;
  return result;
}

uint64_t sub_1449544(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = &off_24B1D08;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = &qword_2550250;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

double sub_14495CC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = &off_24B1D88;
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = &qword_2550250;
  *(void *)(v2 + 32) = &qword_2550250;
  double result = 0.0;
  *(_OWORD *)(v2 + 40) = 0u;
  *(_OWORD *)(v2 + 56) = 0u;
  *(_DWORD *)(v2 + 72) = 0;
  return result;
}

void *sub_1449660(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *double result = &off_24B1E08;
  result[2] = 0;
  result[4] = 0;
  result[5] = 0;
  result[3] = &qword_2550250;
  return result;
}

void *sub_14496E8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *double result = &off_24B1E88;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = &qword_2550250;
  result[7] = &qword_2550250;
  result[8] = &qword_2550250;
  result[9] = &qword_2550250;
  result[10] = &qword_2550250;
  result[11] = &qword_2550250;
  return result;
}

uint64_t sub_1449794(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = &off_24B1F08;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = &qword_2550250;
  *(void *)(result + 32) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

void *sub_144981C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = &off_24B1F88;
  result[1] = a1;
  result[2] = 0;
  result[3] = 0;
  result[4] = a1;
  result[5] = a1;
  result[7] = 0;
  result[8] = 0;
  result[6] = 0;
  return result;
}

uint64_t sub_14498C4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = &off_24B2008;
  *(void *)(result + 8) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

double sub_1449964(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t v2 = &off_24B2088;
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = 0;
  *(void *)(v2 + 40) = 0;
  *(void *)(v2 + 48) = a1;
  *(void *)(v2 + 56) = 0;
  *(void *)(v2 + 64) = 0;
  *(void *)(v2 + 72) = a1;
  *(void *)(v2 + 80) = 0;
  *(void *)(v2 + 88) = 0;
  *(void *)(v2 + 96) = a1;
  double result = 0.0;
  *(_OWORD *)(v2 + 104) = 0u;
  *(_OWORD *)(v2 + 120) = 0u;
  *(_OWORD *)(v2 + 136) = 0u;
  *(void *)(v2 + 152) = 0;
  return result;
}

uint64_t sub_1449A30(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = &off_24B2108;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_1449AAC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = &off_24B2188;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = a1;
  *(void *)(result + 40) = 0;
  *(unsigned char *)(result + 48) = 0;
  return result;
}

double sub_1449B48(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t v2 = &off_24B2208;
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = 0;
  *(void *)(v2 + 40) = 0;
  *(void *)(v2 + 48) = a1;
  *(void *)(v2 + 56) = 0;
  *(void *)(v2 + 64) = 0;
  *(void *)(v2 + 72) = a1;
  *(void *)(v2 + 80) = 0;
  *(void *)(v2 + 88) = 0;
  *(void *)(v2 + 96) = a1;
  *(void *)(v2 + 104) = 0;
  *(void *)(v2 + 112) = 0;
  *(void *)(v2 + 120) = a1;
  *(void *)(v2 + 160) = 0;
  double result = 0.0;
  *(_OWORD *)(v2 + 128) = 0u;
  *(_OWORD *)(v2 + 144) = 0u;
  return result;
}

uint64_t sub_1449C14(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = &off_24B2288;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = &qword_2550250;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(_WORD *)(result + 48) = 0;
  return result;
}

void *sub_1449C9C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = &off_24B2308;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = &qword_2550250;
  result[7] = &qword_2550250;
  result[8] = &qword_2550250;
  result[9] = &qword_2550250;
  result[10] = 0;
  return result;
}

double sub_1449D48(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  return sub_1404EAC(v2, a1, 0);
}

void *sub_1449DA8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = &off_24B2408;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = &qword_2550250;
  return result;
}

void *sub_1449E2C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = &off_24B2488;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = &qword_2550250;
  result[5] = 0;
  return result;
}

void *sub_1449EB4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = &off_24B2508;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = &qword_2550250;
  result[5] = &qword_2550250;
  result[6] = &qword_2550250;
  return result;
}

double sub_1449F3C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = &off_24B2588;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(unsigned char *)(v2 + 48) = 0;
  return result;
}

double sub_1449FBC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = &off_24B2608;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = xmmword_213B3E0;
  *(_DWORD *)(v2 + 32) = 1;
  return result;
}

uint64_t sub_144A044(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = &off_24B2688;
  *(void *)(result + 16) = 0;
  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t sub_144A0C0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = &off_24B2708;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = a1;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

void *sub_144A15C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = &off_24B2788;
  result[3] = 0;
  result[4] = 0;
  result[2] = 0;
  return result;
}

void *sub_144A1D8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = &off_24B2808;
  result[1] = a1;
  result[2] = 0;
  result[3] = 0;
  result[5] = 0;
  result[6] = 0;
  result[4] = a1;
  return result;
}

double sub_144A278(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = &off_24B2888;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(void *)(v2 + 48) = 0;
  return result;
}

double sub_144A2F8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = &off_24B2908;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(void *)(v2 + 48) = 0;
  return result;
}

uint64_t sub_144A378(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = &off_24B2988;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = a1;
  *(void *)(result + 56) = 0;
  *(void *)(result + 64) = 0;
  *(void *)(result + 72) = 0;
  *(_DWORD *)(result + 80) = 0;
  return result;
}

uint64_t sub_144A420(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24B2A08;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = &qword_2550250;
  *(void *)(result + 56) = &qword_2550250;
  *(void *)(result + 64) = &qword_2550250;
  *(void *)(result + 72) = &qword_2550250;
  *(void *)(result + 88) = 0;
  *(void *)(result + 96) = 0;
  *(void *)(result + 80) = 0;
  *(unsigned char *)(result + 104) = 0;
  return result;
}

void *sub_144A4D4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = &off_24B2A88;
  result[3] = 0;
  result[4] = 0;
  result[2] = 0;
  return result;
}

void *sub_144A550(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24B2B08;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = &qword_2550250;
  result[5] = 0;
  return result;
}

void *sub_144A5D8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = &off_24B2B88;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = &qword_2550250;
  result[5] = 0;
  result[6] = 0;
  return result;
}

uint64_t sub_144A660(uint64_t a1)
{
  if (!a1)
  {
    sub_1492E10();
  }
  *(void *)uint64_t result = &off_24B2C08;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = &qword_2550250;
  *(void *)(result + 32) = &qword_2550250;
  *(void *)(result + 40) = &qword_2550250;
  *(void *)(result + 48) = &qword_2550250;
  *(void *)(result + 56) = &qword_2550250;
  *(void *)(result + 64) = &qword_2550250;
  *(unsigned char *)(result + 72) = 0;
  return result;
}

void *sub_144A6DC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = &off_24B2C88;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = a1;
  result[7] = 0;
  result[8] = 0;
  result[9] = &qword_2550250;
  result[10] = &qword_2550250;
  result[11] = 0;
  result[12] = 0;
  *(void *)((char *)result + 101) = 0;
  return result;
}

void *sub_144A794(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = &off_24B2D08;
  result[1] = a1;
  result[2] = 0;
  result[3] = 0;
  result[4] = a1;
  result[5] = 0;
  return result;
}

void *sub_144A82C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = &off_24B2D88;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = 0;
  return result;
}

uint64_t sub_144A8B0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = &off_24B2E08;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = &qword_2550250;
  *(void *)(result + 32) = &qword_2550250;
  *(unsigned char *)(result + 40) = 0;
  *(_DWORD *)(result + 44) = 1;
  return result;
}

uint64_t sub_144A940(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = &off_24B2E88;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = a1;
  *(void *)(result + 40) = a1;
  *(void *)(result + 48) = 0;
  *(void *)(result + 56) = 0;
  *(void *)(result + 64) = &qword_2550250;
  *(void *)(result + 72) = &qword_2550250;
  *(void *)(result + 88) = 0;
  *(void *)(result + 96) = 0;
  *(void *)(result + 80) = 0;
  *(_DWORD *)(result + 104) = 0;
  return result;
}

uint64_t sub_144A9F8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = &off_24B2F08;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = a1;
  *(void *)(result + 48) = 0;
  *(void *)(result + 56) = 0;
  *(void *)(result + 64) = a1;
  *(void *)(result + 72) = 0;
  *(void *)(result + 80) = 0;
  *(void *)(result + 88) = a1;
  *(void *)(result + 96) = 0;
  *(void *)(result + 104) = 0;
  *(_DWORD *)(result + 112) = 0;
  return result;
}

uint64_t sub_144AAAC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = &off_24B2F88;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = a1;
  *(void *)(result + 40) = &qword_2550250;
  *(void *)(result + 48) = &qword_2550250;
  *(void *)(result + 56) = &qword_2550250;
  *(void *)(result + 64) = &qword_2550250;
  *(void *)(result + 72) = 0;
  *(void *)(result + 80) = 0;
  *(_DWORD *)(result + 88) = 1;
  return result;
}

void *sub_144AB60(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = &off_24B3008;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = &qword_2550250;
  return result;
}

double sub_144ABE4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = &off_24B3088;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_DWORD *)(v2 + 48) = 1;
  return result;
}

void *sub_144AC68(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *double result = &off_24B3108;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = &qword_2550250;
  return result;
}

uint64_t sub_144ACEC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = &off_24B3188;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = a1;
  *(void *)(result + 40) = a1;
  *(void *)(result + 48) = 0;
  *(void *)(result + 56) = 0;
  *(void *)(result + 64) = a1;
  *(void *)(result + 72) = 0;
  *(void *)(result + 80) = 0;
  *(void *)(result + 88) = a1;
  *(void *)(result + 96) = 0;
  *(void *)(result + 104) = 0;
  *(void *)(result + 112) = a1;
  *(void *)(result + 120) = 0;
  *(void *)(result + 128) = 0;
  *(void *)(result + 136) = a1;
  *(_OWORD *)(result + 240) = 0u;
  *(_OWORD *)(result + 256) = 0u;
  *(_OWORD *)(result + 208) = 0u;
  *(_OWORD *)(result + 224) = 0u;
  *(_OWORD *)(result + 176) = 0u;
  *(_OWORD *)(result + 192) = 0u;
  *(_OWORD *)(result + 144) = 0u;
  *(_OWORD *)(result + 160) = 0u;
  *(_DWORD *)(result + 272) = 1;
  return result;
}

uint64_t sub_144ADD4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = &off_24B3208;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = &qword_2550250;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_144AE5C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = &off_24B3288;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = &qword_2550250;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

void *sub_144AEE4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = &off_24B3308;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = a1;
  result[7] = 0;
  result[8] = 0;
  result[9] = &qword_2550250;
  result[10] = 0;
  return result;
}

uint64_t sub_144AF94(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = &off_24B3388;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = &qword_2550250;
  *(_DWORD *)(result + 56) = 0;
  return result;
}

uint64_t sub_144B03C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = &off_24B3408;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = a1;
  *(void *)(result + 56) = 0;
  *(void *)(result + 64) = 0;
  *(_DWORD *)(result + 72) = 0;
  return result;
}

uint64_t sub_144B0E8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = &off_24B3488;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = &qword_2550250;
  *(void *)(result + 56) = &qword_2550250;
  *(_DWORD *)(result + 64) = 0;
  return result;
}

void *sub_144B190(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = &off_24B3508;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = a1;
  result[7] = 0;
  result[8] = 0;
  result[9] = a1;
  result[10] = 0;
  result[11] = 0;
  result[12] = &qword_2550250;
  result[13] = &qword_2550250;
  result[15] = 0;
  result[16] = 0;
  result[14] = 0;
  return result;
}

uint64_t sub_144B250(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = &off_24B3588;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = &qword_2550250;
  *(_WORD *)(result + 56) = 0;
  *(unsigned char *)(result + 58) = 0;
  return result;
}

void *sub_144B2FC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = off_24B3608;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = a1;
  result[7] = 0;
  result[8] = 0;
  result[9] = &qword_2550250;
  return result;
}

void *sub_144B3AC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24B3688;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = &qword_2550250;
  result[5] = &qword_2550250;
  result[6] = &qword_2550250;
  result[7] = &qword_2550250;
  return result;
}

uint64_t sub_144B438(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24B3708;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = a1;
  *(void *)(result + 56) = 0;
  *(void *)(result + 64) = 0;
  *(void *)(result + 72) = &qword_2550250;
  *(void *)(result + 80) = &qword_2550250;
  *(void *)(result + 88) = &qword_2550250;
  *(void *)(result + 96) = 0;
  *(void *)(result + 102) = 0;
  *(_DWORD *)(result + 112) = -9;
  return result;
}

uint64_t sub_144B4F8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24B3788;
  *(void *)(result + 16) = 0;
  *(_DWORD *)(result + 24) = 0;
  return result;
}

void *sub_144B574(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24B3808;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = &qword_2550250;
  result[5] = &qword_2550250;
  result[6] = 0;
  return result;
}

void *sub_144B5FC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = &off_24B3888;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = &qword_2550250;
  result[7] = &qword_2550250;
  result[8] = 0;
  return result;
}

uint64_t sub_144B6A4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = &off_24B3908;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_144B720(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = &off_24B3988;
  *(void *)(result + 16) = 0;
  *(unsigned char *)(result + 24) = 0;
  return result;
}

uint64_t sub_144B79C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = &off_24B3A08;
  *(void *)(result + 8) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

double sub_144B83C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  return sub_1429BB0(v2, a1, 0);
}

void *sub_144B89C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = off_24B3B08;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = &qword_2550250;
  return result;
}

uint64_t sub_144B940(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24B3B88;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = &qword_2550250;
  *(unsigned char *)(result + 32) = 0;
  return result;
}

void *sub_144B9C8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = off_24B3C08;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = &qword_2550250;
  return result;
}

void *sub_144BA6C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = off_24B3C88;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = &qword_2550250;
  return result;
}

void *sub_144BB10(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = off_24B3D08;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = &qword_2550250;
  return result;
}

void *sub_144BBB4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = off_24B3D88;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = &qword_2550250;
  return result;
}

void *sub_144BC58(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24B3E08;
  result[2] = 0;
  result[3] = 0;
  result[4] = 0;
  result[5] = 0xFFFFFFF700000000;
  return result;
}

uint64_t sub_144BCDC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = &off_24B3E88;
  *(void *)(result + 16) = 0;
  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t sub_144BD58(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = &off_24B3F08;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = &qword_2550250;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(unsigned char *)(result + 48) = 0;
  return result;
}

uint64_t sub_144BDE0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = &off_24B3F88;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = a1;
  *(void *)(result + 56) = 0;
  *(void *)(result + 64) = 0;
  *(void *)(result + 72) = a1;
  *(void *)(result + 80) = 0;
  *(void *)(result + 88) = 0;
  *(void *)(result + 96) = 0;
  *(void *)(result + 104) = a1;
  *(void *)(result + 112) = a1;
  *(void *)(result + 120) = 0;
  *(void *)(result + 128) = 0;
  *(void *)(result + 136) = 0;
  *(void *)(result + 144) = a1;
  *(void *)(result + 152) = a1;
  *(_DWORD *)(result + 184) = 0;
  *(void *)(result + 160) = 0;
  *(void *)(result + 168) = 0;
  *(void *)(result + 176) = 0;
  return result;
}

uint64_t sub_144BEB4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = &off_24B4008;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

void *sub_144BF30(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = &off_24B4088;
  result[2] = 0;
  result[3] = 0;
  return result;
}

uint64_t sub_144BFA8(uint64_t a1)
{
  if (!a1)
  {
    sub_1492E74();
  }

  return sub_143337C(v3, a1, 0);
}

double sub_144C004(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = &off_24B4188;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  return result;
}

uint64_t sub_144C084(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = &off_24B4208;
  *(void *)(result + 8) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

void *sub_144C124(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24B4288;
  result[3] = 0;
  result[4] = 0;
  result[2] = 0;
  return result;
}

uint64_t sub_144C1A0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24B4308;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

double sub_144C21C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = off_24B4388;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 61) = 0u;
  return result;
}

uint64_t sub_144C2A0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = &off_24B4408;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = a1;
  *(void *)(result + 56) = 0;
  *(void *)(result + 64) = 0;
  *(void *)(result + 72) = a1;
  *(void *)(result + 80) = 0;
  *(void *)(result + 88) = 0;
  *(void *)(result + 96) = 0;
  *(void *)(result + 104) = a1;
  *(_DWORD *)(result + 112) = 0;
  *(_WORD *)(result + 116) = 0;
  return result;
}

double sub_144C35C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = &off_24B4488;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_DWORD *)(v2 + 48) = 1;
  return result;
}

uint64_t sub_144C3E0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = &off_24B4508;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(_OWORD *)(result + 32) = 0u;
  *(_OWORD *)(result + 48) = 0u;
  return result;
}

uint64_t sub_144C47C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = &off_24B4588;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_144C4F8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = &off_24B4608;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(_OWORD *)(result + 32) = 0u;
  *(_OWORD *)(result + 48) = 0u;
  *(_DWORD *)(result + 64) = 1;
  return result;
}

double sub_144C59C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = &off_24B4688;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  return result;
}

uint64_t sub_144C61C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = &off_24B4708;
  *(void *)(result + 8) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

void *sub_144C6BC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = &off_24B4788;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = &qword_2550250;
  result[5] = &qword_2550250;
  result[6] = &qword_2550250;
  result[7] = &qword_2550250;
  return result;
}

void *sub_144C748(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = &off_24B4808;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = &qword_2550250;
  result[5] = &qword_2550250;
  return result;
}

uint64_t sub_144C7D0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = &off_24B4888;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = a1;
  *(void *)(result + 56) = 0;
  *(void *)(result + 64) = 0;
  *(void *)(result + 72) = a1;
  *(_OWORD *)(result + 80) = 0u;
  *(_OWORD *)(result + 96) = 0u;
  *(_OWORD *)(result + 106) = 0u;
  return result;
}

double sub_144C880(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t v2 = &off_24B4908;
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = 0;
  *(void *)(v2 + 40) = 0;
  *(void *)(v2 + 48) = &qword_2550250;
  double result = 0.0;
  *(_OWORD *)(v2 + 56) = 0u;
  *(_OWORD *)(v2 + 72) = 0u;
  *(_OWORD *)(v2 + 88) = 0u;
  return result;
}

void *sub_144C934(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *double result = &off_24B4988;
  result[3] = 0;
  result[4] = 0;
  result[2] = 0;
  return result;
}

uint64_t sub_144C9B0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = &off_24B4A08;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = a1;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = a1;
  *(void *)(result + 56) = 0;
  *(unsigned char *)(result + 64) = 0;
  return result;
}

void *sub_144CA54(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = &off_24B4A88;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = &qword_2550250;
  return result;
}

void *sub_144CAD8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = &off_24B4B08;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = &qword_2550250;
  result[7] = &qword_2550250;
  result[8] = 0;
  return result;
}

uint64_t sub_144CB80(uint64_t a1)
{
  if (!a1)
  {
    sub_1492EE0();
  }

  return sub_14421DC(v3, a1, 0);
}

void *sub_144CBDC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = &off_24B4C08;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = 0;
  return result;
}

uint64_t sub_144CC78(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = &off_24B4C88;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(_OWORD *)(result + 32) = 0u;
  *(_OWORD *)(result + 48) = 0u;
  return result;
}

double sub_144CD14(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t v2 = &off_24B4D08;
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = 0;
  *(void *)(v2 + 40) = 0;
  *(void *)(v2 + 48) = a1;
  *(void *)(v2 + 56) = 0;
  *(void *)(v2 + 64) = 0;
  *(void *)(v2 + 72) = a1;
  *(void *)(v2 + 80) = 0;
  *(void *)(v2 + 88) = 0;
  *(void *)(v2 + 96) = &qword_2550250;
  double result = 0.0;
  *(_OWORD *)(v2 + 104) = 0u;
  *(_OWORD *)(v2 + 120) = 0u;
  *(_OWORD *)(v2 + 132) = 0u;
  return result;
}

void *sub_144CDDC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *double result = off_24B4D88;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = &qword_2550250;
  return result;
}

uint64_t sub_144CE80(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = &off_24B4E08;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

BOOL sub_144CF00(unsigned int a1)
{
  return a1 < 0x1D;
}

BOOL sub_144CF0C(unsigned int a1)
{
  return a1 < 0xA;
}

BOOL sub_144CF18(unsigned int a1)
{
  return a1 < 7;
}

BOOL sub_144CF24(int a1)
{
  return a1 == 1;
}

BOOL sub_144CF30(int a1)
{
  return (a1 - 2) < 3;
}

uint64_t *sub_144CF40(int a1)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2606968, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_2606968))
  {
    byte_2606960 = sub_1889E98((uint64_t)&off_24B65F8, (int *)"\a", 9, qword_2606970);
    __cxa_guard_release(&qword_2606968);
  }
  int v2 = sub_1889E18((uint64_t)&off_24B65F8, (int *)"\a", 9uLL, a1);
  if (v2 != -1) {
    return &qword_2606970[3 * v2];
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)byte_2550268, memory_order_acquire) & 1) == 0) {
    sub_1889F30();
  }
  return &qword_2550250;
}

void sub_144D010(_Unwind_Exception *a1)
{
}

uint64_t sub_144D028(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  *(void *)(a1 + 8) = v5;
  *(void *)a1 = off_24B4E88;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = a2;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = a2;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = a2;
  *(void *)(a1 + 104) = 0;
  *(void *)(a1 + 112) = 0;
  *(void *)(a1 + 120) = &qword_2550250;
  *(void *)(a1 + 128) = &qword_2550250;
  *(void *)(a1 + 136) = &qword_2550250;
  *(void *)(a1 + 144) = &qword_2550250;
  *(_OWORD *)(a1 + 152) = 0u;
  *(_OWORD *)(a1 + 168) = 0u;
  *(_OWORD *)(a1 + 184) = 0u;
  *(_OWORD *)(a1 + 200) = 0u;
  *(_OWORD *)(a1 + 216) = 0u;
  *(_OWORD *)(a1 + 232) = 0u;
  *(_OWORD *)(a1 + 248) = 0u;
  return a1;
}

void sub_144D0D4(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_144D104(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_144D1B4((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  sub_1301628(a1 + 12);
  sub_11DB7D4(a1 + 9);
  sub_1492F4C(a1 + 6);
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void ***sub_144D1B4(uint64_t a1)
{
  uint64_t v3 = *(uint64_t **)(a1 + 120);
  uint64_t v2 = (void ***)(a1 + 120);
  if (v3 != &qword_2550250) {
    sub_1881C6C(v2);
  }
  if (*(uint64_t **)(a1 + 128) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 128));
  }
  if (*(uint64_t **)(a1 + 136) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 136));
  }
  uint64_t result = (void ***)(a1 + 144);
  if (*(uint64_t **)(a1 + 144) != &qword_2550250) {
    sub_1881C6C(result);
  }
  if ((uint64_t (***)())a1 != &off_2538EE0)
  {
    uint64_t v5 = *(void *)(a1 + 152);
    if (v5)
    {
      sub_15B1678(v5);
      operator delete();
    }
    if (*(void *)(a1 + 160))
    {
      sub_15B8F7C();
      operator delete();
    }
    if (*(void *)(a1 + 168))
    {
      sub_15B8F7C();
      operator delete();
    }
    if (*(void *)(a1 + 176))
    {
      sub_15B0994();
      operator delete();
    }
    if (*(void *)(a1 + 184))
    {
      sub_15B6D48();
      operator delete();
    }
    if (*(void *)(a1 + 192))
    {
      sub_15BC200();
      operator delete();
    }
    uint64_t v6 = *(void *)(a1 + 200);
    if (v6)
    {
      sub_15B1678(v6);
      operator delete();
    }
    uint64_t result = *(void ****)(a1 + 208);
    if (result)
    {
      sub_144FA4C((uint64_t)result);
      operator delete();
    }
  }
  return result;
}

void sub_144D354(void *a1)
{
  sub_144D104(a1);

  operator delete();
}

uint64_t sub_144D38C(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  uint64_t v3 = *(unsigned int *)(a1 + 56);
  if ((int)v3 >= 1)
  {
    uint64_t v4 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = sub_14565BC(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 56) = 0;
  }
  uint64_t v6 = *(unsigned int *)(a1 + 80);
  if ((int)v6 >= 1)
  {
    unint64_t v7 = (uint64_t *)(*(void *)(a1 + 88) + 8);
    do
    {
      uint64_t v8 = *v7++;
      uint64_t result = (uint64_t)sub_15B09D0(v8);
      --v6;
    }
    while (v6);
    *(_DWORD *)(a1 + 80) = 0;
  }
  uint64_t v9 = *(unsigned int *)(a1 + 104);
  if ((int)v9 >= 1)
  {
    unint64_t v10 = (unsigned char **)(*(void *)(a1 + 112) + 8);
    do
    {
      char v11 = *v10++;
      uint64_t result = (uint64_t)sub_15BB0EC(v11);
      --v9;
    }
    while (v9);
    *(_DWORD *)(a1 + 104) = 0;
  }
  int v12 = *(_DWORD *)(a1 + 40);
  if (!(_BYTE)v12) {
    goto LABEL_23;
  }
  if ((v12 & 1) == 0)
  {
    if ((v12 & 2) == 0) {
      goto LABEL_16;
    }
LABEL_45:
    unint64_t v16 = *(void *)(a1 + 128) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v16 + 23) < 0)
    {
      **(unsigned char **)unint64_t v16 = 0;
      *(void *)(v16 + 8) = 0;
      if ((v12 & 4) != 0) {
        goto LABEL_49;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v16 = 0;
      *(unsigned char *)(v16 + 23) = 0;
      if ((v12 & 4) != 0) {
        goto LABEL_49;
      }
    }
LABEL_17:
    if ((v12 & 8) == 0) {
      goto LABEL_18;
    }
LABEL_53:
    unint64_t v18 = *(void *)(a1 + 144) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v18 + 23) < 0)
    {
      **(unsigned char **)unint64_t v18 = 0;
      *(void *)(v18 + 8) = 0;
      if ((v12 & 0x10) != 0) {
        goto LABEL_57;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v18 = 0;
      *(unsigned char *)(v18 + 23) = 0;
      if ((v12 & 0x10) != 0) {
        goto LABEL_57;
      }
    }
LABEL_19:
    if ((v12 & 0x20) == 0) {
      goto LABEL_20;
    }
LABEL_58:
    uint64_t result = sub_15B8FB8(*(void *)(a1 + 160));
    if ((v12 & 0x40) == 0)
    {
LABEL_21:
      if ((v12 & 0x80) == 0) {
        goto LABEL_23;
      }
      goto LABEL_22;
    }
    goto LABEL_59;
  }
  unint64_t v15 = *(void *)(a1 + 120) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v15 + 23) < 0)
  {
    **(unsigned char **)unint64_t v15 = 0;
    *(void *)(v15 + 8) = 0;
    if ((v12 & 2) != 0) {
      goto LABEL_45;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v15 = 0;
    *(unsigned char *)(v15 + 23) = 0;
    if ((v12 & 2) != 0) {
      goto LABEL_45;
    }
  }
LABEL_16:
  if ((v12 & 4) == 0) {
    goto LABEL_17;
  }
LABEL_49:
  unint64_t v17 = *(void *)(a1 + 136) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v17 + 23) < 0)
  {
    **(unsigned char **)unint64_t v17 = 0;
    *(void *)(v17 + 8) = 0;
    if ((v12 & 8) != 0) {
      goto LABEL_53;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v17 = 0;
    *(unsigned char *)(v17 + 23) = 0;
    if ((v12 & 8) != 0) {
      goto LABEL_53;
    }
  }
LABEL_18:
  if ((v12 & 0x10) == 0) {
    goto LABEL_19;
  }
LABEL_57:
  uint64_t result = (uint64_t)sub_15B16B4(*(unsigned char **)(a1 + 152));
  if ((v12 & 0x20) != 0) {
    goto LABEL_58;
  }
LABEL_20:
  if ((v12 & 0x40) == 0) {
    goto LABEL_21;
  }
LABEL_59:
  uint64_t result = sub_15B8FB8(*(void *)(a1 + 168));
  if ((v12 & 0x80) != 0) {
LABEL_22:
  }
    uint64_t result = (uint64_t)sub_15B09D0(*(void *)(a1 + 176));
LABEL_23:
  if ((v12 & 0xF00) == 0) {
    goto LABEL_29;
  }
  if ((v12 & 0x100) != 0)
  {
    uint64_t result = sub_15B6D84(*(void *)(a1 + 184));
    if ((v12 & 0x200) == 0)
    {
LABEL_26:
      if ((v12 & 0x400) == 0) {
        goto LABEL_27;
      }
      goto LABEL_42;
    }
  }
  else if ((v12 & 0x200) == 0)
  {
    goto LABEL_26;
  }
  uint64_t result = sub_15BC23C(*(void *)(a1 + 192));
  if ((v12 & 0x400) == 0)
  {
LABEL_27:
    if ((v12 & 0x800) == 0) {
      goto LABEL_29;
    }
    goto LABEL_28;
  }
LABEL_42:
  uint64_t result = (uint64_t)sub_15B16B4(*(unsigned char **)(a1 + 200));
  if ((v12 & 0x800) != 0) {
LABEL_28:
  }
    uint64_t result = sub_144D5F0(*(void *)(a1 + 208));
LABEL_29:
  if ((v12 & 0xF000) != 0)
  {
    *(void *)(a1 + 216) = 0;
    *(void *)(a1 + 224) = 0;
    *(_DWORD *)(a1 + 232) = 0;
  }
  if ((v12 & 0x1F0000) != 0)
  {
    *(void *)(a1 + 244) = 0;
    *(void *)(a1 + 236) = 0;
    *(_DWORD *)(a1 + 260) = 0;
    *(void *)(a1 + 252) = 0;
  }
  char v14 = *(unsigned char *)(a1 + 8);
  uint64_t v13 = a1 + 8;
  *(_DWORD *)(v13 + 32) = 0;
  if (v14)
  {
    return sub_188B4AC((uint64_t *)v13);
  }
  return result;
}

uint64_t sub_144D5F0(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 7) != 0)
  {
    if (v2)
    {
      uint64_t result = sub_1700B04(*(void *)(result + 24));
      if ((v2 & 2) == 0)
      {
LABEL_4:
        if ((v2 & 4) == 0) {
          goto LABEL_6;
        }
        goto LABEL_5;
      }
    }
    else if ((v2 & 2) == 0)
    {
      goto LABEL_4;
    }
    uint64_t result = (uint64_t)sub_15B09D0(*(void *)(v1 + 32));
    if ((v2 & 4) != 0) {
LABEL_5:
    }
      uint64_t result = (uint64_t)sub_15B09D0(*(void *)(v1 + 40));
  }
LABEL_6:
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_144D678(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v96 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v96, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (unsigned __int8 *)(*(void *)v96 + 1);
    unsigned int v9 = **(unsigned char **)v96;
    if ((char)**(unsigned char **)v96 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        uint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v96, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (unsigned __int8 *)(*(void *)v96 + 2);
      }
    }
    *(void *)uint64_t v96 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_151;
        }
        v5 |= 0x1000u;
        int v12 = (char *)(v8 + 1);
        uint64_t v13 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        uint64_t v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          int v12 = (char *)(v8 + 2);
LABEL_13:
          *(void *)uint64_t v96 = v12;
          *(void *)(a1 + 216) = v13;
          goto LABEL_161;
        }
        uint64_t v80 = sub_188C138((uint64_t)v8, v13);
        *(void *)uint64_t v96 = v80;
        *(void *)(a1 + 216) = v81;
        if (v80) {
          goto LABEL_161;
        }
        goto LABEL_191;
      case 2u:
        if (v9 != 16) {
          goto LABEL_151;
        }
        v5 |= 0x2000u;
        uint64_t v19 = (char *)(v8 + 1);
        LODWORD(v18) = *v8;
        if ((v18 & 0x80) == 0) {
          goto LABEL_24;
        }
        int v20 = *v19;
        uint64_t v18 = v18 + (v20 << 7) - 128;
        if (v20 < 0)
        {
          uint64_t v84 = sub_188C138((uint64_t)v8, v18);
          *(void *)uint64_t v96 = v84;
          *(_DWORD *)(a1 + 224) = v85;
          if (!v84) {
            goto LABEL_191;
          }
        }
        else
        {
          uint64_t v19 = (char *)(v8 + 2);
LABEL_24:
          *(void *)uint64_t v96 = v19;
          *(_DWORD *)(a1 + 224) = v18;
        }
        goto LABEL_161;
      case 3u:
        if (v9 != 24) {
          goto LABEL_151;
        }
        int v21 = (char *)(v8 + 1);
        unint64_t v22 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_29;
        }
        int v23 = *v21;
        int v24 = v22 + (v23 << 7);
        unint64_t v22 = (v24 - 128);
        if (v23 < 0)
        {
          *(void *)uint64_t v96 = sub_188C138((uint64_t)v8, (v24 - 128));
          if (!*(void *)v96) {
            goto LABEL_191;
          }
          unint64_t v22 = v86;
        }
        else
        {
          int v21 = (char *)(v8 + 2);
LABEL_29:
          *(void *)uint64_t v96 = v21;
        }
        if (sub_140B640(v22))
        {
          *(_DWORD *)(a1 + 40) |= 0x4000u;
          *(_DWORD *)(a1 + 228) = v22;
          goto LABEL_161;
        }
        if (*v7) {
          uint64_t v94 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          uint64_t v94 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v95 = 3;
        goto LABEL_185;
      case 4u:
        if (v9 != 34) {
          goto LABEL_151;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        uint64_t v25 = *(void *)(a1 + 8);
        uint64_t v26 = (uint64_t *)(v25 & 0xFFFFFFFFFFFFFFFCLL);
        if (v25) {
          uint64_t v26 = (uint64_t *)*v26;
        }
        unint64_t v27 = (void *)(a1 + 120);
        goto LABEL_108;
      case 5u:
        if (v9 != 42) {
          goto LABEL_151;
        }
        *(_DWORD *)(a1 + 40) |= 0x10u;
        uint64_t v28 = *(void *)(a1 + 152);
        if (v28) {
          goto LABEL_129;
        }
        uint64_t v29 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          uint64_t v29 = (void *)*v29;
        }
        uint64_t v28 = sub_15C19EC((uint64_t)v29);
        *(void *)(a1 + 152) = v28;
        goto LABEL_128;
      case 6u:
        if (v9 != 50) {
          goto LABEL_151;
        }
        *(_DWORD *)(a1 + 40) |= 0x20u;
        uint64_t v30 = *(void *)(a1 + 160);
        if (v30) {
          goto LABEL_56;
        }
        uint64_t v31 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          uint64_t v31 = (void *)*v31;
        }
        uint64_t v30 = sub_15C1EF4((uint64_t)v31);
        *(void *)(a1 + 160) = v30;
        goto LABEL_55;
      case 7u:
        if (v9 != 58) {
          goto LABEL_151;
        }
        *(_DWORD *)(a1 + 40) |= 2u;
        uint64_t v32 = *(void *)(a1 + 8);
        uint64_t v26 = (uint64_t *)(v32 & 0xFFFFFFFFFFFFFFFCLL);
        if (v32) {
          uint64_t v26 = (uint64_t *)*v26;
        }
        unint64_t v27 = (void *)(a1 + 128);
        goto LABEL_108;
      case 8u:
        if (v9 != 66) {
          goto LABEL_151;
        }
        *(_DWORD *)(a1 + 40) |= 0x40u;
        uint64_t v30 = *(void *)(a1 + 168);
        if (v30) {
          goto LABEL_56;
        }
        uint64_t v33 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          uint64_t v33 = (void *)*v33;
        }
        uint64_t v30 = sub_15C1EF4((uint64_t)v33);
        *(void *)(a1 + 168) = v30;
LABEL_55:
        uint64_t v8 = *(unsigned __int8 **)v96;
LABEL_56:
        uint64_t v34 = sub_1198E84(a3, v30, v8);
        goto LABEL_160;
      case 9u:
        if (v9 != 74) {
          goto LABEL_151;
        }
        *(_DWORD *)(a1 + 40) |= 0x80u;
        uint64_t v35 = *(void *)(a1 + 176);
        if (!v35)
        {
          int64_t v36 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            int64_t v36 = (void *)*v36;
          }
          uint64_t v35 = sub_15C1918((uint64_t)v36);
          *(void *)(a1 + 176) = v35;
          uint64_t v8 = *(unsigned __int8 **)v96;
        }
        uint64_t v34 = (uint64_t)sub_1198F14(a3, v35, v8);
        goto LABEL_160;
      case 0xAu:
        if (v9 != 82) {
          goto LABEL_151;
        }
        uint64_t v37 = (char *)(v8 - 1);
        while (1)
        {
          unint64_t v38 = (unsigned __int8 *)(v37 + 1);
          *(void *)uint64_t v96 = v37 + 1;
          unint64_t v39 = *(_DWORD **)(a1 + 64);
          if (v39 && (uint64_t v40 = *(int *)(a1 + 56), (int)v40 < *v39))
          {
            *(_DWORD *)(a1 + 56) = v40 + 1;
            uint64_t v41 = *(void *)&v39[2 * v40 + 2];
          }
          else
          {
            uint64_t v42 = sub_1478958(*(void *)(a1 + 48));
            uint64_t v41 = sub_188CDC8(a1 + 48, v42);
            unint64_t v38 = *(unsigned __int8 **)v96;
          }
          uint64_t v37 = sub_144E120(a3, v41, v38);
          *(void *)uint64_t v96 = v37;
          if (!v37) {
            goto LABEL_191;
          }
          if (*(void *)a3 <= (unint64_t)v37 || *v37 != 82) {
            goto LABEL_161;
          }
        }
      case 0xBu:
        if (v9 != 88) {
          goto LABEL_151;
        }
        unint64_t v43 = (char *)(v8 + 1);
        unint64_t v22 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_77;
        }
        int v44 = *v43;
        int v45 = v22 + (v44 << 7);
        unint64_t v22 = (v45 - 128);
        if (v44 < 0)
        {
          *(void *)uint64_t v96 = sub_188C138((uint64_t)v8, (v45 - 128));
          if (!*(void *)v96) {
            goto LABEL_191;
          }
          unint64_t v22 = v87;
        }
        else
        {
          unint64_t v43 = (char *)(v8 + 2);
LABEL_77:
          *(void *)uint64_t v96 = v43;
        }
        if (v22 > 5)
        {
          if (*v7) {
            uint64_t v94 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v94 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          int v95 = 11;
LABEL_185:
          sub_188C020(v95, v22, v94);
        }
        else
        {
          *(_DWORD *)(a1 + 40) |= 0x8000u;
          *(_DWORD *)(a1 + 232) = v22;
        }
        goto LABEL_161;
      case 0xCu:
        if (v9 != 98) {
          goto LABEL_151;
        }
        uint64_t v46 = (char *)(v8 - 1);
        while (1)
        {
          uint64_t v47 = (unsigned __int8 *)(v46 + 1);
          *(void *)uint64_t v96 = v46 + 1;
          uint64_t v48 = *(_DWORD **)(a1 + 88);
          if (v48 && (uint64_t v49 = *(int *)(a1 + 80), (int)v49 < *v48))
          {
            *(_DWORD *)(a1 + 80) = v49 + 1;
            uint64_t v50 = *(void *)&v48[2 * v49 + 2];
          }
          else
          {
            uint64_t v51 = sub_15C1918(*(void *)(a1 + 72));
            uint64_t v50 = sub_188CDC8(a1 + 72, v51);
            uint64_t v47 = *(unsigned __int8 **)v96;
          }
          uint64_t v46 = sub_1198F14(a3, v50, v47);
          *(void *)uint64_t v96 = v46;
          if (!v46) {
            goto LABEL_191;
          }
          if (*(void *)a3 <= (unint64_t)v46 || *v46 != 98) {
            goto LABEL_161;
          }
        }
      case 0xDu:
        if (v9 != 104) {
          goto LABEL_151;
        }
        v5 |= 0x40000u;
        BOOL v52 = (char *)(v8 + 1);
        uint64_t v53 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_94;
        }
        int v54 = *v52;
        uint64_t v53 = v53 + (v54 << 7) - 128;
        if (v54 < 0)
        {
          uint64_t v88 = sub_188C138((uint64_t)v8, v53);
          *(void *)uint64_t v96 = v88;
          *(unsigned char *)(a1 + 248) = v89 != 0;
          if (!v88) {
            goto LABEL_191;
          }
        }
        else
        {
          BOOL v52 = (char *)(v8 + 2);
LABEL_94:
          *(void *)uint64_t v96 = v52;
          *(unsigned char *)(a1 + 248) = v53 != 0;
        }
        goto LABEL_161;
      case 0xEu:
        if (v9 != 112) {
          goto LABEL_151;
        }
        v5 |= 0x10000u;
        unint64_t v56 = (char *)(v8 + 1);
        LODWORD(v55) = *v8;
        if ((v55 & 0x80) == 0) {
          goto LABEL_99;
        }
        int v57 = *v56;
        uint64_t v55 = v55 + (v57 << 7) - 128;
        if (v57 < 0)
        {
          uint64_t v90 = sub_188C138((uint64_t)v8, v55);
          *(void *)uint64_t v96 = v90;
          *(_DWORD *)(a1 + 236) = v91;
          if (!v90) {
            goto LABEL_191;
          }
        }
        else
        {
          unint64_t v56 = (char *)(v8 + 2);
LABEL_99:
          *(void *)uint64_t v96 = v56;
          *(_DWORD *)(a1 + 236) = v55;
        }
        goto LABEL_161;
      case 0xFu:
        if (v9 != 122) {
          goto LABEL_151;
        }
        *(_DWORD *)(a1 + 40) |= 4u;
        uint64_t v58 = *(void *)(a1 + 8);
        uint64_t v26 = (uint64_t *)(v58 & 0xFFFFFFFFFFFFFFFCLL);
        if (v58) {
          uint64_t v26 = (uint64_t *)*v26;
        }
        unint64_t v27 = (void *)(a1 + 136);
        goto LABEL_108;
      case 0x10u:
        if (v9 != 130) {
          goto LABEL_151;
        }
        *(_DWORD *)(a1 + 40) |= 8u;
        uint64_t v59 = *(void *)(a1 + 8);
        uint64_t v26 = (uint64_t *)(v59 & 0xFFFFFFFFFFFFFFFCLL);
        if (v59) {
          uint64_t v26 = (uint64_t *)*v26;
        }
        unint64_t v27 = (void *)(a1 + 144);
LABEL_108:
        uint64_t v60 = (std::string *)sub_1880F84(v27, v26);
        uint64_t v34 = (uint64_t)sub_188C244(v60, *(char **)v96, (uint64_t)a3);
        goto LABEL_160;
      case 0x11u:
        if (v9 != 137) {
          goto LABEL_151;
        }
        v5 |= 0x20000u;
        *(void *)(a1 + 240) = *(void *)v8;
        *(void *)uint64_t v96 = v8 + 8;
        goto LABEL_161;
      case 0x12u:
        if (v9 != 146) {
          goto LABEL_151;
        }
        *(_DWORD *)(a1 + 40) |= 0x100u;
        int v61 = *(void **)(a1 + 184);
        if (!v61)
        {
          uint64_t v62 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v62 = (void *)*v62;
          }
          int v61 = sub_15C1E94((uint64_t)v62);
          *(void *)(a1 + 184) = v61;
          uint64_t v8 = *(unsigned __int8 **)v96;
        }
        uint64_t v34 = (uint64_t)sub_11EA9CC(a3, (uint64_t)v61, v8);
        goto LABEL_160;
      case 0x13u:
        if (v9 != 154) {
          goto LABEL_151;
        }
        *(_DWORD *)(a1 + 40) |= 0x200u;
        uint64_t v63 = *(void **)(a1 + 192);
        if (!v63)
        {
          uint64_t v64 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v64 = (void *)*v64;
          }
          uint64_t v63 = sub_15C221C((uint64_t)v64);
          *(void *)(a1 + 192) = v63;
          uint64_t v8 = *(unsigned __int8 **)v96;
        }
        uint64_t v34 = sub_123B1B4(a3, (uint64_t)v63, v8);
        goto LABEL_160;
      case 0x14u:
        if (v9 != 162) {
          goto LABEL_151;
        }
        *(_DWORD *)(a1 + 40) |= 0x400u;
        uint64_t v28 = *(void *)(a1 + 200);
        if (!v28)
        {
          uint64_t v65 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v65 = (void *)*v65;
          }
          uint64_t v28 = sub_15C19EC((uint64_t)v65);
          *(void *)(a1 + 200) = v28;
LABEL_128:
          uint64_t v8 = *(unsigned __int8 **)v96;
        }
LABEL_129:
        uint64_t v34 = (uint64_t)sub_11E1C60(a3, v28, v8);
        goto LABEL_160;
      case 0x15u:
        if (v9 != 170) {
          goto LABEL_151;
        }
        uint64_t v66 = (char *)(v8 - 2);
        while (1)
        {
          uint64_t v67 = (unsigned __int8 *)(v66 + 2);
          *(void *)uint64_t v96 = v66 + 2;
          unint64_t v68 = *(_DWORD **)(a1 + 112);
          if (v68 && (uint64_t v69 = *(int *)(a1 + 104), (int)v69 < *v68))
          {
            *(_DWORD *)(a1 + 104) = v69 + 1;
            uint64_t v70 = *(void *)&v68[2 * v69 + 2];
          }
          else
          {
            sub_15C219C(*(void *)(a1 + 96));
            uint64_t v70 = sub_188CDC8(a1 + 96, v71);
            uint64_t v67 = *(unsigned __int8 **)v96;
          }
          uint64_t v66 = sub_11FF458(a3, v70, v67);
          *(void *)uint64_t v96 = v66;
          if (!v66) {
            goto LABEL_191;
          }
          if (*(void *)a3 <= (unint64_t)v66 || *(_WORD *)v66 != 426) {
            goto LABEL_161;
          }
        }
      case 0x16u:
        if (v9 != 178) {
          goto LABEL_151;
        }
        *(_DWORD *)(a1 + 40) |= 0x800u;
        uint64_t v72 = *(void *)(a1 + 208);
        if (!v72)
        {
          uint64_t v73 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v73 = (void *)*v73;
          }
          sub_14781E8((uint64_t)v73);
          uint64_t v72 = v74;
          *(void *)(a1 + 208) = v74;
          uint64_t v8 = *(unsigned __int8 **)v96;
        }
        uint64_t v34 = (uint64_t)sub_144E1B0(a3, v72, v8);
        goto LABEL_160;
      case 0x17u:
        if (v9 != 184) {
          goto LABEL_151;
        }
        v5 |= 0x80000u;
        int v75 = (char *)(v8 + 1);
        uint64_t v76 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_150;
        }
        int v77 = *v75;
        uint64_t v76 = v76 + (v77 << 7) - 128;
        if (v77 < 0)
        {
          uint64_t v92 = sub_188C138((uint64_t)v8, v76);
          *(void *)uint64_t v96 = v92;
          *(unsigned char *)(a1 + 249) = v93 != 0;
          if (!v92) {
            goto LABEL_191;
          }
        }
        else
        {
          int v75 = (char *)(v8 + 2);
LABEL_150:
          *(void *)uint64_t v96 = v75;
          *(unsigned char *)(a1 + 249) = v76 != 0;
        }
        goto LABEL_161;
      default:
        if (v9 >> 3 == 100 && v9 == 32)
        {
          v5 |= 0x100000u;
          unint64_t v15 = (char *)(v8 + 1);
          uint64_t v16 = *v8;
          if (((char)*v8 & 0x80000000) == 0) {
            goto LABEL_19;
          }
          int v17 = *v15;
          uint64_t v16 = v16 + (v17 << 7) - 128;
          if ((v17 & 0x80000000) == 0)
          {
            unint64_t v15 = (char *)(v8 + 2);
LABEL_19:
            *(void *)uint64_t v96 = v15;
            *(void *)(a1 + 256) = v16;
            goto LABEL_161;
          }
          uint64_t v82 = sub_188C138((uint64_t)v8, v16);
          *(void *)uint64_t v96 = v82;
          *(void *)(a1 + 256) = v83;
          if (!v82) {
            goto LABEL_191;
          }
LABEL_161:
          if (sub_11947B8((uint64_t)a3, (char **)v96, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
LABEL_151:
        if (v9) {
          BOOL v78 = (v9 & 7) == 4;
        }
        else {
          BOOL v78 = 1;
        }
        if (!v78)
        {
          if (v9 - 1600 > 0xF9F)
          {
            if (*v7)
            {
              uint64_t v79 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              uint64_t v79 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              uint64_t v8 = *(unsigned __int8 **)v96;
            }
            uint64_t v34 = (uint64_t)sub_1885AC0(v9, v79, (char *)v8, a3);
          }
          else
          {
            uint64_t v34 = (uint64_t)sub_18859DC((uint64_t **)(a1 + 16), v9, (char *)v8, (uint64_t)&off_2538EE0, (uint64_t *)(a1 + 8), a3);
          }
LABEL_160:
          *(void *)uint64_t v96 = v34;
          if (!v34) {
            goto LABEL_191;
          }
          goto LABEL_161;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_191:
        }
          *(void *)uint64_t v96 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 40) |= v5;
        return *(void *)v96;
    }
  }
}

char *sub_144E120(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_14568DC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_144E1B0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_144FB74(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_144E240(uint64_t a1, char *a2, unint64_t *a3)
{
  char v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if ((v6 & 0x1000) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unint64_t v7 = *(void *)(a1 + 216);
    char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x2000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 224);
    char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x4000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v13 = *(int *)(a1 + 228);
    char *v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unint64_t v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    char v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 120) & 0xFFFFFFFFFFFFFFFELL), v4);
    if ((v6 & 0x10) == 0)
    {
LABEL_24:
      if ((v6 & 0x20) == 0) {
        goto LABEL_25;
      }
      goto LABEL_36;
    }
  }
  else if ((v6 & 0x10) == 0)
  {
    goto LABEL_24;
  }
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v16 = *(void *)(a1 + 152);
  char *v4 = 42;
  unsigned int v17 = *(_DWORD *)(v16 + 20);
  v4[1] = v17;
  if (v17 > 0x7F) {
    uint64_t v18 = sub_188A9CC(v17, v4 + 1);
  }
  else {
    uint64_t v18 = v4 + 2;
  }
  char v4 = sub_15B1A68(v16, (unint64_t)v18, a3);
  if ((v6 & 0x20) == 0)
  {
LABEL_25:
    if ((v6 & 2) == 0) {
      goto LABEL_26;
    }
    goto LABEL_42;
  }
LABEL_36:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v19 = *(void *)(a1 + 160);
  char *v4 = 50;
  unsigned int v20 = *(_DWORD *)(v19 + 20);
  v4[1] = v20;
  if (v20 > 0x7F) {
    int v21 = sub_188A9CC(v20, v4 + 1);
  }
  else {
    int v21 = v4 + 2;
  }
  char v4 = sub_15B9320(v19, v21, a3);
  if ((v6 & 2) == 0)
  {
LABEL_26:
    if ((v6 & 0x40) == 0) {
      goto LABEL_27;
    }
    goto LABEL_43;
  }
LABEL_42:
  char v4 = sub_117A0AC(a3, 7, (const void **)(*(void *)(a1 + 128) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x40) == 0)
  {
LABEL_27:
    if ((v6 & 0x80) == 0) {
      goto LABEL_55;
    }
    goto LABEL_49;
  }
LABEL_43:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v22 = *(void *)(a1 + 168);
  char *v4 = 66;
  unsigned int v23 = *(_DWORD *)(v22 + 20);
  v4[1] = v23;
  if (v23 > 0x7F) {
    int v24 = sub_188A9CC(v23, v4 + 1);
  }
  else {
    int v24 = v4 + 2;
  }
  char v4 = sub_15B9320(v22, v24, a3);
  if ((v6 & 0x80) != 0)
  {
LABEL_49:
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v25 = *(void *)(a1 + 176);
    char *v4 = 74;
    unsigned int v26 = *(_DWORD *)(v25 + 44);
    v4[1] = v26;
    if (v26 > 0x7F) {
      unint64_t v27 = sub_188A9CC(v26, v4 + 1);
    }
    else {
      unint64_t v27 = v4 + 2;
    }
    char v4 = sub_15B0C0C(v25, v27, a3);
  }
LABEL_55:
  int v28 = *(_DWORD *)(a1 + 56);
  if (v28)
  {
    for (int i = 0; i != v28; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v30 = *(void *)(*(void *)(a1 + 64) + 8 * i + 8);
      char *v4 = 82;
      unsigned int v31 = *(_DWORD *)(v30 + 20);
      v4[1] = v31;
      if (v31 > 0x7F) {
        uint64_t v32 = sub_188A9CC(v31, v4 + 1);
      }
      else {
        uint64_t v32 = v4 + 2;
      }
      char v4 = sub_1457858(v30, (unint64_t)v32, a3);
    }
  }
  if ((v6 & 0x8000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v33 = *(int *)(a1 + 232);
    char *v4 = 88;
    v4[1] = v33;
    if (v33 > 0x7F)
    {
      v4[1] = v33 | 0x80;
      unint64_t v34 = v33 >> 7;
      v4[2] = v33 >> 7;
      v4 += 3;
      if (v33 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v35 = v34 >> 14;
          v34 >>= 7;
          *v4++ = v34;
        }
        while (v35);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v36 = *(_DWORD *)(a1 + 80);
  if (v36)
  {
    for (int j = 0; j != v36; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v38 = *(void *)(*(void *)(a1 + 88) + 8 * j + 8);
      char *v4 = 98;
      unsigned int v39 = *(_DWORD *)(v38 + 44);
      v4[1] = v39;
      if (v39 > 0x7F) {
        uint64_t v40 = sub_188A9CC(v39, v4 + 1);
      }
      else {
        uint64_t v40 = v4 + 2;
      }
      char v4 = sub_15B0C0C(v38, v40, a3);
    }
  }
  if ((v6 & 0x40000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v41 = *(unsigned char *)(a1 + 248);
    char *v4 = 104;
    v4[1] = v41;
    v4 += 2;
  }
  if ((v6 & 0x10000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v42 = *(int *)(a1 + 236);
    char *v4 = 112;
    v4[1] = v42;
    if (v42 > 0x7F)
    {
      v4[1] = v42 | 0x80;
      unint64_t v43 = v42 >> 7;
      v4[2] = v42 >> 7;
      v4 += 3;
      if (v42 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v44 = v43 >> 14;
          v43 >>= 7;
          *v4++ = v43;
        }
        while (v44);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    char v4 = sub_117A0AC(a3, 15, (const void **)(*(void *)(a1 + 136) & 0xFFFFFFFFFFFFFFFELL), v4);
    if ((v6 & 8) == 0)
    {
LABEL_91:
      if ((v6 & 0x20000) == 0) {
        goto LABEL_92;
      }
      goto LABEL_98;
    }
  }
  else if ((v6 & 8) == 0)
  {
    goto LABEL_91;
  }
  char v4 = sub_117A0AC(a3, 16, (const void **)(*(void *)(a1 + 144) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x20000) == 0)
  {
LABEL_92:
    if ((v6 & 0x100) == 0) {
      goto LABEL_93;
    }
    goto LABEL_101;
  }
LABEL_98:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v45 = *(void *)(a1 + 240);
  *(_WORD *)char v4 = 393;
  *(void *)(v4 + 2) = v45;
  v4 += 10;
  if ((v6 & 0x100) == 0)
  {
LABEL_93:
    if ((v6 & 0x200) == 0) {
      goto LABEL_94;
    }
    goto LABEL_107;
  }
LABEL_101:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v46 = *(void *)(a1 + 184);
  *(_WORD *)char v4 = 402;
  unsigned int v47 = *(_DWORD *)(v46 + 20);
  v4[2] = v47;
  if (v47 > 0x7F) {
    uint64_t v48 = sub_188A9CC(v47, v4 + 2);
  }
  else {
    uint64_t v48 = v4 + 3;
  }
  char v4 = sub_15B7AE4(v46, v48, a3);
  if ((v6 & 0x200) == 0)
  {
LABEL_94:
    if ((v6 & 0x400) == 0) {
      goto LABEL_119;
    }
    goto LABEL_113;
  }
LABEL_107:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v49 = *(void *)(a1 + 192);
  *(_WORD *)char v4 = 410;
  unsigned int v50 = *(_DWORD *)(v49 + 20);
  v4[2] = v50;
  if (v50 > 0x7F) {
    uint64_t v51 = sub_188A9CC(v50, v4 + 2);
  }
  else {
    uint64_t v51 = v4 + 3;
  }
  char v4 = sub_15BC3D8(v49, v51, a3);
  if ((v6 & 0x400) != 0)
  {
LABEL_113:
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v52 = *(void *)(a1 + 200);
    *(_WORD *)char v4 = 418;
    unsigned int v53 = *(_DWORD *)(v52 + 20);
    v4[2] = v53;
    if (v53 > 0x7F) {
      int v54 = sub_188A9CC(v53, v4 + 2);
    }
    else {
      int v54 = v4 + 3;
    }
    char v4 = sub_15B1A68(v52, (unint64_t)v54, a3);
  }
LABEL_119:
  int v55 = *(_DWORD *)(a1 + 104);
  if (v55)
  {
    for (int k = 0; k != v55; ++k)
    {
      if (*a3 <= (unint64_t)v4) {
        char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v57 = *(void *)(*(void *)(a1 + 112) + 8 * k + 8);
      *(_WORD *)char v4 = 426;
      unsigned int v58 = *(_DWORD *)(v57 + 20);
      v4[2] = v58;
      if (v58 > 0x7F) {
        uint64_t v59 = sub_188A9CC(v58, v4 + 2);
      }
      else {
        uint64_t v59 = v4 + 3;
      }
      char v4 = sub_15BB7A0(v57, (unint64_t)v59, a3);
    }
  }
  if ((v6 & 0x800) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v60 = *(void *)(a1 + 208);
    *(_WORD *)char v4 = 434;
    unsigned int v61 = *(_DWORD *)(v60 + 20);
    v4[2] = v61;
    if (v61 > 0x7F) {
      uint64_t v62 = sub_188A9CC(v61, v4 + 2);
    }
    else {
      uint64_t v62 = v4 + 3;
    }
    char v4 = sub_144FD80(v60, (unint64_t)v62, a3);
    if ((v6 & 0x80000) == 0)
    {
LABEL_129:
      if ((v6 & 0x100000) == 0) {
        goto LABEL_146;
      }
      goto LABEL_140;
    }
  }
  else if ((v6 & 0x80000) == 0)
  {
    goto LABEL_129;
  }
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v63 = *(unsigned char *)(a1 + 249);
  *(_WORD *)char v4 = 440;
  v4[2] = v63;
  v4 += 3;
  if ((v6 & 0x100000) != 0)
  {
LABEL_140:
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v64 = *(void *)(a1 + 256);
    *(_WORD *)char v4 = 1696;
    v4[2] = v64;
    if (v64 > 0x7F)
    {
      v4[2] = v64 | 0x80;
      unint64_t v65 = v64 >> 7;
      v4[3] = v64 >> 7;
      v4 += 4;
      if (v64 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v66 = v65 >> 14;
          v65 >>= 7;
          *v4++ = v65;
        }
        while (v66);
      }
    }
    else
    {
      v4 += 3;
    }
  }
LABEL_146:
  if (*(_WORD *)(a1 + 26)) {
    char v4 = sub_1886844(a1 + 16, 200, 700, v4, a3);
  }
  uint64_t v67 = *(void *)(a1 + 8);
  if ((v67 & 1) == 0) {
    return v4;
  }
  unint64_t v69 = v67 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v69 + 31) < 0)
  {
    uint64_t v70 = *(void **)(v69 + 8);
    uint64_t v71 = *(void *)(v69 + 16);
  }
  else
  {
    uint64_t v70 = (void *)(v69 + 8);
    LODWORD(v71) = *(unsigned __int8 *)(v69 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v71)
  {
    uint64_t v72 = (int)v71;
    memcpy(v4, v70, (int)v71);
    v4 += v72;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v70, v71, v4);
}

uint64_t sub_144EC20(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(int *)(a1 + 56);
  uint64_t v4 = v2 + v3;
  uint64_t v5 = *(void *)(a1 + 64);
  if (v5) {
    int v6 = (uint64_t *)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = sub_145820C(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  uint64_t v10 = *(int *)(a1 + 80);
  uint64_t v11 = v4 + v10;
  uint64_t v12 = *(void *)(a1 + 88);
  if (v12) {
    unint64_t v13 = (uint64_t *)(v12 + 8);
  }
  else {
    unint64_t v13 = 0;
  }
  if (v10)
  {
    uint64_t v14 = 8 * v10;
    do
    {
      uint64_t v15 = *v13++;
      uint64_t v16 = sub_15B0D90(v15);
      v11 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6);
      v14 -= 8;
    }
    while (v14);
  }
  uint64_t v17 = *(int *)(a1 + 104);
  uint64_t v18 = v11 + 2 * v17;
  uint64_t v19 = *(void *)(a1 + 112);
  if (v19) {
    unsigned int v20 = (uint64_t *)(v19 + 8);
  }
  else {
    unsigned int v20 = 0;
  }
  if (v17)
  {
    uint64_t v21 = 8 * v17;
    do
    {
      uint64_t v22 = *v20++;
      uint64_t v23 = sub_15BBC64(v22);
      v18 += v23 + ((9 * (__clz(v23 | 1) ^ 0x1F) + 73) >> 6);
      v21 -= 8;
    }
    while (v21);
  }
  int v24 = *(_DWORD *)(a1 + 40);
  if (!(_BYTE)v24) {
    goto LABEL_29;
  }
  if (v24)
  {
    unint64_t v35 = *(void *)(a1 + 120) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v36 = *(unsigned __int8 *)(v35 + 23);
    uint64_t v37 = *(void *)(v35 + 8);
    if ((v36 & 0x80u) == 0) {
      uint64_t v37 = v36;
    }
    v18 += v37 + ((9 * (__clz(v37 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v24 & 2) == 0)
    {
LABEL_22:
      if ((v24 & 4) == 0) {
        goto LABEL_23;
      }
      goto LABEL_65;
    }
  }
  else if ((v24 & 2) == 0)
  {
    goto LABEL_22;
  }
  unint64_t v38 = *(void *)(a1 + 128) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v39 = *(unsigned __int8 *)(v38 + 23);
  uint64_t v40 = *(void *)(v38 + 8);
  if ((v39 & 0x80u) == 0) {
    uint64_t v40 = v39;
  }
  v18 += v40 + ((9 * (__clz(v40 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v24 & 4) == 0)
  {
LABEL_23:
    if ((v24 & 8) == 0) {
      goto LABEL_24;
    }
    goto LABEL_68;
  }
LABEL_65:
  unint64_t v41 = *(void *)(a1 + 136) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v42 = *(unsigned __int8 *)(v41 + 23);
  uint64_t v43 = *(void *)(v41 + 8);
  if ((v42 & 0x80u) == 0) {
    uint64_t v43 = v42;
  }
  v18 += v43 + ((9 * (__clz(v43 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v24 & 8) == 0)
  {
LABEL_24:
    if ((v24 & 0x10) == 0) {
      goto LABEL_25;
    }
    goto LABEL_71;
  }
LABEL_68:
  unint64_t v44 = *(void *)(a1 + 144) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v45 = *(unsigned __int8 *)(v44 + 23);
  uint64_t v46 = *(void *)(v44 + 8);
  if ((v45 & 0x80u) == 0) {
    uint64_t v46 = v45;
  }
  v18 += v46 + ((9 * (__clz(v46 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v24 & 0x10) == 0)
  {
LABEL_25:
    if ((v24 & 0x20) == 0) {
      goto LABEL_26;
    }
LABEL_72:
    uint64_t v48 = sub_15B956C(*(void *)(a1 + 160));
    v18 += v48 + ((9 * (__clz(v48 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v24 & 0x40) == 0)
    {
LABEL_27:
      if ((v24 & 0x80) == 0) {
        goto LABEL_29;
      }
      goto LABEL_28;
    }
    goto LABEL_73;
  }
LABEL_71:
  uint64_t v47 = sub_15B1D1C(*(void *)(a1 + 152));
  v18 += v47 + ((9 * (__clz(v47 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v24 & 0x20) != 0) {
    goto LABEL_72;
  }
LABEL_26:
  if ((v24 & 0x40) == 0) {
    goto LABEL_27;
  }
LABEL_73:
  uint64_t v49 = sub_15B956C(*(void *)(a1 + 168));
  v18 += v49 + ((9 * (__clz(v49 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v24 & 0x80) != 0)
  {
LABEL_28:
    uint64_t v25 = sub_15B0D90(*(void *)(a1 + 176));
    v18 += v25 + ((9 * (__clz(v25 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_29:
  if ((v24 & 0xFF00) == 0) {
    goto LABEL_42;
  }
  if ((v24 & 0x100) != 0)
  {
    uint64_t v50 = sub_15B806C(*(void *)(a1 + 184));
    v18 += v50 + ((9 * (__clz(v50 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v24 & 0x200) == 0)
    {
LABEL_32:
      if ((v24 & 0x400) == 0) {
        goto LABEL_33;
      }
      goto LABEL_77;
    }
  }
  else if ((v24 & 0x200) == 0)
  {
    goto LABEL_32;
  }
  uint64_t v51 = sub_15BC4A4(*(void *)(a1 + 192));
  v18 += v51 + ((9 * (__clz(v51 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v24 & 0x400) == 0)
  {
LABEL_33:
    if ((v24 & 0x800) == 0) {
      goto LABEL_34;
    }
    goto LABEL_78;
  }
LABEL_77:
  uint64_t v52 = sub_15B1D1C(*(void *)(a1 + 200));
  v18 += v52 + ((9 * (__clz(v52 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v24 & 0x800) == 0)
  {
LABEL_34:
    if ((v24 & 0x1000) == 0) {
      goto LABEL_35;
    }
    goto LABEL_79;
  }
LABEL_78:
  uint64_t v53 = sub_144FF70(*(void *)(a1 + 208));
  v18 += v53 + ((9 * (__clz(v53 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v24 & 0x1000) == 0)
  {
LABEL_35:
    if ((v24 & 0x2000) == 0) {
      goto LABEL_36;
    }
    goto LABEL_80;
  }
LABEL_79:
  v18 += ((9 * (__clz(*(void *)(a1 + 216) | 1) ^ 0x3F) + 73) >> 6) + 1;
  if ((v24 & 0x2000) == 0)
  {
LABEL_36:
    if ((v24 & 0x4000) == 0) {
      goto LABEL_37;
    }
    goto LABEL_84;
  }
LABEL_80:
  int v54 = *(_DWORD *)(a1 + 224);
  uint64_t v55 = ((9 * (__clz(v54 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if (v54 >= 0) {
    uint64_t v56 = v55;
  }
  else {
    uint64_t v56 = 11;
  }
  v18 += v56;
  if ((v24 & 0x4000) == 0)
  {
LABEL_37:
    if ((v24 & 0x8000) == 0) {
      goto LABEL_42;
    }
    goto LABEL_38;
  }
LABEL_84:
  int v57 = *(_DWORD *)(a1 + 228);
  uint64_t v58 = ((9 * (__clz(v57 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if (v57 >= 0) {
    uint64_t v59 = v58;
  }
  else {
    uint64_t v59 = 11;
  }
  v18 += v59;
  if ((v24 & 0x8000) != 0)
  {
LABEL_38:
    int v26 = *(_DWORD *)(a1 + 232);
    uint64_t v27 = ((9 * (__clz(v26 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if (v26 >= 0) {
      uint64_t v28 = v27;
    }
    else {
      uint64_t v28 = 11;
    }
    v18 += v28;
  }
LABEL_42:
  if ((v24 & 0x1F0000) != 0)
  {
    if ((v24 & 0x10000) != 0)
    {
      int v29 = *(_DWORD *)(a1 + 236);
      uint64_t v30 = ((9 * (__clz(v29 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if (v29 >= 0) {
        uint64_t v31 = v30;
      }
      else {
        uint64_t v31 = 11;
      }
      v18 += v31;
    }
    uint64_t v32 = v18 + 10;
    if ((v24 & 0x20000) == 0) {
      uint64_t v32 = v18;
    }
    if ((v24 & 0x40000) != 0) {
      v32 += 2;
    }
    if ((v24 & 0x80000) != 0) {
      uint64_t v18 = v32 + 3;
    }
    else {
      uint64_t v18 = v32;
    }
    if ((v24 & 0x100000) != 0) {
      v18 += ((9 * (__clz(*(void *)(a1 + 256) | 1) ^ 0x3F) + 73) >> 6) + 2;
    }
  }
  uint64_t v33 = *(void *)(a1 + 8);
  if (v33)
  {
    unint64_t v60 = v33 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v60 + 31) < 0) {
      uint64_t v61 = *(void *)(v60 + 16);
    }
    else {
      uint64_t v61 = *(unsigned __int8 *)(v60 + 31);
    }
    v18 += v61;
  }
  *(_DWORD *)(a1 + 44) = v18;
  return v18;
}

void sub_144F19C(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 56);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    int v6 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_1493ACC((uint64_t *)(a1 + 48), v6, v5, v4, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v7 = *(_DWORD *)(a1 + 56) + v4;
    *(_DWORD *)(a1 + 56) = v7;
    uint64_t v8 = *(int **)(a1 + 64);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 80);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 88) + 8);
    uint64_t v11 = (uint64_t *)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_10E4FFC((uint64_t *)(a1 + 72), v11, v10, v9, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v12 = *(_DWORD *)(a1 + 80) + v9;
    *(_DWORD *)(a1 + 80) = v12;
    unint64_t v13 = *(int **)(a1 + 88);
    if (*v13 < v12) {
      *unint64_t v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 104);
  if (v14)
  {
    uint64_t v15 = (uint64_t *)(*(void *)(a2 + 112) + 8);
    uint64_t v16 = (uint64_t *)sub_188CCE4(a1 + 96, *(_DWORD *)(a2 + 104));
    sub_1301B24((uint64_t *)(a1 + 96), v16, v15, v14, **(_DWORD **)(a1 + 112) - *(_DWORD *)(a1 + 104));
    int v17 = *(_DWORD *)(a1 + 104) + v14;
    *(_DWORD *)(a1 + 104) = v17;
    uint64_t v18 = *(int **)(a1 + 112);
    if (*v18 < v17) {
      int *v18 = v17;
    }
  }
  int v19 = *(_DWORD *)(a2 + 40);
  if (!(_BYTE)v19) {
    goto LABEL_65;
  }
  if (v19)
  {
    unsigned int v20 = (long long *)(*(void *)(a2 + 120) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 40) |= 1u;
    uint64_t v21 = *(void *)(a1 + 8);
    uint64_t v22 = (uint64_t *)(v21 & 0xFFFFFFFFFFFFFFFCLL);
    if (v21) {
      uint64_t v22 = (uint64_t *)*v22;
    }
    sub_1881DF4((std::string **)(a1 + 120), v20, v22);
    if ((v19 & 2) == 0)
    {
LABEL_13:
      if ((v19 & 4) == 0) {
        goto LABEL_14;
      }
      goto LABEL_23;
    }
  }
  else if ((v19 & 2) == 0)
  {
    goto LABEL_13;
  }
  uint64_t v23 = (long long *)(*(void *)(a2 + 128) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 40) |= 2u;
  uint64_t v24 = *(void *)(a1 + 8);
  uint64_t v25 = (uint64_t *)(v24 & 0xFFFFFFFFFFFFFFFCLL);
  if (v24) {
    uint64_t v25 = (uint64_t *)*v25;
  }
  sub_1881DF4((std::string **)(a1 + 128), v23, v25);
  if ((v19 & 4) == 0)
  {
LABEL_14:
    if ((v19 & 8) == 0) {
      goto LABEL_15;
    }
LABEL_26:
    int v29 = (long long *)(*(void *)(a2 + 144) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 40) |= 8u;
    uint64_t v30 = *(void *)(a1 + 8);
    uint64_t v31 = (uint64_t *)(v30 & 0xFFFFFFFFFFFFFFFCLL);
    if (v30) {
      uint64_t v31 = (uint64_t *)*v31;
    }
    sub_1881DF4((std::string **)(a1 + 144), v29, v31);
    if ((v19 & 0x10) == 0) {
      goto LABEL_37;
    }
    goto LABEL_29;
  }
LABEL_23:
  int v26 = (long long *)(*(void *)(a2 + 136) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 40) |= 4u;
  uint64_t v27 = *(void *)(a1 + 8);
  uint64_t v28 = (uint64_t *)(v27 & 0xFFFFFFFFFFFFFFFCLL);
  if (v27) {
    uint64_t v28 = (uint64_t *)*v28;
  }
  sub_1881DF4((std::string **)(a1 + 136), v26, v28);
  if ((v19 & 8) != 0) {
    goto LABEL_26;
  }
LABEL_15:
  if ((v19 & 0x10) != 0)
  {
LABEL_29:
    *(_DWORD *)(a1 + 40) |= 0x10u;
    uint64_t v32 = *(void *)(a1 + 152);
    if (!v32)
    {
      uint64_t v33 = *(void *)(a1 + 8);
      unint64_t v34 = (void *)(v33 & 0xFFFFFFFFFFFFFFFCLL);
      if (v33) {
        unint64_t v34 = (void *)*v34;
      }
      uint64_t v32 = sub_15C19EC((uint64_t)v34);
      *(void *)(a1 + 152) = v32;
    }
    if (*(void *)(a2 + 152)) {
      unint64_t v35 = *(uint64_t (****)())(a2 + 152);
    }
    else {
      unint64_t v35 = &off_253F208;
    }
    sub_15B1E3C(v32, (uint64_t)v35);
  }
LABEL_37:
  if ((v19 & 0x20) != 0)
  {
    *(_DWORD *)(a1 + 40) |= 0x20u;
    uint64_t v36 = *(std::string **)(a1 + 160);
    if (!v36)
    {
      uint64_t v37 = *(void *)(a1 + 8);
      unint64_t v38 = (void *)(v37 & 0xFFFFFFFFFFFFFFFCLL);
      if (v37) {
        unint64_t v38 = (void *)*v38;
      }
      uint64_t v36 = (std::string *)sub_15C1EF4((uint64_t)v38);
      *(void *)(a1 + 160) = v36;
    }
    if (*(void *)(a2 + 160)) {
      uint64_t v39 = *(uint64_t (****)())(a2 + 160);
    }
    else {
      uint64_t v39 = &off_253F4C8;
    }
    sub_15B9698(v36, (uint64_t)v39);
    if ((v19 & 0x40) == 0)
    {
LABEL_39:
      if ((v19 & 0x80) == 0) {
        goto LABEL_65;
      }
      goto LABEL_57;
    }
  }
  else if ((v19 & 0x40) == 0)
  {
    goto LABEL_39;
  }
  *(_DWORD *)(a1 + 40) |= 0x40u;
  uint64_t v40 = *(std::string **)(a1 + 168);
  if (!v40)
  {
    uint64_t v41 = *(void *)(a1 + 8);
    uint64_t v42 = (void *)(v41 & 0xFFFFFFFFFFFFFFFCLL);
    if (v41) {
      uint64_t v42 = (void *)*v42;
    }
    uint64_t v40 = (std::string *)sub_15C1EF4((uint64_t)v42);
    *(void *)(a1 + 168) = v40;
  }
  if (*(void *)(a2 + 168)) {
    uint64_t v43 = *(uint64_t (****)())(a2 + 168);
  }
  else {
    uint64_t v43 = &off_253F4C8;
  }
  sub_15B9698(v40, (uint64_t)v43);
  if ((v19 & 0x80) != 0)
  {
LABEL_57:
    *(_DWORD *)(a1 + 40) |= 0x80u;
    uint64_t v44 = *(void *)(a1 + 176);
    if (!v44)
    {
      uint64_t v45 = *(void *)(a1 + 8);
      uint64_t v46 = (void *)(v45 & 0xFFFFFFFFFFFFFFFCLL);
      if (v45) {
        uint64_t v46 = (void *)*v46;
      }
      uint64_t v44 = sub_15C1918((uint64_t)v46);
      *(void *)(a1 + 176) = v44;
    }
    if (*(void *)(a2 + 176)) {
      uint64_t v47 = *(uint64_t (****)())(a2 + 176);
    }
    else {
      uint64_t v47 = &off_253F1A0;
    }
    sub_15B0E24(v44, (uint64_t)v47);
  }
LABEL_65:
  if ((v19 & 0xFF00) == 0) {
    goto LABEL_76;
  }
  if ((v19 & 0x100) != 0)
  {
    *(_DWORD *)(a1 + 40) |= 0x100u;
    uint64_t v49 = *(std::string **)(a1 + 184);
    if (!v49)
    {
      uint64_t v50 = *(void *)(a1 + 8);
      uint64_t v51 = (void *)(v50 & 0xFFFFFFFFFFFFFFFCLL);
      if (v50) {
        uint64_t v51 = (void *)*v51;
      }
      uint64_t v49 = (std::string *)sub_15C1E94((uint64_t)v51);
      *(void *)(a1 + 184) = v49;
    }
    if (*(void *)(a2 + 184)) {
      uint64_t v52 = *(uint64_t (****)())(a2 + 184);
    }
    else {
      uint64_t v52 = &off_253F3D0;
    }
    sub_15B86B8(v49, (uint64_t)v52);
    if ((v19 & 0x200) == 0)
    {
LABEL_68:
      if ((v19 & 0x400) == 0) {
        goto LABEL_69;
      }
      goto LABEL_104;
    }
  }
  else if ((v19 & 0x200) == 0)
  {
    goto LABEL_68;
  }
  *(_DWORD *)(a1 + 40) |= 0x200u;
  uint64_t v53 = *(std::string **)(a1 + 192);
  if (!v53)
  {
    uint64_t v54 = *(void *)(a1 + 8);
    uint64_t v55 = (void *)(v54 & 0xFFFFFFFFFFFFFFFCLL);
    if (v54) {
      uint64_t v55 = (void *)*v55;
    }
    uint64_t v53 = (std::string *)sub_15C221C((uint64_t)v55);
    *(void *)(a1 + 192) = v53;
  }
  if (*(void *)(a2 + 192)) {
    uint64_t v56 = *(uint64_t (****)())(a2 + 192);
  }
  else {
    uint64_t v56 = &off_253F5C0;
  }
  sub_12329D0(v53, (uint64_t)v56);
  if ((v19 & 0x400) == 0)
  {
LABEL_69:
    if ((v19 & 0x800) == 0) {
      goto LABEL_70;
    }
    goto LABEL_112;
  }
LABEL_104:
  *(_DWORD *)(a1 + 40) |= 0x400u;
  uint64_t v57 = *(void *)(a1 + 200);
  if (!v57)
  {
    uint64_t v58 = *(void *)(a1 + 8);
    uint64_t v59 = (void *)(v58 & 0xFFFFFFFFFFFFFFFCLL);
    if (v58) {
      uint64_t v59 = (void *)*v59;
    }
    uint64_t v57 = sub_15C19EC((uint64_t)v59);
    *(void *)(a1 + 200) = v57;
  }
  if (*(void *)(a2 + 200)) {
    unint64_t v60 = *(uint64_t (****)())(a2 + 200);
  }
  else {
    unint64_t v60 = &off_253F208;
  }
  sub_15B1E3C(v57, (uint64_t)v60);
  if ((v19 & 0x800) == 0)
  {
LABEL_70:
    if ((v19 & 0x1000) == 0) {
      goto LABEL_71;
    }
    goto LABEL_120;
  }
LABEL_112:
  *(_DWORD *)(a1 + 40) |= 0x800u;
  uint64_t v61 = *(void *)(a1 + 208);
  if (!v61)
  {
    uint64_t v62 = *(void *)(a1 + 8);
    char v63 = (void *)(v62 & 0xFFFFFFFFFFFFFFFCLL);
    if (v62) {
      char v63 = (void *)*v63;
    }
    sub_14781E8((uint64_t)v63);
    *(void *)(a1 + 208) = v61;
  }
  if (*(void *)(a2 + 208)) {
    unint64_t v64 = *(uint64_t (****)())(a2 + 208);
  }
  else {
    unint64_t v64 = &off_2538FE8;
  }
  sub_144F75C(v61, (uint64_t)v64);
  if ((v19 & 0x1000) == 0)
  {
LABEL_71:
    if ((v19 & 0x2000) == 0) {
      goto LABEL_72;
    }
    goto LABEL_121;
  }
LABEL_120:
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  if ((v19 & 0x2000) == 0)
  {
LABEL_72:
    if ((v19 & 0x4000) == 0) {
      goto LABEL_73;
    }
LABEL_122:
    *(_DWORD *)(a1 + 228) = *(_DWORD *)(a2 + 228);
    if ((v19 & 0x8000) == 0) {
      goto LABEL_75;
    }
    goto LABEL_74;
  }
LABEL_121:
  *(_DWORD *)(a1 + 224) = *(_DWORD *)(a2 + 224);
  if ((v19 & 0x4000) != 0) {
    goto LABEL_122;
  }
LABEL_73:
  if ((v19 & 0x8000) != 0) {
LABEL_74:
  }
    *(_DWORD *)(a1 + 232) = *(_DWORD *)(a2 + 232);
LABEL_75:
  *(_DWORD *)(a1 + 40) |= v19;
LABEL_76:
  if ((v19 & 0x1F0000) == 0) {
    goto LABEL_84;
  }
  if ((v19 & 0x10000) != 0)
  {
    *(_DWORD *)(a1 + 236) = *(_DWORD *)(a2 + 236);
    if ((v19 & 0x20000) == 0)
    {
LABEL_79:
      if ((v19 & 0x40000) == 0) {
        goto LABEL_80;
      }
      goto LABEL_126;
    }
  }
  else if ((v19 & 0x20000) == 0)
  {
    goto LABEL_79;
  }
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  if ((v19 & 0x40000) == 0)
  {
LABEL_80:
    if ((v19 & 0x80000) == 0) {
      goto LABEL_81;
    }
LABEL_127:
    *(unsigned char *)(a1 + 249) = *(unsigned char *)(a2 + 249);
    if ((v19 & 0x100000) == 0) {
      goto LABEL_83;
    }
    goto LABEL_82;
  }
LABEL_126:
  *(unsigned char *)(a1 + 248) = *(unsigned char *)(a2 + 248);
  if ((v19 & 0x80000) != 0) {
    goto LABEL_127;
  }
LABEL_81:
  if ((v19 & 0x100000) != 0) {
LABEL_82:
  }
    *(void *)(a1 + 256) = *(void *)(a2 + 256);
LABEL_83:
  *(_DWORD *)(a1 + 40) |= v19;
LABEL_84:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v48 = *(void *)(a2 + 8);
  if (v48)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v48 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_144F75C(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 7) != 0)
  {
    if (v4)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v5 = *(std::string **)(a1 + 24);
      if (!v5)
      {
        uint64_t v6 = *(void *)(a1 + 8);
        int v7 = (void *)(v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (v6) {
          int v7 = (void *)*v7;
        }
        sub_1791234((uint64_t)v7);
        *(void *)(a1 + 24) = v5;
      }
      if (*(void *)(a2 + 24)) {
        uint64_t v8 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        uint64_t v8 = &off_25496B0;
      }
      sub_1701678(v5, (uint64_t)v8);
    }
    if ((v4 & 2) != 0)
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      uint64_t v9 = *(void *)(a1 + 32);
      if (!v9)
      {
        uint64_t v10 = *(void *)(a1 + 8);
        uint64_t v11 = (void *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
        if (v10) {
          uint64_t v11 = (void *)*v11;
        }
        uint64_t v9 = sub_15C1918((uint64_t)v11);
        *(void *)(a1 + 32) = v9;
      }
      if (*(void *)(a2 + 32)) {
        int v12 = *(uint64_t (****)())(a2 + 32);
      }
      else {
        int v12 = &off_253F1A0;
      }
      sub_15B0E24(v9, (uint64_t)v12);
    }
    if ((v4 & 4) != 0)
    {
      *(_DWORD *)(a1 + 16) |= 4u;
      uint64_t v13 = *(void *)(a1 + 40);
      if (!v13)
      {
        uint64_t v14 = *(void *)(a1 + 8);
        uint64_t v15 = (void *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
        if (v14) {
          uint64_t v15 = (void *)*v15;
        }
        uint64_t v13 = sub_15C1918((uint64_t)v15);
        *(void *)(a1 + 40) = v13;
      }
      if (*(void *)(a2 + 40)) {
        uint64_t v16 = *(uint64_t (****)())(a2 + 40);
      }
      else {
        uint64_t v16 = &off_253F1A0;
      }
      sub_15B0E24(v13, (uint64_t)v16);
    }
  }
  uint64_t v17 = *(void *)(a2 + 8);
  if (v17)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v17 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_144F8A4(uint64_t a1)
{
  uint64_t result = sub_18856CC(a1 + 16);
  if (result)
  {
    uint64_t v3 = *(unsigned int *)(a1 + 56);
    while ((int)v3 >= 1)
    {
      uint64_t v4 = v3 - 1;
      char v5 = sub_1458F64(*(void *)(*(void *)(a1 + 64) + 8 * v3));
      uint64_t v3 = v4;
      if ((v5 & 1) == 0) {
        return 0;
      }
    }
    uint64_t v6 = *(unsigned int *)(a1 + 80);
    while ((int)v6 >= 1)
    {
      uint64_t v7 = v6 - 1;
      char v8 = sub_15B0F18(*(void *)(*(void *)(a1 + 88) + 8 * v6));
      uint64_t v6 = v7;
      if ((v8 & 1) == 0) {
        return 0;
      }
    }
    uint64_t v9 = *(unsigned int *)(a1 + 104);
    while ((int)v9 >= 1)
    {
      uint64_t v10 = v9 - 1;
      char v11 = sub_15BC024(*(void *)(*(void *)(a1 + 112) + 8 * v9));
      uint64_t v9 = v10;
      if ((v11 & 1) == 0) {
        return 0;
      }
    }
    int v12 = *(_DWORD *)(a1 + 40);
    if ((v12 & 0x10) != 0)
    {
      uint64_t result = sub_15B1FC0(*(void *)(a1 + 152));
      if (!result) {
        return result;
      }
      int v12 = *(_DWORD *)(a1 + 40);
    }
    if ((v12 & 0x20) != 0)
    {
      uint64_t result = sub_15B9824(*(void *)(a1 + 160));
      if (!result) {
        return result;
      }
      int v12 = *(_DWORD *)(a1 + 40);
    }
    if ((v12 & 0x40) != 0)
    {
      uint64_t result = sub_15B9824(*(void *)(a1 + 168));
      if (!result) {
        return result;
      }
      int v12 = *(_DWORD *)(a1 + 40);
    }
    if ((v12 & 0x80) != 0)
    {
      uint64_t result = sub_15B0F18(*(void *)(a1 + 176));
      if (!result) {
        return result;
      }
      int v12 = *(_DWORD *)(a1 + 40);
    }
    if ((v12 & 0x100) != 0)
    {
      uint64_t result = sub_15B8CAC(*(void *)(a1 + 184));
      if (!result) {
        return result;
      }
      int v12 = *(_DWORD *)(a1 + 40);
    }
    if ((v12 & 0x200) != 0)
    {
      uint64_t result = sub_15BC528(*(void *)(a1 + 192));
      if (!result) {
        return result;
      }
      int v12 = *(_DWORD *)(a1 + 40);
    }
    if ((v12 & 0x400) != 0)
    {
      uint64_t result = sub_15B1FC0(*(void *)(a1 + 200));
      if (!result) {
        return result;
      }
      int v12 = *(_DWORD *)(a1 + 40);
    }
    if ((v12 & 0x800) == 0) {
      return 1;
    }
    uint64_t result = sub_144F9F0(*(void *)(a1 + 208));
    if (result) {
      return 1;
    }
  }
  return result;
}

uint64_t sub_144F9F0(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 2) != 0)
  {
    uint64_t result = sub_15B0F18(*(void *)(a1 + 32));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 4) == 0) {
    return 1;
  }
  uint64_t result = sub_15B0F18(*(void *)(a1 + 40));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_144FA3C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.Place");
}

uint64_t sub_144FA4C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_12;
    }
  }
  else if (v4)
  {
    goto LABEL_12;
  }
  if ((uint64_t (***)())a1 != &off_2538FE8)
  {
    if (*(void *)(a1 + 24))
    {
      sub_178F1F4();
      operator delete();
    }
    if (*(void *)(a1 + 32))
    {
      sub_15B0994();
      operator delete();
    }
    if (*(void *)(a1 + 40))
    {
      sub_15B0994();
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_12:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_144FB3C(uint64_t a1)
{
  sub_144FA4C(a1);

  operator delete();
}

char *sub_144FB74(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v22 = a2;
  if (sub_11947B8((uint64_t)a3, &v22, a3[11].i32[1])) {
    return v22;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v22 + 1;
    unsigned int v8 = *v22;
    if (*v22 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v22, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v22 + 2;
      }
    }
    uint64_t v22 = v7;
    unsigned int v11 = v8 >> 3;
    if (v8 >> 3 == 3) {
      break;
    }
    if (v11 == 2)
    {
      if (v8 == 18)
      {
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v16 = *(void *)(a1 + 32);
        if (!v16)
        {
          uint64_t v18 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v18 = (void *)*v18;
          }
          uint64_t v16 = sub_15C1918((uint64_t)v18);
          *(void *)(a1 + 32) = v16;
          goto LABEL_31;
        }
        goto LABEL_32;
      }
      goto LABEL_14;
    }
    if (v11 != 1 || v8 != 10) {
      goto LABEL_14;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v19 = *(void *)(a1 + 24);
    if (!v19)
    {
      unsigned int v20 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        unsigned int v20 = (void *)*v20;
      }
      sub_1791234((uint64_t)v20);
      uint64_t v19 = v21;
      *(void *)(a1 + 24) = v21;
      uint64_t v7 = v22;
    }
    uint64_t v15 = sub_1264784(a3, v19, (unsigned __int8 *)v7);
LABEL_38:
    uint64_t v22 = v15;
    if (!v15) {
      return 0;
    }
    if (sub_11947B8((uint64_t)a3, &v22, a3[11].i32[1])) {
      return v22;
    }
  }
  if (v8 == 26)
  {
    *(_DWORD *)(a1 + 16) |= 4u;
    uint64_t v16 = *(void *)(a1 + 40);
    if (!v16)
    {
      uint64_t v17 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        uint64_t v17 = (void *)*v17;
      }
      uint64_t v16 = sub_15C1918((uint64_t)v17);
      *(void *)(a1 + 40) = v16;
LABEL_31:
      uint64_t v7 = v22;
    }
LABEL_32:
    uint64_t v15 = sub_1198F14(a3, v16, (unsigned __int8 *)v7);
    goto LABEL_38;
  }
LABEL_14:
  if (v8) {
    BOOL v13 = (v8 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v6)
    {
      uint64_t v14 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = v22;
    }
    uint64_t v15 = (char *)sub_1885AC0(v8, v14, v7, a3);
    goto LABEL_38;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v22;
  }
  return 0;
}

unsigned char *sub_144FD80(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    unsigned char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    uint64_t v4 = sub_178F4EC(v7, (unint64_t)v9, a3);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_23;
      }
      goto LABEL_17;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v10 = *(void *)(a1 + 32);
  unsigned char *v4 = 18;
  unsigned int v11 = *(_DWORD *)(v10 + 44);
  v4[1] = v11;
  if (v11 > 0x7F) {
    int v12 = sub_188A9CC(v11, v4 + 1);
  }
  else {
    int v12 = v4 + 2;
  }
  uint64_t v4 = sub_15B0C0C(v10, v12, a3);
  if ((v6 & 4) != 0)
  {
LABEL_17:
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v13 = *(void *)(a1 + 40);
    unsigned char *v4 = 26;
    unsigned int v14 = *(_DWORD *)(v13 + 44);
    v4[1] = v14;
    if (v14 > 0x7F) {
      uint64_t v15 = sub_188A9CC(v14, v4 + 1);
    }
    else {
      uint64_t v15 = v4 + 2;
    }
    uint64_t v4 = sub_15B0C0C(v13, v15, a3);
  }
LABEL_23:
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return v4;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    uint64_t v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    uint64_t v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(v4, v19, (int)v20);
    v4 += v21;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v19, v20, v4);
}

uint64_t sub_144FF70(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 7) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_10;
  }
  if (v2)
  {
    uint64_t v4 = sub_178F82C(*(void *)(a1 + 24));
    uint64_t v3 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_7:
    uint64_t v5 = sub_15B0D90(*(void *)(a1 + 32));
    v3 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_8:
  if ((v2 & 4) != 0)
  {
    uint64_t v6 = sub_15B0D90(*(void *)(a1 + 40));
    v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  uint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v9 + 31) < 0) {
      uint64_t v10 = *(void *)(v9 + 16);
    }
    else {
      uint64_t v10 = *(unsigned __int8 *)(v9 + 31);
    }
    v3 += v10;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

void *sub_1450078@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.ServerGroundView");
}

uint64_t sub_1450088(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_2539018)
  {
    uint64_t v6 = *(void *)(a1 + 32);
    if (v6)
    {
      sub_14524FC(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1450154(uint64_t a1)
{
  sub_1450088(a1);

  operator delete();
}

uint64_t sub_145018C(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 3) != 0)
  {
    if ((v2 & 1) == 0) {
      goto LABEL_5;
    }
    unint64_t v3 = *(void *)(result + 24) & 0xFFFFFFFFFFFFFFFELL;
    if ((*(char *)(v3 + 23) & 0x80000000) == 0)
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
LABEL_5:
      if ((v2 & 2) == 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
    **(unsigned char **)unint64_t v3 = 0;
    *(void *)(v3 + 8) = 0;
    if ((v2 & 2) != 0) {
LABEL_6:
    }
      uint64_t result = sub_1450220(*(void *)(result + 32));
  }
LABEL_7:
  char v5 = *(unsigned char *)(v1 + 8);
  uint64_t v4 = v1 + 8;
  *(_DWORD *)(v4 + 8) = 0;
  if (v5)
  {
    return sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

uint64_t sub_1450220(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    unint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_1452078(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  if (*(unsigned char *)(v1 + 16))
  {
    unint64_t v5 = *(void *)(v1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v5 + 23) < 0)
    {
      **(unsigned char **)unint64_t v5 = 0;
      *(void *)(v5 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v5 = 0;
      *(unsigned char *)(v5 + 23) = 0;
    }
  }
  char v7 = *(unsigned char *)(v1 + 8);
  uint64_t v6 = v1 + 8;
  *(_DWORD *)(v6 + 48) = 0;
  *(_DWORD *)(v6 + 8) = 0;
  if (v7)
  {
    return sub_188B4AC((uint64_t *)v6);
  }
  return result;
}

uint64_t sub_14502D4(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v20 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
    return *(void *)v20;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    char v7 = (unsigned __int8 *)(*(void *)v20 + 1);
    unsigned int v8 = **(unsigned char **)v20;
    if ((char)**(unsigned char **)v20 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if ((char)*v7 < 0)
      {
        char v7 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v20, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        char v7 = (unsigned __int8 *)(*(void *)v20 + 2);
      }
    }
    *(void *)uint64_t v20 = v7;
    if (v8 >> 3 != 2) {
      break;
    }
    if (v8 != 18) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v15 = *(void *)(a1 + 32);
    if (!v15)
    {
      uint64_t v16 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        uint64_t v16 = (void *)*v16;
      }
      uint64_t v15 = sub_14784B0((uint64_t)v16);
      *(void *)(a1 + 32) = v15;
      char v7 = *(unsigned __int8 **)v20;
    }
    uint64_t v14 = sub_1450494(a3, v15, v7);
LABEL_29:
    *(void *)uint64_t v20 = v14;
    if (!v14) {
      goto LABEL_35;
    }
    if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
      return *(void *)v20;
    }
  }
  if (v8 >> 3 == 1 && v8 == 10)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v17 = *(void *)(a1 + 8);
    unint64_t v18 = (uint64_t *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
    if (v17) {
      unint64_t v18 = (uint64_t *)*v18;
    }
    uint64_t v19 = (std::string *)sub_1880F84((void *)(a1 + 24), v18);
    uint64_t v14 = (uint64_t)sub_188C244(v19, *(char **)v20, (uint64_t)a3);
    goto LABEL_29;
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      char v7 = *(unsigned __int8 **)v20;
    }
    uint64_t v14 = (uint64_t)sub_1885AC0(v8, v13, (char *)v7, a3);
    goto LABEL_29;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v20;
  }
LABEL_35:
  *(void *)uint64_t v20 = 0;
  return *(void *)v20;
}

uint64_t sub_1450494(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_14525E0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_1450524(uint64_t a1, unsigned char *__dst, unint64_t *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v7 = *(void *)(a1 + 32);
    unsigned char *v4 = 18;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    uint64_t v4 = sub_1452918(v7, (unint64_t)v9, a3);
  }
  uint64_t v10 = *(void *)(a1 + 8);
  if ((v10 & 1) == 0) {
    return v4;
  }
  unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v12 + 31) < 0)
  {
    uint64_t v13 = *(void **)(v12 + 8);
    uint64_t v14 = *(void *)(v12 + 16);
  }
  else
  {
    uint64_t v13 = (void *)(v12 + 8);
    LODWORD(v14) = *(unsigned __int8 *)(v12 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v14)
  {
    uint64_t v15 = (int)v14;
    memcpy(v4, v13, (int)v14);
    v4 += v15;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v13, v14, v4);
}

uint64_t sub_1450654(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 3) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_10;
  }
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_10;
    }
LABEL_9:
    uint64_t v7 = sub_1452AFC(*(void *)(a1 + 32));
    v3 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    goto LABEL_10;
  }
  unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
  uint64_t v6 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    uint64_t v6 = v5;
  }
  uint64_t v3 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 2) != 0) {
    goto LABEL_9;
  }
LABEL_10:
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v3 += v11;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_1450738(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 3) != 0)
  {
    if (v4)
    {
      uint64_t v5 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      uint64_t v6 = (std::string **)&result[1];
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v8 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v8 = (uint64_t *)*v8;
      }
      uint64_t result = sub_1881DF4(v6, v5, v8);
    }
    if ((v4 & 2) != 0)
    {
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
      unsigned int v9 = (std::string *)v3[1].__r_.__value_.__l.__size_;
      if (!v9)
      {
        std::string::size_type v10 = v3->__r_.__value_.__l.__size_;
        uint64_t v11 = (void *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
        if (v10) {
          uint64_t v11 = (void *)*v11;
        }
        unsigned int v9 = (std::string *)sub_14784B0((uint64_t)v11);
        v3[1].__r_.__value_.__l.__size_ = (std::string::size_type)v9;
      }
      if (*(void *)(a2 + 32)) {
        unint64_t v12 = *(uint64_t (****)())(a2 + 32);
      }
      else {
        unint64_t v12 = &off_2539090;
      }
      uint64_t result = sub_1450824(v9, (uint64_t)v12);
    }
  }
  uint64_t v13 = *(void *)(a2 + 8);
  if (v13)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v13 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

std::string *sub_1450824(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = (std::string *)sub_1493BE4((uint64_t *)&v3[1], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2]- LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    uint64_t v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 3) != 0)
  {
    if (v9)
    {
      std::string::size_type v10 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      unint64_t v12 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        unint64_t v12 = (uint64_t *)*v12;
      }
      uint64_t result = sub_1881DF4((std::string **)&v3[2], v10, v12);
    }
    if ((v9 & 2) != 0) {
      LODWORD(v3[2].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 56);
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= v9;
  }
  uint64_t v13 = *(void *)(a2 + 8);
  if (v13)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v13 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_145094C()
{
  return 1;
}

void *sub_1450954@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.Business.Review.User");
}

uint64_t sub_1450964(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_14;
    }
  }
  else if (v4)
  {
    goto LABEL_14;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(uint64_t **)(a1 + 40) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 40));
  }
  if ((uint64_t (***)())a1 != &off_2539040)
  {
    uint64_t v6 = *(void *)(a1 + 48);
    if (v6)
    {
      sub_1450088(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_14:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1450A60(uint64_t a1)
{
  sub_1450964(a1);

  operator delete();
}

uint64_t sub_1450A98(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 0xF) == 0) {
    goto LABEL_7;
  }
  if (v2)
  {
    unint64_t v5 = *(void *)(result + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v5 + 23) < 0)
    {
      **(unsigned char **)unint64_t v5 = 0;
      *(void *)(v5 + 8) = 0;
      if ((v2 & 2) != 0) {
        goto LABEL_17;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v5 = 0;
      *(unsigned char *)(v5 + 23) = 0;
      if ((v2 & 2) != 0) {
        goto LABEL_17;
      }
    }
LABEL_4:
    if ((v2 & 4) == 0) {
      goto LABEL_5;
    }
    goto LABEL_21;
  }
  if ((v2 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_17:
  unint64_t v6 = *(void *)(result + 32) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v6 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v6 = 0;
    *(unsigned char *)(v6 + 23) = 0;
    if ((v2 & 4) != 0) {
      goto LABEL_21;
    }
LABEL_5:
    if ((v2 & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  **(unsigned char **)unint64_t v6 = 0;
  *(void *)(v6 + 8) = 0;
  if ((v2 & 4) == 0) {
    goto LABEL_5;
  }
LABEL_21:
  unint64_t v7 = *(void *)(result + 40) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v7 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v7 = 0;
    *(unsigned char *)(v7 + 23) = 0;
    if ((v2 & 8) == 0) {
      goto LABEL_7;
    }
LABEL_6:
    uint64_t result = sub_145018C(*(void *)(result + 48));
    goto LABEL_7;
  }
  **(unsigned char **)unint64_t v7 = 0;
  *(void *)(v7 + 8) = 0;
  if ((v2 & 8) != 0) {
    goto LABEL_6;
  }
LABEL_7:
  if ((v2 & 0x70) != 0)
  {
    *(void *)(v1 + 56) = 0;
    *(void *)(v1 + 64) = 0;
    *(unsigned char *)(v1 + 72) = 0;
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_1450BAC(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v31 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v31, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (unsigned __int8 *)(*(void *)v31 + 1);
    unsigned int v9 = **(unsigned char **)v31;
    if ((char)**(unsigned char **)v31 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        uint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v31, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (unsigned __int8 *)(*(void *)v31 + 2);
      }
    }
    *(void *)uint64_t v31 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_38;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        uint64_t v14 = (void *)(a1 + 24);
        goto LABEL_32;
      case 2u:
        if (v9 != 17) {
          goto LABEL_38;
        }
        uint64_t v16 = *(void *)v8;
        uint64_t v15 = v8 + 8;
        v5 |= 0x10u;
        *(void *)(a1 + 56) = v16;
        goto LABEL_17;
      case 3u:
        if (v9 != 25) {
          goto LABEL_38;
        }
        uint64_t v17 = *(void *)v8;
        uint64_t v15 = v8 + 8;
        v5 |= 0x20u;
        *(void *)(a1 + 64) = v17;
LABEL_17:
        *(void *)uint64_t v31 = v15;
        goto LABEL_46;
      case 4u:
        if (v9 != 34) {
          goto LABEL_38;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        unint64_t v18 = *(void **)(a1 + 48);
        if (!v18)
        {
          uint64_t v19 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v19 = (void *)*v19;
          }
          unint64_t v18 = sub_1478264((uint64_t)v19);
          *(void *)(a1 + 48) = v18;
          uint64_t v8 = *(unsigned __int8 **)v31;
        }
        uint64_t v20 = sub_1450ED8(a3, (uint64_t)v18, v8);
        goto LABEL_45;
      case 5u:
        if (v9 != 42) {
          goto LABEL_38;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v21 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v21 & 0xFFFFFFFFFFFFFFFCLL);
        if (v21) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        uint64_t v14 = (void *)(a1 + 32);
        goto LABEL_32;
      case 6u:
        if (v9 != 50) {
          goto LABEL_38;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v22 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v22 & 0xFFFFFFFFFFFFFFFCLL);
        if (v22) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        uint64_t v14 = (void *)(a1 + 40);
LABEL_32:
        uint64_t v23 = (std::string *)sub_1880F84(v14, v13);
        uint64_t v20 = (uint64_t)sub_188C244(v23, *(char **)v31, (uint64_t)a3);
        goto LABEL_45;
      case 7u:
        if (v9 != 56) {
          goto LABEL_38;
        }
        v5 |= 0x40u;
        uint64_t v24 = (char *)(v8 + 1);
        uint64_t v25 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_37;
        }
        int v26 = *v24;
        uint64_t v25 = v25 + (v26 << 7) - 128;
        if (v26 < 0)
        {
          uint64_t v29 = sub_188C138((uint64_t)v8, v25);
          *(void *)uint64_t v31 = v29;
          *(unsigned char *)(a1 + 72) = v30 != 0;
          if (!v29) {
            goto LABEL_53;
          }
        }
        else
        {
          uint64_t v24 = (char *)(v8 + 2);
LABEL_37:
          *(void *)uint64_t v31 = v24;
          *(unsigned char *)(a1 + 72) = v25 != 0;
        }
        goto LABEL_46;
      default:
LABEL_38:
        if (v9) {
          BOOL v27 = (v9 & 7) == 4;
        }
        else {
          BOOL v27 = 1;
        }
        if (!v27)
        {
          if (*v7)
          {
            uint64_t v28 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v28 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = *(unsigned __int8 **)v31;
          }
          uint64_t v20 = (uint64_t)sub_1885AC0(v9, v28, (char *)v8, a3);
LABEL_45:
          *(void *)uint64_t v31 = v20;
          if (!v20) {
            goto LABEL_53;
          }
LABEL_46:
          if (sub_11947B8((uint64_t)a3, (char **)v31, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_53:
        }
          *(void *)uint64_t v31 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v31;
    }
  }
}

uint64_t sub_1450ED8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_14502D4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_1450F68(uint64_t a1, unsigned char *__dst, unint64_t *a3)
{
  char v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    char v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 0x10) == 0)
    {
LABEL_3:
      if ((v6 & 0x20) == 0) {
        goto LABEL_4;
      }
      goto LABEL_13;
    }
  }
  else if ((v6 & 0x10) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v7 = *(void *)(a1 + 56);
  unsigned char *v4 = 17;
  *(void *)(v4 + 1) = v7;
  v4 += 9;
  if ((v6 & 0x20) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_16;
  }
LABEL_13:
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v8 = *(void *)(a1 + 64);
  unsigned char *v4 = 25;
  *(void *)(v4 + 1) = v8;
  v4 += 9;
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_22;
  }
LABEL_16:
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v9 = *(void *)(a1 + 48);
  unsigned char *v4 = 34;
  unsigned int v10 = *(_DWORD *)(v9 + 20);
  v4[1] = v10;
  if (v10 > 0x7F) {
    unsigned int v11 = sub_188A9CC(v10, v4 + 1);
  }
  else {
    unsigned int v11 = v4 + 2;
  }
  char v4 = sub_1450524(v9, v11, a3);
  if ((v6 & 2) == 0)
  {
LABEL_6:
    if ((v6 & 4) == 0) {
      goto LABEL_7;
    }
    goto LABEL_23;
  }
LABEL_22:
  char v4 = sub_117A0AC(a3, 5, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_27;
    }
    goto LABEL_24;
  }
LABEL_23:
  char v4 = sub_117A0AC(a3, 6, (const void **)(*(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x40) == 0) {
    goto LABEL_27;
  }
LABEL_24:
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v12 = *(unsigned char *)(a1 + 72);
  unsigned char *v4 = 56;
  v4[1] = v12;
  v4 += 2;
LABEL_27:
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    uint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    uint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_14511A8(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0x7F) == 0)
  {
    uint64_t result = 0;
    goto LABEL_22;
  }
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  unint64_t v5 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
  uint64_t v7 = *(void *)(v5 + 8);
  if ((v6 & 0x80u) == 0) {
    uint64_t v7 = v6;
  }
  uint64_t v3 = v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 2) != 0)
  {
LABEL_9:
    unint64_t v8 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v9 = *(unsigned __int8 *)(v8 + 23);
    uint64_t v10 = *(void *)(v8 + 8);
    if ((v9 & 0x80u) == 0) {
      uint64_t v10 = v9;
    }
    v3 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v2 & 4) != 0)
  {
    unint64_t v14 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v15 = *(unsigned __int8 *)(v14 + 23);
    uint64_t v16 = *(void *)(v14 + 8);
    if ((v15 & 0x80u) == 0) {
      uint64_t v16 = v15;
    }
    v3 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 8) == 0) {
      goto LABEL_15;
    }
    goto LABEL_14;
  }
  if ((v2 & 8) != 0)
  {
LABEL_14:
    uint64_t v11 = sub_1450654(*(void *)(a1 + 48));
    v3 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_15:
  uint64_t v12 = v3 + 9;
  if ((v2 & 0x10) == 0) {
    uint64_t v12 = v3;
  }
  if ((v2 & 0x20) != 0) {
    v12 += 9;
  }
  if ((v2 & 0x40) != 0) {
    uint64_t result = v12 + 2;
  }
  else {
    uint64_t result = v12;
  }
LABEL_22:
  uint64_t v13 = *(void *)(a1 + 8);
  if (v13)
  {
    unint64_t v17 = v13 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v17 + 31) < 0) {
      uint64_t v18 = *(void *)(v17 + 16);
    }
    else {
      uint64_t v18 = *(unsigned __int8 *)(v17 + 31);
    }
    result += v18;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

std::string *sub_1451344(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0x7F) != 0)
  {
    if (v4)
    {
      uint64_t v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      uint64_t v7 = (std::string **)&result[1];
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v9 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v9 = (uint64_t *)*v9;
      }
      uint64_t result = sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_21;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    uint64_t v10 = (long long *)(*(void *)(a2 + 32) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    std::string::size_type v11 = v3->__r_.__value_.__l.__size_;
    uint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
    if (v11) {
      uint64_t v12 = (uint64_t *)*v12;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[1].__r_.__value_.__l.__size_, v10, v12);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_24;
    }
LABEL_21:
    uint64_t v13 = (long long *)(*(void *)(a2 + 40) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
    std::string::size_type v14 = v3->__r_.__value_.__l.__size_;
    uint64_t v15 = (uint64_t *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
    if (v14) {
      uint64_t v15 = (uint64_t *)*v15;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[1].__r_.__value_.__r.__words[2], v13, v15);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0) {
        goto LABEL_7;
      }
      goto LABEL_32;
    }
LABEL_24:
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 8u;
    std::string::pointer data = (std::string *)v3[2].__r_.__value_.__l.__data_;
    if (!data)
    {
      std::string::size_type v17 = v3->__r_.__value_.__l.__size_;
      uint64_t v18 = (void *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
      if (v17) {
        uint64_t v18 = (void *)*v18;
      }
      std::string::pointer data = (std::string *)sub_1478264((uint64_t)v18);
      v3[2].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
    }
    if (*(void *)(a2 + 48)) {
      uint64_t v19 = *(uint64_t (****)())(a2 + 48);
    }
    else {
      uint64_t v19 = &off_2539018;
    }
    uint64_t result = sub_1450738(data, (uint64_t)v19);
    if ((v4 & 0x10) == 0)
    {
LABEL_7:
      if ((v4 & 0x20) == 0) {
        goto LABEL_8;
      }
      goto LABEL_33;
    }
LABEL_32:
    v3[2].__r_.__value_.__l.__size_ = *(void *)(a2 + 56);
    if ((v4 & 0x20) == 0)
    {
LABEL_8:
      if ((v4 & 0x40) == 0)
      {
LABEL_10:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
        goto LABEL_11;
      }
LABEL_9:
      v3[3].__r_.__value_.__s.__data_[0] = *(unsigned char *)(a2 + 72);
      goto LABEL_10;
    }
LABEL_33:
    v3[2].__r_.__value_.__r.__words[2] = *(void *)(a2 + 64);
    if ((v4 & 0x40) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
LABEL_11:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_14514E4()
{
  return 1;
}

void *sub_14514EC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.Business.Review");
}

uint64_t sub_14514FC(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_11;
    }
  }
  else if (v4)
  {
    goto LABEL_11;
  }
  uint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 56) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 56));
  }
  if (*(uint64_t **)(a1 + 64) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 64));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_11:
  sub_1492FCC((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_14515D4(uint64_t a1)
{
  sub_14514FC(a1);

  operator delete();
}

uint64_t sub_145160C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v40 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v40, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    unint64_t v8 = (char *)(*(void *)v40 + 1);
    unsigned int v9 = **(unsigned char **)v40;
    if ((char)**(unsigned char **)v40 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unint64_t v8 = (char *)sub_188C180(*(uint64_t *)v40, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unint64_t v8 = (char *)(*(void *)v40 + 2);
      }
    }
    *(void *)uint64_t v40 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 9) {
          goto LABEL_47;
        }
        uint64_t v13 = *(void *)v8;
        uint64_t v12 = v8 + 8;
        v5 |= 8u;
        *(void *)(a1 + 72) = v13;
        goto LABEL_13;
      case 2u:
        if (v9 != 17) {
          goto LABEL_47;
        }
        uint64_t v14 = *(void *)v8;
        uint64_t v12 = v8 + 8;
        v5 |= 0x40u;
        *(void *)(a1 + 88) = v14;
LABEL_13:
        *(void *)uint64_t v40 = v12;
        goto LABEL_55;
      case 3u:
        if (v9 != 24) {
          goto LABEL_47;
        }
        v5 |= 0x10u;
        uint64_t v16 = v8 + 1;
        LODWORD(v15) = *v8;
        if ((v15 & 0x80) == 0) {
          goto LABEL_18;
        }
        int v17 = *v16;
        uint64_t v15 = v15 + (v17 << 7) - 128;
        if (v17 < 0)
        {
          uint64_t v36 = sub_188C138((uint64_t)v8, v15);
          *(void *)uint64_t v40 = v36;
          *(_DWORD *)(a1 + 80) = v37;
          if (!v36) {
            goto LABEL_64;
          }
        }
        else
        {
          uint64_t v16 = v8 + 2;
LABEL_18:
          *(void *)uint64_t v40 = v16;
          *(_DWORD *)(a1 + 80) = v15;
        }
        goto LABEL_55;
      case 4u:
        if (v9 != 34) {
          goto LABEL_47;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v18 = *(void *)(a1 + 8);
        uint64_t v19 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
        if (v18) {
          uint64_t v19 = (uint64_t *)*v19;
        }
        uint64_t v20 = (void *)(a1 + 48);
        goto LABEL_46;
      case 5u:
        if (v9 != 42) {
          goto LABEL_47;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v21 = *(void *)(a1 + 8);
        uint64_t v19 = (uint64_t *)(v21 & 0xFFFFFFFFFFFFFFFCLL);
        if (v21) {
          uint64_t v19 = (uint64_t *)*v19;
        }
        uint64_t v20 = (void *)(a1 + 56);
        goto LABEL_46;
      case 6u:
        if (v9 != 50) {
          goto LABEL_47;
        }
        uint64_t v22 = v8 - 1;
        while (1)
        {
          uint64_t v23 = (unsigned __int8 *)(v22 + 1);
          *(void *)uint64_t v40 = v22 + 1;
          uint64_t v24 = *(_DWORD **)(a1 + 40);
          if (v24 && (uint64_t v25 = *(int *)(a1 + 32), (int)v25 < *v24))
          {
            *(_DWORD *)(a1 + 32) = v25 + 1;
            uint64_t v26 = *(void *)&v24[2 * v25 + 2];
          }
          else
          {
            uint64_t v27 = sub_14782E8(*(void *)(a1 + 24));
            uint64_t v26 = sub_188CDC8(a1 + 24, v27);
            uint64_t v23 = *(unsigned __int8 **)v40;
          }
          uint64_t v22 = (char *)sub_14519C8(a3, v26, v23);
          *(void *)uint64_t v40 = v22;
          if (!v22) {
            goto LABEL_64;
          }
          if (*(void *)a3 <= (unint64_t)v22 || *v22 != 50) {
            goto LABEL_55;
          }
        }
      case 7u:
        if (v9 != 56) {
          goto LABEL_47;
        }
        v5 |= 0x20u;
        uint64_t v29 = v8 + 1;
        LODWORD(v28) = *v8;
        if ((v28 & 0x80) == 0) {
          goto LABEL_41;
        }
        int v30 = *v29;
        uint64_t v28 = v28 + (v30 << 7) - 128;
        if (v30 < 0)
        {
          uint64_t v38 = sub_188C138((uint64_t)v8, v28);
          *(void *)uint64_t v40 = v38;
          *(_DWORD *)(a1 + 84) = v39;
          if (!v38) {
            goto LABEL_64;
          }
        }
        else
        {
          uint64_t v29 = v8 + 2;
LABEL_41:
          *(void *)uint64_t v40 = v29;
          *(_DWORD *)(a1 + 84) = v28;
        }
        goto LABEL_55;
      case 8u:
        if (v9 != 66) {
          goto LABEL_47;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v31 = *(void *)(a1 + 8);
        uint64_t v19 = (uint64_t *)(v31 & 0xFFFFFFFFFFFFFFFCLL);
        if (v31) {
          uint64_t v19 = (uint64_t *)*v19;
        }
        uint64_t v20 = (void *)(a1 + 64);
LABEL_46:
        uint64_t v32 = (std::string *)sub_1880F84(v20, v19);
        uint64_t v33 = (void *)sub_188C244(v32, *(char **)v40, (uint64_t)a3);
        goto LABEL_54;
      default:
LABEL_47:
        if (v9) {
          BOOL v34 = (v9 & 7) == 4;
        }
        else {
          BOOL v34 = 1;
        }
        if (!v34)
        {
          if (*v7)
          {
            unint64_t v35 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            unint64_t v35 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unint64_t v8 = *(char **)v40;
          }
          uint64_t v33 = sub_1885AC0(v9, v35, v8, a3);
LABEL_54:
          *(void *)uint64_t v40 = v33;
          if (!v33) {
            goto LABEL_64;
          }
LABEL_55:
          if (sub_11947B8((uint64_t)a3, (char **)v40, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_64:
        }
          *(void *)uint64_t v40 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v40;
    }
  }
}

uint64_t sub_14519C8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1450BAC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_1451A58(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  int v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 8) != 0)
  {
    if (*a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 72);
    unsigned char *v4 = 9;
    *(void *)(v4 + 1) = v7;
    v4 += 9;
    if ((v6 & 0x40) == 0)
    {
LABEL_3:
      if ((v6 & 0x10) == 0) {
        goto LABEL_17;
      }
      goto LABEL_11;
    }
  }
  else if ((v6 & 0x40) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v8 = *(void *)(a1 + 88);
  unsigned char *v4 = 17;
  *(void *)(v4 + 1) = v8;
  v4 += 9;
  if ((v6 & 0x10) != 0)
  {
LABEL_11:
    if (*a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v9 = *(int *)(a1 + 80);
    unsigned char *v4 = 24;
    v4[1] = v9;
    if (v9 > 0x7F)
    {
      v4[1] = v9 | 0x80;
      unint64_t v10 = v9 >> 7;
      v4[2] = v9 >> 7;
      v4 += 3;
      if (v9 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v11 = v10 >> 14;
          v10 >>= 7;
          *v4++ = v10;
        }
        while (v11);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_17:
  if (v6) {
    int v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  if ((v6 & 2) != 0) {
    int v4 = sub_117A0AC(a3, 5, (const void **)(*(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  int v12 = *(_DWORD *)(a1 + 32);
  if (v12)
  {
    for (int i = 0; i != v12; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v14 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      unsigned char *v4 = 50;
      unsigned int v15 = *(_DWORD *)(v14 + 20);
      v4[1] = v15;
      if (v15 > 0x7F) {
        uint64_t v16 = sub_188A9CC(v15, v4 + 1);
      }
      else {
        uint64_t v16 = v4 + 2;
      }
      int v4 = sub_1450F68(v14, v16, a3);
    }
  }
  if ((v6 & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v17 = *(int *)(a1 + 84);
    unsigned char *v4 = 56;
    v4[1] = v17;
    if (v17 > 0x7F)
    {
      v4[1] = v17 | 0x80;
      unint64_t v18 = v17 >> 7;
      v4[2] = v17 >> 7;
      v4 += 3;
      if (v17 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v19 = v18 >> 14;
          v18 >>= 7;
          *v4++ = v18;
        }
        while (v19);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0) {
    int v4 = sub_117A0AC(a3, 8, (const void **)(*(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v20 = *(void *)(a1 + 8);
  if ((v20 & 1) == 0) {
    return v4;
  }
  unint64_t v22 = v20 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v22 + 31) < 0)
  {
    uint64_t v23 = *(void **)(v22 + 8);
    uint64_t v24 = *(void *)(v22 + 16);
  }
  else
  {
    uint64_t v23 = (void *)(v22 + 8);
    LODWORD(v24) = *(unsigned __int8 *)(v22 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v24)
  {
    uint64_t v25 = (int)v24;
    memcpy(v4, v23, (int)v24);
    v4 += v25;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v23, v24, v4);
}

uint64_t sub_1451D74(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    int v4 = (uint64_t *)(v3 + 8);
  }
  else {
    int v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_14511A8(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 0x7F) == 0) {
    goto LABEL_38;
  }
  if ((v8 & 1) == 0)
  {
    if ((v8 & 2) == 0) {
      goto LABEL_12;
    }
LABEL_24:
    unint64_t v18 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v19 = *(unsigned __int8 *)(v18 + 23);
    uint64_t v20 = *(void *)(v18 + 8);
    if ((v19 & 0x80u) == 0) {
      uint64_t v20 = v19;
    }
    v2 += v20 + ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v8 & 4) == 0) {
      goto LABEL_16;
    }
    goto LABEL_13;
  }
  unint64_t v15 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v16 = *(unsigned __int8 *)(v15 + 23);
  uint64_t v17 = *(void *)(v15 + 8);
  if ((v16 & 0x80u) == 0) {
    uint64_t v17 = v16;
  }
  v2 += v17 + ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 2) != 0) {
    goto LABEL_24;
  }
LABEL_12:
  if ((v8 & 4) != 0)
  {
LABEL_13:
    unint64_t v9 = *(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v10 = *(unsigned __int8 *)(v9 + 23);
    uint64_t v11 = *(void *)(v9 + 8);
    if ((v10 & 0x80u) == 0) {
      uint64_t v11 = v10;
    }
    v2 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_16:
  uint64_t v12 = v2 + 9;
  if ((v8 & 8) == 0) {
    uint64_t v12 = v2;
  }
  if ((v8 & 0x10) != 0)
  {
    int v13 = *(_DWORD *)(a1 + 80);
    if (v13 < 0) {
      uint64_t v14 = 11;
    }
    else {
      uint64_t v14 = ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v12 += v14;
  }
  if ((v8 & 0x20) != 0)
  {
    int v21 = *(_DWORD *)(a1 + 84);
    if (v21 < 0) {
      uint64_t v22 = 11;
    }
    else {
      uint64_t v22 = ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v12 += v22;
  }
  if ((v8 & 0x40) != 0) {
    uint64_t v2 = v12 + 9;
  }
  else {
    uint64_t v2 = v12;
  }
LABEL_38:
  uint64_t v23 = *(void *)(a1 + 8);
  if (v23)
  {
    unint64_t v25 = v23 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v25 + 31) < 0) {
      uint64_t v26 = *(void *)(v25 + 16);
    }
    else {
      uint64_t v26 = *(unsigned __int8 *)(v25 + 31);
    }
    v2 += v26;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_1451F88()
{
  return 1;
}

void *sub_1451F90@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.Business.Rating");
}

uint64_t sub_1451FA0(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1452040(uint64_t a1)
{
  sub_1451FA0(a1);

  operator delete();
}

uint64_t sub_1452078(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v1 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v1 + 23) < 0)
    {
      **(unsigned char **)unint64_t v1 = 0;
      *(void *)(v1 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v1 = 0;
      *(unsigned char *)(v1 + 23) = 0;
    }
  }
  char v3 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 24) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v3) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_14520C0(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v24 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v24, a3[11].i32[1])) {
    return *(void *)v24;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = (char *)(*(void *)v24 + 1);
    unsigned int v8 = **(unsigned char **)v24;
    if ((char)**(unsigned char **)v24 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180(*(uint64_t *)v24, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (char *)(*(void *)v24 + 2);
      }
    }
    *(void *)uint64_t v24 = v7;
    if (v8 >> 3 != 2) {
      break;
    }
    if (v8 != 18) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v15 = *(void *)(a1 + 8);
    uint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
    if (v15) {
      uint64_t v16 = (uint64_t *)*v16;
    }
    uint64_t v17 = (std::string *)sub_1880F84((void *)(a1 + 24), v16);
    uint64_t v14 = (void *)sub_188C244(v17, *(char **)v24, (uint64_t)a3);
LABEL_24:
    *(void *)uint64_t v24 = v14;
    if (!v14) {
      goto LABEL_43;
    }
LABEL_32:
    if (sub_11947B8((uint64_t)a3, (char **)v24, a3[11].i32[1])) {
      return *(void *)v24;
    }
  }
  if (v8 >> 3 == 1 && v8 == 8)
  {
    unint64_t v18 = v7 + 1;
    unint64_t v19 = *v7;
    if ((*v7 & 0x80000000) == 0) {
      goto LABEL_29;
    }
    int v20 = *v18;
    int v21 = v19 + (v20 << 7);
    unint64_t v19 = (v21 - 128);
    if (v20 < 0)
    {
      *(void *)uint64_t v24 = sub_188C138((uint64_t)v7, (v21 - 128));
      if (!*(void *)v24) {
        goto LABEL_43;
      }
      unint64_t v19 = v22;
    }
    else
    {
      unint64_t v18 = v7 + 2;
LABEL_29:
      *(void *)uint64_t v24 = v18;
    }
    if (v19 > 9)
    {
      if (*v6) {
        uint64_t v23 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        uint64_t v23 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      sub_188C020(1, v19, v23);
    }
    else
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      *(_DWORD *)(a1 + 32) = v19;
    }
    goto LABEL_32;
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      int v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      int v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = *(char **)v24;
    }
    uint64_t v14 = sub_1885AC0(v8, v13, v7, a3);
    goto LABEL_24;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v24;
  }
LABEL_43:
  *(void *)uint64_t v24 = 0;
  return *(void *)v24;
}

unsigned char *sub_14522D0(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  int v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 32);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6) {
    int v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v10 = *(void *)(a1 + 8);
  if ((v10 & 1) == 0) {
    return v4;
  }
  unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v12 + 31) < 0)
  {
    int v13 = *(void **)(v12 + 8);
    uint64_t v14 = *(void *)(v12 + 16);
  }
  else
  {
    int v13 = (void *)(v12 + 8);
    LODWORD(v14) = *(unsigned __int8 *)(v12 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v14)
  {
    uint64_t v15 = (int)v14;
    memcpy(v4, v13, (int)v14);
    v4 += v15;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v13, v14, v4);
}

uint64_t sub_1452418(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_13;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_13;
    }
    goto LABEL_9;
  }
  unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
  uint64_t v5 = *(void *)(v3 + 8);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = v4;
  }
  uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    int v6 = *(_DWORD *)(a1 + 32);
    if (v6 < 0) {
      uint64_t v7 = 11;
    }
    else {
      uint64_t v7 = ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v7;
  }
LABEL_13:
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_14524E4()
{
  return 1;
}

void *sub_14524EC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.Business.Photo.PhotoInfo");
}

uint64_t sub_14524FC(uint64_t a1)
{
  unint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  sub_149304C((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_14525A8(uint64_t a1)
{
  sub_14524FC(a1);

  operator delete();
}

uint64_t sub_14525E0(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v31 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v31, a3[11].i32[1])) {
    return *(void *)v31;
  }
  int v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = (char *)(*(void *)v31 + 1);
    unsigned int v8 = **(unsigned char **)v31;
    if ((char)**(unsigned char **)v31 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180(*(uint64_t *)v31, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (char *)(*(void *)v31 + 2);
      }
    }
    *(void *)uint64_t v31 = v7;
    unsigned int v11 = v8 >> 3;
    if (v8 >> 3 != 3) {
      break;
    }
    if (v8 != 26) {
      goto LABEL_14;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v16 = *(void *)(a1 + 8);
    uint64_t v17 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
    if (v16) {
      uint64_t v17 = (uint64_t *)*v17;
    }
    unint64_t v18 = (std::string *)sub_1880F84((void *)(a1 + 48), v17);
    uint64_t v15 = (void *)sub_188C244(v18, *(char **)v31, (uint64_t)a3);
LABEL_25:
    *(void *)uint64_t v31 = v15;
    if (!v15) {
      goto LABEL_54;
    }
LABEL_43:
    if (sub_11947B8((uint64_t)a3, (char **)v31, a3[11].i32[1])) {
      return *(void *)v31;
    }
  }
  if (v11 == 2)
  {
    if (v8 == 18)
    {
      unint64_t v19 = v7 - 1;
      while (1)
      {
        int v20 = (unsigned __int8 *)(v19 + 1);
        *(void *)uint64_t v31 = v19 + 1;
        int v21 = *(_DWORD **)(a1 + 40);
        if (v21 && (uint64_t v22 = *(int *)(a1 + 32), (int)v22 < *v21))
        {
          *(_DWORD *)(a1 + 32) = v22 + 1;
          uint64_t v23 = *(void *)&v21[2 * v22 + 2];
        }
        else
        {
          uint64_t v24 = sub_1478428(*(void *)(a1 + 24));
          uint64_t v23 = sub_188CDC8(a1 + 24, v24);
          int v20 = *(unsigned __int8 **)v31;
        }
        unint64_t v19 = (char *)sub_1452888(a3, v23, v20);
        *(void *)uint64_t v31 = v19;
        if (!v19) {
          goto LABEL_54;
        }
        if (*(void *)a3 <= (unint64_t)v19 || *v19 != 18) {
          goto LABEL_43;
        }
      }
    }
  }
  else if (v11 == 1 && v8 == 8)
  {
    unint64_t v25 = v7 + 1;
    unint64_t v26 = *v7;
    if ((*v7 & 0x80000000) == 0) {
      goto LABEL_40;
    }
    int v27 = *v25;
    int v28 = v26 + (v27 << 7);
    unint64_t v26 = (v28 - 128);
    if (v27 < 0)
    {
      *(void *)uint64_t v31 = sub_188C138((uint64_t)v7, (v28 - 128));
      if (!*(void *)v31) {
        goto LABEL_54;
      }
      unint64_t v26 = v29;
    }
    else
    {
      unint64_t v25 = v7 + 2;
LABEL_40:
      *(void *)uint64_t v31 = v25;
    }
    if (v26 > 4)
    {
      if (*v6) {
        int v30 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        int v30 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      sub_188C020(1, v26, v30);
    }
    else
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      *(_DWORD *)(a1 + 56) = v26;
    }
    goto LABEL_43;
  }
LABEL_14:
  if (v8) {
    BOOL v13 = (v8 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v6)
    {
      uint64_t v14 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = *(char **)v31;
    }
    uint64_t v15 = sub_1885AC0(v8, v14, v7, a3);
    goto LABEL_25;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v31;
  }
LABEL_54:
  *(void *)uint64_t v31 = 0;
  return *(void *)v31;
}

uint64_t sub_1452888(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_14520C0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_1452918(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 56);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v10 = *(_DWORD *)(a1 + 32);
  if (v10)
  {
    for (int i = 0; i != v10; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v12 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      unsigned char *v4 = 18;
      unsigned int v13 = *(_DWORD *)(v12 + 20);
      v4[1] = v13;
      if (v13 > 0x7F) {
        uint64_t v14 = sub_188A9CC(v13, v4 + 1);
      }
      else {
        uint64_t v14 = v4 + 2;
      }
      uint64_t v4 = sub_14522D0(v12, (unint64_t)v14, a3);
    }
  }
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v15 = *(void *)(a1 + 8);
  if ((v15 & 1) == 0) {
    return v4;
  }
  unint64_t v17 = v15 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v17 + 31) < 0)
  {
    unint64_t v18 = *(void **)(v17 + 8);
    uint64_t v19 = *(void *)(v17 + 16);
  }
  else
  {
    unint64_t v18 = (void *)(v17 + 8);
    LODWORD(v19) = *(unsigned __int8 *)(v17 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v19)
  {
    uint64_t v20 = (int)v19;
    memcpy(v4, v18, (int)v19);
    v4 += v20;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v18, v19, v4);
}

uint64_t sub_1452AFC(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_1452418(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 3) != 0)
  {
    if (v8)
    {
      unint64_t v9 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v10 = *(unsigned __int8 *)(v9 + 23);
      uint64_t v11 = *(void *)(v9 + 8);
      if ((v10 & 0x80u) == 0) {
        uint64_t v11 = v10;
      }
      v2 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v8 & 2) != 0)
    {
      int v12 = *(_DWORD *)(a1 + 56);
      if (v12 < 0) {
        uint64_t v13 = 11;
      }
      else {
        uint64_t v13 = ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
      v2 += v13;
    }
  }
  uint64_t v14 = *(void *)(a1 + 8);
  if (v14)
  {
    unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v16 + 31) < 0) {
      uint64_t v17 = *(void *)(v16 + 16);
    }
    else {
      uint64_t v17 = *(unsigned __int8 *)(v16 + 31);
    }
    v2 += v17;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_1452C30()
{
  return 1;
}

void *sub_1452C38@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.Business.Photo");
}

void *sub_1452C48(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1452CBC(void *a1)
{
  sub_1452C48(a1);

  operator delete();
}

uint64_t sub_1452CF4(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 7) != 0)
  {
    *(unsigned char *)(a1 + 32) = 0;
    *(void *)(a1 + 24) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_1452D1C(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v31 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v31, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    int v8 = v31 + 1;
    unsigned int v9 = *v31;
    if (*v31 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        int v8 = (char *)sub_188C180((uint64_t)v31, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        int v8 = v31 + 2;
      }
    }
    uint64_t v31 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 == 3)
    {
      if (v9 != 24) {
        goto LABEL_14;
      }
      v5 |= 4u;
      unint64_t v16 = v8 + 1;
      uint64_t v17 = *v8;
      if ((*v8 & 0x80000000) == 0) {
        goto LABEL_26;
      }
      int v18 = *v16;
      uint64_t v17 = v17 + (v18 << 7) - 128;
      if ((v18 & 0x80000000) == 0)
      {
        unint64_t v16 = v8 + 2;
LABEL_26:
        uint64_t v31 = v16;
        *(unsigned char *)(a1 + 32) = v17 != 0;
        goto LABEL_36;
      }
      unint64_t v25 = (char *)sub_188C138((uint64_t)v8, v17);
      uint64_t v31 = v25;
      *(unsigned char *)(a1 + 32) = v26 != 0;
      if (!v25) {
        goto LABEL_47;
      }
      goto LABEL_36;
    }
    if (v12 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_14;
    }
    v5 |= 2u;
    uint64_t v19 = v8 + 1;
    int v20 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_31;
    }
    int v21 = *v19;
    int v20 = v20 + (v21 << 7) - 128;
    if ((v21 & 0x80000000) == 0)
    {
      uint64_t v19 = v8 + 2;
LABEL_31:
      uint64_t v31 = v19;
      *(_DWORD *)(a1 + 28) = v20;
      goto LABEL_36;
    }
    int v27 = (char *)sub_188C0D0((uint64_t)v8, v20);
    uint64_t v31 = v27;
    *(_DWORD *)(a1 + 28) = v28;
    if (!v27) {
      goto LABEL_47;
    }
LABEL_36:
    if (sub_11947B8((uint64_t)a3, &v31, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v12 == 1 && v9 == 8)
  {
    v5 |= 1u;
    uint64_t v22 = v8 + 1;
    int v23 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_35;
    }
    int v24 = *v22;
    int v23 = v23 + (v24 << 7) - 128;
    if ((v24 & 0x80000000) == 0)
    {
      uint64_t v22 = v8 + 2;
LABEL_35:
      uint64_t v31 = v22;
      *(_DWORD *)(a1 + 24) = v23;
      goto LABEL_36;
    }
    unint64_t v29 = (char *)sub_188C0D0((uint64_t)v8, v23);
    uint64_t v31 = v29;
    *(_DWORD *)(a1 + 24) = v30;
    if (!v29) {
      goto LABEL_47;
    }
    goto LABEL_36;
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (*v7)
    {
      uint64_t v15 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v8 = v31;
    }
    uint64_t v31 = (char *)sub_1885AC0(v9, v15, v8, a3);
    if (!v31) {
      goto LABEL_47;
    }
    goto LABEL_36;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_47:
  uint64_t v31 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v31;
}

unsigned char *sub_1452F80(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 28);
    unsigned char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v13 = *(unsigned char *)(a1 + 32);
    unsigned char *v4 = 24;
    v4[1] = v13;
    v4 += 2;
  }
  uint64_t v14 = *(void *)(a1 + 8);
  if ((v14 & 1) == 0) {
    return v4;
  }
  unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v16 + 31) < 0)
  {
    uint64_t v17 = *(void **)(v16 + 8);
    uint64_t v18 = *(void *)(v16 + 16);
  }
  else
  {
    uint64_t v17 = (void *)(v16 + 8);
    LODWORD(v18) = *(unsigned __int8 *)(v16 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v18)
  {
    uint64_t v19 = (int)v18;
    memcpy(v4, v17, (int)v18);
    v4 += v19;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v17, v18, v4);
}

uint64_t sub_145315C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 7) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_11;
  }
  if (v1)
  {
    uint64_t v2 = ((9 * (__clz(*(_DWORD *)(a1 + 24) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v2 = 0;
  if ((v1 & 2) != 0) {
LABEL_7:
  }
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 28) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_8:
  if ((v1 & 4) != 0) {
    uint64_t v3 = v2 + 2;
  }
  else {
    uint64_t v3 = v2;
  }
LABEL_11:
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v6 + 31) < 0) {
      uint64_t v7 = *(void *)(v6 + 16);
    }
    else {
      uint64_t v7 = *(unsigned __int8 *)(v6 + 31);
    }
    v3 += v7;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

uint64_t sub_145320C()
{
  return 1;
}

void *sub_1453214@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.Business.TimeRange");
}

void *sub_1453224(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_14930CC(a1 + 4);
  sub_1889DA8((uint64_t)(a1 + 2));
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_14532AC(void *a1)
{
  sub_1453224(a1);

  operator delete();
}

uint64_t sub_14532E4(uint64_t result)
{
  uint64_t v1 = result;
  *(_DWORD *)(result + 16) = 0;
  uint64_t v2 = *(unsigned int *)(result + 40);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 48) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_1452CF4(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 40) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  int v5 = (uint64_t *)(v1 + 8);
  if (v6)
  {
    return sub_188B4AC(v5);
  }
  return result;
}

char *sub_1453364(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v30 = a2;
  if ((sub_11947B8((uint64_t)a3, &v30, a3[11].i32[1]) & 1) == 0)
  {
    char v6 = (void *)(a1 + 8);
    do
    {
      uint64_t v7 = v30 + 1;
      unsigned int v8 = *v30;
      if (*v30 < 0)
      {
        int v9 = *v7;
        unsigned int v10 = v8 + (v9 << 7);
        unsigned int v8 = v10 - 128;
        if (v9 < 0)
        {
          uint64_t v7 = (char *)sub_188C180((uint64_t)v30, v10 - 128);
          unsigned int v8 = v11;
        }
        else
        {
          uint64_t v7 = v30 + 2;
        }
      }
      int v30 = v7;
      if (v8 >> 3 == 2)
      {
        if (v8 == 18)
        {
          int v21 = v7 - 1;
          while (1)
          {
            uint64_t v22 = (unsigned __int8 *)(v21 + 1);
            int v30 = v21 + 1;
            int v23 = *(_DWORD **)(a1 + 48);
            if (v23 && (uint64_t v24 = *(int *)(a1 + 40), (int)v24 < *v23))
            {
              *(_DWORD *)(a1 + 40) = v24 + 1;
              uint64_t v25 = *(void *)&v23[2 * v24 + 2];
            }
            else
            {
              uint64_t v26 = sub_1478558(*(void *)(a1 + 32));
              uint64_t v25 = sub_188CDC8(a1 + 32, v26);
              uint64_t v22 = (unsigned __int8 *)v30;
            }
            int v21 = sub_145365C(a3, v25, v22);
            int v30 = v21;
            if (!v21) {
              return 0;
            }
            if (*(void *)a3 <= (unint64_t)v21 || *v21 != 18) {
              goto LABEL_50;
            }
          }
        }
      }
      else if (v8 >> 3 == 1)
      {
        if (v8 == 8)
        {
          unsigned int v12 = v7 - 1;
          while (1)
          {
            int v30 = v12 + 1;
            unint64_t v13 = v12[1];
            uint64_t v14 = v12 + 2;
            if (v12[1] < 0)
            {
              int v15 = *v14;
              int v16 = v13 + (v15 << 7);
              unint64_t v13 = (v16 - 128);
              if (v15 < 0)
              {
                int v30 = (char *)sub_188C138((uint64_t)(v12 + 1), (v16 - 128));
                if (!v30) {
                  return 0;
                }
                unint64_t v13 = v19;
                goto LABEL_16;
              }
              uint64_t v14 = v12 + 3;
            }
            int v30 = v14;
LABEL_16:
            if (v13 > 7)
            {
              if (*v6) {
                int v20 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
              }
              else {
                int v20 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              }
              sub_188C020(1, v13, v20);
            }
            else
            {
              uint64_t v17 = *(unsigned int *)(a1 + 16);
              if (v17 == *(_DWORD *)(a1 + 20))
              {
                int v18 = v17 + 1;
                sub_188C80C((unsigned int *)(a1 + 16), v17 + 1);
                *(_DWORD *)(*(void *)(a1 + 24) + 4 * v17) = v13;
              }
              else
              {
                *(_DWORD *)(*(void *)(a1 + 24) + 4 * v17) = v13;
                int v18 = v17 + 1;
              }
              *(_DWORD *)(a1 + 16) = v18;
            }
            unsigned int v12 = v30;
            if (*(void *)a3 <= (unint64_t)v30 || *v30 != 8) {
              goto LABEL_50;
            }
          }
        }
        if (v8 == 10)
        {
          *(void *)&long long v31 = a1 + 16;
          *((void *)&v31 + 1) = sub_140E3F8;
          uint64_t v32 = a1 + 8;
          int v33 = 1;
          int v27 = sub_1112E88((uint64_t)a3, v7, &v31);
          goto LABEL_49;
        }
      }
      if (v8) {
        BOOL v28 = (v8 & 7) == 4;
      }
      else {
        BOOL v28 = 1;
      }
      if (v28)
      {
        if (v7)
        {
          a3[10].i32[0] = v8 - 1;
          return v30;
        }
        return 0;
      }
      if (*v6)
      {
        unint64_t v29 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        unint64_t v29 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        uint64_t v7 = v30;
      }
      int v27 = (char *)sub_1885AC0(v8, v29, v7, a3);
LABEL_49:
      int v30 = v27;
      if (!v27) {
        return 0;
      }
LABEL_50:
      ;
    }
    while (!sub_11947B8((uint64_t)a3, &v30, a3[11].i32[1]));
  }
  return v30;
}

char *sub_145365C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1452D1C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_14536EC(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v6 = *(unsigned int *)(a1 + 16);
  if ((int)v6 >= 1)
  {
    for (uint64_t i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      unint64_t v8 = *(int *)(*(void *)(a1 + 24) + 4 * i);
      *__dst = 8;
      __dst[1] = v8;
      if (v8 > 0x7F)
      {
        __dst[1] = v8 | 0x80;
        unint64_t v9 = v8 >> 7;
        __dst[2] = v8 >> 7;
        __dst += 3;
        if (v8 >= 0x4000)
        {
          do
          {
            *(__dst - 1) |= 0x80u;
            unint64_t v10 = v9 >> 14;
            v9 >>= 7;
            *__dst++ = v9;
          }
          while (v10);
        }
      }
      else
      {
        __dst += 2;
      }
    }
  }
  int v11 = *(_DWORD *)(a1 + 40);
  if (v11)
  {
    for (int j = 0; j != v11; ++j)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v13 = *(void *)(*(void *)(a1 + 48) + 8 * j + 8);
      *__dst = 18;
      unsigned int v14 = *(_DWORD *)(v13 + 20);
      __dst[1] = v14;
      if (v14 > 0x7F) {
        int v15 = sub_188A9CC(v14, __dst + 1);
      }
      else {
        int v15 = __dst + 2;
      }
      __dst = sub_1452F80(v13, (unint64_t)v15, a3);
    }
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return __dst;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    unint64_t v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    unint64_t v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(__dst, v19, (int)v20);
    __dst += v21;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v19, v20, __dst);
}

uint64_t sub_14538CC(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 16);
  if (v2)
  {
    uint64_t v3 = 0;
    int v4 = 0;
    do
    {
      int v5 = *(_DWORD *)(*(void *)(a1 + 24) + 4 * v4);
      if (v5 < 0) {
        uint64_t v6 = 10;
      }
      else {
        uint64_t v6 = (9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6;
      }
      v3 += v6;
      ++v4;
    }
    while (v2 != v4);
  }
  else
  {
    uint64_t v3 = 0;
  }
  uint64_t v7 = v3 + v2;
  uint64_t v8 = *(int *)(a1 + 40);
  uint64_t v9 = v7 + v8;
  uint64_t v10 = *(void *)(a1 + 48);
  if (v10) {
    int v11 = (uint64_t *)(v10 + 8);
  }
  else {
    int v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_145315C(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  uint64_t v15 = *(void *)(a1 + 8);
  if (v15)
  {
    unint64_t v17 = v15 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v17 + 31) < 0) {
      uint64_t v18 = *(void *)(v17 + 16);
    }
    else {
      uint64_t v18 = *(unsigned __int8 *)(v17 + 31);
    }
    v9 += v18;
  }
  *(_DWORD *)(a1 + 56) = v9;
  return v9;
}

std::string *sub_14539D0(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if (v4)
  {
    int v5 = &result->__r_.__value_.__r.__words[2];
    uint64_t v6 = SLODWORD(result->__r_.__value_.__r.__words[2]);
    sub_188C80C((unsigned int *)&result->__r_.__value_.__r.__words[2], v6 + v4);
    std::string::pointer data = v3[1].__r_.__value_.__l.__data_;
    *(_DWORD *)v5 += *(_DWORD *)(a2 + 16);
    uint64_t result = (std::string *)memcpy(&data[4 * v6], *(const void **)(a2 + 24), 4 * *(int *)(a2 + 16));
  }
  int v8 = *(_DWORD *)(a2 + 40);
  if (v8)
  {
    uint64_t v9 = (uint64_t *)(*(void *)(a2 + 48) + 8);
    uint64_t v10 = (std::string **)sub_188CCE4((uint64_t)&v3[1].__r_.__value_.__l.__size_, *(_DWORD *)(a2 + 40));
    uint64_t result = (std::string *)sub_1493C60((uint64_t *)&v3[1].__r_.__value_.__l.__size_, v10, v9, v8, *(_DWORD *)v3[2].__r_.__value_.__l.__data_ - LODWORD(v3[1].__r_.__value_.__r.__words[2]));
    int v11 = LODWORD(v3[1].__r_.__value_.__r.__words[2]) + v8;
    LODWORD(v3[1].__r_.__value_.__r.__words[2]) = v11;
    uint64_t v12 = (int *)v3[2].__r_.__value_.__l.__data_;
    if (*v12 < v11) {
      *uint64_t v12 = v11;
    }
  }
  uint64_t v13 = *(void *)(a2 + 8);
  if (v13)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v13 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1453AE4()
{
  return 1;
}

void *sub_1453AEC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.Business.Hours");
}

uint64_t sub_1453AFC(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_13;
    }
  }
  else if (v4)
  {
    goto LABEL_13;
  }
  int v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(uint64_t **)(a1 + 40) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 40));
  }
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 48));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_13:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1453BDC(uint64_t a1)
{
  sub_1453AFC(a1);

  operator delete();
}

uint64_t sub_1453C14(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 0xF) != 0)
  {
    if ((v1 & 1) == 0)
    {
      if ((v1 & 2) == 0) {
        goto LABEL_4;
      }
LABEL_11:
      unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v3 + 23) < 0)
      {
        **(unsigned char **)unint64_t v3 = 0;
        *(void *)(v3 + 8) = 0;
        if ((v1 & 4) != 0) {
          goto LABEL_15;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v3 = 0;
        *(unsigned char *)(v3 + 23) = 0;
        if ((v1 & 4) != 0) {
          goto LABEL_15;
        }
      }
LABEL_5:
      if ((v1 & 8) == 0) {
        goto LABEL_22;
      }
LABEL_19:
      unint64_t v5 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v5 + 23) < 0)
      {
        **(unsigned char **)unint64_t v5 = 0;
        *(void *)(v5 + 8) = 0;
      }
      else
      {
        *(unsigned char *)unint64_t v5 = 0;
        *(unsigned char *)(v5 + 23) = 0;
      }
      goto LABEL_22;
    }
    unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)unint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
      if ((v1 & 2) != 0) {
        goto LABEL_11;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
      if ((v1 & 2) != 0) {
        goto LABEL_11;
      }
    }
LABEL_4:
    if ((v1 & 4) == 0) {
      goto LABEL_5;
    }
LABEL_15:
    unint64_t v4 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v4 + 23) < 0)
    {
      **(unsigned char **)unint64_t v4 = 0;
      *(void *)(v4 + 8) = 0;
      if ((v1 & 8) == 0) {
        goto LABEL_22;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v4 = 0;
      *(unsigned char *)(v4 + 23) = 0;
      if ((v1 & 8) == 0) {
        goto LABEL_22;
      }
    }
    goto LABEL_19;
  }
LABEL_22:
  if ((v1 & 0x30) != 0) {
    *(void *)(a1 + 56) = 0;
  }
  char v7 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v7) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_1453D0C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v32 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v32, a3[11].i32[1])) {
    goto LABEL_2;
  }
  char v7 = (void *)(a1 + 8);
  while (2)
  {
    int v8 = (char *)(*(void *)v32 + 1);
    unsigned int v9 = **(unsigned char **)v32;
    if ((char)**(unsigned char **)v32 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        int v8 = (char *)sub_188C180(*(uint64_t *)v32, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        int v8 = (char *)(*(void *)v32 + 2);
      }
    }
    *(void *)uint64_t v32 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_39;
        }
        v5 |= 0x10u;
        uint64_t v12 = v8 + 1;
        uint64_t v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        uint64_t v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          uint64_t v12 = v8 + 2;
LABEL_13:
          *(void *)uint64_t v32 = v12;
          *(unsigned char *)(a1 + 56) = v13 != 0;
          goto LABEL_37;
        }
        uint64_t v28 = sub_188C138((uint64_t)v8, v13);
        *(void *)uint64_t v32 = v28;
        *(unsigned char *)(a1 + 56) = v29 != 0;
        if (v28) {
          goto LABEL_37;
        }
        goto LABEL_53;
      case 2u:
        if (v9 != 18) {
          goto LABEL_39;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v15 = *(void *)(a1 + 8);
        uint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          uint64_t v16 = (uint64_t *)*v16;
        }
        unint64_t v17 = (void *)(a1 + 24);
        goto LABEL_35;
      case 3u:
        if (v9 != 26) {
          goto LABEL_39;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v18 = *(void *)(a1 + 8);
        uint64_t v16 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
        if (v18) {
          uint64_t v16 = (uint64_t *)*v16;
        }
        unint64_t v17 = (void *)(a1 + 32);
        goto LABEL_35;
      case 4u:
        if (v9 != 34) {
          goto LABEL_39;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v19 = *(void *)(a1 + 8);
        uint64_t v16 = (uint64_t *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
        if (v19) {
          uint64_t v16 = (uint64_t *)*v16;
        }
        unint64_t v17 = (void *)(a1 + 40);
        goto LABEL_35;
      case 5u:
        if (v9 != 40) {
          goto LABEL_39;
        }
        v5 |= 0x20u;
        uint64_t v20 = v8 + 1;
        int v21 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_30;
        }
        int v22 = *v20;
        int v21 = v21 + (v22 << 7) - 128;
        if (v22 < 0)
        {
          uint64_t v30 = sub_188C0D0((uint64_t)v8, v21);
          *(void *)uint64_t v32 = v30;
          *(_DWORD *)(a1 + 60) = v31;
          if (!v30) {
            goto LABEL_53;
          }
        }
        else
        {
          uint64_t v20 = v8 + 2;
LABEL_30:
          *(void *)uint64_t v32 = v20;
          *(_DWORD *)(a1 + 60) = v21;
        }
        goto LABEL_37;
      case 6u:
        if (v9 != 50) {
          goto LABEL_39;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v23 = *(void *)(a1 + 8);
        uint64_t v16 = (uint64_t *)(v23 & 0xFFFFFFFFFFFFFFFCLL);
        if (v23) {
          uint64_t v16 = (uint64_t *)*v16;
        }
        unint64_t v17 = (void *)(a1 + 48);
LABEL_35:
        uint64_t v24 = (std::string *)sub_1880F84(v17, v16);
        uint64_t v25 = (void *)sub_188C244(v24, *(char **)v32, (uint64_t)a3);
        goto LABEL_36;
      default:
LABEL_39:
        if (v9) {
          BOOL v26 = (v9 & 7) == 4;
        }
        else {
          BOOL v26 = 1;
        }
        if (!v26)
        {
          if (*v7)
          {
            int v27 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            int v27 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            int v8 = *(char **)v32;
          }
          uint64_t v25 = sub_1885AC0(v9, v27, v8, a3);
LABEL_36:
          *(void *)uint64_t v32 = v25;
          if (!v25) {
            goto LABEL_53;
          }
LABEL_37:
          if (sub_11947B8((uint64_t)a3, (char **)v32, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_53:
        }
          *(void *)uint64_t v32 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v32;
    }
  }
}

unsigned char *sub_1454044(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  unint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= __dst) {
      unint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    char v7 = *(unsigned char *)(a1 + 56);
    unsigned char *v4 = 8;
    v4[1] = v7;
    v4 += 2;
    if ((v6 & 1) == 0)
    {
LABEL_3:
      if ((v6 & 2) == 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  else if ((v6 & 1) == 0)
  {
    goto LABEL_3;
  }
  unint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 2) == 0)
  {
LABEL_4:
    if ((v6 & 4) == 0) {
      goto LABEL_5;
    }
    goto LABEL_12;
  }
LABEL_11:
  unint64_t v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) == 0)
  {
LABEL_5:
    if ((v6 & 0x20) == 0) {
      goto LABEL_19;
    }
    goto LABEL_13;
  }
LABEL_12:
  unint64_t v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x20) == 0) {
    goto LABEL_19;
  }
LABEL_13:
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  unsigned int v8 = *(_DWORD *)(a1 + 60);
  unsigned char *v4 = 40;
  v4[1] = v8;
  if (v8 > 0x7F)
  {
    v4[1] = v8 | 0x80;
    unsigned int v9 = v8 >> 7;
    v4[2] = v8 >> 7;
    v4 += 3;
    if (v8 >= 0x4000)
    {
      do
      {
        *(v4 - 1) |= 0x80u;
        unsigned int v10 = v9 >> 14;
        v9 >>= 7;
        *v4++ = v9;
      }
      while (v10);
    }
  }
  else
  {
    v4 += 2;
  }
LABEL_19:
  if ((v6 & 8) != 0) {
    unint64_t v4 = sub_117A0AC(a3, 6, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return v4;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    int v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    int v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(v4, v14, (int)v15);
    v4 += v16;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v14, v15, v4);
}

uint64_t sub_1454238(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 0x3F) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_21;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
  uint64_t v5 = *(void *)(v3 + 8);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = v4;
  }
  uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    unint64_t v6 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v1 & 4) != 0)
  {
    unint64_t v14 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v15 = *(unsigned __int8 *)(v14 + 23);
    uint64_t v16 = *(void *)(v14 + 8);
    if ((v15 & 0x80u) == 0) {
      uint64_t v16 = v15;
    }
    v2 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 8) == 0) {
      goto LABEL_17;
    }
    goto LABEL_14;
  }
  if ((v1 & 8) != 0)
  {
LABEL_14:
    unint64_t v9 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v10 = *(unsigned __int8 *)(v9 + 23);
    uint64_t v11 = *(void *)(v9 + 8);
    if ((v10 & 0x80u) == 0) {
      uint64_t v11 = v10;
    }
    v2 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_17:
  if ((v1 & 0x10) != 0) {
    v2 += 2;
  }
  if ((v1 & 0x20) != 0) {
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 60) | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_21:
  uint64_t v12 = *(void *)(a1 + 8);
  if (v12)
  {
    unint64_t v17 = v12 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v17 + 31) < 0) {
      uint64_t v18 = *(void *)(v17 + 16);
    }
    else {
      uint64_t v18 = *(unsigned __int8 *)(v17 + 31);
    }
    v2 += v18;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_14543D8(std::string *result, uint64_t a2)
{
  unint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0x3F) != 0)
  {
    if (v4)
    {
      unint64_t v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      uint64_t v7 = (std::string **)&result[1];
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      unint64_t v9 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        unint64_t v9 = (uint64_t *)*v9;
      }
      uint64_t result = sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_20;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    uint64_t v10 = (long long *)(*(void *)(a2 + 32) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    std::string::size_type v11 = v3->__r_.__value_.__l.__size_;
    uint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
    if (v11) {
      uint64_t v12 = (uint64_t *)*v12;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[1].__r_.__value_.__l.__size_, v10, v12);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_23;
    }
LABEL_20:
    unint64_t v13 = (long long *)(*(void *)(a2 + 40) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
    std::string::size_type v14 = v3->__r_.__value_.__l.__size_;
    uint64_t v15 = (uint64_t *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
    if (v14) {
      uint64_t v15 = (uint64_t *)*v15;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[1].__r_.__value_.__r.__words[2], v13, v15);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0) {
        goto LABEL_7;
      }
      goto LABEL_26;
    }
LABEL_23:
    uint64_t v16 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 8u;
    std::string::size_type v17 = v3->__r_.__value_.__l.__size_;
    uint64_t v18 = (uint64_t *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
    if (v17) {
      uint64_t v18 = (uint64_t *)*v18;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[2], v16, v18);
    if ((v4 & 0x10) == 0)
    {
LABEL_7:
      if ((v4 & 0x20) == 0)
      {
LABEL_9:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
        goto LABEL_10;
      }
LABEL_8:
      HIDWORD(v3[2].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 60);
      goto LABEL_9;
    }
LABEL_26:
    v3[2].__r_.__value_.__s.__data_[8] = *(unsigned char *)(a2 + 56);
    if ((v4 & 0x20) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
LABEL_10:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1454550()
{
  return 1;
}

void *sub_1454558@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.Business.LocalizedName");
}

uint64_t sub_1454568(uint64_t a1)
{
  unint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  sub_149314C((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1454614(uint64_t a1)
{
  sub_1454568(a1);

  operator delete();
}

uint64_t sub_145464C(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    unint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_1453C14(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  int v5 = *(_DWORD *)(v1 + 16);
  if (v5)
  {
    unint64_t v6 = *(void *)(v1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v6 + 23) < 0)
    {
      **(unsigned char **)unint64_t v6 = 0;
      *(void *)(v6 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v6 = 0;
      *(unsigned char *)(v6 + 23) = 0;
    }
  }
  if ((v5 & 6) != 0)
  {
    *(_DWORD *)(v1 + 64) = 0;
    *(void *)(v1 + 56) = 0;
  }
  char v8 = *(unsigned char *)(v1 + 8);
  uint64_t v7 = v1 + 8;
  *(_DWORD *)(v7 + 8) = 0;
  if (v8)
  {
    return sub_188B4AC((uint64_t *)v7);
  }
  return result;
}

uint64_t sub_145470C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)BOOL v34 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v34, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    char v8 = (char *)(*(void *)v34 + 1);
    unsigned int v9 = **(unsigned char **)v34;
    if ((char)**(unsigned char **)v34 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        char v8 = (char *)sub_188C180(*(uint64_t *)v34, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        char v8 = (char *)(*(void *)v34 + 2);
      }
    }
    *(void *)BOOL v34 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_33;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 8);
        unint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          unint64_t v13 = (uint64_t *)*v13;
        }
        std::string::size_type v14 = (std::string *)sub_1880F84((void *)(a1 + 48), v13);
        uint64_t v15 = (void *)sub_188C244(v14, *(char **)v34, (uint64_t)a3);
        goto LABEL_40;
      case 2u:
        if (v9 != 16) {
          goto LABEL_33;
        }
        v5 |= 4u;
        std::string::size_type v17 = v8 + 1;
        LODWORD(v16) = *v8;
        if ((v16 & 0x80) == 0) {
          goto LABEL_17;
        }
        int v18 = *v17;
        uint64_t v16 = v16 + (v18 << 7) - 128;
        if (v18 < 0)
        {
          uint64_t v30 = sub_188C138((uint64_t)v8, v16);
          *(void *)BOOL v34 = v30;
          *(_DWORD *)(a1 + 64) = v31;
          if (!v30) {
            goto LABEL_50;
          }
        }
        else
        {
          std::string::size_type v17 = v8 + 2;
LABEL_17:
          *(void *)BOOL v34 = v17;
          *(_DWORD *)(a1 + 64) = v16;
        }
        goto LABEL_41;
      case 3u:
        if (v9 != 24) {
          goto LABEL_33;
        }
        v5 |= 2u;
        uint64_t v19 = v8 + 1;
        uint64_t v20 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_22;
        }
        int v21 = *v19;
        uint64_t v20 = v20 + (v21 << 7) - 128;
        if (v21 < 0)
        {
          uint64_t v32 = sub_188C138((uint64_t)v8, v20);
          *(void *)BOOL v34 = v32;
          *(void *)(a1 + 56) = v33;
          if (!v32) {
            goto LABEL_50;
          }
        }
        else
        {
          uint64_t v19 = v8 + 2;
LABEL_22:
          *(void *)BOOL v34 = v19;
          *(void *)(a1 + 56) = v20;
        }
        goto LABEL_41;
      case 4u:
        if (v9 != 34) {
          goto LABEL_33;
        }
        int v22 = v8 - 1;
        while (1)
        {
          uint64_t v23 = (unsigned __int8 *)(v22 + 1);
          *(void *)BOOL v34 = v22 + 1;
          uint64_t v24 = *(_DWORD **)(a1 + 40);
          if (v24 && (uint64_t v25 = *(int *)(a1 + 32), (int)v25 < *v24))
          {
            *(_DWORD *)(a1 + 32) = v25 + 1;
            uint64_t v26 = *(void *)&v24[2 * v25 + 2];
          }
          else
          {
            int v27 = sub_1478678(*(void *)(a1 + 24));
            uint64_t v26 = sub_188CDC8(a1 + 24, (uint64_t)v27);
            uint64_t v23 = *(unsigned __int8 **)v34;
          }
          int v22 = (char *)sub_1454A08(a3, v26, v23);
          *(void *)BOOL v34 = v22;
          if (!v22) {
            goto LABEL_50;
          }
          if (*(void *)a3 <= (unint64_t)v22 || *v22 != 34) {
            goto LABEL_41;
          }
        }
      default:
LABEL_33:
        if (v9) {
          BOOL v28 = (v9 & 7) == 4;
        }
        else {
          BOOL v28 = 1;
        }
        if (!v28)
        {
          if (*v7)
          {
            uint64_t v29 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v29 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            char v8 = *(char **)v34;
          }
          uint64_t v15 = sub_1885AC0(v9, v29, v8, a3);
LABEL_40:
          *(void *)BOOL v34 = v15;
          if (!v15) {
            goto LABEL_50;
          }
LABEL_41:
          if (sub_11947B8((uint64_t)a3, (char **)v34, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_50:
        }
          *(void *)BOOL v34 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v34;
    }
  }
}

uint64_t sub_1454A08(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1453D0C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_1454A98(uint64_t a1, unsigned char *__dst, unint64_t *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v7 = *(int *)(a1 + 64);
    unsigned char *v4 = 16;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(void *)(a1 + 56);
    unsigned char *v4 = 24;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v13 = *(_DWORD *)(a1 + 32);
  if (v13)
  {
    for (int i = 0; i != v13; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v15 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      unsigned char *v4 = 34;
      unsigned int v16 = *(_DWORD *)(v15 + 20);
      v4[1] = v16;
      if (v16 > 0x7F) {
        std::string::size_type v17 = sub_188A9CC(v16, v4 + 1);
      }
      else {
        std::string::size_type v17 = v4 + 2;
      }
      uint64_t v4 = sub_1454044(v15, (unint64_t)v17, a3);
    }
  }
  uint64_t v18 = *(void *)(a1 + 8);
  if ((v18 & 1) == 0) {
    return v4;
  }
  unint64_t v20 = v18 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v20 + 31) < 0)
  {
    int v21 = *(void **)(v20 + 8);
    uint64_t v22 = *(void *)(v20 + 16);
  }
  else
  {
    int v21 = (void *)(v20 + 8);
    LODWORD(v22) = *(unsigned __int8 *)(v20 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v22)
  {
    uint64_t v23 = (int)v22;
    memcpy(v4, v21, (int)v22);
    v4 += v23;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v21, v22, v4);
}

uint64_t sub_1454CF8(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 1) == 0)
  {
    uint64_t result = 0;
    if ((v2 & 4) == 0) {
      return result;
    }
    goto LABEL_7;
  }
  unint64_t v4 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
  uint64_t v6 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    uint64_t v6 = v5;
  }
  uint64_t result = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 4) != 0)
  {
LABEL_7:
    int v7 = *(_DWORD *)(a1 + 64);
    if (v7 < 0) {
      uint64_t v8 = 11;
    }
    else {
      uint64_t v8 = ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    result += v8;
  }
  return result;
}

uint64_t sub_1454D84(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((~v2 & 5) != 0)
  {
    uint64_t v10 = sub_1454CF8(a1);
  }
  else
  {
    unint64_t v3 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
    uint64_t v5 = *(void *)(v3 + 8);
    if ((v4 & 0x80u) == 0) {
      uint64_t v5 = v4;
    }
    uint64_t v6 = (9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6;
    int v7 = *(_DWORD *)(a1 + 64);
    uint64_t v8 = (9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6;
    if (v7 >= 0) {
      uint64_t v9 = v8;
    }
    else {
      uint64_t v9 = 10;
    }
    uint64_t v10 = v5 + v6 + v9 + 2;
  }
  uint64_t v11 = *(int *)(a1 + 32);
  uint64_t v12 = v10 + v11;
  uint64_t v13 = *(void *)(a1 + 40);
  if (v13) {
    std::string::size_type v14 = (uint64_t *)(v13 + 8);
  }
  else {
    std::string::size_type v14 = 0;
  }
  if (v11)
  {
    uint64_t v15 = 8 * v11;
    do
    {
      uint64_t v16 = *v14++;
      uint64_t v17 = sub_1454238(v16);
      v12 += v17 + ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6);
      v15 -= 8;
    }
    while (v15);
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 2) != 0) {
    v12 += ((9 * (__clz(*(void *)(a1 + 56) | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
  uint64_t v18 = *(void *)(a1 + 8);
  if (v18)
  {
    unint64_t v20 = v18 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v20 + 31) < 0) {
      uint64_t v21 = *(void *)(v20 + 16);
    }
    else {
      uint64_t v21 = *(unsigned __int8 *)(v20 + 31);
    }
    v12 += v21;
  }
  *(_DWORD *)(a1 + 20) = v12;
  return v12;
}

std::string *sub_1454EDC(std::string *result, uint64_t a2)
{
  unint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = sub_1493CDC(v3 + 1, v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2] - LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    uint64_t v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 7) != 0)
  {
    if (v9)
    {
      uint64_t v11 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v13 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v13 = (uint64_t *)*v13;
      }
      uint64_t result = sub_1881DF4((std::string **)&v3[2], v11, v13);
      if ((v9 & 2) == 0)
      {
LABEL_7:
        if ((v9 & 4) == 0)
        {
LABEL_9:
          LODWORD(v3->__r_.__value_.__r.__words[2]) |= v9;
          goto LABEL_10;
        }
LABEL_8:
        LODWORD(v3[2].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 64);
        goto LABEL_9;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_7;
    }
    v3[2].__r_.__value_.__l.__size_ = *(void *)(a2 + 56);
    if ((v9 & 4) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
LABEL_10:
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

BOOL sub_145501C(uint64_t a1)
{
  return (~*(_DWORD *)(a1 + 16) & 5) == 0;
}

void *sub_1455030@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.Business.Category");
}

uint64_t sub_1455040(uint64_t a1)
{
  unint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  sub_1889DE8((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_14550E8(uint64_t a1)
{
  sub_1455040(a1);

  operator delete();
}

uint64_t sub_1455120(uint64_t a1)
{
  uint64_t result = sub_188CC00(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v3 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)unint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t v4 = a1 + 8;
  *(_DWORD *)(v4 + 48) = 0;
  *(_DWORD *)(v4 + 8) = 0;
  if (v5)
  {
    return sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

uint64_t sub_14551A8(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v33 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v33, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (uint64_t **)(a1 + 24);
  uint64_t v8 = (void *)(a1 + 8);
  while (1)
  {
    int v9 = (char *)(*(void *)v33 + 1);
    unsigned int v10 = **(unsigned char **)v33;
    if ((char)**(unsigned char **)v33 < 0)
    {
      unsigned int v11 = v10 + (*v9 << 7);
      unsigned int v10 = v11 - 128;
      if (*v9 < 0)
      {
        int v9 = (char *)sub_188C180(*(uint64_t *)v33, v11 - 128);
        unsigned int v10 = v12;
      }
      else
      {
        int v9 = (char *)(*(void *)v33 + 2);
      }
    }
    *(void *)uint64_t v33 = v9;
    unsigned int v13 = v10 >> 3;
    if (v10 >> 3 == 3) {
      break;
    }
    if (v13 != 2)
    {
      if (v13 != 1 || v10 != 10) {
        goto LABEL_14;
      }
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v28 = *(void *)(a1 + 8);
      uint64_t v29 = (uint64_t *)(v28 & 0xFFFFFFFFFFFFFFFCLL);
      if (v28) {
        uint64_t v29 = (uint64_t *)*v29;
      }
      uint64_t v30 = (std::string *)sub_1880F84((void *)(a1 + 48), v29);
      uint64_t v17 = (void *)sub_188C244(v30, *(char **)v33, (uint64_t)a3);
LABEL_41:
      *(void *)uint64_t v33 = v17;
      if (!v17) {
        goto LABEL_49;
      }
      goto LABEL_42;
    }
    if (v10 != 16) {
      goto LABEL_14;
    }
    v5 |= 2u;
    uint64_t v25 = v9 + 1;
    int v26 = *v9;
    if ((*v9 & 0x80000000) == 0) {
      goto LABEL_37;
    }
    int v27 = *v25;
    int v26 = v26 + (v27 << 7) - 128;
    if ((v27 & 0x80000000) == 0)
    {
      uint64_t v25 = v9 + 2;
LABEL_37:
      *(void *)uint64_t v33 = v25;
      *(_DWORD *)(a1 + 56) = v26;
      goto LABEL_42;
    }
    uint64_t v31 = sub_188C0D0((uint64_t)v9, v26);
    *(void *)uint64_t v33 = v31;
    *(_DWORD *)(a1 + 56) = v32;
    if (!v31) {
      goto LABEL_49;
    }
LABEL_42:
    if (sub_11947B8((uint64_t)a3, (char **)v33, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v10 == 26)
  {
    uint64_t v18 = v9 - 1;
    while (1)
    {
      uint64_t v19 = (char *)(v18 + 1);
      *(void *)uint64_t v33 = v18 + 1;
      unint64_t v20 = *(_DWORD **)(a1 + 40);
      if (v20 && (uint64_t v21 = *(int *)(a1 + 32), (int)v21 < *v20))
      {
        *(_DWORD *)(a1 + 32) = v21 + 1;
        uint64_t v22 = *(std::string **)&v20[2 * v21 + 2];
      }
      else
      {
        if (!*v7) {
          operator new();
        }
        *uint64_t v24 = v23;
        v24[1] = sub_3A6EDC;
        void *v23 = 0;
        v23[1] = 0;
        v23[2] = 0;
        uint64_t v22 = (std::string *)sub_188CDC8(a1 + 24, (uint64_t)v23);
        uint64_t v19 = *(char **)v33;
      }
      uint64_t v18 = sub_188C244(v22, v19, (uint64_t)a3);
      *(void *)uint64_t v33 = v18;
      if (!v18) {
        goto LABEL_49;
      }
      if (*(void *)a3 <= (unint64_t)v18 || *v18 != 26) {
        goto LABEL_42;
      }
    }
  }
LABEL_14:
  if (v10) {
    BOOL v15 = (v10 & 7) == 4;
  }
  else {
    BOOL v15 = 1;
  }
  if (!v15)
  {
    if (*v8)
    {
      uint64_t v16 = (std::string *)((*v8 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v16 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v9 = *(char **)v33;
    }
    uint64_t v17 = sub_1885AC0(v10, v16, v9, a3);
    goto LABEL_41;
  }
  if (v9)
  {
    a3[10].i32[0] = v10 - 1;
    goto LABEL_2;
  }
LABEL_49:
  *(void *)uint64_t v33 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return *(void *)v33;
}

char *sub_1455470(uint64_t a1, char *__dst, void *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 56);
    char *v4 = 16;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v10 = *(unsigned int *)(a1 + 32);
  if ((int)v10 >= 1)
  {
    uint64_t v11 = 0;
    uint64_t v12 = 8 * v10;
    do
    {
      unsigned int v13 = *(void **)(*(void *)(a1 + 40) + v11 + 8);
      if (*((char *)v13 + 23) < 0)
      {
        int64_t v14 = v13[1];
        if (v14 > 127) {
          goto LABEL_21;
        }
      }
      else
      {
        int64_t v14 = *((unsigned __int8 *)v13 + 23);
      }
      if (*a3 - (void)v4 + 14 >= v14)
      {
        char *v4 = 26;
        v4[1] = v14;
        if (*((char *)v13 + 23) < 0) {
          unsigned int v13 = (void *)*v13;
        }
        BOOL v15 = v4 + 2;
        memcpy(v15, v13, v14);
        uint64_t v4 = &v15[v14];
        goto LABEL_19;
      }
LABEL_21:
      uint64_t v4 = (char *)sub_188A868(a3, 3, (uint64_t)v13, v4);
LABEL_19:
      v11 += 8;
    }
    while (v12 != v11);
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return v4;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    uint64_t v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    uint64_t v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if (*a3 - (void)v4 >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(v4, v19, (int)v20);
    v4 += v21;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v19, v20, v4);
}

uint64_t sub_1455678(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      return v2;
    }
    goto LABEL_7;
  }
  unint64_t v3 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
  uint64_t v5 = *(void *)(v3 + 8);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = v4;
  }
  uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0) {
LABEL_7:
  }
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 56) | 1) ^ 0x1F) + 73) >> 6) + 1;
  return v2;
}

uint64_t sub_14556F8(uint64_t a1)
{
  if ((~*(_DWORD *)(a1 + 16) & 3) != 0)
  {
    uint64_t v5 = sub_1455678(a1);
  }
  else
  {
    unint64_t v2 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v3 = *(unsigned __int8 *)(v2 + 23);
    uint64_t v4 = *(void *)(v2 + 8);
    if ((v3 & 0x80u) == 0) {
      uint64_t v4 = v3;
    }
    uint64_t v5 = v4 + ((9 * (__clz(*(_DWORD *)(a1 + 56) | 1) ^ 0x1F) + 73) >> 6) + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
  uint64_t v6 = *(unsigned int *)(a1 + 32);
  uint64_t result = v5 + v6;
  if ((int)v6 >= 1)
  {
    unsigned int v8 = (uint64_t *)(*(void *)(a1 + 40) + 8);
    do
    {
      uint64_t v9 = *v8++;
      uint64_t v10 = *(unsigned __int8 *)(v9 + 23);
      uint64_t v11 = *(void *)(v9 + 8);
      if ((v10 & 0x80u) == 0) {
        uint64_t v11 = v10;
      }
      result += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6);
      --v6;
    }
    while (v6);
  }
  uint64_t v12 = *(void *)(a1 + 8);
  if (v12)
  {
    unint64_t v13 = v12 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v13 + 31) < 0) {
      uint64_t v14 = *(void *)(v13 + 16);
    }
    else {
      uint64_t v14 = *(unsigned __int8 *)(v13 + 31);
    }
    result += v14;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

std::string *sub_1455818(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (const std::string **)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = (std::string *)sub_188FB98((uint64_t)&v3[1], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2]- LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    unsigned int v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *unsigned int v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 3) != 0)
  {
    if (v9)
    {
      uint64_t v10 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v12 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v12 = (uint64_t *)*v12;
      }
      uint64_t result = sub_1881DF4((std::string **)&v3[2], v10, v12);
    }
    if ((v9 & 2) != 0) {
      LODWORD(v3[2].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 56);
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= v9;
  }
  uint64_t v13 = *(void *)(a2 + 8);
  if (v13)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v13 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

BOOL sub_1455940(uint64_t a1)
{
  return (~*(_DWORD *)(a1 + 16) & 3) == 0;
}

void *sub_1455954@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.Business.SearchAttribution");
}

uint64_t sub_1455964(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_11;
    }
  }
  else if (v4)
  {
    goto LABEL_11;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(uint64_t **)(a1 + 40) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 40));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_11:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1455A30(uint64_t a1)
{
  sub_1455964(a1);

  operator delete();
}

uint64_t sub_1455A68(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 7) == 0) {
    goto LABEL_17;
  }
  if (v1)
  {
    unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)unint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
      if ((v1 & 2) != 0) {
        goto LABEL_10;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
      if ((v1 & 2) != 0) {
        goto LABEL_10;
      }
    }
LABEL_4:
    if ((v1 & 4) == 0) {
      goto LABEL_17;
    }
LABEL_14:
    unint64_t v4 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v4 + 23) < 0)
    {
      **(unsigned char **)unint64_t v4 = 0;
      *(void *)(v4 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v4 = 0;
      *(unsigned char *)(v4 + 23) = 0;
    }
    goto LABEL_17;
  }
  if ((v1 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_10:
  unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v3 + 23) < 0)
  {
    **(unsigned char **)unint64_t v3 = 0;
    *(void *)(v3 + 8) = 0;
    if ((v1 & 4) == 0) {
      goto LABEL_17;
    }
    goto LABEL_14;
  }
  *(unsigned char *)unint64_t v3 = 0;
  *(unsigned char *)(v3 + 23) = 0;
  if ((v1 & 4) != 0) {
    goto LABEL_14;
  }
LABEL_17:
  char v6 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v6) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_1455B20(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v22 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v22, a3[11].i32[1])) {
    return *(void *)v22;
  }
  char v6 = (void *)(a1 + 8);
  while (1)
  {
    int v7 = (char *)(*(void *)v22 + 1);
    unsigned int v8 = **(unsigned char **)v22;
    if ((char)**(unsigned char **)v22 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        int v7 = (char *)sub_188C180(*(uint64_t *)v22, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        int v7 = (char *)(*(void *)v22 + 2);
      }
    }
    *(void *)uint64_t v22 = v7;
    unsigned int v11 = v8 >> 3;
    if (v8 >> 3 == 3)
    {
      if (v8 == 26)
      {
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v16 = *(void *)(a1 + 8);
        uint64_t v17 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
        if (v16) {
          uint64_t v17 = (uint64_t *)*v17;
        }
        unint64_t v18 = (void *)(a1 + 40);
        goto LABEL_32;
      }
    }
    else if (v11 == 2)
    {
      if (v8 == 18)
      {
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v19 = *(void *)(a1 + 8);
        uint64_t v17 = (uint64_t *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
        if (v19) {
          uint64_t v17 = (uint64_t *)*v17;
        }
        unint64_t v18 = (void *)(a1 + 32);
        goto LABEL_32;
      }
    }
    else if (v11 == 1 && v8 == 10)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v20 = *(void *)(a1 + 8);
      uint64_t v17 = (uint64_t *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
      if (v20) {
        uint64_t v17 = (uint64_t *)*v17;
      }
      unint64_t v18 = (void *)(a1 + 24);
LABEL_32:
      uint64_t v21 = (std::string *)sub_1880F84(v18, v17);
      BOOL v15 = (void *)sub_188C244(v21, *(char **)v22, (uint64_t)a3);
      goto LABEL_33;
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      uint64_t v14 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v7 = *(char **)v22;
    }
    BOOL v15 = sub_1885AC0(v8, v14, v7, a3);
LABEL_33:
    *(void *)uint64_t v22 = v15;
    if (!v15) {
      goto LABEL_39;
    }
    if (sub_11947B8((uint64_t)a3, (char **)v22, a3[11].i32[1])) {
      return *(void *)v22;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v22;
  }
LABEL_39:
  *(void *)uint64_t v22 = 0;
  return *(void *)v22;
}

char *sub_1455D10(uint64_t a1, char *__dst, void *a3)
{
  unint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    unint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_4;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  unint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) != 0) {
LABEL_4:
  }
    unint64_t v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL), v4);
LABEL_5:
  uint64_t v7 = *(void *)(a1 + 8);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v9 + 31) < 0)
  {
    unsigned int v10 = *(void **)(v9 + 8);
    uint64_t v11 = *(void *)(v9 + 16);
  }
  else
  {
    unsigned int v10 = (void *)(v9 + 8);
    LODWORD(v11) = *(unsigned __int8 *)(v9 + 31);
  }
  if (*a3 - (void)v4 >= (int)v11)
  {
    uint64_t v12 = (int)v11;
    memcpy(v4, v10, (int)v11);
    v4 += v12;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v10, v11, v4);
}

uint64_t sub_1455E28(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((~v2 & 3) != 0)
  {
    uint64_t result = sub_1231798(a1);
    if ((v2 & 4) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
  uint64_t v5 = *(void *)(v3 + 8);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = v4;
  }
  uint64_t v6 = (9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6;
  unint64_t v7 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v8 = *(unsigned __int8 *)(v7 + 23);
  uint64_t v9 = *(void *)(v7 + 8);
  if ((v8 & 0x80u) == 0) {
    uint64_t v9 = v8;
  }
  uint64_t result = v5 + v9 + v6 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v2 & 4) != 0)
  {
LABEL_9:
    unint64_t v11 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v12 = *(unsigned __int8 *)(v11 + 23);
    uint64_t v13 = *(void *)(v11 + 8);
    if ((v12 & 0x80u) == 0) {
      uint64_t v13 = v12;
    }
    result += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  uint64_t v14 = *(void *)(a1 + 8);
  if (v14)
  {
    unint64_t v15 = v14 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v15 + 31) < 0) {
      uint64_t v16 = *(void *)(v15 + 16);
    }
    else {
      uint64_t v16 = *(unsigned __int8 *)(v15 + 31);
    }
    result += v16;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

BOOL sub_1455F50(uint64_t a1)
{
  return (~*(_DWORD *)(a1 + 16) & 3) == 0;
}

void *sub_1455F64@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.Business.Source");
}

void *sub_1455F74(void *a1)
{
  unint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1455FE8(void *a1)
{
  sub_1455F74(a1);

  operator delete();
}

uint64_t sub_1456020(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(unsigned char *)(result + 16) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_1456038(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v19 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
    goto LABEL_27;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    unint64_t v7 = v19 + 1;
    unsigned int v8 = *v19;
    if (*v19 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        unint64_t v7 = (char *)sub_188C180((uint64_t)v19, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        unint64_t v7 = v19 + 2;
      }
    }
    uint64_t v19 = v7;
    if (v8 != 8) {
      break;
    }
    uint64_t v13 = v7 + 1;
    uint64_t v14 = *v7;
    if ((*v7 & 0x80000000) == 0) {
      goto LABEL_19;
    }
    int v15 = *v13;
    uint64_t v14 = v14 + (v15 << 7) - 128;
    if ((v15 & 0x80000000) == 0)
    {
      uint64_t v13 = v7 + 2;
LABEL_19:
      uint64_t v19 = v13;
      *(unsigned char *)(a1 + 24) = v14 != 0;
      int v5 = 1;
      goto LABEL_20;
    }
    uint64_t v16 = (char *)sub_188C138((uint64_t)v7, v14);
    uint64_t v19 = v16;
    *(unsigned char *)(a1 + 24) = v17 != 0;
    int v5 = 1;
    if (!v16) {
      goto LABEL_28;
    }
LABEL_20:
    if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
      goto LABEL_27;
    }
  }
  if (v8) {
    BOOL v11 = (v8 & 7) == 4;
  }
  else {
    BOOL v11 = 1;
  }
  if (!v11)
  {
    if (*v6)
    {
      uint64_t v12 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v12 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unint64_t v7 = v19;
    }
    uint64_t v19 = (char *)sub_1885AC0(v8, v12, v7, a3);
    if (!v19) {
      goto LABEL_28;
    }
    goto LABEL_20;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    goto LABEL_27;
  }
LABEL_28:
  uint64_t v19 = 0;
LABEL_27:
  *(_DWORD *)(a1 + 16) |= v5;
  return v19;
}

unsigned char *sub_14561C8(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    char v6 = *(unsigned char *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v6;
    v4 += 2;
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v9 + 31) < 0)
  {
    unsigned int v10 = *(void **)(v9 + 8);
    uint64_t v11 = *(void *)(v9 + 16);
  }
  else
  {
    unsigned int v10 = (void *)(v9 + 8);
    LODWORD(v11) = *(unsigned __int8 *)(v9 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v11)
  {
    uint64_t v12 = (int)v11;
    memcpy(v4, v10, (int)v11);
    v4 += v12;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v10, v11, v4);
}

uint64_t sub_14562AC(uint64_t a1)
{
  uint64_t v1 = 2 * (*(_DWORD *)(a1 + 16) & 1);
  uint64_t v2 = *(void *)(a1 + 8);
  if (v2)
  {
    unint64_t v4 = v2 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v5 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v5 = *(unsigned __int8 *)(v4 + 31);
    }
    v1 += v5;
  }
  *(_DWORD *)(a1 + 20) = v1;
  return v1;
}

uint64_t sub_14562EC()
{
  return 1;
}

void *sub_14562F4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.Business.PlaceDataAmendment");
}

uint64_t sub_1456304(uint64_t result, uint64_t a2, int a3)
{
  uint64_t v3 = a2 | 2;
  if (!a3) {
    uint64_t v3 = a2;
  }
  *(void *)uint64_t result = off_24B5588;
  *(void *)(result + 8) = v3;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a2;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = a2;
  *(void *)(result + 56) = 0;
  *(void *)(result + 64) = 0;
  *(void *)(result + 72) = a2;
  *(void *)(result + 80) = 0;
  *(void *)(result + 88) = 0;
  *(void *)(result + 96) = a2;
  *(void *)(result + 104) = 0;
  *(void *)(result + 112) = 0;
  *(void *)(result + 120) = a2;
  *(void *)(result + 128) = 0;
  *(void *)(result + 136) = 0;
  *(void *)(result + 144) = a2;
  *(void *)(result + 152) = 0;
  *(void *)(result + 160) = 0;
  *(void *)(result + 168) = a2;
  *(void *)(result + 176) = 0;
  *(void *)(result + 184) = 0;
  *(void *)(result + 192) = a2;
  *(void *)(result + 200) = 0;
  *(void *)(result + 208) = 0;
  *(void *)(result + 216) = a2;
  *(void *)(result + 224) = 0;
  *(void *)(result + 232) = 0;
  *(void *)(result + 240) = a2;
  *(void *)(result + 248) = 0;
  *(void *)(result + 256) = 0;
  *(void *)(result + 264) = &qword_2550250;
  *(void *)(result + 272) = &qword_2550250;
  *(void *)(result + 280) = &qword_2550250;
  *(void *)(result + 288) = &qword_2550250;
  *(void *)(result + 296) = &qword_2550250;
  *(void *)(result + 304) = &qword_2550250;
  *(void *)(result + 312) = &qword_2550250;
  *(void *)(result + 320) = 0;
  *(_DWORD *)(result + 344) = 0;
  *(void *)(result + 328) = 0;
  *(void *)(result + 336) = 0;
  return result;
}

void *sub_1456390(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  unint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_1456484((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  sub_149344C(a1 + 30);
  sub_1889DE8(a1 + 27);
  sub_14933CC(a1 + 24);
  sub_149334C(a1 + 21);
  sub_14932CC(a1 + 18);
  sub_124DD4C(a1 + 15);
  sub_149324C(a1 + 12);
  sub_14931CC(a1 + 9);
  sub_1889DE8(a1 + 6);
  sub_149037C(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

uint64_t sub_1456484(uint64_t result)
{
  if (*(uint64_t **)(result + 264) != &qword_2550250) {
    sub_1881C6C((void ***)(result + 264));
  }
  if (*(uint64_t **)(result + 272) != &qword_2550250) {
    sub_1881C6C((void ***)(result + 272));
  }
  if (*(uint64_t **)(result + 280) != &qword_2550250) {
    sub_1881C6C((void ***)(result + 280));
  }
  if (*(uint64_t **)(result + 288) != &qword_2550250) {
    sub_1881C6C((void ***)(result + 288));
  }
  if (*(uint64_t **)(result + 296) != &qword_2550250) {
    sub_1881C6C((void ***)(result + 296));
  }
  if (*(uint64_t **)(result + 304) != &qword_2550250) {
    sub_1881C6C((void ***)(result + 304));
  }
  if (*(uint64_t **)(result + 312) != &qword_2550250) {
    sub_1881C6C((void ***)(result + 312));
  }
  if ((uint64_t (***)())result != &off_25390D0)
  {
    uint64_t result = *(void *)(result + 320);
    if (result)
    {
      sub_15B0994();
      operator delete();
    }
  }
  return result;
}

void sub_1456584(void *a1)
{
  sub_1456390(a1);

  operator delete();
}

uint64_t sub_14565BC(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(a1 + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      sub_140C2D8(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(a1 + 32) = 0;
  }
  sub_188CC00(a1 + 48);
  uint64_t v5 = *(unsigned int *)(a1 + 80);
  if ((int)v5 >= 1)
  {
    char v6 = (uint64_t *)(*(void *)(a1 + 88) + 8);
    do
    {
      uint64_t v7 = *v6++;
      sub_1450220(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(a1 + 80) = 0;
  }
  uint64_t v8 = *(unsigned int *)(a1 + 104);
  if ((int)v8 >= 1)
  {
    unint64_t v9 = (uint64_t *)(*(void *)(a1 + 112) + 8);
    do
    {
      uint64_t v10 = *v9++;
      sub_15BA4DC(v10);
      --v8;
    }
    while (v8);
    *(_DWORD *)(a1 + 104) = 0;
  }
  uint64_t v11 = *(unsigned int *)(a1 + 128);
  if ((int)v11 >= 1)
  {
    uint64_t v12 = (uint64_t *)(*(void *)(a1 + 136) + 8);
    do
    {
      uint64_t v13 = *v12++;
      sub_14532E4(v13);
      --v11;
    }
    while (v11);
    *(_DWORD *)(a1 + 128) = 0;
  }
  uint64_t v14 = *(unsigned int *)(a1 + 152);
  if ((int)v14 >= 1)
  {
    int v15 = (uint64_t *)(*(void *)(a1 + 160) + 8);
    do
    {
      uint64_t v16 = *v15++;
      sub_145464C(v16);
      --v14;
    }
    while (v14);
    *(_DWORD *)(a1 + 152) = 0;
  }
  uint64_t v17 = *(unsigned int *)(a1 + 176);
  if ((int)v17 >= 1)
  {
    unint64_t v18 = (uint64_t *)(*(void *)(a1 + 184) + 8);
    do
    {
      uint64_t v19 = *v18++;
      sub_1455120(v19);
      --v17;
    }
    while (v17);
    *(_DWORD *)(a1 + 176) = 0;
  }
  uint64_t v20 = *(unsigned int *)(a1 + 200);
  if ((int)v20 >= 1)
  {
    uint64_t v21 = (uint64_t *)(*(void *)(a1 + 208) + 8);
    do
    {
      uint64_t v22 = *v21++;
      sub_1455A68(v22);
      --v20;
    }
    while (v20);
    *(_DWORD *)(a1 + 200) = 0;
  }
  sub_188CC00(a1 + 216);
  uint64_t result = sub_148B164(a1 + 240);
  int v24 = *(_DWORD *)(a1 + 16);
  if (!(_BYTE)v24) {
    goto LABEL_39;
  }
  if (v24)
  {
    unint64_t v27 = *(void *)(a1 + 264) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v27 + 23) < 0)
    {
      **(unsigned char **)unint64_t v27 = 0;
      *(void *)(v27 + 8) = 0;
      if ((v24 & 2) != 0) {
        goto LABEL_49;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v27 = 0;
      *(unsigned char *)(v27 + 23) = 0;
      if ((v24 & 2) != 0) {
        goto LABEL_49;
      }
    }
LABEL_32:
    if ((v24 & 4) == 0) {
      goto LABEL_33;
    }
LABEL_53:
    unint64_t v29 = *(void *)(a1 + 280) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v29 + 23) < 0)
    {
      **(unsigned char **)unint64_t v29 = 0;
      *(void *)(v29 + 8) = 0;
      if ((v24 & 8) != 0) {
        goto LABEL_57;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v29 = 0;
      *(unsigned char *)(v29 + 23) = 0;
      if ((v24 & 8) != 0) {
        goto LABEL_57;
      }
    }
LABEL_34:
    if ((v24 & 0x10) == 0) {
      goto LABEL_35;
    }
LABEL_61:
    unint64_t v31 = *(void *)(a1 + 296) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v31 + 23) < 0)
    {
      **(unsigned char **)unint64_t v31 = 0;
      *(void *)(v31 + 8) = 0;
      if ((v24 & 0x20) != 0) {
        goto LABEL_65;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v31 = 0;
      *(unsigned char *)(v31 + 23) = 0;
      if ((v24 & 0x20) != 0) {
        goto LABEL_65;
      }
    }
LABEL_36:
    if ((v24 & 0x40) == 0) {
      goto LABEL_37;
    }
    goto LABEL_69;
  }
  if ((v24 & 2) == 0) {
    goto LABEL_32;
  }
LABEL_49:
  unint64_t v28 = *(void *)(a1 + 272) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v28 + 23) < 0)
  {
    **(unsigned char **)unint64_t v28 = 0;
    *(void *)(v28 + 8) = 0;
    if ((v24 & 4) != 0) {
      goto LABEL_53;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v28 = 0;
    *(unsigned char *)(v28 + 23) = 0;
    if ((v24 & 4) != 0) {
      goto LABEL_53;
    }
  }
LABEL_33:
  if ((v24 & 8) == 0) {
    goto LABEL_34;
  }
LABEL_57:
  unint64_t v30 = *(void *)(a1 + 288) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v30 + 23) < 0)
  {
    **(unsigned char **)unint64_t v30 = 0;
    *(void *)(v30 + 8) = 0;
    if ((v24 & 0x10) != 0) {
      goto LABEL_61;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v30 = 0;
    *(unsigned char *)(v30 + 23) = 0;
    if ((v24 & 0x10) != 0) {
      goto LABEL_61;
    }
  }
LABEL_35:
  if ((v24 & 0x20) == 0) {
    goto LABEL_36;
  }
LABEL_65:
  unint64_t v32 = *(void *)(a1 + 304) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v32 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v32 = 0;
    *(unsigned char *)(v32 + 23) = 0;
    if ((v24 & 0x40) != 0) {
      goto LABEL_69;
    }
LABEL_37:
    if ((v24 & 0x80) == 0) {
      goto LABEL_39;
    }
    goto LABEL_38;
  }
  **(unsigned char **)unint64_t v32 = 0;
  *(void *)(v32 + 8) = 0;
  if ((v24 & 0x40) == 0) {
    goto LABEL_37;
  }
LABEL_69:
  unint64_t v33 = *(void *)(a1 + 312) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v33 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v33 = 0;
    *(unsigned char *)(v33 + 23) = 0;
    if ((v24 & 0x80) == 0) {
      goto LABEL_39;
    }
LABEL_38:
    uint64_t result = (uint64_t)sub_15B09D0(*(void *)(a1 + 320));
    goto LABEL_39;
  }
  **(unsigned char **)unint64_t v33 = 0;
  *(void *)(v33 + 8) = 0;
  if ((v24 & 0x80) != 0) {
    goto LABEL_38;
  }
LABEL_39:
  if ((v24 & 0x3F00) != 0)
  {
    *(void *)(a1 + 328) = 0;
    *(void *)(a1 + 336) = 0;
    *(_DWORD *)(a1 + 344) = 0;
  }
  char v26 = *(unsigned char *)(a1 + 8);
  uint64_t v25 = a1 + 8;
  *(_DWORD *)(v25 + 8) = 0;
  if (v26)
  {
    return sub_188B4AC((uint64_t *)v25);
  }
  return result;
}

char *sub_14568DC(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v124 = a2;
  if (sub_11947B8((uint64_t)a3, &v124, a3[11].i32[1]))
  {
    int v122 = 0;
    goto LABEL_3;
  }
  int v122 = 0;
  unint64_t v123 = (uint64_t **)(a1 + 216);
  uint64_t v120 = (uint64_t *)(a1 + 192);
  uint64_t v121 = (uint64_t *)(a1 + 240);
  char v6 = (uint64_t **)(a1 + 48);
  int v119 = (uint64_t *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v124 + 1;
    unsigned int v8 = *v124;
    if (*v124 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v124, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v124 + 2;
      }
    }
    uint64_t v124 = v7;
    unsigned int v11 = v8 >> 3;
    if (v8 >> 3 <= 0x63)
    {
      switch(v11)
      {
        case 1u:
          if (v8 != 8) {
            goto LABEL_186;
          }
          v122 |= 0x100u;
          uint64_t v12 = v7 + 1;
          uint64_t v13 = *v7;
          if ((*v7 & 0x80000000) == 0) {
            goto LABEL_15;
          }
          int v14 = *v12;
          uint64_t v13 = v13 + (v14 << 7) - 128;
          if (v14 < 0)
          {
            uint64_t v107 = (char *)sub_188C138((uint64_t)v7, v13);
            uint64_t v124 = v107;
            *(void *)(a1 + 328) = v108;
            if (!v107) {
              goto LABEL_208;
            }
          }
          else
          {
            uint64_t v12 = v7 + 2;
LABEL_15:
            uint64_t v124 = v12;
            *(void *)(a1 + 328) = v13;
          }
          goto LABEL_84;
        case 2u:
          if (v8 != 16) {
            goto LABEL_186;
          }
          v122 |= 0x200u;
          uint64_t v22 = v7 + 1;
          LODWORD(v21) = *v7;
          if ((v21 & 0x80) == 0) {
            goto LABEL_33;
          }
          int v23 = *v22;
          uint64_t v21 = v21 + (v23 << 7) - 128;
          if (v23 < 0)
          {
            uint64_t v109 = (char *)sub_188C138((uint64_t)v7, v21);
            uint64_t v124 = v109;
            *(_DWORD *)(a1 + 336) = v110;
            if (!v109) {
              goto LABEL_208;
            }
          }
          else
          {
            uint64_t v22 = v7 + 2;
LABEL_33:
            uint64_t v124 = v22;
            *(_DWORD *)(a1 + 336) = v21;
          }
          goto LABEL_84;
        case 3u:
          if (v8 != 26) {
            goto LABEL_186;
          }
          *(_DWORD *)(a1 + 16) |= 1u;
          uint64_t v24 = *(void *)(a1 + 8);
          uint64_t v25 = (uint64_t *)(v24 & 0xFFFFFFFFFFFFFFFCLL);
          if (v24) {
            uint64_t v25 = (uint64_t *)*v25;
          }
          char v26 = (void *)(a1 + 264);
          goto LABEL_82;
        case 4u:
          if (v8 != 34) {
            goto LABEL_186;
          }
          *(_DWORD *)(a1 + 16) |= 2u;
          uint64_t v27 = *(void *)(a1 + 8);
          uint64_t v25 = (uint64_t *)(v27 & 0xFFFFFFFFFFFFFFFCLL);
          if (v27) {
            uint64_t v25 = (uint64_t *)*v25;
          }
          char v26 = (void *)(a1 + 272);
          goto LABEL_82;
        case 5u:
          if (v8 != 42) {
            goto LABEL_186;
          }
          *(_DWORD *)(a1 + 16) |= 4u;
          uint64_t v28 = *(void *)(a1 + 8);
          uint64_t v25 = (uint64_t *)(v28 & 0xFFFFFFFFFFFFFFFCLL);
          if (v28) {
            uint64_t v25 = (uint64_t *)*v25;
          }
          char v26 = (void *)(a1 + 280);
          goto LABEL_82;
        case 6u:
          if (v8 != 50) {
            goto LABEL_186;
          }
          *(_DWORD *)(a1 + 16) |= 8u;
          uint64_t v29 = *(void *)(a1 + 8);
          uint64_t v25 = (uint64_t *)(v29 & 0xFFFFFFFFFFFFFFFCLL);
          if (v29) {
            uint64_t v25 = (uint64_t *)*v25;
          }
          char v26 = (void *)(a1 + 288);
          goto LABEL_82;
        case 7u:
          if (v8 != 58) {
            goto LABEL_186;
          }
          *(_DWORD *)(a1 + 16) |= 0x10u;
          uint64_t v30 = *(void *)(a1 + 8);
          uint64_t v25 = (uint64_t *)(v30 & 0xFFFFFFFFFFFFFFFCLL);
          if (v30) {
            uint64_t v25 = (uint64_t *)*v25;
          }
          char v26 = (void *)(a1 + 296);
          goto LABEL_82;
        case 8u:
          if (v8 != 66) {
            goto LABEL_186;
          }
          *(_DWORD *)(a1 + 16) |= 0x20u;
          uint64_t v31 = *(void *)(a1 + 8);
          uint64_t v25 = (uint64_t *)(v31 & 0xFFFFFFFFFFFFFFFCLL);
          if (v31) {
            uint64_t v25 = (uint64_t *)*v25;
          }
          char v26 = (void *)(a1 + 304);
          goto LABEL_82;
        case 9u:
          if (v8 != 72) {
            goto LABEL_186;
          }
          v122 |= 0x400u;
          unint64_t v32 = v7 + 1;
          uint64_t v33 = *v7;
          if ((*v7 & 0x80000000) == 0) {
            goto LABEL_62;
          }
          int v34 = *v32;
          uint64_t v33 = v33 + (v34 << 7) - 128;
          if (v34 < 0)
          {
            uint64_t v111 = (char *)sub_188C138((uint64_t)v7, v33);
            uint64_t v124 = v111;
            *(unsigned char *)(a1 + 340) = v112 != 0;
            if (!v111) {
              goto LABEL_208;
            }
          }
          else
          {
            unint64_t v32 = v7 + 2;
LABEL_62:
            uint64_t v124 = v32;
            *(unsigned char *)(a1 + 340) = v33 != 0;
          }
          goto LABEL_84;
        case 0xAu:
          if (v8 != 80) {
            goto LABEL_186;
          }
          v122 |= 0x800u;
          unint64_t v35 = v7 + 1;
          uint64_t v36 = *v7;
          if ((*v7 & 0x80000000) == 0) {
            goto LABEL_67;
          }
          int v37 = *v35;
          uint64_t v36 = v36 + (v37 << 7) - 128;
          if (v37 < 0)
          {
            uint64_t v113 = (char *)sub_188C138((uint64_t)v7, v36);
            uint64_t v124 = v113;
            *(unsigned char *)(a1 + 341) = v114 != 0;
            if (!v113) {
              goto LABEL_208;
            }
          }
          else
          {
            unint64_t v35 = v7 + 2;
LABEL_67:
            uint64_t v124 = v35;
            *(unsigned char *)(a1 + 341) = v36 != 0;
          }
          goto LABEL_84;
        case 0xBu:
          if (v8 != 90) {
            goto LABEL_186;
          }
          uint64_t v38 = v7 - 1;
          while (1)
          {
            int v39 = (unsigned __int8 *)(v38 + 1);
            uint64_t v124 = v38 + 1;
            uint64_t v40 = *(_DWORD **)(a1 + 40);
            if (v40 && (uint64_t v41 = *(int *)(a1 + 32), (int)v41 < *v40))
            {
              *(_DWORD *)(a1 + 32) = v41 + 1;
              uint64_t v42 = *(void *)&v40[2 * v41 + 2];
            }
            else
            {
              uint64_t v43 = sub_1478378(*(void *)(a1 + 24));
              uint64_t v42 = sub_188CDC8(a1 + 24, (uint64_t)v43);
              int v39 = (unsigned __int8 *)v124;
            }
            uint64_t v38 = (char *)sub_140C410(a3, v42, v39);
            uint64_t v124 = v38;
            if (!v38) {
              goto LABEL_208;
            }
            if (*(void *)a3 <= (unint64_t)v38 || *v38 != 90) {
              goto LABEL_84;
            }
          }
        case 0xCu:
          if (v8 != 98) {
            goto LABEL_186;
          }
          *(_DWORD *)(a1 + 16) |= 0x40u;
          uint64_t v44 = *(void *)(a1 + 8);
          uint64_t v25 = (uint64_t *)(v44 & 0xFFFFFFFFFFFFFFFCLL);
          if (v44) {
            uint64_t v25 = (uint64_t *)*v25;
          }
          char v26 = (void *)(a1 + 312);
LABEL_82:
          uint64_t v45 = (std::string *)sub_1880F84(v26, v25);
          uint64_t v46 = (char *)sub_188C244(v45, v124, (uint64_t)a3);
          goto LABEL_83;
        case 0xDu:
          if (v8 != 106) {
            goto LABEL_186;
          }
          uint64_t v47 = v7 - 1;
          while (1)
          {
            uint64_t v48 = (char *)(v47 + 1);
            uint64_t v124 = (char *)(v47 + 1);
            uint64_t v49 = *(_DWORD **)(a1 + 64);
            if (v49 && (uint64_t v50 = *(int *)(a1 + 56), (int)v50 < *v49))
            {
              *(_DWORD *)(a1 + 56) = v50 + 1;
              uint64_t v51 = *(std::string **)&v49[2 * v50 + 2];
            }
            else
            {
              if (!*v6) {
                operator new();
              }
              void *v53 = v52;
              v53[1] = sub_3A6EDC;
              *uint64_t v52 = 0;
              v52[1] = 0;
              v52[2] = 0;
              uint64_t v51 = (std::string *)sub_188CDC8(a1 + 48, (uint64_t)v52);
              uint64_t v48 = v124;
            }
            uint64_t v47 = sub_188C244(v51, v48, (uint64_t)a3);
            uint64_t v124 = (char *)v47;
            if (!v47) {
              goto LABEL_208;
            }
            if (*(void *)a3 <= (unint64_t)v47 || *v47 != 106) {
              goto LABEL_84;
            }
          }
        case 0xEu:
          if (v8 != 114) {
            goto LABEL_186;
          }
          uint64_t v54 = v7 - 1;
          while (1)
          {
            uint64_t v55 = (unsigned __int8 *)(v54 + 1);
            uint64_t v124 = v54 + 1;
            uint64_t v56 = *(_DWORD **)(a1 + 88);
            if (v56 && (uint64_t v57 = *(int *)(a1 + 80), (int)v57 < *v56))
            {
              *(_DWORD *)(a1 + 80) = v57 + 1;
              uint64_t v58 = *(void *)&v56[2 * v57 + 2];
            }
            else
            {
              uint64_t v59 = sub_14784B0(*(void *)(a1 + 72));
              uint64_t v58 = sub_188CDC8(a1 + 72, v59);
              uint64_t v55 = (unsigned __int8 *)v124;
            }
            uint64_t v54 = (char *)sub_1450494(a3, v58, v55);
            uint64_t v124 = v54;
            if (!v54) {
              goto LABEL_208;
            }
            if (*(void *)a3 <= (unint64_t)v54 || *v54 != 114) {
              goto LABEL_84;
            }
          }
        case 0xFu:
          if (v8 != 122) {
            goto LABEL_186;
          }
          unint64_t v60 = v7 - 1;
          while (1)
          {
            uint64_t v61 = (unsigned __int8 *)(v60 + 1);
            uint64_t v124 = v60 + 1;
            uint64_t v62 = *(_DWORD **)(a1 + 112);
            if (v62 && (uint64_t v63 = *(int *)(a1 + 104), (int)v63 < *v62))
            {
              *(_DWORD *)(a1 + 104) = v63 + 1;
              uint64_t v64 = *(void *)&v62[2 * v63 + 2];
            }
            else
            {
              unint64_t v65 = sub_15C2090(*(void *)(a1 + 96));
              uint64_t v64 = sub_188CDC8(a1 + 96, (uint64_t)v65);
              uint64_t v61 = (unsigned __int8 *)v124;
            }
            unint64_t v60 = (char *)sub_1457588(a3, v64, v61);
            uint64_t v124 = v60;
            if (!v60) {
              goto LABEL_208;
            }
            if (*(void *)a3 <= (unint64_t)v60 || *v60 != 122) {
              goto LABEL_84;
            }
          }
        case 0x10u:
          if (v8 != 130) {
            goto LABEL_186;
          }
          unint64_t v66 = v7 - 2;
          while (1)
          {
            uint64_t v67 = (unsigned __int8 *)(v66 + 2);
            uint64_t v124 = v66 + 2;
            unint64_t v68 = *(_DWORD **)(a1 + 136);
            if (v68 && (uint64_t v69 = *(int *)(a1 + 128), (int)v69 < *v68))
            {
              *(_DWORD *)(a1 + 128) = v69 + 1;
              uint64_t v70 = *(void *)&v68[2 * v69 + 2];
            }
            else
            {
              uint64_t v71 = sub_14785D4(*(void *)(a1 + 120));
              uint64_t v70 = sub_188CDC8(a1 + 120, v71);
              uint64_t v67 = (unsigned __int8 *)v124;
            }
            unint64_t v66 = sub_123AF74(a3, v70, v67);
            uint64_t v124 = v66;
            if (!v66) {
              goto LABEL_208;
            }
            if (*(void *)a3 <= (unint64_t)v66 || *(_WORD *)v66 != 386) {
              goto LABEL_84;
            }
          }
        case 0x11u:
          if (v8 != 138) {
            goto LABEL_186;
          }
          *(_DWORD *)(a1 + 16) |= 0x80u;
          uint64_t v72 = *(void *)(a1 + 320);
          if (!v72)
          {
            uint64_t v73 = (void *)(*v119 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v119) {
              uint64_t v73 = (void *)*v73;
            }
            uint64_t v72 = sub_15C1918((uint64_t)v73);
            *(void *)(a1 + 320) = v72;
            uint64_t v7 = v124;
          }
          uint64_t v46 = sub_1198F14(a3, v72, (unsigned __int8 *)v7);
          goto LABEL_83;
        case 0x12u:
          if (v8 != 144) {
            goto LABEL_186;
          }
          v122 |= 0x2000u;
          uint64_t v74 = v7 + 1;
          int v75 = *v7;
          if ((*v7 & 0x80000000) == 0) {
            goto LABEL_138;
          }
          int v76 = *v74;
          int v75 = v75 + (v76 << 7) - 128;
          if (v76 < 0)
          {
            uint64_t v115 = (char *)sub_188C0D0((uint64_t)v7, v75);
            uint64_t v124 = v115;
            *(_DWORD *)(a1 + 344) = v116;
            if (!v115) {
              goto LABEL_208;
            }
          }
          else
          {
            uint64_t v74 = v7 + 2;
LABEL_138:
            uint64_t v124 = v74;
            *(_DWORD *)(a1 + 344) = v75;
          }
          goto LABEL_84;
        case 0x13u:
          if (v8 != 154) {
            goto LABEL_186;
          }
          int v77 = v7 - 2;
          while (1)
          {
            BOOL v78 = (unsigned __int8 *)(v77 + 2);
            uint64_t v124 = v77 + 2;
            uint64_t v79 = *(_DWORD **)(a1 + 160);
            if (v79 && (uint64_t v80 = *(int *)(a1 + 152), (int)v80 < *v79))
            {
              *(_DWORD *)(a1 + 152) = v80 + 1;
              uint64_t v81 = *(void *)&v79[2 * v80 + 2];
            }
            else
            {
              uint64_t v82 = sub_1478704(*(void *)(a1 + 144));
              uint64_t v81 = sub_188CDC8(a1 + 144, v82);
              BOOL v78 = (unsigned __int8 *)v124;
            }
            int v77 = (char *)sub_1457618(a3, v81, v78);
            uint64_t v124 = v77;
            if (!v77) {
              goto LABEL_208;
            }
            if (*(void *)a3 <= (unint64_t)v77 || *(_WORD *)v77 != 410) {
              goto LABEL_84;
            }
          }
        case 0x14u:
          if (v8 != 162) {
            goto LABEL_186;
          }
          uint64_t v83 = v7 - 2;
          while (1)
          {
            uint64_t v84 = (unsigned __int8 *)(v83 + 2);
            uint64_t v124 = v83 + 2;
            int v85 = *(_DWORD **)(a1 + 184);
            if (v85 && (uint64_t v86 = *(int *)(a1 + 176), (int)v86 < *v85))
            {
              *(_DWORD *)(a1 + 176) = v86 + 1;
              uint64_t v87 = *(void *)&v85[2 * v86 + 2];
            }
            else
            {
              uint64_t v88 = sub_14787AC(*(void *)(a1 + 168));
              uint64_t v87 = sub_188CDC8(a1 + 168, v88);
              uint64_t v84 = (unsigned __int8 *)v124;
            }
            uint64_t v83 = (char *)sub_14576A8(a3, v87, v84);
            uint64_t v124 = v83;
            if (!v83) {
              goto LABEL_208;
            }
            if (*(void *)a3 <= (unint64_t)v83 || *(_WORD *)v83 != 418) {
              goto LABEL_84;
            }
          }
        case 0x15u:
          if (v8 != 168) {
            goto LABEL_186;
          }
          v122 |= 0x1000u;
          uint64_t v89 = v7 + 1;
          uint64_t v90 = *v7;
          if ((*v7 & 0x80000000) == 0) {
            goto LABEL_163;
          }
          int v91 = *v89;
          uint64_t v90 = v90 + (v91 << 7) - 128;
          if (v91 < 0)
          {
            uint64_t v117 = (char *)sub_188C138((uint64_t)v7, v90);
            uint64_t v124 = v117;
            *(unsigned char *)(a1 + 342) = v118 != 0;
            if (!v117) {
              goto LABEL_208;
            }
          }
          else
          {
            uint64_t v89 = v7 + 2;
LABEL_163:
            uint64_t v124 = v89;
            *(unsigned char *)(a1 + 342) = v90 != 0;
          }
          break;
        default:
          goto LABEL_186;
      }
      goto LABEL_84;
    }
    if (v11 == 100)
    {
      if (v8 == 34)
      {
        uint64_t v92 = v7 - 2;
        while (1)
        {
          uint64_t v93 = (unsigned __int8 *)(v92 + 2);
          uint64_t v124 = v92 + 2;
          uint64_t v94 = *(_DWORD **)(a1 + 208);
          if (v94 && (uint64_t v95 = *(int *)(a1 + 200), (int)v95 < *v94))
          {
            *(_DWORD *)(a1 + 200) = v95 + 1;
            uint64_t v96 = *(void *)&v94[2 * v95 + 2];
          }
          else
          {
            uint64_t v97 = sub_1478854(*v120);
            uint64_t v96 = sub_188CDC8((uint64_t)v120, (uint64_t)v97);
            uint64_t v93 = (unsigned __int8 *)v124;
          }
          uint64_t v92 = (char *)sub_1457738(a3, v96, v93);
          uint64_t v124 = v92;
          if (!v92) {
            goto LABEL_208;
          }
          if (*(void *)a3 <= (unint64_t)v92 || *(_WORD *)v92 != 1698) {
            goto LABEL_84;
          }
        }
      }
    }
    else if (v11 == 101)
    {
      if (v8 == 42)
      {
        uint64_t v98 = v7 - 2;
        while (1)
        {
          uint64_t v99 = (char *)(v98 + 2);
          uint64_t v124 = (char *)(v98 + 2);
          uint64_t v100 = *(_DWORD **)(a1 + 232);
          if (v100 && (uint64_t v101 = *(int *)(a1 + 224), (int)v101 < *v100))
          {
            *(_DWORD *)(a1 + 224) = v101 + 1;
            uint64_t v102 = *(std::string **)&v100[2 * v101 + 2];
          }
          else
          {
            if (!*v123) {
              operator new();
            }
            void *v104 = v103;
            v104[1] = sub_3A6EDC;
            void *v103 = 0;
            v103[1] = 0;
            v103[2] = 0;
            uint64_t v102 = (std::string *)sub_188CDC8((uint64_t)v123, (uint64_t)v103);
            uint64_t v99 = v124;
          }
          uint64_t v98 = sub_188C244(v102, v99, (uint64_t)a3);
          uint64_t v124 = (char *)v98;
          if (!v98) {
            goto LABEL_208;
          }
          if (*(void *)a3 <= (unint64_t)v98 || *(_WORD *)v98 != 1706) {
            goto LABEL_84;
          }
        }
      }
    }
    else if (v11 == 102 && v8 == 50)
    {
      int v15 = v7 - 2;
      while (1)
      {
        uint64_t v16 = (unsigned __int8 *)(v15 + 2);
        uint64_t v124 = v15 + 2;
        uint64_t v17 = *(_DWORD **)(a1 + 256);
        if (v17 && (uint64_t v18 = *(int *)(a1 + 248), (int)v18 < *v17))
        {
          *(_DWORD *)(a1 + 248) = v18 + 1;
          uint64_t v19 = *(void *)&v17[2 * v18 + 2];
        }
        else
        {
          uint64_t v20 = sub_14788DC(*v121);
          uint64_t v19 = sub_188CDC8((uint64_t)v121, v20);
          uint64_t v16 = (unsigned __int8 *)v124;
        }
        int v15 = sub_14577C8(a3, v19, v16);
        uint64_t v124 = v15;
        if (!v15) {
          goto LABEL_208;
        }
        if (*(void *)a3 <= (unint64_t)v15 || *(_WORD *)v15 != 1714) {
          goto LABEL_84;
        }
      }
    }
LABEL_186:
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v119)
    {
      uint64_t v106 = (std::string *)((*v119 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v106 = (std::string *)sub_188DBD8(v119);
      uint64_t v7 = v124;
    }
    uint64_t v46 = (char *)sub_1885AC0(v8, v106, v7, a3);
LABEL_83:
    uint64_t v124 = v46;
    if (!v46) {
      goto LABEL_208;
    }
LABEL_84:
    if (sub_11947B8((uint64_t)a3, &v124, a3[11].i32[1])) {
      goto LABEL_3;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    goto LABEL_3;
  }
LABEL_208:
  uint64_t v124 = 0;
LABEL_3:
  *(_DWORD *)(a1 + 16) |= v122;
  return v124;
}

uint64_t sub_1457588(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_15BA558(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_1457618(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_145470C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_14576A8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_14551A8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_1457738(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1455B20(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_14577C8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1456038(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1457858(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 0x100) != 0)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(void *)(a1 + 328);
    char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x200) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 336);
    char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    uint64_t v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 264) & 0xFFFFFFFFFFFFFFFELL), v4);
    if ((v6 & 2) == 0)
    {
LABEL_17:
      if ((v6 & 4) == 0) {
        goto LABEL_18;
      }
      goto LABEL_26;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_17;
  }
  uint64_t v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 272) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) == 0)
  {
LABEL_18:
    if ((v6 & 8) == 0) {
      goto LABEL_19;
    }
    goto LABEL_27;
  }
LABEL_26:
  uint64_t v4 = sub_117A0AC(a3, 5, (const void **)(*(void *)(a1 + 280) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 8) == 0)
  {
LABEL_19:
    if ((v6 & 0x10) == 0) {
      goto LABEL_20;
    }
    goto LABEL_28;
  }
LABEL_27:
  uint64_t v4 = sub_117A0AC(a3, 6, (const void **)(*(void *)(a1 + 288) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x10) == 0)
  {
LABEL_20:
    if ((v6 & 0x20) == 0) {
      goto LABEL_21;
    }
    goto LABEL_29;
  }
LABEL_28:
  uint64_t v4 = sub_117A0AC(a3, 7, (const void **)(*(void *)(a1 + 296) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x20) == 0)
  {
LABEL_21:
    if ((v6 & 0x400) == 0) {
      goto LABEL_22;
    }
    goto LABEL_30;
  }
LABEL_29:
  uint64_t v4 = sub_117A0AC(a3, 8, (const void **)(*(void *)(a1 + 304) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x400) == 0)
  {
LABEL_22:
    if ((v6 & 0x800) == 0) {
      goto LABEL_36;
    }
    goto LABEL_33;
  }
LABEL_30:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v13 = *(unsigned char *)(a1 + 340);
  char *v4 = 72;
  v4[1] = v13;
  v4 += 2;
  if ((v6 & 0x800) != 0)
  {
LABEL_33:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v14 = *(unsigned char *)(a1 + 341);
    char *v4 = 80;
    v4[1] = v14;
    v4 += 2;
  }
LABEL_36:
  int v15 = *(_DWORD *)(a1 + 32);
  if (v15)
  {
    for (int i = 0; i != v15; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v17 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      char *v4 = 90;
      unsigned int v18 = *(_DWORD *)(v17 + 20);
      v4[1] = v18;
      if (v18 > 0x7F) {
        uint64_t v19 = sub_188A9CC(v18, v4 + 1);
      }
      else {
        uint64_t v19 = v4 + 2;
      }
      uint64_t v4 = sub_1451A58(v17, (unint64_t)v19, a3);
    }
  }
  if ((v6 & 0x40) != 0) {
    uint64_t v4 = sub_117A0AC(a3, 12, (const void **)(*(void *)(a1 + 312) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v20 = *(unsigned int *)(a1 + 56);
  if ((int)v20 >= 1)
  {
    uint64_t v21 = 0;
    uint64_t v22 = 8 * v20;
    do
    {
      int v23 = *(void **)(*(void *)(a1 + 64) + v21 + 8);
      if (*((char *)v23 + 23) < 0)
      {
        int64_t v24 = v23[1];
        if (v24 > 127) {
          goto LABEL_57;
        }
      }
      else
      {
        int64_t v24 = *((unsigned __int8 *)v23 + 23);
      }
      if ((uint64_t)(*a3 - (void)v4 + 14) >= v24)
      {
        char *v4 = 106;
        v4[1] = v24;
        if (*((char *)v23 + 23) < 0) {
          int v23 = (void *)*v23;
        }
        uint64_t v25 = v4 + 2;
        memcpy(v25, v23, v24);
        uint64_t v4 = &v25[v24];
        goto LABEL_55;
      }
LABEL_57:
      uint64_t v4 = (char *)sub_188A868(a3, 13, (uint64_t)v23, v4);
LABEL_55:
      v21 += 8;
    }
    while (v22 != v21);
  }
  int v26 = *(_DWORD *)(a1 + 80);
  if (v26)
  {
    for (int j = 0; j != v26; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v28 = *(void *)(*(void *)(a1 + 88) + 8 * j + 8);
      char *v4 = 114;
      unsigned int v29 = *(_DWORD *)(v28 + 20);
      v4[1] = v29;
      if (v29 > 0x7F) {
        uint64_t v30 = sub_188A9CC(v29, v4 + 1);
      }
      else {
        uint64_t v30 = v4 + 2;
      }
      uint64_t v4 = sub_1452918(v28, (unint64_t)v30, a3);
    }
  }
  int v31 = *(_DWORD *)(a1 + 104);
  if (v31)
  {
    for (int k = 0; k != v31; ++k)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v33 = *(void *)(*(void *)(a1 + 112) + 8 * k + 8);
      char *v4 = 122;
      unsigned int v34 = *(_DWORD *)(v33 + 20);
      v4[1] = v34;
      if (v34 > 0x7F) {
        unint64_t v35 = sub_188A9CC(v34, v4 + 1);
      }
      else {
        unint64_t v35 = v4 + 2;
      }
      uint64_t v4 = sub_15BA700(v33, v35, a3);
    }
  }
  int v36 = *(_DWORD *)(a1 + 128);
  if (v36)
  {
    for (int m = 0; m != v36; ++m)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v38 = *(void *)(*(void *)(a1 + 136) + 8 * m + 8);
      *(_WORD *)uint64_t v4 = 386;
      unsigned int v39 = *(_DWORD *)(v38 + 56);
      v4[2] = v39;
      if (v39 > 0x7F) {
        uint64_t v40 = sub_188A9CC(v39, v4 + 2);
      }
      else {
        uint64_t v40 = v4 + 3;
      }
      uint64_t v4 = sub_14536EC(v38, v40, a3);
    }
  }
  if ((v6 & 0x80) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v41 = *(void *)(a1 + 320);
    *(_WORD *)uint64_t v4 = 394;
    unsigned int v42 = *(_DWORD *)(v41 + 44);
    v4[2] = v42;
    if (v42 > 0x7F) {
      uint64_t v43 = sub_188A9CC(v42, v4 + 2);
    }
    else {
      uint64_t v43 = v4 + 3;
    }
    uint64_t v4 = sub_15B0C0C(v41, v43, a3);
  }
  if ((v6 & 0x2000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v44 = *(_DWORD *)(a1 + 344);
    *(_WORD *)uint64_t v4 = 400;
    v4[2] = v44;
    if (v44 > 0x7F)
    {
      v4[2] = v44 | 0x80;
      unsigned int v45 = v44 >> 7;
      v4[3] = v44 >> 7;
      v4 += 4;
      if (v44 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v46 = v45 >> 14;
          v45 >>= 7;
          *v4++ = v45;
        }
        while (v46);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  int v47 = *(_DWORD *)(a1 + 152);
  if (v47)
  {
    for (int n = 0; n != v47; ++n)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v49 = *(void *)(*(void *)(a1 + 160) + 8 * n + 8);
      *(_WORD *)uint64_t v4 = 410;
      unsigned int v50 = *(_DWORD *)(v49 + 20);
      v4[2] = v50;
      if (v50 > 0x7F) {
        uint64_t v51 = sub_188A9CC(v50, v4 + 2);
      }
      else {
        uint64_t v51 = v4 + 3;
      }
      uint64_t v4 = sub_1454A98(v49, v51, a3);
    }
  }
  int v52 = *(_DWORD *)(a1 + 176);
  if (v52)
  {
    for (iint i = 0; ii != v52; ++ii)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v54 = *(void *)(*(void *)(a1 + 184) + 8 * ii + 8);
      *(_WORD *)uint64_t v4 = 418;
      unsigned int v55 = *(_DWORD *)(v54 + 20);
      v4[2] = v55;
      if (v55 > 0x7F) {
        uint64_t v56 = sub_188A9CC(v55, v4 + 2);
      }
      else {
        uint64_t v56 = v4 + 3;
      }
      uint64_t v4 = sub_1455470(v54, v56, a3);
    }
  }
  if ((v6 & 0x1000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v57 = *(unsigned char *)(a1 + 342);
    *(_WORD *)uint64_t v4 = 424;
    v4[2] = v57;
    v4 += 3;
  }
  int v58 = *(_DWORD *)(a1 + 200);
  if (v58)
  {
    for (jint j = 0; jj != v58; ++jj)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v60 = *(void *)(*(void *)(a1 + 208) + 8 * jj + 8);
      *(_WORD *)uint64_t v4 = 1698;
      unsigned int v61 = *(_DWORD *)(v60 + 20);
      v4[2] = v61;
      if (v61 > 0x7F) {
        uint64_t v62 = sub_188A9CC(v61, v4 + 2);
      }
      else {
        uint64_t v62 = v4 + 3;
      }
      uint64_t v4 = sub_1455D10(v60, v62, a3);
    }
  }
  uint64_t v63 = *(unsigned int *)(a1 + 224);
  if ((int)v63 >= 1)
  {
    uint64_t v64 = 0;
    uint64_t v65 = 8 * v63;
    do
    {
      unint64_t v66 = *(void **)(*(void *)(a1 + 232) + v64 + 8);
      if (*((char *)v66 + 23) < 0)
      {
        int64_t v67 = v66[1];
        if (v67 > 127) {
          goto LABEL_135;
        }
      }
      else
      {
        int64_t v67 = *((unsigned __int8 *)v66 + 23);
      }
      if ((uint64_t)(*a3 - (void)v4 + 13) >= v67)
      {
        *(_WORD *)uint64_t v4 = 1706;
        v4[2] = v67;
        if (*((char *)v66 + 23) < 0) {
          unint64_t v66 = (void *)*v66;
        }
        unint64_t v68 = v4 + 3;
        memcpy(v68, v66, v67);
        uint64_t v4 = &v68[v67];
        goto LABEL_133;
      }
LABEL_135:
      uint64_t v4 = (char *)sub_188A868(a3, 101, (uint64_t)v66, v4);
LABEL_133:
      v64 += 8;
    }
    while (v65 != v64);
  }
  int v69 = *(_DWORD *)(a1 + 248);
  if (v69)
  {
    for (kint k = 0; kk != v69; ++kk)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v71 = *(void *)(*(void *)(a1 + 256) + 8 * kk + 8);
      *(_WORD *)uint64_t v4 = 1714;
      unsigned int v72 = *(_DWORD *)(v71 + 20);
      v4[2] = v72;
      if (v72 > 0x7F) {
        uint64_t v73 = sub_188A9CC(v72, v4 + 2);
      }
      else {
        uint64_t v73 = v4 + 3;
      }
      uint64_t v4 = sub_14561C8(v71, (unint64_t)v73, a3);
    }
  }
  uint64_t v74 = *(void *)(a1 + 8);
  if ((v74 & 1) == 0) {
    return v4;
  }
  unint64_t v76 = v74 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v76 + 31) < 0)
  {
    int v77 = *(void **)(v76 + 8);
    uint64_t v78 = *(void *)(v76 + 16);
  }
  else
  {
    int v77 = (void *)(v76 + 8);
    LODWORD(v78) = *(unsigned __int8 *)(v76 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v78)
  {
    uint64_t v79 = (int)v78;
    memcpy(v4, v77, (int)v78);
    v4 += v79;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v77, v78, v4);
}

uint64_t sub_145820C(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_1451D74(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(unsigned int *)(a1 + 56);
  uint64_t v9 = v2 + v8;
  if ((int)v8 >= 1)
  {
    unint64_t v10 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v11 = *v10++;
      uint64_t v12 = *(unsigned __int8 *)(v11 + 23);
      uint64_t v13 = *(void *)(v11 + 8);
      if ((v12 & 0x80u) == 0) {
        uint64_t v13 = v12;
      }
      v9 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6);
      --v8;
    }
    while (v8);
  }
  uint64_t v14 = *(int *)(a1 + 80);
  uint64_t v15 = v9 + v14;
  uint64_t v16 = *(void *)(a1 + 88);
  if (v16) {
    uint64_t v17 = (uint64_t *)(v16 + 8);
  }
  else {
    uint64_t v17 = 0;
  }
  if (v14)
  {
    uint64_t v18 = 8 * v14;
    do
    {
      uint64_t v19 = *v17++;
      uint64_t v20 = sub_1452AFC(v19);
      v15 += v20 + ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6);
      v18 -= 8;
    }
    while (v18);
  }
  uint64_t v21 = *(int *)(a1 + 104);
  uint64_t v22 = v15 + v21;
  uint64_t v23 = *(void *)(a1 + 112);
  if (v23) {
    int64_t v24 = (uint64_t *)(v23 + 8);
  }
  else {
    int64_t v24 = 0;
  }
  if (v21)
  {
    uint64_t v25 = 8 * v21;
    do
    {
      uint64_t v26 = *v24++;
      uint64_t v27 = sub_15BA7EC(v26);
      v22 += v27 + ((9 * (__clz(v27 | 1) ^ 0x1F) + 73) >> 6);
      v25 -= 8;
    }
    while (v25);
  }
  uint64_t v28 = *(int *)(a1 + 128);
  uint64_t v29 = v22 + 2 * v28;
  uint64_t v30 = *(void *)(a1 + 136);
  if (v30) {
    int v31 = (uint64_t *)(v30 + 8);
  }
  else {
    int v31 = 0;
  }
  if (v28)
  {
    uint64_t v32 = 8 * v28;
    do
    {
      uint64_t v33 = *v31++;
      uint64_t v34 = sub_14538CC(v33);
      v29 += v34 + ((9 * (__clz(v34 | 1) ^ 0x1F) + 73) >> 6);
      v32 -= 8;
    }
    while (v32);
  }
  uint64_t v35 = *(int *)(a1 + 152);
  uint64_t v36 = v29 + 2 * v35;
  uint64_t v37 = *(void *)(a1 + 160);
  if (v37) {
    uint64_t v38 = (uint64_t *)(v37 + 8);
  }
  else {
    uint64_t v38 = 0;
  }
  if (v35)
  {
    uint64_t v39 = 8 * v35;
    do
    {
      uint64_t v40 = *v38++;
      uint64_t v41 = sub_1454D84(v40);
      v36 += v41 + ((9 * (__clz(v41 | 1) ^ 0x1F) + 73) >> 6);
      v39 -= 8;
    }
    while (v39);
  }
  uint64_t v42 = *(int *)(a1 + 176);
  uint64_t v43 = v36 + 2 * v42;
  uint64_t v44 = *(void *)(a1 + 184);
  if (v44) {
    unsigned int v45 = (uint64_t *)(v44 + 8);
  }
  else {
    unsigned int v45 = 0;
  }
  if (v42)
  {
    uint64_t v46 = 8 * v42;
    do
    {
      uint64_t v47 = *v45++;
      uint64_t v48 = sub_14556F8(v47);
      v43 += v48 + ((9 * (__clz(v48 | 1) ^ 0x1F) + 73) >> 6);
      v46 -= 8;
    }
    while (v46);
  }
  uint64_t v49 = *(int *)(a1 + 200);
  uint64_t v50 = v43 + 2 * v49;
  uint64_t v51 = *(void *)(a1 + 208);
  if (v51) {
    int v52 = (uint64_t *)(v51 + 8);
  }
  else {
    int v52 = 0;
  }
  if (v49)
  {
    uint64_t v53 = 8 * v49;
    do
    {
      uint64_t v54 = *v52++;
      uint64_t v55 = sub_1455E28(v54);
      v50 += v55 + ((9 * (__clz(v55 | 1) ^ 0x1F) + 73) >> 6);
      v53 -= 8;
    }
    while (v53);
  }
  uint64_t v56 = *(unsigned int *)(a1 + 224);
  uint64_t v57 = v50 + 2 * v56;
  if ((int)v56 >= 1)
  {
    int v58 = (uint64_t *)(*(void *)(a1 + 232) + 8);
    do
    {
      uint64_t v59 = *v58++;
      uint64_t v60 = *(unsigned __int8 *)(v59 + 23);
      uint64_t v61 = *(void *)(v59 + 8);
      if ((v60 & 0x80u) == 0) {
        uint64_t v61 = v60;
      }
      v57 += v61 + ((9 * (__clz(v61 | 1) ^ 0x1F) + 73) >> 6);
      --v56;
    }
    while (v56);
  }
  uint64_t v62 = *(int *)(a1 + 248);
  uint64_t v63 = v57 + 2 * v62;
  uint64_t v64 = *(void *)(a1 + 256);
  if (v64) {
    uint64_t v65 = v64 + 8;
  }
  else {
    uint64_t v65 = 0;
  }
  if (v62)
  {
    uint64_t v66 = 8 * v62;
    do
    {
      uint64_t v67 = 2 * (*(_DWORD *)(*(void *)v65 + 16) & 1);
      uint64_t v68 = *(void *)(*(void *)v65 + 8);
      if (v68)
      {
        unint64_t v69 = v68 & 0xFFFFFFFFFFFFFFFCLL;
        if (*(char *)(v69 + 31) < 0) {
          uint64_t v70 = *(void *)(v69 + 16);
        }
        else {
          uint64_t v70 = *(unsigned __int8 *)(v69 + 31);
        }
        v67 += v70;
      }
      *(_DWORD *)(*(void *)v65 + 20) = v67;
      v63 += v67 + ((9 * (__clz(v67 | 1) ^ 0x1F) + 73) >> 6);
      v65 += 8;
      v66 -= 8;
    }
    while (v66);
  }
  int v71 = *(_DWORD *)(a1 + 16);
  if (!(_BYTE)v71) {
    goto LABEL_77;
  }
  if (v71)
  {
    unint64_t v79 = *(void *)(a1 + 264) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v80 = *(unsigned __int8 *)(v79 + 23);
    uint64_t v81 = *(void *)(v79 + 8);
    if ((v80 & 0x80u) == 0) {
      uint64_t v81 = v80;
    }
    v63 += v81 + ((9 * (__clz(v81 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v71 & 2) == 0)
    {
LABEL_70:
      if ((v71 & 4) == 0) {
        goto LABEL_71;
      }
      goto LABEL_102;
    }
  }
  else if ((v71 & 2) == 0)
  {
    goto LABEL_70;
  }
  unint64_t v82 = *(void *)(a1 + 272) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v83 = *(unsigned __int8 *)(v82 + 23);
  uint64_t v84 = *(void *)(v82 + 8);
  if ((v83 & 0x80u) == 0) {
    uint64_t v84 = v83;
  }
  v63 += v84 + ((9 * (__clz(v84 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v71 & 4) == 0)
  {
LABEL_71:
    if ((v71 & 8) == 0) {
      goto LABEL_72;
    }
    goto LABEL_105;
  }
LABEL_102:
  unint64_t v85 = *(void *)(a1 + 280) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v86 = *(unsigned __int8 *)(v85 + 23);
  uint64_t v87 = *(void *)(v85 + 8);
  if ((v86 & 0x80u) == 0) {
    uint64_t v87 = v86;
  }
  v63 += v87 + ((9 * (__clz(v87 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v71 & 8) == 0)
  {
LABEL_72:
    if ((v71 & 0x10) == 0) {
      goto LABEL_73;
    }
    goto LABEL_108;
  }
LABEL_105:
  unint64_t v88 = *(void *)(a1 + 288) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v89 = *(unsigned __int8 *)(v88 + 23);
  uint64_t v90 = *(void *)(v88 + 8);
  if ((v89 & 0x80u) == 0) {
    uint64_t v90 = v89;
  }
  v63 += v90 + ((9 * (__clz(v90 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v71 & 0x10) == 0)
  {
LABEL_73:
    if ((v71 & 0x20) == 0) {
      goto LABEL_74;
    }
LABEL_111:
    unint64_t v94 = *(void *)(a1 + 304) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v95 = *(unsigned __int8 *)(v94 + 23);
    uint64_t v96 = *(void *)(v94 + 8);
    if ((v95 & 0x80u) == 0) {
      uint64_t v96 = v95;
    }
    v63 += v96 + ((9 * (__clz(v96 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v71 & 0x40) == 0)
    {
LABEL_75:
      if ((v71 & 0x80) == 0) {
        goto LABEL_77;
      }
      goto LABEL_76;
    }
    goto LABEL_114;
  }
LABEL_108:
  unint64_t v91 = *(void *)(a1 + 296) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v92 = *(unsigned __int8 *)(v91 + 23);
  uint64_t v93 = *(void *)(v91 + 8);
  if ((v92 & 0x80u) == 0) {
    uint64_t v93 = v92;
  }
  v63 += v93 + ((9 * (__clz(v93 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v71 & 0x20) != 0) {
    goto LABEL_111;
  }
LABEL_74:
  if ((v71 & 0x40) == 0) {
    goto LABEL_75;
  }
LABEL_114:
  unint64_t v97 = *(void *)(a1 + 312) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v98 = *(unsigned __int8 *)(v97 + 23);
  uint64_t v99 = *(void *)(v97 + 8);
  if ((v98 & 0x80u) == 0) {
    uint64_t v99 = v98;
  }
  v63 += v99 + ((9 * (__clz(v99 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v71 & 0x80) != 0)
  {
LABEL_76:
    uint64_t v72 = sub_15B0D90(*(void *)(a1 + 320));
    v63 += v72 + ((9 * (__clz(v72 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
LABEL_77:
  if ((v71 & 0x3F00) != 0)
  {
    if ((v71 & 0x100) != 0) {
      v63 += ((9 * (__clz(*(void *)(a1 + 328) | 1) ^ 0x3F) + 73) >> 6) + 1;
    }
    if ((v71 & 0x200) != 0)
    {
      int v73 = *(_DWORD *)(a1 + 336);
      uint64_t v74 = ((9 * (__clz(v73 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if (v73 >= 0) {
        uint64_t v75 = v74;
      }
      else {
        uint64_t v75 = 11;
      }
      v63 += v75;
    }
    uint64_t v76 = v63 + 2;
    if ((v71 & 0x400) == 0) {
      uint64_t v76 = v63;
    }
    if ((v71 & 0x800) != 0) {
      v76 += 2;
    }
    if ((v71 & 0x1000) != 0) {
      uint64_t v63 = v76 + 3;
    }
    else {
      uint64_t v63 = v76;
    }
    if ((v71 & 0x2000) != 0) {
      v63 += ((9 * (__clz(*(_DWORD *)(a1 + 344) | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
  }
  uint64_t v77 = *(void *)(a1 + 8);
  if (v77)
  {
    unint64_t v100 = v77 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v100 + 31) < 0) {
      uint64_t v101 = *(void *)(v100 + 16);
    }
    else {
      uint64_t v101 = *(unsigned __int8 *)(v100 + 31);
    }
    v63 += v101;
  }
  *(_DWORD *)(a1 + 20) = v63;
  return v63;
}

void sub_14588B8(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_1491F40((std::string *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    uint64_t v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    unint64_t v10 = (const std::string **)(*(void *)(a2 + 64) + 8);
    uint64_t v11 = (std::string **)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_188FB98(a1 + 48, v11, v10, v9, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v12 = *(_DWORD *)(a1 + 56) + v9;
    *(_DWORD *)(a1 + 56) = v12;
    uint64_t v13 = *(int **)(a1 + 64);
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 80);
  if (v14)
  {
    uint64_t v15 = (uint64_t *)(*(void *)(a2 + 88) + 8);
    uint64_t v16 = (std::string **)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_1493D68((uint64_t *)(a1 + 72), v16, v15, v14, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v17 = *(_DWORD *)(a1 + 80) + v14;
    *(_DWORD *)(a1 + 80) = v17;
    uint64_t v18 = *(int **)(a1 + 88);
    if (*v18 < v17) {
      int *v18 = v17;
    }
  }
  int v19 = *(_DWORD *)(a2 + 104);
  if (v19)
  {
    uint64_t v20 = (uint64_t *)(*(void *)(a2 + 112) + 8);
    uint64_t v21 = (std::string **)sub_188CCE4(a1 + 96, *(_DWORD *)(a2 + 104));
    sub_1493DF4((std::string *)(a1 + 96), v21, v20, v19, **(_DWORD **)(a1 + 112) - *(_DWORD *)(a1 + 104));
    int v22 = *(_DWORD *)(a1 + 104) + v19;
    *(_DWORD *)(a1 + 104) = v22;
    uint64_t v23 = *(int **)(a1 + 112);
    if (*v23 < v22) {
      int *v23 = v22;
    }
  }
  int v24 = *(_DWORD *)(a2 + 128);
  if (v24)
  {
    uint64_t v25 = (uint64_t *)(*(void *)(a2 + 136) + 8);
    uint64_t v26 = (std::string **)sub_188CCE4(a1 + 120, *(_DWORD *)(a2 + 128));
    sub_124E8CC((uint64_t *)(a1 + 120), v26, v25, v24, **(_DWORD **)(a1 + 136) - *(_DWORD *)(a1 + 128));
    int v27 = *(_DWORD *)(a1 + 128) + v24;
    *(_DWORD *)(a1 + 128) = v27;
    uint64_t v28 = *(int **)(a1 + 136);
    if (*v28 < v27) {
      *uint64_t v28 = v27;
    }
  }
  int v29 = *(_DWORD *)(a2 + 152);
  if (v29)
  {
    uint64_t v30 = (uint64_t *)(*(void *)(a2 + 160) + 8);
    int v31 = (std::string **)sub_188CCE4(a1 + 144, *(_DWORD *)(a2 + 152));
    sub_1493E70((uint64_t *)(a1 + 144), v31, v30, v29, **(_DWORD **)(a1 + 160) - *(_DWORD *)(a1 + 152));
    int v32 = *(_DWORD *)(a1 + 152) + v29;
    *(_DWORD *)(a1 + 152) = v32;
    uint64_t v33 = *(int **)(a1 + 160);
    if (*v33 < v32) {
      *uint64_t v33 = v32;
    }
  }
  int v34 = *(_DWORD *)(a2 + 176);
  if (v34)
  {
    uint64_t v35 = (uint64_t *)(*(void *)(a2 + 184) + 8);
    uint64_t v36 = (std::string **)sub_188CCE4(a1 + 168, *(_DWORD *)(a2 + 176));
    sub_1493EFC((uint64_t *)(a1 + 168), v36, v35, v34, **(_DWORD **)(a1 + 184) - *(_DWORD *)(a1 + 176));
    int v37 = *(_DWORD *)(a1 + 176) + v34;
    *(_DWORD *)(a1 + 176) = v37;
    uint64_t v38 = *(int **)(a1 + 184);
    if (*v38 < v37) {
      int *v38 = v37;
    }
  }
  int v39 = *(_DWORD *)(a2 + 200);
  if (v39)
  {
    uint64_t v40 = (uint64_t *)(*(void *)(a2 + 208) + 8);
    uint64_t v41 = (std::string **)sub_188CCE4(a1 + 192, *(_DWORD *)(a2 + 200));
    sub_1493F88((std::string *)(a1 + 192), v41, v40, v39, **(_DWORD **)(a1 + 208) - *(_DWORD *)(a1 + 200));
    int v42 = *(_DWORD *)(a1 + 200) + v39;
    *(_DWORD *)(a1 + 200) = v42;
    uint64_t v43 = *(int **)(a1 + 208);
    if (*v43 < v42) {
      int *v43 = v42;
    }
  }
  int v44 = *(_DWORD *)(a2 + 224);
  if (v44)
  {
    unsigned int v45 = (const std::string **)(*(void *)(a2 + 232) + 8);
    uint64_t v46 = (std::string **)sub_188CCE4(a1 + 216, *(_DWORD *)(a2 + 224));
    sub_188FB98(a1 + 216, v46, v45, v44, **(_DWORD **)(a1 + 232) - *(_DWORD *)(a1 + 224));
    int v47 = *(_DWORD *)(a1 + 224) + v44;
    *(_DWORD *)(a1 + 224) = v47;
    uint64_t v48 = *(int **)(a1 + 232);
    if (*v48 < v47) {
      int *v48 = v47;
    }
  }
  int v49 = *(_DWORD *)(a2 + 248);
  if (v49)
  {
    uint64_t v50 = (uint64_t *)(*(void *)(a2 + 256) + 8);
    uint64_t v51 = (std::string **)sub_188CCE4(a1 + 240, *(_DWORD *)(a2 + 248));
    sub_1494004((uint64_t *)(a1 + 240), v51, v50, v49, **(_DWORD **)(a1 + 256) - *(_DWORD *)(a1 + 248));
    int v52 = *(_DWORD *)(a1 + 248) + v49;
    *(_DWORD *)(a1 + 248) = v52;
    uint64_t v53 = *(int **)(a1 + 256);
    if (*v53 < v52) {
      int *v53 = v52;
    }
  }
  int v54 = *(_DWORD *)(a2 + 16);
  if (!(_BYTE)v54) {
    goto LABEL_70;
  }
  if (v54)
  {
    uint64_t v55 = (long long *)(*(void *)(a2 + 264) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v56 = *(void *)(a1 + 8);
    uint64_t v57 = (uint64_t *)(v56 & 0xFFFFFFFFFFFFFFFCLL);
    if (v56) {
      uint64_t v57 = (uint64_t *)*v57;
    }
    sub_1881DF4((std::string **)(a1 + 264), v55, v57);
    if ((v54 & 2) == 0)
    {
LABEL_34:
      if ((v54 & 4) == 0) {
        goto LABEL_35;
      }
      goto LABEL_47;
    }
  }
  else if ((v54 & 2) == 0)
  {
    goto LABEL_34;
  }
  int v58 = (long long *)(*(void *)(a2 + 272) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 16) |= 2u;
  uint64_t v59 = *(void *)(a1 + 8);
  uint64_t v60 = (uint64_t *)(v59 & 0xFFFFFFFFFFFFFFFCLL);
  if (v59) {
    uint64_t v60 = (uint64_t *)*v60;
  }
  sub_1881DF4((std::string **)(a1 + 272), v58, v60);
  if ((v54 & 4) == 0)
  {
LABEL_35:
    if ((v54 & 8) == 0) {
      goto LABEL_36;
    }
    goto LABEL_50;
  }
LABEL_47:
  uint64_t v61 = (long long *)(*(void *)(a2 + 280) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 16) |= 4u;
  uint64_t v62 = *(void *)(a1 + 8);
  uint64_t v63 = (uint64_t *)(v62 & 0xFFFFFFFFFFFFFFFCLL);
  if (v62) {
    uint64_t v63 = (uint64_t *)*v63;
  }
  sub_1881DF4((std::string **)(a1 + 280), v61, v63);
  if ((v54 & 8) == 0)
  {
LABEL_36:
    if ((v54 & 0x10) == 0) {
      goto LABEL_37;
    }
    goto LABEL_53;
  }
LABEL_50:
  uint64_t v64 = (long long *)(*(void *)(a2 + 288) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 16) |= 8u;
  uint64_t v65 = *(void *)(a1 + 8);
  uint64_t v66 = (uint64_t *)(v65 & 0xFFFFFFFFFFFFFFFCLL);
  if (v65) {
    uint64_t v66 = (uint64_t *)*v66;
  }
  sub_1881DF4((std::string **)(a1 + 288), v64, v66);
  if ((v54 & 0x10) == 0)
  {
LABEL_37:
    if ((v54 & 0x20) == 0) {
      goto LABEL_38;
    }
LABEL_56:
    uint64_t v70 = (long long *)(*(void *)(a2 + 304) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 0x20u;
    uint64_t v71 = *(void *)(a1 + 8);
    uint64_t v72 = (uint64_t *)(v71 & 0xFFFFFFFFFFFFFFFCLL);
    if (v71) {
      uint64_t v72 = (uint64_t *)*v72;
    }
    sub_1881DF4((std::string **)(a1 + 304), v70, v72);
    if ((v54 & 0x40) == 0)
    {
LABEL_39:
      if ((v54 & 0x80) == 0) {
        goto LABEL_70;
      }
      goto LABEL_62;
    }
    goto LABEL_59;
  }
LABEL_53:
  uint64_t v67 = (long long *)(*(void *)(a2 + 296) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 16) |= 0x10u;
  uint64_t v68 = *(void *)(a1 + 8);
  unint64_t v69 = (uint64_t *)(v68 & 0xFFFFFFFFFFFFFFFCLL);
  if (v68) {
    unint64_t v69 = (uint64_t *)*v69;
  }
  sub_1881DF4((std::string **)(a1 + 296), v67, v69);
  if ((v54 & 0x20) != 0) {
    goto LABEL_56;
  }
LABEL_38:
  if ((v54 & 0x40) == 0) {
    goto LABEL_39;
  }
LABEL_59:
  int v73 = (long long *)(*(void *)(a2 + 312) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 16) |= 0x40u;
  uint64_t v74 = *(void *)(a1 + 8);
  uint64_t v75 = (uint64_t *)(v74 & 0xFFFFFFFFFFFFFFFCLL);
  if (v74) {
    uint64_t v75 = (uint64_t *)*v75;
  }
  sub_1881DF4((std::string **)(a1 + 312), v73, v75);
  if ((v54 & 0x80) != 0)
  {
LABEL_62:
    *(_DWORD *)(a1 + 16) |= 0x80u;
    uint64_t v76 = *(void *)(a1 + 320);
    if (!v76)
    {
      uint64_t v77 = *(void *)(a1 + 8);
      uint64_t v78 = (void *)(v77 & 0xFFFFFFFFFFFFFFFCLL);
      if (v77) {
        uint64_t v78 = (void *)*v78;
      }
      uint64_t v76 = sub_15C1918((uint64_t)v78);
      *(void *)(a1 + 320) = v76;
    }
    if (*(void *)(a2 + 320)) {
      unint64_t v79 = *(uint64_t (****)())(a2 + 320);
    }
    else {
      unint64_t v79 = &off_253F1A0;
    }
    sub_15B0E24(v76, (uint64_t)v79);
  }
LABEL_70:
  if ((v54 & 0x3F00) == 0) {
    goto LABEL_79;
  }
  if ((v54 & 0x100) != 0)
  {
    *(void *)(a1 + 328) = *(void *)(a2 + 328);
    if ((v54 & 0x200) == 0)
    {
LABEL_73:
      if ((v54 & 0x400) == 0) {
        goto LABEL_74;
      }
      goto LABEL_85;
    }
  }
  else if ((v54 & 0x200) == 0)
  {
    goto LABEL_73;
  }
  *(_DWORD *)(a1 + 336) = *(_DWORD *)(a2 + 336);
  if ((v54 & 0x400) == 0)
  {
LABEL_74:
    if ((v54 & 0x800) == 0) {
      goto LABEL_75;
    }
    goto LABEL_86;
  }
LABEL_85:
  *(unsigned char *)(a1 + 340) = *(unsigned char *)(a2 + 340);
  if ((v54 & 0x800) == 0)
  {
LABEL_75:
    if ((v54 & 0x1000) == 0) {
      goto LABEL_76;
    }
LABEL_87:
    *(unsigned char *)(a1 + 342) = *(unsigned char *)(a2 + 342);
    if ((v54 & 0x2000) == 0) {
      goto LABEL_78;
    }
    goto LABEL_77;
  }
LABEL_86:
  *(unsigned char *)(a1 + 341) = *(unsigned char *)(a2 + 341);
  if ((v54 & 0x1000) != 0) {
    goto LABEL_87;
  }
LABEL_76:
  if ((v54 & 0x2000) != 0) {
LABEL_77:
  }
    *(_DWORD *)(a1 + 344) = *(_DWORD *)(a2 + 344);
LABEL_78:
  *(_DWORD *)(a1 + 16) |= v54;
LABEL_79:
  uint64_t v80 = *(void *)(a2 + 8);
  if (v80)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v80 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_1458F64(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 104);
  while ((int)v2 >= 1)
  {
    uint64_t v3 = v2 - 1;
    BOOL v4 = sub_15BA8CC(*(void *)(*(void *)(a1 + 112) + 8 * v2));
    uint64_t v2 = v3;
    if (!v4) {
      return 0;
    }
  }
  uint64_t v5 = *(unsigned int *)(a1 + 152);
  while ((int)v5 >= 1)
  {
    uint64_t v6 = *(void *)(*(void *)(a1 + 160) + 8 * v5--);
    if ((~*(_DWORD *)(v6 + 16) & 5) != 0) {
      return 0;
    }
  }
  uint64_t v7 = *(unsigned int *)(a1 + 176);
  while ((int)v7 >= 1)
  {
    uint64_t v8 = *(void *)(*(void *)(a1 + 184) + 8 * v7--);
    if ((~*(_DWORD *)(v8 + 16) & 3) != 0) {
      return 0;
    }
  }
  uint64_t v9 = *(unsigned int *)(a1 + 200);
  while ((int)v9 >= 1)
  {
    uint64_t v10 = *(void *)(*(void *)(a1 + 208) + 8 * v9--);
    if ((~*(_DWORD *)(v10 + 16) & 3) != 0) {
      return 0;
    }
  }
  if ((*(unsigned char *)(a1 + 16) & 0x80) == 0) {
    return 1;
  }
  uint64_t result = sub_15B0F18(*(void *)(a1 + 320));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_145904C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.Business");
}

uint64_t sub_145905C(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_24B5608;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  __int16 v5 = *(_WORD *)(a2 + 24);
  *(unsigned char *)(a1 + 26) = *(unsigned char *)(a2 + 26);
  *(_WORD *)(a1 + 24) = v5;
  return a1;
}

void sub_14590E0(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_1459110(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1459184(void *a1)
{
  sub_1459110(a1);

  operator delete();
}

uint64_t sub_14591BC(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(unsigned char *)(result + 18) = 0;
  *(_WORD *)(result + 16) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_14591D8(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v31 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v31, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v31 + 1;
    unsigned int v9 = *v31;
    if (*v31 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v31, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v31 + 2;
      }
    }
    int v31 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 == 3)
    {
      if (v9 != 24) {
        goto LABEL_14;
      }
      v5 |= 4u;
      uint64_t v16 = v8 + 1;
      uint64_t v17 = *v8;
      if ((*v8 & 0x80000000) == 0) {
        goto LABEL_26;
      }
      int v18 = *v16;
      uint64_t v17 = v17 + (v18 << 7) - 128;
      if ((v18 & 0x80000000) == 0)
      {
        uint64_t v16 = v8 + 2;
LABEL_26:
        int v31 = v16;
        *(unsigned char *)(a1 + 26) = v17 != 0;
        goto LABEL_36;
      }
      uint64_t v25 = (char *)sub_188C138((uint64_t)v8, v17);
      int v31 = v25;
      *(unsigned char *)(a1 + 26) = v26 != 0;
      if (!v25) {
        goto LABEL_47;
      }
      goto LABEL_36;
    }
    if (v12 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_14;
    }
    v5 |= 2u;
    int v19 = v8 + 1;
    uint64_t v20 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_31;
    }
    int v21 = *v19;
    uint64_t v20 = v20 + (v21 << 7) - 128;
    if ((v21 & 0x80000000) == 0)
    {
      int v19 = v8 + 2;
LABEL_31:
      int v31 = v19;
      *(unsigned char *)(a1 + 25) = v20 != 0;
      goto LABEL_36;
    }
    int v27 = (char *)sub_188C138((uint64_t)v8, v20);
    int v31 = v27;
    *(unsigned char *)(a1 + 25) = v28 != 0;
    if (!v27) {
      goto LABEL_47;
    }
LABEL_36:
    if (sub_11947B8((uint64_t)a3, &v31, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v12 == 1 && v9 == 8)
  {
    v5 |= 1u;
    int v22 = v8 + 1;
    uint64_t v23 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_35;
    }
    int v24 = *v22;
    uint64_t v23 = v23 + (v24 << 7) - 128;
    if ((v24 & 0x80000000) == 0)
    {
      int v22 = v8 + 2;
LABEL_35:
      int v31 = v22;
      *(unsigned char *)(a1 + 24) = v23 != 0;
      goto LABEL_36;
    }
    int v29 = (char *)sub_188C138((uint64_t)v8, v23);
    int v31 = v29;
    *(unsigned char *)(a1 + 24) = v30 != 0;
    if (!v29) {
      goto LABEL_47;
    }
    goto LABEL_36;
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (*v7)
    {
      uint64_t v15 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = v31;
    }
    int v31 = (char *)sub_1885AC0(v9, v15, v8, a3);
    if (!v31) {
      goto LABEL_47;
    }
    goto LABEL_36;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_47:
  int v31 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v31;
}

unsigned char *sub_145945C(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    char v7 = *(unsigned char *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v7;
    v4 += 2;
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_14;
      }
      goto LABEL_11;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v8 = *(unsigned char *)(a1 + 25);
  unsigned char *v4 = 16;
  v4[1] = v8;
  v4 += 2;
  if ((v6 & 4) != 0)
  {
LABEL_11:
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v9 = *(unsigned char *)(a1 + 26);
    unsigned char *v4 = 24;
    v4[1] = v9;
    v4 += 2;
  }
LABEL_14:
  uint64_t v10 = *(void *)(a1 + 8);
  if ((v10 & 1) == 0) {
    return v4;
  }
  unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v12 + 31) < 0)
  {
    uint64_t v13 = *(void **)(v12 + 8);
    uint64_t v14 = *(void *)(v12 + 16);
  }
  else
  {
    uint64_t v13 = (void *)(v12 + 8);
    LODWORD(v14) = *(unsigned __int8 *)(v12 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v14)
  {
    uint64_t v15 = (int)v14;
    memcpy(v4, v13, (int)v14);
    v4 += v15;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v13, v14, v4);
}

uint64_t sub_14595BC(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  uint64_t v2 = 2 * (v1 & 1);
  if ((v1 & 2) != 0) {
    v2 += 2;
  }
  if ((v1 & 4) != 0) {
    v2 += 2;
  }
  if ((v1 & 7) != 0) {
    uint64_t v3 = v2;
  }
  else {
    uint64_t v3 = 0;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v6 + 31) < 0) {
      uint64_t v7 = *(void *)(v6 + 16);
    }
    else {
      uint64_t v7 = *(unsigned __int8 *)(v6 + 31);
    }
    v3 += v7;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

uint64_t sub_1459620()
{
  return 1;
}

void *sub_1459628@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.ClientCapabilities.FormattedStringClientCapabilities");
}

uint64_t sub_1459638(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_24B5688;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  return a1;
}

void sub_14596B4(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_14596E4(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1459758(void *a1)
{
  sub_14596E4(a1);

  operator delete();
}

uint64_t sub_1459790(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_WORD *)(result + 16) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_14597A8(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v25 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    char v8 = v25 + 1;
    unsigned int v9 = *v25;
    if (*v25 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        char v8 = (char *)sub_188C180((uint64_t)v25, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        char v8 = v25 + 2;
      }
    }
    uint64_t v25 = v8;
    if (v9 >> 3 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_13;
    }
    v5 |= 2u;
    uint64_t v15 = v8 + 1;
    uint64_t v16 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_25;
    }
    int v17 = *v15;
    uint64_t v16 = v16 + (v17 << 7) - 128;
    if ((v17 & 0x80000000) == 0)
    {
      uint64_t v15 = v8 + 2;
LABEL_25:
      uint64_t v25 = v15;
      *(unsigned char *)(a1 + 25) = v16 != 0;
      goto LABEL_30;
    }
    int v21 = (char *)sub_188C138((uint64_t)v8, v16);
    uint64_t v25 = v21;
    *(unsigned char *)(a1 + 25) = v22 != 0;
    if (!v21) {
      goto LABEL_39;
    }
LABEL_30:
    if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 >> 3 == 1 && v9 == 8)
  {
    v5 |= 1u;
    int v18 = v8 + 1;
    uint64_t v19 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_29;
    }
    int v20 = *v18;
    uint64_t v19 = v19 + (v20 << 7) - 128;
    if ((v20 & 0x80000000) == 0)
    {
      int v18 = v8 + 2;
LABEL_29:
      uint64_t v25 = v18;
      *(unsigned char *)(a1 + 24) = v19 != 0;
      goto LABEL_30;
    }
    uint64_t v23 = (char *)sub_188C138((uint64_t)v8, v19);
    uint64_t v25 = v23;
    *(unsigned char *)(a1 + 24) = v24 != 0;
    if (!v23) {
      goto LABEL_39;
    }
    goto LABEL_30;
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      uint64_t v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      char v8 = v25;
    }
    uint64_t v25 = (char *)sub_1885AC0(v9, v14, v8, a3);
    if (!v25) {
      goto LABEL_39;
    }
    goto LABEL_30;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_39:
  uint64_t v25 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v25;
}

unsigned char *sub_14599B8(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    char v7 = *(unsigned char *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v7;
    v4 += 2;
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v8 = *(unsigned char *)(a1 + 25);
    unsigned char *v4 = 16;
    v4[1] = v8;
    v4 += 2;
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    unint64_t v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    unint64_t v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    v4 += v14;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v12, v13, v4);
}

uint64_t sub_1459AD4(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  uint64_t v2 = 2 * (v1 & 1);
  if ((v1 & 2) != 0) {
    v2 += 2;
  }
  if ((v1 & 3) != 0) {
    uint64_t v3 = v2;
  }
  else {
    uint64_t v3 = 0;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v6 + 31) < 0) {
      uint64_t v7 = *(void *)(v6 + 16);
    }
    else {
      uint64_t v7 = *(unsigned __int8 *)(v6 + 31);
    }
    v3 += v7;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

uint64_t sub_1459B2C()
{
  return 1;
}

void *sub_1459B34@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.ClientCapabilities.AdvisoryClientCapabilities");
}

uint64_t sub_1459B44(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_24B5708;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

void sub_1459BC0(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_1459BF0(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1459C64(void *a1)
{
  sub_1459BF0(a1);

  operator delete();
}

uint64_t sub_1459C9C(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(unsigned char *)(result + 16) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_1459CB4(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v19 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
    goto LABEL_27;
  }
  unint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v19 + 1;
    unsigned int v8 = *v19;
    if (*v19 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v19, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v19 + 2;
      }
    }
    uint64_t v19 = v7;
    if (v8 != 8) {
      break;
    }
    uint64_t v13 = v7 + 1;
    uint64_t v14 = *v7;
    if ((*v7 & 0x80000000) == 0) {
      goto LABEL_19;
    }
    int v15 = *v13;
    uint64_t v14 = v14 + (v15 << 7) - 128;
    if ((v15 & 0x80000000) == 0)
    {
      uint64_t v13 = v7 + 2;
LABEL_19:
      uint64_t v19 = v13;
      *(unsigned char *)(a1 + 24) = v14 != 0;
      int v5 = 1;
      goto LABEL_20;
    }
    uint64_t v16 = (char *)sub_188C138((uint64_t)v7, v14);
    uint64_t v19 = v16;
    *(unsigned char *)(a1 + 24) = v17 != 0;
    int v5 = 1;
    if (!v16) {
      goto LABEL_28;
    }
LABEL_20:
    if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
      goto LABEL_27;
    }
  }
  if (v8) {
    BOOL v11 = (v8 & 7) == 4;
  }
  else {
    BOOL v11 = 1;
  }
  if (!v11)
  {
    if (*v6)
    {
      unint64_t v12 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v12 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = v19;
    }
    uint64_t v19 = (char *)sub_1885AC0(v8, v12, v7, a3);
    if (!v19) {
      goto LABEL_28;
    }
    goto LABEL_20;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    goto LABEL_27;
  }
LABEL_28:
  uint64_t v19 = 0;
LABEL_27:
  *(_DWORD *)(a1 + 16) |= v5;
  return v19;
}

unsigned char *sub_1459E44(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    char v6 = *(unsigned char *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v6;
    v4 += 2;
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v9 + 31) < 0)
  {
    unsigned int v10 = *(void **)(v9 + 8);
    uint64_t v11 = *(void *)(v9 + 16);
  }
  else
  {
    unsigned int v10 = (void *)(v9 + 8);
    LODWORD(v11) = *(unsigned __int8 *)(v9 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v11)
  {
    uint64_t v12 = (int)v11;
    memcpy(v4, v10, (int)v11);
    v4 += v12;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v10, v11, v4);
}

uint64_t sub_1459F28(uint64_t a1)
{
  uint64_t v1 = 2 * (*(_DWORD *)(a1 + 16) & 1);
  uint64_t v2 = *(void *)(a1 + 8);
  if (v2)
  {
    unint64_t v4 = v2 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v5 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v5 = *(unsigned __int8 *)(v4 + 31);
    }
    v1 += v5;
  }
  *(_DWORD *)(a1 + 20) = v1;
  return v1;
}

uint64_t sub_1459F68()
{
  return 1;
}

void *sub_1459F70@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.ClientCapabilities.WalkingSupportedFeatures");
}

double sub_1459F80(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3 = a2 | 2;
  if (!a3) {
    uint64_t v3 = a2;
  }
  *(void *)a1 = off_24B5788;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = 0;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = a2;
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = a2;
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = a2;
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = a2;
  *(void *)(a1 + 104) = &qword_2550250;
  *(void *)(a1 + 112) = &qword_2550250;
  *(void *)(a1 + 120) = &qword_2550250;
  *(void *)(a1 + 128) = &qword_2550250;
  *(void *)(a1 + 136) = &qword_2550250;
  *(void *)(a1 + 144) = &qword_2550250;
  *(void *)(a1 + 152) = &qword_2550250;
  *(void *)(a1 + 160) = &qword_2550250;
  *(void *)(a1 + 247) = 0;
  *(_OWORD *)(a1 + 232) = 0u;
  *(_OWORD *)(a1 + 216) = 0u;
  *(_OWORD *)(a1 + 200) = 0u;
  *(_OWORD *)(a1 + 184) = 0u;
  *(_OWORD *)(a1 + 168) = 0u;
  *(_OWORD *)(a1 + 256) = xmmword_2142240;
  *(void *)&double result = 0x100000007;
  *(void *)(a1 + 272) = 0x100000007;
  *(_DWORD *)(a1 + 280) = 3;
  return result;
}

uint64_t sub_145A024(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  unint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)a1 = off_24B5788;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  uint64_t v5 = a1 + 32;
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0;
  int v6 = *(_DWORD *)(a2 + 40);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 48);
    unsigned int v8 = (std::string **)sub_188CCE4(a1 + 32, *(_DWORD *)(a2 + 40));
    sub_188FB98(v5, v8, (const std::string **)(v7 + 8), v6, **(_DWORD **)(a1 + 48) - *(_DWORD *)(a1 + 40));
    int v9 = *(_DWORD *)(a1 + 40) + v6;
    *(_DWORD *)(a1 + 40) = v9;
    unsigned int v10 = *(int **)(a1 + 48);
    if (*v10 < v9) {
      *unsigned int v10 = v9;
    }
  }
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  int v11 = *(_DWORD *)(a2 + 56);
  if (v11)
  {
    sub_188C80C((unsigned int *)(a1 + 56), v11);
    uint64_t v12 = *(void **)(a1 + 64);
    *(_DWORD *)(a1 + 56) += *(_DWORD *)(a2 + 56);
    memcpy(v12, *(const void **)(a2 + 64), 4 * *(int *)(a2 + 56));
  }
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0;
  int v13 = *(_DWORD *)(a2 + 72);
  if (v13)
  {
    sub_188C80C((unsigned int *)(a1 + 72), v13);
    uint64_t v14 = *(void **)(a1 + 80);
    *(_DWORD *)(a1 + 72) += *(_DWORD *)(a2 + 72);
    memcpy(v14, *(const void **)(a2 + 80), 4 * *(int *)(a2 + 72));
  }
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = 0;
  int v15 = *(_DWORD *)(a2 + 88);
  if (v15)
  {
    sub_188C80C((unsigned int *)(a1 + 88), v15);
    uint64_t v16 = *(void **)(a1 + 96);
    *(_DWORD *)(a1 + 88) += *(_DWORD *)(a2 + 88);
    memcpy(v16, *(const void **)(a2 + 96), 4 * *(int *)(a2 + 88));
  }
  uint64_t v17 = *(void *)(a2 + 8);
  if (v17) {
    sub_188B4F8(v4, (v17 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 104) = &qword_2550250;
  int v18 = *(_DWORD *)(a2 + 16);
  if (v18)
  {
    uint64_t v19 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v19 = (uint64_t *)*v19;
    }
    sub_1881DF4((std::string **)(a1 + 104), (long long *)(*(void *)(a2 + 104) & 0xFFFFFFFFFFFFFFFELL), v19);
    int v18 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 112) = &qword_2550250;
  if ((v18 & 2) != 0)
  {
    int v20 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      int v20 = (uint64_t *)*v20;
    }
    sub_1881DF4((std::string **)(a1 + 112), (long long *)(*(void *)(a2 + 112) & 0xFFFFFFFFFFFFFFFELL), v20);
    int v18 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 120) = &qword_2550250;
  if ((v18 & 4) != 0)
  {
    int v21 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      int v21 = (uint64_t *)*v21;
    }
    sub_1881DF4((std::string **)(a1 + 120), (long long *)(*(void *)(a2 + 120) & 0xFFFFFFFFFFFFFFFELL), v21);
    int v18 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 128) = &qword_2550250;
  if ((v18 & 8) != 0)
  {
    uint64_t v22 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v22 = (uint64_t *)*v22;
    }
    sub_1881DF4((std::string **)(a1 + 128), (long long *)(*(void *)(a2 + 128) & 0xFFFFFFFFFFFFFFFELL), v22);
    int v18 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 136) = &qword_2550250;
  if ((v18 & 0x10) != 0)
  {
    uint64_t v23 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v23 = (uint64_t *)*v23;
    }
    sub_1881DF4((std::string **)(a1 + 136), (long long *)(*(void *)(a2 + 136) & 0xFFFFFFFFFFFFFFFELL), v23);
    int v18 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 144) = &qword_2550250;
  if ((v18 & 0x20) != 0)
  {
    uint64_t v24 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v24 = (uint64_t *)*v24;
    }
    sub_1881DF4((std::string **)(a1 + 144), (long long *)(*(void *)(a2 + 144) & 0xFFFFFFFFFFFFFFFELL), v24);
    int v18 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 152) = &qword_2550250;
  if ((v18 & 0x40) != 0)
  {
    uint64_t v25 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v25 = (uint64_t *)*v25;
    }
    sub_1881DF4((std::string **)(a1 + 152), (long long *)(*(void *)(a2 + 152) & 0xFFFFFFFFFFFFFFFELL), v25);
    int v18 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 160) = &qword_2550250;
  if ((v18 & 0x80) != 0)
  {
    uint64_t v26 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v26 = (uint64_t *)*v26;
    }
    sub_1881DF4((std::string **)(a1 + 160), (long long *)(*(void *)(a2 + 160) & 0xFFFFFFFFFFFFFFFELL), v26);
    int v18 = *(_DWORD *)(a2 + 16);
  }
  if ((v18 & 0x100) != 0) {
    operator new();
  }
  *(void *)(a1 + 168) = 0;
  if ((v18 & 0x200) != 0) {
    operator new();
  }
  *(void *)(a1 + 176) = 0;
  if ((v18 & 0x400) != 0) {
    operator new();
  }
  *(void *)(a1 + 184) = 0;
  if ((v18 & 0x800) != 0) {
    operator new();
  }
  *(void *)(a1 + 192) = 0;
  if ((v18 & 0x1000) != 0) {
    operator new();
  }
  *(void *)(a1 + 200) = 0;
  if ((v18 & 0x2000) != 0) {
    operator new();
  }
  *(void *)(a1 + 208) = 0;
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  long long v27 = *(_OWORD *)(a2 + 232);
  long long v28 = *(_OWORD *)(a2 + 248);
  long long v29 = *(_OWORD *)(a2 + 264);
  *(_DWORD *)(a1 + 280) = *(_DWORD *)(a2 + 280);
  *(_OWORD *)(a1 + 264) = v29;
  *(_OWORD *)(a1 + 248) = v28;
  *(_OWORD *)(a1 + 232) = v27;
  return a1;
}

void sub_145A4D0()
{
}

void *sub_145A5CC(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  unint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_145A670((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  sub_1889DA8((uint64_t)(a1 + 11));
  sub_1889DA8((uint64_t)(a1 + 9));
  sub_1889DA8((uint64_t)(a1 + 7));
  sub_1889DE8(a1 + 4);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void ***sub_145A670(uint64_t a1)
{
  uint64_t v3 = *(uint64_t **)(a1 + 104);
  uint64_t v2 = (void ***)(a1 + 104);
  if (v3 != &qword_2550250) {
    sub_1881C6C(v2);
  }
  if (*(uint64_t **)(a1 + 112) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 112));
  }
  if (*(uint64_t **)(a1 + 120) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 120));
  }
  if (*(uint64_t **)(a1 + 128) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 128));
  }
  if (*(uint64_t **)(a1 + 136) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 136));
  }
  if (*(uint64_t **)(a1 + 144) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 144));
  }
  if (*(uint64_t **)(a1 + 152) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 152));
  }
  double result = (void ***)(a1 + 160);
  if (*(uint64_t **)(a1 + 160) != &qword_2550250) {
    sub_1881C6C(result);
  }
  if ((uint64_t (***)())a1 != &off_2539290)
  {
    uint64_t v5 = *(void **)(a1 + 168);
    if (v5)
    {
      sub_1459110(v5);
      operator delete();
    }
    if (*(void *)(a1 + 176))
    {
      sub_15BF110();
      operator delete();
    }
    if (*(void *)(a1 + 184))
    {
      sub_15BE960();
      operator delete();
    }
    if (*(void *)(a1 + 192))
    {
      sub_15C05B4();
      operator delete();
    }
    int v6 = *(void **)(a1 + 200);
    if (v6)
    {
      sub_14596E4(v6);
      operator delete();
    }
    double result = *(void ****)(a1 + 208);
    if (result)
    {
      sub_1459BF0(result);
      operator delete();
    }
  }
  return result;
}

void sub_145A820(void *a1)
{
  sub_145A5CC(a1);

  operator delete();
}

char *sub_145A858(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)v261 = a2;
  char v5 = sub_11947B8((uint64_t)a3, (char **)v261, a3[11].i32[1]);
  double result = *(char **)v261;
  if ((v5 & 1) == 0)
  {
    uint64_t v7 = (void *)(a1 + 8);
    unsigned int v8 = (uint64_t **)(a1 + 32);
    while (1)
    {
      int v9 = result + 1;
      unsigned int v10 = *result;
      if (*result < 0)
      {
        int v11 = *v9;
        unsigned int v12 = v10 + (v11 << 7);
        unsigned int v10 = v12 - 128;
        if (v11 < 0)
        {
          int v9 = (char *)sub_188C180((uint64_t)result, v12 - 128);
          unsigned int v10 = v13;
        }
        else
        {
          int v9 = result + 2;
        }
      }
      *(void *)v261 = v9;
      switch(v10 >> 3)
      {
        case 1u:
          if (v10 != 10) {
            goto LABEL_488;
          }
          *(_DWORD *)(a1 + 16) |= 1u;
          uint64_t v14 = *(void *)(a1 + 8);
          int v15 = (uint64_t *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
          if (v14) {
            int v15 = (uint64_t *)*v15;
          }
          uint64_t v16 = (void *)(a1 + 104);
          goto LABEL_196;
        case 2u:
          if (v10 != 18) {
            goto LABEL_488;
          }
          *(_DWORD *)(a1 + 16) |= 2u;
          uint64_t v17 = *(void *)(a1 + 8);
          int v15 = (uint64_t *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
          if (v17) {
            int v15 = (uint64_t *)*v15;
          }
          uint64_t v16 = (void *)(a1 + 112);
          goto LABEL_196;
        case 3u:
          if (v10 != 26) {
            goto LABEL_488;
          }
          *(_DWORD *)(a1 + 16) |= 4u;
          uint64_t v18 = *(void *)(a1 + 8);
          int v15 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
          if (v18) {
            int v15 = (uint64_t *)*v15;
          }
          uint64_t v16 = (void *)(a1 + 120);
          goto LABEL_196;
        case 4u:
          if (v10 != 32) {
            goto LABEL_488;
          }
          uint64_t v19 = v9 + 1;
          unint64_t v20 = *v9;
          if ((*v9 & 0x80000000) == 0) {
            goto LABEL_25;
          }
          int v21 = *v19;
          int v22 = v20 + (v21 << 7);
          unint64_t v20 = (v22 - 128);
          if (v21 < 0)
          {
            double result = (char *)sub_188C138((uint64_t)v9, (v22 - 128));
            *(void *)v261 = result;
            if (!result) {
              return result;
            }
            unint64_t v20 = v210;
          }
          else
          {
            uint64_t v19 = v9 + 2;
LABEL_25:
            *(void *)v261 = v19;
          }
          if (sub_136FC18())
          {
            *(_DWORD *)(a1 + 20) |= 0x400000u;
            *(_DWORD *)(a1 + 260) = v20;
            goto LABEL_198;
          }
          if (*v7) {
            v259 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            v259 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          int v260 = 4;
          goto LABEL_504;
        case 5u:
          if (v10 != 40) {
            goto LABEL_488;
          }
          *(_DWORD *)(a1 + 16) |= 0x4000u;
          uint64_t v23 = v9 + 1;
          uint64_t v24 = *v9;
          if ((*v9 & 0x80000000) == 0) {
            goto LABEL_32;
          }
          int v25 = *v23;
          uint64_t v24 = v24 + (v25 << 7) - 128;
          if (v25 < 0)
          {
            double result = (char *)sub_188C138((uint64_t)v9, v24);
            *(void *)v261 = result;
            *(unsigned char *)(a1 + 216) = v211 != 0;
            if (!result) {
              return result;
            }
          }
          else
          {
            uint64_t v23 = v9 + 2;
LABEL_32:
            *(void *)v261 = v23;
            *(unsigned char *)(a1 + 216) = v24 != 0;
          }
          goto LABEL_198;
        case 6u:
          if (v10 != 50) {
            goto LABEL_488;
          }
          double result = v9 - 1;
          while (1)
          {
            uint64_t v26 = result + 1;
            *(void *)v261 = result + 1;
            long long v27 = *(_DWORD **)(a1 + 48);
            if (v27 && (uint64_t v28 = *(int *)(a1 + 40), (int)v28 < *v27))
            {
              *(_DWORD *)(a1 + 40) = v28 + 1;
              long long v29 = *(std::string **)&v27[2 * v28 + 2];
            }
            else
            {
              if (!*v8) {
                operator new();
              }
              void *v31 = v30;
              v31[1] = sub_3A6EDC;
              *uint64_t v30 = 0;
              v30[1] = 0;
              int v30[2] = 0;
              long long v29 = (std::string *)sub_188CDC8(a1 + 32, (uint64_t)v30);
              uint64_t v26 = *(char **)v261;
            }
            double result = (char *)sub_188C244(v29, v26, (uint64_t)a3);
            *(void *)v261 = result;
            if (!result) {
              return result;
            }
            if (*(void *)a3 <= (unint64_t)result || *result != 50) {
              goto LABEL_198;
            }
          }
        case 7u:
          if (v10 != 58) {
            goto LABEL_488;
          }
          *(_DWORD *)(a1 + 16) |= 8u;
          uint64_t v32 = *(void *)(a1 + 8);
          int v15 = (uint64_t *)(v32 & 0xFFFFFFFFFFFFFFFCLL);
          if (v32) {
            int v15 = (uint64_t *)*v15;
          }
          uint64_t v16 = (void *)(a1 + 128);
          goto LABEL_196;
        case 8u:
          if (v10 != 64) {
            goto LABEL_488;
          }
          *(_DWORD *)(a1 + 20) |= 0x800000u;
          uint64_t v33 = v9 + 1;
          int v34 = *v9;
          if ((*v9 & 0x80000000) == 0) {
            goto LABEL_53;
          }
          int v35 = *v33;
          int v34 = v34 + (v35 << 7) - 128;
          if (v35 < 0)
          {
            double result = (char *)sub_188C0D0((uint64_t)v9, v34);
            *(void *)v261 = result;
            *(_DWORD *)(a1 + 264) = v212;
            if (!result) {
              return result;
            }
          }
          else
          {
            uint64_t v33 = v9 + 2;
LABEL_53:
            *(void *)v261 = v33;
            *(_DWORD *)(a1 + 264) = v34;
          }
          goto LABEL_198;
        case 9u:
          if (v10 != 72) {
            goto LABEL_488;
          }
          *(_DWORD *)(a1 + 20) |= 0x1000000u;
          int v37 = v9 + 1;
          LODWORD(v36) = *v9;
          if ((v36 & 0x80) == 0) {
            goto LABEL_58;
          }
          int v38 = *v37;
          uint64_t v36 = v36 + (v38 << 7) - 128;
          if (v38 < 0)
          {
            double result = (char *)sub_188C138((uint64_t)v9, v36);
            *(void *)v261 = result;
            *(_DWORD *)(a1 + 268) = v213;
            if (!result) {
              return result;
            }
          }
          else
          {
            int v37 = v9 + 2;
LABEL_58:
            *(void *)v261 = v37;
            *(_DWORD *)(a1 + 268) = v36;
          }
          goto LABEL_198;
        case 0xAu:
          if (v10 != 80) {
            goto LABEL_488;
          }
          *(_DWORD *)(a1 + 20) |= 0x2000000u;
          uint64_t v40 = v9 + 1;
          LODWORD(v39) = *v9;
          if ((v39 & 0x80) == 0) {
            goto LABEL_63;
          }
          int v41 = *v40;
          uint64_t v39 = v39 + (v41 << 7) - 128;
          if (v41 < 0)
          {
            double result = (char *)sub_188C138((uint64_t)v9, v39);
            *(void *)v261 = result;
            *(_DWORD *)(a1 + 272) = v214;
            if (!result) {
              return result;
            }
          }
          else
          {
            uint64_t v40 = v9 + 2;
LABEL_63:
            *(void *)v261 = v40;
            *(_DWORD *)(a1 + 272) = v39;
          }
          goto LABEL_198;
        case 0xBu:
          if (v10 != 90) {
            goto LABEL_488;
          }
          *(_DWORD *)(a1 + 16) |= 0x10u;
          uint64_t v42 = *(void *)(a1 + 8);
          int v15 = (uint64_t *)(v42 & 0xFFFFFFFFFFFFFFFCLL);
          if (v42) {
            int v15 = (uint64_t *)*v15;
          }
          uint64_t v16 = (void *)(a1 + 136);
          goto LABEL_196;
        case 0xCu:
          if (v10 != 96) {
            goto LABEL_488;
          }
          *(_DWORD *)(a1 + 16) |= 0x10000u;
          uint64_t v43 = v9 + 1;
          uint64_t v44 = *v9;
          if ((*v9 & 0x80000000) == 0) {
            goto LABEL_72;
          }
          int v45 = *v43;
          uint64_t v44 = v44 + (v45 << 7) - 128;
          if (v45 < 0)
          {
            double result = (char *)sub_188C138((uint64_t)v9, v44);
            *(void *)v261 = result;
            *(unsigned char *)(a1 + 218) = v215 != 0;
            if (!result) {
              return result;
            }
          }
          else
          {
            uint64_t v43 = v9 + 2;
LABEL_72:
            *(void *)v261 = v43;
            *(unsigned char *)(a1 + 218) = v44 != 0;
          }
          goto LABEL_198;
        case 0xDu:
          if (v10 != 104) {
            goto LABEL_488;
          }
          *(_DWORD *)(a1 + 16) |= 0x20000u;
          uint64_t v46 = v9 + 1;
          uint64_t v47 = *v9;
          if ((*v9 & 0x80000000) == 0) {
            goto LABEL_77;
          }
          int v48 = *v46;
          uint64_t v47 = v47 + (v48 << 7) - 128;
          if (v48 < 0)
          {
            double result = (char *)sub_188C138((uint64_t)v9, v47);
            *(void *)v261 = result;
            *(unsigned char *)(a1 + 219) = v216 != 0;
            if (!result) {
              return result;
            }
          }
          else
          {
            uint64_t v46 = v9 + 2;
LABEL_77:
            *(void *)v261 = v46;
            *(unsigned char *)(a1 + 219) = v47 != 0;
          }
          goto LABEL_198;
        case 0xEu:
          if (v10 != 112) {
            goto LABEL_488;
          }
          int v49 = v9 + 1;
          unint64_t v20 = *v9;
          if ((*v9 & 0x80000000) == 0) {
            goto LABEL_82;
          }
          int v50 = *v49;
          int v51 = v20 + (v50 << 7);
          unint64_t v20 = (v51 - 128);
          if (v50 < 0)
          {
            double result = (char *)sub_188C138((uint64_t)v9, (v51 - 128));
            *(void *)v261 = result;
            if (!result) {
              return result;
            }
            unint64_t v20 = v217;
          }
          else
          {
            int v49 = v9 + 2;
LABEL_82:
            *(void *)v261 = v49;
          }
          if ((v20 - 1) <= 2)
          {
            *(_DWORD *)(a1 + 20) |= 0x4000000u;
            *(_DWORD *)(a1 + 276) = v20;
            goto LABEL_198;
          }
          if (*v7) {
            v259 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            v259 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          int v260 = 14;
          goto LABEL_504;
        case 0x10u:
          if (v10 != 130) {
            goto LABEL_488;
          }
          *(_DWORD *)(a1 + 16) |= 0x100u;
          uint64_t v52 = *(void *)(a1 + 168);
          if (!v52)
          {
            uint64_t v53 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v7) {
              uint64_t v53 = (void *)*v53;
            }
            uint64_t v52 = sub_14789B8((uint64_t)v53);
            *(void *)(a1 + 168) = v52;
            int v9 = *(char **)v261;
          }
          double result = sub_145C86C(a3, v52, (unsigned __int8 *)v9);
          goto LABEL_197;
        case 0x11u:
          if (v10 != 136) {
            goto LABEL_488;
          }
          *(_DWORD *)(a1 + 16) |= 0x40000u;
          int v54 = v9 + 1;
          uint64_t v55 = *v9;
          if ((*v9 & 0x80000000) == 0) {
            goto LABEL_95;
          }
          int v56 = *v54;
          uint64_t v55 = v55 + (v56 << 7) - 128;
          if (v56 < 0)
          {
            double result = (char *)sub_188C138((uint64_t)v9, v55);
            *(void *)v261 = result;
            *(unsigned char *)(a1 + 220) = v218 != 0;
            if (!result) {
              return result;
            }
          }
          else
          {
            int v54 = v9 + 2;
LABEL_95:
            *(void *)v261 = v54;
            *(unsigned char *)(a1 + 220) = v55 != 0;
          }
          goto LABEL_198;
        case 0x12u:
          if (v10 != 144) {
            goto LABEL_488;
          }
          *(_DWORD *)(a1 + 16) |= 0x80000u;
          uint64_t v57 = v9 + 1;
          uint64_t v58 = *v9;
          if ((*v9 & 0x80000000) == 0) {
            goto LABEL_100;
          }
          int v59 = *v57;
          uint64_t v58 = v58 + (v59 << 7) - 128;
          if (v59 < 0)
          {
            double result = (char *)sub_188C138((uint64_t)v9, v58);
            *(void *)v261 = result;
            *(unsigned char *)(a1 + 221) = v219 != 0;
            if (!result) {
              return result;
            }
          }
          else
          {
            uint64_t v57 = v9 + 2;
LABEL_100:
            *(void *)v261 = v57;
            *(unsigned char *)(a1 + 221) = v58 != 0;
          }
          goto LABEL_198;
        case 0x13u:
          if (v10 != 154) {
            goto LABEL_488;
          }
          *(_DWORD *)(a1 + 16) |= 0x20u;
          uint64_t v60 = *(void *)(a1 + 8);
          int v15 = (uint64_t *)(v60 & 0xFFFFFFFFFFFFFFFCLL);
          if (v60) {
            int v15 = (uint64_t *)*v15;
          }
          uint64_t v16 = (void *)(a1 + 144);
          goto LABEL_196;
        case 0x14u:
          if (v10 != 160) {
            goto LABEL_488;
          }
          *(_DWORD *)(a1 + 16) |= 0x100000u;
          uint64_t v61 = v9 + 1;
          uint64_t v62 = *v9;
          if ((*v9 & 0x80000000) == 0) {
            goto LABEL_109;
          }
          int v63 = *v61;
          uint64_t v62 = v62 + (v63 << 7) - 128;
          if (v63 < 0)
          {
            double result = (char *)sub_188C138((uint64_t)v9, v62);
            *(void *)v261 = result;
            *(unsigned char *)(a1 + 222) = v220 != 0;
            if (!result) {
              return result;
            }
          }
          else
          {
            uint64_t v61 = v9 + 2;
LABEL_109:
            *(void *)v261 = v61;
            *(unsigned char *)(a1 + 222) = v62 != 0;
          }
          goto LABEL_198;
        case 0x15u:
          if (v10 != 168) {
            goto LABEL_488;
          }
          *(_DWORD *)(a1 + 16) |= 0x200000u;
          uint64_t v64 = v9 + 1;
          uint64_t v65 = *v9;
          if ((*v9 & 0x80000000) == 0) {
            goto LABEL_114;
          }
          int v66 = *v64;
          uint64_t v65 = v65 + (v66 << 7) - 128;
          if (v66 < 0)
          {
            double result = (char *)sub_188C138((uint64_t)v9, v65);
            *(void *)v261 = result;
            *(unsigned char *)(a1 + 223) = v221 != 0;
            if (!result) {
              return result;
            }
          }
          else
          {
            uint64_t v64 = v9 + 2;
LABEL_114:
            *(void *)v261 = v64;
            *(unsigned char *)(a1 + 223) = v65 != 0;
          }
          goto LABEL_198;
        case 0x16u:
          if (v10 != 176) {
            goto LABEL_488;
          }
          *(_DWORD *)(a1 + 16) |= 0x400000u;
          uint64_t v67 = v9 + 1;
          uint64_t v68 = *v9;
          if ((*v9 & 0x80000000) == 0) {
            goto LABEL_119;
          }
          int v69 = *v67;
          uint64_t v68 = v68 + (v69 << 7) - 128;
          if (v69 < 0)
          {
            double result = (char *)sub_188C138((uint64_t)v9, v68);
            *(void *)v261 = result;
            *(unsigned char *)(a1 + 224) = v222 != 0;
            if (!result) {
              return result;
            }
          }
          else
          {
            uint64_t v67 = v9 + 2;
LABEL_119:
            *(void *)v261 = v67;
            *(unsigned char *)(a1 + 224) = v68 != 0;
          }
          goto LABEL_198;
        case 0x17u:
          if (v10 != 184) {
            goto LABEL_488;
          }
          *(_DWORD *)(a1 + 16) |= 0x8000u;
          uint64_t v70 = v9 + 1;
          uint64_t v71 = *v9;
          if ((*v9 & 0x80000000) == 0) {
            goto LABEL_124;
          }
          int v72 = *v70;
          uint64_t v71 = v71 + (v72 << 7) - 128;
          if (v72 < 0)
          {
            double result = (char *)sub_188C138((uint64_t)v9, v71);
            *(void *)v261 = result;
            *(unsigned char *)(a1 + 217) = v223 != 0;
            if (!result) {
              return result;
            }
          }
          else
          {
            uint64_t v70 = v9 + 2;
LABEL_124:
            *(void *)v261 = v70;
            *(unsigned char *)(a1 + 217) = v71 != 0;
          }
          goto LABEL_198;
        case 0x18u:
          if (v10 != 194) {
            goto LABEL_488;
          }
          *(_DWORD *)(a1 + 16) |= 0x200u;
          int v73 = *(void **)(a1 + 176);
          if (!v73)
          {
            uint64_t v74 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v7) {
              uint64_t v74 = (void *)*v74;
            }
            int v73 = sub_15C24B4((uint64_t)v74);
            *(void *)(a1 + 176) = v73;
            int v9 = *(char **)v261;
          }
          double result = (char *)sub_145C8FC(a3, (uint64_t)v73, (unsigned __int8 *)v9);
          goto LABEL_197;
        case 0x19u:
          if (v10 != 202) {
            goto LABEL_488;
          }
          *(_DWORD *)(a1 + 16) |= 0x400u;
          uint64_t v75 = *(void *)(a1 + 184);
          if (!v75)
          {
            uint64_t v76 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v7) {
              uint64_t v76 = (void *)*v76;
            }
            uint64_t v75 = sub_15C2458((uint64_t)v76);
            *(void *)(a1 + 184) = v75;
            int v9 = *(char **)v261;
          }
          double result = sub_145C98C(a3, v75, (unsigned __int8 *)v9);
          goto LABEL_197;
        case 0x1Au:
          if (v10 != 208) {
            goto LABEL_488;
          }
          *(_DWORD *)(a1 + 20) |= 0x8000000u;
          uint64_t v77 = v9 + 1;
          int v78 = *v9;
          if ((*v9 & 0x80000000) == 0) {
            goto LABEL_141;
          }
          int v79 = *v77;
          int v78 = v78 + (v79 << 7) - 128;
          if (v79 < 0)
          {
            double result = (char *)sub_188C0D0((uint64_t)v9, v78);
            *(void *)v261 = result;
            *(_DWORD *)(a1 + 280) = v224;
            if (!result) {
              return result;
            }
          }
          else
          {
            uint64_t v77 = v9 + 2;
LABEL_141:
            *(void *)v261 = v77;
            *(_DWORD *)(a1 + 280) = v78;
          }
          goto LABEL_198;
        case 0x1Bu:
          if (v10 == 216)
          {
            uint64_t v80 = v9 - 2;
            while (1)
            {
              *(void *)v261 = v80 + 2;
              unint64_t v81 = v80[2];
              unint64_t v82 = v80 + 3;
              if (v80[2] < 0)
              {
                int v83 = *v82;
                int v84 = v81 + (v83 << 7);
                unint64_t v81 = (v84 - 128);
                if (v83 < 0)
                {
                  double result = (char *)sub_188C138((uint64_t)(v80 + 2), (v84 - 128));
                  *(void *)v261 = result;
                  if (!result) {
                    return result;
                  }
                  unint64_t v81 = v87;
                  goto LABEL_148;
                }
                unint64_t v82 = v80 + 4;
              }
              *(void *)v261 = v82;
LABEL_148:
              if (v81 > 6)
              {
                if (*v7) {
                  unint64_t v88 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
                }
                else {
                  unint64_t v88 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
                }
                sub_188C020(27, v81, v88);
              }
              else
              {
                uint64_t v85 = *(unsigned int *)(a1 + 56);
                if (v85 == *(_DWORD *)(a1 + 60))
                {
                  int v86 = v85 + 1;
                  sub_188C80C((unsigned int *)(a1 + 56), v85 + 1);
                  *(_DWORD *)(*(void *)(a1 + 64) + 4 * v85) = v81;
                }
                else
                {
                  *(_DWORD *)(*(void *)(a1 + 64) + 4 * v85) = v81;
                  int v86 = v85 + 1;
                }
                *(_DWORD *)(a1 + 56) = v86;
              }
              uint64_t v80 = *(char **)v261;
              if (*(void *)a3 <= *(void *)v261 || **(_WORD **)v261 != 472) {
                goto LABEL_198;
              }
            }
          }
          if (v10 != 218) {
            goto LABEL_488;
          }
          *(void *)&long long v262 = a1 + 56;
          *((void *)&v262 + 1) = sub_144CF18;
          uint64_t v263 = a1 + 8;
          int v256 = 27;
          goto LABEL_487;
        case 0x1Cu:
          if (v10 != 224) {
            goto LABEL_488;
          }
          *(_DWORD *)(a1 + 16) |= 0x800000u;
          v175 = v9 + 1;
          uint64_t v176 = *v9;
          if ((*v9 & 0x80000000) == 0) {
            goto LABEL_327;
          }
          int v177 = *v175;
          uint64_t v176 = v176 + (v177 << 7) - 128;
          if (v177 < 0)
          {
            double result = (char *)sub_188C138((uint64_t)v9, v176);
            *(void *)v261 = result;
            *(unsigned char *)(a1 + 225) = v248 != 0;
            if (!result) {
              return result;
            }
          }
          else
          {
            v175 = v9 + 2;
LABEL_327:
            *(void *)v261 = v175;
            *(unsigned char *)(a1 + 225) = v176 != 0;
          }
          goto LABEL_198;
        case 0x1Du:
          if (v10 != 232) {
            goto LABEL_488;
          }
          *(_DWORD *)(a1 + 16) |= 0x1000000u;
          uint64_t v178 = v9 + 1;
          uint64_t v179 = *v9;
          if ((*v9 & 0x80000000) == 0) {
            goto LABEL_332;
          }
          int v180 = *v178;
          uint64_t v179 = v179 + (v180 << 7) - 128;
          if (v180 < 0)
          {
            double result = (char *)sub_188C138((uint64_t)v9, v179);
            *(void *)v261 = result;
            *(unsigned char *)(a1 + 226) = v249 != 0;
            if (!result) {
              return result;
            }
          }
          else
          {
            uint64_t v178 = v9 + 2;
LABEL_332:
            *(void *)v261 = v178;
            *(unsigned char *)(a1 + 226) = v179 != 0;
          }
          goto LABEL_198;
        case 0x1Eu:
          if (v10 != 240) {
            goto LABEL_488;
          }
          *(_DWORD *)(a1 + 16) |= 0x2000000u;
          uint64_t v89 = v9 + 1;
          uint64_t v90 = *v9;
          if ((*v9 & 0x80000000) == 0) {
            goto LABEL_166;
          }
          int v91 = *v89;
          uint64_t v90 = v90 + (v91 << 7) - 128;
          if (v91 < 0)
          {
            double result = (char *)sub_188C138((uint64_t)v9, v90);
            *(void *)v261 = result;
            *(unsigned char *)(a1 + 227) = v225 != 0;
            if (!result) {
              return result;
            }
          }
          else
          {
            uint64_t v89 = v9 + 2;
LABEL_166:
            *(void *)v261 = v89;
            *(unsigned char *)(a1 + 227) = v90 != 0;
          }
          goto LABEL_198;
        case 0x1Fu:
          if (v10 != 250) {
            goto LABEL_488;
          }
          *(_DWORD *)(a1 + 16) |= 0x800u;
          uint64_t v92 = *(void *)(a1 + 192);
          if (!v92)
          {
            uint64_t v93 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v7) {
              uint64_t v93 = (void *)*v93;
            }
            uint64_t v92 = sub_15C2608((uint64_t)v93);
            *(void *)(a1 + 192) = v92;
            int v9 = *(char **)v261;
          }
          double result = sub_145CA1C(a3, v92, (unsigned __int8 *)v9);
          goto LABEL_197;
        case 0x20u:
          if (v10 != 2) {
            goto LABEL_488;
          }
          *(_DWORD *)(a1 + 16) |= 0x40u;
          uint64_t v94 = *(void *)(a1 + 8);
          int v15 = (uint64_t *)(v94 & 0xFFFFFFFFFFFFFFFCLL);
          if (v94) {
            int v15 = (uint64_t *)*v15;
          }
          uint64_t v16 = (void *)(a1 + 152);
          goto LABEL_196;
        case 0x21u:
          if (v10 != 8) {
            goto LABEL_488;
          }
          *(_DWORD *)(a1 + 16) |= 0x4000000u;
          uint64_t v95 = v9 + 1;
          uint64_t v96 = *v9;
          if ((*v9 & 0x80000000) == 0) {
            goto LABEL_181;
          }
          int v97 = *v95;
          uint64_t v96 = v96 + (v97 << 7) - 128;
          if (v97 < 0)
          {
            double result = (char *)sub_188C138((uint64_t)v9, v96);
            *(void *)v261 = result;
            *(unsigned char *)(a1 + 228) = v226 != 0;
            if (!result) {
              return result;
            }
          }
          else
          {
            uint64_t v95 = v9 + 2;
LABEL_181:
            *(void *)v261 = v95;
            *(unsigned char *)(a1 + 228) = v96 != 0;
          }
          goto LABEL_198;
        case 0x22u:
          if (v10 != 16) {
            goto LABEL_488;
          }
          *(_DWORD *)(a1 + 16) |= 0x8000000u;
          unint64_t v181 = v9 + 1;
          uint64_t v182 = *v9;
          if ((*v9 & 0x80000000) == 0) {
            goto LABEL_337;
          }
          int v183 = *v181;
          uint64_t v182 = v182 + (v183 << 7) - 128;
          if (v183 < 0)
          {
            double result = (char *)sub_188C138((uint64_t)v9, v182);
            *(void *)v261 = result;
            *(unsigned char *)(a1 + 229) = v250 != 0;
            if (!result) {
              return result;
            }
          }
          else
          {
            unint64_t v181 = v9 + 2;
LABEL_337:
            *(void *)v261 = v181;
            *(unsigned char *)(a1 + 229) = v182 != 0;
          }
          goto LABEL_198;
        case 0x23u:
          if (v10 != 24) {
            goto LABEL_488;
          }
          *(_DWORD *)(a1 + 16) |= 0x10000000u;
          uint64_t v98 = v9 + 1;
          uint64_t v99 = *v9;
          if ((*v9 & 0x80000000) == 0) {
            goto LABEL_186;
          }
          int v100 = *v98;
          uint64_t v99 = v99 + (v100 << 7) - 128;
          if (v100 < 0)
          {
            double result = (char *)sub_188C138((uint64_t)v9, v99);
            *(void *)v261 = result;
            *(unsigned char *)(a1 + 230) = v227 != 0;
            if (!result) {
              return result;
            }
          }
          else
          {
            uint64_t v98 = v9 + 2;
LABEL_186:
            *(void *)v261 = v98;
            *(unsigned char *)(a1 + 230) = v99 != 0;
          }
          goto LABEL_198;
        case 0x24u:
          if (v10 != 32) {
            goto LABEL_488;
          }
          *(_DWORD *)(a1 + 16) |= 0x20000000u;
          uint64_t v101 = v9 + 1;
          uint64_t v102 = *v9;
          if ((*v9 & 0x80000000) == 0) {
            goto LABEL_191;
          }
          int v103 = *v101;
          uint64_t v102 = v102 + (v103 << 7) - 128;
          if (v103 < 0)
          {
            double result = (char *)sub_188C138((uint64_t)v9, v102);
            *(void *)v261 = result;
            *(unsigned char *)(a1 + 231) = v228 != 0;
            if (!result) {
              return result;
            }
          }
          else
          {
            uint64_t v101 = v9 + 2;
LABEL_191:
            *(void *)v261 = v101;
            *(unsigned char *)(a1 + 231) = v102 != 0;
          }
          goto LABEL_198;
        case 0x25u:
          if (v10 != 40) {
            goto LABEL_488;
          }
          *(_DWORD *)(a1 + 16) |= 0x40000000u;
          v184 = v9 + 1;
          uint64_t v185 = *v9;
          if ((*v9 & 0x80000000) == 0) {
            goto LABEL_342;
          }
          int v186 = *v184;
          uint64_t v185 = v185 + (v186 << 7) - 128;
          if (v186 < 0)
          {
            double result = (char *)sub_188C138((uint64_t)v9, v185);
            *(void *)v261 = result;
            *(unsigned char *)(a1 + 232) = v251 != 0;
            if (!result) {
              return result;
            }
          }
          else
          {
            v184 = v9 + 2;
LABEL_342:
            *(void *)v261 = v184;
            *(unsigned char *)(a1 + 232) = v185 != 0;
          }
          goto LABEL_198;
        case 0x26u:
          if (v10 != 50) {
            goto LABEL_488;
          }
          *(_DWORD *)(a1 + 16) |= 0x80u;
          uint64_t v104 = *(void *)(a1 + 8);
          int v15 = (uint64_t *)(v104 & 0xFFFFFFFFFFFFFFFCLL);
          if (v104) {
            int v15 = (uint64_t *)*v15;
          }
          uint64_t v16 = (void *)(a1 + 160);
LABEL_196:
          uint64_t v105 = (std::string *)sub_1880F84(v16, v15);
          double result = (char *)sub_188C244(v105, *(char **)v261, (uint64_t)a3);
          goto LABEL_197;
        case 0x27u:
          if (v10 != 56) {
            goto LABEL_488;
          }
          *(_DWORD *)(a1 + 16) |= 0x80000000;
          uint64_t v107 = v9 + 1;
          uint64_t v108 = *v9;
          if ((*v9 & 0x80000000) == 0) {
            goto LABEL_204;
          }
          int v109 = *v107;
          uint64_t v108 = v108 + (v109 << 7) - 128;
          if (v109 < 0)
          {
            double result = (char *)sub_188C138((uint64_t)v9, v108);
            *(void *)v261 = result;
            *(unsigned char *)(a1 + 233) = v229 != 0;
            if (!result) {
              return result;
            }
          }
          else
          {
            uint64_t v107 = v9 + 2;
LABEL_204:
            *(void *)v261 = v107;
            *(unsigned char *)(a1 + 233) = v108 != 0;
          }
          goto LABEL_198;
        case 0x28u:
          if (v10 != 64) {
            goto LABEL_488;
          }
          *(_DWORD *)(a1 + 20) |= 1u;
          int v110 = v9 + 1;
          uint64_t v111 = *v9;
          if ((*v9 & 0x80000000) == 0) {
            goto LABEL_209;
          }
          int v112 = *v110;
          uint64_t v111 = v111 + (v112 << 7) - 128;
          if (v112 < 0)
          {
            double result = (char *)sub_188C138((uint64_t)v9, v111);
            *(void *)v261 = result;
            *(unsigned char *)(a1 + 234) = v230 != 0;
            if (!result) {
              return result;
            }
          }
          else
          {
            int v110 = v9 + 2;
LABEL_209:
            *(void *)v261 = v110;
            *(unsigned char *)(a1 + 234) = v111 != 0;
          }
          goto LABEL_198;
        case 0x29u:
          if (v10 != 74) {
            goto LABEL_488;
          }
          *(_DWORD *)(a1 + 16) |= 0x1000u;
          uint64_t v113 = *(void *)(a1 + 200);
          if (!v113)
          {
            uint64_t v114 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v7) {
              uint64_t v114 = (void *)*v114;
            }
            uint64_t v113 = sub_1478A34((uint64_t)v114);
            *(void *)(a1 + 200) = v113;
            int v9 = *(char **)v261;
          }
          double result = sub_145CAAC(a3, v113, (unsigned __int8 *)v9);
          goto LABEL_197;
        case 0x2Au:
          if (v10 != 80) {
            goto LABEL_488;
          }
          *(_DWORD *)(a1 + 20) |= 2u;
          uint64_t v115 = v9 + 1;
          uint64_t v116 = *v9;
          if ((*v9 & 0x80000000) == 0) {
            goto LABEL_220;
          }
          int v117 = *v115;
          uint64_t v116 = v116 + (v117 << 7) - 128;
          if (v117 < 0)
          {
            double result = (char *)sub_188C138((uint64_t)v9, v116);
            *(void *)v261 = result;
            *(unsigned char *)(a1 + 235) = v231 != 0;
            if (!result) {
              return result;
            }
          }
          else
          {
            uint64_t v115 = v9 + 2;
LABEL_220:
            *(void *)v261 = v115;
            *(unsigned char *)(a1 + 235) = v116 != 0;
          }
          goto LABEL_198;
        case 0x2Bu:
          if (v10 != 88) {
            goto LABEL_488;
          }
          *(_DWORD *)(a1 + 20) |= 4u;
          uint64_t v118 = v9 + 1;
          uint64_t v119 = *v9;
          if ((*v9 & 0x80000000) == 0) {
            goto LABEL_225;
          }
          int v120 = *v118;
          uint64_t v119 = v119 + (v120 << 7) - 128;
          if (v120 < 0)
          {
            double result = (char *)sub_188C138((uint64_t)v9, v119);
            *(void *)v261 = result;
            *(unsigned char *)(a1 + 236) = v232 != 0;
            if (!result) {
              return result;
            }
          }
          else
          {
            uint64_t v118 = v9 + 2;
LABEL_225:
            *(void *)v261 = v118;
            *(unsigned char *)(a1 + 236) = v119 != 0;
          }
          goto LABEL_198;
        case 0x2Cu:
          if (v10 != 96) {
            goto LABEL_488;
          }
          *(_DWORD *)(a1 + 20) |= 8u;
          uint64_t v121 = v9 + 1;
          uint64_t v122 = *v9;
          if ((*v9 & 0x80000000) == 0) {
            goto LABEL_230;
          }
          int v123 = *v121;
          uint64_t v122 = v122 + (v123 << 7) - 128;
          if (v123 < 0)
          {
            double result = (char *)sub_188C138((uint64_t)v9, v122);
            *(void *)v261 = result;
            *(unsigned char *)(a1 + 237) = v233 != 0;
            if (!result) {
              return result;
            }
          }
          else
          {
            uint64_t v121 = v9 + 2;
LABEL_230:
            *(void *)v261 = v121;
            *(unsigned char *)(a1 + 237) = v122 != 0;
          }
          goto LABEL_198;
        case 0x2Du:
          if (v10 != 104) {
            goto LABEL_488;
          }
          *(_DWORD *)(a1 + 20) |= 0x10u;
          uint64_t v124 = v9 + 1;
          uint64_t v125 = *v9;
          if ((*v9 & 0x80000000) == 0) {
            goto LABEL_235;
          }
          int v126 = *v124;
          uint64_t v125 = v125 + (v126 << 7) - 128;
          if (v126 < 0)
          {
            double result = (char *)sub_188C138((uint64_t)v9, v125);
            *(void *)v261 = result;
            *(unsigned char *)(a1 + 238) = v234 != 0;
            if (!result) {
              return result;
            }
          }
          else
          {
            uint64_t v124 = v9 + 2;
LABEL_235:
            *(void *)v261 = v124;
            *(unsigned char *)(a1 + 238) = v125 != 0;
          }
          goto LABEL_198;
        case 0x2Eu:
          if (v10 != 112) {
            goto LABEL_488;
          }
          *(_DWORD *)(a1 + 20) |= 0x20u;
          uint64_t v127 = v9 + 1;
          uint64_t v128 = *v9;
          if ((*v9 & 0x80000000) == 0) {
            goto LABEL_240;
          }
          int v129 = *v127;
          uint64_t v128 = v128 + (v129 << 7) - 128;
          if (v129 < 0)
          {
            double result = (char *)sub_188C138((uint64_t)v9, v128);
            *(void *)v261 = result;
            *(unsigned char *)(a1 + 239) = v235 != 0;
            if (!result) {
              return result;
            }
          }
          else
          {
            uint64_t v127 = v9 + 2;
LABEL_240:
            *(void *)v261 = v127;
            *(unsigned char *)(a1 + 239) = v128 != 0;
          }
          goto LABEL_198;
        case 0x2Fu:
          if (v10 != 120) {
            goto LABEL_488;
          }
          *(_DWORD *)(a1 + 20) |= 0x40u;
          uint64_t v130 = v9 + 1;
          uint64_t v131 = *v9;
          if ((*v9 & 0x80000000) == 0) {
            goto LABEL_245;
          }
          int v132 = *v130;
          uint64_t v131 = v131 + (v132 << 7) - 128;
          if (v132 < 0)
          {
            double result = (char *)sub_188C138((uint64_t)v9, v131);
            *(void *)v261 = result;
            *(unsigned char *)(a1 + 240) = v236 != 0;
            if (!result) {
              return result;
            }
          }
          else
          {
            uint64_t v130 = v9 + 2;
LABEL_245:
            *(void *)v261 = v130;
            *(unsigned char *)(a1 + 240) = v131 != 0;
          }
          goto LABEL_198;
        case 0x30u:
          if (v10 != 128) {
            goto LABEL_488;
          }
          *(_DWORD *)(a1 + 20) |= 0x80u;
          int v133 = v9 + 1;
          uint64_t v134 = *v9;
          if ((*v9 & 0x80000000) == 0) {
            goto LABEL_250;
          }
          int v135 = *v133;
          uint64_t v134 = v134 + (v135 << 7) - 128;
          if (v135 < 0)
          {
            double result = (char *)sub_188C138((uint64_t)v9, v134);
            *(void *)v261 = result;
            *(unsigned char *)(a1 + 241) = v237 != 0;
            if (!result) {
              return result;
            }
          }
          else
          {
            int v133 = v9 + 2;
LABEL_250:
            *(void *)v261 = v133;
            *(unsigned char *)(a1 + 241) = v134 != 0;
          }
          goto LABEL_198;
        case 0x31u:
          if (v10 != 136) {
            goto LABEL_488;
          }
          *(_DWORD *)(a1 + 20) |= 0x100u;
          uint64_t v187 = v9 + 1;
          uint64_t v188 = *v9;
          if ((*v9 & 0x80000000) == 0) {
            goto LABEL_347;
          }
          int v189 = *v187;
          uint64_t v188 = v188 + (v189 << 7) - 128;
          if (v189 < 0)
          {
            double result = (char *)sub_188C138((uint64_t)v9, v188);
            *(void *)v261 = result;
            *(unsigned char *)(a1 + 242) = v252 != 0;
            if (!result) {
              return result;
            }
          }
          else
          {
            uint64_t v187 = v9 + 2;
LABEL_347:
            *(void *)v261 = v187;
            *(unsigned char *)(a1 + 242) = v188 != 0;
          }
          goto LABEL_198;
        case 0x32u:
          if (v10 != 144) {
            goto LABEL_488;
          }
          *(_DWORD *)(a1 + 20) |= 0x200u;
          int v136 = v9 + 1;
          uint64_t v137 = *v9;
          if ((*v9 & 0x80000000) == 0) {
            goto LABEL_255;
          }
          int v138 = *v136;
          uint64_t v137 = v137 + (v138 << 7) - 128;
          if (v138 < 0)
          {
            double result = (char *)sub_188C138((uint64_t)v9, v137);
            *(void *)v261 = result;
            *(unsigned char *)(a1 + 243) = v238 != 0;
            if (!result) {
              return result;
            }
          }
          else
          {
            int v136 = v9 + 2;
LABEL_255:
            *(void *)v261 = v136;
            *(unsigned char *)(a1 + 243) = v137 != 0;
          }
          goto LABEL_198;
        case 0x33u:
          if (v10 != 152) {
            goto LABEL_488;
          }
          *(_DWORD *)(a1 + 20) |= 0x400u;
          unint64_t v139 = v9 + 1;
          uint64_t v140 = *v9;
          if ((*v9 & 0x80000000) == 0) {
            goto LABEL_260;
          }
          int v141 = *v139;
          uint64_t v140 = v140 + (v141 << 7) - 128;
          if (v141 < 0)
          {
            double result = (char *)sub_188C138((uint64_t)v9, v140);
            *(void *)v261 = result;
            *(unsigned char *)(a1 + 244) = v239 != 0;
            if (!result) {
              return result;
            }
          }
          else
          {
            unint64_t v139 = v9 + 2;
LABEL_260:
            *(void *)v261 = v139;
            *(unsigned char *)(a1 + 244) = v140 != 0;
          }
          goto LABEL_198;
        case 0x34u:
          if (v10 == 160)
          {
            uint64_t v142 = v9 - 2;
            while (1)
            {
              *(void *)v261 = v142 + 2;
              unint64_t v143 = v142[2];
              uint64_t v144 = v142 + 3;
              if (v142[2] < 0)
              {
                int v145 = *v144;
                int v146 = v143 + (v145 << 7);
                unint64_t v143 = (v146 - 128);
                if (v145 < 0)
                {
                  double result = (char *)sub_188C138((uint64_t)(v142 + 2), (v146 - 128));
                  *(void *)v261 = result;
                  if (!result) {
                    return result;
                  }
                  unint64_t v143 = v149;
                  goto LABEL_267;
                }
                uint64_t v144 = v142 + 4;
              }
              *(void *)v261 = v144;
LABEL_267:
              if (v143 > 6)
              {
                if (*v7) {
                  uint64_t v150 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
                }
                else {
                  uint64_t v150 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
                }
                sub_188C020(52, v143, v150);
              }
              else
              {
                uint64_t v147 = *(unsigned int *)(a1 + 72);
                if (v147 == *(_DWORD *)(a1 + 76))
                {
                  int v148 = v147 + 1;
                  sub_188C80C((unsigned int *)(a1 + 72), v147 + 1);
                  *(_DWORD *)(*(void *)(a1 + 80) + 4 * v147) = v143;
                }
                else
                {
                  *(_DWORD *)(*(void *)(a1 + 80) + 4 * v147) = v143;
                  int v148 = v147 + 1;
                }
                *(_DWORD *)(a1 + 72) = v148;
              }
              uint64_t v142 = *(char **)v261;
              if (*(void *)a3 <= *(void *)v261 || **(_WORD **)v261 != 928) {
                goto LABEL_198;
              }
            }
          }
          if (v10 != 162) {
            goto LABEL_488;
          }
          *(void *)&long long v262 = a1 + 72;
          *((void *)&v262 + 1) = sub_138DE04;
          uint64_t v263 = a1 + 8;
          int v256 = 52;
          goto LABEL_487;
        case 0x35u:
          if (v10 != 168) {
            goto LABEL_488;
          }
          *(_DWORD *)(a1 + 20) |= 0x800u;
          v190 = v9 + 1;
          uint64_t v191 = *v9;
          if ((*v9 & 0x80000000) == 0) {
            goto LABEL_352;
          }
          int v192 = *v190;
          uint64_t v191 = v191 + (v192 << 7) - 128;
          if (v192 < 0)
          {
            double result = (char *)sub_188C138((uint64_t)v9, v191);
            *(void *)v261 = result;
            *(unsigned char *)(a1 + 245) = v253 != 0;
            if (!result) {
              return result;
            }
          }
          else
          {
            v190 = v9 + 2;
LABEL_352:
            *(void *)v261 = v190;
            *(unsigned char *)(a1 + 245) = v191 != 0;
          }
          goto LABEL_198;
        case 0x36u:
          if (v10 != 178) {
            goto LABEL_488;
          }
          *(_DWORD *)(a1 + 16) |= 0x2000u;
          uint64_t v193 = *(void *)(a1 + 208);
          if (!v193)
          {
            v194 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v7) {
              v194 = (void *)*v194;
            }
            uint64_t v193 = sub_1478AB0((uint64_t)v194);
            *(void *)(a1 + 208) = v193;
            int v9 = *(char **)v261;
          }
          double result = sub_145CB3C(a3, v193, (unsigned __int8 *)v9);
          goto LABEL_197;
        case 0x37u:
          if (v10 != 184) {
            goto LABEL_488;
          }
          uint64_t v151 = v9 + 1;
          unint64_t v20 = *v9;
          if ((*v9 & 0x80000000) == 0) {
            goto LABEL_285;
          }
          int v152 = *v151;
          int v153 = v20 + (v152 << 7);
          unint64_t v20 = (v153 - 128);
          if (v152 < 0)
          {
            double result = (char *)sub_188C138((uint64_t)v9, (v153 - 128));
            *(void *)v261 = result;
            if (!result) {
              return result;
            }
            unint64_t v20 = v240;
          }
          else
          {
            uint64_t v151 = v9 + 2;
LABEL_285:
            *(void *)v261 = v151;
          }
          if (v20 > 2)
          {
            if (*v7) {
              v259 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else {
              v259 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            }
            int v260 = 55;
LABEL_504:
            sub_188C020(v260, v20, v259);
          }
          else
          {
            *(_DWORD *)(a1 + 20) |= 0x200000u;
            *(_DWORD *)(a1 + 256) = v20;
          }
          goto LABEL_198;
        case 0x38u:
          if (v10 != 192) {
            goto LABEL_488;
          }
          *(_DWORD *)(a1 + 20) |= 0x1000u;
          uint64_t v154 = v9 + 1;
          uint64_t v155 = *v9;
          if ((*v9 & 0x80000000) == 0) {
            goto LABEL_292;
          }
          int v156 = *v154;
          uint64_t v155 = v155 + (v156 << 7) - 128;
          if (v156 < 0)
          {
            double result = (char *)sub_188C138((uint64_t)v9, v155);
            *(void *)v261 = result;
            *(unsigned char *)(a1 + 246) = v241 != 0;
            if (!result) {
              return result;
            }
          }
          else
          {
            uint64_t v154 = v9 + 2;
LABEL_292:
            *(void *)v261 = v154;
            *(unsigned char *)(a1 + 246) = v155 != 0;
          }
          goto LABEL_198;
        case 0x39u:
          if (v10 != 200) {
            goto LABEL_488;
          }
          *(_DWORD *)(a1 + 20) |= 0x2000u;
          uint64_t v157 = v9 + 1;
          uint64_t v158 = *v9;
          if ((*v9 & 0x80000000) == 0) {
            goto LABEL_297;
          }
          int v159 = *v157;
          uint64_t v158 = v158 + (v159 << 7) - 128;
          if (v159 < 0)
          {
            double result = (char *)sub_188C138((uint64_t)v9, v158);
            *(void *)v261 = result;
            *(unsigned char *)(a1 + 247) = v242 != 0;
            if (!result) {
              return result;
            }
          }
          else
          {
            uint64_t v157 = v9 + 2;
LABEL_297:
            *(void *)v261 = v157;
            *(unsigned char *)(a1 + 247) = v158 != 0;
          }
          goto LABEL_198;
        case 0x3Au:
          if (v10 != 208) {
            goto LABEL_488;
          }
          *(_DWORD *)(a1 + 20) |= 0x4000u;
          uint64_t v160 = v9 + 1;
          uint64_t v161 = *v9;
          if ((*v9 & 0x80000000) == 0) {
            goto LABEL_302;
          }
          int v162 = *v160;
          uint64_t v161 = v161 + (v162 << 7) - 128;
          if (v162 < 0)
          {
            double result = (char *)sub_188C138((uint64_t)v9, v161);
            *(void *)v261 = result;
            *(unsigned char *)(a1 + 248) = v243 != 0;
            if (!result) {
              return result;
            }
          }
          else
          {
            uint64_t v160 = v9 + 2;
LABEL_302:
            *(void *)v261 = v160;
            *(unsigned char *)(a1 + 248) = v161 != 0;
          }
          goto LABEL_198;
        case 0x3Bu:
          if (v10 != 216) {
            goto LABEL_488;
          }
          *(_DWORD *)(a1 + 20) |= 0x8000u;
          v163 = v9 + 1;
          uint64_t v164 = *v9;
          if ((*v9 & 0x80000000) == 0) {
            goto LABEL_307;
          }
          int v165 = *v163;
          uint64_t v164 = v164 + (v165 << 7) - 128;
          if (v165 < 0)
          {
            double result = (char *)sub_188C138((uint64_t)v9, v164);
            *(void *)v261 = result;
            *(unsigned char *)(a1 + 249) = v244 != 0;
            if (!result) {
              return result;
            }
          }
          else
          {
            v163 = v9 + 2;
LABEL_307:
            *(void *)v261 = v163;
            *(unsigned char *)(a1 + 249) = v164 != 0;
          }
          goto LABEL_198;
        case 0x3Cu:
          if (v10 != 224) {
            goto LABEL_488;
          }
          *(_DWORD *)(a1 + 20) |= 0x10000u;
          uint64_t v166 = v9 + 1;
          uint64_t v167 = *v9;
          if ((*v9 & 0x80000000) == 0) {
            goto LABEL_312;
          }
          int v168 = *v166;
          uint64_t v167 = v167 + (v168 << 7) - 128;
          if (v168 < 0)
          {
            double result = (char *)sub_188C138((uint64_t)v9, v167);
            *(void *)v261 = result;
            *(unsigned char *)(a1 + 250) = v245 != 0;
            if (!result) {
              return result;
            }
          }
          else
          {
            uint64_t v166 = v9 + 2;
LABEL_312:
            *(void *)v261 = v166;
            *(unsigned char *)(a1 + 250) = v167 != 0;
          }
          goto LABEL_198;
        case 0x3Du:
          if (v10 != 232) {
            goto LABEL_488;
          }
          *(_DWORD *)(a1 + 20) |= 0x20000u;
          BOOL v195 = v9 + 1;
          uint64_t v196 = *v9;
          if ((*v9 & 0x80000000) == 0) {
            goto LABEL_363;
          }
          int v197 = *v195;
          uint64_t v196 = v196 + (v197 << 7) - 128;
          if (v197 < 0)
          {
            double result = (char *)sub_188C138((uint64_t)v9, v196);
            *(void *)v261 = result;
            *(unsigned char *)(a1 + 251) = v254 != 0;
            if (!result) {
              return result;
            }
          }
          else
          {
            BOOL v195 = v9 + 2;
LABEL_363:
            *(void *)v261 = v195;
            *(unsigned char *)(a1 + 251) = v196 != 0;
          }
          goto LABEL_198;
        case 0x3Eu:
          if (v10 != 240) {
            goto LABEL_488;
          }
          *(_DWORD *)(a1 + 20) |= 0x40000u;
          v198 = v9 + 1;
          uint64_t v199 = *v9;
          if ((*v9 & 0x80000000) == 0) {
            goto LABEL_368;
          }
          int v200 = *v198;
          uint64_t v199 = v199 + (v200 << 7) - 128;
          if (v200 < 0)
          {
            double result = (char *)sub_188C138((uint64_t)v9, v199);
            *(void *)v261 = result;
            *(unsigned char *)(a1 + 252) = v255 != 0;
            if (!result) {
              return result;
            }
          }
          else
          {
            v198 = v9 + 2;
LABEL_368:
            *(void *)v261 = v198;
            *(unsigned char *)(a1 + 252) = v199 != 0;
          }
          goto LABEL_198;
        case 0x3Fu:
          if (v10 == 248)
          {
            v201 = v9 - 2;
            while (1)
            {
              *(void *)v261 = v201 + 2;
              unint64_t v202 = v201[2];
              v203 = v201 + 3;
              if (v201[2] < 0)
              {
                int v204 = *v203;
                int v205 = v202 + (v204 << 7);
                unint64_t v202 = (v205 - 128);
                if (v204 < 0)
                {
                  double result = (char *)sub_188C138((uint64_t)(v201 + 2), (v205 - 128));
                  *(void *)v261 = result;
                  if (!result) {
                    return result;
                  }
                  unint64_t v202 = v208;
                  goto LABEL_375;
                }
                v203 = v201 + 4;
              }
              *(void *)v261 = v203;
LABEL_375:
              if (sub_15B0788(v202))
              {
                uint64_t v206 = *(unsigned int *)(a1 + 88);
                if (v206 == *(_DWORD *)(a1 + 92))
                {
                  int v207 = v206 + 1;
                  sub_188C80C((unsigned int *)(a1 + 88), v206 + 1);
                  *(_DWORD *)(*(void *)(a1 + 96) + 4 * v206) = v202;
                }
                else
                {
                  *(_DWORD *)(*(void *)(a1 + 96) + 4 * v206) = v202;
                  int v207 = v206 + 1;
                }
                *(_DWORD *)(a1 + 88) = v207;
              }
              else
              {
                if (*v7) {
                  v209 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
                }
                else {
                  v209 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
                }
                sub_188C020(63, v202, v209);
              }
              v201 = *(char **)v261;
              if (*(void *)a3 <= *(void *)v261 || **(_WORD **)v261 != 1016) {
                goto LABEL_198;
              }
            }
          }
          if (v10 == 250)
          {
            *(void *)&long long v262 = a1 + 88;
            *((void *)&v262 + 1) = sub_15B0788;
            uint64_t v263 = a1 + 8;
            int v256 = 63;
LABEL_487:
            int v264 = v256;
            double result = sub_1112E88((uint64_t)a3, v9, &v262);
          }
          else
          {
LABEL_488:
            if (v10) {
              BOOL v257 = (v10 & 7) == 4;
            }
            else {
              BOOL v257 = 1;
            }
            if (v257)
            {
              if (!v9) {
                return 0;
              }
              a3[10].i32[0] = v10 - 1;
              return v9;
            }
            if (*v7)
            {
              v258 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              v258 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              int v9 = *(char **)v261;
            }
            double result = (char *)sub_1885AC0(v10, v258, v9, a3);
          }
LABEL_197:
          *(void *)v261 = result;
          if (!result) {
            return result;
          }
LABEL_198:
          int v106 = sub_11947B8((uint64_t)a3, (char **)v261, a3[11].i32[1]);
          double result = *(char **)v261;
          if (v106) {
            return result;
          }
          break;
        case 0x40u:
          if ((_BYTE)v10) {
            goto LABEL_488;
          }
          *(_DWORD *)(a1 + 20) |= 0x80000u;
          v169 = v9 + 1;
          uint64_t v170 = *v9;
          if ((*v9 & 0x80000000) == 0) {
            goto LABEL_317;
          }
          int v171 = *v169;
          uint64_t v170 = v170 + (v171 << 7) - 128;
          if (v171 < 0)
          {
            double result = (char *)sub_188C138((uint64_t)v9, v170);
            *(void *)v261 = result;
            *(unsigned char *)(a1 + 253) = v246 != 0;
            if (!result) {
              return result;
            }
          }
          else
          {
            v169 = v9 + 2;
LABEL_317:
            *(void *)v261 = v169;
            *(unsigned char *)(a1 + 253) = v170 != 0;
          }
          goto LABEL_198;
        case 0x64u:
          if (v10 != 32) {
            goto LABEL_488;
          }
          *(_DWORD *)(a1 + 20) |= 0x100000u;
          uint64_t v172 = v9 + 1;
          uint64_t v173 = *v9;
          if ((*v9 & 0x80000000) == 0) {
            goto LABEL_322;
          }
          int v174 = *v172;
          uint64_t v173 = v173 + (v174 << 7) - 128;
          if (v174 < 0)
          {
            double result = (char *)sub_188C138((uint64_t)v9, v173);
            *(void *)v261 = result;
            *(unsigned char *)(a1 + 254) = v247 != 0;
            if (!result) {
              return result;
            }
          }
          else
          {
            uint64_t v172 = v9 + 2;
LABEL_322:
            *(void *)v261 = v172;
            *(unsigned char *)(a1 + 254) = v173 != 0;
          }
          goto LABEL_198;
        default:
          goto LABEL_488;
      }
    }
  }
  return result;
}

BOOL sub_145C85C(int a1)
{
  return (a1 - 1) < 3;
}

char *sub_145C86C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  double result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    double result = sub_14591D8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_145C8FC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_15BF1D4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_145C98C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_15BEA04(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_145CA1C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_15C060C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_145CAAC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_14597A8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_145CB3C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1459CB4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_145CBCC(uint64_t a1, char *__dst, void *a3)
{
  unint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    unint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 104) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_4;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  unint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 112) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) != 0) {
LABEL_4:
  }
    unint64_t v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 120) & 0xFFFFFFFFFFFFFFFELL), v4);
LABEL_5:
  if ((*(unsigned char *)(a1 + 22) & 0x40) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v7 = *(int *)(a1 + 260);
    char *v4 = 32;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v10 = *(_DWORD *)(a1 + 16);
  if ((v10 & 0x4000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v11 = *(unsigned char *)(a1 + 216);
    char *v4 = 40;
    v4[1] = v11;
    v4 += 2;
  }
  uint64_t v12 = *(unsigned int *)(a1 + 40);
  if ((int)v12 >= 1)
  {
    uint64_t v13 = 0;
    uint64_t v14 = 8 * v12;
    do
    {
      int v15 = *(void **)(*(void *)(a1 + 48) + v13 + 8);
      if (*((char *)v15 + 23) < 0)
      {
        int64_t v16 = v15[1];
        if (v16 > 127) {
          goto LABEL_30;
        }
      }
      else
      {
        int64_t v16 = *((unsigned __int8 *)v15 + 23);
      }
      if (*a3 - (void)v4 + 14 >= v16)
      {
        char *v4 = 50;
        v4[1] = v16;
        if (*((char *)v15 + 23) < 0) {
          int v15 = (void *)*v15;
        }
        uint64_t v17 = v4 + 2;
        memcpy(v17, v15, v16);
        unint64_t v4 = &v17[v16];
        goto LABEL_28;
      }
LABEL_30:
      unint64_t v4 = (char *)sub_188A868(a3, 6, (uint64_t)v15, v4);
LABEL_28:
      v13 += 8;
    }
    while (v14 != v13);
  }
  if ((v10 & 8) != 0) {
    unint64_t v4 = sub_117A0AC(a3, 7, (const void **)(*(void *)(a1 + 128) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  int v18 = *(_DWORD *)(a1 + 20);
  if ((v18 & 0x800000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v19 = *(_DWORD *)(a1 + 264);
    char *v4 = 64;
    v4[1] = v19;
    if (v19 > 0x7F)
    {
      v4[1] = v19 | 0x80;
      unsigned int v20 = v19 >> 7;
      v4[2] = v19 >> 7;
      v4 += 3;
      if (v19 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v21 = v20 >> 14;
          v20 >>= 7;
          *v4++ = v20;
        }
        while (v21);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v18 & 0x1000000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v22 = *(int *)(a1 + 268);
    char *v4 = 72;
    v4[1] = v22;
    if (v22 > 0x7F)
    {
      v4[1] = v22 | 0x80;
      unint64_t v23 = v22 >> 7;
      v4[2] = v22 >> 7;
      v4 += 3;
      if (v22 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v24 = v23 >> 14;
          v23 >>= 7;
          *v4++ = v23;
        }
        while (v24);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v18 & 0x2000000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v25 = *(int *)(a1 + 272);
    char *v4 = 80;
    v4[1] = v25;
    if (v25 > 0x7F)
    {
      v4[1] = v25 | 0x80;
      unint64_t v26 = v25 >> 7;
      v4[2] = v25 >> 7;
      v4 += 3;
      if (v25 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v27 = v26 >> 14;
          v26 >>= 7;
          *v4++ = v26;
        }
        while (v27);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v28 = *(_DWORD *)(a1 + 16);
  if ((v28 & 0x10) != 0)
  {
    unint64_t v4 = sub_117A0AC(a3, 11, (const void **)(*(void *)(a1 + 136) & 0xFFFFFFFFFFFFFFFELL), v4);
    if ((v28 & 0x10000) == 0)
    {
LABEL_56:
      if ((v28 & 0x20000) == 0) {
        goto LABEL_65;
      }
      goto LABEL_62;
    }
  }
  else if ((v28 & 0x10000) == 0)
  {
    goto LABEL_56;
  }
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v29 = *(unsigned char *)(a1 + 218);
  char *v4 = 96;
  v4[1] = v29;
  v4 += 2;
  if ((v28 & 0x20000) != 0)
  {
LABEL_62:
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v30 = *(unsigned char *)(a1 + 219);
    char *v4 = 104;
    v4[1] = v30;
    v4 += 2;
  }
LABEL_65:
  if ((*(unsigned char *)(a1 + 23) & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v31 = *(int *)(a1 + 276);
    char *v4 = 112;
    v4[1] = v31;
    if (v31 > 0x7F)
    {
      v4[1] = v31 | 0x80;
      unint64_t v32 = v31 >> 7;
      v4[2] = v31 >> 7;
      v4 += 3;
      if (v31 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v33 = v32 >> 14;
          v32 >>= 7;
          *v4++ = v32;
        }
        while (v33);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v34 = *(_DWORD *)(a1 + 16);
  if ((v34 & 0x100) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v35 = *(void *)(a1 + 168);
    *(_WORD *)unint64_t v4 = 386;
    unsigned int v36 = *(_DWORD *)(v35 + 20);
    v4[2] = v36;
    if (v36 > 0x7F) {
      int v37 = sub_188A9CC(v36, v4 + 2);
    }
    else {
      int v37 = v4 + 3;
    }
    unint64_t v4 = sub_145945C(v35, (unint64_t)v37, a3);
    if ((v34 & 0x40000) == 0)
    {
LABEL_74:
      if ((v34 & 0x80000) == 0) {
        goto LABEL_75;
      }
      goto LABEL_92;
    }
  }
  else if ((v34 & 0x40000) == 0)
  {
    goto LABEL_74;
  }
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v38 = *(unsigned char *)(a1 + 220);
  *(_WORD *)unint64_t v4 = 392;
  v4[2] = v38;
  v4 += 3;
  if ((v34 & 0x80000) == 0)
  {
LABEL_75:
    if ((v34 & 0x20) == 0) {
      goto LABEL_76;
    }
    goto LABEL_95;
  }
LABEL_92:
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v39 = *(unsigned char *)(a1 + 221);
  *(_WORD *)unint64_t v4 = 400;
  v4[2] = v39;
  v4 += 3;
  if ((v34 & 0x20) == 0)
  {
LABEL_76:
    if ((v34 & 0x100000) == 0) {
      goto LABEL_77;
    }
    goto LABEL_96;
  }
LABEL_95:
  unint64_t v4 = sub_117A0AC(a3, 19, (const void **)(*(void *)(a1 + 144) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v34 & 0x100000) == 0)
  {
LABEL_77:
    if ((v34 & 0x200000) == 0) {
      goto LABEL_78;
    }
    goto LABEL_99;
  }
LABEL_96:
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v40 = *(unsigned char *)(a1 + 222);
  *(_WORD *)unint64_t v4 = 416;
  v4[2] = v40;
  v4 += 3;
  if ((v34 & 0x200000) == 0)
  {
LABEL_78:
    if ((v34 & 0x400000) == 0) {
      goto LABEL_79;
    }
    goto LABEL_102;
  }
LABEL_99:
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v41 = *(unsigned char *)(a1 + 223);
  *(_WORD *)unint64_t v4 = 424;
  v4[2] = v41;
  v4 += 3;
  if ((v34 & 0x400000) == 0)
  {
LABEL_79:
    if ((v34 & 0x8000) == 0) {
      goto LABEL_80;
    }
    goto LABEL_105;
  }
LABEL_102:
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v42 = *(unsigned char *)(a1 + 224);
  *(_WORD *)unint64_t v4 = 432;
  v4[2] = v42;
  v4 += 3;
  if ((v34 & 0x8000) == 0)
  {
LABEL_80:
    if ((v34 & 0x200) == 0) {
      goto LABEL_81;
    }
    goto LABEL_108;
  }
LABEL_105:
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v43 = *(unsigned char *)(a1 + 217);
  *(_WORD *)unint64_t v4 = 440;
  v4[2] = v43;
  v4 += 3;
  if ((v34 & 0x200) == 0)
  {
LABEL_81:
    if ((v34 & 0x400) == 0) {
      goto LABEL_120;
    }
    goto LABEL_114;
  }
LABEL_108:
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v44 = *(void *)(a1 + 176);
  *(_WORD *)unint64_t v4 = 450;
  unsigned int v45 = *(_DWORD *)(v44 + 44);
  v4[2] = v45;
  if (v45 > 0x7F) {
    uint64_t v46 = sub_188A9CC(v45, v4 + 2);
  }
  else {
    uint64_t v46 = v4 + 3;
  }
  unint64_t v4 = sub_15BF3F8(v44, v46, a3);
  if ((v34 & 0x400) != 0)
  {
LABEL_114:
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v47 = *(void *)(a1 + 184);
    *(_WORD *)unint64_t v4 = 458;
    unsigned int v48 = *(_DWORD *)(v47 + 44);
    v4[2] = v48;
    if (v48 > 0x7F) {
      int v49 = sub_188A9CC(v48, v4 + 2);
    }
    else {
      int v49 = v4 + 3;
    }
    unint64_t v4 = sub_15BEBF4(v47, v49, a3);
  }
LABEL_120:
  if ((*(unsigned char *)(a1 + 23) & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v50 = *(_DWORD *)(a1 + 280);
    *(_WORD *)unint64_t v4 = 464;
    v4[2] = v50;
    if (v50 > 0x7F)
    {
      v4[2] = v50 | 0x80;
      unsigned int v51 = v50 >> 7;
      v4[3] = v50 >> 7;
      v4 += 4;
      if (v50 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v52 = v51 >> 14;
          v51 >>= 7;
          *v4++ = v51;
        }
        while (v52);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  uint64_t v53 = *(unsigned int *)(a1 + 56);
  if ((int)v53 >= 1)
  {
    for (uint64_t i = 0; i != v53; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v55 = *(int *)(*(void *)(a1 + 64) + 4 * i);
      *(_WORD *)unint64_t v4 = 472;
      v4[2] = v55;
      if (v55 > 0x7F)
      {
        v4[2] = v55 | 0x80;
        unint64_t v56 = v55 >> 7;
        v4[3] = v55 >> 7;
        v4 += 4;
        if (v55 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v57 = v56 >> 14;
            v56 >>= 7;
            *v4++ = v56;
          }
          while (v57);
        }
      }
      else
      {
        v4 += 3;
      }
    }
  }
  int v58 = *(_DWORD *)(a1 + 16);
  if ((v58 & 0x800000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v59 = *(unsigned char *)(a1 + 225);
    *(_WORD *)unint64_t v4 = 480;
    v4[2] = v59;
    v4 += 3;
    if ((v58 & 0x1000000) == 0)
    {
LABEL_138:
      if ((v58 & 0x2000000) == 0) {
        goto LABEL_139;
      }
      goto LABEL_155;
    }
  }
  else if ((v58 & 0x1000000) == 0)
  {
    goto LABEL_138;
  }
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v60 = *(unsigned char *)(a1 + 226);
  *(_WORD *)unint64_t v4 = 488;
  v4[2] = v60;
  v4 += 3;
  if ((v58 & 0x2000000) == 0)
  {
LABEL_139:
    if ((v58 & 0x800) == 0) {
      goto LABEL_140;
    }
    goto LABEL_158;
  }
LABEL_155:
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v61 = *(unsigned char *)(a1 + 227);
  *(_WORD *)unint64_t v4 = 496;
  v4[2] = v61;
  v4 += 3;
  if ((v58 & 0x800) == 0)
  {
LABEL_140:
    if ((v58 & 0x40) == 0) {
      goto LABEL_141;
    }
    goto LABEL_164;
  }
LABEL_158:
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v62 = *(void *)(a1 + 192);
  *(_WORD *)unint64_t v4 = 506;
  unsigned int v63 = *(_DWORD *)(v62 + 20);
  v4[2] = v63;
  if (v63 > 0x7F) {
    uint64_t v64 = sub_188A9CC(v63, v4 + 2);
  }
  else {
    uint64_t v64 = v4 + 3;
  }
  unint64_t v4 = sub_15C08F4(v62, v64, a3);
  if ((v58 & 0x40) == 0)
  {
LABEL_141:
    if ((v58 & 0x4000000) == 0) {
      goto LABEL_142;
    }
    goto LABEL_165;
  }
LABEL_164:
  unint64_t v4 = sub_117A0AC(a3, 32, (const void **)(*(void *)(a1 + 152) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v58 & 0x4000000) == 0)
  {
LABEL_142:
    if ((v58 & 0x8000000) == 0) {
      goto LABEL_143;
    }
    goto LABEL_168;
  }
LABEL_165:
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v65 = *(unsigned char *)(a1 + 228);
  *(_WORD *)unint64_t v4 = 648;
  v4[2] = v65;
  v4 += 3;
  if ((v58 & 0x8000000) == 0)
  {
LABEL_143:
    if ((v58 & 0x10000000) == 0) {
      goto LABEL_144;
    }
    goto LABEL_171;
  }
LABEL_168:
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v66 = *(unsigned char *)(a1 + 229);
  *(_WORD *)unint64_t v4 = 656;
  v4[2] = v66;
  v4 += 3;
  if ((v58 & 0x10000000) == 0)
  {
LABEL_144:
    if ((v58 & 0x20000000) == 0) {
      goto LABEL_145;
    }
    goto LABEL_174;
  }
LABEL_171:
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v67 = *(unsigned char *)(a1 + 230);
  *(_WORD *)unint64_t v4 = 664;
  v4[2] = v67;
  v4 += 3;
  if ((v58 & 0x20000000) == 0)
  {
LABEL_145:
    if ((v58 & 0x40000000) == 0) {
      goto LABEL_146;
    }
    goto LABEL_177;
  }
LABEL_174:
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v68 = *(unsigned char *)(a1 + 231);
  *(_WORD *)unint64_t v4 = 672;
  v4[2] = v68;
  v4 += 3;
  if ((v58 & 0x40000000) == 0)
  {
LABEL_146:
    if ((v58 & 0x80) == 0) {
      goto LABEL_147;
    }
LABEL_180:
    unint64_t v4 = sub_117A0AC(a3, 38, (const void **)(*(void *)(a1 + 160) & 0xFFFFFFFFFFFFFFFELL), v4);
    if ((v58 & 0x80000000) == 0) {
      goto LABEL_184;
    }
    goto LABEL_181;
  }
LABEL_177:
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v69 = *(unsigned char *)(a1 + 232);
  *(_WORD *)unint64_t v4 = 680;
  v4[2] = v69;
  v4 += 3;
  if ((v58 & 0x80) != 0) {
    goto LABEL_180;
  }
LABEL_147:
  if ((v58 & 0x80000000) == 0) {
    goto LABEL_184;
  }
LABEL_181:
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v70 = *(unsigned char *)(a1 + 233);
  *(_WORD *)unint64_t v4 = 696;
  v4[2] = v70;
  v4 += 3;
LABEL_184:
  if (*(unsigned char *)(a1 + 20))
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v71 = *(unsigned char *)(a1 + 234);
    *(_WORD *)unint64_t v4 = 704;
    v4[2] = v71;
    v4 += 3;
  }
  if ((*(unsigned char *)(a1 + 17) & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v72 = *(void *)(a1 + 200);
    *(_WORD *)unint64_t v4 = 714;
    unsigned int v73 = *(_DWORD *)(v72 + 20);
    v4[2] = v73;
    if (v73 > 0x7F) {
      uint64_t v74 = sub_188A9CC(v73, v4 + 2);
    }
    else {
      uint64_t v74 = v4 + 3;
    }
    unint64_t v4 = sub_14599B8(v72, (unint64_t)v74, a3);
  }
  int v75 = *(_DWORD *)(a1 + 20);
  if ((v75 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v76 = *(unsigned char *)(a1 + 235);
    *(_WORD *)unint64_t v4 = 720;
    v4[2] = v76;
    v4 += 3;
    if ((v75 & 4) == 0)
    {
LABEL_197:
      if ((v75 & 8) == 0) {
        goto LABEL_198;
      }
      goto LABEL_212;
    }
  }
  else if ((v75 & 4) == 0)
  {
    goto LABEL_197;
  }
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v77 = *(unsigned char *)(a1 + 236);
  *(_WORD *)unint64_t v4 = 728;
  v4[2] = v77;
  v4 += 3;
  if ((v75 & 8) == 0)
  {
LABEL_198:
    if ((v75 & 0x10) == 0) {
      goto LABEL_199;
    }
    goto LABEL_215;
  }
LABEL_212:
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v78 = *(unsigned char *)(a1 + 237);
  *(_WORD *)unint64_t v4 = 736;
  v4[2] = v78;
  v4 += 3;
  if ((v75 & 0x10) == 0)
  {
LABEL_199:
    if ((v75 & 0x20) == 0) {
      goto LABEL_200;
    }
    goto LABEL_218;
  }
LABEL_215:
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v79 = *(unsigned char *)(a1 + 238);
  *(_WORD *)unint64_t v4 = 744;
  v4[2] = v79;
  v4 += 3;
  if ((v75 & 0x20) == 0)
  {
LABEL_200:
    if ((v75 & 0x40) == 0) {
      goto LABEL_201;
    }
    goto LABEL_221;
  }
LABEL_218:
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v80 = *(unsigned char *)(a1 + 239);
  *(_WORD *)unint64_t v4 = 752;
  v4[2] = v80;
  v4 += 3;
  if ((v75 & 0x40) == 0)
  {
LABEL_201:
    if ((v75 & 0x80) == 0) {
      goto LABEL_202;
    }
    goto LABEL_224;
  }
LABEL_221:
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v81 = *(unsigned char *)(a1 + 240);
  *(_WORD *)unint64_t v4 = 760;
  v4[2] = v81;
  v4 += 3;
  if ((v75 & 0x80) == 0)
  {
LABEL_202:
    if ((v75 & 0x100) == 0) {
      goto LABEL_203;
    }
    goto LABEL_227;
  }
LABEL_224:
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v82 = *(unsigned char *)(a1 + 241);
  *(_WORD *)unint64_t v4 = 896;
  v4[2] = v82;
  v4 += 3;
  if ((v75 & 0x100) == 0)
  {
LABEL_203:
    if ((v75 & 0x200) == 0) {
      goto LABEL_204;
    }
    goto LABEL_230;
  }
LABEL_227:
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v83 = *(unsigned char *)(a1 + 242);
  *(_WORD *)unint64_t v4 = 904;
  v4[2] = v83;
  v4 += 3;
  if ((v75 & 0x200) == 0)
  {
LABEL_204:
    if ((v75 & 0x400) == 0) {
      goto LABEL_236;
    }
    goto LABEL_233;
  }
LABEL_230:
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v84 = *(unsigned char *)(a1 + 243);
  *(_WORD *)unint64_t v4 = 912;
  v4[2] = v84;
  v4 += 3;
  if ((v75 & 0x400) != 0)
  {
LABEL_233:
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v85 = *(unsigned char *)(a1 + 244);
    *(_WORD *)unint64_t v4 = 920;
    v4[2] = v85;
    v4 += 3;
  }
LABEL_236:
  uint64_t v86 = *(unsigned int *)(a1 + 72);
  if ((int)v86 >= 1)
  {
    for (uint64_t j = 0; j != v86; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v88 = *(int *)(*(void *)(a1 + 80) + 4 * j);
      *(_WORD *)unint64_t v4 = 928;
      v4[2] = v88;
      if (v88 > 0x7F)
      {
        v4[2] = v88 | 0x80;
        unint64_t v89 = v88 >> 7;
        v4[3] = v88 >> 7;
        v4 += 4;
        if (v88 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v90 = v89 >> 14;
            v89 >>= 7;
            *v4++ = v89;
          }
          while (v90);
        }
      }
      else
      {
        v4 += 3;
      }
    }
  }
  if ((v75 & 0x800) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v91 = *(unsigned char *)(a1 + 245);
    *(_WORD *)unint64_t v4 = 936;
    v4[2] = v91;
    v4 += 3;
  }
  if ((*(unsigned char *)(a1 + 17) & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v92 = *(void *)(a1 + 208);
    *(_WORD *)unint64_t v4 = 946;
    unsigned int v93 = *(_DWORD *)(v92 + 20);
    v4[2] = v93;
    if (v93 > 0x7F) {
      uint64_t v94 = sub_188A9CC(v93, v4 + 2);
    }
    else {
      uint64_t v94 = v4 + 3;
    }
    unint64_t v4 = sub_1459E44(v92, (unint64_t)v94, a3);
  }
  int v95 = *(_DWORD *)(a1 + 20);
  if ((v95 & 0x200000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v96 = *(int *)(a1 + 256);
    *(_WORD *)unint64_t v4 = 952;
    v4[2] = v96;
    if (v96 > 0x7F)
    {
      v4[2] = v96 | 0x80;
      unint64_t v97 = v96 >> 7;
      v4[3] = v96 >> 7;
      v4 += 4;
      if (v96 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v98 = v97 >> 14;
          v97 >>= 7;
          *v4++ = v97;
        }
        while (v98);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if ((v95 & 0x1000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v99 = *(unsigned char *)(a1 + 246);
    *(_WORD *)unint64_t v4 = 960;
    v4[2] = v99;
    v4 += 3;
    if ((v95 & 0x2000) == 0)
    {
LABEL_265:
      if ((v95 & 0x4000) == 0) {
        goto LABEL_266;
      }
      goto LABEL_277;
    }
  }
  else if ((v95 & 0x2000) == 0)
  {
    goto LABEL_265;
  }
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v100 = *(unsigned char *)(a1 + 247);
  *(_WORD *)unint64_t v4 = 968;
  v4[2] = v100;
  v4 += 3;
  if ((v95 & 0x4000) == 0)
  {
LABEL_266:
    if ((v95 & 0x8000) == 0) {
      goto LABEL_267;
    }
    goto LABEL_280;
  }
LABEL_277:
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v101 = *(unsigned char *)(a1 + 248);
  *(_WORD *)unint64_t v4 = 976;
  v4[2] = v101;
  v4 += 3;
  if ((v95 & 0x8000) == 0)
  {
LABEL_267:
    if ((v95 & 0x10000) == 0) {
      goto LABEL_268;
    }
    goto LABEL_283;
  }
LABEL_280:
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v102 = *(unsigned char *)(a1 + 249);
  *(_WORD *)unint64_t v4 = 984;
  v4[2] = v102;
  v4 += 3;
  if ((v95 & 0x10000) == 0)
  {
LABEL_268:
    if ((v95 & 0x20000) == 0) {
      goto LABEL_269;
    }
    goto LABEL_286;
  }
LABEL_283:
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v103 = *(unsigned char *)(a1 + 250);
  *(_WORD *)unint64_t v4 = 992;
  v4[2] = v103;
  v4 += 3;
  if ((v95 & 0x20000) == 0)
  {
LABEL_269:
    if ((v95 & 0x40000) == 0) {
      goto LABEL_292;
    }
    goto LABEL_289;
  }
LABEL_286:
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v104 = *(unsigned char *)(a1 + 251);
  *(_WORD *)unint64_t v4 = 1000;
  v4[2] = v104;
  v4 += 3;
  if ((v95 & 0x40000) != 0)
  {
LABEL_289:
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v105 = *(unsigned char *)(a1 + 252);
    *(_WORD *)unint64_t v4 = 1008;
    v4[2] = v105;
    v4 += 3;
  }
LABEL_292:
  uint64_t v106 = *(unsigned int *)(a1 + 88);
  if ((int)v106 >= 1)
  {
    for (uint64_t k = 0; k != v106; ++k)
    {
      if (*a3 <= (unint64_t)v4) {
        unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v108 = *(int *)(*(void *)(a1 + 96) + 4 * k);
      *(_WORD *)unint64_t v4 = 1016;
      v4[2] = v108;
      if (v108 > 0x7F)
      {
        v4[2] = v108 | 0x80;
        unint64_t v109 = v108 >> 7;
        v4[3] = v108 >> 7;
        v4 += 4;
        if (v108 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v110 = v109 >> 14;
            v109 >>= 7;
            *v4++ = v109;
          }
          while (v110);
        }
      }
      else
      {
        v4 += 3;
      }
    }
  }
  if ((v95 & 0x80000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v111 = *(unsigned char *)(a1 + 253);
    *(_WORD *)unint64_t v4 = 1152;
    v4[2] = v111;
    v4 += 3;
  }
  if ((v95 & 0x100000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v112 = *(unsigned char *)(a1 + 254);
    *(_WORD *)unint64_t v4 = 1696;
    v4[2] = v112;
    v4 += 3;
  }
  uint64_t v113 = *(void *)(a1 + 8);
  if ((v113 & 1) == 0) {
    return v4;
  }
  unint64_t v115 = v113 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v115 + 31) < 0)
  {
    uint64_t v116 = *(void **)(v115 + 8);
    uint64_t v117 = *(void *)(v115 + 16);
  }
  else
  {
    uint64_t v116 = (void *)(v115 + 8);
    LODWORD(v117) = *(unsigned __int8 *)(v115 + 31);
  }
  if (*a3 - (void)v4 >= (int)v117)
  {
    uint64_t v118 = (int)v117;
    memcpy(v4, v116, (int)v117);
    v4 += v118;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v116, v117, v4);
}

uint64_t sub_145DF38(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 40);
  if ((int)v2 < 1)
  {
    uint64_t v4 = *(unsigned int *)(a1 + 40);
  }
  else
  {
    uint64_t v3 = (uint64_t *)(*(void *)(a1 + 48) + 8);
    uint64_t v4 = *(unsigned int *)(a1 + 40);
    do
    {
      uint64_t v5 = *v3++;
      uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
      uint64_t v7 = *(void *)(v5 + 8);
      if ((v6 & 0x80u) == 0) {
        uint64_t v7 = v6;
      }
      v4 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      --v2;
    }
    while (v2);
  }
  uint64_t v8 = *(unsigned int *)(a1 + 56);
  if (v8)
  {
    int v9 = 0;
    uint64_t v10 = 0;
    do
    {
      int v11 = *(_DWORD *)(*(void *)(a1 + 64) + 4 * v9);
      if (v11 < 0) {
        uint64_t v12 = 10;
      }
      else {
        uint64_t v12 = (9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6;
      }
      v10 += v12;
      ++v9;
    }
    while (v8 != v9);
  }
  else
  {
    uint64_t v10 = 0;
  }
  uint64_t v13 = *(unsigned int *)(a1 + 72);
  if (v13)
  {
    int v14 = 0;
    uint64_t v15 = 0;
    do
    {
      int v16 = *(_DWORD *)(*(void *)(a1 + 80) + 4 * v14);
      if (v16 < 0) {
        uint64_t v17 = 10;
      }
      else {
        uint64_t v17 = (9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6;
      }
      v15 += v17;
      ++v14;
    }
    while (v13 != v14);
  }
  else
  {
    uint64_t v15 = 0;
  }
  uint64_t v18 = *(unsigned int *)(a1 + 88);
  if (v18)
  {
    int v19 = 0;
    uint64_t v20 = 0;
    do
    {
      int v21 = *(_DWORD *)(*(void *)(a1 + 96) + 4 * v19);
      if (v21 < 0) {
        uint64_t v22 = 10;
      }
      else {
        uint64_t v22 = (9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6;
      }
      v20 += v22;
      ++v19;
    }
    while (v18 != v19);
  }
  else
  {
    uint64_t v20 = 0;
  }
  uint64_t v23 = v10 + v4 + v15 + 2 * (v13 + v8 + v18) + v20;
  int v24 = *(_DWORD *)(a1 + 16);
  if (!(_BYTE)v24) {
    goto LABEL_44;
  }
  if (v24)
  {
    unint64_t v28 = *(void *)(a1 + 104) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v29 = *(unsigned __int8 *)(v28 + 23);
    uint64_t v30 = *(void *)(v28 + 8);
    if ((v29 & 0x80u) == 0) {
      uint64_t v30 = v29;
    }
    v23 += v30 + ((9 * (__clz(v30 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v24 & 2) == 0)
    {
LABEL_35:
      if ((v24 & 4) == 0) {
        goto LABEL_36;
      }
      goto LABEL_58;
    }
  }
  else if ((v24 & 2) == 0)
  {
    goto LABEL_35;
  }
  unint64_t v31 = *(void *)(a1 + 112) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v32 = *(unsigned __int8 *)(v31 + 23);
  uint64_t v33 = *(void *)(v31 + 8);
  if ((v32 & 0x80u) == 0) {
    uint64_t v33 = v32;
  }
  v23 += v33 + ((9 * (__clz(v33 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v24 & 4) == 0)
  {
LABEL_36:
    if ((v24 & 8) == 0) {
      goto LABEL_37;
    }
    goto LABEL_61;
  }
LABEL_58:
  unint64_t v34 = *(void *)(a1 + 120) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v35 = *(unsigned __int8 *)(v34 + 23);
  uint64_t v36 = *(void *)(v34 + 8);
  if ((v35 & 0x80u) == 0) {
    uint64_t v36 = v35;
  }
  v23 += v36 + ((9 * (__clz(v36 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v24 & 8) == 0)
  {
LABEL_37:
    if ((v24 & 0x10) == 0) {
      goto LABEL_38;
    }
    goto LABEL_64;
  }
LABEL_61:
  unint64_t v37 = *(void *)(a1 + 128) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v38 = *(unsigned __int8 *)(v37 + 23);
  uint64_t v39 = *(void *)(v37 + 8);
  if ((v38 & 0x80u) == 0) {
    uint64_t v39 = v38;
  }
  v23 += v39 + ((9 * (__clz(v39 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v24 & 0x10) == 0)
  {
LABEL_38:
    if ((v24 & 0x20) == 0) {
      goto LABEL_39;
    }
LABEL_67:
    unint64_t v43 = *(void *)(a1 + 144) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v44 = *(unsigned __int8 *)(v43 + 23);
    uint64_t v45 = *(void *)(v43 + 8);
    if ((v44 & 0x80u) == 0) {
      uint64_t v45 = v44;
    }
    v23 += v45 + ((9 * (__clz(v45 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v24 & 0x40) == 0)
    {
LABEL_40:
      if ((v24 & 0x80) == 0) {
        goto LABEL_44;
      }
      goto LABEL_41;
    }
    goto LABEL_70;
  }
LABEL_64:
  unint64_t v40 = *(void *)(a1 + 136) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v41 = *(unsigned __int8 *)(v40 + 23);
  uint64_t v42 = *(void *)(v40 + 8);
  if ((v41 & 0x80u) == 0) {
    uint64_t v42 = v41;
  }
  v23 += v42 + ((9 * (__clz(v42 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v24 & 0x20) != 0) {
    goto LABEL_67;
  }
LABEL_39:
  if ((v24 & 0x40) == 0) {
    goto LABEL_40;
  }
LABEL_70:
  unint64_t v46 = *(void *)(a1 + 152) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v47 = *(unsigned __int8 *)(v46 + 23);
  uint64_t v48 = *(void *)(v46 + 8);
  if ((v47 & 0x80u) == 0) {
    uint64_t v48 = v47;
  }
  v23 += v48 + ((9 * (__clz(v48 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v24 & 0x80) != 0)
  {
LABEL_41:
    unint64_t v25 = *(void *)(a1 + 160) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v26 = *(unsigned __int8 *)(v25 + 23);
    uint64_t v27 = *(void *)(v25 + 8);
    if ((v26 & 0x80u) == 0) {
      uint64_t v27 = v26;
    }
    v23 += v27 + ((9 * (__clz(v27 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
LABEL_44:
  if ((v24 & 0xFF00) == 0) {
    goto LABEL_86;
  }
  if ((v24 & 0x100) != 0)
  {
    uint64_t v49 = sub_14595BC(*(void *)(a1 + 168));
    v23 += v49 + ((9 * (__clz(v49 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v24 & 0x200) == 0)
    {
LABEL_47:
      if ((v24 & 0x400) == 0) {
        goto LABEL_48;
      }
      goto LABEL_76;
    }
  }
  else if ((v24 & 0x200) == 0)
  {
    goto LABEL_47;
  }
  uint64_t v50 = sub_15BF564(*(void *)(a1 + 176));
  v23 += v50 + ((9 * (__clz(v50 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v24 & 0x400) == 0)
  {
LABEL_48:
    if ((v24 & 0x800) == 0) {
      goto LABEL_49;
    }
    goto LABEL_77;
  }
LABEL_76:
  uint64_t v51 = sub_15BED78(*(void *)(a1 + 184));
  v23 += v51 + ((9 * (__clz(v51 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v24 & 0x800) == 0)
  {
LABEL_49:
    if ((v24 & 0x1000) == 0) {
      goto LABEL_50;
    }
    goto LABEL_78;
  }
LABEL_77:
  uint64_t v52 = sub_15C0A80(*(void *)(a1 + 192));
  v23 += v52 + ((9 * (__clz(v52 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v24 & 0x1000) == 0)
  {
LABEL_50:
    if ((v24 & 0x2000) == 0) {
      goto LABEL_81;
    }
LABEL_79:
    uint64_t v54 = *(void *)(a1 + 208);
    uint64_t v55 = 2 * (*(_DWORD *)(v54 + 16) & 1);
    uint64_t v56 = *(void *)(v54 + 8);
    if (v56)
    {
      unint64_t v80 = v56 & 0xFFFFFFFFFFFFFFFCLL;
      if (*(char *)(v80 + 31) < 0) {
        uint64_t v81 = *(void *)(v80 + 16);
      }
      else {
        uint64_t v81 = *(unsigned __int8 *)(v80 + 31);
      }
      v55 += v81;
    }
    *(_DWORD *)(v54 + 20) = v55;
    v23 += v55 + ((9 * (__clz(v55 | 1) ^ 0x1F) + 73) >> 6) + 2;
    goto LABEL_81;
  }
LABEL_78:
  uint64_t v53 = sub_1459AD4(*(void *)(a1 + 200));
  v23 += v53 + ((9 * (__clz(v53 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v24 & 0x2000) != 0) {
    goto LABEL_79;
  }
LABEL_81:
  uint64_t v57 = v23 + 2;
  if ((v24 & 0x4000) == 0) {
    uint64_t v57 = v23;
  }
  if ((v24 & 0x8000) != 0) {
    uint64_t v23 = v57 + 3;
  }
  else {
    uint64_t v23 = v57;
  }
LABEL_86:
  if ((v24 & 0xFF0000) != 0)
  {
    uint64_t v58 = v23 + 2;
    if ((v24 & 0x10000) == 0) {
      uint64_t v58 = v23;
    }
    if ((v24 & 0x20000) != 0) {
      v58 += 2;
    }
    if ((v24 & 0x40000) != 0) {
      v58 += 3;
    }
    if ((v24 & 0x80000) != 0) {
      v58 += 3;
    }
    if ((v24 & 0x100000) != 0) {
      v58 += 3;
    }
    if ((v24 & 0x200000) != 0) {
      v58 += 3;
    }
    if ((v24 & 0x400000) != 0) {
      v58 += 3;
    }
    if ((v24 & 0x800000) != 0) {
      uint64_t v23 = v58 + 3;
    }
    else {
      uint64_t v23 = v58;
    }
  }
  if (HIBYTE(v24))
  {
    uint64_t v59 = v23 + 3;
    if ((v24 & 0x1000000) == 0) {
      uint64_t v59 = v23;
    }
    if ((v24 & 0x2000000) != 0) {
      v59 += 3;
    }
    if ((v24 & 0x4000000) != 0) {
      v59 += 3;
    }
    if ((v24 & 0x8000000) != 0) {
      v59 += 3;
    }
    if ((v24 & 0x10000000) != 0) {
      v59 += 3;
    }
    if ((v24 & 0x20000000) != 0) {
      v59 += 3;
    }
    if ((v24 & 0x40000000) != 0) {
      v59 += 3;
    }
    if (v24 >= 0) {
      uint64_t v23 = v59;
    }
    else {
      uint64_t v23 = v59 + 3;
    }
  }
  int v60 = *(_DWORD *)(a1 + 20);
  if ((_BYTE)v60)
  {
    uint64_t v61 = v23 + 3;
    if ((v60 & 1) == 0) {
      uint64_t v61 = v23;
    }
    if ((v60 & 2) != 0) {
      v61 += 3;
    }
    if ((v60 & 4) != 0) {
      v61 += 3;
    }
    if ((v60 & 8) != 0) {
      v61 += 3;
    }
    if ((v60 & 0x10) != 0) {
      v61 += 3;
    }
    if ((v60 & 0x20) != 0) {
      v61 += 3;
    }
    if ((v60 & 0x40) != 0) {
      v61 += 3;
    }
    if ((v60 & 0x80) != 0) {
      uint64_t v23 = v61 + 3;
    }
    else {
      uint64_t v23 = v61;
    }
  }
  if ((v60 & 0xFF00) != 0)
  {
    uint64_t v62 = v23 + 3;
    if ((v60 & 0x100) == 0) {
      uint64_t v62 = v23;
    }
    if ((v60 & 0x200) != 0) {
      v62 += 3;
    }
    if ((v60 & 0x400) != 0) {
      v62 += 3;
    }
    if ((v60 & 0x800) != 0) {
      v62 += 3;
    }
    if ((v60 & 0x1000) != 0) {
      v62 += 3;
    }
    if ((v60 & 0x2000) != 0) {
      v62 += 3;
    }
    if ((v60 & 0x4000) != 0) {
      v62 += 3;
    }
    if ((v60 & 0x8000) != 0) {
      uint64_t v23 = v62 + 3;
    }
    else {
      uint64_t v23 = v62;
    }
  }
  if ((v60 & 0xFF0000) != 0)
  {
    uint64_t v63 = v23 + 3;
    if ((v60 & 0x10000) == 0) {
      uint64_t v63 = v23;
    }
    if ((v60 & 0x20000) != 0) {
      v63 += 3;
    }
    if ((v60 & 0x40000) != 0) {
      v63 += 3;
    }
    if ((v60 & 0x80000) != 0) {
      v63 += 3;
    }
    if ((v60 & 0x100000) != 0) {
      uint64_t v23 = v63 + 3;
    }
    else {
      uint64_t v23 = v63;
    }
    if ((v60 & 0x200000) != 0)
    {
      int v66 = *(_DWORD *)(a1 + 256);
      uint64_t v67 = ((9 * (__clz(v66 | 1) ^ 0x1F) + 73) >> 6) + 2;
      if (v66 >= 0) {
        uint64_t v68 = v67;
      }
      else {
        uint64_t v68 = 12;
      }
      v23 += v68;
      if ((v60 & 0x400000) == 0)
      {
LABEL_172:
        if ((v60 & 0x800000) == 0) {
          goto LABEL_174;
        }
        goto LABEL_173;
      }
    }
    else if ((v60 & 0x400000) == 0)
    {
      goto LABEL_172;
    }
    int v69 = *(_DWORD *)(a1 + 260);
    uint64_t v70 = ((9 * (__clz(v69 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if (v69 >= 0) {
      uint64_t v71 = v70;
    }
    else {
      uint64_t v71 = 11;
    }
    v23 += v71;
    if ((v60 & 0x800000) != 0) {
LABEL_173:
    }
      v23 += ((9 * (__clz(*(_DWORD *)(a1 + 264) | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_174:
  if ((v60 & 0xF000000) == 0) {
    goto LABEL_180;
  }
  if ((v60 & 0x1000000) != 0)
  {
    int v72 = *(_DWORD *)(a1 + 268);
    if (v72 < 0) {
      uint64_t v73 = 11;
    }
    else {
      uint64_t v73 = ((9 * (__clz(v72 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v23 += v73;
    if ((v60 & 0x2000000) == 0)
    {
LABEL_177:
      if ((v60 & 0x4000000) == 0) {
        goto LABEL_178;
      }
      goto LABEL_199;
    }
  }
  else if ((v60 & 0x2000000) == 0)
  {
    goto LABEL_177;
  }
  int v74 = *(_DWORD *)(a1 + 272);
  if (v74 < 0) {
    uint64_t v75 = 11;
  }
  else {
    uint64_t v75 = ((9 * (__clz(v74 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v23 += v75;
  if ((v60 & 0x4000000) == 0)
  {
LABEL_178:
    if ((v60 & 0x8000000) == 0) {
      goto LABEL_180;
    }
    goto LABEL_179;
  }
LABEL_199:
  int v76 = *(_DWORD *)(a1 + 276);
  if (v76 < 0) {
    uint64_t v77 = 11;
  }
  else {
    uint64_t v77 = ((9 * (__clz(v76 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v23 += v77;
  if ((v60 & 0x8000000) != 0) {
LABEL_179:
  }
    v23 += ((9 * (__clz(*(_DWORD *)(a1 + 280) | 1) ^ 0x1F) + 73) >> 6) + 2;
LABEL_180:
  uint64_t v64 = *(void *)(a1 + 8);
  if (v64)
  {
    unint64_t v78 = v64 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v78 + 31) < 0) {
      uint64_t v79 = *(void *)(v78 + 16);
    }
    else {
      uint64_t v79 = *(unsigned __int8 *)(v78 + 31);
    }
    v23 += v79;
  }
  *(_DWORD *)(a1 + 24) = v23;
  return v23;
}

void *sub_145E83C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.ClientCapabilities");
}

uint64_t sub_145E84C(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  *(void *)(a1 + 8) = v4;
  *(void *)a1 = off_24B5808;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = &qword_2550250;
  *(void *)(a1 + 56) = &qword_2550250;
  *(void *)(a1 + 64) = 0;
  *(_DWORD *)(a1 + 71) = 0;
  return a1;
}

void sub_145E8C0(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_145E8F0(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (void *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = a1 + 16;
  *(void *)a1 = off_24B5808;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 44) = 0;
  uint64_t v6 = *(void *)(a2 + 8);
  if (v6) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v5, a2 + 16);
  *(void *)(a1 + 48) = &qword_2550250;
  int v7 = *(_DWORD *)(a2 + 40);
  if (v7)
  {
    uint64_t v8 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v8 = (uint64_t *)*v8;
    }
    sub_1881DF4((std::string **)(a1 + 48), (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL), v8);
    int v7 = *(_DWORD *)(a2 + 40);
  }
  *(void *)(a1 + 56) = &qword_2550250;
  if ((v7 & 2) != 0)
  {
    int v9 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      int v9 = (uint64_t *)*v9;
    }
    sub_1881DF4((std::string **)(a1 + 56), (long long *)(*(void *)(a2 + 56) & 0xFFFFFFFFFFFFFFFELL), v9);
  }
  uint64_t v10 = *(void *)(a2 + 64);
  *(_DWORD *)(a1 + 71) = *(_DWORD *)(a2 + 71);
  *(void *)(a1 + 64) = v10;
  return a1;
}

void sub_145EA00(_Unwind_Exception *a1)
{
  sub_1882CC0(v3);
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_145EA3C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_9;
    }
  }
  else if (v4)
  {
    goto LABEL_9;
  }
  uint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 56) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 56));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_9:
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_145EAFC(uint64_t a1)
{
  sub_145EA3C(a1);

  operator delete();
}

unsigned char *sub_145EB34(uint64_t a1)
{
  uint64_t result = sub_18843A4((unsigned char *)(a1 + 16));
  int v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 3) != 0)
  {
    if (v3)
    {
      unint64_t v4 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v4 + 23) < 0)
      {
        **(unsigned char **)unint64_t v4 = 0;
        *(void *)(v4 + 8) = 0;
        if ((v3 & 2) == 0) {
          goto LABEL_11;
        }
        goto LABEL_6;
      }
      *(unsigned char *)unint64_t v4 = 0;
      *(unsigned char *)(v4 + 23) = 0;
    }
    if ((v3 & 2) == 0) {
      goto LABEL_11;
    }
LABEL_6:
    unint64_t v5 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v5 + 23) < 0)
    {
      **(unsigned char **)unint64_t v5 = 0;
      *(void *)(v5 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v5 = 0;
      *(unsigned char *)(v5 + 23) = 0;
    }
  }
LABEL_11:
  if ((v3 & 0x7C) != 0)
  {
    *(_DWORD *)(a1 + 71) = 0;
    *(void *)(a1 + 64) = 0;
  }
  char v7 = *(unsigned char *)(a1 + 8);
  uint64_t v6 = a1 + 8;
  *(_DWORD *)(v6 + 32) = 0;
  if (v7)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v6);
  }
  return result;
}

uint64_t sub_145EC00(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unint64_t v46 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v46, a3[11].i32[1])) {
    goto LABEL_2;
  }
  char v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (char *)(*(void *)v46 + 1);
    unsigned int v9 = **(unsigned char **)v46;
    if ((char)**(unsigned char **)v46 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180(*(uint64_t *)v46, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (char *)(*(void *)v46 + 2);
      }
    }
    *(void *)unint64_t v46 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_51;
        }
        uint64_t v12 = v8 + 1;
        unint64_t v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        int v15 = v13 + (v14 << 7);
        unint64_t v13 = (v15 - 128);
        if (v14 < 0)
        {
          *(void *)unint64_t v46 = sub_188C138((uint64_t)v8, (v15 - 128));
          if (!*(void *)v46) {
            goto LABEL_82;
          }
          unint64_t v13 = v36;
        }
        else
        {
          uint64_t v12 = v8 + 2;
LABEL_13:
          *(void *)unint64_t v46 = v12;
        }
        if (v13 <= 2)
        {
          *(_DWORD *)(a1 + 40) |= 4u;
          *(_DWORD *)(a1 + 64) = v13;
          goto LABEL_49;
        }
        if (*v7) {
          uint64_t v44 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          uint64_t v44 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v45 = 1;
        goto LABEL_76;
      case 2u:
        if (v9 != 16) {
          goto LABEL_51;
        }
        int v16 = v8 + 1;
        unint64_t v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_20;
        }
        int v17 = *v16;
        int v18 = v13 + (v17 << 7);
        unint64_t v13 = (v18 - 128);
        if (v17 < 0)
        {
          *(void *)unint64_t v46 = sub_188C138((uint64_t)v8, (v18 - 128));
          if (!*(void *)v46) {
            goto LABEL_82;
          }
          unint64_t v13 = v37;
        }
        else
        {
          int v16 = v8 + 2;
LABEL_20:
          *(void *)unint64_t v46 = v16;
        }
        if (v13 > 6)
        {
          if (*v7) {
            uint64_t v44 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v44 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          int v45 = 2;
LABEL_76:
          sub_188C020(v45, v13, v44);
        }
        else
        {
          *(_DWORD *)(a1 + 40) |= 8u;
          *(_DWORD *)(a1 + 68) = v13;
        }
        goto LABEL_49;
      case 3u:
        if (v9 != 26) {
          goto LABEL_51;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        uint64_t v19 = *(void *)(a1 + 8);
        uint64_t v20 = (uint64_t *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
        if (v19) {
          uint64_t v20 = (uint64_t *)*v20;
        }
        int v21 = (void *)(a1 + 48);
        goto LABEL_31;
      case 4u:
        if (v9 != 34) {
          goto LABEL_51;
        }
        *(_DWORD *)(a1 + 40) |= 2u;
        uint64_t v22 = *(void *)(a1 + 8);
        uint64_t v20 = (uint64_t *)(v22 & 0xFFFFFFFFFFFFFFFCLL);
        if (v22) {
          uint64_t v20 = (uint64_t *)*v20;
        }
        int v21 = (void *)(a1 + 56);
LABEL_31:
        uint64_t v23 = (std::string *)sub_1880F84(v21, v20);
        int v24 = (void *)sub_188C244(v23, *(char **)v46, (uint64_t)a3);
        goto LABEL_32;
      case 5u:
        if (v9 != 40) {
          goto LABEL_51;
        }
        v5 |= 0x10u;
        unint64_t v25 = v8 + 1;
        uint64_t v26 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_38;
        }
        int v27 = *v25;
        uint64_t v26 = v26 + (v27 << 7) - 128;
        if (v27 < 0)
        {
          uint64_t v38 = sub_188C138((uint64_t)v8, v26);
          *(void *)unint64_t v46 = v38;
          *(unsigned char *)(a1 + 72) = v39 != 0;
          if (!v38) {
            goto LABEL_82;
          }
        }
        else
        {
          unint64_t v25 = v8 + 2;
LABEL_38:
          *(void *)unint64_t v46 = v25;
          *(unsigned char *)(a1 + 72) = v26 != 0;
        }
        goto LABEL_49;
      case 6u:
        if (v9 != 48) {
          goto LABEL_51;
        }
        v5 |= 0x20u;
        unint64_t v28 = v8 + 1;
        uint64_t v29 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_43;
        }
        int v30 = *v28;
        uint64_t v29 = v29 + (v30 << 7) - 128;
        if (v30 < 0)
        {
          uint64_t v40 = sub_188C138((uint64_t)v8, v29);
          *(void *)unint64_t v46 = v40;
          *(unsigned char *)(a1 + 73) = v41 != 0;
          if (!v40) {
            goto LABEL_82;
          }
        }
        else
        {
          unint64_t v28 = v8 + 2;
LABEL_43:
          *(void *)unint64_t v46 = v28;
          *(unsigned char *)(a1 + 73) = v29 != 0;
        }
        goto LABEL_49;
      case 7u:
        if (v9 != 56) {
          goto LABEL_51;
        }
        v5 |= 0x40u;
        unint64_t v31 = v8 + 1;
        uint64_t v32 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_48;
        }
        int v33 = *v31;
        uint64_t v32 = v32 + (v33 << 7) - 128;
        if (v33 < 0)
        {
          uint64_t v42 = sub_188C138((uint64_t)v8, v32);
          *(void *)unint64_t v46 = v42;
          *(unsigned char *)(a1 + 74) = v43 != 0;
          if (!v42) {
            goto LABEL_82;
          }
        }
        else
        {
          unint64_t v31 = v8 + 2;
LABEL_48:
          *(void *)unint64_t v46 = v31;
          *(unsigned char *)(a1 + 74) = v32 != 0;
        }
        goto LABEL_49;
      default:
LABEL_51:
        if (v9) {
          BOOL v34 = (v9 & 7) == 4;
        }
        else {
          BOOL v34 = 1;
        }
        if (!v34)
        {
          if (v9 - 4000 > 0x63F)
          {
            if (*v7)
            {
              uint64_t v35 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              uint64_t v35 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              uint64_t v8 = *(char **)v46;
            }
            int v24 = sub_1885AC0(v9, v35, v8, a3);
          }
          else
          {
            int v24 = sub_18859DC((uint64_t **)(a1 + 16), v9, v8, (uint64_t)&off_25393B0, (uint64_t *)(a1 + 8), a3);
          }
LABEL_32:
          *(void *)unint64_t v46 = v24;
          if (!v24) {
            goto LABEL_82;
          }
LABEL_49:
          if (sub_11947B8((uint64_t)a3, (char **)v46, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_82:
        }
          *(void *)unint64_t v46 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 40) |= v5;
        return *(void *)v46;
    }
  }
}

char *sub_145F0B4(uint64_t a1, char *a2, void *a3)
{
  unint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unint64_t v7 = *(int *)(a1 + 64);
    char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 68);
    char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    unint64_t v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), v4);
    if ((v6 & 2) == 0)
    {
LABEL_17:
      if ((v6 & 0x10) == 0) {
        goto LABEL_18;
      }
      goto LABEL_23;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_17;
  }
  unint64_t v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x10) == 0)
  {
LABEL_18:
    if ((v6 & 0x20) == 0) {
      goto LABEL_19;
    }
    goto LABEL_26;
  }
LABEL_23:
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v13 = *(unsigned char *)(a1 + 72);
  char *v4 = 40;
  v4[1] = v13;
  v4 += 2;
  if ((v6 & 0x20) == 0)
  {
LABEL_19:
    if ((v6 & 0x40) == 0) {
      goto LABEL_32;
    }
    goto LABEL_29;
  }
LABEL_26:
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v14 = *(unsigned char *)(a1 + 73);
  char *v4 = 48;
  v4[1] = v14;
  v4 += 2;
  if ((v6 & 0x40) != 0)
  {
LABEL_29:
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v15 = *(unsigned char *)(a1 + 74);
    char *v4 = 56;
    v4[1] = v15;
    v4 += 2;
  }
LABEL_32:
  if (*(_WORD *)(a1 + 26)) {
    unint64_t v4 = sub_1886844(a1 + 16, 500, 700, v4, a3);
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return v4;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    uint64_t v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    uint64_t v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if (*a3 - (void)v4 >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(v4, v19, (int)v20);
    v4 += v21;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v19, v20, v4);
}

uint64_t sub_145F378(uint64_t a1)
{
  uint64_t result = sub_1889280(a1 + 16);
  int v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 0x7F) == 0) {
    goto LABEL_28;
  }
  if (v3)
  {
    unint64_t v4 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
    uint64_t v6 = *(void *)(v4 + 8);
    if ((v5 & 0x80u) == 0) {
      uint64_t v6 = v5;
    }
    result += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v3 & 2) == 0)
    {
LABEL_4:
      if ((v3 & 4) == 0) {
        goto LABEL_5;
      }
LABEL_13:
      int v10 = *(_DWORD *)(a1 + 64);
      if (v10 < 0) {
        uint64_t v11 = 11;
      }
      else {
        uint64_t v11 = ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
      result += v11;
      if ((v3 & 8) == 0) {
        goto LABEL_21;
      }
      goto LABEL_17;
    }
  }
  else if ((v3 & 2) == 0)
  {
    goto LABEL_4;
  }
  unint64_t v7 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v8 = *(unsigned __int8 *)(v7 + 23);
  uint64_t v9 = *(void *)(v7 + 8);
  if ((v8 & 0x80u) == 0) {
    uint64_t v9 = v8;
  }
  result += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v3 & 4) != 0) {
    goto LABEL_13;
  }
LABEL_5:
  if ((v3 & 8) != 0)
  {
LABEL_17:
    int v12 = *(_DWORD *)(a1 + 68);
    if (v12 < 0) {
      uint64_t v13 = 11;
    }
    else {
      uint64_t v13 = ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    result += v13;
  }
LABEL_21:
  uint64_t v14 = result + 2;
  if ((v3 & 0x10) == 0) {
    uint64_t v14 = result;
  }
  if ((v3 & 0x20) != 0) {
    v14 += 2;
  }
  if ((v3 & 0x40) != 0) {
    uint64_t result = v14 + 2;
  }
  else {
    uint64_t result = v14;
  }
LABEL_28:
  uint64_t v15 = *(void *)(a1 + 8);
  if (v15)
  {
    unint64_t v16 = v15 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v16 + 31) < 0) {
      uint64_t v17 = *(void *)(v16 + 16);
    }
    else {
      uint64_t v17 = *(unsigned __int8 *)(v16 + 31);
    }
    result += v17;
  }
  *(_DWORD *)(a1 + 44) = result;
  return result;
}

void sub_145F500(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 40);
  if ((v4 & 0x7F) != 0)
  {
    if (v4)
    {
      uint64_t v6 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 40) |= 1u;
      unint64_t v7 = (std::string **)(a1 + 48);
      uint64_t v8 = *(void *)(a1 + 8);
      uint64_t v9 = (uint64_t *)(v8 & 0xFFFFFFFFFFFFFFFCLL);
      if (v8) {
        uint64_t v9 = (uint64_t *)*v9;
      }
      sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_21;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    int v10 = (long long *)(*(void *)(a2 + 56) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 40) |= 2u;
    uint64_t v11 = *(void *)(a1 + 8);
    int v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
    if (v11) {
      int v12 = (uint64_t *)*v12;
    }
    sub_1881DF4((std::string **)(a1 + 56), v10, v12);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_22;
    }
LABEL_21:
    *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0) {
        goto LABEL_7;
      }
      goto LABEL_23;
    }
LABEL_22:
    *(_DWORD *)(a1 + 68) = *(_DWORD *)(a2 + 68);
    if ((v4 & 0x10) == 0)
    {
LABEL_7:
      if ((v4 & 0x20) == 0) {
        goto LABEL_8;
      }
      goto LABEL_24;
    }
LABEL_23:
    *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
    if ((v4 & 0x20) == 0)
    {
LABEL_8:
      if ((v4 & 0x40) == 0)
      {
LABEL_10:
        *(_DWORD *)(a1 + 40) |= v4;
        goto LABEL_11;
      }
LABEL_9:
      *(unsigned char *)(a1 + 74) = *(unsigned char *)(a2 + 74);
      goto LABEL_10;
    }
LABEL_24:
    *(unsigned char *)(a1 + 73) = *(unsigned char *)(a2 + 73);
    if ((v4 & 0x40) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
LABEL_11:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_145F644(uint64_t a1)
{
  return sub_18856CC(a1 + 16);
}

void *sub_145F64C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.SuggestionsOptions");
}

void *sub_145F65C(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_145F6D0(void *a1)
{
  sub_145F65C(a1);

  operator delete();
}

uint64_t sub_145F708(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 3) != 0) {
    *(void *)(a1 + 24) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_145F72C(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v25 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v25 + 1;
    unsigned int v9 = *v25;
    if (*v25 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v25, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v25 + 2;
      }
    }
    unint64_t v25 = v8;
    if (v9 >> 3 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_13;
    }
    v5 |= 2u;
    uint64_t v15 = v8 + 1;
    int v16 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_25;
    }
    int v17 = *v15;
    int v16 = v16 + (v17 << 7) - 128;
    if ((v17 & 0x80000000) == 0)
    {
      uint64_t v15 = v8 + 2;
LABEL_25:
      unint64_t v25 = v15;
      *(_DWORD *)(a1 + 28) = v16;
      goto LABEL_30;
    }
    uint64_t v21 = (char *)sub_188C0D0((uint64_t)v8, v16);
    unint64_t v25 = v21;
    *(_DWORD *)(a1 + 28) = v22;
    if (!v21) {
      goto LABEL_39;
    }
LABEL_30:
    if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 >> 3 == 1 && v9 == 8)
  {
    v5 |= 1u;
    unint64_t v18 = v8 + 1;
    int v19 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_29;
    }
    int v20 = *v18;
    int v19 = v19 + (v20 << 7) - 128;
    if ((v20 & 0x80000000) == 0)
    {
      unint64_t v18 = v8 + 2;
LABEL_29:
      unint64_t v25 = v18;
      *(_DWORD *)(a1 + 24) = v19;
      goto LABEL_30;
    }
    uint64_t v23 = (char *)sub_188C0D0((uint64_t)v8, v19);
    unint64_t v25 = v23;
    *(_DWORD *)(a1 + 24) = v24;
    if (!v23) {
      goto LABEL_39;
    }
    goto LABEL_30;
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      uint64_t v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = v25;
    }
    unint64_t v25 = (char *)sub_1885AC0(v9, v14, v8, a3);
    if (!v25) {
      goto LABEL_39;
    }
    goto LABEL_30;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_39:
  unint64_t v25 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v25;
}

unsigned char *sub_145F91C(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 28);
    unsigned char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    int v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    int v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_145FAC0(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_8;
  }
  if (v1)
  {
    uint64_t v2 = ((9 * (__clz(*(_DWORD *)(a1 + 24) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v2 = 0;
  if ((v1 & 2) != 0) {
LABEL_7:
  }
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 28) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_8:
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v5 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    v2 += v6;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_145FB64()
{
  return 1;
}

void *sub_145FB6C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.StyleAttributes.StyleAttribute");
}

void *sub_145FB7C(void *a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  a1[1] = v5;
  *a1 = off_24B5908;
  sub_1882BC4((uint64_t)(a1 + 2), a2);
  a1[5] = 0;
  a1[6] = a2;
  a1[7] = 0;
  a1[8] = 0;
  a1[9] = 0;
  return a1;
}

void sub_145FBEC(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_145FC1C(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = a1 + 16;
  *(void *)a1 = off_24B5908;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  uint64_t v6 = (std::string *)(a1 + 48);
  *(_DWORD *)(a1 + 68) = 0;
  *(void *)(a1 + 52) = 0;
  *(void *)(a1 + 60) = 0;
  *(void *)(a1 + 44) = 0;
  int v7 = *(_DWORD *)(a2 + 56);
  if (v7)
  {
    uint64_t v8 = *(void *)(a2 + 64);
    unsigned int v9 = (std::string **)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_1494090(v6, v9, (uint64_t *)(v8 + 8), v7, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v10 = *(_DWORD *)(a1 + 56) + v7;
    *(_DWORD *)(a1 + 56) = v10;
    unsigned int v11 = *(int **)(a1 + 64);
    if (*v11 < v10) {
      *unsigned int v11 = v10;
    }
  }
  uint64_t v12 = *(void *)(a2 + 8);
  if (v12) {
    sub_188B4F8(v4, (v12 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v5, a2 + 16);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  return a1;
}

void sub_145FD34(_Unwind_Exception *a1)
{
  sub_1882CC0(v3);
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_145FD84(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_14934CC(a1 + 6);
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_145FE0C(void *a1)
{
  sub_145FD84(a1);

  operator delete();
}

char *sub_145FE44(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v27 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v27, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v27 + 1;
    unsigned int v9 = *v27;
    if (*v27 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v27, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v27 + 2;
      }
    }
    int v27 = v8;
    if (v9 >> 3 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_13;
    }
    unint64_t v15 = v8 + 1;
    uint64_t v16 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_23;
    }
    int v17 = *v15;
    uint64_t v16 = v16 + (v17 << 7) - 128;
    if ((v17 & 0x80000000) == 0)
    {
      unint64_t v15 = v8 + 2;
LABEL_23:
      int v27 = v15;
      *(void *)(a1 + 72) = v16;
      int v5 = 1;
      goto LABEL_37;
    }
    unint64_t v25 = (char *)sub_188C138((uint64_t)v8, v16);
    int v27 = v25;
    *(void *)(a1 + 72) = v26;
    int v5 = 1;
    if (!v25) {
      goto LABEL_44;
    }
LABEL_37:
    if (sub_11947B8((uint64_t)a3, &v27, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 >> 3 == 1 && v9 == 10)
  {
    uint64_t v18 = v8 - 1;
    while (1)
    {
      int v19 = (unsigned __int8 *)(v18 + 1);
      int v27 = v18 + 1;
      int v20 = *(_DWORD **)(a1 + 64);
      if (v20 && (uint64_t v21 = *(int *)(a1 + 56), (int)v21 < *v20))
      {
        *(_DWORD *)(a1 + 56) = v21 + 1;
        uint64_t v22 = *(void *)&v20[2 * v21 + 2];
      }
      else
      {
        uint64_t v23 = sub_1478BE8(*(void *)(a1 + 48));
        uint64_t v22 = sub_188CDC8(a1 + 48, (uint64_t)v23);
        int v19 = (unsigned __int8 *)v27;
      }
      uint64_t v18 = sub_14600A8(a3, v22, v19);
      int v27 = v18;
      if (!v18) {
        goto LABEL_44;
      }
      if (*(void *)a3 <= (unint64_t)v18 || *v18 != 10) {
        goto LABEL_37;
      }
    }
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (v9 - 1600 > 0xF9F)
    {
      if (*v7)
      {
        int v24 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        int v24 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        uint64_t v8 = v27;
      }
      uint64_t v14 = sub_1885AC0(v9, v24, v8, a3);
    }
    else
    {
      uint64_t v14 = sub_18859DC((uint64_t **)(a1 + 16), v9, v8, (uint64_t)&off_2539400, (uint64_t *)(a1 + 8), a3);
    }
    int v27 = (char *)v14;
    if (!v14) {
      goto LABEL_44;
    }
    goto LABEL_37;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_44:
  int v27 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 40) |= v5;
  return v27;
}

char *sub_14600A8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_145F72C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1460138(uint64_t a1, char *a2, _DWORD *a3)
{
  int v6 = *(_DWORD *)(a1 + 56);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 64) + 8 * i + 8);
      *a2 = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      a2[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, a2 + 1);
      }
      else {
        unsigned int v10 = a2 + 2;
      }
      a2 = sub_145F91C(v8, (unint64_t)v10, a3);
    }
  }
  if (*(unsigned char *)(a1 + 40))
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unint64_t v11 = *(void *)(a1 + 72);
    *a2 = 16;
    a2[1] = v11;
    if (v11 > 0x7F)
    {
      a2[1] = v11 | 0x80;
      unint64_t v12 = v11 >> 7;
      a2[2] = v11 >> 7;
      a2 += 3;
      if (v11 >= 0x4000)
      {
        do
        {
          *(a2 - 1) |= 0x80u;
          unint64_t v13 = v12 >> 14;
          v12 >>= 7;
          *a2++ = v12;
        }
        while (v13);
      }
    }
    else
    {
      a2 += 2;
    }
  }
  if (*(_WORD *)(a1 + 26)) {
    a2 = sub_1886844(a1 + 16, 200, 700, a2, a3);
  }
  uint64_t v14 = *(void *)(a1 + 8);
  if ((v14 & 1) == 0) {
    return a2;
  }
  unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v16 + 31) < 0)
  {
    int v17 = *(void **)(v16 + 8);
    uint64_t v18 = *(void *)(v16 + 16);
  }
  else
  {
    int v17 = (void *)(v16 + 8);
    LODWORD(v18) = *(unsigned __int8 *)(v16 + 31);
  }
  if (*(void *)a3 - (void)a2 >= (int)v18)
  {
    uint64_t v19 = (int)v18;
    memcpy(a2, v17, (int)v18);
    a2 += v19;
    return a2;
  }

  return (char *)sub_188A528(a3, (char *)v17, v18, a2);
}

uint64_t sub_1460320(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(int *)(a1 + 56);
  uint64_t v4 = v2 + v3;
  uint64_t v5 = *(void *)(a1 + 64);
  if (v5) {
    int v6 = (uint64_t *)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = sub_145FAC0(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  if (*(unsigned char *)(a1 + 40)) {
    v4 += ((9 * (__clz(*(void *)(a1 + 72) | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
  uint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v12 + 31) < 0) {
      uint64_t v13 = *(void *)(v12 + 16);
    }
    else {
      uint64_t v13 = *(unsigned __int8 *)(v12 + 31);
    }
    v4 += v13;
  }
  *(_DWORD *)(a1 + 44) = v4;
  return v4;
}

void *sub_14603FC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.StyleAttributes");
}

void *sub_146040C(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1889DA8((uint64_t)(a1 + 3));
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1460488(void *a1)
{
  sub_146040C(a1);

  operator delete();
}

uint64_t sub_14604C0(uint64_t a1)
{
  *(_DWORD *)(a1 + 24) = 0;
  if ((*(unsigned char *)(a1 + 16) & 3) != 0) {
    *(void *)(a1 + 40) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_14604E8(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v38 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v38, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v38 + 1;
    unsigned int v9 = *v38;
    if (*v38 < 0)
    {
      int v10 = *v8;
      unsigned int v11 = v9 + (v10 << 7);
      unsigned int v9 = v11 - 128;
      if (v10 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v38, v11 - 128);
        unsigned int v9 = v12;
      }
      else
      {
        uint64_t v8 = v38 + 2;
      }
    }
    uint64_t v38 = v8;
    unsigned int v13 = v9 >> 3;
    if (v9 >> 3 == 3) {
      break;
    }
    if (v13 == 2)
    {
      if (v9 != 16) {
        goto LABEL_14;
      }
      int v27 = v8 + 1;
      unint64_t v28 = *v8;
      if (*v8 < 0)
      {
        int v29 = *v27;
        int v30 = v28 + (v29 << 7);
        unint64_t v28 = (v30 - 128);
        if ((v29 & 0x80000000) == 0)
        {
          int v27 = v8 + 2;
          goto LABEL_47;
        }
        uint64_t v38 = (char *)sub_188C138((uint64_t)v8, (v30 - 128));
        if (!v38) {
          goto LABEL_69;
        }
        unint64_t v28 = v34;
      }
      else
      {
LABEL_47:
        uint64_t v38 = v27;
      }
      if (v28 > 4)
      {
        if (*v7) {
          unint64_t v37 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          unint64_t v37 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        sub_188C020(2, v28, v37);
      }
      else
      {
        *(_DWORD *)(a1 + 16) |= 2u;
        *(_DWORD *)(a1 + 44) = v28;
      }
      goto LABEL_54;
    }
    if (v13 != 1 || v9 != 8) {
      goto LABEL_14;
    }
    uint64_t v32 = v8 + 1;
    LODWORD(v31) = *v8;
    if ((v31 & 0x80) == 0) {
      goto LABEL_53;
    }
    int v33 = *v32;
    uint64_t v31 = v31 + (v33 << 7) - 128;
    if ((v33 & 0x80000000) == 0)
    {
      uint64_t v32 = v8 + 2;
LABEL_53:
      uint64_t v38 = v32;
      *(_DWORD *)(a1 + 40) = v31;
      int v5 = 1;
      goto LABEL_54;
    }
    uint64_t v35 = (char *)sub_188C138((uint64_t)v8, v31);
    uint64_t v38 = v35;
    *(_DWORD *)(a1 + 40) = v36;
    int v5 = 1;
    if (!v35) {
      goto LABEL_69;
    }
LABEL_54:
    if (sub_11947B8((uint64_t)a3, &v38, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 == 24)
  {
    uint64_t v18 = v8 - 1;
    while (1)
    {
      uint64_t v38 = v18 + 1;
      unint64_t v19 = v18[1];
      int v20 = v18 + 2;
      if (v18[1] < 0)
      {
        int v21 = *v20;
        int v22 = v19 + (v21 << 7);
        unint64_t v19 = (v22 - 128);
        if (v21 < 0)
        {
          uint64_t v38 = (char *)sub_188C138((uint64_t)(v18 + 1), (v22 - 128));
          if (!v38) {
            goto LABEL_69;
          }
          unint64_t v19 = v25;
          goto LABEL_29;
        }
        int v20 = v18 + 3;
      }
      uint64_t v38 = v20;
LABEL_29:
      if (v19 > 9)
      {
        if (*v7) {
          uint64_t v26 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          uint64_t v26 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        sub_188C020(3, v19, v26);
      }
      else
      {
        uint64_t v23 = *(unsigned int *)(a1 + 24);
        if (v23 == *(_DWORD *)(a1 + 28))
        {
          int v24 = v23 + 1;
          sub_188C80C((unsigned int *)(a1 + 24), v23 + 1);
          *(_DWORD *)(*(void *)(a1 + 32) + 4 * v23) = v19;
        }
        else
        {
          *(_DWORD *)(*(void *)(a1 + 32) + 4 * v23) = v19;
          int v24 = v23 + 1;
        }
        *(_DWORD *)(a1 + 24) = v24;
      }
      uint64_t v18 = v38;
      if (*(void *)a3 <= (unint64_t)v38 || *v38 != 24) {
        goto LABEL_54;
      }
    }
  }
  if (v9 == 26)
  {
    *(void *)&long long v39 = a1 + 24;
    *((void *)&v39 + 1) = sub_144CF0C;
    uint64_t v40 = a1 + 8;
    int v41 = 3;
    int v17 = sub_1112E88((uint64_t)a3, v8, &v39);
    goto LABEL_21;
  }
LABEL_14:
  if (v9) {
    BOOL v15 = (v9 & 7) == 4;
  }
  else {
    BOOL v15 = 1;
  }
  if (!v15)
  {
    if (*v7)
    {
      unint64_t v16 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v16 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = v38;
    }
    int v17 = (char *)sub_1885AC0(v9, v16, v8, a3);
LABEL_21:
    uint64_t v38 = v17;
    if (!v17) {
      goto LABEL_69;
    }
    goto LABEL_54;
  }
  if (v8) {
    a3[10].i32[0] = v9 - 1;
  }
  else {
LABEL_69:
  }
    uint64_t v38 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v38;
}

unsigned char *sub_1460860(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 40);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 44);
    unsigned char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v13 = *(unsigned int *)(a1 + 24);
  if ((int)v13 >= 1)
  {
    for (uint64_t i = 0; i != v13; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v15 = *(int *)(*(void *)(a1 + 32) + 4 * i);
      unsigned char *v4 = 24;
      v4[1] = v15;
      if (v15 > 0x7F)
      {
        v4[1] = v15 | 0x80;
        unint64_t v16 = v15 >> 7;
        v4[2] = v15 >> 7;
        v4 += 3;
        if (v15 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v17 = v16 >> 14;
            v16 >>= 7;
            *v4++ = v16;
          }
          while (v17);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  uint64_t v18 = *(void *)(a1 + 8);
  if ((v18 & 1) == 0) {
    return v4;
  }
  unint64_t v20 = v18 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v20 + 31) < 0)
  {
    int v21 = *(void **)(v20 + 8);
    uint64_t v22 = *(void *)(v20 + 16);
  }
  else
  {
    int v21 = (void *)(v20 + 8);
    LODWORD(v22) = *(unsigned __int8 *)(v20 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v22)
  {
    uint64_t v23 = (int)v22;
    memcpy(v4, v21, (int)v22);
    v4 += v23;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v21, v22, v4);
}

uint64_t sub_1460AAC(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if (v1)
  {
    int v3 = *(_DWORD *)(a1 + 40);
    if (v3 < 0) {
      uint64_t v2 = 11;
    }
    else {
      uint64_t v2 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v4 = *(unsigned int *)(a1 + 24);
  if (v4)
  {
    int v5 = 0;
    uint64_t v6 = 0;
    do
    {
      int v7 = *(_DWORD *)(*(void *)(a1 + 32) + 4 * v5);
      if (v7 < 0) {
        uint64_t v8 = 10;
      }
      else {
        uint64_t v8 = (9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6;
      }
      v6 += v8;
      ++v5;
    }
    while (v4 != v5);
  }
  else
  {
    uint64_t v6 = 0;
  }
  uint64_t v9 = v2 + v4 + v6;
  if ((v1 & 2) != 0)
  {
    int v10 = *(_DWORD *)(a1 + 44);
    if (v10 < 0) {
      uint64_t v11 = 11;
    }
    else {
      uint64_t v11 = ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v9 += v11;
  }
  uint64_t v12 = *(void *)(a1 + 8);
  if (v12)
  {
    unint64_t v14 = v12 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v14 + 31) < 0) {
      uint64_t v15 = *(void *)(v14 + 16);
    }
    else {
      uint64_t v15 = *(unsigned __int8 *)(v14 + 31);
    }
    v9 += v15;
  }
  *(_DWORD *)(a1 + 20) = v9;
  return v9;
}

uint64_t sub_1460BB0(uint64_t a1)
{
  return *(_DWORD *)(a1 + 16) & 1;
}

void *sub_1460BBC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.PlaceSearchRequest.BusinessOptions.PhotoOptions");
}

uint64_t sub_1460BCC(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)a1 = off_24B5A08;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  int v5 = (std::string *)(a1 + 24);
  *(_DWORD *)(a1 + 44) = 0;
  *(void *)(a1 + 28) = 0;
  *(void *)(a1 + 36) = 0;
  *(void *)(a1 + 20) = 0;
  int v6 = *(_DWORD *)(a2 + 32);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 40);
    uint64_t v8 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_149410C(v5, v8, (uint64_t *)(v7 + 8), v6, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v9 = *(_DWORD *)(a1 + 32) + v6;
    *(_DWORD *)(a1 + 32) = v9;
    int v10 = *(int **)(a1 + 40);
    if (*v10 < v9) {
      *int v10 = v9;
    }
  }
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  int v11 = *(_DWORD *)(a2 + 56);
  if (v11)
  {
    uint64_t v12 = *(void *)(a2 + 64);
    uint64_t v13 = (std::string **)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_188FB98(a1 + 48, v13, (const std::string **)(v12 + 8), v11, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v14 = *(_DWORD *)(a1 + 56) + v11;
    *(_DWORD *)(a1 + 56) = v14;
    uint64_t v15 = *(int **)(a1 + 64);
    if (*v15 < v14) {
      *uint64_t v15 = v14;
    }
  }
  uint64_t v16 = *(void *)(a2 + 8);
  if (v16) {
    sub_188B4F8(v4, (v16 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  return a1;
}

void sub_1460D30(_Unwind_Exception *a1)
{
  sub_1889DE8(v4);
  sub_149354C(v3);
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_1460D84(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1889DE8(a1 + 6);
  sub_149354C(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1460E0C(void *a1)
{
  sub_1460D84(a1);

  operator delete();
}

uint64_t sub_1460E44(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  if ((int)v2 >= 1)
  {
    int v3 = (uint64_t *)(*(void *)(a1 + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      sub_14604C0(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(a1 + 32) = 0;
  }
  uint64_t result = sub_188CC00(a1 + 48);
  char v7 = *(unsigned char *)(a1 + 8);
  uint64_t v6 = a1 + 8;
  *(_WORD *)(v6 + 64) = 0;
  *(_DWORD *)(v6 + 68) = 1;
  *(_DWORD *)(v6 + 8) = 0;
  if (v7)
  {
    return sub_188B4AC((uint64_t *)v6);
  }
  return result;
}

uint64_t sub_1460ED8(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v43 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v43, a3[11].i32[1])) {
    goto LABEL_2;
  }
  char v7 = (uint64_t **)(a1 + 48);
  uint64_t v8 = (void *)(a1 + 8);
  while (2)
  {
    int v9 = (char *)(*(void *)v43 + 1);
    unsigned int v10 = **(unsigned char **)v43;
    if ((char)**(unsigned char **)v43 < 0)
    {
      unsigned int v11 = v10 + (*v9 << 7);
      unsigned int v10 = v11 - 128;
      if (*v9 < 0)
      {
        int v9 = (char *)sub_188C180(*(uint64_t *)v43, v11 - 128);
        unsigned int v10 = v12;
      }
      else
      {
        int v9 = (char *)(*(void *)v43 + 2);
      }
    }
    *(void *)uint64_t v43 = v9;
    switch(v10 >> 3)
    {
      case 1u:
        if (v10 != 10) {
          goto LABEL_46;
        }
        uint64_t v13 = v9 - 1;
        while (1)
        {
          int v14 = (unsigned __int8 *)(v13 + 1);
          *(void *)uint64_t v43 = v13 + 1;
          uint64_t v15 = *(_DWORD **)(a1 + 40);
          if (v15 && (uint64_t v16 = *(int *)(a1 + 32), (int)v16 < *v15))
          {
            *(_DWORD *)(a1 + 32) = v16 + 1;
            uint64_t v17 = *(void *)&v15[2 * v16 + 2];
          }
          else
          {
            uint64_t v18 = sub_1478CBC(*(void *)(a1 + 24));
            uint64_t v17 = sub_188CDC8(a1 + 24, (uint64_t)v18);
            int v14 = *(unsigned __int8 **)v43;
          }
          uint64_t v13 = sub_14612E8(a3, v17, v14);
          *(void *)uint64_t v43 = v13;
          if (!v13) {
            goto LABEL_64;
          }
          if (*(void *)a3 <= (unint64_t)v13 || *v13 != 10) {
            goto LABEL_53;
          }
        }
      case 2u:
        if (v10 != 18) {
          goto LABEL_46;
        }
        unint64_t v19 = v9 - 1;
        while (1)
        {
          unint64_t v20 = (char *)(v19 + 1);
          *(void *)uint64_t v43 = v19 + 1;
          int v21 = *(_DWORD **)(a1 + 64);
          if (v21 && (uint64_t v22 = *(int *)(a1 + 56), (int)v22 < *v21))
          {
            *(_DWORD *)(a1 + 56) = v22 + 1;
            uint64_t v23 = *(std::string **)&v21[2 * v22 + 2];
          }
          else
          {
            if (!*v7) {
              operator new();
            }
            *unint64_t v25 = v24;
            v25[1] = sub_3A6EDC;
            *int v24 = 0;
            v24[1] = 0;
            int v24[2] = 0;
            uint64_t v23 = (std::string *)sub_188CDC8(a1 + 48, (uint64_t)v24);
            unint64_t v20 = *(char **)v43;
          }
          unint64_t v19 = sub_188C244(v23, v20, (uint64_t)a3);
          *(void *)uint64_t v43 = v19;
          if (!v19) {
            goto LABEL_64;
          }
          if (*(void *)a3 <= (unint64_t)v19 || *v19 != 18) {
            goto LABEL_53;
          }
        }
      case 3u:
        if (v10 != 24) {
          goto LABEL_46;
        }
        v5 |= 1u;
        uint64_t v26 = v9 + 1;
        uint64_t v27 = *v9;
        if ((*v9 & 0x80000000) == 0) {
          goto LABEL_35;
        }
        int v28 = *v26;
        uint64_t v27 = v27 + (v28 << 7) - 128;
        if (v28 < 0)
        {
          uint64_t v37 = sub_188C138((uint64_t)v9, v27);
          *(void *)uint64_t v43 = v37;
          *(unsigned char *)(a1 + 72) = v38 != 0;
          if (!v37) {
            goto LABEL_64;
          }
        }
        else
        {
          uint64_t v26 = v9 + 2;
LABEL_35:
          *(void *)uint64_t v43 = v26;
          *(unsigned char *)(a1 + 72) = v27 != 0;
        }
        goto LABEL_53;
      case 4u:
        if (v10 != 32) {
          goto LABEL_46;
        }
        v5 |= 4u;
        int v30 = v9 + 1;
        LODWORD(v29) = *v9;
        if ((v29 & 0x80) == 0) {
          goto LABEL_40;
        }
        int v31 = *v30;
        uint64_t v29 = v29 + (v31 << 7) - 128;
        if (v31 < 0)
        {
          uint64_t v39 = sub_188C138((uint64_t)v9, v29);
          *(void *)uint64_t v43 = v39;
          *(_DWORD *)(a1 + 76) = v40;
          if (!v39) {
            goto LABEL_64;
          }
        }
        else
        {
          int v30 = v9 + 2;
LABEL_40:
          *(void *)uint64_t v43 = v30;
          *(_DWORD *)(a1 + 76) = v29;
        }
        goto LABEL_53;
      case 5u:
        if (v10 != 40) {
          goto LABEL_46;
        }
        v5 |= 2u;
        uint64_t v32 = v9 + 1;
        uint64_t v33 = *v9;
        if ((*v9 & 0x80000000) == 0) {
          goto LABEL_45;
        }
        int v34 = *v32;
        uint64_t v33 = v33 + (v34 << 7) - 128;
        if (v34 < 0)
        {
          uint64_t v41 = sub_188C138((uint64_t)v9, v33);
          *(void *)uint64_t v43 = v41;
          *(unsigned char *)(a1 + 73) = v42 != 0;
          if (!v41) {
            goto LABEL_64;
          }
        }
        else
        {
          uint64_t v32 = v9 + 2;
LABEL_45:
          *(void *)uint64_t v43 = v32;
          *(unsigned char *)(a1 + 73) = v33 != 0;
        }
        goto LABEL_53;
      default:
LABEL_46:
        if (v10) {
          BOOL v35 = (v10 & 7) == 4;
        }
        else {
          BOOL v35 = 1;
        }
        if (!v35)
        {
          if (*v8)
          {
            int v36 = (std::string *)((*v8 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            int v36 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            int v9 = *(char **)v43;
          }
          *(void *)uint64_t v43 = sub_1885AC0(v10, v36, v9, a3);
          if (!*(void *)v43) {
            goto LABEL_64;
          }
LABEL_53:
          if (sub_11947B8((uint64_t)a3, (char **)v43, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v9) {
          a3[10].i32[0] = v10 - 1;
        }
        else {
LABEL_64:
        }
          *(void *)uint64_t v43 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v43;
    }
  }
}

char *sub_14612E8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_14604E8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1461378(uint64_t a1, char *__dst, _DWORD *a3)
{
  int v6 = *(_DWORD *)(a1 + 32);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unsigned int v10 = __dst + 2;
      }
      __dst = sub_1460860(v8, (unint64_t)v10, a3);
    }
  }
  uint64_t v11 = *(unsigned int *)(a1 + 56);
  if ((int)v11 >= 1)
  {
    uint64_t v12 = 0;
    uint64_t v13 = 8 * v11;
    do
    {
      int v14 = *(void **)(*(void *)(a1 + 64) + v12 + 8);
      if (*((char *)v14 + 23) < 0)
      {
        int64_t v15 = v14[1];
        if (v15 > 127) {
          goto LABEL_20;
        }
      }
      else
      {
        int64_t v15 = *((unsigned __int8 *)v14 + 23);
      }
      if (*(void *)a3 - (void)__dst + 14 >= v15)
      {
        *__dst = 18;
        __dst[1] = v15;
        if (*((char *)v14 + 23) < 0) {
          int v14 = (void *)*v14;
        }
        uint64_t v16 = __dst + 2;
        memcpy(v16, v14, v15);
        __dst = &v16[v15];
        goto LABEL_18;
      }
LABEL_20:
      __dst = (char *)sub_188A868(a3, 2, (uint64_t)v14, __dst);
LABEL_18:
      v12 += 8;
    }
    while (v13 != v12);
  }
  int v17 = *(_DWORD *)(a1 + 16);
  if (v17)
  {
    if (*(void *)a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    char v18 = *(unsigned char *)(a1 + 72);
    *__dst = 24;
    __dst[1] = v18;
    __dst += 2;
  }
  if ((v17 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unint64_t v19 = *(int *)(a1 + 76);
    *__dst = 32;
    __dst[1] = v19;
    if (v19 > 0x7F)
    {
      __dst[1] = v19 | 0x80;
      unint64_t v20 = v19 >> 7;
      __dst[2] = v19 >> 7;
      __dst += 3;
      if (v19 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unint64_t v21 = v20 >> 14;
          v20 >>= 7;
          *__dst++ = v20;
        }
        while (v21);
      }
    }
    else
    {
      __dst += 2;
    }
  }
  if ((v17 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    char v22 = *(unsigned char *)(a1 + 73);
    *__dst = 40;
    __dst[1] = v22;
    __dst += 2;
  }
  uint64_t v23 = *(void *)(a1 + 8);
  if ((v23 & 1) == 0) {
    return __dst;
  }
  unint64_t v25 = v23 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v25 + 31) < 0)
  {
    uint64_t v26 = *(void **)(v25 + 8);
    uint64_t v27 = *(void *)(v25 + 16);
  }
  else
  {
    uint64_t v26 = (void *)(v25 + 8);
    LODWORD(v27) = *(unsigned __int8 *)(v25 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v27)
  {
    uint64_t v28 = (int)v27;
    memcpy(__dst, v26, (int)v27);
    __dst += v28;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v26, v27, __dst);
}

uint64_t sub_1461654(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_1460AAC(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(unsigned int *)(a1 + 56);
  uint64_t result = v2 + v8;
  if ((int)v8 >= 1)
  {
    unsigned int v10 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v11 = *v10++;
      uint64_t v12 = *(unsigned __int8 *)(v11 + 23);
      uint64_t v13 = *(void *)(v11 + 8);
      if ((v12 & 0x80u) == 0) {
        uint64_t v13 = v12;
      }
      result += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6);
      --v8;
    }
    while (v8);
  }
  int v14 = *(_DWORD *)(a1 + 16);
  if ((v14 & 7) != 0)
  {
    uint64_t v15 = result + 2;
    if ((v14 & 1) == 0) {
      uint64_t v15 = result;
    }
    if ((v14 & 2) != 0) {
      uint64_t result = v15 + 2;
    }
    else {
      uint64_t result = v15;
    }
    if ((v14 & 4) != 0)
    {
      int v16 = *(_DWORD *)(a1 + 76);
      uint64_t v17 = ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if (v16 >= 0) {
        uint64_t v18 = v17;
      }
      else {
        uint64_t v18 = 11;
      }
      result += v18;
    }
  }
  uint64_t v19 = *(void *)(a1 + 8);
  if (v19)
  {
    unint64_t v20 = v19 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v20 + 31) < 0) {
      uint64_t v21 = *(void *)(v20 + 16);
    }
    else {
      uint64_t v21 = *(unsigned __int8 *)(v20 + 31);
    }
    result += v21;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

std::string *sub_14617B0(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = sub_149410C(v3 + 1, v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2] - LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    uint64_t v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    unsigned int v10 = (const std::string **)(*(void *)(a2 + 64) + 8);
    uint64_t v11 = (std::string **)sub_188CCE4((uint64_t)&v3[2], *(_DWORD *)(a2 + 56));
    uint64_t result = (std::string *)sub_188FB98((uint64_t)&v3[2], v11, v10, v9, *(_DWORD *)v3[2].__r_.__value_.__r.__words[2]- LODWORD(v3[2].__r_.__value_.__r.__words[1]));
    int v12 = LODWORD(v3[2].__r_.__value_.__r.__words[1]) + v9;
    LODWORD(v3[2].__r_.__value_.__r.__words[1]) = v12;
    uint64_t v13 = (int *)v3[2].__r_.__value_.__r.__words[2];
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 16);
  if ((v14 & 7) != 0)
  {
    if (v14)
    {
      v3[3].__r_.__value_.__s.__data_[0] = *(unsigned char *)(a2 + 72);
      if ((v14 & 2) == 0)
      {
LABEL_10:
        if ((v14 & 4) == 0)
        {
LABEL_12:
          LODWORD(v3->__r_.__value_.__r.__words[2]) |= v14;
          goto LABEL_13;
        }
LABEL_11:
        HIDWORD(v3[3].__r_.__value_.__r.__words[0]) = *(_DWORD *)(a2 + 76);
        goto LABEL_12;
      }
    }
    else if ((v14 & 2) == 0)
    {
      goto LABEL_10;
    }
    v3[3].__r_.__value_.__s.__data_[1] = *(unsigned char *)(a2 + 73);
    if ((v14 & 4) == 0) {
      goto LABEL_12;
    }
    goto LABEL_11;
  }
LABEL_13:
  uint64_t v15 = *(void *)(a2 + 8);
  if (v15)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v15 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

BOOL sub_146192C(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 32);
  do
  {
    int v2 = v1;
    if ((int)v1 < 1) {
      break;
    }
    uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8 * v1--);
  }
  while ((*(unsigned char *)(v3 + 16) & 1) != 0);
  return v2 < 1;
}

void *sub_146195C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.PlaceSearchRequest.BusinessOptions");
}

uint64_t sub_146196C(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (uint64_t *)(a1 + 8);
  *(void *)a1 = off_24B5A88;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v5 = a1 + 24;
  *(_DWORD *)(a1 + 44) = 0;
  *(void *)(a1 + 28) = 0;
  *(void *)(a1 + 36) = 0;
  *(void *)(a1 + 20) = 0;
  int v6 = *(_DWORD *)(a2 + 32);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 40);
    uint64_t v8 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_188FB98(v5, v8, (const std::string **)(v7 + 8), v6, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v9 = *(_DWORD *)(a1 + 32) + v6;
    *(_DWORD *)(a1 + 32) = v9;
    unsigned int v10 = *(int **)(a1 + 40);
    if (*v10 < v9) {
      *unsigned int v10 = v9;
    }
  }
  uint64_t v11 = *(void *)(a2 + 8);
  if (v11) {
    sub_188B4F8(v4, (v11 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  uint64_t v12 = *(void *)(a2 + 48);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  *(void *)(a1 + 48) = v12;
  return a1;
}

void sub_1461A68(_Unwind_Exception *a1)
{
  sub_1889DE8(v3);
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_1461AA8(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1889DE8(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1461B24(void *a1)
{
  sub_1461AA8(a1);

  operator delete();
}

uint64_t sub_1461B5C(uint64_t a1)
{
  uint64_t result = sub_188CC00(a1 + 24);
  if ((*(unsigned char *)(a1 + 16) & 7) != 0)
  {
    *(_DWORD *)(a1 + 56) = 0;
    *(void *)(a1 + 48) = 0;
  }
  char v4 = *(unsigned char *)(a1 + 8);
  uint64_t v3 = a1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_1461BC4(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v38 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v38, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (uint64_t **)(a1 + 24);
  uint64_t v8 = (void *)(a1 + 8);
  while (2)
  {
    int v9 = (char *)(*(void *)v38 + 1);
    unsigned int v10 = **(unsigned char **)v38;
    if ((char)**(unsigned char **)v38 < 0)
    {
      unsigned int v11 = v10 + (*v9 << 7);
      unsigned int v10 = v11 - 128;
      if (*v9 < 0)
      {
        int v9 = (char *)sub_188C180(*(uint64_t *)v38, v11 - 128);
        unsigned int v10 = v12;
      }
      else
      {
        int v9 = (char *)(*(void *)v38 + 2);
      }
    }
    *(void *)uint64_t v38 = v9;
    switch(v10 >> 3)
    {
      case 1u:
        if (v10 != 8) {
          goto LABEL_38;
        }
        uint64_t v13 = v9 + 1;
        unint64_t v14 = *v9;
        if ((*v9 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v15 = *v13;
        int v16 = v14 + (v15 << 7);
        unint64_t v14 = (v16 - 128);
        if (v15 < 0)
        {
          *(void *)uint64_t v38 = sub_188C138((uint64_t)v9, (v16 - 128));
          if (!*(void *)v38) {
            goto LABEL_60;
          }
          unint64_t v14 = v32;
        }
        else
        {
          uint64_t v13 = v9 + 2;
LABEL_13:
          *(void *)uint64_t v38 = v13;
        }
        if (v14 > 4)
        {
          if (*v8) {
            uint64_t v37 = (std::string *)((*v8 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v37 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(1, v14, v37);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 1u;
          *(_DWORD *)(a1 + 48) = v14;
        }
        goto LABEL_45;
      case 2u:
        if (v10 != 16) {
          goto LABEL_38;
        }
        v5 |= 2u;
        uint64_t v18 = v9 + 1;
        LODWORD(v17) = *v9;
        if ((v17 & 0x80) == 0) {
          goto LABEL_20;
        }
        int v19 = *v18;
        uint64_t v17 = v17 + (v19 << 7) - 128;
        if (v19 < 0)
        {
          uint64_t v33 = sub_188C138((uint64_t)v9, v17);
          *(void *)uint64_t v38 = v33;
          *(_DWORD *)(a1 + 52) = v34;
          if (!v33) {
            goto LABEL_60;
          }
        }
        else
        {
          uint64_t v18 = v9 + 2;
LABEL_20:
          *(void *)uint64_t v38 = v18;
          *(_DWORD *)(a1 + 52) = v17;
        }
        goto LABEL_45;
      case 3u:
        if (v10 != 24) {
          goto LABEL_38;
        }
        v5 |= 4u;
        uint64_t v21 = v9 + 1;
        LODWORD(v20) = *v9;
        if ((v20 & 0x80) == 0) {
          goto LABEL_25;
        }
        int v22 = *v21;
        uint64_t v20 = v20 + (v22 << 7) - 128;
        if (v22 < 0)
        {
          uint64_t v35 = sub_188C138((uint64_t)v9, v20);
          *(void *)uint64_t v38 = v35;
          *(_DWORD *)(a1 + 56) = v36;
          if (!v35) {
            goto LABEL_60;
          }
        }
        else
        {
          uint64_t v21 = v9 + 2;
LABEL_25:
          *(void *)uint64_t v38 = v21;
          *(_DWORD *)(a1 + 56) = v20;
        }
        goto LABEL_45;
      case 4u:
        if (v10 != 34) {
          goto LABEL_38;
        }
        uint64_t v23 = v9 - 1;
        while (1)
        {
          int v24 = (char *)(v23 + 1);
          *(void *)uint64_t v38 = v23 + 1;
          unint64_t v25 = *(_DWORD **)(a1 + 40);
          if (v25 && (uint64_t v26 = *(int *)(a1 + 32), (int)v26 < *v25))
          {
            *(_DWORD *)(a1 + 32) = v26 + 1;
            uint64_t v27 = *(std::string **)&v25[2 * v26 + 2];
          }
          else
          {
            if (!*v7) {
              operator new();
            }
            *uint64_t v29 = v28;
            v29[1] = sub_3A6EDC;
            *uint64_t v28 = 0;
            v28[1] = 0;
            v28[2] = 0;
            uint64_t v27 = (std::string *)sub_188CDC8(a1 + 24, (uint64_t)v28);
            int v24 = *(char **)v38;
          }
          uint64_t v23 = sub_188C244(v27, v24, (uint64_t)a3);
          *(void *)uint64_t v38 = v23;
          if (!v23) {
            goto LABEL_60;
          }
          if (*(void *)a3 <= (unint64_t)v23 || *v23 != 34) {
            goto LABEL_45;
          }
        }
      default:
LABEL_38:
        if (v10) {
          BOOL v30 = (v10 & 7) == 4;
        }
        else {
          BOOL v30 = 1;
        }
        if (!v30)
        {
          if (*v8)
          {
            int v31 = (std::string *)((*v8 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            int v31 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            int v9 = *(char **)v38;
          }
          *(void *)uint64_t v38 = sub_1885AC0(v10, v31, v9, a3);
          if (!*(void *)v38) {
            goto LABEL_60;
          }
LABEL_45:
          if (sub_11947B8((uint64_t)a3, (char **)v38, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v9) {
          a3[10].i32[0] = v10 - 1;
        }
        else {
LABEL_60:
        }
          *(void *)uint64_t v38 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v38;
    }
  }
}

char *sub_1461F60(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  char v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 48);
    char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 52);
    char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v13 = *(int *)(a1 + 56);
    char *v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unint64_t v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v16 = *(unsigned int *)(a1 + 32);
  if ((int)v16 >= 1)
  {
    uint64_t v17 = 0;
    uint64_t v18 = 8 * v16;
    do
    {
      int v19 = *(void **)(*(void *)(a1 + 40) + v17 + 8);
      if (*((char *)v19 + 23) < 0)
      {
        int64_t v20 = v19[1];
        if (v20 > 127) {
          goto LABEL_33;
        }
      }
      else
      {
        int64_t v20 = *((unsigned __int8 *)v19 + 23);
      }
      if (*(void *)a3 - (void)v4 + 14 >= v20)
      {
        char *v4 = 34;
        v4[1] = v20;
        if (*((char *)v19 + 23) < 0) {
          int v19 = (void *)*v19;
        }
        uint64_t v21 = v4 + 2;
        memcpy(v21, v19, v20);
        char v4 = &v21[v20];
        goto LABEL_31;
      }
LABEL_33:
      char v4 = (char *)sub_188A868(a3, 4, (uint64_t)v19, v4);
LABEL_31:
      v17 += 8;
    }
    while (v18 != v17);
  }
  uint64_t v22 = *(void *)(a1 + 8);
  if ((v22 & 1) == 0) {
    return v4;
  }
  unint64_t v24 = v22 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v24 + 31) < 0)
  {
    unint64_t v25 = *(void **)(v24 + 8);
    uint64_t v26 = *(void *)(v24 + 16);
  }
  else
  {
    unint64_t v25 = (void *)(v24 + 8);
    LODWORD(v26) = *(unsigned __int8 *)(v24 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v26)
  {
    uint64_t v27 = (int)v26;
    memcpy(v4, v25, (int)v26);
    v4 += v27;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v25, v26, v4);
}

uint64_t sub_1462240(_DWORD *a1)
{
  int v2 = a1[4];
  if (v2)
  {
    int v4 = a1[12];
    if (v4 < 0)
    {
      uint64_t result = 11;
      if ((v2 & 2) == 0) {
        goto LABEL_12;
      }
    }
    else
    {
      uint64_t result = ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v2 & 2) == 0) {
        goto LABEL_12;
      }
    }
  }
  else
  {
    uint64_t result = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_12;
    }
  }
  int v5 = a1[13];
  if (v5 < 0) {
    uint64_t v6 = 11;
  }
  else {
    uint64_t v6 = ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  result += v6;
LABEL_12:
  if ((v2 & 4) != 0)
  {
    int v7 = a1[14];
    if (v7 < 0) {
      uint64_t v8 = 11;
    }
    else {
      uint64_t v8 = ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    result += v8;
  }
  return result;
}

uint64_t sub_14622F8(uint64_t a1)
{
  if ((~*(_DWORD *)(a1 + 16) & 7) != 0)
  {
    uint64_t v4 = sub_1462240((_DWORD *)a1);
  }
  else
  {
    int v2 = *(_DWORD *)(a1 + 48);
    if (v2 < 0) {
      uint64_t v3 = 13;
    }
    else {
      uint64_t v3 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 3;
    }
    int v5 = *(_DWORD *)(a1 + 52);
    if (v5 < 0) {
      uint64_t v6 = 10;
    }
    else {
      uint64_t v6 = (9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6;
    }
    int v7 = *(_DWORD *)(a1 + 56);
    if (v7 < 0) {
      uint64_t v8 = 10;
    }
    else {
      uint64_t v8 = (9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6;
    }
    uint64_t v4 = v3 + v6 + v8;
  }
  uint64_t v9 = *(unsigned int *)(a1 + 32);
  uint64_t result = v4 + v9;
  if ((int)v9 >= 1)
  {
    unint64_t v11 = (uint64_t *)(*(void *)(a1 + 40) + 8);
    do
    {
      uint64_t v12 = *v11++;
      uint64_t v13 = *(unsigned __int8 *)(v12 + 23);
      uint64_t v14 = *(void *)(v12 + 8);
      if ((v13 & 0x80u) == 0) {
        uint64_t v14 = v13;
      }
      result += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      --v9;
    }
    while (v9);
  }
  uint64_t v15 = *(void *)(a1 + 8);
  if (v15)
  {
    unint64_t v16 = v15 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v16 + 31) < 0) {
      uint64_t v17 = *(void *)(v16 + 16);
    }
    else {
      uint64_t v17 = *(unsigned __int8 *)(v16 + 31);
    }
    result += v17;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

BOOL sub_1462440(uint64_t a1)
{
  return (~*(_DWORD *)(a1 + 16) & 7) == 0;
}

void *sub_1462454@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.PlaceSearchRequest.SearchSubstring");
}

uint64_t sub_1462464(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)a1 = off_24B5B08;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  int v5 = (uint64_t *)(a1 + 24);
  *(_DWORD *)(a1 + 44) = 0;
  *(void *)(a1 + 28) = 0;
  *(void *)(a1 + 36) = 0;
  *(void *)(a1 + 20) = 0;
  int v6 = *(_DWORD *)(a2 + 32);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 40);
    uint64_t v8 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_1494188(v5, v8, (uint64_t *)(v7 + 8), v6, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v9 = *(_DWORD *)(a1 + 32) + v6;
    *(_DWORD *)(a1 + 32) = v9;
    unint64_t v10 = *(int **)(a1 + 40);
    if (*v10 < v9) {
      *unint64_t v10 = v9;
    }
  }
  uint64_t v11 = *(void *)(a2 + 8);
  if (v11) {
    sub_188B4F8(v4, (v11 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 48) = &qword_2550250;
  int v12 = *(_DWORD *)(a2 + 16);
  if (v12)
  {
    uint64_t v13 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v13 = (uint64_t *)*v13;
    }
    sub_1881DF4((std::string **)(a1 + 48), (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL), v13);
    int v12 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 56) = &qword_2550250;
  if ((v12 & 2) != 0)
  {
    uint64_t v14 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v14 = (uint64_t *)*v14;
    }
    sub_1881DF4((std::string **)(a1 + 56), (long long *)(*(void *)(a2 + 56) & 0xFFFFFFFFFFFFFFFELL), v14);
  }
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  return a1;
}

void sub_14625C0(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_1462604(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_9;
    }
  }
  else if (v4)
  {
    goto LABEL_9;
  }
  int v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 56) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 56));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_9:
  sub_14935CC((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_14626C8(uint64_t a1)
{
  sub_1462604(a1);

  operator delete();
}

uint64_t sub_1462700(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_1462700(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  int v5 = *(_DWORD *)(v1 + 16);
  if ((v5 & 3) != 0)
  {
    if (v5)
    {
      unint64_t v6 = *(void *)(v1 + 48) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v6 + 23) < 0)
      {
        **(unsigned char **)unint64_t v6 = 0;
        *(void *)(v6 + 8) = 0;
        if ((v5 & 2) == 0) {
          goto LABEL_15;
        }
        goto LABEL_10;
      }
      *(unsigned char *)unint64_t v6 = 0;
      *(unsigned char *)(v6 + 23) = 0;
    }
    if ((v5 & 2) == 0) {
      goto LABEL_15;
    }
LABEL_10:
    unint64_t v7 = *(void *)(v1 + 56) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v7 + 23) < 0)
    {
      **(unsigned char **)unint64_t v7 = 0;
      *(void *)(v7 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v7 = 0;
      *(unsigned char *)(v7 + 23) = 0;
    }
  }
LABEL_15:
  char v9 = *(unsigned char *)(v1 + 8);
  uint64_t v8 = v1 + 8;
  *(_DWORD *)(v8 + 56) = 0;
  *(_DWORD *)(v8 + 8) = 0;
  if (v9)
  {
    return sub_188B4AC((uint64_t *)v8);
  }
  return result;
}

uint64_t sub_14627EC(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)BOOL v30 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v30, a3[11].i32[1])) {
    return *(void *)v30;
  }
  unint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    unint64_t v7 = (char *)(*(void *)v30 + 1);
    unsigned int v8 = **(unsigned char **)v30;
    if ((char)**(unsigned char **)v30 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        unint64_t v7 = (char *)sub_188C180(*(uint64_t *)v30, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        unint64_t v7 = (char *)(*(void *)v30 + 2);
      }
    }
    *(void *)BOOL v30 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 8) {
          goto LABEL_35;
        }
        uint64_t v11 = v7 + 1;
        unint64_t v12 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v13 = *v11;
        int v14 = v12 + (v13 << 7);
        unint64_t v12 = (v14 - 128);
        if (v13 < 0)
        {
          *(void *)BOOL v30 = sub_188C138((uint64_t)v7, (v14 - 128));
          if (!*(void *)v30) {
            return 0;
          }
          unint64_t v12 = v28;
        }
        else
        {
          uint64_t v11 = v7 + 2;
LABEL_13:
          *(void *)BOOL v30 = v11;
        }
        if (v12 > 3)
        {
          if (*v6) {
            uint64_t v29 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v29 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(1, v12, v29);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 4u;
          *(_DWORD *)(a1 + 64) = v12;
        }
        goto LABEL_43;
      case 4u:
        if (v8 != 34) {
          goto LABEL_35;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v15 = *(void *)(a1 + 8);
        unint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          unint64_t v16 = (uint64_t *)*v16;
        }
        uint64_t v17 = (void *)(a1 + 48);
        goto LABEL_24;
      case 5u:
        if (v8 != 42) {
          goto LABEL_35;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v18 = *(void *)(a1 + 8);
        unint64_t v16 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
        if (v18) {
          unint64_t v16 = (uint64_t *)*v16;
        }
        uint64_t v17 = (void *)(a1 + 56);
LABEL_24:
        int v19 = (std::string *)sub_1880F84(v17, v16);
        int64_t v20 = (void *)sub_188C244(v19, *(char **)v30, (uint64_t)a3);
        goto LABEL_42;
      case 6u:
        if (v8 != 50) {
          goto LABEL_35;
        }
        uint64_t v21 = v7 - 1;
        while (1)
        {
          *(void *)BOOL v30 = v21 + 1;
          uint64_t v22 = *(_DWORD **)(a1 + 40);
          if (v22 && (uint64_t v23 = *(int *)(a1 + 32), (int)v23 < *v22))
          {
            *(_DWORD *)(a1 + 32) = v23 + 1;
            uint64_t v24 = *(void *)&v22[2 * v23 + 2];
          }
          else
          {
            uint64_t v25 = sub_1478EAC(*(void *)(a1 + 24));
            uint64_t v24 = sub_188CDC8(a1 + 24, v25);
          }
          uint64_t v21 = (char *)sub_1462B04(a3, v24);
          *(void *)BOOL v30 = v21;
          if (!v21) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v21 || *v21 != 50) {
            goto LABEL_43;
          }
        }
      default:
LABEL_35:
        if (v8) {
          BOOL v26 = (v8 & 7) == 4;
        }
        else {
          BOOL v26 = 1;
        }
        if (!v26)
        {
          if (*v6)
          {
            uint64_t v27 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v27 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unint64_t v7 = *(char **)v30;
          }
          int64_t v20 = sub_1885AC0(v8, v27, v7, a3);
LABEL_42:
          *(void *)BOOL v30 = v20;
          if (!v20) {
            return 0;
          }
LABEL_43:
          if (sub_11947B8((uint64_t)a3, (char **)v30, a3[11].i32[1])) {
            return *(void *)v30;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return *(void *)v30;
    }
  }
}

uint64_t sub_1462B04(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_14627EC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_1462B94(uint64_t a1, unsigned char *a2, void *a3)
{
  uint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unint64_t v7 = *(int *)(a1 + 64);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  if ((v6 & 2) != 0) {
    uint64_t v4 = sub_117A0AC(a3, 5, (const void **)(*(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  int v10 = *(_DWORD *)(a1 + 32);
  if (v10)
  {
    for (int i = 0; i != v10; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v12 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      unsigned char *v4 = 50;
      unsigned int v13 = *(_DWORD *)(v12 + 20);
      v4[1] = v13;
      if (v13 > 0x7F) {
        int v14 = sub_188A9CC(v13, v4 + 1);
      }
      else {
        int v14 = v4 + 2;
      }
      uint64_t v4 = (unsigned char *)sub_1462B94(v12, v14, a3);
    }
  }
  uint64_t v15 = *(void *)(a1 + 8);
  if ((v15 & 1) == 0) {
    return (uint64_t)v4;
  }
  unint64_t v17 = v15 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v17 + 31) < 0)
  {
    uint64_t v18 = *(void **)(v17 + 8);
    uint64_t v19 = *(void *)(v17 + 16);
  }
  else
  {
    uint64_t v18 = (void *)(v17 + 8);
    LODWORD(v19) = *(unsigned __int8 *)(v17 + 31);
  }
  if (*a3 - (void)v4 >= (int)v19)
  {
    uint64_t v20 = (int)v19;
    memcpy(v4, v18, (int)v19);
    v4 += v20;
    return (uint64_t)v4;
  }

  return sub_188A528(a3, (char *)v18, v19, v4);
}

uint64_t sub_1462D98(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 4) != 0)
  {
    int v4 = *(_DWORD *)(a1 + 64);
    if (v4 < 0) {
      uint64_t v3 = 11;
    }
    else {
      uint64_t v3 = ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  else
  {
    uint64_t v3 = 0;
  }
  uint64_t v5 = *(int *)(a1 + 32);
  uint64_t v6 = v3 + v5;
  uint64_t v7 = *(void *)(a1 + 40);
  if (v7) {
    unint64_t v8 = (uint64_t *)(v7 + 8);
  }
  else {
    unint64_t v8 = 0;
  }
  if (v5)
  {
    uint64_t v9 = 8 * v5;
    do
    {
      uint64_t v10 = *v8++;
      uint64_t v11 = sub_1462D98(v10);
      v6 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6);
      v9 -= 8;
    }
    while (v9);
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 3) != 0)
  {
    if (v2)
    {
      unint64_t v12 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v13 = *(unsigned __int8 *)(v12 + 23);
      uint64_t v14 = *(void *)(v12 + 8);
      if ((v13 & 0x80u) == 0) {
        uint64_t v14 = v13;
      }
      v6 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v2 & 2) != 0)
    {
      unint64_t v15 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v16 = *(unsigned __int8 *)(v15 + 23);
      uint64_t v17 = *(void *)(v15 + 8);
      if ((v16 & 0x80u) == 0) {
        uint64_t v17 = v16;
      }
      v6 += v17 + ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  uint64_t v18 = *(void *)(a1 + 8);
  if (v18)
  {
    unint64_t v20 = v18 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v20 + 31) < 0) {
      uint64_t v21 = *(void *)(v20 + 16);
    }
    else {
      uint64_t v21 = *(unsigned __int8 *)(v20 + 31);
    }
    v6 += v21;
  }
  *(_DWORD *)(a1 + 20) = v6;
  return v6;
}

std::string *sub_1462F14(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = (std::string *)sub_1494188((uint64_t *)&v3[1], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2]- LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    unint64_t v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *unint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 7) != 0)
  {
    if (v9)
    {
      uint64_t v11 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v13 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v13 = (uint64_t *)*v13;
      }
      uint64_t result = sub_1881DF4((std::string **)&v3[2], v11, v13);
      if ((v9 & 2) == 0)
      {
LABEL_7:
        if ((v9 & 4) == 0)
        {
LABEL_9:
          LODWORD(v3->__r_.__value_.__r.__words[2]) |= v9;
          goto LABEL_10;
        }
LABEL_8:
        LODWORD(v3[2].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 64);
        goto LABEL_9;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_7;
    }
    uint64_t v14 = (long long *)(*(void *)(a2 + 56) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    std::string::size_type v15 = v3->__r_.__value_.__l.__size_;
    uint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
    if (v15) {
      uint64_t v16 = (uint64_t *)*v16;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[2].__r_.__value_.__l.__size_, v14, v16);
    if ((v9 & 4) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
LABEL_10:
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

BOOL sub_146307C(uint64_t a1)
{
  return (*(unsigned char *)(a1 + 16) & 4) != 0 && sub_1463094(a1 + 24);
}

BOOL sub_1463094(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 8);
  do
  {
    int v3 = v2;
    if ((int)v2 < 1) {
      break;
    }
    uint64_t v4 = *(void *)(*(void *)(a1 + 16) + 8 * v2);
    if ((*(unsigned char *)(v4 + 16) & 4) == 0) {
      break;
    }
    --v2;
  }
  while ((sub_1463094(v4 + 24) & 1) != 0);
  return v3 < 1;
}

void *sub_14630F4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.PlaceSearchRequest.IndexQueryNode");
}

double sub_1463104(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3 = a2 | 2;
  if (!a3) {
    uint64_t v3 = a2;
  }
  *(void *)a1 = off_24B5B88;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = a2;
  double result = 0.0;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = a2;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = a2;
  *(void *)(a1 + 80) = a2;
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 104) = a2;
  *(void *)(a1 + 112) = 0;
  *(void *)(a1 + 120) = 0;
  *(void *)(a1 + 128) = a2;
  *(void *)(a1 + 136) = 0;
  *(void *)(a1 + 144) = 0;
  *(void *)(a1 + 152) = a2;
  *(void *)(a1 + 160) = 0;
  *(void *)(a1 + 168) = 0;
  *(void *)(a1 + 176) = a2;
  *(void *)(a1 + 184) = 0;
  *(void *)(a1 + 192) = 0;
  *(void *)(a1 + 200) = 0;
  *(void *)(a1 + 208) = a2;
  *(void *)(a1 + 216) = &qword_2550250;
  *(void *)(a1 + 224) = &qword_2550250;
  *(void *)(a1 + 232) = &qword_2550250;
  *(void *)(a1 + 240) = &qword_2550250;
  *(void *)(a1 + 248) = &qword_2550250;
  *(void *)(a1 + 256) = &qword_2550250;
  *(void *)(a1 + 264) = &qword_2550250;
  *(void *)(a1 + 272) = &qword_2550250;
  *(void *)(a1 + 280) = &qword_2550250;
  *(void *)(a1 + 288) = &qword_2550250;
  *(void *)(a1 + 520) = 0;
  *(_OWORD *)(a1 + 488) = 0u;
  *(_OWORD *)(a1 + 504) = 0u;
  *(_OWORD *)(a1 + 456) = 0u;
  *(_OWORD *)(a1 + 472) = 0u;
  *(_OWORD *)(a1 + 424) = 0u;
  *(_OWORD *)(a1 + 440) = 0u;
  *(_OWORD *)(a1 + 392) = 0u;
  *(_OWORD *)(a1 + 408) = 0u;
  *(_OWORD *)(a1 + 360) = 0u;
  *(_OWORD *)(a1 + 376) = 0u;
  *(_OWORD *)(a1 + 328) = 0u;
  *(_OWORD *)(a1 + 344) = 0u;
  *(_OWORD *)(a1 + 296) = 0u;
  *(_OWORD *)(a1 + 312) = 0u;
  *(_DWORD *)(a1 + 528) = 10;
  return result;
}

uint64_t sub_14631B4(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)a1 = off_24B5B88;
  uint64_t v6 = (int *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 16);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 36) = 0;
  *(void *)(a1 + 28) = 0;
  *(_DWORD *)(a1 + 44) = 0;
  int v7 = *(_DWORD *)(a2 + 32);
  if (v7)
  {
    sub_188CA54((unsigned int *)(a1 + 32), v7);
    unint64_t v8 = *(void **)(a1 + 40);
    *(_DWORD *)(a1 + 32) += *(_DWORD *)(a2 + 32);
    memcpy(v8, *(const void **)(a2 + 40), 8 * *(int *)(a2 + 32));
  }
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  int v9 = *(_DWORD *)(a2 + 48);
  if (v9)
  {
    sub_188CA54((unsigned int *)(a1 + 48), v9);
    uint64_t v10 = *(void **)(a1 + 56);
    *(_DWORD *)(a1 + 48) += *(_DWORD *)(a2 + 48);
    memcpy(v10, *(const void **)(a2 + 56), 8 * *(int *)(a2 + 48));
  }
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = 0;
  int v11 = *(_DWORD *)(a2 + 64);
  if (v11)
  {
    sub_188C80C((unsigned int *)(a1 + 64), v11);
    unint64_t v12 = *(void **)(a1 + 72);
    *(_DWORD *)(a1 + 64) += *(_DWORD *)(a2 + 64);
    memcpy(v12, *(const void **)(a2 + 72), 4 * *(int *)(a2 + 64));
  }
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = 0;
  int v13 = *(_DWORD *)(a2 + 88);
  if (v13)
  {
    uint64_t v14 = *(void *)(a2 + 96);
    std::string::size_type v15 = (std::string **)sub_188CCE4(a1 + 80, v13);
    sub_188FB98(a1 + 80, v15, (const std::string **)(v14 + 8), v13, **(_DWORD **)(a1 + 96) - *(_DWORD *)(a1 + 88));
    int v16 = *(_DWORD *)(a1 + 88) + v13;
    *(_DWORD *)(a1 + 88) = v16;
    uint64_t v17 = *(int **)(a1 + 96);
    if (*v17 < v16) {
      *uint64_t v17 = v16;
    }
  }
  *(void *)(a1 + 104) = 0;
  *(void *)(a1 + 112) = 0;
  *(void *)(a1 + 120) = 0;
  int v18 = *(_DWORD *)(a2 + 112);
  if (v18)
  {
    uint64_t v19 = *(void *)(a2 + 120);
    unint64_t v20 = (std::string **)sub_188CCE4(a1 + 104, *(_DWORD *)(a2 + 112));
    sub_188FB98(a1 + 104, v20, (const std::string **)(v19 + 8), v18, **(_DWORD **)(a1 + 120) - *(_DWORD *)(a1 + 112));
    int v21 = *(_DWORD *)(a1 + 112) + v18;
    *(_DWORD *)(a1 + 112) = v21;
    uint64_t v22 = *(int **)(a1 + 120);
    if (*v22 < v21) {
      *uint64_t v22 = v21;
    }
  }
  *(void *)(a1 + 128) = 0;
  *(void *)(a1 + 136) = 0;
  *(void *)(a1 + 144) = 0;
  int v23 = *(_DWORD *)(a2 + 136);
  if (v23)
  {
    uint64_t v24 = *(void *)(a2 + 144);
    uint64_t v25 = (std::string **)sub_188CCE4(a1 + 128, *(_DWORD *)(a2 + 136));
    sub_188FB98(a1 + 128, v25, (const std::string **)(v24 + 8), v23, **(_DWORD **)(a1 + 144) - *(_DWORD *)(a1 + 136));
    int v26 = *(_DWORD *)(a1 + 136) + v23;
    *(_DWORD *)(a1 + 136) = v26;
    uint64_t v27 = *(int **)(a1 + 144);
    if (*v27 < v26) {
      *uint64_t v27 = v26;
    }
  }
  *(void *)(a1 + 152) = 0;
  *(void *)(a1 + 160) = 0;
  *(void *)(a1 + 168) = 0;
  int v28 = *(_DWORD *)(a2 + 160);
  if (v28)
  {
    uint64_t v29 = *(void *)(a2 + 168);
    BOOL v30 = (std::string **)sub_188CCE4(a1 + 152, *(_DWORD *)(a2 + 160));
    sub_1494214((uint64_t *)(a1 + 152), v30, (uint64_t *)(v29 + 8), v28, **(_DWORD **)(a1 + 168) - *(_DWORD *)(a1 + 160));
    int v31 = *(_DWORD *)(a1 + 160) + v28;
    *(_DWORD *)(a1 + 160) = v31;
    unint64_t v32 = *(int **)(a1 + 168);
    if (*v32 < v31) {
      *unint64_t v32 = v31;
    }
  }
  *(void *)(a1 + 176) = 0;
  *(void *)(a1 + 184) = 0;
  *(void *)(a1 + 192) = 0;
  int v33 = *(_DWORD *)(a2 + 184);
  if (v33)
  {
    uint64_t v34 = *(void *)(a2 + 192);
    uint64_t v35 = (std::string **)sub_188CCE4(a1 + 176, *(_DWORD *)(a2 + 184));
    sub_11DB348((uint64_t *)(a1 + 176), v35, (uint64_t *)(v34 + 8), v33, **(_DWORD **)(a1 + 192) - *(_DWORD *)(a1 + 184));
    int v36 = *(_DWORD *)(a1 + 184) + v33;
    *(_DWORD *)(a1 + 184) = v36;
    uint64_t v37 = *(int **)(a1 + 192);
    if (*v37 < v36) {
      *uint64_t v37 = v36;
    }
  }
  *(void *)(a1 + 200) = 0;
  *(void *)(a1 + 208) = 0;
  int v38 = *(_DWORD *)(a2 + 200);
  if (v38)
  {
    sub_188C80C((unsigned int *)(a1 + 200), v38);
    uint64_t v39 = *(void **)(a1 + 208);
    *(_DWORD *)(a1 + 200) += *(_DWORD *)(a2 + 200);
    memcpy(v39, *(const void **)(a2 + 208), 4 * *(int *)(a2 + 200));
  }
  uint64_t v40 = *(void *)(a2 + 8);
  if (v40) {
    sub_188B4F8(v4, (v40 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 216) = &qword_2550250;
  int v41 = *v6;
  if (*v6)
  {
    uint64_t v42 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v42 = (uint64_t *)*v42;
    }
    sub_1881DF4((std::string **)(a1 + 216), (long long *)(*(void *)(a2 + 216) & 0xFFFFFFFFFFFFFFFELL), v42);
    int v41 = *v6;
  }
  *(void *)(a1 + 224) = &qword_2550250;
  if ((v41 & 2) != 0)
  {
    uint64_t v43 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v43 = (uint64_t *)*v43;
    }
    sub_1881DF4((std::string **)(a1 + 224), (long long *)(*(void *)(a2 + 224) & 0xFFFFFFFFFFFFFFFELL), v43);
    int v41 = *v6;
  }
  *(void *)(a1 + 232) = &qword_2550250;
  if ((v41 & 4) != 0)
  {
    uint64_t v44 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v44 = (uint64_t *)*v44;
    }
    sub_1881DF4((std::string **)(a1 + 232), (long long *)(*(void *)(a2 + 232) & 0xFFFFFFFFFFFFFFFELL), v44);
    int v41 = *v6;
  }
  *(void *)(a1 + 240) = &qword_2550250;
  if ((v41 & 8) != 0)
  {
    int v45 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      int v45 = (uint64_t *)*v45;
    }
    sub_1881DF4((std::string **)(a1 + 240), (long long *)(*(void *)(a2 + 240) & 0xFFFFFFFFFFFFFFFELL), v45);
    int v41 = *v6;
  }
  *(void *)(a1 + 248) = &qword_2550250;
  if ((v41 & 0x10) != 0)
  {
    unint64_t v46 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      unint64_t v46 = (uint64_t *)*v46;
    }
    sub_1881DF4((std::string **)(a1 + 248), (long long *)(*(void *)(a2 + 248) & 0xFFFFFFFFFFFFFFFELL), v46);
    int v41 = *v6;
  }
  *(void *)(a1 + 256) = &qword_2550250;
  if ((v41 & 0x20) != 0)
  {
    uint64_t v47 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v47 = (uint64_t *)*v47;
    }
    sub_1881DF4((std::string **)(a1 + 256), (long long *)(*(void *)(a2 + 256) & 0xFFFFFFFFFFFFFFFELL), v47);
    int v41 = *v6;
  }
  *(void *)(a1 + 264) = &qword_2550250;
  if ((v41 & 0x40) != 0)
  {
    uint64_t v48 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v48 = (uint64_t *)*v48;
    }
    sub_1881DF4((std::string **)(a1 + 264), (long long *)(*(void *)(a2 + 264) & 0xFFFFFFFFFFFFFFFELL), v48);
    int v41 = *v6;
  }
  *(void *)(a1 + 272) = &qword_2550250;
  if ((v41 & 0x80) != 0)
  {
    uint64_t v49 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v49 = (uint64_t *)*v49;
    }
    sub_1881DF4((std::string **)(a1 + 272), (long long *)(*(void *)(a2 + 272) & 0xFFFFFFFFFFFFFFFELL), v49);
    int v41 = *v6;
  }
  *(void *)(a1 + 280) = &qword_2550250;
  if ((v41 & 0x100) != 0)
  {
    uint64_t v50 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v50 = (uint64_t *)*v50;
    }
    sub_1881DF4((std::string **)(a1 + 280), (long long *)(*(void *)(a2 + 280) & 0xFFFFFFFFFFFFFFFELL), v50);
    int v41 = *v6;
  }
  *(void *)(a1 + 288) = &qword_2550250;
  if ((v41 & 0x200) != 0)
  {
    uint64_t v51 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v51 = (uint64_t *)*v51;
    }
    sub_1881DF4((std::string **)(a1 + 288), (long long *)(*(void *)(a2 + 288) & 0xFFFFFFFFFFFFFFFELL), v51);
    int v41 = *v6;
  }
  if ((v41 & 0x400) != 0) {
    operator new();
  }
  *(void *)(a1 + 296) = 0;
  if ((v41 & 0x800) != 0) {
    operator new();
  }
  *(void *)(a1 + 304) = 0;
  if ((v41 & 0x1000) != 0) {
    operator new();
  }
  *(void *)(a1 + 312) = 0;
  if ((v41 & 0x2000) != 0) {
    operator new();
  }
  *(void *)(a1 + 320) = 0;
  if ((v41 & 0x4000) != 0) {
    operator new();
  }
  *(void *)(a1 + 328) = 0;
  if ((v41 & 0x8000) != 0) {
    operator new();
  }
  *(void *)(a1 + 336) = 0;
  if ((v41 & 0x10000) != 0) {
    operator new();
  }
  *(void *)(a1 + 344) = 0;
  if ((v41 & 0x20000) != 0) {
    operator new();
  }
  *(void *)(a1 + 352) = 0;
  if ((v41 & 0x40000) != 0) {
    operator new();
  }
  *(void *)(a1 + 360) = 0;
  if ((v41 & 0x80000) != 0) {
    operator new();
  }
  *(void *)(a1 + 368) = 0;
  if ((v41 & 0x100000) != 0) {
    operator new();
  }
  *(void *)(a1 + 376) = 0;
  if ((v41 & 0x200000) != 0) {
    operator new();
  }
  *(void *)(a1 + 384) = 0;
  if ((v41 & 0x400000) != 0) {
    operator new();
  }
  *(void *)(a1 + 392) = 0;
  if ((v41 & 0x800000) != 0) {
    operator new();
  }
  *(void *)(a1 + 400) = 0;
  long long v52 = *(_OWORD *)(a2 + 408);
  long long v53 = *(_OWORD *)(a2 + 424);
  long long v54 = *(_OWORD *)(a2 + 456);
  *(_OWORD *)(a1 + 440) = *(_OWORD *)(a2 + 440);
  *(_OWORD *)(a1 + 456) = v54;
  *(_OWORD *)(a1 + 408) = v52;
  *(_OWORD *)(a1 + 424) = v53;
  long long v55 = *(_OWORD *)(a2 + 472);
  long long v56 = *(_OWORD *)(a2 + 488);
  long long v57 = *(_OWORD *)(a2 + 504);
  *(_OWORD *)(a1 + 516) = *(_OWORD *)(a2 + 516);
  *(_OWORD *)(a1 + 488) = v56;
  *(_OWORD *)(a1 + 504) = v57;
  *(_OWORD *)(a1 + 472) = v55;
  return a1;
}

void sub_1463A8C()
{
}

void *sub_1463C50(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_1463D24((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  sub_1889DA8((uint64_t)(a1 + 25));
  sub_11DB1BC(a1 + 22);
  sub_149364C(a1 + 19);
  sub_1889DE8(a1 + 16);
  sub_1889DE8(a1 + 13);
  sub_1889DE8(a1 + 10);
  sub_1889DA8((uint64_t)(a1 + 8));
  sub_1889DA8((uint64_t)(a1 + 6));
  sub_1889DA8((uint64_t)(a1 + 4));
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void ***sub_1463D24(uint64_t a1)
{
  uint64_t v3 = *(uint64_t **)(a1 + 216);
  uint64_t v2 = (void ***)(a1 + 216);
  if (v3 != &qword_2550250) {
    sub_1881C6C(v2);
  }
  if (*(uint64_t **)(a1 + 224) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 224));
  }
  if (*(uint64_t **)(a1 + 232) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 232));
  }
  if (*(uint64_t **)(a1 + 240) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 240));
  }
  double result = (void ***)(a1 + 248);
  if (*(uint64_t **)(a1 + 248) != &qword_2550250) {
    sub_1881C6C(result);
  }
  if (*(uint64_t **)(a1 + 256) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 256));
  }
  if (*(uint64_t **)(a1 + 264) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 264));
  }
  if (*(uint64_t **)(a1 + 272) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 272));
  }
  if (*(uint64_t **)(a1 + 280) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 280));
  }
  if (*(uint64_t **)(a1 + 288) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 288));
  }
  if ((uint64_t (***)())a1 != &off_2539528)
  {
    if (*(void *)(a1 + 296))
    {
      sub_15B8F7C();
      operator delete();
    }
    uint64_t v5 = *(void *)(a1 + 304);
    if (v5)
    {
      sub_15B3DFC(v5);
      operator delete();
    }
    uint64_t v6 = *(void *)(a1 + 312);
    if (v6)
    {
      sub_15B1678(v6);
      operator delete();
    }
    if (*(void *)(a1 + 320))
    {
      sub_15B9F30();
      operator delete();
    }
    int v7 = *(void **)(a1 + 328);
    if (v7)
    {
      sub_1460D84(v7);
      operator delete();
    }
    if (*(void *)(a1 + 336))
    {
      sub_15B0994();
      operator delete();
    }
    unint64_t v8 = *(void **)(a1 + 344);
    if (v8)
    {
      sub_145A5CC(v8);
      operator delete();
    }
    uint64_t v9 = *(void *)(a1 + 352);
    if (v9)
    {
      sub_145EA3C(v9);
      operator delete();
    }
    uint64_t v10 = *(void **)(a1 + 360);
    if (v10)
    {
      sub_1461AA8(v10);
      operator delete();
    }
    if (*(void *)(a1 + 368))
    {
      sub_15B8F7C();
      operator delete();
    }
    uint64_t v11 = *(void *)(a1 + 376);
    if (v11)
    {
      sub_1462604(v11);
      operator delete();
    }
    if (*(void *)(a1 + 384))
    {
      sub_15B0994();
      operator delete();
    }
    if (*(void *)(a1 + 392))
    {
      sub_15B0994();
      operator delete();
    }
    double result = *(void ****)(a1 + 400);
    if (result)
    {
      sub_1477530(result);
      operator delete();
    }
  }
  return result;
}

void sub_1463FFC(void *a1)
{
  sub_1463C50(a1);

  operator delete();
}

uint64_t sub_1464034(uint64_t a1)
{
  *(_DWORD *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 48) = 0;
  *(_DWORD *)(a1 + 64) = 0;
  sub_188CC00(a1 + 80);
  sub_188CC00(a1 + 104);
  uint64_t result = sub_188CC00(a1 + 128);
  uint64_t v3 = *(unsigned int *)(a1 + 160);
  if ((int)v3 >= 1)
  {
    uint64_t v4 = (uint64_t *)(*(void *)(a1 + 168) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = sub_1461B5C(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 160) = 0;
  }
  uint64_t v6 = *(unsigned int *)(a1 + 184);
  if ((int)v6 >= 1)
  {
    int v7 = (uint64_t *)(*(void *)(a1 + 192) + 8);
    do
    {
      uint64_t v8 = *v7++;
      uint64_t result = sub_15BAAF0(v8);
      --v6;
    }
    while (v6);
    *(_DWORD *)(a1 + 184) = 0;
  }
  unsigned int v9 = *(_DWORD *)(a1 + 16);
  *(_DWORD *)(a1 + 200) = 0;
  if ((_BYTE)v9)
  {
    if ((v9 & 1) == 0)
    {
      if ((v9 & 2) == 0) {
        goto LABEL_12;
      }
LABEL_23:
      unint64_t v11 = *(void *)(a1 + 224) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v11 + 23) < 0)
      {
        **(unsigned char **)unint64_t v11 = 0;
        *(void *)(v11 + 8) = 0;
        if ((v9 & 4) != 0) {
          goto LABEL_27;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v11 = 0;
        *(unsigned char *)(v11 + 23) = 0;
        if ((v9 & 4) != 0) {
          goto LABEL_27;
        }
      }
LABEL_13:
      if ((v9 & 8) == 0) {
        goto LABEL_14;
      }
LABEL_31:
      unint64_t v13 = *(void *)(a1 + 240) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v13 + 23) < 0)
      {
        **(unsigned char **)unint64_t v13 = 0;
        *(void *)(v13 + 8) = 0;
        if ((v9 & 0x10) != 0) {
          goto LABEL_35;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v13 = 0;
        *(unsigned char *)(v13 + 23) = 0;
        if ((v9 & 0x10) != 0) {
          goto LABEL_35;
        }
      }
LABEL_15:
      if ((v9 & 0x20) == 0) {
        goto LABEL_16;
      }
LABEL_39:
      unint64_t v15 = *(void *)(a1 + 256) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v15 + 23) < 0)
      {
        **(unsigned char **)unint64_t v15 = 0;
        *(void *)(v15 + 8) = 0;
        if ((v9 & 0x40) != 0) {
          goto LABEL_43;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v15 = 0;
        *(unsigned char *)(v15 + 23) = 0;
        if ((v9 & 0x40) != 0) {
          goto LABEL_43;
        }
      }
LABEL_17:
      if ((v9 & 0x80) == 0) {
        goto LABEL_50;
      }
LABEL_47:
      unint64_t v17 = *(void *)(a1 + 272) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v17 + 23) < 0)
      {
        **(unsigned char **)unint64_t v17 = 0;
        *(void *)(v17 + 8) = 0;
      }
      else
      {
        *(unsigned char *)unint64_t v17 = 0;
        *(unsigned char *)(v17 + 23) = 0;
      }
      goto LABEL_50;
    }
    unint64_t v10 = *(void *)(a1 + 216) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v10 + 23) < 0)
    {
      **(unsigned char **)unint64_t v10 = 0;
      *(void *)(v10 + 8) = 0;
      if ((v9 & 2) != 0) {
        goto LABEL_23;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v10 = 0;
      *(unsigned char *)(v10 + 23) = 0;
      if ((v9 & 2) != 0) {
        goto LABEL_23;
      }
    }
LABEL_12:
    if ((v9 & 4) == 0) {
      goto LABEL_13;
    }
LABEL_27:
    unint64_t v12 = *(void *)(a1 + 232) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v12 + 23) < 0)
    {
      **(unsigned char **)unint64_t v12 = 0;
      *(void *)(v12 + 8) = 0;
      if ((v9 & 8) != 0) {
        goto LABEL_31;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v12 = 0;
      *(unsigned char *)(v12 + 23) = 0;
      if ((v9 & 8) != 0) {
        goto LABEL_31;
      }
    }
LABEL_14:
    if ((v9 & 0x10) == 0) {
      goto LABEL_15;
    }
LABEL_35:
    unint64_t v14 = *(void *)(a1 + 248) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v14 + 23) < 0)
    {
      **(unsigned char **)unint64_t v14 = 0;
      *(void *)(v14 + 8) = 0;
      if ((v9 & 0x20) != 0) {
        goto LABEL_39;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v14 = 0;
      *(unsigned char *)(v14 + 23) = 0;
      if ((v9 & 0x20) != 0) {
        goto LABEL_39;
      }
    }
LABEL_16:
    if ((v9 & 0x40) == 0) {
      goto LABEL_17;
    }
LABEL_43:
    unint64_t v16 = *(void *)(a1 + 264) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v16 + 23) < 0)
    {
      **(unsigned char **)unint64_t v16 = 0;
      *(void *)(v16 + 8) = 0;
      if ((v9 & 0x80) == 0) {
        goto LABEL_50;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v16 = 0;
      *(unsigned char *)(v16 + 23) = 0;
      if ((v9 & 0x80) == 0) {
        goto LABEL_50;
      }
    }
    goto LABEL_47;
  }
LABEL_50:
  if ((v9 & 0xFF00) == 0) {
    goto LABEL_60;
  }
  if ((v9 & 0x100) == 0)
  {
    if ((v9 & 0x200) == 0) {
      goto LABEL_53;
    }
LABEL_98:
    unint64_t v22 = *(void *)(a1 + 288) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v22 + 23) < 0)
    {
      **(unsigned char **)unint64_t v22 = 0;
      *(void *)(v22 + 8) = 0;
      if ((v9 & 0x400) != 0) {
        goto LABEL_102;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v22 = 0;
      *(unsigned char *)(v22 + 23) = 0;
      if ((v9 & 0x400) != 0) {
        goto LABEL_102;
      }
    }
LABEL_54:
    if ((v9 & 0x800) == 0) {
      goto LABEL_55;
    }
    goto LABEL_103;
  }
  unint64_t v21 = *(void *)(a1 + 280) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v21 + 23) < 0)
  {
    **(unsigned char **)unint64_t v21 = 0;
    *(void *)(v21 + 8) = 0;
    if ((v9 & 0x200) != 0) {
      goto LABEL_98;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v21 = 0;
    *(unsigned char *)(v21 + 23) = 0;
    if ((v9 & 0x200) != 0) {
      goto LABEL_98;
    }
  }
LABEL_53:
  if ((v9 & 0x400) == 0) {
    goto LABEL_54;
  }
LABEL_102:
  uint64_t result = sub_15B8FB8(*(void *)(a1 + 296));
  if ((v9 & 0x800) == 0)
  {
LABEL_55:
    if ((v9 & 0x1000) == 0) {
      goto LABEL_56;
    }
    goto LABEL_104;
  }
LABEL_103:
  uint64_t result = sub_15B043C(*(void *)(a1 + 304));
  if ((v9 & 0x1000) == 0)
  {
LABEL_56:
    if ((v9 & 0x2000) == 0) {
      goto LABEL_57;
    }
    goto LABEL_105;
  }
LABEL_104:
  uint64_t result = (uint64_t)sub_15B16B4(*(unsigned char **)(a1 + 312));
  if ((v9 & 0x2000) == 0)
  {
LABEL_57:
    if ((v9 & 0x4000) == 0) {
      goto LABEL_58;
    }
    goto LABEL_106;
  }
LABEL_105:
  uint64_t result = sub_15B9F6C(*(void *)(a1 + 320));
  if ((v9 & 0x4000) == 0)
  {
LABEL_58:
    if ((v9 & 0x8000) == 0) {
      goto LABEL_60;
    }
    goto LABEL_59;
  }
LABEL_106:
  uint64_t result = sub_1460E44(*(void *)(a1 + 328));
  if ((v9 & 0x8000) != 0) {
LABEL_59:
  }
    uint64_t result = (uint64_t)sub_15B09D0(*(void *)(a1 + 336));
LABEL_60:
  if ((v9 & 0xFF0000) == 0) {
    goto LABEL_70;
  }
  if ((v9 & 0x10000) != 0)
  {
    uint64_t result = sub_13E0F24(*(void *)(a1 + 344));
    if ((v9 & 0x20000) == 0)
    {
LABEL_63:
      if ((v9 & 0x40000) == 0) {
        goto LABEL_64;
      }
      goto LABEL_91;
    }
  }
  else if ((v9 & 0x20000) == 0)
  {
    goto LABEL_63;
  }
  uint64_t result = (uint64_t)sub_145EB34(*(void *)(a1 + 352));
  if ((v9 & 0x40000) == 0)
  {
LABEL_64:
    if ((v9 & 0x80000) == 0) {
      goto LABEL_65;
    }
    goto LABEL_92;
  }
LABEL_91:
  uint64_t result = sub_1461B5C(*(void *)(a1 + 360));
  if ((v9 & 0x80000) == 0)
  {
LABEL_65:
    if ((v9 & 0x100000) == 0) {
      goto LABEL_66;
    }
    goto LABEL_93;
  }
LABEL_92:
  uint64_t result = sub_15B8FB8(*(void *)(a1 + 368));
  if ((v9 & 0x100000) == 0)
  {
LABEL_66:
    if ((v9 & 0x200000) == 0) {
      goto LABEL_67;
    }
    goto LABEL_94;
  }
LABEL_93:
  uint64_t result = sub_1462700(*(void *)(a1 + 376));
  if ((v9 & 0x200000) == 0)
  {
LABEL_67:
    if ((v9 & 0x400000) == 0) {
      goto LABEL_68;
    }
    goto LABEL_95;
  }
LABEL_94:
  uint64_t result = (uint64_t)sub_15B09D0(*(void *)(a1 + 384));
  if ((v9 & 0x400000) == 0)
  {
LABEL_68:
    if ((v9 & 0x800000) == 0) {
      goto LABEL_70;
    }
    goto LABEL_69;
  }
LABEL_95:
  uint64_t result = (uint64_t)sub_15B09D0(*(void *)(a1 + 392));
  if ((v9 & 0x800000) != 0) {
LABEL_69:
  }
    uint64_t result = sub_13E123C(*(void *)(a1 + 400));
LABEL_70:
  if (HIBYTE(v9))
  {
    *(void *)(a1 + 408) = 0;
    *(void *)(a1 + 416) = 0;
    *(void *)(a1 + 424) = 0;
  }
  unsigned int v18 = *(_DWORD *)(a1 + 20);
  if ((_BYTE)v18)
  {
    *(void *)(a1 + 432) = 0;
    *(void *)(a1 + 440) = 0;
    *(void *)(a1 + 448) = 0;
  }
  if ((v18 & 0xFF00) != 0)
  {
    *(void *)(a1 + 456) = 0;
    *(void *)(a1 + 464) = 0;
    *(_DWORD *)(a1 + 480) = 0;
    *(void *)(a1 + 472) = 0;
  }
  if ((v18 & 0xFF0000) != 0)
  {
    *(void *)(a1 + 491) = 0;
    *(void *)(a1 + 484) = 0;
  }
  if (HIBYTE(v18))
  {
    *(void *)(a1 + 512) = 0;
    *(void *)(a1 + 507) = 0;
    *(void *)(a1 + 499) = 0;
  }
  if ((*(unsigned char *)(a1 + 24) & 0x1F) != 0)
  {
    *(void *)(a1 + 520) = 0;
    *(_DWORD *)(a1 + 528) = 10;
  }
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 16) = 0;
  char v20 = *(unsigned char *)(a1 + 8);
  uint64_t v19 = (uint64_t *)(a1 + 8);
  if (v20)
  {
    return sub_188B4AC(v19);
  }
  return result;
}

char *sub_146448C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)v289 = a2;
  char v5 = sub_11947B8((uint64_t)a3, (char **)v289, a3[11].i32[1]);
  uint64_t result = *(char **)v289;
  if ((v5 & 1) == 0)
  {
    v284 = (uint64_t *)(a1 + 8);
    v285 = (uint64_t *)(a1 + 152);
    v286 = (uint64_t *)(a1 + 176);
    v287 = (uint64_t **)(a1 + 104);
    v288 = (uint64_t **)(a1 + 128);
    int v7 = (uint64_t **)(a1 + 80);
    while (1)
    {
      uint64_t v8 = (unsigned __int8 *)(result + 1);
      unsigned int v9 = *result;
      if (*result < 0)
      {
        int v10 = (char)*v8;
        unsigned int v11 = v9 + (v10 << 7);
        unsigned int v9 = v11 - 128;
        if (v10 < 0)
        {
          uint64_t v8 = (unsigned __int8 *)sub_188C180((uint64_t)result, v11 - 128);
          unsigned int v9 = v12;
        }
        else
        {
          uint64_t v8 = (unsigned __int8 *)(result + 2);
        }
      }
      *(void *)v289 = v8;
      switch(v9 >> 3)
      {
        case 1u:
          if (v9 != 8)
          {
            if (v9 != 10) {
              goto LABEL_577;
            }
            uint64_t result = (char *)sub_188C2DC((unsigned int *)(a1 + 32), v8, (uint64_t)a3);
            goto LABEL_483;
          }
          uint64_t result = (char *)(v8 - 1);
          while (1)
          {
            *(void *)v289 = result + 1;
            uint64_t v13 = result[1];
            if (result[1] < 0)
            {
              int v14 = v13 + (result[2] << 7);
              uint64_t v13 = (v14 - 128);
              if (result[2] < 0)
              {
                uint64_t result = (char *)sub_188C138((uint64_t)(result + 1), (v14 - 128));
                uint64_t v13 = v15;
              }
              else
              {
                result += 3;
              }
            }
            else
            {
              result += 2;
            }
            *(void *)v289 = result;
            uint64_t v16 = *(unsigned int *)(a1 + 32);
            if (v16 == *(_DWORD *)(a1 + 36))
            {
              int v17 = v16 + 1;
              sub_188CA54((unsigned int *)(a1 + 32), v16 + 1);
              *(void *)(*(void *)(a1 + 40) + 8 * v16) = v13;
              uint64_t result = *(char **)v289;
            }
            else
            {
              *(void *)(*(void *)(a1 + 40) + 8 * v16) = v13;
              int v17 = v16 + 1;
            }
            *(_DWORD *)(a1 + 32) = v17;
            if (!result) {
              return result;
            }
            if (*(void *)a3 <= (unint64_t)result || *result != 8) {
              goto LABEL_484;
            }
          }
        case 2u:
          if (v9 != 16)
          {
            if (v9 != 18) {
              goto LABEL_577;
            }
            uint64_t result = (char *)sub_188C2EC((unsigned int *)(a1 + 48), v8, (uint64_t)a3);
            goto LABEL_483;
          }
          uint64_t result = (char *)(v8 - 1);
          while (1)
          {
            *(void *)v289 = result + 1;
            uint64_t v18 = result[1];
            if (result[1] < 0)
            {
              int v19 = v18 + (result[2] << 7);
              uint64_t v18 = (v19 - 128);
              if (result[2] < 0)
              {
                uint64_t result = (char *)sub_188C138((uint64_t)(result + 1), (v19 - 128));
                uint64_t v18 = v20;
              }
              else
              {
                result += 3;
              }
            }
            else
            {
              result += 2;
            }
            *(void *)v289 = result;
            uint64_t v21 = *(unsigned int *)(a1 + 48);
            if (v21 == *(_DWORD *)(a1 + 52))
            {
              int v22 = v21 + 1;
              sub_188CA54((unsigned int *)(a1 + 48), v21 + 1);
              *(void *)(*(void *)(a1 + 56) + 8 * v21) = v18;
              uint64_t result = *(char **)v289;
            }
            else
            {
              *(void *)(*(void *)(a1 + 56) + 8 * v21) = v18;
              int v22 = v21 + 1;
            }
            *(_DWORD *)(a1 + 48) = v22;
            if (!result) {
              return result;
            }
            if (*(void *)a3 <= (unint64_t)result || *result != 16) {
              goto LABEL_484;
            }
          }
        case 3u:
          if (v9 != 26) {
            goto LABEL_577;
          }
          *(_DWORD *)(a1 + 16) |= 0x400u;
          uint64_t v23 = *(void *)(a1 + 296);
          if (v23) {
            goto LABEL_358;
          }
          uint64_t v24 = (void *)(*v284 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v284) {
            uint64_t v24 = (void *)*v24;
          }
          uint64_t v23 = sub_15C1EF4((uint64_t)v24);
          *(void *)(a1 + 296) = v23;
          goto LABEL_357;
        case 4u:
          if (v9 != 34) {
            goto LABEL_577;
          }
          *(_DWORD *)(a1 + 16) |= 0x800u;
          uint64_t v25 = *(void *)(a1 + 304);
          if (!v25)
          {
            int v26 = (void *)(*v284 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v284) {
              int v26 = (void *)*v26;
            }
            uint64_t v25 = sub_15C1CB4((uint64_t)v26);
            *(void *)(a1 + 304) = v25;
            uint64_t v8 = *(unsigned __int8 **)v289;
          }
          uint64_t result = sub_11B3E48(a3, v25, v8);
          goto LABEL_483;
        case 5u:
          if (v9 != 42) {
            goto LABEL_577;
          }
          *(_DWORD *)(a1 + 16) |= 1u;
          uint64_t v27 = *(void *)(a1 + 8);
          int v28 = (uint64_t *)(v27 & 0xFFFFFFFFFFFFFFFCLL);
          if (v27) {
            int v28 = (uint64_t *)*v28;
          }
          uint64_t v29 = (void *)(a1 + 216);
          goto LABEL_482;
        case 6u:
          if (v9 != 50) {
            goto LABEL_577;
          }
          *(_DWORD *)(a1 + 16) |= 0x1000u;
          uint64_t v30 = *(void *)(a1 + 312);
          if (!v30)
          {
            int v31 = (void *)(*v284 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v284) {
              int v31 = (void *)*v31;
            }
            uint64_t v30 = sub_15C19EC((uint64_t)v31);
            *(void *)(a1 + 312) = v30;
            uint64_t v8 = *(unsigned __int8 **)v289;
          }
          uint64_t result = sub_11E1C60(a3, v30, v8);
          goto LABEL_483;
        case 7u:
          if (v9 == 56)
          {
            unint64_t v32 = (char *)(v8 - 1);
            while (1)
            {
              *(void *)v289 = v32 + 1;
              unint64_t v33 = v32[1];
              uint64_t v34 = v32 + 2;
              if (v32[1] < 0)
              {
                int v35 = *v34;
                int v36 = v33 + (v35 << 7);
                unint64_t v33 = (v36 - 128);
                if (v35 < 0)
                {
                  uint64_t result = (char *)sub_188C138((uint64_t)(v32 + 1), (v36 - 128));
                  *(void *)v289 = result;
                  if (!result) {
                    return result;
                  }
                  unint64_t v33 = v39;
                  goto LABEL_64;
                }
                uint64_t v34 = v32 + 3;
              }
              *(void *)v289 = v34;
LABEL_64:
              if (sub_140B640(v33))
              {
                uint64_t v37 = *(unsigned int *)(a1 + 64);
                if (v37 == *(_DWORD *)(a1 + 68))
                {
                  int v38 = v37 + 1;
                  sub_188C80C((unsigned int *)(a1 + 64), v37 + 1);
                  *(_DWORD *)(*(void *)(a1 + 72) + 4 * v37) = v33;
                }
                else
                {
                  *(_DWORD *)(*(void *)(a1 + 72) + 4 * v37) = v33;
                  int v38 = v37 + 1;
                }
                *(_DWORD *)(a1 + 64) = v38;
              }
              else
              {
                if (*v284) {
                  uint64_t v40 = (std::string *)((*v284 & 0xFFFFFFFFFFFFFFFCLL) + 8);
                }
                else {
                  uint64_t v40 = (std::string *)sub_188DBD8(v284);
                }
                sub_188C020(7, v33, v40);
              }
              unint64_t v32 = *(char **)v289;
              if (*(void *)a3 <= *(void *)v289 || **(unsigned char **)v289 != 56) {
                goto LABEL_484;
              }
            }
          }
          if (v9 != 58) {
            goto LABEL_577;
          }
          *(void *)&long long v290 = a1 + 64;
          *((void *)&v290 + 1) = sub_140B640;
          uint64_t v291 = a1 + 8;
          int v279 = 7;
          goto LABEL_576;
        case 8u:
          if (v9 != 64) {
            goto LABEL_577;
          }
          *(_DWORD *)(a1 + 16) |= 0x8000000u;
          int v41 = (char *)(v8 + 1);
          uint64_t v42 = *v8;
          if (((char)*v8 & 0x80000000) == 0) {
            goto LABEL_82;
          }
          int v43 = *v41;
          uint64_t v42 = v42 + (v43 << 7) - 128;
          if (v43 < 0)
          {
            uint64_t result = (char *)sub_188C138((uint64_t)v8, v42);
            *(void *)v289 = result;
            *(unsigned char *)(a1 + 420) = v238 != 0;
            if (!result) {
              return result;
            }
          }
          else
          {
            int v41 = (char *)(v8 + 2);
LABEL_82:
            *(void *)v289 = v41;
            *(unsigned char *)(a1 + 420) = v42 != 0;
          }
          goto LABEL_484;
        case 9u:
          if (v9 != 72) {
            goto LABEL_577;
          }
          *(_DWORD *)(a1 + 24) |= 0x10u;
          int v45 = (char *)(v8 + 1);
          LODWORD(v44) = *v8;
          if ((v44 & 0x80) == 0) {
            goto LABEL_87;
          }
          int v46 = *v45;
          uint64_t v44 = v44 + (v46 << 7) - 128;
          if (v46 < 0)
          {
            uint64_t result = (char *)sub_188C138((uint64_t)v8, v44);
            *(void *)v289 = result;
            *(_DWORD *)(a1 + 528) = v239;
            if (!result) {
              return result;
            }
          }
          else
          {
            int v45 = (char *)(v8 + 2);
LABEL_87:
            *(void *)v289 = v45;
            *(_DWORD *)(a1 + 528) = v44;
          }
          goto LABEL_484;
        case 0xAu:
          if (v9 != 80) {
            goto LABEL_577;
          }
          *(_DWORD *)(a1 + 16) |= 0x1000000u;
          uint64_t v48 = (char *)(v8 + 1);
          LODWORD(v47) = *v8;
          if ((v47 & 0x80) == 0) {
            goto LABEL_92;
          }
          int v49 = *v48;
          uint64_t v47 = v47 + (v49 << 7) - 128;
          if (v49 < 0)
          {
            uint64_t result = (char *)sub_188C138((uint64_t)v8, v47);
            *(void *)v289 = result;
            *(_DWORD *)(a1 + 408) = v240;
            if (!result) {
              return result;
            }
          }
          else
          {
            uint64_t v48 = (char *)(v8 + 2);
LABEL_92:
            *(void *)v289 = v48;
            *(_DWORD *)(a1 + 408) = v47;
          }
          goto LABEL_484;
        case 0xBu:
          if (v9 != 88) {
            goto LABEL_577;
          }
          *(_DWORD *)(a1 + 16) |= 0x2000000u;
          uint64_t v51 = (char *)(v8 + 1);
          LODWORD(v50) = *v8;
          if ((v50 & 0x80) == 0) {
            goto LABEL_97;
          }
          int v52 = *v51;
          uint64_t v50 = v50 + (v52 << 7) - 128;
          if (v52 < 0)
          {
            uint64_t result = (char *)sub_188C138((uint64_t)v8, v50);
            *(void *)v289 = result;
            *(_DWORD *)(a1 + 412) = v241;
            if (!result) {
              return result;
            }
          }
          else
          {
            uint64_t v51 = (char *)(v8 + 2);
LABEL_97:
            *(void *)v289 = v51;
            *(_DWORD *)(a1 + 412) = v50;
          }
          goto LABEL_484;
        case 0xCu:
          if (v9 != 98) {
            goto LABEL_577;
          }
          *(_DWORD *)(a1 + 16) |= 0x2000u;
          long long v53 = *(void **)(a1 + 320);
          if (!v53)
          {
            long long v54 = (void *)(*v284 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v284) {
              long long v54 = (void *)*v54;
            }
            long long v53 = sub_15C2014((uint64_t)v54);
            *(void *)(a1 + 320) = v53;
            uint64_t v8 = *(unsigned __int8 **)v289;
          }
          uint64_t result = sub_11EAA5C(a3, (uint64_t)v53, v8);
          goto LABEL_483;
        case 0xDu:
          if (v9 != 104) {
            goto LABEL_577;
          }
          long long v55 = (char *)(v8 + 1);
          unint64_t v56 = *v8;
          if (((char)*v8 & 0x80000000) == 0) {
            goto LABEL_108;
          }
          int v57 = *v55;
          int v58 = v56 + (v57 << 7);
          unint64_t v56 = (v58 - 128);
          if (v57 < 0)
          {
            uint64_t result = (char *)sub_188C138((uint64_t)v8, (v58 - 128));
            *(void *)v289 = result;
            if (!result) {
              return result;
            }
            unint64_t v56 = v242;
          }
          else
          {
            long long v55 = (char *)(v8 + 2);
LABEL_108:
            *(void *)v289 = v55;
          }
          if (v56 <= 2)
          {
            *(_DWORD *)(a1 + 16) |= 0x4000000u;
            *(_DWORD *)(a1 + 416) = v56;
            goto LABEL_484;
          }
          if (*v284) {
            v282 = (std::string *)((*v284 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            v282 = (std::string *)sub_188DBD8(v284);
          }
          int v283 = 13;
          goto LABEL_603;
        case 0xEu:
          if (v9 != 112) {
            goto LABEL_577;
          }
          *(_DWORD *)(a1 + 16) |= 0x10000000u;
          uint64_t v59 = (char *)(v8 + 1);
          uint64_t v60 = *v8;
          if (((char)*v8 & 0x80000000) == 0) {
            goto LABEL_115;
          }
          int v61 = *v59;
          uint64_t v60 = v60 + (v61 << 7) - 128;
          if (v61 < 0)
          {
            uint64_t result = (char *)sub_188C138((uint64_t)v8, v60);
            *(void *)v289 = result;
            *(unsigned char *)(a1 + 421) = v243 != 0;
            if (!result) {
              return result;
            }
          }
          else
          {
            uint64_t v59 = (char *)(v8 + 2);
LABEL_115:
            *(void *)v289 = v59;
            *(unsigned char *)(a1 + 421) = v60 != 0;
          }
          goto LABEL_484;
        case 0xFu:
          if (v9 != 120) {
            goto LABEL_577;
          }
          *(_DWORD *)(a1 + 16) |= 0x20000000u;
          uint64_t v62 = (char *)(v8 + 1);
          uint64_t v63 = *v8;
          if (((char)*v8 & 0x80000000) == 0) {
            goto LABEL_120;
          }
          int v64 = *v62;
          uint64_t v63 = v63 + (v64 << 7) - 128;
          if (v64 < 0)
          {
            uint64_t result = (char *)sub_188C138((uint64_t)v8, v63);
            *(void *)v289 = result;
            *(unsigned char *)(a1 + 422) = v244 != 0;
            if (!result) {
              return result;
            }
          }
          else
          {
            uint64_t v62 = (char *)(v8 + 2);
LABEL_120:
            *(void *)v289 = v62;
            *(unsigned char *)(a1 + 422) = v63 != 0;
          }
          goto LABEL_484;
        case 0x10u:
          if (v9 != 128) {
            goto LABEL_577;
          }
          *(_DWORD *)(a1 + 20) |= 1u;
          int v66 = (char *)(v8 + 1);
          LODWORD(v65) = *v8;
          if ((v65 & 0x80) == 0) {
            goto LABEL_125;
          }
          int v67 = *v66;
          uint64_t v65 = v65 + (v67 << 7) - 128;
          if (v67 < 0)
          {
            uint64_t result = (char *)sub_188C138((uint64_t)v8, v65);
            *(void *)v289 = result;
            *(_DWORD *)(a1 + 432) = v245;
            if (!result) {
              return result;
            }
          }
          else
          {
            int v66 = (char *)(v8 + 2);
LABEL_125:
            *(void *)v289 = v66;
            *(_DWORD *)(a1 + 432) = v65;
          }
          goto LABEL_484;
        case 0x11u:
          if (v9 != 138) {
            goto LABEL_577;
          }
          uint64_t result = (char *)(v8 - 2);
          while (1)
          {
            uint64_t v68 = result + 2;
            *(void *)v289 = result + 2;
            int v69 = *(_DWORD **)(a1 + 96);
            if (v69 && (uint64_t v70 = *(int *)(a1 + 88), (int)v70 < *v69))
            {
              *(_DWORD *)(a1 + 88) = v70 + 1;
              uint64_t v71 = *(std::string **)&v69[2 * v70 + 2];
            }
            else
            {
              if (!*v7) {
                operator new();
              }
              void *v73 = v72;
              v73[1] = sub_3A6EDC;
              void *v72 = 0;
              v72[1] = 0;
              v72[2] = 0;
              uint64_t v71 = (std::string *)sub_188CDC8(a1 + 80, (uint64_t)v72);
              uint64_t v68 = *(char **)v289;
            }
            uint64_t result = (char *)sub_188C244(v71, v68, (uint64_t)a3);
            *(void *)v289 = result;
            if (!result) {
              return result;
            }
            if (*(void *)a3 <= (unint64_t)result || *(_WORD *)result != 394) {
              goto LABEL_484;
            }
          }
        case 0x12u:
          if (v9 != 144) {
            goto LABEL_577;
          }
          *(_DWORD *)(a1 + 16) |= 0x40000000u;
          int v74 = (char *)(v8 + 1);
          uint64_t v75 = *v8;
          if (((char)*v8 & 0x80000000) == 0) {
            goto LABEL_142;
          }
          int v76 = *v74;
          uint64_t v75 = v75 + (v76 << 7) - 128;
          if (v76 < 0)
          {
            uint64_t result = (char *)sub_188C138((uint64_t)v8, v75);
            *(void *)v289 = result;
            *(unsigned char *)(a1 + 423) = v246 != 0;
            if (!result) {
              return result;
            }
          }
          else
          {
            int v74 = (char *)(v8 + 2);
LABEL_142:
            *(void *)v289 = v74;
            *(unsigned char *)(a1 + 423) = v75 != 0;
          }
          goto LABEL_484;
        case 0x13u:
          if (v9 != 153) {
            goto LABEL_577;
          }
          *(_DWORD *)(a1 + 16) |= 0x80000000;
          uint64_t v78 = *(void *)v8;
          uint64_t v77 = v8 + 8;
          *(void *)(a1 + 424) = v78;
          goto LABEL_234;
        case 0x14u:
          if (v9 != 162) {
            goto LABEL_577;
          }
          *(_DWORD *)(a1 + 16) |= 2u;
          uint64_t v79 = *(void *)(a1 + 8);
          int v28 = (uint64_t *)(v79 & 0xFFFFFFFFFFFFFFFCLL);
          if (v79) {
            int v28 = (uint64_t *)*v28;
          }
          uint64_t v29 = (void *)(a1 + 224);
          goto LABEL_482;
        case 0x15u:
          if (v9 != 168) {
            goto LABEL_577;
          }
          *(_DWORD *)(a1 + 20) |= 4u;
          unint64_t v80 = (char *)(v8 + 1);
          uint64_t v81 = *v8;
          if (((char)*v8 & 0x80000000) == 0) {
            goto LABEL_153;
          }
          int v82 = *v80;
          uint64_t v81 = v81 + (v82 << 7) - 128;
          if (v82 < 0)
          {
            uint64_t result = (char *)sub_188C138((uint64_t)v8, v81);
            *(void *)v289 = result;
            *(unsigned char *)(a1 + 440) = v247 != 0;
            if (!result) {
              return result;
            }
          }
          else
          {
            unint64_t v80 = (char *)(v8 + 2);
LABEL_153:
            *(void *)v289 = v80;
            *(unsigned char *)(a1 + 440) = v81 != 0;
          }
          goto LABEL_484;
        case 0x16u:
          if (v9 != 178) {
            goto LABEL_577;
          }
          *(_DWORD *)(a1 + 16) |= 0x4000u;
          uint64_t v83 = *(void *)(a1 + 328);
          if (!v83)
          {
            char v84 = (void *)(*v284 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v284) {
              char v84 = (void *)*v84;
            }
            uint64_t v83 = sub_1478D54((uint64_t)v84);
            *(void *)(a1 + 328) = v83;
            uint64_t v8 = *(unsigned __int8 **)v289;
          }
          uint64_t result = (char *)sub_1466A40(a3, v83, v8);
          goto LABEL_483;
        case 0x17u:
          if (v9 != 184) {
            goto LABEL_577;
          }
          *(_DWORD *)(a1 + 20) |= 2u;
          uint64_t v86 = (char *)(v8 + 1);
          LODWORD(v85) = *v8;
          if ((v85 & 0x80) == 0) {
            goto LABEL_164;
          }
          int v87 = *v86;
          uint64_t v85 = v85 + (v87 << 7) - 128;
          if (v87 < 0)
          {
            uint64_t result = (char *)sub_188C138((uint64_t)v8, v85);
            *(void *)v289 = result;
            *(_DWORD *)(a1 + 436) = v248;
            if (!result) {
              return result;
            }
          }
          else
          {
            uint64_t v86 = (char *)(v8 + 2);
LABEL_164:
            *(void *)v289 = v86;
            *(_DWORD *)(a1 + 436) = v85;
          }
          goto LABEL_484;
        case 0x18u:
          if (v9 != 192) {
            goto LABEL_577;
          }
          *(_DWORD *)(a1 + 20) |= 8u;
          unint64_t v88 = (char *)(v8 + 1);
          uint64_t v89 = *v8;
          if (((char)*v8 & 0x80000000) == 0) {
            goto LABEL_169;
          }
          int v90 = *v88;
          uint64_t v89 = v89 + (v90 << 7) - 128;
          if (v90 < 0)
          {
            uint64_t result = (char *)sub_188C138((uint64_t)v8, v89);
            *(void *)v289 = result;
            *(unsigned char *)(a1 + 441) = v249 != 0;
            if (!result) {
              return result;
            }
          }
          else
          {
            unint64_t v88 = (char *)(v8 + 2);
LABEL_169:
            *(void *)v289 = v88;
            *(unsigned char *)(a1 + 441) = v89 != 0;
          }
          goto LABEL_484;
        case 0x19u:
          if (v9 != 200) {
            goto LABEL_577;
          }
          *(_DWORD *)(a1 + 20) |= 0x10u;
          char v91 = (char *)(v8 + 1);
          uint64_t v92 = *v8;
          if (((char)*v8 & 0x80000000) == 0) {
            goto LABEL_174;
          }
          int v93 = *v91;
          uint64_t v92 = v92 + (v93 << 7) - 128;
          if (v93 < 0)
          {
            uint64_t result = (char *)sub_188C138((uint64_t)v8, v92);
            *(void *)v289 = result;
            *(unsigned char *)(a1 + 442) = v250 != 0;
            if (!result) {
              return result;
            }
          }
          else
          {
            char v91 = (char *)(v8 + 2);
LABEL_174:
            *(void *)v289 = v91;
            *(unsigned char *)(a1 + 442) = v92 != 0;
          }
          goto LABEL_484;
        case 0x1Au:
          if (v9 != 208) {
            goto LABEL_577;
          }
          *(_DWORD *)(a1 + 20) |= 0x20u;
          uint64_t v94 = (char *)(v8 + 1);
          uint64_t v95 = *v8;
          if (((char)*v8 & 0x80000000) == 0) {
            goto LABEL_179;
          }
          int v96 = *v94;
          uint64_t v95 = v95 + (v96 << 7) - 128;
          if (v96 < 0)
          {
            uint64_t result = (char *)sub_188C138((uint64_t)v8, v95);
            *(void *)v289 = result;
            *(unsigned char *)(a1 + 443) = v251 != 0;
            if (!result) {
              return result;
            }
          }
          else
          {
            uint64_t v94 = (char *)(v8 + 2);
LABEL_179:
            *(void *)v289 = v94;
            *(unsigned char *)(a1 + 443) = v95 != 0;
          }
          goto LABEL_484;
        case 0x1Bu:
          if (v9 != 218) {
            goto LABEL_577;
          }
          *(_DWORD *)(a1 + 16) |= 4u;
          uint64_t v97 = *(void *)(a1 + 8);
          int v28 = (uint64_t *)(v97 & 0xFFFFFFFFFFFFFFFCLL);
          if (v97) {
            int v28 = (uint64_t *)*v28;
          }
          uint64_t v29 = (void *)(a1 + 232);
          goto LABEL_482;
        case 0x1Cu:
          if (v9 != 226) {
            goto LABEL_577;
          }
          *(_DWORD *)(a1 + 16) |= 8u;
          uint64_t v98 = *(void *)(a1 + 8);
          int v28 = (uint64_t *)(v98 & 0xFFFFFFFFFFFFFFFCLL);
          if (v98) {
            int v28 = (uint64_t *)*v28;
          }
          uint64_t v29 = (void *)(a1 + 240);
          goto LABEL_482;
        case 0x1Du:
          if (v9 != 234) {
            goto LABEL_577;
          }
          *(_DWORD *)(a1 + 16) |= 0x8000u;
          uint64_t v99 = *(void *)(a1 + 336);
          if (v99) {
            goto LABEL_409;
          }
          char v100 = (void *)(*v284 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v284) {
            char v100 = (void *)*v100;
          }
          uint64_t v99 = sub_15C1918((uint64_t)v100);
          *(void *)(a1 + 336) = v99;
          goto LABEL_408;
        case 0x1Eu:
          if (v9 != 242) {
            goto LABEL_577;
          }
          *(_DWORD *)(a1 + 16) |= 0x10u;
          uint64_t v101 = *(void *)(a1 + 8);
          int v28 = (uint64_t *)(v101 & 0xFFFFFFFFFFFFFFFCLL);
          if (v101) {
            int v28 = (uint64_t *)*v28;
          }
          uint64_t v29 = (void *)(a1 + 248);
          goto LABEL_482;
        case 0x1Fu:
          if (v9 != 250) {
            goto LABEL_577;
          }
          *(_DWORD *)(a1 + 16) |= 0x20u;
          uint64_t v102 = *(void *)(a1 + 8);
          int v28 = (uint64_t *)(v102 & 0xFFFFFFFFFFFFFFFCLL);
          if (v102) {
            int v28 = (uint64_t *)*v28;
          }
          uint64_t v29 = (void *)(a1 + 256);
          goto LABEL_482;
        case 0x20u:
          if ((_BYTE)v9) {
            goto LABEL_577;
          }
          *(_DWORD *)(a1 + 20) |= 0x40u;
          char v104 = (char *)(v8 + 1);
          LODWORD(v103) = *v8;
          if ((v103 & 0x80) == 0) {
            goto LABEL_205;
          }
          int v105 = *v104;
          uint64_t v103 = v103 + (v105 << 7) - 128;
          if (v105 < 0)
          {
            uint64_t result = (char *)sub_188C138((uint64_t)v8, v103);
            *(void *)v289 = result;
            *(_DWORD *)(a1 + 444) = v252;
            if (!result) {
              return result;
            }
          }
          else
          {
            char v104 = (char *)(v8 + 2);
LABEL_205:
            *(void *)v289 = v104;
            *(_DWORD *)(a1 + 444) = v103;
          }
          goto LABEL_484;
        case 0x21u:
          if (v9 != 8) {
            goto LABEL_577;
          }
          *(_DWORD *)(a1 + 20) |= 0x400u;
          uint64_t v106 = (char *)(v8 + 1);
          uint64_t v107 = *v8;
          if (((char)*v8 & 0x80000000) == 0) {
            goto LABEL_210;
          }
          int v108 = *v106;
          uint64_t v107 = v107 + (v108 << 7) - 128;
          if (v108 < 0)
          {
            uint64_t result = (char *)sub_188C138((uint64_t)v8, v107);
            *(void *)v289 = result;
            *(unsigned char *)(a1 + 472) = v253 != 0;
            if (!result) {
              return result;
            }
          }
          else
          {
            uint64_t v106 = (char *)(v8 + 2);
LABEL_210:
            *(void *)v289 = v106;
            *(unsigned char *)(a1 + 472) = v107 != 0;
          }
          goto LABEL_484;
        case 0x22u:
          if (v9 != 16) {
            goto LABEL_577;
          }
          *(_DWORD *)(a1 + 20) |= 0x800u;
          unint64_t v109 = (char *)(v8 + 1);
          uint64_t v110 = *v8;
          if (((char)*v8 & 0x80000000) == 0) {
            goto LABEL_215;
          }
          int v111 = *v109;
          uint64_t v110 = v110 + (v111 << 7) - 128;
          if (v111 < 0)
          {
            uint64_t result = (char *)sub_188C138((uint64_t)v8, v110);
            *(void *)v289 = result;
            *(unsigned char *)(a1 + 473) = v254 != 0;
            if (!result) {
              return result;
            }
          }
          else
          {
            unint64_t v109 = (char *)(v8 + 2);
LABEL_215:
            *(void *)v289 = v109;
            *(unsigned char *)(a1 + 473) = v110 != 0;
          }
          goto LABEL_484;
        case 0x23u:
          if (v9 != 26) {
            goto LABEL_577;
          }
          uint64_t result = (char *)(v8 - 2);
          while (1)
          {
            char v112 = result + 2;
            *(void *)v289 = result + 2;
            uint64_t v113 = *(_DWORD **)(a1 + 120);
            if (v113 && (uint64_t v114 = *(int *)(a1 + 112), (int)v114 < *v113))
            {
              *(_DWORD *)(a1 + 112) = v114 + 1;
              unint64_t v115 = *(std::string **)&v113[2 * v114 + 2];
            }
            else
            {
              if (!*v287) {
                operator new();
              }
              void *v117 = v116;
              v117[1] = sub_3A6EDC;
              *uint64_t v116 = 0;
              v116[1] = 0;
              v116[2] = 0;
              unint64_t v115 = (std::string *)sub_188CDC8((uint64_t)v287, (uint64_t)v116);
              char v112 = *(char **)v289;
            }
            uint64_t result = (char *)sub_188C244(v115, v112, (uint64_t)a3);
            *(void *)v289 = result;
            if (!result) {
              return result;
            }
            if (*(void *)a3 <= (unint64_t)result || *(_WORD *)result != 666) {
              goto LABEL_484;
            }
          }
        case 0x24u:
          if (v9 != 33) {
            goto LABEL_577;
          }
          *(_DWORD *)(a1 + 20) |= 0x80u;
          uint64_t v118 = *(void *)v8;
          uint64_t v77 = v8 + 8;
          *(void *)(a1 + 448) = v118;
          goto LABEL_234;
        case 0x25u:
          if (v9 != 41) {
            goto LABEL_577;
          }
          *(_DWORD *)(a1 + 20) |= 0x100u;
          uint64_t v119 = *(void *)v8;
          uint64_t v77 = v8 + 8;
          *(void *)(a1 + 456) = v119;
          goto LABEL_234;
        case 0x26u:
          if (v9 != 49) {
            goto LABEL_577;
          }
          *(_DWORD *)(a1 + 20) |= 0x200u;
          uint64_t v120 = *(void *)v8;
          uint64_t v77 = v8 + 8;
          *(void *)(a1 + 464) = v120;
LABEL_234:
          *(void *)v289 = v77;
          goto LABEL_484;
        case 0x27u:
          if (v9 != 56) {
            goto LABEL_577;
          }
          *(_DWORD *)(a1 + 20) |= 0x1000u;
          uint64_t v121 = (char *)(v8 + 1);
          uint64_t v122 = *v8;
          if (((char)*v8 & 0x80000000) == 0) {
            goto LABEL_239;
          }
          int v123 = *v121;
          uint64_t v122 = v122 + (v123 << 7) - 128;
          if (v123 < 0)
          {
            uint64_t result = (char *)sub_188C138((uint64_t)v8, v122);
            *(void *)v289 = result;
            *(unsigned char *)(a1 + 474) = v255 != 0;
            if (!result) {
              return result;
            }
          }
          else
          {
            uint64_t v121 = (char *)(v8 + 2);
LABEL_239:
            *(void *)v289 = v121;
            *(unsigned char *)(a1 + 474) = v122 != 0;
          }
          goto LABEL_484;
        case 0x2Au:
          if (v9 != 82) {
            goto LABEL_577;
          }
          *(_DWORD *)(a1 + 16) |= 0x40u;
          uint64_t v124 = *(void *)(a1 + 8);
          int v28 = (uint64_t *)(v124 & 0xFFFFFFFFFFFFFFFCLL);
          if (v124) {
            int v28 = (uint64_t *)*v28;
          }
          uint64_t v29 = (void *)(a1 + 264);
          goto LABEL_482;
        case 0x2Bu:
          if (v9 != 90) {
            goto LABEL_577;
          }
          *(_DWORD *)(a1 + 16) |= 0x10000u;
          uint64_t v125 = *(void *)(a1 + 344);
          if (!v125)
          {
            int v126 = (void *)(*v284 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v284) {
              int v126 = (void *)*v126;
            }
            sub_1478B2C((uint64_t)v126);
            uint64_t v125 = v127;
            *(void *)(a1 + 344) = v127;
            uint64_t v8 = *(unsigned __int8 **)v289;
          }
          uint64_t result = (char *)sub_1281B58(a3, v125, v8);
          goto LABEL_483;
        case 0x2Cu:
          if (v9 != 96) {
            goto LABEL_577;
          }
          *(_DWORD *)(a1 + 20) |= 0x2000u;
          uint64_t v128 = (char *)(v8 + 1);
          uint64_t v129 = *v8;
          if (((char)*v8 & 0x80000000) == 0) {
            goto LABEL_254;
          }
          int v130 = *v128;
          uint64_t v129 = v129 + (v130 << 7) - 128;
          if (v130 < 0)
          {
            uint64_t result = (char *)sub_188C138((uint64_t)v8, v129);
            *(void *)v289 = result;
            *(unsigned char *)(a1 + 475) = v256 != 0;
            if (!result) {
              return result;
            }
          }
          else
          {
            uint64_t v128 = (char *)(v8 + 2);
LABEL_254:
            *(void *)v289 = v128;
            *(unsigned char *)(a1 + 475) = v129 != 0;
          }
          goto LABEL_484;
        case 0x2Du:
          if (v9 != 104) {
            goto LABEL_577;
          }
          uint64_t v131 = (char *)(v8 + 1);
          unint64_t v56 = *v8;
          if (((char)*v8 & 0x80000000) == 0) {
            goto LABEL_259;
          }
          int v132 = *v131;
          int v133 = v56 + (v132 << 7);
          unint64_t v56 = (v133 - 128);
          if (v132 < 0)
          {
            uint64_t result = (char *)sub_188C138((uint64_t)v8, (v133 - 128));
            *(void *)v289 = result;
            if (!result) {
              return result;
            }
            unint64_t v56 = v257;
          }
          else
          {
            uint64_t v131 = (char *)(v8 + 2);
LABEL_259:
            *(void *)v289 = v131;
          }
          if (v56 <= 6)
          {
            *(_DWORD *)(a1 + 20) |= 0x4000u;
            *(_DWORD *)(a1 + 476) = v56;
            goto LABEL_484;
          }
          if (*v284) {
            v282 = (std::string *)((*v284 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            v282 = (std::string *)sub_188DBD8(v284);
          }
          int v283 = 45;
          goto LABEL_603;
        case 0x2Eu:
          if (v9 != 114) {
            goto LABEL_577;
          }
          *(_DWORD *)(a1 + 16) |= 0x20000u;
          uint64_t v134 = *(void *)(a1 + 352);
          if (!v134)
          {
            int v135 = (void *)(*v284 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v284) {
              int v135 = (void *)*v135;
            }
            uint64_t v134 = sub_1478B8C((uint64_t)v135);
            *(void *)(a1 + 352) = v134;
            uint64_t v8 = *(unsigned __int8 **)v289;
          }
          uint64_t result = (char *)sub_1466AD0(a3, v134, v8);
          goto LABEL_483;
        case 0x2Fu:
          if (v9 != 120) {
            goto LABEL_577;
          }
          int v136 = (char *)(v8 + 1);
          unint64_t v56 = *v8;
          if (((char)*v8 & 0x80000000) == 0) {
            goto LABEL_272;
          }
          int v137 = *v136;
          int v138 = v56 + (v137 << 7);
          unint64_t v56 = (v138 - 128);
          if (v137 < 0)
          {
            uint64_t result = (char *)sub_188C138((uint64_t)v8, (v138 - 128));
            *(void *)v289 = result;
            if (!result) {
              return result;
            }
            unint64_t v56 = v258;
          }
          else
          {
            int v136 = (char *)(v8 + 2);
LABEL_272:
            *(void *)v289 = v136;
          }
          if (sub_140B640(v56))
          {
            *(_DWORD *)(a1 + 20) |= 0x8000u;
            *(_DWORD *)(a1 + 480) = v56;
            goto LABEL_484;
          }
          if (*v284) {
            v282 = (std::string *)((*v284 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            v282 = (std::string *)sub_188DBD8(v284);
          }
          int v283 = 47;
          goto LABEL_603;
        case 0x30u:
          if (v9 != 128) {
            goto LABEL_577;
          }
          *(_DWORD *)(a1 + 20) |= 0x10000u;
          unint64_t v139 = (char *)(v8 + 1);
          uint64_t v140 = *v8;
          if (((char)*v8 & 0x80000000) == 0) {
            goto LABEL_279;
          }
          int v141 = *v139;
          uint64_t v140 = v140 + (v141 << 7) - 128;
          if (v141 < 0)
          {
            uint64_t result = (char *)sub_188C138((uint64_t)v8, v140);
            *(void *)v289 = result;
            *(unsigned char *)(a1 + 484) = v259 != 0;
            if (!result) {
              return result;
            }
          }
          else
          {
            unint64_t v139 = (char *)(v8 + 2);
LABEL_279:
            *(void *)v289 = v139;
            *(unsigned char *)(a1 + 484) = v140 != 0;
          }
          goto LABEL_484;
        case 0x31u:
          if (v9 != 136) {
            goto LABEL_577;
          }
          *(_DWORD *)(a1 + 20) |= 0x20000u;
          uint64_t v142 = (char *)(v8 + 1);
          uint64_t v143 = *v8;
          if (((char)*v8 & 0x80000000) == 0) {
            goto LABEL_284;
          }
          int v144 = *v142;
          uint64_t v143 = v143 + (v144 << 7) - 128;
          if (v144 < 0)
          {
            uint64_t result = (char *)sub_188C138((uint64_t)v8, v143);
            *(void *)v289 = result;
            *(unsigned char *)(a1 + 485) = v260 != 0;
            if (!result) {
              return result;
            }
          }
          else
          {
            uint64_t v142 = (char *)(v8 + 2);
LABEL_284:
            *(void *)v289 = v142;
            *(unsigned char *)(a1 + 485) = v143 != 0;
          }
          goto LABEL_484;
        case 0x32u:
          if (v9 != 144) {
            goto LABEL_577;
          }
          *(_DWORD *)(a1 + 20) |= 0x40000u;
          int v145 = (char *)(v8 + 1);
          uint64_t v146 = *v8;
          if (((char)*v8 & 0x80000000) == 0) {
            goto LABEL_289;
          }
          int v147 = *v145;
          uint64_t v146 = v146 + (v147 << 7) - 128;
          if (v147 < 0)
          {
            uint64_t result = (char *)sub_188C138((uint64_t)v8, v146);
            *(void *)v289 = result;
            *(unsigned char *)(a1 + 486) = v261 != 0;
            if (!result) {
              return result;
            }
          }
          else
          {
            int v145 = (char *)(v8 + 2);
LABEL_289:
            *(void *)v289 = v145;
            *(unsigned char *)(a1 + 486) = v146 != 0;
          }
          goto LABEL_484;
        case 0x33u:
          if (v9 != 152) {
            goto LABEL_577;
          }
          *(_DWORD *)(a1 + 20) |= 0x80000u;
          int v148 = (char *)(v8 + 1);
          uint64_t v149 = *v8;
          if (((char)*v8 & 0x80000000) == 0) {
            goto LABEL_294;
          }
          int v150 = *v148;
          uint64_t v149 = v149 + (v150 << 7) - 128;
          if (v150 < 0)
          {
            uint64_t result = (char *)sub_188C138((uint64_t)v8, v149);
            *(void *)v289 = result;
            *(unsigned char *)(a1 + 487) = v262 != 0;
            if (!result) {
              return result;
            }
          }
          else
          {
            int v148 = (char *)(v8 + 2);
LABEL_294:
            *(void *)v289 = v148;
            *(unsigned char *)(a1 + 487) = v149 != 0;
          }
          goto LABEL_484;
        case 0x34u:
          if (v9 != 162) {
            goto LABEL_577;
          }
          uint64_t result = (char *)(v8 - 2);
          while (1)
          {
            uint64_t v151 = result + 2;
            *(void *)v289 = result + 2;
            int v152 = *(_DWORD **)(a1 + 144);
            if (v152 && (uint64_t v153 = *(int *)(a1 + 136), (int)v153 < *v152))
            {
              *(_DWORD *)(a1 + 136) = v153 + 1;
              uint64_t v154 = *(std::string **)&v152[2 * v153 + 2];
            }
            else
            {
              if (!*v288) {
                operator new();
              }
              *int v156 = v155;
              v156[1] = sub_3A6EDC;
              *uint64_t v155 = 0;
              v155[1] = 0;
              v155[2] = 0;
              uint64_t v154 = (std::string *)sub_188CDC8((uint64_t)v288, (uint64_t)v155);
              uint64_t v151 = *(char **)v289;
            }
            uint64_t result = (char *)sub_188C244(v154, v151, (uint64_t)a3);
            *(void *)v289 = result;
            if (!result) {
              return result;
            }
            if (*(void *)a3 <= (unint64_t)result || *(_WORD *)result != 930) {
              goto LABEL_484;
            }
          }
        case 0x35u:
          if (v9 != 168) {
            goto LABEL_577;
          }
          *(_DWORD *)(a1 + 20) |= 0x200000u;
          uint64_t v157 = (char *)(v8 + 1);
          uint64_t v158 = *v8;
          if (((char)*v8 & 0x80000000) == 0) {
            goto LABEL_311;
          }
          int v159 = *v157;
          uint64_t v158 = v158 + (v159 << 7) - 128;
          if (v159 < 0)
          {
            uint64_t result = (char *)sub_188C138((uint64_t)v8, v158);
            *(void *)v289 = result;
            *(unsigned char *)(a1 + 496) = v263 != 0;
            if (!result) {
              return result;
            }
          }
          else
          {
            uint64_t v157 = (char *)(v8 + 2);
LABEL_311:
            *(void *)v289 = v157;
            *(unsigned char *)(a1 + 496) = v158 != 0;
          }
          goto LABEL_484;
        case 0x64u:
          if (v9 != 32) {
            goto LABEL_577;
          }
          *(_DWORD *)(a1 + 20) |= 0x100000u;
          uint64_t v215 = (char *)(v8 + 1);
          uint64_t v216 = *v8;
          if (((char)*v8 & 0x80000000) == 0) {
            goto LABEL_441;
          }
          int v217 = *v215;
          uint64_t v216 = v216 + (v217 << 7) - 128;
          if (v217 < 0)
          {
            uint64_t result = (char *)sub_188C138((uint64_t)v8, v216);
            *(void *)v289 = result;
            *(void *)(a1 + 488) = v276;
            if (!result) {
              return result;
            }
          }
          else
          {
            uint64_t v215 = (char *)(v8 + 2);
LABEL_441:
            *(void *)v289 = v215;
            *(void *)(a1 + 488) = v216;
          }
          goto LABEL_484;
        case 0x65u:
          if (v9 != 40) {
            goto LABEL_577;
          }
          *(_DWORD *)(a1 + 20) |= 0x400000u;
          uint64_t v160 = (char *)(v8 + 1);
          uint64_t v161 = *v8;
          if (((char)*v8 & 0x80000000) == 0) {
            goto LABEL_316;
          }
          int v162 = *v160;
          uint64_t v161 = v161 + (v162 << 7) - 128;
          if (v162 < 0)
          {
            uint64_t result = (char *)sub_188C138((uint64_t)v8, v161);
            *(void *)v289 = result;
            *(unsigned char *)(a1 + 497) = v264 != 0;
            if (!result) {
              return result;
            }
          }
          else
          {
            uint64_t v160 = (char *)(v8 + 2);
LABEL_316:
            *(void *)v289 = v160;
            *(unsigned char *)(a1 + 497) = v161 != 0;
          }
          goto LABEL_484;
        case 0x66u:
          if (v9 != 48) {
            goto LABEL_577;
          }
          *(_DWORD *)(a1 + 20) |= 0x800000u;
          v163 = (char *)(v8 + 1);
          uint64_t v164 = *v8;
          if (((char)*v8 & 0x80000000) == 0) {
            goto LABEL_321;
          }
          int v165 = *v163;
          uint64_t v164 = v164 + (v165 << 7) - 128;
          if (v165 < 0)
          {
            uint64_t result = (char *)sub_188C138((uint64_t)v8, v164);
            *(void *)v289 = result;
            *(unsigned char *)(a1 + 498) = v265 != 0;
            if (!result) {
              return result;
            }
          }
          else
          {
            v163 = (char *)(v8 + 2);
LABEL_321:
            *(void *)v289 = v163;
            *(unsigned char *)(a1 + 498) = v164 != 0;
          }
          goto LABEL_484;
        case 0x67u:
          if (v9 != 58) {
            goto LABEL_577;
          }
          uint64_t result = (char *)(v8 - 2);
          while (1)
          {
            uint64_t v166 = (unsigned __int8 *)(result + 2);
            *(void *)v289 = result + 2;
            uint64_t v167 = *(_DWORD **)(a1 + 168);
            if (v167 && (uint64_t v168 = *(int *)(a1 + 160), (int)v168 < *v167))
            {
              *(_DWORD *)(a1 + 160) = v168 + 1;
              uint64_t v169 = *(void *)&v167[2 * v168 + 2];
            }
            else
            {
              uint64_t v170 = sub_1478E08(*v285);
              uint64_t v169 = sub_188CDC8((uint64_t)v285, v170);
              uint64_t v166 = *(unsigned __int8 **)v289;
            }
            uint64_t result = (char *)sub_1466B60(a3, v169, v166);
            *(void *)v289 = result;
            if (!result) {
              return result;
            }
            if (*(void *)a3 <= (unint64_t)result || *(_WORD *)result != 1722) {
              goto LABEL_484;
            }
          }
        case 0x68u:
          if (v9 != 64) {
            goto LABEL_577;
          }
          *(_DWORD *)(a1 + 20) |= 0x1000000u;
          int v171 = (char *)(v8 + 1);
          uint64_t v172 = *v8;
          if (((char)*v8 & 0x80000000) == 0) {
            goto LABEL_336;
          }
          int v173 = *v171;
          uint64_t v172 = v172 + (v173 << 7) - 128;
          if (v173 < 0)
          {
            uint64_t result = (char *)sub_188C138((uint64_t)v8, v172);
            *(void *)v289 = result;
            *(unsigned char *)(a1 + 499) = v266 != 0;
            if (!result) {
              return result;
            }
          }
          else
          {
            int v171 = (char *)(v8 + 2);
LABEL_336:
            *(void *)v289 = v171;
            *(unsigned char *)(a1 + 499) = v172 != 0;
          }
          goto LABEL_484;
        case 0x69u:
          if (v9 != 74) {
            goto LABEL_577;
          }
          *(_DWORD *)(a1 + 16) |= 0x80u;
          uint64_t v174 = *(void *)(a1 + 8);
          int v28 = (uint64_t *)(v174 & 0xFFFFFFFFFFFFFFFCLL);
          if (v174) {
            int v28 = (uint64_t *)*v28;
          }
          uint64_t v29 = (void *)(a1 + 272);
          goto LABEL_482;
        case 0x6Au:
          if (v9 != 82) {
            goto LABEL_577;
          }
          *(_DWORD *)(a1 + 16) |= 0x40000u;
          uint64_t v175 = *(void *)(a1 + 360);
          if (!v175)
          {
            uint64_t v176 = (void *)(*v284 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v284) {
              uint64_t v176 = (void *)*v176;
            }
            uint64_t v175 = sub_1478E08((uint64_t)v176);
            *(void *)(a1 + 360) = v175;
            uint64_t v8 = *(unsigned __int8 **)v289;
          }
          uint64_t result = (char *)sub_1466B60(a3, v175, v8);
          goto LABEL_483;
        case 0x6Bu:
          if (v9 != 88) {
            goto LABEL_577;
          }
          *(_DWORD *)(a1 + 20) |= 0x2000000u;
          int v177 = (char *)(v8 + 1);
          uint64_t v178 = *v8;
          if (((char)*v8 & 0x80000000) == 0) {
            goto LABEL_351;
          }
          int v179 = *v177;
          uint64_t v178 = v178 + (v179 << 7) - 128;
          if (v179 < 0)
          {
            uint64_t result = (char *)sub_188C138((uint64_t)v8, v178);
            *(void *)v289 = result;
            *(unsigned char *)(a1 + 500) = v267 != 0;
            if (!result) {
              return result;
            }
          }
          else
          {
            int v177 = (char *)(v8 + 2);
LABEL_351:
            *(void *)v289 = v177;
            *(unsigned char *)(a1 + 500) = v178 != 0;
          }
          goto LABEL_484;
        case 0x6Cu:
          if (v9 != 98) {
            goto LABEL_577;
          }
          *(_DWORD *)(a1 + 16) |= 0x80000u;
          uint64_t v23 = *(void *)(a1 + 368);
          if (!v23)
          {
            int v180 = (void *)(*v284 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v284) {
              int v180 = (void *)*v180;
            }
            uint64_t v23 = sub_15C1EF4((uint64_t)v180);
            *(void *)(a1 + 368) = v23;
LABEL_357:
            uint64_t v8 = *(unsigned __int8 **)v289;
          }
LABEL_358:
          uint64_t result = (char *)sub_1198E84(a3, v23, v8);
          goto LABEL_483;
        case 0x6Du:
          if (v9 != 104) {
            goto LABEL_577;
          }
          *(_DWORD *)(a1 + 20) |= 0x4000000u;
          uint64_t v218 = (char *)(v8 + 1);
          uint64_t v219 = *v8;
          if (((char)*v8 & 0x80000000) == 0) {
            goto LABEL_446;
          }
          int v220 = *v218;
          uint64_t v219 = v219 + (v220 << 7) - 128;
          if (v220 < 0)
          {
            uint64_t result = (char *)sub_188C138((uint64_t)v8, v219);
            *(void *)v289 = result;
            *(unsigned char *)(a1 + 501) = v277 != 0;
            if (!result) {
              return result;
            }
          }
          else
          {
            uint64_t v218 = (char *)(v8 + 2);
LABEL_446:
            *(void *)v289 = v218;
            *(unsigned char *)(a1 + 501) = v219 != 0;
          }
          goto LABEL_484;
        case 0x6Eu:
          if (v9 != 114) {
            goto LABEL_577;
          }
          *(_DWORD *)(a1 + 16) |= 0x100000u;
          uint64_t v221 = *(void *)(a1 + 376);
          if (!v221)
          {
            uint64_t v222 = (void *)(*v284 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v284) {
              uint64_t v222 = (void *)*v222;
            }
            uint64_t v221 = sub_1478EAC((uint64_t)v222);
            *(void *)(a1 + 376) = v221;
            uint64_t v8 = *(unsigned __int8 **)v289;
          }
          uint64_t result = (char *)sub_1462B04(a3, v221, v8);
          goto LABEL_483;
        case 0x6Fu:
          if (v9 != 120) {
            goto LABEL_577;
          }
          *(_DWORD *)(a1 + 20) |= 0x8000000u;
          unint64_t v181 = (char *)(v8 + 1);
          uint64_t v182 = *v8;
          if (((char)*v8 & 0x80000000) == 0) {
            goto LABEL_363;
          }
          int v183 = *v181;
          uint64_t v182 = v182 + (v183 << 7) - 128;
          if (v183 < 0)
          {
            uint64_t result = (char *)sub_188C138((uint64_t)v8, v182);
            *(void *)v289 = result;
            *(unsigned char *)(a1 + 502) = v268 != 0;
            if (!result) {
              return result;
            }
          }
          else
          {
            unint64_t v181 = (char *)(v8 + 2);
LABEL_363:
            *(void *)v289 = v181;
            *(unsigned char *)(a1 + 502) = v182 != 0;
          }
          goto LABEL_484;
        case 0x70u:
          if (v9 != 130) {
            goto LABEL_577;
          }
          uint64_t result = (char *)(v8 - 2);
          while (1)
          {
            v184 = (unsigned __int8 *)(result + 2);
            *(void *)v289 = result + 2;
            uint64_t v185 = *(_DWORD **)(a1 + 192);
            if (v185 && (uint64_t v186 = *(int *)(a1 + 184), (int)v186 < *v185))
            {
              *(_DWORD *)(a1 + 184) = v186 + 1;
              uint64_t v187 = *(void *)&v185[2 * v186 + 2];
            }
            else
            {
              uint64_t v188 = sub_15C2114(*v286);
              uint64_t v187 = sub_188CDC8((uint64_t)v286, v188);
              v184 = *(unsigned __int8 **)v289;
            }
            uint64_t result = (char *)sub_11A058C(a3, v187, v184);
            *(void *)v289 = result;
            if (!result) {
              return result;
            }
            if (*(void *)a3 <= (unint64_t)result || *(_WORD *)result != 1922) {
              goto LABEL_484;
            }
          }
        case 0x71u:
          if (v9 != 136) {
            goto LABEL_577;
          }
          *(_DWORD *)(a1 + 20) |= 0x20000000u;
          int v189 = (char *)(v8 + 1);
          uint64_t v190 = *v8;
          if (((char)*v8 & 0x80000000) == 0) {
            goto LABEL_378;
          }
          int v191 = *v189;
          uint64_t v190 = v190 + (v191 << 7) - 128;
          if (v191 < 0)
          {
            uint64_t result = (char *)sub_188C138((uint64_t)v8, v190);
            *(void *)v289 = result;
            *(void *)(a1 + 504) = v269;
            if (!result) {
              return result;
            }
          }
          else
          {
            int v189 = (char *)(v8 + 2);
LABEL_378:
            *(void *)v289 = v189;
            *(void *)(a1 + 504) = v190;
          }
          goto LABEL_484;
        case 0x72u:
          if (v9 != 146) {
            goto LABEL_577;
          }
          *(_DWORD *)(a1 + 16) |= 0x200000u;
          uint64_t v99 = *(void *)(a1 + 384);
          if (v99) {
            goto LABEL_409;
          }
          int v192 = (void *)(*v284 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v284) {
            int v192 = (void *)*v192;
          }
          uint64_t v99 = sub_15C1918((uint64_t)v192);
          *(void *)(a1 + 384) = v99;
          goto LABEL_408;
        case 0x73u:
          if (v9 != 152) {
            goto LABEL_577;
          }
          uint64_t v193 = (char *)(v8 + 1);
          unint64_t v56 = *v8;
          if (((char)*v8 & 0x80000000) == 0) {
            goto LABEL_388;
          }
          int v194 = *v193;
          int v195 = v56 + (v194 << 7);
          unint64_t v56 = (v195 - 128);
          if (v194 < 0)
          {
            uint64_t result = (char *)sub_188C138((uint64_t)v8, (v195 - 128));
            *(void *)v289 = result;
            if (!result) {
              return result;
            }
            unint64_t v56 = v270;
          }
          else
          {
            uint64_t v193 = (char *)(v8 + 2);
LABEL_388:
            *(void *)v289 = v193;
          }
          if (v56 <= 5)
          {
            *(_DWORD *)(a1 + 20) |= 0x40000000u;
            *(_DWORD *)(a1 + 512) = v56;
            goto LABEL_484;
          }
          if (*v284) {
            v282 = (std::string *)((*v284 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            v282 = (std::string *)sub_188DBD8(v284);
          }
          int v283 = 115;
          goto LABEL_603;
        case 0x74u:
          if (v9 != 160) {
            goto LABEL_577;
          }
          *(_DWORD *)(a1 + 20) |= 0x10000000u;
          uint64_t v196 = (char *)(v8 + 1);
          uint64_t v197 = *v8;
          if (((char)*v8 & 0x80000000) == 0) {
            goto LABEL_395;
          }
          int v198 = *v196;
          uint64_t v197 = v197 + (v198 << 7) - 128;
          if (v198 < 0)
          {
            uint64_t result = (char *)sub_188C138((uint64_t)v8, v197);
            *(void *)v289 = result;
            *(unsigned char *)(a1 + 503) = v271 != 0;
            if (!result) {
              return result;
            }
          }
          else
          {
            uint64_t v196 = (char *)(v8 + 2);
LABEL_395:
            *(void *)v289 = v196;
            *(unsigned char *)(a1 + 503) = v197 != 0;
          }
          goto LABEL_484;
        case 0x75u:
          if (v9 != 168) {
            goto LABEL_577;
          }
          *(_DWORD *)(a1 + 24) |= 1u;
          uint64_t v223 = (char *)(v8 + 1);
          uint64_t v224 = *v8;
          if (((char)*v8 & 0x80000000) == 0) {
            goto LABEL_457;
          }
          int v225 = *v223;
          uint64_t v224 = v224 + (v225 << 7) - 128;
          if (v225 < 0)
          {
            uint64_t result = (char *)sub_188C138((uint64_t)v8, v224);
            *(void *)v289 = result;
            *(unsigned char *)(a1 + 520) = v278 != 0;
            if (!result) {
              return result;
            }
          }
          else
          {
            uint64_t v223 = (char *)(v8 + 2);
LABEL_457:
            *(void *)v289 = v223;
            *(unsigned char *)(a1 + 520) = v224 != 0;
          }
          goto LABEL_484;
        case 0x76u:
          if (v9 != 176) {
            goto LABEL_577;
          }
          uint64_t v199 = (char *)(v8 + 1);
          unint64_t v56 = *v8;
          if (((char)*v8 & 0x80000000) == 0) {
            goto LABEL_400;
          }
          int v200 = *v199;
          int v201 = v56 + (v200 << 7);
          unint64_t v56 = (v201 - 128);
          if (v200 < 0)
          {
            uint64_t result = (char *)sub_188C138((uint64_t)v8, (v201 - 128));
            *(void *)v289 = result;
            if (!result) {
              return result;
            }
            unint64_t v56 = v272;
          }
          else
          {
            uint64_t v199 = (char *)(v8 + 2);
LABEL_400:
            *(void *)v289 = v199;
          }
          if (v56 <= 0x17)
          {
            *(_DWORD *)(a1 + 20) |= 0x80000000;
            *(_DWORD *)(a1 + 516) = v56;
            goto LABEL_484;
          }
          if (*v284) {
            v282 = (std::string *)((*v284 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            v282 = (std::string *)sub_188DBD8(v284);
          }
          int v283 = 118;
          goto LABEL_603;
        case 0x77u:
          if (v9 == 184)
          {
            uint64_t v226 = (char *)(v8 - 2);
            while (1)
            {
              *(void *)v289 = v226 + 2;
              unint64_t v227 = v226[2];
              uint64_t v228 = v226 + 3;
              if (v226[2] < 0)
              {
                int v229 = *v228;
                int v230 = v227 + (v229 << 7);
                unint64_t v227 = (v230 - 128);
                if (v229 < 0)
                {
                  uint64_t result = (char *)sub_188C138((uint64_t)(v226 + 2), (v230 - 128));
                  *(void *)v289 = result;
                  if (!result) {
                    return result;
                  }
                  unint64_t v227 = v233;
                  goto LABEL_464;
                }
                uint64_t v228 = v226 + 4;
              }
              *(void *)v289 = v228;
LABEL_464:
              if (v227 == 1)
              {
                uint64_t v231 = *(unsigned int *)(a1 + 200);
                if (v231 == *(_DWORD *)(a1 + 204))
                {
                  int v232 = v231 + 1;
                  sub_188C80C((unsigned int *)(a1 + 200), v231 + 1);
                  *(_DWORD *)(*(void *)(a1 + 208) + 4 * v231) = 1;
                }
                else
                {
                  *(_DWORD *)(*(void *)(a1 + 208) + 4 * v231) = 1;
                  int v232 = v231 + 1;
                }
                *(_DWORD *)(a1 + 200) = v232;
              }
              else
              {
                if (*v284) {
                  uint64_t v234 = (std::string *)((*v284 & 0xFFFFFFFFFFFFFFFCLL) + 8);
                }
                else {
                  uint64_t v234 = (std::string *)sub_188DBD8(v284);
                }
                sub_188C020(119, v227, v234);
              }
              uint64_t v226 = *(char **)v289;
              if (*(void *)a3 <= *(void *)v289 || **(_WORD **)v289 != 1976) {
                goto LABEL_484;
              }
            }
          }
          if (v9 == 186)
          {
            *(void *)&long long v290 = a1 + 200;
            *((void *)&v290 + 1) = sub_144CF24;
            uint64_t v291 = a1 + 8;
            int v279 = 119;
LABEL_576:
            int v292 = v279;
            uint64_t result = sub_1112E88((uint64_t)a3, (char *)v8, &v290);
          }
          else
          {
LABEL_577:
            if (v9) {
              BOOL v280 = (v9 & 7) == 4;
            }
            else {
              BOOL v280 = 1;
            }
            if (v280)
            {
              if (!v8) {
                return 0;
              }
              a3[10].i32[0] = v9 - 1;
              return (char *)v8;
            }
            if (*v284)
            {
              v281 = (std::string *)((*v284 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              v281 = (std::string *)sub_188DBD8(v284);
              uint64_t v8 = *(unsigned __int8 **)v289;
            }
            uint64_t result = (char *)sub_1885AC0(v9, v281, (char *)v8, a3);
          }
LABEL_483:
          *(void *)v289 = result;
          if (!result) {
            return result;
          }
LABEL_484:
          int v237 = sub_11947B8((uint64_t)a3, (char **)v289, a3[11].i32[1]);
          uint64_t result = *(char **)v289;
          if (v237) {
            return result;
          }
          break;
        case 0x78u:
          if (v9 != 194) {
            goto LABEL_577;
          }
          *(_DWORD *)(a1 + 16) |= 0x400000u;
          uint64_t v99 = *(void *)(a1 + 392);
          if (v99) {
            goto LABEL_409;
          }
          unint64_t v202 = (void *)(*v284 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v284) {
            unint64_t v202 = (void *)*v202;
          }
          uint64_t v99 = sub_15C1918((uint64_t)v202);
          *(void *)(a1 + 392) = v99;
LABEL_408:
          uint64_t v8 = *(unsigned __int8 **)v289;
LABEL_409:
          uint64_t result = sub_1198F14(a3, v99, v8);
          goto LABEL_483;
        case 0x79u:
          if (v9 != 200) {
            goto LABEL_577;
          }
          *(_DWORD *)(a1 + 24) |= 2u;
          v203 = (char *)(v8 + 1);
          uint64_t v204 = *v8;
          if (((char)*v8 & 0x80000000) == 0) {
            goto LABEL_414;
          }
          int v205 = *v203;
          uint64_t v204 = v204 + (v205 << 7) - 128;
          if (v205 < 0)
          {
            uint64_t result = (char *)sub_188C138((uint64_t)v8, v204);
            *(void *)v289 = result;
            *(unsigned char *)(a1 + 521) = v273 != 0;
            if (!result) {
              return result;
            }
          }
          else
          {
            v203 = (char *)(v8 + 2);
LABEL_414:
            *(void *)v289 = v203;
            *(unsigned char *)(a1 + 521) = v204 != 0;
          }
          goto LABEL_484;
        case 0x7Au:
          if (v9 != 210) {
            goto LABEL_577;
          }
          *(_DWORD *)(a1 + 16) |= 0x800000u;
          uint64_t v206 = *(void *)(a1 + 400);
          if (!v206)
          {
            int v207 = (void *)(*v284 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v284) {
              int v207 = (void *)*v207;
            }
            uint64_t v206 = sub_1479978((uint64_t)v207);
            *(void *)(a1 + 400) = v206;
            uint64_t v8 = *(unsigned __int8 **)v289;
          }
          uint64_t result = (char *)sub_1352B04(a3, v206, v8);
          goto LABEL_483;
        case 0x7Bu:
          if (v9 != 216) {
            goto LABEL_577;
          }
          unint64_t v208 = (char *)(v8 + 1);
          unint64_t v56 = *v8;
          if (((char)*v8 & 0x80000000) == 0) {
            goto LABEL_425;
          }
          int v209 = *v208;
          int v210 = v56 + (v209 << 7);
          unint64_t v56 = (v210 - 128);
          if (v209 < 0)
          {
            uint64_t result = (char *)sub_188C138((uint64_t)v8, (v210 - 128));
            *(void *)v289 = result;
            if (!result) {
              return result;
            }
            unint64_t v56 = v274;
          }
          else
          {
            unint64_t v208 = (char *)(v8 + 2);
LABEL_425:
            *(void *)v289 = v208;
          }
          if (v56 > 4)
          {
            if (*v284) {
              v282 = (std::string *)((*v284 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else {
              v282 = (std::string *)sub_188DBD8(v284);
            }
            int v283 = 123;
LABEL_603:
            sub_188C020(v283, v56, v282);
          }
          else
          {
            *(_DWORD *)(a1 + 24) |= 8u;
            *(_DWORD *)(a1 + 524) = v56;
          }
          goto LABEL_484;
        case 0x7Cu:
          if (v9 != 224) {
            goto LABEL_577;
          }
          *(_DWORD *)(a1 + 24) |= 4u;
          uint64_t v211 = (char *)(v8 + 1);
          uint64_t v212 = *v8;
          if (((char)*v8 & 0x80000000) == 0) {
            goto LABEL_432;
          }
          int v213 = *v211;
          uint64_t v212 = v212 + (v213 << 7) - 128;
          if (v213 < 0)
          {
            uint64_t result = (char *)sub_188C138((uint64_t)v8, v212);
            *(void *)v289 = result;
            *(unsigned char *)(a1 + 522) = v275 != 0;
            if (!result) {
              return result;
            }
          }
          else
          {
            uint64_t v211 = (char *)(v8 + 2);
LABEL_432:
            *(void *)v289 = v211;
            *(unsigned char *)(a1 + 522) = v212 != 0;
          }
          goto LABEL_484;
        case 0x7Du:
          if (v9 != 234) {
            goto LABEL_577;
          }
          *(_DWORD *)(a1 + 16) |= 0x100u;
          uint64_t v235 = *(void *)(a1 + 8);
          int v28 = (uint64_t *)(v235 & 0xFFFFFFFFFFFFFFFCLL);
          if (v235) {
            int v28 = (uint64_t *)*v28;
          }
          uint64_t v29 = (void *)(a1 + 280);
          goto LABEL_482;
        case 0x7Eu:
          if (v9 != 242) {
            goto LABEL_577;
          }
          *(_DWORD *)(a1 + 16) |= 0x200u;
          uint64_t v214 = *(void *)(a1 + 8);
          int v28 = (uint64_t *)(v214 & 0xFFFFFFFFFFFFFFFCLL);
          if (v214) {
            int v28 = (uint64_t *)*v28;
          }
          uint64_t v29 = (void *)(a1 + 288);
LABEL_482:
          uint64_t v236 = (std::string *)sub_1880F84(v29, v28);
          uint64_t result = (char *)sub_188C244(v236, *(char **)v289, (uint64_t)a3);
          goto LABEL_483;
        default:
          goto LABEL_577;
      }
    }
  }
  return result;
}

uint64_t sub_1466A40(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1460ED8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_1466AD0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_145EC00(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_1466B60(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1461BC4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1466BF0(uint64_t a1, char *__dst, unint64_t *a3)
{
  uint64_t v6 = *(unsigned int *)(a1 + 32);
  if ((int)v6 >= 1)
  {
    for (uint64_t i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      unint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8 * i);
      *__dst = 8;
      __dst[1] = v8;
      if (v8 > 0x7F)
      {
        __dst[1] = v8 | 0x80;
        unint64_t v9 = v8 >> 7;
        __dst[2] = v8 >> 7;
        __dst += 3;
        if (v8 >= 0x4000)
        {
          do
          {
            *(__dst - 1) |= 0x80u;
            unint64_t v10 = v9 >> 14;
            v9 >>= 7;
            *__dst++ = v9;
          }
          while (v10);
        }
      }
      else
      {
        __dst += 2;
      }
    }
  }
  uint64_t v11 = *(unsigned int *)(a1 + 48);
  if ((int)v11 >= 1)
  {
    for (uint64_t j = 0; j != v11; ++j)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      unint64_t v13 = *(void *)(*(void *)(a1 + 56) + 8 * j);
      *__dst = 16;
      __dst[1] = v13;
      if (v13 > 0x7F)
      {
        __dst[1] = v13 | 0x80;
        unint64_t v14 = v13 >> 7;
        __dst[2] = v13 >> 7;
        __dst += 3;
        if (v13 >= 0x4000)
        {
          do
          {
            *(__dst - 1) |= 0x80u;
            unint64_t v15 = v14 >> 14;
            v14 >>= 7;
            *__dst++ = v14;
          }
          while (v15);
        }
      }
      else
      {
        __dst += 2;
      }
    }
  }
  int v16 = *(_DWORD *)(a1 + 16);
  if ((v16 & 0x400) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    uint64_t v17 = *(void *)(a1 + 296);
    *__dst = 26;
    unsigned int v18 = *(_DWORD *)(v17 + 20);
    __dst[1] = v18;
    if (v18 > 0x7F) {
      int v19 = sub_188A9CC(v18, __dst + 1);
    }
    else {
      int v19 = __dst + 2;
    }
    __dst = sub_15B9320(v17, v19, a3);
    if ((v16 & 0x800) == 0)
    {
LABEL_21:
      if ((v16 & 1) == 0) {
        goto LABEL_22;
      }
      goto LABEL_36;
    }
  }
  else if ((v16 & 0x800) == 0)
  {
    goto LABEL_21;
  }
  if (*a3 <= (unint64_t)__dst) {
    __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
  }
  uint64_t v20 = *(void *)(a1 + 304);
  *__dst = 34;
  unsigned int v21 = *(_DWORD *)(v20 + 44);
  __dst[1] = v21;
  if (v21 > 0x7F) {
    int v22 = sub_188A9CC(v21, __dst + 1);
  }
  else {
    int v22 = __dst + 2;
  }
  __dst = sub_15B43E4(v20, v22, a3);
  if ((v16 & 1) == 0)
  {
LABEL_22:
    if ((v16 & 0x1000) == 0) {
      goto LABEL_43;
    }
    goto LABEL_37;
  }
LABEL_36:
  __dst = sub_117A0AC(a3, 5, (const void **)(*(void *)(a1 + 216) & 0xFFFFFFFFFFFFFFFELL), __dst);
  if ((v16 & 0x1000) == 0) {
    goto LABEL_43;
  }
LABEL_37:
  if (*a3 <= (unint64_t)__dst) {
    __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
  }
  uint64_t v23 = *(void *)(a1 + 312);
  *__dst = 50;
  unsigned int v24 = *(_DWORD *)(v23 + 20);
  __dst[1] = v24;
  if (v24 > 0x7F) {
    uint64_t v25 = sub_188A9CC(v24, __dst + 1);
  }
  else {
    uint64_t v25 = __dst + 2;
  }
  __dst = sub_15B1A68(v23, (unint64_t)v25, a3);
LABEL_43:
  uint64_t v26 = *(unsigned int *)(a1 + 64);
  if ((int)v26 >= 1)
  {
    for (uint64_t k = 0; k != v26; ++k)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      unint64_t v28 = *(int *)(*(void *)(a1 + 72) + 4 * k);
      *__dst = 56;
      __dst[1] = v28;
      if (v28 > 0x7F)
      {
        __dst[1] = v28 | 0x80;
        unint64_t v29 = v28 >> 7;
        __dst[2] = v28 >> 7;
        __dst += 3;
        if (v28 >= 0x4000)
        {
          do
          {
            *(__dst - 1) |= 0x80u;
            unint64_t v30 = v29 >> 14;
            v29 >>= 7;
            *__dst++ = v29;
          }
          while (v30);
        }
      }
      else
      {
        __dst += 2;
      }
    }
  }
  if ((v16 & 0x8000000) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    char v31 = *(unsigned char *)(a1 + 420);
    *__dst = 64;
    __dst[1] = v31;
    __dst += 2;
  }
  if ((*(unsigned char *)(a1 + 24) & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unint64_t v32 = *(int *)(a1 + 528);
    *__dst = 72;
    __dst[1] = v32;
    if (v32 > 0x7F)
    {
      __dst[1] = v32 | 0x80;
      unint64_t v33 = v32 >> 7;
      __dst[2] = v32 >> 7;
      __dst += 3;
      if (v32 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unint64_t v34 = v33 >> 14;
          v33 >>= 7;
          *__dst++ = v33;
        }
        while (v34);
      }
    }
    else
    {
      __dst += 2;
    }
  }
  int v35 = *(_DWORD *)(a1 + 16);
  if ((v35 & 0x1000000) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unint64_t v36 = *(int *)(a1 + 408);
    *__dst = 80;
    __dst[1] = v36;
    if (v36 > 0x7F)
    {
      __dst[1] = v36 | 0x80;
      unint64_t v37 = v36 >> 7;
      __dst[2] = v36 >> 7;
      __dst += 3;
      if (v36 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unint64_t v38 = v37 >> 14;
          v37 >>= 7;
          *__dst++ = v37;
        }
        while (v38);
      }
    }
    else
    {
      __dst += 2;
    }
  }
  if ((v35 & 0x2000000) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unint64_t v39 = *(int *)(a1 + 412);
    *__dst = 88;
    __dst[1] = v39;
    if (v39 > 0x7F)
    {
      __dst[1] = v39 | 0x80;
      unint64_t v40 = v39 >> 7;
      __dst[2] = v39 >> 7;
      __dst += 3;
      if (v39 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unint64_t v41 = v40 >> 14;
          v40 >>= 7;
          *__dst++ = v40;
        }
        while (v41);
      }
    }
    else
    {
      __dst += 2;
    }
  }
  if ((v35 & 0x2000) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    uint64_t v42 = *(void *)(a1 + 320);
    *__dst = 98;
    unsigned int v43 = *(_DWORD *)(v42 + 20);
    __dst[1] = v43;
    if (v43 > 0x7F) {
      uint64_t v44 = sub_188A9CC(v43, __dst + 1);
    }
    else {
      uint64_t v44 = __dst + 2;
    }
    __dst = sub_15BA180(v42, (unint64_t)v44, a3);
  }
  if ((v35 & 0x4000000) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unint64_t v45 = *(int *)(a1 + 416);
    *__dst = 104;
    __dst[1] = v45;
    if (v45 > 0x7F)
    {
      __dst[1] = v45 | 0x80;
      unint64_t v46 = v45 >> 7;
      __dst[2] = v45 >> 7;
      __dst += 3;
      if (v45 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unint64_t v47 = v46 >> 14;
          v46 >>= 7;
          *__dst++ = v46;
        }
        while (v47);
      }
    }
    else
    {
      __dst += 2;
    }
  }
  if ((v35 & 0x10000000) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    char v48 = *(unsigned char *)(a1 + 421);
    *__dst = 112;
    __dst[1] = v48;
    __dst += 2;
  }
  if ((v35 & 0x20000000) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    char v49 = *(unsigned char *)(a1 + 422);
    *__dst = 120;
    __dst[1] = v49;
    __dst += 2;
  }
  if (*(unsigned char *)(a1 + 20))
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unint64_t v50 = *(int *)(a1 + 432);
    *(_WORD *)__dst = 384;
    __dst[2] = v50;
    if (v50 > 0x7F)
    {
      __dst[2] = v50 | 0x80;
      unint64_t v51 = v50 >> 7;
      __dst[3] = v50 >> 7;
      __dst += 4;
      if (v50 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unint64_t v52 = v51 >> 14;
          v51 >>= 7;
          *__dst++ = v51;
        }
        while (v52);
      }
    }
    else
    {
      __dst += 3;
    }
  }
  uint64_t v53 = *(unsigned int *)(a1 + 88);
  if ((int)v53 >= 1)
  {
    uint64_t v54 = 0;
    uint64_t v55 = 8 * v53;
    do
    {
      unint64_t v56 = *(void **)(*(void *)(a1 + 96) + v54 + 8);
      if (*((char *)v56 + 23) < 0)
      {
        int64_t v57 = v56[1];
        if (v57 > 127) {
          goto LABEL_117;
        }
      }
      else
      {
        int64_t v57 = *((unsigned __int8 *)v56 + 23);
      }
      if ((uint64_t)(*a3 - (void)__dst + 13) >= v57)
      {
        *(_WORD *)__dst = 394;
        __dst[2] = v57;
        if (*((char *)v56 + 23) < 0) {
          unint64_t v56 = (void *)*v56;
        }
        int v58 = __dst + 3;
        memcpy(v58, v56, v57);
        __dst = &v58[v57];
        goto LABEL_115;
      }
LABEL_117:
      __dst = (char *)sub_188A868(a3, 17, (uint64_t)v56, __dst);
LABEL_115:
      v54 += 8;
    }
    while (v55 != v54);
  }
  int v59 = *(_DWORD *)(a1 + 16);
  if ((v59 & 0x40000000) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    char v64 = *(unsigned char *)(a1 + 423);
    *(_WORD *)__dst = 400;
    __dst[2] = v64;
    __dst += 3;
    if ((v59 & 0x80000000) == 0)
    {
LABEL_120:
      if ((v59 & 2) == 0) {
        goto LABEL_122;
      }
      goto LABEL_121;
    }
  }
  else if ((v59 & 0x80000000) == 0)
  {
    goto LABEL_120;
  }
  if (*a3 <= (unint64_t)__dst) {
    __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
  }
  uint64_t v65 = *(void *)(a1 + 424);
  *(_WORD *)__dst = 409;
  *(void *)(__dst + 2) = v65;
  __dst += 10;
  if ((v59 & 2) != 0) {
LABEL_121:
  }
    __dst = sub_117A0AC(a3, 20, (const void **)(*(void *)(a1 + 224) & 0xFFFFFFFFFFFFFFFELL), __dst);
LABEL_122:
  if ((*(unsigned char *)(a1 + 20) & 4) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    char v60 = *(unsigned char *)(a1 + 440);
    *(_WORD *)__dst = 424;
    __dst[2] = v60;
    __dst += 3;
  }
  if ((*(unsigned char *)(a1 + 17) & 0x40) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    uint64_t v61 = *(void *)(a1 + 328);
    *(_WORD *)__dst = 434;
    unsigned int v62 = *(_DWORD *)(v61 + 20);
    __dst[2] = v62;
    if (v62 > 0x7F) {
      uint64_t v63 = sub_188A9CC(v62, __dst + 2);
    }
    else {
      uint64_t v63 = __dst + 3;
    }
    __dst = sub_1461378(v61, v63, a3);
  }
  int v66 = *(_DWORD *)(a1 + 20);
  if ((v66 & 2) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unint64_t v67 = *(int *)(a1 + 436);
    *(_WORD *)__dst = 440;
    __dst[2] = v67;
    if (v67 > 0x7F)
    {
      __dst[2] = v67 | 0x80;
      unint64_t v68 = v67 >> 7;
      __dst[3] = v67 >> 7;
      __dst += 4;
      if (v67 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unint64_t v69 = v68 >> 14;
          v68 >>= 7;
          *__dst++ = v68;
        }
        while (v69);
      }
    }
    else
    {
      __dst += 3;
    }
  }
  if ((v66 & 8) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    char v70 = *(unsigned char *)(a1 + 441);
    *(_WORD *)__dst = 448;
    __dst[2] = v70;
    __dst += 3;
    if ((v66 & 0x10) == 0)
    {
LABEL_149:
      if ((v66 & 0x20) == 0) {
        goto LABEL_160;
      }
      goto LABEL_157;
    }
  }
  else if ((v66 & 0x10) == 0)
  {
    goto LABEL_149;
  }
  if (*a3 <= (unint64_t)__dst) {
    __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
  }
  char v71 = *(unsigned char *)(a1 + 442);
  *(_WORD *)__dst = 456;
  __dst[2] = v71;
  __dst += 3;
  if ((v66 & 0x20) != 0)
  {
LABEL_157:
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    char v72 = *(unsigned char *)(a1 + 443);
    *(_WORD *)__dst = 464;
    __dst[2] = v72;
    __dst += 3;
  }
LABEL_160:
  int v73 = *(_DWORD *)(a1 + 16);
  if ((v73 & 4) != 0)
  {
    __dst = sub_117A0AC(a3, 27, (const void **)(*(void *)(a1 + 232) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v73 & 8) == 0)
    {
LABEL_162:
      if ((v73 & 0x8000) == 0) {
        goto LABEL_163;
      }
      goto LABEL_173;
    }
  }
  else if ((v73 & 8) == 0)
  {
    goto LABEL_162;
  }
  __dst = sub_117A0AC(a3, 28, (const void **)(*(void *)(a1 + 240) & 0xFFFFFFFFFFFFFFFELL), __dst);
  if ((v73 & 0x8000) == 0)
  {
LABEL_163:
    if ((v73 & 0x10) == 0) {
      goto LABEL_164;
    }
    goto LABEL_225;
  }
LABEL_173:
  if (*a3 <= (unint64_t)__dst) {
    __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
  }
  uint64_t v76 = *(void *)(a1 + 336);
  *(_WORD *)__dst = 490;
  unsigned int v77 = *(_DWORD *)(v76 + 44);
  __dst[2] = v77;
  if (v77 > 0x7F) {
    uint64_t v78 = sub_188A9CC(v77, __dst + 2);
  }
  else {
    uint64_t v78 = __dst + 3;
  }
  __dst = sub_15B0C0C(v76, v78, a3);
  if ((v73 & 0x10) == 0)
  {
LABEL_164:
    if ((v73 & 0x20) == 0) {
      goto LABEL_166;
    }
    goto LABEL_165;
  }
LABEL_225:
  __dst = sub_117A0AC(a3, 30, (const void **)(*(void *)(a1 + 248) & 0xFFFFFFFFFFFFFFFELL), __dst);
  if ((v73 & 0x20) != 0) {
LABEL_165:
  }
    __dst = sub_117A0AC(a3, 31, (const void **)(*(void *)(a1 + 256) & 0xFFFFFFFFFFFFFFFELL), __dst);
LABEL_166:
  int v74 = *(_DWORD *)(a1 + 20);
  if ((v74 & 0x40) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unint64_t v75 = *(int *)(a1 + 444);
    *(_WORD *)__dst = 640;
    __dst[2] = v75;
    if (v75 > 0x7F)
    {
      __dst[2] = v75 | 0x80;
      unint64_t v79 = v75 >> 7;
      __dst[3] = v75 >> 7;
      __dst += 4;
      if (v75 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unint64_t v80 = v79 >> 14;
          v79 >>= 7;
          *__dst++ = v79;
        }
        while (v80);
      }
    }
    else
    {
      __dst += 3;
    }
  }
  if ((v74 & 0x400) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    char v81 = *(unsigned char *)(a1 + 472);
    *(_WORD *)__dst = 648;
    __dst[2] = v81;
    __dst += 3;
  }
  if ((v74 & 0x800) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    char v82 = *(unsigned char *)(a1 + 473);
    *(_WORD *)__dst = 656;
    __dst[2] = v82;
    __dst += 3;
  }
  uint64_t v83 = *(unsigned int *)(a1 + 112);
  if ((int)v83 >= 1)
  {
    uint64_t v84 = 0;
    uint64_t v85 = 8 * v83;
    do
    {
      uint64_t v86 = *(void **)(*(void *)(a1 + 120) + v84 + 8);
      if (*((char *)v86 + 23) < 0)
      {
        int64_t v87 = v86[1];
        if (v87 > 127) {
          goto LABEL_198;
        }
      }
      else
      {
        int64_t v87 = *((unsigned __int8 *)v86 + 23);
      }
      if ((uint64_t)(*a3 - (void)__dst + 13) >= v87)
      {
        *(_WORD *)__dst = 666;
        __dst[2] = v87;
        if (*((char *)v86 + 23) < 0) {
          uint64_t v86 = (void *)*v86;
        }
        unint64_t v88 = __dst + 3;
        memcpy(v88, v86, v87);
        __dst = &v88[v87];
        goto LABEL_196;
      }
LABEL_198:
      __dst = (char *)sub_188A868(a3, 35, (uint64_t)v86, __dst);
LABEL_196:
      v84 += 8;
    }
    while (v85 != v84);
  }
  if ((v74 & 0x80) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    uint64_t v89 = *(void *)(a1 + 448);
    *(_WORD *)__dst = 673;
    *(void *)(__dst + 2) = v89;
    __dst += 10;
    if ((v74 & 0x100) == 0)
    {
LABEL_201:
      if ((v74 & 0x200) == 0) {
        goto LABEL_202;
      }
      goto LABEL_210;
    }
  }
  else if ((v74 & 0x100) == 0)
  {
    goto LABEL_201;
  }
  if (*a3 <= (unint64_t)__dst) {
    __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
  }
  uint64_t v90 = *(void *)(a1 + 456);
  *(_WORD *)__dst = 681;
  *(void *)(__dst + 2) = v90;
  __dst += 10;
  if ((v74 & 0x200) == 0)
  {
LABEL_202:
    if ((v74 & 0x1000) == 0) {
      goto LABEL_216;
    }
    goto LABEL_213;
  }
LABEL_210:
  if (*a3 <= (unint64_t)__dst) {
    __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
  }
  uint64_t v91 = *(void *)(a1 + 464);
  *(_WORD *)__dst = 689;
  *(void *)(__dst + 2) = v91;
  __dst += 10;
  if ((v74 & 0x1000) != 0)
  {
LABEL_213:
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    char v92 = *(unsigned char *)(a1 + 474);
    *(_WORD *)__dst = 696;
    __dst[2] = v92;
    __dst += 3;
  }
LABEL_216:
  int v93 = *(_DWORD *)(a1 + 16);
  if ((v93 & 0x40) != 0) {
    __dst = sub_117A0AC(a3, 42, (const void **)(*(void *)(a1 + 264) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v93 & 0x10000) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    uint64_t v94 = *(void *)(a1 + 344);
    *(_WORD *)__dst = 730;
    unsigned int v95 = *(_DWORD *)(v94 + 24);
    __dst[2] = v95;
    if (v95 > 0x7F) {
      int v96 = sub_188A9CC(v95, __dst + 2);
    }
    else {
      int v96 = __dst + 3;
    }
    __dst = sub_145CBCC(v94, v96, a3);
  }
  int v97 = *(_DWORD *)(a1 + 20);
  if ((v97 & 0x2000) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    char v98 = *(unsigned char *)(a1 + 475);
    *(_WORD *)__dst = 736;
    __dst[2] = v98;
    __dst += 3;
  }
  if ((v97 & 0x4000) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unint64_t v99 = *(int *)(a1 + 476);
    *(_WORD *)__dst = 744;
    __dst[2] = v99;
    if (v99 > 0x7F)
    {
      __dst[2] = v99 | 0x80;
      unint64_t v100 = v99 >> 7;
      __dst[3] = v99 >> 7;
      __dst += 4;
      if (v99 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unint64_t v101 = v100 >> 14;
          v100 >>= 7;
          *__dst++ = v100;
        }
        while (v101);
      }
    }
    else
    {
      __dst += 3;
    }
  }
  if ((*(unsigned char *)(a1 + 18) & 2) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    uint64_t v102 = *(void *)(a1 + 352);
    *(_WORD *)__dst = 754;
    unsigned int v103 = *(_DWORD *)(v102 + 44);
    __dst[2] = v103;
    if (v103 > 0x7F) {
      char v104 = sub_188A9CC(v103, __dst + 2);
    }
    else {
      char v104 = __dst + 3;
    }
    __dst = sub_145F0B4(v102, v104, a3);
  }
  int v105 = *(_DWORD *)(a1 + 20);
  if ((v105 & 0x8000) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unint64_t v106 = *(int *)(a1 + 480);
    *(_WORD *)__dst = 760;
    __dst[2] = v106;
    if (v106 > 0x7F)
    {
      __dst[2] = v106 | 0x80;
      unint64_t v107 = v106 >> 7;
      __dst[3] = v106 >> 7;
      __dst += 4;
      if (v106 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unint64_t v108 = v107 >> 14;
          v107 >>= 7;
          *__dst++ = v107;
        }
        while (v108);
      }
    }
    else
    {
      __dst += 3;
    }
  }
  if ((v105 & 0x10000) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    char v109 = *(unsigned char *)(a1 + 484);
    *(_WORD *)__dst = 896;
    __dst[2] = v109;
    __dst += 3;
    if ((v105 & 0x20000) == 0)
    {
LABEL_256:
      if ((v105 & 0x40000) == 0) {
        goto LABEL_257;
      }
      goto LABEL_265;
    }
  }
  else if ((v105 & 0x20000) == 0)
  {
    goto LABEL_256;
  }
  if (*a3 <= (unint64_t)__dst) {
    __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
  }
  char v110 = *(unsigned char *)(a1 + 485);
  *(_WORD *)__dst = 904;
  __dst[2] = v110;
  __dst += 3;
  if ((v105 & 0x40000) == 0)
  {
LABEL_257:
    if ((v105 & 0x80000) == 0) {
      goto LABEL_271;
    }
    goto LABEL_268;
  }
LABEL_265:
  if (*a3 <= (unint64_t)__dst) {
    __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
  }
  char v111 = *(unsigned char *)(a1 + 486);
  *(_WORD *)__dst = 912;
  __dst[2] = v111;
  __dst += 3;
  if ((v105 & 0x80000) != 0)
  {
LABEL_268:
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    char v112 = *(unsigned char *)(a1 + 487);
    *(_WORD *)__dst = 920;
    __dst[2] = v112;
    __dst += 3;
  }
LABEL_271:
  uint64_t v113 = *(unsigned int *)(a1 + 136);
  if ((int)v113 >= 1)
  {
    uint64_t v114 = 0;
    uint64_t v115 = 8 * v113;
    do
    {
      uint64_t v116 = *(void **)(*(void *)(a1 + 144) + v114 + 8);
      if (*((char *)v116 + 23) < 0)
      {
        int64_t v117 = v116[1];
        if (v117 > 127) {
          goto LABEL_282;
        }
      }
      else
      {
        int64_t v117 = *((unsigned __int8 *)v116 + 23);
      }
      if ((uint64_t)(*a3 - (void)__dst + 13) >= v117)
      {
        *(_WORD *)__dst = 930;
        __dst[2] = v117;
        if (*((char *)v116 + 23) < 0) {
          uint64_t v116 = (void *)*v116;
        }
        uint64_t v118 = __dst + 3;
        memcpy(v118, v116, v117);
        __dst = &v118[v117];
        goto LABEL_280;
      }
LABEL_282:
      __dst = (char *)sub_188A868(a3, 52, (uint64_t)v116, __dst);
LABEL_280:
      v114 += 8;
    }
    while (v115 != v114);
  }
  if ((v105 & 0x200000) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    char v119 = *(unsigned char *)(a1 + 496);
    *(_WORD *)__dst = 936;
    __dst[2] = v119;
    __dst += 3;
  }
  if ((v105 & 0x100000) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unint64_t v120 = *(void *)(a1 + 488);
    *(_WORD *)__dst = 1696;
    __dst[2] = v120;
    if (v120 > 0x7F)
    {
      __dst[2] = v120 | 0x80;
      unint64_t v121 = v120 >> 7;
      __dst[3] = v120 >> 7;
      __dst += 4;
      if (v120 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unint64_t v122 = v121 >> 14;
          v121 >>= 7;
          *__dst++ = v121;
        }
        while (v122);
      }
    }
    else
    {
      __dst += 3;
    }
  }
  if ((v105 & 0x400000) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    char v123 = *(unsigned char *)(a1 + 497);
    *(_WORD *)__dst = 1704;
    __dst[2] = v123;
    __dst += 3;
  }
  if ((v105 & 0x800000) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    char v124 = *(unsigned char *)(a1 + 498);
    *(_WORD *)__dst = 1712;
    __dst[2] = v124;
    __dst += 3;
  }
  int v125 = *(_DWORD *)(a1 + 160);
  if (v125)
  {
    for (int m = 0; m != v125; ++m)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v127 = *(void *)(*(void *)(a1 + 168) + 8 * m + 8);
      *(_WORD *)__dst = 1722;
      unsigned int v128 = *(_DWORD *)(v127 + 20);
      __dst[2] = v128;
      if (v128 > 0x7F) {
        uint64_t v129 = sub_188A9CC(v128, __dst + 2);
      }
      else {
        uint64_t v129 = __dst + 3;
      }
      __dst = sub_1461F60(v127, (unint64_t)v129, a3);
    }
  }
  if ((v105 & 0x1000000) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    char v130 = *(unsigned char *)(a1 + 499);
    *(_WORD *)__dst = 1728;
    __dst[2] = v130;
    __dst += 3;
  }
  int v131 = *(_DWORD *)(a1 + 16);
  if ((v131 & 0x80) != 0) {
    __dst = sub_117A0AC(a3, 105, (const void **)(*(void *)(a1 + 272) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v131 & 0x40000) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    uint64_t v132 = *(void *)(a1 + 360);
    *(_WORD *)__dst = 1746;
    unsigned int v133 = *(_DWORD *)(v132 + 20);
    __dst[2] = v133;
    if (v133 > 0x7F) {
      uint64_t v134 = sub_188A9CC(v133, __dst + 2);
    }
    else {
      uint64_t v134 = __dst + 3;
    }
    __dst = sub_1461F60(v132, (unint64_t)v134, a3);
  }
  if ((*(unsigned char *)(a1 + 23) & 2) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    char v135 = *(unsigned char *)(a1 + 500);
    *(_WORD *)__dst = 1752;
    __dst[2] = v135;
    __dst += 3;
  }
  if ((*(unsigned char *)(a1 + 18) & 8) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    uint64_t v136 = *(void *)(a1 + 368);
    *(_WORD *)__dst = 1762;
    unsigned int v137 = *(_DWORD *)(v136 + 20);
    __dst[2] = v137;
    if (v137 > 0x7F) {
      int v138 = sub_188A9CC(v137, __dst + 2);
    }
    else {
      int v138 = __dst + 3;
    }
    __dst = sub_15B9320(v136, v138, a3);
  }
  if ((*(unsigned char *)(a1 + 23) & 4) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    char v139 = *(unsigned char *)(a1 + 501);
    *(_WORD *)__dst = 1768;
    __dst[2] = v139;
    __dst += 3;
  }
  if ((*(unsigned char *)(a1 + 18) & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    uint64_t v140 = *(void *)(a1 + 376);
    *(_WORD *)__dst = 1778;
    unsigned int v141 = *(_DWORD *)(v140 + 20);
    __dst[2] = v141;
    if (v141 > 0x7F) {
      uint64_t v142 = sub_188A9CC(v141, __dst + 2);
    }
    else {
      uint64_t v142 = __dst + 3;
    }
    __dst = (char *)sub_1462B94(v140, v142, a3);
  }
  int v143 = *(_DWORD *)(a1 + 20);
  if ((v143 & 0x8000000) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    char v144 = *(unsigned char *)(a1 + 502);
    *(_WORD *)__dst = 1784;
    __dst[2] = v144;
    __dst += 3;
  }
  int v145 = *(_DWORD *)(a1 + 184);
  if (v145)
  {
    for (int n = 0; n != v145; ++n)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v147 = *(void *)(*(void *)(a1 + 192) + 8 * n + 8);
      *(_WORD *)__dst = 1922;
      unsigned int v148 = *(_DWORD *)(v147 + 20);
      __dst[2] = v148;
      if (v148 > 0x7F) {
        uint64_t v149 = sub_188A9CC(v148, __dst + 2);
      }
      else {
        uint64_t v149 = __dst + 3;
      }
      __dst = sub_15BAD4C(v147, (unint64_t)v149, a3);
    }
  }
  if ((v143 & 0x20000000) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unint64_t v150 = *(void *)(a1 + 504);
    *(_WORD *)__dst = 1928;
    __dst[2] = v150;
    if (v150 > 0x7F)
    {
      __dst[2] = v150 | 0x80;
      unint64_t v151 = v150 >> 7;
      __dst[3] = v150 >> 7;
      __dst += 4;
      if (v150 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unint64_t v152 = v151 >> 14;
          v151 >>= 7;
          *__dst++ = v151;
        }
        while (v152);
      }
    }
    else
    {
      __dst += 3;
    }
  }
  if ((*(unsigned char *)(a1 + 18) & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    uint64_t v153 = *(void *)(a1 + 384);
    *(_WORD *)__dst = 1938;
    unsigned int v154 = *(_DWORD *)(v153 + 44);
    __dst[2] = v154;
    if (v154 > 0x7F) {
      uint64_t v155 = sub_188A9CC(v154, __dst + 2);
    }
    else {
      uint64_t v155 = __dst + 3;
    }
    __dst = sub_15B0C0C(v153, v155, a3);
  }
  int v156 = *(_DWORD *)(a1 + 20);
  if ((v156 & 0x40000000) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unint64_t v157 = *(int *)(a1 + 512);
    *(_WORD *)__dst = 1944;
    __dst[2] = v157;
    if (v157 > 0x7F)
    {
      __dst[2] = v157 | 0x80;
      unint64_t v158 = v157 >> 7;
      __dst[3] = v157 >> 7;
      __dst += 4;
      if (v157 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unint64_t v159 = v158 >> 14;
          v158 >>= 7;
          *__dst++ = v158;
        }
        while (v159);
      }
    }
    else
    {
      __dst += 3;
    }
  }
  if ((v156 & 0x10000000) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    char v160 = *(unsigned char *)(a1 + 503);
    *(_WORD *)__dst = 1952;
    __dst[2] = v160;
    __dst += 3;
  }
  if (*(unsigned char *)(a1 + 24))
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    char v161 = *(unsigned char *)(a1 + 520);
    *(_WORD *)__dst = 1960;
    __dst[2] = v161;
    __dst += 3;
  }
  if ((*(_DWORD *)(a1 + 20) & 0x80000000) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unint64_t v162 = *(int *)(a1 + 516);
    *(_WORD *)__dst = 1968;
    __dst[2] = v162;
    if (v162 > 0x7F)
    {
      __dst[2] = v162 | 0x80;
      unint64_t v163 = v162 >> 7;
      __dst[3] = v162 >> 7;
      __dst += 4;
      if (v162 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unint64_t v164 = v163 >> 14;
          v163 >>= 7;
          *__dst++ = v163;
        }
        while (v164);
      }
    }
    else
    {
      __dst += 3;
    }
  }
  uint64_t v165 = *(unsigned int *)(a1 + 200);
  if ((int)v165 >= 1)
  {
    for (iuint64_t i = 0; ii != v165; ++ii)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      unint64_t v167 = *(int *)(*(void *)(a1 + 208) + 4 * ii);
      *(_WORD *)__dst = 1976;
      __dst[2] = v167;
      if (v167 > 0x7F)
      {
        __dst[2] = v167 | 0x80;
        unint64_t v168 = v167 >> 7;
        __dst[3] = v167 >> 7;
        __dst += 4;
        if (v167 >= 0x4000)
        {
          do
          {
            *(__dst - 1) |= 0x80u;
            unint64_t v169 = v168 >> 14;
            v168 >>= 7;
            *__dst++ = v168;
          }
          while (v169);
        }
      }
      else
      {
        __dst += 3;
      }
    }
  }
  if ((*(unsigned char *)(a1 + 18) & 0x40) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    uint64_t v170 = *(void *)(a1 + 392);
    *(_WORD *)__dst = 1986;
    unsigned int v171 = *(_DWORD *)(v170 + 44);
    __dst[2] = v171;
    if (v171 > 0x7F) {
      uint64_t v172 = sub_188A9CC(v171, __dst + 2);
    }
    else {
      uint64_t v172 = __dst + 3;
    }
    __dst = sub_15B0C0C(v170, v172, a3);
  }
  if ((*(unsigned char *)(a1 + 24) & 2) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    char v173 = *(unsigned char *)(a1 + 521);
    *(_WORD *)__dst = 1992;
    __dst[2] = v173;
    __dst += 3;
  }
  if ((*(unsigned char *)(a1 + 18) & 0x80) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    uint64_t v174 = *(void *)(a1 + 400);
    *(_WORD *)__dst = 2002;
    unsigned int v175 = *(_DWORD *)(v174 + 64);
    __dst[2] = v175;
    if (v175 > 0x7F) {
      uint64_t v176 = sub_188A9CC(v175, __dst + 2);
    }
    else {
      uint64_t v176 = __dst + 3;
    }
    __dst = sub_14778CC(v174, v176, a3);
  }
  int v177 = *(_DWORD *)(a1 + 24);
  if ((v177 & 8) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unint64_t v178 = *(int *)(a1 + 524);
    *(_WORD *)__dst = 2008;
    __dst[2] = v178;
    if (v178 > 0x7F)
    {
      __dst[2] = v178 | 0x80;
      unint64_t v179 = v178 >> 7;
      __dst[3] = v178 >> 7;
      __dst += 4;
      if (v178 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unint64_t v180 = v179 >> 14;
          v179 >>= 7;
          *__dst++ = v179;
        }
        while (v180);
      }
    }
    else
    {
      __dst += 3;
    }
  }
  if ((v177 & 4) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    char v181 = *(unsigned char *)(a1 + 522);
    *(_WORD *)__dst = 2016;
    __dst[2] = v181;
    __dst += 3;
  }
  int v182 = *(_DWORD *)(a1 + 16);
  if ((v182 & 0x100) != 0) {
    __dst = sub_117A0AC(a3, 125, (const void **)(*(void *)(a1 + 280) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v182 & 0x200) != 0) {
    __dst = sub_117A0AC(a3, 126, (const void **)(*(void *)(a1 + 288) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  uint64_t v183 = *(void *)(a1 + 8);
  if ((v183 & 1) == 0) {
    return __dst;
  }
  unint64_t v185 = v183 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v185 + 31) < 0)
  {
    uint64_t v186 = *(void **)(v185 + 8);
    uint64_t v187 = *(void *)(v185 + 16);
  }
  else
  {
    uint64_t v186 = (void *)(v185 + 8);
    LODWORD(v187) = *(unsigned __int8 *)(v185 + 31);
  }
  if ((uint64_t)(*a3 - (void)__dst) >= (int)v187)
  {
    uint64_t v188 = (int)v187;
    memcpy(__dst, v186, (int)v187);
    __dst += v188;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v186, v187, __dst);
}

uint64_t sub_1468738(uint64_t a1)
{
  uint64_t v2 = sub_188D5A8((unsigned int *)(a1 + 32));
  uint64_t v3 = *(unsigned int *)(a1 + 32);
  uint64_t v4 = sub_188D5A8((unsigned int *)(a1 + 48));
  uint64_t v5 = *(unsigned int *)(a1 + 64);
  if (v5)
  {
    uint64_t v6 = 0;
    int v7 = 0;
    do
    {
      int v8 = *(_DWORD *)(*(void *)(a1 + 72) + 4 * v7);
      if (v8 < 0) {
        uint64_t v9 = 10;
      }
      else {
        uint64_t v9 = (9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6;
      }
      v6 += v9;
      ++v7;
    }
    while (v5 != v7);
  }
  else
  {
    uint64_t v6 = 0;
  }
  uint64_t v10 = *(unsigned int *)(a1 + 88);
  uint64_t v11 = v2 + v3 + v4 + *(unsigned int *)(a1 + 48) + v5 + v6 + 2 * v10;
  if ((int)v10 >= 1)
  {
    unsigned int v12 = (uint64_t *)(*(void *)(a1 + 96) + 8);
    do
    {
      uint64_t v13 = *v12++;
      uint64_t v14 = *(unsigned __int8 *)(v13 + 23);
      uint64_t v15 = *(void *)(v13 + 8);
      if ((v14 & 0x80u) == 0) {
        uint64_t v15 = v14;
      }
      v11 += v15 + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6);
      --v10;
    }
    while (v10);
  }
  uint64_t v16 = *(unsigned int *)(a1 + 112);
  uint64_t v17 = v11 + 2 * v16;
  if ((int)v16 >= 1)
  {
    unsigned int v18 = (uint64_t *)(*(void *)(a1 + 120) + 8);
    do
    {
      uint64_t v19 = *v18++;
      uint64_t v20 = *(unsigned __int8 *)(v19 + 23);
      uint64_t v21 = *(void *)(v19 + 8);
      if ((v20 & 0x80u) == 0) {
        uint64_t v21 = v20;
      }
      v17 += v21 + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6);
      --v16;
    }
    while (v16);
  }
  uint64_t v22 = *(unsigned int *)(a1 + 136);
  uint64_t v23 = v17 + 2 * v22;
  if ((int)v22 >= 1)
  {
    unsigned int v24 = (uint64_t *)(*(void *)(a1 + 144) + 8);
    do
    {
      uint64_t v25 = *v24++;
      uint64_t v26 = *(unsigned __int8 *)(v25 + 23);
      uint64_t v27 = *(void *)(v25 + 8);
      if ((v26 & 0x80u) == 0) {
        uint64_t v27 = v26;
      }
      v23 += v27 + ((9 * (__clz(v27 | 1) ^ 0x1F) + 73) >> 6);
      --v22;
    }
    while (v22);
  }
  uint64_t v28 = *(int *)(a1 + 160);
  uint64_t v29 = v23 + 2 * v28;
  uint64_t v30 = *(void *)(a1 + 168);
  if (v30) {
    char v31 = (uint64_t *)(v30 + 8);
  }
  else {
    char v31 = 0;
  }
  if (v28)
  {
    uint64_t v32 = 8 * v28;
    do
    {
      uint64_t v33 = *v31++;
      uint64_t v34 = sub_14622F8(v33);
      v29 += v34 + ((9 * (__clz(v34 | 1) ^ 0x1F) + 73) >> 6);
      v32 -= 8;
    }
    while (v32);
  }
  uint64_t v35 = *(int *)(a1 + 184);
  uint64_t v36 = v29 + 2 * v35;
  uint64_t v37 = *(void *)(a1 + 192);
  if (v37) {
    unint64_t v38 = (uint64_t *)(v37 + 8);
  }
  else {
    unint64_t v38 = 0;
  }
  if (v35)
  {
    uint64_t v39 = 8 * v35;
    do
    {
      uint64_t v40 = *v38++;
      uint64_t v41 = sub_15BAE94(v40);
      v36 += v41 + ((9 * (__clz(v41 | 1) ^ 0x1F) + 73) >> 6);
      v39 -= 8;
    }
    while (v39);
  }
  uint64_t v42 = *(unsigned int *)(a1 + 200);
  if (v42)
  {
    int v43 = 0;
    uint64_t v44 = 0;
    do
    {
      int v45 = *(_DWORD *)(*(void *)(a1 + 208) + 4 * v43);
      if (v45 < 0) {
        uint64_t v46 = 10;
      }
      else {
        uint64_t v46 = (9 * (__clz(v45 | 1) ^ 0x1F) + 73) >> 6;
      }
      v44 += v46;
      ++v43;
    }
    while (v42 != v43);
  }
  else
  {
    uint64_t v44 = 0;
  }
  uint64_t v47 = v36 + 2 * v42 + v44;
  int v48 = *(_DWORD *)(a1 + 16);
  if (!(_BYTE)v48) {
    goto LABEL_56;
  }
  if (v48)
  {
    unint64_t v54 = *(void *)(a1 + 216) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v55 = *(unsigned __int8 *)(v54 + 23);
    uint64_t v56 = *(void *)(v54 + 8);
    if ((v55 & 0x80u) == 0) {
      uint64_t v56 = v55;
    }
    v47 += v56 + ((9 * (__clz(v56 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v48 & 2) == 0)
    {
LABEL_47:
      if ((v48 & 4) == 0) {
        goto LABEL_48;
      }
      goto LABEL_87;
    }
  }
  else if ((v48 & 2) == 0)
  {
    goto LABEL_47;
  }
  unint64_t v57 = *(void *)(a1 + 224) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v58 = *(unsigned __int8 *)(v57 + 23);
  uint64_t v59 = *(void *)(v57 + 8);
  if ((v58 & 0x80u) == 0) {
    uint64_t v59 = v58;
  }
  v47 += v59 + ((9 * (__clz(v59 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v48 & 4) == 0)
  {
LABEL_48:
    if ((v48 & 8) == 0) {
      goto LABEL_49;
    }
    goto LABEL_90;
  }
LABEL_87:
  unint64_t v60 = *(void *)(a1 + 232) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v61 = *(unsigned __int8 *)(v60 + 23);
  uint64_t v62 = *(void *)(v60 + 8);
  if ((v61 & 0x80u) == 0) {
    uint64_t v62 = v61;
  }
  v47 += v62 + ((9 * (__clz(v62 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v48 & 8) == 0)
  {
LABEL_49:
    if ((v48 & 0x10) == 0) {
      goto LABEL_50;
    }
    goto LABEL_93;
  }
LABEL_90:
  unint64_t v63 = *(void *)(a1 + 240) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v64 = *(unsigned __int8 *)(v63 + 23);
  uint64_t v65 = *(void *)(v63 + 8);
  if ((v64 & 0x80u) == 0) {
    uint64_t v65 = v64;
  }
  v47 += v65 + ((9 * (__clz(v65 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v48 & 0x10) == 0)
  {
LABEL_50:
    if ((v48 & 0x20) == 0) {
      goto LABEL_51;
    }
LABEL_96:
    unint64_t v69 = *(void *)(a1 + 256) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v70 = *(unsigned __int8 *)(v69 + 23);
    uint64_t v71 = *(void *)(v69 + 8);
    if ((v70 & 0x80u) == 0) {
      uint64_t v71 = v70;
    }
    v47 += v71 + ((9 * (__clz(v71 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v48 & 0x40) == 0)
    {
LABEL_52:
      if ((v48 & 0x80) == 0) {
        goto LABEL_56;
      }
      goto LABEL_53;
    }
    goto LABEL_99;
  }
LABEL_93:
  unint64_t v66 = *(void *)(a1 + 248) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v67 = *(unsigned __int8 *)(v66 + 23);
  uint64_t v68 = *(void *)(v66 + 8);
  if ((v67 & 0x80u) == 0) {
    uint64_t v68 = v67;
  }
  v47 += v68 + ((9 * (__clz(v68 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v48 & 0x20) != 0) {
    goto LABEL_96;
  }
LABEL_51:
  if ((v48 & 0x40) == 0) {
    goto LABEL_52;
  }
LABEL_99:
  unint64_t v72 = *(void *)(a1 + 264) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v73 = *(unsigned __int8 *)(v72 + 23);
  uint64_t v74 = *(void *)(v72 + 8);
  if ((v73 & 0x80u) == 0) {
    uint64_t v74 = v73;
  }
  v47 += v74 + ((9 * (__clz(v74 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v48 & 0x80) != 0)
  {
LABEL_53:
    unint64_t v49 = *(void *)(a1 + 272) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v50 = *(unsigned __int8 *)(v49 + 23);
    uint64_t v51 = *(void *)(v49 + 8);
    if ((v50 & 0x80u) == 0) {
      uint64_t v51 = v50;
    }
    v47 += v51 + ((9 * (__clz(v51 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
LABEL_56:
  if ((v48 & 0xFF00) == 0) {
    goto LABEL_66;
  }
  if ((v48 & 0x100) != 0)
  {
    unint64_t v75 = *(void *)(a1 + 280) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v76 = *(unsigned __int8 *)(v75 + 23);
    uint64_t v77 = *(void *)(v75 + 8);
    if ((v76 & 0x80u) == 0) {
      uint64_t v77 = v76;
    }
    v47 += v77 + ((9 * (__clz(v77 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v48 & 0x200) == 0)
    {
LABEL_59:
      if ((v48 & 0x400) == 0) {
        goto LABEL_60;
      }
      goto LABEL_109;
    }
  }
  else if ((v48 & 0x200) == 0)
  {
    goto LABEL_59;
  }
  unint64_t v78 = *(void *)(a1 + 288) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v79 = *(unsigned __int8 *)(v78 + 23);
  uint64_t v80 = *(void *)(v78 + 8);
  if ((v79 & 0x80u) == 0) {
    uint64_t v80 = v79;
  }
  v47 += v80 + ((9 * (__clz(v80 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v48 & 0x400) == 0)
  {
LABEL_60:
    if ((v48 & 0x800) == 0) {
      goto LABEL_61;
    }
    goto LABEL_110;
  }
LABEL_109:
  uint64_t v81 = sub_15B956C(*(void *)(a1 + 296));
  v47 += v81 + ((9 * (__clz(v81 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v48 & 0x800) == 0)
  {
LABEL_61:
    if ((v48 & 0x1000) == 0) {
      goto LABEL_62;
    }
    goto LABEL_111;
  }
LABEL_110:
  uint64_t v82 = sub_15B4924(*(void *)(a1 + 304));
  v47 += v82 + ((9 * (__clz(v82 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v48 & 0x1000) == 0)
  {
LABEL_62:
    if ((v48 & 0x2000) == 0) {
      goto LABEL_63;
    }
    goto LABEL_112;
  }
LABEL_111:
  uint64_t v83 = sub_15B1D1C(*(void *)(a1 + 312));
  v47 += v83 + ((9 * (__clz(v83 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v48 & 0x2000) == 0)
  {
LABEL_63:
    if ((v48 & 0x4000) == 0) {
      goto LABEL_64;
    }
    goto LABEL_113;
  }
LABEL_112:
  unint64_t v84 = sub_15BA324(*(void *)(a1 + 320));
  v47 += v84 + ((9 * (__clz(v84 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v48 & 0x4000) == 0)
  {
LABEL_64:
    if ((v48 & 0x8000) == 0) {
      goto LABEL_66;
    }
    goto LABEL_65;
  }
LABEL_113:
  uint64_t v85 = sub_1461654(*(void *)(a1 + 328));
  v47 += v85 + ((9 * (__clz(v85 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v48 & 0x8000) != 0)
  {
LABEL_65:
    uint64_t v52 = sub_15B0D90(*(void *)(a1 + 336));
    v47 += v52 + ((9 * (__clz(v52 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
LABEL_66:
  if ((v48 & 0xFF0000) == 0) {
    goto LABEL_76;
  }
  if ((v48 & 0x10000) != 0)
  {
    uint64_t v86 = sub_145DF38(*(void *)(a1 + 344));
    v47 += v86 + ((9 * (__clz(v86 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v48 & 0x20000) == 0)
    {
LABEL_69:
      if ((v48 & 0x40000) == 0) {
        goto LABEL_70;
      }
      goto LABEL_117;
    }
  }
  else if ((v48 & 0x20000) == 0)
  {
    goto LABEL_69;
  }
  uint64_t v87 = sub_145F378(*(void *)(a1 + 352));
  v47 += v87 + ((9 * (__clz(v87 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v48 & 0x40000) == 0)
  {
LABEL_70:
    if ((v48 & 0x80000) == 0) {
      goto LABEL_71;
    }
    goto LABEL_118;
  }
LABEL_117:
  uint64_t v88 = sub_14622F8(*(void *)(a1 + 360));
  v47 += v88 + ((9 * (__clz(v88 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v48 & 0x80000) == 0)
  {
LABEL_71:
    if ((v48 & 0x100000) == 0) {
      goto LABEL_72;
    }
    goto LABEL_119;
  }
LABEL_118:
  uint64_t v89 = sub_15B956C(*(void *)(a1 + 368));
  v47 += v89 + ((9 * (__clz(v89 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v48 & 0x100000) == 0)
  {
LABEL_72:
    if ((v48 & 0x200000) == 0) {
      goto LABEL_73;
    }
    goto LABEL_120;
  }
LABEL_119:
  uint64_t v90 = sub_1462D98(*(void *)(a1 + 376));
  v47 += v90 + ((9 * (__clz(v90 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v48 & 0x200000) == 0)
  {
LABEL_73:
    if ((v48 & 0x400000) == 0) {
      goto LABEL_74;
    }
    goto LABEL_121;
  }
LABEL_120:
  uint64_t v91 = sub_15B0D90(*(void *)(a1 + 384));
  v47 += v91 + ((9 * (__clz(v91 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v48 & 0x400000) == 0)
  {
LABEL_74:
    if ((v48 & 0x800000) == 0) {
      goto LABEL_76;
    }
    goto LABEL_75;
  }
LABEL_121:
  uint64_t v92 = sub_15B0D90(*(void *)(a1 + 392));
  v47 += v92 + ((9 * (__clz(v92 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v48 & 0x800000) != 0)
  {
LABEL_75:
    uint64_t v53 = sub_1477ADC(*(void *)(a1 + 400));
    v47 += v53 + ((9 * (__clz(v53 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
LABEL_76:
  if (!HIBYTE(v48)) {
    goto LABEL_146;
  }
  if ((v48 & 0x1000000) == 0)
  {
    if ((v48 & 0x2000000) == 0) {
      goto LABEL_79;
    }
LABEL_127:
    int v95 = *(_DWORD *)(a1 + 412);
    if (v95 < 0) {
      uint64_t v96 = 10;
    }
    else {
      uint64_t v96 = (9 * (__clz(v95 | 1) ^ 0x1F) + 73) >> 6;
    }
    v47 += v96 + 1;
    if ((v48 & 0x4000000) == 0) {
      goto LABEL_135;
    }
    goto LABEL_131;
  }
  int v93 = *(_DWORD *)(a1 + 408);
  if (v93 < 0) {
    uint64_t v94 = 10;
  }
  else {
    uint64_t v94 = (9 * (__clz(v93 | 1) ^ 0x1F) + 73) >> 6;
  }
  v47 += v94 + 1;
  if ((v48 & 0x2000000) != 0) {
    goto LABEL_127;
  }
LABEL_79:
  if ((v48 & 0x4000000) != 0)
  {
LABEL_131:
    int v97 = *(_DWORD *)(a1 + 416);
    if (v97 < 0) {
      uint64_t v98 = 10;
    }
    else {
      uint64_t v98 = (9 * (__clz(v97 | 1) ^ 0x1F) + 73) >> 6;
    }
    v47 += v98 + 1;
  }
LABEL_135:
  uint64_t v99 = v47 + 2;
  if ((v48 & 0x8000000) == 0) {
    uint64_t v99 = v47;
  }
  if ((v48 & 0x10000000) != 0) {
    v99 += 2;
  }
  if ((v48 & 0x20000000) != 0) {
    v99 += 2;
  }
  if ((v48 & 0x40000000) != 0) {
    v99 += 3;
  }
  if (v48 >= 0) {
    uint64_t v47 = v99;
  }
  else {
    uint64_t v47 = v99 + 10;
  }
LABEL_146:
  unsigned int v100 = *(_DWORD *)(a1 + 20);
  if ((_BYTE)v100)
  {
    if (v100)
    {
      int v101 = *(_DWORD *)(a1 + 432);
      if (v101 < 0) {
        uint64_t v102 = 10;
      }
      else {
        uint64_t v102 = (9 * (__clz(v101 | 1) ^ 0x1F) + 73) >> 6;
      }
      v47 += v102 + 2;
    }
    if ((v100 & 2) != 0)
    {
      int v103 = *(_DWORD *)(a1 + 436);
      if (v103 < 0) {
        uint64_t v104 = 10;
      }
      else {
        uint64_t v104 = (9 * (__clz(v103 | 1) ^ 0x1F) + 73) >> 6;
      }
      v47 += v104 + 2;
    }
    uint64_t v105 = v47 + 3;
    if ((v100 & 4) == 0) {
      uint64_t v105 = v47;
    }
    if ((v100 & 8) != 0) {
      v105 += 3;
    }
    if ((v100 & 0x10) != 0) {
      v105 += 3;
    }
    if ((v100 & 0x20) != 0) {
      v105 += 3;
    }
    if ((v100 & 0x40) != 0)
    {
      int v106 = *(_DWORD *)(a1 + 444);
      uint64_t v107 = (9 * (__clz(v106 | 1) ^ 0x1F) + 73) >> 6;
      if (v106 >= 0) {
        uint64_t v108 = v107;
      }
      else {
        uint64_t v108 = 10;
      }
      v105 += v108 + 2;
    }
    if ((v100 & 0x80) != 0) {
      uint64_t v47 = v105 + 10;
    }
    else {
      uint64_t v47 = v105;
    }
  }
  if ((v100 & 0xFF00) != 0)
  {
    uint64_t v109 = v47 + 10;
    if ((v100 & 0x100) == 0) {
      uint64_t v109 = v47;
    }
    if ((v100 & 0x200) != 0) {
      v109 += 10;
    }
    if ((v100 & 0x400) != 0) {
      v109 += 3;
    }
    if ((v100 & 0x800) != 0) {
      v109 += 3;
    }
    if ((v100 & 0x1000) != 0) {
      v109 += 3;
    }
    if ((v100 & 0x2000) != 0) {
      uint64_t v47 = v109 + 3;
    }
    else {
      uint64_t v47 = v109;
    }
    if ((v100 & 0x4000) != 0)
    {
      int v110 = *(_DWORD *)(a1 + 476);
      uint64_t v111 = (9 * (__clz(v110 | 1) ^ 0x1F) + 73) >> 6;
      if (v110 >= 0) {
        uint64_t v112 = v111;
      }
      else {
        uint64_t v112 = 10;
      }
      v47 += v112 + 2;
    }
    if ((v100 & 0x8000) != 0)
    {
      int v113 = *(_DWORD *)(a1 + 480);
      uint64_t v114 = ((9 * (__clz(v113 | 1) ^ 0x1F) + 73) >> 6) + 2;
      if (v113 >= 0) {
        uint64_t v115 = v114;
      }
      else {
        uint64_t v115 = 12;
      }
      v47 += v115;
    }
  }
  if ((v100 & 0xFF0000) != 0)
  {
    uint64_t v116 = v47 + 3;
    if ((v100 & 0x10000) == 0) {
      uint64_t v116 = v47;
    }
    if ((v100 & 0x20000) != 0) {
      v116 += 3;
    }
    if ((v100 & 0x40000) != 0) {
      v116 += 3;
    }
    if ((v100 & 0x80000) != 0) {
      v116 += 3;
    }
    if ((v100 & 0x100000) != 0) {
      v116 += ((9 * (__clz(*(void *)(a1 + 488) | 1) ^ 0x3F) + 73) >> 6) + 2;
    }
    if ((v100 & 0x200000) != 0) {
      v116 += 3;
    }
    if ((v100 & 0x400000) != 0) {
      v116 += 3;
    }
    if ((v100 & 0x800000) != 0) {
      uint64_t v47 = v116 + 3;
    }
    else {
      uint64_t v47 = v116;
    }
  }
  if (HIBYTE(v100))
  {
    uint64_t v117 = v47 + 3;
    if ((v100 & 0x1000000) == 0) {
      uint64_t v117 = v47;
    }
    if ((v100 & 0x2000000) != 0) {
      v117 += 3;
    }
    if ((v100 & 0x4000000) != 0) {
      v117 += 3;
    }
    if ((v100 & 0x8000000) != 0) {
      v117 += 3;
    }
    if ((v100 & 0x10000000) != 0) {
      uint64_t v47 = v117 + 3;
    }
    else {
      uint64_t v47 = v117;
    }
    if ((v100 & 0x20000000) != 0)
    {
      v47 += ((9 * (__clz(*(void *)(a1 + 504) | 1) ^ 0x3F) + 73) >> 6) + 2;
      if ((v100 & 0x40000000) == 0)
      {
LABEL_229:
        if ((v100 & 0x80000000) == 0) {
          goto LABEL_230;
        }
        goto LABEL_255;
      }
    }
    else if ((v100 & 0x40000000) == 0)
    {
      goto LABEL_229;
    }
    int v128 = *(_DWORD *)(a1 + 512);
    uint64_t v129 = ((9 * (__clz(v128 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if (v128 >= 0) {
      uint64_t v130 = v129;
    }
    else {
      uint64_t v130 = 12;
    }
    v47 += v130;
    if ((v100 & 0x80000000) != 0)
    {
LABEL_255:
      int v131 = *(_DWORD *)(a1 + 516);
      uint64_t v132 = ((9 * (__clz(v131 | 1) ^ 0x1F) + 73) >> 6) + 2;
      if (v131 >= 0) {
        uint64_t v133 = v132;
      }
      else {
        uint64_t v133 = 12;
      }
      v47 += v133;
    }
  }
LABEL_230:
  int v118 = *(_DWORD *)(a1 + 24);
  if ((v118 & 0x1F) != 0)
  {
    uint64_t v119 = v47 + 3;
    if ((v118 & 1) == 0) {
      uint64_t v119 = v47;
    }
    if ((v118 & 2) != 0) {
      v119 += 3;
    }
    if ((v118 & 4) != 0) {
      uint64_t v47 = v119 + 3;
    }
    else {
      uint64_t v47 = v119;
    }
    if ((v118 & 8) != 0)
    {
      int v120 = *(_DWORD *)(a1 + 524);
      uint64_t v121 = ((9 * (__clz(v120 | 1) ^ 0x1F) + 73) >> 6) + 2;
      if (v120 >= 0) {
        uint64_t v122 = v121;
      }
      else {
        uint64_t v122 = 12;
      }
      v47 += v122;
    }
    if ((v118 & 0x10) != 0)
    {
      int v123 = *(_DWORD *)(a1 + 528);
      uint64_t v124 = ((9 * (__clz(v123 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if (v123 >= 0) {
        uint64_t v125 = v124;
      }
      else {
        uint64_t v125 = 11;
      }
      v47 += v125;
    }
  }
  uint64_t v126 = *(void *)(a1 + 8);
  if (v126)
  {
    unint64_t v134 = v126 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v134 + 31) < 0) {
      uint64_t v135 = *(void *)(v134 + 16);
    }
    else {
      uint64_t v135 = *(unsigned __int8 *)(v134 + 31);
    }
    v47 += v135;
  }
  *(_DWORD *)(a1 + 28) = v47;
  return v47;
}

void sub_146945C(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (_DWORD *)(a1 + 32);
    uint64_t v6 = *(int *)(a1 + 32);
    sub_188CA54((unsigned int *)(a1 + 32), v6 + v4);
    uint64_t v7 = *(void *)(a1 + 40);
    *v5 += *(_DWORD *)(a2 + 32);
    memcpy((void *)(v7 + 8 * v6), *(const void **)(a2 + 40), 8 * *(int *)(a2 + 32));
  }
  int v8 = *(_DWORD *)(a2 + 48);
  if (v8)
  {
    uint64_t v9 = *(int *)(a1 + 48);
    sub_188CA54((unsigned int *)(a1 + 48), v9 + v8);
    uint64_t v10 = *(void *)(a1 + 56);
    *(_DWORD *)(a1 + 48) += *(_DWORD *)(a2 + 48);
    memcpy((void *)(v10 + 8 * v9), *(const void **)(a2 + 56), 8 * *(int *)(a2 + 48));
  }
  int v11 = *(_DWORD *)(a2 + 64);
  if (v11)
  {
    uint64_t v12 = *(int *)(a1 + 64);
    sub_188C80C((unsigned int *)(a1 + 64), v12 + v11);
    uint64_t v13 = *(void *)(a1 + 72);
    *(_DWORD *)(a1 + 64) += *(_DWORD *)(a2 + 64);
    memcpy((void *)(v13 + 4 * v12), *(const void **)(a2 + 72), 4 * *(int *)(a2 + 64));
  }
  int v14 = *(_DWORD *)(a2 + 88);
  if (v14)
  {
    uint64_t v15 = (const std::string **)(*(void *)(a2 + 96) + 8);
    uint64_t v16 = (std::string **)sub_188CCE4(a1 + 80, *(_DWORD *)(a2 + 88));
    sub_188FB98(a1 + 80, v16, v15, v14, **(_DWORD **)(a1 + 96) - *(_DWORD *)(a1 + 88));
    int v17 = *(_DWORD *)(a1 + 88) + v14;
    *(_DWORD *)(a1 + 88) = v17;
    unsigned int v18 = *(int **)(a1 + 96);
    if (*v18 < v17) {
      int *v18 = v17;
    }
  }
  int v19 = *(_DWORD *)(a2 + 112);
  if (v19)
  {
    uint64_t v20 = (const std::string **)(*(void *)(a2 + 120) + 8);
    uint64_t v21 = (std::string **)sub_188CCE4(a1 + 104, *(_DWORD *)(a2 + 112));
    sub_188FB98(a1 + 104, v21, v20, v19, **(_DWORD **)(a1 + 120) - *(_DWORD *)(a1 + 112));
    int v22 = *(_DWORD *)(a1 + 112) + v19;
    *(_DWORD *)(a1 + 112) = v22;
    uint64_t v23 = *(int **)(a1 + 120);
    if (*v23 < v22) {
      int *v23 = v22;
    }
  }
  int v24 = *(_DWORD *)(a2 + 136);
  if (v24)
  {
    uint64_t v25 = (const std::string **)(*(void *)(a2 + 144) + 8);
    uint64_t v26 = (std::string **)sub_188CCE4(a1 + 128, *(_DWORD *)(a2 + 136));
    sub_188FB98(a1 + 128, v26, v25, v24, **(_DWORD **)(a1 + 144) - *(_DWORD *)(a1 + 136));
    int v27 = *(_DWORD *)(a1 + 136) + v24;
    *(_DWORD *)(a1 + 136) = v27;
    uint64_t v28 = *(int **)(a1 + 144);
    if (*v28 < v27) {
      *uint64_t v28 = v27;
    }
  }
  int v29 = *(_DWORD *)(a2 + 160);
  if (v29)
  {
    uint64_t v30 = (uint64_t *)(*(void *)(a2 + 168) + 8);
    char v31 = (std::string **)sub_188CCE4(a1 + 152, *(_DWORD *)(a2 + 160));
    sub_1494214((uint64_t *)(a1 + 152), v31, v30, v29, **(_DWORD **)(a1 + 168) - *(_DWORD *)(a1 + 160));
    int v32 = *(_DWORD *)(a1 + 160) + v29;
    *(_DWORD *)(a1 + 160) = v32;
    uint64_t v33 = *(int **)(a1 + 168);
    if (*v33 < v32) {
      *uint64_t v33 = v32;
    }
  }
  int v34 = *(_DWORD *)(a2 + 184);
  if (v34)
  {
    uint64_t v35 = (uint64_t *)(*(void *)(a2 + 192) + 8);
    uint64_t v36 = (std::string **)sub_188CCE4(a1 + 176, *(_DWORD *)(a2 + 184));
    sub_11DB348((uint64_t *)(a1 + 176), v36, v35, v34, **(_DWORD **)(a1 + 192) - *(_DWORD *)(a1 + 184));
    int v37 = *(_DWORD *)(a1 + 184) + v34;
    *(_DWORD *)(a1 + 184) = v37;
    unint64_t v38 = *(int **)(a1 + 192);
    if (*v38 < v37) {
      int *v38 = v37;
    }
  }
  int v39 = *(_DWORD *)(a2 + 200);
  if (v39)
  {
    uint64_t v40 = *(int *)(a1 + 200);
    sub_188C80C((unsigned int *)(a1 + 200), v40 + v39);
    uint64_t v41 = *(void *)(a1 + 208);
    *(_DWORD *)(a1 + 200) += *(_DWORD *)(a2 + 200);
    memcpy((void *)(v41 + 4 * v40), *(const void **)(a2 + 208), 4 * *(int *)(a2 + 200));
  }
  unsigned int v42 = *(_DWORD *)(a2 + 16);
  if (!(_BYTE)v42) {
    goto LABEL_58;
  }
  if (v42)
  {
    int v43 = (long long *)(*(void *)(a2 + 216) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v44 = *(void *)(a1 + 8);
    int v45 = (uint64_t *)(v44 & 0xFFFFFFFFFFFFFFFCLL);
    if (v44) {
      int v45 = (uint64_t *)*v45;
    }
    sub_1881DF4((std::string **)(a1 + 216), v43, v45);
    if ((v42 & 2) == 0)
    {
LABEL_27:
      if ((v42 & 4) == 0) {
        goto LABEL_28;
      }
      goto LABEL_40;
    }
  }
  else if ((v42 & 2) == 0)
  {
    goto LABEL_27;
  }
  uint64_t v46 = (long long *)(*(void *)(a2 + 224) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 16) |= 2u;
  uint64_t v47 = *(void *)(a1 + 8);
  int v48 = (uint64_t *)(v47 & 0xFFFFFFFFFFFFFFFCLL);
  if (v47) {
    int v48 = (uint64_t *)*v48;
  }
  sub_1881DF4((std::string **)(a1 + 224), v46, v48);
  if ((v42 & 4) == 0)
  {
LABEL_28:
    if ((v42 & 8) == 0) {
      goto LABEL_29;
    }
    goto LABEL_43;
  }
LABEL_40:
  unint64_t v49 = (long long *)(*(void *)(a2 + 232) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 16) |= 4u;
  uint64_t v50 = *(void *)(a1 + 8);
  uint64_t v51 = (uint64_t *)(v50 & 0xFFFFFFFFFFFFFFFCLL);
  if (v50) {
    uint64_t v51 = (uint64_t *)*v51;
  }
  sub_1881DF4((std::string **)(a1 + 232), v49, v51);
  if ((v42 & 8) == 0)
  {
LABEL_29:
    if ((v42 & 0x10) == 0) {
      goto LABEL_30;
    }
    goto LABEL_46;
  }
LABEL_43:
  uint64_t v52 = (long long *)(*(void *)(a2 + 240) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 16) |= 8u;
  uint64_t v53 = *(void *)(a1 + 8);
  unint64_t v54 = (uint64_t *)(v53 & 0xFFFFFFFFFFFFFFFCLL);
  if (v53) {
    unint64_t v54 = (uint64_t *)*v54;
  }
  sub_1881DF4((std::string **)(a1 + 240), v52, v54);
  if ((v42 & 0x10) == 0)
  {
LABEL_30:
    if ((v42 & 0x20) == 0) {
      goto LABEL_31;
    }
LABEL_49:
    uint64_t v58 = (long long *)(*(void *)(a2 + 256) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 0x20u;
    uint64_t v59 = *(void *)(a1 + 8);
    unint64_t v60 = (uint64_t *)(v59 & 0xFFFFFFFFFFFFFFFCLL);
    if (v59) {
      unint64_t v60 = (uint64_t *)*v60;
    }
    sub_1881DF4((std::string **)(a1 + 256), v58, v60);
    if ((v42 & 0x40) == 0)
    {
LABEL_32:
      if ((v42 & 0x80) == 0) {
        goto LABEL_58;
      }
      goto LABEL_55;
    }
    goto LABEL_52;
  }
LABEL_46:
  uint64_t v55 = (long long *)(*(void *)(a2 + 248) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 16) |= 0x10u;
  uint64_t v56 = *(void *)(a1 + 8);
  unint64_t v57 = (uint64_t *)(v56 & 0xFFFFFFFFFFFFFFFCLL);
  if (v56) {
    unint64_t v57 = (uint64_t *)*v57;
  }
  sub_1881DF4((std::string **)(a1 + 248), v55, v57);
  if ((v42 & 0x20) != 0) {
    goto LABEL_49;
  }
LABEL_31:
  if ((v42 & 0x40) == 0) {
    goto LABEL_32;
  }
LABEL_52:
  uint64_t v61 = (long long *)(*(void *)(a2 + 264) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 16) |= 0x40u;
  uint64_t v62 = *(void *)(a1 + 8);
  unint64_t v63 = (uint64_t *)(v62 & 0xFFFFFFFFFFFFFFFCLL);
  if (v62) {
    unint64_t v63 = (uint64_t *)*v63;
  }
  sub_1881DF4((std::string **)(a1 + 264), v61, v63);
  if ((v42 & 0x80) != 0)
  {
LABEL_55:
    uint64_t v64 = (long long *)(*(void *)(a2 + 272) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 0x80u;
    uint64_t v65 = *(void *)(a1 + 8);
    unint64_t v66 = (uint64_t *)(v65 & 0xFFFFFFFFFFFFFFFCLL);
    if (v65) {
      unint64_t v66 = (uint64_t *)*v66;
    }
    sub_1881DF4((std::string **)(a1 + 272), v64, v66);
  }
LABEL_58:
  if ((v42 & 0xFF00) == 0) {
    goto LABEL_122;
  }
  if ((v42 & 0x100) != 0)
  {
    uint64_t v67 = (long long *)(*(void *)(a2 + 280) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 0x100u;
    uint64_t v68 = *(void *)(a1 + 8);
    unint64_t v69 = (uint64_t *)(v68 & 0xFFFFFFFFFFFFFFFCLL);
    if (v68) {
      unint64_t v69 = (uint64_t *)*v69;
    }
    sub_1881DF4((std::string **)(a1 + 280), v67, v69);
    if ((v42 & 0x200) == 0)
    {
LABEL_61:
      if ((v42 & 0x400) == 0) {
        goto LABEL_62;
      }
      goto LABEL_74;
    }
  }
  else if ((v42 & 0x200) == 0)
  {
    goto LABEL_61;
  }
  uint64_t v70 = (long long *)(*(void *)(a2 + 288) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 16) |= 0x200u;
  uint64_t v71 = *(void *)(a1 + 8);
  unint64_t v72 = (uint64_t *)(v71 & 0xFFFFFFFFFFFFFFFCLL);
  if (v71) {
    unint64_t v72 = (uint64_t *)*v72;
  }
  sub_1881DF4((std::string **)(a1 + 288), v70, v72);
  if ((v42 & 0x400) == 0)
  {
LABEL_62:
    if ((v42 & 0x800) == 0) {
      goto LABEL_63;
    }
    goto LABEL_82;
  }
LABEL_74:
  *(_DWORD *)(a1 + 16) |= 0x400u;
  uint64_t v73 = *(std::string **)(a1 + 296);
  if (!v73)
  {
    uint64_t v74 = *(void *)(a1 + 8);
    unint64_t v75 = (void *)(v74 & 0xFFFFFFFFFFFFFFFCLL);
    if (v74) {
      unint64_t v75 = (void *)*v75;
    }
    uint64_t v73 = (std::string *)sub_15C1EF4((uint64_t)v75);
    *(void *)(a1 + 296) = v73;
  }
  if (*(void *)(a2 + 296)) {
    uint64_t v76 = *(uint64_t (****)())(a2 + 296);
  }
  else {
    uint64_t v76 = &off_253F4C8;
  }
  sub_15B9698(v73, (uint64_t)v76);
  if ((v42 & 0x800) == 0)
  {
LABEL_63:
    if ((v42 & 0x1000) == 0) {
      goto LABEL_64;
    }
    goto LABEL_90;
  }
LABEL_82:
  *(_DWORD *)(a1 + 16) |= 0x800u;
  uint64_t v77 = *(void *)(a1 + 304);
  if (!v77)
  {
    uint64_t v78 = *(void *)(a1 + 8);
    uint64_t v79 = (void *)(v78 & 0xFFFFFFFFFFFFFFFCLL);
    if (v78) {
      uint64_t v79 = (void *)*v79;
    }
    uint64_t v77 = sub_15C1CB4((uint64_t)v79);
    *(void *)(a1 + 304) = v77;
  }
  if (*(void *)(a2 + 304)) {
    uint64_t v80 = *(uint64_t (****)())(a2 + 304);
  }
  else {
    uint64_t v80 = &off_253F2E8;
  }
  sub_15B04F0(v77, (uint64_t)v80);
  if ((v42 & 0x1000) == 0)
  {
LABEL_64:
    if ((v42 & 0x2000) == 0) {
      goto LABEL_65;
    }
    goto LABEL_98;
  }
LABEL_90:
  *(_DWORD *)(a1 + 16) |= 0x1000u;
  uint64_t v81 = *(void *)(a1 + 312);
  if (!v81)
  {
    uint64_t v82 = *(void *)(a1 + 8);
    uint64_t v83 = (void *)(v82 & 0xFFFFFFFFFFFFFFFCLL);
    if (v82) {
      uint64_t v83 = (void *)*v83;
    }
    uint64_t v81 = sub_15C19EC((uint64_t)v83);
    *(void *)(a1 + 312) = v81;
  }
  if (*(void *)(a2 + 312)) {
    unint64_t v84 = *(uint64_t (****)())(a2 + 312);
  }
  else {
    unint64_t v84 = &off_253F208;
  }
  sub_15B1E3C(v81, (uint64_t)v84);
  if ((v42 & 0x2000) == 0)
  {
LABEL_65:
    if ((v42 & 0x4000) == 0) {
      goto LABEL_66;
    }
    goto LABEL_106;
  }
LABEL_98:
  *(_DWORD *)(a1 + 16) |= 0x2000u;
  uint64_t v85 = *(std::string **)(a1 + 320);
  if (!v85)
  {
    uint64_t v86 = *(void *)(a1 + 8);
    uint64_t v87 = (void *)(v86 & 0xFFFFFFFFFFFFFFFCLL);
    if (v86) {
      uint64_t v87 = (void *)*v87;
    }
    uint64_t v85 = (std::string *)sub_15C2014((uint64_t)v87);
    *(void *)(a1 + 320) = v85;
  }
  if (*(void *)(a2 + 320)) {
    uint64_t v88 = *(uint64_t (****)())(a2 + 320);
  }
  else {
    uint64_t v88 = &off_253F530;
  }
  sub_1113E40(v85, (uint64_t)v88);
  if ((v42 & 0x4000) == 0)
  {
LABEL_66:
    if ((v42 & 0x8000) == 0) {
      goto LABEL_122;
    }
    goto LABEL_114;
  }
LABEL_106:
  *(_DWORD *)(a1 + 16) |= 0x4000u;
  uint64_t v89 = *(std::string **)(a1 + 328);
  if (!v89)
  {
    uint64_t v90 = *(void *)(a1 + 8);
    uint64_t v91 = (void *)(v90 & 0xFFFFFFFFFFFFFFFCLL);
    if (v90) {
      uint64_t v91 = (void *)*v91;
    }
    uint64_t v89 = (std::string *)sub_1478D54((uint64_t)v91);
    *(void *)(a1 + 328) = v89;
  }
  if (*(void *)(a2 + 328)) {
    uint64_t v92 = *(uint64_t (****)())(a2 + 328);
  }
  else {
    uint64_t v92 = &off_2539450;
  }
  sub_14617B0(v89, (uint64_t)v92);
  if ((v42 & 0x8000) != 0)
  {
LABEL_114:
    *(_DWORD *)(a1 + 16) |= 0x8000u;
    uint64_t v93 = *(void *)(a1 + 336);
    if (!v93)
    {
      uint64_t v94 = *(void *)(a1 + 8);
      int v95 = (void *)(v94 & 0xFFFFFFFFFFFFFFFCLL);
      if (v94) {
        int v95 = (void *)*v95;
      }
      uint64_t v93 = sub_15C1918((uint64_t)v95);
      *(void *)(a1 + 336) = v93;
    }
    if (*(void *)(a2 + 336)) {
      uint64_t v96 = *(uint64_t (****)())(a2 + 336);
    }
    else {
      uint64_t v96 = &off_253F1A0;
    }
    sub_15B0E24(v93, (uint64_t)v96);
  }
LABEL_122:
  if ((v42 & 0xFF0000) == 0) {
    goto LABEL_196;
  }
  if ((v42 & 0x10000) != 0)
  {
    *(_DWORD *)(a1 + 16) |= 0x10000u;
    uint64_t v97 = *(void *)(a1 + 344);
    if (!v97)
    {
      uint64_t v98 = *(void *)(a1 + 8);
      uint64_t v99 = (void *)(v98 & 0xFFFFFFFFFFFFFFFCLL);
      if (v98) {
        uint64_t v99 = (void *)*v99;
      }
      sub_1478B2C((uint64_t)v99);
      *(void *)(a1 + 344) = v97;
    }
    if (*(void *)(a2 + 344)) {
      unsigned int v100 = *(uint64_t (****)())(a2 + 344);
    }
    else {
      unsigned int v100 = &off_2539290;
    }
    sub_13E582C(v97, (uint64_t)v100);
    if ((v42 & 0x20000) == 0)
    {
LABEL_125:
      if ((v42 & 0x40000) == 0) {
        goto LABEL_126;
      }
      goto LABEL_148;
    }
  }
  else if ((v42 & 0x20000) == 0)
  {
    goto LABEL_125;
  }
  *(_DWORD *)(a1 + 16) |= 0x20000u;
  uint64_t v101 = *(void *)(a1 + 352);
  if (!v101)
  {
    uint64_t v102 = *(void *)(a1 + 8);
    int v103 = (void *)(v102 & 0xFFFFFFFFFFFFFFFCLL);
    if (v102) {
      int v103 = (void *)*v103;
    }
    uint64_t v101 = sub_1478B8C((uint64_t)v103);
    *(void *)(a1 + 352) = v101;
  }
  if (*(void *)(a2 + 352)) {
    uint64_t v104 = *(uint64_t (****)())(a2 + 352);
  }
  else {
    uint64_t v104 = &off_25393B0;
  }
  sub_145F500(v101, (uint64_t)v104);
  if ((v42 & 0x40000) == 0)
  {
LABEL_126:
    if ((v42 & 0x80000) == 0) {
      goto LABEL_127;
    }
    goto LABEL_156;
  }
LABEL_148:
  *(_DWORD *)(a1 + 16) |= 0x40000u;
  uint64_t v105 = *(std::string **)(a1 + 360);
  if (!v105)
  {
    uint64_t v106 = *(void *)(a1 + 8);
    uint64_t v107 = (void *)(v106 & 0xFFFFFFFFFFFFFFFCLL);
    if (v106) {
      uint64_t v107 = (void *)*v107;
    }
    uint64_t v105 = (std::string *)sub_1478E08((uint64_t)v107);
    *(void *)(a1 + 360) = v105;
  }
  if (*(void *)(a2 + 360)) {
    uint64_t v108 = *(uint64_t (****)())(a2 + 360);
  }
  else {
    uint64_t v108 = &off_25394A0;
  }
  sub_126B6A8(v105, (uint64_t)v108);
  if ((v42 & 0x80000) == 0)
  {
LABEL_127:
    if ((v42 & 0x100000) == 0) {
      goto LABEL_128;
    }
    goto LABEL_164;
  }
LABEL_156:
  *(_DWORD *)(a1 + 16) |= 0x80000u;
  uint64_t v109 = *(std::string **)(a1 + 368);
  if (!v109)
  {
    uint64_t v110 = *(void *)(a1 + 8);
    uint64_t v111 = (void *)(v110 & 0xFFFFFFFFFFFFFFFCLL);
    if (v110) {
      uint64_t v111 = (void *)*v111;
    }
    uint64_t v109 = (std::string *)sub_15C1EF4((uint64_t)v111);
    *(void *)(a1 + 368) = v109;
  }
  if (*(void *)(a2 + 368)) {
    uint64_t v112 = *(uint64_t (****)())(a2 + 368);
  }
  else {
    uint64_t v112 = &off_253F4C8;
  }
  sub_15B9698(v109, (uint64_t)v112);
  if ((v42 & 0x100000) == 0)
  {
LABEL_128:
    if ((v42 & 0x200000) == 0) {
      goto LABEL_129;
    }
    goto LABEL_172;
  }
LABEL_164:
  *(_DWORD *)(a1 + 16) |= 0x100000u;
  int v113 = *(std::string **)(a1 + 376);
  if (!v113)
  {
    uint64_t v114 = *(void *)(a1 + 8);
    uint64_t v115 = (void *)(v114 & 0xFFFFFFFFFFFFFFFCLL);
    if (v114) {
      uint64_t v115 = (void *)*v115;
    }
    int v113 = (std::string *)sub_1478EAC((uint64_t)v115);
    *(void *)(a1 + 376) = v113;
  }
  if (*(void *)(a2 + 376)) {
    uint64_t v116 = *(uint64_t (****)())(a2 + 376);
  }
  else {
    uint64_t v116 = &off_25394E0;
  }
  sub_1462F14(v113, (uint64_t)v116);
  if ((v42 & 0x200000) == 0)
  {
LABEL_129:
    if ((v42 & 0x400000) == 0) {
      goto LABEL_130;
    }
    goto LABEL_180;
  }
LABEL_172:
  *(_DWORD *)(a1 + 16) |= 0x200000u;
  uint64_t v117 = *(void *)(a1 + 384);
  if (!v117)
  {
    uint64_t v118 = *(void *)(a1 + 8);
    uint64_t v119 = (void *)(v118 & 0xFFFFFFFFFFFFFFFCLL);
    if (v118) {
      uint64_t v119 = (void *)*v119;
    }
    uint64_t v117 = sub_15C1918((uint64_t)v119);
    *(void *)(a1 + 384) = v117;
  }
  if (*(void *)(a2 + 384)) {
    int v120 = *(uint64_t (****)())(a2 + 384);
  }
  else {
    int v120 = &off_253F1A0;
  }
  sub_15B0E24(v117, (uint64_t)v120);
  if ((v42 & 0x400000) == 0)
  {
LABEL_130:
    if ((v42 & 0x800000) == 0) {
      goto LABEL_196;
    }
    goto LABEL_188;
  }
LABEL_180:
  *(_DWORD *)(a1 + 16) |= 0x400000u;
  uint64_t v121 = *(void *)(a1 + 392);
  if (!v121)
  {
    uint64_t v122 = *(void *)(a1 + 8);
    int v123 = (void *)(v122 & 0xFFFFFFFFFFFFFFFCLL);
    if (v122) {
      int v123 = (void *)*v123;
    }
    uint64_t v121 = sub_15C1918((uint64_t)v123);
    *(void *)(a1 + 392) = v121;
  }
  if (*(void *)(a2 + 392)) {
    uint64_t v124 = *(uint64_t (****)())(a2 + 392);
  }
  else {
    uint64_t v124 = &off_253F1A0;
  }
  sub_15B0E24(v121, (uint64_t)v124);
  if ((v42 & 0x800000) != 0)
  {
LABEL_188:
    *(_DWORD *)(a1 + 16) |= 0x800000u;
    uint64_t v125 = *(std::string **)(a1 + 400);
    if (!v125)
    {
      uint64_t v126 = *(void *)(a1 + 8);
      uint64_t v127 = (void *)(v126 & 0xFFFFFFFFFFFFFFFCLL);
      if (v126) {
        uint64_t v127 = (void *)*v127;
      }
      uint64_t v125 = (std::string *)sub_1479978((uint64_t)v127);
      *(void *)(a1 + 400) = v125;
    }
    if (*(void *)(a2 + 400)) {
      int v128 = *(uint64_t (****)())(a2 + 400);
    }
    else {
      int v128 = &off_2539C48;
    }
    sub_1216B14(v125, (uint64_t)v128);
  }
LABEL_196:
  if (!HIBYTE(v42)) {
    goto LABEL_206;
  }
  if ((v42 & 0x1000000) != 0)
  {
    *(_DWORD *)(a1 + 408) = *(_DWORD *)(a2 + 408);
    if ((v42 & 0x2000000) == 0)
    {
LABEL_199:
      if ((v42 & 0x4000000) == 0) {
        goto LABEL_200;
      }
      goto LABEL_292;
    }
  }
  else if ((v42 & 0x2000000) == 0)
  {
    goto LABEL_199;
  }
  *(_DWORD *)(a1 + 412) = *(_DWORD *)(a2 + 412);
  if ((v42 & 0x4000000) == 0)
  {
LABEL_200:
    if ((v42 & 0x8000000) == 0) {
      goto LABEL_201;
    }
    goto LABEL_293;
  }
LABEL_292:
  *(_DWORD *)(a1 + 416) = *(_DWORD *)(a2 + 416);
  if ((v42 & 0x8000000) == 0)
  {
LABEL_201:
    if ((v42 & 0x10000000) == 0) {
      goto LABEL_202;
    }
    goto LABEL_294;
  }
LABEL_293:
  *(unsigned char *)(a1 + 420) = *(unsigned char *)(a2 + 420);
  if ((v42 & 0x10000000) == 0)
  {
LABEL_202:
    if ((v42 & 0x20000000) == 0) {
      goto LABEL_203;
    }
    goto LABEL_295;
  }
LABEL_294:
  *(unsigned char *)(a1 + 421) = *(unsigned char *)(a2 + 421);
  if ((v42 & 0x20000000) == 0)
  {
LABEL_203:
    if ((v42 & 0x40000000) == 0) {
      goto LABEL_204;
    }
LABEL_296:
    *(unsigned char *)(a1 + 423) = *(unsigned char *)(a2 + 423);
    if ((v42 & 0x80000000) == 0) {
      goto LABEL_205;
    }
LABEL_297:
    *(void *)(a1 + 424) = *(void *)(a2 + 424);
    goto LABEL_205;
  }
LABEL_295:
  *(unsigned char *)(a1 + 422) = *(unsigned char *)(a2 + 422);
  if ((v42 & 0x40000000) != 0) {
    goto LABEL_296;
  }
LABEL_204:
  if ((v42 & 0x80000000) != 0) {
    goto LABEL_297;
  }
LABEL_205:
  *(_DWORD *)(a1 + 16) |= v42;
LABEL_206:
  unsigned int v129 = *(_DWORD *)(a2 + 20);
  if (!(_BYTE)v129) {
    goto LABEL_217;
  }
  if (v129)
  {
    *(_DWORD *)(a1 + 432) = *(_DWORD *)(a2 + 432);
    if ((v129 & 2) == 0)
    {
LABEL_209:
      if ((v129 & 4) == 0) {
        goto LABEL_210;
      }
      goto LABEL_263;
    }
  }
  else if ((v129 & 2) == 0)
  {
    goto LABEL_209;
  }
  *(_DWORD *)(a1 + 436) = *(_DWORD *)(a2 + 436);
  if ((v129 & 4) == 0)
  {
LABEL_210:
    if ((v129 & 8) == 0) {
      goto LABEL_211;
    }
    goto LABEL_264;
  }
LABEL_263:
  *(unsigned char *)(a1 + 440) = *(unsigned char *)(a2 + 440);
  if ((v129 & 8) == 0)
  {
LABEL_211:
    if ((v129 & 0x10) == 0) {
      goto LABEL_212;
    }
    goto LABEL_265;
  }
LABEL_264:
  *(unsigned char *)(a1 + 441) = *(unsigned char *)(a2 + 441);
  if ((v129 & 0x10) == 0)
  {
LABEL_212:
    if ((v129 & 0x20) == 0) {
      goto LABEL_213;
    }
    goto LABEL_266;
  }
LABEL_265:
  *(unsigned char *)(a1 + 442) = *(unsigned char *)(a2 + 442);
  if ((v129 & 0x20) == 0)
  {
LABEL_213:
    if ((v129 & 0x40) == 0) {
      goto LABEL_214;
    }
LABEL_267:
    *(_DWORD *)(a1 + 444) = *(_DWORD *)(a2 + 444);
    if ((v129 & 0x80) == 0) {
      goto LABEL_216;
    }
    goto LABEL_215;
  }
LABEL_266:
  *(unsigned char *)(a1 + 443) = *(unsigned char *)(a2 + 443);
  if ((v129 & 0x40) != 0) {
    goto LABEL_267;
  }
LABEL_214:
  if ((v129 & 0x80) != 0) {
LABEL_215:
  }
    *(void *)(a1 + 448) = *(void *)(a2 + 448);
LABEL_216:
  *(_DWORD *)(a1 + 20) |= v129;
LABEL_217:
  if ((v129 & 0xFF00) == 0) {
    goto LABEL_228;
  }
  if ((v129 & 0x100) != 0)
  {
    *(void *)(a1 + 456) = *(void *)(a2 + 456);
    if ((v129 & 0x200) == 0)
    {
LABEL_220:
      if ((v129 & 0x400) == 0) {
        goto LABEL_221;
      }
      goto LABEL_271;
    }
  }
  else if ((v129 & 0x200) == 0)
  {
    goto LABEL_220;
  }
  *(void *)(a1 + 464) = *(void *)(a2 + 464);
  if ((v129 & 0x400) == 0)
  {
LABEL_221:
    if ((v129 & 0x800) == 0) {
      goto LABEL_222;
    }
    goto LABEL_272;
  }
LABEL_271:
  *(unsigned char *)(a1 + 472) = *(unsigned char *)(a2 + 472);
  if ((v129 & 0x800) == 0)
  {
LABEL_222:
    if ((v129 & 0x1000) == 0) {
      goto LABEL_223;
    }
    goto LABEL_273;
  }
LABEL_272:
  *(unsigned char *)(a1 + 473) = *(unsigned char *)(a2 + 473);
  if ((v129 & 0x1000) == 0)
  {
LABEL_223:
    if ((v129 & 0x2000) == 0) {
      goto LABEL_224;
    }
    goto LABEL_274;
  }
LABEL_273:
  *(unsigned char *)(a1 + 474) = *(unsigned char *)(a2 + 474);
  if ((v129 & 0x2000) == 0)
  {
LABEL_224:
    if ((v129 & 0x4000) == 0) {
      goto LABEL_225;
    }
LABEL_275:
    *(_DWORD *)(a1 + 476) = *(_DWORD *)(a2 + 476);
    if ((v129 & 0x8000) == 0) {
      goto LABEL_227;
    }
    goto LABEL_226;
  }
LABEL_274:
  *(unsigned char *)(a1 + 475) = *(unsigned char *)(a2 + 475);
  if ((v129 & 0x4000) != 0) {
    goto LABEL_275;
  }
LABEL_225:
  if ((v129 & 0x8000) != 0) {
LABEL_226:
  }
    *(_DWORD *)(a1 + 480) = *(_DWORD *)(a2 + 480);
LABEL_227:
  *(_DWORD *)(a1 + 20) |= v129;
LABEL_228:
  if ((v129 & 0xFF0000) == 0) {
    goto LABEL_239;
  }
  if ((v129 & 0x10000) != 0)
  {
    *(unsigned char *)(a1 + 484) = *(unsigned char *)(a2 + 484);
    if ((v129 & 0x20000) == 0)
    {
LABEL_231:
      if ((v129 & 0x40000) == 0) {
        goto LABEL_232;
      }
      goto LABEL_279;
    }
  }
  else if ((v129 & 0x20000) == 0)
  {
    goto LABEL_231;
  }
  *(unsigned char *)(a1 + 485) = *(unsigned char *)(a2 + 485);
  if ((v129 & 0x40000) == 0)
  {
LABEL_232:
    if ((v129 & 0x80000) == 0) {
      goto LABEL_233;
    }
    goto LABEL_280;
  }
LABEL_279:
  *(unsigned char *)(a1 + 486) = *(unsigned char *)(a2 + 486);
  if ((v129 & 0x80000) == 0)
  {
LABEL_233:
    if ((v129 & 0x100000) == 0) {
      goto LABEL_234;
    }
    goto LABEL_281;
  }
LABEL_280:
  *(unsigned char *)(a1 + 487) = *(unsigned char *)(a2 + 487);
  if ((v129 & 0x100000) == 0)
  {
LABEL_234:
    if ((v129 & 0x200000) == 0) {
      goto LABEL_235;
    }
    goto LABEL_282;
  }
LABEL_281:
  *(void *)(a1 + 488) = *(void *)(a2 + 488);
  if ((v129 & 0x200000) == 0)
  {
LABEL_235:
    if ((v129 & 0x400000) == 0) {
      goto LABEL_236;
    }
LABEL_283:
    *(unsigned char *)(a1 + 497) = *(unsigned char *)(a2 + 497);
    if ((v129 & 0x800000) == 0) {
      goto LABEL_238;
    }
    goto LABEL_237;
  }
LABEL_282:
  *(unsigned char *)(a1 + 496) = *(unsigned char *)(a2 + 496);
  if ((v129 & 0x400000) != 0) {
    goto LABEL_283;
  }
LABEL_236:
  if ((v129 & 0x800000) != 0) {
LABEL_237:
  }
    *(unsigned char *)(a1 + 498) = *(unsigned char *)(a2 + 498);
LABEL_238:
  *(_DWORD *)(a1 + 20) |= v129;
LABEL_239:
  if (!HIBYTE(v129)) {
    goto LABEL_249;
  }
  if ((v129 & 0x1000000) != 0)
  {
    *(unsigned char *)(a1 + 499) = *(unsigned char *)(a2 + 499);
    if ((v129 & 0x2000000) == 0)
    {
LABEL_242:
      if ((v129 & 0x4000000) == 0) {
        goto LABEL_243;
      }
      goto LABEL_300;
    }
  }
  else if ((v129 & 0x2000000) == 0)
  {
    goto LABEL_242;
  }
  *(unsigned char *)(a1 + 500) = *(unsigned char *)(a2 + 500);
  if ((v129 & 0x4000000) == 0)
  {
LABEL_243:
    if ((v129 & 0x8000000) == 0) {
      goto LABEL_244;
    }
    goto LABEL_301;
  }
LABEL_300:
  *(unsigned char *)(a1 + 501) = *(unsigned char *)(a2 + 501);
  if ((v129 & 0x8000000) == 0)
  {
LABEL_244:
    if ((v129 & 0x10000000) == 0) {
      goto LABEL_245;
    }
    goto LABEL_302;
  }
LABEL_301:
  *(unsigned char *)(a1 + 502) = *(unsigned char *)(a2 + 502);
  if ((v129 & 0x10000000) == 0)
  {
LABEL_245:
    if ((v129 & 0x20000000) == 0) {
      goto LABEL_246;
    }
    goto LABEL_303;
  }
LABEL_302:
  *(unsigned char *)(a1 + 503) = *(unsigned char *)(a2 + 503);
  if ((v129 & 0x20000000) == 0)
  {
LABEL_246:
    if ((v129 & 0x40000000) == 0) {
      goto LABEL_247;
    }
LABEL_304:
    *(_DWORD *)(a1 + 512) = *(_DWORD *)(a2 + 512);
    if ((v129 & 0x80000000) == 0) {
      goto LABEL_248;
    }
LABEL_305:
    *(_DWORD *)(a1 + 516) = *(_DWORD *)(a2 + 516);
    goto LABEL_248;
  }
LABEL_303:
  *(void *)(a1 + 504) = *(void *)(a2 + 504);
  if ((v129 & 0x40000000) != 0) {
    goto LABEL_304;
  }
LABEL_247:
  if ((v129 & 0x80000000) != 0) {
    goto LABEL_305;
  }
LABEL_248:
  *(_DWORD *)(a1 + 20) |= v129;
LABEL_249:
  int v130 = *(_DWORD *)(a2 + 24);
  if ((v130 & 0x1F) == 0) {
    goto LABEL_257;
  }
  if (v130)
  {
    *(unsigned char *)(a1 + 520) = *(unsigned char *)(a2 + 520);
    if ((v130 & 2) == 0)
    {
LABEL_252:
      if ((v130 & 4) == 0) {
        goto LABEL_253;
      }
      goto LABEL_287;
    }
  }
  else if ((v130 & 2) == 0)
  {
    goto LABEL_252;
  }
  *(unsigned char *)(a1 + 521) = *(unsigned char *)(a2 + 521);
  if ((v130 & 4) == 0)
  {
LABEL_253:
    if ((v130 & 8) == 0) {
      goto LABEL_254;
    }
LABEL_288:
    *(_DWORD *)(a1 + 524) = *(_DWORD *)(a2 + 524);
    if ((v130 & 0x10) == 0) {
      goto LABEL_256;
    }
    goto LABEL_255;
  }
LABEL_287:
  *(unsigned char *)(a1 + 522) = *(unsigned char *)(a2 + 522);
  if ((v130 & 8) != 0) {
    goto LABEL_288;
  }
LABEL_254:
  if ((v130 & 0x10) != 0) {
LABEL_255:
  }
    *(_DWORD *)(a1 + 528) = *(_DWORD *)(a2 + 528);
LABEL_256:
  *(_DWORD *)(a1 + 24) |= v130;
LABEL_257:
  uint64_t v131 = *(void *)(a2 + 8);
  if (v131)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v131 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_146A1C8(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 160);
  while ((int)v2 >= 1)
  {
    uint64_t v3 = *(void *)(*(void *)(a1 + 168) + 8 * v2--);
    if ((~*(_DWORD *)(v3 + 16) & 7) != 0) {
      return 0;
    }
  }
  uint64_t v4 = *(unsigned int *)(a1 + 184);
  while ((int)v4 >= 1)
  {
    uint64_t v5 = v4 - 1;
    char v6 = sub_15BAF9C(*(void *)(*(void *)(a1 + 192) + 8 * v4));
    uint64_t v4 = v5;
    if ((v6 & 1) == 0) {
      return 0;
    }
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 0x400) != 0)
  {
    uint64_t result = sub_15B9824(*(void *)(a1 + 296));
    if (!result) {
      return result;
    }
    int v8 = *(_DWORD *)(a1 + 16);
  }
  if ((v8 & 0x800) != 0)
  {
    uint64_t result = sub_15B06D8(*(void *)(a1 + 304));
    if (!result) {
      return result;
    }
    int v8 = *(_DWORD *)(a1 + 16);
  }
  if ((v8 & 0x1000) != 0)
  {
    uint64_t result = sub_15B1FC0(*(void *)(a1 + 312));
    if (!result) {
      return result;
    }
    int v8 = *(_DWORD *)(a1 + 16);
  }
  if ((v8 & 0x2000) != 0)
  {
    uint64_t result = sub_15BA3C8(*(void *)(a1 + 320));
    if (!result) {
      return result;
    }
    int v8 = *(_DWORD *)(a1 + 16);
  }
  if ((v8 & 0x4000) != 0)
  {
    uint64_t v10 = *(void *)(a1 + 328);
    uint64_t v11 = *(unsigned int *)(v10 + 32);
    uint64_t v12 = *(void *)(v10 + 40);
    while ((int)v11 >= 1)
    {
      uint64_t result = 0;
      uint64_t v13 = *(void *)(v12 + 8 * v11--);
      if ((*(unsigned char *)(v13 + 16) & 1) == 0) {
        return result;
      }
    }
  }
  if ((v8 & 0x8000) != 0)
  {
    uint64_t result = sub_15B0F18(*(void *)(a1 + 336));
    if (!result) {
      return result;
    }
    int v8 = *(_DWORD *)(a1 + 16);
  }
  if ((v8 & 0x10000) != 0)
  {
    uint64_t result = sub_13E62E4(*(void *)(a1 + 344));
    if (!result) {
      return result;
    }
    int v8 = *(_DWORD *)(a1 + 16);
  }
  if ((v8 & 0x20000) != 0)
  {
    uint64_t result = sub_18856CC(*(void *)(a1 + 352) + 16);
    if (!result) {
      return result;
    }
    int v8 = *(_DWORD *)(a1 + 16);
  }
  if ((v8 & 0x40000) != 0 && (~*(_DWORD *)(*(void *)(a1 + 360) + 16) & 7) != 0) {
    return 0;
  }
  if ((v8 & 0x80000) != 0)
  {
    uint64_t result = sub_15B9824(*(void *)(a1 + 368));
    if (!result) {
      return result;
    }
    int v8 = *(_DWORD *)(a1 + 16);
  }
  if ((v8 & 0x100000) == 0) {
    goto LABEL_41;
  }
  uint64_t v9 = *(void *)(a1 + 376);
  if ((*(unsigned char *)(v9 + 16) & 4) == 0) {
    return 0;
  }
  uint64_t result = sub_1463094(v9 + 24);
  if (!result) {
    return result;
  }
  int v8 = *(_DWORD *)(a1 + 16);
LABEL_41:
  if ((v8 & 0x200000) != 0)
  {
    uint64_t result = sub_15B0F18(*(void *)(a1 + 384));
    if (!result) {
      return result;
    }
    int v8 = *(_DWORD *)(a1 + 16);
  }
  if ((v8 & 0x400000) == 0) {
    return 1;
  }
  uint64_t result = sub_15B0F18(*(void *)(a1 + 392));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_146A378@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.PlaceSearchRequest");
}

uint64_t sub_146A388(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_146A428(uint64_t a1)
{
  sub_146A388(a1);

  operator delete();
}

uint64_t sub_146A460(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v1 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v1 + 23) < 0)
    {
      **(unsigned char **)unint64_t v1 = 0;
      *(void *)(v1 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v1 = 0;
      *(unsigned char *)(v1 + 23) = 0;
    }
  }
  char v3 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v3) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_146A4A8(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v19 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v19, a3[11].i32[1])) {
    goto LABEL_30;
  }
  char v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = (char *)(*(void *)v19 + 1);
    unsigned int v8 = **(unsigned char **)v19;
    if ((char)**(unsigned char **)v19 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180(*(uint64_t *)v19, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (char *)(*(void *)v19 + 2);
      }
    }
    *(void *)int v19 = v7;
    if (v8 >> 3 == 2) {
      break;
    }
    if (v8 >> 3 != 1 || v8 != 10) {
      goto LABEL_12;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v15 = *(void *)(a1 + 8);
    uint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
    if (v15) {
      uint64_t v16 = (uint64_t *)*v16;
    }
    int v17 = (std::string *)sub_1880F84((void *)(a1 + 24), v16);
    int v14 = (void *)sub_188C244(v17, *(char **)v19, (uint64_t)a3);
LABEL_24:
    *(void *)int v19 = v14;
    if (!v14) {
      goto LABEL_31;
    }
LABEL_25:
    if (sub_11947B8((uint64_t)a3, (char **)v19, a3[11].i32[1])) {
      goto LABEL_30;
    }
  }
  if (v8 == 17)
  {
    v5 |= 2u;
    *(void *)(a1 + 32) = *(void *)v7;
    *(void *)int v19 = v7 + 8;
    goto LABEL_25;
  }
LABEL_12:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = *(char **)v19;
    }
    int v14 = sub_1885AC0(v8, v13, v7, a3);
    goto LABEL_24;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    goto LABEL_30;
  }
LABEL_31:
  *(void *)int v19 = 0;
LABEL_30:
  *(_DWORD *)(a1 + 16) |= v5;
  return *(void *)v19;
}

char *sub_146A644(uint64_t a1, char *__dst, void *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v7 = *(void *)(a1 + 32);
    char *v4 = 17;
    *(void *)(v4 + 1) = v7;
    v4 += 9;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if ((v8 & 1) == 0) {
    return v4;
  }
  unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v10 + 31) < 0)
  {
    uint64_t v11 = *(void **)(v10 + 8);
    uint64_t v12 = *(void *)(v10 + 16);
  }
  else
  {
    uint64_t v11 = (void *)(v10 + 8);
    LODWORD(v12) = *(unsigned __int8 *)(v10 + 31);
  }
  if (*a3 - (void)v4 >= (int)v12)
  {
    uint64_t v13 = (int)v12;
    memcpy(v4, v11, (int)v12);
    v4 += v13;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v11, v12, v4);
}

uint64_t sub_146A748(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if (v1)
  {
    unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
    uint64_t v5 = *(void *)(v3 + 8);
    if ((v4 & 0x80u) == 0) {
      uint64_t v5 = v4;
    }
    uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  else
  {
    uint64_t v2 = 0;
  }
  if ((v1 & 2) != 0) {
    return v2 + 9;
  }
  else {
    return v2;
  }
}

uint64_t sub_146A7A4(uint64_t a1)
{
  if ((~*(_DWORD *)(a1 + 16) & 3) != 0)
  {
    uint64_t result = sub_146A748(a1);
  }
  else
  {
    unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v3 = *(unsigned __int8 *)(v2 + 23);
    uint64_t v4 = *(void *)(v2 + 8);
    if ((v3 & 0x80u) == 0) {
      uint64_t v4 = v3;
    }
    uint64_t result = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 10;
  }
  uint64_t v6 = *(void *)(a1 + 8);
  if (v6)
  {
    unint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v7 + 31) < 0) {
      uint64_t v8 = *(void *)(v7 + 16);
    }
    else {
      uint64_t v8 = *(unsigned __int8 *)(v7 + 31);
    }
    result += v8;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

BOOL sub_146A84C(uint64_t a1)
{
  return (~*(_DWORD *)(a1 + 16) & 3) == 0;
}

void *sub_146A860@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.PlaceResult.NamedFeature");
}

uint64_t sub_146A870(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 40);
  if (*(uint64_t **)(a1 + 40) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  sub_1889DA8(a1 + 24);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_146A918(uint64_t a1)
{
  sub_146A870(a1);

  operator delete();
}

uint64_t sub_146A950(uint64_t a1)
{
  *(_DWORD *)(a1 + 24) = 0;
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v1 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v1 + 23) < 0)
    {
      **(unsigned char **)unint64_t v1 = 0;
      *(void *)(v1 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v1 = 0;
      *(unsigned char *)(v1 + 23) = 0;
    }
  }
  char v3 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 40) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v3) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_146A99C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)char v31 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v31, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = (unsigned __int8 *)(*(void *)v31 + 1);
    unsigned int v9 = **(unsigned char **)v31;
    if ((char)**(unsigned char **)v31 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        uint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v31, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (unsigned __int8 *)(*(void *)v31 + 2);
      }
    }
    *(void *)char v31 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 == 3) {
      break;
    }
    if (v12 != 2)
    {
      if (v12 != 1 || v9 != 10) {
        goto LABEL_14;
      }
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v26 = *(void *)(a1 + 8);
      int v27 = (uint64_t *)(v26 & 0xFFFFFFFFFFFFFFFCLL);
      if (v26) {
        int v27 = (uint64_t *)*v27;
      }
      uint64_t v28 = (std::string *)sub_1880F84((void *)(a1 + 40), v27);
      uint64_t v16 = (void *)sub_188C244(v28, *(char **)v31, (uint64_t)a3);
LABEL_43:
      *(void *)char v31 = v16;
      if (!v16) {
        goto LABEL_53;
      }
      goto LABEL_44;
    }
    if (v9 != 16) {
      goto LABEL_14;
    }
    v5 |= 2u;
    int v24 = (char *)(v8 + 1);
    LODWORD(v23) = *v8;
    if ((v23 & 0x80) == 0) {
      goto LABEL_39;
    }
    int v25 = *v24;
    uint64_t v23 = v23 + (v25 << 7) - 128;
    if ((v25 & 0x80000000) == 0)
    {
      int v24 = (char *)(v8 + 2);
LABEL_39:
      *(void *)char v31 = v24;
      *(_DWORD *)(a1 + 48) = v23;
      goto LABEL_44;
    }
    uint64_t v29 = sub_188C138((uint64_t)v8, v23);
    *(void *)char v31 = v29;
    *(_DWORD *)(a1 + 48) = v30;
    if (!v29) {
      goto LABEL_53;
    }
LABEL_44:
    if (sub_11947B8((uint64_t)a3, (char **)v31, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 == 24)
  {
    int v17 = v8 - 1;
    while (1)
    {
      *(void *)char v31 = v17 + 1;
      uint64_t v18 = v17[1];
      if ((char)v17[1] < 0)
      {
        int v19 = v18 + (v17[2] << 7);
        uint64_t v18 = (v19 - 128);
        if ((char)v17[2] < 0)
        {
          int v17 = (unsigned __int8 *)sub_188C138((uint64_t)(v17 + 1), (v19 - 128));
          uint64_t v18 = v20;
        }
        else
        {
          v17 += 3;
        }
      }
      else
      {
        v17 += 2;
      }
      *(void *)char v31 = v17;
      uint64_t v21 = *(unsigned int *)(a1 + 24);
      if (v21 == *(_DWORD *)(a1 + 28))
      {
        int v22 = v21 + 1;
        sub_188CA54((unsigned int *)(a1 + 24), v21 + 1);
        *(void *)(*(void *)(a1 + 32) + 8 * v21) = v18;
        int v17 = *(unsigned __int8 **)v31;
      }
      else
      {
        *(void *)(*(void *)(a1 + 32) + 8 * v21) = v18;
        int v22 = v21 + 1;
      }
      *(_DWORD *)(a1 + 24) = v22;
      if (!v17) {
        goto LABEL_53;
      }
      if (*(void *)a3 <= (unint64_t)v17 || *v17 != 24) {
        goto LABEL_44;
      }
    }
  }
  if (v9 == 26)
  {
    uint64_t v16 = sub_188C2EC((unsigned int *)(a1 + 24), v8, (uint64_t)a3);
    goto LABEL_43;
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (*v7)
    {
      uint64_t v15 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = *(unsigned __int8 **)v31;
    }
    uint64_t v16 = sub_1885AC0(v9, v15, (char *)v8, a3);
    goto LABEL_43;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_53:
  *(void *)char v31 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return *(void *)v31;
}

unsigned char *sub_146AC68(uint64_t a1, unsigned char *__dst, void *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v7 = *(int *)(a1 + 48);
    unsigned char *v4 = 16;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v10 = *(unsigned int *)(a1 + 24);
  if ((int)v10 >= 1)
  {
    for (uint64_t i = 0; i != v10; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v12 = *(void *)(*(void *)(a1 + 32) + 8 * i);
      unsigned char *v4 = 24;
      v4[1] = v12;
      if (v12 > 0x7F)
      {
        v4[1] = v12 | 0x80;
        unint64_t v13 = v12 >> 7;
        v4[2] = v12 >> 7;
        v4 += 3;
        if (v12 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v14 = v13 >> 14;
            v13 >>= 7;
            *v4++ = v13;
          }
          while (v14);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  uint64_t v15 = *(void *)(a1 + 8);
  if ((v15 & 1) == 0) {
    return v4;
  }
  unint64_t v17 = v15 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v17 + 31) < 0)
  {
    uint64_t v18 = *(void **)(v17 + 8);
    uint64_t v19 = *(void *)(v17 + 16);
  }
  else
  {
    uint64_t v18 = (void *)(v17 + 8);
    LODWORD(v19) = *(unsigned __int8 *)(v17 + 31);
  }
  if (*a3 - (void)v4 >= (int)v19)
  {
    uint64_t v20 = (int)v19;
    memcpy(v4, v18, (int)v19);
    v4 += v20;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v18, v19, v4);
}

uint64_t sub_146AE58(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v3 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
    uint64_t v5 = *(void *)(v3 + 8);
    if ((v4 & 0x80u) == 0) {
      uint64_t v5 = v4;
    }
    uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t result = sub_188D5A8((unsigned int *)(a1 + 24)) + v2 + *(unsigned int *)(a1 + 24);
  if ((*(unsigned char *)(a1 + 16) & 2) != 0)
  {
    int v7 = *(_DWORD *)(a1 + 48);
    if (v7 < 0) {
      uint64_t v8 = 11;
    }
    else {
      uint64_t v8 = ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    result += v8;
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    result += v11;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

std::string *sub_146AF40(std::string *result, uint64_t a2)
{
  unint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = result + 1;
    uint64_t data_low = SLODWORD(result[1].__r_.__value_.__l.__data_);
    sub_188CA54((unsigned int *)&result[1], data_low + v4);
    std::string::size_type size = v3[1].__r_.__value_.__l.__size_;
    LODWORD(v5->__r_.__value_.__l.__data_) += *(_DWORD *)(a2 + 24);
    uint64_t result = (std::string *)memcpy((void *)(size + 8 * data_low), *(const void **)(a2 + 32), 8 * *(int *)(a2 + 24));
  }
  int v8 = *(_DWORD *)(a2 + 16);
  if ((v8 & 3) != 0)
  {
    if (v8)
    {
      uint64_t v9 = (long long *)(*(void *)(a2 + 40) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::size_type v10 = v3->__r_.__value_.__l.__size_;
      uint64_t v11 = (uint64_t *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
      if (v10) {
        uint64_t v11 = (uint64_t *)*v11;
      }
      uint64_t result = sub_1881DF4((std::string **)&v3[1].__r_.__value_.__r.__words[2], v9, v11);
    }
    if ((v8 & 2) != 0) {
      LODWORD(v3[2].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 48);
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= v8;
  }
  uint64_t v12 = *(void *)(a2 + 8);
  if (v12)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v12 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_146B03C(uint64_t a1)
{
  return *(_DWORD *)(a1 + 16) & 1;
}

void *sub_146B048@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.PlaceResult.MatchedToken");
}

uint64_t sub_146B058(uint64_t a1)
{
  unint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_9;
    }
  }
  else if (v4)
  {
    goto LABEL_9;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_9:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_146B110(uint64_t a1)
{
  sub_146B058(a1);

  operator delete();
}

uint64_t sub_146B148(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0) {
    goto LABEL_11;
  }
  if ((v1 & 1) == 0)
  {
LABEL_5:
    if ((v1 & 2) != 0) {
      goto LABEL_6;
    }
    goto LABEL_11;
  }
  unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v2 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v2 = 0;
    *(unsigned char *)(v2 + 23) = 0;
    goto LABEL_5;
  }
  **(unsigned char **)unint64_t v2 = 0;
  *(void *)(v2 + 8) = 0;
  if ((v1 & 2) != 0)
  {
LABEL_6:
    unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)unint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
LABEL_11:
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v5) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_146B1C4(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v20 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
    return *(void *)v20;
  }
  int v6 = (void *)(a1 + 8);
  while (1)
  {
    int v7 = (char *)(*(void *)v20 + 1);
    unsigned int v8 = **(unsigned char **)v20;
    if ((char)**(unsigned char **)v20 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        int v7 = (char *)sub_188C180(*(uint64_t *)v20, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        int v7 = (char *)(*(void *)v20 + 2);
      }
    }
    *(void *)uint64_t v20 = v7;
    if (v8 >> 3 == 2)
    {
      if (v8 == 18)
      {
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v15 = *(void *)(a1 + 8);
        uint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          uint64_t v16 = (uint64_t *)*v16;
        }
        unint64_t v17 = (void *)(a1 + 32);
        goto LABEL_27;
      }
    }
    else if (v8 >> 3 == 1 && v8 == 10)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v18 = *(void *)(a1 + 8);
      uint64_t v16 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
      if (v18) {
        uint64_t v16 = (uint64_t *)*v16;
      }
      unint64_t v17 = (void *)(a1 + 24);
LABEL_27:
      uint64_t v19 = (std::string *)sub_1880F84(v17, v16);
      unint64_t v14 = (void *)sub_188C244(v19, *(char **)v20, (uint64_t)a3);
      goto LABEL_28;
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      unint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v7 = *(char **)v20;
    }
    unint64_t v14 = sub_1885AC0(v8, v13, v7, a3);
LABEL_28:
    *(void *)uint64_t v20 = v14;
    if (!v14) {
      goto LABEL_34;
    }
    if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
      return *(void *)v20;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v20;
  }
LABEL_34:
  *(void *)uint64_t v20 = 0;
  return *(void *)v20;
}

char *sub_146B36C(uint64_t a1, char *__dst, void *a3)
{
  int v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    int v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 2) != 0) {
    int v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v9 + 31) < 0)
  {
    unsigned int v10 = *(void **)(v9 + 8);
    uint64_t v11 = *(void *)(v9 + 16);
  }
  else
  {
    unsigned int v10 = (void *)(v9 + 8);
    LODWORD(v11) = *(unsigned __int8 *)(v9 + 31);
  }
  if (*a3 - (void)v4 >= (int)v11)
  {
    uint64_t v12 = (int)v11;
    memcpy(v4, v10, (int)v11);
    v4 += v12;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v10, v11, v4);
}

uint64_t sub_146B458(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_12;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
  uint64_t v5 = *(void *)(v3 + 8);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = v4;
  }
  uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    unint64_t v6 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    v2 += v12;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_146B534()
{
  return 1;
}

void *sub_146B53C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.PlaceResult.LocalizedDisambiguationLabel");
}

uint64_t sub_146B54C(uint64_t a1)
{
  unint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_2539768 && *(void *)(a1 + 32))
  {
    sub_146C188();
    operator delete();
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_146B618(uint64_t a1)
{
  sub_146B54C(a1);

  operator delete();
}

uint64_t sub_146B650(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 3) != 0)
  {
    if ((v2 & 1) == 0) {
      goto LABEL_5;
    }
    unint64_t v3 = *(void *)(result + 24) & 0xFFFFFFFFFFFFFFFELL;
    if ((*(char *)(v3 + 23) & 0x80000000) == 0)
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
LABEL_5:
      if ((v2 & 2) == 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
    **(unsigned char **)unint64_t v3 = 0;
    *(void *)(v3 + 8) = 0;
    if ((v2 & 2) != 0) {
LABEL_6:
    }
      uint64_t result = sub_146B6F4(*(void *)(result + 32));
  }
LABEL_7:
  if ((v2 & 0x1C) != 0)
  {
    *(void *)(v1 + 40) = 0;
    *(void *)(v1 + 48) = 0;
    *(unsigned char *)(v1 + 56) = 0;
  }
  char v5 = *(unsigned char *)(v1 + 8);
  uint64_t v4 = v1 + 8;
  *(_DWORD *)(v4 + 8) = 0;
  if (v5)
  {
    return sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

uint64_t sub_146B6F4(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    unint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_146B650(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  if (*(unsigned char *)(v1 + 16))
  {
    unint64_t v5 = *(void *)(v1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v5 + 23) < 0)
    {
      **(unsigned char **)unint64_t v5 = 0;
      *(void *)(v5 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v5 = 0;
      *(unsigned char *)(v5 + 23) = 0;
    }
  }
  char v7 = *(unsigned char *)(v1 + 8);
  uint64_t v6 = v1 + 8;
  *(_DWORD *)(v6 + 8) = 0;
  if (v7)
  {
    return sub_188B4AC((uint64_t *)v6);
  }
  return result;
}

uint64_t sub_146B7A4(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v30 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v30, a3[11].i32[1])) {
    goto LABEL_2;
  }
  char v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (char *)(*(void *)v30 + 1);
    unsigned int v9 = **(unsigned char **)v30;
    if ((char)**(unsigned char **)v30 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180(*(uint64_t *)v30, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (char *)(*(void *)v30 + 2);
      }
    }
    *(void *)int v30 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 9) {
          goto LABEL_31;
        }
        v5 |= 4u;
        *(void *)(a1 + 40) = *(void *)v8;
        *(void *)int v30 = v8 + 8;
        goto LABEL_39;
      case 2u:
        if (v9 != 18) {
          goto LABEL_31;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 8);
        unint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          unint64_t v13 = (uint64_t *)*v13;
        }
        unint64_t v14 = (std::string *)sub_1880F84((void *)(a1 + 24), v13);
        uint64_t v15 = (void *)sub_188C244(v14, *(char **)v30, (uint64_t)a3);
        goto LABEL_38;
      case 3u:
        if (v9 != 24) {
          goto LABEL_31;
        }
        v5 |= 8u;
        uint64_t v16 = v8 + 1;
        uint64_t v17 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_19;
        }
        int v18 = *v16;
        uint64_t v17 = v17 + (v18 << 7) - 128;
        if (v18 < 0)
        {
          uint64_t v26 = sub_188C138((uint64_t)v8, v17);
          *(void *)int v30 = v26;
          *(void *)(a1 + 48) = v27;
          if (!v26) {
            goto LABEL_48;
          }
        }
        else
        {
          uint64_t v16 = v8 + 2;
LABEL_19:
          *(void *)int v30 = v16;
          *(void *)(a1 + 48) = v17;
        }
        goto LABEL_39;
      case 4u:
        if (v9 != 32) {
          goto LABEL_31;
        }
        v5 |= 0x10u;
        uint64_t v19 = v8 + 1;
        uint64_t v20 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_24;
        }
        int v21 = *v19;
        uint64_t v20 = v20 + (v21 << 7) - 128;
        if (v21 < 0)
        {
          uint64_t v28 = sub_188C138((uint64_t)v8, v20);
          *(void *)int v30 = v28;
          *(unsigned char *)(a1 + 56) = v29 != 0;
          if (!v28) {
            goto LABEL_48;
          }
        }
        else
        {
          uint64_t v19 = v8 + 2;
LABEL_24:
          *(void *)int v30 = v19;
          *(unsigned char *)(a1 + 56) = v20 != 0;
        }
        goto LABEL_39;
      case 5u:
        if (v9 != 42) {
          goto LABEL_31;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        int v22 = *(void **)(a1 + 32);
        if (!v22)
        {
          uint64_t v23 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v23 = (void *)*v23;
          }
          int v22 = sub_14791F0((uint64_t)v23);
          *(void *)(a1 + 32) = v22;
        }
        uint64_t v15 = (void *)sub_146BA90(a3, v22);
        goto LABEL_38;
      default:
LABEL_31:
        if (v9) {
          BOOL v24 = (v9 & 7) == 4;
        }
        else {
          BOOL v24 = 1;
        }
        if (!v24)
        {
          if (*v7)
          {
            int v25 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            int v25 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = *(char **)v30;
          }
          uint64_t v15 = sub_1885AC0(v9, v25, v8, a3);
LABEL_38:
          *(void *)int v30 = v15;
          if (!v15) {
            goto LABEL_48;
          }
LABEL_39:
          if (sub_11947B8((uint64_t)a3, (char **)v30, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_48:
        }
          *(void *)int v30 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v30;
    }
  }
}

uint64_t sub_146BA90(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_146C26C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_146BB20(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 4) != 0)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 40);
    unsigned char *v4 = 9;
    *(void *)(v4 + 1) = v7;
    v4 += 9;
    if ((v6 & 1) == 0)
    {
LABEL_3:
      if ((v6 & 8) == 0) {
        goto LABEL_15;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 1) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 8) == 0) {
    goto LABEL_15;
  }
LABEL_9:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  unint64_t v8 = *(void *)(a1 + 48);
  unsigned char *v4 = 24;
  v4[1] = v8;
  if (v8 > 0x7F)
  {
    v4[1] = v8 | 0x80;
    unint64_t v9 = v8 >> 7;
    v4[2] = v8 >> 7;
    v4 += 3;
    if (v8 >= 0x4000)
    {
      do
      {
        *(v4 - 1) |= 0x80u;
        unint64_t v10 = v9 >> 14;
        v9 >>= 7;
        *v4++ = v9;
      }
      while (v10);
    }
  }
  else
  {
    v4 += 2;
  }
LABEL_15:
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v11 = *(unsigned char *)(a1 + 56);
    unsigned char *v4 = 32;
    v4[1] = v11;
    v4 += 2;
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v12 = *(void *)(a1 + 32);
    unsigned char *v4 = 42;
    unsigned int v13 = *(_DWORD *)(v12 + 20);
    v4[1] = v13;
    if (v13 > 0x7F) {
      unint64_t v14 = sub_188A9CC(v13, v4 + 1);
    }
    else {
      unint64_t v14 = v4 + 2;
    }
    uint64_t v4 = (unsigned char *)sub_146C4FC(v12, v14, (int)a3);
  }
  uint64_t v15 = *(void *)(a1 + 8);
  if ((v15 & 1) == 0) {
    return v4;
  }
  unint64_t v17 = v15 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v17 + 31) < 0)
  {
    int v18 = *(void **)(v17 + 8);
    uint64_t v19 = *(void *)(v17 + 16);
  }
  else
  {
    int v18 = (void *)(v17 + 8);
    LODWORD(v19) = *(unsigned __int8 *)(v17 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v19)
  {
    uint64_t v20 = (int)v19;
    memcpy(v4, v18, (int)v19);
    v4 += v20;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v18, v19, v4);
}

uint64_t sub_146BD48(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0x1F) == 0)
  {
    uint64_t result = 0;
    goto LABEL_17;
  }
  if (v2)
  {
    unint64_t v5 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
    uint64_t v7 = *(void *)(v5 + 8);
    if ((v6 & 0x80u) == 0) {
      uint64_t v7 = v6;
    }
    uint64_t v3 = v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_10;
    }
  }
  uint64_t v8 = sub_146C664(*(void *)(a1 + 32));
  v3 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_10:
  uint64_t v9 = v3 + 9;
  if ((v2 & 4) == 0) {
    uint64_t v9 = v3;
  }
  if ((v2 & 8) != 0) {
    v9 += ((9 * (__clz(*(void *)(a1 + 48) | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
  if ((v2 & 0x10) != 0) {
    uint64_t result = v9 + 2;
  }
  else {
    uint64_t result = v9;
  }
LABEL_17:
  uint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    unint64_t v11 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    result += v12;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

std::string *sub_146BE6C(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0x1F) != 0)
  {
    if (v4)
    {
      uint64_t v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      uint64_t v7 = (std::string **)&result[1];
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v9 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v9 = (uint64_t *)*v9;
      }
      uint64_t result = sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_21;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    if (!v3[1].__r_.__value_.__l.__size_)
    {
      std::string::size_type v10 = v3->__r_.__value_.__l.__size_;
      unint64_t v11 = (void *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
      if (v10) {
        unint64_t v11 = (void *)*v11;
      }
      v3[1].__r_.__value_.__l.__size_ = (std::string::size_type)sub_14791F0((uint64_t)v11);
    }
    uint64_t result = (std::string *)sub_146BF9C();
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_22;
    }
LABEL_21:
    v3[1].__r_.__value_.__r.__words[2] = *(void *)(a2 + 40);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0)
      {
LABEL_8:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
        goto LABEL_9;
      }
LABEL_7:
      v3[2].__r_.__value_.__s.__data_[8] = *(unsigned char *)(a2 + 56);
      goto LABEL_8;
    }
LABEL_22:
    v3[2].__r_.__value_.__r.__words[0] = *(void *)(a2 + 48);
    if ((v4 & 0x10) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
LABEL_9:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

std::string *sub_146BF9C(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = (std::string *)sub_1494290((uint64_t *)&v3[1], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2]- LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    uint64_t v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  if (*(unsigned char *)(a2 + 16))
  {
    uint64_t v9 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
    std::string::size_type size = v3->__r_.__value_.__l.__size_;
    unint64_t v11 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
    if (size) {
      unint64_t v11 = (uint64_t *)*v11;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[2], v9, v11);
  }
  uint64_t v12 = *(void *)(a2 + 8);
  if (v12)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v12 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_146C0A4(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 2) == 0) {
    return 1;
  }
  uint64_t v2 = *(void *)(a1 + 32);
  if ((*(unsigned char *)(v2 + 16) & 1) == 0) {
    return 0;
  }
  uint64_t v3 = *(unsigned int *)(v2 + 32);
  do
  {
    BOOL v1 = (int)v3 < 1;
    if ((int)v3 < 1) {
      break;
    }
    uint64_t v4 = v3 - 1;
    char v5 = sub_146C0A4(*(void *)(*(void *)(v2 + 40) + 8 * v3));
    uint64_t v3 = v4;
  }
  while ((v5 & 1) != 0);
  return v1;
}

BOOL sub_146C118(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 0;
  }
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  do
  {
    BOOL v1 = (int)v2 < 1;
    if ((int)v2 < 1) {
      break;
    }
    uint64_t v4 = v2 - 1;
    char v5 = sub_146C0A4(*(void *)(v3 + 8 * v2));
    uint64_t v2 = v4;
  }
  while ((v5 & 1) != 0);
  return v1;
}

void *sub_146C178@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.PlaceResult.NamedFieldValue");
}

uint64_t sub_146C188(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  char v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  sub_14936CC((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_146C234(uint64_t a1)
{
  sub_146C188(a1);

  operator delete();
}

uint64_t sub_146C26C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)BOOL v24 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v24, a3[11].i32[1])) {
    return *(void *)v24;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    int v7 = (char *)(*(void *)v24 + 1);
    unsigned int v8 = **(unsigned char **)v24;
    if ((char)**(unsigned char **)v24 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        int v7 = (char *)sub_188C180(*(uint64_t *)v24, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        int v7 = (char *)(*(void *)v24 + 2);
      }
    }
    *(void *)BOOL v24 = v7;
    if (v8 >> 3 == 2) {
      break;
    }
    if (v8 >> 3 != 1 || v8 != 10) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v21 = *(void *)(a1 + 8);
    int v22 = (uint64_t *)(v21 & 0xFFFFFFFFFFFFFFFCLL);
    if (v21) {
      int v22 = (uint64_t *)*v22;
    }
    uint64_t v23 = (std::string *)sub_1880F84((void *)(a1 + 48), v22);
    unint64_t v14 = (void *)sub_188C244(v23, *(char **)v24, (uint64_t)a3);
LABEL_33:
    *(void *)BOOL v24 = v14;
    if (!v14) {
      goto LABEL_39;
    }
LABEL_34:
    if (sub_11947B8((uint64_t)a3, (char **)v24, a3[11].i32[1])) {
      return *(void *)v24;
    }
  }
  if (v8 == 18)
  {
    uint64_t v15 = v7 - 1;
    while (1)
    {
      uint64_t v16 = (unsigned __int8 *)(v15 + 1);
      *(void *)BOOL v24 = v15 + 1;
      unint64_t v17 = *(_DWORD **)(a1 + 40);
      if (v17 && (uint64_t v18 = *(int *)(a1 + 32), (int)v18 < *v17))
      {
        *(_DWORD *)(a1 + 32) = v18 + 1;
        uint64_t v19 = *(void *)&v17[2 * v18 + 2];
      }
      else
      {
        uint64_t v20 = sub_1479164(*(void *)(a1 + 24));
        uint64_t v19 = sub_188CDC8(a1 + 24, v20);
        uint64_t v16 = *(unsigned __int8 **)v24;
      }
      uint64_t v15 = (char *)sub_146C46C(a3, v19, v16);
      *(void *)BOOL v24 = v15;
      if (!v15) {
        goto LABEL_39;
      }
      if (*(void *)a3 <= (unint64_t)v15 || *v15 != 18) {
        goto LABEL_34;
      }
    }
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      unsigned int v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unsigned int v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v7 = *(char **)v24;
    }
    unint64_t v14 = sub_1885AC0(v8, v13, v7, a3);
    goto LABEL_33;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v24;
  }
LABEL_39:
  *(void *)BOOL v24 = 0;
  return *(void *)v24;
}

uint64_t sub_146C46C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_146B7A4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_146C4FC(uint64_t a1, unsigned char *__dst, unint64_t *a3)
{
  uint64_t v4 = __dst;
  if (*(unsigned char *)(a1 + 16)) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  int v6 = *(_DWORD *)(a1 + 32);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      unsigned char *v4 = 18;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      v4[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, v4 + 1);
      }
      else {
        unsigned int v10 = v4 + 2;
      }
      uint64_t v4 = sub_146BB20(v8, (unint64_t)v10, a3);
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return v4;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    unint64_t v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    unint64_t v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(v4, v14, (int)v15);
    v4 += v16;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v14, v15, v4);
}

uint64_t sub_146C664(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v3 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
    uint64_t v5 = *(void *)(v3 + 8);
    if ((v4 & 0x80u) == 0) {
      uint64_t v5 = v4;
    }
    uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v6 = *(int *)(a1 + 32);
  uint64_t v7 = v2 + v6;
  uint64_t v8 = *(void *)(a1 + 40);
  if (v8) {
    unsigned int v9 = (uint64_t *)(v8 + 8);
  }
  else {
    unsigned int v9 = 0;
  }
  if (v6)
  {
    uint64_t v10 = 8 * v6;
    do
    {
      uint64_t v11 = *v9++;
      uint64_t v12 = sub_146BD48(v11);
      v7 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6);
      v10 -= 8;
    }
    while (v10);
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if (v13)
  {
    unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v15 + 31) < 0) {
      uint64_t v16 = *(void *)(v15 + 16);
    }
    else {
      uint64_t v16 = *(unsigned __int8 *)(v15 + 31);
    }
    v7 += v16;
  }
  *(_DWORD *)(a1 + 20) = v7;
  return v7;
}

void *sub_146C75C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.PlaceResult.NamedField");
}

void *sub_146C76C(void *a1)
{
  unint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_146C834((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  sub_149384C(a1 + 18);
  sub_14937CC(a1 + 15);
  sub_149374C(a1 + 12);
  sub_122BB0C(a1 + 9);
  sub_1889DE8(a1 + 6);
  sub_12C2834(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void ***sub_146C834(uint64_t a1)
{
  unint64_t v3 = *(uint64_t **)(a1 + 168);
  uint64_t v2 = (void ***)(a1 + 168);
  if (v3 != &qword_2550250) {
    sub_1881C6C(v2);
  }
  uint64_t result = (void ***)(a1 + 176);
  if (*(uint64_t **)(a1 + 176) != &qword_2550250) {
    sub_1881C6C(result);
  }
  if ((uint64_t (***)())a1 != &off_25397E0)
  {
    uint64_t v5 = *(void **)(a1 + 184);
    if (v5)
    {
      sub_144D104(v5);
      operator delete();
    }
    if (*(void *)(a1 + 192))
    {
      sub_15B8F7C();
      operator delete();
    }
    uint64_t result = *(void ****)(a1 + 200);
    if (result)
    {
      sub_1463C50(result);
      operator delete();
    }
  }
  return result;
}

void sub_146C90C(void *a1)
{
  sub_146C76C(a1);

  operator delete();
}

uint64_t sub_146C944(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v86 = a2;
  int v5 = 0;
  if ((sub_11947B8((uint64_t)a3, (char **)v86, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v7 = (uint64_t **)(a1 + 48);
    uint64_t v85 = (uint64_t *)(a1 + 8);
    while (1)
    {
      uint64_t v8 = (unsigned __int8 *)(*(void *)v86 + 1);
      unsigned int v9 = **(unsigned char **)v86;
      if ((char)**(unsigned char **)v86 < 0)
      {
        unsigned int v10 = v9 + (*v8 << 7);
        unsigned int v9 = v10 - 128;
        if ((char)*v8 < 0)
        {
          uint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v86, v10 - 128);
          unsigned int v9 = v11;
        }
        else
        {
          uint64_t v8 = (unsigned __int8 *)(*(void *)v86 + 2);
        }
      }
      *(void *)uint64_t v86 = v8;
      switch(v9 >> 3)
      {
        case 'd':
          if (v9 != 34) {
            goto LABEL_123;
          }
          *(_DWORD *)(a1 + 16) |= 8u;
          uint64_t v12 = *(void *)(a1 + 192);
          if (!v12)
          {
            uint64_t v13 = (void *)(*v85 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v85) {
              uint64_t v13 = (void *)*v13;
            }
            uint64_t v12 = sub_15C1EF4((uint64_t)v13);
            *(void *)(a1 + 192) = v12;
            uint64_t v8 = *(unsigned __int8 **)v86;
          }
          uint64_t v14 = sub_1198E84(a3, v12, v8);
          goto LABEL_130;
        case 'e':
          if (v9 != 42) {
            goto LABEL_123;
          }
          *(_DWORD *)(a1 + 16) |= 2u;
          uint64_t v17 = *(void *)(a1 + 8);
          uint64_t v18 = (uint64_t *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
          if (v17) {
            uint64_t v18 = (uint64_t *)*v18;
          }
          uint64_t v19 = (void *)(a1 + 176);
LABEL_112:
          uint64_t v68 = (std::string *)sub_1880F84(v19, v18);
          uint64_t v14 = (uint64_t)sub_188C244(v68, *(char **)v86, (uint64_t)a3);
          goto LABEL_130;
        case 'f':
          if (v9 != 50) {
            goto LABEL_123;
          }
          uint64_t v20 = (const std::string::value_type *)(v8 - 2);
          while (1)
          {
            uint64_t v21 = (char *)(v20 + 2);
            *(void *)uint64_t v86 = v20 + 2;
            int v22 = *(_DWORD **)(a1 + 64);
            if (v22 && (uint64_t v23 = *(int *)(a1 + 56), (int)v23 < *v22))
            {
              *(_DWORD *)(a1 + 56) = v23 + 1;
              BOOL v24 = *(std::string **)&v22[2 * v23 + 2];
            }
            else
            {
              if (!*v7) {
                operator new();
              }
              void *v26 = v25;
              v26[1] = sub_3A6EDC;
              *int v25 = 0;
              v25[1] = 0;
              v25[2] = 0;
              BOOL v24 = (std::string *)sub_188CDC8(a1 + 48, (uint64_t)v25);
              uint64_t v21 = *(char **)v86;
            }
            uint64_t v20 = sub_188C244(v24, v21, (uint64_t)a3);
            *(void *)uint64_t v86 = v20;
            if (!v20) {
              goto LABEL_148;
            }
            if (*(void *)a3 <= (unint64_t)v20 || *(_WORD *)v20 != 1714) {
              goto LABEL_131;
            }
          }
        case 'g':
          if (v9 != 58) {
            goto LABEL_123;
          }
          uint64_t v27 = v8 - 2;
          while (1)
          {
            uint64_t v28 = v27 + 2;
            *(void *)uint64_t v86 = v27 + 2;
            uint64_t v29 = *(_DWORD **)(a1 + 88);
            if (v29 && (uint64_t v30 = *(int *)(a1 + 80), (int)v30 < *v29))
            {
              *(_DWORD *)(a1 + 80) = v30 + 1;
              uint64_t v31 = *(void *)&v29[2 * v30 + 2];
            }
            else
            {
              int v32 = sub_1478FB4(*(void *)(a1 + 72));
              uint64_t v31 = sub_188CDC8(a1 + 72, (uint64_t)v32);
              uint64_t v28 = *(unsigned __int8 **)v86;
            }
            uint64_t v27 = (unsigned __int8 *)sub_11EAB7C(a3, v31, v28);
            *(void *)uint64_t v86 = v27;
            if (!v27) {
              goto LABEL_148;
            }
            if (*(void *)a3 <= (unint64_t)v27 || *(_WORD *)v27 != 1722) {
              goto LABEL_131;
            }
          }
        case 'h':
          if (v9 != 66) {
            goto LABEL_123;
          }
          *(_DWORD *)(a1 + 16) |= 0x10u;
          uint64_t v33 = *(void *)(a1 + 200);
          if (!v33)
          {
            int v34 = (void *)(*v85 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v85) {
              int v34 = (void *)*v34;
            }
            sub_1478F54((uint64_t)v34);
            uint64_t v33 = v35;
            *(void *)(a1 + 200) = v35;
            uint64_t v8 = *(unsigned __int8 **)v86;
          }
          uint64_t v14 = sub_11793D8(a3, v33, v8);
          goto LABEL_130;
        case 'i':
          if (v9 != 74) {
            goto LABEL_123;
          }
          uint64_t v36 = v8 - 2;
          while (1)
          {
            int v37 = v36 + 2;
            *(void *)uint64_t v86 = v36 + 2;
            unint64_t v38 = *(_DWORD **)(a1 + 112);
            if (v38 && (uint64_t v39 = *(int *)(a1 + 104), (int)v39 < *v38))
            {
              *(_DWORD *)(a1 + 104) = v39 + 1;
              uint64_t v40 = *(void *)&v38[2 * v39 + 2];
            }
            else
            {
              uint64_t v41 = sub_1479038(*(void *)(a1 + 96));
              uint64_t v40 = sub_188CDC8(a1 + 96, v41);
              int v37 = *(unsigned __int8 **)v86;
            }
            uint64_t v36 = (unsigned __int8 *)sub_146D220(a3, v40, v37);
            *(void *)uint64_t v86 = v36;
            if (!v36) {
              goto LABEL_148;
            }
            if (*(void *)a3 <= (unint64_t)v36 || *(_WORD *)v36 != 1738) {
              goto LABEL_131;
            }
          }
        case 'j':
          if (v9 != 80) {
            goto LABEL_123;
          }
          v5 |= 0x200u;
          unsigned int v42 = (char *)(v8 + 1);
          uint64_t v43 = *v8;
          if (((char)*v8 & 0x80000000) == 0) {
            goto LABEL_68;
          }
          int v44 = *v42;
          uint64_t v43 = v43 + (v44 << 7) - 128;
          if (v44 < 0)
          {
            uint64_t v77 = sub_188C138((uint64_t)v8, v43);
            *(void *)uint64_t v86 = v77;
            *(void *)(a1 + 232) = v78;
            if (!v77) {
              goto LABEL_148;
            }
          }
          else
          {
            unsigned int v42 = (char *)(v8 + 2);
LABEL_68:
            *(void *)uint64_t v86 = v42;
            *(void *)(a1 + 232) = v43;
          }
          goto LABEL_131;
        case 'k':
          if (v9 != 88) {
            goto LABEL_123;
          }
          int v45 = (char *)(v8 + 1);
          unint64_t v46 = *v8;
          if (((char)*v8 & 0x80000000) == 0) {
            goto LABEL_73;
          }
          int v47 = *v45;
          int v48 = v46 + (v47 << 7);
          unint64_t v46 = (v48 - 128);
          if (v47 < 0)
          {
            *(void *)uint64_t v86 = sub_188C138((uint64_t)v8, (v48 - 128));
            if (!*(void *)v86) {
              goto LABEL_148;
            }
            unint64_t v46 = v79;
          }
          else
          {
            int v45 = (char *)(v8 + 2);
LABEL_73:
            *(void *)uint64_t v86 = v45;
          }
          if (v46 > 2)
          {
            if (*v85) {
              unint64_t v84 = (std::string *)((*v85 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else {
              unint64_t v84 = (std::string *)sub_188DBD8(v85);
            }
            sub_188C020(107, v46, v84);
          }
          else
          {
            *(_DWORD *)(a1 + 16) |= 0x100u;
            *(_DWORD *)(a1 + 224) = v46;
          }
          goto LABEL_131;
        case 'l':
          if (v9 != 98) {
            goto LABEL_123;
          }
          unint64_t v49 = v8 - 2;
          while (1)
          {
            uint64_t v50 = v49 + 2;
            *(void *)uint64_t v86 = v49 + 2;
            uint64_t v51 = *(_DWORD **)(a1 + 136);
            if (v51 && (uint64_t v52 = *(int *)(a1 + 128), (int)v52 < *v51))
            {
              *(_DWORD *)(a1 + 128) = v52 + 1;
              uint64_t v53 = *(void *)&v51[2 * v52 + 2];
            }
            else
            {
              unint64_t v54 = sub_14790E0(*(void *)(a1 + 120));
              uint64_t v53 = sub_188CDC8(a1 + 120, (uint64_t)v54);
              uint64_t v50 = *(unsigned __int8 **)v86;
            }
            unint64_t v49 = (unsigned __int8 *)sub_146D2B0(a3, v53, v50);
            *(void *)uint64_t v86 = v49;
            if (!v49) {
              goto LABEL_148;
            }
            if (*(void *)a3 <= (unint64_t)v49 || *(_WORD *)v49 != 1762) {
              goto LABEL_131;
            }
          }
        case 'm':
          if (v9 == 106)
          {
            uint64_t v55 = v8 - 2;
            while (1)
            {
              uint64_t v56 = v55 + 2;
              *(void *)uint64_t v86 = v55 + 2;
              unint64_t v57 = *(_DWORD **)(a1 + 160);
              if (v57 && (uint64_t v58 = *(int *)(a1 + 152), (int)v58 < *v57))
              {
                *(_DWORD *)(a1 + 152) = v58 + 1;
                uint64_t v59 = *(void *)&v57[2 * v58 + 2];
              }
              else
              {
                unint64_t v60 = sub_14791F0(*(void *)(a1 + 144));
                uint64_t v59 = sub_188CDC8(a1 + 144, (uint64_t)v60);
                uint64_t v56 = *(unsigned __int8 **)v86;
              }
              uint64_t v55 = (unsigned __int8 *)sub_146BA90(a3, v59, v56);
              *(void *)uint64_t v86 = v55;
              if (!v55) {
                goto LABEL_148;
              }
              if (*(void *)a3 <= (unint64_t)v55 || *(_WORD *)v55 != 1770) {
                goto LABEL_131;
              }
            }
          }
LABEL_123:
          if (v9) {
            BOOL v75 = (v9 & 7) == 4;
          }
          else {
            BOOL v75 = 1;
          }
          if (v75)
          {
            if (v8)
            {
              a3[10].i32[0] = v9 - 1;
              goto LABEL_2;
            }
LABEL_148:
            *(void *)uint64_t v86 = 0;
            goto LABEL_2;
          }
          if (*v85)
          {
            uint64_t v76 = (std::string *)((*v85 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v76 = (std::string *)sub_188DBD8(v85);
            uint64_t v8 = *(unsigned __int8 **)v86;
          }
          uint64_t v14 = (uint64_t)sub_1885AC0(v9, v76, (char *)v8, a3);
LABEL_130:
          *(void *)uint64_t v86 = v14;
          if (!v14) {
            goto LABEL_148;
          }
LABEL_131:
          if (sub_11947B8((uint64_t)a3, (char **)v86, a3[11].i32[1])) {
            goto LABEL_2;
          }
          break;
        default:
          switch(v9 >> 3)
          {
            case 1u:
              if (v9 != 10) {
                goto LABEL_123;
              }
              *(_DWORD *)(a1 + 16) |= 4u;
              uint64_t v15 = *(void *)(a1 + 184);
              if (!v15)
              {
                uint64_t v16 = (void *)(*v85 & 0xFFFFFFFFFFFFFFFCLL);
                if (*v85) {
                  uint64_t v16 = (void *)*v16;
                }
                uint64_t v15 = sub_147818C((uint64_t)v16);
                *(void *)(a1 + 184) = v15;
                uint64_t v8 = *(unsigned __int8 **)v86;
              }
              uint64_t v14 = sub_1265E6C(a3, v15, v8);
              goto LABEL_130;
            case 2u:
              if (v9 != 17) {
                goto LABEL_123;
              }
              v5 |= 0x20u;
              *(void *)(a1 + 208) = *(void *)v8;
              *(void *)uint64_t v86 = v8 + 8;
              goto LABEL_131;
            case 3u:
              if (v9 != 26) {
                goto LABEL_123;
              }
              uint64_t v61 = v8 - 1;
              while (1)
              {
                uint64_t v62 = v61 + 1;
                *(void *)uint64_t v86 = v61 + 1;
                unint64_t v63 = *(_DWORD **)(a1 + 40);
                if (v63 && (uint64_t v64 = *(int *)(a1 + 32), (int)v64 < *v63))
                {
                  *(_DWORD *)(a1 + 32) = v64 + 1;
                  uint64_t v65 = *(void *)&v63[2 * v64 + 2];
                }
                else
                {
                  uint64_t v66 = sub_147818C(*(void *)(a1 + 24));
                  uint64_t v65 = sub_188CDC8(a1 + 24, v66);
                  uint64_t v62 = *(unsigned __int8 **)v86;
                }
                uint64_t v61 = (unsigned __int8 *)sub_1265E6C(a3, v65, v62);
                *(void *)uint64_t v86 = v61;
                if (!v61) {
                  goto LABEL_148;
                }
                if (*(void *)a3 <= (unint64_t)v61 || *v61 != 26) {
                  goto LABEL_131;
                }
              }
            case 4u:
              if (v9 != 34) {
                goto LABEL_123;
              }
              *(_DWORD *)(a1 + 16) |= 1u;
              uint64_t v67 = *(void *)(a1 + 8);
              uint64_t v18 = (uint64_t *)(v67 & 0xFFFFFFFFFFFFFFFCLL);
              if (v67) {
                uint64_t v18 = (uint64_t *)*v18;
              }
              uint64_t v19 = (void *)(a1 + 168);
              goto LABEL_112;
            case 5u:
              if (v9 != 40) {
                goto LABEL_123;
              }
              v5 |= 0x40u;
              unint64_t v69 = (char *)(v8 + 1);
              int v70 = *v8;
              if (((char)*v8 & 0x80000000) == 0) {
                goto LABEL_117;
              }
              int v71 = *v69;
              int v70 = v70 + (v71 << 7) - 128;
              if (v71 < 0)
              {
                uint64_t v80 = sub_188C0D0((uint64_t)v8, v70);
                *(void *)uint64_t v86 = v80;
                *(_DWORD *)(a1 + 216) = v81;
                if (!v80) {
                  goto LABEL_148;
                }
              }
              else
              {
                unint64_t v69 = (char *)(v8 + 2);
LABEL_117:
                *(void *)uint64_t v86 = v69;
                *(_DWORD *)(a1 + 216) = v70;
              }
              goto LABEL_131;
            case 6u:
              if (v9 != 48) {
                goto LABEL_123;
              }
              v5 |= 0x80u;
              unint64_t v72 = (char *)(v8 + 1);
              int v73 = *v8;
              if (((char)*v8 & 0x80000000) == 0) {
                goto LABEL_122;
              }
              int v74 = *v72;
              int v73 = v73 + (v74 << 7) - 128;
              if (v74 < 0)
              {
                uint64_t v82 = sub_188C0D0((uint64_t)v8, v73);
                *(void *)uint64_t v86 = v82;
                *(_DWORD *)(a1 + 220) = v83;
                if (!v82) {
                  goto LABEL_148;
                }
              }
              else
              {
                unint64_t v72 = (char *)(v8 + 2);
LABEL_122:
                *(void *)uint64_t v86 = v72;
                *(_DWORD *)(a1 + 220) = v73;
              }
              break;
            default:
              goto LABEL_123;
          }
          goto LABEL_131;
      }
    }
  }
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return *(void *)v86;
}

uint64_t sub_146D220(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_146A99C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_146D2B0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_146B1C4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_146D340(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 4) != 0)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 184);
    char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 44);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    uint64_t v4 = sub_144E240(v7, v9, a3);
  }
  if ((v6 & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 208);
    char *v4 = 17;
    *(void *)(v4 + 1) = v10;
    v4 += 9;
  }
  int v11 = *(_DWORD *)(a1 + 32);
  if (v11)
  {
    for (int i = 0; i != v11; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v13 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      char *v4 = 26;
      unsigned int v14 = *(_DWORD *)(v13 + 44);
      v4[1] = v14;
      if (v14 > 0x7F) {
        uint64_t v15 = sub_188A9CC(v14, v4 + 1);
      }
      else {
        uint64_t v15 = v4 + 2;
      }
      uint64_t v4 = sub_144E240(v13, v15, a3);
    }
  }
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 168) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  if ((v6 & 0x40) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v16 = *(_DWORD *)(a1 + 216);
    char *v4 = 40;
    v4[1] = v16;
    if (v16 > 0x7F)
    {
      v4[1] = v16 | 0x80;
      unsigned int v17 = v16 >> 7;
      v4[2] = v16 >> 7;
      v4 += 3;
      if (v16 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v18 = v17 >> 14;
          v17 >>= 7;
          *v4++ = v17;
        }
        while (v18);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x80) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v19 = *(_DWORD *)(a1 + 220);
    char *v4 = 48;
    v4[1] = v19;
    if (v19 > 0x7F)
    {
      v4[1] = v19 | 0x80;
      unsigned int v20 = v19 >> 7;
      v4[2] = v19 >> 7;
      v4 += 3;
      if (v19 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v21 = v20 >> 14;
          v20 >>= 7;
          *v4++ = v20;
        }
        while (v21);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v22 = *(void *)(a1 + 192);
    *(_WORD *)uint64_t v4 = 1698;
    unsigned int v23 = *(_DWORD *)(v22 + 20);
    v4[2] = v23;
    if (v23 > 0x7F) {
      BOOL v24 = sub_188A9CC(v23, v4 + 2);
    }
    else {
      BOOL v24 = v4 + 3;
    }
    uint64_t v4 = sub_15B9320(v22, v24, a3);
  }
  if ((v6 & 2) != 0) {
    uint64_t v4 = sub_117A0AC(a3, 101, (const void **)(*(void *)(a1 + 176) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v25 = *(unsigned int *)(a1 + 56);
  if ((int)v25 >= 1)
  {
    uint64_t v26 = 0;
    uint64_t v27 = 8 * v25;
    do
    {
      uint64_t v28 = *(void **)(*(void *)(a1 + 64) + v26 + 8);
      if (*((char *)v28 + 23) < 0)
      {
        int64_t v29 = v28[1];
        if (v29 > 127) {
          goto LABEL_56;
        }
      }
      else
      {
        int64_t v29 = *((unsigned __int8 *)v28 + 23);
      }
      if ((uint64_t)(*a3 - (void)v4 + 13) >= v29)
      {
        *(_WORD *)uint64_t v4 = 1714;
        v4[2] = v29;
        if (*((char *)v28 + 23) < 0) {
          uint64_t v28 = (void *)*v28;
        }
        uint64_t v30 = v4 + 3;
        memcpy(v30, v28, v29);
        uint64_t v4 = &v30[v29];
        goto LABEL_54;
      }
LABEL_56:
      uint64_t v4 = (char *)sub_188A868(a3, 102, (uint64_t)v28, v4);
LABEL_54:
      v26 += 8;
    }
    while (v27 != v26);
  }
  int v31 = *(_DWORD *)(a1 + 80);
  if (v31)
  {
    for (int j = 0; j != v31; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v33 = *(void *)(*(void *)(a1 + 88) + 8 * j + 8);
      *(_WORD *)uint64_t v4 = 1722;
      unsigned int v34 = *(_DWORD *)(v33 + 20);
      v4[2] = v34;
      if (v34 > 0x7F) {
        uint64_t v35 = sub_188A9CC(v34, v4 + 2);
      }
      else {
        uint64_t v35 = v4 + 3;
      }
      uint64_t v4 = sub_146A644(v33, v35, a3);
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v36 = *(void *)(a1 + 200);
    *(_WORD *)uint64_t v4 = 1730;
    unsigned int v37 = *(_DWORD *)(v36 + 28);
    v4[2] = v37;
    if (v37 > 0x7F) {
      unint64_t v38 = sub_188A9CC(v37, v4 + 2);
    }
    else {
      unint64_t v38 = v4 + 3;
    }
    uint64_t v4 = sub_1466BF0(v36, v38, a3);
  }
  int v39 = *(_DWORD *)(a1 + 104);
  if (v39)
  {
    for (int k = 0; k != v39; ++k)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v41 = *(void *)(*(void *)(a1 + 112) + 8 * k + 8);
      *(_WORD *)uint64_t v4 = 1738;
      unsigned int v42 = *(_DWORD *)(v41 + 20);
      v4[2] = v42;
      if (v42 > 0x7F) {
        uint64_t v43 = sub_188A9CC(v42, v4 + 2);
      }
      else {
        uint64_t v43 = v4 + 3;
      }
      uint64_t v4 = sub_146AC68(v41, v43, a3);
    }
  }
  if ((v6 & 0x200) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v44 = *(void *)(a1 + 232);
    *(_WORD *)uint64_t v4 = 1744;
    v4[2] = v44;
    if (v44 > 0x7F)
    {
      v4[2] = v44 | 0x80;
      unint64_t v45 = v44 >> 7;
      v4[3] = v44 >> 7;
      v4 += 4;
      if (v44 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v46 = v45 >> 14;
          v45 >>= 7;
          *v4++ = v45;
        }
        while (v46);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if ((v6 & 0x100) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v47 = *(int *)(a1 + 224);
    *(_WORD *)uint64_t v4 = 1752;
    v4[2] = v47;
    if (v47 > 0x7F)
    {
      v4[2] = v47 | 0x80;
      unint64_t v48 = v47 >> 7;
      v4[3] = v47 >> 7;
      v4 += 4;
      if (v47 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v49 = v48 >> 14;
          v48 >>= 7;
          *v4++ = v48;
        }
        while (v49);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  int v50 = *(_DWORD *)(a1 + 128);
  if (v50)
  {
    for (int m = 0; m != v50; ++m)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v52 = *(void *)(*(void *)(a1 + 136) + 8 * m + 8);
      *(_WORD *)uint64_t v4 = 1762;
      unsigned int v53 = *(_DWORD *)(v52 + 20);
      v4[2] = v53;
      if (v53 > 0x7F) {
        unint64_t v54 = sub_188A9CC(v53, v4 + 2);
      }
      else {
        unint64_t v54 = v4 + 3;
      }
      uint64_t v4 = sub_146B36C(v52, v54, a3);
    }
  }
  int v55 = *(_DWORD *)(a1 + 152);
  if (v55)
  {
    for (int n = 0; n != v55; ++n)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v57 = *(void *)(*(void *)(a1 + 160) + 8 * n + 8);
      *(_WORD *)uint64_t v4 = 1770;
      unsigned int v58 = *(_DWORD *)(v57 + 20);
      v4[2] = v58;
      if (v58 > 0x7F) {
        uint64_t v59 = sub_188A9CC(v58, v4 + 2);
      }
      else {
        uint64_t v59 = v4 + 3;
      }
      uint64_t v4 = sub_146C4FC(v57, v59, a3);
    }
  }
  uint64_t v60 = *(void *)(a1 + 8);
  if ((v60 & 1) == 0) {
    return v4;
  }
  unint64_t v62 = v60 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v62 + 31) < 0)
  {
    unint64_t v63 = *(void **)(v62 + 8);
    uint64_t v64 = *(void *)(v62 + 16);
  }
  else
  {
    unint64_t v63 = (void *)(v62 + 8);
    LODWORD(v64) = *(unsigned __int8 *)(v62 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v64)
  {
    uint64_t v65 = (int)v64;
    memcpy(v4, v63, (int)v64);
    v4 += v65;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v63, v64, v4);
}

uint64_t sub_146DAD4(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 4) != 0)
  {
    uint64_t v3 = sub_144EC20(*(void *)(a1 + 184));
    uint64_t v2 = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v4 = *(int *)(a1 + 32);
  uint64_t v5 = v2 + v4;
  uint64_t v6 = *(void *)(a1 + 40);
  if (v6) {
    uint64_t v7 = (uint64_t *)(v6 + 8);
  }
  else {
    uint64_t v7 = 0;
  }
  if (v4)
  {
    uint64_t v8 = 8 * v4;
    do
    {
      uint64_t v9 = *v7++;
      uint64_t v10 = sub_144EC20(v9);
      v5 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6);
      v8 -= 8;
    }
    while (v8);
  }
  uint64_t v11 = *(unsigned int *)(a1 + 56);
  uint64_t v12 = v5 + 2 * v11;
  if ((int)v11 >= 1)
  {
    uint64_t v13 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v14 = *v13++;
      uint64_t v15 = *(unsigned __int8 *)(v14 + 23);
      uint64_t v16 = *(void *)(v14 + 8);
      if ((v15 & 0x80u) == 0) {
        uint64_t v16 = v15;
      }
      v12 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6);
      --v11;
    }
    while (v11);
  }
  uint64_t v17 = *(int *)(a1 + 80);
  uint64_t v18 = v12 + 2 * v17;
  uint64_t v19 = *(void *)(a1 + 88);
  if (v19) {
    unsigned int v20 = (uint64_t *)(v19 + 8);
  }
  else {
    unsigned int v20 = 0;
  }
  if (v17)
  {
    uint64_t v21 = 8 * v17;
    do
    {
      uint64_t v22 = *v20++;
      uint64_t v23 = sub_146A7A4(v22);
      v18 += v23 + ((9 * (__clz(v23 | 1) ^ 0x1F) + 73) >> 6);
      v21 -= 8;
    }
    while (v21);
  }
  uint64_t v24 = *(int *)(a1 + 104);
  uint64_t v25 = v18 + 2 * v24;
  uint64_t v26 = *(void *)(a1 + 112);
  if (v26) {
    uint64_t v27 = (uint64_t *)(v26 + 8);
  }
  else {
    uint64_t v27 = 0;
  }
  if (v24)
  {
    uint64_t v28 = 8 * v24;
    do
    {
      uint64_t v29 = *v27++;
      uint64_t v30 = sub_146AE58(v29);
      v25 += v30 + ((9 * (__clz(v30 | 1) ^ 0x1F) + 73) >> 6);
      v28 -= 8;
    }
    while (v28);
  }
  uint64_t v31 = *(int *)(a1 + 128);
  uint64_t v32 = v25 + 2 * v31;
  uint64_t v33 = *(void *)(a1 + 136);
  if (v33) {
    unsigned int v34 = (uint64_t *)(v33 + 8);
  }
  else {
    unsigned int v34 = 0;
  }
  if (v31)
  {
    uint64_t v35 = 8 * v31;
    do
    {
      uint64_t v36 = *v34++;
      uint64_t v37 = sub_146B458(v36);
      v32 += v37 + ((9 * (__clz(v37 | 1) ^ 0x1F) + 73) >> 6);
      v35 -= 8;
    }
    while (v35);
  }
  uint64_t v38 = *(int *)(a1 + 152);
  uint64_t v39 = v32 + 2 * v38;
  uint64_t v40 = *(void *)(a1 + 160);
  if (v40) {
    uint64_t v41 = (uint64_t *)(v40 + 8);
  }
  else {
    uint64_t v41 = 0;
  }
  if (v38)
  {
    uint64_t v42 = 8 * v38;
    do
    {
      uint64_t v43 = *v41++;
      uint64_t v44 = sub_146C664(v43);
      v39 += v44 + ((9 * (__clz(v44 | 1) ^ 0x1F) + 73) >> 6);
      v42 -= 8;
    }
    while (v42);
  }
  int v45 = *(_DWORD *)(a1 + 16);
  if ((v45 & 3) != 0)
  {
    if (v45)
    {
      unint64_t v46 = *(void *)(a1 + 168) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v47 = *(unsigned __int8 *)(v46 + 23);
      uint64_t v48 = *(void *)(v46 + 8);
      if ((v47 & 0x80u) == 0) {
        uint64_t v48 = v47;
      }
      v39 += v48 + ((9 * (__clz(v48 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v45 & 2) != 0)
    {
      unint64_t v49 = *(void *)(a1 + 176) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v50 = *(unsigned __int8 *)(v49 + 23);
      uint64_t v51 = *(void *)(v49 + 8);
      if ((v50 & 0x80u) == 0) {
        uint64_t v51 = v50;
      }
      v39 += v51 + ((9 * (__clz(v51 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
  }
  if ((v45 & 0xF8) != 0)
  {
    if ((v45 & 8) != 0)
    {
      uint64_t v52 = sub_15B956C(*(void *)(a1 + 192));
      v39 += v52 + ((9 * (__clz(v52 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    if ((v45 & 0x10) != 0)
    {
      uint64_t v53 = sub_1468738(*(void *)(a1 + 200));
      v39 += v53 + ((9 * (__clz(v53 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    if ((v45 & 0x20) != 0) {
      v39 += 9;
    }
    if ((v45 & 0x40) != 0) {
      v39 += ((9 * (__clz(*(_DWORD *)(a1 + 216) | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v45 & 0x80) != 0) {
      v39 += ((9 * (__clz(*(_DWORD *)(a1 + 220) | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  if ((v45 & 0x300) != 0)
  {
    if ((v45 & 0x100) != 0)
    {
      int v54 = *(_DWORD *)(a1 + 224);
      uint64_t v55 = ((9 * (__clz(v54 | 1) ^ 0x1F) + 73) >> 6) + 2;
      if (v54 >= 0) {
        uint64_t v56 = v55;
      }
      else {
        uint64_t v56 = 12;
      }
      v39 += v56;
    }
    if ((v45 & 0x200) != 0) {
      v39 += ((9 * (__clz(*(void *)(a1 + 232) | 1) ^ 0x3F) + 73) >> 6) + 2;
    }
  }
  uint64_t v57 = *(void *)(a1 + 8);
  if (v57)
  {
    unint64_t v59 = v57 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v59 + 31) < 0) {
      uint64_t v60 = *(void *)(v59 + 16);
    }
    else {
      uint64_t v60 = *(unsigned __int8 *)(v59 + 31);
    }
    v39 += v60;
  }
  *(_DWORD *)(a1 + 20) = v39;
  return v39;
}

void *sub_146DF08@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.PlaceResult");
}

uint64_t sub_146DF18(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)a1 = off_24B5F08;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v5 = (uint64_t *)(a1 + 24);
  *(_DWORD *)(a1 + 44) = 0;
  *(void *)(a1 + 28) = 0;
  *(void *)(a1 + 36) = 0;
  *(void *)(a1 + 20) = 0;
  int v6 = *(_DWORD *)(a2 + 32);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 40);
    uint64_t v8 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_14944B0(v5, v8, (uint64_t *)(v7 + 8), v6, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v9 = *(_DWORD *)(a1 + 32) + v6;
    *(_DWORD *)(a1 + 32) = v9;
    uint64_t v10 = *(int **)(a1 + 40);
    if (*v10 < v9) {
      *uint64_t v10 = v9;
    }
  }
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  int v11 = *(_DWORD *)(a2 + 56);
  if (v11)
  {
    uint64_t v12 = *(void *)(a2 + 64);
    uint64_t v13 = (std::string **)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_188FB98(a1 + 48, v13, (const std::string **)(v12 + 8), v11, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v14 = *(_DWORD *)(a1 + 56) + v11;
    *(_DWORD *)(a1 + 56) = v14;
    uint64_t v15 = *(int **)(a1 + 64);
    if (*v15 < v14) {
      *uint64_t v15 = v14;
    }
  }
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0;
  int v16 = *(_DWORD *)(a2 + 80);
  if (v16)
  {
    uint64_t v17 = *(void *)(a2 + 88);
    uint64_t v18 = (uint64_t *)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_149453C((uint64_t *)(a1 + 72), v18, (uint64_t *)(v17 + 8), v16, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v19 = *(_DWORD *)(a1 + 80) + v16;
    *(_DWORD *)(a1 + 80) = v19;
    unsigned int v20 = *(int **)(a1 + 88);
    if (*v20 < v19) {
      *unsigned int v20 = v19;
    }
  }
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 104) = 0;
  *(void *)(a1 + 112) = 0;
  int v21 = *(_DWORD *)(a2 + 104);
  if (v21)
  {
    uint64_t v22 = *(void *)(a2 + 112);
    uint64_t v23 = (std::string **)sub_188CCE4(a1 + 96, *(_DWORD *)(a2 + 104));
    sub_122BC08((std::string *)(a1 + 96), v23, (uint64_t *)(v22 + 8), v21, **(_DWORD **)(a1 + 112) - *(_DWORD *)(a1 + 104));
    int v24 = *(_DWORD *)(a1 + 104) + v21;
    *(_DWORD *)(a1 + 104) = v24;
    uint64_t v25 = *(int **)(a1 + 112);
    if (*v25 < v24) {
      *uint64_t v25 = v24;
    }
  }
  uint64_t v26 = *(void *)(a2 + 8);
  if (v26) {
    sub_188B4F8(v4, (v26 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 120) = &qword_2550250;
  int v27 = *(_DWORD *)(a2 + 16);
  if (v27)
  {
    uint64_t v28 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v28 = (uint64_t *)*v28;
    }
    sub_1881DF4((std::string **)(a1 + 120), (long long *)(*(void *)(a2 + 120) & 0xFFFFFFFFFFFFFFFELL), v28);
    int v27 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 128) = &qword_2550250;
  if ((v27 & 2) != 0)
  {
    uint64_t v29 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v29 = (uint64_t *)*v29;
    }
    sub_1881DF4((std::string **)(a1 + 128), (long long *)(*(void *)(a2 + 128) & 0xFFFFFFFFFFFFFFFELL), v29);
    int v27 = *(_DWORD *)(a2 + 16);
  }
  if ((v27 & 4) != 0) {
    operator new();
  }
  *(void *)(a1 + 136) = 0;
  long long v30 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 156) = *(_OWORD *)(a2 + 156);
  *(_OWORD *)(a1 + 144) = v30;
  return a1;
}

void sub_146E1FC()
{
}

uint64_t sub_146E298(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_12;
    }
  }
  else if (v4)
  {
    goto LABEL_12;
  }
  uint64_t v5 = (void ***)(a1 + 120);
  if (*(uint64_t **)(a1 + 120) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 128) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 128));
  }
  if ((uint64_t (***)())a1 != &off_25398D0)
  {
    uint64_t v6 = *(void *)(a1 + 136);
    if (v6)
    {
      sub_15B1678(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_12:
  sub_122BB0C((void *)(a1 + 96));
  sub_149394C((void *)(a1 + 72));
  sub_1889DE8((void *)(a1 + 48));
  sub_14938CC((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_146E3AC(uint64_t a1)
{
  sub_146E298(a1);

  operator delete();
}

uint64_t sub_146E3E4(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unint64_t v79 = a2;
  int v5 = 0;
  if ((sub_11947B8((uint64_t)a3, (char **)v79, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v7 = (void *)(a1 + 8);
    uint64_t v8 = (uint64_t **)(a1 + 48);
    while (1)
    {
      int v9 = (unsigned __int8 *)(*(void *)v79 + 1);
      unsigned int v10 = **(unsigned char **)v79;
      if ((char)**(unsigned char **)v79 < 0)
      {
        unsigned int v11 = v10 + (*v9 << 7);
        unsigned int v10 = v11 - 128;
        if ((char)*v9 < 0)
        {
          int v9 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v79, v11 - 128);
          unsigned int v10 = v12;
        }
        else
        {
          int v9 = (unsigned __int8 *)(*(void *)v79 + 2);
        }
      }
      *(void *)unint64_t v79 = v9;
      switch(v10 >> 3)
      {
        case 1u:
          if (v10 != 8) {
            goto LABEL_108;
          }
          uint64_t v13 = (char *)(v9 + 1);
          unint64_t v14 = *v9;
          if (((char)*v9 & 0x80000000) == 0) {
            goto LABEL_13;
          }
          int v15 = *v13;
          int v16 = v14 + (v15 << 7);
          unint64_t v14 = (v16 - 128);
          if (v15 < 0)
          {
            *(void *)unint64_t v79 = sub_188C138((uint64_t)v9, (v16 - 128));
            if (!*(void *)v79) {
              goto LABEL_146;
            }
            unint64_t v14 = v68;
          }
          else
          {
            uint64_t v13 = (char *)(v9 + 2);
LABEL_13:
            *(void *)unint64_t v79 = v13;
          }
          if (v14 <= 0x3C && ((1 << v14) & 0x1004010040100027) != 0)
          {
            *(_DWORD *)(a1 + 16) |= 8u;
            *(_DWORD *)(a1 + 144) = v14;
            goto LABEL_116;
          }
          if (*v7) {
            uint64_t v77 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v77 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          int v78 = 1;
          goto LABEL_133;
        case 2u:
          if (v10 != 18) {
            goto LABEL_108;
          }
          int v21 = v9 - 1;
          while (1)
          {
            uint64_t v22 = v21 + 1;
            *(void *)unint64_t v79 = v21 + 1;
            uint64_t v23 = *(_DWORD **)(a1 + 40);
            if (v23 && (uint64_t v24 = *(int *)(a1 + 32), (int)v24 < *v23))
            {
              *(_DWORD *)(a1 + 32) = v24 + 1;
              uint64_t v25 = *(void *)&v23[2 * v24 + 2];
            }
            else
            {
              sub_1479294(*(void *)(a1 + 24));
              uint64_t v25 = sub_188CDC8(a1 + 24, v26);
              uint64_t v22 = *(unsigned __int8 **)v79;
            }
            int v21 = (unsigned __int8 *)sub_12C8D4C(a3, v25, v22);
            *(void *)unint64_t v79 = v21;
            if (!v21) {
              goto LABEL_146;
            }
            if (*(void *)a3 <= (unint64_t)v21 || *v21 != 18) {
              goto LABEL_116;
            }
          }
        case 3u:
          if (v10 != 26) {
            goto LABEL_108;
          }
          *(_DWORD *)(a1 + 16) |= 4u;
          uint64_t v27 = *(void *)(a1 + 136);
          if (!v27)
          {
            uint64_t v28 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v7) {
              uint64_t v28 = (void *)*v28;
            }
            uint64_t v27 = sub_15C19EC((uint64_t)v28);
            *(void *)(a1 + 136) = v27;
            int v9 = *(unsigned __int8 **)v79;
          }
          uint64_t v29 = sub_11E1C60(a3, v27, v9);
          goto LABEL_115;
        case 4u:
          if (v10 != 34) {
            goto LABEL_108;
          }
          long long v30 = (const std::string::value_type *)(v9 - 1);
          while (1)
          {
            uint64_t v31 = (char *)(v30 + 1);
            *(void *)unint64_t v79 = v30 + 1;
            uint64_t v32 = *(_DWORD **)(a1 + 64);
            if (v32 && (uint64_t v33 = *(int *)(a1 + 56), (int)v33 < *v32))
            {
              *(_DWORD *)(a1 + 56) = v33 + 1;
              unsigned int v34 = *(std::string **)&v32[2 * v33 + 2];
            }
            else
            {
              if (!*v8) {
                operator new();
              }
              *uint64_t v36 = v35;
              v36[1] = sub_3A6EDC;
              *uint64_t v35 = 0;
              v35[1] = 0;
              v35[2] = 0;
              unsigned int v34 = (std::string *)sub_188CDC8(a1 + 48, (uint64_t)v35);
              uint64_t v31 = *(char **)v79;
            }
            long long v30 = sub_188C244(v34, v31, (uint64_t)a3);
            *(void *)unint64_t v79 = v30;
            if (!v30) {
              goto LABEL_146;
            }
            if (*(void *)a3 <= (unint64_t)v30 || *v30 != 34) {
              goto LABEL_116;
            }
          }
        case 5u:
          if (v10 != 40) {
            goto LABEL_108;
          }
          v5 |= 0x10u;
          uint64_t v38 = (char *)(v9 + 1);
          LODWORD(v37) = *v9;
          if ((v37 & 0x80) == 0) {
            goto LABEL_59;
          }
          int v39 = *v38;
          uint64_t v37 = v37 + (v39 << 7) - 128;
          if (v39 < 0)
          {
            uint64_t v69 = sub_188C138((uint64_t)v9, v37);
            *(void *)unint64_t v79 = v69;
            *(_DWORD *)(a1 + 148) = v70;
            if (!v69) {
              goto LABEL_146;
            }
          }
          else
          {
            uint64_t v38 = (char *)(v9 + 2);
LABEL_59:
            *(void *)unint64_t v79 = v38;
            *(_DWORD *)(a1 + 148) = v37;
          }
          goto LABEL_116;
        case 6u:
          if (v10 != 48) {
            goto LABEL_108;
          }
          v5 |= 0x20u;
          uint64_t v40 = (char *)(v9 + 1);
          uint64_t v41 = *v9;
          if (((char)*v9 & 0x80000000) == 0) {
            goto LABEL_64;
          }
          int v42 = *v40;
          uint64_t v41 = v41 + (v42 << 7) - 128;
          if (v42 < 0)
          {
            uint64_t v71 = sub_188C138((uint64_t)v9, v41);
            *(void *)unint64_t v79 = v71;
            *(unsigned char *)(a1 + 152) = v72 != 0;
            if (!v71) {
              goto LABEL_146;
            }
          }
          else
          {
            uint64_t v40 = (char *)(v9 + 2);
LABEL_64:
            *(void *)unint64_t v79 = v40;
            *(unsigned char *)(a1 + 152) = v41 != 0;
          }
          goto LABEL_116;
        case 7u:
          if (v10 != 58) {
            goto LABEL_108;
          }
          uint64_t v43 = v9 - 1;
          while (1)
          {
            uint64_t v44 = v43 + 1;
            *(void *)unint64_t v79 = v43 + 1;
            int v45 = *(_DWORD **)(a1 + 88);
            if (v45 && (uint64_t v46 = *(int *)(a1 + 80), (int)v46 < *v45))
            {
              *(_DWORD *)(a1 + 80) = v46 + 1;
              uint64_t v47 = *(void *)&v45[2 * v46 + 2];
            }
            else
            {
              uint64_t v48 = sub_14798D4(*(void *)(a1 + 72));
              uint64_t v47 = sub_188CDC8(a1 + 72, (uint64_t)v48);
              uint64_t v44 = *(unsigned __int8 **)v79;
            }
            uint64_t v43 = (unsigned __int8 *)sub_146EC5C(a3, v47, v44);
            *(void *)unint64_t v79 = v43;
            if (!v43) {
              goto LABEL_146;
            }
            if (*(void *)a3 <= (unint64_t)v43 || *v43 != 58) {
              goto LABEL_116;
            }
          }
        case 8u:
          goto LABEL_108;
        case 9u:
          if (v10 != 74) {
            goto LABEL_108;
          }
          *(_DWORD *)(a1 + 16) |= 1u;
          uint64_t v49 = *(void *)(a1 + 8);
          uint64_t v50 = (uint64_t *)(v49 & 0xFFFFFFFFFFFFFFFCLL);
          if (v49) {
            uint64_t v50 = (uint64_t *)*v50;
          }
          uint64_t v51 = (void *)(a1 + 120);
LABEL_102:
          unint64_t v62 = (std::string *)sub_1880F84(v51, v50);
          uint64_t v29 = (void *)sub_188C244(v62, *(char **)v79, (uint64_t)a3);
          goto LABEL_115;
        case 0xAu:
          if (v10 == 82)
          {
            uint64_t v52 = v9 - 1;
            while (1)
            {
              uint64_t v53 = v52 + 1;
              *(void *)unint64_t v79 = v52 + 1;
              int v54 = *(_DWORD **)(a1 + 112);
              if (v54 && (uint64_t v55 = *(int *)(a1 + 104), (int)v55 < *v54))
              {
                *(_DWORD *)(a1 + 104) = v55 + 1;
                uint64_t v56 = *(void *)&v54[2 * v55 + 2];
              }
              else
              {
                uint64_t v57 = sub_1478FB4(*(void *)(a1 + 96));
                uint64_t v56 = sub_188CDC8(a1 + 96, (uint64_t)v57);
                uint64_t v53 = *(unsigned __int8 **)v79;
              }
              uint64_t v52 = (unsigned __int8 *)sub_11EAB7C(a3, v56, v53);
              *(void *)unint64_t v79 = v52;
              if (!v52) {
                goto LABEL_146;
              }
              if (*(void *)a3 <= (unint64_t)v52 || *v52 != 82) {
                goto LABEL_116;
              }
            }
          }
LABEL_108:
          if (v10) {
            BOOL v66 = (v10 & 7) == 4;
          }
          else {
            BOOL v66 = 1;
          }
          if (v66)
          {
            if (v9)
            {
              a3[10].i32[0] = v10 - 1;
              goto LABEL_2;
            }
LABEL_146:
            *(void *)unint64_t v79 = 0;
            goto LABEL_2;
          }
          if (*v7)
          {
            uint64_t v67 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v67 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            int v9 = *(unsigned __int8 **)v79;
          }
          uint64_t v29 = sub_1885AC0(v10, v67, (char *)v9, a3);
LABEL_115:
          *(void *)unint64_t v79 = v29;
          if (!v29) {
            goto LABEL_146;
          }
LABEL_116:
          if (sub_11947B8((uint64_t)a3, (char **)v79, a3[11].i32[1])) {
            goto LABEL_2;
          }
          break;
        default:
          switch(v10 >> 3)
          {
            case 'd':
              if (v10 != 32) {
                goto LABEL_108;
              }
              uint64_t v18 = (char *)(v9 + 1);
              unint64_t v14 = *v9;
              if (((char)*v9 & 0x80000000) == 0) {
                goto LABEL_24;
              }
              int v19 = *v18;
              int v20 = v14 + (v19 << 7);
              unint64_t v14 = (v20 - 128);
              if (v19 < 0)
              {
                *(void *)unint64_t v79 = sub_188C138((uint64_t)v9, (v20 - 128));
                if (!*(void *)v79) {
                  goto LABEL_146;
                }
                unint64_t v14 = v73;
              }
              else
              {
                uint64_t v18 = (char *)(v9 + 2);
LABEL_24:
                *(void *)unint64_t v79 = v18;
              }
              if ((v14 - 1) <= 3)
              {
                *(_DWORD *)(a1 + 16) |= 0x200u;
                *(_DWORD *)(a1 + 168) = v14;
                goto LABEL_116;
              }
              if (*v7) {
                uint64_t v77 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
              }
              else {
                uint64_t v77 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              }
              int v78 = 100;
              goto LABEL_133;
            case 'e':
              if (v10 != 41) {
                goto LABEL_108;
              }
              v5 |= 0x100u;
              *(void *)(a1 + 160) = *(void *)v9;
              *(void *)unint64_t v79 = v9 + 8;
              goto LABEL_116;
            case 'f':
              if (v10 != 48) {
                goto LABEL_108;
              }
              unsigned int v58 = (char *)(v9 + 1);
              unint64_t v14 = *v9;
              if (((char)*v9 & 0x80000000) == 0) {
                goto LABEL_95;
              }
              int v59 = *v58;
              int v60 = v14 + (v59 << 7);
              unint64_t v14 = (v60 - 128);
              if (v59 < 0)
              {
                *(void *)unint64_t v79 = sub_188C138((uint64_t)v9, (v60 - 128));
                if (!*(void *)v79) {
                  goto LABEL_146;
                }
                unint64_t v14 = v74;
              }
              else
              {
                unsigned int v58 = (char *)(v9 + 2);
LABEL_95:
                *(void *)unint64_t v79 = v58;
              }
              if (v14 > 3)
              {
                if (*v7) {
                  uint64_t v77 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
                }
                else {
                  uint64_t v77 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
                }
                int v78 = 102;
LABEL_133:
                sub_188C020(v78, v14, v77);
              }
              else
              {
                *(_DWORD *)(a1 + 16) |= 0x80u;
                *(_DWORD *)(a1 + 156) = v14;
              }
              goto LABEL_116;
            case 'g':
              if (v10 != 58) {
                goto LABEL_108;
              }
              *(_DWORD *)(a1 + 16) |= 2u;
              uint64_t v61 = *(void *)(a1 + 8);
              uint64_t v50 = (uint64_t *)(v61 & 0xFFFFFFFFFFFFFFFCLL);
              if (v61) {
                uint64_t v50 = (uint64_t *)*v50;
              }
              uint64_t v51 = (void *)(a1 + 128);
              goto LABEL_102;
            case 'h':
              if (v10 != 64) {
                goto LABEL_108;
              }
              v5 |= 0x40u;
              unint64_t v63 = (char *)(v9 + 1);
              uint64_t v64 = *v9;
              if (((char)*v9 & 0x80000000) == 0) {
                goto LABEL_107;
              }
              int v65 = *v63;
              uint64_t v64 = v64 + (v65 << 7) - 128;
              if (v65 < 0)
              {
                uint64_t v75 = sub_188C138((uint64_t)v9, v64);
                *(void *)unint64_t v79 = v75;
                *(unsigned char *)(a1 + 153) = v76 != 0;
                if (!v75) {
                  goto LABEL_146;
                }
              }
              else
              {
                unint64_t v63 = (char *)(v9 + 2);
LABEL_107:
                *(void *)unint64_t v79 = v63;
                *(unsigned char *)(a1 + 153) = v64 != 0;
              }
              break;
            default:
              goto LABEL_108;
          }
          goto LABEL_116;
      }
    }
  }
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return *(void *)v79;
}

uint64_t sub_146EC5C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1476A9C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_146ECEC(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 8) != 0)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 144);
    char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v10 = *(_DWORD *)(a1 + 32);
  if (v10)
  {
    for (int i = 0; i != v10; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v12 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      char *v4 = 18;
      unsigned int v13 = *(_DWORD *)(v12 + 20);
      v4[1] = v13;
      if (v13 > 0x7F) {
        unint64_t v14 = sub_188A9CC(v13, v4 + 1);
      }
      else {
        unint64_t v14 = v4 + 2;
      }
      uint64_t v4 = sub_146D340(v12, (unint64_t)v14, a3);
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v15 = *(void *)(a1 + 136);
    char *v4 = 26;
    unsigned int v16 = *(_DWORD *)(v15 + 20);
    v4[1] = v16;
    if (v16 > 0x7F) {
      uint64_t v17 = sub_188A9CC(v16, v4 + 1);
    }
    else {
      uint64_t v17 = v4 + 2;
    }
    uint64_t v4 = sub_15B1A68(v15, (unint64_t)v17, a3);
  }
  uint64_t v18 = *(unsigned int *)(a1 + 56);
  if ((int)v18 >= 1)
  {
    uint64_t v19 = 0;
    uint64_t v20 = 8 * v18;
    do
    {
      int v21 = *(void **)(*(void *)(a1 + 64) + v19 + 8);
      if (*((char *)v21 + 23) < 0)
      {
        int64_t v22 = v21[1];
        if (v22 > 127) {
          goto LABEL_34;
        }
      }
      else
      {
        int64_t v22 = *((unsigned __int8 *)v21 + 23);
      }
      if ((uint64_t)(*a3 - (void)v4 + 14) >= v22)
      {
        char *v4 = 34;
        v4[1] = v22;
        if (*((char *)v21 + 23) < 0) {
          int v21 = (void *)*v21;
        }
        uint64_t v23 = v4 + 2;
        memcpy(v23, v21, v22);
        uint64_t v4 = &v23[v22];
        goto LABEL_32;
      }
LABEL_34:
      uint64_t v4 = (char *)sub_188A868(a3, 4, (uint64_t)v21, v4);
LABEL_32:
      v19 += 8;
    }
    while (v20 != v19);
  }
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v24 = *(int *)(a1 + 148);
    char *v4 = 40;
    v4[1] = v24;
    if (v24 > 0x7F)
    {
      v4[1] = v24 | 0x80;
      unint64_t v25 = v24 >> 7;
      v4[2] = v24 >> 7;
      v4 += 3;
      if (v24 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v26 = v25 >> 14;
          v25 >>= 7;
          *v4++ = v25;
        }
        while (v26);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v27 = *(unsigned char *)(a1 + 152);
    char *v4 = 48;
    v4[1] = v27;
    v4 += 2;
  }
  int v28 = *(_DWORD *)(a1 + 80);
  if (v28)
  {
    for (int j = 0; j != v28; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v30 = *(void *)(*(void *)(a1 + 88) + 8 * j + 8);
      char *v4 = 58;
      unsigned int v31 = *(_DWORD *)(v30 + 20);
      v4[1] = v31;
      if (v31 > 0x7F) {
        uint64_t v32 = sub_188A9CC(v31, v4 + 1);
      }
      else {
        uint64_t v32 = v4 + 2;
      }
      uint64_t v4 = sub_1476E80(v30, v32, a3);
    }
  }
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 9, (const void **)(*(void *)(a1 + 120) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  int v33 = *(_DWORD *)(a1 + 104);
  if (v33)
  {
    for (int k = 0; k != v33; ++k)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v35 = *(void *)(*(void *)(a1 + 112) + 8 * k + 8);
      char *v4 = 82;
      unsigned int v36 = *(_DWORD *)(v35 + 20);
      v4[1] = v36;
      if (v36 > 0x7F) {
        uint64_t v37 = sub_188A9CC(v36, v4 + 1);
      }
      else {
        uint64_t v37 = v4 + 2;
      }
      uint64_t v4 = sub_146A644(v35, v37, a3);
    }
  }
  if ((v6 & 0x200) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v38 = *(int *)(a1 + 168);
    *(_WORD *)uint64_t v4 = 1696;
    v4[2] = v38;
    if (v38 > 0x7F)
    {
      v4[2] = v38 | 0x80;
      unint64_t v39 = v38 >> 7;
      v4[3] = v38 >> 7;
      v4 += 4;
      if (v38 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v40 = v39 >> 14;
          v39 >>= 7;
          *v4++ = v39;
        }
        while (v40);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if ((v6 & 0x100) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v41 = *(void *)(a1 + 160);
    *(_WORD *)uint64_t v4 = 1705;
    *(void *)(v4 + 2) = v41;
    v4 += 10;
  }
  if ((v6 & 0x80) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v42 = *(int *)(a1 + 156);
    *(_WORD *)uint64_t v4 = 1712;
    v4[2] = v42;
    if (v42 > 0x7F)
    {
      v4[2] = v42 | 0x80;
      unint64_t v43 = v42 >> 7;
      v4[3] = v42 >> 7;
      v4 += 4;
      if (v42 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v44 = v43 >> 14;
          v43 >>= 7;
          *v4++ = v43;
        }
        while (v44);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if ((v6 & 2) != 0) {
    uint64_t v4 = sub_117A0AC(a3, 103, (const void **)(*(void *)(a1 + 128) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  if ((v6 & 0x40) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v45 = *(unsigned char *)(a1 + 153);
    *(_WORD *)uint64_t v4 = 1728;
    v4[2] = v45;
    v4 += 3;
  }
  uint64_t v46 = *(void *)(a1 + 8);
  if ((v46 & 1) == 0) {
    return v4;
  }
  unint64_t v48 = v46 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v48 + 31) < 0)
  {
    uint64_t v49 = *(void **)(v48 + 8);
    uint64_t v50 = *(void *)(v48 + 16);
  }
  else
  {
    uint64_t v49 = (void *)(v48 + 8);
    LODWORD(v50) = *(unsigned __int8 *)(v48 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v50)
  {
    uint64_t v51 = (int)v50;
    memcpy(v4, v49, (int)v50);
    v4 += v51;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v49, v50, v4);
}

uint64_t sub_146F320(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 8) != 0)
  {
    int v3 = *(_DWORD *)(a1 + 144);
    uint64_t v4 = (9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6;
    if (v3 >= 0) {
      uint64_t v5 = v4;
    }
    else {
      uint64_t v5 = 10;
    }
    uint64_t v2 = v5 + 1;
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v6 = *(int *)(a1 + 32);
  uint64_t v7 = v2 + v6;
  uint64_t v8 = *(void *)(a1 + 40);
  if (v8) {
    unint64_t v9 = (uint64_t *)(v8 + 8);
  }
  else {
    unint64_t v9 = 0;
  }
  if (v6)
  {
    uint64_t v10 = 8 * v6;
    do
    {
      uint64_t v11 = *v9++;
      uint64_t v12 = sub_146DAD4(v11);
      v7 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6);
      v10 -= 8;
    }
    while (v10);
  }
  uint64_t v13 = *(unsigned int *)(a1 + 56);
  uint64_t v14 = v7 + v13;
  if ((int)v13 >= 1)
  {
    uint64_t v15 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v16 = *v15++;
      uint64_t v17 = *(unsigned __int8 *)(v16 + 23);
      uint64_t v18 = *(void *)(v16 + 8);
      if ((v17 & 0x80u) == 0) {
        uint64_t v18 = v17;
      }
      v14 += v18 + ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6);
      --v13;
    }
    while (v13);
  }
  uint64_t v19 = *(int *)(a1 + 80);
  uint64_t v20 = v14 + v19;
  uint64_t v21 = *(void *)(a1 + 88);
  if (v21) {
    int64_t v22 = (uint64_t *)(v21 + 8);
  }
  else {
    int64_t v22 = 0;
  }
  if (v19)
  {
    uint64_t v23 = 8 * v19;
    do
    {
      uint64_t v24 = *v22++;
      uint64_t v25 = sub_14770A8(v24);
      v20 += v25 + ((9 * (__clz(v25 | 1) ^ 0x1F) + 73) >> 6);
      v23 -= 8;
    }
    while (v23);
  }
  uint64_t v26 = *(int *)(a1 + 104);
  uint64_t v27 = v20 + v26;
  uint64_t v28 = *(void *)(a1 + 112);
  if (v28) {
    uint64_t v29 = (uint64_t *)(v28 + 8);
  }
  else {
    uint64_t v29 = 0;
  }
  if (v26)
  {
    uint64_t v30 = 8 * v26;
    do
    {
      uint64_t v31 = *v29++;
      uint64_t v32 = sub_146A7A4(v31);
      v27 += v32 + ((9 * (__clz(v32 | 1) ^ 0x1F) + 73) >> 6);
      v30 -= 8;
    }
    while (v30);
  }
  int v33 = *(_DWORD *)(a1 + 16);
  if ((v33 & 7) != 0)
  {
    if (v33)
    {
      unint64_t v47 = *(void *)(a1 + 120) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v48 = *(unsigned __int8 *)(v47 + 23);
      uint64_t v49 = *(void *)(v47 + 8);
      if ((v48 & 0x80u) == 0) {
        uint64_t v49 = v48;
      }
      v27 += v49 + ((9 * (__clz(v49 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v33 & 2) == 0)
      {
LABEL_33:
        if ((v33 & 4) == 0) {
          goto LABEL_35;
        }
        goto LABEL_34;
      }
    }
    else if ((v33 & 2) == 0)
    {
      goto LABEL_33;
    }
    unint64_t v50 = *(void *)(a1 + 128) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v51 = *(unsigned __int8 *)(v50 + 23);
    uint64_t v52 = *(void *)(v50 + 8);
    if ((v51 & 0x80u) == 0) {
      uint64_t v52 = v51;
    }
    v27 += v52 + ((9 * (__clz(v52 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v33 & 4) != 0)
    {
LABEL_34:
      uint64_t v34 = sub_15B1D1C(*(void *)(a1 + 136));
      v27 += v34 + ((9 * (__clz(v34 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
LABEL_35:
  if ((v33 & 0xF0) != 0)
  {
    if ((v33 & 0x10) != 0)
    {
      int v35 = *(_DWORD *)(a1 + 148);
      uint64_t v36 = ((9 * (__clz(v35 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if (v35 >= 0) {
        uint64_t v37 = v36;
      }
      else {
        uint64_t v37 = 11;
      }
      v27 += v37;
    }
    uint64_t v38 = v27 + 2;
    if ((v33 & 0x20) == 0) {
      uint64_t v38 = v27;
    }
    if ((v33 & 0x40) != 0) {
      uint64_t v27 = v38 + 3;
    }
    else {
      uint64_t v27 = v38;
    }
    if ((v33 & 0x80) != 0)
    {
      int v39 = *(_DWORD *)(a1 + 156);
      uint64_t v40 = ((9 * (__clz(v39 | 1) ^ 0x1F) + 73) >> 6) + 2;
      if (v39 >= 0) {
        uint64_t v41 = v40;
      }
      else {
        uint64_t v41 = 12;
      }
      v27 += v41;
    }
  }
  if ((v33 & 0x300) != 0)
  {
    if ((v33 & 0x100) != 0) {
      v27 += 10;
    }
    if ((v33 & 0x200) != 0)
    {
      int v42 = *(_DWORD *)(a1 + 168);
      uint64_t v43 = ((9 * (__clz(v42 | 1) ^ 0x1F) + 73) >> 6) + 2;
      if (v42 >= 0) {
        uint64_t v44 = v43;
      }
      else {
        uint64_t v44 = 12;
      }
      v27 += v44;
    }
  }
  uint64_t v45 = *(void *)(a1 + 8);
  if (v45)
  {
    unint64_t v53 = v45 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v53 + 31) < 0) {
      uint64_t v54 = *(void *)(v53 + 16);
    }
    else {
      uint64_t v54 = *(unsigned __int8 *)(v53 + 31);
    }
    v27 += v54;
  }
  *(_DWORD *)(a1 + 20) = v27;
  return v27;
}

uint64_t sub_146F6A0(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 8);
  if ((int)v1 >= 1)
  {
    do
    {
      uint64_t v3 = v1--;
      uint64_t v4 = *(void *)(*(void *)(a1 + 16) + 8 * v1 + 8);
      uint64_t v5 = *(unsigned int *)(v4 + 32);
      while ((int)v5 >= 1)
      {
        uint64_t v6 = v5 - 1;
        char v7 = sub_1476850(*(void *)(*(void *)(v4 + 40) + 8 * v5));
        uint64_t v5 = v6;
        if ((v7 & 1) == 0) {
          return 0;
        }
      }
    }
    while (v3 >= 2);
  }
  return 1;
}

void *sub_146F72C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.PlaceSearchResponse");
}

uint64_t sub_146F73C(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  *(void *)(a1 + 8) = v5;
  *(void *)a1 = off_24B5F88;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = a2;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  return a1;
}

void sub_146F7B0(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_146F7E0(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = a1 + 16;
  *(void *)a1 = off_24B5F88;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  uint64_t v6 = (uint64_t *)(a1 + 48);
  *(_DWORD *)(a1 + 68) = 0;
  *(void *)(a1 + 52) = 0;
  *(void *)(a1 + 60) = 0;
  *(void *)(a1 + 44) = 0;
  int v7 = *(_DWORD *)(a2 + 56);
  if (v7)
  {
    uint64_t v8 = *(void *)(a2 + 64);
    unint64_t v9 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_10E4FFC(v6, v9, (uint64_t *)(v8 + 8), v7, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v10 = *(_DWORD *)(a1 + 56) + v7;
    *(_DWORD *)(a1 + 56) = v10;
    uint64_t v11 = *(int **)(a1 + 64);
    if (*v11 < v10) {
      *uint64_t v11 = v10;
    }
  }
  uint64_t v12 = *(void *)(a2 + 8);
  if (v12) {
    sub_188B4F8(v4, (v12 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v5, a2 + 16);
  int v13 = *(_DWORD *)(a2 + 40);
  if (v13) {
    operator new();
  }
  *(void *)(a1 + 72) = 0;
  if ((v13 & 2) != 0) {
    operator new();
  }
  *(void *)(a1 + 80) = 0;
  return a1;
}

void sub_146F960()
{
}

uint64_t sub_146F9E4(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  if ((uint64_t (***)())a1 != &off_2539980)
  {
    uint64_t v5 = *(void **)(a1 + 72);
    if (v5)
    {
      sub_1463C50(v5);
      operator delete();
    }
    uint64_t v6 = *(void *)(a1 + 80);
    if (v6)
    {
      sub_15B3DFC(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  sub_11DB7D4((void *)(a1 + 48));
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_146FAC8(uint64_t a1)
{
  sub_146F9E4(a1);

  operator delete();
}

char *sub_146FB00(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v27 = a2;
  if (sub_11947B8((uint64_t)a3, &v27, a3[11].i32[1])) {
    return v27;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    int v7 = v27 + 1;
    unsigned int v8 = *v27;
    if (*v27 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        int v7 = (char *)sub_188C180((uint64_t)v27, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        int v7 = v27 + 2;
      }
    }
    uint64_t v27 = v7;
    unsigned int v11 = v8 >> 3;
    if (v8 >> 3 == 3) {
      break;
    }
    if (v11 == 2)
    {
      if (v8 != 18) {
        goto LABEL_14;
      }
      *(_DWORD *)(a1 + 40) |= 2u;
      uint64_t v21 = *(void *)(a1 + 80);
      if (!v21)
      {
        int64_t v22 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          int64_t v22 = (void *)*v22;
        }
        uint64_t v21 = sub_15C1CB4((uint64_t)v22);
        *(void *)(a1 + 80) = v21;
        int v7 = v27;
      }
      uint64_t v14 = sub_11B3E48(a3, v21, (unsigned __int8 *)v7);
    }
    else
    {
      if (v11 != 1 || v8 != 10) {
        goto LABEL_14;
      }
      *(_DWORD *)(a1 + 40) |= 1u;
      uint64_t v23 = *(void *)(a1 + 72);
      if (!v23)
      {
        uint64_t v24 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          uint64_t v24 = (void *)*v24;
        }
        sub_1478F54((uint64_t)v24);
        uint64_t v23 = v25;
        *(void *)(a1 + 72) = v25;
        int v7 = v27;
      }
      uint64_t v14 = (char *)sub_11793D8(a3, v23, (unsigned __int8 *)v7);
    }
LABEL_44:
    uint64_t v27 = v14;
    if (!v14) {
      return 0;
    }
LABEL_45:
    if (sub_11947B8((uint64_t)a3, &v27, a3[11].i32[1])) {
      return v27;
    }
  }
  if (v8 == 26)
  {
    uint64_t v15 = v7 - 1;
    while (1)
    {
      uint64_t v16 = (unsigned __int8 *)(v15 + 1);
      uint64_t v27 = v15 + 1;
      uint64_t v17 = *(_DWORD **)(a1 + 64);
      if (v17 && (uint64_t v18 = *(int *)(a1 + 56), (int)v18 < *v17))
      {
        *(_DWORD *)(a1 + 56) = v18 + 1;
        uint64_t v19 = *(void *)&v17[2 * v18 + 2];
      }
      else
      {
        uint64_t v20 = sub_15C1918(*(void *)(a1 + 48));
        uint64_t v19 = sub_188CDC8(a1 + 48, v20);
        uint64_t v16 = (unsigned __int8 *)v27;
      }
      uint64_t v15 = sub_1198F14(a3, v19, v16);
      uint64_t v27 = v15;
      if (!v15) {
        return 0;
      }
      if (*(void *)a3 <= (unint64_t)v15 || *v15 != 26) {
        goto LABEL_45;
      }
    }
  }
LABEL_14:
  if (v8) {
    BOOL v13 = (v8 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (v8 - 800 > 0x63F)
    {
      if (*v6)
      {
        uint64_t v26 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        uint64_t v26 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        int v7 = v27;
      }
      uint64_t v14 = (char *)sub_1885AC0(v8, v26, v7, a3);
    }
    else
    {
      uint64_t v14 = (char *)sub_18859DC((uint64_t **)(a1 + 16), v8, v7, (uint64_t)&off_2539980, (uint64_t *)(a1 + 8), a3);
    }
    goto LABEL_44;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v27;
  }
  return 0;
}

char *sub_146FD9C(uint64_t a1, char *a2, unint64_t *a3)
{
  uint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if (v6)
  {
    if (*a3 <= (unint64_t)a2) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    uint64_t v7 = *(void *)(a1 + 72);
    char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 28);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    uint64_t v4 = sub_1466BF0(v7, v9, a3);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 80);
    char *v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 44);
    v4[1] = v11;
    if (v11 > 0x7F) {
      uint64_t v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      uint64_t v12 = v4 + 2;
    }
    uint64_t v4 = sub_15B43E4(v10, v12, a3);
  }
  int v13 = *(_DWORD *)(a1 + 56);
  if (v13)
  {
    for (int i = 0; i != v13; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v15 = *(void *)(*(void *)(a1 + 64) + 8 * i + 8);
      char *v4 = 26;
      unsigned int v16 = *(_DWORD *)(v15 + 44);
      v4[1] = v16;
      if (v16 > 0x7F) {
        uint64_t v17 = sub_188A9CC(v16, v4 + 1);
      }
      else {
        uint64_t v17 = v4 + 2;
      }
      uint64_t v4 = sub_15B0C0C(v15, v17, a3);
    }
  }
  if (*(_WORD *)(a1 + 26)) {
    uint64_t v4 = sub_1886844(a1 + 16, 100, 300, v4, a3);
  }
  uint64_t v18 = *(void *)(a1 + 8);
  if ((v18 & 1) == 0) {
    return v4;
  }
  unint64_t v20 = v18 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v20 + 31) < 0)
  {
    uint64_t v21 = *(void **)(v20 + 8);
    uint64_t v22 = *(void *)(v20 + 16);
  }
  else
  {
    uint64_t v21 = (void *)(v20 + 8);
    LODWORD(v22) = *(unsigned __int8 *)(v20 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v22)
  {
    uint64_t v23 = (int)v22;
    memcpy(v4, v21, (int)v22);
    v4 += v23;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v21, v22, v4);
}

uint64_t sub_146FFD0(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(int *)(a1 + 56);
  uint64_t v4 = v2 + v3;
  uint64_t v5 = *(void *)(a1 + 64);
  if (v5) {
    int v6 = (uint64_t *)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = sub_15B0D90(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  int v10 = *(_DWORD *)(a1 + 40);
  if ((v10 & 3) != 0)
  {
    if (v10)
    {
      uint64_t v11 = sub_1468738(*(void *)(a1 + 72));
      v4 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v10 & 2) != 0)
    {
      uint64_t v12 = sub_15B4924(*(void *)(a1 + 80));
      v4 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if (v13)
  {
    unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v15 + 31) < 0) {
      uint64_t v16 = *(void *)(v15 + 16);
    }
    else {
      uint64_t v16 = *(unsigned __int8 *)(v15 + 31);
    }
    v4 += v16;
  }
  *(_DWORD *)(a1 + 44) = v4;
  return v4;
}

void *sub_14700F0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.Waypoint");
}

uint64_t sub_1470100(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  *(void *)(a1 + 8) = v5;
  *(void *)a1 = off_24B6008;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = a2;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = &qword_2550250;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(void *)(a1 + 112) = 0;
  return a1;
}

void sub_1470184(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_14701B4(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = a1 + 16;
  *(void *)a1 = off_24B6008;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  uint64_t v6 = a1 + 48;
  *(_DWORD *)(a1 + 68) = 0;
  *(void *)(a1 + 52) = 0;
  *(void *)(a1 + 60) = 0;
  *(void *)(a1 + 44) = 0;
  int v7 = *(_DWORD *)(a2 + 56);
  if (v7)
  {
    uint64_t v8 = *(void *)(a2 + 64);
    uint64_t v9 = (std::string **)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_188FB98(v6, v9, (const std::string **)(v8 + 8), v7, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v10 = *(_DWORD *)(a1 + 56) + v7;
    *(_DWORD *)(a1 + 56) = v10;
    uint64_t v11 = *(int **)(a1 + 64);
    if (*v11 < v10) {
      *uint64_t v11 = v10;
    }
  }
  uint64_t v12 = *(void *)(a2 + 8);
  if (v12) {
    sub_188B4F8(v4, (v12 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v5, a2 + 16);
  *(void *)(a1 + 72) = &qword_2550250;
  int v13 = *(_DWORD *)(a2 + 40);
  if (v13)
  {
    uint64_t v14 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v14 = (uint64_t *)*v14;
    }
    sub_1881DF4((std::string **)(a1 + 72), (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL), v14);
    int v13 = *(_DWORD *)(a2 + 40);
  }
  if ((v13 & 2) != 0) {
    operator new();
  }
  *(void *)(a1 + 80) = 0;
  if ((v13 & 4) != 0) {
    operator new();
  }
  *(void *)(a1 + 88) = 0;
  long long v15 = *(_OWORD *)(a2 + 96);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = v15;
  return a1;
}

void sub_147037C()
{
}

uint64_t sub_14703FC(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_12;
    }
  }
  else if (v4)
  {
    goto LABEL_12;
  }
  uint64_t v5 = (void ***)(a1 + 72);
  if (*(uint64_t **)(a1 + 72) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_25399D8)
  {
    if (*(void *)(a1 + 80))
    {
      sub_15B0994();
      operator delete();
    }
    if (*(void *)(a1 + 88))
    {
      sub_15B6D48();
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_12:
  sub_1889DE8((void *)(a1 + 48));
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_14704F8(uint64_t a1)
{
  sub_14703FC(a1);

  operator delete();
}

uint64_t sub_1470530(uint64_t a1)
{
  sub_18843A4((unsigned char *)(a1 + 16));
  uint64_t result = sub_188CC00(a1 + 48);
  int v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 7) == 0) {
    goto LABEL_6;
  }
  if ((v3 & 1) == 0)
  {
    if ((v3 & 2) == 0) {
      goto LABEL_4;
    }
    goto LABEL_16;
  }
  unint64_t v6 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v6 + 23) < 0)
  {
    **(unsigned char **)unint64_t v6 = 0;
    *(void *)(v6 + 8) = 0;
    if ((v3 & 2) != 0) {
      goto LABEL_16;
    }
LABEL_4:
    if ((v3 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  *(unsigned char *)unint64_t v6 = 0;
  *(unsigned char *)(v6 + 23) = 0;
  if ((v3 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_16:
  uint64_t result = (uint64_t)sub_15B09D0(*(void *)(a1 + 80));
  if ((v3 & 4) != 0) {
LABEL_5:
  }
    uint64_t result = sub_15B6D84(*(void *)(a1 + 88));
LABEL_6:
  if ((v3 & 0x78) != 0)
  {
    *(void *)(a1 + 96) = 0;
    *(void *)(a1 + 104) = 0;
    *(void *)(a1 + 112) = 0;
  }
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t v4 = a1 + 8;
  *(_DWORD *)(v4 + 32) = 0;
  if (v5)
  {
    return sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

uint64_t sub_14705FC(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v51 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v51, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  uint64_t v8 = (uint64_t **)(a1 + 48);
  while (2)
  {
    uint64_t v9 = (unsigned __int8 *)(*(void *)v51 + 1);
    unsigned int v10 = **(unsigned char **)v51;
    if ((char)**(unsigned char **)v51 < 0)
    {
      unsigned int v11 = v10 + (*v9 << 7);
      unsigned int v10 = v11 - 128;
      if ((char)*v9 < 0)
      {
        uint64_t v9 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v51, v11 - 128);
        unsigned int v10 = v12;
      }
      else
      {
        uint64_t v9 = (unsigned __int8 *)(*(void *)v51 + 2);
      }
    }
    *(void *)uint64_t v51 = v9;
    switch(v10 >> 3)
    {
      case 1u:
        if (v10 != 8) {
          goto LABEL_61;
        }
        v5 |= 8u;
        int v13 = (char *)(v9 + 1);
        uint64_t v14 = *v9;
        if (((char)*v9 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v15 = *v13;
        uint64_t v14 = v14 + (v15 << 7) - 128;
        if ((v15 & 0x80000000) == 0)
        {
          int v13 = (char *)(v9 + 2);
LABEL_13:
          *(void *)uint64_t v51 = v13;
          *(void *)(a1 + 96) = v14;
          goto LABEL_71;
        }
        uint64_t v43 = sub_188C138((uint64_t)v9, v14);
        *(void *)uint64_t v51 = v43;
        *(void *)(a1 + 96) = v44;
        if (v43) {
          goto LABEL_71;
        }
        goto LABEL_93;
      case 2u:
        if (v10 != 16) {
          goto LABEL_61;
        }
        v5 |= 0x10u;
        uint64_t v16 = (char *)(v9 + 1);
        uint64_t v17 = *v9;
        if (((char)*v9 & 0x80000000) == 0) {
          goto LABEL_18;
        }
        int v18 = *v16;
        uint64_t v17 = v17 + (v18 << 7) - 128;
        if (v18 < 0)
        {
          uint64_t v45 = sub_188C138((uint64_t)v9, v17);
          *(void *)uint64_t v51 = v45;
          *(void *)(a1 + 104) = v46;
          if (!v45) {
            goto LABEL_93;
          }
        }
        else
        {
          uint64_t v16 = (char *)(v9 + 2);
LABEL_18:
          *(void *)uint64_t v51 = v16;
          *(void *)(a1 + 104) = v17;
        }
        goto LABEL_71;
      case 3u:
        if (v10 != 26) {
          goto LABEL_61;
        }
        *(_DWORD *)(a1 + 40) |= 2u;
        uint64_t v19 = *(void *)(a1 + 80);
        if (!v19)
        {
          unint64_t v20 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            unint64_t v20 = (void *)*v20;
          }
          uint64_t v19 = sub_15C1918((uint64_t)v20);
          *(void *)(a1 + 80) = v19;
          uint64_t v9 = *(unsigned __int8 **)v51;
        }
        uint64_t v21 = sub_1198F14(a3, v19, v9);
        goto LABEL_70;
      case 4u:
        if (v10 != 34) {
          goto LABEL_61;
        }
        *(_DWORD *)(a1 + 40) |= 4u;
        uint64_t v22 = *(void **)(a1 + 88);
        if (!v22)
        {
          uint64_t v23 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v23 = (void *)*v23;
          }
          uint64_t v22 = sub_15C1E94((uint64_t)v23);
          *(void *)(a1 + 88) = v22;
          uint64_t v9 = *(unsigned __int8 **)v51;
        }
        uint64_t v21 = sub_11EA9CC(a3, (uint64_t)v22, v9);
        goto LABEL_70;
      case 5u:
        if (v10 != 42) {
          goto LABEL_61;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        uint64_t v24 = *(void *)(a1 + 8);
        uint64_t v25 = (uint64_t *)(v24 & 0xFFFFFFFFFFFFFFFCLL);
        if (v24) {
          uint64_t v25 = (uint64_t *)*v25;
        }
        uint64_t v26 = (std::string *)sub_1880F84((void *)(a1 + 72), v25);
        uint64_t v21 = (void *)sub_188C244(v26, *(char **)v51, (uint64_t)a3);
        goto LABEL_70;
      case 6u:
        if (v10 != 50) {
          goto LABEL_61;
        }
        uint64_t v27 = (const std::string::value_type *)(v9 - 1);
        while (1)
        {
          uint64_t v28 = (char *)(v27 + 1);
          *(void *)uint64_t v51 = v27 + 1;
          uint64_t v29 = *(_DWORD **)(a1 + 64);
          if (v29 && (uint64_t v30 = *(int *)(a1 + 56), (int)v30 < *v29))
          {
            *(_DWORD *)(a1 + 56) = v30 + 1;
            uint64_t v31 = *(std::string **)&v29[2 * v30 + 2];
          }
          else
          {
            if (!*v8) {
              operator new();
            }
            *int v33 = v32;
            v33[1] = sub_3A6EDC;
            *uint64_t v32 = 0;
            v32[1] = 0;
            int v32[2] = 0;
            uint64_t v31 = (std::string *)sub_188CDC8(a1 + 48, (uint64_t)v32);
            uint64_t v28 = *(char **)v51;
          }
          uint64_t v27 = sub_188C244(v31, v28, (uint64_t)a3);
          *(void *)uint64_t v51 = v27;
          if (!v27) {
            goto LABEL_93;
          }
          if (*(void *)a3 <= (unint64_t)v27 || *v27 != 50) {
            goto LABEL_71;
          }
        }
      case 7u:
        if (v10 != 56) {
          goto LABEL_61;
        }
        uint64_t v34 = (char *)(v9 + 1);
        unint64_t v35 = *v9;
        if (((char)*v9 & 0x80000000) == 0) {
          goto LABEL_51;
        }
        int v36 = *v34;
        int v37 = v35 + (v36 << 7);
        unint64_t v35 = (v37 - 128);
        if (v36 < 0)
        {
          *(void *)uint64_t v51 = sub_188C138((uint64_t)v9, (v37 - 128));
          if (!*(void *)v51) {
            goto LABEL_93;
          }
          unint64_t v35 = v47;
        }
        else
        {
          uint64_t v34 = (char *)(v9 + 2);
LABEL_51:
          *(void *)uint64_t v51 = v34;
        }
        if (sub_16BAF04(v35))
        {
          *(_DWORD *)(a1 + 40) |= 0x20u;
          *(_DWORD *)(a1 + 112) = v35;
          goto LABEL_71;
        }
        if (*v7) {
          uint64_t v49 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          uint64_t v49 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v50 = 7;
        goto LABEL_87;
      case 8u:
        if (v10 != 64) {
          goto LABEL_61;
        }
        uint64_t v38 = (char *)(v9 + 1);
        unint64_t v35 = *v9;
        if (((char)*v9 & 0x80000000) == 0) {
          goto LABEL_58;
        }
        int v39 = *v38;
        int v40 = v35 + (v39 << 7);
        unint64_t v35 = (v40 - 128);
        if (v39 < 0)
        {
          *(void *)uint64_t v51 = sub_188C138((uint64_t)v9, (v40 - 128));
          if (!*(void *)v51) {
            goto LABEL_93;
          }
          unint64_t v35 = v48;
        }
        else
        {
          uint64_t v38 = (char *)(v9 + 2);
LABEL_58:
          *(void *)uint64_t v51 = v38;
        }
        if (sub_129EB9C(v35))
        {
          *(_DWORD *)(a1 + 40) |= 0x40u;
          *(_DWORD *)(a1 + 116) = v35;
        }
        else
        {
          if (*v7) {
            uint64_t v49 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v49 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          int v50 = 8;
LABEL_87:
          sub_188C020(v50, v35, v49);
        }
        goto LABEL_71;
      default:
LABEL_61:
        if (v10) {
          BOOL v41 = (v10 & 7) == 4;
        }
        else {
          BOOL v41 = 1;
        }
        if (!v41)
        {
          if (v10 - 800 > 0x31F)
          {
            if (*v7)
            {
              int v42 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              int v42 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              uint64_t v9 = *(unsigned __int8 **)v51;
            }
            uint64_t v21 = sub_1885AC0(v10, v42, (char *)v9, a3);
          }
          else
          {
            uint64_t v21 = sub_18859DC((uint64_t **)(a1 + 16), v10, (char *)v9, (uint64_t)&off_25399D8, (uint64_t *)(a1 + 8), a3);
          }
LABEL_70:
          *(void *)uint64_t v51 = v21;
          if (!v21) {
            goto LABEL_93;
          }
LABEL_71:
          if (sub_11947B8((uint64_t)a3, (char **)v51, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v9) {
          a3[10].i32[0] = v10 - 1;
        }
        else {
LABEL_93:
        }
          *(void *)uint64_t v51 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 40) |= v5;
        return *(void *)v51;
    }
  }
}

char *sub_1470B74(uint64_t a1, char *a2, unint64_t *a3)
{
  uint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unint64_t v7 = *(void *)(a1 + 96);
    char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(void *)(a1 + 104);
    char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v20 = *(void *)(a1 + 80);
    char *v4 = 26;
    unsigned int v21 = *(_DWORD *)(v20 + 44);
    v4[1] = v21;
    if (v21 > 0x7F) {
      uint64_t v22 = sub_188A9CC(v21, v4 + 1);
    }
    else {
      uint64_t v22 = v4 + 2;
    }
    uint64_t v4 = sub_15B0C0C(v20, v22, a3);
    if ((v6 & 4) == 0)
    {
LABEL_17:
      if ((v6 & 1) == 0) {
        goto LABEL_19;
      }
      goto LABEL_18;
    }
  }
  else if ((v6 & 4) == 0)
  {
    goto LABEL_17;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v26 = *(void *)(a1 + 88);
  char *v4 = 34;
  unsigned int v27 = *(_DWORD *)(v26 + 20);
  v4[1] = v27;
  if (v27 > 0x7F) {
    uint64_t v28 = sub_188A9CC(v27, v4 + 1);
  }
  else {
    uint64_t v28 = v4 + 2;
  }
  uint64_t v4 = sub_15B7AE4(v26, v28, a3);
  if (v6) {
LABEL_18:
  }
    uint64_t v4 = sub_117A0AC(a3, 5, (const void **)(*(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL), v4);
LABEL_19:
  uint64_t v13 = *(unsigned int *)(a1 + 56);
  if ((int)v13 >= 1)
  {
    uint64_t v14 = 0;
    uint64_t v15 = 8 * v13;
    do
    {
      uint64_t v16 = *(void **)(*(void *)(a1 + 64) + v14 + 8);
      if (*((char *)v16 + 23) < 0)
      {
        int64_t v17 = v16[1];
        if (v17 > 127) {
          goto LABEL_30;
        }
      }
      else
      {
        int64_t v17 = *((unsigned __int8 *)v16 + 23);
      }
      if ((uint64_t)(*a3 - (void)v4 + 14) >= v17)
      {
        char *v4 = 50;
        v4[1] = v17;
        if (*((char *)v16 + 23) < 0) {
          uint64_t v16 = (void *)*v16;
        }
        int v18 = v4 + 2;
        memcpy(v18, v16, v17);
        uint64_t v4 = &v18[v17];
        goto LABEL_28;
      }
LABEL_30:
      uint64_t v4 = (char *)sub_188A868(a3, 6, (uint64_t)v16, v4);
LABEL_28:
      v14 += 8;
    }
    while (v15 != v14);
  }
  if ((v6 & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v19 = *(int *)(a1 + 112);
    char *v4 = 56;
    v4[1] = v19;
    if (v19 > 0x7F)
    {
      v4[1] = v19 | 0x80;
      unint64_t v23 = v19 >> 7;
      v4[2] = v19 >> 7;
      v4 += 3;
      if (v19 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v24 = v23 >> 14;
          v23 >>= 7;
          *v4++ = v23;
        }
        while (v24);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x40) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v25 = *(int *)(a1 + 116);
    char *v4 = 64;
    v4[1] = v25;
    if (v25 > 0x7F)
    {
      v4[1] = v25 | 0x80;
      unint64_t v29 = v25 >> 7;
      v4[2] = v25 >> 7;
      v4 += 3;
      if (v25 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v30 = v29 >> 14;
          v29 >>= 7;
          *v4++ = v29;
        }
        while (v30);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (*(_WORD *)(a1 + 26)) {
    uint64_t v4 = sub_1886844(a1 + 16, 100, 200, v4, a3);
  }
  uint64_t v31 = *(void *)(a1 + 8);
  if ((v31 & 1) == 0) {
    return v4;
  }
  unint64_t v33 = v31 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v33 + 31) < 0)
  {
    uint64_t v34 = *(void **)(v33 + 8);
    uint64_t v35 = *(void *)(v33 + 16);
  }
  else
  {
    uint64_t v34 = (void *)(v33 + 8);
    LODWORD(v35) = *(unsigned __int8 *)(v33 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v35)
  {
    uint64_t v36 = (int)v35;
    memcpy(v4, v34, (int)v35);
    v4 += v36;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v34, v35, v4);
}

uint64_t sub_1470FE8(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(unsigned int *)(a1 + 56);
  uint64_t v4 = v2 + v3;
  if ((int)v3 >= 1)
  {
    int v5 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v6 = *v5++;
      uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
      uint64_t v8 = *(void *)(v6 + 8);
      if ((v7 & 0x80u) == 0) {
        uint64_t v8 = v7;
      }
      v4 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6);
      --v3;
    }
    while (v3);
  }
  int v9 = *(_DWORD *)(a1 + 40);
  if ((v9 & 0x7F) == 0) {
    goto LABEL_30;
  }
  if (v9)
  {
    unint64_t v10 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v11 = *(unsigned __int8 *)(v10 + 23);
    uint64_t v12 = *(void *)(v10 + 8);
    if ((v11 & 0x80u) == 0) {
      uint64_t v12 = v11;
    }
    v4 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v9 & 2) == 0)
    {
LABEL_9:
      if ((v9 & 4) == 0) {
        goto LABEL_10;
      }
      goto LABEL_19;
    }
  }
  else if ((v9 & 2) == 0)
  {
    goto LABEL_9;
  }
  uint64_t v13 = sub_15B0D90(*(void *)(a1 + 80));
  v4 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v9 & 4) == 0)
  {
LABEL_10:
    if ((v9 & 8) == 0) {
      goto LABEL_11;
    }
    goto LABEL_20;
  }
LABEL_19:
  uint64_t v14 = sub_15B806C(*(void *)(a1 + 88));
  v4 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v9 & 8) == 0)
  {
LABEL_11:
    if ((v9 & 0x10) == 0) {
      goto LABEL_12;
    }
LABEL_21:
    v4 += ((9 * (__clz(*(void *)(a1 + 104) | 1) ^ 0x3F) + 73) >> 6) + 1;
    if ((v9 & 0x20) == 0)
    {
LABEL_13:
      if ((v9 & 0x40) == 0) {
        goto LABEL_30;
      }
      goto LABEL_26;
    }
    goto LABEL_22;
  }
LABEL_20:
  v4 += ((9 * (__clz(*(void *)(a1 + 96) | 1) ^ 0x3F) + 73) >> 6) + 1;
  if ((v9 & 0x10) != 0) {
    goto LABEL_21;
  }
LABEL_12:
  if ((v9 & 0x20) == 0) {
    goto LABEL_13;
  }
LABEL_22:
  int v15 = *(_DWORD *)(a1 + 112);
  if (v15 < 0) {
    uint64_t v16 = 11;
  }
  else {
    uint64_t v16 = ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v4 += v16;
  if ((v9 & 0x40) != 0)
  {
LABEL_26:
    int v17 = *(_DWORD *)(a1 + 116);
    if (v17 < 0) {
      uint64_t v18 = 11;
    }
    else {
      uint64_t v18 = ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v4 += v18;
  }
LABEL_30:
  uint64_t v19 = *(void *)(a1 + 8);
  if (v19)
  {
    unint64_t v21 = v19 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v21 + 31) < 0) {
      uint64_t v22 = *(void *)(v21 + 16);
    }
    else {
      uint64_t v22 = *(unsigned __int8 *)(v21 + 31);
    }
    v4 += v22;
  }
  *(_DWORD *)(a1 + 44) = v4;
  return v4;
}

void sub_1471220(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 56);
  if (v4)
  {
    int v5 = (const std::string **)(*(void *)(a2 + 64) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_188FB98(a1 + 48, v6, v5, v4, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v7 = *(_DWORD *)(a1 + 56) + v4;
    *(_DWORD *)(a1 + 56) = v7;
    uint64_t v8 = *(int **)(a1 + 64);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 40);
  if ((v9 & 0x7F) != 0)
  {
    if (v9)
    {
      uint64_t v11 = (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 40) |= 1u;
      uint64_t v12 = *(void *)(a1 + 8);
      uint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
      if (v12) {
        uint64_t v13 = (uint64_t *)*v13;
      }
      sub_1881DF4((std::string **)(a1 + 72), v11, v13);
      if ((v9 & 2) == 0)
      {
LABEL_7:
        if ((v9 & 4) == 0) {
          goto LABEL_8;
        }
        goto LABEL_29;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_7;
    }
    *(_DWORD *)(a1 + 40) |= 2u;
    uint64_t v14 = *(void *)(a1 + 80);
    if (!v14)
    {
      uint64_t v15 = *(void *)(a1 + 8);
      uint64_t v16 = (void *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
      if (v15) {
        uint64_t v16 = (void *)*v16;
      }
      uint64_t v14 = sub_15C1918((uint64_t)v16);
      *(void *)(a1 + 80) = v14;
    }
    if (*(void *)(a2 + 80)) {
      int v17 = *(uint64_t (****)())(a2 + 80);
    }
    else {
      int v17 = &off_253F1A0;
    }
    sub_15B0E24(v14, (uint64_t)v17);
    if ((v9 & 4) == 0)
    {
LABEL_8:
      if ((v9 & 8) == 0) {
        goto LABEL_9;
      }
      goto LABEL_37;
    }
LABEL_29:
    *(_DWORD *)(a1 + 40) |= 4u;
    uint64_t v18 = *(std::string **)(a1 + 88);
    if (!v18)
    {
      uint64_t v19 = *(void *)(a1 + 8);
      uint64_t v20 = (void *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
      if (v19) {
        uint64_t v20 = (void *)*v20;
      }
      uint64_t v18 = (std::string *)sub_15C1E94((uint64_t)v20);
      *(void *)(a1 + 88) = v18;
    }
    if (*(void *)(a2 + 88)) {
      unint64_t v21 = *(uint64_t (****)())(a2 + 88);
    }
    else {
      unint64_t v21 = &off_253F3D0;
    }
    sub_15B86B8(v18, (uint64_t)v21);
    if ((v9 & 8) == 0)
    {
LABEL_9:
      if ((v9 & 0x10) == 0) {
        goto LABEL_10;
      }
      goto LABEL_38;
    }
LABEL_37:
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    if ((v9 & 0x10) == 0)
    {
LABEL_10:
      if ((v9 & 0x20) == 0) {
        goto LABEL_11;
      }
      goto LABEL_39;
    }
LABEL_38:
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    if ((v9 & 0x20) == 0)
    {
LABEL_11:
      if ((v9 & 0x40) == 0)
      {
LABEL_13:
        *(_DWORD *)(a1 + 40) |= v9;
        goto LABEL_14;
      }
LABEL_12:
      *(_DWORD *)(a1 + 116) = *(_DWORD *)(a2 + 116);
      goto LABEL_13;
    }
LABEL_39:
    *(_DWORD *)(a1 + 112) = *(_DWORD *)(a2 + 112);
    if ((v9 & 0x40) == 0) {
      goto LABEL_13;
    }
    goto LABEL_12;
  }
LABEL_14:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_147142C(uint64_t a1)
{
  uint64_t result = sub_18856CC(a1 + 16);
  if (result)
  {
    int v3 = *(_DWORD *)(a1 + 40);
    if ((v3 & 2) != 0)
    {
      uint64_t result = sub_15B0F18(*(void *)(a1 + 80));
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 4) == 0) {
      return 1;
    }
    uint64_t result = sub_15B8CAC(*(void *)(a1 + 88));
    if (result) {
      return 1;
    }
  }
  return result;
}

void *sub_1471484@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.WaypointID");
}

uint64_t sub_1471494(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (uint64_t *)(a1 + 8);
  *(void *)a1 = off_24B6088;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  int v5 = (uint64_t *)(a1 + 24);
  *(_DWORD *)(a1 + 44) = 0;
  *(void *)(a1 + 28) = 0;
  *(void *)(a1 + 36) = 0;
  *(void *)(a1 + 20) = 0;
  int v6 = *(_DWORD *)(a2 + 32);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 40);
    uint64_t v8 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_1301B24(v5, v8, (uint64_t *)(v7 + 8), v6, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v9 = *(_DWORD *)(a1 + 32) + v6;
    *(_DWORD *)(a1 + 32) = v9;
    uint64_t v10 = *(int **)(a1 + 40);
    if (*v10 < v9) {
      *uint64_t v10 = v9;
    }
  }
  uint64_t v11 = *(void *)(a2 + 8);
  if (v11) {
    sub_188B4F8(v4, (v11 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  int v12 = *(_DWORD *)(a2 + 16);
  if (v12) {
    operator new();
  }
  *(void *)(a1 + 48) = 0;
  if ((v12 & 2) != 0) {
    operator new();
  }
  *(void *)(a1 + 56) = 0;
  return a1;
}

void sub_14715F0()
{
}

uint64_t sub_1471668(uint64_t a1)
{
  int v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  if ((uint64_t (***)())a1 != &off_2539A50)
  {
    if (*(void *)(a1 + 48))
    {
      sub_15B0994();
      operator delete();
    }
    uint64_t v5 = *(void *)(a1 + 56);
    if (v5)
    {
      sub_15B1678(v5);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  sub_1301628((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1471744(uint64_t a1)
{
  sub_1471668(a1);

  operator delete();
}

unsigned char *sub_147177C(unsigned char *result)
{
  uint64_t v1 = result;
  uint64_t v2 = *((unsigned int *)result + 8);
  if ((int)v2 >= 1)
  {
    int v3 = (unsigned char **)(*((void *)result + 5) + 8);
    do
    {
      int v4 = *v3++;
      uint64_t result = sub_15BB0EC(v4);
      --v2;
    }
    while (v2);
    *((_DWORD *)v1 + 8) = 0;
  }
  int v5 = *((_DWORD *)v1 + 4);
  if ((v5 & 3) != 0)
  {
    if (v5) {
      uint64_t result = sub_15B09D0(*((void *)v1 + 6));
    }
    if ((v5 & 2) != 0) {
      uint64_t result = sub_15B16B4(*((unsigned char **)v1 + 7));
    }
  }
  char v7 = v1[8];
  int v6 = v1 + 8;
  *((_DWORD *)v6 + 2) = 0;
  if (v7)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v6);
  }
  return result;
}

char *sub_1471820(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v26 = a2;
  if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
    return v26;
  }
  int v6 = (void *)(a1 + 8);
  while (1)
  {
    char v7 = v26 + 1;
    unsigned int v8 = *v26;
    if (*v26 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        char v7 = (char *)sub_188C180((uint64_t)v26, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        char v7 = v26 + 2;
      }
    }
    uint64_t v26 = v7;
    unsigned int v11 = v8 >> 3;
    if (v8 >> 3 == 3)
    {
      if (v8 != 26) {
        goto LABEL_14;
      }
      *(_DWORD *)(a1 + 16) |= 2u;
      uint64_t v16 = *(void *)(a1 + 56);
      if (!v16)
      {
        int v17 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          int v17 = (void *)*v17;
        }
        uint64_t v16 = sub_15C19EC((uint64_t)v17);
        *(void *)(a1 + 56) = v16;
        char v7 = v26;
      }
      uint64_t v15 = sub_11E1C60(a3, v16, (unsigned __int8 *)v7);
      goto LABEL_42;
    }
    if (v11 == 2) {
      break;
    }
    if (v11 != 1 || v8 != 10) {
      goto LABEL_14;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v24 = *(void *)(a1 + 48);
    if (!v24)
    {
      unint64_t v25 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        unint64_t v25 = (void *)*v25;
      }
      uint64_t v24 = sub_15C1918((uint64_t)v25);
      *(void *)(a1 + 48) = v24;
      char v7 = v26;
    }
    uint64_t v15 = sub_1198F14(a3, v24, (unsigned __int8 *)v7);
LABEL_42:
    uint64_t v26 = v15;
    if (!v15) {
      return 0;
    }
LABEL_43:
    if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
      return v26;
    }
  }
  if (v8 == 18)
  {
    uint64_t v18 = v7 - 1;
    while (1)
    {
      uint64_t v19 = (unsigned __int8 *)(v18 + 1);
      uint64_t v26 = v18 + 1;
      uint64_t v20 = *(_DWORD **)(a1 + 40);
      if (v20 && (uint64_t v21 = *(int *)(a1 + 32), (int)v21 < *v20))
      {
        *(_DWORD *)(a1 + 32) = v21 + 1;
        uint64_t v22 = *(void *)&v20[2 * v21 + 2];
      }
      else
      {
        sub_15C219C(*(void *)(a1 + 24));
        uint64_t v22 = sub_188CDC8(a1 + 24, v23);
        uint64_t v19 = (unsigned __int8 *)v26;
      }
      uint64_t v18 = sub_11FF458(a3, v22, v19);
      uint64_t v26 = v18;
      if (!v18) {
        return 0;
      }
      if (*(void *)a3 <= (unint64_t)v18 || *v18 != 18) {
        goto LABEL_43;
      }
    }
  }
LABEL_14:
  if (v8) {
    BOOL v13 = (v8 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v6)
    {
      uint64_t v14 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      char v7 = v26;
    }
    uint64_t v15 = (char *)sub_1885AC0(v8, v14, v7, a3);
    goto LABEL_42;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v26;
  }
  return 0;
}

char *sub_1471A80(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 48);
    char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 44);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    int v4 = sub_15B0C0C(v7, v9, a3);
  }
  int v10 = *(_DWORD *)(a1 + 32);
  if (v10)
  {
    for (int i = 0; i != v10; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v12 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      char *v4 = 18;
      unsigned int v13 = *(_DWORD *)(v12 + 20);
      v4[1] = v13;
      if (v13 > 0x7F) {
        uint64_t v14 = sub_188A9CC(v13, v4 + 1);
      }
      else {
        uint64_t v14 = v4 + 2;
      }
      int v4 = sub_15BB7A0(v12, (unint64_t)v14, a3);
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v15 = *(void *)(a1 + 56);
    char *v4 = 26;
    unsigned int v16 = *(_DWORD *)(v15 + 20);
    v4[1] = v16;
    if (v16 > 0x7F) {
      int v17 = sub_188A9CC(v16, v4 + 1);
    }
    else {
      int v17 = v4 + 2;
    }
    int v4 = sub_15B1A68(v15, (unint64_t)v17, a3);
  }
  uint64_t v18 = *(void *)(a1 + 8);
  if ((v18 & 1) == 0) {
    return v4;
  }
  unint64_t v20 = v18 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v20 + 31) < 0)
  {
    uint64_t v21 = *(void **)(v20 + 8);
    uint64_t v22 = *(void *)(v20 + 16);
  }
  else
  {
    uint64_t v21 = (void *)(v20 + 8);
    LODWORD(v22) = *(unsigned __int8 *)(v20 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v22)
  {
    uint64_t v23 = (int)v22;
    memcpy(v4, v21, (int)v22);
    v4 += v23;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v21, v22, v4);
}

uint64_t sub_1471C90(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    int v4 = (uint64_t *)(v3 + 8);
  }
  else {
    int v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_15BBC64(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 3) != 0)
  {
    if (v8)
    {
      uint64_t v9 = sub_15B0D90(*(void *)(a1 + 48));
      v2 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v8 & 2) != 0)
    {
      uint64_t v10 = sub_15B1D1C(*(void *)(a1 + 56));
      v2 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v13 + 31) < 0) {
      uint64_t v14 = *(void *)(v13 + 16);
    }
    else {
      uint64_t v14 = *(unsigned __int8 *)(v13 + 31);
    }
    v2 += v14;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

void sub_1471DAC(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_1301B24((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    int v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *int v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 3) != 0)
  {
    if (v9)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v10 = *(void *)(a1 + 48);
      if (!v10)
      {
        uint64_t v11 = *(void *)(a1 + 8);
        uint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
        if (v11) {
          uint64_t v12 = (void *)*v12;
        }
        uint64_t v10 = sub_15C1918((uint64_t)v12);
        *(void *)(a1 + 48) = v10;
      }
      if (*(void *)(a2 + 48)) {
        unint64_t v13 = *(uint64_t (****)())(a2 + 48);
      }
      else {
        unint64_t v13 = &off_253F1A0;
      }
      sub_15B0E24(v10, (uint64_t)v13);
    }
    if ((v9 & 2) != 0)
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      uint64_t v14 = *(void *)(a1 + 56);
      if (!v14)
      {
        uint64_t v15 = *(void *)(a1 + 8);
        unsigned int v16 = (void *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          unsigned int v16 = (void *)*v16;
        }
        uint64_t v14 = sub_15C19EC((uint64_t)v16);
        *(void *)(a1 + 56) = v14;
      }
      if (*(void *)(a2 + 56)) {
        int v17 = *(uint64_t (****)())(a2 + 56);
      }
      else {
        int v17 = &off_253F208;
      }
      sub_15B1E3C(v14, (uint64_t)v17);
    }
  }
  uint64_t v18 = *(void *)(a2 + 8);
  if (v18)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v18 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_1471F20(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  while ((int)v2 >= 1)
  {
    uint64_t v3 = v2 - 1;
    char v4 = sub_15BC024(*(void *)(*(void *)(a1 + 40) + 8 * v2));
    uint64_t v2 = v3;
    if ((v4 & 1) == 0) {
      return 0;
    }
  }
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    uint64_t result = sub_15B0F18(*(void *)(a1 + 48));
    if (!result) {
      return result;
    }
    int v6 = *(_DWORD *)(a1 + 16);
  }
  if ((v6 & 2) == 0) {
    return 1;
  }
  uint64_t result = sub_15B1FC0(*(void *)(a1 + 56));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_1471F98@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.WaypointPlace");
}

void *sub_1471FA8(void *a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  a1[1] = v4;
  *a1 = off_24B6108;
  sub_1882BC4((uint64_t)(a1 + 2), a2);
  a1[5] = 0;
  a1[6] = 0;
  return a1;
}

void sub_147200C(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_147203C(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  uint64_t v4 = a1 + 16;
  *(void *)a1 = off_24B6108;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 44) = 0;
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v4, a2 + 16);
  if (*(unsigned char *)(a2 + 40)) {
    operator new();
  }
  *(void *)(a1 + 48) = 0;
  return a1;
}

void sub_147210C()
{
}

uint64_t sub_1472168(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_2539A90)
  {
    uint64_t v6 = *(void *)(a1 + 48);
    if (v6)
    {
      sub_15B3DFC(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1472228(uint64_t a1)
{
  sub_1472168(a1);

  operator delete();
}

uint64_t sub_1472260(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  if (*(unsigned char *)(a1 + 40)) {
    uint64_t result = sub_15B043C(*(void *)(a1 + 48));
  }
  char v4 = *(unsigned char *)(a1 + 8);
  uint64_t v3 = a1 + 8;
  *(_DWORD *)(v3 + 32) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_14722C4(uint64_t a1, char *a2, int32x2_t *a3)
{
  unsigned int v16 = a2;
  if (sub_11947B8((uint64_t)a3, &v16, a3[11].i32[1])) {
    return v16;
  }
  uint64_t v5 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v6 = v16 + 1;
    unsigned int v7 = *v16;
    if (*v16 < 0)
    {
      unsigned int v8 = v7 + (*v6 << 7);
      unsigned int v7 = v8 - 128;
      if (*v6 < 0)
      {
        uint64_t v6 = (char *)sub_188C180((uint64_t)v16, v8 - 128);
        unsigned int v7 = v9;
      }
      else
      {
        uint64_t v6 = v16 + 2;
      }
    }
    unsigned int v16 = v6;
    if (v7 != 10) {
      break;
    }
    *(_DWORD *)(a1 + 40) |= 1u;
    uint64_t v12 = *(void *)(a1 + 48);
    if (!v12)
    {
      unint64_t v13 = (void *)(*v5 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v5) {
        unint64_t v13 = (void *)*v13;
      }
      uint64_t v12 = sub_15C1CB4((uint64_t)v13);
      *(void *)(a1 + 48) = v12;
      uint64_t v6 = v16;
    }
    uint64_t v11 = sub_11B3E48(a3, v12, (unsigned __int8 *)v6);
LABEL_22:
    unsigned int v16 = v11;
    if (!v11) {
      return 0;
    }
    if (sub_11947B8((uint64_t)a3, &v16, a3[11].i32[1])) {
      return v16;
    }
  }
  if (v7) {
    BOOL v10 = (v7 & 7) == 4;
  }
  else {
    BOOL v10 = 1;
  }
  if (!v10)
  {
    if (v7 - 800 > 0x31F)
    {
      if (*v5)
      {
        uint64_t v14 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        uint64_t v6 = v16;
      }
      uint64_t v11 = (char *)sub_1885AC0(v7, v14, v6, a3);
    }
    else
    {
      uint64_t v11 = (char *)sub_18859DC((uint64_t **)(a1 + 16), v7, v6, (uint64_t)&off_2539A90, (uint64_t *)(a1 + 8), a3);
    }
    goto LABEL_22;
  }
  if (v6)
  {
    a3[10].i32[0] = v7 - 1;
    return v16;
  }
  return 0;
}

char *sub_1472458(uint64_t a1, char *a2, _DWORD *a3)
{
  char v4 = a2;
  if (*(unsigned char *)(a1 + 40))
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    uint64_t v6 = *(void *)(a1 + 48);
    char *v4 = 10;
    unsigned int v7 = *(_DWORD *)(v6 + 44);
    v4[1] = v7;
    if (v7 > 0x7F) {
      unsigned int v8 = sub_188A9CC(v7, v4 + 1);
    }
    else {
      unsigned int v8 = v4 + 2;
    }
    char v4 = sub_15B43E4(v6, v8, a3);
  }
  if (*(_WORD *)(a1 + 26)) {
    char v4 = sub_1886844(a1 + 16, 100, 200, v4, a3);
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    uint64_t v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    uint64_t v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    v4 += v14;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v12, v13, v4);
}

uint64_t sub_147258C(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  if (*(unsigned char *)(a1 + 40))
  {
    uint64_t v3 = sub_15B4924(*(void *)(a1 + 48));
    v2 += v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v6 + 31) < 0) {
      uint64_t v7 = *(void *)(v6 + 16);
    }
    else {
      uint64_t v7 = *(unsigned __int8 *)(v6 + 31);
    }
    v2 += v7;
  }
  *(_DWORD *)(a1 + 44) = v2;
  return v2;
}

void sub_1472620(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a2 + 40))
  {
    uint64_t v4 = *(uint64_t (****)())(a2 + 48);
    *(_DWORD *)(a1 + 40) |= 1u;
    uint64_t v5 = *(void *)(a1 + 48);
    if (!v5)
    {
      uint64_t v6 = *(void *)(a1 + 8);
      uint64_t v7 = (void *)(v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (v6) {
        uint64_t v7 = (void *)*v7;
      }
      uint64_t v5 = sub_15C1CB4((uint64_t)v7);
      *(void *)(a1 + 48) = v5;
      uint64_t v4 = *(uint64_t (****)())(a2 + 48);
    }
    if (v4) {
      unsigned int v8 = v4;
    }
    else {
      unsigned int v8 = &off_253F2E8;
    }
    sub_15B04F0(v5, (uint64_t)v8);
  }
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_14726D4(uint64_t a1)
{
  uint64_t result = sub_18856CC(a1 + 16);
  if (result)
  {
    if ((*(unsigned char *)(a1 + 40) & 1) == 0) {
      return 1;
    }
    uint64_t result = sub_15B06D8(*(void *)(a1 + 48));
    if (result) {
      return 1;
    }
  }
  return result;
}

void *sub_1472718@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.WaypointLocation");
}

uint64_t sub_1472728(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_24B6188;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  return a1;
}

void sub_14727A4(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_14727D4(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1472848(void *a1)
{
  sub_14727D4(a1);

  operator delete();
}

char *sub_1472880(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v25 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    unsigned int v8 = v25 + 1;
    unsigned int v9 = *v25;
    if (*v25 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unsigned int v8 = (char *)sub_188C180((uint64_t)v25, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unsigned int v8 = v25 + 2;
      }
    }
    unint64_t v25 = v8;
    if (v9 >> 3 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_13;
    }
    v5 |= 2u;
    uint64_t v15 = v8 + 1;
    uint64_t v16 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_25;
    }
    int v17 = *v15;
    uint64_t v16 = v16 + (v17 << 7) - 128;
    if ((v17 & 0x80000000) == 0)
    {
      uint64_t v15 = v8 + 2;
LABEL_25:
      unint64_t v25 = v15;
      *(void *)(a1 + 32) = v16;
      goto LABEL_30;
    }
    uint64_t v21 = (char *)sub_188C138((uint64_t)v8, v16);
    unint64_t v25 = v21;
    *(void *)(a1 + 32) = v22;
    if (!v21) {
      goto LABEL_39;
    }
LABEL_30:
    if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 >> 3 == 1 && v9 == 8)
  {
    v5 |= 1u;
    uint64_t v18 = v8 + 1;
    uint64_t v19 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_29;
    }
    int v20 = *v18;
    uint64_t v19 = v19 + (v20 << 7) - 128;
    if ((v20 & 0x80000000) == 0)
    {
      uint64_t v18 = v8 + 2;
LABEL_29:
      unint64_t v25 = v18;
      *(void *)(a1 + 24) = v19;
      goto LABEL_30;
    }
    uint64_t v23 = (char *)sub_188C138((uint64_t)v8, v19);
    unint64_t v25 = v23;
    *(void *)(a1 + 24) = v24;
    if (!v23) {
      goto LABEL_39;
    }
    goto LABEL_30;
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      uint64_t v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unsigned int v8 = v25;
    }
    unint64_t v25 = (char *)sub_1885AC0(v9, v14, v8, a3);
    if (!v25) {
      goto LABEL_39;
    }
    goto LABEL_30;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_39:
  unint64_t v25 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v25;
}

unsigned char *sub_1472A70(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(void *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(void *)(a1 + 32);
    unsigned char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    uint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    uint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

unint64_t sub_1472C14(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    unint64_t v2 = 0;
    goto LABEL_8;
  }
  if (v1)
  {
    unint64_t v2 = ((9 * (__clz(*(void *)(a1 + 24) | 1) ^ 0x3F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  unint64_t v2 = 0;
  if ((v1 & 2) != 0) {
LABEL_7:
  }
    v2 += ((9 * (__clz(*(void *)(a1 + 32) | 1) ^ 0x3F) + 73) >> 6) + 1;
LABEL_8:
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v5 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    v2 += v6;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_1472CB4()
{
  return 1;
}

void *sub_1472CBC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.WaypointUUID");
}

uint64_t sub_1472CCC(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_24B6208;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  return a1;
}

void sub_1472D48(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_1472D78(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1472DEC(void *a1)
{
  sub_1472D78(a1);

  operator delete();
}

char *sub_1472E24(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v25 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    unint64_t v8 = v25 + 1;
    unsigned int v9 = *v25;
    if (*v25 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unint64_t v8 = (char *)sub_188C180((uint64_t)v25, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unint64_t v8 = v25 + 2;
      }
    }
    unint64_t v25 = v8;
    if (v9 >> 3 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_13;
    }
    v5 |= 2u;
    unint64_t v15 = v8 + 1;
    uint64_t v16 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_25;
    }
    int v17 = *v15;
    uint64_t v16 = v16 + (v17 << 7) - 128;
    if ((v17 & 0x80000000) == 0)
    {
      unint64_t v15 = v8 + 2;
LABEL_25:
      unint64_t v25 = v15;
      *(void *)(a1 + 32) = v16;
      goto LABEL_30;
    }
    uint64_t v21 = (char *)sub_188C138((uint64_t)v8, v16);
    unint64_t v25 = v21;
    *(void *)(a1 + 32) = v22;
    if (!v21) {
      goto LABEL_39;
    }
LABEL_30:
    if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 >> 3 == 1 && v9 == 8)
  {
    v5 |= 1u;
    uint64_t v18 = v8 + 1;
    uint64_t v19 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_29;
    }
    int v20 = *v18;
    uint64_t v19 = v19 + (v20 << 7) - 128;
    if ((v20 & 0x80000000) == 0)
    {
      uint64_t v18 = v8 + 2;
LABEL_29:
      unint64_t v25 = v18;
      *(void *)(a1 + 24) = v19;
      goto LABEL_30;
    }
    uint64_t v23 = (char *)sub_188C138((uint64_t)v8, v19);
    unint64_t v25 = v23;
    *(void *)(a1 + 24) = v24;
    if (!v23) {
      goto LABEL_39;
    }
    goto LABEL_30;
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      uint64_t v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unint64_t v8 = v25;
    }
    unint64_t v25 = (char *)sub_1885AC0(v9, v14, v8, a3);
    if (!v25) {
      goto LABEL_39;
    }
    goto LABEL_30;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_39:
  unint64_t v25 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v25;
}

unsigned char *sub_1473014(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(void *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(void *)(a1 + 32);
    unsigned char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    uint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    uint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

unint64_t sub_14731B8(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    unint64_t v2 = 0;
    goto LABEL_8;
  }
  if (v1)
  {
    unint64_t v2 = ((9 * (__clz(*(void *)(a1 + 24) | 1) ^ 0x3F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  unint64_t v2 = 0;
  if ((v1 & 2) != 0) {
LABEL_7:
  }
    v2 += ((9 * (__clz(*(void *)(a1 + 32) | 1) ^ 0x3F) + 73) >> 6) + 1;
LABEL_8:
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v5 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    v2 += v6;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_1473258()
{
  return 1;
}

void *sub_1473260@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.UUID");
}

uint64_t sub_1473270(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_24B6288;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  return a1;
}

void sub_14732EC(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_147331C(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1473390(void *a1)
{
  sub_147331C(a1);

  operator delete();
}

char *sub_14733C8(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v34 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v34, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    unint64_t v8 = v34 + 1;
    unsigned int v9 = *v34;
    if (*v34 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unint64_t v8 = (char *)sub_188C180((uint64_t)v34, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unint64_t v8 = v34 + 2;
      }
    }
    uint64_t v34 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_29;
        }
        v5 |= 1u;
        unint64_t v12 = v8 + 1;
        uint64_t v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        uint64_t v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          unint64_t v12 = v8 + 2;
LABEL_13:
          uint64_t v34 = v12;
          *(unsigned char *)(a1 + 24) = v13 != 0;
          goto LABEL_36;
        }
        uint64_t v26 = (char *)sub_188C138((uint64_t)v8, v13);
        uint64_t v34 = v26;
        *(unsigned char *)(a1 + 24) = v27 != 0;
        if (v26) {
          goto LABEL_36;
        }
        goto LABEL_49;
      case 2u:
        if (v9 != 16) {
          goto LABEL_29;
        }
        v5 |= 2u;
        unint64_t v15 = v8 + 1;
        uint64_t v16 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_18;
        }
        int v17 = *v15;
        uint64_t v16 = v16 + (v17 << 7) - 128;
        if (v17 < 0)
        {
          uint64_t v28 = (char *)sub_188C138((uint64_t)v8, v16);
          uint64_t v34 = v28;
          *(unsigned char *)(a1 + 25) = v29 != 0;
          if (!v28) {
            goto LABEL_49;
          }
        }
        else
        {
          unint64_t v15 = v8 + 2;
LABEL_18:
          uint64_t v34 = v15;
          *(unsigned char *)(a1 + 25) = v16 != 0;
        }
        goto LABEL_36;
      case 3u:
        if (v9 != 24) {
          goto LABEL_29;
        }
        v5 |= 4u;
        uint64_t v18 = v8 + 1;
        uint64_t v19 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_23;
        }
        int v20 = *v18;
        uint64_t v19 = v19 + (v20 << 7) - 128;
        if (v20 < 0)
        {
          unint64_t v30 = (char *)sub_188C138((uint64_t)v8, v19);
          uint64_t v34 = v30;
          *(unsigned char *)(a1 + 26) = v31 != 0;
          if (!v30) {
            goto LABEL_49;
          }
        }
        else
        {
          uint64_t v18 = v8 + 2;
LABEL_23:
          uint64_t v34 = v18;
          *(unsigned char *)(a1 + 26) = v19 != 0;
        }
        goto LABEL_36;
      case 4u:
        if (v9 != 32) {
          goto LABEL_29;
        }
        v5 |= 8u;
        uint64_t v21 = v8 + 1;
        uint64_t v22 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_28;
        }
        int v23 = *v21;
        uint64_t v22 = v22 + (v23 << 7) - 128;
        if (v23 < 0)
        {
          uint64_t v32 = (char *)sub_188C138((uint64_t)v8, v22);
          uint64_t v34 = v32;
          *(unsigned char *)(a1 + 27) = v33 != 0;
          if (!v32) {
            goto LABEL_49;
          }
        }
        else
        {
          uint64_t v21 = v8 + 2;
LABEL_28:
          uint64_t v34 = v21;
          *(unsigned char *)(a1 + 27) = v22 != 0;
        }
        goto LABEL_36;
      default:
LABEL_29:
        if (v9) {
          BOOL v24 = (v9 & 7) == 4;
        }
        else {
          BOOL v24 = 1;
        }
        if (!v24)
        {
          if (*v7)
          {
            unint64_t v25 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            unint64_t v25 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unint64_t v8 = v34;
          }
          uint64_t v34 = (char *)sub_1885AC0(v9, v25, v8, a3);
          if (!v34) {
            goto LABEL_49;
          }
LABEL_36:
          if (sub_11947B8((uint64_t)a3, &v34, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_49:
        }
          uint64_t v34 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v34;
    }
  }
}

unsigned char *sub_14736E0(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    char v7 = *(unsigned char *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v7;
    v4 += 2;
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v8 = *(unsigned char *)(a1 + 25);
  unsigned char *v4 = 16;
  v4[1] = v8;
  v4 += 2;
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_18;
    }
    goto LABEL_15;
  }
LABEL_12:
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v9 = *(unsigned char *)(a1 + 26);
  unsigned char *v4 = 24;
  v4[1] = v9;
  v4 += 2;
  if ((v6 & 8) != 0)
  {
LABEL_15:
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v10 = *(unsigned char *)(a1 + 27);
    unsigned char *v4 = 32;
    v4[1] = v10;
    v4 += 2;
  }
LABEL_18:
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return v4;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    int v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    int v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(v4, v14, (int)v15);
    v4 += v16;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v14, v15, v4);
}

uint64_t sub_147387C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  uint64_t v2 = 2 * (v1 & 1);
  if ((v1 & 2) != 0) {
    v2 += 2;
  }
  if ((v1 & 4) != 0) {
    v2 += 2;
  }
  if ((v1 & 8) != 0) {
    v2 += 2;
  }
  if ((v1 & 0xF) != 0) {
    uint64_t v3 = v2;
  }
  else {
    uint64_t v3 = 0;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v6 + 31) < 0) {
      uint64_t v7 = *(void *)(v6 + 16);
    }
    else {
      uint64_t v7 = *(unsigned __int8 *)(v6 + 31);
    }
    v3 += v7;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

uint64_t sub_14738EC()
{
  return 1;
}

void *sub_14738F4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.WaypointTyped.WaypointNameProperties");
}

double sub_1473904(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3 = a2 | 2;
  if (!a3) {
    uint64_t v3 = a2;
  }
  *(void *)a1 = off_24B6308;
  *(void *)(a1 + 8) = v3;
  double result = 0.0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_DWORD *)(a1 + 80) = 2;
  return result;
}

uint64_t sub_1473944(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_24B6308;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  int v5 = *(_DWORD *)(a2 + 16);
  if (v5) {
    operator new();
  }
  *(void *)(a1 + 24) = 0;
  if ((v5 & 2) != 0) {
    operator new();
  }
  *(void *)(a1 + 32) = 0;
  if ((v5 & 4) != 0) {
    operator new();
  }
  *(void *)(a1 + 40) = 0;
  if ((v5 & 8) != 0) {
    operator new();
  }
  *(void *)(a1 + 48) = 0;
  if ((v5 & 0x10) != 0) {
    operator new();
  }
  *(void *)(a1 + 56) = 0;
  long long v6 = *(_OWORD *)(a2 + 64);
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = v6;
  return a1;
}

void sub_1473AE0()
{
}

uint64_t sub_1473B88(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_1473C0C((uint64_t (***)())a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

uint64_t (***sub_1473C0C(uint64_t (***result)()))()
{
  if (result != &off_2539B38)
  {
    int v1 = result;
    uint64_t v2 = (uint64_t)result[3];
    if (v2)
    {
      sub_14703FC(v2);
      operator delete();
    }
    uint64_t v3 = (uint64_t)v1[4];
    if (v3)
    {
      sub_1471668(v3);
      operator delete();
    }
    uint64_t v4 = (uint64_t)v1[5];
    if (v4)
    {
      sub_1472168(v4);
      operator delete();
    }
    int v5 = v1[6];
    if (v5)
    {
      sub_147331C(v5);
      operator delete();
    }
    double result = (uint64_t (***)())v1[7];
    if (result)
    {
      sub_14727D4(result);
      operator delete();
    }
  }
  return result;
}

void sub_1473CF8(uint64_t a1)
{
  sub_1473B88(a1);

  operator delete();
}

char *sub_1473D30(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v54 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v54, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    char v8 = v54 + 1;
    unsigned int v9 = *v54;
    if (*v54 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        char v8 = (char *)sub_188C180((uint64_t)v54, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        char v8 = v54 + 2;
      }
    }
    uint64_t v54 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_77;
        }
        unint64_t v12 = v8 + 1;
        unint64_t v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        int v15 = v13 + (v14 << 7);
        unint64_t v13 = (v15 - 128);
        if (v14 < 0)
        {
          uint64_t v54 = (char *)sub_188C138((uint64_t)v8, (v15 - 128));
          if (!v54) {
            goto LABEL_119;
          }
          unint64_t v13 = v44;
        }
        else
        {
          unint64_t v12 = v8 + 2;
LABEL_13:
          uint64_t v54 = v12;
        }
        if ((v13 - 2) <= 2)
        {
          *(_DWORD *)(a1 + 16) |= 0x400u;
          *(_DWORD *)(a1 + 80) = v13;
          goto LABEL_85;
        }
        if (*v7) {
          uint64_t v52 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          uint64_t v52 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v53 = 1;
        goto LABEL_111;
      case 2u:
        if (v9 != 18) {
          goto LABEL_77;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v16 = *(void *)(a1 + 24);
        if (!v16)
        {
          int v17 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            int v17 = (void *)*v17;
          }
          uint64_t v16 = sub_14794AC((uint64_t)v17);
          *(void *)(a1 + 24) = v16;
          char v8 = v54;
        }
        uint64_t v18 = (char *)sub_1474388(a3, v16, (unsigned __int8 *)v8);
        goto LABEL_84;
      case 3u:
        if (v9 != 26) {
          goto LABEL_77;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v19 = *(void *)(a1 + 32);
        if (!v19)
        {
          int v20 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            int v20 = (void *)*v20;
          }
          uint64_t v19 = sub_1479508((uint64_t)v20);
          *(void *)(a1 + 32) = v19;
          char v8 = v54;
        }
        uint64_t v18 = sub_1474418(a3, v19, (unsigned __int8 *)v8);
        goto LABEL_84;
      case 4u:
        if (v9 != 34) {
          goto LABEL_77;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v21 = *(void **)(a1 + 40);
        if (!v21)
        {
          uint64_t v22 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v22 = (void *)*v22;
          }
          uint64_t v21 = sub_14795A4((uint64_t)v22);
          *(void *)(a1 + 40) = v21;
          char v8 = v54;
        }
        uint64_t v18 = sub_14744A8(a3, (uint64_t)v21, (unsigned __int8 *)v8);
        goto LABEL_84;
      case 5u:
        if (v9 != 40) {
          goto LABEL_77;
        }
        v5 |= 0x20u;
        int v23 = v8 + 1;
        uint64_t v24 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_38;
        }
        int v25 = *v23;
        uint64_t v24 = v24 + (v25 << 7) - 128;
        if (v25 < 0)
        {
          uint64_t v45 = (char *)sub_188C138((uint64_t)v8, v24);
          uint64_t v54 = v45;
          *(unsigned char *)(a1 + 64) = v46 != 0;
          if (!v45) {
            goto LABEL_119;
          }
        }
        else
        {
          int v23 = v8 + 2;
LABEL_38:
          uint64_t v54 = v23;
          *(unsigned char *)(a1 + 64) = v24 != 0;
        }
        goto LABEL_85;
      case 6u:
        if (v9 != 48) {
          goto LABEL_77;
        }
        v5 |= 0x40u;
        uint64_t v26 = v8 + 1;
        uint64_t v27 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_43;
        }
        int v28 = *v26;
        uint64_t v27 = v27 + (v28 << 7) - 128;
        if (v28 < 0)
        {
          unint64_t v47 = (char *)sub_188C138((uint64_t)v8, v27);
          uint64_t v54 = v47;
          *(unsigned char *)(a1 + 65) = v48 != 0;
          if (!v47) {
            goto LABEL_119;
          }
        }
        else
        {
          uint64_t v26 = v8 + 2;
LABEL_43:
          uint64_t v54 = v26;
          *(unsigned char *)(a1 + 65) = v27 != 0;
        }
        goto LABEL_85;
      case 7u:
        if (v9 != 56) {
          goto LABEL_77;
        }
        uint64_t v29 = v8 + 1;
        unint64_t v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_48;
        }
        int v30 = *v29;
        int v31 = v13 + (v30 << 7);
        unint64_t v13 = (v31 - 128);
        if (v30 < 0)
        {
          uint64_t v54 = (char *)sub_188C138((uint64_t)v8, (v31 - 128));
          if (!v54) {
            goto LABEL_119;
          }
          unint64_t v13 = v49;
        }
        else
        {
          uint64_t v29 = v8 + 2;
LABEL_48:
          uint64_t v54 = v29;
        }
        if (v13 <= 3)
        {
          *(_DWORD *)(a1 + 16) |= 0x80u;
          *(_DWORD *)(a1 + 68) = v13;
          goto LABEL_85;
        }
        if (*v7) {
          uint64_t v52 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          uint64_t v52 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v53 = 7;
        goto LABEL_111;
      case 8u:
        if (v9 != 66) {
          goto LABEL_77;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v32 = *(void *)(a1 + 48);
        if (!v32)
        {
          uint64_t v33 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v33 = (void *)*v33;
          }
          uint64_t v32 = sub_14796F8((uint64_t)v33);
          *(void *)(a1 + 48) = v32;
          char v8 = v54;
        }
        uint64_t v18 = sub_13AFC50(a3, v32, (unsigned __int8 *)v8);
        goto LABEL_84;
      case 9u:
        if (v9 != 74) {
          goto LABEL_77;
        }
        *(_DWORD *)(a1 + 16) |= 0x10u;
        uint64_t v34 = *(void **)(a1 + 56);
        if (!v34)
        {
          uint64_t v35 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v35 = (void *)*v35;
          }
          uint64_t v34 = sub_1479600((uint64_t)v35);
          *(void *)(a1 + 56) = v34;
          char v8 = v54;
        }
        uint64_t v18 = sub_1396C90(a3, (uint64_t)v34, (unsigned __int8 *)v8);
        goto LABEL_84;
      case 0xAu:
        if (v9 != 80) {
          goto LABEL_77;
        }
        uint64_t v36 = v8 + 1;
        unint64_t v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_67;
        }
        int v37 = *v36;
        int v38 = v13 + (v37 << 7);
        unint64_t v13 = (v38 - 128);
        if (v37 < 0)
        {
          uint64_t v54 = (char *)sub_188C138((uint64_t)v8, (v38 - 128));
          if (!v54) {
            goto LABEL_119;
          }
          unint64_t v13 = v50;
        }
        else
        {
          uint64_t v36 = v8 + 2;
LABEL_67:
          uint64_t v54 = v36;
        }
        if (v13 <= 1)
        {
          *(_DWORD *)(a1 + 16) |= 0x100u;
          *(_DWORD *)(a1 + 72) = v13;
          goto LABEL_85;
        }
        if (*v7) {
          uint64_t v52 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          uint64_t v52 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v53 = 10;
        goto LABEL_111;
      case 0xBu:
        if (v9 != 88) {
          goto LABEL_77;
        }
        int v39 = v8 + 1;
        unint64_t v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_74;
        }
        int v40 = *v39;
        int v41 = v13 + (v40 << 7);
        unint64_t v13 = (v41 - 128);
        if (v40 < 0)
        {
          uint64_t v54 = (char *)sub_188C138((uint64_t)v8, (v41 - 128));
          if (!v54) {
            goto LABEL_119;
          }
          unint64_t v13 = v51;
        }
        else
        {
          int v39 = v8 + 2;
LABEL_74:
          uint64_t v54 = v39;
        }
        if (v13 > 4)
        {
          if (*v7) {
            uint64_t v52 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v52 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          int v53 = 11;
LABEL_111:
          sub_188C020(v53, v13, v52);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 0x200u;
          *(_DWORD *)(a1 + 76) = v13;
        }
        goto LABEL_85;
      default:
LABEL_77:
        if (v9) {
          BOOL v42 = (v9 & 7) == 4;
        }
        else {
          BOOL v42 = 1;
        }
        if (!v42)
        {
          if (*v7)
          {
            uint64_t v43 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v43 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            char v8 = v54;
          }
          uint64_t v18 = (char *)sub_1885AC0(v9, v43, v8, a3);
LABEL_84:
          uint64_t v54 = v18;
          if (!v18) {
            goto LABEL_119;
          }
LABEL_85:
          if (sub_11947B8((uint64_t)a3, &v54, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_119:
        }
          uint64_t v54 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v54;
    }
  }
}

uint64_t sub_1474388(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_14705FC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1474418(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1471820(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_14744A8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_14722C4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1474538(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 0x400) != 0)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 80);
    char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 24);
    char *v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 44);
    v4[1] = v11;
    if (v11 > 0x7F) {
      unint64_t v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      unint64_t v12 = v4 + 2;
    }
    uint64_t v4 = sub_1470B74(v10, v12, a3);
    if ((v6 & 2) == 0)
    {
LABEL_10:
      if ((v6 & 4) == 0) {
        goto LABEL_11;
      }
      goto LABEL_27;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_10;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v13 = *(void *)(a1 + 32);
  char *v4 = 26;
  unsigned int v14 = *(_DWORD *)(v13 + 20);
  v4[1] = v14;
  if (v14 > 0x7F) {
    int v15 = sub_188A9CC(v14, v4 + 1);
  }
  else {
    int v15 = v4 + 2;
  }
  uint64_t v4 = sub_1471A80(v13, (unint64_t)v15, a3);
  if ((v6 & 4) == 0)
  {
LABEL_11:
    if ((v6 & 0x20) == 0) {
      goto LABEL_12;
    }
    goto LABEL_33;
  }
LABEL_27:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v16 = *(void *)(a1 + 40);
  char *v4 = 34;
  unsigned int v17 = *(_DWORD *)(v16 + 44);
  v4[1] = v17;
  if (v17 > 0x7F) {
    uint64_t v18 = sub_188A9CC(v17, v4 + 1);
  }
  else {
    uint64_t v18 = v4 + 2;
  }
  uint64_t v4 = sub_1472458(v16, v18, a3);
  if ((v6 & 0x20) == 0)
  {
LABEL_12:
    if ((v6 & 0x40) == 0) {
      goto LABEL_13;
    }
    goto LABEL_36;
  }
LABEL_33:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v19 = *(unsigned char *)(a1 + 64);
  char *v4 = 40;
  v4[1] = v19;
  v4 += 2;
  if ((v6 & 0x40) == 0)
  {
LABEL_13:
    if ((v6 & 0x80) == 0) {
      goto LABEL_45;
    }
    goto LABEL_39;
  }
LABEL_36:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v20 = *(unsigned char *)(a1 + 65);
  char *v4 = 48;
  v4[1] = v20;
  v4 += 2;
  if ((v6 & 0x80) != 0)
  {
LABEL_39:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v21 = *(int *)(a1 + 68);
    char *v4 = 56;
    v4[1] = v21;
    if (v21 > 0x7F)
    {
      v4[1] = v21 | 0x80;
      unint64_t v22 = v21 >> 7;
      v4[2] = v21 >> 7;
      v4 += 3;
      if (v21 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v23 = v22 >> 14;
          v22 >>= 7;
          *v4++ = v22;
        }
        while (v23);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_45:
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v24 = *(void *)(a1 + 48);
    char *v4 = 66;
    unsigned int v25 = *(_DWORD *)(v24 + 20);
    v4[1] = v25;
    if (v25 > 0x7F) {
      uint64_t v26 = sub_188A9CC(v25, v4 + 1);
    }
    else {
      uint64_t v26 = v4 + 2;
    }
    uint64_t v4 = sub_14736E0(v24, (unint64_t)v26, a3);
    if ((v6 & 0x10) == 0)
    {
LABEL_47:
      if ((v6 & 0x100) == 0) {
        goto LABEL_67;
      }
      goto LABEL_61;
    }
  }
  else if ((v6 & 0x10) == 0)
  {
    goto LABEL_47;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v27 = *(void *)(a1 + 56);
  char *v4 = 74;
  unsigned int v28 = *(_DWORD *)(v27 + 20);
  v4[1] = v28;
  if (v28 > 0x7F) {
    uint64_t v29 = sub_188A9CC(v28, v4 + 1);
  }
  else {
    uint64_t v29 = v4 + 2;
  }
  uint64_t v4 = sub_1472A70(v27, (unint64_t)v29, a3);
  if ((v6 & 0x100) != 0)
  {
LABEL_61:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v30 = *(int *)(a1 + 72);
    char *v4 = 80;
    v4[1] = v30;
    if (v30 > 0x7F)
    {
      v4[1] = v30 | 0x80;
      unint64_t v31 = v30 >> 7;
      v4[2] = v30 >> 7;
      v4 += 3;
      if (v30 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v32 = v31 >> 14;
          v31 >>= 7;
          *v4++ = v31;
        }
        while (v32);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_67:
  if ((v6 & 0x200) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v33 = *(int *)(a1 + 76);
    char *v4 = 88;
    v4[1] = v33;
    if (v33 > 0x7F)
    {
      v4[1] = v33 | 0x80;
      unint64_t v34 = v33 >> 7;
      v4[2] = v33 >> 7;
      v4 += 3;
      if (v33 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v35 = v34 >> 14;
          v34 >>= 7;
          *v4++ = v34;
        }
        while (v35);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v36 = *(void *)(a1 + 8);
  if ((v36 & 1) == 0) {
    return v4;
  }
  unint64_t v38 = v36 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v38 + 31) < 0)
  {
    int v39 = *(void **)(v38 + 8);
    uint64_t v40 = *(void *)(v38 + 16);
  }
  else
  {
    int v39 = (void *)(v38 + 8);
    LODWORD(v40) = *(unsigned __int8 *)(v38 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v40)
  {
    uint64_t v41 = (int)v40;
    memcpy(v4, v39, (int)v40);
    v4 += v41;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v39, v40, v4);
}

uint64_t sub_1474A68(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if (!(_BYTE)v2)
  {
    uint64_t result = 0;
    goto LABEL_22;
  }
  if (v2)
  {
    uint64_t v5 = sub_1470FE8(*(void *)(a1 + 24));
    uint64_t v3 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_7:
    uint64_t v6 = sub_1471C90(*(void *)(a1 + 32));
    v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_8:
  if ((v2 & 4) == 0)
  {
    if ((v2 & 8) == 0) {
      goto LABEL_10;
    }
LABEL_28:
    uint64_t v13 = sub_147387C(*(void *)(a1 + 48));
    v3 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 0x10) == 0) {
      goto LABEL_12;
    }
    goto LABEL_11;
  }
  uint64_t v12 = sub_147258C(*(void *)(a1 + 40));
  v3 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 8) != 0) {
    goto LABEL_28;
  }
LABEL_10:
  if ((v2 & 0x10) != 0)
  {
LABEL_11:
    unint64_t v7 = sub_1472C14(*(void *)(a1 + 56));
    v3 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  uint64_t v8 = v3 + 2;
  if ((v2 & 0x20) == 0) {
    uint64_t v8 = v3;
  }
  if ((v2 & 0x40) != 0) {
    uint64_t result = v8 + 2;
  }
  else {
    uint64_t result = v8;
  }
  if ((v2 & 0x80) != 0)
  {
    int v9 = *(_DWORD *)(a1 + 68);
    uint64_t v10 = ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if (v9 >= 0) {
      uint64_t v11 = v10;
    }
    else {
      uint64_t v11 = 11;
    }
    result += v11;
  }
LABEL_22:
  if ((v2 & 0x700) == 0) {
    goto LABEL_42;
  }
  if ((v2 & 0x100) != 0)
  {
    int v14 = *(_DWORD *)(a1 + 72);
    if (v14 < 0) {
      uint64_t v15 = 11;
    }
    else {
      uint64_t v15 = ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    result += v15;
    if ((v2 & 0x200) == 0)
    {
LABEL_25:
      if ((v2 & 0x400) == 0) {
        goto LABEL_42;
      }
      goto LABEL_38;
    }
  }
  else if ((v2 & 0x200) == 0)
  {
    goto LABEL_25;
  }
  int v16 = *(_DWORD *)(a1 + 76);
  if (v16 < 0) {
    uint64_t v17 = 11;
  }
  else {
    uint64_t v17 = ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  result += v17;
  if ((v2 & 0x400) != 0)
  {
LABEL_38:
    int v18 = *(_DWORD *)(a1 + 80);
    if (v18 < 0) {
      uint64_t v19 = 11;
    }
    else {
      uint64_t v19 = ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    result += v19;
  }
LABEL_42:
  uint64_t v20 = *(void *)(a1 + 8);
  if (v20)
  {
    unint64_t v21 = v20 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v21 + 31) < 0) {
      uint64_t v22 = *(void *)(v21 + 16);
    }
    else {
      uint64_t v22 = *(unsigned __int8 *)(v21 + 31);
    }
    result += v22;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

void sub_1474CD4(uint64_t a1, uint64_t a2)
{
  if (a2 != a1)
  {
    sub_13E8E44(a1);
    sub_13EDA8C(a1, a2);
  }
}

__n128 sub_1474D20(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a2 + 8) = v2;
  LODWORD(v2) = *(_DWORD *)(a1 + 16);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a2 + 16) = v2;
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = v4;
  uint64_t v5 = *(void *)(a1 + 40);
  uint64_t v6 = *(void *)(a1 + 48);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a2 + 40) = v5;
  *(void *)(a2 + 48) = v6;
  uint64_t v7 = *(void *)(a1 + 56);
  uint64_t v8 = *(void *)(a1 + 64);
  __n128 result = *(__n128 *)(a2 + 56);
  *(__n128 *)(a1 + 56) = result;
  *(void *)(a2 + 56) = v7;
  *(void *)(a2 + 64) = v8;
  uint64_t v10 = *(void *)(a1 + 72);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a2 + 72) = v10;
  LODWORD(v10) = *(_DWORD *)(a1 + 80);
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  *(_DWORD *)(a2 + 80) = v10;
  return result;
}

void *sub_1474D94@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.WaypointTyped");
}

void *sub_1474DA4(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1474E18(void *a1)
{
  sub_1474DA4(a1);

  operator delete();
}

uint64_t sub_1474E50(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 7) != 0)
  {
    *(_DWORD *)(a1 + 32) = 0;
    *(void *)(a1 + 24) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_1474E78(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v31 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v31, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v31 + 1;
    unsigned int v9 = *v31;
    if (*v31 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v31, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v31 + 2;
      }
    }
    unint64_t v31 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 == 3)
    {
      if (v9 != 24) {
        goto LABEL_14;
      }
      v5 |= 4u;
      int v16 = v8 + 1;
      int v17 = *v8;
      if ((*v8 & 0x80000000) == 0) {
        goto LABEL_26;
      }
      int v18 = *v16;
      int v17 = v17 + (v18 << 7) - 128;
      if ((v18 & 0x80000000) == 0)
      {
        int v16 = v8 + 2;
LABEL_26:
        unint64_t v31 = v16;
        *(_DWORD *)(a1 + 32) = v17;
        goto LABEL_36;
      }
      unsigned int v25 = (char *)sub_188C0D0((uint64_t)v8, v17);
      unint64_t v31 = v25;
      *(_DWORD *)(a1 + 32) = v26;
      if (!v25) {
        goto LABEL_47;
      }
      goto LABEL_36;
    }
    if (v12 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_14;
    }
    v5 |= 2u;
    uint64_t v19 = v8 + 1;
    int v20 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_31;
    }
    int v21 = *v19;
    int v20 = v20 + (v21 << 7) - 128;
    if ((v21 & 0x80000000) == 0)
    {
      uint64_t v19 = v8 + 2;
LABEL_31:
      unint64_t v31 = v19;
      *(_DWORD *)(a1 + 28) = v20;
      goto LABEL_36;
    }
    uint64_t v27 = (char *)sub_188C0D0((uint64_t)v8, v20);
    unint64_t v31 = v27;
    *(_DWORD *)(a1 + 28) = v28;
    if (!v27) {
      goto LABEL_47;
    }
LABEL_36:
    if (sub_11947B8((uint64_t)a3, &v31, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v12 == 1 && v9 == 8)
  {
    v5 |= 1u;
    uint64_t v22 = v8 + 1;
    int v23 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_35;
    }
    int v24 = *v22;
    int v23 = v23 + (v24 << 7) - 128;
    if ((v24 & 0x80000000) == 0)
    {
      uint64_t v22 = v8 + 2;
LABEL_35:
      unint64_t v31 = v22;
      *(_DWORD *)(a1 + 24) = v23;
      goto LABEL_36;
    }
    uint64_t v29 = (char *)sub_188C0D0((uint64_t)v8, v23);
    unint64_t v31 = v29;
    *(_DWORD *)(a1 + 24) = v30;
    if (!v29) {
      goto LABEL_47;
    }
    goto LABEL_36;
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (*v7)
    {
      uint64_t v15 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = v31;
    }
    unint64_t v31 = (char *)sub_1885AC0(v9, v15, v8, a3);
    if (!v31) {
      goto LABEL_47;
    }
    goto LABEL_36;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_47:
  unint64_t v31 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v31;
}

unsigned char *sub_14750CC(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 28);
    unsigned char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v13 = *(_DWORD *)(a1 + 32);
    unsigned char *v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unsigned int v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return v4;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    uint64_t v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    uint64_t v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(v4, v19, (int)v20);
    v4 += v21;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v19, v20, v4);
}

uint64_t sub_14752EC(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 7) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_10;
  }
  if (v1)
  {
    uint64_t v2 = ((9 * (__clz(*(_DWORD *)(a1 + 24) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v2 = 0;
  if ((v1 & 2) != 0) {
LABEL_7:
  }
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 28) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_8:
  if ((v1 & 4) != 0) {
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 32) | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v5 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    v2 += v6;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_14753B8()
{
  return 1;
}

void *sub_14753C0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.SuggestionEntry.Highlight");
}

void *sub_14753D0(void *a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  a1[1] = v5;
  *a1 = off_24B6408;
  sub_1882BC4((uint64_t)(a1 + 2), a2);
  a1[5] = 0;
  a1[6] = a2;
  a1[7] = 0;
  a1[8] = 0;
  a1[9] = a2;
  a1[10] = 0;
  a1[11] = 0;
  a1[12] = a2;
  a1[13] = 0;
  a1[14] = 0;
  a1[15] = a2;
  a1[16] = 0;
  a1[17] = 0;
  a1[18] = &qword_2550250;
  a1[19] = &qword_2550250;
  a1[20] = &qword_2550250;
  a1[21] = &qword_2550250;
  a1[22] = 0;
  return a1;
}

void sub_1475464(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_1475494(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_16;
    }
  }
  else if (v4)
  {
    goto LABEL_16;
  }
  uint64_t v5 = (void ***)(a1 + 144);
  if (*(uint64_t **)(a1 + 144) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 152) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 152));
  }
  if (*(uint64_t **)(a1 + 160) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 160));
  }
  if (*(uint64_t **)(a1 + 168) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 168));
  }
  if ((uint64_t (***)())a1 != &off_2539B90 && *(void *)(a1 + 176))
  {
    sub_15B0994();
    operator delete();
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_16:
  sub_122BB0C((void *)(a1 + 120));
  sub_14938CC((void *)(a1 + 96));
  sub_14939CC((void *)(a1 + 72));
  sub_1889DE8((void *)(a1 + 48));
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_14755D8(uint64_t a1)
{
  sub_1475494(a1);

  operator delete();
}

uint64_t sub_1475610(uint64_t a1)
{
  sub_18843A4((unsigned char *)(a1 + 16));
  uint64_t result = sub_188CC00(a1 + 48);
  uint64_t v3 = *(unsigned int *)(a1 + 80);
  if ((int)v3 >= 1)
  {
    uint64_t v4 = (uint64_t *)(*(void *)(a1 + 88) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = sub_1474E50(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 80) = 0;
  }
  uint64_t v6 = *(unsigned int *)(a1 + 104);
  if ((int)v6 >= 1)
  {
    unsigned int v7 = (uint64_t *)(*(void *)(a1 + 112) + 8);
    do
    {
      uint64_t v8 = *v7++;
      uint64_t result = sub_140CD94(v8);
      --v6;
    }
    while (v6);
    *(_DWORD *)(a1 + 104) = 0;
  }
  uint64_t v9 = *(unsigned int *)(a1 + 128);
  if ((int)v9 >= 1)
  {
    unsigned int v10 = (uint64_t *)(*(void *)(a1 + 136) + 8);
    do
    {
      uint64_t v11 = *v10++;
      uint64_t result = sub_146A460(v11);
      --v9;
    }
    while (v9);
    *(_DWORD *)(a1 + 128) = 0;
  }
  int v12 = *(_DWORD *)(a1 + 40);
  if ((v12 & 0x1F) == 0) {
    goto LABEL_20;
  }
  if ((v12 & 1) == 0)
  {
    if ((v12 & 2) == 0) {
      goto LABEL_16;
    }
LABEL_28:
    unint64_t v16 = *(void *)(a1 + 152) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v16 + 23) < 0)
    {
      **(unsigned char **)unint64_t v16 = 0;
      *(void *)(v16 + 8) = 0;
      if ((v12 & 4) != 0) {
        goto LABEL_32;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v16 = 0;
      *(unsigned char *)(v16 + 23) = 0;
      if ((v12 & 4) != 0) {
        goto LABEL_32;
      }
    }
LABEL_17:
    if ((v12 & 8) == 0) {
      goto LABEL_18;
    }
    goto LABEL_36;
  }
  unint64_t v15 = *(void *)(a1 + 144) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v15 + 23) < 0)
  {
    **(unsigned char **)unint64_t v15 = 0;
    *(void *)(v15 + 8) = 0;
    if ((v12 & 2) != 0) {
      goto LABEL_28;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v15 = 0;
    *(unsigned char *)(v15 + 23) = 0;
    if ((v12 & 2) != 0) {
      goto LABEL_28;
    }
  }
LABEL_16:
  if ((v12 & 4) == 0) {
    goto LABEL_17;
  }
LABEL_32:
  unint64_t v17 = *(void *)(a1 + 160) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v17 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v17 = 0;
    *(unsigned char *)(v17 + 23) = 0;
    if ((v12 & 8) != 0) {
      goto LABEL_36;
    }
LABEL_18:
    if ((v12 & 0x10) == 0) {
      goto LABEL_20;
    }
    goto LABEL_19;
  }
  **(unsigned char **)unint64_t v17 = 0;
  *(void *)(v17 + 8) = 0;
  if ((v12 & 8) == 0) {
    goto LABEL_18;
  }
LABEL_36:
  unint64_t v18 = *(void *)(a1 + 168) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v18 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v18 = 0;
    *(unsigned char *)(v18 + 23) = 0;
    if ((v12 & 0x10) == 0) {
      goto LABEL_20;
    }
LABEL_19:
    uint64_t result = (uint64_t)sub_15B09D0(*(void *)(a1 + 176));
    goto LABEL_20;
  }
  **(unsigned char **)unint64_t v18 = 0;
  *(void *)(v18 + 8) = 0;
  if ((v12 & 0x10) != 0) {
    goto LABEL_19;
  }
LABEL_20:
  char v14 = *(unsigned char *)(a1 + 8);
  uint64_t v13 = a1 + 8;
  *(_DWORD *)(v13 + 32) = 0;
  if (v14)
  {
    return sub_188B4AC((uint64_t *)v13);
  }
  return result;
}

uint64_t sub_14757DC(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unint64_t v49 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v49, a3[11].i32[1])) {
    return *(void *)v49;
  }
  uint64_t v6 = (void *)(a1 + 8);
  unsigned int v7 = (uint64_t **)(a1 + 48);
  while (2)
  {
    uint64_t v8 = (unsigned __int8 *)(*(void *)v49 + 1);
    unsigned int v9 = **(unsigned char **)v49;
    if ((char)**(unsigned char **)v49 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        uint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v49, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (unsigned __int8 *)(*(void *)v49 + 2);
      }
    }
    *(void *)unint64_t v49 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_77;
        }
        int v12 = (const std::string::value_type *)(v8 - 1);
        while (1)
        {
          uint64_t v13 = (char *)(v12 + 1);
          *(void *)unint64_t v49 = v12 + 1;
          char v14 = *(_DWORD **)(a1 + 64);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 56), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 56) = v15 + 1;
            unint64_t v16 = *(std::string **)&v14[2 * v15 + 2];
          }
          else
          {
            if (!*v7) {
              operator new();
            }
            void *v18 = v17;
            v18[1] = sub_3A6EDC;
            *unint64_t v17 = 0;
            v17[1] = 0;
            v17[2] = 0;
            unint64_t v16 = (std::string *)sub_188CDC8(a1 + 48, (uint64_t)v17);
            uint64_t v13 = *(char **)v49;
          }
          int v12 = sub_188C244(v16, v13, (uint64_t)a3);
          *(void *)unint64_t v49 = v12;
          if (!v12) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_55;
          }
        }
      case 2u:
        if (v9 != 18) {
          goto LABEL_77;
        }
        uint64_t v19 = (char *)(v8 - 1);
        while (1)
        {
          uint64_t v20 = (unsigned __int8 *)(v19 + 1);
          *(void *)unint64_t v49 = v19 + 1;
          uint64_t v21 = *(_DWORD **)(a1 + 88);
          if (v21 && (uint64_t v22 = *(int *)(a1 + 80), (int)v22 < *v21))
          {
            *(_DWORD *)(a1 + 80) = v22 + 1;
            uint64_t v23 = *(void *)&v21[2 * v22 + 2];
          }
          else
          {
            uint64_t v24 = sub_14797FC(*(void *)(a1 + 72));
            uint64_t v23 = sub_188CDC8(a1 + 72, v24);
            uint64_t v20 = *(unsigned __int8 **)v49;
          }
          uint64_t v19 = sub_1475D5C(a3, v23, v20);
          *(void *)unint64_t v49 = v19;
          if (!v19) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v19 || *v19 != 18) {
            goto LABEL_55;
          }
        }
      case 3u:
        if (v9 != 26) {
          goto LABEL_77;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        uint64_t v25 = *(void *)(a1 + 8);
        int v26 = (uint64_t *)(v25 & 0xFFFFFFFFFFFFFFFCLL);
        if (v25) {
          int v26 = (uint64_t *)*v26;
        }
        uint64_t v27 = (void *)(a1 + 144);
        goto LABEL_53;
      case 4u:
        if (v9 != 34) {
          goto LABEL_77;
        }
        *(_DWORD *)(a1 + 40) |= 0x10u;
        uint64_t v28 = *(void *)(a1 + 176);
        if (!v28)
        {
          uint64_t v29 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v29 = (void *)*v29;
          }
          uint64_t v28 = sub_15C1918((uint64_t)v29);
          *(void *)(a1 + 176) = v28;
          uint64_t v8 = *(unsigned __int8 **)v49;
        }
        int v30 = sub_1198F14(a3, v28, v8);
        goto LABEL_54;
      case 5u:
        if (v9 != 42) {
          goto LABEL_77;
        }
        *(_DWORD *)(a1 + 40) |= 2u;
        uint64_t v31 = *(void *)(a1 + 8);
        int v26 = (uint64_t *)(v31 & 0xFFFFFFFFFFFFFFFCLL);
        if (v31) {
          int v26 = (uint64_t *)*v26;
        }
        uint64_t v27 = (void *)(a1 + 152);
        goto LABEL_53;
      case 6u:
        if (v9 != 50) {
          goto LABEL_77;
        }
        *(_DWORD *)(a1 + 40) |= 4u;
        uint64_t v32 = *(void *)(a1 + 8);
        int v26 = (uint64_t *)(v32 & 0xFFFFFFFFFFFFFFFCLL);
        if (v32) {
          int v26 = (uint64_t *)*v26;
        }
        uint64_t v27 = (void *)(a1 + 160);
        goto LABEL_53;
      case 7u:
        if (v9 != 58) {
          goto LABEL_77;
        }
        *(_DWORD *)(a1 + 40) |= 8u;
        uint64_t v33 = *(void *)(a1 + 8);
        int v26 = (uint64_t *)(v33 & 0xFFFFFFFFFFFFFFFCLL);
        if (v33) {
          int v26 = (uint64_t *)*v26;
        }
        uint64_t v27 = (void *)(a1 + 168);
LABEL_53:
        unint64_t v34 = (std::string *)sub_1880F84(v27, v26);
        int v30 = (void *)sub_188C244(v34, *(char **)v49, (uint64_t)a3);
        goto LABEL_54;
      case 8u:
        if (v9 != 66) {
          goto LABEL_77;
        }
        unint64_t v35 = v8 - 1;
        while (1)
        {
          uint64_t v36 = v35 + 1;
          *(void *)unint64_t v49 = v35 + 1;
          int v37 = *(_DWORD **)(a1 + 112);
          if (v37 && (uint64_t v38 = *(int *)(a1 + 104), (int)v38 < *v37))
          {
            *(_DWORD *)(a1 + 104) = v38 + 1;
            uint64_t v39 = *(void *)&v37[2 * v38 + 2];
          }
          else
          {
            sub_1479294(*(void *)(a1 + 96));
            uint64_t v39 = sub_188CDC8(a1 + 96, v40);
            uint64_t v36 = *(unsigned __int8 **)v49;
          }
          unint64_t v35 = (unsigned __int8 *)sub_12C8D4C(a3, v39, v36);
          *(void *)unint64_t v49 = v35;
          if (!v35) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v35 || *v35 != 66) {
            goto LABEL_55;
          }
        }
      case 9u:
        if (v9 != 74) {
          goto LABEL_77;
        }
        uint64_t v41 = v8 - 1;
        while (1)
        {
          BOOL v42 = v41 + 1;
          *(void *)unint64_t v49 = v41 + 1;
          uint64_t v43 = *(_DWORD **)(a1 + 136);
          if (v43 && (uint64_t v44 = *(int *)(a1 + 128), (int)v44 < *v43))
          {
            *(_DWORD *)(a1 + 128) = v44 + 1;
            uint64_t v45 = *(void *)&v43[2 * v44 + 2];
          }
          else
          {
            uint64_t v46 = sub_1478FB4(*(void *)(a1 + 120));
            uint64_t v45 = sub_188CDC8(a1 + 120, (uint64_t)v46);
            BOOL v42 = *(unsigned __int8 **)v49;
          }
          uint64_t v41 = (unsigned __int8 *)sub_11EAB7C(a3, v45, v42);
          *(void *)unint64_t v49 = v41;
          if (!v41) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v41 || *v41 != 74) {
            goto LABEL_55;
          }
        }
      default:
LABEL_77:
        if (v9) {
          BOOL v47 = (v9 & 7) == 4;
        }
        else {
          BOOL v47 = 1;
        }
        if (!v47)
        {
          if (v9 - 4000 > 0x63F)
          {
            if (*v6)
            {
              uint64_t v48 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              uint64_t v48 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              uint64_t v8 = *(unsigned __int8 **)v49;
            }
            int v30 = sub_1885AC0(v9, v48, (char *)v8, a3);
          }
          else
          {
            int v30 = sub_18859DC((uint64_t **)(a1 + 16), v9, (char *)v8, (uint64_t)&off_2539B90, (uint64_t *)(a1 + 8), a3);
          }
LABEL_54:
          *(void *)unint64_t v49 = v30;
          if (!v30) {
            return 0;
          }
LABEL_55:
          if (sub_11947B8((uint64_t)a3, (char **)v49, a3[11].i32[1])) {
            return *(void *)v49;
          }
          continue;
        }
        if (!v8) {
          return 0;
        }
        a3[10].i32[0] = v9 - 1;
        return *(void *)v49;
    }
  }
}

char *sub_1475D5C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1474E78(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1475DEC(uint64_t a1, char *a2, unint64_t *a3)
{
  uint64_t v6 = *(unsigned int *)(a1 + 56);
  if ((int)v6 >= 1)
  {
    uint64_t v7 = 0;
    uint64_t v8 = 8 * v6;
    do
    {
      unsigned int v9 = *(void **)(*(void *)(a1 + 64) + v7 + 8);
      if (*((char *)v9 + 23) < 0)
      {
        int64_t v10 = v9[1];
        if (v10 > 127) {
          goto LABEL_12;
        }
      }
      else
      {
        int64_t v10 = *((unsigned __int8 *)v9 + 23);
      }
      if ((uint64_t)(*a3 - (void)a2 + 14) >= v10)
      {
        *a2 = 10;
        a2[1] = v10;
        if (*((char *)v9 + 23) < 0) {
          unsigned int v9 = (void *)*v9;
        }
        unsigned int v11 = a2 + 2;
        memcpy(v11, v9, v10);
        a2 = &v11[v10];
        goto LABEL_10;
      }
LABEL_12:
      a2 = (char *)sub_188A868(a3, 1, (uint64_t)v9, a2);
LABEL_10:
      v7 += 8;
    }
    while (v8 != v7);
  }
  int v12 = *(_DWORD *)(a1 + 80);
  if (v12)
  {
    for (int i = 0; i != v12; ++i)
    {
      if (*a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v14 = *(void *)(*(void *)(a1 + 88) + 8 * i + 8);
      *a2 = 18;
      unsigned int v15 = *(_DWORD *)(v14 + 20);
      a2[1] = v15;
      if (v15 > 0x7F) {
        unint64_t v16 = sub_188A9CC(v15, a2 + 1);
      }
      else {
        unint64_t v16 = a2 + 2;
      }
      a2 = sub_14750CC(v14, (unint64_t)v16, a3);
    }
  }
  int v17 = *(_DWORD *)(a1 + 40);
  if (v17)
  {
    a2 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 144) & 0xFFFFFFFFFFFFFFFELL), a2);
    if ((v17 & 0x10) == 0)
    {
LABEL_23:
      if ((v17 & 2) == 0) {
        goto LABEL_24;
      }
      goto LABEL_54;
    }
  }
  else if ((v17 & 0x10) == 0)
  {
    goto LABEL_23;
  }
  if (*a3 <= (unint64_t)a2) {
    a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
  }
  uint64_t v30 = *(void *)(a1 + 176);
  *a2 = 34;
  unsigned int v31 = *(_DWORD *)(v30 + 44);
  a2[1] = v31;
  if (v31 > 0x7F) {
    uint64_t v32 = sub_188A9CC(v31, a2 + 1);
  }
  else {
    uint64_t v32 = a2 + 2;
  }
  a2 = sub_15B0C0C(v30, v32, a3);
  if ((v17 & 2) == 0)
  {
LABEL_24:
    if ((v17 & 4) == 0) {
      goto LABEL_25;
    }
    goto LABEL_55;
  }
LABEL_54:
  a2 = sub_117A0AC(a3, 5, (const void **)(*(void *)(a1 + 152) & 0xFFFFFFFFFFFFFFFELL), a2);
  if ((v17 & 4) == 0)
  {
LABEL_25:
    if ((v17 & 8) == 0) {
      goto LABEL_27;
    }
    goto LABEL_26;
  }
LABEL_55:
  a2 = sub_117A0AC(a3, 6, (const void **)(*(void *)(a1 + 160) & 0xFFFFFFFFFFFFFFFELL), a2);
  if ((v17 & 8) != 0) {
LABEL_26:
  }
    a2 = sub_117A0AC(a3, 7, (const void **)(*(void *)(a1 + 168) & 0xFFFFFFFFFFFFFFFELL), a2);
LABEL_27:
  int v18 = *(_DWORD *)(a1 + 104);
  if (v18)
  {
    for (int j = 0; j != v18; ++j)
    {
      if (*a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v20 = *(void *)(*(void *)(a1 + 112) + 8 * j + 8);
      *a2 = 66;
      unsigned int v21 = *(_DWORD *)(v20 + 20);
      a2[1] = v21;
      if (v21 > 0x7F) {
        uint64_t v22 = sub_188A9CC(v21, a2 + 1);
      }
      else {
        uint64_t v22 = a2 + 2;
      }
      a2 = sub_146D340(v20, (unint64_t)v22, a3);
    }
  }
  int v23 = *(_DWORD *)(a1 + 128);
  if (v23)
  {
    for (int k = 0; k != v23; ++k)
    {
      if (*a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v25 = *(void *)(*(void *)(a1 + 136) + 8 * k + 8);
      *a2 = 74;
      unsigned int v26 = *(_DWORD *)(v25 + 20);
      a2[1] = v26;
      if (v26 > 0x7F) {
        uint64_t v27 = sub_188A9CC(v26, a2 + 1);
      }
      else {
        uint64_t v27 = a2 + 2;
      }
      a2 = sub_146A644(v25, v27, a3);
    }
  }
  if (*(_WORD *)(a1 + 26)) {
    a2 = sub_1886844(a1 + 16, 500, 700, a2, a3);
  }
  uint64_t v28 = *(void *)(a1 + 8);
  if ((v28 & 1) == 0) {
    return a2;
  }
  unint64_t v33 = v28 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v33 + 31) < 0)
  {
    unint64_t v34 = *(void **)(v33 + 8);
    uint64_t v35 = *(void *)(v33 + 16);
  }
  else
  {
    unint64_t v34 = (void *)(v33 + 8);
    LODWORD(v35) = *(unsigned __int8 *)(v33 + 31);
  }
  if ((uint64_t)(*a3 - (void)a2) >= (int)v35)
  {
    uint64_t v36 = (int)v35;
    memcpy(a2, v34, (int)v35);
    a2 += v36;
    return a2;
  }

  return (char *)sub_188A528(a3, (char *)v34, v35, a2);
}

uint64_t sub_1476200(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(unsigned int *)(a1 + 56);
  uint64_t v4 = v2 + v3;
  if ((int)v3 >= 1)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v6 = *v5++;
      uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
      uint64_t v8 = *(void *)(v6 + 8);
      if ((v7 & 0x80u) == 0) {
        uint64_t v8 = v7;
      }
      v4 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6);
      --v3;
    }
    while (v3);
  }
  uint64_t v9 = *(int *)(a1 + 80);
  uint64_t v10 = v4 + v9;
  uint64_t v11 = *(void *)(a1 + 88);
  if (v11) {
    int v12 = (uint64_t *)(v11 + 8);
  }
  else {
    int v12 = 0;
  }
  if (v9)
  {
    uint64_t v13 = 8 * v9;
    do
    {
      uint64_t v14 = *v12++;
      uint64_t v15 = sub_14752EC(v14);
      v10 += v15 + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6);
      v13 -= 8;
    }
    while (v13);
  }
  uint64_t v16 = *(int *)(a1 + 104);
  uint64_t v17 = v10 + v16;
  uint64_t v18 = *(void *)(a1 + 112);
  if (v18) {
    uint64_t v19 = (uint64_t *)(v18 + 8);
  }
  else {
    uint64_t v19 = 0;
  }
  if (v16)
  {
    uint64_t v20 = 8 * v16;
    do
    {
      uint64_t v21 = *v19++;
      uint64_t v22 = sub_146DAD4(v21);
      v17 += v22 + ((9 * (__clz(v22 | 1) ^ 0x1F) + 73) >> 6);
      v20 -= 8;
    }
    while (v20);
  }
  uint64_t v23 = *(int *)(a1 + 128);
  uint64_t v24 = v17 + v23;
  uint64_t v25 = *(void *)(a1 + 136);
  if (v25) {
    unsigned int v26 = (uint64_t *)(v25 + 8);
  }
  else {
    unsigned int v26 = 0;
  }
  if (v23)
  {
    uint64_t v27 = 8 * v23;
    do
    {
      uint64_t v28 = *v26++;
      uint64_t v29 = sub_146A7A4(v28);
      v24 += v29 + ((9 * (__clz(v29 | 1) ^ 0x1F) + 73) >> 6);
      v27 -= 8;
    }
    while (v27);
  }
  int v30 = *(_DWORD *)(a1 + 40);
  if ((v30 & 0x1F) == 0) {
    goto LABEL_31;
  }
  if (v30)
  {
    unint64_t v34 = *(void *)(a1 + 144) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v35 = *(unsigned __int8 *)(v34 + 23);
    uint64_t v36 = *(void *)(v34 + 8);
    if ((v35 & 0x80u) == 0) {
      uint64_t v36 = v35;
    }
    v24 += v36 + ((9 * (__clz(v36 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v30 & 2) == 0)
    {
LABEL_27:
      if ((v30 & 4) == 0) {
        goto LABEL_28;
      }
LABEL_39:
      unint64_t v40 = *(void *)(a1 + 160) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v41 = *(unsigned __int8 *)(v40 + 23);
      uint64_t v42 = *(void *)(v40 + 8);
      if ((v41 & 0x80u) == 0) {
        uint64_t v42 = v41;
      }
      v24 += v42 + ((9 * (__clz(v42 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v30 & 8) == 0)
      {
LABEL_29:
        if ((v30 & 0x10) == 0) {
          goto LABEL_31;
        }
        goto LABEL_30;
      }
      goto LABEL_42;
    }
  }
  else if ((v30 & 2) == 0)
  {
    goto LABEL_27;
  }
  unint64_t v37 = *(void *)(a1 + 152) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v38 = *(unsigned __int8 *)(v37 + 23);
  uint64_t v39 = *(void *)(v37 + 8);
  if ((v38 & 0x80u) == 0) {
    uint64_t v39 = v38;
  }
  v24 += v39 + ((9 * (__clz(v39 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v30 & 4) != 0) {
    goto LABEL_39;
  }
LABEL_28:
  if ((v30 & 8) == 0) {
    goto LABEL_29;
  }
LABEL_42:
  unint64_t v43 = *(void *)(a1 + 168) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v44 = *(unsigned __int8 *)(v43 + 23);
  uint64_t v45 = *(void *)(v43 + 8);
  if ((v44 & 0x80u) == 0) {
    uint64_t v45 = v44;
  }
  v24 += v45 + ((9 * (__clz(v45 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v30 & 0x10) != 0)
  {
LABEL_30:
    uint64_t v31 = sub_15B0D90(*(void *)(a1 + 176));
    v24 += v31 + ((9 * (__clz(v31 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_31:
  uint64_t v32 = *(void *)(a1 + 8);
  if (v32)
  {
    unint64_t v46 = v32 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v46 + 31) < 0) {
      uint64_t v47 = *(void *)(v46 + 16);
    }
    else {
      uint64_t v47 = *(unsigned __int8 *)(v46 + 31);
    }
    v24 += v47;
  }
  *(_DWORD *)(a1 + 44) = v24;
  return v24;
}

void sub_147650C(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 56);
  if (v4)
  {
    uint64_t v5 = (const std::string **)(*(void *)(a2 + 64) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_188FB98(a1 + 48, v6, v5, v4, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v7 = *(_DWORD *)(a1 + 56) + v4;
    *(_DWORD *)(a1 + 56) = v7;
    uint64_t v8 = *(int **)(a1 + 64);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 80);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 88) + 8);
    uint64_t v11 = (std::string **)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_14945C8((uint64_t *)(a1 + 72), v11, v10, v9, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v12 = *(_DWORD *)(a1 + 80) + v9;
    *(_DWORD *)(a1 + 80) = v12;
    uint64_t v13 = *(int **)(a1 + 88);
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 104);
  if (v14)
  {
    uint64_t v15 = (uint64_t *)(*(void *)(a2 + 112) + 8);
    uint64_t v16 = (uint64_t *)sub_188CCE4(a1 + 96, *(_DWORD *)(a2 + 104));
    sub_14944B0((uint64_t *)(a1 + 96), v16, v15, v14, **(_DWORD **)(a1 + 112) - *(_DWORD *)(a1 + 104));
    int v17 = *(_DWORD *)(a1 + 104) + v14;
    *(_DWORD *)(a1 + 104) = v17;
    uint64_t v18 = *(int **)(a1 + 112);
    if (*v18 < v17) {
      int *v18 = v17;
    }
  }
  int v19 = *(_DWORD *)(a2 + 128);
  if (v19)
  {
    uint64_t v20 = (uint64_t *)(*(void *)(a2 + 136) + 8);
    uint64_t v21 = (std::string **)sub_188CCE4(a1 + 120, *(_DWORD *)(a2 + 128));
    sub_122BC08((std::string *)(a1 + 120), v21, v20, v19, **(_DWORD **)(a1 + 136) - *(_DWORD *)(a1 + 128));
    int v22 = *(_DWORD *)(a1 + 128) + v19;
    *(_DWORD *)(a1 + 128) = v22;
    uint64_t v23 = *(int **)(a1 + 136);
    if (*v23 < v22) {
      int *v23 = v22;
    }
  }
  int v24 = *(_DWORD *)(a2 + 40);
  if ((v24 & 0x1F) == 0) {
    goto LABEL_40;
  }
  if (v24)
  {
    uint64_t v25 = (long long *)(*(void *)(a2 + 144) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 40) |= 1u;
    uint64_t v26 = *(void *)(a1 + 8);
    uint64_t v27 = (uint64_t *)(v26 & 0xFFFFFFFFFFFFFFFCLL);
    if (v26) {
      uint64_t v27 = (uint64_t *)*v27;
    }
    sub_1881DF4((std::string **)(a1 + 144), v25, v27);
    if ((v24 & 2) == 0)
    {
LABEL_16:
      if ((v24 & 4) == 0) {
        goto LABEL_17;
      }
LABEL_26:
      uint64_t v31 = (long long *)(*(void *)(a2 + 160) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 40) |= 4u;
      uint64_t v32 = *(void *)(a1 + 8);
      unint64_t v33 = (uint64_t *)(v32 & 0xFFFFFFFFFFFFFFFCLL);
      if (v32) {
        unint64_t v33 = (uint64_t *)*v33;
      }
      sub_1881DF4((std::string **)(a1 + 160), v31, v33);
      if ((v24 & 8) == 0)
      {
LABEL_18:
        if ((v24 & 0x10) == 0) {
          goto LABEL_40;
        }
        goto LABEL_32;
      }
      goto LABEL_29;
    }
  }
  else if ((v24 & 2) == 0)
  {
    goto LABEL_16;
  }
  uint64_t v28 = (long long *)(*(void *)(a2 + 152) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 40) |= 2u;
  uint64_t v29 = *(void *)(a1 + 8);
  int v30 = (uint64_t *)(v29 & 0xFFFFFFFFFFFFFFFCLL);
  if (v29) {
    int v30 = (uint64_t *)*v30;
  }
  sub_1881DF4((std::string **)(a1 + 152), v28, v30);
  if ((v24 & 4) != 0) {
    goto LABEL_26;
  }
LABEL_17:
  if ((v24 & 8) == 0) {
    goto LABEL_18;
  }
LABEL_29:
  unint64_t v34 = (long long *)(*(void *)(a2 + 168) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 40) |= 8u;
  uint64_t v35 = *(void *)(a1 + 8);
  uint64_t v36 = (uint64_t *)(v35 & 0xFFFFFFFFFFFFFFFCLL);
  if (v35) {
    uint64_t v36 = (uint64_t *)*v36;
  }
  sub_1881DF4((std::string **)(a1 + 168), v34, v36);
  if ((v24 & 0x10) != 0)
  {
LABEL_32:
    *(_DWORD *)(a1 + 40) |= 0x10u;
    uint64_t v37 = *(void *)(a1 + 176);
    if (!v37)
    {
      uint64_t v38 = *(void *)(a1 + 8);
      uint64_t v39 = (void *)(v38 & 0xFFFFFFFFFFFFFFFCLL);
      if (v38) {
        uint64_t v39 = (void *)*v39;
      }
      uint64_t v37 = sub_15C1918((uint64_t)v39);
      *(void *)(a1 + 176) = v37;
    }
    if (*(void *)(a2 + 176)) {
      unint64_t v40 = *(uint64_t (****)())(a2 + 176);
    }
    else {
      unint64_t v40 = &off_253F1A0;
    }
    sub_15B0E24(v37, (uint64_t)v40);
  }
LABEL_40:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v41 = *(void *)(a2 + 8);
  if (v41)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v41 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_1476850(uint64_t a1)
{
  uint64_t result = sub_18856CC(a1 + 16);
  if (result)
  {
    uint64_t v3 = *(unsigned int *)(a1 + 104);
    while ((int)v3 >= 1)
    {
      uint64_t v4 = v3 - 1;
      char v5 = sub_140DEF4(*(void *)(*(void *)(a1 + 112) + 8 * v3));
      uint64_t v3 = v4;
      if ((v5 & 1) == 0) {
        return 0;
      }
    }
    uint64_t v6 = *(unsigned int *)(a1 + 128);
    while ((int)v6 >= 1)
    {
      uint64_t v7 = *(void *)(*(void *)(a1 + 136) + 8 * v6--);
      if ((~*(_DWORD *)(v7 + 16) & 3) != 0) {
        return 0;
      }
    }
    if ((*(unsigned char *)(a1 + 40) & 0x10) == 0) {
      return 1;
    }
    uint64_t result = sub_15B0F18(*(void *)(a1 + 176));
    if (result) {
      return 1;
    }
  }
  return result;
}

void *sub_14768EC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.SuggestionEntry");
}

uint64_t sub_14768FC(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  char v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  sub_1493A4C((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_14769A8(uint64_t a1)
{
  sub_14768FC(a1);

  operator delete();
}

uint64_t sub_14769E0(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_1475610(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  int v5 = *(_DWORD *)(v1 + 16);
  if (v5)
  {
    unint64_t v6 = *(void *)(v1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v6 + 23) < 0)
    {
      **(unsigned char **)unint64_t v6 = 0;
      *(void *)(v6 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v6 = 0;
      *(unsigned char *)(v6 + 23) = 0;
    }
  }
  if ((v5 & 6) != 0) {
    *(void *)(v1 + 56) = 0;
  }
  char v8 = *(unsigned char *)(v1 + 8);
  uint64_t v7 = v1 + 8;
  *(_DWORD *)(v7 + 8) = 0;
  if (v8)
  {
    return sub_188B4AC((uint64_t *)v7);
  }
  return result;
}

uint64_t sub_1476A9C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v35 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v35, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    char v8 = (char *)(*(void *)v35 + 1);
    unsigned int v9 = **(unsigned char **)v35;
    if ((char)**(unsigned char **)v35 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        char v8 = (char *)sub_188C180(*(uint64_t *)v35, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        char v8 = (char *)(*(void *)v35 + 2);
      }
    }
    *(void *)uint64_t v35 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_35;
        }
        int v12 = v8 - 1;
        while (1)
        {
          uint64_t v13 = (unsigned __int8 *)(v12 + 1);
          *(void *)uint64_t v35 = v12 + 1;
          int v14 = *(_DWORD **)(a1 + 40);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 32), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 32) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            int v17 = sub_1479878(*(void *)(a1 + 24));
            uint64_t v16 = sub_188CDC8(a1 + 24, (uint64_t)v17);
            uint64_t v13 = *(unsigned __int8 **)v35;
          }
          int v12 = (char *)sub_1476DF0(a3, v16, v13);
          *(void *)uint64_t v35 = v12;
          if (!v12) {
            goto LABEL_56;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_43;
          }
        }
      case 2u:
        if (v9 != 18) {
          goto LABEL_35;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v18 = *(void *)(a1 + 8);
        int v19 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
        if (v18) {
          int v19 = (uint64_t *)*v19;
        }
        uint64_t v20 = (std::string *)sub_1880F84((void *)(a1 + 48), v19);
        uint64_t v21 = (void *)sub_188C244(v20, *(char **)v35, (uint64_t)a3);
        goto LABEL_42;
      case 3u:
        if (v9 != 24) {
          goto LABEL_35;
        }
        v5 |= 2u;
        int v22 = v8 + 1;
        uint64_t v23 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_27;
        }
        int v24 = *v22;
        uint64_t v23 = v23 + (v24 << 7) - 128;
        if (v24 < 0)
        {
          uint64_t v31 = sub_188C138((uint64_t)v8, v23);
          *(void *)uint64_t v35 = v31;
          *(unsigned char *)(a1 + 56) = v32 != 0;
          if (!v31) {
            goto LABEL_56;
          }
        }
        else
        {
          int v22 = v8 + 2;
LABEL_27:
          *(void *)uint64_t v35 = v22;
          *(unsigned char *)(a1 + 56) = v23 != 0;
        }
        goto LABEL_43;
      case 4u:
        if (v9 != 32) {
          goto LABEL_35;
        }
        uint64_t v25 = v8 + 1;
        unint64_t v26 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_32;
        }
        int v27 = *v25;
        int v28 = v26 + (v27 << 7);
        unint64_t v26 = (v28 - 128);
        if (v27 < 0)
        {
          *(void *)uint64_t v35 = sub_188C138((uint64_t)v8, (v28 - 128));
          if (!*(void *)v35) {
            goto LABEL_56;
          }
          unint64_t v26 = v33;
        }
        else
        {
          uint64_t v25 = v8 + 2;
LABEL_32:
          *(void *)uint64_t v35 = v25;
        }
        if (v26 > 3)
        {
          if (*v7) {
            unint64_t v34 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            unint64_t v34 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(4, v26, v34);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 4u;
          *(_DWORD *)(a1 + 60) = v26;
        }
        goto LABEL_43;
      default:
LABEL_35:
        if (v9) {
          BOOL v29 = (v9 & 7) == 4;
        }
        else {
          BOOL v29 = 1;
        }
        if (!v29)
        {
          if (*v7)
          {
            int v30 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            int v30 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            char v8 = *(char **)v35;
          }
          uint64_t v21 = sub_1885AC0(v9, v30, v8, a3);
LABEL_42:
          *(void *)uint64_t v35 = v21;
          if (!v21) {
            goto LABEL_56;
          }
LABEL_43:
          if (sub_11947B8((uint64_t)a3, (char **)v35, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_56:
        }
          *(void *)uint64_t v35 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v35;
    }
  }
}

uint64_t sub_1476DF0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_14757DC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1476E80(uint64_t a1, char *__dst, unint64_t *a3)
{
  int v6 = *(_DWORD *)(a1 + 32);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 44);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unsigned int v10 = __dst + 2;
      }
      __dst = sub_1475DEC(v8, v10, a3);
    }
  }
  int v11 = *(_DWORD *)(a1 + 16);
  if (v11)
  {
    __dst = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v11 & 2) == 0)
    {
LABEL_11:
      if ((v11 & 4) == 0) {
        goto LABEL_23;
      }
      goto LABEL_17;
    }
  }
  else if ((v11 & 2) == 0)
  {
    goto LABEL_11;
  }
  if (*a3 <= (unint64_t)__dst) {
    __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
  }
  char v12 = *(unsigned char *)(a1 + 56);
  *__dst = 24;
  __dst[1] = v12;
  __dst += 2;
  if ((v11 & 4) != 0)
  {
LABEL_17:
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unint64_t v13 = *(int *)(a1 + 60);
    *__dst = 32;
    __dst[1] = v13;
    if (v13 > 0x7F)
    {
      __dst[1] = v13 | 0x80;
      unint64_t v14 = v13 >> 7;
      __dst[2] = v13 >> 7;
      __dst += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unint64_t v15 = v14 >> 14;
          v14 >>= 7;
          *__dst++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      __dst += 2;
    }
  }
LABEL_23:
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return __dst;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    int v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    int v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if ((uint64_t)(*a3 - (void)__dst) >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(__dst, v19, (int)v20);
    __dst += v21;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v19, v20, __dst);
}

uint64_t sub_14770A8(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_1476200(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 7) != 0)
  {
    if (v8)
    {
      unint64_t v9 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v10 = *(unsigned __int8 *)(v9 + 23);
      uint64_t v11 = *(void *)(v9 + 8);
      if ((v10 & 0x80u) == 0) {
        uint64_t v11 = v10;
      }
      v2 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v8 & 2) != 0) {
      v2 += 2;
    }
    if ((v8 & 4) != 0)
    {
      int v12 = *(_DWORD *)(a1 + 60);
      if (v12 < 0) {
        uint64_t v13 = 11;
      }
      else {
        uint64_t v13 = ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
      v2 += v13;
    }
  }
  uint64_t v14 = *(void *)(a1 + 8);
  if (v14)
  {
    unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v16 + 31) < 0) {
      uint64_t v17 = *(void *)(v16 + 16);
    }
    else {
      uint64_t v17 = *(unsigned __int8 *)(v16 + 31);
    }
    v2 += v17;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

void sub_14771E8(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_1494644((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    int v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *int v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 7) != 0)
  {
    if (v9)
    {
      uint64_t v11 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v12 = *(void *)(a1 + 8);
      uint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
      if (v12) {
        uint64_t v13 = (uint64_t *)*v13;
      }
      sub_1881DF4((std::string **)(a1 + 48), v11, v13);
      if ((v9 & 2) == 0)
      {
LABEL_7:
        if ((v9 & 4) == 0)
        {
LABEL_9:
          *(_DWORD *)(a1 + 16) |= v9;
          goto LABEL_10;
        }
LABEL_8:
        *(_DWORD *)(a1 + 60) = *(_DWORD *)(a2 + 60);
        goto LABEL_9;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_7;
    }
    *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
    if ((v9 & 4) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
LABEL_10:
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

BOOL sub_1477328(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  do
  {
    int v3 = v2;
    if ((int)v2 < 1) {
      break;
    }
    uint64_t v4 = v2 - 1;
    char v5 = sub_1476850(*(void *)(*(void *)(a1 + 40) + 8 * v2));
    uint64_t v2 = v4;
  }
  while ((v5 & 1) != 0);
  return v3 < 1;
}

void *sub_1477380@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.SuggestionEntryList");
}

uint64_t sub_1477390(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = a1 + 16;
  *(void *)a1 = off_24B6508;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  int v6 = *(_DWORD *)(a2 + 24);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 32);
    int v8 = (std::string **)sub_188CCE4(a1 + 16, *(_DWORD *)(a2 + 24));
    sub_188FB98(v5, v8, (const std::string **)(v7 + 8), v6, **(_DWORD **)(a1 + 32) - *(_DWORD *)(a1 + 24));
    int v9 = *(_DWORD *)(a1 + 24) + v6;
    *(_DWORD *)(a1 + 24) = v9;
    uint64_t v10 = *(int **)(a1 + 32);
    if (*v10 < v9) {
      *uint64_t v10 = v9;
    }
  }
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  int v11 = *(_DWORD *)(a2 + 48);
  if (v11)
  {
    uint64_t v12 = *(void *)(a2 + 56);
    uint64_t v13 = (std::string **)sub_188CCE4(a1 + 40, *(_DWORD *)(a2 + 48));
    sub_188FB98(a1 + 40, v13, (const std::string **)(v12 + 8), v11, **(_DWORD **)(a1 + 56) - *(_DWORD *)(a1 + 48));
    int v14 = *(_DWORD *)(a1 + 48) + v11;
    *(_DWORD *)(a1 + 48) = v14;
    unint64_t v15 = *(int **)(a1 + 56);
    if (*v15 < v14) {
      *unint64_t v15 = v14;
    }
  }
  *(_DWORD *)(a1 + 64) = 0;
  uint64_t v16 = *(void *)(a2 + 8);
  if (v16) {
    sub_188B4F8(v4, (v16 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return a1;
}

void sub_14774E0(_Unwind_Exception *a1)
{
  sub_1889DE8(v4);
  sub_1889DE8(v3);
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_1477530(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1889DE8(a1 + 5);
  sub_1889DE8(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_14775B4(void *a1)
{
  sub_1477530(a1);

  operator delete();
}

uint64_t sub_14775EC(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v30 = a2;
  if ((sub_11947B8((uint64_t)a3, (char **)v30, a3[11].i32[1]) & 1) == 0)
  {
    int v6 = (uint64_t **)(a1 + 40);
    uint64_t v7 = (uint64_t **)(a1 + 16);
    int v8 = (void *)(a1 + 8);
    while (1)
    {
      int v9 = (char *)(*(void *)v30 + 1);
      unsigned int v10 = **(unsigned char **)v30;
      if ((char)**(unsigned char **)v30 < 0)
      {
        unsigned int v11 = v10 + (*v9 << 7);
        unsigned int v10 = v11 - 128;
        if (*v9 < 0)
        {
          int v9 = (char *)sub_188C180(*(uint64_t *)v30, v11 - 128);
          unsigned int v10 = v12;
        }
        else
        {
          int v9 = (char *)(*(void *)v30 + 2);
        }
      }
      *(void *)int v30 = v9;
      if (v10 >> 3 == 2)
      {
        if (v10 == 18)
        {
          uint64_t v16 = v9 - 1;
          while (1)
          {
            uint64_t v17 = (char *)(v16 + 1);
            *(void *)int v30 = v16 + 1;
            unint64_t v18 = *(_DWORD **)(a1 + 56);
            if (v18 && (uint64_t v19 = *(int *)(a1 + 48), (int)v19 < *v18))
            {
              *(_DWORD *)(a1 + 48) = v19 + 1;
              uint64_t v20 = *(std::string **)&v18[2 * v19 + 2];
            }
            else
            {
              if (!*v6) {
                operator new();
              }
              *int v22 = v21;
              v22[1] = sub_3A6EDC;
              *uint64_t v21 = 0;
              v21[1] = 0;
              int v21[2] = 0;
              uint64_t v20 = (std::string *)sub_188CDC8(a1 + 40, (uint64_t)v21);
              uint64_t v17 = *(char **)v30;
            }
            uint64_t v16 = sub_188C244(v20, v17, (uint64_t)a3);
            *(void *)int v30 = v16;
            if (!v16) {
              goto LABEL_48;
            }
            if (*(void *)a3 <= (unint64_t)v16 || *v16 != 18) {
              goto LABEL_43;
            }
          }
        }
      }
      else if (v10 >> 3 == 1 && v10 == 10)
      {
        uint64_t v23 = v9 - 1;
        while (1)
        {
          int v24 = (char *)(v23 + 1);
          *(void *)int v30 = v23 + 1;
          uint64_t v25 = *(_DWORD **)(a1 + 32);
          if (v25 && (uint64_t v26 = *(int *)(a1 + 24), (int)v26 < *v25))
          {
            *(_DWORD *)(a1 + 24) = v26 + 1;
            int v27 = *(std::string **)&v25[2 * v26 + 2];
          }
          else
          {
            if (!*v7) {
              operator new();
            }
            *BOOL v29 = v28;
            v29[1] = sub_3A6EDC;
            *int v28 = 0;
            v28[1] = 0;
            v28[2] = 0;
            int v27 = (std::string *)sub_188CDC8(a1 + 16, (uint64_t)v28);
            int v24 = *(char **)v30;
          }
          uint64_t v23 = sub_188C244(v27, v24, (uint64_t)a3);
          *(void *)int v30 = v23;
          if (!v23) {
            goto LABEL_48;
          }
          if (*(void *)a3 <= (unint64_t)v23 || *v23 != 10) {
            goto LABEL_43;
          }
        }
      }
      if (!v10 || (v10 & 7) == 4) {
        break;
      }
      if (*v8)
      {
        unint64_t v15 = (std::string *)((*v8 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        unint64_t v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        int v9 = *(char **)v30;
      }
      *(void *)int v30 = sub_1885AC0(v10, v15, v9, a3);
      if (!*(void *)v30) {
        goto LABEL_48;
      }
LABEL_43:
      if (sub_11947B8((uint64_t)a3, (char **)v30, a3[11].i32[1])) {
        return *(void *)v30;
      }
    }
    if (v9)
    {
      a3[10].i32[0] = v10 - 1;
      return *(void *)v30;
    }
LABEL_48:
    *(void *)int v30 = 0;
  }
  return *(void *)v30;
}

char *sub_14778CC(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v6 = *(unsigned int *)(a1 + 24);
  if ((int)v6 >= 1)
  {
    uint64_t v7 = 0;
    uint64_t v8 = 8 * v6;
    do
    {
      int v9 = *(void **)(*(void *)(a1 + 32) + v7 + 8);
      if (*((char *)v9 + 23) < 0)
      {
        int64_t v10 = v9[1];
        if (v10 > 127) {
          goto LABEL_12;
        }
      }
      else
      {
        int64_t v10 = *((unsigned __int8 *)v9 + 23);
      }
      if (*(void *)a3 - (void)__dst + 14 >= v10)
      {
        *__dst = 10;
        __dst[1] = v10;
        if (*((char *)v9 + 23) < 0) {
          int v9 = (void *)*v9;
        }
        unsigned int v11 = __dst + 2;
        memcpy(v11, v9, v10);
        __dst = &v11[v10];
        goto LABEL_10;
      }
LABEL_12:
      __dst = (char *)sub_188A868(a3, 1, (uint64_t)v9, __dst);
LABEL_10:
      v7 += 8;
    }
    while (v8 != v7);
  }
  uint64_t v12 = *(unsigned int *)(a1 + 48);
  if ((int)v12 >= 1)
  {
    uint64_t v13 = 0;
    uint64_t v14 = 8 * v12;
    do
    {
      unint64_t v15 = *(void **)(*(void *)(a1 + 56) + v13 + 8);
      if (*((char *)v15 + 23) < 0)
      {
        int64_t v16 = v15[1];
        if (v16 > 127) {
          goto LABEL_24;
        }
      }
      else
      {
        int64_t v16 = *((unsigned __int8 *)v15 + 23);
      }
      if (*(void *)a3 - (void)__dst + 14 >= v16)
      {
        *__dst = 18;
        __dst[1] = v16;
        if (*((char *)v15 + 23) < 0) {
          unint64_t v15 = (void *)*v15;
        }
        uint64_t v17 = __dst + 2;
        memcpy(v17, v15, v16);
        __dst = &v17[v16];
        goto LABEL_22;
      }
LABEL_24:
      __dst = (char *)sub_188A868(a3, 2, (uint64_t)v15, __dst);
LABEL_22:
      v13 += 8;
    }
    while (v14 != v13);
  }
  uint64_t v18 = *(void *)(a1 + 8);
  if ((v18 & 1) == 0) {
    return __dst;
  }
  unint64_t v20 = v18 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v20 + 31) < 0)
  {
    uint64_t v21 = *(void **)(v20 + 8);
    uint64_t v22 = *(void *)(v20 + 16);
  }
  else
  {
    uint64_t v21 = (void *)(v20 + 8);
    LODWORD(v22) = *(unsigned __int8 *)(v20 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v22)
  {
    uint64_t v23 = (int)v22;
    memcpy(__dst, v21, (int)v22);
    __dst += v23;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v21, v22, __dst);
}

uint64_t sub_1477ADC(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 24);
  if ((int)v1 < 1)
  {
    uint64_t v3 = *(unsigned int *)(a1 + 24);
  }
  else
  {
    uint64_t v2 = (uint64_t *)(*(void *)(a1 + 32) + 8);
    uint64_t v3 = *(unsigned int *)(a1 + 24);
    do
    {
      uint64_t v4 = *v2++;
      uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
      uint64_t v6 = *(void *)(v4 + 8);
      if ((v5 & 0x80u) == 0) {
        uint64_t v6 = v5;
      }
      v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6);
      --v1;
    }
    while (v1);
  }
  uint64_t v7 = *(unsigned int *)(a1 + 48);
  uint64_t v8 = v3 + v7;
  if ((int)v7 >= 1)
  {
    int v9 = (uint64_t *)(*(void *)(a1 + 56) + 8);
    do
    {
      uint64_t v10 = *v9++;
      uint64_t v11 = *(unsigned __int8 *)(v10 + 23);
      uint64_t v12 = *(void *)(v10 + 8);
      if ((v11 & 0x80u) == 0) {
        uint64_t v12 = v11;
      }
      v8 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6);
      --v7;
    }
    while (v7);
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if (v13)
  {
    unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v15 + 31) < 0) {
      uint64_t v16 = *(void *)(v15 + 16);
    }
    else {
      uint64_t v16 = *(unsigned __int8 *)(v15 + 31);
    }
    v8 += v16;
  }
  *(_DWORD *)(a1 + 64) = v8;
  return v8;
}

std::string *sub_1477BCC(std::string *result, uint64_t a2)
{
  if ((std::string *)a2 != result)
  {
    uint64_t v4 = result;
    sub_13E123C((uint64_t)result);
    return sub_1216B14(v4, a2);
  }
  return result;
}

uint64_t sub_1477C18()
{
  return 1;
}

void *sub_1477C20@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.AdditionalEnabledMarkets");
}

uint64_t sub_1477C30(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1477CD0(uint64_t a1)
{
  sub_1477C30(a1);

  operator delete();
}

uint64_t sub_1477D08(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v1 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v1 + 23) < 0)
    {
      **(unsigned char **)unint64_t v1 = 0;
      *(void *)(v1 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v1 = 0;
      *(unsigned char *)(v1 + 23) = 0;
    }
  }
  char v3 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 24) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v3) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_1477D50(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v24 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v24, a3[11].i32[1])) {
    return *(void *)v24;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = (char *)(*(void *)v24 + 1);
    unsigned int v8 = **(unsigned char **)v24;
    if ((char)**(unsigned char **)v24 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180(*(uint64_t *)v24, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (char *)(*(void *)v24 + 2);
      }
    }
    *(void *)int v24 = v7;
    if (v8 >> 3 == 2) {
      break;
    }
    if (v8 >> 3 != 1 || v8 != 10) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v19 = *(void *)(a1 + 8);
    unint64_t v20 = (uint64_t *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
    if (v19) {
      unint64_t v20 = (uint64_t *)*v20;
    }
    uint64_t v21 = (std::string *)sub_1880F84((void *)(a1 + 24), v20);
    uint64_t v14 = (void *)sub_188C244(v21, *(char **)v24, (uint64_t)a3);
LABEL_30:
    *(void *)int v24 = v14;
    if (!v14) {
      goto LABEL_42;
    }
LABEL_31:
    if (sub_11947B8((uint64_t)a3, (char **)v24, a3[11].i32[1])) {
      return *(void *)v24;
    }
  }
  if (v8 == 16)
  {
    unint64_t v15 = v7 + 1;
    unint64_t v16 = *v7;
    if (*v7 < 0)
    {
      int v17 = *v15;
      int v18 = v16 + (v17 << 7);
      unint64_t v16 = (v18 - 128);
      if (v17 < 0)
      {
        *(void *)int v24 = sub_188C138((uint64_t)v7, (v18 - 128));
        if (!*(void *)v24) {
          goto LABEL_42;
        }
        unint64_t v16 = v22;
        goto LABEL_25;
      }
      unint64_t v15 = v7 + 2;
    }
    *(void *)int v24 = v15;
LABEL_25:
    if (v16 > 3)
    {
      if (*v6) {
        uint64_t v23 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        uint64_t v23 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      sub_188C020(2, v16, v23);
    }
    else
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      *(_DWORD *)(a1 + 32) = v16;
    }
    goto LABEL_31;
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = *(char **)v24;
    }
    uint64_t v14 = sub_1885AC0(v8, v13, v7, a3);
    goto LABEL_30;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v24;
  }
LABEL_42:
  *(void *)int v24 = 0;
  return *(void *)v24;
}

unsigned char *sub_1477F60(uint64_t a1, unsigned char *__dst, void *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v7 = *(int *)(a1 + 32);
    unsigned char *v4 = 16;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v10 = *(void *)(a1 + 8);
  if ((v10 & 1) == 0) {
    return v4;
  }
  unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v12 + 31) < 0)
  {
    uint64_t v13 = *(void **)(v12 + 8);
    uint64_t v14 = *(void *)(v12 + 16);
  }
  else
  {
    uint64_t v13 = (void *)(v12 + 8);
    LODWORD(v14) = *(unsigned __int8 *)(v12 + 31);
  }
  if (*a3 - (void)v4 >= (int)v14)
  {
    uint64_t v15 = (int)v14;
    memcpy(v4, v13, (int)v14);
    v4 += v15;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v13, v14, v4);
}

uint64_t sub_14780A8(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_13;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_13;
    }
    goto LABEL_9;
  }
  unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
  uint64_t v5 = *(void *)(v3 + 8);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = v4;
  }
  uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    int v6 = *(_DWORD *)(a1 + 32);
    if (v6 < 0) {
      uint64_t v7 = 11;
    }
    else {
      uint64_t v7 = ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v7;
  }
LABEL_13:
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_1478174()
{
  return 1;
}

void *sub_147817C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.Asset");
}

uint64_t sub_147818C(uint64_t a1)
{
  if (!a1)
  {
    sub_14946D0();
  }

  return sub_144D028(v3, a1, 0);
}

double sub_14781E8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = off_24B4F08;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  return result;
}

void *sub_1478264(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *double result = off_24B4F88;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = 0;
  return result;
}

uint64_t sub_14782E8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24B5008;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = &qword_2550250;
  *(void *)(result + 32) = &qword_2550250;
  *(void *)(result + 40) = &qword_2550250;
  *(void *)(result + 48) = 0;
  *(void *)(result + 56) = 0;
  *(void *)(result + 64) = 0;
  *(unsigned char *)(result + 72) = 0;
  return result;
}

void *sub_1478378(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = off_24B5088;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = &qword_2550250;
  result[7] = &qword_2550250;
  result[8] = &qword_2550250;
  result[9] = 0;
  result[10] = 0;
  result[11] = 0x4014000000000000;
  return result;
}

uint64_t sub_1478428(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24B5108;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = &qword_2550250;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_14784B0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24B5188;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = &qword_2550250;
  *(_DWORD *)(result + 56) = 0;
  return result;
}

uint64_t sub_1478558(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24B5208;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(unsigned char *)(result + 32) = 0;
  return result;
}

uint64_t sub_14785D4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24B5288;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = a1;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = 0;
  *(_DWORD *)(result + 56) = 0;
  return result;
}

void *sub_1478678(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24B5308;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = &qword_2550250;
  result[5] = &qword_2550250;
  result[6] = &qword_2550250;
  result[7] = 0;
  return result;
}

uint64_t sub_1478704(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24B5388;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = &qword_2550250;
  *(void *)(result + 56) = 0;
  *(_DWORD *)(result + 64) = 0;
  return result;
}

uint64_t sub_14787AC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24B5408;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = &qword_2550250;
  *(_DWORD *)(result + 56) = 0;
  return result;
}

void *sub_1478854(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24B5488;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = &qword_2550250;
  result[5] = &qword_2550250;
  return result;
}

uint64_t sub_14788DC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24B5508;
  *(void *)(result + 16) = 0;
  *(unsigned char *)(result + 24) = 0;
  return result;
}

uint64_t sub_1478958(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  return sub_1456304(v2, a1, 0);
}

uint64_t sub_14789B8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24B5608;
  *(void *)(result + 16) = 0;
  *(_DWORD *)(result + 23) = 0;
  return result;
}

uint64_t sub_1478A34(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24B5688;
  *(void *)(result + 16) = 0;
  *(_WORD *)(result + 24) = 0;
  return result;
}

uint64_t sub_1478AB0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24B5708;
  *(void *)(result + 16) = 0;
  *(unsigned char *)(result + 24) = 0;
  return result;
}

double sub_1478B2C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  return sub_1459F80(v2, a1, 0);
}

uint64_t sub_1478B8C(uint64_t a1)
{
  if (!a1)
  {
    sub_149473C();
  }

  return sub_145E84C(v3, a1, 0);
}

void *sub_1478BE8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24B5888;
  result[2] = 0;
  result[3] = 0;
  return result;
}

void *sub_1478C60(uint64_t a1)
{
  if (!a1)
  {
    sub_14947A8();
  }

  return sub_145FB7C(v3, a1, 0);
}

void *sub_1478CBC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = off_24B5988;
  result[1] = a1;
  result[2] = 0;
  result[3] = 0;
  result[4] = a1;
  result[5] = 0;
  return result;
}

uint64_t sub_1478D54(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24B5A08;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = a1;
  *(void *)(result + 56) = 0;
  *(void *)(result + 64) = 0;
  *(_WORD *)(result + 72) = 0;
  *(_DWORD *)(result + 76) = 1;
  return result;
}

uint64_t sub_1478E08(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24B5A88;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = 0;
  *(_DWORD *)(result + 56) = 0;
  return result;
}

uint64_t sub_1478EAC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24B5B08;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = &qword_2550250;
  *(void *)(result + 56) = &qword_2550250;
  *(_DWORD *)(result + 64) = 0;
  return result;
}

double sub_1478F54(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  return sub_1463104(v2, a1, 0);
}

void *sub_1478FB4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24B5C08;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = 0;
  return result;
}

uint64_t sub_1479038(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24B5C88;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = a1;
  *(void *)(result + 40) = &qword_2550250;
  *(_DWORD *)(result + 48) = 0;
  return result;
}

void *sub_14790E0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24B5D08;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = &qword_2550250;
  return result;
}

uint64_t sub_1479164(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24B5D88;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = &qword_2550250;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = 0;
  *(unsigned char *)(result + 56) = 0;
  return result;
}

void *sub_14791F0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = off_24B5E08;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = &qword_2550250;
  return result;
}

double sub_1479294(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t v2 = off_24B5E88;
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = 0;
  *(void *)(v2 + 40) = 0;
  *(void *)(v2 + 48) = a1;
  *(void *)(v2 + 56) = 0;
  *(void *)(v2 + 64) = 0;
  *(void *)(v2 + 72) = a1;
  *(void *)(v2 + 80) = 0;
  *(void *)(v2 + 88) = 0;
  *(void *)(v2 + 96) = a1;
  *(void *)(v2 + 104) = 0;
  *(void *)(v2 + 112) = 0;
  *(void *)(v2 + 120) = a1;
  *(void *)(v2 + 128) = 0;
  *(void *)(v2 + 136) = 0;
  *(void *)(v2 + 144) = a1;
  *(void *)(v2 + 152) = 0;
  *(void *)(v2 + 160) = 0;
  *(void *)(v2 + 168) = &qword_2550250;
  *(void *)(v2 + 176) = &qword_2550250;
  double result = 0.0;
  *(_OWORD *)(v2 + 184) = 0u;
  *(_OWORD *)(v2 + 200) = 0u;
  *(_OWORD *)(v2 + 216) = 0u;
  *(void *)(v2 + 232) = 0;
  return result;
}

double sub_147937C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t v2 = off_24B5F08;
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = 0;
  *(void *)(v2 + 40) = 0;
  *(void *)(v2 + 48) = a1;
  *(void *)(v2 + 56) = 0;
  *(void *)(v2 + 64) = 0;
  *(void *)(v2 + 72) = a1;
  *(void *)(v2 + 80) = 0;
  *(void *)(v2 + 88) = 0;
  *(void *)(v2 + 96) = a1;
  *(void *)(v2 + 104) = 0;
  *(void *)(v2 + 112) = 0;
  *(void *)(v2 + 120) = &qword_2550250;
  *(void *)(v2 + 128) = &qword_2550250;
  double result = 0.0;
  *(_OWORD *)(v2 + 136) = 0u;
  *(_OWORD *)(v2 + 152) = 0u;
  *(_DWORD *)(v2 + 168) = 1;
  return result;
}

uint64_t sub_1479450(uint64_t a1)
{
  if (!a1)
  {
    sub_1494814();
  }

  return sub_146F73C(v3, a1, 0);
}

uint64_t sub_14794AC(uint64_t a1)
{
  if (!a1)
  {
    sub_1494880();
  }

  return sub_1470100(v3, a1, 0);
}

uint64_t sub_1479508(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24B6088;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(_OWORD *)(result + 32) = 0u;
  *(_OWORD *)(result + 48) = 0u;
  return result;
}

void *sub_14795A4(uint64_t a1)
{
  if (!a1)
  {
    sub_14948EC();
  }

  return sub_1471FA8(v3, a1, 0);
}

void *sub_1479600(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24B6188;
  result[3] = 0;
  result[4] = 0;
  result[2] = 0;
  return result;
}

void *sub_147967C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24B6208;
  result[3] = 0;
  result[4] = 0;
  result[2] = 0;
  return result;
}

uint64_t sub_14796F8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24B6288;
  *(void *)(result + 16) = 0;
  *(_DWORD *)(result + 24) = 0;
  return result;
}

double sub_1479774(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = off_24B6308;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_DWORD *)(v2 + 80) = 2;
  return result;
}

uint64_t sub_14797FC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24B6388;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

void *sub_1479878(uint64_t a1)
{
  if (!a1)
  {
    sub_1494958();
  }

  return sub_14753D0(v3, a1, 0);
}

void *sub_14798D4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = off_24B6488;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = &qword_2550250;
  result[7] = 0;
  return result;
}

uint64_t sub_1479978(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24B6508;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = a1;
  *(void *)(result + 48) = 0;
  *(void *)(result + 56) = 0;
  *(_DWORD *)(result + 64) = 0;
  return result;
}

uint64_t sub_1479A1C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24B6588;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = &qword_2550250;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

BOOL sub_1479AA4(unsigned int a1)
{
  return a1 < 6;
}

BOOL sub_1479AB0(unsigned int a1)
{
  return a1 < 5;
}

uint64_t sub_1479ABC(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1479B5C(uint64_t a1)
{
  sub_1479ABC(a1);

  operator delete();
}

uint64_t sub_1479B94(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v1 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v1 + 23) < 0)
    {
      **(unsigned char **)unint64_t v1 = 0;
      *(void *)(v1 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v1 = 0;
      *(unsigned char *)(v1 + 23) = 0;
    }
  }
  char v3 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v3) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_1479BD8(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v17 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v17, a3[11].i32[1])) {
    return *(void *)v17;
  }
  uint64_t v5 = (void *)(a1 + 8);
  while (1)
  {
    int v6 = (char *)(*(void *)v17 + 1);
    unsigned int v7 = **(unsigned char **)v17;
    if ((char)**(unsigned char **)v17 < 0)
    {
      unsigned int v8 = v7 + (*v6 << 7);
      unsigned int v7 = v8 - 128;
      if (*v6 < 0)
      {
        int v6 = (char *)sub_188C180(*(uint64_t *)v17, v8 - 128);
        unsigned int v7 = v9;
      }
      else
      {
        int v6 = (char *)(*(void *)v17 + 2);
      }
    }
    *(void *)int v17 = v6;
    if (v7 != 10) {
      break;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v13 = *(void *)(a1 + 8);
    uint64_t v14 = (uint64_t *)(v13 & 0xFFFFFFFFFFFFFFFCLL);
    if (v13) {
      uint64_t v14 = (uint64_t *)*v14;
    }
    uint64_t v15 = (std::string *)sub_1880F84((void *)(a1 + 24), v14);
    unint64_t v12 = (void *)sub_188C244(v15, *(char **)v17, (uint64_t)a3);
LABEL_18:
    *(void *)int v17 = v12;
    if (!v12) {
      goto LABEL_25;
    }
    if (sub_11947B8((uint64_t)a3, (char **)v17, a3[11].i32[1])) {
      return *(void *)v17;
    }
  }
  if (v7) {
    BOOL v10 = (v7 & 7) == 4;
  }
  else {
    BOOL v10 = 1;
  }
  if (!v10)
  {
    if (*v5)
    {
      uint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v6 = *(char **)v17;
    }
    unint64_t v12 = sub_1885AC0(v7, v11, v6, a3);
    goto LABEL_18;
  }
  if (v6)
  {
    a3[10].i32[0] = v7 - 1;
    return *(void *)v17;
  }
LABEL_25:
  *(void *)int v17 = 0;
  return *(void *)v17;
}

char *sub_1479D30(uint64_t a1, char *__dst, void *a3)
{
  uint64_t v4 = __dst;
  if (*(unsigned char *)(a1 + 16)) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  uint64_t v6 = *(void *)(a1 + 8);
  if ((v6 & 1) == 0) {
    return v4;
  }
  unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v8 + 31) < 0)
  {
    unsigned int v9 = *(void **)(v8 + 8);
    uint64_t v10 = *(void *)(v8 + 16);
  }
  else
  {
    unsigned int v9 = (void *)(v8 + 8);
    LODWORD(v10) = *(unsigned __int8 *)(v8 + 31);
  }
  if (*a3 - (void)v4 >= (int)v10)
  {
    uint64_t v11 = (int)v10;
    memcpy(v4, v9, (int)v10);
    v4 += v11;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v9, v10, v4);
}

uint64_t sub_1479DFC(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v3 = *(unsigned __int8 *)(v2 + 23);
    uint64_t v4 = *(void *)(v2 + 8);
    if ((v3 & 0x80u) == 0) {
      uint64_t v4 = v3;
    }
    uint64_t v1 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  else
  {
    uint64_t v1 = 0;
  }
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5)
  {
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v7 + 31) < 0) {
      uint64_t v8 = *(void *)(v7 + 16);
    }
    else {
      uint64_t v8 = *(unsigned __int8 *)(v7 + 31);
    }
    v1 += v8;
  }
  *(_DWORD *)(a1 + 20) = v1;
  return v1;
}

uint64_t sub_1479E80()
{
  return 1;
}

void *sub_1479E88@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.ServicesState");
}

void *sub_1479E98(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24B66E0;
  result[2] = 0;
  result[3] = &qword_2550250;
  return result;
}

BOOL sub_1479F1C(int a1)
{
  return (a1 - 1) < 2;
}

uint64_t sub_1479F2C(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)a1 = off_24B6760;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 36) = 0;
  *(void *)(a1 + 20) = 0;
  *(void *)(a1 + 28) = 0;
  int v5 = *(_DWORD *)(a2 + 24);
  if (v5)
  {
    sub_188C80C((unsigned int *)(a1 + 24), v5);
    uint64_t v6 = *(void **)(a1 + 32);
    *(_DWORD *)(a1 + 24) += *(_DWORD *)(a2 + 24);
    memcpy(v6, *(const void **)(a2 + 32), 4 * *(int *)(a2 + 24));
  }
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0;
  int v7 = *(_DWORD *)(a2 + 40);
  if (v7)
  {
    sub_188C80C((unsigned int *)(a1 + 40), v7);
    uint64_t v8 = *(void **)(a1 + 48);
    *(_DWORD *)(a1 + 40) += *(_DWORD *)(a2 + 40);
    memcpy(v8, *(const void **)(a2 + 48), 4 * *(int *)(a2 + 40));
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9) {
    sub_188B4F8(v4, (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 56) = &qword_2550250;
  if (*(unsigned char *)(a2 + 16))
  {
    uint64_t v10 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v10 = (uint64_t *)*v10;
    }
    sub_1881DF4((std::string **)(a1 + 56), (long long *)(*(void *)(a2 + 56) & 0xFFFFFFFFFFFFFFFELL), v10);
  }
  long long v11 = *(_OWORD *)(a2 + 64);
  long long v12 = *(_OWORD *)(a2 + 80);
  *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 64) = v11;
  *(_OWORD *)(a1 + 80) = v12;
  return a1;
}

void sub_147A070(_Unwind_Exception *a1)
{
  sub_1889DA8(v3);
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_147A0C0(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  int v5 = (void ***)(a1 + 56);
  if (*(uint64_t **)(a1 + 56) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  sub_1889DA8(a1 + 40);
  sub_1889DA8(a1 + 24);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_147A170(uint64_t a1)
{
  sub_147A0C0(a1);

  operator delete();
}

uint64_t sub_147A1A8(uint64_t a1)
{
  *(_DWORD *)(a1 + 24) = 0;
  *(_DWORD *)(a1 + 40) = 0;
  int v1 = *(_DWORD *)(a1 + 16);
  if (v1)
  {
    unint64_t v2 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)unint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
    }
  }
  if ((v1 & 0xFE) != 0)
  {
    *(void *)(a1 + 64) = 0;
    *(void *)(a1 + 72) = 0;
    *(_DWORD *)(a1 + 88) = 0;
    *(void *)(a1 + 80) = 0;
  }
  if ((v1 & 0x300) != 0) {
    *(void *)(a1 + 92) = 0x100000000;
  }
  char v4 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v4) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_147A21C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v75 = a2;
  int v5 = 0;
  if ((sub_11947B8((uint64_t)a3, (char **)v75, a3[11].i32[1]) & 1) == 0)
  {
    int v7 = (void *)(a1 + 8);
    while (1)
    {
      uint64_t v8 = (char *)(*(void *)v75 + 1);
      unsigned int v9 = **(unsigned char **)v75;
      if ((char)**(unsigned char **)v75 < 0)
      {
        int v10 = *v8;
        unsigned int v11 = v9 + (v10 << 7);
        unsigned int v9 = v11 - 128;
        if (v10 < 0)
        {
          uint64_t v8 = (char *)sub_188C180(*(uint64_t *)v75, v11 - 128);
          unsigned int v9 = v12;
        }
        else
        {
          uint64_t v8 = (char *)(*(void *)v75 + 2);
        }
      }
      *(void *)uint64_t v75 = v8;
      switch(v9 >> 3)
      {
        case 1u:
          if (v9 != 8) {
            goto LABEL_113;
          }
          v5 |= 2u;
          uint64_t v13 = v8 + 1;
          int v14 = *v8;
          if ((*v8 & 0x80000000) == 0) {
            goto LABEL_13;
          }
          int v15 = *v13;
          int v14 = v14 + (v15 << 7) - 128;
          if ((v15 & 0x80000000) == 0)
          {
            uint64_t v13 = v8 + 2;
LABEL_13:
            *(void *)uint64_t v75 = v13;
            *(_DWORD *)(a1 + 64) = v14;
            goto LABEL_121;
          }
          uint64_t v57 = sub_188C0D0((uint64_t)v8, v14);
          *(void *)uint64_t v75 = v57;
          *(_DWORD *)(a1 + 64) = v58;
          if (!v57) {
            goto LABEL_135;
          }
          goto LABEL_121;
        case 2u:
          if (v9 != 18) {
            goto LABEL_113;
          }
          *(_DWORD *)(a1 + 16) |= 1u;
          uint64_t v16 = *(void *)(a1 + 8);
          int v17 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
          if (v16) {
            int v17 = (uint64_t *)*v17;
          }
          int v18 = (std::string *)sub_1880F84((void *)(a1 + 56), v17);
          uint64_t v19 = (void *)sub_188C244(v18, *(char **)v75, (uint64_t)a3);
          goto LABEL_120;
        case 3u:
          if (v9 != 24) {
            goto LABEL_113;
          }
          v5 |= 4u;
          unint64_t v20 = v8 + 1;
          int v21 = *v8;
          if ((*v8 & 0x80000000) == 0) {
            goto LABEL_22;
          }
          int v22 = *v20;
          int v21 = v21 + (v22 << 7) - 128;
          if (v22 < 0)
          {
            uint64_t v59 = sub_188C0D0((uint64_t)v8, v21);
            *(void *)uint64_t v75 = v59;
            *(_DWORD *)(a1 + 68) = v60;
            if (!v59) {
              goto LABEL_135;
            }
          }
          else
          {
            unint64_t v20 = v8 + 2;
LABEL_22:
            *(void *)uint64_t v75 = v20;
            *(_DWORD *)(a1 + 68) = v21;
          }
          goto LABEL_121;
        case 4u:
          if (v9 != 32) {
            goto LABEL_113;
          }
          uint64_t v23 = v8 + 1;
          unint64_t v24 = *v8;
          if ((*v8 & 0x80000000) == 0) {
            goto LABEL_27;
          }
          int v25 = *v23;
          int v26 = v24 + (v25 << 7);
          unint64_t v24 = (v26 - 128);
          if (v25 < 0)
          {
            *(void *)uint64_t v75 = sub_188C138((uint64_t)v8, (v26 - 128));
            if (!*(void *)v75) {
              goto LABEL_135;
            }
            unint64_t v24 = v61;
          }
          else
          {
            uint64_t v23 = v8 + 2;
LABEL_27:
            *(void *)uint64_t v75 = v23;
          }
          if (v24 <= 1)
          {
            *(_DWORD *)(a1 + 16) |= 8u;
            *(_DWORD *)(a1 + 72) = v24;
            goto LABEL_121;
          }
          if (*v7) {
            unint64_t v73 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            unint64_t v73 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          int v74 = 4;
          goto LABEL_129;
        case 5u:
          if (v9 != 40) {
            goto LABEL_113;
          }
          v5 |= 0x10u;
          int v27 = v8 + 1;
          int v28 = *v8;
          if ((*v8 & 0x80000000) == 0) {
            goto LABEL_34;
          }
          int v29 = *v27;
          int v28 = v28 + (v29 << 7) - 128;
          if (v29 < 0)
          {
            uint64_t v62 = sub_188C0D0((uint64_t)v8, v28);
            *(void *)uint64_t v75 = v62;
            *(_DWORD *)(a1 + 76) = v63;
            if (!v62) {
              goto LABEL_135;
            }
          }
          else
          {
            int v27 = v8 + 2;
LABEL_34:
            *(void *)uint64_t v75 = v27;
            *(_DWORD *)(a1 + 76) = v28;
          }
          goto LABEL_121;
        case 6u:
          if (v9 != 48) {
            goto LABEL_113;
          }
          int v30 = v8 + 1;
          unint64_t v24 = *v8;
          if ((*v8 & 0x80000000) == 0) {
            goto LABEL_39;
          }
          int v31 = *v30;
          int v32 = v24 + (v31 << 7);
          unint64_t v24 = (v32 - 128);
          if (v31 < 0)
          {
            *(void *)uint64_t v75 = sub_188C138((uint64_t)v8, (v32 - 128));
            if (!*(void *)v75) {
              goto LABEL_135;
            }
            unint64_t v24 = v64;
          }
          else
          {
            int v30 = v8 + 2;
LABEL_39:
            *(void *)uint64_t v75 = v30;
          }
          if ((v24 - 1) > 2)
          {
            if (*v7) {
              unint64_t v73 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else {
              unint64_t v73 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            }
            int v74 = 6;
LABEL_129:
            sub_188C020(v74, v24, v73);
          }
          else
          {
            *(_DWORD *)(a1 + 16) |= 0x200u;
            *(_DWORD *)(a1 + 96) = v24;
          }
          goto LABEL_121;
        case 7u:
          if (v9 != 61) {
            goto LABEL_113;
          }
          v5 |= 0x20u;
          *(_DWORD *)(a1 + 80) = *(_DWORD *)v8;
          *(void *)uint64_t v75 = v8 + 4;
          goto LABEL_121;
        case 8u:
          if (v9 == 64)
          {
            uint64_t v33 = (uint64_t)(v8 - 1);
            while (1)
            {
              *(void *)uint64_t v75 = v33 + 1;
              unint64_t v34 = *(unsigned __int8 *)(v33 + 1);
              uint64_t v35 = (char *)(v33 + 2);
              if (*(char *)(v33 + 1) < 0)
              {
                int v36 = *v35;
                int v37 = v34 + (v36 << 7);
                unint64_t v34 = (v37 - 128);
                if (v36 < 0)
                {
                  *(void *)uint64_t v75 = sub_188C138(v33 + 1, (v37 - 128));
                  if (!*(void *)v75) {
                    goto LABEL_135;
                  }
                  unint64_t v34 = v40;
                  goto LABEL_50;
                }
                uint64_t v35 = (char *)(v33 + 3);
              }
              *(void *)uint64_t v75 = v35;
LABEL_50:
              if ((v34 - 1) > 1)
              {
                if (*v7) {
                  uint64_t v41 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
                }
                else {
                  uint64_t v41 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
                }
                sub_188C020(8, v34, v41);
              }
              else
              {
                uint64_t v38 = *(unsigned int *)(a1 + 24);
                if (v38 == *(_DWORD *)(a1 + 28))
                {
                  int v39 = v38 + 1;
                  sub_188C80C((unsigned int *)(a1 + 24), v38 + 1);
                  *(_DWORD *)(*(void *)(a1 + 32) + 4 * v38) = v34;
                }
                else
                {
                  *(_DWORD *)(*(void *)(a1 + 32) + 4 * v38) = v34;
                  int v39 = v38 + 1;
                }
                *(_DWORD *)(a1 + 24) = v39;
              }
              uint64_t v33 = *(void *)v75;
              if (*(void *)a3 <= *(void *)v75 || **(unsigned char **)v75 != 64) {
                goto LABEL_121;
              }
            }
          }
          if (v9 == 66)
          {
            *(void *)&long long v76 = a1 + 24;
            *((void *)&v76 + 1) = sub_1479F1C;
            uint64_t v77 = a1 + 8;
            int v78 = 8;
            uint64_t v19 = sub_1112E88((uint64_t)a3, v8, &v76);
          }
          else
          {
LABEL_113:
            if (v9) {
              BOOL v71 = (v9 & 7) == 4;
            }
            else {
              BOOL v71 = 1;
            }
            if (v71)
            {
              if (v8)
              {
                a3[10].i32[0] = v9 - 1;
                goto LABEL_2;
              }
LABEL_135:
              *(void *)uint64_t v75 = 0;
              goto LABEL_2;
            }
            if (*v7)
            {
              uint64_t v72 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              uint64_t v72 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              uint64_t v8 = *(char **)v75;
            }
            uint64_t v19 = sub_1885AC0(v9, v72, v8, a3);
          }
LABEL_120:
          *(void *)uint64_t v75 = v19;
          if (!v19) {
            goto LABEL_135;
          }
LABEL_121:
          if (sub_11947B8((uint64_t)a3, (char **)v75, a3[11].i32[1])) {
            goto LABEL_2;
          }
          break;
        case 9u:
          if (v9 != 72) {
            goto LABEL_113;
          }
          v5 |= 0x40u;
          uint64_t v42 = v8 + 1;
          int v43 = *v8;
          if ((*v8 & 0x80000000) == 0) {
            goto LABEL_68;
          }
          int v44 = *v42;
          int v43 = v43 + (v44 << 7) - 128;
          if (v44 < 0)
          {
            uint64_t v65 = sub_188C0D0((uint64_t)v8, v43);
            *(void *)uint64_t v75 = v65;
            *(_DWORD *)(a1 + 84) = v66;
            if (!v65) {
              goto LABEL_135;
            }
          }
          else
          {
            uint64_t v42 = v8 + 2;
LABEL_68:
            *(void *)uint64_t v75 = v42;
            *(_DWORD *)(a1 + 84) = v43;
          }
          goto LABEL_121;
        case 0xAu:
          if (v9 == 80)
          {
            uint64_t v45 = v8 - 1;
            while (1)
            {
              *(void *)uint64_t v75 = v45 + 1;
              int v46 = v45[1];
              if (v45[1] < 0)
              {
                int v47 = v46 + (v45[2] << 7);
                int v46 = v47 - 128;
                if (v45[2] < 0)
                {
                  uint64_t v45 = (char *)sub_188C0D0((uint64_t)(v45 + 1), v47 - 128);
                  int v46 = v48;
                }
                else
                {
                  v45 += 3;
                }
              }
              else
              {
                v45 += 2;
              }
              *(void *)uint64_t v75 = v45;
              uint64_t v49 = *(unsigned int *)(a1 + 40);
              if (v49 == *(_DWORD *)(a1 + 44))
              {
                int v50 = v49 + 1;
                sub_188C80C((unsigned int *)(a1 + 40), v49 + 1);
                *(_DWORD *)(*(void *)(a1 + 48) + 4 * v49) = v46;
                uint64_t v45 = *(char **)v75;
              }
              else
              {
                *(_DWORD *)(*(void *)(a1 + 48) + 4 * v49) = v46;
                int v50 = v49 + 1;
              }
              *(_DWORD *)(a1 + 40) = v50;
              if (!v45) {
                goto LABEL_135;
              }
              if (*(void *)a3 <= (unint64_t)v45 || *v45 != 80) {
                goto LABEL_121;
              }
            }
          }
          if (v9 != 82) {
            goto LABEL_113;
          }
          uint64_t v19 = sub_188C2CC((unsigned int *)(a1 + 40), (unsigned __int8 *)v8, (uint64_t)a3);
          goto LABEL_120;
        case 0xBu:
          if (v9 != 88) {
            goto LABEL_113;
          }
          v5 |= 0x80u;
          unint64_t v51 = v8 + 1;
          int v52 = *v8;
          if ((*v8 & 0x80000000) == 0) {
            goto LABEL_87;
          }
          int v53 = *v51;
          int v52 = v52 + (v53 << 7) - 128;
          if (v53 < 0)
          {
            uint64_t v67 = sub_188C0D0((uint64_t)v8, v52);
            *(void *)uint64_t v75 = v67;
            *(_DWORD *)(a1 + 88) = v68;
            if (!v67) {
              goto LABEL_135;
            }
          }
          else
          {
            unint64_t v51 = v8 + 2;
LABEL_87:
            *(void *)uint64_t v75 = v51;
            *(_DWORD *)(a1 + 88) = v52;
          }
          goto LABEL_121;
        case 0xCu:
          if (v9 != 96) {
            goto LABEL_113;
          }
          v5 |= 0x100u;
          uint64_t v54 = v8 + 1;
          int v55 = *v8;
          if ((*v8 & 0x80000000) == 0) {
            goto LABEL_92;
          }
          int v56 = *v54;
          int v55 = v55 + (v56 << 7) - 128;
          if (v56 < 0)
          {
            uint64_t v69 = sub_188C0D0((uint64_t)v8, v55);
            *(void *)uint64_t v75 = v69;
            *(_DWORD *)(a1 + 92) = v70;
            if (!v69) {
              goto LABEL_135;
            }
          }
          else
          {
            uint64_t v54 = v8 + 2;
LABEL_92:
            *(void *)uint64_t v75 = v54;
            *(_DWORD *)(a1 + 92) = v55;
          }
          goto LABEL_121;
        default:
          goto LABEL_113;
      }
    }
  }
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return *(void *)v75;
}

unsigned char *sub_147A98C(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 64);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6) {
    char v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 68);
    unsigned char *v4 = 24;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v13 = *(int *)(a1 + 72);
    unsigned char *v4 = 32;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unint64_t v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v16 = *(_DWORD *)(a1 + 76);
    unsigned char *v4 = 40;
    v4[1] = v16;
    if (v16 > 0x7F)
    {
      v4[1] = v16 | 0x80;
      unsigned int v17 = v16 >> 7;
      v4[2] = v16 >> 7;
      v4 += 3;
      if (v16 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v18 = v17 >> 14;
          v17 >>= 7;
          *v4++ = v17;
        }
        while (v18);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x200) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v19 = *(int *)(a1 + 96);
    unsigned char *v4 = 48;
    v4[1] = v19;
    if (v19 > 0x7F)
    {
      v4[1] = v19 | 0x80;
      unint64_t v20 = v19 >> 7;
      v4[2] = v19 >> 7;
      v4 += 3;
      if (v19 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v21 = v20 >> 14;
          v20 >>= 7;
          *v4++ = v20;
        }
        while (v21);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    int v22 = *(_DWORD *)(a1 + 80);
    unsigned char *v4 = 61;
    *(_DWORD *)(v4 + 1) = v22;
    v4 += 5;
  }
  uint64_t v23 = *(unsigned int *)(a1 + 24);
  if ((int)v23 >= 1)
  {
    for (uint64_t i = 0; i != v23; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v25 = *(int *)(*(void *)(a1 + 32) + 4 * i);
      unsigned char *v4 = 64;
      v4[1] = v25;
      if (v25 > 0x7F)
      {
        v4[1] = v25 | 0x80;
        unint64_t v26 = v25 >> 7;
        v4[2] = v25 >> 7;
        v4 += 3;
        if (v25 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v27 = v26 >> 14;
            v26 >>= 7;
            *v4++ = v26;
          }
          while (v27);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  if ((v6 & 0x40) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v28 = *(_DWORD *)(a1 + 84);
    unsigned char *v4 = 72;
    v4[1] = v28;
    if (v28 > 0x7F)
    {
      v4[1] = v28 | 0x80;
      unsigned int v29 = v28 >> 7;
      v4[2] = v28 >> 7;
      v4 += 3;
      if (v28 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v30 = v29 >> 14;
          v29 >>= 7;
          *v4++ = v29;
        }
        while (v30);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v31 = *(unsigned int *)(a1 + 40);
  if ((int)v31 >= 1)
  {
    for (uint64_t j = 0; j != v31; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unsigned int v33 = *(_DWORD *)(*(void *)(a1 + 48) + 4 * j);
      unsigned char *v4 = 80;
      v4[1] = v33;
      if (v33 > 0x7F)
      {
        v4[1] = v33 | 0x80;
        unsigned int v34 = v33 >> 7;
        v4[2] = v33 >> 7;
        v4 += 3;
        if (v33 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unsigned int v35 = v34 >> 14;
            v34 >>= 7;
            *v4++ = v34;
          }
          while (v35);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  if ((v6 & 0x80) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v36 = *(_DWORD *)(a1 + 88);
    unsigned char *v4 = 88;
    v4[1] = v36;
    if (v36 > 0x7F)
    {
      v4[1] = v36 | 0x80;
      unsigned int v37 = v36 >> 7;
      v4[2] = v36 >> 7;
      v4 += 3;
      if (v36 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v38 = v37 >> 14;
          v37 >>= 7;
          *v4++ = v37;
        }
        while (v38);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x100) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v39 = *(_DWORD *)(a1 + 92);
    unsigned char *v4 = 96;
    v4[1] = v39;
    if (v39 > 0x7F)
    {
      v4[1] = v39 | 0x80;
      unsigned int v40 = v39 >> 7;
      v4[2] = v39 >> 7;
      v4 += 3;
      if (v39 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v41 = v40 >> 14;
          v40 >>= 7;
          *v4++ = v40;
        }
        while (v41);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v42 = *(void *)(a1 + 8);
  if ((v42 & 1) == 0) {
    return v4;
  }
  unint64_t v44 = v42 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v44 + 31) < 0)
  {
    uint64_t v45 = *(void **)(v44 + 8);
    uint64_t v46 = *(void *)(v44 + 16);
  }
  else
  {
    uint64_t v45 = (void *)(v44 + 8);
    LODWORD(v46) = *(unsigned __int8 *)(v44 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v46)
  {
    uint64_t v47 = (int)v46;
    memcpy(v4, v45, (int)v46);
    v4 += v47;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v45, v46, v4);
}

uint64_t sub_147AFC0(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 24);
  if (v2)
  {
    int v3 = 0;
    uint64_t v4 = 0;
    do
    {
      int v5 = *(_DWORD *)(*(void *)(a1 + 32) + 4 * v3);
      if (v5 < 0) {
        uint64_t v6 = 10;
      }
      else {
        uint64_t v6 = (9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6;
      }
      v4 += v6;
      ++v3;
    }
    while (v2 != v3);
  }
  else
  {
    uint64_t v4 = 0;
  }
  uint64_t result = v4 + sub_188D4F0((unsigned int *)(a1 + 40)) + v2 + *(unsigned int *)(a1 + 40);
  int v8 = *(_DWORD *)(a1 + 16);
  if (!(_BYTE)v8) {
    goto LABEL_22;
  }
  if (v8)
  {
    unint64_t v11 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v12 = *(unsigned __int8 *)(v11 + 23);
    uint64_t v13 = *(void *)(v11 + 8);
    if ((v12 & 0x80u) == 0) {
      uint64_t v13 = v12;
    }
    result += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v8 & 2) == 0)
    {
LABEL_12:
      if ((v8 & 4) == 0) {
        goto LABEL_13;
      }
      goto LABEL_32;
    }
  }
  else if ((v8 & 2) == 0)
  {
    goto LABEL_12;
  }
  result += ((9 * (__clz(*(_DWORD *)(a1 + 64) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 4) == 0)
  {
LABEL_13:
    if ((v8 & 8) == 0) {
      goto LABEL_14;
    }
LABEL_33:
    int v14 = *(_DWORD *)(a1 + 72);
    if (v14 < 0) {
      uint64_t v15 = 11;
    }
    else {
      uint64_t v15 = ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    result += v15;
    if ((v8 & 0x10) == 0) {
      goto LABEL_16;
    }
    goto LABEL_15;
  }
LABEL_32:
  result += ((9 * (__clz(*(_DWORD *)(a1 + 68) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 8) != 0) {
    goto LABEL_33;
  }
LABEL_14:
  if ((v8 & 0x10) != 0) {
LABEL_15:
  }
    result += ((9 * (__clz(*(_DWORD *)(a1 + 76) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_16:
  if ((v8 & 0x20) != 0) {
    result += 5;
  }
  if ((v8 & 0x40) != 0) {
    result += ((9 * (__clz(*(_DWORD *)(a1 + 84) | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  if ((v8 & 0x80) != 0) {
    result += ((9 * (__clz(*(_DWORD *)(a1 + 88) | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_22:
  if ((v8 & 0x300) != 0)
  {
    if ((v8 & 0x100) != 0) {
      result += ((9 * (__clz(*(_DWORD *)(a1 + 92) | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v8 & 0x200) != 0)
    {
      int v9 = *(_DWORD *)(a1 + 96);
      if (v9 < 0) {
        uint64_t v10 = 11;
      }
      else {
        uint64_t v10 = ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
      result += v10;
    }
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if (v16)
  {
    unint64_t v17 = v16 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v17 + 31) < 0) {
      uint64_t v18 = *(void *)(v17 + 16);
    }
    else {
      uint64_t v18 = *(unsigned __int8 *)(v17 + 31);
    }
    result += v18;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

std::string *sub_147B254(std::string *result, uint64_t a2)
{
  int v3 = result;
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    int v5 = result + 1;
    uint64_t data_low = SLODWORD(result[1].__r_.__value_.__l.__data_);
    sub_188C80C((unsigned int *)&result[1], data_low + v4);
    std::string::size_type size = v3[1].__r_.__value_.__l.__size_;
    LODWORD(v5->__r_.__value_.__l.__data_) += *(_DWORD *)(a2 + 24);
    uint64_t result = (std::string *)memcpy((void *)(size + 4 * data_low), *(const void **)(a2 + 32), 4 * *(int *)(a2 + 24));
  }
  int v8 = *(_DWORD *)(a2 + 40);
  if (v8)
  {
    uint64_t v9 = SLODWORD(v3[1].__r_.__value_.__r.__words[2]);
    sub_188C80C((unsigned int *)&v3[1].__r_.__value_.__r.__words[2], v9 + v8);
    std::string::pointer data = v3[2].__r_.__value_.__l.__data_;
    LODWORD(v3[1].__r_.__value_.__r.__words[2]) += *(_DWORD *)(a2 + 40);
    uint64_t result = (std::string *)memcpy(&data[4 * v9], *(const void **)(a2 + 48), 4 * *(int *)(a2 + 40));
  }
  int v11 = *(_DWORD *)(a2 + 16);
  if ((_BYTE)v11)
  {
    if (v11)
    {
      uint64_t v13 = (long long *)(*(void *)(a2 + 56) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::size_type v14 = v3->__r_.__value_.__l.__size_;
      uint64_t v15 = (uint64_t *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
      if (v14) {
        uint64_t v15 = (uint64_t *)*v15;
      }
      uint64_t result = sub_1881DF4((std::string **)&v3[2].__r_.__value_.__l.__size_, v13, v15);
      if ((v11 & 2) == 0)
      {
LABEL_8:
        if ((v11 & 4) == 0) {
          goto LABEL_9;
        }
        goto LABEL_30;
      }
    }
    else if ((v11 & 2) == 0)
    {
      goto LABEL_8;
    }
    LODWORD(v3[2].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 64);
    if ((v11 & 4) == 0)
    {
LABEL_9:
      if ((v11 & 8) == 0) {
        goto LABEL_10;
      }
      goto LABEL_31;
    }
LABEL_30:
    HIDWORD(v3[2].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 68);
    if ((v11 & 8) == 0)
    {
LABEL_10:
      if ((v11 & 0x10) == 0) {
        goto LABEL_11;
      }
      goto LABEL_32;
    }
LABEL_31:
    LODWORD(v3[3].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 72);
    if ((v11 & 0x10) == 0)
    {
LABEL_11:
      if ((v11 & 0x20) == 0) {
        goto LABEL_12;
      }
      goto LABEL_33;
    }
LABEL_32:
    HIDWORD(v3[3].__r_.__value_.__r.__words[0]) = *(_DWORD *)(a2 + 76);
    if ((v11 & 0x20) == 0)
    {
LABEL_12:
      if ((v11 & 0x40) == 0) {
        goto LABEL_13;
      }
      goto LABEL_34;
    }
LABEL_33:
    LODWORD(v3[3].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 80);
    if ((v11 & 0x40) == 0)
    {
LABEL_13:
      if ((v11 & 0x80) == 0)
      {
LABEL_15:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v11;
        goto LABEL_16;
      }
LABEL_14:
      LODWORD(v3[3].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 88);
      goto LABEL_15;
    }
LABEL_34:
    HIDWORD(v3[3].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 84);
    if ((v11 & 0x80) == 0) {
      goto LABEL_15;
    }
    goto LABEL_14;
  }
LABEL_16:
  if ((v11 & 0x300) != 0)
  {
    if ((v11 & 0x100) != 0) {
      HIDWORD(v3[3].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 92);
    }
    if ((v11 & 0x200) != 0) {
      LODWORD(v3[4].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 96);
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= v11;
  }
  uint64_t v12 = *(void *)(a2 + 8);
  if (v12)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v12 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_147B428()
{
  return 1;
}

void *sub_147B430@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.GroundDataBuild");
}

uint64_t sub_147B440(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_24B67E0;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  long long v5 = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = v5;
  return a1;
}

void sub_147B4C4(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_147B4F4(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_147B568(void *a1)
{
  sub_147B4F4(a1);

  operator delete();
}

char *sub_147B5A0(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v20 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v20, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unsigned int v7 = (void *)(a1 + 8);
  while (1)
  {
    int v8 = v20 + 1;
    unsigned int v9 = *v20;
    if (*v20 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        int v8 = (char *)sub_188C180((uint64_t)v20, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        int v8 = v20 + 2;
      }
    }
    unint64_t v20 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 == 3)
    {
      if (v9 != 25) {
        goto LABEL_14;
      }
      uint64_t v17 = *(void *)v8;
      uint64_t v16 = v8 + 8;
      v5 |= 4u;
      *(void *)(a1 + 40) = v17;
      goto LABEL_27;
    }
    if (v12 == 2)
    {
      if (v9 != 17) {
        goto LABEL_14;
      }
      uint64_t v18 = *(void *)v8;
      uint64_t v16 = v8 + 8;
      v5 |= 2u;
      *(void *)(a1 + 32) = v18;
LABEL_27:
      unint64_t v20 = v16;
      goto LABEL_28;
    }
    if (v12 == 1 && v9 == 9)
    {
      uint64_t v19 = *(void *)v8;
      uint64_t v16 = v8 + 8;
      v5 |= 1u;
      *(void *)(a1 + 24) = v19;
      goto LABEL_27;
    }
LABEL_14:
    if (!v9 || (v9 & 7) == 4) {
      break;
    }
    if (*v7)
    {
      uint64_t v15 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v8 = v20;
    }
    unint64_t v20 = (char *)sub_1885AC0(v9, v15, v8, a3);
    if (!v20) {
      goto LABEL_33;
    }
LABEL_28:
    if (sub_11947B8((uint64_t)a3, &v20, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_33:
  unint64_t v20 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v20;
}

_OWORD *sub_147B738(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (_OWORD *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    *(unsigned char *)uint64_t v4 = 9;
    *(void *)((char *)v4 + 1) = v7;
    uint64_t v4 = (_OWORD *)((char *)v4 + 9);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_14;
      }
      goto LABEL_11;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v8 = *(void *)(a1 + 32);
  *(unsigned char *)uint64_t v4 = 17;
  *(void *)((char *)v4 + 1) = v8;
  uint64_t v4 = (_OWORD *)((char *)v4 + 9);
  if ((v6 & 4) != 0)
  {
LABEL_11:
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v9 = *(void *)(a1 + 40);
    *(unsigned char *)uint64_t v4 = 25;
    *(void *)((char *)v4 + 1) = v9;
    uint64_t v4 = (_OWORD *)((char *)v4 + 9);
  }
LABEL_14:
  uint64_t v10 = *(void *)(a1 + 8);
  if ((v10 & 1) == 0) {
    return v4;
  }
  unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v12 + 31) < 0)
  {
    uint64_t v13 = *(void **)(v12 + 8);
    uint64_t v14 = *(void *)(v12 + 16);
  }
  else
  {
    uint64_t v13 = (void *)(v12 + 8);
    LODWORD(v14) = *(unsigned __int8 *)(v12 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v14)
  {
    uint64_t v15 = (int)v14;
    memcpy(v4, v13, (int)v14);
    return (_OWORD *)((char *)v4 + v15);
  }

  return (_OWORD *)sub_188A528(a3, (char *)v13, v14, v4);
}

uint64_t sub_147B898(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  uint64_t v2 = 9;
  if ((v1 & 1) == 0) {
    uint64_t v2 = 0;
  }
  if ((v1 & 2) != 0) {
    v2 += 9;
  }
  if ((v1 & 4) != 0) {
    v2 += 9;
  }
  if ((v1 & 7) != 0) {
    uint64_t v3 = v2;
  }
  else {
    uint64_t v3 = 0;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v6 + 31) < 0) {
      uint64_t v7 = *(void *)(v6 + 16);
    }
    else {
      uint64_t v7 = *(unsigned __int8 *)(v6 + 31);
    }
    v3 += v7;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

uint64_t sub_147B900()
{
  return 1;
}

void *sub_147B908@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.GeographicCoordinate");
}

uint64_t sub_147B918(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_24B6860;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  long long v5 = *(_OWORD *)(a2 + 24);
  long long v6 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = v6;
  *(_OWORD *)(a1 + 24) = v5;
  return a1;
}

void sub_147B9A4(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_147B9D8(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_147BA4C(void *a1)
{
  sub_147B9D8(a1);

  operator delete();
}

uint64_t sub_147BA84(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 0x3F) != 0)
  {
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_147BAB4(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v21 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v21, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = v21 + 1;
    unsigned int v9 = *v21;
    if (*v21 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v21, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v21 + 2;
      }
    }
    unint64_t v21 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 9) {
          goto LABEL_24;
        }
        uint64_t v13 = *(void *)v8;
        unint64_t v12 = v8 + 8;
        v5 |= 1u;
        *(void *)(a1 + 24) = v13;
        goto LABEL_21;
      case 2u:
        if (v9 != 17) {
          goto LABEL_24;
        }
        uint64_t v14 = *(void *)v8;
        unint64_t v12 = v8 + 8;
        v5 |= 2u;
        *(void *)(a1 + 32) = v14;
        goto LABEL_21;
      case 3u:
        if (v9 != 25) {
          goto LABEL_24;
        }
        uint64_t v15 = *(void *)v8;
        unint64_t v12 = v8 + 8;
        v5 |= 4u;
        *(void *)(a1 + 40) = v15;
        goto LABEL_21;
      case 4u:
        if (v9 != 33) {
          goto LABEL_24;
        }
        uint64_t v16 = *(void *)v8;
        unint64_t v12 = v8 + 8;
        v5 |= 8u;
        *(void *)(a1 + 48) = v16;
        goto LABEL_21;
      case 5u:
        if (v9 != 41) {
          goto LABEL_24;
        }
        uint64_t v17 = *(void *)v8;
        unint64_t v12 = v8 + 8;
        v5 |= 0x10u;
        *(void *)(a1 + 56) = v17;
        goto LABEL_21;
      case 6u:
        if (v9 != 49) {
          goto LABEL_24;
        }
        uint64_t v18 = *(void *)v8;
        unint64_t v12 = v8 + 8;
        v5 |= 0x20u;
        *(void *)(a1 + 64) = v18;
LABEL_21:
        unint64_t v21 = v12;
        goto LABEL_22;
      default:
LABEL_24:
        if (v9) {
          BOOL v19 = (v9 & 7) == 4;
        }
        else {
          BOOL v19 = 1;
        }
        if (!v19)
        {
          if (*v7)
          {
            unint64_t v20 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            unint64_t v20 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = v21;
          }
          unint64_t v21 = (char *)sub_1885AC0(v9, v20, v8, a3);
          if (!v21) {
            goto LABEL_35;
          }
LABEL_22:
          if (sub_11947B8((uint64_t)a3, &v21, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_35:
        }
          unint64_t v21 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v21;
    }
  }
}

_OWORD *sub_147BCD0(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (_OWORD *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    *(unsigned char *)uint64_t v4 = 9;
    *(void *)((char *)v4 + 1) = v7;
    uint64_t v4 = (_OWORD *)((char *)v4 + 9);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_14;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v8 = *(void *)(a1 + 32);
  *(unsigned char *)uint64_t v4 = 17;
  *(void *)((char *)v4 + 1) = v8;
  uint64_t v4 = (_OWORD *)((char *)v4 + 9);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_17;
  }
LABEL_14:
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v9 = *(void *)(a1 + 40);
  *(unsigned char *)uint64_t v4 = 25;
  *(void *)((char *)v4 + 1) = v9;
  uint64_t v4 = (_OWORD *)((char *)v4 + 9);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_20;
  }
LABEL_17:
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v10 = *(void *)(a1 + 48);
  *(unsigned char *)uint64_t v4 = 33;
  *(void *)((char *)v4 + 1) = v10;
  uint64_t v4 = (_OWORD *)((char *)v4 + 9);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_26;
    }
    goto LABEL_23;
  }
LABEL_20:
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v11 = *(void *)(a1 + 56);
  *(unsigned char *)uint64_t v4 = 41;
  *(void *)((char *)v4 + 1) = v11;
  uint64_t v4 = (_OWORD *)((char *)v4 + 9);
  if ((v6 & 0x20) != 0)
  {
LABEL_23:
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v12 = *(void *)(a1 + 64);
    *(unsigned char *)uint64_t v4 = 49;
    *(void *)((char *)v4 + 1) = v12;
    uint64_t v4 = (_OWORD *)((char *)v4 + 9);
  }
LABEL_26:
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    uint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    uint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    return (_OWORD *)((char *)v4 + v18);
  }

  return (_OWORD *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_147BEE4(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 0x3F) != 0)
  {
    uint64_t v2 = 9;
    if ((v1 & 1) == 0) {
      uint64_t v2 = 0;
    }
    if ((v1 & 2) != 0) {
      v2 += 9;
    }
    if ((v1 & 4) != 0) {
      v2 += 9;
    }
    if ((v1 & 8) != 0) {
      v2 += 9;
    }
    if ((v1 & 0x10) != 0) {
      v2 += 9;
    }
    if ((v1 & 0x20) != 0) {
      uint64_t v3 = v2 + 9;
    }
    else {
      uint64_t v3 = v2;
    }
  }
  else
  {
    uint64_t v3 = 0;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v6 + 31) < 0) {
      uint64_t v7 = *(void *)(v6 + 16);
    }
    else {
      uint64_t v7 = *(unsigned __int8 *)(v6 + 31);
    }
    v3 += v7;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_147BF78(std::string *result, uint64_t a2)
{
  int v2 = *(_DWORD *)(a2 + 16);
  if ((v2 & 0x3F) == 0) {
    goto LABEL_10;
  }
  if (v2)
  {
    result[1].__r_.__value_.__r.__words[0] = *(void *)(a2 + 24);
    if ((v2 & 2) == 0)
    {
LABEL_4:
      if ((v2 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_14;
    }
  }
  else if ((v2 & 2) == 0)
  {
    goto LABEL_4;
  }
  result[1].__r_.__value_.__l.__size_ = *(void *)(a2 + 32);
  if ((v2 & 4) == 0)
  {
LABEL_5:
    if ((v2 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_15;
  }
LABEL_14:
  result[1].__r_.__value_.__r.__words[2] = *(void *)(a2 + 40);
  if ((v2 & 8) == 0)
  {
LABEL_6:
    if ((v2 & 0x10) == 0) {
      goto LABEL_7;
    }
LABEL_16:
    result[2].__r_.__value_.__l.__size_ = *(void *)(a2 + 56);
    if ((v2 & 0x20) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
LABEL_15:
  result[2].__r_.__value_.__r.__words[0] = *(void *)(a2 + 48);
  if ((v2 & 0x10) != 0) {
    goto LABEL_16;
  }
LABEL_7:
  if ((v2 & 0x20) != 0) {
LABEL_8:
  }
    result[2].__r_.__value_.__r.__words[2] = *(void *)(a2 + 64);
LABEL_9:
  LODWORD(result->__r_.__value_.__r.__words[2]) |= v2;
LABEL_10:
  uint64_t v3 = *(void *)(a2 + 8);
  if (v3) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v3 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_147C00C()
{
  return 1;
}

void *sub_147C014@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.OrientedPosition");
}

uint64_t sub_147C024(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_24B68E0;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  long long v5 = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = v5;
  return a1;
}

void sub_147C0A8(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_147C0D8(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_147C14C(void *a1)
{
  sub_147C0D8(a1);

  operator delete();
}

uint64_t sub_147C184(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 0x3F) != 0)
  {
    *(void *)(a1 + 24) = 0;
    *(void *)(a1 + 32) = 0;
    *(void *)(a1 + 40) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_147C1AC(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v44 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v44, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = v44 + 1;
    unsigned int v9 = *v44;
    if (*v44 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v44, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v44 + 2;
      }
    }
    unint64_t v44 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_39;
        }
        v5 |= 1u;
        uint64_t v12 = v8 + 1;
        int v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        int v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          uint64_t v12 = v8 + 2;
LABEL_13:
          unint64_t v44 = v12;
          *(_DWORD *)(a1 + 24) = v13;
          goto LABEL_46;
        }
        int v32 = (char *)sub_188C0D0((uint64_t)v8, v13);
        unint64_t v44 = v32;
        *(_DWORD *)(a1 + 24) = v33;
        if (v32) {
          goto LABEL_46;
        }
        goto LABEL_63;
      case 2u:
        if (v9 != 16) {
          goto LABEL_39;
        }
        v5 |= 2u;
        unint64_t v15 = v8 + 1;
        int v16 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_18;
        }
        int v17 = *v15;
        int v16 = v16 + (v17 << 7) - 128;
        if (v17 < 0)
        {
          unsigned int v34 = (char *)sub_188C0D0((uint64_t)v8, v16);
          unint64_t v44 = v34;
          *(_DWORD *)(a1 + 28) = v35;
          if (!v34) {
            goto LABEL_63;
          }
        }
        else
        {
          unint64_t v15 = v8 + 2;
LABEL_18:
          unint64_t v44 = v15;
          *(_DWORD *)(a1 + 28) = v16;
        }
        goto LABEL_46;
      case 3u:
        if (v9 != 24) {
          goto LABEL_39;
        }
        v5 |= 4u;
        BOOL v19 = v8 + 1;
        LODWORD(v18) = *v8;
        if ((v18 & 0x80) == 0) {
          goto LABEL_23;
        }
        int v20 = *v19;
        uint64_t v18 = v18 + (v20 << 7) - 128;
        if (v20 < 0)
        {
          unsigned int v36 = (char *)sub_188C138((uint64_t)v8, v18);
          unint64_t v44 = v36;
          *(_DWORD *)(a1 + 32) = v37;
          if (!v36) {
            goto LABEL_63;
          }
        }
        else
        {
          BOOL v19 = v8 + 2;
LABEL_23:
          unint64_t v44 = v19;
          *(_DWORD *)(a1 + 32) = v18;
        }
        goto LABEL_46;
      case 4u:
        if (v9 != 32) {
          goto LABEL_39;
        }
        v5 |= 8u;
        unint64_t v21 = v8 + 1;
        int v22 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_28;
        }
        int v23 = *v21;
        int v22 = v22 + (v23 << 7) - 128;
        if (v23 < 0)
        {
          unsigned int v38 = (char *)sub_188C0D0((uint64_t)v8, v22);
          unint64_t v44 = v38;
          *(_DWORD *)(a1 + 36) = v39;
          if (!v38) {
            goto LABEL_63;
          }
        }
        else
        {
          unint64_t v21 = v8 + 2;
LABEL_28:
          unint64_t v44 = v21;
          *(_DWORD *)(a1 + 36) = v22;
        }
        goto LABEL_46;
      case 5u:
        if (v9 != 40) {
          goto LABEL_39;
        }
        v5 |= 0x10u;
        unint64_t v24 = v8 + 1;
        int v25 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_33;
        }
        int v26 = *v24;
        int v25 = v25 + (v26 << 7) - 128;
        if (v26 < 0)
        {
          unsigned int v40 = (char *)sub_188C0D0((uint64_t)v8, v25);
          unint64_t v44 = v40;
          *(_DWORD *)(a1 + 40) = v41;
          if (!v40) {
            goto LABEL_63;
          }
        }
        else
        {
          unint64_t v24 = v8 + 2;
LABEL_33:
          unint64_t v44 = v24;
          *(_DWORD *)(a1 + 40) = v25;
        }
        goto LABEL_46;
      case 6u:
        if (v9 != 48) {
          goto LABEL_39;
        }
        v5 |= 0x20u;
        unint64_t v27 = v8 + 1;
        int v28 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_38;
        }
        int v29 = *v27;
        int v28 = v28 + (v29 << 7) - 128;
        if (v29 < 0)
        {
          uint64_t v42 = (char *)sub_188C0D0((uint64_t)v8, v28);
          unint64_t v44 = v42;
          *(_DWORD *)(a1 + 44) = v43;
          if (!v42) {
            goto LABEL_63;
          }
        }
        else
        {
          unint64_t v27 = v8 + 2;
LABEL_38:
          unint64_t v44 = v27;
          *(_DWORD *)(a1 + 44) = v28;
        }
        goto LABEL_46;
      default:
LABEL_39:
        if (v9) {
          BOOL v30 = (v9 & 7) == 4;
        }
        else {
          BOOL v30 = 1;
        }
        if (!v30)
        {
          if (*v7)
          {
            uint64_t v31 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v31 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = v44;
          }
          unint64_t v44 = (char *)sub_1885AC0(v9, v31, v8, a3);
          if (!v44) {
            goto LABEL_63;
          }
LABEL_46:
          if (sub_11947B8((uint64_t)a3, &v44, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_63:
        }
          unint64_t v44 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v44;
    }
  }
}

unsigned char *sub_147C540(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 28);
    unsigned char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v13 = *(int *)(a1 + 32);
    unsigned char *v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unint64_t v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v16 = *(_DWORD *)(a1 + 36);
    unsigned char *v4 = 32;
    v4[1] = v16;
    if (v16 > 0x7F)
    {
      v4[1] = v16 | 0x80;
      unsigned int v17 = v16 >> 7;
      v4[2] = v16 >> 7;
      v4 += 3;
      if (v16 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v18 = v17 >> 14;
          v17 >>= 7;
          *v4++ = v17;
        }
        while (v18);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v19 = *(_DWORD *)(a1 + 40);
    unsigned char *v4 = 40;
    v4[1] = v19;
    if (v19 > 0x7F)
    {
      v4[1] = v19 | 0x80;
      unsigned int v20 = v19 >> 7;
      v4[2] = v19 >> 7;
      v4 += 3;
      if (v19 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v21 = v20 >> 14;
          v20 >>= 7;
          *v4++ = v20;
        }
        while (v21);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x20) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v22 = *(_DWORD *)(a1 + 44);
    unsigned char *v4 = 48;
    v4[1] = v22;
    if (v22 > 0x7F)
    {
      v4[1] = v22 | 0x80;
      unsigned int v23 = v22 >> 7;
      v4[2] = v22 >> 7;
      v4 += 3;
      if (v22 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v24 = v23 >> 14;
          v23 >>= 7;
          *v4++ = v23;
        }
        while (v24);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v25 = *(void *)(a1 + 8);
  if ((v25 & 1) == 0) {
    return v4;
  }
  unint64_t v27 = v25 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v27 + 31) < 0)
  {
    int v28 = *(void **)(v27 + 8);
    uint64_t v29 = *(void *)(v27 + 16);
  }
  else
  {
    int v28 = (void *)(v27 + 8);
    LODWORD(v29) = *(unsigned __int8 *)(v27 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v29)
  {
    uint64_t v30 = (int)v29;
    memcpy(v4, v28, (int)v29);
    v4 += v30;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v28, v29, v4);
}

uint64_t sub_147C8D4(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 0x3F) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_13;
  }
  if (v1)
  {
    uint64_t v2 = ((9 * (__clz(*(_DWORD *)(a1 + 24) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v2 = 0;
  if ((v1 & 2) != 0) {
LABEL_7:
  }
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 28) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_8:
  if ((v1 & 4) != 0)
  {
    int v5 = *(_DWORD *)(a1 + 32);
    if (v5 < 0) {
      uint64_t v6 = 11;
    }
    else {
      uint64_t v6 = ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v6;
    if ((v1 & 8) == 0)
    {
LABEL_10:
      if ((v1 & 0x10) == 0) {
        goto LABEL_11;
      }
      goto LABEL_20;
    }
  }
  else if ((v1 & 8) == 0)
  {
    goto LABEL_10;
  }
  v2 += ((9 * (__clz(*(_DWORD *)(a1 + 36) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 0x10) == 0)
  {
LABEL_11:
    if ((v1 & 0x20) == 0) {
      goto LABEL_13;
    }
    goto LABEL_12;
  }
LABEL_20:
  v2 += ((9 * (__clz(*(_DWORD *)(a1 + 40) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 0x20) != 0) {
LABEL_12:
  }
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 44) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_13:
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v7 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v7 + 31) < 0) {
      uint64_t v8 = *(void *)(v7 + 16);
    }
    else {
      uint64_t v8 = *(unsigned __int8 *)(v7 + 31);
    }
    v2 += v8;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_147CA34()
{
  return 1;
}

void *sub_147CA3C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.OrientedTilePosition");
}

uint64_t sub_147CA4C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_2539DC0)
  {
    uint64_t v6 = *(void **)(a1 + 24);
    if (v6)
    {
      sub_147B9D8(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_147CB04(uint64_t a1)
{
  sub_147CA4C(a1);

  operator delete();
}

uint64_t sub_147CB3C(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if (v2) {
    uint64_t result = sub_147BA84(*(void *)(result + 24));
  }
  if ((v2 & 0xE) != 0)
  {
    *(void *)(v1 + 32) = 0;
    *(void *)(v1 + 40) = 0;
    *(void *)(v1 + 48) = 0;
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_147CBA8(uint64_t a1, char *a2, int32x2_t *a3)
{
  unsigned int v22 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v22, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = v22 + 1;
    unsigned int v9 = *v22;
    if (*v22 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v22, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v22 + 2;
      }
    }
    unsigned int v22 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_22;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 24);
        if (!v12)
        {
          unint64_t v13 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            unint64_t v13 = (void *)*v13;
          }
          sub_1481D2C((uint64_t)v13);
          uint64_t v12 = v14;
          *(void *)(a1 + 24) = v14;
          uint64_t v8 = v22;
        }
        unint64_t v15 = sub_147CDB8(a3, v12, (unsigned __int8 *)v8);
        goto LABEL_29;
      case 2u:
        if (v9 != 17) {
          goto LABEL_22;
        }
        uint64_t v17 = *(void *)v8;
        unsigned int v16 = v8 + 8;
        v5 |= 2u;
        *(void *)(a1 + 32) = v17;
        goto LABEL_21;
      case 3u:
        if (v9 != 25) {
          goto LABEL_22;
        }
        uint64_t v18 = *(void *)v8;
        unsigned int v16 = v8 + 8;
        v5 |= 4u;
        *(void *)(a1 + 40) = v18;
        goto LABEL_21;
      case 4u:
        if (v9 != 33) {
          goto LABEL_22;
        }
        uint64_t v19 = *(void *)v8;
        unsigned int v16 = v8 + 8;
        v5 |= 8u;
        *(void *)(a1 + 48) = v19;
LABEL_21:
        unsigned int v22 = v16;
        goto LABEL_30;
      default:
LABEL_22:
        if (v9) {
          BOOL v20 = (v9 & 7) == 4;
        }
        else {
          BOOL v20 = 1;
        }
        if (!v20)
        {
          if (*v7)
          {
            unsigned int v21 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            unsigned int v21 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = v22;
          }
          unint64_t v15 = (char *)sub_1885AC0(v9, v21, v8, a3);
LABEL_29:
          unsigned int v22 = v15;
          if (!v15) {
            goto LABEL_35;
          }
LABEL_30:
          if (sub_11947B8((uint64_t)a3, &v22, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_35:
        }
          unsigned int v22 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v22;
    }
  }
}

char *sub_147CDB8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_147BAB4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_147CE48(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    unsigned char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    char v4 = sub_147BCD0(v7, (unint64_t)v9, a3);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_15;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v10 = *(void *)(a1 + 32);
  unsigned char *v4 = 17;
  *(void *)(v4 + 1) = v10;
  v4 += 9;
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_21;
    }
    goto LABEL_18;
  }
LABEL_15:
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v11 = *(void *)(a1 + 40);
  unsigned char *v4 = 25;
  *(void *)(v4 + 1) = v11;
  v4 += 9;
  if ((v6 & 8) != 0)
  {
LABEL_18:
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v12 = *(void *)(a1 + 48);
    unsigned char *v4 = 33;
    *(void *)(v4 + 1) = v12;
    v4 += 9;
  }
LABEL_21:
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    unsigned int v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    unsigned int v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_147D01C(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0xF) != 0)
  {
    if (v2)
    {
      uint64_t v5 = sub_147BEE4(*(void *)(a1 + 24));
      uint64_t v3 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    else
    {
      uint64_t v3 = 0;
    }
    if ((v2 & 2) != 0) {
      v3 += 9;
    }
    if ((v2 & 4) != 0) {
      v3 += 9;
    }
    if ((v2 & 8) != 0) {
      uint64_t result = v3 + 9;
    }
    else {
      uint64_t result = v3;
    }
  }
  else
  {
    uint64_t result = 0;
  }
  uint64_t v6 = *(void *)(a1 + 8);
  if (v6)
  {
    unint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v7 + 31) < 0) {
      uint64_t v8 = *(void *)(v7 + 16);
    }
    else {
      uint64_t v8 = *(unsigned __int8 *)(v7 + 31);
    }
    result += v8;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

std::string *sub_147D0D8(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0xF) != 0)
  {
    if (v4)
    {
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::pointer data = (std::string *)result[1].__r_.__value_.__l.__data_;
      if (!data)
      {
        std::string::size_type size = v3->__r_.__value_.__l.__size_;
        uint64_t v8 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
        if (size) {
          uint64_t v8 = (void *)*v8;
        }
        sub_1481D2C((uint64_t)v8);
        v3[1].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      }
      if (*(void *)(a2 + 24)) {
        unsigned int v9 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        unsigned int v9 = &off_2539D48;
      }
      uint64_t result = sub_147BF78(data, (uint64_t)v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_21;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    v3[1].__r_.__value_.__l.__size_ = *(void *)(a2 + 32);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0)
      {
LABEL_7:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
        goto LABEL_8;
      }
LABEL_6:
      v3[2].__r_.__value_.__r.__words[0] = *(void *)(a2 + 48);
      goto LABEL_7;
    }
LABEL_21:
    v3[1].__r_.__value_.__r.__words[2] = *(void *)(a2 + 40);
    if ((v4 & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_8:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_147D1D0()
{
  return 1;
}

void *sub_147D1D8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.OrientedBoundingBox");
}

void *sub_147D1E8(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_147D25C(void *a1)
{
  sub_147D1E8(a1);

  operator delete();
}

uint64_t sub_147D294(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((_BYTE)v1)
  {
    *(_OWORD *)(a1 + 72) = 0u;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
  }
  if ((v1 & 0x300) != 0)
  {
    *(_DWORD *)(a1 + 96) = 0;
    *(void *)(a1 + 88) = 0;
  }
  char v3 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v3) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_147D2D8(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v29 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v29, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = v29 + 1;
    unsigned int v9 = *v29;
    if (*v29 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v29, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v29 + 2;
      }
    }
    uint64_t v29 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_35;
        }
        v5 |= 0x200u;
        uint64_t v13 = v8 + 1;
        LODWORD(v12) = *v8;
        if ((v12 & 0x80) == 0) {
          goto LABEL_13;
        }
        int v14 = *v13;
        uint64_t v12 = v12 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          uint64_t v13 = v8 + 2;
LABEL_13:
          uint64_t v29 = v13;
          *(_DWORD *)(a1 + 96) = v12;
          goto LABEL_33;
        }
        unint64_t v27 = (char *)sub_188C138((uint64_t)v8, v12);
        uint64_t v29 = v27;
        *(_DWORD *)(a1 + 96) = v28;
        if (v27) {
          goto LABEL_33;
        }
        goto LABEL_48;
      case 2u:
        if (v9 != 17) {
          goto LABEL_35;
        }
        uint64_t v16 = *(void *)v8;
        unint64_t v15 = v8 + 8;
        v5 |= 1u;
        *(void *)(a1 + 24) = v16;
        goto LABEL_32;
      case 3u:
        if (v9 != 25) {
          goto LABEL_35;
        }
        uint64_t v17 = *(void *)v8;
        unint64_t v15 = v8 + 8;
        v5 |= 2u;
        *(void *)(a1 + 32) = v17;
        goto LABEL_32;
      case 4u:
        if (v9 != 33) {
          goto LABEL_35;
        }
        uint64_t v18 = *(void *)v8;
        unint64_t v15 = v8 + 8;
        v5 |= 4u;
        *(void *)(a1 + 40) = v18;
        goto LABEL_32;
      case 5u:
        if (v9 != 41) {
          goto LABEL_35;
        }
        uint64_t v19 = *(void *)v8;
        unint64_t v15 = v8 + 8;
        v5 |= 8u;
        *(void *)(a1 + 48) = v19;
        goto LABEL_32;
      case 6u:
        if (v9 != 49) {
          goto LABEL_35;
        }
        uint64_t v20 = *(void *)v8;
        unint64_t v15 = v8 + 8;
        v5 |= 0x10u;
        *(void *)(a1 + 56) = v20;
        goto LABEL_32;
      case 7u:
        if (v9 != 57) {
          goto LABEL_35;
        }
        uint64_t v21 = *(void *)v8;
        unint64_t v15 = v8 + 8;
        v5 |= 0x20u;
        *(void *)(a1 + 64) = v21;
        goto LABEL_32;
      case 8u:
        if (v9 != 65) {
          goto LABEL_35;
        }
        uint64_t v22 = *(void *)v8;
        unint64_t v15 = v8 + 8;
        v5 |= 0x40u;
        *(void *)(a1 + 72) = v22;
        goto LABEL_32;
      case 9u:
        if (v9 != 73) {
          goto LABEL_35;
        }
        uint64_t v23 = *(void *)v8;
        unint64_t v15 = v8 + 8;
        v5 |= 0x80u;
        *(void *)(a1 + 80) = v23;
        goto LABEL_32;
      case 0xAu:
        if (v9 != 81) {
          goto LABEL_35;
        }
        uint64_t v24 = *(void *)v8;
        unint64_t v15 = v8 + 8;
        v5 |= 0x100u;
        *(void *)(a1 + 88) = v24;
LABEL_32:
        uint64_t v29 = v15;
        goto LABEL_33;
      default:
LABEL_35:
        if (v9) {
          BOOL v25 = (v9 & 7) == 4;
        }
        else {
          BOOL v25 = 1;
        }
        if (!v25)
        {
          if (*v7)
          {
            int v26 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            int v26 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = v29;
          }
          uint64_t v29 = (char *)sub_1885AC0(v9, v26, v8, a3);
          if (!v29) {
            goto LABEL_48;
          }
LABEL_33:
          if (sub_11947B8((uint64_t)a3, &v29, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_48:
        }
          uint64_t v29 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v29;
    }
  }
}

unsigned char *sub_147D5B0(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 0x200) != 0)
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 96);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 24);
    unsigned char *v4 = 17;
    *(void *)(v4 + 1) = v10;
    v4 += 9;
    if ((v6 & 2) == 0)
    {
LABEL_10:
      if ((v6 & 4) == 0) {
        goto LABEL_11;
      }
      goto LABEL_24;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_10;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v11 = *(void *)(a1 + 32);
  unsigned char *v4 = 25;
  *(void *)(v4 + 1) = v11;
  v4 += 9;
  if ((v6 & 4) == 0)
  {
LABEL_11:
    if ((v6 & 8) == 0) {
      goto LABEL_12;
    }
    goto LABEL_27;
  }
LABEL_24:
  if (*(void *)a3 <= (unint64_t)v4) {
    int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v12 = *(void *)(a1 + 40);
  unsigned char *v4 = 33;
  *(void *)(v4 + 1) = v12;
  v4 += 9;
  if ((v6 & 8) == 0)
  {
LABEL_12:
    if ((v6 & 0x10) == 0) {
      goto LABEL_13;
    }
    goto LABEL_30;
  }
LABEL_27:
  if (*(void *)a3 <= (unint64_t)v4) {
    int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v13 = *(void *)(a1 + 48);
  unsigned char *v4 = 41;
  *(void *)(v4 + 1) = v13;
  v4 += 9;
  if ((v6 & 0x10) == 0)
  {
LABEL_13:
    if ((v6 & 0x20) == 0) {
      goto LABEL_14;
    }
    goto LABEL_33;
  }
LABEL_30:
  if (*(void *)a3 <= (unint64_t)v4) {
    int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v14 = *(void *)(a1 + 56);
  unsigned char *v4 = 49;
  *(void *)(v4 + 1) = v14;
  v4 += 9;
  if ((v6 & 0x20) == 0)
  {
LABEL_14:
    if ((v6 & 0x40) == 0) {
      goto LABEL_15;
    }
    goto LABEL_36;
  }
LABEL_33:
  if (*(void *)a3 <= (unint64_t)v4) {
    int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v15 = *(void *)(a1 + 64);
  unsigned char *v4 = 57;
  *(void *)(v4 + 1) = v15;
  v4 += 9;
  if ((v6 & 0x40) == 0)
  {
LABEL_15:
    if ((v6 & 0x80) == 0) {
      goto LABEL_16;
    }
    goto LABEL_39;
  }
LABEL_36:
  if (*(void *)a3 <= (unint64_t)v4) {
    int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v16 = *(void *)(a1 + 72);
  unsigned char *v4 = 65;
  *(void *)(v4 + 1) = v16;
  v4 += 9;
  if ((v6 & 0x80) == 0)
  {
LABEL_16:
    if ((v6 & 0x100) == 0) {
      goto LABEL_45;
    }
    goto LABEL_42;
  }
LABEL_39:
  if (*(void *)a3 <= (unint64_t)v4) {
    int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v17 = *(void *)(a1 + 80);
  unsigned char *v4 = 73;
  *(void *)(v4 + 1) = v17;
  v4 += 9;
  if ((v6 & 0x100) != 0)
  {
LABEL_42:
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v18 = *(void *)(a1 + 88);
    unsigned char *v4 = 81;
    *(void *)(v4 + 1) = v18;
    v4 += 9;
  }
LABEL_45:
  uint64_t v19 = *(void *)(a1 + 8);
  if ((v19 & 1) == 0) {
    return v4;
  }
  unint64_t v21 = v19 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v21 + 31) < 0)
  {
    uint64_t v22 = *(void **)(v21 + 8);
    uint64_t v23 = *(void *)(v21 + 16);
  }
  else
  {
    uint64_t v22 = (void *)(v21 + 8);
    LODWORD(v23) = *(unsigned __int8 *)(v21 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v23)
  {
    uint64_t v24 = (int)v23;
    memcpy(v4, v22, (int)v23);
    v4 += v24;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v22, v23, v4);
}

uint64_t sub_147D8F4(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((_BYTE)v1)
  {
    uint64_t v2 = 9;
    if ((v1 & 1) == 0) {
      uint64_t v2 = 0;
    }
    if ((v1 & 2) != 0) {
      v2 += 9;
    }
    if ((v1 & 4) != 0) {
      v2 += 9;
    }
    if ((v1 & 8) != 0) {
      v2 += 9;
    }
    if ((v1 & 0x10) != 0) {
      v2 += 9;
    }
    if ((v1 & 0x20) != 0) {
      v2 += 9;
    }
    if ((v1 & 0x40) != 0) {
      v2 += 9;
    }
    if ((v1 & 0x80) != 0) {
      v2 += 9;
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  if ((v1 & 0x300) != 0)
  {
    if ((v1 & 0x100) != 0) {
      v2 += 9;
    }
    if ((v1 & 0x200) != 0)
    {
      int v3 = *(_DWORD *)(a1 + 96);
      uint64_t v4 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if (v3 >= 0) {
        uint64_t v5 = v4;
      }
      else {
        uint64_t v5 = 11;
      }
      v2 += v5;
    }
  }
  uint64_t v6 = *(void *)(a1 + 8);
  if (v6)
  {
    unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v8 + 31) < 0) {
      uint64_t v9 = *(void *)(v8 + 16);
    }
    else {
      uint64_t v9 = *(unsigned __int8 *)(v8 + 31);
    }
    v2 += v9;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_147D9E8(std::string *result, uint64_t a2)
{
  int v2 = *(_DWORD *)(a2 + 16);
  if ((_BYTE)v2)
  {
    if (v2)
    {
      result[1].__r_.__value_.__r.__words[0] = *(void *)(a2 + 24);
      if ((v2 & 2) == 0)
      {
LABEL_4:
        if ((v2 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_22;
      }
    }
    else if ((v2 & 2) == 0)
    {
      goto LABEL_4;
    }
    result[1].__r_.__value_.__l.__size_ = *(void *)(a2 + 32);
    if ((v2 & 4) == 0)
    {
LABEL_5:
      if ((v2 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_23;
    }
LABEL_22:
    result[1].__r_.__value_.__r.__words[2] = *(void *)(a2 + 40);
    if ((v2 & 8) == 0)
    {
LABEL_6:
      if ((v2 & 0x10) == 0) {
        goto LABEL_7;
      }
      goto LABEL_24;
    }
LABEL_23:
    result[2].__r_.__value_.__r.__words[0] = *(void *)(a2 + 48);
    if ((v2 & 0x10) == 0)
    {
LABEL_7:
      if ((v2 & 0x20) == 0) {
        goto LABEL_8;
      }
      goto LABEL_25;
    }
LABEL_24:
    result[2].__r_.__value_.__l.__size_ = *(void *)(a2 + 56);
    if ((v2 & 0x20) == 0)
    {
LABEL_8:
      if ((v2 & 0x40) == 0) {
        goto LABEL_9;
      }
      goto LABEL_26;
    }
LABEL_25:
    result[2].__r_.__value_.__r.__words[2] = *(void *)(a2 + 64);
    if ((v2 & 0x40) == 0)
    {
LABEL_9:
      if ((v2 & 0x80) == 0)
      {
LABEL_11:
        LODWORD(result->__r_.__value_.__r.__words[2]) |= v2;
        goto LABEL_12;
      }
LABEL_10:
      result[3].__r_.__value_.__l.__size_ = *(void *)(a2 + 80);
      goto LABEL_11;
    }
LABEL_26:
    result[3].__r_.__value_.__r.__words[0] = *(void *)(a2 + 72);
    if ((v2 & 0x80) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
LABEL_12:
  if ((v2 & 0x300) != 0)
  {
    if ((v2 & 0x100) != 0) {
      result[3].__r_.__value_.__r.__words[2] = *(void *)(a2 + 88);
    }
    if ((v2 & 0x200) != 0) {
      LODWORD(result[4].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 96);
    }
    LODWORD(result->__r_.__value_.__r.__words[2]) |= v2;
  }
  uint64_t v3 = *(void *)(a2 + 8);
  if (v3) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v3 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_147DAC8()
{
  return 1;
}

void *sub_147DAD0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PhotoPosition.LensProjection");
}

uint64_t sub_147DAE0(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  if ((uint64_t (***)())a1 != &off_2539E60)
  {
    uint64_t v5 = *(void **)(a1 + 40);
    if (v5)
    {
      sub_147D1E8(v5);
      operator delete();
    }
    uint64_t v6 = *(void **)(a1 + 48);
    if (v6)
    {
      sub_147B9D8(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  sub_1889DA8(a1 + 24);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_147DBB8(uint64_t a1)
{
  sub_147DAE0(a1);

  operator delete();
}

uint64_t sub_147DBF0(uint64_t result)
{
  uint64_t v1 = result;
  *(_DWORD *)(result + 24) = 0;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 3) != 0)
  {
    if (v2) {
      uint64_t result = sub_147D294(*(void *)(result + 40));
    }
    if ((v2 & 2) != 0) {
      uint64_t result = sub_147BA84(*(void *)(v1 + 48));
    }
  }
  if ((v2 & 0x1C) != 0)
  {
    *(_DWORD *)(v1 + 64) = 0;
    *(void *)(v1 + 56) = 0;
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_147DC74(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v42 = a2;
  int v5 = 0;
  if ((sub_11947B8((uint64_t)a3, &v42, a3[11].i32[1]) & 1) == 0)
  {
    unint64_t v7 = (void *)(a1 + 8);
    while (1)
    {
      unint64_t v8 = v42 + 1;
      unsigned int v9 = *v42;
      if (*v42 < 0)
      {
        unsigned int v10 = v9 + (*v8 << 7);
        unsigned int v9 = v10 - 128;
        if (*v8 < 0)
        {
          unint64_t v8 = (char *)sub_188C180((uint64_t)v42, v10 - 128);
          unsigned int v9 = v11;
        }
        else
        {
          unint64_t v8 = v42 + 2;
        }
      }
      uint64_t v42 = v8;
      switch(v9 >> 3)
      {
        case 1u:
          if (v9 != 8) {
            goto LABEL_58;
          }
          v5 |= 4u;
          uint64_t v13 = v8 + 1;
          LODWORD(v12) = *v8;
          if ((v12 & 0x80) == 0) {
            goto LABEL_13;
          }
          int v14 = *v13;
          uint64_t v12 = v12 + (v14 << 7) - 128;
          if ((v14 & 0x80000000) == 0)
          {
            uint64_t v13 = v8 + 2;
LABEL_13:
            uint64_t v42 = v13;
            *(_DWORD *)(a1 + 56) = v12;
            goto LABEL_66;
          }
          unsigned int v34 = (char *)sub_188C138((uint64_t)v8, v12);
          uint64_t v42 = v34;
          *(_DWORD *)(a1 + 56) = v35;
          if (!v34) {
            goto LABEL_71;
          }
          goto LABEL_66;
        case 2u:
          if (v9 != 16) {
            goto LABEL_58;
          }
          v5 |= 8u;
          uint64_t v16 = v8 + 1;
          LODWORD(v15) = *v8;
          if ((v15 & 0x80) == 0) {
            goto LABEL_18;
          }
          int v17 = *v16;
          uint64_t v15 = v15 + (v17 << 7) - 128;
          if (v17 < 0)
          {
            unsigned int v36 = (char *)sub_188C138((uint64_t)v8, v15);
            uint64_t v42 = v36;
            *(_DWORD *)(a1 + 60) = v37;
            if (!v36) {
              goto LABEL_71;
            }
          }
          else
          {
            uint64_t v16 = v8 + 2;
LABEL_18:
            uint64_t v42 = v16;
            *(_DWORD *)(a1 + 60) = v15;
          }
          goto LABEL_66;
        case 3u:
          if (v9 != 24) {
            goto LABEL_58;
          }
          v5 |= 0x10u;
          uint64_t v19 = v8 + 1;
          LODWORD(v18) = *v8;
          if ((v18 & 0x80) == 0) {
            goto LABEL_23;
          }
          int v20 = *v19;
          uint64_t v18 = v18 + (v20 << 7) - 128;
          if (v20 < 0)
          {
            unsigned int v38 = (char *)sub_188C138((uint64_t)v8, v18);
            uint64_t v42 = v38;
            *(_DWORD *)(a1 + 64) = v39;
            if (!v38) {
              goto LABEL_71;
            }
          }
          else
          {
            uint64_t v19 = v8 + 2;
LABEL_23:
            uint64_t v42 = v19;
            *(_DWORD *)(a1 + 64) = v18;
          }
          goto LABEL_66;
        case 4u:
          if (v9 != 34) {
            goto LABEL_58;
          }
          *(_DWORD *)(a1 + 16) |= 1u;
          uint64_t v21 = *(void *)(a1 + 40);
          if (!v21)
          {
            uint64_t v22 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v7) {
              uint64_t v22 = (void *)*v22;
            }
            sub_1481EAC((uint64_t)v22);
            uint64_t v21 = v23;
            *(void *)(a1 + 40) = v23;
            unint64_t v8 = v42;
          }
          uint64_t v24 = sub_147E070(a3, v21, (unsigned __int8 *)v8);
          goto LABEL_65;
        case 5u:
          if (v9 != 42) {
            goto LABEL_58;
          }
          *(_DWORD *)(a1 + 16) |= 2u;
          uint64_t v25 = *(void *)(a1 + 48);
          if (!v25)
          {
            int v26 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v7) {
              int v26 = (void *)*v26;
            }
            sub_1481D2C((uint64_t)v26);
            uint64_t v25 = v27;
            *(void *)(a1 + 48) = v27;
            unint64_t v8 = v42;
          }
          uint64_t v24 = sub_147CDB8(a3, v25, (unsigned __int8 *)v8);
          goto LABEL_65;
        case 6u:
          if (v9 == 48)
          {
            int v28 = v8 - 1;
            while (1)
            {
              uint64_t v42 = v28 + 1;
              int v29 = v28[1];
              if (v28[1] < 0)
              {
                int v30 = v29 + (v28[2] << 7);
                int v29 = v30 - 128;
                if (v28[2] < 0)
                {
                  int v28 = (char *)sub_188C0D0((uint64_t)(v28 + 1), v30 - 128);
                  int v29 = v31;
                }
                else
                {
                  v28 += 3;
                }
              }
              else
              {
                v28 += 2;
              }
              uint64_t v42 = v28;
              uint64_t v32 = *(unsigned int *)(a1 + 24);
              if (v32 == *(_DWORD *)(a1 + 28))
              {
                int v33 = v32 + 1;
                sub_188C80C((unsigned int *)(a1 + 24), v32 + 1);
                *(_DWORD *)(*(void *)(a1 + 32) + 4 * v32) = v29;
                int v28 = v42;
              }
              else
              {
                *(_DWORD *)(*(void *)(a1 + 32) + 4 * v32) = v29;
                int v33 = v32 + 1;
              }
              *(_DWORD *)(a1 + 24) = v33;
              if (!v28) {
                goto LABEL_71;
              }
              if (*(void *)a3 <= (unint64_t)v28 || *v28 != 48) {
                goto LABEL_66;
              }
            }
          }
          if (v9 == 50)
          {
            uint64_t v24 = (char *)sub_188C2CC((unsigned int *)(a1 + 24), (unsigned __int8 *)v8, (uint64_t)a3);
          }
          else
          {
LABEL_58:
            if (v9) {
              BOOL v40 = (v9 & 7) == 4;
            }
            else {
              BOOL v40 = 1;
            }
            if (v40)
            {
              if (v8)
              {
                a3[10].i32[0] = v9 - 1;
                goto LABEL_2;
              }
LABEL_71:
              uint64_t v42 = 0;
              goto LABEL_2;
            }
            if (*v7)
            {
              int v41 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              int v41 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              unint64_t v8 = v42;
            }
            uint64_t v24 = (char *)sub_1885AC0(v9, v41, v8, a3);
          }
LABEL_65:
          uint64_t v42 = v24;
          if (!v24) {
            goto LABEL_71;
          }
LABEL_66:
          if (sub_11947B8((uint64_t)a3, &v42, a3[11].i32[1])) {
            goto LABEL_2;
          }
          break;
        default:
          goto LABEL_58;
      }
    }
  }
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v42;
}

char *sub_147E070(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_147D2D8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_147E100(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 56);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 60);
    unsigned char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v13 = *(int *)(a1 + 64);
    unsigned char *v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unint64_t v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v16 = *(void *)(a1 + 40);
    unsigned char *v4 = 34;
    unsigned int v17 = *(_DWORD *)(v16 + 20);
    v4[1] = v17;
    if (v17 > 0x7F) {
      uint64_t v18 = sub_188A9CC(v17, v4 + 1);
    }
    else {
      uint64_t v18 = v4 + 2;
    }
    char v4 = sub_147D5B0(v16, (unint64_t)v18, a3);
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v19 = *(void *)(a1 + 48);
    unsigned char *v4 = 42;
    unsigned int v20 = *(_DWORD *)(v19 + 20);
    v4[1] = v20;
    if (v20 > 0x7F) {
      uint64_t v21 = sub_188A9CC(v20, v4 + 1);
    }
    else {
      uint64_t v21 = v4 + 2;
    }
    char v4 = sub_147BCD0(v19, (unint64_t)v21, a3);
  }
  uint64_t v22 = *(unsigned int *)(a1 + 24);
  if ((int)v22 >= 1)
  {
    for (uint64_t i = 0; i != v22; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unsigned int v24 = *(_DWORD *)(*(void *)(a1 + 32) + 4 * i);
      unsigned char *v4 = 48;
      v4[1] = v24;
      if (v24 > 0x7F)
      {
        v4[1] = v24 | 0x80;
        unsigned int v25 = v24 >> 7;
        v4[2] = v24 >> 7;
        v4 += 3;
        if (v24 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unsigned int v26 = v25 >> 14;
            v25 >>= 7;
            *v4++ = v25;
          }
          while (v26);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  uint64_t v27 = *(void *)(a1 + 8);
  if ((v27 & 1) == 0) {
    return v4;
  }
  unint64_t v29 = v27 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v29 + 31) < 0)
  {
    int v30 = *(void **)(v29 + 8);
    uint64_t v31 = *(void *)(v29 + 16);
  }
  else
  {
    int v30 = (void *)(v29 + 8);
    LODWORD(v31) = *(unsigned __int8 *)(v29 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v31)
  {
    uint64_t v32 = (int)v31;
    memcpy(v4, v30, (int)v31);
    v4 += v32;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v30, v31, v4);
}

uint64_t sub_147E490(uint64_t a1)
{
  uint64_t v2 = sub_188D4F0((unsigned int *)(a1 + 24)) + *(unsigned int *)(a1 + 24);
  int v3 = *(_DWORD *)(a1 + 16);
  if ((v3 & 0x1F) == 0) {
    goto LABEL_22;
  }
  if (v3)
  {
    uint64_t v4 = sub_147D8F4(*(void *)(a1 + 40));
    v2 += v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v3 & 2) == 0)
    {
LABEL_4:
      if ((v3 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_10;
    }
  }
  else if ((v3 & 2) == 0)
  {
    goto LABEL_4;
  }
  uint64_t v5 = sub_147BEE4(*(void *)(a1 + 48));
  v2 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v3 & 4) == 0)
  {
LABEL_5:
    if ((v3 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_14;
  }
LABEL_10:
  int v6 = *(_DWORD *)(a1 + 56);
  if (v6 < 0) {
    uint64_t v7 = 11;
  }
  else {
    uint64_t v7 = ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v2 += v7;
  if ((v3 & 8) == 0)
  {
LABEL_6:
    if ((v3 & 0x10) == 0) {
      goto LABEL_22;
    }
    goto LABEL_18;
  }
LABEL_14:
  int v8 = *(_DWORD *)(a1 + 60);
  if (v8 < 0) {
    uint64_t v9 = 11;
  }
  else {
    uint64_t v9 = ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v2 += v9;
  if ((v3 & 0x10) != 0)
  {
LABEL_18:
    int v10 = *(_DWORD *)(a1 + 64);
    if (v10 < 0) {
      uint64_t v11 = 11;
    }
    else {
      uint64_t v11 = ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v11;
  }
LABEL_22:
  uint64_t v12 = *(void *)(a1 + 8);
  if (v12)
  {
    unint64_t v14 = v12 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v14 + 31) < 0) {
      uint64_t v15 = *(void *)(v14 + 16);
    }
    else {
      uint64_t v15 = *(unsigned __int8 *)(v14 + 31);
    }
    v2 += v15;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_147E618(std::string *result, uint64_t a2)
{
  int v3 = result;
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = result + 1;
    uint64_t data_low = SLODWORD(result[1].__r_.__value_.__l.__data_);
    sub_188C80C((unsigned int *)&result[1], data_low + v4);
    std::string::size_type size = v3[1].__r_.__value_.__l.__size_;
    LODWORD(v5->__r_.__value_.__l.__data_) += *(_DWORD *)(a2 + 24);
    uint64_t result = (std::string *)memcpy((void *)(size + 4 * data_low), *(const void **)(a2 + 32), 4 * *(int *)(a2 + 24));
  }
  int v8 = *(_DWORD *)(a2 + 16);
  if ((v8 & 0x1F) != 0)
  {
    if (v8)
    {
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      int v10 = (std::string *)v3[1].__r_.__value_.__r.__words[2];
      if (!v10)
      {
        std::string::size_type v11 = v3->__r_.__value_.__l.__size_;
        uint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
        if (v11) {
          uint64_t v12 = (void *)*v12;
        }
        sub_1481EAC((uint64_t)v12);
        v3[1].__r_.__value_.__r.__words[2] = (std::string::size_type)v10;
      }
      if (*(void *)(a2 + 40)) {
        unint64_t v13 = *(uint64_t (****)())(a2 + 40);
      }
      else {
        unint64_t v13 = &off_2539DF8;
      }
      uint64_t result = sub_147D9E8(v10, (uint64_t)v13);
      if ((v8 & 2) == 0)
      {
LABEL_6:
        if ((v8 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_31;
      }
    }
    else if ((v8 & 2) == 0)
    {
      goto LABEL_6;
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    std::string::pointer data = (std::string *)v3[2].__r_.__value_.__l.__data_;
    if (!data)
    {
      std::string::size_type v15 = v3->__r_.__value_.__l.__size_;
      uint64_t v16 = (void *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
      if (v15) {
        uint64_t v16 = (void *)*v16;
      }
      sub_1481D2C((uint64_t)v16);
      v3[2].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
    }
    if (*(void *)(a2 + 48)) {
      unsigned int v17 = *(uint64_t (****)())(a2 + 48);
    }
    else {
      unsigned int v17 = &off_2539D48;
    }
    uint64_t result = sub_147BF78(data, (uint64_t)v17);
    if ((v8 & 4) == 0)
    {
LABEL_7:
      if ((v8 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_32;
    }
LABEL_31:
    LODWORD(v3[2].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 56);
    if ((v8 & 8) == 0)
    {
LABEL_8:
      if ((v8 & 0x10) == 0)
      {
LABEL_10:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v8;
        goto LABEL_11;
      }
LABEL_9:
      LODWORD(v3[2].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 64);
      goto LABEL_10;
    }
LABEL_32:
    HIDWORD(v3[2].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 60);
    if ((v8 & 0x10) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
LABEL_11:
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_147E7A4()
{
  return 1;
}

void *sub_147E7AC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PhotoPosition.CameraMetadata");
}

uint64_t sub_147E7BC(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = off_24B6AE0;
  *(void *)(a1 + 24) = 0;
  int v5 = *(_DWORD *)(a2 + 16);
  if (v5)
  {
    sub_188C80C((unsigned int *)(a1 + 16), v5);
    int v6 = *(void **)(a1 + 24);
    *(_DWORD *)(a1 + 16) += *(_DWORD *)(a2 + 16);
    memcpy(v6, *(const void **)(a2 + 24), 4 * *(int *)(a2 + 16));
  }
  *(_DWORD *)(a1 + 32) = 0;
  uint64_t v7 = *(void *)(a2 + 8);
  if (v7) {
    sub_188B4F8(v4, (v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return a1;
}

void sub_147E86C(_Unwind_Exception *a1)
{
  sub_1889DA8(v3);
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_147E8AC(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1889DA8((uint64_t)(a1 + 2));
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_147E928(void *a1)
{
  sub_147E8AC(a1);

  operator delete();
}

uint64_t sub_147E960(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_147E974(uint64_t a1, char *a2, int32x2_t *a3)
{
  unsigned int v20 = a2;
  if (sub_11947B8((uint64_t)a3, &v20, a3[11].i32[1])) {
    return v20;
  }
  int v5 = (void *)(a1 + 8);
  while (1)
  {
    int v6 = v20 + 1;
    unsigned int v7 = *v20;
    if (*v20 < 0)
    {
      unsigned int v8 = v7 + (*v6 << 7);
      unsigned int v7 = v8 - 128;
      if (*v6 < 0)
      {
        int v6 = (char *)sub_188C180((uint64_t)v20, v8 - 128);
        unsigned int v7 = v9;
      }
      else
      {
        int v6 = v20 + 2;
      }
    }
    unsigned int v20 = v6;
    if ((v7 & 0xFFFFFFF8) == 8)
    {
      if (v7 == 8)
      {
        int v10 = v6 - 1;
        while (1)
        {
          unsigned int v20 = v10 + 1;
          int v11 = v10[1];
          if (v10[1] < 0)
          {
            int v12 = v11 + (v10[2] << 7);
            int v11 = v12 - 128;
            if (v10[2] < 0)
            {
              int v10 = (char *)sub_188C0D0((uint64_t)(v10 + 1), v12 - 128);
              int v11 = v13;
            }
            else
            {
              v10 += 3;
            }
          }
          else
          {
            v10 += 2;
          }
          unsigned int v20 = v10;
          uint64_t v14 = *(unsigned int *)(a1 + 16);
          if (v14 == *(_DWORD *)(a1 + 20))
          {
            int v15 = v14 + 1;
            sub_188C80C((unsigned int *)(a1 + 16), v14 + 1);
            *(_DWORD *)(*(void *)(a1 + 24) + 4 * v14) = v11;
            int v10 = v20;
          }
          else
          {
            *(_DWORD *)(*(void *)(a1 + 24) + 4 * v14) = v11;
            int v15 = v14 + 1;
          }
          *(_DWORD *)(a1 + 16) = v15;
          if (!v10) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v10 || *v10 != 8) {
            goto LABEL_32;
          }
        }
      }
      if (v7 == 10)
      {
        uint64_t v16 = sub_188C2CC((unsigned int *)(a1 + 16), (unsigned __int8 *)v6, (uint64_t)a3);
        goto LABEL_31;
      }
    }
    if (!v7 || (v7 & 7) == 4) {
      break;
    }
    if (*v5)
    {
      uint64_t v18 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v18 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v6 = v20;
    }
    uint64_t v16 = sub_1885AC0(v7, v18, v6, a3);
LABEL_31:
    unsigned int v20 = (char *)v16;
    if (!v16) {
      return 0;
    }
LABEL_32:
    if (sub_11947B8((uint64_t)a3, &v20, a3[11].i32[1])) {
      return v20;
    }
  }
  if (v6)
  {
    a3[10].i32[0] = v7 - 1;
    return v20;
  }
  return 0;
}

char *sub_147EB74(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v6 = *(unsigned int *)(a1 + 16);
  if ((int)v6 >= 1)
  {
    for (uint64_t i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      unsigned int v8 = *(_DWORD *)(*(void *)(a1 + 24) + 4 * i);
      *__dst = 8;
      __dst[1] = v8;
      if (v8 > 0x7F)
      {
        __dst[1] = v8 | 0x80;
        unsigned int v9 = v8 >> 7;
        __dst[2] = v8 >> 7;
        __dst += 3;
        if (v8 >= 0x4000)
        {
          do
          {
            *(__dst - 1) |= 0x80u;
            unsigned int v10 = v9 >> 14;
            v9 >>= 7;
            *__dst++ = v9;
          }
          while (v10);
        }
      }
      else
      {
        __dst += 2;
      }
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return __dst;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    uint64_t v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    uint64_t v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(__dst, v14, (int)v15);
    __dst += v16;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, __dst);
}

uint64_t sub_147ECC4(uint64_t a1)
{
  uint64_t result = sub_188D4F0((unsigned int *)(a1 + 16)) + *(unsigned int *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v4 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v5 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v5 = *(unsigned __int8 *)(v4 + 31);
    }
    result += v5;
  }
  *(_DWORD *)(a1 + 32) = result;
  return result;
}

uint64_t sub_147ED24()
{
  return 1;
}

void *sub_147ED2C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PhotoPosition.RigMetrics");
}

uint64_t sub_147ED3C(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  unint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)a1 = off_24B6B60;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v5 = (uint64_t *)(a1 + 24);
  *(_DWORD *)(a1 + 44) = 0;
  *(void *)(a1 + 28) = 0;
  *(void *)(a1 + 36) = 0;
  *(void *)(a1 + 20) = 0;
  int v6 = *(_DWORD *)(a2 + 32);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 40);
    unsigned int v8 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_1494A44(v5, v8, (uint64_t *)(v7 + 8), v6, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v9 = *(_DWORD *)(a1 + 32) + v6;
    *(_DWORD *)(a1 + 32) = v9;
    unsigned int v10 = *(int **)(a1 + 40);
    if (*v10 < v9) {
      *unsigned int v10 = v9;
    }
  }
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  int v11 = *(_DWORD *)(a2 + 48);
  if (v11)
  {
    sub_188C80C((unsigned int *)(a1 + 48), v11);
    int v12 = *(void **)(a1 + 56);
    *(_DWORD *)(a1 + 48) += *(_DWORD *)(a2 + 48);
    memcpy(v12, *(const void **)(a2 + 56), 4 * *(int *)(a2 + 48));
  }
  uint64_t v13 = *(void *)(a2 + 8);
  if (v13) {
    sub_188B4F8(v4, (v13 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  int v14 = *(_DWORD *)(a2 + 16);
  if (v14) {
    operator new();
  }
  *(void *)(a1 + 64) = 0;
  if ((v14 & 2) != 0) {
    operator new();
  }
  *(void *)(a1 + 72) = 0;
  if ((v14 & 4) != 0) {
    operator new();
  }
  *(void *)(a1 + 80) = 0;
  if ((v14 & 8) != 0) {
    operator new();
  }
  *(void *)(a1 + 88) = 0;
  if ((v14 & 0x10) != 0) {
    operator new();
  }
  *(void *)(a1 + 96) = 0;
  if ((v14 & 0x20) != 0) {
    operator new();
  }
  *(void *)(a1 + 104) = 0;
  long long v15 = *(_OWORD *)(a2 + 112);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = v15;
  return a1;
}

void sub_147EFC4()
{
}

uint64_t sub_147F090(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  unint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_147F128((uint64_t (***)())a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  sub_1889DA8(a1 + 48);
  sub_14949C4((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

uint64_t (***sub_147F128(uint64_t (***result)()))()
{
  if (result != &off_2539ED0)
  {
    uint64_t v1 = result;
    uint64_t v2 = result[8];
    if (v2)
    {
      sub_147B9D8(v2);
      operator delete();
    }
    uint64_t v3 = v1[9];
    if (v3)
    {
      sub_147B4F4(v3);
      operator delete();
    }
    uint64_t v4 = (uint64_t)v1[10];
    if (v4)
    {
      sub_147A0C0(v4);
      operator delete();
    }
    uint64_t v5 = v1[11];
    if (v5)
    {
      sub_147C0D8(v5);
      operator delete();
    }
    if (v1[12])
    {
      sub_15BF834();
      operator delete();
    }
    uint64_t result = (uint64_t (***)())v1[13];
    if (result)
    {
      sub_147E8AC(result);
      operator delete();
    }
  }
  return result;
}

void sub_147F234(uint64_t a1)
{
  sub_147F090(a1);

  operator delete();
}

uint64_t sub_147F26C(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_147DBF0(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  *(_DWORD *)(v1 + 48) = 0;
  int v5 = *(_DWORD *)(v1 + 16);
  if ((v5 & 0x3F) != 0)
  {
    if (v5)
    {
      uint64_t result = sub_147BA84(*(void *)(v1 + 64));
      if ((v5 & 2) == 0)
      {
LABEL_8:
        if ((v5 & 4) == 0) {
          goto LABEL_9;
        }
        goto LABEL_15;
      }
    }
    else if ((v5 & 2) == 0)
    {
      goto LABEL_8;
    }
    uint64_t result = sub_14152BC(*(void *)(v1 + 72));
    if ((v5 & 4) == 0)
    {
LABEL_9:
      if ((v5 & 8) == 0) {
        goto LABEL_10;
      }
      goto LABEL_16;
    }
LABEL_15:
    uint64_t result = sub_147A1A8(*(void *)(v1 + 80));
    if ((v5 & 8) == 0)
    {
LABEL_10:
      if ((v5 & 0x10) == 0) {
        goto LABEL_11;
      }
      goto LABEL_17;
    }
LABEL_16:
    uint64_t result = sub_147C184(*(void *)(v1 + 88));
    if ((v5 & 0x10) == 0)
    {
LABEL_11:
      if ((v5 & 0x20) == 0) {
        goto LABEL_20;
      }
      goto LABEL_18;
    }
LABEL_17:
    uint64_t result = sub_15BF870(*(void *)(v1 + 96));
    if ((v5 & 0x20) == 0) {
      goto LABEL_20;
    }
LABEL_18:
    uint64_t v6 = *(void *)(v1 + 104);
    char v7 = *(unsigned char *)(v6 + 8);
    uint64_t result = v6 + 8;
    *(_DWORD *)(result + 8) = 0;
    if (v7) {
      uint64_t result = sub_188B4AC((uint64_t *)result);
    }
  }
LABEL_20:
  if ((v5 & 0xC0) != 0)
  {
    *(void *)(v1 + 112) = 0;
    *(void *)(v1 + 120) = 0;
  }
  if ((v5 & 0x300) != 0) {
    *(void *)(v1 + 128) = 0;
  }
  char v9 = *(unsigned char *)(v1 + 8);
  uint64_t v8 = v1 + 8;
  *(_DWORD *)(v8 + 8) = 0;
  if (v9)
  {
    return sub_188B4AC((uint64_t *)v8);
  }
  return result;
}

char *sub_147F380(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v63 = a2;
  int v5 = 0;
  if ((sub_11947B8((uint64_t)a3, &v63, a3[11].i32[1]) & 1) == 0)
  {
    char v7 = (void *)(a1 + 8);
    while (1)
    {
      uint64_t v8 = v63 + 1;
      unsigned int v9 = *v63;
      if (*v63 < 0)
      {
        unsigned int v10 = v9 + (*v8 << 7);
        unsigned int v9 = v10 - 128;
        if (*v8 < 0)
        {
          uint64_t v8 = (char *)sub_188C180((uint64_t)v63, v10 - 128);
          unsigned int v9 = v11;
        }
        else
        {
          uint64_t v8 = v63 + 2;
        }
      }
      int v63 = v8;
      switch(v9 >> 3)
      {
        case 1u:
          if (v9 != 8) {
            goto LABEL_99;
          }
          v5 |= 0x40u;
          int v12 = v8 + 1;
          uint64_t v13 = *v8;
          if ((*v8 & 0x80000000) == 0) {
            goto LABEL_13;
          }
          int v14 = *v12;
          uint64_t v13 = v13 + (v14 << 7) - 128;
          if ((v14 & 0x80000000) == 0)
          {
            int v12 = v8 + 2;
LABEL_13:
            int v63 = v12;
            *(void *)(a1 + 112) = v13;
            goto LABEL_107;
          }
          int v53 = (char *)sub_188C138((uint64_t)v8, v13);
          int v63 = v53;
          *(void *)(a1 + 112) = v54;
          if (!v53) {
            goto LABEL_112;
          }
          goto LABEL_107;
        case 2u:
          if (v9 != 18) {
            goto LABEL_99;
          }
          long long v15 = v8 - 1;
          while (1)
          {
            uint64_t v16 = (unsigned __int8 *)(v15 + 1);
            int v63 = v15 + 1;
            unsigned int v17 = *(_DWORD **)(a1 + 40);
            if (v17 && (uint64_t v18 = *(int *)(a1 + 32), (int)v18 < *v17))
            {
              *(_DWORD *)(a1 + 32) = v18 + 1;
              uint64_t v19 = *(void *)&v17[2 * v18 + 2];
            }
            else
            {
              uint64_t v20 = sub_1481F34(*(void *)(a1 + 24));
              uint64_t v19 = sub_188CDC8(a1 + 24, v20);
              uint64_t v16 = (unsigned __int8 *)v63;
            }
            long long v15 = sub_147F9D0(a3, v19, v16);
            int v63 = v15;
            if (!v15) {
              goto LABEL_112;
            }
            if (*(void *)a3 <= (unint64_t)v15 || *v15 != 18) {
              goto LABEL_107;
            }
          }
        case 3u:
          if (v9 != 26) {
            goto LABEL_99;
          }
          *(_DWORD *)(a1 + 16) |= 1u;
          uint64_t v21 = *(void *)(a1 + 64);
          if (!v21)
          {
            uint64_t v22 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v7) {
              uint64_t v22 = (void *)*v22;
            }
            sub_1481D2C((uint64_t)v22);
            uint64_t v21 = v23;
            *(void *)(a1 + 64) = v23;
            uint64_t v8 = v63;
          }
          unsigned int v24 = sub_147CDB8(a3, v21, (unsigned __int8 *)v8);
          goto LABEL_106;
        case 4u:
          if (v9 != 32) {
            goto LABEL_99;
          }
          v5 |= 0x100u;
          unsigned int v26 = v8 + 1;
          LODWORD(v25) = *v8;
          if ((v25 & 0x80) == 0) {
            goto LABEL_34;
          }
          int v27 = *v26;
          uint64_t v25 = v25 + (v27 << 7) - 128;
          if (v27 < 0)
          {
            int v55 = (char *)sub_188C138((uint64_t)v8, v25);
            int v63 = v55;
            *(_DWORD *)(a1 + 128) = v56;
            if (!v55) {
              goto LABEL_112;
            }
          }
          else
          {
            unsigned int v26 = v8 + 2;
LABEL_34:
            int v63 = v26;
            *(_DWORD *)(a1 + 128) = v25;
          }
          goto LABEL_107;
        case 5u:
          if (v9 != 40) {
            goto LABEL_99;
          }
          v5 |= 0x80u;
          int v28 = v8 + 1;
          uint64_t v29 = *v8;
          if ((*v8 & 0x80000000) == 0) {
            goto LABEL_39;
          }
          int v30 = *v28;
          uint64_t v29 = v29 + (v30 << 7) - 128;
          if (v30 < 0)
          {
            uint64_t v57 = (char *)sub_188C138((uint64_t)v8, v29);
            int v63 = v57;
            *(void *)(a1 + 120) = v58;
            if (!v57) {
              goto LABEL_112;
            }
          }
          else
          {
            int v28 = v8 + 2;
LABEL_39:
            int v63 = v28;
            *(void *)(a1 + 120) = v29;
          }
          goto LABEL_107;
        case 6u:
          if (v9 != 50) {
            goto LABEL_99;
          }
          *(_DWORD *)(a1 + 16) |= 2u;
          uint64_t v31 = *(void *)(a1 + 72);
          if (!v31)
          {
            uint64_t v32 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v7) {
              uint64_t v32 = (void *)*v32;
            }
            sub_1481CB0((uint64_t)v32);
            uint64_t v31 = v33;
            *(void *)(a1 + 72) = v33;
            uint64_t v8 = v63;
          }
          unsigned int v24 = sub_1415818(a3, v31, (unsigned __int8 *)v8);
          goto LABEL_106;
        case 7u:
          if (v9 != 56) {
            goto LABEL_99;
          }
          v5 |= 0x200u;
          unsigned int v34 = v8 + 1;
          int v35 = *v8;
          if ((*v8 & 0x80000000) == 0) {
            goto LABEL_50;
          }
          int v36 = *v34;
          int v35 = v35 + (v36 << 7) - 128;
          if (v36 < 0)
          {
            uint64_t v59 = (char *)sub_188C0D0((uint64_t)v8, v35);
            int v63 = v59;
            *(_DWORD *)(a1 + 132) = v60;
            if (!v59) {
              goto LABEL_112;
            }
          }
          else
          {
            unsigned int v34 = v8 + 2;
LABEL_50:
            int v63 = v34;
            *(_DWORD *)(a1 + 132) = v35;
          }
          goto LABEL_107;
        case 8u:
          if (v9 != 66) {
            goto LABEL_99;
          }
          *(_DWORD *)(a1 + 16) |= 4u;
          uint64_t v37 = *(void *)(a1 + 80);
          if (!v37)
          {
            unsigned int v38 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v7) {
              unsigned int v38 = (void *)*v38;
            }
            sub_1481BF4((uint64_t)v38);
            uint64_t v37 = v39;
            *(void *)(a1 + 80) = v39;
            uint64_t v8 = v63;
          }
          unsigned int v24 = (char *)sub_147FA60(a3, v37, (unsigned __int8 *)v8);
          goto LABEL_106;
        case 9u:
          if (v9 == 72)
          {
            BOOL v40 = v8 - 1;
            while (1)
            {
              int v63 = v40 + 1;
              int v41 = v40[1];
              if (v40[1] < 0)
              {
                int v42 = v41 + (v40[2] << 7);
                int v41 = v42 - 128;
                if (v40[2] < 0)
                {
                  BOOL v40 = (char *)sub_188C0D0((uint64_t)(v40 + 1), v42 - 128);
                  int v41 = v43;
                }
                else
                {
                  v40 += 3;
                }
              }
              else
              {
                v40 += 2;
              }
              int v63 = v40;
              uint64_t v44 = *(unsigned int *)(a1 + 48);
              if (v44 == *(_DWORD *)(a1 + 52))
              {
                int v45 = v44 + 1;
                sub_188C80C((unsigned int *)(a1 + 48), v44 + 1);
                *(_DWORD *)(*(void *)(a1 + 56) + 4 * v44) = v41;
                BOOL v40 = v63;
              }
              else
              {
                *(_DWORD *)(*(void *)(a1 + 56) + 4 * v44) = v41;
                int v45 = v44 + 1;
              }
              *(_DWORD *)(a1 + 48) = v45;
              if (!v40) {
                goto LABEL_112;
              }
              if (*(void *)a3 <= (unint64_t)v40 || *v40 != 72) {
                goto LABEL_107;
              }
            }
          }
          if (v9 == 74)
          {
            unsigned int v24 = (char *)sub_188C2CC((unsigned int *)(a1 + 48), (unsigned __int8 *)v8, (uint64_t)a3);
          }
          else
          {
LABEL_99:
            if (v9) {
              BOOL v61 = (v9 & 7) == 4;
            }
            else {
              BOOL v61 = 1;
            }
            if (v61)
            {
              if (v8)
              {
                a3[10].i32[0] = v9 - 1;
                goto LABEL_2;
              }
LABEL_112:
              int v63 = 0;
              goto LABEL_2;
            }
            if (*v7)
            {
              uint64_t v62 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              uint64_t v62 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              uint64_t v8 = v63;
            }
            unsigned int v24 = (char *)sub_1885AC0(v9, v62, v8, a3);
          }
LABEL_106:
          int v63 = v24;
          if (!v24) {
            goto LABEL_112;
          }
LABEL_107:
          if (sub_11947B8((uint64_t)a3, &v63, a3[11].i32[1])) {
            goto LABEL_2;
          }
          break;
        case 0xAu:
          if (v9 != 82) {
            goto LABEL_99;
          }
          *(_DWORD *)(a1 + 16) |= 8u;
          uint64_t v46 = *(void *)(a1 + 88);
          if (!v46)
          {
            uint64_t v47 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v7) {
              uint64_t v47 = (void *)*v47;
            }
            sub_1481DB0((uint64_t)v47);
            uint64_t v46 = v48;
            *(void *)(a1 + 88) = v48;
            uint64_t v8 = v63;
          }
          unsigned int v24 = sub_147FAF0(a3, v46, (unsigned __int8 *)v8);
          goto LABEL_106;
        case 0xBu:
          if (v9 != 90) {
            goto LABEL_99;
          }
          *(_DWORD *)(a1 + 16) |= 0x10u;
          uint64_t v49 = *(void *)(a1 + 96);
          if (!v49)
          {
            int v50 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v7) {
              int v50 = (void *)*v50;
            }
            uint64_t v49 = sub_15C2510((uint64_t)v50);
            *(void *)(a1 + 96) = v49;
            uint64_t v8 = v63;
          }
          unsigned int v24 = sub_11FF090(a3, v49, (unsigned __int8 *)v8);
          goto LABEL_106;
        case 0xCu:
          if (v9 != 98) {
            goto LABEL_99;
          }
          *(_DWORD *)(a1 + 16) |= 0x20u;
          uint64_t v51 = *(void *)(a1 + 104);
          if (!v51)
          {
            int v52 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v7) {
              int v52 = (void *)*v52;
            }
            uint64_t v51 = sub_1481FD8((uint64_t)v52);
            *(void *)(a1 + 104) = v51;
            uint64_t v8 = v63;
          }
          unsigned int v24 = sub_147FB80(a3, v51, (unsigned __int8 *)v8);
          goto LABEL_106;
        default:
          goto LABEL_99;
      }
    }
  }
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v63;
}

char *sub_147F9D0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_147DC74(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_147FA60(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_147A21C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_147FAF0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_147C1AC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_147FB80(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_147E974(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_147FC10(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 0x40) != 0)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(void *)(a1 + 112);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v10 = *(_DWORD *)(a1 + 32);
  if (v10)
  {
    for (int i = 0; i != v10; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v12 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      unsigned char *v4 = 18;
      unsigned int v13 = *(_DWORD *)(v12 + 20);
      v4[1] = v13;
      if (v13 > 0x7F) {
        int v14 = sub_188A9CC(v13, v4 + 1);
      }
      else {
        int v14 = v4 + 2;
      }
      uint64_t v4 = sub_147E100(v12, (unint64_t)v14, a3);
    }
  }
  if (v6)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v15 = *(void *)(a1 + 64);
    unsigned char *v4 = 26;
    unsigned int v16 = *(_DWORD *)(v15 + 20);
    v4[1] = v16;
    if (v16 > 0x7F) {
      unsigned int v17 = sub_188A9CC(v16, v4 + 1);
    }
    else {
      unsigned int v17 = v4 + 2;
    }
    uint64_t v4 = sub_147BCD0(v15, (unint64_t)v17, a3);
  }
  if ((v6 & 0x100) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v18 = *(int *)(a1 + 128);
    unsigned char *v4 = 32;
    v4[1] = v18;
    if (v18 > 0x7F)
    {
      v4[1] = v18 | 0x80;
      unint64_t v19 = v18 >> 7;
      v4[2] = v18 >> 7;
      v4 += 3;
      if (v18 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v20 = v19 >> 14;
          v19 >>= 7;
          *v4++ = v19;
        }
        while (v20);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x80) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v21 = *(void *)(a1 + 120);
    unsigned char *v4 = 40;
    v4[1] = v21;
    if (v21 > 0x7F)
    {
      v4[1] = v21 | 0x80;
      unint64_t v22 = v21 >> 7;
      v4[2] = v21 >> 7;
      v4 += 3;
      if (v21 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v23 = v22 >> 14;
          v22 >>= 7;
          *v4++ = v22;
        }
        while (v23);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v24 = *(void *)(a1 + 72);
    unsigned char *v4 = 50;
    unsigned int v25 = *(_DWORD *)(v24 + 20);
    v4[1] = v25;
    if (v25 > 0x7F) {
      unsigned int v26 = sub_188A9CC(v25, v4 + 1);
    }
    else {
      unsigned int v26 = v4 + 2;
    }
    uint64_t v4 = sub_147B738(v24, (unint64_t)v26, a3);
  }
  if ((v6 & 0x200) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v27 = *(_DWORD *)(a1 + 132);
    unsigned char *v4 = 56;
    v4[1] = v27;
    if (v27 > 0x7F)
    {
      v4[1] = v27 | 0x80;
      unsigned int v28 = v27 >> 7;
      v4[2] = v27 >> 7;
      v4 += 3;
      if (v27 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v29 = v28 >> 14;
          v28 >>= 7;
          *v4++ = v28;
        }
        while (v29);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v30 = *(void *)(a1 + 80);
    unsigned char *v4 = 66;
    unsigned int v31 = *(_DWORD *)(v30 + 20);
    v4[1] = v31;
    if (v31 > 0x7F) {
      uint64_t v32 = sub_188A9CC(v31, v4 + 1);
    }
    else {
      uint64_t v32 = v4 + 2;
    }
    uint64_t v4 = sub_147A98C(v30, (unint64_t)v32, a3);
  }
  uint64_t v33 = *(unsigned int *)(a1 + 48);
  if ((int)v33 >= 1)
  {
    for (uint64_t j = 0; j != v33; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unsigned int v35 = *(_DWORD *)(*(void *)(a1 + 56) + 4 * j);
      unsigned char *v4 = 72;
      v4[1] = v35;
      if (v35 > 0x7F)
      {
        v4[1] = v35 | 0x80;
        unsigned int v36 = v35 >> 7;
        v4[2] = v35 >> 7;
        v4 += 3;
        if (v35 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unsigned int v37 = v36 >> 14;
            v36 >>= 7;
            *v4++ = v36;
          }
          while (v37);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v38 = *(void *)(a1 + 88);
    unsigned char *v4 = 82;
    unsigned int v39 = *(_DWORD *)(v38 + 20);
    v4[1] = v39;
    if (v39 > 0x7F) {
      BOOL v40 = sub_188A9CC(v39, v4 + 1);
    }
    else {
      BOOL v40 = v4 + 2;
    }
    uint64_t v4 = sub_147C540(v38, (unint64_t)v40, a3);
    if ((v6 & 0x10) == 0)
    {
LABEL_69:
      if ((v6 & 0x20) == 0) {
        goto LABEL_89;
      }
      goto LABEL_83;
    }
  }
  else if ((v6 & 0x10) == 0)
  {
    goto LABEL_69;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v41 = *(void *)(a1 + 96);
  unsigned char *v4 = 90;
  unsigned int v42 = *(_DWORD *)(v41 + 20);
  v4[1] = v42;
  if (v42 > 0x7F) {
    int v43 = sub_188A9CC(v42, v4 + 1);
  }
  else {
    int v43 = v4 + 2;
  }
  uint64_t v4 = sub_15BFAE0(v41, (unint64_t)v43, a3);
  if ((v6 & 0x20) != 0)
  {
LABEL_83:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v44 = *(void *)(a1 + 104);
    unsigned char *v4 = 98;
    unsigned int v45 = *(_DWORD *)(v44 + 32);
    v4[1] = v45;
    if (v45 > 0x7F) {
      uint64_t v46 = sub_188A9CC(v45, v4 + 1);
    }
    else {
      uint64_t v46 = v4 + 2;
    }
    uint64_t v4 = sub_147EB74(v44, v46, a3);
  }
LABEL_89:
  uint64_t v47 = *(void *)(a1 + 8);
  if ((v47 & 1) == 0) {
    return v4;
  }
  unint64_t v49 = v47 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v49 + 31) < 0)
  {
    int v50 = *(void **)(v49 + 8);
    uint64_t v51 = *(void *)(v49 + 16);
  }
  else
  {
    int v50 = (void *)(v49 + 8);
    LODWORD(v51) = *(unsigned __int8 *)(v49 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v51)
  {
    uint64_t v52 = (int)v51;
    memcpy(v4, v50, (int)v51);
    v4 += v52;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v50, v51, v4);
}

uint64_t sub_1480248(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_147E490(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = sub_188D4F0((unsigned int *)(a1 + 48)) + v2 + *(unsigned int *)(a1 + 48);
  int v9 = *(_DWORD *)(a1 + 16);
  if (!(_BYTE)v9) {
    goto LABEL_19;
  }
  if (v9)
  {
    uint64_t v12 = sub_147BEE4(*(void *)(a1 + 64));
    v8 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v9 & 2) == 0)
    {
LABEL_12:
      if ((v9 & 4) == 0) {
        goto LABEL_13;
      }
      goto LABEL_25;
    }
  }
  else if ((v9 & 2) == 0)
  {
    goto LABEL_12;
  }
  uint64_t v13 = sub_147B898(*(void *)(a1 + 72));
  v8 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v9 & 4) == 0)
  {
LABEL_13:
    if ((v9 & 8) == 0) {
      goto LABEL_14;
    }
    goto LABEL_26;
  }
LABEL_25:
  uint64_t v14 = sub_147AFC0(*(void *)(a1 + 80));
  v8 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v9 & 8) == 0)
  {
LABEL_14:
    if ((v9 & 0x10) == 0) {
      goto LABEL_15;
    }
    goto LABEL_27;
  }
LABEL_26:
  uint64_t v15 = sub_147C8D4(*(void *)(a1 + 88));
  v8 += v15 + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v9 & 0x10) == 0)
  {
LABEL_15:
    if ((v9 & 0x20) == 0) {
      goto LABEL_16;
    }
LABEL_28:
    uint64_t v17 = sub_147ECC4(*(void *)(a1 + 104));
    v8 += v17 + ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v9 & 0x40) == 0)
    {
LABEL_17:
      if ((v9 & 0x80) == 0) {
        goto LABEL_19;
      }
      goto LABEL_18;
    }
    goto LABEL_29;
  }
LABEL_27:
  uint64_t v16 = sub_15BFD00(*(void *)(a1 + 96));
  v8 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v9 & 0x20) != 0) {
    goto LABEL_28;
  }
LABEL_16:
  if ((v9 & 0x40) == 0) {
    goto LABEL_17;
  }
LABEL_29:
  v8 += ((9 * (__clz(*(void *)(a1 + 112) | 1) ^ 0x3F) + 73) >> 6) + 1;
  if ((v9 & 0x80) != 0) {
LABEL_18:
  }
    v8 += ((9 * (__clz(*(void *)(a1 + 120) | 1) ^ 0x3F) + 73) >> 6) + 1;
LABEL_19:
  if ((v9 & 0x300) != 0)
  {
    if ((v9 & 0x100) != 0)
    {
      int v10 = *(_DWORD *)(a1 + 128);
      if (v10 < 0) {
        uint64_t v11 = 11;
      }
      else {
        uint64_t v11 = ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
      v8 += v11;
    }
    if ((v9 & 0x200) != 0) {
      v8 += ((9 * (__clz(*(_DWORD *)(a1 + 132) | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  uint64_t v18 = *(void *)(a1 + 8);
  if (v18)
  {
    unint64_t v20 = v18 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v20 + 31) < 0) {
      uint64_t v21 = *(void *)(v20 + 16);
    }
    else {
      uint64_t v21 = *(unsigned __int8 *)(v20 + 31);
    }
    v8 += v21;
  }
  *(_DWORD *)(a1 + 20) = v8;
  return v8;
}

std::string *sub_1480504(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = (std::string *)sub_1494A44((uint64_t *)&v3[1], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2]- LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    uint64_t v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 48);
  if (v9)
  {
    uint64_t data_low = SLODWORD(v3[2].__r_.__value_.__l.__data_);
    sub_188C80C((unsigned int *)&v3[2], data_low + v9);
    std::string::size_type size = v3[2].__r_.__value_.__l.__size_;
    LODWORD(v3[2].__r_.__value_.__l.__data_) += *(_DWORD *)(a2 + 48);
    uint64_t result = (std::string *)memcpy((void *)(size + 4 * data_low), *(const void **)(a2 + 56), 4 * *(int *)(a2 + 48));
  }
  int v12 = *(_DWORD *)(a2 + 16);
  if ((_BYTE)v12)
  {
    if (v12)
    {
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      uint64_t v14 = (std::string *)v3[2].__r_.__value_.__r.__words[2];
      if (!v14)
      {
        std::string::size_type v15 = v3->__r_.__value_.__l.__size_;
        uint64_t v16 = (void *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          uint64_t v16 = (void *)*v16;
        }
        sub_1481D2C((uint64_t)v16);
        v3[2].__r_.__value_.__r.__words[2] = (std::string::size_type)v14;
      }
      if (*(void *)(a2 + 64)) {
        uint64_t v17 = *(uint64_t (****)())(a2 + 64);
      }
      else {
        uint64_t v17 = &off_2539D48;
      }
      uint64_t result = sub_147BF78(v14, (uint64_t)v17);
      if ((v12 & 2) == 0)
      {
LABEL_9:
        if ((v12 & 4) == 0) {
          goto LABEL_10;
        }
        goto LABEL_43;
      }
    }
    else if ((v12 & 2) == 0)
    {
      goto LABEL_9;
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    std::string::pointer data = (std::string *)v3[3].__r_.__value_.__l.__data_;
    if (!data)
    {
      std::string::size_type v19 = v3->__r_.__value_.__l.__size_;
      unint64_t v20 = (void *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
      if (v19) {
        unint64_t v20 = (void *)*v20;
      }
      sub_1481CB0((uint64_t)v20);
      v3[3].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
    }
    if (*(void *)(a2 + 72)) {
      uint64_t v21 = *(uint64_t (****)())(a2 + 72);
    }
    else {
      uint64_t v21 = &off_2539D18;
    }
    uint64_t result = sub_1415F98(data, (uint64_t)v21);
    if ((v12 & 4) == 0)
    {
LABEL_10:
      if ((v12 & 8) == 0) {
        goto LABEL_11;
      }
      goto LABEL_51;
    }
LABEL_43:
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
    unint64_t v22 = (std::string *)v3[3].__r_.__value_.__l.__size_;
    if (!v22)
    {
      std::string::size_type v23 = v3->__r_.__value_.__l.__size_;
      uint64_t v24 = (void *)(v23 & 0xFFFFFFFFFFFFFFFCLL);
      if (v23) {
        uint64_t v24 = (void *)*v24;
      }
      sub_1481BF4((uint64_t)v24);
      v3[3].__r_.__value_.__l.__size_ = (std::string::size_type)v22;
    }
    if (*(void *)(a2 + 80)) {
      unsigned int v25 = *(uint64_t (****)())(a2 + 80);
    }
    else {
      unsigned int v25 = &off_2539CB0;
    }
    uint64_t result = sub_147B254(v22, (uint64_t)v25);
    if ((v12 & 8) == 0)
    {
LABEL_11:
      if ((v12 & 0x10) == 0) {
        goto LABEL_12;
      }
      goto LABEL_59;
    }
LABEL_51:
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 8u;
    unsigned int v26 = (std::string *)v3[3].__r_.__value_.__r.__words[2];
    if (!v26)
    {
      std::string::size_type v27 = v3->__r_.__value_.__l.__size_;
      unsigned int v28 = (void *)(v27 & 0xFFFFFFFFFFFFFFFCLL);
      if (v27) {
        unsigned int v28 = (void *)*v28;
      }
      sub_1481DB0((uint64_t)v28);
      v3[3].__r_.__value_.__r.__words[2] = (std::string::size_type)v26;
    }
    if (*(void *)(a2 + 88)) {
      unsigned int v29 = *(uint64_t (****)())(a2 + 88);
    }
    else {
      unsigned int v29 = &off_2539D90;
    }
    uint64_t result = sub_11C6C9C(v26, (uint64_t)v29);
    if ((v12 & 0x10) == 0)
    {
LABEL_12:
      if ((v12 & 0x20) == 0) {
        goto LABEL_13;
      }
      goto LABEL_67;
    }
LABEL_59:
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x10u;
    uint64_t v30 = (std::string *)v3[4].__r_.__value_.__l.__data_;
    if (!v30)
    {
      std::string::size_type v31 = v3->__r_.__value_.__l.__size_;
      uint64_t v32 = (void *)(v31 & 0xFFFFFFFFFFFFFFFCLL);
      if (v31) {
        uint64_t v32 = (void *)*v32;
      }
      uint64_t v30 = (std::string *)sub_15C2510((uint64_t)v32);
      v3[4].__r_.__value_.__r.__words[0] = (std::string::size_type)v30;
    }
    if (*(void *)(a2 + 96)) {
      uint64_t v33 = *(uint64_t (****)())(a2 + 96);
    }
    else {
      uint64_t v33 = &off_253F728;
    }
    uint64_t result = sub_117EF50(v30, (uint64_t)v33);
    if ((v12 & 0x20) == 0)
    {
LABEL_13:
      if ((v12 & 0x40) == 0) {
        goto LABEL_14;
      }
      goto LABEL_75;
    }
LABEL_67:
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x20u;
    unsigned int v34 = (std::string *)v3[4].__r_.__value_.__l.__size_;
    if (!v34)
    {
      std::string::size_type v35 = v3->__r_.__value_.__l.__size_;
      unsigned int v36 = (void *)(v35 & 0xFFFFFFFFFFFFFFFCLL);
      if (v35) {
        unsigned int v36 = (void *)*v36;
      }
      unsigned int v34 = (std::string *)sub_1481FD8((uint64_t)v36);
      v3[4].__r_.__value_.__l.__size_ = (std::string::size_type)v34;
    }
    if (*(void *)(a2 + 104)) {
      unsigned int v37 = *(uint64_t (****)())(a2 + 104);
    }
    else {
      unsigned int v37 = &off_2539EA8;
    }
    uint64_t result = sub_11E43C0(v34, (uint64_t)v37);
    if ((v12 & 0x40) == 0)
    {
LABEL_14:
      if ((v12 & 0x80) == 0)
      {
LABEL_16:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v12;
        goto LABEL_17;
      }
LABEL_15:
      v3[5].__r_.__value_.__r.__words[0] = *(void *)(a2 + 120);
      goto LABEL_16;
    }
LABEL_75:
    v3[4].__r_.__value_.__r.__words[2] = *(void *)(a2 + 112);
    if ((v12 & 0x80) == 0) {
      goto LABEL_16;
    }
    goto LABEL_15;
  }
LABEL_17:
  if ((v12 & 0x300) != 0)
  {
    if ((v12 & 0x100) != 0) {
      LODWORD(v3[5].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 128);
    }
    if ((v12 & 0x200) != 0) {
      HIDWORD(v3[5].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 132);
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= v12;
  }
  uint64_t v13 = *(void *)(a2 + 8);
  if (v13)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v13 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_148085C()
{
  return 1;
}

void *sub_1480864@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PhotoPosition");
}

void *sub_1480874(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_14808E8(void *a1)
{
  sub_1480874(a1);

  operator delete();
}

uint64_t sub_1480920(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 0x3F) != 0)
  {
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_1480950(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v21 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v21, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = v21 + 1;
    unsigned int v9 = *v21;
    if (*v21 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v21, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v21 + 2;
      }
    }
    uint64_t v21 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 9) {
          goto LABEL_24;
        }
        uint64_t v13 = *(void *)v8;
        int v12 = v8 + 8;
        v5 |= 1u;
        *(void *)(a1 + 24) = v13;
        goto LABEL_21;
      case 2u:
        if (v9 != 17) {
          goto LABEL_24;
        }
        uint64_t v14 = *(void *)v8;
        int v12 = v8 + 8;
        v5 |= 2u;
        *(void *)(a1 + 32) = v14;
        goto LABEL_21;
      case 3u:
        if (v9 != 25) {
          goto LABEL_24;
        }
        uint64_t v15 = *(void *)v8;
        int v12 = v8 + 8;
        v5 |= 4u;
        *(void *)(a1 + 40) = v15;
        goto LABEL_21;
      case 4u:
        if (v9 != 33) {
          goto LABEL_24;
        }
        uint64_t v16 = *(void *)v8;
        int v12 = v8 + 8;
        v5 |= 8u;
        *(void *)(a1 + 48) = v16;
        goto LABEL_21;
      case 5u:
        if (v9 != 41) {
          goto LABEL_24;
        }
        uint64_t v17 = *(void *)v8;
        int v12 = v8 + 8;
        v5 |= 0x10u;
        *(void *)(a1 + 56) = v17;
        goto LABEL_21;
      case 6u:
        if (v9 != 49) {
          goto LABEL_24;
        }
        uint64_t v18 = *(void *)v8;
        int v12 = v8 + 8;
        v5 |= 0x20u;
        *(void *)(a1 + 64) = v18;
LABEL_21:
        uint64_t v21 = v12;
        goto LABEL_22;
      default:
LABEL_24:
        if (v9) {
          BOOL v19 = (v9 & 7) == 4;
        }
        else {
          BOOL v19 = 1;
        }
        if (!v19)
        {
          if (*v7)
          {
            unint64_t v20 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            unint64_t v20 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = v21;
          }
          uint64_t v21 = (char *)sub_1885AC0(v9, v20, v8, a3);
          if (!v21) {
            goto LABEL_35;
          }
LABEL_22:
          if (sub_11947B8((uint64_t)a3, &v21, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_35:
        }
          uint64_t v21 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v21;
    }
  }
}

_OWORD *sub_1480B6C(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (_OWORD *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    *(unsigned char *)int v4 = 9;
    *(void *)((char *)v4 + 1) = v7;
    int v4 = (_OWORD *)((char *)v4 + 9);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_14;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v8 = *(void *)(a1 + 32);
  *(unsigned char *)int v4 = 17;
  *(void *)((char *)v4 + 1) = v8;
  int v4 = (_OWORD *)((char *)v4 + 9);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_17;
  }
LABEL_14:
  if (*(void *)a3 <= (unint64_t)v4) {
    int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v9 = *(void *)(a1 + 40);
  *(unsigned char *)int v4 = 25;
  *(void *)((char *)v4 + 1) = v9;
  int v4 = (_OWORD *)((char *)v4 + 9);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_20;
  }
LABEL_17:
  if (*(void *)a3 <= (unint64_t)v4) {
    int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v10 = *(void *)(a1 + 48);
  *(unsigned char *)int v4 = 33;
  *(void *)((char *)v4 + 1) = v10;
  int v4 = (_OWORD *)((char *)v4 + 9);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_26;
    }
    goto LABEL_23;
  }
LABEL_20:
  if (*(void *)a3 <= (unint64_t)v4) {
    int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v11 = *(void *)(a1 + 56);
  *(unsigned char *)int v4 = 41;
  *(void *)((char *)v4 + 1) = v11;
  int v4 = (_OWORD *)((char *)v4 + 9);
  if ((v6 & 0x20) != 0)
  {
LABEL_23:
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v12 = *(void *)(a1 + 64);
    *(unsigned char *)int v4 = 49;
    *(void *)((char *)v4 + 1) = v12;
    int v4 = (_OWORD *)((char *)v4 + 9);
  }
LABEL_26:
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    uint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    uint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    return (_OWORD *)((char *)v4 + v18);
  }

  return (_OWORD *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_1480D80(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 0x3F) != 0)
  {
    uint64_t v2 = 9;
    if ((v1 & 1) == 0) {
      uint64_t v2 = 0;
    }
    if ((v1 & 2) != 0) {
      v2 += 9;
    }
    if ((v1 & 4) != 0) {
      v2 += 9;
    }
    if ((v1 & 8) != 0) {
      v2 += 9;
    }
    if ((v1 & 0x10) != 0) {
      v2 += 9;
    }
    if ((v1 & 0x20) != 0) {
      uint64_t v3 = v2 + 9;
    }
    else {
      uint64_t v3 = v2;
    }
  }
  else
  {
    uint64_t v3 = 0;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v6 + 31) < 0) {
      uint64_t v7 = *(void *)(v6 + 16);
    }
    else {
      uint64_t v7 = *(unsigned __int8 *)(v6 + 31);
    }
    v3 += v7;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

uint64_t sub_1480E14()
{
  return 1;
}

void *sub_1480E1C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.MuninViewState.CameraFrame");
}

uint64_t sub_1480E2C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_11;
    }
  }
  else if (v4)
  {
    goto LABEL_11;
  }
  int v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(uint64_t **)(a1 + 40) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 40));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_11:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1480EF8(uint64_t a1)
{
  sub_1480E2C(a1);

  operator delete();
}

uint64_t sub_1480F30(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 7) == 0) {
    goto LABEL_17;
  }
  if (v1)
  {
    unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)unint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
      if ((v1 & 2) != 0) {
        goto LABEL_10;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
      if ((v1 & 2) != 0) {
        goto LABEL_10;
      }
    }
LABEL_4:
    if ((v1 & 4) == 0) {
      goto LABEL_17;
    }
LABEL_14:
    unint64_t v4 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v4 + 23) < 0)
    {
      **(unsigned char **)unint64_t v4 = 0;
      *(void *)(v4 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v4 = 0;
      *(unsigned char *)(v4 + 23) = 0;
    }
    goto LABEL_17;
  }
  if ((v1 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_10:
  unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v3 + 23) < 0)
  {
    **(unsigned char **)unint64_t v3 = 0;
    *(void *)(v3 + 8) = 0;
    if ((v1 & 4) == 0) {
      goto LABEL_17;
    }
    goto LABEL_14;
  }
  *(unsigned char *)unint64_t v3 = 0;
  *(unsigned char *)(v3 + 23) = 0;
  if ((v1 & 4) != 0) {
    goto LABEL_14;
  }
LABEL_17:
  char v6 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v6) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_1480FE8(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unint64_t v22 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v22, a3[11].i32[1])) {
    return *(void *)v22;
  }
  char v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = (char *)(*(void *)v22 + 1);
    unsigned int v8 = **(unsigned char **)v22;
    if ((char)**(unsigned char **)v22 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180(*(uint64_t *)v22, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (char *)(*(void *)v22 + 2);
      }
    }
    *(void *)unint64_t v22 = v7;
    unsigned int v11 = v8 >> 3;
    if (v8 >> 3 == 3)
    {
      if (v8 == 26)
      {
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v16 = *(void *)(a1 + 8);
        uint64_t v17 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
        if (v16) {
          uint64_t v17 = (uint64_t *)*v17;
        }
        uint64_t v18 = (void *)(a1 + 40);
        goto LABEL_32;
      }
    }
    else if (v11 == 2)
    {
      if (v8 == 18)
      {
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v19 = *(void *)(a1 + 8);
        uint64_t v17 = (uint64_t *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
        if (v19) {
          uint64_t v17 = (uint64_t *)*v17;
        }
        uint64_t v18 = (void *)(a1 + 32);
        goto LABEL_32;
      }
    }
    else if (v11 == 1 && v8 == 10)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v20 = *(void *)(a1 + 8);
      uint64_t v17 = (uint64_t *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
      if (v20) {
        uint64_t v17 = (uint64_t *)*v17;
      }
      uint64_t v18 = (void *)(a1 + 24);
LABEL_32:
      uint64_t v21 = (std::string *)sub_1880F84(v18, v17);
      unint64_t v15 = (void *)sub_188C244(v21, *(char **)v22, (uint64_t)a3);
      goto LABEL_33;
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      uint64_t v14 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = *(char **)v22;
    }
    unint64_t v15 = sub_1885AC0(v8, v14, v7, a3);
LABEL_33:
    *(void *)unint64_t v22 = v15;
    if (!v15) {
      goto LABEL_39;
    }
    if (sub_11947B8((uint64_t)a3, (char **)v22, a3[11].i32[1])) {
      return *(void *)v22;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v22;
  }
LABEL_39:
  *(void *)unint64_t v22 = 0;
  return *(void *)v22;
}

char *sub_14811D8(uint64_t a1, char *__dst, void *a3)
{
  unint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    unint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_4;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  unint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) != 0) {
LABEL_4:
  }
    unint64_t v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL), v4);
LABEL_5:
  uint64_t v7 = *(void *)(a1 + 8);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v9 + 31) < 0)
  {
    unsigned int v10 = *(void **)(v9 + 8);
    uint64_t v11 = *(void *)(v9 + 16);
  }
  else
  {
    unsigned int v10 = (void *)(v9 + 8);
    LODWORD(v11) = *(unsigned __int8 *)(v9 + 31);
  }
  if (*a3 - (void)v4 >= (int)v11)
  {
    uint64_t v12 = (int)v11;
    memcpy(v4, v10, (int)v11);
    v4 += v12;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v10, v11, v4);
}

uint64_t sub_14812F0(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 7) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_16;
  }
  if (v1)
  {
    unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
    uint64_t v5 = *(void *)(v3 + 8);
    if ((v4 & 0x80u) == 0) {
      uint64_t v5 = v4;
    }
    uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  uint64_t v2 = 0;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    unint64_t v6 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v1 & 4) != 0)
  {
    unint64_t v9 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v10 = *(unsigned __int8 *)(v9 + 23);
    uint64_t v11 = *(void *)(v9 + 8);
    if ((v10 & 0x80u) == 0) {
      uint64_t v11 = v10;
    }
    v2 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_16:
  uint64_t v12 = *(void *)(a1 + 8);
  if (v12)
  {
    unint64_t v14 = v12 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v14 + 31) < 0) {
      uint64_t v15 = *(void *)(v14 + 16);
    }
    else {
      uint64_t v15 = *(unsigned __int8 *)(v14 + 31);
    }
    v2 += v15;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_1481410()
{
  return 1;
}

void *sub_1481418@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.MuninViewState.LocationInfo");
}

uint64_t sub_1481428(uint64_t a1)
{
  unint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  if ((uint64_t (***)())a1 != &off_2539FD0)
  {
    uint64_t v5 = *(void **)(a1 + 24);
    if (v5)
    {
      sub_1480874(v5);
      operator delete();
    }
    uint64_t v6 = *(void *)(a1 + 32);
    if (v6)
    {
      sub_1480E2C(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_14814F8(uint64_t a1)
{
  sub_1481428(a1);

  operator delete();
}

uint64_t sub_1481530(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 3) != 0)
  {
    if (v2) {
      uint64_t result = sub_1480920(*(void *)(result + 24));
    }
    if ((v2 & 2) != 0) {
      uint64_t result = sub_1480F30(*(void *)(v1 + 32));
    }
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_14815A0(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v20 = a2;
  if (sub_11947B8((uint64_t)a3, &v20, a3[11].i32[1])) {
    return v20;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v20 + 1;
    unsigned int v8 = *v20;
    if (*v20 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v20, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v20 + 2;
      }
    }
    uint64_t v20 = v7;
    if (v8 >> 3 != 2) {
      break;
    }
    if (v8 != 18) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v15 = *(void **)(a1 + 32);
    if (!v15)
    {
      uint64_t v16 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        uint64_t v16 = (void *)*v16;
      }
      uint64_t v15 = sub_14821A0((uint64_t)v16);
      *(void *)(a1 + 32) = v15;
      uint64_t v7 = v20;
    }
    unint64_t v14 = (char *)sub_14817F0(a3, (uint64_t)v15, (unsigned __int8 *)v7);
LABEL_31:
    uint64_t v20 = v14;
    if (!v14) {
      return 0;
    }
    if (sub_11947B8((uint64_t)a3, &v20, a3[11].i32[1])) {
      return v20;
    }
  }
  if (v8 >> 3 == 1 && v8 == 10)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v17 = *(void *)(a1 + 24);
    if (!v17)
    {
      uint64_t v18 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        uint64_t v18 = (void *)*v18;
      }
      sub_148211C((uint64_t)v18);
      uint64_t v17 = v19;
      *(void *)(a1 + 24) = v19;
      uint64_t v7 = v20;
    }
    unint64_t v14 = sub_1481760(a3, v17, (unsigned __int8 *)v7);
    goto LABEL_31;
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = v20;
    }
    unint64_t v14 = (char *)sub_1885AC0(v8, v13, v7, a3);
    goto LABEL_31;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v20;
  }
  return 0;
}

char *sub_1481760(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1480950(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_14817F0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1480FE8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_1481880(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    unsigned char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    char v4 = sub_1480B6C(v7, (unint64_t)v9, a3);
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 32);
    unsigned char *v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 20);
    v4[1] = v11;
    if (v11 > 0x7F) {
      BOOL v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      BOOL v12 = v4 + 2;
    }
    char v4 = sub_14811D8(v10, v12, a3);
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    uint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    uint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_1481A00(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 3) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_8;
  }
  if (v2)
  {
    uint64_t v4 = sub_1480D80(*(void *)(a1 + 24));
    uint64_t v3 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_7:
    uint64_t v5 = sub_14812F0(*(void *)(a1 + 32));
    v3 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_8:
  uint64_t v6 = *(void *)(a1 + 8);
  if (v6)
  {
    unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v8 + 31) < 0) {
      uint64_t v9 = *(void *)(v8 + 16);
    }
    else {
      uint64_t v9 = *(unsigned __int8 *)(v8 + 31);
    }
    v3 += v9;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_1481AD8(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 3) != 0)
  {
    if (v4)
    {
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::pointer data = (std::string *)result[1].__r_.__value_.__l.__data_;
      if (!data)
      {
        std::string::size_type size = v3->__r_.__value_.__l.__size_;
        uint64_t v7 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
        if (size) {
          uint64_t v7 = (void *)*v7;
        }
        sub_148211C((uint64_t)v7);
        v3[1].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      }
      if (*(void *)(a2 + 24)) {
        unint64_t v8 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        unint64_t v8 = &off_2539F58;
      }
      uint64_t result = sub_147BF78(data, (uint64_t)v8);
    }
    if ((v4 & 2) != 0)
    {
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
      uint64_t v9 = (std::string *)v3[1].__r_.__value_.__l.__size_;
      if (!v9)
      {
        std::string::size_type v10 = v3->__r_.__value_.__l.__size_;
        unsigned int v11 = (void *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
        if (v10) {
          unsigned int v11 = (void *)*v11;
        }
        uint64_t v9 = (std::string *)sub_14821A0((uint64_t)v11);
        v3[1].__r_.__value_.__l.__size_ = (std::string::size_type)v9;
      }
      if (*(void *)(a2 + 32)) {
        BOOL v12 = *(uint64_t (****)())(a2 + 32);
      }
      else {
        BOOL v12 = &off_2539FA0;
      }
      uint64_t result = sub_11D2930(v9, (uint64_t)v12);
    }
  }
  uint64_t v13 = *(void *)(a2 + 8);
  if (v13)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v13 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1481BDC()
{
  return 1;
}

void *sub_1481BE4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.MuninViewState");
}

double sub_1481BF4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t v2 = off_24B6760;
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = 0;
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = 0;
  *(void *)(v2 + 48) = a1;
  *(void *)(v2 + 56) = &qword_2550250;
  double result = 0.0;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 80) = 0u;
  *(_DWORD *)(v2 + 96) = 1;
  return result;
}

double sub_1481CB0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = off_24B67E0;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  return result;
}

double sub_1481D2C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = off_24B6860;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(void *)(v2 + 64) = 0;
  return result;
}

double sub_1481DB0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = off_24B68E0;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  return result;
}

double sub_1481E2C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = off_24B6960;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(void *)(v2 + 48) = 0;
  return result;
}

double sub_1481EAC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = off_24B69E0;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 80) = 0u;
  *(_DWORD *)(v2 + 96) = 0;
  return result;
}

uint64_t sub_1481F34(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24B6A60;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = a1;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = 0;
  *(void *)(result + 56) = 0;
  *(_DWORD *)(result + 64) = 0;
  return result;
}

uint64_t sub_1481FD8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24B6AE0;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_148206C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24B6B60;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = 0;
  *(void *)(result + 56) = a1;
  *(_OWORD *)(result + 64) = 0u;
  *(_OWORD *)(result + 80) = 0u;
  *(_OWORD *)(result + 96) = 0u;
  *(_OWORD *)(result + 112) = 0u;
  *(void *)(result + 128) = 0;
  return result;
}

double sub_148211C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = off_24B6BE0;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(void *)(v2 + 64) = 0;
  return result;
}

void *sub_14821A0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *double result = off_24B6C60;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = &qword_2550250;
  result[5] = &qword_2550250;
  return result;
}

void *sub_1482228(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *double result = off_24B6CE0;
  result[3] = 0;
  result[4] = 0;
  result[2] = 0;
  return result;
}

uint64_t sub_14822A4(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_24B6D60;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  return a1;
}

void sub_1482320(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_1482354(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_14823C8(void *a1)
{
  sub_1482354(a1);

  operator delete();
}

uint64_t sub_1482400(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 16) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_1482418(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v19 = a2;
  if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
    return v19;
  }
  uint64_t v5 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v6 = v19 + 1;
    unsigned int v7 = *v19;
    if (*v19 < 0)
    {
      unsigned int v8 = v7 + (*v6 << 7);
      unsigned int v7 = v8 - 128;
      if (*v6 < 0)
      {
        uint64_t v6 = (char *)sub_188C180((uint64_t)v19, v8 - 128);
        unsigned int v7 = v9;
      }
      else
      {
        uint64_t v6 = v19 + 2;
      }
    }
    uint64_t v19 = v6;
    if (v7 == 8)
    {
      BOOL v12 = v6 + 1;
      unint64_t v13 = *v6;
      if (*v6 < 0)
      {
        int v14 = *v12;
        int v15 = v13 + (v14 << 7);
        unint64_t v13 = (v15 - 128);
        if (v14 < 0)
        {
          uint64_t v19 = (char *)sub_188C138((uint64_t)v6, (v15 - 128));
          if (!v19) {
            return 0;
          }
          unint64_t v13 = v16;
          goto LABEL_20;
        }
        BOOL v12 = v6 + 2;
      }
      uint64_t v19 = v12;
LABEL_20:
      if (v13 > 1)
      {
        if (*v5) {
          uint64_t v17 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          uint64_t v17 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        sub_188C020(1, v13, v17);
      }
      else
      {
        *(_DWORD *)(a1 + 16) |= 1u;
        *(_DWORD *)(a1 + 24) = v13;
      }
      goto LABEL_22;
    }
    if (!v7 || (v7 & 7) == 4) {
      break;
    }
    if (*v5)
    {
      unsigned int v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unsigned int v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v6 = v19;
    }
    uint64_t v19 = (char *)sub_1885AC0(v7, v11, v6, a3);
    if (!v19) {
      return 0;
    }
LABEL_22:
    if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
      return v19;
    }
  }
  if (v6)
  {
    a3[10].i32[0] = v7 - 1;
    return v19;
  }
  return 0;
}

unsigned char *sub_14825C0(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v6 = *(int *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v6;
    if (v6 > 0x7F)
    {
      v4[1] = v6 | 0x80;
      unint64_t v7 = v6 >> 7;
      v4[2] = v6 >> 7;
      v4 += 3;
      if (v6 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v8 = v7 >> 14;
          v7 >>= 7;
          *v4++ = v7;
        }
        while (v8);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    BOOL v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    BOOL v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    v4 += v14;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v12, v13, v4);
}

uint64_t sub_14826E8(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    int v2 = *(_DWORD *)(a1 + 24);
    if (v2 < 0) {
      uint64_t v1 = 11;
    }
    else {
      uint64_t v1 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  else
  {
    uint64_t v1 = 0;
  }
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v5 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    v1 += v6;
  }
  *(_DWORD *)(a1 + 20) = v1;
  return v1;
}

uint64_t sub_148275C()
{
  return 1;
}

void *sub_1482764@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.GuideSummaryLayoutMetadata");
}

uint64_t sub_1482774(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24B6D60;
  *(void *)(result + 16) = 0;
  *(_DWORD *)(result + 24) = 0;
  return result;
}

void sub_14827F0()
{
}

void sub_1482838()
{
}

uint64_t sub_148285C(uint64_t a1, uint64_t a2)
{
  return sub_147818C(a2);
}

uint64_t sub_1482864(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_148286C()
{
}

double sub_14828BC(uint64_t a1, uint64_t a2)
{
  return sub_14781E8(a2);
}

uint64_t sub_14828C4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_14828CC()
{
}

void *sub_1482924(uint64_t a1, uint64_t a2)
{
  return sub_1478264(a2);
}

uint64_t sub_148292C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1482934()
{
}

uint64_t sub_1482998(uint64_t a1, uint64_t a2)
{
  return sub_14782E8(a2);
}

uint64_t sub_14829A0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_14829A8()
{
}

void *sub_1482A10(uint64_t a1, uint64_t a2)
{
  return sub_1478378(a2);
}

uint64_t sub_1482A18(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1482A20()
{
}

uint64_t sub_1482A7C(uint64_t a1, uint64_t a2)
{
  return sub_1478428(a2);
}

uint64_t sub_1482A84(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1482A8C()
{
}

uint64_t sub_1482AEC(uint64_t a1, uint64_t a2)
{
  return sub_14784B0(a2);
}

uint64_t sub_1482AF4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1482AFC()
{
}

uint64_t sub_1482B4C(uint64_t a1, uint64_t a2)
{
  return sub_1478558(a2);
}

uint64_t sub_1482B54(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1482B5C()
{
}

uint64_t sub_1482BB0(uint64_t a1, uint64_t a2)
{
  return sub_14785D4(a2);
}

uint64_t sub_1482BB8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 56);
}

void sub_1482BC0()
{
}

void *sub_1482C20(uint64_t a1, uint64_t a2)
{
  return sub_1478678(a2);
}

uint64_t sub_1482C28(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1482C30()
{
}

uint64_t sub_1482C90(uint64_t a1, uint64_t a2)
{
  return sub_1478704(a2);
}

uint64_t sub_1482C98(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1482CA0()
{
}

uint64_t sub_1482D00(uint64_t a1, uint64_t a2)
{
  return sub_14787AC(a2);
}

uint64_t sub_1482D08(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1482D10()
{
}

void *sub_1482D6C(uint64_t a1, uint64_t a2)
{
  return sub_1478854(a2);
}

uint64_t sub_1482D74(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1482D7C()
{
}

uint64_t sub_1482DCC(uint64_t a1, uint64_t a2)
{
  return sub_14788DC(a2);
}

uint64_t sub_1482DD4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1482DDC()
{
}

uint64_t sub_1482E20(uint64_t a1, uint64_t a2)
{
  return sub_1478958(a2);
}

uint64_t sub_1482E28(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1482E30()
{
}

uint64_t sub_1482E80(uint64_t a1, uint64_t a2)
{
  return sub_14789B8(a2);
}

uint64_t sub_1482E88(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1482E90()
{
}

uint64_t sub_1482EE0(uint64_t a1, uint64_t a2)
{
  return sub_1478A34(a2);
}

uint64_t sub_1482EE8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1482EF0()
{
}

uint64_t sub_1482F40(uint64_t a1, uint64_t a2)
{
  return sub_1478AB0(a2);
}

uint64_t sub_1482F48(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1482F50()
{
}

double sub_1482F94(uint64_t a1, uint64_t a2)
{
  return sub_1478B2C(a2);
}

uint64_t sub_1482F9C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 24);
}

void sub_1482FA4()
{
}

void sub_1482FEC()
{
}

uint64_t sub_1483010(uint64_t a1, uint64_t a2)
{
  return sub_1478B8C(a2);
}

uint64_t sub_1483018(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_1483020()
{
}

void *sub_148306C(uint64_t a1, uint64_t a2)
{
  return sub_1478BE8(a2);
}

uint64_t sub_1483074(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_148307C()
{
}

void sub_14830C4()
{
}

void *sub_14830E8(uint64_t a1, uint64_t a2)
{
  return sub_1478C60(a2);
}

uint64_t sub_14830F0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_14830F8()
{
}

void *sub_1483148(uint64_t a1, uint64_t a2)
{
  return sub_1478CBC(a2);
}

uint64_t sub_1483150(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1483158()
{
}

uint64_t sub_14831B8(uint64_t a1, uint64_t a2)
{
  return sub_1478D54(a2);
}

uint64_t sub_14831C0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_14831C8()
{
}

uint64_t sub_148321C(uint64_t a1, uint64_t a2)
{
  return sub_1478E08(a2);
}

uint64_t sub_1483224(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_148322C()
{
}

uint64_t sub_148328C(uint64_t a1, uint64_t a2)
{
  return sub_1478EAC(a2);
}

uint64_t sub_1483294(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_148329C()
{
}

double sub_14832E0(uint64_t a1, uint64_t a2)
{
  return sub_1478F54(a2);
}

uint64_t sub_14832E8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 28);
}

void sub_14832F0()
{
}

void *sub_1483348(uint64_t a1, uint64_t a2)
{
  return sub_1478FB4(a2);
}

uint64_t sub_1483350(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1483358()
{
}

uint64_t sub_14833B8(uint64_t a1, uint64_t a2)
{
  return sub_1479038(a2);
}

uint64_t sub_14833C0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_14833C8()
{
}

void *sub_1483420(uint64_t a1, uint64_t a2)
{
  return sub_14790E0(a2);
}

uint64_t sub_1483428(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1483430()
{
}

uint64_t sub_1483490(uint64_t a1, uint64_t a2)
{
  return sub_1479164(a2);
}

uint64_t sub_1483498(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_14834A0()
{
}

void *sub_14834FC(uint64_t a1, uint64_t a2)
{
  return sub_14791F0(a2);
}

uint64_t sub_1483504(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_148350C()
{
}

double sub_148358C(uint64_t a1, uint64_t a2)
{
  return sub_1479294(a2);
}

uint64_t sub_1483594(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_148359C()
{
}

double sub_1483614(uint64_t a1, uint64_t a2)
{
  return sub_147937C(a2);
}

uint64_t sub_148361C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1483624()
{
}

void sub_148366C()
{
}

uint64_t sub_1483690(uint64_t a1, uint64_t a2)
{
  return sub_1479450(a2);
}

uint64_t sub_1483698(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_14836A0()
{
}

void sub_14836E8()
{
}

uint64_t sub_148370C(uint64_t a1, uint64_t a2)
{
  return sub_14794AC(a2);
}

uint64_t sub_1483714(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_148371C()
{
}

uint64_t sub_1483770(uint64_t a1, uint64_t a2)
{
  return sub_1479508(a2);
}

uint64_t sub_1483778(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1483780()
{
}

void sub_14837C8()
{
}

void *sub_14837EC(uint64_t a1, uint64_t a2)
{
  return sub_14795A4(a2);
}

uint64_t sub_14837F4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_14837FC()
{
}

void *sub_148384C(uint64_t a1, uint64_t a2)
{
  return sub_1479600(a2);
}

uint64_t sub_1483854(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_148385C()
{
}

void *sub_14838AC(uint64_t a1, uint64_t a2)
{
  return sub_147967C(a2);
}

uint64_t sub_14838B4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_14838BC()
{
}

uint64_t sub_148390C(uint64_t a1, uint64_t a2)
{
  return sub_14796F8(a2);
}

uint64_t sub_1483914(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_148391C()
{
}

double sub_1483978(uint64_t a1, uint64_t a2)
{
  return sub_1479774(a2);
}

uint64_t sub_1483980(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1483988()
{
}

uint64_t sub_14839D8(uint64_t a1, uint64_t a2)
{
  return sub_14797FC(a2);
}

uint64_t sub_14839E0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_14839E8()
{
}

void sub_1483A30()
{
}

void *sub_1483A54(uint64_t a1, uint64_t a2)
{
  return sub_1479878(a2);
}

uint64_t sub_1483A5C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_1483A64()
{
}

void *sub_1483AC0(uint64_t a1, uint64_t a2)
{
  return sub_14798D4(a2);
}

uint64_t sub_1483AC8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1483AD0()
{
}

uint64_t sub_1483B28(uint64_t a1, uint64_t a2)
{
  return sub_1479978(a2);
}

uint64_t sub_1483B30(uint64_t a1)
{
  return *(unsigned int *)(a1 + 64);
}

void sub_1483B38()
{
}

uint64_t sub_1483B94(uint64_t a1, uint64_t a2)
{
  return sub_1479A1C(a2);
}

uint64_t sub_1483B9C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1483BA4()
{
}

double sub_1483C0C(uint64_t a1, uint64_t a2)
{
  return sub_1481BF4(a2);
}

uint64_t sub_1483C14(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1483C1C()
{
}

double sub_1483C6C(uint64_t a1, uint64_t a2)
{
  return sub_1481CB0(a2);
}

uint64_t sub_1483C74(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1483C7C()
{
}

double sub_1483CD4(uint64_t a1, uint64_t a2)
{
  return sub_1481D2C(a2);
}

uint64_t sub_1483CDC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1483CE4()
{
}

double sub_1483D34(uint64_t a1, uint64_t a2)
{
  return sub_1481DB0(a2);
}

uint64_t sub_1483D3C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1483D44()
{
}

double sub_1483D98(uint64_t a1, uint64_t a2)
{
  return sub_1481E2C(a2);
}

uint64_t sub_1483DA0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1483DA8()
{
}

double sub_1483E04(uint64_t a1, uint64_t a2)
{
  return sub_1481EAC(a2);
}

uint64_t sub_1483E0C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1483E14()
{
}

uint64_t sub_1483E6C(uint64_t a1, uint64_t a2)
{
  return sub_1481F34(a2);
}

uint64_t sub_1483E74(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1483E7C()
{
}

uint64_t sub_1483ECC(uint64_t a1, uint64_t a2)
{
  return sub_1481FD8(a2);
}

uint64_t sub_1483ED4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

void sub_1483EDC()
{
}

uint64_t sub_1483F3C(uint64_t a1, uint64_t a2)
{
  return sub_148206C(a2);
}

uint64_t sub_1483F44(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1483F4C()
{
}

double sub_1483FA4(uint64_t a1, uint64_t a2)
{
  return sub_148211C(a2);
}

uint64_t sub_1483FAC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1483FB4()
{
}

void *sub_1484010(uint64_t a1, uint64_t a2)
{
  return sub_14821A0(a2);
}

uint64_t sub_1484018(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1484020()
{
}

void *sub_1484070(uint64_t a1, uint64_t a2)
{
  return sub_1482228(a2);
}

uint64_t sub_1484078(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1484080()
{
}

double sub_14840D4(uint64_t a1, uint64_t a2)
{
  return sub_13D6098(a2);
}

uint64_t sub_14840DC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_14840E4()
{
}

uint64_t sub_1484134(uint64_t a1, uint64_t a2)
{
  return sub_13D6118(a2);
}

uint64_t sub_148413C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1484144()
{
}

uint64_t sub_14841A4(uint64_t a1, uint64_t a2)
{
  return sub_13D6194(a2);
}

uint64_t sub_14841AC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_14841B4()
{
}

uint64_t sub_1484204(uint64_t a1, uint64_t a2)
{
  return sub_13D623C(a2);
}

uint64_t sub_148420C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1484214()
{
}

double sub_148426C(uint64_t a1, uint64_t a2)
{
  return sub_13D62B8(a2);
}

uint64_t sub_1484274(uint64_t a1)
{
  return *(unsigned int *)(a1 + 60);
}

void sub_148427C()
{
}

void *sub_14842D4(uint64_t a1, uint64_t a2)
{
  return sub_13D636C(a2);
}

uint64_t sub_14842DC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_14842E4()
{
}

uint64_t sub_1484340(uint64_t a1, uint64_t a2)
{
  return sub_13D63F0(a2);
}

uint64_t sub_1484348(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1484350()
{
}

void *sub_14843AC(uint64_t a1, uint64_t a2)
{
  return sub_13D6478(a2);
}

uint64_t sub_14843B4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_14843BC()
{
}

void *sub_148441C(uint64_t a1, uint64_t a2)
{
  return sub_13D6500(a2);
}

uint64_t sub_1484424(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_148442C()
{
}

uint64_t sub_148447C(uint64_t a1, uint64_t a2)
{
  return sub_13D65B0(a2);
}

uint64_t sub_1484484(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_148448C()
{
}

uint64_t sub_14844E0(uint64_t a1, uint64_t a2)
{
  return sub_13D662C(a2);
}

uint64_t sub_14844E8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_14844F0()
{
}

uint64_t sub_1484540(uint64_t a1, uint64_t a2)
{
  return sub_13D66AC(a2);
}

uint64_t sub_1484548(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1484550()
{
}

double sub_14845B0(uint64_t a1, uint64_t a2)
{
  return sub_13D6728(a2);
}

uint64_t sub_14845B8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_14845C0()
{
}

uint64_t sub_1484610(uint64_t a1, uint64_t a2)
{
  return sub_13D67B4(a2);
}

uint64_t sub_1484618(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1484620()
{
}

uint64_t sub_1484674(uint64_t a1, uint64_t a2)
{
  return sub_13D6830(a2);
}

uint64_t sub_148467C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_1484684()
{
}

double sub_14846F8(uint64_t a1, uint64_t a2)
{
  return sub_13D68D0(a2);
}

uint64_t sub_1484700(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1484708()
{
}

uint64_t sub_1484764(uint64_t a1, uint64_t a2)
{
  return sub_13D6994(a2);
}

uint64_t sub_148476C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1484774()
{
}

double sub_14847D4(uint64_t a1, uint64_t a2)
{
  return sub_13D6A1C(a2);
}

uint64_t sub_14847DC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_14847E4()
{
}

void *sub_1484838(uint64_t a1, uint64_t a2)
{
  return sub_13D6AE0(a2);
}

uint64_t sub_1484840(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1484848()
{
}

void *sub_1484898(uint64_t a1, uint64_t a2)
{
  return sub_13D6B7C(a2);
}

uint64_t sub_14848A0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_14848A8()
{
}

double sub_1484900(uint64_t a1, uint64_t a2)
{
  return sub_13D6BF8(a2);
}

uint64_t sub_1484908(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1484910()
{
}

uint64_t sub_148496C(uint64_t a1, uint64_t a2)
{
  return sub_13D6C7C(a2);
}

uint64_t sub_1484974(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_148497C()
{
}

double sub_14849D8(uint64_t a1, uint64_t a2)
{
  return sub_13D6D2C(a2);
}

uint64_t sub_14849E0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_14849E8()
{
}

uint64_t sub_1484A40(uint64_t a1, uint64_t a2)
{
  return sub_13D6DB4(a2);
}

uint64_t sub_1484A48(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1484A50()
{
}

void *sub_1484AA8(uint64_t a1, uint64_t a2)
{
  return sub_13D6E58(a2);
}

uint64_t sub_1484AB0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1484AB8()
{
}

uint64_t sub_1484B0C(uint64_t a1, uint64_t a2)
{
  return sub_13D6EDC(a2);
}

uint64_t sub_1484B14(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1484B1C()
{
}

void sub_1484B64()
{
}

uint64_t sub_1484B88(uint64_t a1, uint64_t a2)
{
  return sub_13D6F5C(a2);
}

uint64_t sub_1484B90(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_1484B98()
{
}

void sub_1484BE0()
{
}

uint64_t sub_1484C04(uint64_t a1, uint64_t a2)
{
  return sub_13D6FB8(a2);
}

uint64_t sub_1484C0C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 160);
}

void sub_1484C14()
{
}

void sub_1484C5C()
{
}

uint64_t sub_1484C80(uint64_t a1, uint64_t a2)
{
  return sub_13D7014(a2);
}

uint64_t sub_1484C88(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_1484C90()
{
}

uint64_t sub_1484CE0(uint64_t a1, uint64_t a2)
{
  return sub_13D7070(a2);
}

uint64_t sub_1484CE8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

void sub_1484CF0()
{
}

double sub_1484D54(uint64_t a1, uint64_t a2)
{
  return sub_13D7104(a2);
}

uint64_t sub_1484D5C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1484D64()
{
}

void *sub_1484DB4(uint64_t a1, uint64_t a2)
{
  return sub_13D7194(a2);
}

uint64_t sub_1484DBC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1484DC4()
{
}

uint64_t sub_1484E18(uint64_t a1, uint64_t a2)
{
  return sub_13D7210(a2);
}

uint64_t sub_1484E20(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1484E28()
{
}

uint64_t sub_1484E84(uint64_t a1, uint64_t a2)
{
  return sub_13D72B4(a2);
}

uint64_t sub_1484E8C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1484E94()
{
}

uint64_t sub_1484EE4(uint64_t a1, uint64_t a2)
{
  return sub_13D7364(a2);
}

uint64_t sub_1484EEC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1484EF4()
{
}

uint64_t sub_1484F54(uint64_t a1, uint64_t a2)
{
  return sub_13D73E0(a2);
}

uint64_t sub_1484F5C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1484F64()
{
}

uint64_t sub_1484FB8(uint64_t a1, uint64_t a2)
{
  return sub_13D74A0(a2);
}

uint64_t sub_1484FC0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1484FC8()
{
}

void *sub_1485014(uint64_t a1, uint64_t a2)
{
  return sub_13D753C(a2);
}

uint64_t sub_148501C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1485024()
{
}

uint64_t sub_148507C(uint64_t a1, uint64_t a2)
{
  return sub_13D75B4(a2);
}

uint64_t sub_1485084(uint64_t a1)
{
  return *(unsigned int *)(a1 + 88);
}

void sub_148508C()
{
}

void *sub_14850D8(uint64_t a1, uint64_t a2)
{
  return sub_13D7664(a2);
}

uint64_t sub_14850E0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_14850E8()
{
}

uint64_t sub_1485148(uint64_t a1, uint64_t a2)
{
  return sub_13D76DC(a2);
}

uint64_t sub_1485150(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1485158()
{
}

uint64_t sub_14851AC(uint64_t a1, uint64_t a2)
{
  return sub_13D7784(a2);
}

uint64_t sub_14851B4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_14851BC()
{
}

void *sub_1485208(uint64_t a1, uint64_t a2)
{
  return sub_13D7824(a2);
}

uint64_t sub_1485210(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1485218()
{
}

void *sub_148526C(uint64_t a1, uint64_t a2)
{
  return sub_13D789C(a2);
}

uint64_t sub_1485274(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_148527C()
{
}

uint64_t sub_14852CC(uint64_t a1, uint64_t a2)
{
  return sub_13D7938(a2);
}

uint64_t sub_14852D4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_14852DC()
{
}

void *sub_1485328(uint64_t a1, uint64_t a2)
{
  return sub_13D79B4(a2);
}

uint64_t sub_1485330(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1485338()
{
}

void *sub_1485384(uint64_t a1, uint64_t a2)
{
  return sub_13D7A2C(a2);
}

uint64_t sub_148538C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1485394()
{
}

void *sub_14853E4(uint64_t a1, uint64_t a2)
{
  return sub_13D7AA4(a2);
}

uint64_t sub_14853EC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_14853F4()
{
}

double sub_148544C(uint64_t a1, uint64_t a2)
{
  return sub_13D7B20(a2);
}

uint64_t sub_1485454(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_148545C()
{
}

uint64_t sub_14854AC(uint64_t a1, uint64_t a2)
{
  return sub_13D7BD4(a2);
}

uint64_t sub_14854B4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_14854BC()
{
}

void *sub_148550C(uint64_t a1, uint64_t a2)
{
  return sub_13D7C50(a2);
}

uint64_t sub_1485514(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_148551C()
{
}

uint64_t sub_1485570(uint64_t a1, uint64_t a2)
{
  return sub_13D7CCC(a2);
}

uint64_t sub_1485578(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1485580()
{
}

void *sub_14855DC(uint64_t a1, uint64_t a2)
{
  return sub_13D7D4C(a2);
}

uint64_t sub_14855E4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_14855EC()
{
}

void sub_1485634()
{
}

uint64_t sub_1485658(uint64_t a1, uint64_t a2)
{
  return sub_13D7DD4(a2);
}

uint64_t sub_1485660(uint64_t a1)
{
  return *(unsigned int *)(a1 + 48);
}

void sub_1485668()
{
}

void *sub_14856B4(uint64_t a1, uint64_t a2)
{
  return sub_13D7E30(a2);
}

uint64_t sub_14856BC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_14856C4()
{
}

uint64_t sub_1485718(uint64_t a1, uint64_t a2)
{
  return sub_13D7EA8(a2);
}

uint64_t sub_1485720(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_1485728()
{
}

void *sub_1485774(uint64_t a1, uint64_t a2)
{
  return sub_13D7F48(a2);
}

uint64_t sub_148577C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1485784()
{
}

uint64_t sub_14857D8(uint64_t a1, uint64_t a2)
{
  return sub_13D7FC0(a2);
}

uint64_t sub_14857E0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_14857E8()
{
}

void sub_1485830()
{
}

uint64_t sub_1485854(uint64_t a1, uint64_t a2)
{
  return sub_13D8060(a2);
}

uint64_t sub_148585C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_1485864()
{
}

uint64_t sub_14858C0(uint64_t a1, uint64_t a2)
{
  return sub_13D80BC(a2);
}

uint64_t sub_14858C8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_14858D0()
{
}

void *sub_148591C(uint64_t a1, uint64_t a2)
{
  return sub_13D8160(a2);
}

uint64_t sub_1485924(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_148592C()
{
}

void *sub_1485978(uint64_t a1, uint64_t a2)
{
  return sub_13D81D8(a2);
}

uint64_t sub_1485980(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1485988()
{
}

uint64_t sub_14859E0(uint64_t a1, uint64_t a2)
{
  return sub_13D8250(a2);
}

uint64_t sub_14859E8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 64);
}

void sub_14859F0()
{
}

uint64_t sub_1485A44(uint64_t a1, uint64_t a2)
{
  return sub_13D82F4(a2);
}

uint64_t sub_1485A4C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1485A54()
{
}

uint64_t sub_1485AA8(uint64_t a1, uint64_t a2)
{
  return sub_13D8374(a2);
}

uint64_t sub_1485AB0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_1485AB8()
{
}

double sub_1485B20(uint64_t a1, uint64_t a2)
{
  return sub_13D8414(a2);
}

uint64_t sub_1485B28(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1485B30()
{
}

uint64_t sub_1485B84(uint64_t a1, uint64_t a2)
{
  return sub_13D84A8(a2);
}

uint64_t sub_1485B8C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1485B94()
{
}

uint64_t sub_1485BE4(uint64_t a1, uint64_t a2)
{
  return sub_13D8528(a2);
}

uint64_t sub_1485BEC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1485BF4()
{
}

double sub_1485C4C(uint64_t a1, uint64_t a2)
{
  return sub_13D85A4(a2);
}

uint64_t sub_1485C54(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1485C5C()
{
}

double sub_1485CB0(uint64_t a1, uint64_t a2)
{
  return sub_13D8628(a2);
}

uint64_t sub_1485CB8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1485CC0()
{
}

double sub_1485D10(uint64_t a1, uint64_t a2)
{
  return sub_13D86A8(a2);
}

uint64_t sub_1485D18(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1485D20()
{
}

uint64_t sub_1485D70(uint64_t a1, uint64_t a2)
{
  return sub_13D8724(a2);
}

uint64_t sub_1485D78(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1485D80()
{
}

double sub_1485DD8(uint64_t a1, uint64_t a2)
{
  return sub_13D87A0(a2);
}

uint64_t sub_1485DE0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1485DE8()
{
}

uint64_t sub_1485E3C(uint64_t a1, uint64_t a2)
{
  return sub_13D8824(a2);
}

uint64_t sub_1485E44(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1485E4C()
{
}

uint64_t sub_1485EA8(uint64_t a1, uint64_t a2)
{
  return sub_13D88C0(a2);
}

uint64_t sub_1485EB0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1485EB8()
{
}

uint64_t sub_1485F14(uint64_t a1, uint64_t a2)
{
  return sub_13D8978(a2);
}

uint64_t sub_1485F1C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1485F24()
{
}

void sub_1485F6C()
{
}

uint64_t sub_1485F90(uint64_t a1, uint64_t a2)
{
  return sub_13D8A28(a2);
}

uint64_t sub_1485F98(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_1485FA0()
{
}

void *sub_1485FEC(uint64_t a1, uint64_t a2)
{
  return sub_13D8A84(a2);
}

uint64_t sub_1485FF4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1485FFC()
{
}

double sub_1486054(uint64_t a1, uint64_t a2)
{
  return sub_13D8AFC(a2);
}

uint64_t sub_148605C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1486064()
{
}

void *sub_14860B0(uint64_t a1, uint64_t a2)
{
  return sub_13D8B80(a2);
}

uint64_t sub_14860B8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_14860C0()
{
}

uint64_t sub_1486110(uint64_t a1, uint64_t a2)
{
  return sub_13D8BF8(a2);
}

uint64_t sub_1486118(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1486120()
{
}

void sub_1486168()
{
}

uint64_t sub_148618C(uint64_t a1, uint64_t a2)
{
  return sub_13D8C74(a2);
}

uint64_t sub_1486194(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_148619C()
{
}

uint64_t sub_14861F8(uint64_t a1, uint64_t a2)
{
  return sub_13D8CD0(a2);
}

uint64_t sub_1486200(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1486208()
{
}

void *sub_1486258(uint64_t a1, uint64_t a2)
{
  return sub_13D8D74(a2);
}

uint64_t sub_1486260(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1486268()
{
}

void *sub_14862B4(uint64_t a1, uint64_t a2)
{
  return sub_13D8E0C(a2);
}

uint64_t sub_14862BC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_14862C4()
{
}

void sub_148630C()
{
}

uint64_t sub_1486330(uint64_t a1, uint64_t a2)
{
  return sub_13D8E84(a2);
}

uint64_t sub_1486338(uint64_t a1)
{
  return *(unsigned int *)(a1 + 48);
}

void sub_1486340()
{
}

uint64_t sub_1486394(uint64_t a1, uint64_t a2)
{
  return sub_13D8EE0(a2);
}

uint64_t sub_148639C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_14863A4()
{
}

uint64_t sub_148642C(uint64_t a1, uint64_t a2)
{
  return sub_13D8F60(a2);
}

uint64_t sub_1486434(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_148643C()
{
}

uint64_t sub_1486494(uint64_t a1, uint64_t a2)
{
  return sub_13D9048(a2);
}

uint64_t sub_148649C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_14864A4()
{
}