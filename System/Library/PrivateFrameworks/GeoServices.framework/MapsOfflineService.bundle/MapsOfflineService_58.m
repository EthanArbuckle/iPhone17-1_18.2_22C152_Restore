uint64_t sub_17DF5D0(uint64_t a1)
{
  int v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;

  v2 = *(_DWORD *)(a1 + 16);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_19;
  }
  if ((v2 & 1) == 0)
  {
    v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  v5 = *(unsigned __int8 *)(v4 + 23);
  v6 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    v6 = v5;
  }
  v3 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 2) != 0)
  {
LABEL_9:
    v7 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    v8 = *(unsigned __int8 *)(v7 + 23);
    v9 = *(void *)(v7 + 8);
    if ((v8 & 0x80u) == 0) {
      v9 = v8;
    }
    v3 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v2 & 4) != 0)
  {
    v22 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    v23 = *(unsigned __int8 *)(v22 + 23);
    v24 = *(void *)(v22 + 8);
    if ((v23 & 0x80u) == 0) {
      v24 = v23;
    }
    v3 += v24 + ((9 * (__clz(v24 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 8) == 0)
    {
LABEL_14:
      if ((v2 & 0x10) == 0) {
        goto LABEL_15;
      }
      goto LABEL_58;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_14;
  }
  v25 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
  v26 = *(unsigned __int8 *)(v25 + 23);
  v27 = *(void *)(v25 + 8);
  if ((v26 & 0x80u) == 0) {
    v27 = v26;
  }
  v3 += v27 + ((9 * (__clz(v27 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x10) == 0)
  {
LABEL_15:
    if ((v2 & 0x20) == 0) {
      goto LABEL_16;
    }
    goto LABEL_61;
  }
LABEL_58:
  v28 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
  v29 = *(unsigned __int8 *)(v28 + 23);
  v30 = *(void *)(v28 + 8);
  if ((v29 & 0x80u) == 0) {
    v30 = v29;
  }
  v3 += v30 + ((9 * (__clz(v30 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x20) == 0)
  {
LABEL_16:
    if ((v2 & 0x40) == 0) {
      goto LABEL_17;
    }
    goto LABEL_64;
  }
LABEL_61:
  v31 = *(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL;
  v32 = *(unsigned __int8 *)(v31 + 23);
  v33 = *(void *)(v31 + 8);
  if ((v32 & 0x80u) == 0) {
    v33 = v32;
  }
  v3 += v33 + ((9 * (__clz(v33 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x40) == 0)
  {
LABEL_17:
    if ((v2 & 0x80) == 0) {
      goto LABEL_19;
    }
    goto LABEL_18;
  }
LABEL_64:
  v34 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
  v35 = *(unsigned __int8 *)(v34 + 23);
  v36 = *(void *)(v34 + 8);
  if ((v35 & 0x80u) == 0) {
    v36 = v35;
  }
  v3 += v36 + ((9 * (__clz(v36 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v2 & 0x80) != 0)
  {
LABEL_18:
    v10 = sub_15B4924(*(void *)(a1 + 80));
    v3 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_19:
  if ((v2 & 0xFF00) == 0) {
    goto LABEL_37;
  }
  if ((v2 & 0x100) != 0)
  {
    v37 = sub_17E076C(*(void *)(a1 + 88));
    v3 += v37 + ((9 * (__clz(v37 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 0x200) == 0)
    {
LABEL_22:
      if ((v2 & 0x400) == 0) {
        goto LABEL_23;
      }
LABEL_70:
      v39 = sub_17E1F44(*(void *)(a1 + 104));
      v3 += v39 + ((9 * (__clz(v39 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v2 & 0x800) == 0) {
        goto LABEL_25;
      }
      goto LABEL_24;
    }
  }
  else if ((v2 & 0x200) == 0)
  {
    goto LABEL_22;
  }
  v38 = sub_17E0C7C(*(void *)(a1 + 96));
  v3 += v38 + ((9 * (__clz(v38 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x400) != 0) {
    goto LABEL_70;
  }
LABEL_23:
  if ((v2 & 0x800) != 0)
  {
LABEL_24:
    v11 = sub_17E10F0(*(void *)(a1 + 112));
    v3 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
LABEL_25:
  v12 = v3 + 9;
  if ((v2 & 0x1000) == 0) {
    v12 = v3;
  }
  if ((v2 & 0x2000) != 0) {
    v3 = v12 + 9;
  }
  else {
    v3 = v12;
  }
  if ((v2 & 0x4000) != 0) {
    v3 += ((9 * (__clz((2 * *(void *)(a1 + 136)) ^ (*(uint64_t *)(a1 + 136) >> 63) | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
  if ((v2 & 0x8000) != 0)
  {
    v13 = *(_DWORD *)(a1 + 144);
    v14 = ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if (v13 >= 0) {
      v15 = v14;
    }
    else {
      v15 = 11;
    }
    v3 += v15;
  }
LABEL_37:
  if ((v2 & 0xF0000) != 0)
  {
    v16 = v3 + 2;
    if ((v2 & 0x10000) == 0) {
      v16 = v3;
    }
    if ((v2 & 0x20000) != 0) {
      v16 += 3;
    }
    if ((v2 & 0x40000) != 0) {
      v3 = v16 + 3;
    }
    else {
      v3 = v16;
    }
    if ((v2 & 0x80000) != 0)
    {
      v17 = *(_DWORD *)(a1 + 152);
      v18 = ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 2;
      if (v17 >= 0) {
        v19 = v18;
      }
      else {
        v19 = 12;
      }
      v3 += v19;
    }
  }
  v20 = *(void *)(a1 + 8);
  if (v20)
  {
    v40 = v20 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v40 + 31) < 0) {
      v41 = *(void *)(v40 + 16);
    }
    else {
      v41 = *(unsigned __int8 *)(v40 + 31);
    }
    v3 += v41;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

void sub_17DFA1C(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if (!(_BYTE)v4) {
    goto LABEL_40;
  }
  if (v4)
  {
    v5 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 1u;
    v6 = (std::string **)(a1 + 24);
    uint64_t v7 = *(void *)(a1 + 8);
    v8 = (uint64_t *)(v7 & 0xFFFFFFFFFFFFFFFCLL);
    if (v7) {
      v8 = (uint64_t *)*v8;
    }
    sub_1881DF4(v6, v5, v8);
    if ((v4 & 2) == 0)
    {
LABEL_4:
      if ((v4 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_17;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_4;
  }
  v9 = (long long *)(*(void *)(a2 + 32) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 16) |= 2u;
  uint64_t v10 = *(void *)(a1 + 8);
  v11 = (uint64_t *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
  if (v10) {
    v11 = (uint64_t *)*v11;
  }
  sub_1881DF4((std::string **)(a1 + 32), v9, v11);
  if ((v4 & 4) == 0)
  {
LABEL_5:
    if ((v4 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_20;
  }
LABEL_17:
  v12 = (long long *)(*(void *)(a2 + 40) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 16) |= 4u;
  uint64_t v13 = *(void *)(a1 + 8);
  v14 = (uint64_t *)(v13 & 0xFFFFFFFFFFFFFFFCLL);
  if (v13) {
    v14 = (uint64_t *)*v14;
  }
  sub_1881DF4((std::string **)(a1 + 40), v12, v14);
  if ((v4 & 8) == 0)
  {
LABEL_6:
    if ((v4 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_23;
  }
LABEL_20:
  v15 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 16) |= 8u;
  uint64_t v16 = *(void *)(a1 + 8);
  v17 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
  if (v16) {
    v17 = (uint64_t *)*v17;
  }
  sub_1881DF4((std::string **)(a1 + 48), v15, v17);
  if ((v4 & 0x10) == 0)
  {
LABEL_7:
    if ((v4 & 0x20) == 0) {
      goto LABEL_8;
    }
    goto LABEL_26;
  }
LABEL_23:
  v18 = (long long *)(*(void *)(a2 + 56) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 16) |= 0x10u;
  uint64_t v19 = *(void *)(a1 + 8);
  v20 = (uint64_t *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
  if (v19) {
    v20 = (uint64_t *)*v20;
  }
  sub_1881DF4((std::string **)(a1 + 56), v18, v20);
  if ((v4 & 0x20) == 0)
  {
LABEL_8:
    if ((v4 & 0x40) == 0) {
      goto LABEL_9;
    }
    goto LABEL_29;
  }
LABEL_26:
  v21 = (long long *)(*(void *)(a2 + 64) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 16) |= 0x20u;
  uint64_t v22 = *(void *)(a1 + 8);
  v23 = (uint64_t *)(v22 & 0xFFFFFFFFFFFFFFFCLL);
  if (v22) {
    v23 = (uint64_t *)*v23;
  }
  sub_1881DF4((std::string **)(a1 + 64), v21, v23);
  if ((v4 & 0x40) == 0)
  {
LABEL_9:
    if ((v4 & 0x80) == 0) {
      goto LABEL_40;
    }
    goto LABEL_32;
  }
LABEL_29:
  v24 = (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 16) |= 0x40u;
  uint64_t v25 = *(void *)(a1 + 8);
  v26 = (uint64_t *)(v25 & 0xFFFFFFFFFFFFFFFCLL);
  if (v25) {
    v26 = (uint64_t *)*v26;
  }
  sub_1881DF4((std::string **)(a1 + 72), v24, v26);
  if ((v4 & 0x80) != 0)
  {
LABEL_32:
    *(_DWORD *)(a1 + 16) |= 0x80u;
    uint64_t v27 = *(void *)(a1 + 80);
    if (!v27)
    {
      uint64_t v28 = *(void *)(a1 + 8);
      v29 = (void *)(v28 & 0xFFFFFFFFFFFFFFFCLL);
      if (v28) {
        v29 = (void *)*v29;
      }
      uint64_t v27 = sub_15C1CB4((uint64_t)v29);
      *(void *)(a1 + 80) = v27;
    }
    if (*(void *)(a2 + 80)) {
      v30 = *(uint64_t (****)())(a2 + 80);
    }
    else {
      v30 = &off_253F2E8;
    }
    sub_15B04F0(v27, (uint64_t)v30);
  }
LABEL_40:
  if ((v4 & 0xFF00) == 0) {
    goto LABEL_51;
  }
  if ((v4 & 0x100) != 0)
  {
    *(_DWORD *)(a1 + 16) |= 0x100u;
    v32 = *(std::string **)(a1 + 88);
    if (!v32)
    {
      uint64_t v33 = *(void *)(a1 + 8);
      v34 = (void *)(v33 & 0xFFFFFFFFFFFFFFFCLL);
      if (v33) {
        v34 = (void *)*v34;
      }
      v32 = (std::string *)sub_1833A34((uint64_t)v34);
      *(void *)(a1 + 88) = v32;
    }
    if (*(void *)(a2 + 88)) {
      v35 = *(uint64_t (****)())(a2 + 88);
    }
    else {
      v35 = &off_254B368;
    }
    sub_11D2930(v32, (uint64_t)v35);
    if ((v4 & 0x200) == 0)
    {
LABEL_43:
      if ((v4 & 0x400) == 0) {
        goto LABEL_44;
      }
      goto LABEL_78;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_43;
  }
  *(_DWORD *)(a1 + 16) |= 0x200u;
  v36 = *(std::string **)(a1 + 96);
  if (!v36)
  {
    uint64_t v37 = *(void *)(a1 + 8);
    v38 = (void *)(v37 & 0xFFFFFFFFFFFFFFFCLL);
    if (v37) {
      v38 = (void *)*v38;
    }
    v36 = (std::string *)sub_1833ABC((uint64_t)v38);
    *(void *)(a1 + 96) = v36;
  }
  if (*(void *)(a2 + 96)) {
    v39 = *(uint64_t (****)())(a2 + 96);
  }
  else {
    v39 = &off_254B398;
  }
  sub_12329D0(v36, (uint64_t)v39);
  if ((v4 & 0x400) == 0)
  {
LABEL_44:
    if ((v4 & 0x800) == 0) {
      goto LABEL_45;
    }
    goto LABEL_86;
  }
LABEL_78:
  *(_DWORD *)(a1 + 16) |= 0x400u;
  v40 = *(std::string **)(a1 + 104);
  if (!v40)
  {
    uint64_t v41 = *(void *)(a1 + 8);
    v42 = (void *)(v41 & 0xFFFFFFFFFFFFFFFCLL);
    if (v41) {
      v42 = (void *)*v42;
    }
    v40 = (std::string *)sub_1833BC4((uint64_t)v42);
    *(void *)(a1 + 104) = v40;
  }
  if (*(void *)(a2 + 104)) {
    v43 = *(uint64_t (****)())(a2 + 104);
  }
  else {
    v43 = &off_254B3D8;
  }
  sub_17DFE48(v40, (uint64_t)v43);
  if ((v4 & 0x800) == 0)
  {
LABEL_45:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_46;
    }
    goto LABEL_94;
  }
LABEL_86:
  *(_DWORD *)(a1 + 16) |= 0x800u;
  v44 = *(std::string **)(a1 + 112);
  if (!v44)
  {
    uint64_t v45 = *(void *)(a1 + 8);
    v46 = (void *)(v45 & 0xFFFFFFFFFFFFFFFCLL);
    if (v45) {
      v46 = (void *)*v46;
    }
    v44 = (std::string *)sub_1833B40((uint64_t)v46);
    *(void *)(a1 + 112) = v44;
  }
  if (*(void *)(a2 + 112)) {
    v47 = *(uint64_t (****)())(a2 + 112);
  }
  else {
    v47 = &off_254B3B8;
  }
  sub_12329D0(v44, (uint64_t)v47);
  if ((v4 & 0x1000) == 0)
  {
LABEL_46:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_47;
    }
    goto LABEL_95;
  }
LABEL_94:
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  if ((v4 & 0x2000) == 0)
  {
LABEL_47:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_48;
    }
LABEL_96:
    *(void *)(a1 + 136) = *(void *)(a2 + 136);
    if ((v4 & 0x8000) == 0) {
      goto LABEL_50;
    }
    goto LABEL_49;
  }
LABEL_95:
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  if ((v4 & 0x4000) != 0) {
    goto LABEL_96;
  }
LABEL_48:
  if ((v4 & 0x8000) != 0) {
LABEL_49:
  }
    *(_DWORD *)(a1 + 144) = *(_DWORD *)(a2 + 144);
LABEL_50:
  *(_DWORD *)(a1 + 16) |= v4;
LABEL_51:
  if ((v4 & 0xF0000) == 0) {
    goto LABEL_58;
  }
  if ((v4 & 0x10000) != 0)
  {
    *(unsigned char *)(a1 + 148) = *(unsigned char *)(a2 + 148);
    if ((v4 & 0x20000) == 0)
    {
LABEL_54:
      if ((v4 & 0x40000) == 0) {
        goto LABEL_55;
      }
LABEL_100:
      *(unsigned char *)(a1 + 150) = *(unsigned char *)(a2 + 150);
      if ((v4 & 0x80000) == 0) {
        goto LABEL_57;
      }
      goto LABEL_56;
    }
  }
  else if ((v4 & 0x20000) == 0)
  {
    goto LABEL_54;
  }
  *(unsigned char *)(a1 + 149) = *(unsigned char *)(a2 + 149);
  if ((v4 & 0x40000) != 0) {
    goto LABEL_100;
  }
LABEL_55:
  if ((v4 & 0x80000) != 0) {
LABEL_56:
  }
    *(_DWORD *)(a1 + 152) = *(_DWORD *)(a2 + 152);
LABEL_57:
  *(_DWORD *)(a1 + 16) |= v4;
LABEL_58:
  uint64_t v31 = *(void *)(a2 + 8);
  if (v31)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v31 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

std::string *sub_17DFE48(std::string *result, uint64_t a2)
{
  v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if (!(_BYTE)v4) {
    goto LABEL_35;
  }
  if (v4)
  {
    v5 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
    v6 = (std::string **)&result[1];
    std::string::size_type size = v3->__r_.__value_.__l.__size_;
    v8 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
    if (size) {
      v8 = (uint64_t *)*v8;
    }
    result = sub_1881DF4(v6, v5, v8);
    if ((v4 & 2) == 0)
    {
LABEL_4:
      if ((v4 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_17;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_4;
  }
  v9 = (long long *)(*(void *)(a2 + 32) & 0xFFFFFFFFFFFFFFFELL);
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
  std::string::size_type v10 = v3->__r_.__value_.__l.__size_;
  v11 = (uint64_t *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
  if (v10) {
    v11 = (uint64_t *)*v11;
  }
  result = sub_1881DF4((std::string **)&v3[1].__r_.__value_.__l.__size_, v9, v11);
  if ((v4 & 4) == 0)
  {
LABEL_5:
    if ((v4 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_20;
  }
LABEL_17:
  v12 = (long long *)(*(void *)(a2 + 40) & 0xFFFFFFFFFFFFFFFELL);
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
  std::string::size_type v13 = v3->__r_.__value_.__l.__size_;
  v14 = (uint64_t *)(v13 & 0xFFFFFFFFFFFFFFFCLL);
  if (v13) {
    v14 = (uint64_t *)*v14;
  }
  result = sub_1881DF4((std::string **)&v3[1].__r_.__value_.__r.__words[2], v12, v14);
  if ((v4 & 8) == 0)
  {
LABEL_6:
    if ((v4 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_23;
  }
LABEL_20:
  v15 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= 8u;
  std::string::size_type v16 = v3->__r_.__value_.__l.__size_;
  v17 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
  if (v16) {
    v17 = (uint64_t *)*v17;
  }
  result = sub_1881DF4((std::string **)&v3[2], v15, v17);
  if ((v4 & 0x10) == 0)
  {
LABEL_7:
    if ((v4 & 0x20) == 0) {
      goto LABEL_8;
    }
    goto LABEL_26;
  }
LABEL_23:
  v18 = (long long *)(*(void *)(a2 + 56) & 0xFFFFFFFFFFFFFFFELL);
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x10u;
  std::string::size_type v19 = v3->__r_.__value_.__l.__size_;
  v20 = (uint64_t *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
  if (v19) {
    v20 = (uint64_t *)*v20;
  }
  result = sub_1881DF4((std::string **)&v3[2].__r_.__value_.__l.__size_, v18, v20);
  if ((v4 & 0x20) == 0)
  {
LABEL_8:
    if ((v4 & 0x40) == 0) {
      goto LABEL_9;
    }
    goto LABEL_29;
  }
LABEL_26:
  v21 = (long long *)(*(void *)(a2 + 64) & 0xFFFFFFFFFFFFFFFELL);
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x20u;
  std::string::size_type v22 = v3->__r_.__value_.__l.__size_;
  v23 = (uint64_t *)(v22 & 0xFFFFFFFFFFFFFFFCLL);
  if (v22) {
    v23 = (uint64_t *)*v23;
  }
  result = sub_1881DF4((std::string **)&v3[2].__r_.__value_.__r.__words[2], v21, v23);
  if ((v4 & 0x40) == 0)
  {
LABEL_9:
    if ((v4 & 0x80) == 0) {
      goto LABEL_35;
    }
    goto LABEL_32;
  }
LABEL_29:
  v24 = (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL);
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x40u;
  std::string::size_type v25 = v3->__r_.__value_.__l.__size_;
  v26 = (uint64_t *)(v25 & 0xFFFFFFFFFFFFFFFCLL);
  if (v25) {
    v26 = (uint64_t *)*v26;
  }
  result = sub_1881DF4((std::string **)&v3[3], v24, v26);
  if ((v4 & 0x80) != 0)
  {
LABEL_32:
    uint64_t v27 = (long long *)(*(void *)(a2 + 80) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x80u;
    std::string::size_type v28 = v3->__r_.__value_.__l.__size_;
    v29 = (uint64_t *)(v28 & 0xFFFFFFFFFFFFFFFCLL);
    if (v28) {
      v29 = (uint64_t *)*v29;
    }
    result = sub_1881DF4((std::string **)&v3[3].__r_.__value_.__l.__size_, v27, v29);
  }
LABEL_35:
  if ((v4 & 0x7F00) == 0) {
    goto LABEL_45;
  }
  if ((v4 & 0x100) != 0)
  {
    uint64_t v31 = (long long *)(*(void *)(a2 + 88) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x100u;
    std::string::size_type v32 = v3->__r_.__value_.__l.__size_;
    uint64_t v33 = (uint64_t *)(v32 & 0xFFFFFFFFFFFFFFFCLL);
    if (v32) {
      uint64_t v33 = (uint64_t *)*v33;
    }
    result = sub_1881DF4((std::string **)&v3[3].__r_.__value_.__r.__words[2], v31, v33);
    if ((v4 & 0x200) == 0)
    {
LABEL_38:
      if ((v4 & 0x400) == 0) {
        goto LABEL_39;
      }
      goto LABEL_55;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_38;
  }
  v34 = (long long *)(*(void *)(a2 + 96) & 0xFFFFFFFFFFFFFFFELL);
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x200u;
  std::string::size_type v35 = v3->__r_.__value_.__l.__size_;
  v36 = (uint64_t *)(v35 & 0xFFFFFFFFFFFFFFFCLL);
  if (v35) {
    v36 = (uint64_t *)*v36;
  }
  result = sub_1881DF4((std::string **)&v3[4], v34, v36);
  if ((v4 & 0x400) == 0)
  {
LABEL_39:
    if ((v4 & 0x800) == 0) {
      goto LABEL_40;
    }
    goto LABEL_58;
  }
LABEL_55:
  uint64_t v37 = (long long *)(*(void *)(a2 + 104) & 0xFFFFFFFFFFFFFFFELL);
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x400u;
  std::string::size_type v38 = v3->__r_.__value_.__l.__size_;
  v39 = (uint64_t *)(v38 & 0xFFFFFFFFFFFFFFFCLL);
  if (v38) {
    v39 = (uint64_t *)*v39;
  }
  result = sub_1881DF4((std::string **)&v3[4].__r_.__value_.__l.__size_, v37, v39);
  if ((v4 & 0x800) == 0)
  {
LABEL_40:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_41;
    }
    goto LABEL_61;
  }
LABEL_58:
  v40 = (long long *)(*(void *)(a2 + 112) & 0xFFFFFFFFFFFFFFFELL);
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x800u;
  std::string::size_type v41 = v3->__r_.__value_.__l.__size_;
  v42 = (uint64_t *)(v41 & 0xFFFFFFFFFFFFFFFCLL);
  if (v41) {
    v42 = (uint64_t *)*v42;
  }
  result = sub_1881DF4((std::string **)&v3[4].__r_.__value_.__r.__words[2], v40, v42);
  if ((v4 & 0x1000) == 0)
  {
LABEL_41:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_42;
    }
LABEL_64:
    v46 = (long long *)(*(void *)(a2 + 128) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x2000u;
    std::string::size_type v47 = v3->__r_.__value_.__l.__size_;
    v48 = (uint64_t *)(v47 & 0xFFFFFFFFFFFFFFFCLL);
    if (v47) {
      v48 = (uint64_t *)*v48;
    }
    result = sub_1881DF4((std::string **)&v3[5].__r_.__value_.__l.__size_, v46, v48);
    if ((v4 & 0x4000) == 0) {
      goto LABEL_44;
    }
    goto LABEL_43;
  }
LABEL_61:
  v43 = (long long *)(*(void *)(a2 + 120) & 0xFFFFFFFFFFFFFFFELL);
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x1000u;
  std::string::size_type v44 = v3->__r_.__value_.__l.__size_;
  uint64_t v45 = (uint64_t *)(v44 & 0xFFFFFFFFFFFFFFFCLL);
  if (v44) {
    uint64_t v45 = (uint64_t *)*v45;
  }
  result = sub_1881DF4((std::string **)&v3[5], v43, v45);
  if ((v4 & 0x2000) != 0) {
    goto LABEL_64;
  }
LABEL_42:
  if ((v4 & 0x4000) != 0) {
LABEL_43:
  }
    LODWORD(v3[5].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 136);
LABEL_44:
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
LABEL_45:
  uint64_t v30 = *(void *)(a2 + 8);
  if (v30)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v30 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_17E01E8(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 0x80) == 0) {
    return 1;
  }
  uint64_t result = sub_15B06D8(*(void *)(a1 + 80));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_17E0214@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.MerchantLookupParameters");
}

uint64_t sub_17E0224(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (void *)(a1 + 8);
  *(void *)a1 = off_24DDC98;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 24) = &qword_2550250;
  int v6 = *(_DWORD *)(a2 + 16);
  if (v6)
  {
    uint64_t v7 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v7 = (uint64_t *)*v7;
    }
    sub_1881DF4((std::string **)(a1 + 24), (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL), v7);
    int v6 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 32) = &qword_2550250;
  if ((v6 & 2) != 0)
  {
    v8 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      v8 = (uint64_t *)*v8;
    }
    sub_1881DF4((std::string **)(a1 + 32), (long long *)(*(void *)(a2 + 32) & 0xFFFFFFFFFFFFFFFELL), v8);
    int v6 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 40) = &qword_2550250;
  if ((v6 & 4) != 0)
  {
    v9 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      v9 = (uint64_t *)*v9;
    }
    sub_1881DF4((std::string **)(a1 + 40), (long long *)(*(void *)(a2 + 40) & 0xFFFFFFFFFFFFFFFELL), v9);
  }
  return a1;
}

void sub_17E0330(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_17E0360(uint64_t a1)
{
  v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_11;
    }
  }
  else if (v4)
  {
    goto LABEL_11;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(uint64_t **)(a1 + 40) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 40));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_11:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17E042C(uint64_t a1)
{
  sub_17E0360(a1);

  operator delete();
}

uint64_t sub_17E0464(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)std::string::size_type v22 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v22, a3[11].i32[1])) {
    return *(void *)v22;
  }
  int v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = (char *)(*(void *)v22 + 1);
    unsigned int v8 = **(unsigned char **)v22;
    if ((char)**(unsigned char **)v22 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180(*(uint64_t *)v22, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (char *)(*(void *)v22 + 2);
      }
    }
    *(void *)std::string::size_type v22 = v7;
    unsigned int v11 = v8 >> 3;
    if (v8 >> 3 == 3)
    {
      if (v8 == 26)
      {
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v16 = *(void *)(a1 + 8);
        v17 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
        if (v16) {
          v17 = (uint64_t *)*v17;
        }
        v18 = (void *)(a1 + 40);
        goto LABEL_32;
      }
    }
    else if (v11 == 2)
    {
      if (v8 == 18)
      {
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v19 = *(void *)(a1 + 8);
        v17 = (uint64_t *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
        if (v19) {
          v17 = (uint64_t *)*v17;
        }
        v18 = (void *)(a1 + 32);
        goto LABEL_32;
      }
    }
    else if (v11 == 1 && v8 == 10)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v20 = *(void *)(a1 + 8);
      v17 = (uint64_t *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
      if (v20) {
        v17 = (uint64_t *)*v17;
      }
      v18 = (void *)(a1 + 24);
LABEL_32:
      v21 = (std::string *)sub_1880F84(v18, v17);
      v15 = (void *)sub_188C244(v21, *(char **)v22, (uint64_t)a3);
      goto LABEL_33;
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      v14 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = *(char **)v22;
    }
    v15 = sub_1885AC0(v8, v14, v7, a3);
LABEL_33:
    *(void *)std::string::size_type v22 = v15;
    if (!v15) {
      goto LABEL_39;
    }
    if (sub_11947B8((uint64_t)a3, (char **)v22, a3[11].i32[1])) {
      return *(void *)v22;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v22;
  }
LABEL_39:
  *(void *)std::string::size_type v22 = 0;
  return *(void *)v22;
}

char *sub_17E0654(uint64_t a1, char *__dst, void *a3)
{
  int v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    int v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_4;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  int v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) != 0) {
LABEL_4:
  }
    int v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL), v4);
LABEL_5:
  uint64_t v7 = *(void *)(a1 + 8);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v9 + 31) < 0)
  {
    unsigned int v10 = *(void **)(v9 + 8);
    uint64_t v11 = *(void *)(v9 + 16);
  }
  else
  {
    unsigned int v10 = (void *)(v9 + 8);
    LODWORD(v11) = *(unsigned __int8 *)(v9 + 31);
  }
  if (*a3 - (void)v4 >= (int)v11)
  {
    uint64_t v12 = (int)v11;
    memcpy(v4, v10, (int)v11);
    v4 += v12;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v10, v11, v4);
}

uint64_t sub_17E076C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 7) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_16;
  }
  if (v1)
  {
    unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
    uint64_t v5 = *(void *)(v3 + 8);
    if ((v4 & 0x80u) == 0) {
      uint64_t v5 = v4;
    }
    uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  uint64_t v2 = 0;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    unint64_t v6 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v1 & 4) != 0)
  {
    unint64_t v9 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v10 = *(unsigned __int8 *)(v9 + 23);
    uint64_t v11 = *(void *)(v9 + 8);
    if ((v10 & 0x80u) == 0) {
      uint64_t v11 = v10;
    }
    v2 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_16:
  uint64_t v12 = *(void *)(a1 + 8);
  if (v12)
  {
    unint64_t v14 = v12 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v14 + 31) < 0) {
      uint64_t v15 = *(void *)(v14 + 16);
    }
    else {
      uint64_t v15 = *(unsigned __int8 *)(v14 + 31);
    }
    v2 += v15;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_17E088C()
{
  return 1;
}

void *sub_17E0894@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.WarsawMerchantIdentifier");
}

uint64_t sub_17E08A4(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (void *)(a1 + 8);
  *(void *)a1 = off_24DDD18;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 24) = &qword_2550250;
  if (*(unsigned char *)(a2 + 16))
  {
    unint64_t v6 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      unint64_t v6 = (uint64_t *)*v6;
    }
    sub_1881DF4((std::string **)(a1 + 24), (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL), v6);
  }
  return a1;
}

void sub_17E0950(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_17E0980(uint64_t a1)
{
  unint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17E0A20(uint64_t a1)
{
  sub_17E0980(a1);

  operator delete();
}

uint64_t sub_17E0A58(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)v17 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v17, a3[11].i32[1])) {
    return *(void *)v17;
  }
  uint64_t v5 = (void *)(a1 + 8);
  while (1)
  {
    unint64_t v6 = (char *)(*(void *)v17 + 1);
    unsigned int v7 = **(unsigned char **)v17;
    if ((char)**(unsigned char **)v17 < 0)
    {
      unsigned int v8 = v7 + (*v6 << 7);
      unsigned int v7 = v8 - 128;
      if (*v6 < 0)
      {
        unint64_t v6 = (char *)sub_188C180(*(uint64_t *)v17, v8 - 128);
        unsigned int v7 = v9;
      }
      else
      {
        unint64_t v6 = (char *)(*(void *)v17 + 2);
      }
    }
    *(void *)v17 = v6;
    if (v7 != 10) {
      break;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v13 = *(void *)(a1 + 8);
    unint64_t v14 = (uint64_t *)(v13 & 0xFFFFFFFFFFFFFFFCLL);
    if (v13) {
      unint64_t v14 = (uint64_t *)*v14;
    }
    uint64_t v15 = (std::string *)sub_1880F84((void *)(a1 + 24), v14);
    uint64_t v12 = (void *)sub_188C244(v15, *(char **)v17, (uint64_t)a3);
LABEL_18:
    *(void *)v17 = v12;
    if (!v12) {
      goto LABEL_25;
    }
    if (sub_11947B8((uint64_t)a3, (char **)v17, a3[11].i32[1])) {
      return *(void *)v17;
    }
  }
  if (v7) {
    BOOL v10 = (v7 & 7) == 4;
  }
  else {
    BOOL v10 = 1;
  }
  if (!v10)
  {
    if (*v5)
    {
      uint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unint64_t v6 = *(char **)v17;
    }
    uint64_t v12 = sub_1885AC0(v7, v11, v6, a3);
    goto LABEL_18;
  }
  if (v6)
  {
    a3[10].i32[0] = v7 - 1;
    return *(void *)v17;
  }
LABEL_25:
  *(void *)v17 = 0;
  return *(void *)v17;
}

char *sub_17E0BB0(uint64_t a1, char *__dst, void *a3)
{
  uint64_t v4 = __dst;
  if (*(unsigned char *)(a1 + 16)) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  uint64_t v6 = *(void *)(a1 + 8);
  if ((v6 & 1) == 0) {
    return v4;
  }
  unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v8 + 31) < 0)
  {
    unsigned int v9 = *(void **)(v8 + 8);
    uint64_t v10 = *(void *)(v8 + 16);
  }
  else
  {
    unsigned int v9 = (void *)(v8 + 8);
    LODWORD(v10) = *(unsigned __int8 *)(v8 + 31);
  }
  if (*a3 - (void)v4 >= (int)v10)
  {
    uint64_t v11 = (int)v10;
    memcpy(v4, v9, (int)v10);
    v4 += v11;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v9, v10, v4);
}

uint64_t sub_17E0C7C(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v3 = *(unsigned __int8 *)(v2 + 23);
    uint64_t v4 = *(void *)(v2 + 8);
    if ((v3 & 0x80u) == 0) {
      uint64_t v4 = v3;
    }
    uint64_t v1 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  else
  {
    uint64_t v1 = 0;
  }
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5)
  {
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v7 + 31) < 0) {
      uint64_t v8 = *(void *)(v7 + 16);
    }
    else {
      uint64_t v8 = *(unsigned __int8 *)(v7 + 31);
    }
    v1 += v8;
  }
  *(_DWORD *)(a1 + 20) = v1;
  return v1;
}

uint64_t sub_17E0D00()
{
  return 1;
}

void *sub_17E0D08@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.AdamAppIdentifier");
}

uint64_t sub_17E0D18(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (void *)(a1 + 8);
  *(void *)a1 = off_24DDD98;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 24) = &qword_2550250;
  if (*(unsigned char *)(a2 + 16))
  {
    uint64_t v6 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v6 = (uint64_t *)*v6;
    }
    sub_1881DF4((std::string **)(a1 + 24), (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL), v6);
  }
  return a1;
}

void sub_17E0DC4(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_17E0DF4(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17E0E94(uint64_t a1)
{
  sub_17E0DF4(a1);

  operator delete();
}

uint64_t sub_17E0ECC(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)v17 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v17, a3[11].i32[1])) {
    return *(void *)v17;
  }
  uint64_t v5 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v6 = (char *)(*(void *)v17 + 1);
    unsigned int v7 = **(unsigned char **)v17;
    if ((char)**(unsigned char **)v17 < 0)
    {
      unsigned int v8 = v7 + (*v6 << 7);
      unsigned int v7 = v8 - 128;
      if (*v6 < 0)
      {
        uint64_t v6 = (char *)sub_188C180(*(uint64_t *)v17, v8 - 128);
        unsigned int v7 = v9;
      }
      else
      {
        uint64_t v6 = (char *)(*(void *)v17 + 2);
      }
    }
    *(void *)v17 = v6;
    if (v7 != 10) {
      break;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v13 = *(void *)(a1 + 8);
    unint64_t v14 = (uint64_t *)(v13 & 0xFFFFFFFFFFFFFFFCLL);
    if (v13) {
      unint64_t v14 = (uint64_t *)*v14;
    }
    uint64_t v15 = (std::string *)sub_1880F84((void *)(a1 + 24), v14);
    uint64_t v12 = (void *)sub_188C244(v15, *(char **)v17, (uint64_t)a3);
LABEL_18:
    *(void *)v17 = v12;
    if (!v12) {
      goto LABEL_25;
    }
    if (sub_11947B8((uint64_t)a3, (char **)v17, a3[11].i32[1])) {
      return *(void *)v17;
    }
  }
  if (v7) {
    BOOL v10 = (v7 & 7) == 4;
  }
  else {
    BOOL v10 = 1;
  }
  if (!v10)
  {
    if (*v5)
    {
      uint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v6 = *(char **)v17;
    }
    uint64_t v12 = sub_1885AC0(v7, v11, v6, a3);
    goto LABEL_18;
  }
  if (v6)
  {
    a3[10].i32[0] = v7 - 1;
    return *(void *)v17;
  }
LABEL_25:
  *(void *)v17 = 0;
  return *(void *)v17;
}

char *sub_17E1024(uint64_t a1, char *__dst, void *a3)
{
  uint64_t v4 = __dst;
  if (*(unsigned char *)(a1 + 16)) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  uint64_t v6 = *(void *)(a1 + 8);
  if ((v6 & 1) == 0) {
    return v4;
  }
  unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v8 + 31) < 0)
  {
    unsigned int v9 = *(void **)(v8 + 8);
    uint64_t v10 = *(void *)(v8 + 16);
  }
  else
  {
    unsigned int v9 = (void *)(v8 + 8);
    LODWORD(v10) = *(unsigned __int8 *)(v8 + 31);
  }
  if (*a3 - (void)v4 >= (int)v10)
  {
    uint64_t v11 = (int)v10;
    memcpy(v4, v9, (int)v10);
    v4 += v11;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v9, v10, v4);
}

uint64_t sub_17E10F0(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v3 = *(unsigned __int8 *)(v2 + 23);
    uint64_t v4 = *(void *)(v2 + 8);
    if ((v3 & 0x80u) == 0) {
      uint64_t v4 = v3;
    }
    uint64_t v1 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  else
  {
    uint64_t v1 = 0;
  }
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5)
  {
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v7 + 31) < 0) {
      uint64_t v8 = *(void *)(v7 + 16);
    }
    else {
      uint64_t v8 = *(unsigned __int8 *)(v7 + 31);
    }
    v1 += v8;
  }
  *(_DWORD *)(a1 + 20) = v1;
  return v1;
}

uint64_t sub_17E1174()
{
  return 1;
}

void *sub_17E117C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.IdentityMerchantInformation");
}

uint64_t sub_17E118C(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (void *)(a1 + 8);
  *(void *)a1 = off_24DDE18;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 24) = &qword_2550250;
  int v6 = *(_DWORD *)(a2 + 16);
  if (v6)
  {
    unint64_t v7 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      unint64_t v7 = (uint64_t *)*v7;
    }
    sub_1881DF4((std::string **)(a1 + 24), (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL), v7);
    int v6 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 32) = &qword_2550250;
  if ((v6 & 2) != 0)
  {
    uint64_t v8 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v8 = (uint64_t *)*v8;
    }
    sub_1881DF4((std::string **)(a1 + 32), (long long *)(*(void *)(a2 + 32) & 0xFFFFFFFFFFFFFFFELL), v8);
    int v6 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 40) = &qword_2550250;
  if ((v6 & 4) != 0)
  {
    unsigned int v9 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      unsigned int v9 = (uint64_t *)*v9;
    }
    sub_1881DF4((std::string **)(a1 + 40), (long long *)(*(void *)(a2 + 40) & 0xFFFFFFFFFFFFFFFELL), v9);
    int v6 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 48) = &qword_2550250;
  if ((v6 & 8) != 0)
  {
    uint64_t v10 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v10 = (uint64_t *)*v10;
    }
    sub_1881DF4((std::string **)(a1 + 48), (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL), v10);
    int v6 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 56) = &qword_2550250;
  if ((v6 & 0x10) != 0)
  {
    uint64_t v11 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v11 = (uint64_t *)*v11;
    }
    sub_1881DF4((std::string **)(a1 + 56), (long long *)(*(void *)(a2 + 56) & 0xFFFFFFFFFFFFFFFELL), v11);
    int v6 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 64) = &qword_2550250;
  if ((v6 & 0x20) != 0)
  {
    uint64_t v12 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v12 = (uint64_t *)*v12;
    }
    sub_1881DF4((std::string **)(a1 + 64), (long long *)(*(void *)(a2 + 64) & 0xFFFFFFFFFFFFFFFELL), v12);
    int v6 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 72) = &qword_2550250;
  if ((v6 & 0x40) != 0)
  {
    uint64_t v13 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v13 = (uint64_t *)*v13;
    }
    sub_1881DF4((std::string **)(a1 + 72), (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL), v13);
    int v6 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 80) = &qword_2550250;
  if ((v6 & 0x80) != 0)
  {
    unint64_t v14 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      unint64_t v14 = (uint64_t *)*v14;
    }
    sub_1881DF4((std::string **)(a1 + 80), (long long *)(*(void *)(a2 + 80) & 0xFFFFFFFFFFFFFFFELL), v14);
    int v6 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 88) = &qword_2550250;
  if ((v6 & 0x100) != 0)
  {
    uint64_t v15 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v15 = (uint64_t *)*v15;
    }
    sub_1881DF4((std::string **)(a1 + 88), (long long *)(*(void *)(a2 + 88) & 0xFFFFFFFFFFFFFFFELL), v15);
    int v6 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 96) = &qword_2550250;
  if ((v6 & 0x200) != 0)
  {
    uint64_t v16 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v16 = (uint64_t *)*v16;
    }
    sub_1881DF4((std::string **)(a1 + 96), (long long *)(*(void *)(a2 + 96) & 0xFFFFFFFFFFFFFFFELL), v16);
    int v6 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 104) = &qword_2550250;
  if ((v6 & 0x400) != 0)
  {
    v17 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      v17 = (uint64_t *)*v17;
    }
    sub_1881DF4((std::string **)(a1 + 104), (long long *)(*(void *)(a2 + 104) & 0xFFFFFFFFFFFFFFFELL), v17);
    int v6 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 112) = &qword_2550250;
  if ((v6 & 0x800) != 0)
  {
    v18 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      v18 = (uint64_t *)*v18;
    }
    sub_1881DF4((std::string **)(a1 + 112), (long long *)(*(void *)(a2 + 112) & 0xFFFFFFFFFFFFFFFELL), v18);
    int v6 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 120) = &qword_2550250;
  if ((v6 & 0x1000) != 0)
  {
    uint64_t v19 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v19 = (uint64_t *)*v19;
    }
    sub_1881DF4((std::string **)(a1 + 120), (long long *)(*(void *)(a2 + 120) & 0xFFFFFFFFFFFFFFFELL), v19);
    int v6 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 128) = &qword_2550250;
  if ((v6 & 0x2000) != 0)
  {
    uint64_t v20 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v20 = (uint64_t *)*v20;
    }
    sub_1881DF4((std::string **)(a1 + 128), (long long *)(*(void *)(a2 + 128) & 0xFFFFFFFFFFFFFFFELL), v20);
  }
  *(_DWORD *)(a1 + 136) = *(_DWORD *)(a2 + 136);
  return a1;
}

void sub_17E14B0(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_17E14E0(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_17E1564((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void ***sub_17E1564(uint64_t a1)
{
  uint64_t v3 = *(uint64_t **)(a1 + 24);
  uint64_t v2 = (void ***)(a1 + 24);
  if (v3 != &qword_2550250) {
    sub_1881C6C(v2);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(uint64_t **)(a1 + 40) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 40));
  }
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 48));
  }
  if (*(uint64_t **)(a1 + 56) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 56));
  }
  if (*(uint64_t **)(a1 + 64) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 64));
  }
  if (*(uint64_t **)(a1 + 72) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 72));
  }
  if (*(uint64_t **)(a1 + 80) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 80));
  }
  if (*(uint64_t **)(a1 + 88) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 88));
  }
  if (*(uint64_t **)(a1 + 96) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 96));
  }
  if (*(uint64_t **)(a1 + 104) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 104));
  }
  if (*(uint64_t **)(a1 + 112) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 112));
  }
  uint64_t result = (void ***)(a1 + 120);
  if (*(uint64_t **)(a1 + 120) != &qword_2550250) {
    sub_1881C6C(result);
  }
  int v6 = *(uint64_t **)(a1 + 128);
  uint64_t v5 = (void ***)(a1 + 128);
  if (v6 != &qword_2550250)
  {
    sub_1881C6C(v5);
  }
  return result;
}

void sub_17E16BC(void *a1)
{
  sub_17E14E0(a1);

  operator delete();
}

uint64_t sub_17E16F4(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v37 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v37, a3[11].i32[1])) {
    goto LABEL_2;
  }
  v36 = (uint64_t *)(a1 + 8);
  while (2)
  {
    unint64_t v7 = (char *)(*(void *)v37 + 1);
    unsigned int v8 = **(unsigned char **)v37;
    if ((char)**(unsigned char **)v37 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        unint64_t v7 = (char *)sub_188C180(*(uint64_t *)v37, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        unint64_t v7 = (char *)(*(void *)v37 + 2);
      }
    }
    *(void *)uint64_t v37 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 10) {
          goto LABEL_74;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v11 = *(void *)(a1 + 8);
        uint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
        if (v11) {
          uint64_t v12 = (uint64_t *)*v12;
        }
        uint64_t v13 = (void *)(a1 + 24);
        goto LABEL_70;
      case 2u:
        if (v8 != 18) {
          goto LABEL_74;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v14 = *(void *)(a1 + 8);
        uint64_t v12 = (uint64_t *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
        if (v14) {
          uint64_t v12 = (uint64_t *)*v12;
        }
        uint64_t v13 = (void *)(a1 + 32);
        goto LABEL_70;
      case 3u:
        if (v8 != 26) {
          goto LABEL_74;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v15 = *(void *)(a1 + 8);
        uint64_t v12 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          uint64_t v12 = (uint64_t *)*v12;
        }
        uint64_t v13 = (void *)(a1 + 40);
        goto LABEL_70;
      case 4u:
        if (v8 != 34) {
          goto LABEL_74;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v16 = *(void *)(a1 + 8);
        uint64_t v12 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
        if (v16) {
          uint64_t v12 = (uint64_t *)*v12;
        }
        uint64_t v13 = (void *)(a1 + 48);
        goto LABEL_70;
      case 5u:
        if (v8 != 42) {
          goto LABEL_74;
        }
        *(_DWORD *)(a1 + 16) |= 0x10u;
        uint64_t v17 = *(void *)(a1 + 8);
        uint64_t v12 = (uint64_t *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
        if (v17) {
          uint64_t v12 = (uint64_t *)*v12;
        }
        uint64_t v13 = (void *)(a1 + 56);
        goto LABEL_70;
      case 6u:
        if (v8 != 50) {
          goto LABEL_74;
        }
        *(_DWORD *)(a1 + 16) |= 0x20u;
        uint64_t v18 = *(void *)(a1 + 8);
        uint64_t v12 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
        if (v18) {
          uint64_t v12 = (uint64_t *)*v12;
        }
        uint64_t v13 = (void *)(a1 + 64);
        goto LABEL_70;
      case 7u:
        if (v8 != 58) {
          goto LABEL_74;
        }
        *(_DWORD *)(a1 + 16) |= 0x40u;
        uint64_t v19 = *(void *)(a1 + 8);
        uint64_t v12 = (uint64_t *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
        if (v19) {
          uint64_t v12 = (uint64_t *)*v12;
        }
        uint64_t v13 = (void *)(a1 + 72);
        goto LABEL_70;
      case 8u:
        if (v8 != 66) {
          goto LABEL_74;
        }
        *(_DWORD *)(a1 + 16) |= 0x80u;
        uint64_t v20 = *(void *)(a1 + 8);
        uint64_t v12 = (uint64_t *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
        if (v20) {
          uint64_t v12 = (uint64_t *)*v12;
        }
        uint64_t v13 = (void *)(a1 + 80);
        goto LABEL_70;
      case 9u:
        if (v8 != 74) {
          goto LABEL_74;
        }
        *(_DWORD *)(a1 + 16) |= 0x100u;
        uint64_t v21 = *(void *)(a1 + 8);
        uint64_t v12 = (uint64_t *)(v21 & 0xFFFFFFFFFFFFFFFCLL);
        if (v21) {
          uint64_t v12 = (uint64_t *)*v12;
        }
        uint64_t v13 = (void *)(a1 + 88);
        goto LABEL_70;
      case 0xAu:
        if (v8 != 82) {
          goto LABEL_74;
        }
        *(_DWORD *)(a1 + 16) |= 0x200u;
        uint64_t v22 = *(void *)(a1 + 8);
        uint64_t v12 = (uint64_t *)(v22 & 0xFFFFFFFFFFFFFFFCLL);
        if (v22) {
          uint64_t v12 = (uint64_t *)*v12;
        }
        uint64_t v13 = (void *)(a1 + 96);
        goto LABEL_70;
      case 0xBu:
        if (v8 != 90) {
          goto LABEL_74;
        }
        *(_DWORD *)(a1 + 16) |= 0x400u;
        uint64_t v23 = *(void *)(a1 + 8);
        uint64_t v12 = (uint64_t *)(v23 & 0xFFFFFFFFFFFFFFFCLL);
        if (v23) {
          uint64_t v12 = (uint64_t *)*v12;
        }
        uint64_t v13 = (void *)(a1 + 104);
        goto LABEL_70;
      case 0xCu:
        if (v8 != 98) {
          goto LABEL_74;
        }
        *(_DWORD *)(a1 + 16) |= 0x800u;
        uint64_t v24 = *(void *)(a1 + 8);
        uint64_t v12 = (uint64_t *)(v24 & 0xFFFFFFFFFFFFFFFCLL);
        if (v24) {
          uint64_t v12 = (uint64_t *)*v12;
        }
        uint64_t v13 = (void *)(a1 + 112);
        goto LABEL_70;
      case 0xDu:
        if (v8 != 104) {
          goto LABEL_74;
        }
        v5 |= 0x4000u;
        v26 = v7 + 1;
        LODWORD(v25) = *v7;
        if ((v25 & 0x80) == 0) {
          goto LABEL_61;
        }
        int v27 = *v26;
        uint64_t v25 = v25 + (v27 << 7) - 128;
        if (v27 < 0)
        {
          uint64_t v34 = sub_188C138((uint64_t)v7, v25);
          *(void *)uint64_t v37 = v34;
          *(_DWORD *)(a1 + 136) = v35;
          if (!v34) {
            goto LABEL_86;
          }
        }
        else
        {
          v26 = v7 + 2;
LABEL_61:
          *(void *)uint64_t v37 = v26;
          *(_DWORD *)(a1 + 136) = v25;
        }
        goto LABEL_72;
      case 0xEu:
        if (v8 != 114) {
          goto LABEL_74;
        }
        *(_DWORD *)(a1 + 16) |= 0x1000u;
        uint64_t v28 = *(void *)(a1 + 8);
        uint64_t v12 = (uint64_t *)(v28 & 0xFFFFFFFFFFFFFFFCLL);
        if (v28) {
          uint64_t v12 = (uint64_t *)*v12;
        }
        uint64_t v13 = (void *)(a1 + 120);
        goto LABEL_70;
      case 0xFu:
        if (v8 != 122) {
          goto LABEL_74;
        }
        *(_DWORD *)(a1 + 16) |= 0x2000u;
        uint64_t v29 = *(void *)(a1 + 8);
        uint64_t v12 = (uint64_t *)(v29 & 0xFFFFFFFFFFFFFFFCLL);
        if (v29) {
          uint64_t v12 = (uint64_t *)*v12;
        }
        uint64_t v13 = (void *)(a1 + 128);
LABEL_70:
        uint64_t v30 = (std::string *)sub_1880F84(v13, v12);
        uint64_t v31 = (void *)sub_188C244(v30, *(char **)v37, (uint64_t)a3);
        goto LABEL_71;
      default:
LABEL_74:
        if (v8) {
          BOOL v32 = (v8 & 7) == 4;
        }
        else {
          BOOL v32 = 1;
        }
        if (!v32)
        {
          if (*v36)
          {
            uint64_t v33 = (std::string *)((*v36 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v33 = (std::string *)sub_188DBD8(v36);
            unint64_t v7 = *(char **)v37;
          }
          uint64_t v31 = sub_1885AC0(v8, v33, v7, a3);
LABEL_71:
          *(void *)uint64_t v37 = v31;
          if (!v31) {
            goto LABEL_86;
          }
LABEL_72:
          if (sub_11947B8((uint64_t)a3, (char **)v37, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v7) {
          a3[10].i32[0] = v8 - 1;
        }
        else {
LABEL_86:
        }
          *(void *)uint64_t v37 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v37;
    }
  }
}

unsigned char *sub_17E1C28(uint64_t a1, unsigned char *__dst, void *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_17;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
LABEL_17:
  uint64_t v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_19;
  }
LABEL_18:
  uint64_t v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_20;
  }
LABEL_19:
  uint64_t v4 = sub_117A0AC(a3, 5, (const void **)(*(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_21;
  }
LABEL_20:
  uint64_t v4 = sub_117A0AC(a3, 6, (const void **)(*(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_22;
  }
LABEL_21:
  uint64_t v4 = sub_117A0AC(a3, 7, (const void **)(*(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_23;
  }
LABEL_22:
  uint64_t v4 = sub_117A0AC(a3, 8, (const void **)(*(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_24;
  }
LABEL_23:
  uint64_t v4 = sub_117A0AC(a3, 9, (const void **)(*(void *)(a1 + 88) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_25;
  }
LABEL_24:
  uint64_t v4 = sub_117A0AC(a3, 10, (const void **)(*(void *)(a1 + 96) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_26;
  }
LABEL_25:
  uint64_t v4 = sub_117A0AC(a3, 11, (const void **)(*(void *)(a1 + 104) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x4000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_27;
  }
LABEL_26:
  uint64_t v4 = sub_117A0AC(a3, 12, (const void **)(*(void *)(a1 + 112) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x4000) == 0) {
    goto LABEL_33;
  }
LABEL_27:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  unint64_t v7 = *(int *)(a1 + 136);
  *uint64_t v4 = 104;
  v4[1] = v7;
  if (v7 > 0x7F)
  {
    v4[1] = v7 | 0x80;
    unint64_t v8 = v7 >> 7;
    v4[2] = v7 >> 7;
    v4 += 3;
    if (v7 >= 0x4000)
    {
      do
      {
        *(v4 - 1) |= 0x80u;
        unint64_t v9 = v8 >> 14;
        v8 >>= 7;
        *v4++ = v8;
      }
      while (v9);
    }
  }
  else
  {
    v4 += 2;
  }
LABEL_33:
  if ((v6 & 0x1000) != 0) {
    uint64_t v4 = sub_117A0AC(a3, 14, (const void **)(*(void *)(a1 + 120) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  if ((v6 & 0x2000) != 0) {
    uint64_t v4 = sub_117A0AC(a3, 15, (const void **)(*(void *)(a1 + 128) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v10 = *(void *)(a1 + 8);
  if ((v10 & 1) == 0) {
    return v4;
  }
  unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v12 + 31) < 0)
  {
    uint64_t v13 = *(void **)(v12 + 8);
    uint64_t v14 = *(void *)(v12 + 16);
  }
  else
  {
    uint64_t v13 = (void *)(v12 + 8);
    LODWORD(v14) = *(unsigned __int8 *)(v12 + 31);
  }
  if (*a3 - (void)v4 >= (int)v14)
  {
    uint64_t v15 = (int)v14;
    memcpy(v4, v13, (int)v14);
    v4 += v15;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v13, v14, v4);
}

uint64_t sub_17E1F44(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if (!(_BYTE)v1)
  {
    uint64_t v2 = 0;
    goto LABEL_21;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
  uint64_t v5 = *(void *)(v3 + 8);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = v4;
  }
  uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    unint64_t v6 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v1 & 4) != 0)
  {
    unint64_t v12 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v13 = *(unsigned __int8 *)(v12 + 23);
    uint64_t v14 = *(void *)(v12 + 8);
    if ((v13 & 0x80u) == 0) {
      uint64_t v14 = v13;
    }
    v2 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 8) == 0)
    {
LABEL_14:
      if ((v1 & 0x10) == 0) {
        goto LABEL_15;
      }
      goto LABEL_36;
    }
  }
  else if ((v1 & 8) == 0)
  {
    goto LABEL_14;
  }
  unint64_t v15 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v16 = *(unsigned __int8 *)(v15 + 23);
  uint64_t v17 = *(void *)(v15 + 8);
  if ((v16 & 0x80u) == 0) {
    uint64_t v17 = v16;
  }
  v2 += v17 + ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 0x10) == 0)
  {
LABEL_15:
    if ((v1 & 0x20) == 0) {
      goto LABEL_16;
    }
    goto LABEL_39;
  }
LABEL_36:
  unint64_t v18 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v19 = *(unsigned __int8 *)(v18 + 23);
  uint64_t v20 = *(void *)(v18 + 8);
  if ((v19 & 0x80u) == 0) {
    uint64_t v20 = v19;
  }
  v2 += v20 + ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 0x20) == 0)
  {
LABEL_16:
    if ((v1 & 0x40) == 0) {
      goto LABEL_17;
    }
    goto LABEL_42;
  }
LABEL_39:
  unint64_t v21 = *(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v22 = *(unsigned __int8 *)(v21 + 23);
  uint64_t v23 = *(void *)(v21 + 8);
  if ((v22 & 0x80u) == 0) {
    uint64_t v23 = v22;
  }
  v2 += v23 + ((9 * (__clz(v23 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 0x40) == 0)
  {
LABEL_17:
    if ((v1 & 0x80) == 0) {
      goto LABEL_21;
    }
    goto LABEL_18;
  }
LABEL_42:
  unint64_t v24 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v25 = *(unsigned __int8 *)(v24 + 23);
  uint64_t v26 = *(void *)(v24 + 8);
  if ((v25 & 0x80u) == 0) {
    uint64_t v26 = v25;
  }
  v2 += v26 + ((9 * (__clz(v26 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 0x80) != 0)
  {
LABEL_18:
    unint64_t v9 = *(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v10 = *(unsigned __int8 *)(v9 + 23);
    uint64_t v11 = *(void *)(v9 + 8);
    if ((v10 & 0x80u) == 0) {
      uint64_t v11 = v10;
    }
    v2 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_21:
  if ((v1 & 0x7F00) == 0) {
    goto LABEL_68;
  }
  if ((v1 & 0x100) != 0)
  {
    unint64_t v27 = *(void *)(a1 + 88) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v28 = *(unsigned __int8 *)(v27 + 23);
    uint64_t v29 = *(void *)(v27 + 8);
    if ((v28 & 0x80u) == 0) {
      uint64_t v29 = v28;
    }
    v2 += v29 + ((9 * (__clz(v29 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 0x200) == 0)
    {
LABEL_24:
      if ((v1 & 0x400) == 0) {
        goto LABEL_25;
      }
      goto LABEL_52;
    }
  }
  else if ((v1 & 0x200) == 0)
  {
    goto LABEL_24;
  }
  unint64_t v30 = *(void *)(a1 + 96) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v31 = *(unsigned __int8 *)(v30 + 23);
  uint64_t v32 = *(void *)(v30 + 8);
  if ((v31 & 0x80u) == 0) {
    uint64_t v32 = v31;
  }
  v2 += v32 + ((9 * (__clz(v32 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 0x400) == 0)
  {
LABEL_25:
    if ((v1 & 0x800) == 0) {
      goto LABEL_26;
    }
    goto LABEL_55;
  }
LABEL_52:
  unint64_t v33 = *(void *)(a1 + 104) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v34 = *(unsigned __int8 *)(v33 + 23);
  uint64_t v35 = *(void *)(v33 + 8);
  if ((v34 & 0x80u) == 0) {
    uint64_t v35 = v34;
  }
  v2 += v35 + ((9 * (__clz(v35 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 0x800) == 0)
  {
LABEL_26:
    if ((v1 & 0x1000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_58;
  }
LABEL_55:
  unint64_t v36 = *(void *)(a1 + 112) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v37 = *(unsigned __int8 *)(v36 + 23);
  uint64_t v38 = *(void *)(v36 + 8);
  if ((v37 & 0x80u) == 0) {
    uint64_t v38 = v37;
  }
  v2 += v38 + ((9 * (__clz(v38 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 0x1000) == 0)
  {
LABEL_27:
    if ((v1 & 0x2000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_61;
  }
LABEL_58:
  unint64_t v39 = *(void *)(a1 + 120) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v40 = *(unsigned __int8 *)(v39 + 23);
  uint64_t v41 = *(void *)(v39 + 8);
  if ((v40 & 0x80u) == 0) {
    uint64_t v41 = v40;
  }
  v2 += v41 + ((9 * (__clz(v41 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 0x2000) == 0)
  {
LABEL_28:
    if ((v1 & 0x4000) == 0) {
      goto LABEL_68;
    }
    goto LABEL_64;
  }
LABEL_61:
  unint64_t v42 = *(void *)(a1 + 128) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v43 = *(unsigned __int8 *)(v42 + 23);
  uint64_t v44 = *(void *)(v42 + 8);
  if ((v43 & 0x80u) == 0) {
    uint64_t v44 = v43;
  }
  v2 += v44 + ((9 * (__clz(v44 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 0x4000) != 0)
  {
LABEL_64:
    int v45 = *(_DWORD *)(a1 + 136);
    if (v45 < 0) {
      uint64_t v46 = 11;
    }
    else {
      uint64_t v46 = ((9 * (__clz(v45 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v46;
  }
LABEL_68:
  uint64_t v47 = *(void *)(a1 + 8);
  if (v47)
  {
    unint64_t v49 = v47 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v49 + 31) < 0) {
      uint64_t v50 = *(void *)(v49 + 16);
    }
    else {
      uint64_t v50 = *(unsigned __int8 *)(v49 + 31);
    }
    v2 += v50;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_17E23C0()
{
  return 1;
}

void *sub_17E23C8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.MerchantInformation");
}

uint64_t sub_17E23D8(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_24DDE98;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  if (*(unsigned char *)(a2 + 16)) {
    operator new();
  }
  *(void *)(a1 + 24) = 0;
  return a1;
}

void sub_17E2484()
{
}

uint64_t sub_17E24D4(uint64_t a1)
{
  unint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_254B468)
  {
    uint64_t v6 = *(void *)(a1 + 24);
    if (v6)
    {
      sub_171B7C8(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17E258C(uint64_t a1)
{
  sub_17E24D4(a1);

  operator delete();
}

uint64_t sub_17E25C4(uint64_t result)
{
  uint64_t v1 = result;
  if (*(unsigned char *)(result + 16)) {
    uint64_t result = sub_171B910(*(void *)(result + 24));
  }
  char v3 = *(unsigned char *)(v1 + 8);
  uint64_t v2 = v1 + 8;
  *(_DWORD *)(v2 + 8) = 0;
  if (v3)
  {
    return sub_188B4AC((uint64_t *)v2);
  }
  return result;
}

char *sub_17E2620(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v16 = a2;
  if (sub_11947B8((uint64_t)a3, &v16, a3[11].i32[1])) {
    return v16;
  }
  uint64_t v5 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v6 = v16 + 1;
    unsigned int v7 = *v16;
    if (*v16 < 0)
    {
      unsigned int v8 = v7 + (*v6 << 7);
      unsigned int v7 = v8 - 128;
      if (*v6 < 0)
      {
        uint64_t v6 = (char *)sub_188C180((uint64_t)v16, v8 - 128);
        unsigned int v7 = v9;
      }
      else
      {
        uint64_t v6 = v16 + 2;
      }
    }
    uint64_t v16 = v6;
    if (v7 != 10) {
      break;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v13 = *(void **)(a1 + 24);
    if (!v13)
    {
      uint64_t v14 = (void *)(*v5 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v5) {
        uint64_t v14 = (void *)*v14;
      }
      uint64_t v13 = sub_178B28C((uint64_t)v14);
      *(void *)(a1 + 24) = v13;
      uint64_t v6 = v16;
    }
    unint64_t v12 = (char *)sub_17E2778(a3, (uint64_t)v13, (unsigned __int8 *)v6);
LABEL_20:
    uint64_t v16 = v12;
    if (!v12) {
      return 0;
    }
    if (sub_11947B8((uint64_t)a3, &v16, a3[11].i32[1])) {
      return v16;
    }
  }
  if (v7) {
    BOOL v10 = (v7 & 7) == 4;
  }
  else {
    BOOL v10 = 1;
  }
  if (!v10)
  {
    if (*v5)
    {
      uint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v6 = v16;
    }
    unint64_t v12 = (char *)sub_1885AC0(v7, v11, v6, a3);
    goto LABEL_20;
  }
  if (v6)
  {
    a3[10].i32[0] = v7 - 1;
    return v16;
  }
  return 0;
}

uint64_t sub_17E2778(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_171B9F8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_17E2808(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v6 = *(void *)(a1 + 24);
    *uint64_t v4 = 10;
    unsigned int v7 = *(_DWORD *)(v6 + 44);
    v4[1] = v7;
    if (v7 > 0x7F) {
      unsigned int v8 = sub_188A9CC(v7, v4 + 1);
    }
    else {
      unsigned int v8 = v4 + 2;
    }
    uint64_t v4 = sub_171BCAC(v6, v8, a3);
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    unint64_t v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    unint64_t v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    v4 += v14;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v12, v13, v4);
}

uint64_t sub_17E2918(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    uint64_t v3 = sub_171BEA0(*(void *)(a1 + 24));
    uint64_t result = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  else
  {
    uint64_t result = 0;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v5 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    result += v6;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

void sub_17E29A0(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a2 + 16))
  {
    uint64_t v4 = *(uint64_t (****)())(a2 + 24);
    *(_DWORD *)(a1 + 16) |= 1u;
    unint64_t v5 = *(void **)(a1 + 24);
    if (!v5)
    {
      uint64_t v6 = *(void *)(a1 + 8);
      unsigned int v7 = (void *)(v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (v6) {
        unsigned int v7 = (void *)*v7;
      }
      unint64_t v5 = sub_178B28C((uint64_t)v7);
      *(void *)(a1 + 24) = v5;
      uint64_t v4 = *(uint64_t (****)())(a2 + 24);
    }
    if (v4) {
      unsigned int v8 = v4;
    }
    else {
      unsigned int v8 = &off_2546E68;
    }
    sub_171C00C((uint64_t)v5, (uint64_t)v8);
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_17E2A48(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 1;
  }
  uint64_t result = sub_171C194(*(void *)(a1 + 24));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_17E2A74@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.MerchantLookupResult");
}

uint64_t sub_17E2A84(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)a1 = off_24DDF18;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v5 = a1 + 24;
  *(_DWORD *)(a1 + 44) = 0;
  *(void *)(a1 + 28) = 0;
  *(void *)(a1 + 36) = 0;
  *(void *)(a1 + 20) = 0;
  int v6 = *(_DWORD *)(a2 + 32);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 40);
    unsigned int v8 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_188FB98(v5, v8, (const std::string **)(v7 + 8), v6, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v9 = *(_DWORD *)(a1 + 32) + v6;
    *(_DWORD *)(a1 + 32) = v9;
    BOOL v10 = *(int **)(a1 + 40);
    if (*v10 < v9) {
      *BOOL v10 = v9;
    }
  }
  uint64_t v11 = *(void *)(a2 + 8);
  if (v11) {
    sub_188B4F8(v4, (v11 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 48) = &qword_2550250;
  int v12 = *(_DWORD *)(a2 + 16);
  if (v12)
  {
    uint64_t v13 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v13 = (uint64_t *)*v13;
    }
    sub_1881DF4((std::string **)(a1 + 48), (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL), v13);
    int v12 = *(_DWORD *)(a2 + 16);
  }
  if ((v12 & 2) != 0) {
    operator new();
  }
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  return a1;
}

void sub_17E2BE8()
{
}

uint64_t sub_17E2C48(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  uint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_254B488)
  {
    uint64_t v6 = *(void *)(a1 + 56);
    if (v6)
    {
      sub_15B3DFC(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  sub_1889DE8((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17E2D1C(uint64_t a1)
{
  sub_17E2C48(a1);

  operator delete();
}

uint64_t sub_17E2D54(uint64_t a1)
{
  uint64_t result = sub_188CC00(a1 + 24);
  int v3 = *(_DWORD *)(a1 + 16);
  if ((v3 & 3) != 0)
  {
    if ((v3 & 1) == 0) {
      goto LABEL_5;
    }
    unint64_t v4 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if ((*(char *)(v4 + 23) & 0x80000000) == 0)
    {
      *(unsigned char *)unint64_t v4 = 0;
      *(unsigned char *)(v4 + 23) = 0;
LABEL_5:
      if ((v3 & 2) == 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
    **(unsigned char **)unint64_t v4 = 0;
    *(void *)(v4 + 8) = 0;
    if ((v3 & 2) != 0) {
LABEL_6:
    }
      uint64_t result = sub_15B043C(*(void *)(a1 + 56));
  }
LABEL_7:
  char v6 = *(unsigned char *)(a1 + 8);
  uint64_t v5 = a1 + 8;
  *(void *)(v5 + 56) = 0;
  *(_DWORD *)(v5 + 8) = 0;
  if (v6)
  {
    return sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

uint64_t sub_17E2DF4(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v28 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v28, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (uint64_t **)(a1 + 24);
  unsigned int v8 = (void *)(a1 + 8);
  while (2)
  {
    int v9 = (unsigned __int8 *)(*(void *)v28 + 1);
    unsigned int v10 = **(unsigned char **)v28;
    if ((char)**(unsigned char **)v28 < 0)
    {
      unsigned int v11 = v10 + (*v9 << 7);
      unsigned int v10 = v11 - 128;
      if ((char)*v9 < 0)
      {
        int v9 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v28, v11 - 128);
        unsigned int v10 = v12;
      }
      else
      {
        int v9 = (unsigned __int8 *)(*(void *)v28 + 2);
      }
    }
    *(void *)uint64_t v28 = v9;
    switch(v10 >> 3)
    {
      case 1u:
        if (v10 != 9) {
          goto LABEL_33;
        }
        v5 |= 4u;
        *(void *)(a1 + 64) = *(void *)v9;
        *(void *)uint64_t v28 = v9 + 8;
        goto LABEL_41;
      case 2u:
        if (v10 != 18) {
          goto LABEL_33;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v13 = *(void *)(a1 + 56);
        if (!v13)
        {
          uint64_t v14 = (void *)(*v8 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v8) {
            uint64_t v14 = (void *)*v14;
          }
          uint64_t v13 = sub_15C1CB4((uint64_t)v14);
          *(void *)(a1 + 56) = v13;
          int v9 = *(unsigned __int8 **)v28;
        }
        unint64_t v15 = sub_11B3E48(a3, v13, v9);
        goto LABEL_40;
      case 3u:
        if (v10 != 26) {
          goto LABEL_33;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v16 = *(void *)(a1 + 8);
        uint64_t v17 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
        if (v16) {
          uint64_t v17 = (uint64_t *)*v17;
        }
        unint64_t v18 = (std::string *)sub_1880F84((void *)(a1 + 48), v17);
        unint64_t v15 = (void *)sub_188C244(v18, *(char **)v28, (uint64_t)a3);
        goto LABEL_40;
      case 4u:
        if (v10 != 34) {
          goto LABEL_33;
        }
        uint64_t v19 = (const std::string::value_type *)(v9 - 1);
        while (1)
        {
          uint64_t v20 = (char *)(v19 + 1);
          *(void *)uint64_t v28 = v19 + 1;
          unint64_t v21 = *(_DWORD **)(a1 + 40);
          if (v21 && (uint64_t v22 = *(int *)(a1 + 32), (int)v22 < *v21))
          {
            *(_DWORD *)(a1 + 32) = v22 + 1;
            uint64_t v23 = *(std::string **)&v21[2 * v22 + 2];
          }
          else
          {
            if (!*v7) {
              operator new();
            }
            *uint64_t v25 = v24;
            v25[1] = sub_3A6EDC;
            void *v24 = 0;
            v24[1] = 0;
            v24[2] = 0;
            uint64_t v23 = (std::string *)sub_188CDC8(a1 + 24, (uint64_t)v24);
            uint64_t v20 = *(char **)v28;
          }
          uint64_t v19 = sub_188C244(v23, v20, (uint64_t)a3);
          *(void *)uint64_t v28 = v19;
          if (!v19) {
            goto LABEL_46;
          }
          if (*(void *)a3 <= (unint64_t)v19 || *v19 != 34) {
            goto LABEL_41;
          }
        }
      default:
LABEL_33:
        if (v10) {
          BOOL v26 = (v10 & 7) == 4;
        }
        else {
          BOOL v26 = 1;
        }
        if (!v26)
        {
          if (*v8)
          {
            unint64_t v27 = (std::string *)((*v8 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            unint64_t v27 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            int v9 = *(unsigned __int8 **)v28;
          }
          unint64_t v15 = sub_1885AC0(v10, v27, (char *)v9, a3);
LABEL_40:
          *(void *)uint64_t v28 = v15;
          if (!v15) {
            goto LABEL_46;
          }
LABEL_41:
          if (sub_11947B8((uint64_t)a3, (char **)v28, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v9) {
          a3[10].i32[0] = v10 - 1;
        }
        else {
LABEL_46:
        }
          *(void *)uint64_t v28 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v28;
    }
  }
}

unsigned char *sub_17E30F8(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  unint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= __dst) {
      unint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v12 = *(void *)(a1 + 64);
    *unint64_t v4 = 9;
    *(void *)(v4 + 1) = v12;
    v4 += 9;
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 1) == 0) {
        goto LABEL_5;
      }
      goto LABEL_4;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v13 = *(void *)(a1 + 56);
  *unint64_t v4 = 18;
  unsigned int v14 = *(_DWORD *)(v13 + 44);
  v4[1] = v14;
  if (v14 > 0x7F) {
    unint64_t v15 = sub_188A9CC(v14, v4 + 1);
  }
  else {
    unint64_t v15 = v4 + 2;
  }
  unint64_t v4 = sub_15B43E4(v13, v15, a3);
  if (v6) {
LABEL_4:
  }
    unint64_t v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), v4);
LABEL_5:
  uint64_t v7 = *(unsigned int *)(a1 + 32);
  if ((int)v7 >= 1)
  {
    uint64_t v8 = 0;
    uint64_t v9 = 8 * v7;
    do
    {
      unint64_t v4 = (unsigned char *)sub_125CE58(a3, 4, *(void *)(*(void *)(a1 + 40) + v8 + 8), v4);
      v8 += 8;
    }
    while (v9 != v8);
  }
  uint64_t v10 = *(void *)(a1 + 8);
  if ((v10 & 1) == 0) {
    return v4;
  }
  unint64_t v16 = v10 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v16 + 31) < 0)
  {
    uint64_t v17 = *(void **)(v16 + 8);
    uint64_t v18 = *(void *)(v16 + 16);
  }
  else
  {
    uint64_t v17 = (void *)(v16 + 8);
    LODWORD(v18) = *(unsigned __int8 *)(v16 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v18)
  {
    uint64_t v19 = (int)v18;
    memcpy(v4, v17, (int)v18);
    v4 += v19;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v17, v18, v4);
}

uint64_t sub_17E32B8(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  if ((int)v2 < 1)
  {
    uint64_t v4 = *(unsigned int *)(a1 + 32);
  }
  else
  {
    int v3 = (uint64_t *)(*(void *)(a1 + 40) + 8);
    uint64_t v4 = *(unsigned int *)(a1 + 32);
    do
    {
      uint64_t v5 = *v3++;
      uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
      uint64_t v7 = *(void *)(v5 + 8);
      if ((v6 & 0x80u) == 0) {
        uint64_t v7 = v6;
      }
      v4 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      --v2;
    }
    while (v2);
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 7) != 0)
  {
    if (v8)
    {
      unint64_t v9 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v10 = *(unsigned __int8 *)(v9 + 23);
      uint64_t v11 = *(void *)(v9 + 8);
      if ((v10 & 0x80u) == 0) {
        uint64_t v11 = v10;
      }
      v4 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v8 & 2) != 0)
    {
      uint64_t v12 = sub_15B4924(*(void *)(a1 + 56));
      v4 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v8 & 4) != 0) {
      v4 += 9;
    }
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if (v13)
  {
    unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v15 + 31) < 0) {
      uint64_t v16 = *(void *)(v15 + 16);
    }
    else {
      uint64_t v16 = *(unsigned __int8 *)(v15 + 31);
    }
    v4 += v16;
  }
  *(_DWORD *)(a1 + 20) = v4;
  return v4;
}

void sub_17E3400(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (const std::string **)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_188FB98(a1 + 24, v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    int v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 7) != 0)
  {
    if (v9)
    {
      uint64_t v11 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v12 = *(void *)(a1 + 8);
      uint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
      if (v12) {
        uint64_t v13 = (uint64_t *)*v13;
      }
      sub_1881DF4((std::string **)(a1 + 48), v11, v13);
      if ((v9 & 2) == 0)
      {
LABEL_7:
        if ((v9 & 4) == 0)
        {
LABEL_9:
          *(_DWORD *)(a1 + 16) |= v9;
          goto LABEL_10;
        }
LABEL_8:
        *(void *)(a1 + 64) = *(void *)(a2 + 64);
        goto LABEL_9;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_7;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v14 = *(void *)(a1 + 56);
    if (!v14)
    {
      uint64_t v15 = *(void *)(a1 + 8);
      uint64_t v16 = (void *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
      if (v15) {
        uint64_t v16 = (void *)*v16;
      }
      uint64_t v14 = sub_15C1CB4((uint64_t)v16);
      *(void *)(a1 + 56) = v14;
    }
    if (*(void *)(a2 + 56)) {
      uint64_t v17 = *(uint64_t (****)())(a2 + 56);
    }
    else {
      uint64_t v17 = &off_253F2E8;
    }
    sub_15B04F0(v14, (uint64_t)v17);
    if ((v9 & 4) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
LABEL_10:
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_17E3580(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 2) == 0) {
    return 1;
  }
  uint64_t result = sub_15B06D8(*(void *)(a1 + 56));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_17E35AC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.ExternalTransitLookupParameters");
}

uint64_t sub_17E35BC(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (void *)(a1 + 8);
  *(void *)a1 = off_24DDF98;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 24) = &qword_2550250;
  if (*(unsigned char *)(a2 + 16))
  {
    uint64_t v6 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v6 = (uint64_t *)*v6;
    }
    sub_1881DF4((std::string **)(a1 + 24), (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL), v6);
  }
  return a1;
}

void sub_17E3668(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_17E3698(uint64_t a1)
{
  int v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17E3738(uint64_t a1)
{
  sub_17E3698(a1);

  operator delete();
}

uint64_t sub_17E3770(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v1 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v1 + 23) < 0)
    {
      **(unsigned char **)unint64_t v1 = 0;
      *(void *)(v1 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v1 = 0;
      *(unsigned char *)(v1 + 23) = 0;
    }
  }
  char v3 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v3) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_17E37B4(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v17 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v17, a3[11].i32[1])) {
    return *(void *)v17;
  }
  uint64_t v5 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v6 = (char *)(*(void *)v17 + 1);
    unsigned int v7 = **(unsigned char **)v17;
    if ((char)**(unsigned char **)v17 < 0)
    {
      unsigned int v8 = v7 + (*v6 << 7);
      unsigned int v7 = v8 - 128;
      if (*v6 < 0)
      {
        uint64_t v6 = (char *)sub_188C180(*(uint64_t *)v17, v8 - 128);
        unsigned int v7 = v9;
      }
      else
      {
        uint64_t v6 = (char *)(*(void *)v17 + 2);
      }
    }
    *(void *)uint64_t v17 = v6;
    if (v7 != 10) {
      break;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v13 = *(void *)(a1 + 8);
    uint64_t v14 = (uint64_t *)(v13 & 0xFFFFFFFFFFFFFFFCLL);
    if (v13) {
      uint64_t v14 = (uint64_t *)*v14;
    }
    uint64_t v15 = (std::string *)sub_1880F84((void *)(a1 + 24), v14);
    uint64_t v12 = (void *)sub_188C244(v15, *(char **)v17, (uint64_t)a3);
LABEL_18:
    *(void *)uint64_t v17 = v12;
    if (!v12) {
      goto LABEL_25;
    }
    if (sub_11947B8((uint64_t)a3, (char **)v17, a3[11].i32[1])) {
      return *(void *)v17;
    }
  }
  if (v7) {
    BOOL v10 = (v7 & 7) == 4;
  }
  else {
    BOOL v10 = 1;
  }
  if (!v10)
  {
    if (*v5)
    {
      uint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v6 = *(char **)v17;
    }
    uint64_t v12 = sub_1885AC0(v7, v11, v6, a3);
    goto LABEL_18;
  }
  if (v6)
  {
    a3[10].i32[0] = v7 - 1;
    return *(void *)v17;
  }
LABEL_25:
  *(void *)uint64_t v17 = 0;
  return *(void *)v17;
}

char *sub_17E390C(uint64_t a1, char *__dst, void *a3)
{
  int v4 = __dst;
  if (*(unsigned char *)(a1 + 16)) {
    int v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  uint64_t v6 = *(void *)(a1 + 8);
  if ((v6 & 1) == 0) {
    return v4;
  }
  unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v8 + 31) < 0)
  {
    unsigned int v9 = *(void **)(v8 + 8);
    uint64_t v10 = *(void *)(v8 + 16);
  }
  else
  {
    unsigned int v9 = (void *)(v8 + 8);
    LODWORD(v10) = *(unsigned __int8 *)(v8 + 31);
  }
  if (*a3 - (void)v4 >= (int)v10)
  {
    uint64_t v11 = (int)v10;
    memcpy(v4, v9, (int)v10);
    v4 += v11;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v9, v10, v4);
}

uint64_t sub_17E39D8(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v3 = *(unsigned __int8 *)(v2 + 23);
    uint64_t v4 = *(void *)(v2 + 8);
    if ((v3 & 0x80u) == 0) {
      uint64_t v4 = v3;
    }
    uint64_t v1 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  else
  {
    uint64_t v1 = 0;
  }
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5)
  {
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v7 + 31) < 0) {
      uint64_t v8 = *(void *)(v7 + 16);
    }
    else {
      uint64_t v8 = *(unsigned __int8 *)(v7 + 31);
    }
    v1 += v8;
  }
  *(_DWORD *)(a1 + 20) = v1;
  return v1;
}

uint64_t sub_17E3A5C()
{
  return 1;
}

void *sub_17E3A64@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.ExternalTransitLookupResult");
}

void *sub_17E3A74(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1889DE8(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17E3AF0(void *a1)
{
  sub_17E3A74(a1);

  operator delete();
}

uint64_t sub_17E3B28(uint64_t a1)
{
  uint64_t result = sub_188CC00(a1 + 24);
  if ((*(unsigned char *)(a1 + 16) & 7) != 0)
  {
    *(_DWORD *)(a1 + 56) = 0;
    *(void *)(a1 + 48) = 0;
  }
  char v4 = *(unsigned char *)(a1 + 8);
  uint64_t v3 = a1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_17E3B90(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v38 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v38, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (uint64_t **)(a1 + 24);
  uint64_t v8 = (void *)(a1 + 8);
  while (2)
  {
    unsigned int v9 = (char *)(*(void *)v38 + 1);
    unsigned int v10 = **(unsigned char **)v38;
    if ((char)**(unsigned char **)v38 < 0)
    {
      unsigned int v11 = v10 + (*v9 << 7);
      unsigned int v10 = v11 - 128;
      if (*v9 < 0)
      {
        unsigned int v9 = (char *)sub_188C180(*(uint64_t *)v38, v11 - 128);
        unsigned int v10 = v12;
      }
      else
      {
        unsigned int v9 = (char *)(*(void *)v38 + 2);
      }
    }
    *(void *)uint64_t v38 = v9;
    switch(v10 >> 3)
    {
      case 1u:
        if (v10 != 8) {
          goto LABEL_38;
        }
        uint64_t v13 = v9 + 1;
        unint64_t v14 = *v9;
        if ((*v9 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v15 = *v13;
        int v16 = v14 + (v15 << 7);
        unint64_t v14 = (v16 - 128);
        if (v15 < 0)
        {
          *(void *)uint64_t v38 = sub_188C138((uint64_t)v9, (v16 - 128));
          if (!*(void *)v38) {
            goto LABEL_60;
          }
          unint64_t v14 = v32;
        }
        else
        {
          uint64_t v13 = v9 + 2;
LABEL_13:
          *(void *)uint64_t v38 = v13;
        }
        if (v14 > 4)
        {
          if (*v8) {
            uint64_t v37 = (std::string *)((*v8 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v37 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(1, v14, v37);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 1u;
          *(_DWORD *)(a1 + 48) = v14;
        }
        goto LABEL_45;
      case 2u:
        if (v10 != 16) {
          goto LABEL_38;
        }
        v5 |= 2u;
        uint64_t v18 = v9 + 1;
        LODWORD(v17) = *v9;
        if ((v17 & 0x80) == 0) {
          goto LABEL_20;
        }
        int v19 = *v18;
        uint64_t v17 = v17 + (v19 << 7) - 128;
        if (v19 < 0)
        {
          uint64_t v33 = sub_188C138((uint64_t)v9, v17);
          *(void *)uint64_t v38 = v33;
          *(_DWORD *)(a1 + 52) = v34;
          if (!v33) {
            goto LABEL_60;
          }
        }
        else
        {
          uint64_t v18 = v9 + 2;
LABEL_20:
          *(void *)uint64_t v38 = v18;
          *(_DWORD *)(a1 + 52) = v17;
        }
        goto LABEL_45;
      case 3u:
        if (v10 != 24) {
          goto LABEL_38;
        }
        v5 |= 4u;
        unint64_t v21 = v9 + 1;
        LODWORD(v20) = *v9;
        if ((v20 & 0x80) == 0) {
          goto LABEL_25;
        }
        int v22 = *v21;
        uint64_t v20 = v20 + (v22 << 7) - 128;
        if (v22 < 0)
        {
          uint64_t v35 = sub_188C138((uint64_t)v9, v20);
          *(void *)uint64_t v38 = v35;
          *(_DWORD *)(a1 + 56) = v36;
          if (!v35) {
            goto LABEL_60;
          }
        }
        else
        {
          unint64_t v21 = v9 + 2;
LABEL_25:
          *(void *)uint64_t v38 = v21;
          *(_DWORD *)(a1 + 56) = v20;
        }
        goto LABEL_45;
      case 4u:
        if (v10 != 34) {
          goto LABEL_38;
        }
        uint64_t v23 = v9 - 1;
        while (1)
        {
          unint64_t v24 = (char *)(v23 + 1);
          *(void *)uint64_t v38 = v23 + 1;
          uint64_t v25 = *(_DWORD **)(a1 + 40);
          if (v25 && (uint64_t v26 = *(int *)(a1 + 32), (int)v26 < *v25))
          {
            *(_DWORD *)(a1 + 32) = v26 + 1;
            unint64_t v27 = *(std::string **)&v25[2 * v26 + 2];
          }
          else
          {
            if (!*v7) {
              operator new();
            }
            void *v29 = v28;
            v29[1] = sub_3A6EDC;
            *uint64_t v28 = 0;
            v28[1] = 0;
            int v28[2] = 0;
            unint64_t v27 = (std::string *)sub_188CDC8(a1 + 24, (uint64_t)v28);
            unint64_t v24 = *(char **)v38;
          }
          uint64_t v23 = sub_188C244(v27, v24, (uint64_t)a3);
          *(void *)uint64_t v38 = v23;
          if (!v23) {
            goto LABEL_60;
          }
          if (*(void *)a3 <= (unint64_t)v23 || *v23 != 34) {
            goto LABEL_45;
          }
        }
      default:
LABEL_38:
        if (v10) {
          BOOL v30 = (v10 & 7) == 4;
        }
        else {
          BOOL v30 = 1;
        }
        if (!v30)
        {
          if (*v8)
          {
            uint64_t v31 = (std::string *)((*v8 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v31 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unsigned int v9 = *(char **)v38;
          }
          *(void *)uint64_t v38 = sub_1885AC0(v10, v31, v9, a3);
          if (!*(void *)v38) {
            goto LABEL_60;
          }
LABEL_45:
          if (sub_11947B8((uint64_t)a3, (char **)v38, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v9) {
          a3[10].i32[0] = v10 - 1;
        }
        else {
LABEL_60:
        }
          *(void *)uint64_t v38 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v38;
    }
  }
}

char *sub_17E3F2C(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  char v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 48);
    *char v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 52);
    *char v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v13 = *(int *)(a1 + 56);
    *char v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unint64_t v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v16 = *(unsigned int *)(a1 + 32);
  if ((int)v16 >= 1)
  {
    uint64_t v17 = 0;
    uint64_t v18 = 8 * v16;
    do
    {
      int v19 = *(void **)(*(void *)(a1 + 40) + v17 + 8);
      if (*((char *)v19 + 23) < 0)
      {
        int64_t v20 = v19[1];
        if (v20 > 127) {
          goto LABEL_33;
        }
      }
      else
      {
        int64_t v20 = *((unsigned __int8 *)v19 + 23);
      }
      if (*(void *)a3 - (void)v4 + 14 >= v20)
      {
        *char v4 = 34;
        v4[1] = v20;
        if (*((char *)v19 + 23) < 0) {
          int v19 = (void *)*v19;
        }
        unint64_t v21 = v4 + 2;
        memcpy(v21, v19, v20);
        char v4 = &v21[v20];
        goto LABEL_31;
      }
LABEL_33:
      char v4 = (char *)sub_188A868(a3, 4, (uint64_t)v19, v4);
LABEL_31:
      v17 += 8;
    }
    while (v18 != v17);
  }
  uint64_t v22 = *(void *)(a1 + 8);
  if ((v22 & 1) == 0) {
    return v4;
  }
  unint64_t v24 = v22 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v24 + 31) < 0)
  {
    uint64_t v25 = *(void **)(v24 + 8);
    uint64_t v26 = *(void *)(v24 + 16);
  }
  else
  {
    uint64_t v25 = (void *)(v24 + 8);
    LODWORD(v26) = *(unsigned __int8 *)(v24 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v26)
  {
    uint64_t v27 = (int)v26;
    memcpy(v4, v25, (int)v26);
    v4 += v27;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v25, v26, v4);
}

uint64_t sub_17E420C(uint64_t a1)
{
  if ((~*(_DWORD *)(a1 + 16) & 7) != 0)
  {
    uint64_t v4 = sub_1462240((_DWORD *)a1);
  }
  else
  {
    int v2 = *(_DWORD *)(a1 + 48);
    if (v2 < 0) {
      uint64_t v3 = 13;
    }
    else {
      uint64_t v3 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 3;
    }
    int v5 = *(_DWORD *)(a1 + 52);
    if (v5 < 0) {
      uint64_t v6 = 10;
    }
    else {
      uint64_t v6 = (9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6;
    }
    int v7 = *(_DWORD *)(a1 + 56);
    if (v7 < 0) {
      uint64_t v8 = 10;
    }
    else {
      uint64_t v8 = (9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6;
    }
    uint64_t v4 = v3 + v6 + v8;
  }
  uint64_t v9 = *(unsigned int *)(a1 + 32);
  uint64_t result = v4 + v9;
  if ((int)v9 >= 1)
  {
    unint64_t v11 = (uint64_t *)(*(void *)(a1 + 40) + 8);
    do
    {
      uint64_t v12 = *v11++;
      uint64_t v13 = *(unsigned __int8 *)(v12 + 23);
      uint64_t v14 = *(void *)(v12 + 8);
      if ((v13 & 0x80u) == 0) {
        uint64_t v14 = v13;
      }
      result += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      --v9;
    }
    while (v9);
  }
  uint64_t v15 = *(void *)(a1 + 8);
  if (v15)
  {
    unint64_t v16 = v15 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v16 + 31) < 0) {
      uint64_t v17 = *(void *)(v16 + 16);
    }
    else {
      uint64_t v17 = *(unsigned __int8 *)(v16 + 31);
    }
    result += v17;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

BOOL sub_17E4354(uint64_t a1)
{
  return (~*(_DWORD *)(a1 + 16) & 7) == 0;
}

void *sub_17E4368@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.SiriSearchParameters.SearchSubstringDescriptor");
}

uint64_t sub_17E4378(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)a1 = off_24DE098;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  int v5 = (uint64_t *)(a1 + 24);
  *(_DWORD *)(a1 + 44) = 0;
  *(void *)(a1 + 28) = 0;
  *(void *)(a1 + 36) = 0;
  *(void *)(a1 + 20) = 0;
  int v6 = *(_DWORD *)(a2 + 32);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 40);
    uint64_t v8 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_1879170(v5, v8, (uint64_t *)(v7 + 8), v6, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v9 = *(_DWORD *)(a1 + 32) + v6;
    *(_DWORD *)(a1 + 32) = v9;
    unint64_t v10 = *(int **)(a1 + 40);
    if (*v10 < v9) {
      *unint64_t v10 = v9;
    }
  }
  uint64_t v11 = *(void *)(a2 + 8);
  if (v11) {
    sub_188B4F8(v4, (v11 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 48) = &qword_2550250;
  int v12 = *(_DWORD *)(a2 + 16);
  if (v12)
  {
    uint64_t v13 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v13 = (uint64_t *)*v13;
    }
    sub_1881DF4((std::string **)(a1 + 48), (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL), v13);
    int v12 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 56) = &qword_2550250;
  if ((v12 & 2) != 0)
  {
    uint64_t v14 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v14 = (uint64_t *)*v14;
    }
    sub_1881DF4((std::string **)(a1 + 56), (long long *)(*(void *)(a2 + 56) & 0xFFFFFFFFFFFFFFFELL), v14);
  }
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  return a1;
}

void sub_17E44D4(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_17E4518(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_9;
    }
  }
  else if (v4)
  {
    goto LABEL_9;
  }
  int v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 56) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 56));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_9:
  sub_1877A38(a1 + 24);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17E45DC(uint64_t a1)
{
  sub_17E4518(a1);

  operator delete();
}

uint64_t sub_17E4614(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_17E4614(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  int v5 = *(_DWORD *)(v1 + 16);
  if ((v5 & 3) != 0)
  {
    if (v5)
    {
      unint64_t v6 = *(void *)(v1 + 48) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v6 + 23) < 0)
      {
        **(unsigned char **)unint64_t v6 = 0;
        *(void *)(v6 + 8) = 0;
        if ((v5 & 2) == 0) {
          goto LABEL_15;
        }
        goto LABEL_10;
      }
      *(unsigned char *)unint64_t v6 = 0;
      *(unsigned char *)(v6 + 23) = 0;
    }
    if ((v5 & 2) == 0) {
      goto LABEL_15;
    }
LABEL_10:
    unint64_t v7 = *(void *)(v1 + 56) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v7 + 23) < 0)
    {
      **(unsigned char **)unint64_t v7 = 0;
      *(void *)(v7 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v7 = 0;
      *(unsigned char *)(v7 + 23) = 0;
    }
  }
LABEL_15:
  char v9 = *(unsigned char *)(v1 + 8);
  uint64_t v8 = v1 + 8;
  *(_DWORD *)(v8 + 56) = 0;
  *(_DWORD *)(v8 + 8) = 0;
  if (v9)
  {
    return sub_188B4AC((uint64_t *)v8);
  }
  return result;
}

uint64_t sub_17E4700(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)BOOL v30 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v30, a3[11].i32[1])) {
    return *(void *)v30;
  }
  unint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    unint64_t v7 = (char *)(*(void *)v30 + 1);
    unsigned int v8 = **(unsigned char **)v30;
    if ((char)**(unsigned char **)v30 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        unint64_t v7 = (char *)sub_188C180(*(uint64_t *)v30, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        unint64_t v7 = (char *)(*(void *)v30 + 2);
      }
    }
    *(void *)BOOL v30 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 8) {
          goto LABEL_35;
        }
        uint64_t v11 = v7 + 1;
        unint64_t v12 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v13 = *v11;
        int v14 = v12 + (v13 << 7);
        unint64_t v12 = (v14 - 128);
        if (v13 < 0)
        {
          *(void *)BOOL v30 = sub_188C138((uint64_t)v7, (v14 - 128));
          if (!*(void *)v30) {
            return 0;
          }
          unint64_t v12 = v28;
        }
        else
        {
          uint64_t v11 = v7 + 2;
LABEL_13:
          *(void *)BOOL v30 = v11;
        }
        if (v12 > 3)
        {
          if (*v6) {
            uint64_t v29 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v29 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(1, v12, v29);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 4u;
          *(_DWORD *)(a1 + 64) = v12;
        }
        goto LABEL_43;
      case 2u:
        if (v8 != 18) {
          goto LABEL_35;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v15 = *(void *)(a1 + 8);
        unint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          unint64_t v16 = (uint64_t *)*v16;
        }
        uint64_t v17 = (void *)(a1 + 48);
        goto LABEL_24;
      case 3u:
        if (v8 != 26) {
          goto LABEL_35;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v18 = *(void *)(a1 + 8);
        unint64_t v16 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
        if (v18) {
          unint64_t v16 = (uint64_t *)*v16;
        }
        uint64_t v17 = (void *)(a1 + 56);
LABEL_24:
        int v19 = (std::string *)sub_1880F84(v17, v16);
        int64_t v20 = (void *)sub_188C244(v19, *(char **)v30, (uint64_t)a3);
        goto LABEL_42;
      case 4u:
        if (v8 != 34) {
          goto LABEL_35;
        }
        unint64_t v21 = v7 - 1;
        while (1)
        {
          *(void *)BOOL v30 = v21 + 1;
          uint64_t v22 = *(_DWORD **)(a1 + 40);
          if (v22 && (uint64_t v23 = *(int *)(a1 + 32), (int)v23 < *v22))
          {
            *(_DWORD *)(a1 + 32) = v23 + 1;
            uint64_t v24 = *(void *)&v22[2 * v23 + 2];
          }
          else
          {
            uint64_t v25 = sub_1833E98(*(void *)(a1 + 24));
            uint64_t v24 = sub_188CDC8(a1 + 24, v25);
          }
          unint64_t v21 = (char *)sub_17E4A10(a3, v24);
          *(void *)BOOL v30 = v21;
          if (!v21) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v21 || *v21 != 34) {
            goto LABEL_43;
          }
        }
      default:
LABEL_35:
        if (v8) {
          BOOL v26 = (v8 & 7) == 4;
        }
        else {
          BOOL v26 = 1;
        }
        if (!v26)
        {
          if (*v6)
          {
            uint64_t v27 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v27 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unint64_t v7 = *(char **)v30;
          }
          int64_t v20 = sub_1885AC0(v8, v27, v7, a3);
LABEL_42:
          *(void *)BOOL v30 = v20;
          if (!v20) {
            return 0;
          }
LABEL_43:
          if (sub_11947B8((uint64_t)a3, (char **)v30, a3[11].i32[1])) {
            return *(void *)v30;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return *(void *)v30;
    }
  }
}

uint64_t sub_17E4A10(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17E4700(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_17E4AA0(uint64_t a1, unsigned char *a2, void *a3)
{
  uint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unint64_t v7 = *(int *)(a1 + 64);
    *uint64_t v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  if ((v6 & 2) != 0) {
    uint64_t v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  int v10 = *(_DWORD *)(a1 + 32);
  if (v10)
  {
    for (int i = 0; i != v10; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v12 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *uint64_t v4 = 34;
      unsigned int v13 = *(_DWORD *)(v12 + 20);
      v4[1] = v13;
      if (v13 > 0x7F) {
        int v14 = sub_188A9CC(v13, v4 + 1);
      }
      else {
        int v14 = v4 + 2;
      }
      uint64_t v4 = (unsigned char *)sub_17E4AA0(v12, v14, a3);
    }
  }
  uint64_t v15 = *(void *)(a1 + 8);
  if ((v15 & 1) == 0) {
    return (uint64_t)v4;
  }
  unint64_t v17 = v15 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v17 + 31) < 0)
  {
    uint64_t v18 = *(void **)(v17 + 8);
    uint64_t v19 = *(void *)(v17 + 16);
  }
  else
  {
    uint64_t v18 = (void *)(v17 + 8);
    LODWORD(v19) = *(unsigned __int8 *)(v17 + 31);
  }
  if (*a3 - (void)v4 >= (int)v19)
  {
    uint64_t v20 = (int)v19;
    memcpy(v4, v18, (int)v19);
    v4 += v20;
    return (uint64_t)v4;
  }

  return sub_188A528(a3, (char *)v18, v19, v4);
}

uint64_t sub_17E4CA4(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 4) != 0)
  {
    int v4 = *(_DWORD *)(a1 + 64);
    if (v4 < 0) {
      uint64_t v3 = 11;
    }
    else {
      uint64_t v3 = ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  else
  {
    uint64_t v3 = 0;
  }
  uint64_t v5 = *(int *)(a1 + 32);
  uint64_t v6 = v3 + v5;
  uint64_t v7 = *(void *)(a1 + 40);
  if (v7) {
    unint64_t v8 = (uint64_t *)(v7 + 8);
  }
  else {
    unint64_t v8 = 0;
  }
  if (v5)
  {
    uint64_t v9 = 8 * v5;
    do
    {
      uint64_t v10 = *v8++;
      uint64_t v11 = sub_17E4CA4(v10);
      v6 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6);
      v9 -= 8;
    }
    while (v9);
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 3) != 0)
  {
    if (v2)
    {
      unint64_t v12 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v13 = *(unsigned __int8 *)(v12 + 23);
      uint64_t v14 = *(void *)(v12 + 8);
      if ((v13 & 0x80u) == 0) {
        uint64_t v14 = v13;
      }
      v6 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v2 & 2) != 0)
    {
      unint64_t v15 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v16 = *(unsigned __int8 *)(v15 + 23);
      uint64_t v17 = *(void *)(v15 + 8);
      if ((v16 & 0x80u) == 0) {
        uint64_t v17 = v16;
      }
      v6 += v17 + ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  uint64_t v18 = *(void *)(a1 + 8);
  if (v18)
  {
    unint64_t v20 = v18 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v20 + 31) < 0) {
      uint64_t v21 = *(void *)(v20 + 16);
    }
    else {
      uint64_t v21 = *(unsigned __int8 *)(v20 + 31);
    }
    v6 += v21;
  }
  *(_DWORD *)(a1 + 20) = v6;
  return v6;
}

std::string *sub_17E4E20(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = (std::string *)sub_1879170((uint64_t *)&v3[1], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2]- LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    unint64_t v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 7) != 0)
  {
    if (v9)
    {
      uint64_t v11 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v13 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v13 = (uint64_t *)*v13;
      }
      uint64_t result = sub_1881DF4((std::string **)&v3[2], v11, v13);
      if ((v9 & 2) == 0)
      {
LABEL_7:
        if ((v9 & 4) == 0)
        {
LABEL_9:
          LODWORD(v3->__r_.__value_.__r.__words[2]) |= v9;
          goto LABEL_10;
        }
LABEL_8:
        LODWORD(v3[2].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 64);
        goto LABEL_9;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_7;
    }
    uint64_t v14 = (long long *)(*(void *)(a2 + 56) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    std::string::size_type v15 = v3->__r_.__value_.__l.__size_;
    uint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
    if (v15) {
      uint64_t v16 = (uint64_t *)*v16;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[2].__r_.__value_.__l.__size_, v14, v16);
    if ((v9 & 4) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
LABEL_10:
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

BOOL sub_17E4F88(uint64_t a1)
{
  return (*(unsigned char *)(a1 + 16) & 4) != 0 && sub_1463094(a1 + 24);
}

void *sub_17E4FA0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.SiriSearchParameters.IndexQueryNode");
}

uint64_t sub_17E4FB0(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (uint64_t *)(a1 + 8);
  *(void *)a1 = off_24DE118;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v5 = a1 + 24;
  *(_DWORD *)(a1 + 44) = 0;
  *(void *)(a1 + 28) = 0;
  *(void *)(a1 + 36) = 0;
  *(void *)(a1 + 20) = 0;
  int v6 = *(_DWORD *)(a2 + 32);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 40);
    unint64_t v8 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_188FB98(v5, v8, (const std::string **)(v7 + 8), v6, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v9 = *(_DWORD *)(a1 + 32) + v6;
    *(_DWORD *)(a1 + 32) = v9;
    uint64_t v10 = *(int **)(a1 + 40);
    if (*v10 < v9) {
      *uint64_t v10 = v9;
    }
  }
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  int v11 = *(_DWORD *)(a2 + 56);
  if (v11)
  {
    uint64_t v12 = *(void *)(a2 + 64);
    uint64_t v13 = (std::string **)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_18791FC((uint64_t *)(a1 + 48), v13, (uint64_t *)(v12 + 8), v11, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v14 = *(_DWORD *)(a1 + 56) + v11;
    *(_DWORD *)(a1 + 56) = v14;
    std::string::size_type v15 = *(int **)(a1 + 64);
    if (*v15 < v14) {
      int *v15 = v14;
    }
  }
  uint64_t v16 = *(void *)(a2 + 8);
  if (v16) {
    sub_188B4F8(v4, (v16 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 72) = &qword_2550250;
  int v17 = *(_DWORD *)(a2 + 16);
  if (v17)
  {
    uint64_t v18 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v18 = (uint64_t *)*v18;
    }
    sub_1881DF4((std::string **)(a1 + 72), (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL), v18);
    int v17 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 80) = &qword_2550250;
  if ((v17 & 2) != 0)
  {
    uint64_t v19 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v19 = (uint64_t *)*v19;
    }
    sub_1881DF4((std::string **)(a1 + 80), (long long *)(*(void *)(a2 + 80) & 0xFFFFFFFFFFFFFFFELL), v19);
    int v17 = *(_DWORD *)(a2 + 16);
  }
  if ((v17 & 4) != 0) {
    operator new();
  }
  *(void *)(a1 + 88) = 0;
  if ((v17 & 8) != 0) {
    operator new();
  }
  *(void *)(a1 + 96) = 0;
  if ((v17 & 0x10) != 0) {
    operator new();
  }
  *(void *)(a1 + 104) = 0;
  if ((v17 & 0x20) != 0) {
    operator new();
  }
  *(void *)(a1 + 112) = 0;
  uint64_t v20 = *(void *)(a2 + 120);
  *(_DWORD *)(a1 + 128) = *(_DWORD *)(a2 + 128);
  *(void *)(a1 + 120) = v20;
  return a1;
}

void sub_17E5264()
{
}

void *sub_17E5314(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_17E53AC((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  sub_1877AB8(a1 + 6);
  sub_1889DE8(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void ***sub_17E53AC(uint64_t a1)
{
  uint64_t v3 = *(uint64_t **)(a1 + 72);
  uint64_t v2 = (void ***)(a1 + 72);
  if (v3 != &qword_2550250) {
    sub_1881C6C(v2);
  }
  uint64_t result = (void ***)(a1 + 80);
  if (*(uint64_t **)(a1 + 80) != &qword_2550250) {
    sub_1881C6C(result);
  }
  if ((uint64_t (***)())a1 != &off_254B538)
  {
    uint64_t v5 = *(void *)(a1 + 88);
    if (v5)
    {
      sub_179203C(v5);
      operator delete();
    }
    if (*(void *)(a1 + 96))
    {
      sub_15B8F7C();
      operator delete();
    }
    uint64_t v6 = *(void *)(a1 + 104);
    if (v6)
    {
      sub_17E4518(v6);
      operator delete();
    }
    uint64_t result = *(void ****)(a1 + 112);
    if (result)
    {
      sub_1793030((uint64_t)result);
      operator delete();
    }
  }
  return result;
}

void sub_17E54A4(void *a1)
{
  sub_17E5314(a1);

  operator delete();
}

uint64_t sub_17E54DC(uint64_t a1)
{
  uint64_t result = sub_188CC00(a1 + 24);
  uint64_t v3 = *(unsigned int *)(a1 + 56);
  if ((int)v3 >= 1)
  {
    int v4 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = sub_17E3B28(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 56) = 0;
  }
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 0x3F) == 0) {
    goto LABEL_13;
  }
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      goto LABEL_8;
    }
LABEL_25:
    unint64_t v10 = *(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v10 + 23) < 0)
    {
      **(unsigned char **)unint64_t v10 = 0;
      *(void *)(v10 + 8) = 0;
      if ((v6 & 4) != 0) {
        goto LABEL_29;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v10 = 0;
      *(unsigned char *)(v10 + 23) = 0;
      if ((v6 & 4) != 0) {
        goto LABEL_29;
      }
    }
LABEL_9:
    if ((v6 & 8) == 0) {
      goto LABEL_10;
    }
LABEL_30:
    uint64_t result = sub_15B8FB8(*(void *)(a1 + 96));
    if ((v6 & 0x10) == 0)
    {
LABEL_11:
      if ((v6 & 0x20) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }
    goto LABEL_31;
  }
  unint64_t v9 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v9 + 23) < 0)
  {
    **(unsigned char **)unint64_t v9 = 0;
    *(void *)(v9 + 8) = 0;
    if ((v6 & 2) != 0) {
      goto LABEL_25;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v9 = 0;
    *(unsigned char *)(v9 + 23) = 0;
    if ((v6 & 2) != 0) {
      goto LABEL_25;
    }
  }
LABEL_8:
  if ((v6 & 4) == 0) {
    goto LABEL_9;
  }
LABEL_29:
  uint64_t result = (uint64_t)sub_179212C(*(unsigned char **)(a1 + 88));
  if ((v6 & 8) != 0) {
    goto LABEL_30;
  }
LABEL_10:
  if ((v6 & 0x10) == 0) {
    goto LABEL_11;
  }
LABEL_31:
  uint64_t result = sub_17E4614(*(void *)(a1 + 104));
  if ((v6 & 0x20) != 0) {
LABEL_12:
  }
    uint64_t result = sub_1793178(*(void *)(a1 + 112));
LABEL_13:
  if ((v6 & 0xC0) != 0)
  {
    *(unsigned char *)(a1 + 124) = 0;
    *(_DWORD *)(a1 + 120) = 0;
  }
  if ((v6 & 0x300) != 0)
  {
    *(unsigned char *)(a1 + 125) = 0;
    *(_DWORD *)(a1 + 128) = 10;
  }
  char v8 = *(unsigned char *)(a1 + 8);
  uint64_t v7 = a1 + 8;
  *(_DWORD *)(v7 + 8) = 0;
  if (v8)
  {
    return sub_188B4AC((uint64_t *)v7);
  }
  return result;
}

uint64_t sub_17E563C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)v63 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v63, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  char v8 = (uint64_t **)(a1 + 24);
  while (2)
  {
    unint64_t v9 = (unsigned __int8 *)(*(void *)v63 + 1);
    unsigned int v10 = **(unsigned char **)v63;
    if ((char)**(unsigned char **)v63 < 0)
    {
      unsigned int v11 = v10 + (*v9 << 7);
      unsigned int v10 = v11 - 128;
      if ((char)*v9 < 0)
      {
        unint64_t v9 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v63, v11 - 128);
        unsigned int v10 = v12;
      }
      else
      {
        unint64_t v9 = (unsigned __int8 *)(*(void *)v63 + 2);
      }
    }
    *(void *)v63 = v9;
    switch(v10 >> 3)
    {
      case 1u:
        if (v10 != 8) {
          goto LABEL_86;
        }
        uint64_t v13 = (char *)(v9 + 1);
        unint64_t v14 = *v9;
        if (((char)*v9 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v15 = *v13;
        int v16 = v14 + (v15 << 7);
        unint64_t v14 = (v16 - 128);
        if (v15 < 0)
        {
          *(void *)v63 = sub_188C138((uint64_t)v9, (v16 - 128));
          if (!*(void *)v63) {
            goto LABEL_111;
          }
          unint64_t v14 = v55;
        }
        else
        {
          uint64_t v13 = (char *)(v9 + 2);
LABEL_13:
          *(void *)v63 = v13;
        }
        if (v14 > 3)
        {
          if (*v7) {
            v62 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            v62 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(1, v14, v62);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 0x40u;
          *(_DWORD *)(a1 + 120) = v14;
        }
        goto LABEL_94;
      case 2u:
        if (v10 != 16) {
          goto LABEL_86;
        }
        v5 |= 0x200u;
        int v17 = (char *)(v9 + 1);
        int v18 = *v9;
        if (((char)*v9 & 0x80000000) == 0) {
          goto LABEL_20;
        }
        int v19 = *v17;
        int v18 = v18 + (v19 << 7) - 128;
        if (v19 < 0)
        {
          uint64_t v56 = sub_188C0D0((uint64_t)v9, v18);
          *(void *)v63 = v56;
          *(_DWORD *)(a1 + 128) = v57;
          if (!v56) {
            goto LABEL_111;
          }
        }
        else
        {
          int v17 = (char *)(v9 + 2);
LABEL_20:
          *(void *)v63 = v17;
          *(_DWORD *)(a1 + 128) = v18;
        }
        goto LABEL_94;
      case 3u:
        if (v10 != 26) {
          goto LABEL_86;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v20 = *(void *)(a1 + 8);
        uint64_t v21 = (uint64_t *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
        if (v20) {
          uint64_t v21 = (uint64_t *)*v21;
        }
        uint64_t v22 = (void *)(a1 + 72);
        goto LABEL_58;
      case 4u:
        if (v10 != 34) {
          goto LABEL_86;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v23 = *(void **)(a1 + 88);
        if (!v23)
        {
          uint64_t v24 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v24 = (void *)*v24;
          }
          uint64_t v23 = sub_18302C8((uint64_t)v24);
          *(void *)(a1 + 88) = v23;
          unint64_t v9 = *(unsigned __int8 **)v63;
        }
        uint64_t v25 = (uint64_t)sub_120FE50(a3, (uint64_t)v23, v9);
        goto LABEL_93;
      case 5u:
        if (v10 != 42) {
          goto LABEL_86;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v26 = *(void *)(a1 + 96);
        if (!v26)
        {
          uint64_t v27 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v27 = (void *)*v27;
          }
          uint64_t v26 = sub_15C1EF4((uint64_t)v27);
          *(void *)(a1 + 96) = v26;
          unint64_t v9 = *(unsigned __int8 **)v63;
        }
        uint64_t v25 = sub_1198E84(a3, v26, v9);
        goto LABEL_93;
      case 6u:
        if (v10 != 50) {
          goto LABEL_86;
        }
        unint64_t v28 = (const std::string::value_type *)(v9 - 1);
        while (1)
        {
          uint64_t v29 = (char *)(v28 + 1);
          *(void *)v63 = v28 + 1;
          BOOL v30 = *(_DWORD **)(a1 + 40);
          if (v30 && (uint64_t v31 = *(int *)(a1 + 32), (int)v31 < *v30))
          {
            *(_DWORD *)(a1 + 32) = v31 + 1;
            unint64_t v32 = *(std::string **)&v30[2 * v31 + 2];
          }
          else
          {
            if (!*v8) {
              operator new();
            }
            void *v34 = v33;
            v34[1] = sub_3A6EDC;
            *uint64_t v33 = 0;
            v33[1] = 0;
            v33[2] = 0;
            unint64_t v32 = (std::string *)sub_188CDC8(a1 + 24, (uint64_t)v33);
            uint64_t v29 = *(char **)v63;
          }
          unint64_t v28 = sub_188C244(v32, v29, (uint64_t)a3);
          *(void *)v63 = v28;
          if (!v28) {
            goto LABEL_111;
          }
          if (*(void *)a3 <= (unint64_t)v28 || *v28 != 50) {
            goto LABEL_94;
          }
        }
      case 7u:
        if (v10 != 56) {
          goto LABEL_86;
        }
        v5 |= 0x80u;
        uint64_t v35 = (char *)(v9 + 1);
        uint64_t v36 = *v9;
        if (((char)*v9 & 0x80000000) == 0) {
          goto LABEL_53;
        }
        int v37 = *v35;
        uint64_t v36 = v36 + (v37 << 7) - 128;
        if (v37 < 0)
        {
          uint64_t v58 = sub_188C138((uint64_t)v9, v36);
          *(void *)v63 = v58;
          *(unsigned char *)(a1 + 124) = v59 != 0;
          if (!v58) {
            goto LABEL_111;
          }
        }
        else
        {
          uint64_t v35 = (char *)(v9 + 2);
LABEL_53:
          *(void *)v63 = v35;
          *(unsigned char *)(a1 + 124) = v36 != 0;
        }
        goto LABEL_94;
      case 8u:
        if (v10 != 66) {
          goto LABEL_86;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v38 = *(void *)(a1 + 8);
        uint64_t v21 = (uint64_t *)(v38 & 0xFFFFFFFFFFFFFFFCLL);
        if (v38) {
          uint64_t v21 = (uint64_t *)*v21;
        }
        uint64_t v22 = (void *)(a1 + 80);
LABEL_58:
        unint64_t v39 = (std::string *)sub_1880F84(v22, v21);
        uint64_t v25 = (uint64_t)sub_188C244(v39, *(char **)v63, (uint64_t)a3);
        goto LABEL_93;
      case 9u:
        if (v10 != 72) {
          goto LABEL_86;
        }
        v5 |= 0x100u;
        uint64_t v40 = (char *)(v9 + 1);
        uint64_t v41 = *v9;
        if (((char)*v9 & 0x80000000) == 0) {
          goto LABEL_63;
        }
        int v42 = *v40;
        uint64_t v41 = v41 + (v42 << 7) - 128;
        if (v42 < 0)
        {
          uint64_t v60 = sub_188C138((uint64_t)v9, v41);
          *(void *)v63 = v60;
          *(unsigned char *)(a1 + 125) = v61 != 0;
          if (!v60) {
            goto LABEL_111;
          }
        }
        else
        {
          uint64_t v40 = (char *)(v9 + 2);
LABEL_63:
          *(void *)v63 = v40;
          *(unsigned char *)(a1 + 125) = v41 != 0;
        }
        goto LABEL_94;
      case 0xAu:
        if (v10 != 82) {
          goto LABEL_86;
        }
        uint64_t v43 = v9 - 1;
        while (1)
        {
          uint64_t v44 = v43 + 1;
          *(void *)v63 = v43 + 1;
          int v45 = *(_DWORD **)(a1 + 64);
          if (v45 && (uint64_t v46 = *(int *)(a1 + 56), (int)v46 < *v45))
          {
            *(_DWORD *)(a1 + 56) = v46 + 1;
            uint64_t v47 = *(void *)&v45[2 * v46 + 2];
          }
          else
          {
            uint64_t v48 = sub_1833DF4(*(void *)(a1 + 48));
            uint64_t v47 = sub_188CDC8(a1 + 48, v48);
            uint64_t v44 = *(unsigned __int8 **)v63;
          }
          uint64_t v43 = (unsigned __int8 *)sub_17E5CD4(a3, v47, v44);
          *(void *)v63 = v43;
          if (!v43) {
            goto LABEL_111;
          }
          if (*(void *)a3 <= (unint64_t)v43 || *v43 != 82) {
            goto LABEL_94;
          }
        }
      case 0xBu:
        if (v10 != 90) {
          goto LABEL_86;
        }
        *(_DWORD *)(a1 + 16) |= 0x10u;
        uint64_t v49 = *(void *)(a1 + 104);
        if (!v49)
        {
          uint64_t v50 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v50 = (void *)*v50;
          }
          uint64_t v49 = sub_1833E98((uint64_t)v50);
          *(void *)(a1 + 104) = v49;
          unint64_t v9 = *(unsigned __int8 **)v63;
        }
        uint64_t v25 = sub_17E4A10(a3, v49, v9);
        goto LABEL_93;
      case 0xCu:
        if (v10 != 98) {
          goto LABEL_86;
        }
        *(_DWORD *)(a1 + 16) |= 0x20u;
        uint64_t v51 = *(void *)(a1 + 112);
        if (!v51)
        {
          v52 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            v52 = (void *)*v52;
          }
          uint64_t v51 = sub_18303E4((uint64_t)v52);
          *(void *)(a1 + 112) = v51;
          unint64_t v9 = *(unsigned __int8 **)v63;
        }
        uint64_t v25 = sub_1797064(a3, v51, v9);
        goto LABEL_93;
      default:
LABEL_86:
        if (v10) {
          BOOL v53 = (v10 & 7) == 4;
        }
        else {
          BOOL v53 = 1;
        }
        if (!v53)
        {
          if (*v7)
          {
            v54 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            v54 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unint64_t v9 = *(unsigned __int8 **)v63;
          }
          uint64_t v25 = (uint64_t)sub_1885AC0(v10, v54, (char *)v9, a3);
LABEL_93:
          *(void *)v63 = v25;
          if (!v25) {
            goto LABEL_111;
          }
LABEL_94:
          if (sub_11947B8((uint64_t)a3, (char **)v63, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v9) {
          a3[10].i32[0] = v10 - 1;
        }
        else {
LABEL_111:
        }
          *(void *)v63 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v63;
    }
  }
}

uint64_t sub_17E5CD4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17E3B90(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_17E5D64(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  int v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 0x40) != 0)
  {
    if (*a3 <= __dst) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 120);
    *int v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x200) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 128);
    *int v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    int v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL), v4);
    if ((v6 & 4) == 0)
    {
LABEL_17:
      if ((v6 & 8) == 0) {
        goto LABEL_32;
      }
      goto LABEL_26;
    }
  }
  else if ((v6 & 4) == 0)
  {
    goto LABEL_17;
  }
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v13 = *(void *)(a1 + 88);
  *int v4 = 34;
  unsigned int v14 = *(_DWORD *)(v13 + 20);
  v4[1] = v14;
  if (v14 > 0x7F) {
    int v15 = sub_188A9CC(v14, v4 + 1);
  }
  else {
    int v15 = v4 + 2;
  }
  int v4 = sub_1792424(v13, (unint64_t)v15, a3);
  if ((v6 & 8) != 0)
  {
LABEL_26:
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v16 = *(void *)(a1 + 96);
    *int v4 = 42;
    unsigned int v17 = *(_DWORD *)(v16 + 20);
    v4[1] = v17;
    if (v17 > 0x7F) {
      int v18 = sub_188A9CC(v17, v4 + 1);
    }
    else {
      int v18 = v4 + 2;
    }
    int v4 = sub_15B9320(v16, v18, a3);
  }
LABEL_32:
  uint64_t v19 = *(unsigned int *)(a1 + 32);
  if ((int)v19 >= 1)
  {
    uint64_t v20 = 0;
    uint64_t v21 = 8 * v19;
    do
    {
      uint64_t v22 = *(void **)(*(void *)(a1 + 40) + v20 + 8);
      if (*((char *)v22 + 23) < 0)
      {
        int64_t v23 = v22[1];
        if (v23 > 127) {
          goto LABEL_43;
        }
      }
      else
      {
        int64_t v23 = *((unsigned __int8 *)v22 + 23);
      }
      if ((uint64_t)(*a3 - (void)v4 + 14) >= v23)
      {
        *int v4 = 50;
        v4[1] = v23;
        if (*((char *)v22 + 23) < 0) {
          uint64_t v22 = (void *)*v22;
        }
        uint64_t v24 = v4 + 2;
        memcpy(v24, v22, v23);
        int v4 = &v24[v23];
        goto LABEL_41;
      }
LABEL_43:
      int v4 = (char *)sub_188A868(a3, 6, (uint64_t)v22, v4);
LABEL_41:
      v20 += 8;
    }
    while (v21 != v20);
  }
  if ((v6 & 0x80) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v25 = *(unsigned char *)(a1 + 124);
    *int v4 = 56;
    v4[1] = v25;
    v4 += 2;
    if ((v6 & 2) == 0)
    {
LABEL_46:
      if ((v6 & 0x100) == 0) {
        goto LABEL_55;
      }
      goto LABEL_52;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_46;
  }
  int v4 = sub_117A0AC(a3, 8, (const void **)(*(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x100) == 0) {
    goto LABEL_55;
  }
LABEL_52:
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v26 = *(unsigned char *)(a1 + 125);
  *int v4 = 72;
  v4[1] = v26;
  v4 += 2;
LABEL_55:
  int v27 = *(_DWORD *)(a1 + 56);
  if (v27)
  {
    for (int i = 0; i != v27; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v29 = *(void *)(*(void *)(a1 + 64) + 8 * i + 8);
      *int v4 = 82;
      unsigned int v30 = *(_DWORD *)(v29 + 20);
      v4[1] = v30;
      if (v30 > 0x7F) {
        uint64_t v31 = sub_188A9CC(v30, v4 + 1);
      }
      else {
        uint64_t v31 = v4 + 2;
      }
      int v4 = sub_17E3F2C(v29, (unint64_t)v31, a3);
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v32 = *(void *)(a1 + 104);
    *int v4 = 90;
    unsigned int v33 = *(_DWORD *)(v32 + 20);
    v4[1] = v33;
    if (v33 > 0x7F) {
      int v34 = sub_188A9CC(v33, v4 + 1);
    }
    else {
      int v34 = v4 + 2;
    }
    int v4 = (char *)sub_17E4AA0(v32, v34, a3);
  }
  if ((v6 & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v35 = *(void *)(a1 + 112);
    *int v4 = 98;
    unsigned int v36 = *(_DWORD *)(v35 + 20);
    v4[1] = v36;
    if (v36 > 0x7F) {
      int v37 = sub_188A9CC(v36, v4 + 1);
    }
    else {
      int v37 = v4 + 2;
    }
    int v4 = sub_1793774(v35, v37, a3);
  }
  uint64_t v38 = *(void *)(a1 + 8);
  if ((v38 & 1) == 0) {
    return v4;
  }
  unint64_t v40 = v38 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v40 + 31) < 0)
  {
    uint64_t v41 = *(void **)(v40 + 8);
    uint64_t v42 = *(void *)(v40 + 16);
  }
  else
  {
    uint64_t v41 = (void *)(v40 + 8);
    LODWORD(v42) = *(unsigned __int8 *)(v40 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v42)
  {
    uint64_t v43 = (int)v42;
    memcpy(v4, v41, (int)v42);
    v4 += v43;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v41, v42, v4);
}

uint64_t sub_17E62A4(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  if ((int)v2 < 1)
  {
    uint64_t v4 = *(unsigned int *)(a1 + 32);
  }
  else
  {
    uint64_t v3 = (uint64_t *)(*(void *)(a1 + 40) + 8);
    uint64_t v4 = *(unsigned int *)(a1 + 32);
    do
    {
      uint64_t v5 = *v3++;
      uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
      uint64_t v7 = *(void *)(v5 + 8);
      if ((v6 & 0x80u) == 0) {
        uint64_t v7 = v6;
      }
      v4 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      --v2;
    }
    while (v2);
  }
  uint64_t v8 = *(int *)(a1 + 56);
  uint64_t v9 = v4 + v8;
  uint64_t v10 = *(void *)(a1 + 64);
  if (v10) {
    unsigned int v11 = (uint64_t *)(v10 + 8);
  }
  else {
    unsigned int v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_17E420C(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  int v15 = *(_DWORD *)(a1 + 16);
  if ((_BYTE)v15)
  {
    if (v15)
    {
      unint64_t v21 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v22 = *(unsigned __int8 *)(v21 + 23);
      uint64_t v23 = *(void *)(v21 + 8);
      if ((v22 & 0x80u) == 0) {
        uint64_t v23 = v22;
      }
      v9 += v23 + ((9 * (__clz(v23 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v15 & 2) == 0)
      {
LABEL_17:
        if ((v15 & 4) == 0) {
          goto LABEL_18;
        }
        goto LABEL_41;
      }
    }
    else if ((v15 & 2) == 0)
    {
      goto LABEL_17;
    }
    unint64_t v24 = *(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v25 = *(unsigned __int8 *)(v24 + 23);
    uint64_t v26 = *(void *)(v24 + 8);
    if ((v25 & 0x80u) == 0) {
      uint64_t v26 = v25;
    }
    v9 += v26 + ((9 * (__clz(v26 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v15 & 4) == 0)
    {
LABEL_18:
      if ((v15 & 8) == 0) {
        goto LABEL_19;
      }
      goto LABEL_42;
    }
LABEL_41:
    uint64_t v27 = sub_1792638(*(void *)(a1 + 88));
    v9 += v27 + ((9 * (__clz(v27 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v15 & 8) == 0)
    {
LABEL_19:
      if ((v15 & 0x10) == 0) {
        goto LABEL_20;
      }
      goto LABEL_43;
    }
LABEL_42:
    uint64_t v28 = sub_15B956C(*(void *)(a1 + 96));
    v9 += v28 + ((9 * (__clz(v28 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v15 & 0x10) == 0)
    {
LABEL_20:
      if ((v15 & 0x20) == 0) {
        goto LABEL_21;
      }
      goto LABEL_44;
    }
LABEL_43:
    uint64_t v29 = sub_17E4CA4(*(void *)(a1 + 104));
    v9 += v29 + ((9 * (__clz(v29 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v15 & 0x20) == 0)
    {
LABEL_21:
      if ((v15 & 0x40) == 0) {
        goto LABEL_26;
      }
LABEL_22:
      int v16 = *(_DWORD *)(a1 + 120);
      uint64_t v17 = ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if (v16 >= 0) {
        uint64_t v18 = v17;
      }
      else {
        uint64_t v18 = 11;
      }
      v9 += v18;
LABEL_26:
      if ((v15 & 0x80) != 0) {
        v9 += 2;
      }
      goto LABEL_28;
    }
LABEL_44:
    uint64_t v30 = sub_17939B8(*(void *)(a1 + 112));
    v9 += v30 + ((9 * (__clz(v30 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v15 & 0x40) == 0) {
      goto LABEL_26;
    }
    goto LABEL_22;
  }
LABEL_28:
  if ((v15 & 0x300) != 0)
  {
    if ((v15 & 0x100) != 0) {
      v9 += 2;
    }
    if ((v15 & 0x200) != 0) {
      v9 += ((9 * (__clz(*(_DWORD *)(a1 + 128) | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  uint64_t v19 = *(void *)(a1 + 8);
  if (v19)
  {
    unint64_t v31 = v19 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v31 + 31) < 0) {
      uint64_t v32 = *(void *)(v31 + 16);
    }
    else {
      uint64_t v32 = *(unsigned __int8 *)(v31 + 31);
    }
    v9 += v32;
  }
  *(_DWORD *)(a1 + 20) = v9;
  return v9;
}

void sub_17E659C(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (const std::string **)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_188FB98(a1 + 24, v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    uint64_t v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    unsigned int v11 = (std::string **)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_18791FC((uint64_t *)(a1 + 48), v11, v10, v9, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v12 = *(_DWORD *)(a1 + 56) + v9;
    *(_DWORD *)(a1 + 56) = v12;
    uint64_t v13 = *(int **)(a1 + 64);
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 16);
  if ((_BYTE)v14)
  {
    if (v14)
    {
      int v16 = (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v17 = *(void *)(a1 + 8);
      uint64_t v18 = (uint64_t *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
      if (v17) {
        uint64_t v18 = (uint64_t *)*v18;
      }
      sub_1881DF4((std::string **)(a1 + 72), v16, v18);
      if ((v14 & 2) == 0)
      {
LABEL_10:
        if ((v14 & 4) == 0) {
          goto LABEL_11;
        }
        goto LABEL_34;
      }
    }
    else if ((v14 & 2) == 0)
    {
      goto LABEL_10;
    }
    uint64_t v19 = (long long *)(*(void *)(a2 + 80) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v20 = *(void *)(a1 + 8);
    unint64_t v21 = (uint64_t *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
    if (v20) {
      unint64_t v21 = (uint64_t *)*v21;
    }
    sub_1881DF4((std::string **)(a1 + 80), v19, v21);
    if ((v14 & 4) == 0)
    {
LABEL_11:
      if ((v14 & 8) == 0) {
        goto LABEL_12;
      }
      goto LABEL_42;
    }
LABEL_34:
    *(_DWORD *)(a1 + 16) |= 4u;
    uint64_t v22 = *(void **)(a1 + 88);
    if (!v22)
    {
      uint64_t v23 = *(void *)(a1 + 8);
      unint64_t v24 = (void *)(v23 & 0xFFFFFFFFFFFFFFFCLL);
      if (v23) {
        unint64_t v24 = (void *)*v24;
      }
      uint64_t v22 = sub_18302C8((uint64_t)v24);
      *(void *)(a1 + 88) = v22;
    }
    if (*(void *)(a2 + 88)) {
      uint64_t v25 = *(uint64_t (****)())(a2 + 88);
    }
    else {
      uint64_t v25 = &off_2549800;
    }
    sub_1792730((uint64_t)v22, (uint64_t)v25);
    if ((v14 & 8) == 0)
    {
LABEL_12:
      if ((v14 & 0x10) == 0) {
        goto LABEL_13;
      }
      goto LABEL_50;
    }
LABEL_42:
    *(_DWORD *)(a1 + 16) |= 8u;
    uint64_t v26 = *(std::string **)(a1 + 96);
    if (!v26)
    {
      uint64_t v27 = *(void *)(a1 + 8);
      uint64_t v28 = (void *)(v27 & 0xFFFFFFFFFFFFFFFCLL);
      if (v27) {
        uint64_t v28 = (void *)*v28;
      }
      uint64_t v26 = (std::string *)sub_15C1EF4((uint64_t)v28);
      *(void *)(a1 + 96) = v26;
    }
    if (*(void *)(a2 + 96)) {
      uint64_t v29 = *(uint64_t (****)())(a2 + 96);
    }
    else {
      uint64_t v29 = &off_253F4C8;
    }
    sub_15B9698(v26, (uint64_t)v29);
    if ((v14 & 0x10) == 0)
    {
LABEL_13:
      if ((v14 & 0x20) == 0) {
        goto LABEL_14;
      }
      goto LABEL_58;
    }
LABEL_50:
    *(_DWORD *)(a1 + 16) |= 0x10u;
    uint64_t v30 = *(std::string **)(a1 + 104);
    if (!v30)
    {
      uint64_t v31 = *(void *)(a1 + 8);
      uint64_t v32 = (void *)(v31 & 0xFFFFFFFFFFFFFFFCLL);
      if (v31) {
        uint64_t v32 = (void *)*v32;
      }
      uint64_t v30 = (std::string *)sub_1833E98((uint64_t)v32);
      *(void *)(a1 + 104) = v30;
    }
    if (*(void *)(a2 + 104)) {
      unsigned int v33 = *(uint64_t (****)())(a2 + 104);
    }
    else {
      unsigned int v33 = &off_254B4F0;
    }
    sub_17E4E20(v30, (uint64_t)v33);
    if ((v14 & 0x20) == 0)
    {
LABEL_14:
      if ((v14 & 0x40) == 0) {
        goto LABEL_15;
      }
      goto LABEL_66;
    }
LABEL_58:
    *(_DWORD *)(a1 + 16) |= 0x20u;
    int v34 = *(std::string **)(a1 + 112);
    if (!v34)
    {
      uint64_t v35 = *(void *)(a1 + 8);
      unsigned int v36 = (void *)(v35 & 0xFFFFFFFFFFFFFFFCLL);
      if (v35) {
        unsigned int v36 = (void *)*v36;
      }
      int v34 = (std::string *)sub_18303E4((uint64_t)v36);
      *(void *)(a1 + 112) = v34;
    }
    if (*(void *)(a2 + 112)) {
      int v37 = *(uint64_t (****)())(a2 + 112);
    }
    else {
      int v37 = &off_2549858;
    }
    sub_1793C44(v34, (uint64_t)v37);
    if ((v14 & 0x40) == 0)
    {
LABEL_15:
      if ((v14 & 0x80) == 0)
      {
LABEL_17:
        *(_DWORD *)(a1 + 16) |= v14;
        goto LABEL_18;
      }
LABEL_16:
      *(unsigned char *)(a1 + 124) = *(unsigned char *)(a2 + 124);
      goto LABEL_17;
    }
LABEL_66:
    *(_DWORD *)(a1 + 120) = *(_DWORD *)(a2 + 120);
    if ((v14 & 0x80) == 0) {
      goto LABEL_17;
    }
    goto LABEL_16;
  }
LABEL_18:
  if ((v14 & 0x300) != 0)
  {
    if ((v14 & 0x100) != 0) {
      *(unsigned char *)(a1 + 125) = *(unsigned char *)(a2 + 125);
    }
    if ((v14 & 0x200) != 0) {
      *(_DWORD *)(a1 + 128) = *(_DWORD *)(a2 + 128);
    }
    *(_DWORD *)(a1 + 16) |= v14;
  }
  uint64_t v15 = *(void *)(a2 + 8);
  if (v15)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v15 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

BOOL sub_17E68E4(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 56);
  while ((int)v2 >= 1)
  {
    uint64_t v3 = *(void *)(*(void *)(a1 + 64) + 8 * v2--);
    if ((~*(_DWORD *)(v3 + 16) & 7) != 0) {
      return 0;
    }
  }
  int v5 = *(_DWORD *)(a1 + 16);
  if ((v5 & 4) != 0)
  {
    uint64_t v6 = *(void *)(a1 + 88);
    if (*(unsigned char *)(v6 + 16))
    {
      BOOL result = sub_15B1FC0(*(void *)(v6 + 24));
      if (!result) {
        return result;
      }
      int v5 = *(_DWORD *)(a1 + 16);
    }
  }
  if ((v5 & 8) != 0)
  {
    BOOL result = sub_15B9824(*(void *)(a1 + 96));
    if (!result) {
      return result;
    }
    int v5 = *(_DWORD *)(a1 + 16);
  }
  if ((v5 & 0x10) == 0) {
    return 1;
  }
  uint64_t v7 = *(void *)(a1 + 104);
  if ((*(unsigned char *)(v7 + 16) & 4) == 0) {
    return 0;
  }
  BOOL result = sub_1463094(v7 + 24);
  if (result) {
    return 1;
  }
  return result;
}

void *sub_17E6990@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.SiriSearchParameters");
}

uint64_t sub_17E69A0(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (uint64_t *)(a1 + 8);
  *(void *)a1 = off_24DE198;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  int v5 = (uint64_t *)(a1 + 24);
  *(_DWORD *)(a1 + 44) = 0;
  *(void *)(a1 + 28) = 0;
  *(void *)(a1 + 36) = 0;
  *(void *)(a1 + 20) = 0;
  int v6 = *(_DWORD *)(a2 + 32);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 40);
    uint64_t v8 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_1878644(v5, v8, (uint64_t *)(v7 + 8), v6, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v9 = *(_DWORD *)(a1 + 32) + v6;
    *(_DWORD *)(a1 + 32) = v9;
    uint64_t v10 = *(int **)(a1 + 40);
    if (*v10 < v9) {
      *uint64_t v10 = v9;
    }
  }
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  int v11 = *(_DWORD *)(a2 + 56);
  if (v11)
  {
    uint64_t v12 = *(void *)(a2 + 64);
    uint64_t v13 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_187873C((uint64_t *)(a1 + 48), v13, (uint64_t *)(v12 + 8), v11, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v14 = *(_DWORD *)(a1 + 56) + v11;
    *(_DWORD *)(a1 + 56) = v14;
    uint64_t v15 = *(int **)(a1 + 64);
    if (*v15 < v14) {
      int *v15 = v14;
    }
  }
  uint64_t v16 = *(void *)(a2 + 8);
  if (v16) {
    sub_188B4F8(v4, (v16 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  return a1;
}

void sub_17E6B04(_Unwind_Exception *a1)
{
  sub_18770B8(v4);
  sub_1876FB8(v3);
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_17E6B5C(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_18770B8(a1 + 6);
  sub_1876FB8(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17E6BE8(void *a1)
{
  sub_17E6B5C(a1);

  operator delete();
}

uint64_t sub_17E6C20(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      BOOL result = sub_1792958(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  uint64_t v5 = *(unsigned int *)(v1 + 56);
  if ((int)v5 >= 1)
  {
    int v6 = (uint64_t *)(*(void *)(v1 + 64) + 8);
    do
    {
      uint64_t v7 = *v6++;
      BOOL result = (uint64_t)sub_1793FF0(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(v1 + 56) = 0;
  }
  char v9 = *(unsigned char *)(v1 + 8);
  uint64_t v8 = v1 + 8;
  *(unsigned char *)(v8 + 64) = 0;
  *(_DWORD *)(v8 + 8) = 0;
  if (v9)
  {
    return sub_188B4AC((uint64_t *)v8);
  }
  return result;
}

char *sub_17E6CCC(uint64_t a1, char *a2, int32x2_t *a3)
{
  unsigned int v33 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v33, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v33 + 1;
    unsigned int v9 = *v33;
    if (*v33 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v33, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v33 + 2;
      }
    }
    unsigned int v33 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 != 3) {
      break;
    }
    if (v9 != 24) {
      goto LABEL_14;
    }
    uint64_t v16 = v8 + 1;
    uint64_t v17 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_26;
    }
    int v18 = *v16;
    uint64_t v17 = v17 + (v18 << 7) - 128;
    if ((v18 & 0x80000000) == 0)
    {
      uint64_t v16 = v8 + 2;
LABEL_26:
      unsigned int v33 = v16;
      *(unsigned char *)(a1 + 72) = v17 != 0;
      int v5 = 1;
      goto LABEL_47;
    }
    uint64_t v31 = (char *)sub_188C138((uint64_t)v8, v17);
    unsigned int v33 = v31;
    *(unsigned char *)(a1 + 72) = v32 != 0;
    int v5 = 1;
    if (!v31) {
      goto LABEL_52;
    }
LABEL_47:
    if (sub_11947B8((uint64_t)a3, &v33, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v12 == 2)
  {
    if (v9 == 18)
    {
      uint64_t v19 = v8 - 1;
      while (1)
      {
        uint64_t v20 = (unsigned __int8 *)(v19 + 1);
        unsigned int v33 = v19 + 1;
        unint64_t v21 = *(_DWORD **)(a1 + 64);
        if (v21 && (uint64_t v22 = *(int *)(a1 + 56), (int)v22 < *v21))
        {
          *(_DWORD *)(a1 + 56) = v22 + 1;
          uint64_t v23 = *(void *)&v21[2 * v22 + 2];
        }
        else
        {
          unint64_t v24 = sub_1830494(*(void *)(a1 + 48));
          uint64_t v23 = sub_188CDC8(a1 + 48, (uint64_t)v24);
          uint64_t v20 = (unsigned __int8 *)v33;
        }
        uint64_t v19 = sub_14F0B44(a3, v23, v20);
        unsigned int v33 = v19;
        if (!v19) {
          goto LABEL_52;
        }
        if (*(void *)a3 <= (unint64_t)v19 || *v19 != 18) {
          goto LABEL_47;
        }
      }
    }
  }
  else if (v12 == 1 && v9 == 10)
  {
    uint64_t v25 = v8 - 1;
    while (1)
    {
      uint64_t v26 = (unsigned __int8 *)(v25 + 1);
      unsigned int v33 = v25 + 1;
      uint64_t v27 = *(_DWORD **)(a1 + 40);
      if (v27 && (uint64_t v28 = *(int *)(a1 + 32), (int)v28 < *v27))
      {
        *(_DWORD *)(a1 + 32) = v28 + 1;
        uint64_t v29 = *(void *)&v27[2 * v28 + 2];
      }
      else
      {
        uint64_t v30 = sub_1830344(*(void *)(a1 + 24));
        uint64_t v29 = sub_188CDC8(a1 + 24, v30);
        uint64_t v26 = (unsigned __int8 *)v33;
      }
      uint64_t v25 = sub_179CFFC(a3, v29, v26);
      unsigned int v33 = v25;
      if (!v25) {
        goto LABEL_52;
      }
      if (*(void *)a3 <= (unint64_t)v25 || *v25 != 10) {
        goto LABEL_47;
      }
    }
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (*v7)
    {
      uint64_t v15 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = v33;
    }
    unsigned int v33 = (char *)sub_1885AC0(v9, v15, v8, a3);
    if (!v33) {
      goto LABEL_52;
    }
    goto LABEL_47;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_52:
  unsigned int v33 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v33;
}

char *sub_17E6FA4(uint64_t a1, char *__dst, void *a3)
{
  int v6 = *(_DWORD *)(a1 + 32);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 40);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unsigned int v10 = __dst + 2;
      }
      __dst = sub_1792B74(v8, v10, a3);
    }
  }
  int v11 = *(_DWORD *)(a1 + 56);
  if (v11)
  {
    for (int j = 0; j != v11; ++j)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v13 = *(void *)(*(void *)(a1 + 64) + 8 * j + 8);
      *__dst = 18;
      unsigned int v14 = *(_DWORD *)(v13 + 44);
      __dst[1] = v14;
      if (v14 > 0x7F) {
        uint64_t v15 = sub_188A9CC(v14, __dst + 1);
      }
      else {
        uint64_t v15 = __dst + 2;
      }
      __dst = sub_1794360(v13, v15, a3);
    }
  }
  if (*(unsigned char *)(a1 + 16))
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    char v16 = *(unsigned char *)(a1 + 72);
    *__dst = 24;
    __dst[1] = v16;
    __dst += 2;
  }
  uint64_t v17 = *(void *)(a1 + 8);
  if ((v17 & 1) == 0) {
    return __dst;
  }
  unint64_t v19 = v17 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v19 + 31) < 0)
  {
    uint64_t v20 = *(void **)(v19 + 8);
    uint64_t v21 = *(void *)(v19 + 16);
  }
  else
  {
    uint64_t v20 = (void *)(v19 + 8);
    LODWORD(v21) = *(unsigned __int8 *)(v19 + 31);
  }
  if (*a3 - (void)__dst >= (int)v21)
  {
    uint64_t v22 = (int)v21;
    memcpy(__dst, v20, (int)v21);
    __dst += v22;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v20, v21, __dst);
}

uint64_t sub_17E71A8(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_1792CB8(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(int *)(a1 + 56);
  uint64_t v9 = v2 + v8;
  uint64_t v10 = *(void *)(a1 + 64);
  if (v10) {
    int v11 = (uint64_t *)(v10 + 8);
  }
  else {
    int v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_1794620(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  if (*(unsigned char *)(a1 + 16)) {
    uint64_t result = v9 + 2;
  }
  else {
    uint64_t result = v9;
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if (v16)
  {
    unint64_t v17 = v16 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v17 + 31) < 0) {
      uint64_t v18 = *(void *)(v17 + 16);
    }
    else {
      uint64_t v18 = *(unsigned __int8 *)(v17 + 31);
    }
    result += v18;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

void sub_17E72B4(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_1878644((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    uint64_t v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    int v11 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_187873C((uint64_t *)(a1 + 48), v11, v10, v9, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v12 = *(_DWORD *)(a1 + 56) + v9;
    *(_DWORD *)(a1 + 56) = v12;
    uint64_t v13 = *(int **)(a1 + 64);
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  if (*(unsigned char *)(a2 + 16))
  {
    char v14 = *(unsigned char *)(a2 + 72);
    *(_DWORD *)(a1 + 16) |= 1u;
    *(unsigned char *)(a1 + 72) = v14;
  }
  uint64_t v15 = *(void *)(a2 + 8);
  if (v15)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v15 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

BOOL sub_17E7404(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 56);
  do
  {
    int v3 = v2;
    if ((int)v2 < 1) {
      break;
    }
    uint64_t v4 = v2 - 1;
    char v5 = sub_18856CC(*(void *)(*(void *)(a1 + 64) + 8 * v2) + 16);
    uint64_t v2 = v4;
  }
  while ((v5 & 1) != 0);
  return v3 < 1;
}

void *sub_17E7460@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.SiriSearchResult");
}

uint64_t sub_17E7470(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_24DE218;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  uint64_t v5 = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 24) = v5;
  return a1;
}

void sub_17E74F4(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_17E7524(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17E7598(void *a1)
{
  sub_17E7524(a1);

  operator delete();
}

uint64_t sub_17E75D0(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 3) != 0)
  {
    *(unsigned char *)(a1 + 32) = 0;
    *(void *)(a1 + 24) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_17E75F8(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v25 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v25 + 1;
    unsigned int v9 = *v25;
    if (*v25 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v25, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v25 + 2;
      }
    }
    uint64_t v25 = v8;
    if (v9 >> 3 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_13;
    }
    v5 |= 2u;
    uint64_t v15 = v8 + 1;
    uint64_t v16 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_25;
    }
    int v17 = *v15;
    uint64_t v16 = v16 + (v17 << 7) - 128;
    if ((v17 & 0x80000000) == 0)
    {
      uint64_t v15 = v8 + 2;
LABEL_25:
      uint64_t v25 = v15;
      *(unsigned char *)(a1 + 32) = v16 != 0;
      goto LABEL_30;
    }
    uint64_t v21 = (char *)sub_188C138((uint64_t)v8, v16);
    uint64_t v25 = v21;
    *(unsigned char *)(a1 + 32) = v22 != 0;
    if (!v21) {
      goto LABEL_39;
    }
LABEL_30:
    if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 >> 3 == 1 && v9 == 8)
  {
    v5 |= 1u;
    uint64_t v18 = v8 + 1;
    uint64_t v19 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_29;
    }
    int v20 = *v18;
    uint64_t v19 = v19 + (v20 << 7) - 128;
    if ((v20 & 0x80000000) == 0)
    {
      uint64_t v18 = v8 + 2;
LABEL_29:
      uint64_t v25 = v18;
      *(void *)(a1 + 24) = v19;
      goto LABEL_30;
    }
    uint64_t v23 = (char *)sub_188C138((uint64_t)v8, v19);
    uint64_t v25 = v23;
    *(void *)(a1 + 24) = v24;
    if (!v23) {
      goto LABEL_39;
    }
    goto LABEL_30;
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      char v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      char v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = v25;
    }
    uint64_t v25 = (char *)sub_1885AC0(v9, v14, v8, a3);
    if (!v25) {
      goto LABEL_39;
    }
    goto LABEL_30;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_39:
  uint64_t v25 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v25;
}

unsigned char *sub_17E77F8(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(void *)(a1 + 24);
    *uint64_t v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v10 = *(unsigned char *)(a1 + 32);
    *uint64_t v4 = 16;
    v4[1] = v10;
    v4 += 2;
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return v4;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    char v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    char v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(v4, v14, (int)v15);
    v4 += v16;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v14, v15, v4);
}

unint64_t sub_17E7958(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) != 0)
  {
    if (v1) {
      unint64_t v2 = ((9 * (__clz(*(void *)(a1 + 24) | 1) ^ 0x3F) + 73) >> 6) + 1;
    }
    else {
      unint64_t v2 = 0;
    }
    if ((v1 & 2) != 0) {
      unint64_t v3 = v2 + 2;
    }
    else {
      unint64_t v3 = v2;
    }
  }
  else
  {
    unint64_t v3 = 0;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v6 + 31) < 0) {
      uint64_t v7 = *(void *)(v6 + 16);
    }
    else {
      uint64_t v7 = *(unsigned __int8 *)(v6 + 31);
    }
    v3 += v7;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_17E79DC(std::string *result, uint64_t a2)
{
  int v2 = *(_DWORD *)(a2 + 16);
  if ((v2 & 3) != 0)
  {
    if (v2) {
      result[1].__r_.__value_.__r.__words[0] = *(void *)(a2 + 24);
    }
    if ((v2 & 2) != 0) {
      result[1].__r_.__value_.__s.__data_[8] = *(unsigned char *)(a2 + 32);
    }
    LODWORD(result->__r_.__value_.__r.__words[2]) |= v2;
  }
  uint64_t v3 = *(void *)(a2 + 8);
  if (v3) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v3 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_17E7A28()
{
  return 1;
}

void *sub_17E7A30@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.LocationDirectedSearchParameters.NearestTransitParameters");
}

uint64_t sub_17E7A40(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (void *)(a1 + 8);
  *(void *)a1 = off_24DE298;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 24) = &qword_2550250;
  int v6 = *(_DWORD *)(a2 + 16);
  if (v6)
  {
    uint64_t v7 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v7 = (uint64_t *)*v7;
    }
    sub_1881DF4((std::string **)(a1 + 24), (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL), v7);
    int v6 = *(_DWORD *)(a2 + 16);
  }
  if ((v6 & 2) != 0) {
    operator new();
  }
  *(void *)(a1 + 32) = 0;
  if ((v6 & 4) != 0) {
    operator new();
  }
  *(void *)(a1 + 40) = 0;
  if ((v6 & 8) != 0) {
    operator new();
  }
  *(void *)(a1 + 48) = 0;
  if ((v6 & 0x10) != 0) {
    operator new();
  }
  *(void *)(a1 + 56) = 0;
  if ((v6 & 0x20) != 0) {
    operator new();
  }
  *(void *)(a1 + 64) = 0;
  uint64_t v8 = *(void *)(a2 + 72);
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  *(void *)(a1 + 72) = v8;
  return a1;
}

void sub_17E7C14()
{
}

void *sub_17E7CBC(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_17E7D40((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void ***sub_17E7D40(uint64_t a1)
{
  uint64_t v3 = *(uint64_t **)(a1 + 24);
  uint64_t result = (void ***)(a1 + 24);
  if (v3 != &qword_2550250) {
    sub_1881C6C(result);
  }
  if ((uint64_t (***)())a1 != &off_254B638)
  {
    uint64_t v4 = *(void *)(a1 + 32);
    if (v4)
    {
      sub_179203C(v4);
      operator delete();
    }
    if (*(void *)(a1 + 40))
    {
      sub_15B0994();
      operator delete();
    }
    uint64_t v5 = *(void **)(a1 + 48);
    if (v5)
    {
      sub_17E7524(v5);
      operator delete();
    }
    uint64_t v6 = *(void *)(a1 + 56);
    if (v6)
    {
      sub_1799B38(v6);
      operator delete();
    }
    uint64_t result = *(void ****)(a1 + 64);
    if (result)
    {
      sub_12925EC((uint64_t)result);
      operator delete();
    }
  }
  return result;
}

void sub_17E7E44(void *a1)
{
  sub_17E7CBC(a1);

  operator delete();
}

uint64_t sub_17E7E7C(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 0x3F) == 0) {
    goto LABEL_9;
  }
  if (v2)
  {
    unint64_t v5 = *(void *)(result + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v5 + 23) < 0)
    {
      **(unsigned char **)unint64_t v5 = 0;
      *(void *)(v5 + 8) = 0;
      if ((v2 & 2) != 0) {
        goto LABEL_19;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v5 = 0;
      *(unsigned char *)(v5 + 23) = 0;
      if ((v2 & 2) != 0) {
        goto LABEL_19;
      }
    }
LABEL_4:
    if ((v2 & 4) == 0) {
      goto LABEL_5;
    }
    goto LABEL_20;
  }
  if ((v2 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_19:
  uint64_t result = (uint64_t)sub_179212C(*(unsigned char **)(result + 32));
  if ((v2 & 4) == 0)
  {
LABEL_5:
    if ((v2 & 8) == 0) {
      goto LABEL_6;
    }
LABEL_21:
    uint64_t result = sub_17E75D0(*(void *)(v1 + 48));
    if ((v2 & 0x10) == 0)
    {
LABEL_7:
      if ((v2 & 0x20) == 0) {
        goto LABEL_9;
      }
      goto LABEL_8;
    }
    goto LABEL_22;
  }
LABEL_20:
  uint64_t result = (uint64_t)sub_15B09D0(*(void *)(v1 + 40));
  if ((v2 & 8) != 0) {
    goto LABEL_21;
  }
LABEL_6:
  if ((v2 & 0x10) == 0) {
    goto LABEL_7;
  }
LABEL_22:
  uint64_t result = sub_17958E8(*(void *)(v1 + 56));
  if ((v2 & 0x20) != 0) {
LABEL_8:
  }
    uint64_t result = sub_1292628(*(void *)(v1 + 64));
LABEL_9:
  if ((v2 & 0xC0) != 0) {
    *(void *)(v1 + 72) = 0;
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 72) = 10;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_17E7F6C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v45 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v45, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (unsigned __int8 *)(*(void *)v45 + 1);
    unsigned int v9 = **(unsigned char **)v45;
    if ((char)**(unsigned char **)v45 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        uint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v45, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (unsigned __int8 *)(*(void *)v45 + 2);
      }
    }
    *(void *)int v45 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_62;
        }
        int v12 = (char *)(v8 + 1);
        unint64_t v13 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        int v15 = v13 + (v14 << 7);
        unint64_t v13 = (v15 - 128);
        if (v14 < 0)
        {
          *(void *)int v45 = sub_188C138((uint64_t)v8, (v15 - 128));
          if (!*(void *)v45) {
            goto LABEL_90;
          }
          unint64_t v13 = v39;
        }
        else
        {
          int v12 = (char *)(v8 + 2);
LABEL_13:
          *(void *)int v45 = v12;
        }
        if (v13 <= 3)
        {
          *(_DWORD *)(a1 + 16) |= 0x40u;
          *(_DWORD *)(a1 + 72) = v13;
          goto LABEL_70;
        }
        if (*v7) {
          uint64_t v43 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          uint64_t v43 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v44 = 1;
        goto LABEL_84;
      case 2u:
        if (v9 != 16) {
          goto LABEL_62;
        }
        v5 |= 0x100u;
        uint64_t v16 = (char *)(v8 + 1);
        int v17 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_20;
        }
        int v18 = *v16;
        int v17 = v17 + (v18 << 7) - 128;
        if (v18 < 0)
        {
          uint64_t v40 = sub_188C0D0((uint64_t)v8, v17);
          *(void *)int v45 = v40;
          *(_DWORD *)(a1 + 80) = v41;
          if (!v40) {
            goto LABEL_90;
          }
        }
        else
        {
          uint64_t v16 = (char *)(v8 + 2);
LABEL_20:
          *(void *)int v45 = v16;
          *(_DWORD *)(a1 + 80) = v17;
        }
        goto LABEL_70;
      case 3u:
        if (v9 != 26) {
          goto LABEL_62;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v19 = *(void *)(a1 + 8);
        int v20 = (uint64_t *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
        if (v19) {
          int v20 = (uint64_t *)*v20;
        }
        uint64_t v21 = (std::string *)sub_1880F84((void *)(a1 + 24), v20);
        uint64_t v22 = (uint64_t)sub_188C244(v21, *(char **)v45, (uint64_t)a3);
        goto LABEL_69;
      case 4u:
        if (v9 != 34) {
          goto LABEL_62;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v23 = *(void **)(a1 + 32);
        if (!v23)
        {
          uint64_t v24 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v24 = (void *)*v24;
          }
          uint64_t v23 = sub_18302C8((uint64_t)v24);
          *(void *)(a1 + 32) = v23;
          uint64_t v8 = *(unsigned __int8 **)v45;
        }
        uint64_t v22 = (uint64_t)sub_120FE50(a3, (uint64_t)v23, v8);
        goto LABEL_69;
      case 5u:
        if (v9 != 42) {
          goto LABEL_62;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v25 = *(void *)(a1 + 40);
        if (!v25)
        {
          uint64_t v26 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v26 = (void *)*v26;
          }
          uint64_t v25 = sub_15C1918((uint64_t)v26);
          *(void *)(a1 + 40) = v25;
          uint64_t v8 = *(unsigned __int8 **)v45;
        }
        uint64_t v22 = (uint64_t)sub_1198F14(a3, v25, v8);
        goto LABEL_69;
      case 6u:
        if (v9 != 48) {
          goto LABEL_62;
        }
        uint64_t v27 = (char *)(v8 + 1);
        unint64_t v13 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_41;
        }
        int v28 = *v27;
        int v29 = v13 + (v28 << 7);
        unint64_t v13 = (v29 - 128);
        if (v28 < 0)
        {
          *(void *)int v45 = sub_188C138((uint64_t)v8, (v29 - 128));
          if (!*(void *)v45) {
            goto LABEL_90;
          }
          unint64_t v13 = v42;
        }
        else
        {
          uint64_t v27 = (char *)(v8 + 2);
LABEL_41:
          *(void *)int v45 = v27;
        }
        if (v13 > 2)
        {
          if (*v7) {
            uint64_t v43 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v43 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          int v44 = 6;
LABEL_84:
          sub_188C020(v44, v13, v43);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 0x80u;
          *(_DWORD *)(a1 + 76) = v13;
        }
        goto LABEL_70;
      case 7u:
        if (v9 != 58) {
          goto LABEL_62;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v30 = *(void *)(a1 + 48);
        if (!v30)
        {
          uint64_t v31 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v31 = (void *)*v31;
          }
          uint64_t v30 = sub_18340B4((uint64_t)v31);
          *(void *)(a1 + 48) = v30;
          uint64_t v8 = *(unsigned __int8 **)v45;
        }
        uint64_t v22 = (uint64_t)sub_17E8454(a3, v30, v8);
        goto LABEL_69;
      case 8u:
        if (v9 != 66) {
          goto LABEL_62;
        }
        *(_DWORD *)(a1 + 16) |= 0x10u;
        uint64_t v32 = *(void *)(a1 + 56);
        if (!v32)
        {
          unsigned int v33 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            unsigned int v33 = (void *)*v33;
          }
          uint64_t v32 = sub_183054C((uint64_t)v33);
          *(void *)(a1 + 56) = v32;
          uint64_t v8 = *(unsigned __int8 **)v45;
        }
        uint64_t v22 = sub_17974F0(a3, v32, v8);
        goto LABEL_69;
      case 9u:
        if (v9 != 74) {
          goto LABEL_62;
        }
        *(_DWORD *)(a1 + 16) |= 0x20u;
        uint64_t v34 = *(void *)(a1 + 64);
        if (!v34)
        {
          uint64_t v35 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v35 = (void *)*v35;
          }
          sub_129E0BC((uint64_t)v35);
          uint64_t v34 = v36;
          *(void *)(a1 + 64) = v36;
          uint64_t v8 = *(unsigned __int8 **)v45;
        }
        uint64_t v22 = (uint64_t)sub_14B20C0(a3, v34, v8);
        goto LABEL_69;
      default:
LABEL_62:
        if (v9) {
          BOOL v37 = (v9 & 7) == 4;
        }
        else {
          BOOL v37 = 1;
        }
        if (!v37)
        {
          if (*v7)
          {
            uint64_t v38 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v38 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = *(unsigned __int8 **)v45;
          }
          uint64_t v22 = (uint64_t)sub_1885AC0(v9, v38, (char *)v8, a3);
LABEL_69:
          *(void *)int v45 = v22;
          if (!v22) {
            goto LABEL_90;
          }
LABEL_70:
          if (sub_11947B8((uint64_t)a3, (char **)v45, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_90:
        }
          *(void *)int v45 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v45;
    }
  }
}

char *sub_17E8454(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17E75F8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_17E84E4(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 0x40) != 0)
  {
    if (*a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 72);
    *char v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x100) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 80);
    *char v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    char v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
    if ((v6 & 2) == 0)
    {
LABEL_17:
      if ((v6 & 4) == 0) {
        goto LABEL_18;
      }
      goto LABEL_27;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_17;
  }
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v13 = *(void *)(a1 + 32);
  *char v4 = 34;
  unsigned int v14 = *(_DWORD *)(v13 + 20);
  v4[1] = v14;
  if (v14 > 0x7F) {
    int v15 = sub_188A9CC(v14, v4 + 1);
  }
  else {
    int v15 = v4 + 2;
  }
  char v4 = sub_1792424(v13, (unint64_t)v15, a3);
  if ((v6 & 4) == 0)
  {
LABEL_18:
    if ((v6 & 0x80) == 0) {
      goto LABEL_39;
    }
    goto LABEL_33;
  }
LABEL_27:
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v16 = *(void *)(a1 + 40);
  *char v4 = 42;
  unsigned int v17 = *(_DWORD *)(v16 + 44);
  v4[1] = v17;
  if (v17 > 0x7F) {
    int v18 = sub_188A9CC(v17, v4 + 1);
  }
  else {
    int v18 = v4 + 2;
  }
  char v4 = sub_15B0C0C(v16, v18, a3);
  if ((v6 & 0x80) != 0)
  {
LABEL_33:
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v19 = *(int *)(a1 + 76);
    *char v4 = 48;
    v4[1] = v19;
    if (v19 > 0x7F)
    {
      v4[1] = v19 | 0x80;
      unint64_t v20 = v19 >> 7;
      v4[2] = v19 >> 7;
      v4 += 3;
      if (v19 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v21 = v20 >> 14;
          v20 >>= 7;
          *v4++ = v20;
        }
        while (v21);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_39:
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v22 = *(void *)(a1 + 48);
    *char v4 = 58;
    unsigned int v23 = *(_DWORD *)(v22 + 20);
    v4[1] = v23;
    if (v23 > 0x7F) {
      uint64_t v24 = sub_188A9CC(v23, v4 + 1);
    }
    else {
      uint64_t v24 = v4 + 2;
    }
    char v4 = sub_17E77F8(v22, (unint64_t)v24, a3);
    if ((v6 & 0x10) == 0)
    {
LABEL_41:
      if ((v6 & 0x20) == 0) {
        goto LABEL_61;
      }
      goto LABEL_55;
    }
  }
  else if ((v6 & 0x10) == 0)
  {
    goto LABEL_41;
  }
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v25 = *(void *)(a1 + 56);
  *char v4 = 66;
  unsigned int v26 = *(_DWORD *)(v25 + 20);
  v4[1] = v26;
  if (v26 > 0x7F) {
    uint64_t v27 = sub_188A9CC(v26, v4 + 1);
  }
  else {
    uint64_t v27 = v4 + 2;
  }
  char v4 = sub_1799DFC(v25, (unint64_t)v27, a3);
  if ((v6 & 0x20) != 0)
  {
LABEL_55:
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v28 = *(void *)(a1 + 64);
    *char v4 = 74;
    unsigned int v29 = *(_DWORD *)(v28 + 20);
    v4[1] = v29;
    if (v29 > 0x7F) {
      uint64_t v30 = sub_188A9CC(v29, v4 + 1);
    }
    else {
      uint64_t v30 = v4 + 2;
    }
    char v4 = sub_129318C(v28, (unint64_t)v30, a3);
  }
LABEL_61:
  uint64_t v31 = *(void *)(a1 + 8);
  if ((v31 & 1) == 0) {
    return v4;
  }
  unint64_t v33 = v31 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v33 + 31) < 0)
  {
    uint64_t v34 = *(void **)(v33 + 8);
    uint64_t v35 = *(void *)(v33 + 16);
  }
  else
  {
    uint64_t v34 = (void *)(v33 + 8);
    LODWORD(v35) = *(unsigned __int8 *)(v33 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v35)
  {
    uint64_t v36 = (int)v35;
    memcpy(v4, v34, (int)v35);
    v4 += v36;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v34, v35, v4);
}

uint64_t sub_17E8940(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if (!(_BYTE)v2)
  {
    uint64_t v3 = 0;
    if ((v2 & 0x100) == 0) {
      goto LABEL_19;
    }
LABEL_18:
    v3 += ((9 * (__clz(*(_DWORD *)(a1 + 80) | 1) ^ 0x1F) + 73) >> 6) + 1;
    goto LABEL_19;
  }
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_11;
    }
LABEL_10:
    uint64_t v7 = sub_1792638(*(void *)(a1 + 32));
    v3 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    goto LABEL_11;
  }
  unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
  uint64_t v6 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    uint64_t v6 = v5;
  }
  uint64_t v3 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 2) != 0) {
    goto LABEL_10;
  }
LABEL_11:
  if ((v2 & 4) != 0)
  {
    uint64_t v10 = sub_15B0D90(*(void *)(a1 + 40));
    v3 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 8) == 0)
    {
LABEL_13:
      if ((v2 & 0x10) == 0) {
        goto LABEL_14;
      }
      goto LABEL_23;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_13;
  }
  unint64_t v11 = sub_17E7958(*(void *)(a1 + 48));
  v3 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x10) == 0)
  {
LABEL_14:
    if ((v2 & 0x20) == 0) {
      goto LABEL_15;
    }
    goto LABEL_24;
  }
LABEL_23:
  uint64_t v12 = sub_1799F00(*(void *)(a1 + 56));
  v3 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x20) == 0)
  {
LABEL_15:
    if ((v2 & 0x40) == 0) {
      goto LABEL_16;
    }
    goto LABEL_25;
  }
LABEL_24:
  uint64_t v13 = sub_1293614(*(void *)(a1 + 64));
  v3 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x40) == 0)
  {
LABEL_16:
    if ((v2 & 0x80) == 0) {
      goto LABEL_17;
    }
    goto LABEL_29;
  }
LABEL_25:
  int v14 = *(_DWORD *)(a1 + 72);
  if (v14 < 0) {
    uint64_t v15 = 11;
  }
  else {
    uint64_t v15 = ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v3 += v15;
  if ((v2 & 0x80) == 0)
  {
LABEL_17:
    if ((v2 & 0x100) == 0) {
      goto LABEL_19;
    }
    goto LABEL_18;
  }
LABEL_29:
  int v16 = *(_DWORD *)(a1 + 76);
  if (v16 < 0) {
    uint64_t v17 = 11;
  }
  else {
    uint64_t v17 = ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v3 += v17;
  if ((v2 & 0x100) != 0) {
    goto LABEL_18;
  }
LABEL_19:
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v18 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v18 + 31) < 0) {
      uint64_t v19 = *(void *)(v18 + 16);
    }
    else {
      uint64_t v19 = *(unsigned __int8 *)(v18 + 31);
    }
    v3 += v19;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

void sub_17E8B9C(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((_BYTE)v4)
  {
    if (v4)
    {
      uint64_t v7 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v8 = (std::string **)(a1 + 24);
      uint64_t v9 = *(void *)(a1 + 8);
      uint64_t v10 = (uint64_t *)(v9 & 0xFFFFFFFFFFFFFFFCLL);
      if (v9) {
        uint64_t v10 = (uint64_t *)*v10;
      }
      sub_1881DF4(v8, v7, v10);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_29;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    unint64_t v11 = *(void **)(a1 + 32);
    if (!v11)
    {
      uint64_t v12 = *(void *)(a1 + 8);
      uint64_t v13 = (void *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
      if (v12) {
        uint64_t v13 = (void *)*v13;
      }
      unint64_t v11 = sub_18302C8((uint64_t)v13);
      *(void *)(a1 + 32) = v11;
    }
    if (*(void *)(a2 + 32)) {
      int v14 = *(uint64_t (****)())(a2 + 32);
    }
    else {
      int v14 = &off_2549800;
    }
    sub_1792730((uint64_t)v11, (uint64_t)v14);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_37;
    }
LABEL_29:
    *(_DWORD *)(a1 + 16) |= 4u;
    uint64_t v15 = *(void *)(a1 + 40);
    if (!v15)
    {
      uint64_t v16 = *(void *)(a1 + 8);
      uint64_t v17 = (void *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
      if (v16) {
        uint64_t v17 = (void *)*v17;
      }
      uint64_t v15 = sub_15C1918((uint64_t)v17);
      *(void *)(a1 + 40) = v15;
    }
    if (*(void *)(a2 + 40)) {
      unint64_t v18 = *(uint64_t (****)())(a2 + 40);
    }
    else {
      unint64_t v18 = &off_253F1A0;
    }
    sub_15B0E24(v15, (uint64_t)v18);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0) {
        goto LABEL_7;
      }
      goto LABEL_45;
    }
LABEL_37:
    *(_DWORD *)(a1 + 16) |= 8u;
    uint64_t v19 = *(std::string **)(a1 + 48);
    if (!v19)
    {
      uint64_t v20 = *(void *)(a1 + 8);
      unint64_t v21 = (void *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
      if (v20) {
        unint64_t v21 = (void *)*v21;
      }
      uint64_t v19 = (std::string *)sub_18340B4((uint64_t)v21);
      *(void *)(a1 + 48) = v19;
    }
    if (*(void *)(a2 + 48)) {
      uint64_t v22 = *(uint64_t (****)())(a2 + 48);
    }
    else {
      uint64_t v22 = &off_254B610;
    }
    sub_17E79DC(v19, (uint64_t)v22);
    if ((v4 & 0x10) == 0)
    {
LABEL_7:
      if ((v4 & 0x20) == 0) {
        goto LABEL_8;
      }
      goto LABEL_53;
    }
LABEL_45:
    *(_DWORD *)(a1 + 16) |= 0x10u;
    unsigned int v23 = *(std::string **)(a1 + 56);
    if (!v23)
    {
      uint64_t v24 = *(void *)(a1 + 8);
      uint64_t v25 = (void *)(v24 & 0xFFFFFFFFFFFFFFFCLL);
      if (v24) {
        uint64_t v25 = (void *)*v25;
      }
      unsigned int v23 = (std::string *)sub_183054C((uint64_t)v25);
      *(void *)(a1 + 56) = v23;
    }
    if (*(void *)(a2 + 56)) {
      unsigned int v26 = *(uint64_t (****)())(a2 + 56);
    }
    else {
      unsigned int v26 = &off_2549A70;
    }
    sub_142E300(v23, (uint64_t)v26);
    if ((v4 & 0x20) == 0)
    {
LABEL_8:
      if ((v4 & 0x40) == 0) {
        goto LABEL_9;
      }
      goto LABEL_61;
    }
LABEL_53:
    *(_DWORD *)(a1 + 16) |= 0x20u;
    uint64_t v27 = *(void *)(a1 + 64);
    if (!v27)
    {
      uint64_t v28 = *(void *)(a1 + 8);
      unsigned int v29 = (void *)(v28 & 0xFFFFFFFFFFFFFFFCLL);
      if (v28) {
        unsigned int v29 = (void *)*v29;
      }
      sub_129E0BC((uint64_t)v29);
      *(void *)(a1 + 64) = v27;
    }
    if (*(void *)(a2 + 64)) {
      uint64_t v30 = *(uint64_t (****)())(a2 + 64);
    }
    else {
      uint64_t v30 = &off_25303B8;
    }
    sub_129384C(v27, (uint64_t)v30);
    if ((v4 & 0x40) == 0)
    {
LABEL_9:
      if ((v4 & 0x80) == 0)
      {
LABEL_11:
        *(_DWORD *)(a1 + 16) |= v4;
        goto LABEL_12;
      }
LABEL_10:
      *(_DWORD *)(a1 + 76) = *(_DWORD *)(a2 + 76);
      goto LABEL_11;
    }
LABEL_61:
    *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
    if ((v4 & 0x80) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
LABEL_12:
  if ((v4 & 0x100) != 0)
  {
    int v5 = *(_DWORD *)(a2 + 80);
    *(_DWORD *)(a1 + 16) |= 0x100u;
    *(_DWORD *)(a1 + 80) = v5;
  }
  uint64_t v6 = *(void *)(a2 + 8);
  if (v6)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_17E8E14(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 2) != 0)
  {
    uint64_t v3 = *(void *)(a1 + 32);
    if (*(unsigned char *)(v3 + 16))
    {
      uint64_t result = sub_15B1FC0(*(void *)(v3 + 24));
      if (!result) {
        return result;
      }
      int v2 = *(_DWORD *)(a1 + 16);
    }
  }
  if ((v2 & 4) != 0)
  {
    uint64_t result = sub_15B0F18(*(void *)(a1 + 40));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 0x20) == 0) {
    return 1;
  }
  uint64_t result = sub_1293D50(*(void *)(a1 + 64));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_17E8E80@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.LocationDirectedSearchParameters");
}

uint64_t sub_17E8E90(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (uint64_t *)(a1 + 8);
  *(void *)a1 = off_24DE318;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  int v5 = (uint64_t *)(a1 + 24);
  *(_DWORD *)(a1 + 44) = 0;
  *(void *)(a1 + 28) = 0;
  *(void *)(a1 + 36) = 0;
  *(void *)(a1 + 20) = 0;
  int v6 = *(_DWORD *)(a2 + 32);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 40);
    uint64_t v8 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_1878644(v5, v8, (uint64_t *)(v7 + 8), v6, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v9 = *(_DWORD *)(a1 + 32) + v6;
    *(_DWORD *)(a1 + 32) = v9;
    uint64_t v10 = *(int **)(a1 + 40);
    if (*v10 < v9) {
      *uint64_t v10 = v9;
    }
  }
  uint64_t v11 = *(void *)(a2 + 8);
  if (v11) {
    sub_188B4F8(v4, (v11 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  int v12 = *(_DWORD *)(a2 + 16);
  if (v12) {
    operator new();
  }
  *(void *)(a1 + 48) = 0;
  if ((v12 & 2) != 0) {
    operator new();
  }
  *(void *)(a1 + 56) = 0;
  return a1;
}

void sub_17E8FEC()
{
}

uint64_t sub_17E906C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  if ((uint64_t (***)())a1 != &off_254B690)
  {
    uint64_t v5 = *(void *)(a1 + 48);
    if (v5)
    {
      sub_15B1678(v5);
      operator delete();
    }
    uint64_t v6 = *(void *)(a1 + 56);
    if (v6)
    {
      sub_179F8E0(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  sub_1876FB8((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17E9148(uint64_t a1)
{
  sub_17E906C(a1);

  operator delete();
}

uint64_t sub_17E9180(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_1792958(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  int v5 = *(_DWORD *)(v1 + 16);
  if ((v5 & 3) != 0)
  {
    if (v5) {
      uint64_t result = (uint64_t)sub_15B16B4(*(unsigned char **)(v1 + 48));
    }
    if ((v5 & 2) != 0) {
      uint64_t result = sub_179BE98(*(void *)(v1 + 56));
    }
  }
  char v7 = *(unsigned char *)(v1 + 8);
  uint64_t v6 = v1 + 8;
  *(_DWORD *)(v6 + 8) = 0;
  if (v7)
  {
    return sub_188B4AC((uint64_t *)v6);
  }
  return result;
}

char *sub_17E9224(uint64_t a1, char *a2, int32x2_t *a3)
{
  unsigned int v26 = a2;
  if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
    return v26;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    char v7 = v26 + 1;
    unsigned int v8 = *v26;
    if (*v26 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        char v7 = (char *)sub_188C180((uint64_t)v26, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        char v7 = v26 + 2;
      }
    }
    unsigned int v26 = v7;
    unsigned int v11 = v8 >> 3;
    if (v8 >> 3 == 3)
    {
      if (v8 != 26) {
        goto LABEL_14;
      }
      *(_DWORD *)(a1 + 16) |= 2u;
      uint64_t v16 = *(void **)(a1 + 56);
      if (!v16)
      {
        uint64_t v17 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          uint64_t v17 = (void *)*v17;
        }
        uint64_t v16 = sub_1830734((uint64_t)v17);
        *(void *)(a1 + 56) = v16;
        char v7 = v26;
      }
      uint64_t v15 = (char *)sub_179D3EC(a3, (uint64_t)v16, (unsigned __int8 *)v7);
      goto LABEL_42;
    }
    if (v11 == 2) {
      break;
    }
    if (v11 != 1 || v8 != 10) {
      goto LABEL_14;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v24 = *(void *)(a1 + 48);
    if (!v24)
    {
      uint64_t v25 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        uint64_t v25 = (void *)*v25;
      }
      uint64_t v24 = sub_15C19EC((uint64_t)v25);
      *(void *)(a1 + 48) = v24;
      char v7 = v26;
    }
    uint64_t v15 = sub_11E1C60(a3, v24, (unsigned __int8 *)v7);
LABEL_42:
    unsigned int v26 = v15;
    if (!v15) {
      return 0;
    }
LABEL_43:
    if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
      return v26;
    }
  }
  if (v8 == 18)
  {
    unint64_t v18 = v7 - 1;
    while (1)
    {
      uint64_t v19 = (unsigned __int8 *)(v18 + 1);
      unsigned int v26 = v18 + 1;
      uint64_t v20 = *(_DWORD **)(a1 + 40);
      if (v20 && (uint64_t v21 = *(int *)(a1 + 32), (int)v21 < *v20))
      {
        *(_DWORD *)(a1 + 32) = v21 + 1;
        uint64_t v22 = *(void *)&v20[2 * v21 + 2];
      }
      else
      {
        uint64_t v23 = sub_1830344(*(void *)(a1 + 24));
        uint64_t v22 = sub_188CDC8(a1 + 24, v23);
        uint64_t v19 = (unsigned __int8 *)v26;
      }
      unint64_t v18 = sub_179CFFC(a3, v22, v19);
      unsigned int v26 = v18;
      if (!v18) {
        return 0;
      }
      if (*(void *)a3 <= (unint64_t)v18 || *v18 != 18) {
        goto LABEL_43;
      }
    }
  }
LABEL_14:
  if (v8) {
    BOOL v13 = (v8 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v6)
    {
      int v14 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      int v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      char v7 = v26;
    }
    uint64_t v15 = (char *)sub_1885AC0(v8, v14, v7, a3);
    goto LABEL_42;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v26;
  }
  return 0;
}

unsigned char *sub_17E9484(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 48);
    *uint64_t v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    uint64_t v4 = sub_15B1A68(v7, (unint64_t)v9, a3);
  }
  int v10 = *(_DWORD *)(a1 + 32);
  if (v10)
  {
    for (int i = 0; i != v10; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v12 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *uint64_t v4 = 18;
      unsigned int v13 = *(_DWORD *)(v12 + 40);
      v4[1] = v13;
      if (v13 > 0x7F) {
        int v14 = sub_188A9CC(v13, v4 + 1);
      }
      else {
        int v14 = v4 + 2;
      }
      uint64_t v4 = sub_1792B74(v12, v14, a3);
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v15 = *(void *)(a1 + 56);
    *uint64_t v4 = 26;
    unsigned int v16 = *(_DWORD *)(v15 + 20);
    v4[1] = v16;
    if (v16 > 0x7F) {
      uint64_t v17 = sub_188A9CC(v16, v4 + 1);
    }
    else {
      uint64_t v17 = v4 + 2;
    }
    uint64_t v4 = sub_179FC7C(v15, v17, a3);
  }
  uint64_t v18 = *(void *)(a1 + 8);
  if ((v18 & 1) == 0) {
    return v4;
  }
  unint64_t v20 = v18 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v20 + 31) < 0)
  {
    uint64_t v21 = *(void **)(v20 + 8);
    uint64_t v22 = *(void *)(v20 + 16);
  }
  else
  {
    uint64_t v21 = (void *)(v20 + 8);
    LODWORD(v22) = *(unsigned __int8 *)(v20 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v22)
  {
    uint64_t v23 = (int)v22;
    memcpy(v4, v21, (int)v22);
    v4 += v23;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v21, v22, v4);
}

uint64_t sub_17E9694(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_1792CB8(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 3) != 0)
  {
    if (v8)
    {
      uint64_t v9 = sub_15B1D1C(*(void *)(a1 + 48));
      v2 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v8 & 2) != 0)
    {
      uint64_t v10 = sub_179FE6C(*(void *)(a1 + 56));
      v2 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v13 + 31) < 0) {
      uint64_t v14 = *(void *)(v13 + 16);
    }
    else {
      uint64_t v14 = *(unsigned __int8 *)(v13 + 31);
    }
    v2 += v14;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

void sub_17E97B0(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_1878644((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    int v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 3) != 0)
  {
    if (v9)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v10 = *(void *)(a1 + 48);
      if (!v10)
      {
        uint64_t v11 = *(void *)(a1 + 8);
        uint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
        if (v11) {
          uint64_t v12 = (void *)*v12;
        }
        uint64_t v10 = sub_15C19EC((uint64_t)v12);
        *(void *)(a1 + 48) = v10;
      }
      if (*(void *)(a2 + 48)) {
        unint64_t v13 = *(uint64_t (****)())(a2 + 48);
      }
      else {
        unint64_t v13 = &off_253F208;
      }
      sub_15B1E3C(v10, (uint64_t)v13);
    }
    if ((v9 & 2) != 0)
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      uint64_t v14 = *(std::string **)(a1 + 56);
      if (!v14)
      {
        uint64_t v15 = *(void *)(a1 + 8);
        unsigned int v16 = (void *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          unsigned int v16 = (void *)*v16;
        }
        uint64_t v14 = (std::string *)sub_1830734((uint64_t)v16);
        *(void *)(a1 + 56) = v14;
      }
      if (*(void *)(a2 + 56)) {
        uint64_t v17 = *(uint64_t (****)())(a2 + 56);
      }
      else {
        uint64_t v17 = &off_2549C78;
      }
      sub_11B9C54(v14, (uint64_t)v17);
    }
  }
  uint64_t v18 = *(void *)(a2 + 8);
  if (v18)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v18 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

BOOL sub_17E9924(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 1;
  }
  BOOL result = sub_15B1FC0(*(void *)(a1 + 48));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_17E9950@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.LocationDirectedSearchResult");
}

uint64_t sub_17E9960(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (uint64_t *)(a1 + 8);
  *(void *)a1 = off_24DE398;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v5 = a1 + 24;
  *(_DWORD *)(a1 + 44) = 0;
  *(void *)(a1 + 28) = 0;
  *(void *)(a1 + 36) = 0;
  *(void *)(a1 + 20) = 0;
  int v6 = *(_DWORD *)(a2 + 32);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 40);
    int v8 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_188FB98(v5, v8, (const std::string **)(v7 + 8), v6, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v9 = *(_DWORD *)(a1 + 32) + v6;
    *(_DWORD *)(a1 + 32) = v9;
    uint64_t v10 = *(int **)(a1 + 40);
    if (*v10 < v9) {
      *uint64_t v10 = v9;
    }
  }
  uint64_t v11 = *(void *)(a2 + 8);
  if (v11) {
    sub_188B4F8(v4, (v11 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  return a1;
}

void sub_17E9A54(_Unwind_Exception *a1)
{
  sub_1889DE8(v3);
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_17E9A94(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1889DE8(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17E9B10(void *a1)
{
  sub_17E9A94(a1);

  operator delete();
}

uint64_t sub_17E9B48(uint64_t a1)
{
  uint64_t result = sub_188CC00(a1 + 24);
  char v4 = *(unsigned char *)(a1 + 8);
  uint64_t v3 = a1 + 8;
  *(_DWORD *)(v3 + 40) = 0;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_17E9BA0(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unsigned int v29 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v29, a3[11].i32[1])) {
    return *(void *)v29;
  }
  int v6 = (void *)(a1 + 8);
  uint64_t v7 = (uint64_t **)(a1 + 24);
  while (1)
  {
    int v8 = (char *)(*(void *)v29 + 1);
    unsigned int v9 = **(unsigned char **)v29;
    if ((char)**(unsigned char **)v29 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        int v8 = (char *)sub_188C180(*(uint64_t *)v29, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        int v8 = (char *)(*(void *)v29 + 2);
      }
    }
    *(void *)unsigned int v29 = v8;
    if (v9 >> 3 == 2)
    {
      if (v9 != 16) {
        goto LABEL_13;
      }
      uint64_t v15 = v8 + 1;
      unint64_t v16 = *v8;
      if (*v8 < 0)
      {
        int v17 = *v15;
        int v18 = v16 + (v17 << 7);
        unint64_t v16 = (v18 - 128);
        if (v17 < 0)
        {
          *(void *)unsigned int v29 = sub_188C138((uint64_t)v8, (v18 - 128));
          if (!*(void *)v29) {
            goto LABEL_53;
          }
          unint64_t v16 = v28;
          goto LABEL_26;
        }
        uint64_t v15 = v8 + 2;
      }
      *(void *)unsigned int v29 = v15;
LABEL_26:
      if (v16 > 0xA || ((1 << v16) & 0x407) == 0)
      {
        if (*v6) {
          uint64_t v27 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          uint64_t v27 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        sub_188C020(2, v16, v27);
      }
      else
      {
        *(_DWORD *)(a1 + 16) |= 1u;
        *(_DWORD *)(a1 + 48) = v16;
      }
      goto LABEL_45;
    }
    if (v9 >> 3 == 1 && v9 == 10)
    {
      unint64_t v20 = v8 - 1;
      while (1)
      {
        uint64_t v21 = (char *)(v20 + 1);
        *(void *)unsigned int v29 = v20 + 1;
        uint64_t v22 = *(_DWORD **)(a1 + 40);
        if (v22 && (uint64_t v23 = *(int *)(a1 + 32), (int)v23 < *v22))
        {
          *(_DWORD *)(a1 + 32) = v23 + 1;
          uint64_t v24 = *(std::string **)&v22[2 * v23 + 2];
        }
        else
        {
          if (!*v7) {
            operator new();
          }
          void *v26 = v25;
          v26[1] = sub_3A6EDC;
          *uint64_t v25 = 0;
          v25[1] = 0;
          v25[2] = 0;
          uint64_t v24 = (std::string *)sub_188CDC8(a1 + 24, (uint64_t)v25);
          uint64_t v21 = *(char **)v29;
        }
        unint64_t v20 = sub_188C244(v24, v21, (uint64_t)a3);
        *(void *)unsigned int v29 = v20;
        if (!v20) {
          goto LABEL_53;
        }
        if (*(void *)a3 <= (unint64_t)v20 || *v20 != 10) {
          goto LABEL_45;
        }
      }
    }
LABEL_13:
    if (!v9 || (v9 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      uint64_t v14 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v8 = *(char **)v29;
    }
    *(void *)unsigned int v29 = sub_1885AC0(v9, v14, v8, a3);
    if (!*(void *)v29) {
      goto LABEL_53;
    }
LABEL_45:
    if (sub_11947B8((uint64_t)a3, (char **)v29, a3[11].i32[1])) {
      return *(void *)v29;
    }
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    return *(void *)v29;
  }
LABEL_53:
  *(void *)unsigned int v29 = 0;
  return *(void *)v29;
}

char *sub_17E9E60(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v6 = *(unsigned int *)(a1 + 32);
  if ((int)v6 >= 1)
  {
    uint64_t v7 = 0;
    uint64_t v8 = 8 * v6;
    do
    {
      unsigned int v9 = *(void **)(*(void *)(a1 + 40) + v7 + 8);
      if (*((char *)v9 + 23) < 0)
      {
        int64_t v10 = v9[1];
        if (v10 > 127) {
          goto LABEL_12;
        }
      }
      else
      {
        int64_t v10 = *((unsigned __int8 *)v9 + 23);
      }
      if (*(void *)a3 - (void)__dst + 14 >= v10)
      {
        *__dst = 10;
        __dst[1] = v10;
        if (*((char *)v9 + 23) < 0) {
          unsigned int v9 = (void *)*v9;
        }
        unsigned int v11 = __dst + 2;
        memcpy(v11, v9, v10);
        __dst = &v11[v10];
        goto LABEL_10;
      }
LABEL_12:
      __dst = (char *)sub_188A868(a3, 1, (uint64_t)v9, __dst);
LABEL_10:
      v7 += 8;
    }
    while (v8 != v7);
  }
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unint64_t v12 = *(int *)(a1 + 48);
    *__dst = 16;
    __dst[1] = v12;
    if (v12 > 0x7F)
    {
      __dst[1] = v12 | 0x80;
      unint64_t v13 = v12 >> 7;
      __dst[2] = v12 >> 7;
      __dst += 3;
      if (v12 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unint64_t v14 = v13 >> 14;
          v13 >>= 7;
          *__dst++ = v13;
        }
        while (v14);
      }
    }
    else
    {
      __dst += 2;
    }
  }
  uint64_t v15 = *(void *)(a1 + 8);
  if ((v15 & 1) == 0) {
    return __dst;
  }
  unint64_t v17 = v15 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v17 + 31) < 0)
  {
    int v18 = *(void **)(v17 + 8);
    uint64_t v19 = *(void *)(v17 + 16);
  }
  else
  {
    int v18 = (void *)(v17 + 8);
    LODWORD(v19) = *(unsigned __int8 *)(v17 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v19)
  {
    uint64_t v20 = (int)v19;
    memcpy(__dst, v18, (int)v19);
    __dst += v20;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v18, v19, __dst);
}

uint64_t sub_17EA048(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 32);
  if ((int)v1 < 1)
  {
    uint64_t v3 = *(unsigned int *)(a1 + 32);
  }
  else
  {
    uint64_t v2 = (uint64_t *)(*(void *)(a1 + 40) + 8);
    uint64_t v3 = *(unsigned int *)(a1 + 32);
    do
    {
      uint64_t v4 = *v2++;
      uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
      uint64_t v6 = *(void *)(v4 + 8);
      if ((v5 & 0x80u) == 0) {
        uint64_t v6 = v5;
      }
      v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6);
      --v1;
    }
    while (v1);
  }
  if (*(unsigned char *)(a1 + 16))
  {
    int v7 = *(_DWORD *)(a1 + 48);
    if (v7 < 0) {
      uint64_t v8 = 11;
    }
    else {
      uint64_t v8 = ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v3 += v8;
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    v3 += v12;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

uint64_t sub_17EA118()
{
  return 1;
}

void *sub_17EA120@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.NearbySearchParameters.NearbySearchFilter");
}

uint64_t sub_17EA130(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_24DE418;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  int v5 = *(_DWORD *)(a2 + 16);
  if (v5) {
    operator new();
  }
  *(void *)(a1 + 24) = 0;
  if ((v5 & 2) != 0) {
    operator new();
  }
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  return a1;
}

void sub_17EA21C()
{
}

uint64_t sub_17EA280(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  if ((uint64_t (***)())a1 != &off_254B708)
  {
    uint64_t v5 = *(void *)(a1 + 24);
    if (v5)
    {
      sub_179203C(v5);
      operator delete();
    }
    uint64_t v6 = *(void **)(a1 + 32);
    if (v6)
    {
      sub_17E9A94(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17EA350(uint64_t a1)
{
  sub_17EA280(a1);

  operator delete();
}

uint64_t sub_17EA388(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 0xF) != 0)
  {
    if (v2) {
      uint64_t result = (uint64_t)sub_179212C(*(unsigned char **)(result + 24));
    }
    if ((v2 & 2) != 0) {
      uint64_t result = sub_17E9B48(*(void *)(v1 + 32));
    }
    *(void *)(v1 + 40) = 0xA00000002;
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_17EA404(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v30 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v30, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = v30 + 1;
    unsigned int v9 = *v30;
    if (*v30 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v30, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v30 + 2;
      }
    }
    uint64_t v30 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_33;
        }
        uint64_t v12 = v8 + 1;
        unint64_t v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        int v15 = v13 + (v14 << 7);
        unint64_t v13 = (v15 - 128);
        if (v14 < 0)
        {
          uint64_t v30 = (char *)sub_188C138((uint64_t)v8, (v15 - 128));
          if (!v30) {
            goto LABEL_54;
          }
          unint64_t v13 = v26;
        }
        else
        {
          uint64_t v12 = v8 + 2;
LABEL_13:
          uint64_t v30 = v12;
        }
        if (v13 > 3)
        {
          if (*v7) {
            unsigned int v29 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            unsigned int v29 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(1, v13, v29);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 4u;
          *(_DWORD *)(a1 + 40) = v13;
        }
        goto LABEL_41;
      case 2u:
        if (v9 != 16) {
          goto LABEL_33;
        }
        v5 |= 8u;
        unint64_t v16 = v8 + 1;
        int v17 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_20;
        }
        int v18 = *v16;
        int v17 = v17 + (v18 << 7) - 128;
        if (v18 < 0)
        {
          uint64_t v27 = (char *)sub_188C0D0((uint64_t)v8, v17);
          uint64_t v30 = v27;
          *(_DWORD *)(a1 + 44) = v28;
          if (!v27) {
            goto LABEL_54;
          }
        }
        else
        {
          unint64_t v16 = v8 + 2;
LABEL_20:
          uint64_t v30 = v16;
          *(_DWORD *)(a1 + 44) = v17;
        }
        goto LABEL_41;
      case 3u:
        if (v9 != 26) {
          goto LABEL_33;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v19 = *(void **)(a1 + 24);
        if (!v19)
        {
          uint64_t v20 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v20 = (void *)*v20;
          }
          uint64_t v19 = sub_18302C8((uint64_t)v20);
          *(void *)(a1 + 24) = v19;
          uint64_t v8 = v30;
        }
        uint64_t v21 = sub_120FE50(a3, (uint64_t)v19, (unsigned __int8 *)v8);
        goto LABEL_40;
      case 4u:
        if (v9 != 34) {
          goto LABEL_33;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v22 = *(void *)(a1 + 32);
        if (!v22)
        {
          uint64_t v23 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v23 = (void *)*v23;
          }
          uint64_t v22 = sub_1834264((uint64_t)v23);
          *(void *)(a1 + 32) = v22;
          uint64_t v8 = v30;
        }
        uint64_t v21 = (char *)sub_17EA708(a3, v22, (unsigned __int8 *)v8);
        goto LABEL_40;
      default:
LABEL_33:
        if (v9) {
          BOOL v24 = (v9 & 7) == 4;
        }
        else {
          BOOL v24 = 1;
        }
        if (!v24)
        {
          if (*v7)
          {
            uint64_t v25 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v25 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = v30;
          }
          uint64_t v21 = (char *)sub_1885AC0(v9, v25, v8, a3);
LABEL_40:
          uint64_t v30 = v21;
          if (!v21) {
            goto LABEL_54;
          }
LABEL_41:
          if (sub_11947B8((uint64_t)a3, &v30, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_54:
        }
          uint64_t v30 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v30;
    }
  }
}

uint64_t sub_17EA708(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17E9BA0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_17EA798(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 40);
    *char v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 44);
    *char v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v13 = *(void *)(a1 + 24);
    *char v4 = 26;
    unsigned int v14 = *(_DWORD *)(v13 + 20);
    v4[1] = v14;
    if (v14 > 0x7F) {
      int v15 = sub_188A9CC(v14, v4 + 1);
    }
    else {
      int v15 = v4 + 2;
    }
    char v4 = sub_1792424(v13, (unint64_t)v15, a3);
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v16 = *(void *)(a1 + 32);
    *char v4 = 34;
    unsigned int v17 = *(_DWORD *)(v16 + 20);
    v4[1] = v17;
    if (v17 > 0x7F) {
      int v18 = sub_188A9CC(v17, v4 + 1);
    }
    else {
      int v18 = v4 + 2;
    }
    char v4 = sub_17E9E60(v16, v18, a3);
  }
  uint64_t v19 = *(void *)(a1 + 8);
  if ((v19 & 1) == 0) {
    return v4;
  }
  unint64_t v21 = v19 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v21 + 31) < 0)
  {
    uint64_t v22 = *(void **)(v21 + 8);
    uint64_t v23 = *(void *)(v21 + 16);
  }
  else
  {
    uint64_t v22 = (void *)(v21 + 8);
    LODWORD(v23) = *(unsigned __int8 *)(v21 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v23)
  {
    uint64_t v24 = (int)v23;
    memcpy(v4, v22, (int)v23);
    v4 += v24;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v22, v23, v4);
}

uint64_t sub_17EAA10(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0xF) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_11;
  }
  if (v2)
  {
    uint64_t v4 = sub_1792638(*(void *)(a1 + 24));
    uint64_t v3 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_7:
    uint64_t v5 = sub_17EA048(*(void *)(a1 + 32));
    v3 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_8:
  if ((v2 & 4) == 0)
  {
    if ((v2 & 8) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  int v8 = *(_DWORD *)(a1 + 40);
  if (v8 < 0) {
    uint64_t v9 = 11;
  }
  else {
    uint64_t v9 = ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v3 += v9;
  if ((v2 & 8) != 0) {
LABEL_10:
  }
    v3 += ((9 * (__clz(*(_DWORD *)(a1 + 44) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_11:
  uint64_t v6 = *(void *)(a1 + 8);
  if (v6)
  {
    unint64_t v10 = v6 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v3 += v11;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

void sub_17EAB4C(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0xF) != 0)
  {
    if (v4)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v6 = *(void **)(a1 + 24);
      if (!v6)
      {
        uint64_t v7 = *(void *)(a1 + 8);
        int v8 = (void *)(v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (v7) {
          int v8 = (void *)*v8;
        }
        uint64_t v6 = sub_18302C8((uint64_t)v8);
        *(void *)(a1 + 24) = v6;
      }
      if (*(void *)(a2 + 24)) {
        uint64_t v9 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        uint64_t v9 = &off_2549800;
      }
      sub_1792730((uint64_t)v6, (uint64_t)v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_28;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    unint64_t v10 = *(std::string **)(a1 + 32);
    if (!v10)
    {
      uint64_t v11 = *(void *)(a1 + 8);
      unsigned int v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        unsigned int v12 = (void *)*v12;
      }
      unint64_t v10 = (std::string *)sub_1834264((uint64_t)v12);
      *(void *)(a1 + 32) = v10;
    }
    if (*(void *)(a2 + 32)) {
      uint64_t v13 = *(uint64_t (****)())(a2 + 32);
    }
    else {
      uint64_t v13 = &off_254B6D0;
    }
    sub_121627C(v10, (uint64_t)v13);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0)
      {
LABEL_7:
        *(_DWORD *)(a1 + 16) |= v4;
        goto LABEL_8;
      }
LABEL_6:
      *(_DWORD *)(a1 + 44) = *(_DWORD *)(a2 + 44);
      goto LABEL_7;
    }
LABEL_28:
    *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
    if ((v4 & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_8:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

BOOL sub_17EAC84(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 1;
  }
  uint64_t v1 = *(void *)(a1 + 24);
  if ((*(unsigned char *)(v1 + 16) & 1) == 0) {
    return 1;
  }
  BOOL result = sub_15B1FC0(*(void *)(v1 + 24));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_17EACBC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.NearbySearchParameters");
}

uint64_t sub_17EACCC(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  *(void *)(a1 + 8) = v4;
  *(void *)a1 = off_24DE498;
  sub_1882BC4(a1 + 16, a2);
  *(_DWORD *)(a1 + 40) = 0;
  return a1;
}

void sub_17EAD30(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_17EAD60(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  uint64_t v4 = a1 + 16;
  *(void *)a1 = off_24DE498;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = 0;
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v4, a2 + 16);
  return a1;
}

void sub_17EADF4(_Unwind_Exception *a1)
{
  sub_1882CC0(v3);
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_17EAE30(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17EAEAC(void *a1)
{
  sub_17EAE30(a1);

  operator delete();
}

unsigned char *sub_17EAEE4(uint64_t a1)
{
  BOOL result = sub_18843A4((unsigned char *)(a1 + 16));
  char v4 = *(unsigned char *)(a1 + 8);
  uint64_t v3 = (uint64_t *)(a1 + 8);
  if (v4)
  {
    return (unsigned char *)sub_188B4AC(v3);
  }
  return result;
}

char *sub_17EAF34(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v15 = a2;
  if ((sub_11947B8((uint64_t)a3, &v15, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v5 = (uint64_t *)(a1 + 8);
    uint64_t v6 = (uint64_t **)(a1 + 16);
    while (1)
    {
      uint64_t v7 = v15 + 1;
      unsigned int v8 = *v15;
      if (*v15 < 0)
      {
        unsigned int v9 = v8 + (*v7 << 7);
        unsigned int v8 = v9 - 128;
        if (*v7 < 0)
        {
          uint64_t v7 = (char *)sub_188C180((uint64_t)v15, v9 - 128);
          unsigned int v8 = v10;
        }
        else
        {
          uint64_t v7 = v15 + 2;
        }
      }
      int v15 = v7;
      if (!v8 || (v8 & 7) == 4) {
        break;
      }
      if (v8 - 800 > 0x31F)
      {
        if (*v5)
        {
          uint64_t v13 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else
        {
          uint64_t v13 = (std::string *)sub_188DBD8(v5);
          uint64_t v7 = v15;
        }
        unsigned int v12 = sub_1885AC0(v8, v13, v7, a3);
      }
      else
      {
        unsigned int v12 = sub_18859DC(v6, v8, v7, (uint64_t)&off_254B738, v5, a3);
      }
      int v15 = (char *)v12;
      if (!v12) {
        return 0;
      }
      if (sub_11947B8((uint64_t)a3, &v15, a3[11].i32[1])) {
        return v15;
      }
    }
    if (v7)
    {
      a3[10].i32[0] = v8 - 1;
      return v15;
    }
    return 0;
  }
  return v15;
}

char *sub_17EB07C(uint64_t a1, char *a2, _DWORD *a3)
{
  char v4 = a2;
  if (*(_WORD *)(a1 + 26)) {
    char v4 = sub_1886844(a1 + 16, 100, 200, a2, a3);
  }
  uint64_t v6 = *(void *)(a1 + 8);
  if ((v6 & 1) == 0) {
    return v4;
  }
  unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v8 + 31) < 0)
  {
    unsigned int v9 = *(void **)(v8 + 8);
    uint64_t v10 = *(void *)(v8 + 16);
  }
  else
  {
    unsigned int v9 = (void *)(v8 + 8);
    LODWORD(v10) = *(unsigned __int8 *)(v8 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v10)
  {
    uint64_t v11 = (int)v10;
    memcpy(v4, v9, (int)v10);
    v4 += v11;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v9, v10, v4);
}

uint64_t sub_17EB148(uint64_t a1)
{
  uint64_t result = sub_1889280(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v4 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v5 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v5 = *(unsigned __int8 *)(v4 + 31);
    }
    result += v5;
  }
  *(_DWORD *)(a1 + 40) = result;
  return result;
}

uint64_t sub_17EB1A0(uint64_t a1)
{
  return sub_18856CC(a1 + 16);
}

void *sub_17EB1A8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.NearbySearchResult");
}

uint64_t sub_17EB1B8(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  *(void *)(a1 + 8) = v5;
  *(void *)a1 = off_24DE518;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 56) = a2;
  *(_DWORD *)(a1 + 80) = 0;
  return a1;
}

void sub_17EB22C(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_17EB25C(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  unint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = a1 + 16;
  *(void *)a1 = off_24DE518;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 60) = 0;
  *(void *)(a1 + 44) = 0;
  *(void *)(a1 + 52) = 0;
  int v6 = *(_DWORD *)(a2 + 48);
  if (v6)
  {
    sub_188CA54((unsigned int *)(a1 + 48), v6);
    uint64_t v7 = *(void **)(a1 + 56);
    *(_DWORD *)(a1 + 48) += *(_DWORD *)(a2 + 48);
    memcpy(v7, *(const void **)(a2 + 56), 8 * *(int *)(a2 + 48));
  }
  uint64_t v8 = *(void *)(a2 + 8);
  if (v8) {
    sub_188B4F8(v4, (v8 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v5, a2 + 16);
  if (*(unsigned char *)(a2 + 40)) {
    operator new();
  }
  *(void *)(a1 + 64) = 0;
  uint64_t v9 = *(void *)(a2 + 72);
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  *(void *)(a1 + 72) = v9;
  return a1;
}

void sub_17EB380()
{
}

uint64_t sub_17EB3EC(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  unint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  if ((uint64_t (***)())a1 != &off_254B768 && *(void *)(a1 + 64))
  {
    sub_15B0994();
    operator delete();
  }
  if (*(void *)(a1 + 8)) {
    sub_10E4F74(v3);
  }
LABEL_8:
  sub_1889DA8(a1 + 48);
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17EB4B4(uint64_t a1)
{
  sub_17EB3EC(a1);

  operator delete();
}

unsigned char *sub_17EB4EC(uint64_t a1)
{
  uint64_t result = sub_18843A4((unsigned char *)(a1 + 16));
  *(_DWORD *)(a1 + 48) = 0;
  int v3 = *(_DWORD *)(a1 + 40);
  if (v3) {
    uint64_t result = sub_15B09D0(*(void *)(a1 + 64));
  }
  if ((v3 & 6) != 0)
  {
    *(_DWORD *)(a1 + 80) = 0;
    *(void *)(a1 + 72) = 0;
  }
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t v4 = a1 + 8;
  *(_DWORD *)(v4 + 32) = 0;
  if (v5)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

char *sub_17EB564(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v34 = a2;
  int v5 = 0;
  if ((sub_11947B8((uint64_t)a3, &v34, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v7 = (void *)(a1 + 8);
    while (1)
    {
      uint64_t v8 = v34 + 1;
      unsigned int v9 = *v34;
      if (*v34 < 0)
      {
        unsigned int v10 = v9 + (*v8 << 7);
        unsigned int v9 = v10 - 128;
        if (*v8 < 0)
        {
          uint64_t v8 = (char *)sub_188C180((uint64_t)v34, v10 - 128);
          unsigned int v9 = v11;
        }
        else
        {
          uint64_t v8 = v34 + 2;
        }
      }
      uint64_t v34 = v8;
      switch(v9 >> 3)
      {
        case 1u:
          if (v9 != 8) {
            goto LABEL_47;
          }
          v5 |= 2u;
          unsigned int v12 = v8 + 1;
          uint64_t v13 = *v8;
          if ((*v8 & 0x80000000) == 0) {
            goto LABEL_13;
          }
          int v14 = *v12;
          uint64_t v13 = v13 + (v14 << 7) - 128;
          if ((v14 & 0x80000000) == 0)
          {
            unsigned int v12 = v8 + 2;
LABEL_13:
            uint64_t v34 = v12;
            *(void *)(a1 + 72) = v13;
            goto LABEL_57;
          }
          int v28 = (char *)sub_188C138((uint64_t)v8, v13);
          uint64_t v34 = v28;
          *(void *)(a1 + 72) = v29;
          if (!v28) {
            goto LABEL_66;
          }
          goto LABEL_57;
        case 2u:
          if (v9 != 18) {
            goto LABEL_47;
          }
          *(_DWORD *)(a1 + 40) |= 1u;
          uint64_t v15 = *(void *)(a1 + 64);
          if (!v15)
          {
            uint64_t v16 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v7) {
              uint64_t v16 = (void *)*v16;
            }
            uint64_t v15 = sub_15C1918((uint64_t)v16);
            *(void *)(a1 + 64) = v15;
            uint64_t v8 = v34;
          }
          unsigned int v17 = sub_1198F14(a3, v15, (unsigned __int8 *)v8);
          goto LABEL_56;
        case 3u:
          if (v9 != 24) {
            goto LABEL_47;
          }
          int v18 = v8 + 1;
          unint64_t v19 = *v8;
          if ((*v8 & 0x80000000) == 0) {
            goto LABEL_24;
          }
          int v20 = *v18;
          int v21 = v19 + (v20 << 7);
          unint64_t v19 = (v21 - 128);
          if (v20 < 0)
          {
            uint64_t v34 = (char *)sub_188C138((uint64_t)v8, (v21 - 128));
            if (!v34) {
              goto LABEL_66;
            }
            unint64_t v19 = v30;
          }
          else
          {
            int v18 = v8 + 2;
LABEL_24:
            uint64_t v34 = v18;
          }
          if (sub_15B0740(v19))
          {
            *(_DWORD *)(a1 + 40) |= 4u;
            *(_DWORD *)(a1 + 80) = v19;
          }
          else
          {
            if (*v7) {
              unint64_t v33 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else {
              unint64_t v33 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            }
            sub_188C020(3, v19, v33);
          }
          goto LABEL_57;
        case 4u:
          if (v9 == 32)
          {
            uint64_t v22 = v8 - 1;
            while (1)
            {
              uint64_t v34 = v22 + 1;
              uint64_t v23 = v22[1];
              if (v22[1] < 0)
              {
                int v24 = v23 + (v22[2] << 7);
                uint64_t v23 = (v24 - 128);
                if (v22[2] < 0)
                {
                  uint64_t v22 = (char *)sub_188C138((uint64_t)(v22 + 1), (v24 - 128));
                  uint64_t v23 = v25;
                }
                else
                {
                  v22 += 3;
                }
              }
              else
              {
                v22 += 2;
              }
              uint64_t v34 = v22;
              uint64_t v26 = *(unsigned int *)(a1 + 48);
              if (v26 == *(_DWORD *)(a1 + 52))
              {
                int v27 = v26 + 1;
                sub_188CA54((unsigned int *)(a1 + 48), v26 + 1);
                *(void *)(*(void *)(a1 + 56) + 8 * v26) = v23;
                uint64_t v22 = v34;
              }
              else
              {
                *(void *)(*(void *)(a1 + 56) + 8 * v26) = v23;
                int v27 = v26 + 1;
              }
              *(_DWORD *)(a1 + 48) = v27;
              if (!v22) {
                goto LABEL_66;
              }
              if (*(void *)a3 <= (unint64_t)v22 || *v22 != 32) {
                goto LABEL_57;
              }
            }
          }
          if (v9 == 34)
          {
            unsigned int v17 = (char *)sub_188C2EC((unsigned int *)(a1 + 48), (unsigned __int8 *)v8, (uint64_t)a3);
          }
          else
          {
LABEL_47:
            if (v9) {
              BOOL v31 = (v9 & 7) == 4;
            }
            else {
              BOOL v31 = 1;
            }
            if (v31)
            {
              if (v8)
              {
                a3[10].i32[0] = v9 - 1;
                goto LABEL_2;
              }
LABEL_66:
              uint64_t v34 = 0;
              goto LABEL_2;
            }
            if (v9 - 800 > 0x31F)
            {
              if (*v7)
              {
                uint64_t v32 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
              }
              else
              {
                uint64_t v32 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
                uint64_t v8 = v34;
              }
              unsigned int v17 = (char *)sub_1885AC0(v9, v32, v8, a3);
            }
            else
            {
              unsigned int v17 = (char *)sub_18859DC((uint64_t **)(a1 + 16), v9, v8, (uint64_t)&off_254B768, (uint64_t *)(a1 + 8), a3);
            }
          }
LABEL_56:
          uint64_t v34 = v17;
          if (!v17) {
            goto LABEL_66;
          }
LABEL_57:
          if (sub_11947B8((uint64_t)a3, &v34, a3[11].i32[1])) {
            goto LABEL_2;
          }
          break;
        default:
          goto LABEL_47;
      }
    }
  }
LABEL_2:
  *(_DWORD *)(a1 + 40) |= v5;
  return v34;
}

char *sub_17EB93C(uint64_t a1, char *a2, _DWORD *a3)
{
  uint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unint64_t v7 = *(void *)(a1 + 72);
    *uint64_t v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 64);
    *uint64_t v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 44);
    v4[1] = v11;
    if (v11 > 0x7F) {
      unsigned int v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      unsigned int v12 = v4 + 2;
    }
    uint64_t v4 = sub_15B0C0C(v10, v12, a3);
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v13 = *(int *)(a1 + 80);
    *uint64_t v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unint64_t v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v16 = *(unsigned int *)(a1 + 48);
  if ((int)v16 >= 1)
  {
    for (uint64_t i = 0; i != v16; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v18 = *(void *)(*(void *)(a1 + 56) + 8 * i);
      *uint64_t v4 = 32;
      v4[1] = v18;
      if (v18 > 0x7F)
      {
        v4[1] = v18 | 0x80;
        unint64_t v19 = v18 >> 7;
        v4[2] = v18 >> 7;
        v4 += 3;
        if (v18 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v20 = v19 >> 14;
            v19 >>= 7;
            *v4++ = v19;
          }
          while (v20);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  if (*(_WORD *)(a1 + 26)) {
    uint64_t v4 = sub_1886844(a1 + 16, 100, 200, v4, a3);
  }
  uint64_t v21 = *(void *)(a1 + 8);
  if ((v21 & 1) == 0) {
    return v4;
  }
  unint64_t v23 = v21 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v23 + 31) < 0)
  {
    int v24 = *(void **)(v23 + 8);
    uint64_t v25 = *(void *)(v23 + 16);
  }
  else
  {
    int v24 = (void *)(v23 + 8);
    LODWORD(v25) = *(unsigned __int8 *)(v23 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v25)
  {
    uint64_t v26 = (int)v25;
    memcpy(v4, v24, (int)v25);
    v4 += v26;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v24, v25, v4);
}

uint64_t sub_17EBC10(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = sub_188D5A8((unsigned int *)(a1 + 48)) + v2 + *(unsigned int *)(a1 + 48);
  int v4 = *(_DWORD *)(a1 + 40);
  if ((v4 & 7) == 0) {
    goto LABEL_12;
  }
  if (v4)
  {
    uint64_t v5 = sub_15B0D90(*(void *)(a1 + 64));
    v3 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v4 & 2) == 0)
    {
LABEL_4:
      if ((v4 & 4) == 0) {
        goto LABEL_12;
      }
      goto LABEL_8;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_4;
  }
  v3 += ((9 * (__clz(*(void *)(a1 + 72) | 1) ^ 0x3F) + 73) >> 6) + 1;
  if ((v4 & 4) == 0) {
    goto LABEL_12;
  }
LABEL_8:
  int v6 = *(_DWORD *)(a1 + 80);
  if (v6 < 0) {
    uint64_t v7 = 11;
  }
  else {
    uint64_t v7 = ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v3 += v7;
LABEL_12:
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v3 += v11;
  }
  *(_DWORD *)(a1 + 44) = v3;
  return v3;
}

void sub_17EBD2C(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 48);
  if (v4)
  {
    uint64_t v5 = (_DWORD *)(a1 + 48);
    uint64_t v6 = *(int *)(a1 + 48);
    sub_188CA54((unsigned int *)(a1 + 48), v6 + v4);
    uint64_t v7 = *(void *)(a1 + 56);
    *v5 += *(_DWORD *)(a2 + 48);
    memcpy((void *)(v7 + 8 * v6), *(const void **)(a2 + 56), 8 * *(int *)(a2 + 48));
  }
  int v8 = *(_DWORD *)(a2 + 40);
  if ((v8 & 7) != 0)
  {
    if (v8)
    {
      *(_DWORD *)(a1 + 40) |= 1u;
      uint64_t v10 = *(void *)(a1 + 64);
      if (!v10)
      {
        uint64_t v11 = *(void *)(a1 + 8);
        unsigned int v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
        if (v11) {
          unsigned int v12 = (void *)*v12;
        }
        uint64_t v10 = sub_15C1918((uint64_t)v12);
        *(void *)(a1 + 64) = v10;
      }
      if (*(void *)(a2 + 64)) {
        unint64_t v13 = *(uint64_t (****)())(a2 + 64);
      }
      else {
        unint64_t v13 = &off_253F1A0;
      }
      sub_15B0E24(v10, (uint64_t)v13);
      if ((v8 & 2) == 0)
      {
LABEL_6:
        if ((v8 & 4) == 0)
        {
LABEL_8:
          *(_DWORD *)(a1 + 40) |= v8;
          goto LABEL_9;
        }
LABEL_7:
        *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
        goto LABEL_8;
      }
    }
    else if ((v8 & 2) == 0)
    {
      goto LABEL_6;
    }
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    if ((v8 & 4) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
LABEL_9:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_17EBE64(uint64_t a1)
{
  uint64_t result = sub_18856CC(a1 + 16);
  if (result)
  {
    if ((*(unsigned char *)(a1 + 40) & 1) == 0) {
      return 1;
    }
    uint64_t result = sub_15B0F18(*(void *)(a1 + 64));
    if (result) {
      return 1;
    }
  }
  return result;
}

void *sub_17EBEA8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.FeatureIdGeocodingParameters");
}

uint64_t sub_17EBEB8(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  *(void *)(a1 + 8) = v4;
  *(void *)a1 = off_24DE598;
  sub_1882BC4(a1 + 16, a2);
  *(_DWORD *)(a1 + 40) = 0;
  return a1;
}

void sub_17EBF1C(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_17EBF4C(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  uint64_t v4 = a1 + 16;
  *(void *)a1 = off_24DE598;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = 0;
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v4, a2 + 16);
  return a1;
}

void sub_17EBFE0(_Unwind_Exception *a1)
{
  sub_1882CC0(v3);
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_17EC01C(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17EC098(void *a1)
{
  sub_17EC01C(a1);

  operator delete();
}

unsigned char *sub_17EC0D0(uint64_t a1)
{
  uint64_t result = sub_18843A4((unsigned char *)(a1 + 16));
  char v4 = *(unsigned char *)(a1 + 8);
  uint64_t v3 = (uint64_t *)(a1 + 8);
  if (v4)
  {
    return (unsigned char *)sub_188B4AC(v3);
  }
  return result;
}

char *sub_17EC120(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v15 = a2;
  if ((sub_11947B8((uint64_t)a3, &v15, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v5 = (uint64_t *)(a1 + 8);
    uint64_t v6 = (uint64_t **)(a1 + 16);
    while (1)
    {
      uint64_t v7 = v15 + 1;
      unsigned int v8 = *v15;
      if (*v15 < 0)
      {
        unsigned int v9 = v8 + (*v7 << 7);
        unsigned int v8 = v9 - 128;
        if (*v7 < 0)
        {
          uint64_t v7 = (char *)sub_188C180((uint64_t)v15, v9 - 128);
          unsigned int v8 = v10;
        }
        else
        {
          uint64_t v7 = v15 + 2;
        }
      }
      unint64_t v15 = v7;
      if (!v8 || (v8 & 7) == 4) {
        break;
      }
      if (v8 - 800 > 0x31F)
      {
        if (*v5)
        {
          unint64_t v13 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else
        {
          unint64_t v13 = (std::string *)sub_188DBD8(v5);
          uint64_t v7 = v15;
        }
        unsigned int v12 = sub_1885AC0(v8, v13, v7, a3);
      }
      else
      {
        unsigned int v12 = sub_18859DC(v6, v8, v7, (uint64_t)&off_254B7C0, v5, a3);
      }
      unint64_t v15 = (char *)v12;
      if (!v12) {
        return 0;
      }
      if (sub_11947B8((uint64_t)a3, &v15, a3[11].i32[1])) {
        return v15;
      }
    }
    if (v7)
    {
      a3[10].i32[0] = v8 - 1;
      return v15;
    }
    return 0;
  }
  return v15;
}

char *sub_17EC268(uint64_t a1, char *a2, _DWORD *a3)
{
  char v4 = a2;
  if (*(_WORD *)(a1 + 26)) {
    char v4 = sub_1886844(a1 + 16, 100, 200, a2, a3);
  }
  uint64_t v6 = *(void *)(a1 + 8);
  if ((v6 & 1) == 0) {
    return v4;
  }
  unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v8 + 31) < 0)
  {
    unsigned int v9 = *(void **)(v8 + 8);
    uint64_t v10 = *(void *)(v8 + 16);
  }
  else
  {
    unsigned int v9 = (void *)(v8 + 8);
    LODWORD(v10) = *(unsigned __int8 *)(v8 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v10)
  {
    uint64_t v11 = (int)v10;
    memcpy(v4, v9, (int)v10);
    v4 += v11;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v9, v10, v4);
}

uint64_t sub_17EC334(uint64_t a1)
{
  uint64_t result = sub_1889280(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v4 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v5 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v5 = *(unsigned __int8 *)(v4 + 31);
    }
    result += v5;
  }
  *(_DWORD *)(a1 + 40) = result;
  return result;
}

uint64_t sub_17EC38C(uint64_t a1)
{
  return sub_18856CC(a1 + 16);
}

void *sub_17EC394@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.FeatureIdGeocodingResult");
}

uint64_t sub_17EC3A4(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  unint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)a1 = off_24DE618;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v5 = (std::string *)(a1 + 24);
  *(_DWORD *)(a1 + 44) = 0;
  *(void *)(a1 + 28) = 0;
  *(void *)(a1 + 36) = 0;
  *(void *)(a1 + 20) = 0;
  int v6 = *(_DWORD *)(a2 + 32);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 40);
    unint64_t v8 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_1879278(v5, v8, (uint64_t *)(v7 + 8), v6, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v9 = *(_DWORD *)(a1 + 32) + v6;
    *(_DWORD *)(a1 + 32) = v9;
    uint64_t v10 = *(int **)(a1 + 40);
    if (*v10 < v9) {
      *uint64_t v10 = v9;
    }
  }
  uint64_t v11 = *(void *)(a2 + 8);
  if (v11) {
    sub_188B4F8(v4, (v11 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  if (*(unsigned char *)(a2 + 16)) {
    operator new();
  }
  uint64_t v12 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = v12;
  return a1;
}

void sub_17EC4CC()
{
}

uint64_t sub_17EC530(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  unint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_254B7F0)
  {
    uint64_t v6 = *(void *)(a1 + 48);
    if (v6)
    {
      sub_15B3DFC(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  sub_1877B38((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17EC5F4(uint64_t a1)
{
  sub_17EC530(a1);

  operator delete();
}

uint64_t sub_17EC62C(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_16244A0(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  if (*(unsigned char *)(v1 + 16)) {
    uint64_t result = sub_15B043C(*(void *)(v1 + 48));
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = v1 + 8;
  *(void *)(v5 + 48) = 0;
  *(_DWORD *)(v5 + 8) = 0;
  if (v6)
  {
    return sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

char *sub_17EC6C0(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v30 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v30, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    unint64_t v8 = v30 + 1;
    unsigned int v9 = *v30;
    if (*v30 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unint64_t v8 = (char *)sub_188C180((uint64_t)v30, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unint64_t v8 = v30 + 2;
      }
    }
    unint64_t v30 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 == 3)
    {
      if (v9 == 26)
      {
        unsigned int v17 = v8 - 1;
        while (1)
        {
          unint64_t v18 = (unsigned __int8 *)(v17 + 1);
          unint64_t v30 = v17 + 1;
          unint64_t v19 = *(_DWORD **)(a1 + 40);
          if (v19 && (uint64_t v20 = *(int *)(a1 + 32), (int)v20 < *v19))
          {
            *(_DWORD *)(a1 + 32) = v20 + 1;
            uint64_t v21 = *(void *)&v19[2 * v20 + 2];
          }
          else
          {
            uint64_t v22 = sub_1626B70(*(void *)(a1 + 24));
            uint64_t v21 = sub_188CDC8(a1 + 24, (uint64_t)v22);
            unint64_t v18 = (unsigned __int8 *)v30;
          }
          unsigned int v17 = sub_17EC93C(a3, v21, v18);
          unint64_t v30 = v17;
          if (!v17) {
            goto LABEL_50;
          }
          if (*(void *)a3 <= (unint64_t)v17 || *v17 != 26) {
            goto LABEL_43;
          }
        }
      }
      goto LABEL_14;
    }
    if (v12 == 2) {
      break;
    }
    if (v12 != 1 || v9 != 8) {
      goto LABEL_14;
    }
    v5 |= 2u;
    uint64_t v25 = v8 + 1;
    uint64_t v26 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_42;
    }
    int v27 = *v25;
    uint64_t v26 = v26 + (v27 << 7) - 128;
    if ((v27 & 0x80000000) == 0)
    {
      uint64_t v25 = v8 + 2;
LABEL_42:
      unint64_t v30 = v25;
      *(void *)(a1 + 56) = v26;
      goto LABEL_43;
    }
    int v28 = (char *)sub_188C138((uint64_t)v8, v26);
    unint64_t v30 = v28;
    *(void *)(a1 + 56) = v29;
    if (!v28) {
      goto LABEL_50;
    }
LABEL_43:
    if (sub_11947B8((uint64_t)a3, &v30, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 == 18)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v23 = *(void *)(a1 + 48);
    if (!v23)
    {
      int v24 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v7) {
        int v24 = (void *)*v24;
      }
      uint64_t v23 = sub_15C1CB4((uint64_t)v24);
      *(void *)(a1 + 48) = v23;
      unint64_t v8 = v30;
    }
    uint64_t v16 = sub_11B3E48(a3, v23, (unsigned __int8 *)v8);
LABEL_37:
    unint64_t v30 = v16;
    if (!v16) {
      goto LABEL_50;
    }
    goto LABEL_43;
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (*v7)
    {
      unint64_t v15 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unint64_t v8 = v30;
    }
    uint64_t v16 = (char *)sub_1885AC0(v9, v15, v8, a3);
    goto LABEL_37;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_50:
  unint64_t v30 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v30;
}

char *sub_17EC93C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1624520(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_17EC9CC(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(void *)(a1 + 56);
    *uint64_t v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 48);
    *uint64_t v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 44);
    v4[1] = v11;
    if (v11 > 0x7F) {
      unsigned int v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      unsigned int v12 = v4 + 2;
    }
    uint64_t v4 = sub_15B43E4(v10, v12, a3);
  }
  int v13 = *(_DWORD *)(a1 + 32);
  if (v13)
  {
    for (int i = 0; i != v13; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v15 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *uint64_t v4 = 26;
      unsigned int v16 = *(_DWORD *)(v15 + 20);
      v4[1] = v16;
      if (v16 > 0x7F) {
        unsigned int v17 = sub_188A9CC(v16, v4 + 1);
      }
      else {
        unsigned int v17 = v4 + 2;
      }
      uint64_t v4 = sub_1624800(v15, (unint64_t)v17, a3);
    }
  }
  uint64_t v18 = *(void *)(a1 + 8);
  if ((v18 & 1) == 0) {
    return v4;
  }
  unint64_t v20 = v18 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v20 + 31) < 0)
  {
    uint64_t v21 = *(void **)(v20 + 8);
    uint64_t v22 = *(void *)(v20 + 16);
  }
  else
  {
    uint64_t v21 = (void *)(v20 + 8);
    LODWORD(v22) = *(unsigned __int8 *)(v20 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v22)
  {
    uint64_t v23 = (int)v22;
    memcpy(v4, v21, (int)v22);
    v4 += v23;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v21, v22, v4);
}

uint64_t sub_17ECBF4(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_1624980(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 3) != 0)
  {
    if (v8)
    {
      uint64_t v9 = sub_15B4924(*(void *)(a1 + 48));
      v2 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v8 & 2) != 0) {
      v2 += ((9 * (__clz(*(void *)(a1 + 56) | 1) ^ 0x3F) + 73) >> 6) + 1;
    }
  }
  uint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v12 + 31) < 0) {
      uint64_t v13 = *(void *)(v12 + 16);
    }
    else {
      uint64_t v13 = *(unsigned __int8 *)(v12 + 31);
    }
    v2 += v13;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

void sub_17ECD04(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_1879278((std::string *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    int v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 3) != 0)
  {
    if (v9)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v10 = *(void *)(a1 + 48);
      if (!v10)
      {
        uint64_t v11 = *(void *)(a1 + 8);
        unint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
        if (v11) {
          unint64_t v12 = (void *)*v12;
        }
        uint64_t v10 = sub_15C1CB4((uint64_t)v12);
        *(void *)(a1 + 48) = v10;
      }
      if (*(void *)(a2 + 48)) {
        uint64_t v13 = *(uint64_t (****)())(a2 + 48);
      }
      else {
        uint64_t v13 = &off_253F2E8;
      }
      sub_15B04F0(v10, (uint64_t)v13);
    }
    if ((v9 & 2) != 0) {
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
    }
    *(_DWORD *)(a1 + 16) |= v9;
  }
  uint64_t v14 = *(void *)(a2 + 8);
  if (v14)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v14 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_17ECE44(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 1;
  }
  uint64_t result = sub_15B06D8(*(void *)(a1 + 48));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_17ECE70@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.OfflineAreaLookupParameters");
}

uint64_t sub_17ECE80(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_24DE698;
  *(_DWORD *)(a1 + 16) = 0;
  uint64_t v3 = *(void *)(a2 + 8);
  if (v3) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v3 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return a1;
}

void sub_17ECEEC(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_17ECF1C(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17ECF90(void *a1)
{
  sub_17ECF1C(a1);

  operator delete();
}

uint64_t *sub_17ECFC8(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = (uint64_t *)(a1 + 8);
  if (v2) {
    return (uint64_t *)sub_188B4AC(result);
  }
  return result;
}

char *sub_17ECFD8(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v12 = a2;
  int v4 = (uint64_t *)(a1 + 8);
  while (1)
  {
    if (sub_11947B8((uint64_t)a3, &v12, a3[11].i32[1])) {
      return v12;
    }
    uint64_t v5 = v12 + 1;
    unsigned int v6 = *v12;
    if (*v12 < 0)
    {
      unsigned int v7 = v6 + (*v5 << 7);
      unsigned int v6 = v7 - 128;
      if (*v5 < 0)
      {
        uint64_t v5 = (char *)sub_188C180((uint64_t)v12, v7 - 128);
        unsigned int v6 = v8;
      }
      else
      {
        uint64_t v5 = v12 + 2;
      }
    }
    unint64_t v12 = v5;
    if (!v6 || (v6 & 7) == 4) {
      break;
    }
    if (*v4)
    {
      uint64_t v10 = (std::string *)((*v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v10 = (std::string *)sub_188DBD8(v4);
      uint64_t v5 = v12;
    }
    unint64_t v12 = (char *)sub_1885AC0(v6, v10, v5, a3);
    if (!v12) {
      return 0;
    }
  }
  if (v5) {
    a3[10].i32[0] = v6 - 1;
  }
  return v5;
}

char *sub_17ED0D8(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v4 = *(void *)(a1 + 8);
  if ((v4 & 1) == 0) {
    return __dst;
  }
  unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v6 + 31) < 0)
  {
    unsigned int v7 = *(void **)(v6 + 8);
    unint64_t v6 = *(void *)(v6 + 16);
  }
  else
  {
    unsigned int v7 = (void *)(v6 + 8);
    LODWORD(v6) = *(unsigned __int8 *)(v6 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v6)
  {
    uint64_t v8 = (int)v6;
    memcpy(__dst, v7, (int)v6);
    __dst += v8;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v7, v6, __dst);
}

uint64_t sub_17ED170(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (v1)
  {
    unint64_t v4 = v1 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v2 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v2 = *(unsigned __int8 *)(v4 + 31);
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  *(_DWORD *)(a1 + 16) = v2;
  return v2;
}

std::string *sub_17ED1A4(std::string *result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 8);
  if (v2) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v2 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_17ED1C0()
{
  return 1;
}

void *sub_17ED1C8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.OfflineAreaLookupResult");
}

uint64_t sub_17ED1D8(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  unint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = (std::string *)(a1 + 16);
  *(void *)a1 = off_24DE718;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  int v6 = *(_DWORD *)(a2 + 24);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 32);
    uint64_t v8 = (std::string **)sub_188CCE4(a1 + 16, *(_DWORD *)(a2 + 24));
    sub_1879278(v5, v8, (uint64_t *)(v7 + 8), v6, **(_DWORD **)(a1 + 32) - *(_DWORD *)(a1 + 24));
    int v9 = *(_DWORD *)(a1 + 24) + v6;
    *(_DWORD *)(a1 + 24) = v9;
    uint64_t v10 = *(int **)(a1 + 32);
    if (*v10 < v9) {
      *uint64_t v10 = v9;
    }
  }
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  int v11 = *(_DWORD *)(a2 + 48);
  if (v11)
  {
    uint64_t v12 = *(void *)(a2 + 56);
    uint64_t v13 = (uint64_t *)sub_188CCE4(a1 + 40, *(_DWORD *)(a2 + 48));
    sub_12C3F54((uint64_t *)(a1 + 40), v13, (uint64_t *)(v12 + 8), v11, **(_DWORD **)(a1 + 56) - *(_DWORD *)(a1 + 48));
    int v14 = *(_DWORD *)(a1 + 48) + v11;
    *(_DWORD *)(a1 + 48) = v14;
    uint64_t v15 = *(int **)(a1 + 56);
    if (*v15 < v14) {
      int *v15 = v14;
    }
  }
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0;
  int v16 = *(_DWORD *)(a2 + 72);
  if (v16)
  {
    uint64_t v17 = *(void *)(a2 + 80);
    uint64_t v18 = (std::string **)sub_188CCE4(a1 + 64, *(_DWORD *)(a2 + 72));
    sub_1871FA8((uint64_t *)(a1 + 64), v18, (uint64_t *)(v17 + 8), v16, **(_DWORD **)(a1 + 80) - *(_DWORD *)(a1 + 72));
    int v19 = *(_DWORD *)(a1 + 72) + v16;
    *(_DWORD *)(a1 + 72) = v19;
    unint64_t v20 = *(int **)(a1 + 80);
    if (*v20 < v19) {
      int *v20 = v19;
    }
  }
  *(_DWORD *)(a1 + 88) = 0;
  uint64_t v21 = *(void *)(a2 + 8);
  if (v21) {
    sub_188B4F8(v4, (v21 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return a1;
}

void sub_17ED390(_Unwind_Exception *a1)
{
  sub_18701BC(v5);
  sub_12C3ED4(v4);
  sub_1877B38(v3);
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_17ED3FC(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_18701BC(a1 + 8);
  sub_12C3ED4(a1 + 5);
  sub_1877B38(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17ED494(void *a1)
{
  sub_17ED3FC(a1);

  operator delete();
}

uint64_t sub_17ED4CC(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 24);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 32) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_16244A0(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 24) = 0;
  }
  uint64_t v5 = *(unsigned int *)(v1 + 48);
  if ((int)v5 >= 1)
  {
    int v6 = (unsigned char **)(*(void *)(v1 + 56) + 8);
    do
    {
      uint64_t v7 = *v6++;
      uint64_t result = (uint64_t)sub_15B16B4(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(v1 + 48) = 0;
  }
  uint64_t v8 = *(unsigned int *)(v1 + 72);
  if ((int)v8 >= 1)
  {
    int v9 = (uint64_t *)(*(void *)(v1 + 80) + 8);
    do
    {
      uint64_t v10 = *v9++;
      uint64_t result = sub_1626368(v10);
      --v8;
    }
    while (v8);
    *(_DWORD *)(v1 + 72) = 0;
  }
  char v12 = *(unsigned char *)(v1 + 8);
  int v11 = (uint64_t *)(v1 + 8);
  if (v12)
  {
    return sub_188B4AC(v11);
  }
  return result;
}

char *sub_17ED598(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v33 = a2;
  if ((sub_11947B8((uint64_t)a3, &v33, a3[11].i32[1]) & 1) == 0)
  {
    int v6 = (void *)(a1 + 8);
    while (1)
    {
      uint64_t v7 = v33 + 1;
      unsigned int v8 = *v33;
      if (*v33 < 0)
      {
        unsigned int v9 = v8 + (*v7 << 7);
        unsigned int v8 = v9 - 128;
        if (*v7 < 0)
        {
          uint64_t v7 = (char *)sub_188C180((uint64_t)v33, v9 - 128);
          unsigned int v8 = v10;
        }
        else
        {
          uint64_t v7 = v33 + 2;
        }
      }
      unint64_t v33 = v7;
      unsigned int v11 = v8 >> 3;
      if (v8 >> 3 == 3)
      {
        if (v8 == 26)
        {
          uint64_t v15 = v7 - 1;
          while (1)
          {
            int v16 = (unsigned __int8 *)(v15 + 1);
            unint64_t v33 = v15 + 1;
            uint64_t v17 = *(_DWORD **)(a1 + 80);
            if (v17 && (uint64_t v18 = *(int *)(a1 + 72), (int)v18 < *v17))
            {
              *(_DWORD *)(a1 + 72) = v18 + 1;
              uint64_t v19 = *(void *)&v17[2 * v18 + 2];
            }
            else
            {
              sub_1626D70(*(void *)(a1 + 64));
              uint64_t v19 = sub_188CDC8(a1 + 64, v20);
              int v16 = (unsigned __int8 *)v33;
            }
            uint64_t v15 = sub_1712948(a3, v19, v16);
            unint64_t v33 = v15;
            if (!v15) {
              return 0;
            }
            if (*(void *)a3 <= (unint64_t)v15 || *v15 != 26) {
              goto LABEL_50;
            }
          }
        }
      }
      else if (v11 == 2)
      {
        if (v8 == 18)
        {
          uint64_t v21 = v7 - 1;
          while (1)
          {
            uint64_t v22 = (unsigned __int8 *)(v21 + 1);
            unint64_t v33 = v21 + 1;
            uint64_t v23 = *(_DWORD **)(a1 + 56);
            if (v23 && (uint64_t v24 = *(int *)(a1 + 48), (int)v24 < *v23))
            {
              *(_DWORD *)(a1 + 48) = v24 + 1;
              uint64_t v25 = *(void *)&v23[2 * v24 + 2];
            }
            else
            {
              uint64_t v26 = sub_15C19EC(*(void *)(a1 + 40));
              uint64_t v25 = sub_188CDC8(a1 + 40, v26);
              uint64_t v22 = (unsigned __int8 *)v33;
            }
            uint64_t v21 = sub_11E1C60(a3, v25, v22);
            unint64_t v33 = v21;
            if (!v21) {
              return 0;
            }
            if (*(void *)a3 <= (unint64_t)v21 || *v21 != 18) {
              goto LABEL_50;
            }
          }
        }
      }
      else if (v11 == 1 && v8 == 10)
      {
        int v27 = v7 - 1;
        while (1)
        {
          int v28 = (unsigned __int8 *)(v27 + 1);
          unint64_t v33 = v27 + 1;
          uint64_t v29 = *(_DWORD **)(a1 + 32);
          if (v29 && (uint64_t v30 = *(int *)(a1 + 24), (int)v30 < *v29))
          {
            *(_DWORD *)(a1 + 24) = v30 + 1;
            uint64_t v31 = *(void *)&v29[2 * v30 + 2];
          }
          else
          {
            uint64_t v32 = sub_1626B70(*(void *)(a1 + 16));
            uint64_t v31 = sub_188CDC8(a1 + 16, (uint64_t)v32);
            int v28 = (unsigned __int8 *)v33;
          }
          int v27 = sub_17EC93C(a3, v31, v28);
          unint64_t v33 = v27;
          if (!v27) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v27 || *v27 != 10) {
            goto LABEL_50;
          }
        }
      }
      if (!v8 || (v8 & 7) == 4) {
        break;
      }
      if (*v6)
      {
        int v14 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        int v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        uint64_t v7 = v33;
      }
      unint64_t v33 = (char *)sub_1885AC0(v8, v14, v7, a3);
      if (!v33) {
        return 0;
      }
LABEL_50:
      if (sub_11947B8((uint64_t)a3, &v33, a3[11].i32[1])) {
        return v33;
      }
    }
    if (v7)
    {
      a3[10].i32[0] = v8 - 1;
      return v33;
    }
    return 0;
  }
  return v33;
}

char *sub_17ED880(uint64_t a1, char *__dst, _DWORD *a3)
{
  int v6 = *(_DWORD *)(a1 + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unsigned int v10 = __dst + 2;
      }
      __dst = sub_1624800(v8, (unint64_t)v10, a3);
    }
  }
  int v11 = *(_DWORD *)(a1 + 48);
  if (v11)
  {
    for (int j = 0; j != v11; ++j)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v13 = *(void *)(*(void *)(a1 + 56) + 8 * j + 8);
      *__dst = 18;
      unsigned int v14 = *(_DWORD *)(v13 + 20);
      __dst[1] = v14;
      if (v14 > 0x7F) {
        uint64_t v15 = sub_188A9CC(v14, __dst + 1);
      }
      else {
        uint64_t v15 = __dst + 2;
      }
      __dst = sub_15B1A68(v13, (unint64_t)v15, a3);
    }
  }
  int v16 = *(_DWORD *)(a1 + 72);
  if (v16)
  {
    for (int k = 0; k != v16; ++k)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v18 = *(void *)(*(void *)(a1 + 80) + 8 * k + 8);
      *__dst = 26;
      unsigned int v19 = *(_DWORD *)(v18 + 20);
      __dst[1] = v19;
      if (v19 > 0x7F) {
        uint64_t v20 = sub_188A9CC(v19, __dst + 1);
      }
      else {
        uint64_t v20 = __dst + 2;
      }
      __dst = sub_162660C(v18, (unint64_t)v20, a3);
    }
  }
  uint64_t v21 = *(void *)(a1 + 8);
  if ((v21 & 1) == 0) {
    return __dst;
  }
  unint64_t v23 = v21 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v23 + 31) < 0)
  {
    uint64_t v24 = *(void **)(v23 + 8);
    uint64_t v25 = *(void *)(v23 + 16);
  }
  else
  {
    uint64_t v24 = (void *)(v23 + 8);
    LODWORD(v25) = *(unsigned __int8 *)(v23 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v25)
  {
    uint64_t v26 = (int)v25;
    memcpy(__dst, v24, (int)v25);
    __dst += v26;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v24, v25, __dst);
}

uint64_t sub_17EDACC(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_1624980(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(int *)(a1 + 48);
  uint64_t v9 = v2 + v8;
  uint64_t v10 = *(void *)(a1 + 56);
  if (v10) {
    int v11 = (uint64_t *)(v10 + 8);
  }
  else {
    int v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_15B1D1C(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  uint64_t v15 = *(int *)(a1 + 72);
  uint64_t v16 = v9 + v15;
  uint64_t v17 = *(void *)(a1 + 80);
  if (v17) {
    uint64_t v18 = (uint64_t *)(v17 + 8);
  }
  else {
    uint64_t v18 = 0;
  }
  if (v15)
  {
    uint64_t v19 = 8 * v15;
    do
    {
      uint64_t v20 = *v18++;
      uint64_t v21 = sub_16267FC(v20);
      v16 += v21 + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6);
      v19 -= 8;
    }
    while (v19);
  }
  uint64_t v22 = *(void *)(a1 + 8);
  if (v22)
  {
    unint64_t v24 = v22 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v24 + 31) < 0) {
      uint64_t v25 = *(void *)(v24 + 16);
    }
    else {
      uint64_t v25 = *(unsigned __int8 *)(v24 + 31);
    }
    v16 += v25;
  }
  *(_DWORD *)(a1 + 88) = v16;
  return v16;
}

void sub_17EDC1C(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 32) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4(a1 + 16, *(_DWORD *)(a2 + 24));
    sub_1879278((std::string *)(a1 + 16), v6, v5, v4, **(_DWORD **)(a1 + 32) - *(_DWORD *)(a1 + 24));
    int v7 = *(_DWORD *)(a1 + 24) + v4;
    *(_DWORD *)(a1 + 24) = v7;
    uint64_t v8 = *(int **)(a1 + 32);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 48);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 56) + 8);
    int v11 = (uint64_t *)sub_188CCE4(a1 + 40, *(_DWORD *)(a2 + 48));
    sub_12C3F54((uint64_t *)(a1 + 40), v11, v10, v9, **(_DWORD **)(a1 + 56) - *(_DWORD *)(a1 + 48));
    int v12 = *(_DWORD *)(a1 + 48) + v9;
    *(_DWORD *)(a1 + 48) = v12;
    uint64_t v13 = *(int **)(a1 + 56);
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 72);
  if (v14)
  {
    uint64_t v15 = (uint64_t *)(*(void *)(a2 + 80) + 8);
    uint64_t v16 = (std::string **)sub_188CCE4(a1 + 64, *(_DWORD *)(a2 + 72));
    sub_1871FA8((uint64_t *)(a1 + 64), v16, v15, v14, **(_DWORD **)(a1 + 80) - *(_DWORD *)(a1 + 72));
    int v17 = *(_DWORD *)(a1 + 72) + v14;
    *(_DWORD *)(a1 + 72) = v17;
    uint64_t v18 = *(int **)(a1 + 80);
    if (*v18 < v17) {
      int *v18 = v17;
    }
  }
  uint64_t v19 = *(void *)(a2 + 8);
  if (v19)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v19 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

BOOL sub_17EDDB4(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 48);
  do
  {
    int v3 = v2;
    if ((int)v2 < 1) {
      break;
    }
    uint64_t v4 = v2 - 1;
    BOOL v5 = sub_15B1FC0(*(void *)(*(void *)(a1 + 56) + 8 * v2));
    uint64_t v2 = v4;
  }
  while (v5);
  return v3 < 1;
}

void *sub_17EDE0C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.OfflinePolygonQuadNodesParameters");
}

uint64_t sub_17EDE1C(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_24DE798;
  *(_DWORD *)(a1 + 16) = 0;
  uint64_t v3 = *(void *)(a2 + 8);
  if (v3) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v3 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return a1;
}

void sub_17EDE88(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_17EDEB8(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17EDF2C(void *a1)
{
  sub_17EDEB8(a1);

  operator delete();
}

uint64_t *sub_17EDF64(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = (uint64_t *)(a1 + 8);
  if (v2) {
    return (uint64_t *)sub_188B4AC(result);
  }
  return result;
}

char *sub_17EDF74(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v12 = a2;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  while (1)
  {
    if (sub_11947B8((uint64_t)a3, &v12, a3[11].i32[1])) {
      return v12;
    }
    BOOL v5 = v12 + 1;
    unsigned int v6 = *v12;
    if (*v12 < 0)
    {
      unsigned int v7 = v6 + (*v5 << 7);
      unsigned int v6 = v7 - 128;
      if (*v5 < 0)
      {
        BOOL v5 = (char *)sub_188C180((uint64_t)v12, v7 - 128);
        unsigned int v6 = v8;
      }
      else
      {
        BOOL v5 = v12 + 2;
      }
    }
    int v12 = v5;
    if (!v6 || (v6 & 7) == 4) {
      break;
    }
    if (*v4)
    {
      uint64_t v10 = (std::string *)((*v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v10 = (std::string *)sub_188DBD8(v4);
      BOOL v5 = v12;
    }
    int v12 = (char *)sub_1885AC0(v6, v10, v5, a3);
    if (!v12) {
      return 0;
    }
  }
  if (v5) {
    a3[10].i32[0] = v6 - 1;
  }
  return v5;
}

char *sub_17EE074(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v4 = *(void *)(a1 + 8);
  if ((v4 & 1) == 0) {
    return __dst;
  }
  unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v6 + 31) < 0)
  {
    unsigned int v7 = *(void **)(v6 + 8);
    unint64_t v6 = *(void *)(v6 + 16);
  }
  else
  {
    unsigned int v7 = (void *)(v6 + 8);
    LODWORD(v6) = *(unsigned __int8 *)(v6 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v6)
  {
    uint64_t v8 = (int)v6;
    memcpy(__dst, v7, (int)v6);
    __dst += v8;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v7, v6, __dst);
}

uint64_t sub_17EE10C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (v1)
  {
    unint64_t v4 = v1 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v2 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v2 = *(unsigned __int8 *)(v4 + 31);
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  *(_DWORD *)(a1 + 16) = v2;
  return v2;
}

std::string *sub_17EE140(std::string *result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 8);
  if (v2) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v2 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_17EE15C()
{
  return 1;
}

void *sub_17EE164@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.OfflinePolygonQuadNodesResult");
}

uint64_t sub_17EE174(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  unint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)a1 = off_24DE818;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  BOOL v5 = (uint64_t *)(a1 + 24);
  *(_DWORD *)(a1 + 44) = 0;
  *(void *)(a1 + 28) = 0;
  *(void *)(a1 + 36) = 0;
  *(void *)(a1 + 20) = 0;
  int v6 = *(_DWORD *)(a2 + 32);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 40);
    uint64_t v8 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_10E4FFC(v5, v8, (uint64_t *)(v7 + 8), v6, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v9 = *(_DWORD *)(a1 + 32) + v6;
    *(_DWORD *)(a1 + 32) = v9;
    uint64_t v10 = *(int **)(a1 + 40);
    if (*v10 < v9) {
      *uint64_t v10 = v9;
    }
  }
  uint64_t v11 = *(void *)(a2 + 8);
  if (v11) {
    sub_188B4F8(v4, (v11 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  return a1;
}

void sub_17EE268(_Unwind_Exception *a1)
{
  sub_11DB7D4(v3);
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_17EE2AC(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_11DB7D4(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17EE32C(void *a1)
{
  sub_17EE2AC(a1);

  operator delete();
}

unsigned char *sub_17EE364(unsigned char *result)
{
  uint64_t v1 = result;
  uint64_t v2 = *((unsigned int *)result + 8);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*((void *)result + 5) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_15B09D0(v4);
      --v2;
    }
    while (v2);
    *((_DWORD *)v1 + 8) = 0;
  }
  char v6 = v1[8];
  BOOL v5 = v1 + 8;
  *((_DWORD *)v5 + 10) = 0;
  *((_DWORD *)v5 + 2) = 0;
  if (v6)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

char *sub_17EE3E8(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v26 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v26 + 1;
    unsigned int v9 = *v26;
    if (*v26 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v26, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v26 + 2;
      }
    }
    uint64_t v26 = v8;
    if (v9 >> 3 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_13;
    }
    uint64_t v15 = v8 + 1;
    int v16 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_25;
    }
    int v17 = *v15;
    int v16 = v16 + (v17 << 7) - 128;
    if ((v17 & 0x80000000) == 0)
    {
      uint64_t v15 = v8 + 2;
LABEL_25:
      uint64_t v26 = v15;
      *(_DWORD *)(a1 + 48) = v16;
      int v5 = 1;
      goto LABEL_36;
    }
    unint64_t v24 = (char *)sub_188C0D0((uint64_t)v8, v16);
    uint64_t v26 = v24;
    *(_DWORD *)(a1 + 48) = v25;
    int v5 = 1;
    if (!v24) {
      goto LABEL_41;
    }
LABEL_36:
    if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 >> 3 == 1 && v9 == 10)
  {
    uint64_t v18 = v8 - 1;
    while (1)
    {
      uint64_t v19 = (unsigned __int8 *)(v18 + 1);
      uint64_t v26 = v18 + 1;
      uint64_t v20 = *(_DWORD **)(a1 + 40);
      if (v20 && (uint64_t v21 = *(int *)(a1 + 32), (int)v21 < *v20))
      {
        *(_DWORD *)(a1 + 32) = v21 + 1;
        uint64_t v22 = *(void *)&v20[2 * v21 + 2];
      }
      else
      {
        uint64_t v23 = sub_15C1918(*(void *)(a1 + 24));
        uint64_t v22 = sub_188CDC8(a1 + 24, v23);
        uint64_t v19 = (unsigned __int8 *)v26;
      }
      uint64_t v18 = sub_1198F14(a3, v22, v19);
      uint64_t v26 = v18;
      if (!v18) {
        goto LABEL_41;
      }
      if (*(void *)a3 <= (unint64_t)v18 || *v18 != 10) {
        goto LABEL_36;
      }
    }
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      int v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      int v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = v26;
    }
    uint64_t v26 = (char *)sub_1885AC0(v9, v14, v8, a3);
    if (!v26) {
      goto LABEL_41;
    }
    goto LABEL_36;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_41:
  uint64_t v26 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v26;
}

char *sub_17EE610(uint64_t a1, char *__dst, _DWORD *a3)
{
  int v6 = *(_DWORD *)(a1 + 32);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 44);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unsigned int v10 = __dst + 2;
      }
      __dst = sub_15B0C0C(v8, v10, a3);
    }
  }
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unsigned int v11 = *(_DWORD *)(a1 + 48);
    *__dst = 16;
    __dst[1] = v11;
    if (v11 > 0x7F)
    {
      __dst[1] = v11 | 0x80;
      unsigned int v12 = v11 >> 7;
      __dst[2] = v11 >> 7;
      __dst += 3;
      if (v11 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unsigned int v13 = v12 >> 14;
          v12 >>= 7;
          *__dst++ = v12;
        }
        while (v13);
      }
    }
    else
    {
      __dst += 2;
    }
  }
  uint64_t v14 = *(void *)(a1 + 8);
  if ((v14 & 1) == 0) {
    return __dst;
  }
  unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v16 + 31) < 0)
  {
    int v17 = *(void **)(v16 + 8);
    uint64_t v18 = *(void *)(v16 + 16);
  }
  else
  {
    int v17 = (void *)(v16 + 8);
    LODWORD(v18) = *(unsigned __int8 *)(v16 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v18)
  {
    uint64_t v19 = (int)v18;
    memcpy(__dst, v17, (int)v18);
    __dst += v19;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v17, v18, __dst);
}

uint64_t sub_17EE7D4(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_15B0D90(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  if (*(unsigned char *)(a1 + 16)) {
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 48) | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

void sub_17EE8B0(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_10E4FFC((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    uint64_t v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  if (*(unsigned char *)(a2 + 16))
  {
    int v9 = *(_DWORD *)(a2 + 48);
    *(_DWORD *)(a1 + 16) |= 1u;
    *(_DWORD *)(a1 + 48) = v9;
  }
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

BOOL sub_17EE99C(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  do
  {
    int v3 = v2;
    if ((int)v2 < 1) {
      break;
    }
    uint64_t v4 = v2 - 1;
    char v5 = sub_15B0F18(*(void *)(*(void *)(a1 + 40) + 8 * v2));
    uint64_t v2 = v4;
  }
  while ((v5 & 1) != 0);
  return v3 < 1;
}

void *sub_17EE9F4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.OfflineProactiveRegionsParameters");
}

uint64_t sub_17EEA04(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  char v5 = (uint64_t *)(a1 + 16);
  *(void *)a1 = off_24DE898;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  int v6 = *(_DWORD *)(a2 + 24);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 32);
    uint64_t v8 = (uint64_t *)sub_188CCE4(a1 + 16, *(_DWORD *)(a2 + 24));
    sub_12C3F54(v5, v8, (uint64_t *)(v7 + 8), v6, **(_DWORD **)(a1 + 32) - *(_DWORD *)(a1 + 24));
    int v9 = *(_DWORD *)(a1 + 24) + v6;
    *(_DWORD *)(a1 + 24) = v9;
    uint64_t v10 = *(int **)(a1 + 32);
    if (*v10 < v9) {
      *uint64_t v10 = v9;
    }
  }
  *(_DWORD *)(a1 + 40) = 0;
  uint64_t v11 = *(void *)(a2 + 8);
  if (v11) {
    sub_188B4F8(v4, (v11 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return a1;
}

void sub_17EEAE4(_Unwind_Exception *a1)
{
  sub_12C3ED4(v3);
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_17EEB28(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_12C3ED4(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17EEBA8(void *a1)
{
  sub_17EEB28(a1);

  operator delete();
}

unsigned char *sub_17EEBE0(unsigned char *result)
{
  uint64_t v1 = result;
  uint64_t v2 = *((unsigned int *)result + 6);
  if ((int)v2 >= 1)
  {
    int v3 = (unsigned char **)(*((void *)result + 4) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_15B16B4(v4);
      --v2;
    }
    while (v2);
    *((_DWORD *)v1 + 6) = 0;
  }
  char v6 = v1[8];
  char v5 = (uint64_t *)(v1 + 8);
  if (v6)
  {
    return (unsigned char *)sub_188B4AC(v5);
  }
  return result;
}

char *sub_17EEC5C(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v19 = a2;
  if ((sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1]) & 1) == 0)
  {
    char v5 = (void *)(a1 + 8);
    while (1)
    {
      char v6 = v19 + 1;
      unsigned int v7 = *v19;
      if (*v19 < 0)
      {
        unsigned int v8 = v7 + (*v6 << 7);
        unsigned int v7 = v8 - 128;
        if (*v6 < 0)
        {
          char v6 = (char *)sub_188C180((uint64_t)v19, v8 - 128);
          unsigned int v7 = v9;
        }
        else
        {
          char v6 = v19 + 2;
        }
      }
      uint64_t v19 = v6;
      if (v7 == 10)
      {
        unsigned int v12 = v6 - 1;
        while (1)
        {
          unsigned int v13 = (unsigned __int8 *)(v12 + 1);
          uint64_t v19 = v12 + 1;
          uint64_t v14 = *(_DWORD **)(a1 + 32);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 24), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 24) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            uint64_t v17 = sub_15C19EC(*(void *)(a1 + 16));
            uint64_t v16 = sub_188CDC8(a1 + 16, v17);
            unsigned int v13 = (unsigned __int8 *)v19;
          }
          unsigned int v12 = sub_11E1C60(a3, v16, v13);
          uint64_t v19 = v12;
          if (!v12) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_24;
          }
        }
      }
      if (!v7 || (v7 & 7) == 4) {
        break;
      }
      if (*v5)
      {
        uint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        uint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        char v6 = v19;
      }
      uint64_t v19 = (char *)sub_1885AC0(v7, v11, v6, a3);
      if (!v19) {
        return 0;
      }
LABEL_24:
      if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
        return v19;
      }
    }
    if (v6)
    {
      a3[10].i32[0] = v7 - 1;
      return v19;
    }
    return 0;
  }
  return v19;
}

char *sub_17EEDFC(uint64_t a1, char *__dst, _DWORD *a3)
{
  int v6 = *(_DWORD *)(a1 + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        uint64_t v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        uint64_t v10 = __dst + 2;
      }
      __dst = sub_15B1A68(v8, (unint64_t)v10, a3);
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return __dst;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    uint64_t v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    uint64_t v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(__dst, v14, (int)v15);
    __dst += v16;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, __dst);
}

uint64_t sub_17EEF40(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_15B1D1C(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 40) = v2;
  return v2;
}

BOOL sub_17EEFF0(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 24);
  do
  {
    int v3 = v2;
    if ((int)v2 < 1) {
      break;
    }
    uint64_t v4 = v2 - 1;
    BOOL v5 = sub_15B1FC0(*(void *)(*(void *)(a1 + 32) + 8 * v2));
    uint64_t v2 = v4;
  }
  while (v5);
  return v3 < 1;
}

void *sub_17EF048@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.OfflineProactiveRegionsResult");
}

uint64_t sub_17EF058(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  BOOL v5 = (uint64_t *)(a1 + 16);
  *(void *)a1 = off_24DE918;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  int v6 = *(_DWORD *)(a2 + 24);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 32);
    uint64_t v8 = (std::string **)sub_188CCE4(a1 + 16, *(_DWORD *)(a2 + 24));
    sub_1879304(v5, v8, (uint64_t *)(v7 + 8), v6, **(_DWORD **)(a1 + 32) - *(_DWORD *)(a1 + 24));
    int v9 = *(_DWORD *)(a1 + 24) + v6;
    *(_DWORD *)(a1 + 24) = v9;
    unint64_t v10 = *(int **)(a1 + 32);
    if (*v10 < v9) {
      *unint64_t v10 = v9;
    }
  }
  *(_DWORD *)(a1 + 40) = 0;
  uint64_t v11 = *(void *)(a2 + 8);
  if (v11) {
    sub_188B4F8(v4, (v11 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return a1;
}

void sub_17EF138(_Unwind_Exception *a1)
{
  sub_1877BB8(v3);
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_17EF17C(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1877BB8(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17EF1FC(void *a1)
{
  sub_17EF17C(a1);

  operator delete();
}

uint64_t sub_17EF234(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 24);
  if ((int)v2 >= 1)
  {
    int v3 = (uint64_t *)(*(void *)(result + 32) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_16250D8(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 24) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  BOOL v5 = (uint64_t *)(v1 + 8);
  if (v6)
  {
    return sub_188B4AC(v5);
  }
  return result;
}

char *sub_17EF2B0(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v19 = a2;
  if ((sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1]) & 1) == 0)
  {
    BOOL v5 = (void *)(a1 + 8);
    while (1)
    {
      char v6 = v19 + 1;
      unsigned int v7 = *v19;
      if (*v19 < 0)
      {
        unsigned int v8 = v7 + (*v6 << 7);
        unsigned int v7 = v8 - 128;
        if (*v6 < 0)
        {
          char v6 = (char *)sub_188C180((uint64_t)v19, v8 - 128);
          unsigned int v7 = v9;
        }
        else
        {
          char v6 = v19 + 2;
        }
      }
      uint64_t v19 = v6;
      if (v7 == 10)
      {
        unsigned int v12 = v6 - 1;
        while (1)
        {
          unint64_t v13 = (unsigned __int8 *)(v12 + 1);
          uint64_t v19 = v12 + 1;
          uint64_t v14 = *(_DWORD **)(a1 + 32);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 24), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 24) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            sub_1626C70(*(void *)(a1 + 16));
            uint64_t v16 = sub_188CDC8(a1 + 16, v17);
            unint64_t v13 = (unsigned __int8 *)v19;
          }
          unsigned int v12 = sub_17EF450(a3, v16, v13);
          uint64_t v19 = v12;
          if (!v12) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_24;
          }
        }
      }
      if (!v7 || (v7 & 7) == 4) {
        break;
      }
      if (*v5)
      {
        uint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        uint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        char v6 = v19;
      }
      uint64_t v19 = (char *)sub_1885AC0(v7, v11, v6, a3);
      if (!v19) {
        return 0;
      }
LABEL_24:
      if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
        return v19;
      }
    }
    if (v6)
    {
      a3[10].i32[0] = v7 - 1;
      return v19;
    }
    return 0;
  }
  return v19;
}

char *sub_17EF450(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_162517C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_17EF4E0(uint64_t a1, char *__dst, _DWORD *a3)
{
  int v6 = *(_DWORD *)(a1 + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unint64_t v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unint64_t v10 = __dst + 2;
      }
      __dst = sub_1625490(v8, (unint64_t)v10, a3);
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return __dst;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    uint64_t v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    uint64_t v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(__dst, v14, (int)v15);
    __dst += v16;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, __dst);
}

uint64_t sub_17EF624(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_16256E8(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 40) = v2;
  return v2;
}

void sub_17EF6D4(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 32) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4(a1 + 16, *(_DWORD *)(a2 + 24));
    sub_1879304((uint64_t *)(a1 + 16), v6, v5, v4, **(_DWORD **)(a1 + 32) - *(_DWORD *)(a1 + 24));
    int v7 = *(_DWORD *)(a1 + 24) + v4;
    *(_DWORD *)(a1 + 24) = v7;
    uint64_t v8 = *(int **)(a1 + 32);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_17EF7A4()
{
  return 1;
}

void *sub_17EF7AC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.OfflineUpdateManifestParameters");
}

uint64_t sub_17EF7BC(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_24DE998;
  *(_DWORD *)(a1 + 16) = 0;
  uint64_t v3 = *(void *)(a2 + 8);
  if (v3) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v3 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return a1;
}

void sub_17EF828(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_17EF858(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17EF8CC(void *a1)
{
  sub_17EF858(a1);

  operator delete();
}

uint64_t *sub_17EF904(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = (uint64_t *)(a1 + 8);
  if (v2) {
    return (uint64_t *)sub_188B4AC(result);
  }
  return result;
}

char *sub_17EF914(uint64_t a1, char *a2, int32x2_t *a3)
{
  unsigned int v12 = a2;
  int v4 = (uint64_t *)(a1 + 8);
  while (1)
  {
    if (sub_11947B8((uint64_t)a3, &v12, a3[11].i32[1])) {
      return v12;
    }
    uint64_t v5 = v12 + 1;
    unsigned int v6 = *v12;
    if (*v12 < 0)
    {
      unsigned int v7 = v6 + (*v5 << 7);
      unsigned int v6 = v7 - 128;
      if (*v5 < 0)
      {
        uint64_t v5 = (char *)sub_188C180((uint64_t)v12, v7 - 128);
        unsigned int v6 = v8;
      }
      else
      {
        uint64_t v5 = v12 + 2;
      }
    }
    unsigned int v12 = v5;
    if (!v6 || (v6 & 7) == 4) {
      break;
    }
    if (*v4)
    {
      unint64_t v10 = (std::string *)((*v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v10 = (std::string *)sub_188DBD8(v4);
      uint64_t v5 = v12;
    }
    unsigned int v12 = (char *)sub_1885AC0(v6, v10, v5, a3);
    if (!v12) {
      return 0;
    }
  }
  if (v5) {
    a3[10].i32[0] = v6 - 1;
  }
  return v5;
}

char *sub_17EFA14(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v4 = *(void *)(a1 + 8);
  if ((v4 & 1) == 0) {
    return __dst;
  }
  unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v6 + 31) < 0)
  {
    unsigned int v7 = *(void **)(v6 + 8);
    unint64_t v6 = *(void *)(v6 + 16);
  }
  else
  {
    unsigned int v7 = (void *)(v6 + 8);
    LODWORD(v6) = *(unsigned __int8 *)(v6 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v6)
  {
    uint64_t v8 = (int)v6;
    memcpy(__dst, v7, (int)v6);
    __dst += v8;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v7, v6, __dst);
}

uint64_t sub_17EFAAC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (v1)
  {
    unint64_t v4 = v1 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v2 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v2 = *(unsigned __int8 *)(v4 + 31);
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  *(_DWORD *)(a1 + 16) = v2;
  return v2;
}

std::string *sub_17EFAE0(std::string *result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 8);
  if (v2) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v2 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_17EFAFC()
{
  return 1;
}

void *sub_17EFB04@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.OfflineUpdateManifestResult");
}

void *sub_17EFB14(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17EFB88(void *a1)
{
  sub_17EFB14(a1);

  operator delete();
}

uint64_t sub_17EFBC0(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 7) != 0)
  {
    *(_DWORD *)(a1 + 32) = 0;
    *(void *)(a1 + 24) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_17EFBE8(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v32 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v32, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unsigned int v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v32 + 1;
    unsigned int v9 = *v32;
    if (*v32 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v32, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v32 + 2;
      }
    }
    uint64_t v32 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 == 3)
    {
      if (v9 != 24) {
        goto LABEL_14;
      }
      uint64_t v16 = v8 + 1;
      unint64_t v17 = *v8;
      if (*v8 < 0)
      {
        int v18 = *v16;
        int v19 = v17 + (v18 << 7);
        unint64_t v17 = (v19 - 128);
        if (v18 < 0)
        {
          uint64_t v32 = (char *)sub_188C138((uint64_t)v8, (v19 - 128));
          if (!v32) {
            goto LABEL_60;
          }
          unint64_t v17 = v26;
          goto LABEL_27;
        }
        uint64_t v16 = v8 + 2;
      }
      uint64_t v32 = v16;
LABEL_27:
      if (v17 <= 0x1D)
      {
        *(_DWORD *)(a1 + 16) |= 4u;
        *(_DWORD *)(a1 + 32) = v17;
        goto LABEL_40;
      }
      if (*v7) {
        uint64_t v30 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        uint64_t v30 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      int v31 = 3;
      goto LABEL_54;
    }
    if (v12 == 2) {
      break;
    }
    if (v12 != 1 || v9 != 8) {
      goto LABEL_14;
    }
    unint64_t v24 = v8 + 1;
    LODWORD(v23) = *v8;
    if ((v23 & 0x80) == 0) {
      goto LABEL_39;
    }
    int v25 = *v24;
    uint64_t v23 = v23 + (v25 << 7) - 128;
    if ((v25 & 0x80000000) == 0)
    {
      unint64_t v24 = v8 + 2;
LABEL_39:
      uint64_t v32 = v24;
      *(_DWORD *)(a1 + 24) = v23;
      int v5 = 1;
      goto LABEL_40;
    }
    int v28 = (char *)sub_188C138((uint64_t)v8, v23);
    uint64_t v32 = v28;
    *(_DWORD *)(a1 + 24) = v29;
    int v5 = 1;
    if (!v28) {
      goto LABEL_60;
    }
LABEL_40:
    if (sub_11947B8((uint64_t)a3, &v32, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 == 16)
  {
    uint64_t v20 = v8 + 1;
    unint64_t v17 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_33;
    }
    int v21 = *v20;
    int v22 = v17 + (v21 << 7);
    unint64_t v17 = (v22 - 128);
    if (v21 < 0)
    {
      uint64_t v32 = (char *)sub_188C138((uint64_t)v8, (v22 - 128));
      if (!v32) {
        goto LABEL_60;
      }
      unint64_t v17 = v27;
    }
    else
    {
      uint64_t v20 = v8 + 2;
LABEL_33:
      uint64_t v32 = v20;
    }
    if (v17 <= 0xA)
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      *(_DWORD *)(a1 + 28) = v17;
      goto LABEL_40;
    }
    if (*v7) {
      uint64_t v30 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else {
      uint64_t v30 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
    }
    int v31 = 2;
LABEL_54:
    sub_188C020(v31, v17, v30);
    goto LABEL_40;
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (*v7)
    {
      uint64_t v15 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = v32;
    }
    uint64_t v32 = (char *)sub_1885AC0(v9, v15, v8, a3);
    if (!v32) {
      goto LABEL_60;
    }
    goto LABEL_40;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_60:
  uint64_t v32 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v32;
}

unsigned char *sub_17EFEBC(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  unint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      unint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 24);
    *unint64_t v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 28);
    *unint64_t v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v13 = *(int *)(a1 + 32);
    *unint64_t v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unint64_t v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return v4;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    int v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    int v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(v4, v19, (int)v20);
    v4 += v21;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v19, v20, v4);
}

uint64_t sub_17F00DC(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 7) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_19;
  }
  if (v1)
  {
    int v3 = *(_DWORD *)(a1 + 24);
    if (v3 < 0)
    {
      uint64_t v2 = 11;
      if ((v1 & 2) == 0) {
        goto LABEL_14;
      }
    }
    else
    {
      uint64_t v2 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v1 & 2) == 0) {
        goto LABEL_14;
      }
    }
  }
  else
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_14;
    }
  }
  int v4 = *(_DWORD *)(a1 + 28);
  if (v4 < 0) {
    uint64_t v5 = 11;
  }
  else {
    uint64_t v5 = ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v2 += v5;
LABEL_14:
  if ((v1 & 4) != 0)
  {
    int v6 = *(_DWORD *)(a1 + 32);
    if (v6 < 0) {
      uint64_t v7 = 11;
    }
    else {
      uint64_t v7 = ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v7;
  }
LABEL_19:
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_17F01D0()
{
  return 1;
}

void *sub_17F01D8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.AutocompleteResultSortPriorityMapping");
}

uint64_t sub_17F01E8(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (uint64_t *)(a1 + 8);
  *(void *)a1 = off_24DEA98;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v5 = (uint64_t *)(a1 + 24);
  *(_DWORD *)(a1 + 44) = 0;
  *(void *)(a1 + 28) = 0;
  *(void *)(a1 + 36) = 0;
  *(void *)(a1 + 20) = 0;
  int v6 = *(_DWORD *)(a2 + 32);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 40);
    uint64_t v8 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_14DF40C(v5, v8, (uint64_t *)(v7 + 8), v6, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v9 = *(_DWORD *)(a1 + 32) + v6;
    *(_DWORD *)(a1 + 32) = v9;
    unint64_t v10 = *(int **)(a1 + 40);
    if (*v10 < v9) {
      *unint64_t v10 = v9;
    }
  }
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  int v11 = *(_DWORD *)(a2 + 48);
  if (v11)
  {
    sub_188C80C((unsigned int *)(a1 + 48), v11);
    unint64_t v12 = *(void **)(a1 + 56);
    *(_DWORD *)(a1 + 48) += *(_DWORD *)(a2 + 48);
    memcpy(v12, *(const void **)(a2 + 56), 4 * *(int *)(a2 + 48));
  }
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = 0;
  int v13 = *(_DWORD *)(a2 + 64);
  if (v13)
  {
    sub_188C80C((unsigned int *)(a1 + 64), v13);
    unint64_t v14 = *(void **)(a1 + 72);
    *(_DWORD *)(a1 + 64) += *(_DWORD *)(a2 + 64);
    memcpy(v14, *(const void **)(a2 + 72), 4 * *(int *)(a2 + 64));
  }
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0;
  int v15 = *(_DWORD *)(a2 + 80);
  if (v15)
  {
    sub_188C80C((unsigned int *)(a1 + 80), v15);
    uint64_t v16 = *(void **)(a1 + 88);
    *(_DWORD *)(a1 + 80) += *(_DWORD *)(a2 + 80);
    memcpy(v16, *(const void **)(a2 + 88), 4 * *(int *)(a2 + 80));
  }
  uint64_t v17 = *(void *)(a2 + 8);
  if (v17) {
    sub_188B4F8(v4, (v17 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 96) = &qword_2550250;
  if (*(unsigned char *)(a2 + 16))
  {
    unint64_t v18 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      unint64_t v18 = (uint64_t *)*v18;
    }
    sub_1881DF4((std::string **)(a1 + 96), (long long *)(*(void *)(a2 + 96) & 0xFFFFFFFFFFFFFFFELL), v18);
  }
  long long v19 = *(_OWORD *)(a2 + 104);
  *(_DWORD *)(a1 + 120) = *(_DWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 104) = v19;
  return a1;
}

void sub_17F03D8(_Unwind_Exception *a1)
{
  sub_1889DA8(v5);
  sub_1889DA8(v4);
  sub_14DE5F0(v3);
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_17F0450(uint64_t a1)
{
  int v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 96);
  if (*(uint64_t **)(a1 + 96) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  sub_1889DA8(a1 + 80);
  sub_1889DA8(a1 + 64);
  sub_1889DA8(a1 + 48);
  sub_14DE5F0((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17F0514(uint64_t a1)
{
  sub_17F0450(a1);

  operator delete();
}

uint64_t sub_17F054C(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    int v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_1318B10(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  *(_DWORD *)(v1 + 48) = 0;
  *(_DWORD *)(v1 + 64) = 0;
  *(_DWORD *)(v1 + 80) = 0;
  int v5 = *(_DWORD *)(v1 + 16);
  if (v5)
  {
    unint64_t v6 = *(void *)(v1 + 96) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v6 + 23) < 0)
    {
      **(unsigned char **)unint64_t v6 = 0;
      *(void *)(v6 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v6 = 0;
      *(unsigned char *)(v6 + 23) = 0;
    }
  }
  if ((v5 & 0xFE) != 0)
  {
    *(void *)(v1 + 104) = 0;
    *(void *)(v1 + 112) = 0;
  }
  char v8 = *(unsigned char *)(v1 + 8);
  uint64_t v7 = v1 + 8;
  *(_DWORD *)(v7 + 112) = 0;
  *(_DWORD *)(v7 + 8) = 0;
  if (v8)
  {
    return sub_188B4AC((uint64_t *)v7);
  }
  return result;
}

uint64_t sub_17F0618(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)v93 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v93, a3[11].i32[1])) {
    goto LABEL_2;
  }
  v92 = (uint64_t *)(a1 + 8);
  while (2)
  {
    uint64_t v7 = (char *)(*(void *)v93 + 1);
    unsigned int v8 = **(unsigned char **)v93;
    if ((char)**(unsigned char **)v93 < 0)
    {
      int v9 = *v7;
      unsigned int v10 = v8 + (v9 << 7);
      unsigned int v8 = v10 - 128;
      if (v9 < 0)
      {
        uint64_t v7 = (char *)sub_188C180(*(uint64_t *)v93, v10 - 128);
        unsigned int v8 = v11;
      }
      else
      {
        uint64_t v7 = (char *)(*(void *)v93 + 2);
      }
    }
    *(void *)v93 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 8) {
          goto LABEL_152;
        }
        unint64_t v12 = v7 + 1;
        unint64_t v13 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        int v15 = v13 + (v14 << 7);
        unint64_t v13 = (v15 - 128);
        if (v14 < 0)
        {
          *(void *)v93 = sub_188C138((uint64_t)v7, (v15 - 128));
          if (!*(void *)v93) {
            goto LABEL_178;
          }
          unint64_t v13 = v74;
        }
        else
        {
          unint64_t v12 = v7 + 2;
LABEL_13:
          *(void *)v93 = v12;
        }
        if (sub_130C2F4(v13))
        {
          *(_DWORD *)(a1 + 16) |= 2u;
          *(_DWORD *)(a1 + 104) = v13;
          goto LABEL_160;
        }
        if (*v92) {
          v90 = (std::string *)((*v92 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          v90 = (std::string *)sub_188DBD8(v92);
        }
        int v91 = 1;
        goto LABEL_171;
      case 2u:
        if (v8 != 18) {
          goto LABEL_152;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v16 = *(void *)(a1 + 8);
        uint64_t v17 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
        if (v16) {
          uint64_t v17 = (uint64_t *)*v17;
        }
        unint64_t v18 = (std::string *)sub_1880F84((void *)(a1 + 96), v17);
        long long v19 = (void *)sub_188C244(v18, *(char **)v93, (uint64_t)a3);
        goto LABEL_159;
      case 3u:
        if (v8 != 26) {
          goto LABEL_152;
        }
        uint64_t v20 = v7 - 1;
        while (1)
        {
          uint64_t v21 = (unsigned __int8 *)(v20 + 1);
          *(void *)v93 = v20 + 1;
          int v22 = *(_DWORD **)(a1 + 40);
          if (v22 && (uint64_t v23 = *(int *)(a1 + 32), (int)v23 < *v22))
          {
            *(_DWORD *)(a1 + 32) = v23 + 1;
            uint64_t v24 = *(void *)&v22[2 * v23 + 2];
          }
          else
          {
            uint64_t v25 = sub_131BDDC(*(void *)(a1 + 24));
            uint64_t v24 = sub_188CDC8(a1 + 24, v25);
            uint64_t v21 = *(unsigned __int8 **)v93;
          }
          uint64_t v20 = (char *)sub_1277414(a3, v24, v21);
          *(void *)v93 = v20;
          if (!v20) {
            goto LABEL_178;
          }
          if (*(void *)a3 <= (unint64_t)v20 || *v20 != 26) {
            goto LABEL_160;
          }
        }
      case 4u:
        if (v8 != 32) {
          goto LABEL_152;
        }
        unint64_t v26 = v7 + 1;
        unint64_t v13 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_34;
        }
        int v27 = *v26;
        int v28 = v13 + (v27 << 7);
        unint64_t v13 = (v28 - 128);
        if (v27 < 0)
        {
          *(void *)v93 = sub_188C138((uint64_t)v7, (v28 - 128));
          if (!*(void *)v93) {
            goto LABEL_178;
          }
          unint64_t v13 = v75;
        }
        else
        {
          unint64_t v26 = v7 + 2;
LABEL_34:
          *(void *)v93 = v26;
        }
        if (sub_125D174(v13))
        {
          *(_DWORD *)(a1 + 16) |= 4u;
          *(_DWORD *)(a1 + 108) = v13;
          goto LABEL_160;
        }
        if (*v92) {
          v90 = (std::string *)((*v92 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          v90 = (std::string *)sub_188DBD8(v92);
        }
        int v91 = 4;
        goto LABEL_171;
      case 5u:
        if (v8 != 40) {
          goto LABEL_152;
        }
        v5 |= 8u;
        uint64_t v30 = v7 + 1;
        LODWORD(v29) = *v7;
        if ((v29 & 0x80) == 0) {
          goto LABEL_41;
        }
        int v31 = *v30;
        uint64_t v29 = v29 + (v31 << 7) - 128;
        if (v31 < 0)
        {
          uint64_t v76 = sub_188C138((uint64_t)v7, v29);
          *(void *)v93 = v76;
          *(_DWORD *)(a1 + 112) = v77;
          if (!v76) {
            goto LABEL_178;
          }
        }
        else
        {
          uint64_t v30 = v7 + 2;
LABEL_41:
          *(void *)v93 = v30;
          *(_DWORD *)(a1 + 112) = v29;
        }
        goto LABEL_160;
      case 6u:
        if (v8 != 48) {
          goto LABEL_152;
        }
        v5 |= 0x10u;
        uint64_t v32 = v7 + 1;
        uint64_t v33 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_46;
        }
        int v34 = *v32;
        uint64_t v33 = v33 + (v34 << 7) - 128;
        if (v34 < 0)
        {
          uint64_t v78 = sub_188C138((uint64_t)v7, v33);
          *(void *)v93 = v78;
          *(unsigned char *)(a1 + 116) = v79 != 0;
          if (!v78) {
            goto LABEL_178;
          }
        }
        else
        {
          uint64_t v32 = v7 + 2;
LABEL_46:
          *(void *)v93 = v32;
          *(unsigned char *)(a1 + 116) = v33 != 0;
        }
        goto LABEL_160;
      case 7u:
        if (v8 != 56) {
          goto LABEL_152;
        }
        v5 |= 0x20u;
        uint64_t v35 = v7 + 1;
        uint64_t v36 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_51;
        }
        int v37 = *v35;
        uint64_t v36 = v36 + (v37 << 7) - 128;
        if (v37 < 0)
        {
          uint64_t v80 = sub_188C138((uint64_t)v7, v36);
          *(void *)v93 = v80;
          *(unsigned char *)(a1 + 117) = v81 != 0;
          if (!v80) {
            goto LABEL_178;
          }
        }
        else
        {
          uint64_t v35 = v7 + 2;
LABEL_51:
          *(void *)v93 = v35;
          *(unsigned char *)(a1 + 117) = v36 != 0;
        }
        goto LABEL_160;
      case 8u:
        if (v8 != 64) {
          goto LABEL_152;
        }
        v5 |= 0x40u;
        uint64_t v38 = v7 + 1;
        uint64_t v39 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_56;
        }
        int v40 = *v38;
        uint64_t v39 = v39 + (v40 << 7) - 128;
        if (v40 < 0)
        {
          uint64_t v82 = sub_188C138((uint64_t)v7, v39);
          *(void *)v93 = v82;
          *(unsigned char *)(a1 + 118) = v83 != 0;
          if (!v82) {
            goto LABEL_178;
          }
        }
        else
        {
          uint64_t v38 = v7 + 2;
LABEL_56:
          *(void *)v93 = v38;
          *(unsigned char *)(a1 + 118) = v39 != 0;
        }
        goto LABEL_160;
      case 9u:
        if (v8 != 72) {
          goto LABEL_152;
        }
        int v41 = v7 + 1;
        unint64_t v13 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_61;
        }
        int v42 = *v41;
        int v43 = v13 + (v42 << 7);
        unint64_t v13 = (v43 - 128);
        if (v42 < 0)
        {
          *(void *)v93 = sub_188C138((uint64_t)v7, (v43 - 128));
          if (!*(void *)v93) {
            goto LABEL_178;
          }
          unint64_t v13 = v84;
        }
        else
        {
          int v41 = v7 + 2;
LABEL_61:
          *(void *)v93 = v41;
        }
        if (sub_125D180(v13))
        {
          *(_DWORD *)(a1 + 16) |= 0x100u;
          *(_DWORD *)(a1 + 120) = v13;
        }
        else
        {
          if (*v92) {
            v90 = (std::string *)((*v92 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            v90 = (std::string *)sub_188DBD8(v92);
          }
          int v91 = 9;
LABEL_171:
          sub_188C020(v91, v13, v90);
        }
        goto LABEL_160;
      case 0xAu:
        if (v8 != 80) {
          goto LABEL_152;
        }
        v5 |= 0x80u;
        int v44 = v7 + 1;
        uint64_t v45 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_68;
        }
        int v46 = *v44;
        uint64_t v45 = v45 + (v46 << 7) - 128;
        if (v46 < 0)
        {
          uint64_t v85 = sub_188C138((uint64_t)v7, v45);
          *(void *)v93 = v85;
          *(unsigned char *)(a1 + 119) = v86 != 0;
          if (!v85) {
            goto LABEL_178;
          }
        }
        else
        {
          int v44 = v7 + 2;
LABEL_68:
          *(void *)v93 = v44;
          *(unsigned char *)(a1 + 119) = v45 != 0;
        }
        goto LABEL_160;
      case 0xBu:
        if (v8 == 88)
        {
          uint64_t v47 = (uint64_t)(v7 - 1);
          while (1)
          {
            *(void *)v93 = v47 + 1;
            unint64_t v48 = *(unsigned __int8 *)(v47 + 1);
            uint64_t v49 = (char *)(v47 + 2);
            if (*(char *)(v47 + 1) < 0)
            {
              int v50 = *v49;
              int v51 = v48 + (v50 << 7);
              unint64_t v48 = (v51 - 128);
              if (v50 < 0)
              {
                *(void *)v93 = sub_188C138(v47 + 1, (v51 - 128));
                if (!*(void *)v93) {
                  goto LABEL_178;
                }
                unint64_t v48 = v54;
                goto LABEL_75;
              }
              uint64_t v49 = (char *)(v47 + 3);
            }
            *(void *)v93 = v49;
LABEL_75:
            if (sub_12BD228(v48))
            {
              uint64_t v52 = *(unsigned int *)(a1 + 48);
              if (v52 == *(_DWORD *)(a1 + 52))
              {
                int v53 = v52 + 1;
                sub_188C80C((unsigned int *)(a1 + 48), v52 + 1);
                *(_DWORD *)(*(void *)(a1 + 56) + 4 * v52) = v48;
              }
              else
              {
                *(_DWORD *)(*(void *)(a1 + 56) + 4 * v52) = v48;
                int v53 = v52 + 1;
              }
              *(_DWORD *)(a1 + 48) = v53;
            }
            else
            {
              if (*v92) {
                unint64_t v55 = (std::string *)((*v92 & 0xFFFFFFFFFFFFFFFCLL) + 8);
              }
              else {
                unint64_t v55 = (std::string *)sub_188DBD8(v92);
              }
              sub_188C020(11, v48, v55);
            }
            uint64_t v47 = *(void *)v93;
            if (*(void *)a3 <= *(void *)v93 || **(unsigned char **)v93 != 88) {
              goto LABEL_160;
            }
          }
        }
        if (v8 != 90) {
          goto LABEL_152;
        }
        *(void *)&long long v94 = a1 + 48;
        *((void *)&v94 + 1) = sub_12BD228;
        uint64_t v95 = a1 + 8;
        int v87 = 11;
        goto LABEL_151;
      case 0xCu:
        if (v8 == 96)
        {
          uint64_t v56 = (uint64_t)(v7 - 1);
          while (1)
          {
            *(void *)v93 = v56 + 1;
            unint64_t v57 = *(unsigned __int8 *)(v56 + 1);
            uint64_t v58 = (char *)(v56 + 2);
            if (*(char *)(v56 + 1) < 0)
            {
              int v59 = *v58;
              int v60 = v57 + (v59 << 7);
              unint64_t v57 = (v60 - 128);
              if (v59 < 0)
              {
                *(void *)v93 = sub_188C138(v56 + 1, (v60 - 128));
                if (!*(void *)v93) {
                  goto LABEL_178;
                }
                unint64_t v57 = v63;
                goto LABEL_95;
              }
              uint64_t v58 = (char *)(v56 + 3);
            }
            *(void *)v93 = v58;
LABEL_95:
            if (sub_12BD228(v57))
            {
              uint64_t v61 = *(unsigned int *)(a1 + 64);
              if (v61 == *(_DWORD *)(a1 + 68))
              {
                int v62 = v61 + 1;
                sub_188C80C((unsigned int *)(a1 + 64), v61 + 1);
                *(_DWORD *)(*(void *)(a1 + 72) + 4 * v61) = v57;
              }
              else
              {
                *(_DWORD *)(*(void *)(a1 + 72) + 4 * v61) = v57;
                int v62 = v61 + 1;
              }
              *(_DWORD *)(a1 + 64) = v62;
            }
            else
            {
              if (*v92) {
                v64 = (std::string *)((*v92 & 0xFFFFFFFFFFFFFFFCLL) + 8);
              }
              else {
                v64 = (std::string *)sub_188DBD8(v92);
              }
              sub_188C020(12, v57, v64);
            }
            uint64_t v56 = *(void *)v93;
            if (*(void *)a3 <= *(void *)v93 || **(unsigned char **)v93 != 96) {
              goto LABEL_160;
            }
          }
        }
        if (v8 != 98) {
          goto LABEL_152;
        }
        *(void *)&long long v94 = a1 + 64;
        *((void *)&v94 + 1) = sub_12BD228;
        uint64_t v95 = a1 + 8;
        int v87 = 12;
        goto LABEL_151;
      case 0xDu:
        if (v8 == 104)
        {
          uint64_t v65 = (uint64_t)(v7 - 1);
          while (1)
          {
            *(void *)v93 = v65 + 1;
            unint64_t v66 = *(unsigned __int8 *)(v65 + 1);
            v67 = (char *)(v65 + 2);
            if (*(char *)(v65 + 1) < 0)
            {
              int v68 = *v67;
              int v69 = v66 + (v68 << 7);
              unint64_t v66 = (v69 - 128);
              if (v68 < 0)
              {
                *(void *)v93 = sub_188C138(v65 + 1, (v69 - 128));
                if (!*(void *)v93) {
                  goto LABEL_178;
                }
                unint64_t v66 = v72;
                goto LABEL_115;
              }
              v67 = (char *)(v65 + 3);
            }
            *(void *)v93 = v67;
LABEL_115:
            if (sub_12BD228(v66))
            {
              uint64_t v70 = *(unsigned int *)(a1 + 80);
              if (v70 == *(_DWORD *)(a1 + 84))
              {
                int v71 = v70 + 1;
                sub_188C80C((unsigned int *)(a1 + 80), v70 + 1);
                *(_DWORD *)(*(void *)(a1 + 88) + 4 * v70) = v66;
              }
              else
              {
                *(_DWORD *)(*(void *)(a1 + 88) + 4 * v70) = v66;
                int v71 = v70 + 1;
              }
              *(_DWORD *)(a1 + 80) = v71;
            }
            else
            {
              if (*v92) {
                v73 = (std::string *)((*v92 & 0xFFFFFFFFFFFFFFFCLL) + 8);
              }
              else {
                v73 = (std::string *)sub_188DBD8(v92);
              }
              sub_188C020(13, v66, v73);
            }
            uint64_t v65 = *(void *)v93;
            if (*(void *)a3 <= *(void *)v93 || **(unsigned char **)v93 != 104) {
              goto LABEL_160;
            }
          }
        }
        if (v8 == 106)
        {
          *(void *)&long long v94 = a1 + 80;
          *((void *)&v94 + 1) = sub_12BD228;
          uint64_t v95 = a1 + 8;
          int v87 = 13;
LABEL_151:
          int v96 = v87;
          long long v19 = sub_1112E88((uint64_t)a3, v7, &v94);
LABEL_159:
          *(void *)v93 = v19;
          if (!v19) {
            goto LABEL_178;
          }
LABEL_160:
          if (sub_11947B8((uint64_t)a3, (char **)v93, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
LABEL_152:
        if (v8) {
          BOOL v88 = (v8 & 7) == 4;
        }
        else {
          BOOL v88 = 1;
        }
        if (!v88)
        {
          if (*v92)
          {
            v89 = (std::string *)((*v92 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            v89 = (std::string *)sub_188DBD8(v92);
            uint64_t v7 = *(char **)v93;
          }
          long long v19 = sub_1885AC0(v8, v89, v7, a3);
          goto LABEL_159;
        }
        if (v7) {
          a3[10].i32[0] = v8 - 1;
        }
        else {
LABEL_178:
        }
          *(void *)v93 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v93;
      default:
        goto LABEL_152;
    }
  }
}

char *sub_17F0FFC(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 104);
    *uint64_t v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 96) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  int v10 = *(_DWORD *)(a1 + 32);
  if (v10)
  {
    for (int i = 0; i != v10; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v12 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *uint64_t v4 = 26;
      unsigned int v13 = *(_DWORD *)(v12 + 44);
      v4[1] = v13;
      if (v13 > 0x7F) {
        int v14 = sub_188A9CC(v13, v4 + 1);
      }
      else {
        int v14 = v4 + 2;
      }
      uint64_t v4 = sub_1319D58(v12, v14, a3);
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v15 = *(int *)(a1 + 108);
    *uint64_t v4 = 32;
    v4[1] = v15;
    if (v15 > 0x7F)
    {
      v4[1] = v15 | 0x80;
      unint64_t v16 = v15 >> 7;
      v4[2] = v15 >> 7;
      v4 += 3;
      if (v15 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v17 = v16 >> 14;
          v16 >>= 7;
          *v4++ = v16;
        }
        while (v17);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v18 = *(int *)(a1 + 112);
    *uint64_t v4 = 40;
    v4[1] = v18;
    if (v18 > 0x7F)
    {
      v4[1] = v18 | 0x80;
      unint64_t v19 = v18 >> 7;
      v4[2] = v18 >> 7;
      v4 += 3;
      if (v18 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v20 = v19 >> 14;
          v19 >>= 7;
          *v4++ = v19;
        }
        while (v20);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v21 = *(unsigned char *)(a1 + 116);
    *uint64_t v4 = 48;
    v4[1] = v21;
    v4 += 2;
    if ((v6 & 0x20) == 0)
    {
LABEL_34:
      if ((v6 & 0x40) == 0) {
        goto LABEL_35;
      }
      goto LABEL_43;
    }
  }
  else if ((v6 & 0x20) == 0)
  {
    goto LABEL_34;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v22 = *(unsigned char *)(a1 + 117);
  *uint64_t v4 = 56;
  v4[1] = v22;
  v4 += 2;
  if ((v6 & 0x40) == 0)
  {
LABEL_35:
    if ((v6 & 0x100) == 0) {
      goto LABEL_52;
    }
    goto LABEL_46;
  }
LABEL_43:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v23 = *(unsigned char *)(a1 + 118);
  *uint64_t v4 = 64;
  v4[1] = v23;
  v4 += 2;
  if ((v6 & 0x100) != 0)
  {
LABEL_46:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v24 = *(int *)(a1 + 120);
    *uint64_t v4 = 72;
    v4[1] = v24;
    if (v24 > 0x7F)
    {
      v4[1] = v24 | 0x80;
      unint64_t v25 = v24 >> 7;
      v4[2] = v24 >> 7;
      v4 += 3;
      if (v24 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v26 = v25 >> 14;
          v25 >>= 7;
          *v4++ = v25;
        }
        while (v26);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_52:
  if ((v6 & 0x80) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v27 = *(unsigned char *)(a1 + 119);
    *uint64_t v4 = 80;
    v4[1] = v27;
    v4 += 2;
  }
  uint64_t v28 = *(unsigned int *)(a1 + 48);
  if ((int)v28 >= 1)
  {
    for (uint64_t j = 0; j != v28; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v30 = *(int *)(*(void *)(a1 + 56) + 4 * j);
      *uint64_t v4 = 88;
      v4[1] = v30;
      if (v30 > 0x7F)
      {
        v4[1] = v30 | 0x80;
        unint64_t v31 = v30 >> 7;
        v4[2] = v30 >> 7;
        v4 += 3;
        if (v30 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v32 = v31 >> 14;
            v31 >>= 7;
            *v4++ = v31;
          }
          while (v32);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  uint64_t v33 = *(unsigned int *)(a1 + 64);
  if ((int)v33 >= 1)
  {
    for (uint64_t k = 0; k != v33; ++k)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v35 = *(int *)(*(void *)(a1 + 72) + 4 * k);
      *uint64_t v4 = 96;
      v4[1] = v35;
      if (v35 > 0x7F)
      {
        v4[1] = v35 | 0x80;
        unint64_t v36 = v35 >> 7;
        v4[2] = v35 >> 7;
        v4 += 3;
        if (v35 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v37 = v36 >> 14;
            v36 >>= 7;
            *v4++ = v36;
          }
          while (v37);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  uint64_t v38 = *(unsigned int *)(a1 + 80);
  if ((int)v38 >= 1)
  {
    for (uint64_t m = 0; m != v38; ++m)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v40 = *(int *)(*(void *)(a1 + 88) + 4 * m);
      *uint64_t v4 = 104;
      v4[1] = v40;
      if (v40 > 0x7F)
      {
        v4[1] = v40 | 0x80;
        unint64_t v41 = v40 >> 7;
        v4[2] = v40 >> 7;
        v4 += 3;
        if (v40 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v42 = v41 >> 14;
            v41 >>= 7;
            *v4++ = v41;
          }
          while (v42);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  uint64_t v43 = *(void *)(a1 + 8);
  if ((v43 & 1) == 0) {
    return v4;
  }
  unint64_t v45 = v43 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v45 + 31) < 0)
  {
    int v46 = *(void **)(v45 + 8);
    uint64_t v47 = *(void *)(v45 + 16);
  }
  else
  {
    int v46 = (void *)(v45 + 8);
    LODWORD(v47) = *(unsigned __int8 *)(v45 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v47)
  {
    uint64_t v48 = (int)v47;
    memcpy(v4, v46, (int)v47);
    v4 += v48;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v46, v47, v4);
}

uint64_t sub_17F1618(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_131A6A8(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(unsigned int *)(a1 + 48);
  if (v8)
  {
    int v9 = 0;
    uint64_t v10 = 0;
    do
    {
      int v11 = *(_DWORD *)(*(void *)(a1 + 56) + 4 * v9);
      if (v11 < 0) {
        uint64_t v12 = 10;
      }
      else {
        uint64_t v12 = (9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6;
      }
      v10 += v12;
      ++v9;
    }
    while (v8 != v9);
  }
  else
  {
    uint64_t v10 = 0;
  }
  uint64_t v13 = *(unsigned int *)(a1 + 64);
  if (v13)
  {
    int v14 = 0;
    uint64_t v15 = 0;
    do
    {
      int v16 = *(_DWORD *)(*(void *)(a1 + 72) + 4 * v14);
      if (v16 < 0) {
        uint64_t v17 = 10;
      }
      else {
        uint64_t v17 = (9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6;
      }
      v15 += v17;
      ++v14;
    }
    while (v13 != v14);
  }
  else
  {
    uint64_t v15 = 0;
  }
  uint64_t v18 = *(unsigned int *)(a1 + 80);
  if (v18)
  {
    int v19 = 0;
    uint64_t v20 = 0;
    do
    {
      int v21 = *(_DWORD *)(*(void *)(a1 + 88) + 4 * v19);
      if (v21 < 0) {
        uint64_t v22 = 10;
      }
      else {
        uint64_t v22 = (9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6;
      }
      v20 += v22;
      ++v19;
    }
    while (v18 != v19);
  }
  else
  {
    uint64_t v20 = 0;
  }
  uint64_t result = v2 + v8 + v10 + v13 + v15 + v18 + v20;
  int v24 = *(_DWORD *)(a1 + 16);
  if (!(_BYTE)v24) {
    goto LABEL_63;
  }
  if (v24)
  {
    unint64_t v25 = *(void *)(a1 + 96) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v26 = *(unsigned __int8 *)(v25 + 23);
    uint64_t v27 = *(void *)(v25 + 8);
    if ((v26 & 0x80u) == 0) {
      uint64_t v27 = v26;
    }
    result += v27 + ((9 * (__clz(v27 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v24 & 2) == 0)
    {
LABEL_36:
      if ((v24 & 4) == 0) {
        goto LABEL_37;
      }
LABEL_46:
      int v30 = *(_DWORD *)(a1 + 108);
      if (v30 < 0) {
        uint64_t v31 = 11;
      }
      else {
        uint64_t v31 = ((9 * (__clz(v30 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
      result += v31;
      if ((v24 & 8) == 0) {
        goto LABEL_54;
      }
      goto LABEL_50;
    }
  }
  else if ((v24 & 2) == 0)
  {
    goto LABEL_36;
  }
  int v28 = *(_DWORD *)(a1 + 104);
  if (v28 < 0) {
    uint64_t v29 = 11;
  }
  else {
    uint64_t v29 = ((9 * (__clz(v28 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  result += v29;
  if ((v24 & 4) != 0) {
    goto LABEL_46;
  }
LABEL_37:
  if ((v24 & 8) != 0)
  {
LABEL_50:
    int v32 = *(_DWORD *)(a1 + 112);
    if (v32 < 0) {
      uint64_t v33 = 11;
    }
    else {
      uint64_t v33 = ((9 * (__clz(v32 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    result += v33;
  }
LABEL_54:
  uint64_t v34 = result + 2;
  if ((v24 & 0x10) == 0) {
    uint64_t v34 = result;
  }
  if ((v24 & 0x20) != 0) {
    v34 += 2;
  }
  if ((v24 & 0x40) != 0) {
    v34 += 2;
  }
  if ((v24 & 0x80) != 0) {
    uint64_t result = v34 + 2;
  }
  else {
    uint64_t result = v34;
  }
LABEL_63:
  if ((v24 & 0x100) != 0)
  {
    int v35 = *(_DWORD *)(a1 + 120);
    if (v35 < 0) {
      uint64_t v36 = 11;
    }
    else {
      uint64_t v36 = ((9 * (__clz(v35 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    result += v36;
  }
  uint64_t v37 = *(void *)(a1 + 8);
  if (v37)
  {
    unint64_t v38 = v37 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v38 + 31) < 0) {
      uint64_t v39 = *(void *)(v38 + 16);
    }
    else {
      uint64_t v39 = *(unsigned __int8 *)(v38 + 31);
    }
    result += v39;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

void sub_17F1938(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_14DF40C((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    uint64_t v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 48);
  if (v9)
  {
    uint64_t v10 = *(int *)(a1 + 48);
    sub_188C80C((unsigned int *)(a1 + 48), v10 + v9);
    uint64_t v11 = *(void *)(a1 + 56);
    *(_DWORD *)(a1 + 48) += *(_DWORD *)(a2 + 48);
    memcpy((void *)(v11 + 4 * v10), *(const void **)(a2 + 56), 4 * *(int *)(a2 + 48));
  }
  int v12 = *(_DWORD *)(a2 + 64);
  if (v12)
  {
    uint64_t v13 = *(int *)(a1 + 64);
    sub_188C80C((unsigned int *)(a1 + 64), v13 + v12);
    uint64_t v14 = *(void *)(a1 + 72);
    *(_DWORD *)(a1 + 64) += *(_DWORD *)(a2 + 64);
    memcpy((void *)(v14 + 4 * v13), *(const void **)(a2 + 72), 4 * *(int *)(a2 + 64));
  }
  int v15 = *(_DWORD *)(a2 + 80);
  if (v15)
  {
    uint64_t v16 = *(int *)(a1 + 80);
    sub_188C80C((unsigned int *)(a1 + 80), v16 + v15);
    uint64_t v17 = *(void *)(a1 + 88);
    *(_DWORD *)(a1 + 80) += *(_DWORD *)(a2 + 80);
    memcpy((void *)(v17 + 4 * v16), *(const void **)(a2 + 88), 4 * *(int *)(a2 + 80));
  }
  int v18 = *(_DWORD *)(a2 + 16);
  if ((_BYTE)v18)
  {
    if (v18)
    {
      int v21 = (long long *)(*(void *)(a2 + 96) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v22 = *(void *)(a1 + 8);
      char v23 = (uint64_t *)(v22 & 0xFFFFFFFFFFFFFFFCLL);
      if (v22) {
        char v23 = (uint64_t *)*v23;
      }
      sub_1881DF4((std::string **)(a1 + 96), v21, v23);
      if ((v18 & 2) == 0)
      {
LABEL_13:
        if ((v18 & 4) == 0) {
          goto LABEL_14;
        }
        goto LABEL_31;
      }
    }
    else if ((v18 & 2) == 0)
    {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
    if ((v18 & 4) == 0)
    {
LABEL_14:
      if ((v18 & 8) == 0) {
        goto LABEL_15;
      }
      goto LABEL_32;
    }
LABEL_31:
    *(_DWORD *)(a1 + 108) = *(_DWORD *)(a2 + 108);
    if ((v18 & 8) == 0)
    {
LABEL_15:
      if ((v18 & 0x10) == 0) {
        goto LABEL_16;
      }
      goto LABEL_33;
    }
LABEL_32:
    *(_DWORD *)(a1 + 112) = *(_DWORD *)(a2 + 112);
    if ((v18 & 0x10) == 0)
    {
LABEL_16:
      if ((v18 & 0x20) == 0) {
        goto LABEL_17;
      }
      goto LABEL_34;
    }
LABEL_33:
    *(unsigned char *)(a1 + 116) = *(unsigned char *)(a2 + 116);
    if ((v18 & 0x20) == 0)
    {
LABEL_17:
      if ((v18 & 0x40) == 0) {
        goto LABEL_18;
      }
      goto LABEL_35;
    }
LABEL_34:
    *(unsigned char *)(a1 + 117) = *(unsigned char *)(a2 + 117);
    if ((v18 & 0x40) == 0)
    {
LABEL_18:
      if ((v18 & 0x80) == 0)
      {
LABEL_20:
        *(_DWORD *)(a1 + 16) |= v18;
        goto LABEL_21;
      }
LABEL_19:
      *(unsigned char *)(a1 + 119) = *(unsigned char *)(a2 + 119);
      goto LABEL_20;
    }
LABEL_35:
    *(unsigned char *)(a1 + 118) = *(unsigned char *)(a2 + 118);
    if ((v18 & 0x80) == 0) {
      goto LABEL_20;
    }
    goto LABEL_19;
  }
LABEL_21:
  if ((v18 & 0x100) != 0)
  {
    int v19 = *(_DWORD *)(a2 + 120);
    *(_DWORD *)(a1 + 16) |= 0x100u;
    *(_DWORD *)(a1 + 120) = v19;
  }
  uint64_t v20 = *(void *)(a2 + 8);
  if (v20)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v20 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

BOOL sub_17F1BAC(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  do
  {
    int v3 = v2;
    if ((int)v2 < 1) {
      break;
    }
    uint64_t v4 = v2 - 1;
    char v5 = sub_131B154(*(void *)(*(void *)(a1 + 40) + 8 * v2));
    uint64_t v2 = v4;
  }
  while ((v5 & 1) != 0);
  return v3 < 1;
}

void *sub_17F1C04@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.AutocompleteResult.AutocompleteResultSection");
}

uint64_t sub_17F1C14(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  *(void *)(a1 + 8) = v5;
  *(void *)a1 = off_24DEB18;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = a2;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = a2;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = a2;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 148) = 0u;
  return a1;
}

void sub_17F1C9C(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_17F1CCC(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = a1 + 16;
  *(void *)a1 = off_24DEB18;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  uint64_t v6 = (uint64_t *)(a1 + 48);
  *(_DWORD *)(a1 + 68) = 0;
  *(void *)(a1 + 52) = 0;
  *(void *)(a1 + 60) = 0;
  *(void *)(a1 + 44) = 0;
  int v7 = *(_DWORD *)(a2 + 56);
  if (v7)
  {
    uint64_t v8 = *(void *)(a2 + 64);
    int v9 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_1879380(v6, v9, (uint64_t *)(v8 + 8), v7, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v10 = *(_DWORD *)(a1 + 56) + v7;
    *(_DWORD *)(a1 + 56) = v10;
    uint64_t v11 = *(int **)(a1 + 64);
    if (*v11 < v10) {
      int *v11 = v10;
    }
  }
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0;
  int v12 = *(_DWORD *)(a2 + 80);
  if (v12)
  {
    uint64_t v13 = *(void *)(a2 + 88);
    uint64_t v14 = (std::string **)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_1664A7C((uint64_t *)(a1 + 72), v14, (uint64_t *)(v13 + 8), v12, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v15 = *(_DWORD *)(a1 + 80) + v12;
    *(_DWORD *)(a1 + 80) = v15;
    uint64_t v16 = *(int **)(a1 + 88);
    if (*v16 < v15) {
      *uint64_t v16 = v15;
    }
  }
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 104) = 0;
  *(void *)(a1 + 112) = 0;
  int v17 = *(_DWORD *)(a2 + 104);
  if (v17)
  {
    uint64_t v18 = *(void *)(a2 + 112);
    int v19 = (std::string **)sub_188CCE4(a1 + 96, *(_DWORD *)(a2 + 104));
    sub_122E02C((uint64_t *)(a1 + 96), v19, (uint64_t *)(v18 + 8), v17, **(_DWORD **)(a1 + 112) - *(_DWORD *)(a1 + 104));
    int v20 = *(_DWORD *)(a1 + 104) + v17;
    *(_DWORD *)(a1 + 104) = v20;
    int v21 = *(int **)(a1 + 112);
    if (*v21 < v20) {
      int *v21 = v20;
    }
  }
  uint64_t v22 = *(void *)(a2 + 8);
  if (v22) {
    sub_188B4F8(v4, (v22 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v5, a2 + 16);
  int v23 = *(_DWORD *)(a2 + 40);
  if (v23) {
    operator new();
  }
  *(void *)(a1 + 120) = 0;
  if ((v23 & 2) != 0) {
    operator new();
  }
  *(void *)(a1 + 128) = 0;
  if ((v23 & 4) != 0) {
    operator new();
  }
  *(void *)(a1 + 136) = 0;
  long long v24 = *(_OWORD *)(a2 + 144);
  *(_DWORD *)(a1 + 160) = *(_DWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 144) = v24;
  return a1;
}

void sub_17F1F6C()
{
}

uint64_t sub_17F2034(uint64_t a1)
{
  int v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_12;
    }
  }
  else if (v4)
  {
    goto LABEL_12;
  }
  if ((uint64_t (***)())a1 != &off_254B970)
  {
    uint64_t v5 = *(void **)(a1 + 120);
    if (v5)
    {
      sub_130C960(v5);
      operator delete();
    }
    uint64_t v6 = *(void **)(a1 + 128);
    if (v6)
    {
      sub_130C420(v6);
      operator delete();
    }
    int v7 = *(void **)(a1 + 136);
    if (v7)
    {
      sub_1848204(v7);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_12:
  sub_122D864((void *)(a1 + 96));
  sub_16649FC((void *)(a1 + 72));
  sub_1877C38((void *)(a1 + 48));
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17F2150(uint64_t a1)
{
  sub_17F2034(a1);

  operator delete();
}

uint64_t sub_17F2188(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  uint64_t v3 = *(unsigned int *)(a1 + 56);
  if ((int)v3 >= 1)
  {
    uint64_t v4 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = sub_17F054C(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 56) = 0;
  }
  uint64_t v6 = *(unsigned int *)(a1 + 80);
  if ((int)v6 >= 1)
  {
    int v7 = (uint64_t *)(*(void *)(a1 + 88) + 8);
    do
    {
      uint64_t v8 = *v7++;
      uint64_t result = sub_17EFBC0(v8);
      --v6;
    }
    while (v6);
    *(_DWORD *)(a1 + 80) = 0;
  }
  uint64_t v9 = *(unsigned int *)(a1 + 104);
  if ((int)v9 >= 1)
  {
    int v10 = (uint64_t *)(*(void *)(a1 + 112) + 8);
    do
    {
      uint64_t v11 = *v10++;
      uint64_t result = sub_130FEFC(v11);
      --v9;
    }
    while (v9);
    *(_DWORD *)(a1 + 104) = 0;
  }
  int v12 = *(_DWORD *)(a1 + 40);
  if ((v12 & 7) != 0)
  {
    if (v12)
    {
      uint64_t result = (uint64_t)sub_130C99C(*(void *)(a1 + 120));
      if ((v12 & 2) == 0)
      {
LABEL_16:
        if ((v12 & 4) == 0) {
          goto LABEL_18;
        }
        goto LABEL_17;
      }
    }
    else if ((v12 & 2) == 0)
    {
      goto LABEL_16;
    }
    uint64_t result = sub_130C45C(*(void *)(a1 + 128));
    if ((v12 & 4) != 0) {
LABEL_17:
    }
      uint64_t result = sub_179ACBC(*(void *)(a1 + 136));
  }
LABEL_18:
  if ((v12 & 0xF8) != 0) {
    *(void *)(a1 + 144) = 0;
  }
  if ((v12 & 0x3F00) != 0)
  {
    *(_DWORD *)(a1 + 160) = 0;
    *(void *)(a1 + 152) = 0;
  }
  char v14 = *(unsigned char *)(a1 + 8);
  uint64_t v13 = a1 + 8;
  *(_DWORD *)(v13 + 32) = 0;
  if (v14)
  {
    return sub_188B4AC((uint64_t *)v13);
  }
  return result;
}

char *sub_17F22B8(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v95 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v95, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = v95 + 1;
    unsigned int v9 = *v95;
    if (*v95 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v95, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v95 + 2;
      }
    }
    uint64_t v95 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_116;
        }
        int v12 = v8 - 1;
        while (1)
        {
          uint64_t v13 = (unsigned __int8 *)(v12 + 1);
          uint64_t v95 = v12 + 1;
          char v14 = *(_DWORD **)(a1 + 64);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 56), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 56) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            uint64_t v17 = sub_18349A8(*(void *)(a1 + 48));
            uint64_t v16 = sub_188CDC8(a1 + 48, v17);
            uint64_t v13 = (unsigned __int8 *)v95;
          }
          int v12 = (char *)sub_17F2C48(a3, v16, v13);
          uint64_t v95 = v12;
          if (!v12) {
            goto LABEL_162;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_126;
          }
        }
      case 2u:
        if (v9 != 16) {
          goto LABEL_116;
        }
        v5 |= 0x10u;
        uint64_t v18 = v8 + 1;
        uint64_t v19 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_23;
        }
        int v20 = *v18;
        uint64_t v19 = v19 + (v20 << 7) - 128;
        if (v20 < 0)
        {
          v73 = (char *)sub_188C138((uint64_t)v8, v19);
          uint64_t v95 = v73;
          *(unsigned char *)(a1 + 148) = v74 != 0;
          if (!v73) {
            goto LABEL_162;
          }
        }
        else
        {
          uint64_t v18 = v8 + 2;
LABEL_23:
          uint64_t v95 = v18;
          *(unsigned char *)(a1 + 148) = v19 != 0;
        }
        goto LABEL_126;
      case 3u:
        if (v9 != 24) {
          goto LABEL_116;
        }
        v5 |= 0x20u;
        int v21 = v8 + 1;
        uint64_t v22 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_28;
        }
        int v23 = *v21;
        uint64_t v22 = v22 + (v23 << 7) - 128;
        if (v23 < 0)
        {
          unint64_t v75 = (char *)sub_188C138((uint64_t)v8, v22);
          uint64_t v95 = v75;
          *(unsigned char *)(a1 + 149) = v76 != 0;
          if (!v75) {
            goto LABEL_162;
          }
        }
        else
        {
          int v21 = v8 + 2;
LABEL_28:
          uint64_t v95 = v21;
          *(unsigned char *)(a1 + 149) = v22 != 0;
        }
        goto LABEL_126;
      case 4u:
        if (v9 != 32) {
          goto LABEL_116;
        }
        v5 |= 8u;
        long long v24 = v8 + 1;
        int v25 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_33;
        }
        int v26 = *v24;
        int v25 = v25 + (v26 << 7) - 128;
        if (v26 < 0)
        {
          int v77 = (char *)sub_188C0D0((uint64_t)v8, v25);
          uint64_t v95 = v77;
          *(_DWORD *)(a1 + 144) = v78;
          if (!v77) {
            goto LABEL_162;
          }
        }
        else
        {
          long long v24 = v8 + 2;
LABEL_33:
          uint64_t v95 = v24;
          *(_DWORD *)(a1 + 144) = v25;
        }
        goto LABEL_126;
      case 5u:
        if (v9 != 40) {
          goto LABEL_116;
        }
        v5 |= 0x40u;
        uint64_t v27 = v8 + 1;
        uint64_t v28 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_38;
        }
        int v29 = *v27;
        uint64_t v28 = v28 + (v29 << 7) - 128;
        if (v29 < 0)
        {
          uint64_t v79 = (char *)sub_188C138((uint64_t)v8, v28);
          uint64_t v95 = v79;
          *(unsigned char *)(a1 + 150) = v80 != 0;
          if (!v79) {
            goto LABEL_162;
          }
        }
        else
        {
          uint64_t v27 = v8 + 2;
LABEL_38:
          uint64_t v95 = v27;
          *(unsigned char *)(a1 + 150) = v28 != 0;
        }
        goto LABEL_126;
      case 6u:
        if (v9 != 50) {
          goto LABEL_116;
        }
        int v30 = v8 - 1;
        while (1)
        {
          uint64_t v31 = (unsigned __int8 *)(v30 + 1);
          uint64_t v95 = v30 + 1;
          int v32 = *(_DWORD **)(a1 + 88);
          if (v32 && (uint64_t v33 = *(int *)(a1 + 80), (int)v33 < *v32))
          {
            *(_DWORD *)(a1 + 80) = v33 + 1;
            uint64_t v34 = *(void *)&v32[2 * v33 + 2];
          }
          else
          {
            uint64_t v35 = sub_183492C(*(void *)(a1 + 72));
            uint64_t v34 = sub_188CDC8(a1 + 72, v35);
            uint64_t v31 = (unsigned __int8 *)v95;
          }
          int v30 = sub_164E4A0(a3, v34, v31);
          uint64_t v95 = v30;
          if (!v30) {
            goto LABEL_162;
          }
          if (*(void *)a3 <= (unint64_t)v30 || *v30 != 50) {
            goto LABEL_126;
          }
        }
      case 7u:
        if (v9 != 56) {
          goto LABEL_116;
        }
        v5 |= 0x80u;
        uint64_t v36 = v8 + 1;
        uint64_t v37 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_53;
        }
        int v38 = *v36;
        uint64_t v37 = v37 + (v38 << 7) - 128;
        if (v38 < 0)
        {
          uint64_t v81 = (char *)sub_188C138((uint64_t)v8, v37);
          uint64_t v95 = v81;
          *(unsigned char *)(a1 + 151) = v82 != 0;
          if (!v81) {
            goto LABEL_162;
          }
        }
        else
        {
          uint64_t v36 = v8 + 2;
LABEL_53:
          uint64_t v95 = v36;
          *(unsigned char *)(a1 + 151) = v37 != 0;
        }
        goto LABEL_126;
      case 0xFu:
        if (v9 != 122) {
          goto LABEL_116;
        }
        uint64_t v39 = v8 - 1;
        while (1)
        {
          unint64_t v40 = (unsigned __int8 *)(v39 + 1);
          uint64_t v95 = v39 + 1;
          unint64_t v41 = *(_DWORD **)(a1 + 112);
          if (v41 && (uint64_t v42 = *(int *)(a1 + 104), (int)v42 < *v41))
          {
            *(_DWORD *)(a1 + 104) = v42 + 1;
            uint64_t v43 = *(void *)&v41[2 * v42 + 2];
          }
          else
          {
            sub_131B694(*(void *)(a1 + 96));
            uint64_t v43 = sub_188CDC8(a1 + 96, v44);
            unint64_t v40 = (unsigned __int8 *)v95;
          }
          uint64_t v39 = sub_12171A0(a3, v43, v40);
          uint64_t v95 = v39;
          if (!v39) {
            goto LABEL_162;
          }
          if (*(void *)a3 <= (unint64_t)v39 || *v39 != 122) {
            goto LABEL_126;
          }
        }
      case 0x10u:
        if (v9 != 128) {
          goto LABEL_116;
        }
        v5 |= 0x200u;
        unint64_t v45 = v8 + 1;
        uint64_t v46 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_68;
        }
        int v47 = *v45;
        uint64_t v46 = v46 + (v47 << 7) - 128;
        if (v47 < 0)
        {
          uint64_t v83 = (char *)sub_188C138((uint64_t)v8, v46);
          uint64_t v95 = v83;
          *(unsigned char *)(a1 + 156) = v84 != 0;
          if (!v83) {
            goto LABEL_162;
          }
        }
        else
        {
          unint64_t v45 = v8 + 2;
LABEL_68:
          uint64_t v95 = v45;
          *(unsigned char *)(a1 + 156) = v46 != 0;
        }
        goto LABEL_126;
      case 0x11u:
        if (v9 != 138) {
          goto LABEL_116;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        uint64_t v48 = *(void *)(a1 + 120);
        if (!v48)
        {
          uint64_t v49 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v49 = (void *)*v49;
          }
          uint64_t v48 = sub_131B2B4((uint64_t)v49);
          *(void *)(a1 + 120) = v48;
          uint64_t v8 = v95;
        }
        int v50 = sub_1797340(a3, v48, (unsigned __int8 *)v8);
        goto LABEL_125;
      case 0x12u:
        if (v9 != 146) {
          goto LABEL_116;
        }
        *(_DWORD *)(a1 + 40) |= 2u;
        int v51 = *(void **)(a1 + 128);
        if (!v51)
        {
          uint64_t v52 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v52 = (void *)*v52;
          }
          int v51 = sub_131B238((uint64_t)v52);
          *(void *)(a1 + 128) = v51;
          uint64_t v8 = v95;
        }
        int v50 = sub_17F2CD8(a3, (uint64_t)v51, (unsigned __int8 *)v8);
        goto LABEL_125;
      case 0x13u:
        if (v9 != 152) {
          goto LABEL_116;
        }
        v5 |= 0x400u;
        int v53 = v8 + 1;
        uint64_t v54 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_85;
        }
        int v55 = *v53;
        uint64_t v54 = v54 + (v55 << 7) - 128;
        if (v55 < 0)
        {
          uint64_t v85 = (char *)sub_188C138((uint64_t)v8, v54);
          uint64_t v95 = v85;
          *(unsigned char *)(a1 + 157) = v86 != 0;
          if (!v85) {
            goto LABEL_162;
          }
        }
        else
        {
          int v53 = v8 + 2;
LABEL_85:
          uint64_t v95 = v53;
          *(unsigned char *)(a1 + 157) = v54 != 0;
        }
        goto LABEL_126;
      case 0x14u:
        if (v9 != 162) {
          goto LABEL_116;
        }
        *(_DWORD *)(a1 + 40) |= 4u;
        uint64_t v56 = *(void *)(a1 + 136);
        if (!v56)
        {
          unint64_t v57 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            unint64_t v57 = (void *)*v57;
          }
          uint64_t v56 = sub_1849FB4((uint64_t)v57);
          *(void *)(a1 + 136) = v56;
          uint64_t v8 = v95;
        }
        int v50 = sub_12BAFE4(a3, v56, (unsigned __int8 *)v8);
        goto LABEL_125;
      case 0x15u:
        if (v9 != 168) {
          goto LABEL_116;
        }
        v5 |= 0x800u;
        uint64_t v58 = v8 + 1;
        uint64_t v59 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_96;
        }
        int v60 = *v58;
        uint64_t v59 = v59 + (v60 << 7) - 128;
        if (v60 < 0)
        {
          int v87 = (char *)sub_188C138((uint64_t)v8, v59);
          uint64_t v95 = v87;
          *(unsigned char *)(a1 + 158) = v88 != 0;
          if (!v87) {
            goto LABEL_162;
          }
        }
        else
        {
          uint64_t v58 = v8 + 2;
LABEL_96:
          uint64_t v95 = v58;
          *(unsigned char *)(a1 + 158) = v59 != 0;
        }
        goto LABEL_126;
      case 0x16u:
        if (v9 != 176) {
          goto LABEL_116;
        }
        uint64_t v61 = v8 + 1;
        unint64_t v62 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_101;
        }
        int v63 = *v61;
        int v64 = v62 + (v63 << 7);
        unint64_t v62 = (v64 - 128);
        if (v63 < 0)
        {
          uint64_t v95 = (char *)sub_188C138((uint64_t)v8, (v64 - 128));
          if (!v95) {
            goto LABEL_162;
          }
          unint64_t v62 = v89;
        }
        else
        {
          uint64_t v61 = v8 + 2;
LABEL_101:
          uint64_t v95 = v61;
        }
        if (v62 <= 6)
        {
          *(_DWORD *)(a1 + 40) |= 0x2000u;
          *(_DWORD *)(a1 + 160) = v62;
          goto LABEL_126;
        }
        if (*v7) {
          v93 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          v93 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v94 = 22;
        goto LABEL_156;
      case 0x17u:
        if (v9 != 184) {
          goto LABEL_116;
        }
        uint64_t v65 = v8 + 1;
        unint64_t v62 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_108;
        }
        int v66 = *v65;
        int v67 = v62 + (v66 << 7);
        unint64_t v62 = (v67 - 128);
        if (v66 < 0)
        {
          uint64_t v95 = (char *)sub_188C138((uint64_t)v8, (v67 - 128));
          if (!v95) {
            goto LABEL_162;
          }
          unint64_t v62 = v90;
        }
        else
        {
          uint64_t v65 = v8 + 2;
LABEL_108:
          uint64_t v95 = v65;
        }
        if (v62 > 2)
        {
          if (*v7) {
            v93 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            v93 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          int v94 = 23;
LABEL_156:
          sub_188C020(v94, v62, v93);
        }
        else
        {
          *(_DWORD *)(a1 + 40) |= 0x100u;
          *(_DWORD *)(a1 + 152) = v62;
        }
        goto LABEL_126;
      case 0x18u:
        if (v9 != 192) {
          goto LABEL_116;
        }
        v5 |= 0x1000u;
        int v68 = v8 + 1;
        uint64_t v69 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_115;
        }
        int v70 = *v68;
        uint64_t v69 = v69 + (v70 << 7) - 128;
        if (v70 < 0)
        {
          int v91 = (char *)sub_188C138((uint64_t)v8, v69);
          uint64_t v95 = v91;
          *(unsigned char *)(a1 + 159) = v92 != 0;
          if (!v91) {
            goto LABEL_162;
          }
        }
        else
        {
          int v68 = v8 + 2;
LABEL_115:
          uint64_t v95 = v68;
          *(unsigned char *)(a1 + 159) = v69 != 0;
        }
        goto LABEL_126;
      default:
LABEL_116:
        if (v9) {
          BOOL v71 = (v9 & 7) == 4;
        }
        else {
          BOOL v71 = 1;
        }
        if (!v71)
        {
          if (v9 - 8000 > 0x18F)
          {
            if (*v7)
            {
              unint64_t v72 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              unint64_t v72 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              uint64_t v8 = v95;
            }
            int v50 = (char *)sub_1885AC0(v9, v72, v8, a3);
          }
          else
          {
            int v50 = (char *)sub_18859DC((uint64_t **)(a1 + 16), v9, v8, (uint64_t)&off_254B970, (uint64_t *)(a1 + 8), a3);
          }
LABEL_125:
          uint64_t v95 = v50;
          if (!v50) {
            goto LABEL_162;
          }
LABEL_126:
          if (sub_11947B8((uint64_t)a3, &v95, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_162:
        }
          uint64_t v95 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 40) |= v5;
        return v95;
    }
  }
}

uint64_t sub_17F2C48(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17F0618(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_17F2CD8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_130C480(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_17F2D68(uint64_t a1, char *a2, unint64_t *a3)
{
  int v6 = *(_DWORD *)(a1 + 56);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 64) + 8 * i + 8);
      *a2 = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      a2[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, a2 + 1);
      }
      else {
        unsigned int v10 = a2 + 2;
      }
      a2 = sub_17F0FFC(v8, (unint64_t)v10, a3);
    }
  }
  int v11 = *(_DWORD *)(a1 + 40);
  if ((v11 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    char v12 = *(unsigned char *)(a1 + 148);
    *a2 = 16;
    a2[1] = v12;
    a2 += 2;
    if ((v11 & 0x20) == 0)
    {
LABEL_11:
      if ((v11 & 8) == 0) {
        goto LABEL_25;
      }
      goto LABEL_19;
    }
  }
  else if ((v11 & 0x20) == 0)
  {
    goto LABEL_11;
  }
  if (*a3 <= (unint64_t)a2) {
    a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
  }
  char v13 = *(unsigned char *)(a1 + 149);
  *a2 = 24;
  a2[1] = v13;
  a2 += 2;
  if ((v11 & 8) != 0)
  {
LABEL_19:
    if (*a3 <= (unint64_t)a2) {
      a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unsigned int v14 = *(_DWORD *)(a1 + 144);
    *a2 = 32;
    a2[1] = v14;
    if (v14 > 0x7F)
    {
      a2[1] = v14 | 0x80;
      unsigned int v15 = v14 >> 7;
      a2[2] = v14 >> 7;
      a2 += 3;
      if (v14 >= 0x4000)
      {
        do
        {
          *(a2 - 1) |= 0x80u;
          unsigned int v16 = v15 >> 14;
          v15 >>= 7;
          *a2++ = v15;
        }
        while (v16);
      }
    }
    else
    {
      a2 += 2;
    }
  }
LABEL_25:
  if ((v11 & 0x40) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    char v17 = *(unsigned char *)(a1 + 150);
    *a2 = 40;
    a2[1] = v17;
    a2 += 2;
  }
  int v18 = *(_DWORD *)(a1 + 80);
  if (v18)
  {
    for (int j = 0; j != v18; ++j)
    {
      if (*a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v20 = *(void *)(*(void *)(a1 + 88) + 8 * j + 8);
      *a2 = 50;
      unsigned int v21 = *(_DWORD *)(v20 + 20);
      a2[1] = v21;
      if (v21 > 0x7F) {
        uint64_t v22 = sub_188A9CC(v21, a2 + 1);
      }
      else {
        uint64_t v22 = a2 + 2;
      }
      a2 = sub_17EFEBC(v20, (unint64_t)v22, a3);
    }
  }
  if ((v11 & 0x80) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    char v23 = *(unsigned char *)(a1 + 151);
    *a2 = 56;
    a2[1] = v23;
    a2 += 2;
  }
  int v24 = *(_DWORD *)(a1 + 104);
  if (v24)
  {
    for (int k = 0; k != v24; ++k)
    {
      if (*a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v26 = *(void *)(*(void *)(a1 + 112) + 8 * k + 8);
      *a2 = 122;
      unsigned int v27 = *(_DWORD *)(v26 + 20);
      a2[1] = v27;
      if (v27 > 0x7F) {
        uint64_t v28 = sub_188A9CC(v27, a2 + 1);
      }
      else {
        uint64_t v28 = a2 + 2;
      }
      a2 = sub_131046C(v26, (unint64_t)v28, a3);
    }
  }
  if ((v11 & 0x200) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    char v29 = *(unsigned char *)(a1 + 156);
    *(_WORD *)a2 = 384;
    a2[2] = v29;
    a2 += 3;
    if ((v11 & 1) == 0)
    {
LABEL_51:
      if ((v11 & 2) == 0) {
        goto LABEL_52;
      }
      goto LABEL_66;
    }
  }
  else if ((v11 & 1) == 0)
  {
    goto LABEL_51;
  }
  if (*a3 <= (unint64_t)a2) {
    a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
  }
  uint64_t v30 = *(void *)(a1 + 120);
  *(_WORD *)a2 = 394;
  unsigned int v31 = *(_DWORD *)(v30 + 40);
  a2[2] = v31;
  if (v31 > 0x7F) {
    int v32 = sub_188A9CC(v31, a2 + 2);
  }
  else {
    int v32 = a2 + 3;
  }
  a2 = sub_130CB34(v30, v32, a3);
  if ((v11 & 2) == 0)
  {
LABEL_52:
    if ((v11 & 0x400) == 0) {
      goto LABEL_53;
    }
    goto LABEL_72;
  }
LABEL_66:
  if (*a3 <= (unint64_t)a2) {
    a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
  }
  uint64_t v33 = *(void *)(a1 + 128);
  *(_WORD *)a2 = 402;
  unsigned int v34 = *(_DWORD *)(v33 + 20);
  a2[2] = v34;
  if (v34 > 0x7F) {
    uint64_t v35 = sub_188A9CC(v34, a2 + 2);
  }
  else {
    uint64_t v35 = a2 + 3;
  }
  a2 = (char *)sub_130C5F0(v33, (unint64_t)v35, a3);
  if ((v11 & 0x400) == 0)
  {
LABEL_53:
    if ((v11 & 4) == 0) {
      goto LABEL_54;
    }
    goto LABEL_75;
  }
LABEL_72:
  if (*a3 <= (unint64_t)a2) {
    a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
  }
  char v36 = *(unsigned char *)(a1 + 157);
  *(_WORD *)a2 = 408;
  a2[2] = v36;
  a2 += 3;
  if ((v11 & 4) == 0)
  {
LABEL_54:
    if ((v11 & 0x800) == 0) {
      goto LABEL_55;
    }
    goto LABEL_81;
  }
LABEL_75:
  if (*a3 <= (unint64_t)a2) {
    a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
  }
  uint64_t v37 = *(void *)(a1 + 136);
  *(_WORD *)a2 = 418;
  unsigned int v38 = *(_DWORD *)(v37 + 20);
  a2[2] = v38;
  if (v38 > 0x7F) {
    uint64_t v39 = sub_188A9CC(v38, a2 + 2);
  }
  else {
    uint64_t v39 = a2 + 3;
  }
  a2 = sub_18486D8(v37, (unint64_t)v39, a3);
  if ((v11 & 0x800) == 0)
  {
LABEL_55:
    if ((v11 & 0x2000) == 0) {
      goto LABEL_90;
    }
    goto LABEL_84;
  }
LABEL_81:
  if (*a3 <= (unint64_t)a2) {
    a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
  }
  char v40 = *(unsigned char *)(a1 + 158);
  *(_WORD *)a2 = 424;
  a2[2] = v40;
  a2 += 3;
  if ((v11 & 0x2000) != 0)
  {
LABEL_84:
    if (*a3 <= (unint64_t)a2) {
      a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unint64_t v41 = *(int *)(a1 + 160);
    *(_WORD *)a2 = 432;
    a2[2] = v41;
    if (v41 > 0x7F)
    {
      a2[2] = v41 | 0x80;
      unint64_t v42 = v41 >> 7;
      a2[3] = v41 >> 7;
      a2 += 4;
      if (v41 >= 0x4000)
      {
        do
        {
          *(a2 - 1) |= 0x80u;
          unint64_t v43 = v42 >> 14;
          v42 >>= 7;
          *a2++ = v42;
        }
        while (v43);
      }
    }
    else
    {
      a2 += 3;
    }
  }
LABEL_90:
  if ((v11 & 0x100) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unint64_t v44 = *(int *)(a1 + 152);
    *(_WORD *)a2 = 440;
    a2[2] = v44;
    if (v44 > 0x7F)
    {
      a2[2] = v44 | 0x80;
      unint64_t v45 = v44 >> 7;
      a2[3] = v44 >> 7;
      a2 += 4;
      if (v44 >= 0x4000)
      {
        do
        {
          *(a2 - 1) |= 0x80u;
          unint64_t v46 = v45 >> 14;
          v45 >>= 7;
          *a2++ = v45;
        }
        while (v46);
      }
    }
    else
    {
      a2 += 3;
    }
  }
  if ((v11 & 0x1000) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    char v47 = *(unsigned char *)(a1 + 159);
    *(_WORD *)a2 = 448;
    a2[2] = v47;
    a2 += 3;
  }
  if (*(_WORD *)(a1 + 26)) {
    a2 = sub_1886844(a1 + 16, 1000, 1050, a2, a3);
  }
  uint64_t v48 = *(void *)(a1 + 8);
  if ((v48 & 1) == 0) {
    return a2;
  }
  unint64_t v50 = v48 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v50 + 31) < 0)
  {
    int v51 = *(void **)(v50 + 8);
    uint64_t v52 = *(void *)(v50 + 16);
  }
  else
  {
    int v51 = (void *)(v50 + 8);
    LODWORD(v52) = *(unsigned __int8 *)(v50 + 31);
  }
  if ((uint64_t)(*a3 - (void)a2) >= (int)v52)
  {
    uint64_t v53 = (int)v52;
    memcpy(a2, v51, (int)v52);
    a2 += v53;
    return a2;
  }

  return (char *)sub_188A528(a3, (char *)v51, v52, a2);
}

uint64_t sub_17F3464(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(int *)(a1 + 56);
  uint64_t v4 = v2 + v3;
  uint64_t v5 = *(void *)(a1 + 64);
  if (v5) {
    int v6 = (uint64_t *)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = sub_17F1618(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  uint64_t v10 = *(int *)(a1 + 80);
  uint64_t v11 = v4 + v10;
  uint64_t v12 = *(void *)(a1 + 88);
  if (v12) {
    char v13 = (uint64_t *)(v12 + 8);
  }
  else {
    char v13 = 0;
  }
  if (v10)
  {
    uint64_t v14 = 8 * v10;
    do
    {
      uint64_t v15 = *v13++;
      uint64_t v16 = sub_17F00DC(v15);
      v11 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6);
      v14 -= 8;
    }
    while (v14);
  }
  uint64_t v17 = *(int *)(a1 + 104);
  uint64_t v18 = v11 + v17;
  uint64_t v19 = *(void *)(a1 + 112);
  if (v19) {
    uint64_t v20 = (uint64_t *)(v19 + 8);
  }
  else {
    uint64_t v20 = 0;
  }
  if (v17)
  {
    uint64_t v21 = 8 * v17;
    do
    {
      uint64_t v22 = *v20++;
      uint64_t v23 = sub_1310828(v22);
      v18 += v23 + ((9 * (__clz(v23 | 1) ^ 0x1F) + 73) >> 6);
      v21 -= 8;
    }
    while (v21);
  }
  int v24 = *(_DWORD *)(a1 + 40);
  if ((_BYTE)v24)
  {
    if (v24)
    {
      uint64_t v35 = sub_130CC00(*(void *)(a1 + 120));
      v18 += v35 + ((9 * (__clz(v35 | 1) ^ 0x1F) + 73) >> 6) + 2;
      if ((v24 & 2) == 0)
      {
LABEL_22:
        if ((v24 & 4) == 0) {
          goto LABEL_23;
        }
        goto LABEL_58;
      }
    }
    else if ((v24 & 2) == 0)
    {
      goto LABEL_22;
    }
    uint64_t v36 = sub_130C70C(*(void *)(a1 + 128));
    v18 += v36 + ((9 * (__clz(v36 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v24 & 4) == 0)
    {
LABEL_23:
      if ((v24 & 8) == 0)
      {
LABEL_25:
        uint64_t v25 = v18 + 2;
        if ((v24 & 0x10) == 0) {
          uint64_t v25 = v18;
        }
        if ((v24 & 0x20) != 0) {
          v25 += 2;
        }
        if ((v24 & 0x40) != 0) {
          v25 += 2;
        }
        if ((v24 & 0x80) != 0) {
          uint64_t v18 = v25 + 2;
        }
        else {
          uint64_t v18 = v25;
        }
        goto LABEL_34;
      }
LABEL_24:
      v18 += ((9 * (__clz(*(_DWORD *)(a1 + 144) | 1) ^ 0x1F) + 73) >> 6) + 1;
      goto LABEL_25;
    }
LABEL_58:
    uint64_t v37 = sub_1848920(*(void *)(a1 + 136));
    v18 += v37 + ((9 * (__clz(v37 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v24 & 8) == 0) {
      goto LABEL_25;
    }
    goto LABEL_24;
  }
LABEL_34:
  if ((v24 & 0x3F00) != 0)
  {
    if ((v24 & 0x100) != 0)
    {
      int v26 = *(_DWORD *)(a1 + 152);
      uint64_t v27 = ((9 * (__clz(v26 | 1) ^ 0x1F) + 73) >> 6) + 2;
      if (v26 >= 0) {
        uint64_t v28 = v27;
      }
      else {
        uint64_t v28 = 12;
      }
      v18 += v28;
    }
    uint64_t v29 = v18 + 3;
    if ((v24 & 0x200) == 0) {
      uint64_t v29 = v18;
    }
    if ((v24 & 0x400) != 0) {
      v29 += 3;
    }
    if ((v24 & 0x800) != 0) {
      v29 += 3;
    }
    if ((v24 & 0x1000) != 0) {
      uint64_t v18 = v29 + 3;
    }
    else {
      uint64_t v18 = v29;
    }
    if ((v24 & 0x2000) != 0)
    {
      int v30 = *(_DWORD *)(a1 + 160);
      uint64_t v31 = ((9 * (__clz(v30 | 1) ^ 0x1F) + 73) >> 6) + 2;
      if (v30 >= 0) {
        uint64_t v32 = v31;
      }
      else {
        uint64_t v32 = 12;
      }
      v18 += v32;
    }
  }
  uint64_t v33 = *(void *)(a1 + 8);
  if (v33)
  {
    unint64_t v38 = v33 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v38 + 31) < 0) {
      uint64_t v39 = *(void *)(v38 + 16);
    }
    else {
      uint64_t v39 = *(unsigned __int8 *)(v38 + 31);
    }
    v18 += v39;
  }
  *(_DWORD *)(a1 + 44) = v18;
  return v18;
}

void sub_17F375C(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 56);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    int v6 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_1879380((uint64_t *)(a1 + 48), v6, v5, v4, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v7 = *(_DWORD *)(a1 + 56) + v4;
    *(_DWORD *)(a1 + 56) = v7;
    uint64_t v8 = *(int **)(a1 + 64);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 80);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 88) + 8);
    uint64_t v11 = (std::string **)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_1664A7C((uint64_t *)(a1 + 72), v11, v10, v9, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v12 = *(_DWORD *)(a1 + 80) + v9;
    *(_DWORD *)(a1 + 80) = v12;
    char v13 = *(int **)(a1 + 88);
    if (*v13 < v12) {
      *char v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 104);
  if (v14)
  {
    uint64_t v15 = (uint64_t *)(*(void *)(a2 + 112) + 8);
    uint64_t v16 = (std::string **)sub_188CCE4(a1 + 96, *(_DWORD *)(a2 + 104));
    sub_122E02C((uint64_t *)(a1 + 96), v16, v15, v14, **(_DWORD **)(a1 + 112) - *(_DWORD *)(a1 + 104));
    int v17 = *(_DWORD *)(a1 + 104) + v14;
    *(_DWORD *)(a1 + 104) = v17;
    uint64_t v18 = *(int **)(a1 + 112);
    if (*v18 < v17) {
      int *v18 = v17;
    }
  }
  int v19 = *(_DWORD *)(a2 + 40);
  if ((_BYTE)v19)
  {
    if (v19)
    {
      *(_DWORD *)(a1 + 40) |= 1u;
      uint64_t v21 = *(void *)(a1 + 120);
      if (!v21)
      {
        uint64_t v22 = *(void *)(a1 + 8);
        uint64_t v23 = (void *)(v22 & 0xFFFFFFFFFFFFFFFCLL);
        if (v22) {
          uint64_t v23 = (void *)*v23;
        }
        uint64_t v21 = sub_131B2B4((uint64_t)v23);
        *(void *)(a1 + 120) = v21;
      }
      if (*(void *)(a2 + 120)) {
        int v24 = *(uint64_t (****)())(a2 + 120);
      }
      else {
        int v24 = &off_2532768;
      }
      sub_129AF38(v21, (uint64_t)v24);
      if ((v19 & 2) == 0)
      {
LABEL_13:
        if ((v19 & 4) == 0) {
          goto LABEL_14;
        }
        goto LABEL_50;
      }
    }
    else if ((v19 & 2) == 0)
    {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 40) |= 2u;
    uint64_t v25 = *(std::string **)(a1 + 128);
    if (!v25)
    {
      uint64_t v26 = *(void *)(a1 + 8);
      uint64_t v27 = (void *)(v26 & 0xFFFFFFFFFFFFFFFCLL);
      if (v26) {
        uint64_t v27 = (void *)*v27;
      }
      uint64_t v25 = (std::string *)sub_131B238((uint64_t)v27);
      *(void *)(a1 + 128) = v25;
    }
    if (*(void *)(a2 + 128)) {
      uint64_t v28 = *(uint64_t (****)())(a2 + 128);
    }
    else {
      uint64_t v28 = &off_2532740;
    }
    sub_123BFCC(v25, (uint64_t)v28);
    if ((v19 & 4) == 0)
    {
LABEL_14:
      if ((v19 & 8) == 0) {
        goto LABEL_15;
      }
      goto LABEL_58;
    }
LABEL_50:
    *(_DWORD *)(a1 + 40) |= 4u;
    uint64_t v29 = *(void *)(a1 + 136);
    if (!v29)
    {
      uint64_t v30 = *(void *)(a1 + 8);
      uint64_t v31 = (void *)(v30 & 0xFFFFFFFFFFFFFFFCLL);
      if (v30) {
        uint64_t v31 = (void *)*v31;
      }
      uint64_t v29 = sub_1849FB4((uint64_t)v31);
      *(void *)(a1 + 136) = v29;
    }
    if (*(void *)(a2 + 136)) {
      uint64_t v32 = *(uint64_t (****)())(a2 + 136);
    }
    else {
      uint64_t v32 = &off_254D220;
    }
    sub_179F4B0(v29, (uint64_t)v32);
    if ((v19 & 8) == 0)
    {
LABEL_15:
      if ((v19 & 0x10) == 0) {
        goto LABEL_16;
      }
      goto LABEL_59;
    }
LABEL_58:
    *(_DWORD *)(a1 + 144) = *(_DWORD *)(a2 + 144);
    if ((v19 & 0x10) == 0)
    {
LABEL_16:
      if ((v19 & 0x20) == 0) {
        goto LABEL_17;
      }
      goto LABEL_60;
    }
LABEL_59:
    *(unsigned char *)(a1 + 148) = *(unsigned char *)(a2 + 148);
    if ((v19 & 0x20) == 0)
    {
LABEL_17:
      if ((v19 & 0x40) == 0) {
        goto LABEL_18;
      }
      goto LABEL_61;
    }
LABEL_60:
    *(unsigned char *)(a1 + 149) = *(unsigned char *)(a2 + 149);
    if ((v19 & 0x40) == 0)
    {
LABEL_18:
      if ((v19 & 0x80) == 0)
      {
LABEL_20:
        *(_DWORD *)(a1 + 40) |= v19;
        goto LABEL_21;
      }
LABEL_19:
      *(unsigned char *)(a1 + 151) = *(unsigned char *)(a2 + 151);
      goto LABEL_20;
    }
LABEL_61:
    *(unsigned char *)(a1 + 150) = *(unsigned char *)(a2 + 150);
    if ((v19 & 0x80) == 0) {
      goto LABEL_20;
    }
    goto LABEL_19;
  }
LABEL_21:
  if ((v19 & 0x3F00) == 0) {
    goto LABEL_30;
  }
  if ((v19 & 0x100) != 0)
  {
    *(_DWORD *)(a1 + 152) = *(_DWORD *)(a2 + 152);
    if ((v19 & 0x200) == 0)
    {
LABEL_24:
      if ((v19 & 0x400) == 0) {
        goto LABEL_25;
      }
      goto LABEL_65;
    }
  }
  else if ((v19 & 0x200) == 0)
  {
    goto LABEL_24;
  }
  *(unsigned char *)(a1 + 156) = *(unsigned char *)(a2 + 156);
  if ((v19 & 0x400) == 0)
  {
LABEL_25:
    if ((v19 & 0x800) == 0) {
      goto LABEL_26;
    }
    goto LABEL_66;
  }
LABEL_65:
  *(unsigned char *)(a1 + 157) = *(unsigned char *)(a2 + 157);
  if ((v19 & 0x800) == 0)
  {
LABEL_26:
    if ((v19 & 0x1000) == 0) {
      goto LABEL_27;
    }
LABEL_67:
    *(unsigned char *)(a1 + 159) = *(unsigned char *)(a2 + 159);
    if ((v19 & 0x2000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_28;
  }
LABEL_66:
  *(unsigned char *)(a1 + 158) = *(unsigned char *)(a2 + 158);
  if ((v19 & 0x1000) != 0) {
    goto LABEL_67;
  }
LABEL_27:
  if ((v19 & 0x2000) != 0) {
LABEL_28:
  }
    *(_DWORD *)(a1 + 160) = *(_DWORD *)(a2 + 160);
LABEL_29:
  *(_DWORD *)(a1 + 40) |= v19;
LABEL_30:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v20 = *(void *)(a2 + 8);
  if (v20)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v20 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_17F3ACC(uint64_t a1)
{
  uint64_t result = sub_18856CC(a1 + 16);
  if (result)
  {
    uint64_t result = sub_17F3B30(a1 + 48);
    if (result)
    {
      int v3 = *(_DWORD *)(a1 + 40);
      if (v3)
      {
        uint64_t result = sub_130CC58(*(void *)(a1 + 120));
        if (!result) {
          return result;
        }
        int v3 = *(_DWORD *)(a1 + 40);
      }
      if ((v3 & 4) == 0) {
        return 1;
      }
      uint64_t result = sub_179F73C(*(void *)(a1 + 136));
      if (result) {
        return 1;
      }
    }
  }
  return result;
}

uint64_t sub_17F3B30(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 8);
  if ((int)v1 >= 1)
  {
    do
    {
      uint64_t v3 = v1--;
      uint64_t v4 = *(void *)(*(void *)(a1 + 16) + 8 * v1 + 8);
      uint64_t v5 = *(unsigned int *)(v4 + 32);
      while ((int)v5 >= 1)
      {
        uint64_t v6 = v5 - 1;
        char v7 = sub_131B154(*(void *)(*(void *)(v4 + 40) + 8 * v5));
        uint64_t v5 = v6;
        if ((v7 & 1) == 0) {
          return 0;
        }
      }
    }
    while (v3 >= 2);
  }
  return 1;
}

void *sub_17F3BBC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.AutocompleteResult");
}

uint64_t sub_17F3BCC(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (void *)(a1 + 8);
  *(void *)a1 = off_24DEB98;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 24) = &qword_2550250;
  int v6 = *(_DWORD *)(a2 + 16);
  if (v6)
  {
    char v7 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      char v7 = (uint64_t *)*v7;
    }
    sub_1881DF4((std::string **)(a1 + 24), (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL), v7);
    int v6 = *(_DWORD *)(a2 + 16);
  }
  if ((v6 & 2) != 0) {
    operator new();
  }
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  return a1;
}

void sub_17F3CB8()
{
}

uint64_t sub_17F3D08(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_254BA18)
  {
    uint64_t v6 = *(void *)(a1 + 32);
    if (v6)
    {
      sub_179203C(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17F3DD4(uint64_t a1)
{
  sub_17F3D08(a1);

  operator delete();
}

unsigned char *sub_17F3E0C(unsigned char *result)
{
  uint64_t v1 = result;
  int v2 = *((_DWORD *)result + 4);
  if ((v2 & 3) != 0)
  {
    if ((v2 & 1) == 0) {
      goto LABEL_5;
    }
    unint64_t v3 = *((void *)result + 3) & 0xFFFFFFFFFFFFFFFELL;
    if ((*(char *)(v3 + 23) & 0x80000000) == 0)
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
LABEL_5:
      if ((v2 & 2) == 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
    **(unsigned char **)unint64_t v3 = 0;
    *(void *)(v3 + 8) = 0;
    if ((v2 & 2) != 0) {
LABEL_6:
    }
      uint64_t result = sub_179212C(*((unsigned char **)result + 4));
  }
LABEL_7:
  if ((v2 & 0xC) != 0)
  {
    v1[40] = 0;
    *((_DWORD *)v1 + 11) = 15;
  }
  char v5 = v1[8];
  uint64_t v4 = v1 + 8;
  *((_DWORD *)v4 + 2) = 0;
  if (v5)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

uint64_t sub_17F3EB4(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v30 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v30, a3[11].i32[1])) {
    goto LABEL_2;
  }
  char v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (unsigned __int8 *)(*(void *)v30 + 1);
    unsigned int v9 = **(unsigned char **)v30;
    if ((char)**(unsigned char **)v30 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        uint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v30, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (unsigned __int8 *)(*(void *)v30 + 2);
      }
    }
    *(void *)uint64_t v30 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_29;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 8);
        char v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          char v13 = (uint64_t *)*v13;
        }
        int v14 = (std::string *)sub_1880F84((void *)(a1 + 24), v13);
        uint64_t v15 = (void *)sub_188C244(v14, *(char **)v30, (uint64_t)a3);
        goto LABEL_36;
      case 2u:
        if (v9 != 18) {
          goto LABEL_29;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v16 = *(void **)(a1 + 32);
        if (!v16)
        {
          int v17 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            int v17 = (void *)*v17;
          }
          uint64_t v16 = sub_18302C8((uint64_t)v17);
          *(void *)(a1 + 32) = v16;
          uint64_t v8 = *(unsigned __int8 **)v30;
        }
        uint64_t v15 = sub_120FE50(a3, (uint64_t)v16, v8);
        goto LABEL_36;
      case 3u:
        if (v9 != 24) {
          goto LABEL_29;
        }
        v5 |= 8u;
        int v19 = (char *)(v8 + 1);
        LODWORD(v18) = *v8;
        if ((v18 & 0x80) == 0) {
          goto LABEL_23;
        }
        int v20 = *v19;
        uint64_t v18 = v18 + (v20 << 7) - 128;
        if (v20 < 0)
        {
          uint64_t v26 = sub_188C138((uint64_t)v8, v18);
          *(void *)uint64_t v30 = v26;
          *(_DWORD *)(a1 + 44) = v27;
          if (!v26) {
            goto LABEL_46;
          }
        }
        else
        {
          int v19 = (char *)(v8 + 2);
LABEL_23:
          *(void *)uint64_t v30 = v19;
          *(_DWORD *)(a1 + 44) = v18;
        }
        goto LABEL_37;
      case 4u:
        if (v9 != 32) {
          goto LABEL_29;
        }
        v5 |= 4u;
        uint64_t v21 = (char *)(v8 + 1);
        uint64_t v22 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_28;
        }
        int v23 = *v21;
        uint64_t v22 = v22 + (v23 << 7) - 128;
        if (v23 < 0)
        {
          uint64_t v28 = sub_188C138((uint64_t)v8, v22);
          *(void *)uint64_t v30 = v28;
          *(unsigned char *)(a1 + 40) = v29 != 0;
          if (!v28) {
            goto LABEL_46;
          }
        }
        else
        {
          uint64_t v21 = (char *)(v8 + 2);
LABEL_28:
          *(void *)uint64_t v30 = v21;
          *(unsigned char *)(a1 + 40) = v22 != 0;
        }
        goto LABEL_37;
      default:
LABEL_29:
        if (v9) {
          BOOL v24 = (v9 & 7) == 4;
        }
        else {
          BOOL v24 = 1;
        }
        if (!v24)
        {
          if (*v7)
          {
            uint64_t v25 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v25 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = *(unsigned __int8 **)v30;
          }
          uint64_t v15 = sub_1885AC0(v9, v25, (char *)v8, a3);
LABEL_36:
          *(void *)uint64_t v30 = v15;
          if (!v15) {
            goto LABEL_46;
          }
LABEL_37:
          if (sub_11947B8((uint64_t)a3, (char **)v30, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_46:
        }
          *(void *)uint64_t v30 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v30;
    }
  }
}

unsigned char *sub_17F4178(uint64_t a1, unsigned char *__dst, void *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 8) == 0) {
        goto LABEL_18;
      }
      goto LABEL_12;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v7 = *(void *)(a1 + 32);
  *uint64_t v4 = 18;
  unsigned int v8 = *(_DWORD *)(v7 + 20);
  v4[1] = v8;
  if (v8 > 0x7F) {
    unsigned int v9 = sub_188A9CC(v8, v4 + 1);
  }
  else {
    unsigned int v9 = v4 + 2;
  }
  uint64_t v4 = sub_1792424(v7, (unint64_t)v9, a3);
  if ((v6 & 8) != 0)
  {
LABEL_12:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 44);
    *uint64_t v4 = 24;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_18:
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v13 = *(unsigned char *)(a1 + 40);
    *uint64_t v4 = 32;
    v4[1] = v13;
    v4 += 2;
  }
  uint64_t v14 = *(void *)(a1 + 8);
  if ((v14 & 1) == 0) {
    return v4;
  }
  unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v16 + 31) < 0)
  {
    int v17 = *(void **)(v16 + 8);
    uint64_t v18 = *(void *)(v16 + 16);
  }
  else
  {
    int v17 = (void *)(v16 + 8);
    LODWORD(v18) = *(unsigned __int8 *)(v16 + 31);
  }
  if (*a3 - (void)v4 >= (int)v18)
  {
    uint64_t v19 = (int)v18;
    memcpy(v4, v17, (int)v18);
    v4 += v19;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v17, v18, v4);
}

uint64_t sub_17F4374(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0xF) == 0)
  {
    uint64_t result = 0;
    goto LABEL_18;
  }
  if (v2)
  {
    unint64_t v5 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
    uint64_t v7 = *(void *)(v5 + 8);
    if ((v6 & 0x80u) == 0) {
      uint64_t v7 = v6;
    }
    uint64_t v3 = v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_9:
    uint64_t v8 = sub_1792638(*(void *)(a1 + 32));
    v3 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  if ((v2 & 4) != 0) {
    uint64_t result = v3 + 2;
  }
  else {
    uint64_t result = v3;
  }
  if ((v2 & 8) != 0)
  {
    int v9 = *(_DWORD *)(a1 + 44);
    uint64_t v10 = ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if (v9 >= 0) {
      uint64_t v11 = v10;
    }
    else {
      uint64_t v11 = 11;
    }
    result += v11;
  }
LABEL_18:
  uint64_t v12 = *(void *)(a1 + 8);
  if (v12)
  {
    unint64_t v13 = v12 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v13 + 31) < 0) {
      uint64_t v14 = *(void *)(v13 + 16);
    }
    else {
      uint64_t v14 = *(unsigned __int8 *)(v13 + 31);
    }
    result += v14;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

void sub_17F449C(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0xF) != 0)
  {
    if (v4)
    {
      uint64_t v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v7 = (std::string **)(a1 + 24);
      uint64_t v8 = *(void *)(a1 + 8);
      int v9 = (uint64_t *)(v8 & 0xFFFFFFFFFFFFFFFCLL);
      if (v8) {
        int v9 = (uint64_t *)*v9;
      }
      sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_23;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v10 = *(void **)(a1 + 32);
    if (!v10)
    {
      uint64_t v11 = *(void *)(a1 + 8);
      uint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        uint64_t v12 = (void *)*v12;
      }
      uint64_t v10 = sub_18302C8((uint64_t)v12);
      *(void *)(a1 + 32) = v10;
    }
    if (*(void *)(a2 + 32)) {
      unint64_t v13 = *(uint64_t (****)())(a2 + 32);
    }
    else {
      unint64_t v13 = &off_2549800;
    }
    sub_1792730((uint64_t)v10, (uint64_t)v13);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0)
      {
LABEL_7:
        *(_DWORD *)(a1 + 16) |= v4;
        goto LABEL_8;
      }
LABEL_6:
      *(_DWORD *)(a1 + 44) = *(_DWORD *)(a2 + 44);
      goto LABEL_7;
    }
LABEL_23:
    *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
    if ((v4 & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_8:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

BOOL sub_17F45BC(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 2) == 0) {
    return 1;
  }
  uint64_t v1 = *(void *)(a1 + 32);
  if ((*(unsigned char *)(v1 + 16) & 1) == 0) {
    return 1;
  }
  BOOL result = sub_15B1FC0(*(void *)(v1 + 24));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_17F45F4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.AutocompleteParameters.AutocompleteParametersFullEntriesOnly");
}

uint64_t sub_17F4604(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (void *)(a1 + 8);
  *(void *)a1 = off_24DEC18;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 24) = &qword_2550250;
  int v6 = *(_DWORD *)(a2 + 16);
  if (v6)
  {
    uint64_t v7 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v7 = (uint64_t *)*v7;
    }
    sub_1881DF4((std::string **)(a1 + 24), (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL), v7);
    int v6 = *(_DWORD *)(a2 + 16);
  }
  if ((v6 & 2) != 0) {
    operator new();
  }
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  return a1;
}

void sub_17F46F0()
{
}

uint64_t sub_17F4740(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_254BA48)
  {
    uint64_t v6 = *(void *)(a1 + 32);
    if (v6)
    {
      sub_179203C(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17F480C(uint64_t a1)
{
  sub_17F4740(a1);

  operator delete();
}

unsigned char *sub_17F4844(unsigned char *result)
{
  uint64_t v1 = result;
  int v2 = *((_DWORD *)result + 4);
  if ((v2 & 3) != 0)
  {
    if ((v2 & 1) == 0) {
      goto LABEL_5;
    }
    unint64_t v3 = *((void *)result + 3) & 0xFFFFFFFFFFFFFFFELL;
    if ((*(char *)(v3 + 23) & 0x80000000) == 0)
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
LABEL_5:
      if ((v2 & 2) == 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
    **(unsigned char **)unint64_t v3 = 0;
    *(void *)(v3 + 8) = 0;
    if ((v2 & 2) != 0) {
LABEL_6:
    }
      BOOL result = sub_179212C(*((unsigned char **)result + 4));
  }
LABEL_7:
  if ((v2 & 0xC) != 0)
  {
    v1[40] = 0;
    *((_DWORD *)v1 + 11) = 15;
  }
  char v5 = v1[8];
  int v4 = v1 + 8;
  *((_DWORD *)v4 + 2) = 0;
  if (v5)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

uint64_t sub_17F48EC(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v30 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v30, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (unsigned __int8 *)(*(void *)v30 + 1);
    unsigned int v9 = **(unsigned char **)v30;
    if ((char)**(unsigned char **)v30 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        uint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v30, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (unsigned __int8 *)(*(void *)v30 + 2);
      }
    }
    *(void *)uint64_t v30 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_29;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 8);
        unint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          unint64_t v13 = (uint64_t *)*v13;
        }
        uint64_t v14 = (std::string *)sub_1880F84((void *)(a1 + 24), v13);
        uint64_t v15 = (void *)sub_188C244(v14, *(char **)v30, (uint64_t)a3);
        goto LABEL_36;
      case 2u:
        if (v9 != 18) {
          goto LABEL_29;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        unint64_t v16 = *(void **)(a1 + 32);
        if (!v16)
        {
          int v17 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            int v17 = (void *)*v17;
          }
          unint64_t v16 = sub_18302C8((uint64_t)v17);
          *(void *)(a1 + 32) = v16;
          uint64_t v8 = *(unsigned __int8 **)v30;
        }
        uint64_t v15 = sub_120FE50(a3, (uint64_t)v16, v8);
        goto LABEL_36;
      case 3u:
        if (v9 != 24) {
          goto LABEL_29;
        }
        v5 |= 8u;
        uint64_t v19 = (char *)(v8 + 1);
        LODWORD(v18) = *v8;
        if ((v18 & 0x80) == 0) {
          goto LABEL_23;
        }
        int v20 = *v19;
        uint64_t v18 = v18 + (v20 << 7) - 128;
        if (v20 < 0)
        {
          uint64_t v26 = sub_188C138((uint64_t)v8, v18);
          *(void *)uint64_t v30 = v26;
          *(_DWORD *)(a1 + 44) = v27;
          if (!v26) {
            goto LABEL_46;
          }
        }
        else
        {
          uint64_t v19 = (char *)(v8 + 2);
LABEL_23:
          *(void *)uint64_t v30 = v19;
          *(_DWORD *)(a1 + 44) = v18;
        }
        goto LABEL_37;
      case 4u:
        if (v9 != 32) {
          goto LABEL_29;
        }
        v5 |= 4u;
        uint64_t v21 = (char *)(v8 + 1);
        uint64_t v22 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_28;
        }
        int v23 = *v21;
        uint64_t v22 = v22 + (v23 << 7) - 128;
        if (v23 < 0)
        {
          uint64_t v28 = sub_188C138((uint64_t)v8, v22);
          *(void *)uint64_t v30 = v28;
          *(unsigned char *)(a1 + 40) = v29 != 0;
          if (!v28) {
            goto LABEL_46;
          }
        }
        else
        {
          uint64_t v21 = (char *)(v8 + 2);
LABEL_28:
          *(void *)uint64_t v30 = v21;
          *(unsigned char *)(a1 + 40) = v22 != 0;
        }
        goto LABEL_37;
      default:
LABEL_29:
        if (v9) {
          BOOL v24 = (v9 & 7) == 4;
        }
        else {
          BOOL v24 = 1;
        }
        if (!v24)
        {
          if (*v7)
          {
            uint64_t v25 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v25 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = *(unsigned __int8 **)v30;
          }
          uint64_t v15 = sub_1885AC0(v9, v25, (char *)v8, a3);
LABEL_36:
          *(void *)uint64_t v30 = v15;
          if (!v15) {
            goto LABEL_46;
          }
LABEL_37:
          if (sub_11947B8((uint64_t)a3, (char **)v30, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_46:
        }
          *(void *)uint64_t v30 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v30;
    }
  }
}

unsigned char *sub_17F4BB0(uint64_t a1, unsigned char *__dst, void *a3)
{
  int v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    int v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 8) == 0) {
        goto LABEL_18;
      }
      goto LABEL_12;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v7 = *(void *)(a1 + 32);
  *int v4 = 18;
  unsigned int v8 = *(_DWORD *)(v7 + 20);
  v4[1] = v8;
  if (v8 > 0x7F) {
    unsigned int v9 = sub_188A9CC(v8, v4 + 1);
  }
  else {
    unsigned int v9 = v4 + 2;
  }
  int v4 = sub_1792424(v7, (unint64_t)v9, a3);
  if ((v6 & 8) != 0)
  {
LABEL_12:
    if (*a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 44);
    *int v4 = 24;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_18:
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v13 = *(unsigned char *)(a1 + 40);
    *int v4 = 32;
    v4[1] = v13;
    v4 += 2;
  }
  uint64_t v14 = *(void *)(a1 + 8);
  if ((v14 & 1) == 0) {
    return v4;
  }
  unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v16 + 31) < 0)
  {
    int v17 = *(void **)(v16 + 8);
    uint64_t v18 = *(void *)(v16 + 16);
  }
  else
  {
    int v17 = (void *)(v16 + 8);
    LODWORD(v18) = *(unsigned __int8 *)(v16 + 31);
  }
  if (*a3 - (void)v4 >= (int)v18)
  {
    uint64_t v19 = (int)v18;
    memcpy(v4, v17, (int)v18);
    v4 += v19;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v17, v18, v4);
}

uint64_t sub_17F4DAC(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0xF) == 0)
  {
    uint64_t result = 0;
    goto LABEL_18;
  }
  if (v2)
  {
    unint64_t v5 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
    uint64_t v7 = *(void *)(v5 + 8);
    if ((v6 & 0x80u) == 0) {
      uint64_t v7 = v6;
    }
    uint64_t v3 = v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_9:
    uint64_t v8 = sub_1792638(*(void *)(a1 + 32));
    v3 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  if ((v2 & 4) != 0) {
    uint64_t result = v3 + 2;
  }
  else {
    uint64_t result = v3;
  }
  if ((v2 & 8) != 0)
  {
    int v9 = *(_DWORD *)(a1 + 44);
    uint64_t v10 = ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if (v9 >= 0) {
      uint64_t v11 = v10;
    }
    else {
      uint64_t v11 = 11;
    }
    result += v11;
  }
LABEL_18:
  uint64_t v12 = *(void *)(a1 + 8);
  if (v12)
  {
    unint64_t v13 = v12 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v13 + 31) < 0) {
      uint64_t v14 = *(void *)(v13 + 16);
    }
    else {
      uint64_t v14 = *(unsigned __int8 *)(v13 + 31);
    }
    result += v14;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

BOOL sub_17F4ED4(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 2) == 0) {
    return 1;
  }
  uint64_t v1 = *(void *)(a1 + 32);
  if ((*(unsigned char *)(v1 + 16) & 1) == 0) {
    return 1;
  }
  BOOL result = sub_15B1FC0(*(void *)(v1 + 24));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_17F4F0C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.AutocompleteParameters.AutocompleteParametersAllEntries");
}

uint64_t sub_17F4F1C(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (void *)(a1 + 8);
  *(void *)a1 = off_24DEC98;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 24) = &qword_2550250;
  int v6 = *(_DWORD *)(a2 + 16);
  if (v6)
  {
    uint64_t v7 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v7 = (uint64_t *)*v7;
    }
    sub_1881DF4((std::string **)(a1 + 24), (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL), v7);
    int v6 = *(_DWORD *)(a2 + 16);
  }
  if ((v6 & 2) != 0) {
    operator new();
  }
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  return a1;
}

void sub_17F5008()
{
}

uint64_t sub_17F5058(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_254BA78)
  {
    uint64_t v6 = *(void *)(a1 + 32);
    if (v6)
    {
      sub_179203C(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17F5124(uint64_t a1)
{
  sub_17F5058(a1);

  operator delete();
}

unsigned char *sub_17F515C(unsigned char *result)
{
  uint64_t v1 = result;
  int v2 = *((_DWORD *)result + 4);
  if ((v2 & 3) != 0)
  {
    if ((v2 & 1) == 0) {
      goto LABEL_5;
    }
    unint64_t v3 = *((void *)result + 3) & 0xFFFFFFFFFFFFFFFELL;
    if ((*(char *)(v3 + 23) & 0x80000000) == 0)
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
LABEL_5:
      if ((v2 & 2) == 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
    **(unsigned char **)unint64_t v3 = 0;
    *(void *)(v3 + 8) = 0;
    if ((v2 & 2) != 0) {
LABEL_6:
    }
      BOOL result = sub_179212C(*((unsigned char **)result + 4));
  }
LABEL_7:
  if ((v2 & 0xC) != 0)
  {
    v1[40] = 0;
    *((_DWORD *)v1 + 11) = 15;
  }
  char v5 = v1[8];
  int v4 = v1 + 8;
  *((_DWORD *)v4 + 2) = 0;
  if (v5)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

uint64_t sub_17F5204(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v30 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v30, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (unsigned __int8 *)(*(void *)v30 + 1);
    unsigned int v9 = **(unsigned char **)v30;
    if ((char)**(unsigned char **)v30 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        uint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v30, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (unsigned __int8 *)(*(void *)v30 + 2);
      }
    }
    *(void *)uint64_t v30 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_29;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 8);
        unint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          unint64_t v13 = (uint64_t *)*v13;
        }
        uint64_t v14 = (std::string *)sub_1880F84((void *)(a1 + 24), v13);
        uint64_t v15 = (void *)sub_188C244(v14, *(char **)v30, (uint64_t)a3);
        goto LABEL_36;
      case 2u:
        if (v9 != 18) {
          goto LABEL_29;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        unint64_t v16 = *(void **)(a1 + 32);
        if (!v16)
        {
          int v17 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            int v17 = (void *)*v17;
          }
          unint64_t v16 = sub_18302C8((uint64_t)v17);
          *(void *)(a1 + 32) = v16;
          uint64_t v8 = *(unsigned __int8 **)v30;
        }
        uint64_t v15 = sub_120FE50(a3, (uint64_t)v16, v8);
        goto LABEL_36;
      case 3u:
        if (v9 != 24) {
          goto LABEL_29;
        }
        v5 |= 8u;
        uint64_t v19 = (char *)(v8 + 1);
        LODWORD(v18) = *v8;
        if ((v18 & 0x80) == 0) {
          goto LABEL_23;
        }
        int v20 = *v19;
        uint64_t v18 = v18 + (v20 << 7) - 128;
        if (v20 < 0)
        {
          uint64_t v26 = sub_188C138((uint64_t)v8, v18);
          *(void *)uint64_t v30 = v26;
          *(_DWORD *)(a1 + 44) = v27;
          if (!v26) {
            goto LABEL_46;
          }
        }
        else
        {
          uint64_t v19 = (char *)(v8 + 2);
LABEL_23:
          *(void *)uint64_t v30 = v19;
          *(_DWORD *)(a1 + 44) = v18;
        }
        goto LABEL_37;
      case 4u:
        if (v9 != 32) {
          goto LABEL_29;
        }
        v5 |= 4u;
        uint64_t v21 = (char *)(v8 + 1);
        uint64_t v22 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_28;
        }
        int v23 = *v21;
        uint64_t v22 = v22 + (v23 << 7) - 128;
        if (v23 < 0)
        {
          uint64_t v28 = sub_188C138((uint64_t)v8, v22);
          *(void *)uint64_t v30 = v28;
          *(unsigned char *)(a1 + 40) = v29 != 0;
          if (!v28) {
            goto LABEL_46;
          }
        }
        else
        {
          uint64_t v21 = (char *)(v8 + 2);
LABEL_28:
          *(void *)uint64_t v30 = v21;
          *(unsigned char *)(a1 + 40) = v22 != 0;
        }
        goto LABEL_37;
      default:
LABEL_29:
        if (v9) {
          BOOL v24 = (v9 & 7) == 4;
        }
        else {
          BOOL v24 = 1;
        }
        if (!v24)
        {
          if (*v7)
          {
            uint64_t v25 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v25 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = *(unsigned __int8 **)v30;
          }
          uint64_t v15 = sub_1885AC0(v9, v25, (char *)v8, a3);
LABEL_36:
          *(void *)uint64_t v30 = v15;
          if (!v15) {
            goto LABEL_46;
          }
LABEL_37:
          if (sub_11947B8((uint64_t)a3, (char **)v30, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_46:
        }
          *(void *)uint64_t v30 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v30;
    }
  }
}

unsigned char *sub_17F54C8(uint64_t a1, unsigned char *__dst, void *a3)
{
  int v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    int v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 8) == 0) {
        goto LABEL_18;
      }
      goto LABEL_12;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v7 = *(void *)(a1 + 32);
  *int v4 = 18;
  unsigned int v8 = *(_DWORD *)(v7 + 20);
  v4[1] = v8;
  if (v8 > 0x7F) {
    unsigned int v9 = sub_188A9CC(v8, v4 + 1);
  }
  else {
    unsigned int v9 = v4 + 2;
  }
  int v4 = sub_1792424(v7, (unint64_t)v9, a3);
  if ((v6 & 8) != 0)
  {
LABEL_12:
    if (*a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 44);
    *int v4 = 24;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_18:
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v13 = *(unsigned char *)(a1 + 40);
    *int v4 = 32;
    v4[1] = v13;
    v4 += 2;
  }
  uint64_t v14 = *(void *)(a1 + 8);
  if ((v14 & 1) == 0) {
    return v4;
  }
  unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v16 + 31) < 0)
  {
    int v17 = *(void **)(v16 + 8);
    uint64_t v18 = *(void *)(v16 + 16);
  }
  else
  {
    int v17 = (void *)(v16 + 8);
    LODWORD(v18) = *(unsigned __int8 *)(v16 + 31);
  }
  if (*a3 - (void)v4 >= (int)v18)
  {
    uint64_t v19 = (int)v18;
    memcpy(v4, v17, (int)v18);
    v4 += v19;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v17, v18, v4);
}

uint64_t sub_17F56C4(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0xF) == 0)
  {
    uint64_t result = 0;
    goto LABEL_18;
  }
  if (v2)
  {
    unint64_t v5 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
    uint64_t v7 = *(void *)(v5 + 8);
    if ((v6 & 0x80u) == 0) {
      uint64_t v7 = v6;
    }
    uint64_t v3 = v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_9:
    uint64_t v8 = sub_1792638(*(void *)(a1 + 32));
    v3 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  if ((v2 & 4) != 0) {
    uint64_t result = v3 + 2;
  }
  else {
    uint64_t result = v3;
  }
  if ((v2 & 8) != 0)
  {
    int v9 = *(_DWORD *)(a1 + 44);
    uint64_t v10 = ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if (v9 >= 0) {
      uint64_t v11 = v10;
    }
    else {
      uint64_t v11 = 11;
    }
    result += v11;
  }
LABEL_18:
  uint64_t v12 = *(void *)(a1 + 8);
  if (v12)
  {
    unint64_t v13 = v12 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v13 + 31) < 0) {
      uint64_t v14 = *(void *)(v13 + 16);
    }
    else {
      uint64_t v14 = *(unsigned __int8 *)(v13 + 31);
    }
    result += v14;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

BOOL sub_17F57EC(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 2) == 0) {
    return 1;
  }
  uint64_t v1 = *(void *)(a1 + 32);
  if ((*(unsigned char *)(v1 + 16) & 1) == 0) {
    return 1;
  }
  BOOL result = sub_15B1FC0(*(void *)(v1 + 24));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_17F5824@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.AutocompleteParameters.AutocompleteParametersLocalitiesAndLandmarks");
}

uint64_t sub_17F5834(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_24DED18;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  if (*(unsigned char *)(a2 + 16)) {
    operator new();
  }
  *(void *)(a1 + 24) = 0;
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  return a1;
}

void sub_17F58E8()
{
}

uint64_t sub_17F5938(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  if ((uint64_t (***)())a1 != &off_254BAA8 && *(void *)(a1 + 24))
  {
    sub_15B0994();
    operator delete();
  }
  if (*(void *)(a1 + 8)) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17F59F0(uint64_t a1)
{
  sub_17F5938(a1);

  operator delete();
}

unsigned char *sub_17F5A28(unsigned char *result)
{
  uint64_t v1 = result;
  if (result[16]) {
    BOOL result = sub_15B09D0(*((void *)result + 3));
  }
  char v3 = v1[8];
  uint64_t v2 = v1 + 8;
  *((_WORD *)v2 + 12) = 0;
  *((_DWORD *)v2 + 2) = 0;
  if (v3)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v2);
  }
  return result;
}

char *sub_17F5A88(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v29 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v29, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v29 + 1;
    unsigned int v9 = *v29;
    if (*v29 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v29, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v29 + 2;
      }
    }
    uint64_t v29 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 == 3)
    {
      if (v9 != 24) {
        goto LABEL_14;
      }
      v5 |= 4u;
      int v17 = v8 + 1;
      uint64_t v18 = *v8;
      if ((*v8 & 0x80000000) == 0) {
        goto LABEL_25;
      }
      int v19 = *v17;
      uint64_t v18 = v18 + (v19 << 7) - 128;
      if ((v19 & 0x80000000) == 0)
      {
        int v17 = v8 + 2;
LABEL_25:
        uint64_t v29 = v17;
        *(unsigned char *)(a1 + 33) = v18 != 0;
        goto LABEL_37;
      }
      uint64_t v25 = (char *)sub_188C138((uint64_t)v8, v18);
      uint64_t v29 = v25;
      *(unsigned char *)(a1 + 33) = v26 != 0;
      if (!v25) {
        goto LABEL_46;
      }
      goto LABEL_37;
    }
    if (v12 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_14;
    }
    v5 |= 2u;
    int v20 = v8 + 1;
    uint64_t v21 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_30;
    }
    int v22 = *v20;
    uint64_t v21 = v21 + (v22 << 7) - 128;
    if ((v22 & 0x80000000) == 0)
    {
      int v20 = v8 + 2;
LABEL_30:
      uint64_t v29 = v20;
      *(unsigned char *)(a1 + 32) = v21 != 0;
      goto LABEL_37;
    }
    int v27 = (char *)sub_188C138((uint64_t)v8, v21);
    uint64_t v29 = v27;
    *(unsigned char *)(a1 + 32) = v28 != 0;
    if (!v27) {
      goto LABEL_46;
    }
LABEL_37:
    if (sub_11947B8((uint64_t)a3, &v29, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v12 == 1 && v9 == 10)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v23 = *(void *)(a1 + 24);
    if (!v23)
    {
      BOOL v24 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v7) {
        BOOL v24 = (void *)*v24;
      }
      uint64_t v23 = sub_15C1918((uint64_t)v24);
      *(void *)(a1 + 24) = v23;
      uint64_t v8 = v29;
    }
    unint64_t v16 = sub_1198F14(a3, v23, (unsigned __int8 *)v8);
LABEL_36:
    uint64_t v29 = v16;
    if (!v16) {
      goto LABEL_46;
    }
    goto LABEL_37;
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (*v7)
    {
      uint64_t v15 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = v29;
    }
    unint64_t v16 = (char *)sub_1885AC0(v9, v15, v8, a3);
    goto LABEL_36;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_46:
  uint64_t v29 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v29;
}

char *sub_17F5CF0(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    *uint64_t v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 44);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    uint64_t v4 = sub_15B0C0C(v7, v9, a3);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_17;
      }
      goto LABEL_14;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v10 = *(unsigned char *)(a1 + 32);
  *uint64_t v4 = 16;
  v4[1] = v10;
  v4 += 2;
  if ((v6 & 4) != 0)
  {
LABEL_14:
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v11 = *(unsigned char *)(a1 + 33);
    *uint64_t v4 = 24;
    v4[1] = v11;
    v4 += 2;
  }
LABEL_17:
  uint64_t v12 = *(void *)(a1 + 8);
  if ((v12 & 1) == 0) {
    return v4;
  }
  unint64_t v14 = v12 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v14 + 31) < 0)
  {
    uint64_t v15 = *(void **)(v14 + 8);
    uint64_t v16 = *(void *)(v14 + 16);
  }
  else
  {
    uint64_t v15 = (void *)(v14 + 8);
    LODWORD(v16) = *(unsigned __int8 *)(v14 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v16)
  {
    uint64_t v17 = (int)v16;
    memcpy(v4, v15, (int)v16);
    v4 += v17;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v15, v16, v4);
}

uint64_t sub_17F5E88(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 7) != 0)
  {
    if (v2)
    {
      uint64_t v5 = sub_15B0D90(*(void *)(a1 + 24));
      uint64_t v3 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    else
    {
      uint64_t v3 = 0;
    }
    if ((v2 & 2) != 0) {
      v3 += 2;
    }
    if ((v2 & 4) != 0) {
      uint64_t result = v3 + 2;
    }
    else {
      uint64_t result = v3;
    }
  }
  else
  {
    uint64_t result = 0;
  }
  uint64_t v6 = *(void *)(a1 + 8);
  if (v6)
  {
    unint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v7 + 31) < 0) {
      uint64_t v8 = *(void *)(v7 + 16);
    }
    else {
      uint64_t v8 = *(unsigned __int8 *)(v7 + 31);
    }
    result += v8;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

void sub_17F5F38(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 7) != 0)
  {
    if (v4)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v6 = *(void *)(a1 + 24);
      if (!v6)
      {
        uint64_t v7 = *(void *)(a1 + 8);
        uint64_t v8 = (void *)(v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (v7) {
          uint64_t v8 = (void *)*v8;
        }
        uint64_t v6 = sub_15C1918((uint64_t)v8);
        *(void *)(a1 + 24) = v6;
      }
      if (*(void *)(a2 + 24)) {
        unsigned int v9 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        unsigned int v9 = &off_253F1A0;
      }
      sub_15B0E24(v6, (uint64_t)v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0)
        {
LABEL_6:
          *(_DWORD *)(a1 + 16) |= v4;
          goto LABEL_7;
        }
LABEL_5:
        *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
        goto LABEL_6;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
    if ((v4 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_7:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_17F6020(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 1;
  }
  uint64_t result = sub_15B0F18(*(void *)(a1 + 24));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_17F604C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.AutocompleteParameters.AutocompleteParametersAllEntriesWithBrowse.AutocompleteOriginationInfo.AutocompleteOriginationRoutePlanningParameters");
}

uint64_t sub_17F605C(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_24DED98;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  if (*(unsigned char *)(a2 + 16)) {
    operator new();
  }
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

void sub_17F6110()
{
}

uint64_t sub_17F6160(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_254BAD0)
  {
    uint64_t v6 = *(void *)(a1 + 24);
    if (v6)
    {
      sub_17F5938(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17F6218(uint64_t a1)
{
  sub_17F6160(a1);

  operator delete();
}

unsigned char *sub_17F6250(unsigned char *result)
{
  uint64_t v1 = result;
  int v2 = *((_DWORD *)result + 4);
  if (v2) {
    uint64_t result = sub_17F5A28(*((unsigned char **)result + 3));
  }
  if ((v2 & 6) != 0) {
    *((void *)v1 + 4) = 0;
  }
  char v4 = v1[8];
  uint64_t v3 = v1 + 8;
  *((_DWORD *)v3 + 2) = 0;
  if (v4)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_17F62B8(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v29 = a2;
  if (sub_11947B8((uint64_t)a3, &v29, a3[11].i32[1])) {
    return v29;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v29 + 1;
    unsigned int v8 = *v29;
    if (*v29 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v29, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v29 + 2;
      }
    }
    uint64_t v29 = v7;
    unsigned int v11 = v8 >> 3;
    if (v8 >> 3 != 3) {
      break;
    }
    if (v8 != 24) {
      goto LABEL_14;
    }
    uint64_t v16 = v7 + 1;
    unint64_t v17 = *v7;
    if (*v7 < 0)
    {
      int v18 = *v16;
      int v19 = v17 + (v18 << 7);
      unint64_t v17 = (v19 - 128);
      if (v18 < 0)
      {
        uint64_t v29 = (char *)sub_188C138((uint64_t)v7, (v19 - 128));
        if (!v29) {
          return 0;
        }
        unint64_t v17 = v25;
        goto LABEL_26;
      }
      uint64_t v16 = v7 + 2;
    }
    uint64_t v29 = v16;
LABEL_26:
    if (!sub_129EB9C(v17))
    {
      if (*v6) {
        int v27 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        int v27 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      int v28 = 3;
      goto LABEL_54;
    }
    *(_DWORD *)(a1 + 16) |= 4u;
    *(_DWORD *)(a1 + 36) = v17;
LABEL_42:
    if (sub_11947B8((uint64_t)a3, &v29, a3[11].i32[1])) {
      return v29;
    }
  }
  if (v11 == 2)
  {
    if (v8 != 18) {
      goto LABEL_14;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v20 = *(void *)(a1 + 24);
    if (!v20)
    {
      uint64_t v21 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        uint64_t v21 = (void *)*v21;
      }
      uint64_t v20 = sub_1834C84((uint64_t)v21);
      *(void *)(a1 + 24) = v20;
      uint64_t v7 = v29;
    }
    uint64_t v15 = sub_17F656C(a3, v20, (unsigned __int8 *)v7);
LABEL_34:
    uint64_t v29 = v15;
    if (!v15) {
      return 0;
    }
    goto LABEL_42;
  }
  if (v11 == 1 && v8 == 8)
  {
    int v22 = v7 + 1;
    unint64_t v17 = *v7;
    if ((*v7 & 0x80000000) == 0) {
      goto LABEL_39;
    }
    int v23 = *v22;
    int v24 = v17 + (v23 << 7);
    unint64_t v17 = (v24 - 128);
    if (v23 < 0)
    {
      uint64_t v29 = (char *)sub_188C138((uint64_t)v7, (v24 - 128));
      if (!v29) {
        return 0;
      }
      unint64_t v17 = v26;
    }
    else
    {
      int v22 = v7 + 2;
LABEL_39:
      uint64_t v29 = v22;
    }
    if (v17 <= 3)
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      *(_DWORD *)(a1 + 32) = v17;
      goto LABEL_42;
    }
    if (*v6) {
      int v27 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else {
      int v27 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
    }
    int v28 = 1;
LABEL_54:
    sub_188C020(v28, v17, v27);
    goto LABEL_42;
  }
LABEL_14:
  if (v8) {
    BOOL v13 = (v8 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v6)
    {
      unint64_t v14 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = v29;
    }
    uint64_t v15 = (char *)sub_1885AC0(v8, v14, v7, a3);
    goto LABEL_34;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v29;
  }
  return 0;
}

char *sub_17F656C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17F5A88(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_17F65FC(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 32);
    *char v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 24);
    *char v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 20);
    v4[1] = v11;
    if (v11 > 0x7F) {
      uint64_t v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      uint64_t v12 = v4 + 2;
    }
    char v4 = sub_17F5CF0(v10, (unint64_t)v12, a3);
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v13 = *(int *)(a1 + 36);
    *char v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unint64_t v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return v4;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    int v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    int v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(v4, v19, (int)v20);
    v4 += v21;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v19, v20, v4);
}

uint64_t sub_17F6810(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 7) == 0)
  {
    uint64_t result = 0;
    goto LABEL_16;
  }
  if (v2)
  {
    uint64_t v4 = sub_17F5E88(*(void *)(a1 + 24));
    uint64_t result = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_11;
    }
  }
  else
  {
    uint64_t result = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_11;
    }
  }
  int v5 = *(_DWORD *)(a1 + 32);
  if (v5 < 0) {
    uint64_t v6 = 11;
  }
  else {
    uint64_t v6 = ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  result += v6;
LABEL_11:
  if ((v2 & 4) != 0)
  {
    int v7 = *(_DWORD *)(a1 + 36);
    if (v7 < 0) {
      uint64_t v8 = 11;
    }
    else {
      uint64_t v8 = ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    result += v8;
  }
LABEL_16:
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    result += v11;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

void sub_17F6914(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 7) != 0)
  {
    if (v4)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v6 = *(void *)(a1 + 24);
      if (!v6)
      {
        uint64_t v7 = *(void *)(a1 + 8);
        uint64_t v8 = (void *)(v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (v7) {
          uint64_t v8 = (void *)*v8;
        }
        uint64_t v6 = sub_1834C84((uint64_t)v8);
        *(void *)(a1 + 24) = v6;
      }
      if (*(void *)(a2 + 24)) {
        uint64_t v9 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        uint64_t v9 = &off_254BAA8;
      }
      sub_17F5F38(v6, (uint64_t)v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0)
        {
LABEL_6:
          *(_DWORD *)(a1 + 16) |= v4;
          goto LABEL_7;
        }
LABEL_5:
        *(_DWORD *)(a1 + 36) = *(_DWORD *)(a2 + 36);
        goto LABEL_6;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
    if ((v4 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_7:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_17F69FC(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 1;
  }
  uint64_t v1 = *(void *)(a1 + 24);
  if ((*(unsigned char *)(v1 + 16) & 1) == 0) {
    return 1;
  }
  uint64_t result = sub_15B0F18(*(void *)(v1 + 24));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_17F6A34@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.AutocompleteParameters.AutocompleteParametersAllEntriesWithBrowse.AutocompleteOriginationInfo");
}

double sub_17F6A44(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3 = a2 | 2;
  if (!a3) {
    uint64_t v3 = a2;
  }
  *(void *)a1 = off_24DEE18;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = a2;
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = a2;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = a2;
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = a2;
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = a2;
  *(void *)(a1 + 104) = &qword_2550250;
  *(void *)(a1 + 112) = &qword_2550250;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  *(_OWORD *)(a1 + 168) = 0u;
  *(void *)(a1 + 182) = 0;
  *(void *)&double result = 0x50000000FLL;
  *(void *)(a1 + 192) = 0x50000000FLL;
  return result;
}

uint64_t sub_17F6AC8(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (uint64_t *)(a1 + 8);
  *(void *)a1 = off_24DEE18;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 36) = 0;
  *(void *)(a1 + 20) = 0;
  *(void *)(a1 + 28) = 0;
  int v5 = *(_DWORD *)(a2 + 24);
  if (v5)
  {
    sub_188C80C((unsigned int *)(a1 + 24), v5);
    uint64_t v6 = *(void **)(a1 + 32);
    *(_DWORD *)(a1 + 24) += *(_DWORD *)(a2 + 24);
    memcpy(v6, *(const void **)(a2 + 32), 4 * *(int *)(a2 + 24));
  }
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0;
  int v7 = *(_DWORD *)(a2 + 40);
  if (v7)
  {
    sub_188C80C((unsigned int *)(a1 + 40), v7);
    uint64_t v8 = *(void **)(a1 + 48);
    *(_DWORD *)(a1 + 40) += *(_DWORD *)(a2 + 40);
    memcpy(v8, *(const void **)(a2 + 48), 4 * *(int *)(a2 + 40));
  }
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    sub_188C80C((unsigned int *)(a1 + 56), v9);
    unint64_t v10 = *(void **)(a1 + 64);
    *(_DWORD *)(a1 + 56) += *(_DWORD *)(a2 + 56);
    memcpy(v10, *(const void **)(a2 + 64), 4 * *(int *)(a2 + 56));
  }
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0;
  int v11 = *(_DWORD *)(a2 + 72);
  if (v11)
  {
    sub_188C80C((unsigned int *)(a1 + 72), v11);
    uint64_t v12 = *(void **)(a1 + 80);
    *(_DWORD *)(a1 + 72) += *(_DWORD *)(a2 + 72);
    memcpy(v12, *(const void **)(a2 + 80), 4 * *(int *)(a2 + 72));
  }
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = 0;
  int v13 = *(_DWORD *)(a2 + 88);
  if (v13)
  {
    sub_188C80C((unsigned int *)(a1 + 88), v13);
    unint64_t v14 = *(void **)(a1 + 96);
    *(_DWORD *)(a1 + 88) += *(_DWORD *)(a2 + 88);
    memcpy(v14, *(const void **)(a2 + 96), 4 * *(int *)(a2 + 88));
  }
  uint64_t v15 = *(void *)(a2 + 8);
  if (v15) {
    sub_188B4F8(v4, (v15 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 104) = &qword_2550250;
  int v16 = *(_DWORD *)(a2 + 16);
  if (v16)
  {
    unint64_t v17 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      unint64_t v17 = (uint64_t *)*v17;
    }
    sub_1881DF4((std::string **)(a1 + 104), (long long *)(*(void *)(a2 + 104) & 0xFFFFFFFFFFFFFFFELL), v17);
    int v16 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 112) = &qword_2550250;
  if ((v16 & 2) != 0)
  {
    unint64_t v18 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      unint64_t v18 = (uint64_t *)*v18;
    }
    sub_1881DF4((std::string **)(a1 + 112), (long long *)(*(void *)(a2 + 112) & 0xFFFFFFFFFFFFFFFELL), v18);
    int v16 = *(_DWORD *)(a2 + 16);
  }
  if ((v16 & 4) != 0) {
    operator new();
  }
  *(void *)(a1 + 120) = 0;
  if ((v16 & 8) != 0) {
    operator new();
  }
  *(void *)(a1 + 128) = 0;
  if ((v16 & 0x10) != 0) {
    operator new();
  }
  *(void *)(a1 + 136) = 0;
  if ((v16 & 0x20) != 0) {
    operator new();
  }
  *(void *)(a1 + 144) = 0;
  if ((v16 & 0x40) != 0) {
    operator new();
  }
  *(void *)(a1 + 152) = 0;
  if ((v16 & 0x80) != 0) {
    operator new();
  }
  *(void *)(a1 + 160) = 0;
  if ((v16 & 0x100) != 0) {
    operator new();
  }
  *(void *)(a1 + 168) = 0;
  long long v19 = *(_OWORD *)(a2 + 176);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(_OWORD *)(a1 + 176) = v19;
  return a1;
}

void sub_17F6E88()
{
}

void *sub_17F6F8C(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_17F7038((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  sub_1889DA8((uint64_t)(a1 + 11));
  sub_1889DA8((uint64_t)(a1 + 9));
  sub_1889DA8((uint64_t)(a1 + 7));
  sub_1889DA8((uint64_t)(a1 + 5));
  sub_1889DA8((uint64_t)(a1 + 3));
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void ***sub_17F7038(uint64_t a1)
{
  uint64_t v3 = *(uint64_t **)(a1 + 104);
  uint64_t v2 = (void ***)(a1 + 104);
  if (v3 != &qword_2550250) {
    sub_1881C6C(v2);
  }
  double result = (void ***)(a1 + 112);
  if (*(uint64_t **)(a1 + 112) != &qword_2550250) {
    sub_1881C6C(result);
  }
  if ((uint64_t (***)())a1 != &off_254BAF8)
  {
    uint64_t v5 = *(void *)(a1 + 120);
    if (v5)
    {
      sub_179203C(v5);
      operator delete();
    }
    if (*(void *)(a1 + 128))
    {
      sub_1318AD4();
      operator delete();
    }
    if (*(void *)(a1 + 136))
    {
      sub_1362774();
      operator delete();
    }
    if (*(void *)(a1 + 144))
    {
      sub_12A0FF0();
      operator delete();
    }
    if (*(void *)(a1 + 152))
    {
      sub_1318AD4();
      operator delete();
    }
    uint64_t v6 = *(void **)(a1 + 160);
    if (v6)
    {
      sub_1298CF0(v6);
      operator delete();
    }
    double result = *(void ****)(a1 + 168);
    if (result)
    {
      sub_17F6160((uint64_t)result);
      operator delete();
    }
  }
  return result;
}

void sub_17F7190(void *a1)
{
  sub_17F6F8C(a1);

  operator delete();
}

uint64_t sub_17F71C8(uint64_t result)
{
  uint64_t v1 = result;
  *(_DWORD *)(result + 24) = 0;
  *(_DWORD *)(result + 40) = 0;
  *(_DWORD *)(result + 56) = 0;
  *(_DWORD *)(result + 72) = 0;
  *(_DWORD *)(result + 88) = 0;
  int v2 = *(_DWORD *)(result + 16);
  if (!(_BYTE)v2) {
    goto LABEL_11;
  }
  if ((v2 & 1) == 0)
  {
    if ((v2 & 2) == 0) {
      goto LABEL_4;
    }
LABEL_25:
    unint64_t v6 = *(void *)(result + 112) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v6 + 23) < 0)
    {
      **(unsigned char **)unint64_t v6 = 0;
      *(void *)(v6 + 8) = 0;
      if ((v2 & 4) != 0) {
        goto LABEL_29;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v6 = 0;
      *(unsigned char *)(v6 + 23) = 0;
      if ((v2 & 4) != 0) {
        goto LABEL_29;
      }
    }
LABEL_5:
    if ((v2 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_30;
  }
  unint64_t v5 = *(void *)(result + 104) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v5 + 23) < 0)
  {
    **(unsigned char **)unint64_t v5 = 0;
    *(void *)(v5 + 8) = 0;
    if ((v2 & 2) != 0) {
      goto LABEL_25;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v5 = 0;
    *(unsigned char *)(v5 + 23) = 0;
    if ((v2 & 2) != 0) {
      goto LABEL_25;
    }
  }
LABEL_4:
  if ((v2 & 4) == 0) {
    goto LABEL_5;
  }
LABEL_29:
  double result = (uint64_t)sub_179212C(*(unsigned char **)(result + 120));
  if ((v2 & 8) == 0)
  {
LABEL_6:
    if ((v2 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_31;
  }
LABEL_30:
  double result = sub_1318B10(*(void *)(v1 + 128));
  if ((v2 & 0x10) == 0)
  {
LABEL_7:
    if ((v2 & 0x20) == 0) {
      goto LABEL_8;
    }
LABEL_32:
    double result = sub_12A102C(*(void *)(v1 + 144));
    if ((v2 & 0x40) == 0)
    {
LABEL_9:
      if ((v2 & 0x80) == 0) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
    goto LABEL_33;
  }
LABEL_31:
  double result = (uint64_t)sub_13627B0(*(void *)(v1 + 136));
  if ((v2 & 0x20) != 0) {
    goto LABEL_32;
  }
LABEL_8:
  if ((v2 & 0x40) == 0) {
    goto LABEL_9;
  }
LABEL_33:
  double result = sub_1318B10(*(void *)(v1 + 152));
  if ((v2 & 0x80) != 0) {
LABEL_10:
  }
    double result = sub_1298D2C(*(void *)(v1 + 160));
LABEL_11:
  if ((v2 & 0x100) != 0) {
    double result = (uint64_t)sub_17F6250(*(unsigned char **)(v1 + 168));
  }
  if ((v2 & 0xFE00) != 0)
  {
    *(_DWORD *)(v1 + 179) = 0;
    *(_DWORD *)(v1 + 176) = 0;
  }
  if ((v2 & 0x3F0000) != 0)
  {
    *(_DWORD *)(v1 + 186) = 0;
    *(_DWORD *)(v1 + 183) = 0;
    *(void *)(v1 + 192) = 0x50000000FLL;
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_17F7334(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)v147 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v147, a3[11].i32[1])) {
    goto LABEL_2;
  }
  v146 = (uint64_t *)(a1 + 8);
  while (2)
  {
    int v7 = (unsigned __int8 *)(*(void *)v147 + 1);
    unsigned int v8 = **(unsigned char **)v147;
    if ((char)**(unsigned char **)v147 < 0)
    {
      int v9 = (char)*v7;
      unsigned int v10 = v8 + (v9 << 7);
      unsigned int v8 = v10 - 128;
      if (v9 < 0)
      {
        int v7 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v147, v10 - 128);
        unsigned int v8 = v11;
      }
      else
      {
        int v7 = (unsigned __int8 *)(*(void *)v147 + 2);
      }
    }
    *(void *)v147 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 10) {
          goto LABEL_264;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 8);
        int v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          int v13 = (uint64_t *)*v13;
        }
        unint64_t v14 = (void *)(a1 + 104);
        goto LABEL_33;
      case 2u:
        if (v8 != 18) {
          goto LABEL_264;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v15 = *(void **)(a1 + 120);
        if (!v15)
        {
          int v16 = (void *)(*v146 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v146) {
            int v16 = (void *)*v16;
          }
          uint64_t v15 = sub_18302C8((uint64_t)v16);
          *(void *)(a1 + 120) = v15;
          int v7 = *(unsigned __int8 **)v147;
        }
        uint64_t v17 = (uint64_t)sub_120FE50(a3, (uint64_t)v15, v7);
        goto LABEL_271;
      case 3u:
        if (v8 != 24) {
          goto LABEL_264;
        }
        v5 |= 0x100000u;
        long long v19 = (char *)(v7 + 1);
        LODWORD(v18) = *v7;
        if ((v18 & 0x80) == 0) {
          goto LABEL_23;
        }
        int v20 = *v19;
        uint64_t v18 = v18 + (v20 << 7) - 128;
        if (v20 < 0)
        {
          uint64_t v117 = sub_188C138((uint64_t)v7, v18);
          *(void *)v147 = v117;
          *(_DWORD *)(a1 + 192) = v118;
          if (!v117) {
            goto LABEL_281;
          }
        }
        else
        {
          long long v19 = (char *)(v7 + 2);
LABEL_23:
          *(void *)v147 = v19;
          *(_DWORD *)(a1 + 192) = v18;
        }
        goto LABEL_272;
      case 4u:
        if (v8 != 32) {
          goto LABEL_264;
        }
        v5 |= 0x200u;
        uint64_t v21 = (char *)(v7 + 1);
        uint64_t v22 = *v7;
        if (((char)*v7 & 0x80000000) == 0) {
          goto LABEL_28;
        }
        int v23 = *v21;
        uint64_t v22 = v22 + (v23 << 7) - 128;
        if (v23 < 0)
        {
          uint64_t v119 = sub_188C138((uint64_t)v7, v22);
          *(void *)v147 = v119;
          *(unsigned char *)(a1 + 176) = v120 != 0;
          if (!v119) {
            goto LABEL_281;
          }
        }
        else
        {
          uint64_t v21 = (char *)(v7 + 2);
LABEL_28:
          *(void *)v147 = v21;
          *(unsigned char *)(a1 + 176) = v22 != 0;
        }
        goto LABEL_272;
      case 5u:
        if (v8 != 42) {
          goto LABEL_264;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v24 = *(void *)(a1 + 8);
        int v13 = (uint64_t *)(v24 & 0xFFFFFFFFFFFFFFFCLL);
        if (v24) {
          int v13 = (uint64_t *)*v13;
        }
        unint64_t v14 = (void *)(a1 + 112);
LABEL_33:
        unint64_t v25 = (std::string *)sub_1880F84(v14, v13);
        uint64_t v17 = (uint64_t)sub_188C244(v25, *(char **)v147, (uint64_t)a3);
        goto LABEL_271;
      case 6u:
        if (v8 != 50) {
          goto LABEL_264;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v26 = *(void *)(a1 + 128);
        if (v26) {
          goto LABEL_97;
        }
        int v27 = (void *)(*v146 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v146) {
          int v27 = (void *)*v27;
        }
        uint64_t v26 = sub_131BDDC((uint64_t)v27);
        *(void *)(a1 + 128) = v26;
        goto LABEL_96;
      case 7u:
        if (v8 != 56) {
          goto LABEL_264;
        }
        v5 |= 0x400u;
        int v28 = (char *)(v7 + 1);
        uint64_t v29 = *v7;
        if (((char)*v7 & 0x80000000) == 0) {
          goto LABEL_43;
        }
        int v30 = *v28;
        uint64_t v29 = v29 + (v30 << 7) - 128;
        if (v30 < 0)
        {
          uint64_t v121 = sub_188C138((uint64_t)v7, v29);
          *(void *)v147 = v121;
          *(unsigned char *)(a1 + 177) = v122 != 0;
          if (!v121) {
            goto LABEL_281;
          }
        }
        else
        {
          int v28 = (char *)(v7 + 2);
LABEL_43:
          *(void *)v147 = v28;
          *(unsigned char *)(a1 + 177) = v29 != 0;
        }
        goto LABEL_272;
      case 8u:
        if (v8 != 66) {
          goto LABEL_264;
        }
        *(_DWORD *)(a1 + 16) |= 0x10u;
        uint64_t v31 = *(void *)(a1 + 136);
        if (!v31)
        {
          uint64_t v32 = (void *)(*v146 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v146) {
            uint64_t v32 = (void *)*v32;
          }
          uint64_t v31 = sub_1363A48((uint64_t)v32);
          *(void *)(a1 + 136) = v31;
          int v7 = *(unsigned __int8 **)v147;
        }
        uint64_t v17 = (uint64_t)sub_129424C(a3, v31, v7);
        goto LABEL_271;
      case 9u:
        if (v8 != 72) {
          goto LABEL_264;
        }
        v5 |= 0x800u;
        uint64_t v33 = (char *)(v7 + 1);
        uint64_t v34 = *v7;
        if (((char)*v7 & 0x80000000) == 0) {
          goto LABEL_54;
        }
        int v35 = *v33;
        uint64_t v34 = v34 + (v35 << 7) - 128;
        if (v35 < 0)
        {
          uint64_t v123 = sub_188C138((uint64_t)v7, v34);
          *(void *)v147 = v123;
          *(unsigned char *)(a1 + 178) = v124 != 0;
          if (!v123) {
            goto LABEL_281;
          }
        }
        else
        {
          uint64_t v33 = (char *)(v7 + 2);
LABEL_54:
          *(void *)v147 = v33;
          *(unsigned char *)(a1 + 178) = v34 != 0;
        }
        goto LABEL_272;
      case 0xAu:
        if (v8 != 80) {
          goto LABEL_264;
        }
        v5 |= 0x1000u;
        uint64_t v36 = (char *)(v7 + 1);
        uint64_t v37 = *v7;
        if (((char)*v7 & 0x80000000) == 0) {
          goto LABEL_59;
        }
        int v38 = *v36;
        uint64_t v37 = v37 + (v38 << 7) - 128;
        if (v38 < 0)
        {
          uint64_t v125 = sub_188C138((uint64_t)v7, v37);
          *(void *)v147 = v125;
          *(unsigned char *)(a1 + 179) = v126 != 0;
          if (!v125) {
            goto LABEL_281;
          }
        }
        else
        {
          uint64_t v36 = (char *)(v7 + 2);
LABEL_59:
          *(void *)v147 = v36;
          *(unsigned char *)(a1 + 179) = v37 != 0;
        }
        goto LABEL_272;
      case 0xBu:
        if (v8 != 90) {
          goto LABEL_264;
        }
        *(_DWORD *)(a1 + 16) |= 0x20u;
        uint64_t v39 = *(void *)(a1 + 144);
        if (!v39)
        {
          char v40 = (void *)(*v146 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v146) {
            char v40 = (void *)*v40;
          }
          uint64_t v39 = sub_12BBB40((uint64_t)v40);
          *(void *)(a1 + 144) = v39;
          int v7 = *(unsigned __int8 **)v147;
        }
        uint64_t v17 = sub_120AA94(a3, v39, v7);
        goto LABEL_271;
      case 0xCu:
        if (v8 != 96) {
          goto LABEL_264;
        }
        v5 |= 0x2000u;
        unint64_t v41 = (char *)(v7 + 1);
        uint64_t v42 = *v7;
        if (((char)*v7 & 0x80000000) == 0) {
          goto LABEL_70;
        }
        int v43 = *v41;
        uint64_t v42 = v42 + (v43 << 7) - 128;
        if (v43 < 0)
        {
          uint64_t v127 = sub_188C138((uint64_t)v7, v42);
          *(void *)v147 = v127;
          *(unsigned char *)(a1 + 180) = v128 != 0;
          if (!v127) {
            goto LABEL_281;
          }
        }
        else
        {
          unint64_t v41 = (char *)(v7 + 2);
LABEL_70:
          *(void *)v147 = v41;
          *(unsigned char *)(a1 + 180) = v42 != 0;
        }
        goto LABEL_272;
      case 0xDu:
        if (v8 == 104)
        {
          uint64_t v44 = (uint64_t)(v7 - 1);
          while (1)
          {
            *(void *)v147 = v44 + 1;
            unint64_t v45 = *(unsigned __int8 *)(v44 + 1);
            unint64_t v46 = (char *)(v44 + 2);
            if (*(char *)(v44 + 1) < 0)
            {
              int v47 = *v46;
              int v48 = v45 + (v47 << 7);
              unint64_t v45 = (v48 - 128);
              if (v47 < 0)
              {
                *(void *)v147 = sub_188C138(v44 + 1, (v48 - 128));
                if (!*(void *)v147) {
                  goto LABEL_281;
                }
                unint64_t v45 = v51;
                goto LABEL_77;
              }
              unint64_t v46 = (char *)(v44 + 3);
            }
            *(void *)v147 = v46;
LABEL_77:
            if (v45 > 2)
            {
              if (*v146) {
                uint64_t v52 = (std::string *)((*v146 & 0xFFFFFFFFFFFFFFFCLL) + 8);
              }
              else {
                uint64_t v52 = (std::string *)sub_188DBD8(v146);
              }
              sub_188C020(13, v45, v52);
            }
            else
            {
              uint64_t v49 = *(unsigned int *)(a1 + 24);
              if (v49 == *(_DWORD *)(a1 + 28))
              {
                int v50 = v49 + 1;
                sub_188C80C((unsigned int *)(a1 + 24), v49 + 1);
                *(_DWORD *)(*(void *)(a1 + 32) + 4 * v49) = v45;
              }
              else
              {
                *(_DWORD *)(*(void *)(a1 + 32) + 4 * v49) = v45;
                int v50 = v49 + 1;
              }
              *(_DWORD *)(a1 + 24) = v50;
            }
            uint64_t v44 = *(void *)v147;
            if (*(void *)a3 <= *(void *)v147 || **(unsigned char **)v147 != 104) {
              goto LABEL_272;
            }
          }
        }
        if (v8 != 106) {
          goto LABEL_264;
        }
        *(void *)&long long v148 = a1 + 24;
        *((void *)&v148 + 1) = sub_1791DD0;
        uint64_t v149 = a1 + 8;
        int v142 = 13;
        goto LABEL_263;
      case 0xEu:
        if (v8 != 114) {
          goto LABEL_264;
        }
        *(_DWORD *)(a1 + 16) |= 0x40u;
        uint64_t v26 = *(void *)(a1 + 152);
        if (v26) {
          goto LABEL_97;
        }
        uint64_t v53 = (void *)(*v146 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v146) {
          uint64_t v53 = (void *)*v53;
        }
        uint64_t v26 = sub_131BDDC((uint64_t)v53);
        *(void *)(a1 + 152) = v26;
LABEL_96:
        int v7 = *(unsigned __int8 **)v147;
LABEL_97:
        uint64_t v17 = sub_1277414(a3, v26, v7);
        goto LABEL_271;
      case 0xFu:
        if (v8 != 120) {
          goto LABEL_264;
        }
        v5 |= 0x4000u;
        uint64_t v54 = (char *)(v7 + 1);
        uint64_t v55 = *v7;
        if (((char)*v7 & 0x80000000) == 0) {
          goto LABEL_102;
        }
        int v56 = *v54;
        uint64_t v55 = v55 + (v56 << 7) - 128;
        if (v56 < 0)
        {
          uint64_t v129 = sub_188C138((uint64_t)v7, v55);
          *(void *)v147 = v129;
          *(unsigned char *)(a1 + 181) = v130 != 0;
          if (!v129) {
            goto LABEL_281;
          }
        }
        else
        {
          uint64_t v54 = (char *)(v7 + 2);
LABEL_102:
          *(void *)v147 = v54;
          *(unsigned char *)(a1 + 181) = v55 != 0;
        }
        goto LABEL_272;
      case 0x10u:
        if (v8 != 128) {
          goto LABEL_264;
        }
        v5 |= 0x200000u;
        uint64_t v58 = (char *)(v7 + 1);
        LODWORD(v57) = *v7;
        if ((v57 & 0x80) == 0) {
          goto LABEL_107;
        }
        int v59 = *v58;
        uint64_t v57 = v57 + (v59 << 7) - 128;
        if (v59 < 0)
        {
          uint64_t v131 = sub_188C138((uint64_t)v7, v57);
          *(void *)v147 = v131;
          *(_DWORD *)(a1 + 196) = v132;
          if (!v131) {
            goto LABEL_281;
          }
        }
        else
        {
          uint64_t v58 = (char *)(v7 + 2);
LABEL_107:
          *(void *)v147 = v58;
          *(_DWORD *)(a1 + 196) = v57;
        }
        goto LABEL_272;
      case 0x11u:
        if (v8 != 136) {
          goto LABEL_264;
        }
        v5 |= 0x8000u;
        int v60 = (char *)(v7 + 1);
        uint64_t v61 = *v7;
        if (((char)*v7 & 0x80000000) == 0) {
          goto LABEL_112;
        }
        int v62 = *v60;
        uint64_t v61 = v61 + (v62 << 7) - 128;
        if (v62 < 0)
        {
          uint64_t v133 = sub_188C138((uint64_t)v7, v61);
          *(void *)v147 = v133;
          *(unsigned char *)(a1 + 182) = v134 != 0;
          if (!v133) {
            goto LABEL_281;
          }
        }
        else
        {
          int v60 = (char *)(v7 + 2);
LABEL_112:
          *(void *)v147 = v60;
          *(unsigned char *)(a1 + 182) = v61 != 0;
        }
        goto LABEL_272;
      case 0x12u:
        if (v8 == 144)
        {
          uint64_t v63 = (uint64_t)(v7 - 2);
          while (1)
          {
            *(void *)v147 = v63 + 2;
            unint64_t v64 = *(unsigned __int8 *)(v63 + 2);
            uint64_t v65 = (char *)(v63 + 3);
            if (*(char *)(v63 + 2) < 0)
            {
              int v66 = *v65;
              int v67 = v64 + (v66 << 7);
              unint64_t v64 = (v67 - 128);
              if (v66 < 0)
              {
                *(void *)v147 = sub_188C138(v63 + 2, (v67 - 128));
                if (!*(void *)v147) {
                  goto LABEL_281;
                }
                unint64_t v64 = v70;
                goto LABEL_119;
              }
              uint64_t v65 = (char *)(v63 + 4);
            }
            *(void *)v147 = v65;
LABEL_119:
            if (v64 > 4)
            {
              if (*v146) {
                BOOL v71 = (std::string *)((*v146 & 0xFFFFFFFFFFFFFFFCLL) + 8);
              }
              else {
                BOOL v71 = (std::string *)sub_188DBD8(v146);
              }
              sub_188C020(18, v64, v71);
            }
            else
            {
              uint64_t v68 = *(unsigned int *)(a1 + 40);
              if (v68 == *(_DWORD *)(a1 + 44))
              {
                int v69 = v68 + 1;
                sub_188C80C((unsigned int *)(a1 + 40), v68 + 1);
                *(_DWORD *)(*(void *)(a1 + 48) + 4 * v68) = v64;
              }
              else
              {
                *(_DWORD *)(*(void *)(a1 + 48) + 4 * v68) = v64;
                int v69 = v68 + 1;
              }
              *(_DWORD *)(a1 + 40) = v69;
            }
            uint64_t v63 = *(void *)v147;
            if (*(void *)a3 <= *(void *)v147 || **(_WORD **)v147 != 400) {
              goto LABEL_272;
            }
          }
        }
        if (v8 != 146) {
          goto LABEL_264;
        }
        *(void *)&long long v148 = a1 + 40;
        *((void *)&v148 + 1) = sub_17F8328;
        uint64_t v149 = a1 + 8;
        int v142 = 18;
        goto LABEL_263;
      case 0x13u:
        if (v8 != 152) {
          goto LABEL_264;
        }
        v5 |= 0x10000u;
        unint64_t v72 = (char *)(v7 + 1);
        uint64_t v73 = *v7;
        if (((char)*v7 & 0x80000000) == 0) {
          goto LABEL_137;
        }
        int v74 = *v72;
        uint64_t v73 = v73 + (v74 << 7) - 128;
        if (v74 < 0)
        {
          uint64_t v135 = sub_188C138((uint64_t)v7, v73);
          *(void *)v147 = v135;
          *(unsigned char *)(a1 + 183) = v136 != 0;
          if (!v135) {
            goto LABEL_281;
          }
        }
        else
        {
          unint64_t v72 = (char *)(v7 + 2);
LABEL_137:
          *(void *)v147 = v72;
          *(unsigned char *)(a1 + 183) = v73 != 0;
        }
        goto LABEL_272;
      case 0x14u:
        if (v8 == 160)
        {
          uint64_t v75 = (uint64_t)(v7 - 2);
          while (1)
          {
            *(void *)v147 = v75 + 2;
            unint64_t v76 = *(unsigned __int8 *)(v75 + 2);
            int v77 = (char *)(v75 + 3);
            if (*(char *)(v75 + 2) < 0)
            {
              int v78 = *v77;
              int v79 = v76 + (v78 << 7);
              unint64_t v76 = (v79 - 128);
              if (v78 < 0)
              {
                *(void *)v147 = sub_188C138(v75 + 2, (v79 - 128));
                if (!*(void *)v147) {
                  goto LABEL_281;
                }
                unint64_t v76 = v82;
                goto LABEL_144;
              }
              int v77 = (char *)(v75 + 4);
            }
            *(void *)v147 = v77;
LABEL_144:
            if (sub_129EBC0(v76))
            {
              uint64_t v80 = *(unsigned int *)(a1 + 56);
              if (v80 == *(_DWORD *)(a1 + 60))
              {
                int v81 = v80 + 1;
                sub_188C80C((unsigned int *)(a1 + 56), v80 + 1);
                *(_DWORD *)(*(void *)(a1 + 64) + 4 * v80) = v76;
              }
              else
              {
                *(_DWORD *)(*(void *)(a1 + 64) + 4 * v80) = v76;
                int v81 = v80 + 1;
              }
              *(_DWORD *)(a1 + 56) = v81;
            }
            else
            {
              if (*v146) {
                uint64_t v83 = (std::string *)((*v146 & 0xFFFFFFFFFFFFFFFCLL) + 8);
              }
              else {
                uint64_t v83 = (std::string *)sub_188DBD8(v146);
              }
              sub_188C020(20, v76, v83);
            }
            uint64_t v75 = *(void *)v147;
            if (*(void *)a3 <= *(void *)v147 || **(_WORD **)v147 != 416) {
              goto LABEL_272;
            }
          }
        }
        if (v8 != 162) {
          goto LABEL_264;
        }
        *(void *)&long long v148 = a1 + 56;
        *((void *)&v148 + 1) = sub_129EBC0;
        uint64_t v149 = a1 + 8;
        int v142 = 20;
        goto LABEL_263;
      case 0x15u:
        if (v8 != 168) {
          goto LABEL_264;
        }
        uint64_t v84 = (char *)(v7 + 1);
        unint64_t v85 = *v7;
        if (((char)*v7 & 0x80000000) == 0) {
          goto LABEL_162;
        }
        int v86 = *v84;
        int v87 = v85 + (v86 << 7);
        unint64_t v85 = (v87 - 128);
        if (v86 < 0)
        {
          *(void *)v147 = sub_188C138((uint64_t)v7, (v87 - 128));
          if (!*(void *)v147) {
            goto LABEL_281;
          }
          unint64_t v85 = v137;
        }
        else
        {
          uint64_t v84 = (char *)(v7 + 2);
LABEL_162:
          *(void *)v147 = v84;
        }
        if (v85 > 0x23)
        {
          if (*v146) {
            v145 = (std::string *)((*v146 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            v145 = (std::string *)sub_188DBD8(v146);
          }
          sub_188C020(21, v85, v145);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 0x20000u;
          *(_DWORD *)(a1 + 184) = v85;
        }
        goto LABEL_272;
      case 0x16u:
        if (v8 == 176)
        {
          uint64_t v88 = (uint64_t)(v7 - 2);
          while (1)
          {
            *(void *)v147 = v88 + 2;
            unint64_t v89 = *(unsigned __int8 *)(v88 + 2);
            unint64_t v90 = (char *)(v88 + 3);
            if (*(char *)(v88 + 2) < 0)
            {
              int v91 = *v90;
              int v92 = v89 + (v91 << 7);
              unint64_t v89 = (v92 - 128);
              if (v91 < 0)
              {
                *(void *)v147 = sub_188C138(v88 + 2, (v92 - 128));
                if (!*(void *)v147) {
                  goto LABEL_281;
                }
                unint64_t v89 = v95;
                goto LABEL_171;
              }
              unint64_t v90 = (char *)(v88 + 4);
            }
            *(void *)v147 = v90;
LABEL_171:
            if (v89 > 4)
            {
              if (*v146) {
                int v96 = (std::string *)((*v146 & 0xFFFFFFFFFFFFFFFCLL) + 8);
              }
              else {
                int v96 = (std::string *)sub_188DBD8(v146);
              }
              sub_188C020(22, v89, v96);
            }
            else
            {
              uint64_t v93 = *(unsigned int *)(a1 + 72);
              if (v93 == *(_DWORD *)(a1 + 76))
              {
                int v94 = v93 + 1;
                sub_188C80C((unsigned int *)(a1 + 72), v93 + 1);
                *(_DWORD *)(*(void *)(a1 + 80) + 4 * v93) = v89;
              }
              else
              {
                *(_DWORD *)(*(void *)(a1 + 80) + 4 * v93) = v89;
                int v94 = v93 + 1;
              }
              *(_DWORD *)(a1 + 72) = v94;
            }
            uint64_t v88 = *(void *)v147;
            if (*(void *)a3 <= *(void *)v147 || **(_WORD **)v147 != 432) {
              goto LABEL_272;
            }
          }
        }
        if (v8 != 178) {
          goto LABEL_264;
        }
        *(void *)&long long v148 = a1 + 72;
        *((void *)&v148 + 1) = sub_1797214;
        uint64_t v149 = a1 + 8;
        int v142 = 22;
        goto LABEL_263;
      case 0x17u:
        if (v8 != 186) {
          goto LABEL_264;
        }
        *(_DWORD *)(a1 + 16) |= 0x80u;
        uint64_t v97 = *(void *)(a1 + 160);
        if (!v97)
        {
          v98 = (void *)(*v146 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v146) {
            v98 = (void *)*v98;
          }
          uint64_t v97 = sub_129E61C((uint64_t)v98);
          *(void *)(a1 + 160) = v97;
          int v7 = *(unsigned __int8 **)v147;
        }
        uint64_t v17 = sub_1797184(a3, v97, v7);
        goto LABEL_271;
      case 0x18u:
        if (v8 == 192)
        {
          uint64_t v99 = (uint64_t)(v7 - 2);
          while (1)
          {
            *(void *)v147 = v99 + 2;
            unint64_t v100 = *(unsigned __int8 *)(v99 + 2);
            v101 = (char *)(v99 + 3);
            if (*(char *)(v99 + 2) < 0)
            {
              int v102 = *v101;
              int v103 = v100 + (v102 << 7);
              unint64_t v100 = (v103 - 128);
              if (v102 < 0)
              {
                *(void *)v147 = sub_188C138(v99 + 2, (v103 - 128));
                if (!*(void *)v147) {
                  goto LABEL_281;
                }
                unint64_t v100 = v107;
                goto LABEL_197;
              }
              v101 = (char *)(v99 + 4);
            }
            *(void *)v147 = v101;
LABEL_197:
            v104 = (_DWORD *)(a1 + 88);
            if (v100 > 2)
            {
              if (*v146) {
                v108 = (std::string *)((*v146 & 0xFFFFFFFFFFFFFFFCLL) + 8);
              }
              else {
                v108 = (std::string *)sub_188DBD8(v146);
              }
              sub_188C020(24, v100, v108);
            }
            else
            {
              uint64_t v105 = *(unsigned int *)(a1 + 88);
              if (v105 == *(_DWORD *)(a1 + 92))
              {
                int v106 = v105 + 1;
                sub_188C80C((unsigned int *)(a1 + 88), v105 + 1);
                v104 = (_DWORD *)(a1 + 88);
                *(_DWORD *)(*(void *)(a1 + 96) + 4 * v105) = v100;
              }
              else
              {
                *(_DWORD *)(*(void *)(a1 + 96) + 4 * v105) = v100;
                int v106 = v105 + 1;
              }
              _DWORD *v104 = v106;
            }
            uint64_t v99 = *(void *)v147;
            if (*(void *)a3 <= *(void *)v147 || **(_WORD **)v147 != 448) {
              goto LABEL_272;
            }
          }
        }
        if (v8 == 194)
        {
          *(void *)&long long v148 = a1 + 88;
          *((void *)&v148 + 1) = sub_1791EF4;
          uint64_t v149 = a1 + 8;
          int v142 = 24;
LABEL_263:
          int v150 = v142;
          uint64_t v17 = (uint64_t)sub_1112E88((uint64_t)a3, (char *)v7, &v148);
LABEL_271:
          *(void *)v147 = v17;
          if (!v17) {
            goto LABEL_281;
          }
LABEL_272:
          if (sub_11947B8((uint64_t)a3, (char **)v147, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
LABEL_264:
        if (v8) {
          BOOL v143 = (v8 & 7) == 4;
        }
        else {
          BOOL v143 = 1;
        }
        if (!v143)
        {
          if (*v146)
          {
            v144 = (std::string *)((*v146 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            v144 = (std::string *)sub_188DBD8(v146);
            int v7 = *(unsigned __int8 **)v147;
          }
          uint64_t v17 = (uint64_t)sub_1885AC0(v8, v144, (char *)v7, a3);
          goto LABEL_271;
        }
        if (v7) {
          a3[10].i32[0] = v8 - 1;
        }
        else {
LABEL_281:
        }
          *(void *)v147 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v147;
      case 0x19u:
        if (v8 != 202) {
          goto LABEL_264;
        }
        *(_DWORD *)(a1 + 16) |= 0x100u;
        v109 = *(void **)(a1 + 168);
        if (!v109)
        {
          v110 = (void *)(*v146 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v146) {
            v110 = (void *)*v110;
          }
          v109 = sub_1834D00((uint64_t)v110);
          *(void *)(a1 + 168) = v109;
          int v7 = *(unsigned __int8 **)v147;
        }
        uint64_t v17 = (uint64_t)sub_17F8334(a3, (uint64_t)v109, v7);
        goto LABEL_271;
      case 0x1Au:
        if (v8 != 208) {
          goto LABEL_264;
        }
        v5 |= 0x40000u;
        v111 = (char *)(v7 + 1);
        uint64_t v112 = *v7;
        if (((char)*v7 & 0x80000000) == 0) {
          goto LABEL_221;
        }
        int v113 = *v111;
        uint64_t v112 = v112 + (v113 << 7) - 128;
        if (v113 < 0)
        {
          uint64_t v138 = sub_188C138((uint64_t)v7, v112);
          *(void *)v147 = v138;
          *(unsigned char *)(a1 + 188) = v139 != 0;
          if (!v138) {
            goto LABEL_281;
          }
        }
        else
        {
          v111 = (char *)(v7 + 2);
LABEL_221:
          *(void *)v147 = v111;
          *(unsigned char *)(a1 + 188) = v112 != 0;
        }
        goto LABEL_272;
      case 0x1Bu:
        if (v8 != 216) {
          goto LABEL_264;
        }
        v5 |= 0x80000u;
        v114 = (char *)(v7 + 1);
        uint64_t v115 = *v7;
        if (((char)*v7 & 0x80000000) == 0) {
          goto LABEL_226;
        }
        int v116 = *v114;
        uint64_t v115 = v115 + (v116 << 7) - 128;
        if (v116 < 0)
        {
          uint64_t v140 = sub_188C138((uint64_t)v7, v115);
          *(void *)v147 = v140;
          *(unsigned char *)(a1 + 189) = v141 != 0;
          if (!v140) {
            goto LABEL_281;
          }
        }
        else
        {
          v114 = (char *)(v7 + 2);
LABEL_226:
          *(void *)v147 = v114;
          *(unsigned char *)(a1 + 189) = v115 != 0;
        }
        goto LABEL_272;
      default:
        goto LABEL_264;
    }
  }
}

BOOL sub_17F8328(unsigned int a1)
{
  return a1 < 5;
}

char *sub_17F8334(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  double result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    double result = sub_17F62B8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_17F83C4(uint64_t a1, unsigned char *__dst, unint64_t *a3)
{
  char v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    char v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 104) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 4) == 0)
    {
LABEL_3:
      if ((v6 & 0x100000) == 0) {
        goto LABEL_18;
      }
      goto LABEL_12;
    }
  }
  else if ((v6 & 4) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v7 = *(void *)(a1 + 120);
  *char v4 = 18;
  unsigned int v8 = *(_DWORD *)(v7 + 20);
  v4[1] = v8;
  if (v8 > 0x7F) {
    int v9 = sub_188A9CC(v8, v4 + 1);
  }
  else {
    int v9 = v4 + 2;
  }
  char v4 = sub_1792424(v7, (unint64_t)v9, a3);
  if ((v6 & 0x100000) != 0)
  {
LABEL_12:
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 192);
    *char v4 = 24;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_18:
  if ((v6 & 0x200) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v13 = *(unsigned char *)(a1 + 176);
    *char v4 = 32;
    v4[1] = v13;
    v4 += 2;
    if ((v6 & 2) == 0)
    {
LABEL_20:
      if ((v6 & 8) == 0) {
        goto LABEL_21;
      }
      goto LABEL_32;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_20;
  }
  char v4 = sub_117A0AC(a3, 5, (const void **)(*(void *)(a1 + 112) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 8) == 0)
  {
LABEL_21:
    if ((v6 & 0x400) == 0) {
      goto LABEL_22;
    }
    goto LABEL_38;
  }
LABEL_32:
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v14 = *(void *)(a1 + 128);
  *char v4 = 50;
  unsigned int v15 = *(_DWORD *)(v14 + 44);
  v4[1] = v15;
  if (v15 > 0x7F) {
    int v16 = sub_188A9CC(v15, v4 + 1);
  }
  else {
    int v16 = v4 + 2;
  }
  char v4 = sub_1319D58(v14, v16, a3);
  if ((v6 & 0x400) == 0)
  {
LABEL_22:
    if ((v6 & 0x10) == 0) {
      goto LABEL_23;
    }
    goto LABEL_41;
  }
LABEL_38:
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v17 = *(unsigned char *)(a1 + 177);
  *char v4 = 56;
  v4[1] = v17;
  v4 += 2;
  if ((v6 & 0x10) == 0)
  {
LABEL_23:
    if ((v6 & 0x800) == 0) {
      goto LABEL_24;
    }
    goto LABEL_47;
  }
LABEL_41:
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v18 = *(void *)(a1 + 136);
  *char v4 = 66;
  unsigned int v19 = *(_DWORD *)(v18 + 44);
  v4[1] = v19;
  if (v19 > 0x7F) {
    int v20 = sub_188A9CC(v19, v4 + 1);
  }
  else {
    int v20 = v4 + 2;
  }
  char v4 = sub_1362F44(v18, v20, a3);
  if ((v6 & 0x800) == 0)
  {
LABEL_24:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_50;
  }
LABEL_47:
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v21 = *(unsigned char *)(a1 + 178);
  *char v4 = 72;
  v4[1] = v21;
  v4 += 2;
  if ((v6 & 0x1000) == 0)
  {
LABEL_25:
    if ((v6 & 0x20) == 0) {
      goto LABEL_26;
    }
    goto LABEL_53;
  }
LABEL_50:
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v22 = *(unsigned char *)(a1 + 179);
  *char v4 = 80;
  v4[1] = v22;
  v4 += 2;
  if ((v6 & 0x20) == 0)
  {
LABEL_26:
    if ((v6 & 0x2000) == 0) {
      goto LABEL_62;
    }
    goto LABEL_59;
  }
LABEL_53:
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v23 = *(void *)(a1 + 144);
  *char v4 = 90;
  unsigned int v24 = *(_DWORD *)(v23 + 20);
  v4[1] = v24;
  if (v24 > 0x7F) {
    unint64_t v25 = sub_188A9CC(v24, v4 + 1);
  }
  else {
    unint64_t v25 = v4 + 2;
  }
  char v4 = sub_12A12FC(v23, v25, a3);
  if ((v6 & 0x2000) != 0)
  {
LABEL_59:
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v26 = *(unsigned char *)(a1 + 180);
    *char v4 = 96;
    v4[1] = v26;
    v4 += 2;
  }
LABEL_62:
  uint64_t v27 = *(unsigned int *)(a1 + 24);
  if ((int)v27 >= 1)
  {
    for (uint64_t i = 0; i != v27; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v29 = *(int *)(*(void *)(a1 + 32) + 4 * i);
      *char v4 = 104;
      v4[1] = v29;
      if (v29 > 0x7F)
      {
        v4[1] = v29 | 0x80;
        unint64_t v30 = v29 >> 7;
        v4[2] = v29 >> 7;
        v4 += 3;
        if (v29 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v31 = v30 >> 14;
            v30 >>= 7;
            *v4++ = v30;
          }
          while (v31);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  if ((v6 & 0x40) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v32 = *(void *)(a1 + 152);
    *char v4 = 114;
    unsigned int v33 = *(_DWORD *)(v32 + 44);
    v4[1] = v33;
    if (v33 > 0x7F) {
      uint64_t v34 = sub_188A9CC(v33, v4 + 1);
    }
    else {
      uint64_t v34 = v4 + 2;
    }
    char v4 = sub_1319D58(v32, v34, a3);
    if ((v6 & 0x4000) == 0)
    {
LABEL_73:
      if ((v6 & 0x200000) == 0) {
        goto LABEL_90;
      }
      goto LABEL_84;
    }
  }
  else if ((v6 & 0x4000) == 0)
  {
    goto LABEL_73;
  }
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v35 = *(unsigned char *)(a1 + 181);
  *char v4 = 120;
  v4[1] = v35;
  v4 += 2;
  if ((v6 & 0x200000) != 0)
  {
LABEL_84:
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v36 = *(int *)(a1 + 196);
    *(_WORD *)char v4 = 384;
    v4[2] = v36;
    if (v36 > 0x7F)
    {
      v4[2] = v36 | 0x80;
      unint64_t v37 = v36 >> 7;
      v4[3] = v36 >> 7;
      v4 += 4;
      if (v36 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v38 = v37 >> 14;
          v37 >>= 7;
          *v4++ = v37;
        }
        while (v38);
      }
    }
    else
    {
      v4 += 3;
    }
  }
LABEL_90:
  if ((v6 & 0x8000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v39 = *(unsigned char *)(a1 + 182);
    *(_WORD *)char v4 = 392;
    v4[2] = v39;
    v4 += 3;
  }
  uint64_t v40 = *(unsigned int *)(a1 + 40);
  if ((int)v40 >= 1)
  {
    for (uint64_t j = 0; j != v40; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v42 = *(int *)(*(void *)(a1 + 48) + 4 * j);
      *(_WORD *)char v4 = 400;
      v4[2] = v42;
      if (v42 > 0x7F)
      {
        v4[2] = v42 | 0x80;
        unint64_t v43 = v42 >> 7;
        v4[3] = v42 >> 7;
        v4 += 4;
        if (v42 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v44 = v43 >> 14;
            v43 >>= 7;
            *v4++ = v43;
          }
          while (v44);
        }
      }
      else
      {
        v4 += 3;
      }
    }
  }
  if ((v6 & 0x10000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v45 = *(unsigned char *)(a1 + 183);
    *(_WORD *)char v4 = 408;
    v4[2] = v45;
    v4 += 3;
  }
  uint64_t v46 = *(unsigned int *)(a1 + 56);
  if ((int)v46 >= 1)
  {
    for (uint64_t k = 0; k != v46; ++k)
    {
      if (*a3 <= (unint64_t)v4) {
        char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v48 = *(int *)(*(void *)(a1 + 64) + 4 * k);
      *(_WORD *)char v4 = 416;
      v4[2] = v48;
      if (v48 > 0x7F)
      {
        v4[2] = v48 | 0x80;
        unint64_t v49 = v48 >> 7;
        v4[3] = v48 >> 7;
        v4 += 4;
        if (v48 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v50 = v49 >> 14;
            v49 >>= 7;
            *v4++ = v49;
          }
          while (v50);
        }
      }
      else
      {
        v4 += 3;
      }
    }
  }
  if ((v6 & 0x20000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v51 = *(int *)(a1 + 184);
    *(_WORD *)char v4 = 424;
    v4[2] = v51;
    if (v51 > 0x7F)
    {
      v4[2] = v51 | 0x80;
      unint64_t v52 = v51 >> 7;
      v4[3] = v51 >> 7;
      v4 += 4;
      if (v51 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v53 = v52 >> 14;
          v52 >>= 7;
          *v4++ = v52;
        }
        while (v53);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  uint64_t v54 = *(unsigned int *)(a1 + 72);
  if ((int)v54 >= 1)
  {
    for (uint64_t m = 0; m != v54; ++m)
    {
      if (*a3 <= (unint64_t)v4) {
        char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v56 = *(int *)(*(void *)(a1 + 80) + 4 * m);
      *(_WORD *)char v4 = 432;
      v4[2] = v56;
      if (v56 > 0x7F)
      {
        v4[2] = v56 | 0x80;
        unint64_t v57 = v56 >> 7;
        v4[3] = v56 >> 7;
        v4 += 4;
        if (v56 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v58 = v57 >> 14;
            v57 >>= 7;
            *v4++ = v57;
          }
          while (v58);
        }
      }
      else
      {
        v4 += 3;
      }
    }
  }
  if ((v6 & 0x80) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v59 = *(void *)(a1 + 160);
    *(_WORD *)char v4 = 442;
    unsigned int v60 = *(_DWORD *)(v59 + 80);
    v4[2] = v60;
    if (v60 > 0x7F) {
      uint64_t v61 = sub_188A9CC(v60, v4 + 2);
    }
    else {
      uint64_t v61 = v4 + 3;
    }
    char v4 = sub_12991CC(v59, v61, a3);
  }
  uint64_t v62 = *(unsigned int *)(a1 + 88);
  if ((int)v62 >= 1)
  {
    for (uint64_t n = 0; n != v62; ++n)
    {
      if (*a3 <= (unint64_t)v4) {
        char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v64 = *(int *)(*(void *)(a1 + 96) + 4 * n);
      *(_WORD *)char v4 = 448;
      v4[2] = v64;
      if (v64 > 0x7F)
      {
        v4[2] = v64 | 0x80;
        unint64_t v65 = v64 >> 7;
        v4[3] = v64 >> 7;
        v4 += 4;
        if (v64 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v66 = v65 >> 14;
            v65 >>= 7;
            *v4++ = v65;
          }
          while (v66);
        }
      }
      else
      {
        v4 += 3;
      }
    }
  }
  if ((v6 & 0x100) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v67 = *(void *)(a1 + 168);
    *(_WORD *)char v4 = 458;
    unsigned int v68 = *(_DWORD *)(v67 + 20);
    v4[2] = v68;
    if (v68 > 0x7F) {
      int v69 = sub_188A9CC(v68, v4 + 2);
    }
    else {
      int v69 = v4 + 3;
    }
    char v4 = sub_17F65FC(v67, (unint64_t)v69, a3);
    if ((v6 & 0x40000) == 0)
    {
LABEL_150:
      if ((v6 & 0x80000) == 0) {
        goto LABEL_164;
      }
      goto LABEL_161;
    }
  }
  else if ((v6 & 0x40000) == 0)
  {
    goto LABEL_150;
  }
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v70 = *(unsigned char *)(a1 + 188);
  *(_WORD *)char v4 = 464;
  v4[2] = v70;
  v4 += 3;
  if ((v6 & 0x80000) != 0)
  {
LABEL_161:
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v71 = *(unsigned char *)(a1 + 189);
    *(_WORD *)char v4 = 472;
    v4[2] = v71;
    v4 += 3;
  }
LABEL_164:
  uint64_t v72 = *(void *)(a1 + 8);
  if ((v72 & 1) == 0) {
    return v4;
  }
  unint64_t v74 = v72 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v74 + 31) < 0)
  {
    uint64_t v75 = *(void **)(v74 + 8);
    uint64_t v76 = *(void *)(v74 + 16);
  }
  else
  {
    uint64_t v75 = (void *)(v74 + 8);
    LODWORD(v76) = *(unsigned __int8 *)(v74 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v76)
  {
    uint64_t v77 = (int)v76;
    memcpy(v4, v75, (int)v76);
    v4 += v77;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v75, v76, v4);
}

uint64_t sub_17F8E7C(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 24);
  if (v2)
  {
    int v3 = 0;
    uint64_t v4 = 0;
    do
    {
      int v5 = *(_DWORD *)(*(void *)(a1 + 32) + 4 * v3);
      if (v5 < 0) {
        uint64_t v6 = 10;
      }
      else {
        uint64_t v6 = (9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6;
      }
      v4 += v6;
      ++v3;
    }
    while (v2 != v3);
  }
  else
  {
    uint64_t v4 = 0;
  }
  uint64_t v7 = *(unsigned int *)(a1 + 40);
  if (v7)
  {
    int v8 = 0;
    uint64_t v9 = 0;
    do
    {
      int v10 = *(_DWORD *)(*(void *)(a1 + 48) + 4 * v8);
      if (v10 < 0) {
        uint64_t v11 = 10;
      }
      else {
        uint64_t v11 = (9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6;
      }
      v9 += v11;
      ++v8;
    }
    while (v7 != v8);
  }
  else
  {
    uint64_t v9 = 0;
  }
  uint64_t v12 = *(unsigned int *)(a1 + 56);
  if (v12)
  {
    int v13 = 0;
    uint64_t v14 = 0;
    do
    {
      int v15 = *(_DWORD *)(*(void *)(a1 + 64) + 4 * v13);
      if (v15 < 0) {
        uint64_t v16 = 10;
      }
      else {
        uint64_t v16 = (9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6;
      }
      v14 += v16;
      ++v13;
    }
    while (v12 != v13);
  }
  else
  {
    uint64_t v14 = 0;
  }
  uint64_t v17 = *(unsigned int *)(a1 + 72);
  if (v17)
  {
    int v18 = 0;
    uint64_t v19 = 0;
    do
    {
      int v20 = *(_DWORD *)(*(void *)(a1 + 80) + 4 * v18);
      if (v20 < 0) {
        uint64_t v21 = 10;
      }
      else {
        uint64_t v21 = (9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6;
      }
      v19 += v21;
      ++v18;
    }
    while (v17 != v18);
  }
  else
  {
    uint64_t v19 = 0;
  }
  uint64_t v22 = *(unsigned int *)(a1 + 88);
  if (v22)
  {
    int v23 = 0;
    uint64_t v24 = 0;
    do
    {
      int v25 = *(_DWORD *)(*(void *)(a1 + 96) + 4 * v23);
      if (v25 < 0) {
        uint64_t v26 = 10;
      }
      else {
        uint64_t v26 = (9 * (__clz(v25 | 1) ^ 0x1F) + 73) >> 6;
      }
      v24 += v26;
      ++v23;
    }
    while (v22 != v23);
  }
  else
  {
    uint64_t v24 = 0;
  }
  uint64_t v27 = v4 + v2 + v9 + v14 + v19 + 2 * (v12 + v7 + v17 + v22) + v24;
  int v28 = *(_DWORD *)(a1 + 16);
  if (!(_BYTE)v28) {
    goto LABEL_51;
  }
  if (v28)
  {
    unint64_t v44 = *(void *)(a1 + 104) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v45 = *(unsigned __int8 *)(v44 + 23);
    uint64_t v46 = *(void *)(v44 + 8);
    if ((v45 & 0x80u) == 0) {
      uint64_t v46 = v45;
    }
    v27 += v46 + ((9 * (__clz(v46 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v28 & 2) == 0)
    {
LABEL_44:
      if ((v28 & 4) == 0) {
        goto LABEL_45;
      }
      goto LABEL_100;
    }
  }
  else if ((v28 & 2) == 0)
  {
    goto LABEL_44;
  }
  unint64_t v47 = *(void *)(a1 + 112) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v48 = *(unsigned __int8 *)(v47 + 23);
  uint64_t v49 = *(void *)(v47 + 8);
  if ((v48 & 0x80u) == 0) {
    uint64_t v49 = v48;
  }
  v27 += v49 + ((9 * (__clz(v49 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v28 & 4) == 0)
  {
LABEL_45:
    if ((v28 & 8) == 0) {
      goto LABEL_46;
    }
    goto LABEL_101;
  }
LABEL_100:
  uint64_t v50 = sub_1792638(*(void *)(a1 + 120));
  v27 += v50 + ((9 * (__clz(v50 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v28 & 8) == 0)
  {
LABEL_46:
    if ((v28 & 0x10) == 0) {
      goto LABEL_47;
    }
    goto LABEL_102;
  }
LABEL_101:
  uint64_t v51 = sub_131A6A8(*(void *)(a1 + 128));
  v27 += v51 + ((9 * (__clz(v51 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v28 & 0x10) == 0)
  {
LABEL_47:
    if ((v28 & 0x20) == 0) {
      goto LABEL_48;
    }
LABEL_103:
    uint64_t v53 = sub_12A1464(*(void *)(a1 + 144));
    v27 += v53 + ((9 * (__clz(v53 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v28 & 0x40) == 0)
    {
LABEL_49:
      if ((v28 & 0x80) == 0) {
        goto LABEL_51;
      }
      goto LABEL_50;
    }
    goto LABEL_104;
  }
LABEL_102:
  uint64_t v52 = sub_136363C(*(void *)(a1 + 136));
  v27 += v52 + ((9 * (__clz(v52 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v28 & 0x20) != 0) {
    goto LABEL_103;
  }
LABEL_48:
  if ((v28 & 0x40) == 0) {
    goto LABEL_49;
  }
LABEL_104:
  uint64_t v54 = sub_131A6A8(*(void *)(a1 + 152));
  v27 += v54 + ((9 * (__clz(v54 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v28 & 0x80) != 0)
  {
LABEL_50:
    uint64_t v29 = sub_1299454(*(void *)(a1 + 160));
    v27 += v29 + ((9 * (__clz(v29 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
LABEL_51:
  if ((v28 & 0xFF00) != 0)
  {
    if ((v28 & 0x100) != 0)
    {
      uint64_t v30 = sub_17F6810(*(void *)(a1 + 168));
      v27 += v30 + ((9 * (__clz(v30 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    uint64_t v31 = v27 + 2;
    if ((v28 & 0x200) == 0) {
      uint64_t v31 = v27;
    }
    if ((v28 & 0x400) != 0) {
      v31 += 2;
    }
    if ((v28 & 0x800) != 0) {
      v31 += 2;
    }
    if ((v28 & 0x1000) != 0) {
      v31 += 2;
    }
    if ((v28 & 0x2000) != 0) {
      v31 += 2;
    }
    if ((v28 & 0x4000) != 0) {
      v31 += 2;
    }
    if ((v28 & 0x8000) != 0) {
      uint64_t v27 = v31 + 3;
    }
    else {
      uint64_t v27 = v31;
    }
  }
  if ((v28 & 0x3F0000) != 0)
  {
    uint64_t v32 = v27 + 3;
    if ((v28 & 0x10000) == 0) {
      uint64_t v32 = v27;
    }
    if ((v28 & 0x20000) != 0)
    {
      int v33 = *(_DWORD *)(a1 + 184);
      uint64_t v34 = ((9 * (__clz(v33 | 1) ^ 0x1F) + 73) >> 6) + 2;
      if (v33 >= 0) {
        uint64_t v35 = v34;
      }
      else {
        uint64_t v35 = 12;
      }
      v32 += v35;
    }
    if ((v28 & 0x40000) != 0) {
      v32 += 3;
    }
    if ((v28 & 0x80000) != 0) {
      uint64_t v27 = v32 + 3;
    }
    else {
      uint64_t v27 = v32;
    }
    if ((v28 & 0x100000) != 0)
    {
      int v36 = *(_DWORD *)(a1 + 192);
      uint64_t v37 = ((9 * (__clz(v36 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if (v36 >= 0) {
        uint64_t v38 = v37;
      }
      else {
        uint64_t v38 = 11;
      }
      v27 += v38;
    }
    if ((v28 & 0x200000) != 0)
    {
      int v39 = *(_DWORD *)(a1 + 196);
      uint64_t v40 = ((9 * (__clz(v39 | 1) ^ 0x1F) + 73) >> 6) + 2;
      if (v39 >= 0) {
        uint64_t v41 = v40;
      }
      else {
        uint64_t v41 = 12;
      }
      v27 += v41;
    }
  }
  uint64_t v42 = *(void *)(a1 + 8);
  if (v42)
  {
    unint64_t v55 = v42 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v55 + 31) < 0) {
      uint64_t v56 = *(void *)(v55 + 16);
    }
    else {
      uint64_t v56 = *(unsigned __int8 *)(v55 + 31);
    }
    v27 += v56;
  }
  *(_DWORD *)(a1 + 20) = v27;
  return v27;
}

void sub_17F93C8(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    int v5 = (_DWORD *)(a1 + 24);
    uint64_t v6 = *(int *)(a1 + 24);
    sub_188C80C((unsigned int *)(a1 + 24), v6 + v4);
    uint64_t v7 = *(void *)(a1 + 32);
    *v5 += *(_DWORD *)(a2 + 24);
    memcpy((void *)(v7 + 4 * v6), *(const void **)(a2 + 32), 4 * *(int *)(a2 + 24));
  }
  int v8 = *(_DWORD *)(a2 + 40);
  if (v8)
  {
    uint64_t v9 = *(int *)(a1 + 40);
    sub_188C80C((unsigned int *)(a1 + 40), v9 + v8);
    uint64_t v10 = *(void *)(a1 + 48);
    *(_DWORD *)(a1 + 40) += *(_DWORD *)(a2 + 40);
    memcpy((void *)(v10 + 4 * v9), *(const void **)(a2 + 48), 4 * *(int *)(a2 + 40));
  }
  int v11 = *(_DWORD *)(a2 + 56);
  if (v11)
  {
    uint64_t v12 = *(int *)(a1 + 56);
    sub_188C80C((unsigned int *)(a1 + 56), v12 + v11);
    uint64_t v13 = *(void *)(a1 + 64);
    *(_DWORD *)(a1 + 56) += *(_DWORD *)(a2 + 56);
    memcpy((void *)(v13 + 4 * v12), *(const void **)(a2 + 64), 4 * *(int *)(a2 + 56));
  }
  int v14 = *(_DWORD *)(a2 + 72);
  if (v14)
  {
    uint64_t v15 = *(int *)(a1 + 72);
    sub_188C80C((unsigned int *)(a1 + 72), v15 + v14);
    uint64_t v16 = *(void *)(a1 + 80);
    *(_DWORD *)(a1 + 72) += *(_DWORD *)(a2 + 72);
    memcpy((void *)(v16 + 4 * v15), *(const void **)(a2 + 80), 4 * *(int *)(a2 + 72));
  }
  int v17 = *(_DWORD *)(a2 + 88);
  if (v17)
  {
    uint64_t v18 = *(int *)(a1 + 88);
    sub_188C80C((unsigned int *)(a1 + 88), v18 + v17);
    uint64_t v19 = *(void *)(a1 + 96);
    *(_DWORD *)(a1 + 88) += *(_DWORD *)(a2 + 88);
    memcpy((void *)(v19 + 4 * v18), *(const void **)(a2 + 96), 4 * *(int *)(a2 + 88));
  }
  int v20 = *(_DWORD *)(a2 + 16);
  if (!(_BYTE)v20) {
    goto LABEL_76;
  }
  if (v20)
  {
    uint64_t v21 = (long long *)(*(void *)(a2 + 104) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v22 = *(void *)(a1 + 8);
    int v23 = (uint64_t *)(v22 & 0xFFFFFFFFFFFFFFFCLL);
    if (v22) {
      int v23 = (uint64_t *)*v23;
    }
    sub_1881DF4((std::string **)(a1 + 104), v21, v23);
    if ((v20 & 2) == 0)
    {
LABEL_14:
      if ((v20 & 4) == 0) {
        goto LABEL_30;
      }
      goto LABEL_22;
    }
  }
  else if ((v20 & 2) == 0)
  {
    goto LABEL_14;
  }
  uint64_t v24 = (long long *)(*(void *)(a2 + 112) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 16) |= 2u;
  uint64_t v25 = *(void *)(a1 + 8);
  uint64_t v26 = (uint64_t *)(v25 & 0xFFFFFFFFFFFFFFFCLL);
  if (v25) {
    uint64_t v26 = (uint64_t *)*v26;
  }
  sub_1881DF4((std::string **)(a1 + 112), v24, v26);
  if ((v20 & 4) != 0)
  {
LABEL_22:
    *(_DWORD *)(a1 + 16) |= 4u;
    uint64_t v27 = *(void **)(a1 + 120);
    if (!v27)
    {
      uint64_t v28 = *(void *)(a1 + 8);
      uint64_t v29 = (void *)(v28 & 0xFFFFFFFFFFFFFFFCLL);
      if (v28) {
        uint64_t v29 = (void *)*v29;
      }
      uint64_t v27 = sub_18302C8((uint64_t)v29);
      *(void *)(a1 + 120) = v27;
    }
    if (*(void *)(a2 + 120)) {
      uint64_t v30 = *(uint64_t (****)())(a2 + 120);
    }
    else {
      uint64_t v30 = &off_2549800;
    }
    sub_1792730((uint64_t)v27, (uint64_t)v30);
  }
LABEL_30:
  if ((v20 & 8) != 0)
  {
    *(_DWORD *)(a1 + 16) |= 8u;
    uint64_t v31 = *(void *)(a1 + 128);
    if (!v31)
    {
      uint64_t v32 = *(void *)(a1 + 8);
      int v33 = (void *)(v32 & 0xFFFFFFFFFFFFFFFCLL);
      if (v32) {
        int v33 = (void *)*v33;
      }
      uint64_t v31 = sub_131BDDC((uint64_t)v33);
      *(void *)(a1 + 128) = v31;
    }
    if (*(void *)(a2 + 128)) {
      uint64_t v34 = *(uint64_t (****)())(a2 + 128);
    }
    else {
      uint64_t v34 = &off_2532BC8;
    }
    sub_131AB94(v31, (uint64_t)v34);
    if ((v20 & 0x10) == 0)
    {
LABEL_32:
      if ((v20 & 0x20) == 0) {
        goto LABEL_33;
      }
LABEL_52:
      *(_DWORD *)(a1 + 16) |= 0x20u;
      int v39 = *(std::string **)(a1 + 144);
      if (!v39)
      {
        uint64_t v40 = *(void *)(a1 + 8);
        uint64_t v41 = (void *)(v40 & 0xFFFFFFFFFFFFFFFCLL);
        if (v40) {
          uint64_t v41 = (void *)*v41;
        }
        int v39 = (std::string *)sub_12BBB40((uint64_t)v41);
        *(void *)(a1 + 144) = v39;
      }
      if (*(void *)(a2 + 144)) {
        uint64_t v42 = *(uint64_t (****)())(a2 + 144);
      }
      else {
        uint64_t v42 = &off_2530888;
      }
      sub_117DA78(v39, (uint64_t)v42);
      if ((v20 & 0x40) == 0)
      {
LABEL_34:
        if ((v20 & 0x80) == 0) {
          goto LABEL_76;
        }
        goto LABEL_68;
      }
      goto LABEL_60;
    }
  }
  else if ((v20 & 0x10) == 0)
  {
    goto LABEL_32;
  }
  *(_DWORD *)(a1 + 16) |= 0x10u;
  uint64_t v35 = *(void *)(a1 + 136);
  if (!v35)
  {
    uint64_t v36 = *(void *)(a1 + 8);
    uint64_t v37 = (void *)(v36 & 0xFFFFFFFFFFFFFFFCLL);
    if (v36) {
      uint64_t v37 = (void *)*v37;
    }
    uint64_t v35 = sub_1363A48((uint64_t)v37);
    *(void *)(a1 + 136) = v35;
  }
  if (*(void *)(a2 + 136)) {
    uint64_t v38 = *(uint64_t (****)())(a2 + 136);
  }
  else {
    uint64_t v38 = &off_25343A8;
  }
  sub_1363878(v35, (uint64_t)v38);
  if ((v20 & 0x20) != 0) {
    goto LABEL_52;
  }
LABEL_33:
  if ((v20 & 0x40) == 0) {
    goto LABEL_34;
  }
LABEL_60:
  *(_DWORD *)(a1 + 16) |= 0x40u;
  uint64_t v43 = *(void *)(a1 + 152);
  if (!v43)
  {
    uint64_t v44 = *(void *)(a1 + 8);
    uint64_t v45 = (void *)(v44 & 0xFFFFFFFFFFFFFFFCLL);
    if (v44) {
      uint64_t v45 = (void *)*v45;
    }
    uint64_t v43 = sub_131BDDC((uint64_t)v45);
    *(void *)(a1 + 152) = v43;
  }
  if (*(void *)(a2 + 152)) {
    uint64_t v46 = *(uint64_t (****)())(a2 + 152);
  }
  else {
    uint64_t v46 = &off_2532BC8;
  }
  sub_131AB94(v43, (uint64_t)v46);
  if ((v20 & 0x80) != 0)
  {
LABEL_68:
    *(_DWORD *)(a1 + 16) |= 0x80u;
    unint64_t v47 = *(std::string **)(a1 + 160);
    if (!v47)
    {
      uint64_t v48 = *(void *)(a1 + 8);
      uint64_t v49 = (void *)(v48 & 0xFFFFFFFFFFFFFFFCLL);
      if (v48) {
        uint64_t v49 = (void *)*v49;
      }
      unint64_t v47 = (std::string *)sub_129E61C((uint64_t)v49);
      *(void *)(a1 + 160) = v47;
    }
    if (*(void *)(a2 + 160)) {
      uint64_t v50 = *(uint64_t (****)())(a2 + 160);
    }
    else {
      uint64_t v50 = &off_25305C8;
    }
    sub_129956C(v47, (uint64_t)v50);
  }
LABEL_76:
  if ((v20 & 0xFF00) == 0) {
    goto LABEL_87;
  }
  if ((v20 & 0x100) != 0)
  {
    *(_DWORD *)(a1 + 16) |= 0x100u;
    uint64_t v52 = *(void **)(a1 + 168);
    if (!v52)
    {
      uint64_t v53 = *(void *)(a1 + 8);
      uint64_t v54 = (void *)(v53 & 0xFFFFFFFFFFFFFFFCLL);
      if (v53) {
        uint64_t v54 = (void *)*v54;
      }
      uint64_t v52 = sub_1834D00((uint64_t)v54);
      *(void *)(a1 + 168) = v52;
    }
    if (*(void *)(a2 + 168)) {
      unint64_t v55 = *(uint64_t (****)())(a2 + 168);
    }
    else {
      unint64_t v55 = &off_254BAD0;
    }
    sub_17F6914((uint64_t)v52, (uint64_t)v55);
    if ((v20 & 0x200) == 0)
    {
LABEL_79:
      if ((v20 & 0x400) == 0) {
        goto LABEL_80;
      }
      goto LABEL_109;
    }
  }
  else if ((v20 & 0x200) == 0)
  {
    goto LABEL_79;
  }
  *(unsigned char *)(a1 + 176) = *(unsigned char *)(a2 + 176);
  if ((v20 & 0x400) == 0)
  {
LABEL_80:
    if ((v20 & 0x800) == 0) {
      goto LABEL_81;
    }
    goto LABEL_110;
  }
LABEL_109:
  *(unsigned char *)(a1 + 177) = *(unsigned char *)(a2 + 177);
  if ((v20 & 0x800) == 0)
  {
LABEL_81:
    if ((v20 & 0x1000) == 0) {
      goto LABEL_82;
    }
    goto LABEL_111;
  }
LABEL_110:
  *(unsigned char *)(a1 + 178) = *(unsigned char *)(a2 + 178);
  if ((v20 & 0x1000) == 0)
  {
LABEL_82:
    if ((v20 & 0x2000) == 0) {
      goto LABEL_83;
    }
    goto LABEL_112;
  }
LABEL_111:
  *(unsigned char *)(a1 + 179) = *(unsigned char *)(a2 + 179);
  if ((v20 & 0x2000) == 0)
  {
LABEL_83:
    if ((v20 & 0x4000) == 0) {
      goto LABEL_84;
    }
LABEL_113:
    *(unsigned char *)(a1 + 181) = *(unsigned char *)(a2 + 181);
    if ((v20 & 0x8000) == 0) {
      goto LABEL_86;
    }
    goto LABEL_85;
  }
LABEL_112:
  *(unsigned char *)(a1 + 180) = *(unsigned char *)(a2 + 180);
  if ((v20 & 0x4000) != 0) {
    goto LABEL_113;
  }
LABEL_84:
  if ((v20 & 0x8000) != 0) {
LABEL_85:
  }
    *(unsigned char *)(a1 + 182) = *(unsigned char *)(a2 + 182);
LABEL_86:
  *(_DWORD *)(a1 + 16) |= v20;
LABEL_87:
  if ((v20 & 0x3F0000) == 0) {
    goto LABEL_96;
  }
  if ((v20 & 0x10000) != 0)
  {
    *(unsigned char *)(a1 + 183) = *(unsigned char *)(a2 + 183);
    if ((v20 & 0x20000) == 0)
    {
LABEL_90:
      if ((v20 & 0x40000) == 0) {
        goto LABEL_91;
      }
      goto LABEL_117;
    }
  }
  else if ((v20 & 0x20000) == 0)
  {
    goto LABEL_90;
  }
  *(_DWORD *)(a1 + 184) = *(_DWORD *)(a2 + 184);
  if ((v20 & 0x40000) == 0)
  {
LABEL_91:
    if ((v20 & 0x80000) == 0) {
      goto LABEL_92;
    }
    goto LABEL_118;
  }
LABEL_117:
  *(unsigned char *)(a1 + 188) = *(unsigned char *)(a2 + 188);
  if ((v20 & 0x80000) == 0)
  {
LABEL_92:
    if ((v20 & 0x100000) == 0) {
      goto LABEL_93;
    }
LABEL_119:
    *(_DWORD *)(a1 + 192) = *(_DWORD *)(a2 + 192);
    if ((v20 & 0x200000) == 0) {
      goto LABEL_95;
    }
    goto LABEL_94;
  }
LABEL_118:
  *(unsigned char *)(a1 + 189) = *(unsigned char *)(a2 + 189);
  if ((v20 & 0x100000) != 0) {
    goto LABEL_119;
  }
LABEL_93:
  if ((v20 & 0x200000) != 0) {
LABEL_94:
  }
    *(_DWORD *)(a1 + 196) = *(_DWORD *)(a2 + 196);
LABEL_95:
  *(_DWORD *)(a1 + 16) |= v20;
LABEL_96:
  uint64_t v51 = *(void *)(a2 + 8);
  if (v51)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v51 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_17F9918(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 4) != 0)
  {
    uint64_t v3 = *(void *)(a1 + 120);
    if (*(unsigned char *)(v3 + 16))
    {
      uint64_t result = sub_15B1FC0(*(void *)(v3 + 24));
      if (!result) {
        return result;
      }
      int v2 = *(_DWORD *)(a1 + 16);
    }
  }
  if ((v2 & 8) != 0)
  {
    uint64_t result = sub_131B154(*(void *)(a1 + 128));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 0x10) != 0)
  {
    uint64_t result = sub_1363A30(*(void *)(a1 + 136));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 0x40) != 0)
  {
    uint64_t result = sub_131B154(*(void *)(a1 + 152));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 0x100) == 0) {
    return 1;
  }
  uint64_t result = sub_17F69FC(*(void *)(a1 + 168));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_17F99AC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.AutocompleteParameters.AutocompleteParametersAllEntriesWithBrowse");
}

uint64_t sub_17F99BC(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (void *)(a1 + 8);
  *(void *)a1 = off_24DEE98;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 24) = &qword_2550250;
  int v6 = *(_DWORD *)(a2 + 16);
  if (v6)
  {
    uint64_t v7 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v7 = (uint64_t *)*v7;
    }
    sub_1881DF4((std::string **)(a1 + 24), (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL), v7);
    int v6 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 32) = &qword_2550250;
  if ((v6 & 2) != 0)
  {
    int v8 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      int v8 = (uint64_t *)*v8;
    }
    sub_1881DF4((std::string **)(a1 + 32), (long long *)(*(void *)(a2 + 32) & 0xFFFFFFFFFFFFFFFELL), v8);
    int v6 = *(_DWORD *)(a2 + 16);
  }
  if ((v6 & 4) != 0) {
    operator new();
  }
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  return a1;
}

void sub_17F9AD8()
{
}

uint64_t sub_17F9B28(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_12;
    }
  }
  else if (v4)
  {
    goto LABEL_12;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if ((uint64_t (***)())a1 != &off_254BBC0)
  {
    uint64_t v6 = *(void *)(a1 + 40);
    if (v6)
    {
      sub_179203C(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_12:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17F9C10(uint64_t a1)
{
  sub_17F9B28(a1);

  operator delete();
}

unsigned char *sub_17F9C48(unsigned char *result)
{
  uint64_t v1 = result;
  int v2 = *((_DWORD *)result + 4);
  if ((v2 & 7) == 0) {
    goto LABEL_6;
  }
  if ((v2 & 1) == 0)
  {
    if ((v2 & 2) == 0) {
      goto LABEL_4;
    }
    goto LABEL_14;
  }
  unint64_t v5 = *((void *)result + 3) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v5 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v5 = 0;
    *(unsigned char *)(v5 + 23) = 0;
    if ((v2 & 2) != 0) {
      goto LABEL_14;
    }
LABEL_4:
    if ((v2 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  **(unsigned char **)unint64_t v5 = 0;
  *(void *)(v5 + 8) = 0;
  if ((v2 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_14:
  unint64_t v6 = *((void *)result + 4) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v6 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v6 = 0;
    *(unsigned char *)(v6 + 23) = 0;
    if ((v2 & 4) == 0) {
      goto LABEL_6;
    }
LABEL_5:
    uint64_t result = sub_179212C(*((unsigned char **)result + 5));
    goto LABEL_6;
  }
  **(unsigned char **)unint64_t v6 = 0;
  *(void *)(v6 + 8) = 0;
  if ((v2 & 4) != 0) {
    goto LABEL_5;
  }
LABEL_6:
  char v4 = v1[8];
  uint64_t v3 = v1 + 8;
  *((_WORD *)v3 + 20) = 0;
  *((_DWORD *)v3 + 11) = 15;
  *((_DWORD *)v3 + 2) = 0;
  if (v4)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_17F9D24(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v37 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v37, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    int v8 = (unsigned __int8 *)(*(void *)v37 + 1);
    unsigned int v9 = **(unsigned char **)v37;
    if ((char)**(unsigned char **)v37 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        int v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v37, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        int v8 = (unsigned __int8 *)(*(void *)v37 + 2);
      }
    }
    *(void *)uint64_t v37 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_39;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        int v14 = (void *)(a1 + 24);
        goto LABEL_33;
      case 2u:
        if (v9 != 18) {
          goto LABEL_39;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v15 = *(void **)(a1 + 40);
        if (!v15)
        {
          uint64_t v16 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v16 = (void *)*v16;
          }
          uint64_t v15 = sub_18302C8((uint64_t)v16);
          *(void *)(a1 + 40) = v15;
          int v8 = *(unsigned __int8 **)v37;
        }
        int v17 = sub_120FE50(a3, (uint64_t)v15, v8);
        goto LABEL_46;
      case 3u:
        if (v9 != 24) {
          goto LABEL_39;
        }
        v5 |= 0x20u;
        uint64_t v19 = (char *)(v8 + 1);
        LODWORD(v18) = *v8;
        if ((v18 & 0x80) == 0) {
          goto LABEL_23;
        }
        int v20 = *v19;
        uint64_t v18 = v18 + (v20 << 7) - 128;
        if (v20 < 0)
        {
          uint64_t v31 = sub_188C138((uint64_t)v8, v18);
          *(void *)uint64_t v37 = v31;
          *(_DWORD *)(a1 + 52) = v32;
          if (!v31) {
            goto LABEL_58;
          }
        }
        else
        {
          uint64_t v19 = (char *)(v8 + 2);
LABEL_23:
          *(void *)uint64_t v37 = v19;
          *(_DWORD *)(a1 + 52) = v18;
        }
        goto LABEL_47;
      case 4u:
        if (v9 != 32) {
          goto LABEL_39;
        }
        v5 |= 8u;
        uint64_t v21 = (char *)(v8 + 1);
        uint64_t v22 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_28;
        }
        int v23 = *v21;
        uint64_t v22 = v22 + (v23 << 7) - 128;
        if (v23 < 0)
        {
          uint64_t v33 = sub_188C138((uint64_t)v8, v22);
          *(void *)uint64_t v37 = v33;
          *(unsigned char *)(a1 + 48) = v34 != 0;
          if (!v33) {
            goto LABEL_58;
          }
        }
        else
        {
          uint64_t v21 = (char *)(v8 + 2);
LABEL_28:
          *(void *)uint64_t v37 = v21;
          *(unsigned char *)(a1 + 48) = v22 != 0;
        }
        goto LABEL_47;
      case 5u:
        if (v9 != 42) {
          goto LABEL_39;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v24 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v24 & 0xFFFFFFFFFFFFFFFCLL);
        if (v24) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        int v14 = (void *)(a1 + 32);
LABEL_33:
        uint64_t v25 = (std::string *)sub_1880F84(v14, v13);
        int v17 = (void *)sub_188C244(v25, *(char **)v37, (uint64_t)a3);
        goto LABEL_46;
      case 6u:
        if (v9 != 48) {
          goto LABEL_39;
        }
        v5 |= 0x10u;
        uint64_t v26 = (char *)(v8 + 1);
        uint64_t v27 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_38;
        }
        int v28 = *v26;
        uint64_t v27 = v27 + (v28 << 7) - 128;
        if (v28 < 0)
        {
          uint64_t v35 = sub_188C138((uint64_t)v8, v27);
          *(void *)uint64_t v37 = v35;
          *(unsigned char *)(a1 + 49) = v36 != 0;
          if (!v35) {
            goto LABEL_58;
          }
        }
        else
        {
          uint64_t v26 = (char *)(v8 + 2);
LABEL_38:
          *(void *)uint64_t v37 = v26;
          *(unsigned char *)(a1 + 49) = v27 != 0;
        }
        goto LABEL_47;
      default:
LABEL_39:
        if (v9) {
          BOOL v29 = (v9 & 7) == 4;
        }
        else {
          BOOL v29 = 1;
        }
        if (!v29)
        {
          if (*v7)
          {
            uint64_t v30 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v30 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            int v8 = *(unsigned __int8 **)v37;
          }
          int v17 = sub_1885AC0(v9, v30, (char *)v8, a3);
LABEL_46:
          *(void *)uint64_t v37 = v17;
          if (!v17) {
            goto LABEL_58;
          }
LABEL_47:
          if (sub_11947B8((uint64_t)a3, (char **)v37, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_58:
        }
          *(void *)uint64_t v37 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v37;
    }
  }
}

unsigned char *sub_17FA09C(uint64_t a1, unsigned char *__dst, void *a3)
{
  char v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    char v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 4) == 0)
    {
LABEL_3:
      if ((v6 & 0x20) == 0) {
        goto LABEL_18;
      }
      goto LABEL_12;
    }
  }
  else if ((v6 & 4) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v7 = *(void *)(a1 + 40);
  *char v4 = 18;
  unsigned int v8 = *(_DWORD *)(v7 + 20);
  v4[1] = v8;
  if (v8 > 0x7F) {
    unsigned int v9 = sub_188A9CC(v8, v4 + 1);
  }
  else {
    unsigned int v9 = v4 + 2;
  }
  char v4 = sub_1792424(v7, (unint64_t)v9, a3);
  if ((v6 & 0x20) != 0)
  {
LABEL_12:
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 52);
    *char v4 = 24;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_18:
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v13 = *(unsigned char *)(a1 + 48);
    *char v4 = 32;
    v4[1] = v13;
    v4 += 2;
    if ((v6 & 2) == 0)
    {
LABEL_20:
      if ((v6 & 0x10) == 0) {
        goto LABEL_29;
      }
      goto LABEL_26;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_20;
  }
  char v4 = sub_117A0AC(a3, 5, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x10) == 0) {
    goto LABEL_29;
  }
LABEL_26:
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v14 = *(unsigned char *)(a1 + 49);
  *char v4 = 48;
  v4[1] = v14;
  v4 += 2;
LABEL_29:
  uint64_t v15 = *(void *)(a1 + 8);
  if ((v15 & 1) == 0) {
    return v4;
  }
  unint64_t v17 = v15 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v17 + 31) < 0)
  {
    uint64_t v18 = *(void **)(v17 + 8);
    uint64_t v19 = *(void *)(v17 + 16);
  }
  else
  {
    uint64_t v18 = (void *)(v17 + 8);
    LODWORD(v19) = *(unsigned __int8 *)(v17 + 31);
  }
  if (*a3 - (void)v4 >= (int)v19)
  {
    uint64_t v20 = (int)v19;
    memcpy(v4, v18, (int)v19);
    v4 += v20;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v18, v19, v4);
}

uint64_t sub_17FA2FC(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0x3F) == 0)
  {
    uint64_t result = 0;
    goto LABEL_24;
  }
  if (v2)
  {
    unint64_t v5 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
    uint64_t v7 = *(void *)(v5 + 8);
    if ((v6 & 0x80u) == 0) {
      uint64_t v7 = v6;
    }
    uint64_t v3 = v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_9:
    unint64_t v8 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v9 = *(unsigned __int8 *)(v8 + 23);
    uint64_t v10 = *(void *)(v8 + 8);
    if ((v9 & 0x80u) == 0) {
      uint64_t v10 = v9;
    }
    v3 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v2 & 4) != 0)
  {
    uint64_t v11 = sub_1792638(*(void *)(a1 + 40));
    v3 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v12 = v3 + 2;
  if ((v2 & 8) == 0) {
    uint64_t v12 = v3;
  }
  if ((v2 & 0x10) != 0) {
    uint64_t result = v12 + 2;
  }
  else {
    uint64_t result = v12;
  }
  if ((v2 & 0x20) != 0)
  {
    int v13 = *(_DWORD *)(a1 + 52);
    uint64_t v14 = ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if (v13 >= 0) {
      uint64_t v15 = v14;
    }
    else {
      uint64_t v15 = 11;
    }
    result += v15;
  }
LABEL_24:
  uint64_t v16 = *(void *)(a1 + 8);
  if (v16)
  {
    unint64_t v17 = v16 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v17 + 31) < 0) {
      uint64_t v18 = *(void *)(v17 + 16);
    }
    else {
      uint64_t v18 = *(unsigned __int8 *)(v17 + 31);
    }
    result += v18;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

void sub_17FA474(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0x3F) != 0)
  {
    if (v4)
    {
      uint64_t v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v7 = (std::string **)(a1 + 24);
      uint64_t v8 = *(void *)(a1 + 8);
      uint64_t v9 = (uint64_t *)(v8 & 0xFFFFFFFFFFFFFFFCLL);
      if (v8) {
        uint64_t v9 = (uint64_t *)*v9;
      }
      sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_20;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    uint64_t v10 = (long long *)(*(void *)(a2 + 32) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v11 = *(void *)(a1 + 8);
    uint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
    if (v11) {
      uint64_t v12 = (uint64_t *)*v12;
    }
    sub_1881DF4((std::string **)(a1 + 32), v10, v12);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_28;
    }
LABEL_20:
    *(_DWORD *)(a1 + 16) |= 4u;
    int v13 = *(void **)(a1 + 40);
    if (!v13)
    {
      uint64_t v14 = *(void *)(a1 + 8);
      uint64_t v15 = (void *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
      if (v14) {
        uint64_t v15 = (void *)*v15;
      }
      int v13 = sub_18302C8((uint64_t)v15);
      *(void *)(a1 + 40) = v13;
    }
    if (*(void *)(a2 + 40)) {
      uint64_t v16 = *(uint64_t (****)())(a2 + 40);
    }
    else {
      uint64_t v16 = &off_2549800;
    }
    sub_1792730((uint64_t)v13, (uint64_t)v16);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0) {
        goto LABEL_7;
      }
      goto LABEL_29;
    }
LABEL_28:
    *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
    if ((v4 & 0x10) == 0)
    {
LABEL_7:
      if ((v4 & 0x20) == 0)
      {
LABEL_9:
        *(_DWORD *)(a1 + 16) |= v4;
        goto LABEL_10;
      }
LABEL_8:
      *(_DWORD *)(a1 + 52) = *(_DWORD *)(a2 + 52);
      goto LABEL_9;
    }
LABEL_29:
    *(unsigned char *)(a1 + 49) = *(unsigned char *)(a2 + 49);
    if ((v4 & 0x20) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
LABEL_10:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

BOOL sub_17FA5DC(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 4) == 0) {
    return 1;
  }
  uint64_t v1 = *(void *)(a1 + 40);
  if ((*(unsigned char *)(v1 + 16) & 1) == 0) {
    return 1;
  }
  BOOL result = sub_15B1FC0(*(void *)(v1 + 24));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_17FA614@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.AutocompleteParameters.AutocompleteParametersSiriSearch");
}

uint64_t sub_17FA624(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (void *)(a1 + 8);
  *(void *)a1 = off_24DEF18;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 24) = &qword_2550250;
  int v6 = *(_DWORD *)(a2 + 16);
  if (v6)
  {
    uint64_t v7 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v7 = (uint64_t *)*v7;
    }
    sub_1881DF4((std::string **)(a1 + 24), (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL), v7);
    int v6 = *(_DWORD *)(a2 + 16);
  }
  if ((v6 & 2) != 0) {
    operator new();
  }
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  return a1;
}

void sub_17FA710()
{
}

uint64_t sub_17FA760(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_254BBF8)
  {
    uint64_t v6 = *(void *)(a1 + 32);
    if (v6)
    {
      sub_179203C(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17FA82C(uint64_t a1)
{
  sub_17FA760(a1);

  operator delete();
}

unsigned char *sub_17FA864(unsigned char *result)
{
  uint64_t v1 = result;
  int v2 = *((_DWORD *)result + 4);
  if ((v2 & 3) != 0)
  {
    if ((v2 & 1) == 0) {
      goto LABEL_5;
    }
    unint64_t v3 = *((void *)result + 3) & 0xFFFFFFFFFFFFFFFELL;
    if ((*(char *)(v3 + 23) & 0x80000000) == 0)
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
LABEL_5:
      if ((v2 & 2) == 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
    **(unsigned char **)unint64_t v3 = 0;
    *(void *)(v3 + 8) = 0;
    if ((v2 & 2) != 0) {
LABEL_6:
    }
      BOOL result = sub_179212C(*((unsigned char **)result + 4));
  }
LABEL_7:
  if ((v2 & 0xC) != 0)
  {
    v1[40] = 0;
    *((_DWORD *)v1 + 11) = 15;
  }
  char v5 = v1[8];
  int v4 = v1 + 8;
  *((_DWORD *)v4 + 2) = 0;
  if (v5)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

uint64_t sub_17FA90C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v30 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v30, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (unsigned __int8 *)(*(void *)v30 + 1);
    unsigned int v9 = **(unsigned char **)v30;
    if ((char)**(unsigned char **)v30 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        uint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v30, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (unsigned __int8 *)(*(void *)v30 + 2);
      }
    }
    *(void *)uint64_t v30 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_29;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 8);
        int v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          int v13 = (uint64_t *)*v13;
        }
        uint64_t v14 = (std::string *)sub_1880F84((void *)(a1 + 24), v13);
        uint64_t v15 = (void *)sub_188C244(v14, *(char **)v30, (uint64_t)a3);
        goto LABEL_36;
      case 2u:
        if (v9 != 18) {
          goto LABEL_29;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v16 = *(void **)(a1 + 32);
        if (!v16)
        {
          unint64_t v17 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            unint64_t v17 = (void *)*v17;
          }
          uint64_t v16 = sub_18302C8((uint64_t)v17);
          *(void *)(a1 + 32) = v16;
          uint64_t v8 = *(unsigned __int8 **)v30;
        }
        uint64_t v15 = sub_120FE50(a3, (uint64_t)v16, v8);
        goto LABEL_36;
      case 3u:
        if (v9 != 24) {
          goto LABEL_29;
        }
        v5 |= 8u;
        uint64_t v19 = (char *)(v8 + 1);
        LODWORD(v18) = *v8;
        if ((v18 & 0x80) == 0) {
          goto LABEL_23;
        }
        int v20 = *v19;
        uint64_t v18 = v18 + (v20 << 7) - 128;
        if (v20 < 0)
        {
          uint64_t v26 = sub_188C138((uint64_t)v8, v18);
          *(void *)uint64_t v30 = v26;
          *(_DWORD *)(a1 + 44) = v27;
          if (!v26) {
            goto LABEL_46;
          }
        }
        else
        {
          uint64_t v19 = (char *)(v8 + 2);
LABEL_23:
          *(void *)uint64_t v30 = v19;
          *(_DWORD *)(a1 + 44) = v18;
        }
        goto LABEL_37;
      case 4u:
        if (v9 != 32) {
          goto LABEL_29;
        }
        v5 |= 4u;
        uint64_t v21 = (char *)(v8 + 1);
        uint64_t v22 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_28;
        }
        int v23 = *v21;
        uint64_t v22 = v22 + (v23 << 7) - 128;
        if (v23 < 0)
        {
          uint64_t v28 = sub_188C138((uint64_t)v8, v22);
          *(void *)uint64_t v30 = v28;
          *(unsigned char *)(a1 + 40) = v29 != 0;
          if (!v28) {
            goto LABEL_46;
          }
        }
        else
        {
          uint64_t v21 = (char *)(v8 + 2);
LABEL_28:
          *(void *)uint64_t v30 = v21;
          *(unsigned char *)(a1 + 40) = v22 != 0;
        }
        goto LABEL_37;
      default:
LABEL_29:
        if (v9) {
          BOOL v24 = (v9 & 7) == 4;
        }
        else {
          BOOL v24 = 1;
        }
        if (!v24)
        {
          if (*v7)
          {
            uint64_t v25 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v25 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = *(unsigned __int8 **)v30;
          }
          uint64_t v15 = sub_1885AC0(v9, v25, (char *)v8, a3);
LABEL_36:
          *(void *)uint64_t v30 = v15;
          if (!v15) {
            goto LABEL_46;
          }
LABEL_37:
          if (sub_11947B8((uint64_t)a3, (char **)v30, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_46:
        }
          *(void *)uint64_t v30 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v30;
    }
  }
}

unsigned char *sub_17FABD0(uint64_t a1, unsigned char *__dst, void *a3)
{
  int v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    int v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 8) == 0) {
        goto LABEL_18;
      }
      goto LABEL_12;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v7 = *(void *)(a1 + 32);
  *int v4 = 18;
  unsigned int v8 = *(_DWORD *)(v7 + 20);
  v4[1] = v8;
  if (v8 > 0x7F) {
    unsigned int v9 = sub_188A9CC(v8, v4 + 1);
  }
  else {
    unsigned int v9 = v4 + 2;
  }
  int v4 = sub_1792424(v7, (unint64_t)v9, a3);
  if ((v6 & 8) != 0)
  {
LABEL_12:
    if (*a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 44);
    *int v4 = 24;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_18:
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v13 = *(unsigned char *)(a1 + 40);
    *int v4 = 32;
    v4[1] = v13;
    v4 += 2;
  }
  uint64_t v14 = *(void *)(a1 + 8);
  if ((v14 & 1) == 0) {
    return v4;
  }
  unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v16 + 31) < 0)
  {
    unint64_t v17 = *(void **)(v16 + 8);
    uint64_t v18 = *(void *)(v16 + 16);
  }
  else
  {
    unint64_t v17 = (void *)(v16 + 8);
    LODWORD(v18) = *(unsigned __int8 *)(v16 + 31);
  }
  if (*a3 - (void)v4 >= (int)v18)
  {
    uint64_t v19 = (int)v18;
    memcpy(v4, v17, (int)v18);
    v4 += v19;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v17, v18, v4);
}

uint64_t sub_17FADCC(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0xF) == 0)
  {
    uint64_t result = 0;
    goto LABEL_18;
  }
  if (v2)
  {
    unint64_t v5 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
    uint64_t v7 = *(void *)(v5 + 8);
    if ((v6 & 0x80u) == 0) {
      uint64_t v7 = v6;
    }
    uint64_t v3 = v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_9:
    uint64_t v8 = sub_1792638(*(void *)(a1 + 32));
    v3 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  if ((v2 & 4) != 0) {
    uint64_t result = v3 + 2;
  }
  else {
    uint64_t result = v3;
  }
  if ((v2 & 8) != 0)
  {
    int v9 = *(_DWORD *)(a1 + 44);
    uint64_t v10 = ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if (v9 >= 0) {
      uint64_t v11 = v10;
    }
    else {
      uint64_t v11 = 11;
    }
    result += v11;
  }
LABEL_18:
  uint64_t v12 = *(void *)(a1 + 8);
  if (v12)
  {
    unint64_t v13 = v12 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v13 + 31) < 0) {
      uint64_t v14 = *(void *)(v13 + 16);
    }
    else {
      uint64_t v14 = *(unsigned __int8 *)(v13 + 31);
    }
    result += v14;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

BOOL sub_17FAEF4(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 2) == 0) {
    return 1;
  }
  uint64_t v1 = *(void *)(a1 + 32);
  if ((*(unsigned char *)(v1 + 16) & 1) == 0) {
    return 1;
  }
  BOOL result = sub_15B1FC0(*(void *)(v1 + 24));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_17FAF2C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.AutocompleteParameters.AutocompleteParametersAddressOnly");
}

uint64_t sub_17FAF3C(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (uint64_t *)(a1 + 8);
  *(void *)a1 = off_24DEF98;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v5 = a1 + 24;
  *(_DWORD *)(a1 + 44) = 0;
  *(void *)(a1 + 28) = 0;
  *(void *)(a1 + 36) = 0;
  *(void *)(a1 + 20) = 0;
  int v6 = *(_DWORD *)(a2 + 32);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 40);
    uint64_t v8 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_188FB98(v5, v8, (const std::string **)(v7 + 8), v6, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v9 = *(_DWORD *)(a1 + 32) + v6;
    *(_DWORD *)(a1 + 32) = v9;
    uint64_t v10 = *(int **)(a1 + 40);
    if (*v10 < v9) {
      *uint64_t v10 = v9;
    }
  }
  uint64_t v11 = *(void *)(a2 + 8);
  if (v11) {
    sub_188B4F8(v4, (v11 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 48) = &qword_2550250;
  int v12 = *(_DWORD *)(a2 + 16);
  if (v12)
  {
    unint64_t v13 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      unint64_t v13 = (uint64_t *)*v13;
    }
    sub_1881DF4((std::string **)(a1 + 48), (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL), v13);
    int v12 = *(_DWORD *)(a2 + 16);
  }
  if ((v12 & 2) != 0) {
    operator new();
  }
  *(void *)(a1 + 56) = 0;
  long long v14 = *(_OWORD *)(a2 + 64);
  long long v15 = *(_OWORD *)(a2 + 80);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(_OWORD *)(a1 + 64) = v14;
  *(_OWORD *)(a1 + 80) = v15;
  return a1;
}

void sub_17FB0A8()
{
}

uint64_t sub_17FB108(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  uint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_254BC28)
  {
    uint64_t v6 = *(void *)(a1 + 56);
    if (v6)
    {
      sub_179203C(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  sub_1889DE8((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17FB1DC(uint64_t a1)
{
  sub_17FB108(a1);

  operator delete();
}

uint64_t sub_17FB214(uint64_t a1)
{
  uint64_t result = sub_188CC00(a1 + 24);
  int v3 = *(_DWORD *)(a1 + 16);
  if ((v3 & 3) != 0)
  {
    if ((v3 & 1) == 0) {
      goto LABEL_5;
    }
    unint64_t v4 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if ((*(char *)(v4 + 23) & 0x80000000) == 0)
    {
      *(unsigned char *)unint64_t v4 = 0;
      *(unsigned char *)(v4 + 23) = 0;
LABEL_5:
      if ((v3 & 2) == 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
    **(unsigned char **)unint64_t v4 = 0;
    *(void *)(v4 + 8) = 0;
    if ((v3 & 2) != 0) {
LABEL_6:
    }
      uint64_t result = (uint64_t)sub_179212C(*(unsigned char **)(a1 + 56));
  }
LABEL_7:
  if ((v3 & 0xFC) != 0)
  {
    *(unsigned char *)(a1 + 96) = 0;
    *(_OWORD *)(a1 + 64) = 0u;
    *(_OWORD *)(a1 + 80) = 0u;
    *(_DWORD *)(a1 + 100) = 15;
  }
  char v6 = *(unsigned char *)(a1 + 8);
  uint64_t v5 = a1 + 8;
  *(_DWORD *)(v5 + 8) = 0;
  if (v6)
  {
    return sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

uint64_t sub_17FB2CC(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unint64_t v58 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v58, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (uint64_t **)(a1 + 24);
  uint64_t v8 = (void *)(a1 + 8);
  while (2)
  {
    int v9 = (unsigned __int8 *)(*(void *)v58 + 1);
    unsigned int v10 = **(unsigned char **)v58;
    if ((char)**(unsigned char **)v58 < 0)
    {
      unsigned int v11 = v10 + (*v9 << 7);
      unsigned int v10 = v11 - 128;
      if ((char)*v9 < 0)
      {
        int v9 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v58, v11 - 128);
        unsigned int v10 = v12;
      }
      else
      {
        int v9 = (unsigned __int8 *)(*(void *)v58 + 2);
      }
    }
    *(void *)unint64_t v58 = v9;
    switch(v10 >> 3)
    {
      case 1u:
        if (v10 != 10) {
          goto LABEL_61;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v13 = *(void *)(a1 + 8);
        long long v14 = (uint64_t *)(v13 & 0xFFFFFFFFFFFFFFFCLL);
        if (v13) {
          long long v14 = (uint64_t *)*v14;
        }
        long long v15 = (std::string *)sub_1880F84((void *)(a1 + 48), v14);
        unint64_t v16 = (void *)sub_188C244(v15, *(char **)v58, (uint64_t)a3);
        goto LABEL_68;
      case 2u:
        if (v10 != 18) {
          goto LABEL_61;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        unint64_t v17 = *(void **)(a1 + 56);
        if (!v17)
        {
          uint64_t v18 = (void *)(*v8 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v8) {
            uint64_t v18 = (void *)*v18;
          }
          unint64_t v17 = sub_18302C8((uint64_t)v18);
          *(void *)(a1 + 56) = v17;
          int v9 = *(unsigned __int8 **)v58;
        }
        unint64_t v16 = sub_120FE50(a3, (uint64_t)v17, v9);
        goto LABEL_68;
      case 3u:
        if (v10 != 24) {
          goto LABEL_61;
        }
        v5 |= 0x80u;
        int v20 = (char *)(v9 + 1);
        LODWORD(v19) = *v9;
        if ((v19 & 0x80) == 0) {
          goto LABEL_23;
        }
        int v21 = *v20;
        uint64_t v19 = v19 + (v21 << 7) - 128;
        if (v21 < 0)
        {
          uint64_t v46 = sub_188C138((uint64_t)v9, v19);
          *(void *)unint64_t v58 = v46;
          *(_DWORD *)(a1 + 100) = v47;
          if (!v46) {
            goto LABEL_86;
          }
        }
        else
        {
          int v20 = (char *)(v9 + 2);
LABEL_23:
          *(void *)unint64_t v58 = v20;
          *(_DWORD *)(a1 + 100) = v19;
        }
        goto LABEL_69;
      case 4u:
        if (v10 != 32) {
          goto LABEL_61;
        }
        v5 |= 0x40u;
        uint64_t v22 = (char *)(v9 + 1);
        uint64_t v23 = *v9;
        if (((char)*v9 & 0x80000000) == 0) {
          goto LABEL_28;
        }
        int v24 = *v22;
        uint64_t v23 = v23 + (v24 << 7) - 128;
        if (v24 < 0)
        {
          uint64_t v48 = sub_188C138((uint64_t)v9, v23);
          *(void *)unint64_t v58 = v48;
          *(unsigned char *)(a1 + 96) = v49 != 0;
          if (!v48) {
            goto LABEL_86;
          }
        }
        else
        {
          uint64_t v22 = (char *)(v9 + 2);
LABEL_28:
          *(void *)unint64_t v58 = v22;
          *(unsigned char *)(a1 + 96) = v23 != 0;
        }
        goto LABEL_69;
      case 5u:
        if (v10 != 40) {
          goto LABEL_61;
        }
        v5 |= 4u;
        uint64_t v25 = (char *)(v9 + 1);
        uint64_t v26 = *v9;
        if (((char)*v9 & 0x80000000) == 0) {
          goto LABEL_33;
        }
        int v27 = *v25;
        uint64_t v26 = v26 + (v27 << 7) - 128;
        if (v27 < 0)
        {
          uint64_t v50 = sub_188C138((uint64_t)v9, v26);
          *(void *)unint64_t v58 = v50;
          *(void *)(a1 + 64) = v51;
          if (!v50) {
            goto LABEL_86;
          }
        }
        else
        {
          uint64_t v25 = (char *)(v9 + 2);
LABEL_33:
          *(void *)unint64_t v58 = v25;
          *(void *)(a1 + 64) = v26;
        }
        goto LABEL_69;
      case 6u:
        if (v10 != 48) {
          goto LABEL_61;
        }
        v5 |= 8u;
        uint64_t v28 = (char *)(v9 + 1);
        uint64_t v29 = *v9;
        if (((char)*v9 & 0x80000000) == 0) {
          goto LABEL_38;
        }
        int v30 = *v28;
        uint64_t v29 = v29 + (v30 << 7) - 128;
        if (v30 < 0)
        {
          uint64_t v52 = sub_188C138((uint64_t)v9, v29);
          *(void *)unint64_t v58 = v52;
          *(void *)(a1 + 72) = v53;
          if (!v52) {
            goto LABEL_86;
          }
        }
        else
        {
          uint64_t v28 = (char *)(v9 + 2);
LABEL_38:
          *(void *)unint64_t v58 = v28;
          *(void *)(a1 + 72) = v29;
        }
        goto LABEL_69;
      case 7u:
        if (v10 != 56) {
          goto LABEL_61;
        }
        v5 |= 0x10u;
        uint64_t v31 = (char *)(v9 + 1);
        uint64_t v32 = *v9;
        if (((char)*v9 & 0x80000000) == 0) {
          goto LABEL_43;
        }
        int v33 = *v31;
        uint64_t v32 = v32 + (v33 << 7) - 128;
        if (v33 < 0)
        {
          uint64_t v54 = sub_188C138((uint64_t)v9, v32);
          *(void *)unint64_t v58 = v54;
          *(void *)(a1 + 80) = v55;
          if (!v54) {
            goto LABEL_86;
          }
        }
        else
        {
          uint64_t v31 = (char *)(v9 + 2);
LABEL_43:
          *(void *)unint64_t v58 = v31;
          *(void *)(a1 + 80) = v32;
        }
        goto LABEL_69;
      case 8u:
        if (v10 != 64) {
          goto LABEL_61;
        }
        v5 |= 0x20u;
        uint64_t v34 = (char *)(v9 + 1);
        uint64_t v35 = *v9;
        if (((char)*v9 & 0x80000000) == 0) {
          goto LABEL_48;
        }
        int v36 = *v34;
        uint64_t v35 = v35 + (v36 << 7) - 128;
        if (v36 < 0)
        {
          uint64_t v56 = sub_188C138((uint64_t)v9, v35);
          *(void *)unint64_t v58 = v56;
          *(void *)(a1 + 88) = v57;
          if (!v56) {
            goto LABEL_86;
          }
        }
        else
        {
          uint64_t v34 = (char *)(v9 + 2);
LABEL_48:
          *(void *)unint64_t v58 = v34;
          *(void *)(a1 + 88) = v35;
        }
        goto LABEL_69;
      case 9u:
        if (v10 != 74) {
          goto LABEL_61;
        }
        uint64_t v37 = (const std::string::value_type *)(v9 - 1);
        while (1)
        {
          uint64_t v38 = (char *)(v37 + 1);
          *(void *)unint64_t v58 = v37 + 1;
          int v39 = *(_DWORD **)(a1 + 40);
          if (v39 && (uint64_t v40 = *(int *)(a1 + 32), (int)v40 < *v39))
          {
            *(_DWORD *)(a1 + 32) = v40 + 1;
            uint64_t v41 = *(std::string **)&v39[2 * v40 + 2];
          }
          else
          {
            if (!*v7) {
              operator new();
            }
            void *v43 = v42;
            v43[1] = sub_3A6EDC;
            void *v42 = 0;
            v42[1] = 0;
            v42[2] = 0;
            uint64_t v41 = (std::string *)sub_188CDC8(a1 + 24, (uint64_t)v42);
            uint64_t v38 = *(char **)v58;
          }
          uint64_t v37 = sub_188C244(v41, v38, (uint64_t)a3);
          *(void *)unint64_t v58 = v37;
          if (!v37) {
            goto LABEL_86;
          }
          if (*(void *)a3 <= (unint64_t)v37 || *v37 != 74) {
            goto LABEL_69;
          }
        }
      default:
LABEL_61:
        if (v10) {
          BOOL v44 = (v10 & 7) == 4;
        }
        else {
          BOOL v44 = 1;
        }
        if (!v44)
        {
          if (*v8)
          {
            uint64_t v45 = (std::string *)((*v8 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v45 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            int v9 = *(unsigned __int8 **)v58;
          }
          unint64_t v16 = sub_1885AC0(v10, v45, (char *)v9, a3);
LABEL_68:
          *(void *)unint64_t v58 = v16;
          if (!v16) {
            goto LABEL_86;
          }
LABEL_69:
          if (sub_11947B8((uint64_t)a3, (char **)v58, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v9) {
          a3[10].i32[0] = v10 - 1;
        }
        else {
LABEL_86:
        }
          *(void *)unint64_t v58 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v58;
    }
  }
}

char *sub_17FB7F8(uint64_t a1, char *__dst, void *a3)
{
  unint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    unint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 0x80) == 0) {
        goto LABEL_18;
      }
      goto LABEL_12;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v7 = *(void *)(a1 + 56);
  *unint64_t v4 = 18;
  unsigned int v8 = *(_DWORD *)(v7 + 20);
  v4[1] = v8;
  if (v8 > 0x7F) {
    int v9 = sub_188A9CC(v8, v4 + 1);
  }
  else {
    int v9 = v4 + 2;
  }
  unint64_t v4 = sub_1792424(v7, (unint64_t)v9, a3);
  if ((v6 & 0x80) != 0)
  {
LABEL_12:
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 100);
    *unint64_t v4 = 24;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_18:
  if ((v6 & 0x40) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v13 = *(unsigned char *)(a1 + 96);
    *unint64_t v4 = 32;
    v4[1] = v13;
    v4 += 2;
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v14 = *(void *)(a1 + 64);
    *unint64_t v4 = 40;
    v4[1] = v14;
    if (v14 > 0x7F)
    {
      v4[1] = v14 | 0x80;
      unint64_t v15 = v14 >> 7;
      v4[2] = v14 >> 7;
      v4 += 3;
      if (v14 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v16 = v15 >> 14;
          v15 >>= 7;
          *v4++ = v15;
        }
        while (v16);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v17 = *(void *)(a1 + 72);
    *unint64_t v4 = 48;
    v4[1] = v17;
    if (v17 > 0x7F)
    {
      v4[1] = v17 | 0x80;
      unint64_t v18 = v17 >> 7;
      v4[2] = v17 >> 7;
      v4 += 3;
      if (v17 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v19 = v18 >> 14;
          v18 >>= 7;
          *v4++ = v18;
        }
        while (v19);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v20 = *(void *)(a1 + 80);
    *unint64_t v4 = 56;
    v4[1] = v20;
    if (v20 > 0x7F)
    {
      v4[1] = v20 | 0x80;
      unint64_t v21 = v20 >> 7;
      v4[2] = v20 >> 7;
      v4 += 3;
      if (v20 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v22 = v21 >> 14;
          v21 >>= 7;
          *v4++ = v21;
        }
        while (v22);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v23 = *(void *)(a1 + 88);
    *unint64_t v4 = 64;
    v4[1] = v23;
    if (v23 > 0x7F)
    {
      v4[1] = v23 | 0x80;
      unint64_t v24 = v23 >> 7;
      v4[2] = v23 >> 7;
      v4 += 3;
      if (v23 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v25 = v24 >> 14;
          v24 >>= 7;
          *v4++ = v24;
        }
        while (v25);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v26 = *(unsigned int *)(a1 + 32);
  if ((int)v26 >= 1)
  {
    uint64_t v27 = 0;
    uint64_t v28 = 8 * v26;
    do
    {
      uint64_t v29 = *(void **)(*(void *)(a1 + 40) + v27 + 8);
      if (*((char *)v29 + 23) < 0)
      {
        int64_t v30 = v29[1];
        if (v30 > 127) {
          goto LABEL_61;
        }
      }
      else
      {
        int64_t v30 = *((unsigned __int8 *)v29 + 23);
      }
      if (*a3 - (void)v4 + 14 >= v30)
      {
        *unint64_t v4 = 74;
        v4[1] = v30;
        if (*((char *)v29 + 23) < 0) {
          uint64_t v29 = (void *)*v29;
        }
        uint64_t v31 = v4 + 2;
        memcpy(v31, v29, v30);
        unint64_t v4 = &v31[v30];
        goto LABEL_59;
      }
LABEL_61:
      unint64_t v4 = (char *)sub_188A868(a3, 9, (uint64_t)v29, v4);
LABEL_59:
      v27 += 8;
    }
    while (v28 != v27);
  }
  uint64_t v32 = *(void *)(a1 + 8);
  if ((v32 & 1) == 0) {
    return v4;
  }
  unint64_t v34 = v32 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v34 + 31) < 0)
  {
    uint64_t v35 = *(void **)(v34 + 8);
    uint64_t v36 = *(void *)(v34 + 16);
  }
  else
  {
    uint64_t v35 = (void *)(v34 + 8);
    LODWORD(v36) = *(unsigned __int8 *)(v34 + 31);
  }
  if (*a3 - (void)v4 >= (int)v36)
  {
    uint64_t v37 = (int)v36;
    memcpy(v4, v35, (int)v36);
    v4 += v37;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v35, v36, v4);
}

uint64_t sub_17FBC98(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  if ((int)v2 < 1)
  {
    uint64_t v4 = *(unsigned int *)(a1 + 32);
  }
  else
  {
    int v3 = (uint64_t *)(*(void *)(a1 + 40) + 8);
    uint64_t v4 = *(unsigned int *)(a1 + 32);
    do
    {
      uint64_t v5 = *v3++;
      uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
      uint64_t v7 = *(void *)(v5 + 8);
      if ((v6 & 0x80u) == 0) {
        uint64_t v7 = v6;
      }
      v4 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      --v2;
    }
    while (v2);
  }
  char v8 = *(unsigned char *)(a1 + 16);
  if (v8)
  {
    if (*(unsigned char *)(a1 + 16))
    {
      unint64_t v11 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v12 = *(unsigned __int8 *)(v11 + 23);
      uint64_t v13 = *(void *)(v11 + 8);
      if ((v12 & 0x80u) == 0) {
        uint64_t v13 = v12;
      }
      v4 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((*(unsigned char *)(a1 + 16) & 2) == 0)
      {
LABEL_11:
        if ((*(unsigned char *)(a1 + 16) & 4) == 0) {
          goto LABEL_12;
        }
        goto LABEL_25;
      }
    }
    else if ((*(unsigned char *)(a1 + 16) & 2) == 0)
    {
      goto LABEL_11;
    }
    uint64_t v14 = sub_1792638(*(void *)(a1 + 56));
    v4 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v8 & 4) == 0)
    {
LABEL_12:
      if ((v8 & 8) == 0) {
        goto LABEL_13;
      }
      goto LABEL_26;
    }
LABEL_25:
    v4 += ((9 * (__clz(*(void *)(a1 + 64) | 1) ^ 0x3F) + 73) >> 6) + 1;
    if ((v8 & 8) == 0)
    {
LABEL_13:
      if ((v8 & 0x10) == 0) {
        goto LABEL_14;
      }
      goto LABEL_27;
    }
LABEL_26:
    v4 += ((9 * (__clz(*(void *)(a1 + 72) | 1) ^ 0x3F) + 73) >> 6) + 1;
    if ((v8 & 0x10) == 0)
    {
LABEL_14:
      if ((v8 & 0x20) == 0)
      {
LABEL_16:
        if ((v8 & 0x40) != 0) {
          v4 += 2;
        }
        if (v8 < 0)
        {
          int v9 = *(_DWORD *)(a1 + 100);
          if (v9 < 0) {
            uint64_t v10 = 11;
          }
          else {
            uint64_t v10 = ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
          }
          v4 += v10;
        }
        goto LABEL_31;
      }
LABEL_15:
      v4 += ((9 * (__clz(*(void *)(a1 + 88) | 1) ^ 0x3F) + 73) >> 6) + 1;
      goto LABEL_16;
    }
LABEL_27:
    v4 += ((9 * (__clz(*(void *)(a1 + 80) | 1) ^ 0x3F) + 73) >> 6) + 1;
    if ((v8 & 0x20) == 0) {
      goto LABEL_16;
    }
    goto LABEL_15;
  }
LABEL_31:
  uint64_t v15 = *(void *)(a1 + 8);
  if (v15)
  {
    unint64_t v17 = v15 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v17 + 31) < 0) {
      uint64_t v18 = *(void *)(v17 + 16);
    }
    else {
      uint64_t v18 = *(unsigned __int8 *)(v17 + 31);
    }
    v4 += v18;
  }
  *(_DWORD *)(a1 + 20) = v4;
  return v4;
}

void sub_17FBEB8(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (const std::string **)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_188FB98(a1 + 24, v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    char v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((_BYTE)v9)
  {
    if (v9)
    {
      unint64_t v11 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v12 = *(void *)(a1 + 8);
      uint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
      if (v12) {
        uint64_t v13 = (uint64_t *)*v13;
      }
      sub_1881DF4((std::string **)(a1 + 48), v11, v13);
      if ((v9 & 2) == 0)
      {
LABEL_7:
        if ((v9 & 4) == 0) {
          goto LABEL_8;
        }
        goto LABEL_30;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_7;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v14 = *(void **)(a1 + 56);
    if (!v14)
    {
      uint64_t v15 = *(void *)(a1 + 8);
      unint64_t v16 = (void *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
      if (v15) {
        unint64_t v16 = (void *)*v16;
      }
      uint64_t v14 = sub_18302C8((uint64_t)v16);
      *(void *)(a1 + 56) = v14;
    }
    if (*(void *)(a2 + 56)) {
      unint64_t v17 = *(uint64_t (****)())(a2 + 56);
    }
    else {
      unint64_t v17 = &off_2549800;
    }
    sub_1792730((uint64_t)v14, (uint64_t)v17);
    if ((v9 & 4) == 0)
    {
LABEL_8:
      if ((v9 & 8) == 0) {
        goto LABEL_9;
      }
      goto LABEL_31;
    }
LABEL_30:
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    if ((v9 & 8) == 0)
    {
LABEL_9:
      if ((v9 & 0x10) == 0) {
        goto LABEL_10;
      }
      goto LABEL_32;
    }
LABEL_31:
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    if ((v9 & 0x10) == 0)
    {
LABEL_10:
      if ((v9 & 0x20) == 0) {
        goto LABEL_11;
      }
      goto LABEL_33;
    }
LABEL_32:
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    if ((v9 & 0x20) == 0)
    {
LABEL_11:
      if ((v9 & 0x40) == 0) {
        goto LABEL_12;
      }
      goto LABEL_34;
    }
LABEL_33:
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    if ((v9 & 0x40) == 0)
    {
LABEL_12:
      if ((v9 & 0x80) == 0)
      {
LABEL_14:
        *(_DWORD *)(a1 + 16) |= v9;
        goto LABEL_15;
      }
LABEL_13:
      *(_DWORD *)(a1 + 100) = *(_DWORD *)(a2 + 100);
      goto LABEL_14;
    }
LABEL_34:
    *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
    if ((v9 & 0x80) == 0) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }
LABEL_15:
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

BOOL sub_17FC088(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 2) == 0) {
    return 1;
  }
  uint64_t v1 = *(void *)(a1 + 56);
  if ((*(unsigned char *)(v1 + 16) & 1) == 0) {
    return 1;
  }
  BOOL result = sub_15B1FC0(*(void *)(v1 + 24));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_17FC0C0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.AutocompleteParameters.AutocompleteParametersVenueSearch");
}

uint64_t sub_17FC0D0(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (void *)(a1 + 8);
  *(void *)a1 = off_24DF018;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 24) = &qword_2550250;
  int v6 = *(_DWORD *)(a2 + 16);
  if (v6)
  {
    int v7 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      int v7 = (uint64_t *)*v7;
    }
    sub_1881DF4((std::string **)(a1 + 24), (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL), v7);
    int v6 = *(_DWORD *)(a2 + 16);
  }
  if ((v6 & 2) != 0) {
    operator new();
  }
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  return a1;
}

void sub_17FC1BC()
{
}

uint64_t sub_17FC20C(uint64_t a1)
{
  int v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_254BC90)
  {
    uint64_t v6 = *(void *)(a1 + 32);
    if (v6)
    {
      sub_179203C(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17FC2D8(uint64_t a1)
{
  sub_17FC20C(a1);

  operator delete();
}

unsigned char *sub_17FC310(unsigned char *result)
{
  uint64_t v1 = result;
  int v2 = *((_DWORD *)result + 4);
  if ((v2 & 3) != 0)
  {
    if ((v2 & 1) == 0) {
      goto LABEL_5;
    }
    unint64_t v3 = *((void *)result + 3) & 0xFFFFFFFFFFFFFFFELL;
    if ((*(char *)(v3 + 23) & 0x80000000) == 0)
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
LABEL_5:
      if ((v2 & 2) == 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
    **(unsigned char **)unint64_t v3 = 0;
    *(void *)(v3 + 8) = 0;
    if ((v2 & 2) != 0) {
LABEL_6:
    }
      BOOL result = sub_179212C(*((unsigned char **)result + 4));
  }
LABEL_7:
  if ((v2 & 0xC) != 0)
  {
    v1[40] = 0;
    *((_DWORD *)v1 + 11) = 15;
  }
  char v5 = v1[8];
  int v4 = v1 + 8;
  *((_DWORD *)v4 + 2) = 0;
  if (v5)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

uint64_t sub_17FC3B8(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int64_t v30 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v30, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (2)
  {
    char v8 = (unsigned __int8 *)(*(void *)v30 + 1);
    unsigned int v9 = **(unsigned char **)v30;
    if ((char)**(unsigned char **)v30 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        char v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v30, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        char v8 = (unsigned __int8 *)(*(void *)v30 + 2);
      }
    }
    *(void *)int64_t v30 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_29;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        uint64_t v14 = (std::string *)sub_1880F84((void *)(a1 + 24), v13);
        uint64_t v15 = (void *)sub_188C244(v14, *(char **)v30, (uint64_t)a3);
        goto LABEL_36;
      case 2u:
        if (v9 != 18) {
          goto LABEL_29;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        unint64_t v16 = *(void **)(a1 + 32);
        if (!v16)
        {
          unint64_t v17 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            unint64_t v17 = (void *)*v17;
          }
          unint64_t v16 = sub_18302C8((uint64_t)v17);
          *(void *)(a1 + 32) = v16;
          char v8 = *(unsigned __int8 **)v30;
        }
        uint64_t v15 = sub_120FE50(a3, (uint64_t)v16, v8);
        goto LABEL_36;
      case 3u:
        if (v9 != 24) {
          goto LABEL_29;
        }
        v5 |= 8u;
        unint64_t v19 = (char *)(v8 + 1);
        LODWORD(v18) = *v8;
        if ((v18 & 0x80) == 0) {
          goto LABEL_23;
        }
        int v20 = *v19;
        uint64_t v18 = v18 + (v20 << 7) - 128;
        if (v20 < 0)
        {
          uint64_t v26 = sub_188C138((uint64_t)v8, v18);
          *(void *)int64_t v30 = v26;
          *(_DWORD *)(a1 + 44) = v27;
          if (!v26) {
            goto LABEL_46;
          }
        }
        else
        {
          unint64_t v19 = (char *)(v8 + 2);
LABEL_23:
          *(void *)int64_t v30 = v19;
          *(_DWORD *)(a1 + 44) = v18;
        }
        goto LABEL_37;
      case 4u:
        if (v9 != 32) {
          goto LABEL_29;
        }
        v5 |= 4u;
        unint64_t v21 = (char *)(v8 + 1);
        uint64_t v22 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_28;
        }
        int v23 = *v21;
        uint64_t v22 = v22 + (v23 << 7) - 128;
        if (v23 < 0)
        {
          uint64_t v28 = sub_188C138((uint64_t)v8, v22);
          *(void *)int64_t v30 = v28;
          *(unsigned char *)(a1 + 40) = v29 != 0;
          if (!v28) {
            goto LABEL_46;
          }
        }
        else
        {
          unint64_t v21 = (char *)(v8 + 2);
LABEL_28:
          *(void *)int64_t v30 = v21;
          *(unsigned char *)(a1 + 40) = v22 != 0;
        }
        goto LABEL_37;
      default:
LABEL_29:
        if (v9) {
          BOOL v24 = (v9 & 7) == 4;
        }
        else {
          BOOL v24 = 1;
        }
        if (!v24)
        {
          if (*v7)
          {
            unint64_t v25 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            unint64_t v25 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            char v8 = *(unsigned __int8 **)v30;
          }
          uint64_t v15 = sub_1885AC0(v9, v25, (char *)v8, a3);
LABEL_36:
          *(void *)int64_t v30 = v15;
          if (!v15) {
            goto LABEL_46;
          }
LABEL_37:
          if (sub_11947B8((uint64_t)a3, (char **)v30, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_46:
        }
          *(void *)int64_t v30 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v30;
    }
  }
}

unsigned char *sub_17FC67C(uint64_t a1, unsigned char *__dst, void *a3)
{
  int v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    int v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 8) == 0) {
        goto LABEL_18;
      }
      goto LABEL_12;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v7 = *(void *)(a1 + 32);
  *int v4 = 18;
  unsigned int v8 = *(_DWORD *)(v7 + 20);
  v4[1] = v8;
  if (v8 > 0x7F) {
    unsigned int v9 = sub_188A9CC(v8, v4 + 1);
  }
  else {
    unsigned int v9 = v4 + 2;
  }
  int v4 = sub_1792424(v7, (unint64_t)v9, a3);
  if ((v6 & 8) != 0)
  {
LABEL_12:
    if (*a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 44);
    *int v4 = 24;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_18:
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v13 = *(unsigned char *)(a1 + 40);
    *int v4 = 32;
    v4[1] = v13;
    v4 += 2;
  }
  uint64_t v14 = *(void *)(a1 + 8);
  if ((v14 & 1) == 0) {
    return v4;
  }
  unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v16 + 31) < 0)
  {
    unint64_t v17 = *(void **)(v16 + 8);
    uint64_t v18 = *(void *)(v16 + 16);
  }
  else
  {
    unint64_t v17 = (void *)(v16 + 8);
    LODWORD(v18) = *(unsigned __int8 *)(v16 + 31);
  }
  if (*a3 - (void)v4 >= (int)v18)
  {
    uint64_t v19 = (int)v18;
    memcpy(v4, v17, (int)v18);
    v4 += v19;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v17, v18, v4);
}

uint64_t sub_17FC878(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0xF) == 0)
  {
    uint64_t result = 0;
    goto LABEL_18;
  }
  if (v2)
  {
    unint64_t v5 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
    uint64_t v7 = *(void *)(v5 + 8);
    if ((v6 & 0x80u) == 0) {
      uint64_t v7 = v6;
    }
    uint64_t v3 = v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_9:
    uint64_t v8 = sub_1792638(*(void *)(a1 + 32));
    v3 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  if ((v2 & 4) != 0) {
    uint64_t result = v3 + 2;
  }
  else {
    uint64_t result = v3;
  }
  if ((v2 & 8) != 0)
  {
    int v9 = *(_DWORD *)(a1 + 44);
    uint64_t v10 = ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if (v9 >= 0) {
      uint64_t v11 = v10;
    }
    else {
      uint64_t v11 = 11;
    }
    result += v11;
  }
LABEL_18:
  uint64_t v12 = *(void *)(a1 + 8);
  if (v12)
  {
    unint64_t v13 = v12 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v13 + 31) < 0) {
      uint64_t v14 = *(void *)(v13 + 16);
    }
    else {
      uint64_t v14 = *(unsigned __int8 *)(v13 + 31);
    }
    result += v14;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

BOOL sub_17FC9A0(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 2) == 0) {
    return 1;
  }
  uint64_t v1 = *(void *)(a1 + 32);
  if ((*(unsigned char *)(v1 + 16) & 1) == 0) {
    return 1;
  }
  BOOL result = sub_15B1FC0(*(void *)(v1 + 24));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_17FC9D8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.AutocompleteParameters.AutocompleteParametersBrandProfileSearch");
}

uint64_t sub_17FC9E8(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (void *)(a1 + 8);
  *(void *)a1 = off_24DF098;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 24) = &qword_2550250;
  int v6 = *(_DWORD *)(a2 + 16);
  if (v6)
  {
    uint64_t v7 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v7 = (uint64_t *)*v7;
    }
    sub_1881DF4((std::string **)(a1 + 24), (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL), v7);
    int v6 = *(_DWORD *)(a2 + 16);
  }
  if ((v6 & 2) != 0) {
    operator new();
  }
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  return a1;
}

void sub_17FCAD4()
{
}

uint64_t sub_17FCB24(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_254BCC0)
  {
    uint64_t v6 = *(void *)(a1 + 32);
    if (v6)
    {
      sub_179203C(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17FCBF0(uint64_t a1)
{
  sub_17FCB24(a1);

  operator delete();
}

unsigned char *sub_17FCC28(unsigned char *result)
{
  uint64_t v1 = result;
  int v2 = *((_DWORD *)result + 4);
  if ((v2 & 3) != 0)
  {
    if ((v2 & 1) == 0) {
      goto LABEL_5;
    }
    unint64_t v3 = *((void *)result + 3) & 0xFFFFFFFFFFFFFFFELL;
    if ((*(char *)(v3 + 23) & 0x80000000) == 0)
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
LABEL_5:
      if ((v2 & 2) == 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
    **(unsigned char **)unint64_t v3 = 0;
    *(void *)(v3 + 8) = 0;
    if ((v2 & 2) != 0) {
LABEL_6:
    }
      BOOL result = sub_179212C(*((unsigned char **)result + 4));
  }
LABEL_7:
  if ((v2 & 0xC) != 0)
  {
    v1[40] = 0;
    *((_DWORD *)v1 + 11) = 15;
  }
  char v5 = v1[8];
  int v4 = v1 + 8;
  *((_DWORD *)v4 + 2) = 0;
  if (v5)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

uint64_t sub_17FCCD0(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int64_t v30 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v30, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (unsigned __int8 *)(*(void *)v30 + 1);
    unsigned int v9 = **(unsigned char **)v30;
    if ((char)**(unsigned char **)v30 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        uint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v30, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (unsigned __int8 *)(*(void *)v30 + 2);
      }
    }
    *(void *)int64_t v30 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_29;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 8);
        unint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          unint64_t v13 = (uint64_t *)*v13;
        }
        uint64_t v14 = (std::string *)sub_1880F84((void *)(a1 + 24), v13);
        uint64_t v15 = (void *)sub_188C244(v14, *(char **)v30, (uint64_t)a3);
        goto LABEL_36;
      case 2u:
        if (v9 != 18) {
          goto LABEL_29;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        unint64_t v16 = *(void **)(a1 + 32);
        if (!v16)
        {
          unint64_t v17 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            unint64_t v17 = (void *)*v17;
          }
          unint64_t v16 = sub_18302C8((uint64_t)v17);
          *(void *)(a1 + 32) = v16;
          uint64_t v8 = *(unsigned __int8 **)v30;
        }
        uint64_t v15 = sub_120FE50(a3, (uint64_t)v16, v8);
        goto LABEL_36;
      case 3u:
        if (v9 != 24) {
          goto LABEL_29;
        }
        v5 |= 8u;
        uint64_t v19 = (char *)(v8 + 1);
        LODWORD(v18) = *v8;
        if ((v18 & 0x80) == 0) {
          goto LABEL_23;
        }
        int v20 = *v19;
        uint64_t v18 = v18 + (v20 << 7) - 128;
        if (v20 < 0)
        {
          uint64_t v26 = sub_188C138((uint64_t)v8, v18);
          *(void *)int64_t v30 = v26;
          *(_DWORD *)(a1 + 44) = v27;
          if (!v26) {
            goto LABEL_46;
          }
        }
        else
        {
          uint64_t v19 = (char *)(v8 + 2);
LABEL_23:
          *(void *)int64_t v30 = v19;
          *(_DWORD *)(a1 + 44) = v18;
        }
        goto LABEL_37;
      case 4u:
        if (v9 != 32) {
          goto LABEL_29;
        }
        v5 |= 4u;
        unint64_t v21 = (char *)(v8 + 1);
        uint64_t v22 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_28;
        }
        int v23 = *v21;
        uint64_t v22 = v22 + (v23 << 7) - 128;
        if (v23 < 0)
        {
          uint64_t v28 = sub_188C138((uint64_t)v8, v22);
          *(void *)int64_t v30 = v28;
          *(unsigned char *)(a1 + 40) = v29 != 0;
          if (!v28) {
            goto LABEL_46;
          }
        }
        else
        {
          unint64_t v21 = (char *)(v8 + 2);
LABEL_28:
          *(void *)int64_t v30 = v21;
          *(unsigned char *)(a1 + 40) = v22 != 0;
        }
        goto LABEL_37;
      default:
LABEL_29:
        if (v9) {
          BOOL v24 = (v9 & 7) == 4;
        }
        else {
          BOOL v24 = 1;
        }
        if (!v24)
        {
          if (*v7)
          {
            unint64_t v25 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            unint64_t v25 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = *(unsigned __int8 **)v30;
          }
          uint64_t v15 = sub_1885AC0(v9, v25, (char *)v8, a3);
LABEL_36:
          *(void *)int64_t v30 = v15;
          if (!v15) {
            goto LABEL_46;
          }
LABEL_37:
          if (sub_11947B8((uint64_t)a3, (char **)v30, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_46:
        }
          *(void *)int64_t v30 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v30;
    }
  }
}

unsigned char *sub_17FCF94(uint64_t a1, unsigned char *__dst, void *a3)
{
  int v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    int v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 8) == 0) {
        goto LABEL_18;
      }
      goto LABEL_12;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v7 = *(void *)(a1 + 32);
  *int v4 = 18;
  unsigned int v8 = *(_DWORD *)(v7 + 20);
  v4[1] = v8;
  if (v8 > 0x7F) {
    unsigned int v9 = sub_188A9CC(v8, v4 + 1);
  }
  else {
    unsigned int v9 = v4 + 2;
  }
  int v4 = sub_1792424(v7, (unint64_t)v9, a3);
  if ((v6 & 8) != 0)
  {
LABEL_12:
    if (*a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 44);
    *int v4 = 24;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_18:
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v13 = *(unsigned char *)(a1 + 40);
    *int v4 = 32;
    v4[1] = v13;
    v4 += 2;
  }
  uint64_t v14 = *(void *)(a1 + 8);
  if ((v14 & 1) == 0) {
    return v4;
  }
  unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v16 + 31) < 0)
  {
    unint64_t v17 = *(void **)(v16 + 8);
    uint64_t v18 = *(void *)(v16 + 16);
  }
  else
  {
    unint64_t v17 = (void *)(v16 + 8);
    LODWORD(v18) = *(unsigned __int8 *)(v16 + 31);
  }
  if (*a3 - (void)v4 >= (int)v18)
  {
    uint64_t v19 = (int)v18;
    memcpy(v4, v17, (int)v18);
    v4 += v19;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v17, v18, v4);
}

uint64_t sub_17FD190(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0xF) == 0)
  {
    uint64_t result = 0;
    goto LABEL_18;
  }
  if (v2)
  {
    unint64_t v5 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
    uint64_t v7 = *(void *)(v5 + 8);
    if ((v6 & 0x80u) == 0) {
      uint64_t v7 = v6;
    }
    uint64_t v3 = v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_9:
    uint64_t v8 = sub_1792638(*(void *)(a1 + 32));
    v3 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  if ((v2 & 4) != 0) {
    uint64_t result = v3 + 2;
  }
  else {
    uint64_t result = v3;
  }
  if ((v2 & 8) != 0)
  {
    int v9 = *(_DWORD *)(a1 + 44);
    uint64_t v10 = ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if (v9 >= 0) {
      uint64_t v11 = v10;
    }
    else {
      uint64_t v11 = 11;
    }
    result += v11;
  }
LABEL_18:
  uint64_t v12 = *(void *)(a1 + 8);
  if (v12)
  {
    unint64_t v13 = v12 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v13 + 31) < 0) {
      uint64_t v14 = *(void *)(v13 + 16);
    }
    else {
      uint64_t v14 = *(unsigned __int8 *)(v13 + 31);
    }
    result += v14;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

BOOL sub_17FD2B8(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 2) == 0) {
    return 1;
  }
  uint64_t v1 = *(void *)(a1 + 32);
  if ((*(unsigned char *)(v1 + 16) & 1) == 0) {
    return 1;
  }
  BOOL result = sub_15B1FC0(*(void *)(v1 + 24));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_17FD2F0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.AutocompleteParameters.AutocompleteParametersOfflineRegionSearch");
}

uint64_t sub_17FD300(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (void *)(a1 + 8);
  *(void *)a1 = off_24DF118;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 24) = &qword_2550250;
  int v6 = *(_DWORD *)(a2 + 16);
  if (v6)
  {
    uint64_t v7 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v7 = (uint64_t *)*v7;
    }
    sub_1881DF4((std::string **)(a1 + 24), (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL), v7);
    int v6 = *(_DWORD *)(a2 + 16);
  }
  if ((v6 & 2) != 0) {
    operator new();
  }
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  return a1;
}

void sub_17FD3EC()
{
}

uint64_t sub_17FD43C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_254BCF0)
  {
    uint64_t v6 = *(void *)(a1 + 32);
    if (v6)
    {
      sub_179203C(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17FD508(uint64_t a1)
{
  sub_17FD43C(a1);

  operator delete();
}

unsigned char *sub_17FD540(unsigned char *result)
{
  uint64_t v1 = result;
  int v2 = *((_DWORD *)result + 4);
  if ((v2 & 3) != 0)
  {
    if ((v2 & 1) == 0) {
      goto LABEL_5;
    }
    unint64_t v3 = *((void *)result + 3) & 0xFFFFFFFFFFFFFFFELL;
    if ((*(char *)(v3 + 23) & 0x80000000) == 0)
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
LABEL_5:
      if ((v2 & 2) == 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
    **(unsigned char **)unint64_t v3 = 0;
    *(void *)(v3 + 8) = 0;
    if ((v2 & 2) != 0) {
LABEL_6:
    }
      BOOL result = sub_179212C(*((unsigned char **)result + 4));
  }
LABEL_7:
  if ((v2 & 0xC) != 0)
  {
    v1[40] = 0;
    *((_DWORD *)v1 + 11) = 15;
  }
  char v5 = v1[8];
  int v4 = v1 + 8;
  *((_DWORD *)v4 + 2) = 0;
  if (v5)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

uint64_t sub_17FD5E8(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int64_t v30 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v30, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (unsigned __int8 *)(*(void *)v30 + 1);
    unsigned int v9 = **(unsigned char **)v30;
    if ((char)**(unsigned char **)v30 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        uint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v30, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (unsigned __int8 *)(*(void *)v30 + 2);
      }
    }
    *(void *)int64_t v30 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_29;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 8);
        unint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          unint64_t v13 = (uint64_t *)*v13;
        }
        uint64_t v14 = (std::string *)sub_1880F84((void *)(a1 + 24), v13);
        uint64_t v15 = (void *)sub_188C244(v14, *(char **)v30, (uint64_t)a3);
        goto LABEL_36;
      case 2u:
        if (v9 != 18) {
          goto LABEL_29;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        unint64_t v16 = *(void **)(a1 + 32);
        if (!v16)
        {
          unint64_t v17 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            unint64_t v17 = (void *)*v17;
          }
          unint64_t v16 = sub_18302C8((uint64_t)v17);
          *(void *)(a1 + 32) = v16;
          uint64_t v8 = *(unsigned __int8 **)v30;
        }
        uint64_t v15 = sub_120FE50(a3, (uint64_t)v16, v8);
        goto LABEL_36;
      case 3u:
        if (v9 != 24) {
          goto LABEL_29;
        }
        v5 |= 8u;
        uint64_t v19 = (char *)(v8 + 1);
        LODWORD(v18) = *v8;
        if ((v18 & 0x80) == 0) {
          goto LABEL_23;
        }
        int v20 = *v19;
        uint64_t v18 = v18 + (v20 << 7) - 128;
        if (v20 < 0)
        {
          uint64_t v26 = sub_188C138((uint64_t)v8, v18);
          *(void *)int64_t v30 = v26;
          *(_DWORD *)(a1 + 44) = v27;
          if (!v26) {
            goto LABEL_46;
          }
        }
        else
        {
          uint64_t v19 = (char *)(v8 + 2);
LABEL_23:
          *(void *)int64_t v30 = v19;
          *(_DWORD *)(a1 + 44) = v18;
        }
        goto LABEL_37;
      case 4u:
        if (v9 != 32) {
          goto LABEL_29;
        }
        v5 |= 4u;
        unint64_t v21 = (char *)(v8 + 1);
        uint64_t v22 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_28;
        }
        int v23 = *v21;
        uint64_t v22 = v22 + (v23 << 7) - 128;
        if (v23 < 0)
        {
          uint64_t v28 = sub_188C138((uint64_t)v8, v22);
          *(void *)int64_t v30 = v28;
          *(unsigned char *)(a1 + 40) = v29 != 0;
          if (!v28) {
            goto LABEL_46;
          }
        }
        else
        {
          unint64_t v21 = (char *)(v8 + 2);
LABEL_28:
          *(void *)int64_t v30 = v21;
          *(unsigned char *)(a1 + 40) = v22 != 0;
        }
        goto LABEL_37;
      default:
LABEL_29:
        if (v9) {
          BOOL v24 = (v9 & 7) == 4;
        }
        else {
          BOOL v24 = 1;
        }
        if (!v24)
        {
          if (*v7)
          {
            unint64_t v25 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            unint64_t v25 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = *(unsigned __int8 **)v30;
          }
          uint64_t v15 = sub_1885AC0(v9, v25, (char *)v8, a3);
LABEL_36:
          *(void *)int64_t v30 = v15;
          if (!v15) {
            goto LABEL_46;
          }
LABEL_37:
          if (sub_11947B8((uint64_t)a3, (char **)v30, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_46:
        }
          *(void *)int64_t v30 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v30;
    }
  }
}

unsigned char *sub_17FD8AC(uint64_t a1, unsigned char *__dst, void *a3)
{
  int v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    int v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 8) == 0) {
        goto LABEL_18;
      }
      goto LABEL_12;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v7 = *(void *)(a1 + 32);
  *int v4 = 18;
  unsigned int v8 = *(_DWORD *)(v7 + 20);
  v4[1] = v8;
  if (v8 > 0x7F) {
    unsigned int v9 = sub_188A9CC(v8, v4 + 1);
  }
  else {
    unsigned int v9 = v4 + 2;
  }
  int v4 = sub_1792424(v7, (unint64_t)v9, a3);
  if ((v6 & 8) != 0)
  {
LABEL_12:
    if (*a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 44);
    *int v4 = 24;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_18:
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v13 = *(unsigned char *)(a1 + 40);
    *int v4 = 32;
    v4[1] = v13;
    v4 += 2;
  }
  uint64_t v14 = *(void *)(a1 + 8);
  if ((v14 & 1) == 0) {
    return v4;
  }
  unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v16 + 31) < 0)
  {
    unint64_t v17 = *(void **)(v16 + 8);
    uint64_t v18 = *(void *)(v16 + 16);
  }
  else
  {
    unint64_t v17 = (void *)(v16 + 8);
    LODWORD(v18) = *(unsigned __int8 *)(v16 + 31);
  }
  if (*a3 - (void)v4 >= (int)v18)
  {
    uint64_t v19 = (int)v18;
    memcpy(v4, v17, (int)v18);
    v4 += v19;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v17, v18, v4);
}

uint64_t sub_17FDAA8(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0xF) == 0)
  {
    uint64_t result = 0;
    goto LABEL_18;
  }
  if (v2)
  {
    unint64_t v5 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
    uint64_t v7 = *(void *)(v5 + 8);
    if ((v6 & 0x80u) == 0) {
      uint64_t v7 = v6;
    }
    uint64_t v3 = v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_9:
    uint64_t v8 = sub_1792638(*(void *)(a1 + 32));
    v3 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  if ((v2 & 4) != 0) {
    uint64_t result = v3 + 2;
  }
  else {
    uint64_t result = v3;
  }
  if ((v2 & 8) != 0)
  {
    int v9 = *(_DWORD *)(a1 + 44);
    uint64_t v10 = ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if (v9 >= 0) {
      uint64_t v11 = v10;
    }
    else {
      uint64_t v11 = 11;
    }
    result += v11;
  }
LABEL_18:
  uint64_t v12 = *(void *)(a1 + 8);
  if (v12)
  {
    unint64_t v13 = v12 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v13 + 31) < 0) {
      uint64_t v14 = *(void *)(v13 + 16);
    }
    else {
      uint64_t v14 = *(unsigned __int8 *)(v13 + 31);
    }
    result += v14;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

BOOL sub_17FDBD0(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 2) == 0) {
    return 1;
  }
  uint64_t v1 = *(void *)(a1 + 32);
  if ((*(unsigned char *)(v1 + 16) & 1) == 0) {
    return 1;
  }
  BOOL result = sub_15B1FC0(*(void *)(v1 + 24));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_17FDC08@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.AutocompleteParameters.AutocompleteParametersPoiAddressOnly");
}

uint64_t sub_17FDC18(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (uint64_t *)(a1 + 8);
  *(void *)a1 = off_24DF198;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  unint64_t v5 = (uint64_t *)(a1 + 24);
  *(_DWORD *)(a1 + 44) = 0;
  *(void *)(a1 + 28) = 0;
  *(void *)(a1 + 36) = 0;
  *(void *)(a1 + 20) = 0;
  int v6 = *(_DWORD *)(a2 + 32);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 40);
    uint64_t v8 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_12C4B74(v5, v8, (uint64_t *)(v7 + 8), v6, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v9 = *(_DWORD *)(a1 + 32) + v6;
    *(_DWORD *)(a1 + 32) = v9;
    uint64_t v10 = *(int **)(a1 + 40);
    if (*v10 < v9) {
      *uint64_t v10 = v9;
    }
  }
  uint64_t v11 = *(void *)(a2 + 8);
  if (v11) {
    sub_188B4F8(v4, (v11 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 48) = &qword_2550250;
  int v12 = *(_DWORD *)(a2 + 16);
  if (v12)
  {
    unint64_t v13 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      unint64_t v13 = (uint64_t *)*v13;
    }
    sub_1881DF4((std::string **)(a1 + 48), (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL), v13);
    int v12 = *(_DWORD *)(a2 + 16);
  }
  if ((v12 & 2) != 0) {
    operator new();
  }
  *(void *)(a1 + 56) = 0;
  return a1;
}

void sub_17FDD74()
{
}

uint64_t sub_17FDDD8(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  unint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_254BD20)
  {
    uint64_t v6 = *(void *)(a1 + 56);
    if (v6)
    {
      sub_179203C(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  sub_12C45E8((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17FDEB0(uint64_t a1)
{
  sub_17FDDD8(a1);

  operator delete();
}

unsigned char *sub_17FDEE8(unsigned char *result)
{
  uint64_t v1 = result;
  uint64_t v2 = *((unsigned int *)result + 8);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*((void *)result + 5) + 8);
    do
    {
      uint64_t v4 = *v3++;
      BOOL result = sub_16CD894(v4);
      --v2;
    }
    while (v2);
    *((_DWORD *)v1 + 8) = 0;
  }
  int v5 = *((_DWORD *)v1 + 4);
  if ((v5 & 3) != 0)
  {
    if ((v5 & 1) == 0) {
      goto LABEL_9;
    }
    unint64_t v6 = *((void *)v1 + 6) & 0xFFFFFFFFFFFFFFFELL;
    if ((*(char *)(v6 + 23) & 0x80000000) == 0)
    {
      *(unsigned char *)unint64_t v6 = 0;
      *(unsigned char *)(v6 + 23) = 0;
LABEL_9:
      if ((v5 & 2) == 0) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
    **(unsigned char **)unint64_t v6 = 0;
    *(void *)(v6 + 8) = 0;
    if ((v5 & 2) != 0) {
LABEL_10:
    }
      BOOL result = sub_179212C(*((unsigned char **)v1 + 7));
  }
LABEL_11:
  char v8 = v1[8];
  uint64_t v7 = v1 + 8;
  *((_DWORD *)v7 + 2) = 0;
  if (v8)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v7);
  }
  return result;
}

uint64_t sub_17FDFB0(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v27 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v27, a3[11].i32[1])) {
    return *(void *)v27;
  }
  unint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = (unsigned __int8 *)(*(void *)v27 + 1);
    unsigned int v8 = **(unsigned char **)v27;
    if ((char)**(unsigned char **)v27 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if ((char)*v7 < 0)
      {
        uint64_t v7 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v27, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (unsigned __int8 *)(*(void *)v27 + 2);
      }
    }
    *(void *)int v27 = v7;
    unsigned int v11 = v8 >> 3;
    if (v8 >> 3 == 3) {
      break;
    }
    if (v11 == 2)
    {
      if (v8 != 18) {
        goto LABEL_14;
      }
      *(_DWORD *)(a1 + 16) |= 2u;
      uint64_t v22 = *(void **)(a1 + 56);
      if (!v22)
      {
        int v23 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          int v23 = (void *)*v23;
        }
        uint64_t v22 = sub_18302C8((uint64_t)v23);
        *(void *)(a1 + 56) = v22;
        uint64_t v7 = *(unsigned __int8 **)v27;
      }
      uint64_t v15 = sub_120FE50(a3, (uint64_t)v22, v7);
    }
    else
    {
      if (v11 != 1 || v8 != 10) {
        goto LABEL_14;
      }
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v24 = *(void *)(a1 + 8);
      unint64_t v25 = (uint64_t *)(v24 & 0xFFFFFFFFFFFFFFFCLL);
      if (v24) {
        unint64_t v25 = (uint64_t *)*v25;
      }
      uint64_t v26 = (std::string *)sub_1880F84((void *)(a1 + 48), v25);
      uint64_t v15 = (void *)sub_188C244(v26, *(char **)v27, (uint64_t)a3);
    }
LABEL_40:
    *(void *)int v27 = v15;
    if (!v15) {
      goto LABEL_46;
    }
LABEL_41:
    if (sub_11947B8((uint64_t)a3, (char **)v27, a3[11].i32[1])) {
      return *(void *)v27;
    }
  }
  if (v8 == 26)
  {
    unint64_t v16 = (char *)(v7 - 1);
    while (1)
    {
      unint64_t v17 = (unsigned __int8 *)(v16 + 1);
      *(void *)int v27 = v16 + 1;
      uint64_t v18 = *(_DWORD **)(a1 + 40);
      if (v18 && (uint64_t v19 = *(int *)(a1 + 32), (int)v19 < *v18))
      {
        *(_DWORD *)(a1 + 32) = v19 + 1;
        uint64_t v20 = *(void *)&v18[2 * v19 + 2];
      }
      else
      {
        uint64_t v21 = sub_185089C(*(void *)(a1 + 24));
        uint64_t v20 = sub_188CDC8(a1 + 24, v21);
        unint64_t v17 = *(unsigned __int8 **)v27;
      }
      unint64_t v16 = sub_12688D0(a3, v20, v17);
      *(void *)int v27 = v16;
      if (!v16) {
        goto LABEL_46;
      }
      if (*(void *)a3 <= (unint64_t)v16 || *v16 != 26) {
        goto LABEL_41;
      }
    }
  }
LABEL_14:
  if (v8) {
    BOOL v13 = (v8 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v6)
    {
      uint64_t v14 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = *(unsigned __int8 **)v27;
    }
    uint64_t v15 = sub_1885AC0(v8, v14, (char *)v7, a3);
    goto LABEL_40;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v27;
  }
LABEL_46:
  *(void *)int v27 = 0;
  return *(void *)v27;
}

unsigned char *sub_17FE208(uint64_t a1, unsigned char *__dst, void *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v7 = *(void *)(a1 + 56);
    *uint64_t v4 = 18;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    uint64_t v4 = sub_1792424(v7, (unint64_t)v9, a3);
  }
  int v10 = *(_DWORD *)(a1 + 32);
  if (v10)
  {
    for (int i = 0; i != v10; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v12 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *uint64_t v4 = 26;
      unsigned int v13 = *(_DWORD *)(v12 + 44);
      v4[1] = v13;
      if (v13 > 0x7F) {
        uint64_t v14 = sub_188A9CC(v13, v4 + 1);
      }
      else {
        uint64_t v14 = v4 + 2;
      }
      uint64_t v4 = sub_184B3AC(v12, v14, a3);
    }
  }
  uint64_t v15 = *(void *)(a1 + 8);
  if ((v15 & 1) == 0) {
    return v4;
  }
  unint64_t v17 = v15 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v17 + 31) < 0)
  {
    uint64_t v18 = *(void **)(v17 + 8);
    uint64_t v19 = *(void *)(v17 + 16);
  }
  else
  {
    uint64_t v18 = (void *)(v17 + 8);
    LODWORD(v19) = *(unsigned __int8 *)(v17 + 31);
  }
  if (*a3 - (void)v4 >= (int)v19)
  {
    uint64_t v20 = (int)v19;
    memcpy(v4, v18, (int)v19);
    v4 += v20;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v18, v19, v4);
}

uint64_t sub_17FE3D4(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_184B568(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 3) != 0)
  {
    if (v8)
    {
      unint64_t v9 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v10 = *(unsigned __int8 *)(v9 + 23);
      uint64_t v11 = *(void *)(v9 + 8);
      if ((v10 & 0x80u) == 0) {
        uint64_t v11 = v10;
      }
      v2 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v8 & 2) != 0)
    {
      uint64_t v12 = sub_1792638(*(void *)(a1 + 56));
      v2 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if (v13)
  {
    unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v15 + 31) < 0) {
      uint64_t v16 = *(void *)(v15 + 16);
    }
    else {
      uint64_t v16 = *(unsigned __int8 *)(v15 + 31);
    }
    v2 += v16;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

void sub_17FE504(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_12C4B74((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    int v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 3) != 0)
  {
    if (v9)
    {
      uint64_t v10 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v11 = *(void *)(a1 + 8);
      uint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        uint64_t v12 = (uint64_t *)*v12;
      }
      sub_1881DF4((std::string **)(a1 + 48), v10, v12);
    }
    if ((v9 & 2) != 0)
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      uint64_t v13 = *(void **)(a1 + 56);
      if (!v13)
      {
        uint64_t v14 = *(void *)(a1 + 8);
        unint64_t v15 = (void *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
        if (v14) {
          unint64_t v15 = (void *)*v15;
        }
        uint64_t v13 = sub_18302C8((uint64_t)v15);
        *(void *)(a1 + 56) = v13;
      }
      if (*(void *)(a2 + 56)) {
        uint64_t v16 = *(uint64_t (****)())(a2 + 56);
      }
      else {
        uint64_t v16 = &off_2549800;
      }
      sub_1792730((uint64_t)v13, (uint64_t)v16);
    }
  }
  uint64_t v17 = *(void *)(a2 + 8);
  if (v17)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v17 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

BOOL sub_17FE660(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  while ((int)v2 >= 1)
  {
    uint64_t v3 = v2 - 1;
    char v4 = sub_16CE508(*(void *)(*(void *)(a1 + 40) + 8 * v2));
    uint64_t v2 = v3;
    if ((v4 & 1) == 0) {
      return 0;
    }
  }
  if ((*(unsigned char *)(a1 + 16) & 2) == 0) {
    return 1;
  }
  uint64_t v6 = *(void *)(a1 + 56);
  if ((*(unsigned char *)(v6 + 16) & 1) == 0) {
    return 1;
  }
  BOOL result = sub_15B1FC0(*(void *)(v6 + 24));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_17FE6D0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.AutocompleteParameters.AutocompleteParametersCollectionOnly");
}

uint64_t sub_17FE6E0(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  char v4 = (uint64_t *)(a1 + 8);
  *(void *)a1 = off_24DF218;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 36) = 0;
  *(void *)(a1 + 20) = 0;
  *(void *)(a1 + 28) = 0;
  int v5 = *(_DWORD *)(a2 + 24);
  if (v5)
  {
    sub_188C80C((unsigned int *)(a1 + 24), v5);
    uint64_t v6 = *(void **)(a1 + 32);
    *(_DWORD *)(a1 + 24) += *(_DWORD *)(a2 + 24);
    memcpy(v6, *(const void **)(a2 + 32), 4 * *(int *)(a2 + 24));
  }
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0;
  int v7 = *(_DWORD *)(a2 + 40);
  if (v7)
  {
    sub_188C80C((unsigned int *)(a1 + 40), v7);
    int v8 = *(void **)(a1 + 48);
    *(_DWORD *)(a1 + 40) += *(_DWORD *)(a2 + 40);
    memcpy(v8, *(const void **)(a2 + 48), 4 * *(int *)(a2 + 40));
  }
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    sub_188C80C((unsigned int *)(a1 + 56), v9);
    uint64_t v10 = *(void **)(a1 + 64);
    *(_DWORD *)(a1 + 56) += *(_DWORD *)(a2 + 56);
    memcpy(v10, *(const void **)(a2 + 64), 4 * *(int *)(a2 + 56));
  }
  uint64_t v11 = *(void *)(a2 + 8);
  if (v11) {
    sub_188B4F8(v4, (v11 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  int v12 = *(_DWORD *)(a2 + 16);
  if (v12) {
    operator new();
  }
  *(void *)(a1 + 72) = 0;
  if ((v12 & 2) != 0) {
    operator new();
  }
  *(void *)(a1 + 80) = 0;
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  return a1;
}

void sub_17FE898()
{
}

uint64_t sub_17FE91C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  char v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  if ((uint64_t (***)())a1 != &off_254BD60)
  {
    int v5 = *(void **)(a1 + 72);
    if (v5)
    {
      sub_12A1ED8(v5);
      operator delete();
    }
    uint64_t v6 = *(void **)(a1 + 80);
    if (v6)
    {
      sub_12A263C(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  sub_1889DA8(a1 + 56);
  sub_1889DA8(a1 + 40);
  sub_1889DA8(a1 + 24);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17FEA04(uint64_t a1)
{
  sub_17FE91C(a1);

  operator delete();
}

uint64_t sub_17FEA3C(uint64_t result)
{
  uint64_t v1 = result;
  *(_DWORD *)(result + 24) = 0;
  *(_DWORD *)(result + 40) = 0;
  *(_DWORD *)(result + 56) = 0;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 3) != 0)
  {
    if (v2) {
      BOOL result = sub_1292140(*(void *)(result + 72));
    }
    if ((v2 & 2) != 0) {
      BOOL result = sub_1292158(*(void *)(v1 + 80));
    }
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(unsigned char *)(v3 + 80) = 0;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_17FEABC(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v53 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v53, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (2)
  {
    int v8 = v53 + 1;
    unsigned int v9 = *v53;
    if (*v53 < 0)
    {
      int v10 = *v8;
      unsigned int v11 = v9 + (v10 << 7);
      unsigned int v9 = v11 - 128;
      if (v10 < 0)
      {
        int v8 = (char *)sub_188C180((uint64_t)v53, v11 - 128);
        unsigned int v9 = v12;
      }
      else
      {
        int v8 = v53 + 2;
      }
    }
    uint64_t v53 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 == 8)
        {
          uint64_t v13 = v8 - 1;
          while (1)
          {
            uint64_t v53 = v13 + 1;
            unint64_t v14 = v13[1];
            unint64_t v15 = v13 + 2;
            if (v13[1] < 0)
            {
              int v16 = *v15;
              int v17 = v14 + (v16 << 7);
              unint64_t v14 = (v17 - 128);
              if (v16 < 0)
              {
                uint64_t v53 = (char *)sub_188C138((uint64_t)(v13 + 1), (v17 - 128));
                if (!v53) {
                  goto LABEL_108;
                }
                unint64_t v14 = v20;
                goto LABEL_15;
              }
              unint64_t v15 = v13 + 3;
            }
            uint64_t v53 = v15;
LABEL_15:
            if (sub_130C2F4(v14))
            {
              uint64_t v18 = *(unsigned int *)(a1 + 24);
              if (v18 == *(_DWORD *)(a1 + 28))
              {
                int v19 = v18 + 1;
                sub_188C80C((unsigned int *)(a1 + 24), v18 + 1);
                *(_DWORD *)(*(void *)(a1 + 32) + 4 * v18) = v14;
              }
              else
              {
                *(_DWORD *)(*(void *)(a1 + 32) + 4 * v18) = v14;
                int v19 = v18 + 1;
              }
              *(_DWORD *)(a1 + 24) = v19;
            }
            else
            {
              if (*v7) {
                uint64_t v21 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
              }
              else {
                uint64_t v21 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              }
              sub_188C020(1, v14, v21);
            }
            uint64_t v13 = v53;
            if (*(void *)a3 <= (unint64_t)v53 || *v53 != 8) {
              goto LABEL_103;
            }
          }
        }
        if (v9 != 10) {
          goto LABEL_95;
        }
        *(void *)&long long v54 = a1 + 24;
        *((void *)&v54 + 1) = sub_130C2F4;
        uint64_t v55 = a1 + 8;
        int v50 = 1;
        goto LABEL_94;
      case 2u:
        if (v9 != 18) {
          goto LABEL_95;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v22 = *(void *)(a1 + 72);
        if (!v22)
        {
          int v23 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            int v23 = (void *)*v23;
          }
          uint64_t v22 = sub_12BBC50((uint64_t)v23);
          *(void *)(a1 + 72) = v22;
          int v8 = v53;
        }
        uint64_t v24 = sub_1292FD0(a3, v22, (unsigned __int8 *)v8);
        goto LABEL_102;
      case 3u:
        if (v9 == 24)
        {
          unint64_t v25 = v8 - 1;
          while (1)
          {
            uint64_t v53 = v25 + 1;
            unint64_t v26 = v25[1];
            int v27 = v25 + 2;
            if (v25[1] < 0)
            {
              int v28 = *v27;
              int v29 = v26 + (v28 << 7);
              unint64_t v26 = (v29 - 128);
              if (v28 < 0)
              {
                uint64_t v53 = (char *)sub_188C138((uint64_t)(v25 + 1), (v29 - 128));
                if (!v53) {
                  goto LABEL_108;
                }
                unint64_t v26 = v32;
                goto LABEL_41;
              }
              int v27 = v25 + 3;
            }
            uint64_t v53 = v27;
LABEL_41:
            if (sub_16BAF04(v26))
            {
              uint64_t v30 = *(unsigned int *)(a1 + 40);
              if (v30 == *(_DWORD *)(a1 + 44))
              {
                int v31 = v30 + 1;
                sub_188C80C((unsigned int *)(a1 + 40), v30 + 1);
                *(_DWORD *)(*(void *)(a1 + 48) + 4 * v30) = v26;
              }
              else
              {
                *(_DWORD *)(*(void *)(a1 + 48) + 4 * v30) = v26;
                int v31 = v30 + 1;
              }
              *(_DWORD *)(a1 + 40) = v31;
            }
            else
            {
              if (*v7) {
                int v33 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
              }
              else {
                int v33 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              }
              sub_188C020(3, v26, v33);
            }
            unint64_t v25 = v53;
            if (*(void *)a3 <= (unint64_t)v53 || *v53 != 24) {
              goto LABEL_103;
            }
          }
        }
        if (v9 != 26) {
          goto LABEL_95;
        }
        *(void *)&long long v54 = a1 + 40;
        *((void *)&v54 + 1) = sub_16BAF04;
        uint64_t v55 = a1 + 8;
        int v50 = 3;
        goto LABEL_94;
      case 4u:
        if (v9 != 32) {
          goto LABEL_95;
        }
        v5 |= 4u;
        unint64_t v34 = v8 + 1;
        uint64_t v35 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_59;
        }
        int v36 = *v34;
        uint64_t v35 = v35 + (v36 << 7) - 128;
        if (v36 < 0)
        {
          uint64_t v48 = (char *)sub_188C138((uint64_t)v8, v35);
          uint64_t v53 = v48;
          *(unsigned char *)(a1 + 88) = v49 != 0;
          if (!v48) {
            goto LABEL_108;
          }
        }
        else
        {
          unint64_t v34 = v8 + 2;
LABEL_59:
          uint64_t v53 = v34;
          *(unsigned char *)(a1 + 88) = v35 != 0;
        }
        goto LABEL_103;
      case 8u:
        if (v9 == 64)
        {
          uint64_t v37 = v8 - 1;
          while (1)
          {
            uint64_t v53 = v37 + 1;
            unint64_t v38 = v37[1];
            int v39 = v37 + 2;
            if (v37[1] < 0)
            {
              int v40 = *v39;
              int v41 = v38 + (v40 << 7);
              unint64_t v38 = (v41 - 128);
              if (v40 < 0)
              {
                uint64_t v53 = (char *)sub_188C138((uint64_t)(v37 + 1), (v41 - 128));
                if (!v53) {
                  goto LABEL_108;
                }
                unint64_t v38 = v44;
                goto LABEL_66;
              }
              int v39 = v37 + 3;
            }
            uint64_t v53 = v39;
LABEL_66:
            if (sub_129EB78(v38))
            {
              uint64_t v42 = *(unsigned int *)(a1 + 56);
              if (v42 == *(_DWORD *)(a1 + 60))
              {
                int v43 = v42 + 1;
                sub_188C80C((unsigned int *)(a1 + 56), v42 + 1);
                *(_DWORD *)(*(void *)(a1 + 64) + 4 * v42) = v38;
              }
              else
              {
                *(_DWORD *)(*(void *)(a1 + 64) + 4 * v42) = v38;
                int v43 = v42 + 1;
              }
              *(_DWORD *)(a1 + 56) = v43;
            }
            else
            {
              if (*v7) {
                uint64_t v45 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
              }
              else {
                uint64_t v45 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              }
              sub_188C020(8, v38, v45);
            }
            uint64_t v37 = v53;
            if (*(void *)a3 <= (unint64_t)v53 || *v53 != 64) {
              goto LABEL_103;
            }
          }
        }
        if (v9 == 66)
        {
          *(void *)&long long v54 = a1 + 56;
          *((void *)&v54 + 1) = sub_129EB78;
          uint64_t v55 = a1 + 8;
          int v50 = 8;
LABEL_94:
          int v56 = v50;
          uint64_t v24 = sub_1112E88((uint64_t)a3, v8, &v54);
LABEL_102:
          uint64_t v53 = v24;
          if (!v24) {
            goto LABEL_108;
          }
LABEL_103:
          if (sub_11947B8((uint64_t)a3, &v53, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
LABEL_95:
        if (v9) {
          BOOL v51 = (v9 & 7) == 4;
        }
        else {
          BOOL v51 = 1;
        }
        if (!v51)
        {
          if (*v7)
          {
            uint64_t v52 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v52 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            int v8 = v53;
          }
          uint64_t v24 = (char *)sub_1885AC0(v9, v52, v8, a3);
          goto LABEL_102;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_108:
        }
          uint64_t v53 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v53;
      case 9u:
        if (v9 != 74) {
          goto LABEL_95;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v46 = *(void *)(a1 + 80);
        if (!v46)
        {
          int v47 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            int v47 = (void *)*v47;
          }
          uint64_t v46 = sub_12BBCF8((uint64_t)v47);
          *(void *)(a1 + 80) = v46;
          int v8 = v53;
        }
        uint64_t v24 = sub_12930FC(a3, v46, (unsigned __int8 *)v8);
        goto LABEL_102;
      default:
        goto LABEL_95;
    }
  }
}

char *sub_17FF0BC(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v6 = *(unsigned int *)(a1 + 24);
  if ((int)v6 >= 1)
  {
    for (uint64_t i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      unint64_t v8 = *(int *)(*(void *)(a1 + 32) + 4 * i);
      *__dst = 8;
      __dst[1] = v8;
      if (v8 > 0x7F)
      {
        __dst[1] = v8 | 0x80;
        unint64_t v9 = v8 >> 7;
        __dst[2] = v8 >> 7;
        __dst += 3;
        if (v8 >= 0x4000)
        {
          do
          {
            *(__dst - 1) |= 0x80u;
            unint64_t v10 = v9 >> 14;
            v9 >>= 7;
            *__dst++ = v9;
          }
          while (v10);
        }
      }
      else
      {
        __dst += 2;
      }
    }
  }
  int v11 = *(_DWORD *)(a1 + 16);
  if (v11)
  {
    if (*(void *)a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    uint64_t v12 = *(void *)(a1 + 72);
    *__dst = 18;
    unsigned int v13 = *(_DWORD *)(v12 + 48);
    __dst[1] = v13;
    if (v13 > 0x7F) {
      unint64_t v14 = sub_188A9CC(v13, __dst + 1);
    }
    else {
      unint64_t v14 = __dst + 2;
    }
    __dst = sub_12A21F4(v12, v14, a3);
  }
  uint64_t v15 = *(unsigned int *)(a1 + 40);
  if ((int)v15 >= 1)
  {
    for (uint64_t j = 0; j != v15; ++j)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      unint64_t v17 = *(int *)(*(void *)(a1 + 48) + 4 * j);
      *__dst = 24;
      __dst[1] = v17;
      if (v17 > 0x7F)
      {
        __dst[1] = v17 | 0x80;
        unint64_t v18 = v17 >> 7;
        __dst[2] = v17 >> 7;
        __dst += 3;
        if (v17 >= 0x4000)
        {
          do
          {
            *(__dst - 1) |= 0x80u;
            unint64_t v19 = v18 >> 14;
            v18 >>= 7;
            *__dst++ = v18;
          }
          while (v19);
        }
      }
      else
      {
        __dst += 2;
      }
    }
  }
  if ((v11 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    char v20 = *(unsigned char *)(a1 + 88);
    *__dst = 32;
    __dst[1] = v20;
    __dst += 2;
  }
  uint64_t v21 = *(unsigned int *)(a1 + 56);
  if ((int)v21 >= 1)
  {
    for (uint64_t k = 0; k != v21; ++k)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      unint64_t v23 = *(int *)(*(void *)(a1 + 64) + 4 * k);
      *__dst = 64;
      __dst[1] = v23;
      if (v23 > 0x7F)
      {
        __dst[1] = v23 | 0x80;
        unint64_t v24 = v23 >> 7;
        __dst[2] = v23 >> 7;
        __dst += 3;
        if (v23 >= 0x4000)
        {
          do
          {
            *(__dst - 1) |= 0x80u;
            unint64_t v25 = v24 >> 14;
            v24 >>= 7;
            *__dst++ = v24;
          }
          while (v25);
        }
      }
      else
      {
        __dst += 2;
      }
    }
  }
  if ((v11 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    uint64_t v26 = *(void *)(a1 + 80);
    *__dst = 74;
    unsigned int v27 = *(_DWORD *)(v26 + 48);
    __dst[1] = v27;
    if (v27 > 0x7F) {
      int v28 = sub_188A9CC(v27, __dst + 1);
    }
    else {
      int v28 = __dst + 2;
    }
    __dst = sub_12A29F8(v26, v28, a3);
  }
  uint64_t v29 = *(void *)(a1 + 8);
  if ((v29 & 1) == 0) {
    return __dst;
  }
  unint64_t v31 = v29 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v31 + 31) < 0)
  {
    unint64_t v32 = *(void **)(v31 + 8);
    uint64_t v33 = *(void *)(v31 + 16);
  }
  else
  {
    unint64_t v32 = (void *)(v31 + 8);
    LODWORD(v33) = *(unsigned __int8 *)(v31 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v33)
  {
    uint64_t v34 = (int)v33;
    memcpy(__dst, v32, (int)v33);
    __dst += v34;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v32, v33, __dst);
}

uint64_t sub_17FF454(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 24);
  if (v2)
  {
    int v3 = 0;
    uint64_t v4 = 0;
    do
    {
      int v5 = *(_DWORD *)(*(void *)(a1 + 32) + 4 * v3);
      if (v5 < 0) {
        uint64_t v6 = 10;
      }
      else {
        uint64_t v6 = (9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6;
      }
      v4 += v6;
      ++v3;
    }
    while (v2 != v3);
  }
  else
  {
    uint64_t v4 = 0;
  }
  uint64_t v7 = *(unsigned int *)(a1 + 40);
  if (v7)
  {
    int v8 = 0;
    uint64_t v9 = 0;
    do
    {
      int v10 = *(_DWORD *)(*(void *)(a1 + 48) + 4 * v8);
      if (v10 < 0) {
        uint64_t v11 = 10;
      }
      else {
        uint64_t v11 = (9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6;
      }
      v9 += v11;
      ++v8;
    }
    while (v7 != v8);
  }
  else
  {
    uint64_t v9 = 0;
  }
  uint64_t v12 = *(unsigned int *)(a1 + 56);
  if (v12)
  {
    int v13 = 0;
    uint64_t v14 = 0;
    do
    {
      int v15 = *(_DWORD *)(*(void *)(a1 + 64) + 4 * v13);
      if (v15 < 0) {
        uint64_t v16 = 10;
      }
      else {
        uint64_t v16 = (9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6;
      }
      v14 += v16;
      ++v13;
    }
    while (v12 != v13);
  }
  else
  {
    uint64_t v14 = 0;
  }
  uint64_t v17 = v4 + v2 + v7 + v9 + v12 + v14;
  int v18 = *(_DWORD *)(a1 + 16);
  if ((v18 & 7) != 0)
  {
    if (v18)
    {
      uint64_t v19 = sub_12A23E0(*(void *)(a1 + 72));
      v17 += v19 + ((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v18 & 2) != 0)
    {
      uint64_t v20 = sub_12A2BE4(*(void *)(a1 + 80));
      v17 += v20 + ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v18 & 4) != 0) {
      v17 += 2;
    }
  }
  uint64_t v21 = *(void *)(a1 + 8);
  if (v21)
  {
    unint64_t v23 = v21 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v23 + 31) < 0) {
      uint64_t v24 = *(void *)(v23 + 16);
    }
    else {
      uint64_t v24 = *(unsigned __int8 *)(v23 + 31);
    }
    v17 += v24;
  }
  *(_DWORD *)(a1 + 20) = v17;
  return v17;
}

std::string *sub_17FF638(std::string *result, uint64_t a2)
{
  int v3 = result;
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    int v5 = result + 1;
    uint64_t data_low = SLODWORD(result[1].__r_.__value_.__l.__data_);
    sub_188C80C((unsigned int *)&result[1], data_low + v4);
    std::string::size_type size = v3[1].__r_.__value_.__l.__size_;
    LODWORD(v5->__r_.__value_.__l.__data_) += *(_DWORD *)(a2 + 24);
    BOOL result = (std::string *)memcpy((void *)(size + 4 * data_low), *(const void **)(a2 + 32), 4 * *(int *)(a2 + 24));
  }
  int v8 = *(_DWORD *)(a2 + 40);
  if (v8)
  {
    uint64_t v9 = SLODWORD(v3[1].__r_.__value_.__r.__words[2]);
    sub_188C80C((unsigned int *)&v3[1].__r_.__value_.__r.__words[2], v9 + v8);
    std::string::pointer data = v3[2].__r_.__value_.__l.__data_;
    LODWORD(v3[1].__r_.__value_.__r.__words[2]) += *(_DWORD *)(a2 + 40);
    BOOL result = (std::string *)memcpy(&data[4 * v9], *(const void **)(a2 + 48), 4 * *(int *)(a2 + 40));
  }
  int v11 = *(_DWORD *)(a2 + 56);
  if (v11)
  {
    uint64_t v12 = SLODWORD(v3[2].__r_.__value_.__r.__words[1]);
    sub_188C80C((unsigned int *)&v3[2].__r_.__value_.__r.__words[1], v12 + v11);
    std::string::size_type v13 = v3[2].__r_.__value_.__r.__words[2];
    LODWORD(v3[2].__r_.__value_.__r.__words[1]) += *(_DWORD *)(a2 + 56);
    BOOL result = (std::string *)memcpy((void *)(v13 + 4 * v12), *(const void **)(a2 + 64), 4 * *(int *)(a2 + 56));
  }
  int v14 = *(_DWORD *)(a2 + 16);
  if ((v14 & 7) != 0)
  {
    if (v14)
    {
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      uint64_t v16 = (std::string *)v3[3].__r_.__value_.__l.__data_;
      if (!v16)
      {
        std::string::size_type v17 = v3->__r_.__value_.__l.__size_;
        int v18 = (void *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
        if (v17) {
          int v18 = (void *)*v18;
        }
        uint64_t v16 = (std::string *)sub_12BBC50((uint64_t)v18);
        v3[3].__r_.__value_.__r.__words[0] = (std::string::size_type)v16;
      }
      if (*(void *)(a2 + 72)) {
        uint64_t v19 = *(uint64_t (****)())(a2 + 72);
      }
      else {
        uint64_t v19 = &off_25308E8;
      }
      BOOL result = sub_11D640C(v16, (uint64_t)v19);
      if ((v14 & 2) == 0)
      {
LABEL_10:
        if ((v14 & 4) == 0)
        {
LABEL_12:
          LODWORD(v3->__r_.__value_.__r.__words[2]) |= v14;
          goto LABEL_13;
        }
LABEL_11:
        v3[3].__r_.__value_.__s.__data_[16] = *(unsigned char *)(a2 + 88);
        goto LABEL_12;
      }
    }
    else if ((v14 & 2) == 0)
    {
      goto LABEL_10;
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    uint64_t v20 = (std::string *)v3[3].__r_.__value_.__l.__size_;
    if (!v20)
    {
      std::string::size_type v21 = v3->__r_.__value_.__l.__size_;
      uint64_t v22 = (void *)(v21 & 0xFFFFFFFFFFFFFFFCLL);
      if (v21) {
        uint64_t v22 = (void *)*v22;
      }
      uint64_t v20 = (std::string *)sub_12BBCF8((uint64_t)v22);
      v3[3].__r_.__value_.__l.__size_ = (std::string::size_type)v20;
    }
    if (*(void *)(a2 + 80)) {
      unint64_t v23 = *(uint64_t (****)())(a2 + 80);
    }
    else {
      unint64_t v23 = &off_2530920;
    }
    BOOL result = sub_11D640C(v20, (uint64_t)v23);
    if ((v14 & 4) == 0) {
      goto LABEL_12;
    }
    goto LABEL_11;
  }
LABEL_13:
  uint64_t v15 = *(void *)(a2 + 8);
  if (v15)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v15 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_17FF82C()
{
  return 1;
}

void *sub_17FF834@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.AutocompleteParameters.AutocompleteFilter");
}

uint64_t sub_17FF844(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  *(void *)(a1 + 8) = v5;
  *(void *)a1 = off_24DF298;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = a2;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 158) = 0u;
  return a1;
}

void sub_17FF8C4(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_17FF8F4(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = a1 + 16;
  *(void *)a1 = off_24DF298;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 60) = 0;
  *(void *)(a1 + 44) = 0;
  *(void *)(a1 + 52) = 0;
  int v6 = *(_DWORD *)(a2 + 48);
  if (v6)
  {
    sub_188C80C((unsigned int *)(a1 + 48), v6);
    uint64_t v7 = *(void **)(a1 + 56);
    *(_DWORD *)(a1 + 48) += *(_DWORD *)(a2 + 48);
    memcpy(v7, *(const void **)(a2 + 56), 4 * *(int *)(a2 + 48));
  }
  uint64_t v8 = *(void *)(a2 + 8);
  if (v8) {
    sub_188B4F8(v4, (v8 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v5, a2 + 16);
  int v9 = *(_DWORD *)(a2 + 40);
  if (v9) {
    operator new();
  }
  *(void *)(a1 + 64) = 0;
  if ((v9 & 2) != 0) {
    operator new();
  }
  *(void *)(a1 + 72) = 0;
  if ((v9 & 4) != 0) {
    operator new();
  }
  *(void *)(a1 + 80) = 0;
  if ((v9 & 8) != 0) {
    operator new();
  }
  *(void *)(a1 + 88) = 0;
  if ((v9 & 0x10) != 0) {
    operator new();
  }
  *(void *)(a1 + 96) = 0;
  if ((v9 & 0x20) != 0) {
    operator new();
  }
  *(void *)(a1 + 104) = 0;
  if ((v9 & 0x40) != 0) {
    operator new();
  }
  *(void *)(a1 + 112) = 0;
  if ((v9 & 0x80) != 0) {
    operator new();
  }
  *(void *)(a1 + 120) = 0;
  if ((v9 & 0x100) != 0) {
    operator new();
  }
  *(void *)(a1 + 128) = 0;
  if ((v9 & 0x200) != 0) {
    operator new();
  }
  *(void *)(a1 + 136) = 0;
  if ((v9 & 0x400) != 0) {
    operator new();
  }
  *(void *)(a1 + 144) = 0;
  if ((v9 & 0x800) != 0) {
    operator new();
  }
  *(void *)(a1 + 152) = 0;
  if ((v9 & 0x1000) != 0) {
    operator new();
  }
  *(void *)(a1 + 160) = 0;
  int v10 = *(_DWORD *)(a2 + 168);
  *(_WORD *)(a1 + 172) = *(_WORD *)(a2 + 172);
  *(_DWORD *)(a1 + 168) = v10;
  return a1;
}

void sub_17FFCB8()
{
}

void *sub_17FFDB4(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_17FFE48((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  sub_1889DA8((uint64_t)(a1 + 6));
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

uint64_t sub_17FFE48(uint64_t result)
{
  if ((uint64_t (***)())result != &off_254BDC0)
  {
    uint64_t v1 = (void *)result;
    uint64_t v2 = *(void *)(result + 64);
    if (v2)
    {
      sub_17F3D08(v2);
      operator delete();
    }
    uint64_t v3 = v1[9];
    if (v3)
    {
      sub_17F4740(v3);
      operator delete();
    }
    uint64_t v4 = v1[10];
    if (v4)
    {
      sub_17F5058(v4);
      operator delete();
    }
    uint64_t v5 = (void *)v1[11];
    if (v5)
    {
      sub_17F6F8C(v5);
      operator delete();
    }
    uint64_t v6 = v1[12];
    if (v6)
    {
      sub_17F9B28(v6);
      operator delete();
    }
    uint64_t v7 = v1[13];
    if (v7)
    {
      sub_17FA760(v7);
      operator delete();
    }
    uint64_t v8 = v1[14];
    if (v8)
    {
      sub_17FB108(v8);
      operator delete();
    }
    uint64_t v9 = v1[15];
    if (v9)
    {
      sub_17FC20C(v9);
      operator delete();
    }
    uint64_t v10 = v1[16];
    if (v10)
    {
      sub_17FCB24(v10);
      operator delete();
    }
    uint64_t v11 = v1[17];
    if (v11)
    {
      sub_17FD43C(v11);
      operator delete();
    }
    uint64_t v12 = v1[18];
    if (v12)
    {
      sub_17FE91C(v12);
      operator delete();
    }
    std::string::size_type v13 = (void *)v1[19];
    if (v13)
    {
      sub_130C960(v13);
      operator delete();
    }
    BOOL result = v1[20];
    if (result)
    {
      sub_17FDDD8(result);
      operator delete();
    }
  }
  return result;
}

void sub_1800034(void *a1)
{
  sub_17FFDB4(a1);

  operator delete();
}

uint64_t sub_180006C(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  *(_DWORD *)(a1 + 48) = 0;
  int v3 = *(_DWORD *)(a1 + 40);
  if (!(_BYTE)v3) {
    goto LABEL_11;
  }
  if (v3)
  {
    uint64_t result = (uint64_t)sub_17F3E0C(*(unsigned char **)(a1 + 64));
    if ((v3 & 2) == 0)
    {
LABEL_4:
      if ((v3 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_26;
    }
  }
  else if ((v3 & 2) == 0)
  {
    goto LABEL_4;
  }
  uint64_t result = (uint64_t)sub_17F4844(*(unsigned char **)(a1 + 72));
  if ((v3 & 4) == 0)
  {
LABEL_5:
    if ((v3 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_27;
  }
LABEL_26:
  uint64_t result = (uint64_t)sub_17F515C(*(unsigned char **)(a1 + 80));
  if ((v3 & 8) == 0)
  {
LABEL_6:
    if ((v3 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_28;
  }
LABEL_27:
  uint64_t result = sub_17F71C8(*(void *)(a1 + 88));
  if ((v3 & 0x10) == 0)
  {
LABEL_7:
    if ((v3 & 0x20) == 0) {
      goto LABEL_8;
    }
LABEL_29:
    uint64_t result = (uint64_t)sub_17FA864(*(unsigned char **)(a1 + 104));
    if ((v3 & 0x40) == 0)
    {
LABEL_9:
      if ((v3 & 0x80) == 0) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
    goto LABEL_30;
  }
LABEL_28:
  uint64_t result = (uint64_t)sub_17F9C48(*(unsigned char **)(a1 + 96));
  if ((v3 & 0x20) != 0) {
    goto LABEL_29;
  }
LABEL_8:
  if ((v3 & 0x40) == 0) {
    goto LABEL_9;
  }
LABEL_30:
  uint64_t result = sub_17FB214(*(void *)(a1 + 112));
  if ((v3 & 0x80) != 0) {
LABEL_10:
  }
    uint64_t result = (uint64_t)sub_17FC310(*(unsigned char **)(a1 + 120));
LABEL_11:
  if ((v3 & 0x1F00) == 0) {
    goto LABEL_18;
  }
  if ((v3 & 0x100) != 0)
  {
    uint64_t result = (uint64_t)sub_17FCC28(*(unsigned char **)(a1 + 128));
    if ((v3 & 0x200) == 0)
    {
LABEL_14:
      if ((v3 & 0x400) == 0) {
        goto LABEL_15;
      }
      goto LABEL_34;
    }
  }
  else if ((v3 & 0x200) == 0)
  {
    goto LABEL_14;
  }
  uint64_t result = (uint64_t)sub_17FD540(*(unsigned char **)(a1 + 136));
  if ((v3 & 0x400) == 0)
  {
LABEL_15:
    if ((v3 & 0x800) == 0) {
      goto LABEL_16;
    }
    goto LABEL_35;
  }
LABEL_34:
  uint64_t result = sub_17FEA3C(*(void *)(a1 + 144));
  if ((v3 & 0x800) == 0)
  {
LABEL_16:
    if ((v3 & 0x1000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_17;
  }
LABEL_35:
  uint64_t result = (uint64_t)sub_130C99C(*(void *)(a1 + 152));
  if ((v3 & 0x1000) != 0) {
LABEL_17:
  }
    uint64_t result = (uint64_t)sub_17FDEE8(*(unsigned char **)(a1 + 160));
LABEL_18:
  if ((v3 & 0xE000) != 0)
  {
    *(_WORD *)(a1 + 172) = 0;
    *(_DWORD *)(a1 + 168) = 0;
  }
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t v4 = a1 + 8;
  *(_DWORD *)(v4 + 32) = 0;
  if (v5)
  {
    return sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

char *sub_18001B8(uint64_t a1, char *a2, int32x2_t *a3)
{
  char v70 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v70, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = v70 + 1;
    unsigned int v9 = *v70;
    if (*v70 < 0)
    {
      int v10 = *v8;
      unsigned int v11 = v9 + (v10 << 7);
      unsigned int v9 = v11 - 128;
      if (v10 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v70, v11 - 128);
        unsigned int v9 = v12;
      }
      else
      {
        uint64_t v8 = v70 + 2;
      }
    }
    char v70 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_132;
        }
        std::string::size_type v13 = v8 + 1;
        unint64_t v14 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v15 = *v13;
        int v16 = v14 + (v15 << 7);
        unint64_t v14 = (v16 - 128);
        if (v15 < 0)
        {
          char v70 = (char *)sub_188C138((uint64_t)v8, (v16 - 128));
          if (!v70) {
            goto LABEL_151;
          }
          unint64_t v14 = v62;
        }
        else
        {
          std::string::size_type v13 = v8 + 2;
LABEL_13:
          char v70 = v13;
        }
        if (v14 > 0xA)
        {
          if (*v7) {
            int v69 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            int v69 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(1, v14, v69);
        }
        else
        {
          *(_DWORD *)(a1 + 40) |= 0x2000u;
          *(_DWORD *)(a1 + 168) = v14;
        }
        goto LABEL_142;
      case 2u:
        if (v9 != 18) {
          goto LABEL_132;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        uint64_t v17 = *(void *)(a1 + 64);
        if (!v17)
        {
          int v18 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            int v18 = (void *)*v18;
          }
          uint64_t v17 = sub_1834AD4((uint64_t)v18);
          *(void *)(a1 + 64) = v17;
          uint64_t v8 = v70;
        }
        uint64_t v19 = (char *)sub_1800A88(a3, v17, (unsigned __int8 *)v8);
        goto LABEL_141;
      case 3u:
        if (v9 != 26) {
          goto LABEL_132;
        }
        *(_DWORD *)(a1 + 40) |= 2u;
        uint64_t v20 = *(void *)(a1 + 72);
        if (!v20)
        {
          std::string::size_type v21 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            std::string::size_type v21 = (void *)*v21;
          }
          uint64_t v20 = sub_1834B64((uint64_t)v21);
          *(void *)(a1 + 72) = v20;
          uint64_t v8 = v70;
        }
        uint64_t v19 = (char *)sub_1800B18(a3, v20, (unsigned __int8 *)v8);
        goto LABEL_141;
      case 4u:
        if (v9 != 34) {
          goto LABEL_132;
        }
        *(_DWORD *)(a1 + 40) |= 4u;
        uint64_t v22 = *(void *)(a1 + 80);
        if (!v22)
        {
          unint64_t v23 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            unint64_t v23 = (void *)*v23;
          }
          uint64_t v22 = sub_1834BF4((uint64_t)v23);
          *(void *)(a1 + 80) = v22;
          uint64_t v8 = v70;
        }
        uint64_t v19 = (char *)sub_1800BA8(a3, v22, (unsigned __int8 *)v8);
        goto LABEL_141;
      case 5u:
        if (v9 != 42) {
          goto LABEL_132;
        }
        *(_DWORD *)(a1 + 40) |= 8u;
        uint64_t v24 = *(void *)(a1 + 88);
        if (!v24)
        {
          unint64_t v25 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            unint64_t v25 = (void *)*v25;
          }
          sub_1834D7C((uint64_t)v25);
          uint64_t v24 = v26;
          *(void *)(a1 + 88) = v26;
          uint64_t v8 = v70;
        }
        uint64_t v19 = (char *)sub_1800C38(a3, v24, (unsigned __int8 *)v8);
        goto LABEL_141;
      case 6u:
        if (v9 != 50) {
          goto LABEL_132;
        }
        *(_DWORD *)(a1 + 40) |= 0x10u;
        uint64_t v27 = *(void *)(a1 + 96);
        if (!v27)
        {
          int v28 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            int v28 = (void *)*v28;
          }
          uint64_t v27 = sub_1834E34((uint64_t)v28);
          *(void *)(a1 + 96) = v27;
          uint64_t v8 = v70;
        }
        uint64_t v19 = (char *)sub_1800CC8(a3, v27, (unsigned __int8 *)v8);
        goto LABEL_141;
      case 7u:
        if (v9 != 58) {
          goto LABEL_132;
        }
        *(_DWORD *)(a1 + 40) |= 0x20u;
        uint64_t v29 = *(void *)(a1 + 104);
        if (!v29)
        {
          uint64_t v30 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v30 = (void *)*v30;
          }
          uint64_t v29 = sub_1834EC8((uint64_t)v30);
          *(void *)(a1 + 104) = v29;
          uint64_t v8 = v70;
        }
        uint64_t v19 = (char *)sub_1800D58(a3, v29, (unsigned __int8 *)v8);
        goto LABEL_141;
      case 8u:
        if (v9 != 66) {
          goto LABEL_132;
        }
        *(_DWORD *)(a1 + 40) |= 0x40u;
        uint64_t v31 = *(void *)(a1 + 112);
        if (!v31)
        {
          unint64_t v32 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            unint64_t v32 = (void *)*v32;
          }
          sub_1834F58((uint64_t)v32);
          uint64_t v31 = v33;
          *(void *)(a1 + 112) = v33;
          uint64_t v8 = v70;
        }
        uint64_t v19 = (char *)sub_1800DE8(a3, v31, (unsigned __int8 *)v8);
        goto LABEL_141;
      case 9u:
        if (v9 != 74) {
          goto LABEL_132;
        }
        *(_DWORD *)(a1 + 40) |= 0x80u;
        uint64_t v34 = *(void *)(a1 + 120);
        if (!v34)
        {
          uint64_t v35 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v35 = (void *)*v35;
          }
          uint64_t v34 = sub_1835014((uint64_t)v35);
          *(void *)(a1 + 120) = v34;
          uint64_t v8 = v70;
        }
        uint64_t v19 = (char *)sub_1800E78(a3, v34, (unsigned __int8 *)v8);
        goto LABEL_141;
      case 0xAu:
        if (v9 != 82) {
          goto LABEL_132;
        }
        *(_DWORD *)(a1 + 40) |= 0x100u;
        uint64_t v36 = *(void *)(a1 + 128);
        if (!v36)
        {
          uint64_t v37 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v37 = (void *)*v37;
          }
          uint64_t v36 = sub_18350A4((uint64_t)v37);
          *(void *)(a1 + 128) = v36;
          uint64_t v8 = v70;
        }
        uint64_t v19 = (char *)sub_1800F08(a3, v36, (unsigned __int8 *)v8);
        goto LABEL_141;
      case 0xBu:
        if (v9 != 90) {
          goto LABEL_132;
        }
        *(_DWORD *)(a1 + 40) |= 0x200u;
        uint64_t v38 = *(void *)(a1 + 136);
        if (!v38)
        {
          int v39 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            int v39 = (void *)*v39;
          }
          uint64_t v38 = sub_1835134((uint64_t)v39);
          *(void *)(a1 + 136) = v38;
          uint64_t v8 = v70;
        }
        uint64_t v19 = (char *)sub_1800F98(a3, v38, (unsigned __int8 *)v8);
        goto LABEL_141;
      case 0xCu:
        if (v9 != 98) {
          goto LABEL_132;
        }
        *(_DWORD *)(a1 + 40) |= 0x400u;
        uint64_t v40 = *(void *)(a1 + 144);
        if (!v40)
        {
          int v41 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            int v41 = (void *)*v41;
          }
          sub_1835268((uint64_t)v41);
          uint64_t v40 = v42;
          *(void *)(a1 + 144) = v42;
          uint64_t v8 = v70;
        }
        uint64_t v19 = sub_1801028(a3, v40, (unsigned __int8 *)v8);
        goto LABEL_141;
      case 0xDu:
        if (v9 != 104) {
          goto LABEL_132;
        }
        v5 |= 0x4000u;
        int v43 = v8 + 1;
        uint64_t v44 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_86;
        }
        int v45 = *v43;
        uint64_t v44 = v44 + (v45 << 7) - 128;
        if (v45 < 0)
        {
          uint64_t v63 = (char *)sub_188C138((uint64_t)v8, v44);
          char v70 = v63;
          *(unsigned char *)(a1 + 172) = v64 != 0;
          if (!v63) {
            goto LABEL_151;
          }
        }
        else
        {
          int v43 = v8 + 2;
LABEL_86:
          char v70 = v43;
          *(unsigned char *)(a1 + 172) = v44 != 0;
        }
        goto LABEL_142;
      case 0xEu:
        if (v9 != 112) {
          goto LABEL_132;
        }
        v5 |= 0x8000u;
        uint64_t v46 = v8 + 1;
        uint64_t v47 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_91;
        }
        int v48 = *v46;
        uint64_t v47 = v47 + (v48 << 7) - 128;
        if (v48 < 0)
        {
          unint64_t v65 = (char *)sub_188C138((uint64_t)v8, v47);
          char v70 = v65;
          *(unsigned char *)(a1 + 173) = v66 != 0;
          if (!v65) {
            goto LABEL_151;
          }
        }
        else
        {
          uint64_t v46 = v8 + 2;
LABEL_91:
          char v70 = v46;
          *(unsigned char *)(a1 + 173) = v47 != 0;
        }
        goto LABEL_142;
      case 0xFu:
        if (v9 != 122) {
          goto LABEL_132;
        }
        *(_DWORD *)(a1 + 40) |= 0x800u;
        uint64_t v49 = *(void *)(a1 + 152);
        if (!v49)
        {
          int v50 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            int v50 = (void *)*v50;
          }
          uint64_t v49 = sub_131B2B4((uint64_t)v50);
          *(void *)(a1 + 152) = v49;
          uint64_t v8 = v70;
        }
        uint64_t v19 = sub_1797340(a3, v49, (unsigned __int8 *)v8);
        goto LABEL_141;
      case 0x10u:
        if (v9 != 130) {
          goto LABEL_132;
        }
        *(_DWORD *)(a1 + 40) |= 0x1000u;
        BOOL v51 = *(void **)(a1 + 160);
        if (!v51)
        {
          uint64_t v52 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v52 = (void *)*v52;
          }
          BOOL v51 = sub_18351C4((uint64_t)v52);
          *(void *)(a1 + 160) = v51;
          uint64_t v8 = v70;
        }
        uint64_t v19 = (char *)sub_18010B8(a3, (uint64_t)v51, (unsigned __int8 *)v8);
        goto LABEL_141;
      case 0x11u:
        if (v9 == 136)
        {
          uint64_t v53 = v8 - 2;
          while (1)
          {
            char v70 = v53 + 2;
            unint64_t v54 = v53[2];
            uint64_t v55 = v53 + 3;
            if (v53[2] < 0)
            {
              int v56 = *v55;
              int v57 = v54 + (v56 << 7);
              unint64_t v54 = (v57 - 128);
              if (v56 < 0)
              {
                char v70 = (char *)sub_188C138((uint64_t)(v53 + 2), (v57 - 128));
                if (!v70) {
                  goto LABEL_151;
                }
                unint64_t v54 = v60;
                goto LABEL_110;
              }
              uint64_t v55 = v53 + 4;
            }
            char v70 = v55;
LABEL_110:
            if (v54 > 6)
            {
              if (*v7) {
                uint64_t v61 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
              }
              else {
                uint64_t v61 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              }
              sub_188C020(17, v54, v61);
            }
            else
            {
              uint64_t v58 = *(unsigned int *)(a1 + 48);
              if (v58 == *(_DWORD *)(a1 + 52))
              {
                int v59 = v58 + 1;
                sub_188C80C((unsigned int *)(a1 + 48), v58 + 1);
                *(_DWORD *)(*(void *)(a1 + 56) + 4 * v58) = v54;
              }
              else
              {
                *(_DWORD *)(*(void *)(a1 + 56) + 4 * v58) = v54;
                int v59 = v58 + 1;
              }
              *(_DWORD *)(a1 + 48) = v59;
            }
            uint64_t v53 = v70;
            if (*(void *)a3 <= (unint64_t)v70 || *(_WORD *)v70 != 392) {
              goto LABEL_142;
            }
          }
        }
        if (v9 == 138)
        {
          *(void *)&long long v71 = a1 + 48;
          *((void *)&v71 + 1) = sub_1764FEC;
          uint64_t v72 = a1 + 8;
          int v73 = 17;
          uint64_t v19 = sub_1112E88((uint64_t)a3, v8, &v71);
LABEL_141:
          char v70 = v19;
          if (!v19) {
            goto LABEL_151;
          }
LABEL_142:
          if (sub_11947B8((uint64_t)a3, &v70, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
LABEL_132:
        if (v9) {
          BOOL v67 = (v9 & 7) == 4;
        }
        else {
          BOOL v67 = 1;
        }
        if (!v67)
        {
          if ((v9 - 8000) >> 6 > 0x7C)
          {
            if (*v7)
            {
              unsigned int v68 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              unsigned int v68 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              uint64_t v8 = v70;
            }
            uint64_t v19 = (char *)sub_1885AC0(v9, v68, v8, a3);
          }
          else
          {
            uint64_t v19 = (char *)sub_18859DC((uint64_t **)(a1 + 16), v9, v8, (uint64_t)&off_254BDC0, (uint64_t *)(a1 + 8), a3);
          }
          goto LABEL_141;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_151:
        }
          char v70 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 40) |= v5;
        return v70;
      default:
        goto LABEL_132;
    }
  }
}

uint64_t sub_1800A88(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17F3EB4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_1800B18(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17F48EC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_1800BA8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17F5204(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_1800C38(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17F7334(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_1800CC8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17F9D24(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_1800D58(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17FA90C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_1800DE8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17FB2CC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_1800E78(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17FC3B8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_1800F08(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17FCCD0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_1800F98(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17FD5E8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1801028(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17FEABC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_18010B8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17FDFB0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1801148(uint64_t a1, char *a2, unint64_t *a3)
{
  uint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if ((v6 & 0x2000) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unint64_t v7 = *(int *)(a1 + 168);
    *uint64_t v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 64);
    *uint64_t v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 20);
    v4[1] = v11;
    if (v11 > 0x7F) {
      unsigned int v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      unsigned int v12 = v4 + 2;
    }
    uint64_t v4 = sub_17F4178(v10, v12, a3);
    if ((v6 & 2) == 0)
    {
LABEL_10:
      if ((v6 & 4) == 0) {
        goto LABEL_11;
      }
      goto LABEL_36;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_10;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v13 = *(void *)(a1 + 72);
  *uint64_t v4 = 26;
  unsigned int v14 = *(_DWORD *)(v13 + 20);
  v4[1] = v14;
  if (v14 > 0x7F) {
    int v15 = sub_188A9CC(v14, v4 + 1);
  }
  else {
    int v15 = v4 + 2;
  }
  uint64_t v4 = sub_17F4BB0(v13, v15, a3);
  if ((v6 & 4) == 0)
  {
LABEL_11:
    if ((v6 & 8) == 0) {
      goto LABEL_12;
    }
    goto LABEL_42;
  }
LABEL_36:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v16 = *(void *)(a1 + 80);
  *uint64_t v4 = 34;
  unsigned int v17 = *(_DWORD *)(v16 + 20);
  v4[1] = v17;
  if (v17 > 0x7F) {
    int v18 = sub_188A9CC(v17, v4 + 1);
  }
  else {
    int v18 = v4 + 2;
  }
  uint64_t v4 = sub_17F54C8(v16, v18, a3);
  if ((v6 & 8) == 0)
  {
LABEL_12:
    if ((v6 & 0x10) == 0) {
      goto LABEL_13;
    }
    goto LABEL_48;
  }
LABEL_42:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v19 = *(void *)(a1 + 88);
  *uint64_t v4 = 42;
  unsigned int v20 = *(_DWORD *)(v19 + 20);
  v4[1] = v20;
  if (v20 > 0x7F) {
    std::string::size_type v21 = sub_188A9CC(v20, v4 + 1);
  }
  else {
    std::string::size_type v21 = v4 + 2;
  }
  uint64_t v4 = sub_17F83C4(v19, v21, a3);
  if ((v6 & 0x10) == 0)
  {
LABEL_13:
    if ((v6 & 0x20) == 0) {
      goto LABEL_14;
    }
    goto LABEL_54;
  }
LABEL_48:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v22 = *(void *)(a1 + 96);
  *uint64_t v4 = 50;
  unsigned int v23 = *(_DWORD *)(v22 + 20);
  v4[1] = v23;
  if (v23 > 0x7F) {
    uint64_t v24 = sub_188A9CC(v23, v4 + 1);
  }
  else {
    uint64_t v24 = v4 + 2;
  }
  uint64_t v4 = sub_17FA09C(v22, v24, a3);
  if ((v6 & 0x20) == 0)
  {
LABEL_14:
    if ((v6 & 0x40) == 0) {
      goto LABEL_15;
    }
    goto LABEL_60;
  }
LABEL_54:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v25 = *(void *)(a1 + 104);
  *uint64_t v4 = 58;
  unsigned int v26 = *(_DWORD *)(v25 + 20);
  v4[1] = v26;
  if (v26 > 0x7F) {
    uint64_t v27 = sub_188A9CC(v26, v4 + 1);
  }
  else {
    uint64_t v27 = v4 + 2;
  }
  uint64_t v4 = sub_17FABD0(v25, v27, a3);
  if ((v6 & 0x40) == 0)
  {
LABEL_15:
    if ((v6 & 0x80) == 0) {
      goto LABEL_16;
    }
    goto LABEL_66;
  }
LABEL_60:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v28 = *(void *)(a1 + 112);
  *uint64_t v4 = 66;
  unsigned int v29 = *(_DWORD *)(v28 + 20);
  v4[1] = v29;
  if (v29 > 0x7F) {
    uint64_t v30 = sub_188A9CC(v29, v4 + 1);
  }
  else {
    uint64_t v30 = v4 + 2;
  }
  uint64_t v4 = sub_17FB7F8(v28, v30, a3);
  if ((v6 & 0x80) == 0)
  {
LABEL_16:
    if ((v6 & 0x100) == 0) {
      goto LABEL_17;
    }
    goto LABEL_72;
  }
LABEL_66:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v31 = *(void *)(a1 + 120);
  *uint64_t v4 = 74;
  unsigned int v32 = *(_DWORD *)(v31 + 20);
  v4[1] = v32;
  if (v32 > 0x7F) {
    uint64_t v33 = sub_188A9CC(v32, v4 + 1);
  }
  else {
    uint64_t v33 = v4 + 2;
  }
  uint64_t v4 = sub_17FC67C(v31, v33, a3);
  if ((v6 & 0x100) == 0)
  {
LABEL_17:
    if ((v6 & 0x200) == 0) {
      goto LABEL_18;
    }
    goto LABEL_78;
  }
LABEL_72:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v34 = *(void *)(a1 + 128);
  *uint64_t v4 = 82;
  unsigned int v35 = *(_DWORD *)(v34 + 20);
  v4[1] = v35;
  if (v35 > 0x7F) {
    uint64_t v36 = sub_188A9CC(v35, v4 + 1);
  }
  else {
    uint64_t v36 = v4 + 2;
  }
  uint64_t v4 = sub_17FCF94(v34, v36, a3);
  if ((v6 & 0x200) == 0)
  {
LABEL_18:
    if ((v6 & 0x400) == 0) {
      goto LABEL_19;
    }
    goto LABEL_84;
  }
LABEL_78:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v37 = *(void *)(a1 + 136);
  *uint64_t v4 = 90;
  unsigned int v38 = *(_DWORD *)(v37 + 20);
  v4[1] = v38;
  if (v38 > 0x7F) {
    int v39 = sub_188A9CC(v38, v4 + 1);
  }
  else {
    int v39 = v4 + 2;
  }
  uint64_t v4 = sub_17FD8AC(v37, v39, a3);
  if ((v6 & 0x400) == 0)
  {
LABEL_19:
    if ((v6 & 0x4000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_90;
  }
LABEL_84:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v40 = *(void *)(a1 + 144);
  *uint64_t v4 = 98;
  unsigned int v41 = *(_DWORD *)(v40 + 20);
  v4[1] = v41;
  if (v41 > 0x7F) {
    uint64_t v42 = sub_188A9CC(v41, v4 + 1);
  }
  else {
    uint64_t v42 = v4 + 2;
  }
  uint64_t v4 = sub_17FF0BC(v40, v42, a3);
  if ((v6 & 0x4000) == 0)
  {
LABEL_20:
    if ((v6 & 0x8000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_93;
  }
LABEL_90:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v43 = *(unsigned char *)(a1 + 172);
  *uint64_t v4 = 104;
  v4[1] = v43;
  v4 += 2;
  if ((v6 & 0x8000) == 0)
  {
LABEL_21:
    if ((v6 & 0x800) == 0) {
      goto LABEL_22;
    }
    goto LABEL_96;
  }
LABEL_93:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v44 = *(unsigned char *)(a1 + 173);
  *uint64_t v4 = 112;
  v4[1] = v44;
  v4 += 2;
  if ((v6 & 0x800) == 0)
  {
LABEL_22:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_108;
    }
    goto LABEL_102;
  }
LABEL_96:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v45 = *(void *)(a1 + 152);
  *uint64_t v4 = 122;
  unsigned int v46 = *(_DWORD *)(v45 + 40);
  v4[1] = v46;
  if (v46 > 0x7F) {
    uint64_t v47 = sub_188A9CC(v46, v4 + 1);
  }
  else {
    uint64_t v47 = v4 + 2;
  }
  uint64_t v4 = sub_130CB34(v45, v47, a3);
  if ((v6 & 0x1000) != 0)
  {
LABEL_102:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v48 = *(void *)(a1 + 160);
    *(_WORD *)uint64_t v4 = 386;
    unsigned int v49 = *(_DWORD *)(v48 + 20);
    v4[2] = v49;
    if (v49 > 0x7F) {
      int v50 = sub_188A9CC(v49, v4 + 2);
    }
    else {
      int v50 = v4 + 3;
    }
    uint64_t v4 = sub_17FE208(v48, v50, a3);
  }
LABEL_108:
  uint64_t v51 = *(unsigned int *)(a1 + 48);
  if ((int)v51 >= 1)
  {
    for (uint64_t i = 0; i != v51; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v53 = *(int *)(*(void *)(a1 + 56) + 4 * i);
      *(_WORD *)uint64_t v4 = 392;
      v4[2] = v53;
      if (v53 > 0x7F)
      {
        v4[2] = v53 | 0x80;
        unint64_t v54 = v53 >> 7;
        v4[3] = v53 >> 7;
        v4 += 4;
        if (v53 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v55 = v54 >> 14;
            v54 >>= 7;
            *v4++ = v54;
          }
          while (v55);
        }
      }
      else
      {
        v4 += 3;
      }
    }
  }
  if (*(_WORD *)(a1 + 26)) {
    uint64_t v4 = sub_1886844(a1 + 16, 1000, 2000, v4, a3);
  }
  uint64_t v56 = *(void *)(a1 + 8);
  if ((v56 & 1) == 0) {
    return v4;
  }
  unint64_t v58 = v56 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v58 + 31) < 0)
  {
    int v59 = *(void **)(v58 + 8);
    uint64_t v60 = *(void *)(v58 + 16);
  }
  else
  {
    int v59 = (void *)(v58 + 8);
    LODWORD(v60) = *(unsigned __int8 *)(v58 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v60)
  {
    uint64_t v61 = (int)v60;
    memcpy(v4, v59, (int)v60);
    v4 += v61;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v59, v60, v4);
}

uint64_t sub_18018FC(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(unsigned int *)(a1 + 48);
  if (v3)
  {
    int v4 = 0;
    uint64_t v5 = 0;
    do
    {
      int v6 = *(_DWORD *)(*(void *)(a1 + 56) + 4 * v4);
      if (v6 < 0) {
        uint64_t v7 = 10;
      }
      else {
        uint64_t v7 = (9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6;
      }
      v5 += v7;
      ++v4;
    }
    while (v3 != v4);
  }
  else
  {
    uint64_t v5 = 0;
  }
  uint64_t v8 = v2 + 2 * v3 + v5;
  int v9 = *(_DWORD *)(a1 + 40);
  if (!(_BYTE)v9) {
    goto LABEL_19;
  }
  if (v9)
  {
    uint64_t v17 = sub_17F4374(*(void *)(a1 + 64));
    v8 += v17 + ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v9 & 2) == 0)
    {
LABEL_12:
      if ((v9 & 4) == 0) {
        goto LABEL_13;
      }
      goto LABEL_39;
    }
  }
  else if ((v9 & 2) == 0)
  {
    goto LABEL_12;
  }
  uint64_t v18 = sub_17F4DAC(*(void *)(a1 + 72));
  v8 += v18 + ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v9 & 4) == 0)
  {
LABEL_13:
    if ((v9 & 8) == 0) {
      goto LABEL_14;
    }
    goto LABEL_40;
  }
LABEL_39:
  uint64_t v19 = sub_17F56C4(*(void *)(a1 + 80));
  v8 += v19 + ((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v9 & 8) == 0)
  {
LABEL_14:
    if ((v9 & 0x10) == 0) {
      goto LABEL_15;
    }
    goto LABEL_41;
  }
LABEL_40:
  uint64_t v20 = sub_17F8E7C(*(void *)(a1 + 88));
  v8 += v20 + ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v9 & 0x10) == 0)
  {
LABEL_15:
    if ((v9 & 0x20) == 0) {
      goto LABEL_16;
    }
LABEL_42:
    uint64_t v22 = sub_17FADCC(*(void *)(a1 + 104));
    v8 += v22 + ((9 * (__clz(v22 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v9 & 0x40) == 0)
    {
LABEL_17:
      if ((v9 & 0x80) == 0) {
        goto LABEL_19;
      }
      goto LABEL_18;
    }
    goto LABEL_43;
  }
LABEL_41:
  uint64_t v21 = sub_17FA2FC(*(void *)(a1 + 96));
  v8 += v21 + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v9 & 0x20) != 0) {
    goto LABEL_42;
  }
LABEL_16:
  if ((v9 & 0x40) == 0) {
    goto LABEL_17;
  }
LABEL_43:
  uint64_t v23 = sub_17FBC98(*(void *)(a1 + 112));
  v8 += v23 + ((9 * (__clz(v23 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v9 & 0x80) != 0)
  {
LABEL_18:
    uint64_t v10 = sub_17FC878(*(void *)(a1 + 120));
    v8 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_19:
  if ((v9 & 0xFF00) == 0) {
    goto LABEL_35;
  }
  if ((v9 & 0x100) != 0)
  {
    uint64_t v24 = sub_17FD190(*(void *)(a1 + 128));
    v8 += v24 + ((9 * (__clz(v24 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v9 & 0x200) == 0)
    {
LABEL_22:
      if ((v9 & 0x400) == 0) {
        goto LABEL_23;
      }
      goto LABEL_47;
    }
  }
  else if ((v9 & 0x200) == 0)
  {
    goto LABEL_22;
  }
  uint64_t v25 = sub_17FDAA8(*(void *)(a1 + 136));
  v8 += v25 + ((9 * (__clz(v25 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v9 & 0x400) == 0)
  {
LABEL_23:
    if ((v9 & 0x800) == 0) {
      goto LABEL_24;
    }
    goto LABEL_48;
  }
LABEL_47:
  uint64_t v26 = sub_17FF454(*(void *)(a1 + 144));
  v8 += v26 + ((9 * (__clz(v26 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v9 & 0x800) == 0)
  {
LABEL_24:
    if ((v9 & 0x1000) == 0) {
      goto LABEL_25;
    }
LABEL_49:
    uint64_t v28 = sub_17FE3D4(*(void *)(a1 + 160));
    v8 += v28 + ((9 * (__clz(v28 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v9 & 0x2000) != 0) {
      goto LABEL_26;
    }
    goto LABEL_30;
  }
LABEL_48:
  uint64_t v27 = sub_130CC00(*(void *)(a1 + 152));
  v8 += v27 + ((9 * (__clz(v27 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v9 & 0x1000) != 0) {
    goto LABEL_49;
  }
LABEL_25:
  if ((v9 & 0x2000) != 0)
  {
LABEL_26:
    int v11 = *(_DWORD *)(a1 + 168);
    uint64_t v12 = ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if (v11 >= 0) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 11;
    }
    v8 += v13;
  }
LABEL_30:
  uint64_t v14 = v8 + 2;
  if ((v9 & 0x4000) == 0) {
    uint64_t v14 = v8;
  }
  if ((v9 & 0x8000) != 0) {
    uint64_t v8 = v14 + 2;
  }
  else {
    uint64_t v8 = v14;
  }
LABEL_35:
  uint64_t v15 = *(void *)(a1 + 8);
  if (v15)
  {
    unint64_t v29 = v15 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v29 + 31) < 0) {
      uint64_t v30 = *(void *)(v29 + 16);
    }
    else {
      uint64_t v30 = *(unsigned __int8 *)(v29 + 31);
    }
    v8 += v30;
  }
  *(_DWORD *)(a1 + 44) = v8;
  return v8;
}

void sub_1801CC4(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 48);
  if (v4)
  {
    uint64_t v5 = (_DWORD *)(a1 + 48);
    uint64_t v6 = *(int *)(a1 + 48);
    sub_188C80C((unsigned int *)(a1 + 48), v6 + v4);
    uint64_t v7 = *(void *)(a1 + 56);
    *v5 += *(_DWORD *)(a2 + 48);
    memcpy((void *)(v7 + 4 * v6), *(const void **)(a2 + 56), 4 * *(int *)(a2 + 48));
  }
  int v8 = *(_DWORD *)(a2 + 40);
  if (!(_BYTE)v8) {
    goto LABEL_77;
  }
  if (v8)
  {
    *(_DWORD *)(a1 + 40) |= 1u;
    uint64_t v9 = *(void *)(a1 + 64);
    if (!v9)
    {
      uint64_t v10 = *(void *)(a1 + 8);
      int v11 = (void *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
      if (v10) {
        int v11 = (void *)*v11;
      }
      uint64_t v9 = sub_1834AD4((uint64_t)v11);
      *(void *)(a1 + 64) = v9;
    }
    if (*(void *)(a2 + 64)) {
      uint64_t v12 = *(uint64_t (****)())(a2 + 64);
    }
    else {
      uint64_t v12 = &off_254BA18;
    }
    sub_17F449C(v9, (uint64_t)v12);
    if ((v8 & 2) == 0)
    {
LABEL_6:
      if ((v8 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_29;
    }
  }
  else if ((v8 & 2) == 0)
  {
    goto LABEL_6;
  }
  *(_DWORD *)(a1 + 40) |= 2u;
  uint64_t v13 = *(void *)(a1 + 72);
  if (!v13)
  {
    uint64_t v14 = *(void *)(a1 + 8);
    uint64_t v15 = (void *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
    if (v14) {
      uint64_t v15 = (void *)*v15;
    }
    uint64_t v13 = sub_1834B64((uint64_t)v15);
    *(void *)(a1 + 72) = v13;
  }
  if (*(void *)(a2 + 72)) {
    uint64_t v16 = *(uint64_t (****)())(a2 + 72);
  }
  else {
    uint64_t v16 = &off_254BA48;
  }
  sub_17F449C(v13, (uint64_t)v16);
  if ((v8 & 4) == 0)
  {
LABEL_7:
    if ((v8 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_37;
  }
LABEL_29:
  *(_DWORD *)(a1 + 40) |= 4u;
  uint64_t v17 = *(void *)(a1 + 80);
  if (!v17)
  {
    uint64_t v18 = *(void *)(a1 + 8);
    uint64_t v19 = (void *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
    if (v18) {
      uint64_t v19 = (void *)*v19;
    }
    uint64_t v17 = sub_1834BF4((uint64_t)v19);
    *(void *)(a1 + 80) = v17;
  }
  if (*(void *)(a2 + 80)) {
    uint64_t v20 = *(uint64_t (****)())(a2 + 80);
  }
  else {
    uint64_t v20 = &off_254BA78;
  }
  sub_17F449C(v17, (uint64_t)v20);
  if ((v8 & 8) == 0)
  {
LABEL_8:
    if ((v8 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_45;
  }
LABEL_37:
  *(_DWORD *)(a1 + 40) |= 8u;
  uint64_t v21 = *(void *)(a1 + 88);
  if (!v21)
  {
    uint64_t v22 = *(void *)(a1 + 8);
    uint64_t v23 = (void *)(v22 & 0xFFFFFFFFFFFFFFFCLL);
    if (v22) {
      uint64_t v23 = (void *)*v23;
    }
    sub_1834D7C((uint64_t)v23);
    *(void *)(a1 + 88) = v21;
  }
  if (*(void *)(a2 + 88)) {
    uint64_t v24 = *(uint64_t (****)())(a2 + 88);
  }
  else {
    uint64_t v24 = &off_254BAF8;
  }
  sub_17F93C8(v21, (uint64_t)v24);
  if ((v8 & 0x10) == 0)
  {
LABEL_9:
    if ((v8 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_53:
    *(_DWORD *)(a1 + 40) |= 0x20u;
    uint64_t v29 = *(void *)(a1 + 104);
    if (!v29)
    {
      uint64_t v30 = *(void *)(a1 + 8);
      uint64_t v31 = (void *)(v30 & 0xFFFFFFFFFFFFFFFCLL);
      if (v30) {
        uint64_t v31 = (void *)*v31;
      }
      uint64_t v29 = sub_1834EC8((uint64_t)v31);
      *(void *)(a1 + 104) = v29;
    }
    if (*(void *)(a2 + 104)) {
      unsigned int v32 = *(uint64_t (****)())(a2 + 104);
    }
    else {
      unsigned int v32 = &off_254BBF8;
    }
    sub_17F449C(v29, (uint64_t)v32);
    if ((v8 & 0x40) == 0)
    {
LABEL_11:
      if ((v8 & 0x80) == 0) {
        goto LABEL_77;
      }
      goto LABEL_69;
    }
    goto LABEL_61;
  }
LABEL_45:
  *(_DWORD *)(a1 + 40) |= 0x10u;
  uint64_t v25 = *(void *)(a1 + 96);
  if (!v25)
  {
    uint64_t v26 = *(void *)(a1 + 8);
    uint64_t v27 = (void *)(v26 & 0xFFFFFFFFFFFFFFFCLL);
    if (v26) {
      uint64_t v27 = (void *)*v27;
    }
    uint64_t v25 = sub_1834E34((uint64_t)v27);
    *(void *)(a1 + 96) = v25;
  }
  if (*(void *)(a2 + 96)) {
    uint64_t v28 = *(uint64_t (****)())(a2 + 96);
  }
  else {
    uint64_t v28 = &off_254BBC0;
  }
  sub_17FA474(v25, (uint64_t)v28);
  if ((v8 & 0x20) != 0) {
    goto LABEL_53;
  }
LABEL_10:
  if ((v8 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_61:
  *(_DWORD *)(a1 + 40) |= 0x40u;
  uint64_t v33 = *(void *)(a1 + 112);
  if (!v33)
  {
    uint64_t v34 = *(void *)(a1 + 8);
    unsigned int v35 = (void *)(v34 & 0xFFFFFFFFFFFFFFFCLL);
    if (v34) {
      unsigned int v35 = (void *)*v35;
    }
    sub_1834F58((uint64_t)v35);
    *(void *)(a1 + 112) = v33;
  }
  if (*(void *)(a2 + 112)) {
    uint64_t v36 = *(uint64_t (****)())(a2 + 112);
  }
  else {
    uint64_t v36 = &off_254BC28;
  }
  sub_17FBEB8(v33, (uint64_t)v36);
  if ((v8 & 0x80) != 0)
  {
LABEL_69:
    *(_DWORD *)(a1 + 40) |= 0x80u;
    uint64_t v37 = *(void *)(a1 + 120);
    if (!v37)
    {
      uint64_t v38 = *(void *)(a1 + 8);
      int v39 = (void *)(v38 & 0xFFFFFFFFFFFFFFFCLL);
      if (v38) {
        int v39 = (void *)*v39;
      }
      uint64_t v37 = sub_1835014((uint64_t)v39);
      *(void *)(a1 + 120) = v37;
    }
    if (*(void *)(a2 + 120)) {
      uint64_t v40 = *(uint64_t (****)())(a2 + 120);
    }
    else {
      uint64_t v40 = &off_254BC90;
    }
    sub_17F449C(v37, (uint64_t)v40);
  }
LABEL_77:
  if ((v8 & 0xFF00) == 0) {
    goto LABEL_88;
  }
  if ((v8 & 0x100) != 0)
  {
    *(_DWORD *)(a1 + 40) |= 0x100u;
    uint64_t v42 = *(void *)(a1 + 128);
    if (!v42)
    {
      uint64_t v43 = *(void *)(a1 + 8);
      char v44 = (void *)(v43 & 0xFFFFFFFFFFFFFFFCLL);
      if (v43) {
        char v44 = (void *)*v44;
      }
      uint64_t v42 = sub_18350A4((uint64_t)v44);
      *(void *)(a1 + 128) = v42;
    }
    if (*(void *)(a2 + 128)) {
      uint64_t v45 = *(uint64_t (****)())(a2 + 128);
    }
    else {
      uint64_t v45 = &off_254BCC0;
    }
    sub_17F449C(v42, (uint64_t)v45);
    if ((v8 & 0x200) == 0)
    {
LABEL_80:
      if ((v8 & 0x400) == 0) {
        goto LABEL_81;
      }
      goto LABEL_108;
    }
  }
  else if ((v8 & 0x200) == 0)
  {
    goto LABEL_80;
  }
  *(_DWORD *)(a1 + 40) |= 0x200u;
  uint64_t v46 = *(void *)(a1 + 136);
  if (!v46)
  {
    uint64_t v47 = *(void *)(a1 + 8);
    uint64_t v48 = (void *)(v47 & 0xFFFFFFFFFFFFFFFCLL);
    if (v47) {
      uint64_t v48 = (void *)*v48;
    }
    uint64_t v46 = sub_1835134((uint64_t)v48);
    *(void *)(a1 + 136) = v46;
  }
  if (*(void *)(a2 + 136)) {
    unsigned int v49 = *(uint64_t (****)())(a2 + 136);
  }
  else {
    unsigned int v49 = &off_254BCF0;
  }
  sub_17F449C(v46, (uint64_t)v49);
  if ((v8 & 0x400) == 0)
  {
LABEL_81:
    if ((v8 & 0x800) == 0) {
      goto LABEL_82;
    }
    goto LABEL_116;
  }
LABEL_108:
  *(_DWORD *)(a1 + 40) |= 0x400u;
  int v50 = *(std::string **)(a1 + 144);
  if (!v50)
  {
    uint64_t v51 = *(void *)(a1 + 8);
    uint64_t v52 = (void *)(v51 & 0xFFFFFFFFFFFFFFFCLL);
    if (v51) {
      uint64_t v52 = (void *)*v52;
    }
    sub_1835268((uint64_t)v52);
    *(void *)(a1 + 144) = v50;
  }
  if (*(void *)(a2 + 144)) {
    unint64_t v53 = *(uint64_t (****)())(a2 + 144);
  }
  else {
    unint64_t v53 = &off_254BD60;
  }
  sub_17FF638(v50, (uint64_t)v53);
  if ((v8 & 0x800) == 0)
  {
LABEL_82:
    if ((v8 & 0x1000) == 0) {
      goto LABEL_83;
    }
    goto LABEL_124;
  }
LABEL_116:
  *(_DWORD *)(a1 + 40) |= 0x800u;
  uint64_t v54 = *(void *)(a1 + 152);
  if (!v54)
  {
    uint64_t v55 = *(void *)(a1 + 8);
    uint64_t v56 = (void *)(v55 & 0xFFFFFFFFFFFFFFFCLL);
    if (v55) {
      uint64_t v56 = (void *)*v56;
    }
    uint64_t v54 = sub_131B2B4((uint64_t)v56);
    *(void *)(a1 + 152) = v54;
  }
  if (*(void *)(a2 + 152)) {
    int v57 = *(uint64_t (****)())(a2 + 152);
  }
  else {
    int v57 = &off_2532768;
  }
  sub_129AF38(v54, (uint64_t)v57);
  if ((v8 & 0x1000) == 0)
  {
LABEL_83:
    if ((v8 & 0x2000) == 0) {
      goto LABEL_84;
    }
    goto LABEL_132;
  }
LABEL_124:
  *(_DWORD *)(a1 + 40) |= 0x1000u;
  unint64_t v58 = *(void **)(a1 + 160);
  if (!v58)
  {
    uint64_t v59 = *(void *)(a1 + 8);
    uint64_t v60 = (void *)(v59 & 0xFFFFFFFFFFFFFFFCLL);
    if (v59) {
      uint64_t v60 = (void *)*v60;
    }
    unint64_t v58 = sub_18351C4((uint64_t)v60);
    *(void *)(a1 + 160) = v58;
  }
  if (*(void *)(a2 + 160)) {
    uint64_t v61 = *(uint64_t (****)())(a2 + 160);
  }
  else {
    uint64_t v61 = &off_254BD20;
  }
  sub_17FE504((uint64_t)v58, (uint64_t)v61);
  if ((v8 & 0x2000) == 0)
  {
LABEL_84:
    if ((v8 & 0x4000) == 0) {
      goto LABEL_85;
    }
LABEL_133:
    *(unsigned char *)(a1 + 172) = *(unsigned char *)(a2 + 172);
    if ((v8 & 0x8000) == 0) {
      goto LABEL_87;
    }
    goto LABEL_86;
  }
LABEL_132:
  *(_DWORD *)(a1 + 168) = *(_DWORD *)(a2 + 168);
  if ((v8 & 0x4000) != 0) {
    goto LABEL_133;
  }
LABEL_85:
  if ((v8 & 0x8000) != 0) {
LABEL_86:
  }
    *(unsigned char *)(a1 + 173) = *(unsigned char *)(a2 + 173);
LABEL_87:
  *(_DWORD *)(a1 + 40) |= v8;
LABEL_88:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v41 = *(void *)(a2 + 8);
  if (v41)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v41 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_18021D4(uint64_t a1)
{
  uint64_t result = sub_18856CC(a1 + 16);
  if (result)
  {
    int v3 = *(_DWORD *)(a1 + 40);
    if (v3)
    {
      uint64_t result = sub_17F45BC(*(void *)(a1 + 64));
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 2) != 0)
    {
      uint64_t result = sub_17F4ED4(*(void *)(a1 + 72));
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 4) != 0)
    {
      uint64_t result = sub_17F57EC(*(void *)(a1 + 80));
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 8) != 0)
    {
      uint64_t result = sub_17F9918(*(void *)(a1 + 88));
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 0x10) != 0)
    {
      uint64_t result = sub_17FA5DC(*(void *)(a1 + 96));
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 0x20) != 0)
    {
      uint64_t result = sub_17FAEF4(*(void *)(a1 + 104));
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 0x40) != 0)
    {
      uint64_t result = sub_17FC088(*(void *)(a1 + 112));
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 0x80) != 0)
    {
      uint64_t result = sub_17FC9A0(*(void *)(a1 + 120));
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 0x100) != 0)
    {
      uint64_t result = sub_17FD2B8(*(void *)(a1 + 128));
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 0x200) != 0)
    {
      uint64_t result = sub_17FDBD0(*(void *)(a1 + 136));
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 0x800) != 0)
    {
      uint64_t result = sub_130CC58(*(void *)(a1 + 152));
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 0x1000) == 0) {
      return 1;
    }
    uint64_t result = sub_17FE660(*(void *)(a1 + 160));
    if (result) {
      return 1;
    }
  }
  return result;
}

void *sub_18022F4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.AutocompleteParameters");
}

uint64_t sub_1802304(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = (uint64_t *)(a1 + 16);
  *(void *)a1 = off_24DF318;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  int v6 = *(_DWORD *)(a2 + 24);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 32);
    int v8 = (uint64_t *)sub_188CCE4(a1 + 16, *(_DWORD *)(a2 + 24));
    sub_12C5340(v5, v8, (uint64_t *)(v7 + 8), v6, **(_DWORD **)(a1 + 32) - *(_DWORD *)(a1 + 24));
    int v9 = *(_DWORD *)(a1 + 24) + v6;
    *(_DWORD *)(a1 + 24) = v9;
    uint64_t v10 = *(int **)(a1 + 32);
    if (*v10 < v9) {
      *uint64_t v10 = v9;
    }
  }
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0;
  int v11 = *(_DWORD *)(a2 + 40);
  if (v11)
  {
    sub_188C80C((unsigned int *)(a1 + 40), v11);
    uint64_t v12 = *(void **)(a1 + 48);
    *(_DWORD *)(a1 + 40) += *(_DWORD *)(a2 + 40);
    memcpy(v12, *(const void **)(a2 + 48), 4 * *(int *)(a2 + 40));
  }
  *(_DWORD *)(a1 + 56) = 0;
  uint64_t v13 = *(void *)(a2 + 8);
  if (v13) {
    sub_188B4F8(v4, (v13 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return a1;
}

void sub_1802420(_Unwind_Exception *a1)
{
  sub_1889DA8(v4);
  sub_12C5234(v3);
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_1802474(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1889DA8((uint64_t)(a1 + 5));
  sub_12C5234(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_18024FC(void *a1)
{
  sub_1802474(a1);

  operator delete();
}

uint64_t sub_1802534(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 24);
  if ((int)v2 >= 1)
  {
    int v3 = (uint64_t *)(*(void *)(result + 32) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_15B043C(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 24) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = v1 + 8;
  *(_DWORD *)(v5 + 32) = 0;
  if (v6)
  {
    return sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

char *sub_18025B4(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v31 = a2;
  if (sub_11947B8((uint64_t)a3, &v31, a3[11].i32[1])) {
    return v31;
  }
  char v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v31 + 1;
    unsigned int v8 = *v31;
    if (*v31 < 0)
    {
      int v9 = *v7;
      unsigned int v10 = v8 + (v9 << 7);
      unsigned int v8 = v10 - 128;
      if (v9 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v31, v10 - 128);
        unsigned int v8 = v11;
      }
      else
      {
        uint64_t v7 = v31 + 2;
      }
    }
    uint64_t v31 = v7;
    if (v8 >> 3 != 2) {
      break;
    }
    if (v8 == 16)
    {
      uint64_t v16 = v7 - 1;
      while (1)
      {
        uint64_t v31 = v16 + 1;
        unint64_t v17 = v16[1];
        uint64_t v18 = v16 + 2;
        if (v16[1] < 0)
        {
          int v19 = *v18;
          int v20 = v17 + (v19 << 7);
          unint64_t v17 = (v20 - 128);
          if (v19 < 0)
          {
            uint64_t v31 = (char *)sub_188C138((uint64_t)(v16 + 1), (v20 - 128));
            if (!v31) {
              return 0;
            }
            unint64_t v17 = v23;
            goto LABEL_28;
          }
          uint64_t v18 = v16 + 3;
        }
        uint64_t v31 = v18;
LABEL_28:
        if (sub_16BAF04(v17))
        {
          uint64_t v21 = *(unsigned int *)(a1 + 40);
          if (v21 == *(_DWORD *)(a1 + 44))
          {
            int v22 = v21 + 1;
            sub_188C80C((unsigned int *)(a1 + 40), v21 + 1);
            *(_DWORD *)(*(void *)(a1 + 48) + 4 * v21) = v17;
          }
          else
          {
            *(_DWORD *)(*(void *)(a1 + 48) + 4 * v21) = v17;
            int v22 = v21 + 1;
          }
          *(_DWORD *)(a1 + 40) = v22;
        }
        else
        {
          if (*v6) {
            uint64_t v24 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v24 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(2, v17, v24);
        }
        uint64_t v16 = v31;
        if (*(void *)a3 <= (unint64_t)v31 || *v31 != 16) {
          goto LABEL_50;
        }
      }
    }
    if (v8 == 18)
    {
      *(void *)&long long v32 = a1 + 40;
      *((void *)&v32 + 1) = sub_16BAF04;
      uint64_t v33 = a1 + 8;
      int v34 = 2;
      uint64_t v15 = sub_1112E88((uint64_t)a3, v7, &v32);
      goto LABEL_20;
    }
LABEL_13:
    if (v8) {
      BOOL v13 = (v8 & 7) == 4;
    }
    else {
      BOOL v13 = 1;
    }
    if (v13)
    {
      if (!v7) {
        return 0;
      }
      a3[10].i32[0] = v8 - 1;
      return v31;
    }
    if (*v6)
    {
      uint64_t v14 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = v31;
    }
    uint64_t v15 = (char *)sub_1885AC0(v8, v14, v7, a3);
LABEL_20:
    uint64_t v31 = v15;
    if (!v15) {
      return 0;
    }
LABEL_50:
    if (sub_11947B8((uint64_t)a3, &v31, a3[11].i32[1])) {
      return v31;
    }
  }
  if (v8 >> 3 != 1 || v8 != 10) {
    goto LABEL_13;
  }
  uint64_t v25 = v7 - 1;
  while (1)
  {
    uint64_t v26 = (unsigned __int8 *)(v25 + 1);
    uint64_t v31 = v25 + 1;
    uint64_t v27 = *(_DWORD **)(a1 + 32);
    if (v27 && (uint64_t v28 = *(int *)(a1 + 24), (int)v28 < *v27))
    {
      *(_DWORD *)(a1 + 24) = v28 + 1;
      uint64_t v29 = *(void *)&v27[2 * v28 + 2];
    }
    else
    {
      uint64_t v30 = sub_15C1CB4(*(void *)(a1 + 16));
      uint64_t v29 = sub_188CDC8(a1 + 16, v30);
      uint64_t v26 = (unsigned __int8 *)v31;
    }
    uint64_t v25 = sub_11B3E48(a3, v29, v26);
    uint64_t v31 = v25;
    if (!v25) {
      return 0;
    }
    if (*(void *)a3 <= (unint64_t)v25 || *v25 != 10) {
      goto LABEL_50;
    }
  }
}

char *sub_18028AC(uint64_t a1, char *__dst, _DWORD *a3)
{
  int v6 = *(_DWORD *)(a1 + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 44);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unsigned int v10 = __dst + 2;
      }
      __dst = sub_15B43E4(v8, v10, a3);
    }
  }
  uint64_t v11 = *(unsigned int *)(a1 + 40);
  if ((int)v11 >= 1)
  {
    for (uint64_t j = 0; j != v11; ++j)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      unint64_t v13 = *(int *)(*(void *)(a1 + 48) + 4 * j);
      *__dst = 16;
      __dst[1] = v13;
      if (v13 > 0x7F)
      {
        __dst[1] = v13 | 0x80;
        unint64_t v14 = v13 >> 7;
        __dst[2] = v13 >> 7;
        __dst += 3;
        if (v13 >= 0x4000)
        {
          do
          {
            *(__dst - 1) |= 0x80u;
            unint64_t v15 = v14 >> 14;
            v14 >>= 7;
            *__dst++ = v14;
          }
          while (v15);
        }
      }
      else
      {
        __dst += 2;
      }
    }
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return __dst;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    int v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    int v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(__dst, v19, (int)v20);
    __dst += v21;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v19, v20, __dst);
}

uint64_t sub_1802A8C(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_15B4924(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(unsigned int *)(a1 + 40);
  if (v8)
  {
    int v9 = 0;
    uint64_t v10 = 0;
    do
    {
      int v11 = *(_DWORD *)(*(void *)(a1 + 48) + 4 * v9);
      if (v11 < 0) {
        uint64_t v12 = 10;
      }
      else {
        uint64_t v12 = (9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6;
      }
      v10 += v12;
      ++v9;
    }
    while (v8 != v9);
  }
  else
  {
    uint64_t v10 = 0;
  }
  uint64_t result = v2 + v8 + v10;
  uint64_t v14 = *(void *)(a1 + 8);
  if (v14)
  {
    unint64_t v15 = v14 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v15 + 31) < 0) {
      uint64_t v16 = *(void *)(v15 + 16);
    }
    else {
      uint64_t v16 = *(unsigned __int8 *)(v15 + 31);
    }
    result += v16;
  }
  *(_DWORD *)(a1 + 56) = result;
  return result;
}

void sub_1802B94(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 32) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 16, *(_DWORD *)(a2 + 24));
    sub_12C5340((uint64_t *)(a1 + 16), v6, v5, v4, **(_DWORD **)(a1 + 32) - *(_DWORD *)(a1 + 24));
    int v7 = *(_DWORD *)(a1 + 24) + v4;
    *(_DWORD *)(a1 + 24) = v7;
    uint64_t v8 = *(int **)(a1 + 32);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 40);
  if (v9)
  {
    uint64_t v10 = *(int *)(a1 + 40);
    sub_188C80C((unsigned int *)(a1 + 40), v10 + v9);
    uint64_t v11 = *(void *)(a1 + 48);
    *(_DWORD *)(a1 + 40) += *(_DWORD *)(a2 + 40);
    memcpy((void *)(v11 + 4 * v10), *(const void **)(a2 + 48), 4 * *(int *)(a2 + 40));
  }
  uint64_t v12 = *(void *)(a2 + 8);
  if (v12)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v12 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

BOOL sub_1802CA8(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 24);
  do
  {
    int v3 = v2;
    if ((int)v2 < 1) {
      break;
    }
    uint64_t v4 = v2 - 1;
    char v5 = sub_15B06D8(*(void *)(*(void *)(a1 + 32) + 8 * v2));
    uint64_t v2 = v4;
  }
  while ((v5 & 1) != 0);
  return v3 < 1;
}

void *sub_1802D00@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.BatchReverseGeocodingParameters");
}

uint64_t sub_1802D10(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_24DF398;
  *(_DWORD *)(a1 + 16) = 0;
  uint64_t v3 = *(void *)(a2 + 8);
  if (v3) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v3 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return a1;
}

void sub_1802D7C(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_1802DAC(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1802E20(void *a1)
{
  sub_1802DAC(a1);

  operator delete();
}

uint64_t *sub_1802E58(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = (uint64_t *)(a1 + 8);
  if (v2) {
    return (uint64_t *)sub_188B4AC(result);
  }
  return result;
}

char *sub_1802E68(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v12 = a2;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  while (1)
  {
    if (sub_11947B8((uint64_t)a3, &v12, a3[11].i32[1])) {
      return v12;
    }
    char v5 = v12 + 1;
    unsigned int v6 = *v12;
    if (*v12 < 0)
    {
      unsigned int v7 = v6 + (*v5 << 7);
      unsigned int v6 = v7 - 128;
      if (*v5 < 0)
      {
        char v5 = (char *)sub_188C180((uint64_t)v12, v7 - 128);
        unsigned int v6 = v8;
      }
      else
      {
        char v5 = v12 + 2;
      }
    }
    uint64_t v12 = v5;
    if (!v6 || (v6 & 7) == 4) {
      break;
    }
    if (*v4)
    {
      uint64_t v10 = (std::string *)((*v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v10 = (std::string *)sub_188DBD8(v4);
      char v5 = v12;
    }
    uint64_t v12 = (char *)sub_1885AC0(v6, v10, v5, a3);
    if (!v12) {
      return 0;
    }
  }
  if (v5) {
    a3[10].i32[0] = v6 - 1;
  }
  return v5;
}

char *sub_1802F68(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v4 = *(void *)(a1 + 8);
  if ((v4 & 1) == 0) {
    return __dst;
  }
  unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v6 + 31) < 0)
  {
    unsigned int v7 = *(void **)(v6 + 8);
    unint64_t v6 = *(void *)(v6 + 16);
  }
  else
  {
    unsigned int v7 = (void *)(v6 + 8);
    LODWORD(v6) = *(unsigned __int8 *)(v6 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v6)
  {
    uint64_t v8 = (int)v6;
    memcpy(__dst, v7, (int)v6);
    __dst += v8;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v7, v6, __dst);
}

uint64_t sub_1803000(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (v1)
  {
    unint64_t v4 = v1 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v2 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v2 = *(unsigned __int8 *)(v4 + 31);
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  *(_DWORD *)(a1 + 16) = v2;
  return v2;
}

std::string *sub_1803034(std::string *result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 8);
  if (v2) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v2 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1803050()
{
  return 1;
}

void *sub_1803058@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.BatchReverseGeocodingResult");
}

uint64_t sub_1803068(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  unint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  char v5 = (uint64_t *)(a1 + 16);
  *(void *)a1 = off_24DF418;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  int v6 = *(_DWORD *)(a2 + 24);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 32);
    uint64_t v8 = (uint64_t *)sub_188CCE4(a1 + 16, *(_DWORD *)(a2 + 24));
    sub_10E4FFC(v5, v8, (uint64_t *)(v7 + 8), v6, **(_DWORD **)(a1 + 32) - *(_DWORD *)(a1 + 24));
    int v9 = *(_DWORD *)(a1 + 24) + v6;
    *(_DWORD *)(a1 + 24) = v9;
    uint64_t v10 = *(int **)(a1 + 32);
    if (*v10 < v9) {
      *uint64_t v10 = v9;
    }
  }
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  int v11 = *(_DWORD *)(a2 + 48);
  if (v11)
  {
    uint64_t v12 = *(void *)(a2 + 56);
    unint64_t v13 = (std::string **)sub_188CCE4(a1 + 40, *(_DWORD *)(a2 + 48));
    sub_1879278((std::string *)(a1 + 40), v13, (uint64_t *)(v12 + 8), v11, **(_DWORD **)(a1 + 56) - *(_DWORD *)(a1 + 48));
    int v14 = *(_DWORD *)(a1 + 48) + v11;
    *(_DWORD *)(a1 + 48) = v14;
    unint64_t v15 = *(int **)(a1 + 56);
    if (*v15 < v14) {
      int *v15 = v14;
    }
  }
  *(_DWORD *)(a1 + 64) = 0;
  uint64_t v16 = *(void *)(a2 + 8);
  if (v16) {
    sub_188B4F8(v4, (v16 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return a1;
}

void sub_18031B8(_Unwind_Exception *a1)
{
  sub_1877B38(v4);
  sub_11DB7D4(v3);
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_1803210(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1877B38(a1 + 5);
  sub_11DB7D4(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_180329C(void *a1)
{
  sub_1803210(a1);

  operator delete();
}

uint64_t sub_18032D4(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 24);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 32) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = (uint64_t)sub_15B09D0(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 24) = 0;
  }
  uint64_t v5 = *(unsigned int *)(v1 + 48);
  if ((int)v5 >= 1)
  {
    int v6 = (uint64_t *)(*(void *)(v1 + 56) + 8);
    do
    {
      uint64_t v7 = *v6++;
      uint64_t result = sub_16244A0(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(v1 + 48) = 0;
  }
  char v9 = *(unsigned char *)(v1 + 8);
  uint64_t v8 = (uint64_t *)(v1 + 8);
  if (v9)
  {
    return sub_188B4AC(v8);
  }
  return result;
}

char *sub_1803378(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v26 = a2;
  if ((sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1]) & 1) == 0)
  {
    int v6 = (void *)(a1 + 8);
    while (1)
    {
      uint64_t v7 = v26 + 1;
      unsigned int v8 = *v26;
      if (*v26 < 0)
      {
        unsigned int v9 = v8 + (*v7 << 7);
        unsigned int v8 = v9 - 128;
        if (*v7 < 0)
        {
          uint64_t v7 = (char *)sub_188C180((uint64_t)v26, v9 - 128);
          unsigned int v8 = v10;
        }
        else
        {
          uint64_t v7 = v26 + 2;
        }
      }
      uint64_t v26 = v7;
      if (v8 >> 3 == 2)
      {
        if (v8 == 18)
        {
          int v14 = v7 - 1;
          while (1)
          {
            unint64_t v15 = (unsigned __int8 *)(v14 + 1);
            uint64_t v26 = v14 + 1;
            uint64_t v16 = *(_DWORD **)(a1 + 56);
            if (v16 && (uint64_t v17 = *(int *)(a1 + 48), (int)v17 < *v16))
            {
              *(_DWORD *)(a1 + 48) = v17 + 1;
              uint64_t v18 = *(void *)&v16[2 * v17 + 2];
            }
            else
            {
              int v19 = sub_1626B70(*(void *)(a1 + 40));
              uint64_t v18 = sub_188CDC8(a1 + 40, (uint64_t)v19);
              unint64_t v15 = (unsigned __int8 *)v26;
            }
            int v14 = sub_17EC93C(a3, v18, v15);
            uint64_t v26 = v14;
            if (!v14) {
              return 0;
            }
            if (*(void *)a3 <= (unint64_t)v14 || *v14 != 18) {
              goto LABEL_39;
            }
          }
        }
      }
      else if (v8 >> 3 == 1 && v8 == 10)
      {
        uint64_t v20 = v7 - 1;
        while (1)
        {
          uint64_t v21 = (unsigned __int8 *)(v20 + 1);
          uint64_t v26 = v20 + 1;
          int v22 = *(_DWORD **)(a1 + 32);
          if (v22 && (uint64_t v23 = *(int *)(a1 + 24), (int)v23 < *v22))
          {
            *(_DWORD *)(a1 + 24) = v23 + 1;
            uint64_t v24 = *(void *)&v22[2 * v23 + 2];
          }
          else
          {
            uint64_t v25 = sub_15C1918(*(void *)(a1 + 16));
            uint64_t v24 = sub_188CDC8(a1 + 16, v25);
            uint64_t v21 = (unsigned __int8 *)v26;
          }
          uint64_t v20 = sub_1198F14(a3, v24, v21);
          uint64_t v26 = v20;
          if (!v20) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v20 || *v20 != 10) {
            goto LABEL_39;
          }
        }
      }
      if (!v8 || (v8 & 7) == 4) {
        break;
      }
      if (*v6)
      {
        unint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        unint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        uint64_t v7 = v26;
      }
      uint64_t v26 = (char *)sub_1885AC0(v8, v13, v7, a3);
      if (!v26) {
        return 0;
      }
LABEL_39:
      if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
        return v26;
      }
    }
    if (v7)
    {
      a3[10].i32[0] = v8 - 1;
      return v26;
    }
    return 0;
  }
  return v26;
}

char *sub_18035C0(uint64_t a1, char *__dst, _DWORD *a3)
{
  int v6 = *(_DWORD *)(a1 + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 44);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unsigned int v10 = __dst + 2;
      }
      __dst = sub_15B0C0C(v8, v10, a3);
    }
  }
  int v11 = *(_DWORD *)(a1 + 48);
  if (v11)
  {
    for (int j = 0; j != v11; ++j)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v13 = *(void *)(*(void *)(a1 + 56) + 8 * j + 8);
      *__dst = 18;
      unsigned int v14 = *(_DWORD *)(v13 + 20);
      __dst[1] = v14;
      if (v14 > 0x7F) {
        unint64_t v15 = sub_188A9CC(v14, __dst + 1);
      }
      else {
        unint64_t v15 = __dst + 2;
      }
      __dst = sub_1624800(v13, (unint64_t)v15, a3);
    }
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return __dst;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    int v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    int v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(__dst, v19, (int)v20);
    __dst += v21;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v19, v20, __dst);
}

uint64_t sub_1803788(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_15B0D90(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(int *)(a1 + 48);
  uint64_t v9 = v2 + v8;
  uint64_t v10 = *(void *)(a1 + 56);
  if (v10) {
    int v11 = (uint64_t *)(v10 + 8);
  }
  else {
    int v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_1624980(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  uint64_t v15 = *(void *)(a1 + 8);
  if (v15)
  {
    unint64_t v17 = v15 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v17 + 31) < 0) {
      uint64_t v18 = *(void *)(v17 + 16);
    }
    else {
      uint64_t v18 = *(unsigned __int8 *)(v17 + 31);
    }
    v9 += v18;
  }
  *(_DWORD *)(a1 + 64) = v9;
  return v9;
}

void sub_1803888(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 32) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 16, *(_DWORD *)(a2 + 24));
    sub_10E4FFC((uint64_t *)(a1 + 16), v6, v5, v4, **(_DWORD **)(a1 + 32) - *(_DWORD *)(a1 + 24));
    int v7 = *(_DWORD *)(a1 + 24) + v4;
    *(_DWORD *)(a1 + 24) = v7;
    uint64_t v8 = *(int **)(a1 + 32);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 48);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 56) + 8);
    int v11 = (std::string **)sub_188CCE4(a1 + 40, *(_DWORD *)(a2 + 48));
    sub_1879278((std::string *)(a1 + 40), v11, v10, v9, **(_DWORD **)(a1 + 56) - *(_DWORD *)(a1 + 48));
    int v12 = *(_DWORD *)(a1 + 48) + v9;
    *(_DWORD *)(a1 + 48) = v12;
    uint64_t v13 = *(int **)(a1 + 56);
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  uint64_t v14 = *(void *)(a2 + 8);
  if (v14)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v14 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

BOOL sub_18039BC(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 24);
  do
  {
    int v3 = v2;
    if ((int)v2 < 1) {
      break;
    }
    uint64_t v4 = v2 - 1;
    char v5 = sub_15B0F18(*(void *)(*(void *)(a1 + 32) + 8 * v2));
    uint64_t v2 = v4;
  }
  while ((v5 & 1) != 0);
  return v3 < 1;
}

void *sub_1803A14@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.OfflineSuggestedRegionsParameters");
}

uint64_t sub_1803A24(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_24DF498;
  *(_DWORD *)(a1 + 16) = 0;
  uint64_t v3 = *(void *)(a2 + 8);
  if (v3) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v3 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return a1;
}

void sub_1803A90(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_1803AC0(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1803B34(void *a1)
{
  sub_1803AC0(a1);

  operator delete();
}

uint64_t *sub_1803B6C(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = (uint64_t *)(a1 + 8);
  if (v2) {
    return (uint64_t *)sub_188B4AC(result);
  }
  return result;
}

char *sub_1803B7C(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v12 = a2;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  while (1)
  {
    if (sub_11947B8((uint64_t)a3, &v12, a3[11].i32[1])) {
      return v12;
    }
    char v5 = v12 + 1;
    unsigned int v6 = *v12;
    if (*v12 < 0)
    {
      unsigned int v7 = v6 + (*v5 << 7);
      unsigned int v6 = v7 - 128;
      if (*v5 < 0)
      {
        char v5 = (char *)sub_188C180((uint64_t)v12, v7 - 128);
        unsigned int v6 = v8;
      }
      else
      {
        char v5 = v12 + 2;
      }
    }
    int v12 = v5;
    if (!v6 || (v6 & 7) == 4) {
      break;
    }
    if (*v4)
    {
      uint64_t v10 = (std::string *)((*v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v10 = (std::string *)sub_188DBD8(v4);
      char v5 = v12;
    }
    int v12 = (char *)sub_1885AC0(v6, v10, v5, a3);
    if (!v12) {
      return 0;
    }
  }
  if (v5) {
    a3[10].i32[0] = v6 - 1;
  }
  return v5;
}

char *sub_1803C7C(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v4 = *(void *)(a1 + 8);
  if ((v4 & 1) == 0) {
    return __dst;
  }
  unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v6 + 31) < 0)
  {
    unsigned int v7 = *(void **)(v6 + 8);
    unint64_t v6 = *(void *)(v6 + 16);
  }
  else
  {
    unsigned int v7 = (void *)(v6 + 8);
    LODWORD(v6) = *(unsigned __int8 *)(v6 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v6)
  {
    uint64_t v8 = (int)v6;
    memcpy(__dst, v7, (int)v6);
    __dst += v8;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v7, v6, __dst);
}

uint64_t sub_1803D14(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (v1)
  {
    unint64_t v4 = v1 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v2 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v2 = *(unsigned __int8 *)(v4 + 31);
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  *(_DWORD *)(a1 + 16) = v2;
  return v2;
}

std::string *sub_1803D48(std::string *result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 8);
  if (v2) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v2 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1803D64()
{
  return 1;
}

void *sub_1803D6C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.OfflineSuggestedRegionsResult");
}

uint64_t sub_1803D7C(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  unint64_t v4 = (void *)(a1 + 8);
  *(void *)a1 = off_24DF518;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 24) = &qword_2550250;
  if (*(unsigned char *)(a2 + 16))
  {
    unint64_t v6 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      unint64_t v6 = (uint64_t *)*v6;
    }
    sub_1881DF4((std::string **)(a1 + 24), (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL), v6);
  }
  return a1;
}

void sub_1803E28(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_1803E58(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  unint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1803EF8(uint64_t a1)
{
  sub_1803E58(a1);

  operator delete();
}

uint64_t sub_1803F30(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v1 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v1 + 23) < 0)
    {
      **(unsigned char **)unint64_t v1 = 0;
      *(void *)(v1 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v1 = 0;
      *(unsigned char *)(v1 + 23) = 0;
    }
  }
  char v3 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v3) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_1803F74(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unint64_t v17 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v17, a3[11].i32[1])) {
    return *(void *)v17;
  }
  uint64_t v5 = (void *)(a1 + 8);
  while (1)
  {
    unint64_t v6 = (char *)(*(void *)v17 + 1);
    unsigned int v7 = **(unsigned char **)v17;
    if ((char)**(unsigned char **)v17 < 0)
    {
      unsigned int v8 = v7 + (*v6 << 7);
      unsigned int v7 = v8 - 128;
      if (*v6 < 0)
      {
        unint64_t v6 = (char *)sub_188C180(*(uint64_t *)v17, v8 - 128);
        unsigned int v7 = v9;
      }
      else
      {
        unint64_t v6 = (char *)(*(void *)v17 + 2);
      }
    }
    *(void *)unint64_t v17 = v6;
    if (v7 != 10) {
      break;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v13 = *(void *)(a1 + 8);
    uint64_t v14 = (uint64_t *)(v13 & 0xFFFFFFFFFFFFFFFCLL);
    if (v13) {
      uint64_t v14 = (uint64_t *)*v14;
    }
    uint64_t v15 = (std::string *)sub_1880F84((void *)(a1 + 24), v14);
    int v12 = (void *)sub_188C244(v15, *(char **)v17, (uint64_t)a3);
LABEL_18:
    *(void *)unint64_t v17 = v12;
    if (!v12) {
      goto LABEL_25;
    }
    if (sub_11947B8((uint64_t)a3, (char **)v17, a3[11].i32[1])) {
      return *(void *)v17;
    }
  }
  if (v7) {
    BOOL v10 = (v7 & 7) == 4;
  }
  else {
    BOOL v10 = 1;
  }
  if (!v10)
  {
    if (*v5)
    {
      int v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      int v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unint64_t v6 = *(char **)v17;
    }
    int v12 = sub_1885AC0(v7, v11, v6, a3);
    goto LABEL_18;
  }
  if (v6)
  {
    a3[10].i32[0] = v7 - 1;
    return *(void *)v17;
  }
LABEL_25:
  *(void *)unint64_t v17 = 0;
  return *(void *)v17;
}

char *sub_18040CC(uint64_t a1, char *__dst, void *a3)
{
  unint64_t v4 = __dst;
  if (*(unsigned char *)(a1 + 16)) {
    unint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  uint64_t v6 = *(void *)(a1 + 8);
  if ((v6 & 1) == 0) {
    return v4;
  }
  unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v8 + 31) < 0)
  {
    unsigned int v9 = *(void **)(v8 + 8);
    uint64_t v10 = *(void *)(v8 + 16);
  }
  else
  {
    unsigned int v9 = (void *)(v8 + 8);
    LODWORD(v10) = *(unsigned __int8 *)(v8 + 31);
  }
  if (*a3 - (void)v4 >= (int)v10)
  {
    uint64_t v11 = (int)v10;
    memcpy(v4, v9, (int)v10);
    v4 += v11;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v9, v10, v4);
}

uint64_t sub_1804198(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v3 = *(unsigned __int8 *)(v2 + 23);
    uint64_t v4 = *(void *)(v2 + 8);
    if ((v3 & 0x80u) == 0) {
      uint64_t v4 = v3;
    }
    uint64_t v1 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  else
  {
    uint64_t v1 = 0;
  }
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5)
  {
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v7 + 31) < 0) {
      uint64_t v8 = *(void *)(v7 + 16);
    }
    else {
      uint64_t v8 = *(unsigned __int8 *)(v7 + 31);
    }
    v1 += v8;
  }
  *(_DWORD *)(a1 + 20) = v1;
  return v1;
}

uint64_t sub_180421C()
{
  return 1;
}

void *sub_1804224@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.BrandLookupParameters");
}

uint64_t sub_1804234(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_24DF598;
  *(_DWORD *)(a1 + 16) = 0;
  uint64_t v3 = *(void *)(a2 + 8);
  if (v3) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v3 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return a1;
}

void sub_18042A0(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_18042D0(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1804344(void *a1)
{
  sub_18042D0(a1);

  operator delete();
}

uint64_t *sub_180437C(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = (uint64_t *)(a1 + 8);
  if (v2) {
    return (uint64_t *)sub_188B4AC(result);
  }
  return result;
}

char *sub_180438C(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v12 = a2;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  while (1)
  {
    if (sub_11947B8((uint64_t)a3, &v12, a3[11].i32[1])) {
      return v12;
    }
    uint64_t v5 = v12 + 1;
    unsigned int v6 = *v12;
    if (*v12 < 0)
    {
      unsigned int v7 = v6 + (*v5 << 7);
      unsigned int v6 = v7 - 128;
      if (*v5 < 0)
      {
        uint64_t v5 = (char *)sub_188C180((uint64_t)v12, v7 - 128);
        unsigned int v6 = v8;
      }
      else
      {
        uint64_t v5 = v12 + 2;
      }
    }
    int v12 = v5;
    if (!v6 || (v6 & 7) == 4) {
      break;
    }
    if (*v4)
    {
      uint64_t v10 = (std::string *)((*v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v10 = (std::string *)sub_188DBD8(v4);
      uint64_t v5 = v12;
    }
    int v12 = (char *)sub_1885AC0(v6, v10, v5, a3);
    if (!v12) {
      return 0;
    }
  }
  if (v5) {
    a3[10].i32[0] = v6 - 1;
  }
  return v5;
}

char *sub_180448C(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v4 = *(void *)(a1 + 8);
  if ((v4 & 1) == 0) {
    return __dst;
  }
  unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v6 + 31) < 0)
  {
    unsigned int v7 = *(void **)(v6 + 8);
    unint64_t v6 = *(void *)(v6 + 16);
  }
  else
  {
    unsigned int v7 = (void *)(v6 + 8);
    LODWORD(v6) = *(unsigned __int8 *)(v6 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v6)
  {
    uint64_t v8 = (int)v6;
    memcpy(__dst, v7, (int)v6);
    __dst += v8;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v7, v6, __dst);
}

uint64_t sub_1804524(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (v1)
  {
    unint64_t v4 = v1 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v2 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v2 = *(unsigned __int8 *)(v4 + 31);
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  *(_DWORD *)(a1 + 16) = v2;
  return v2;
}

std::string *sub_1804558(std::string *result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 8);
  if (v2) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v2 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1804574()
{
  return 1;
}

void *sub_180457C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.BrandLookupResult");
}

uint64_t sub_180458C(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  unint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = (std::string *)(a1 + 16);
  *(void *)a1 = off_24DF618;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  int v6 = *(_DWORD *)(a2 + 24);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 32);
    uint64_t v8 = (std::string **)sub_188CCE4(a1 + 16, *(_DWORD *)(a2 + 24));
    sub_187940C(v5, v8, (uint64_t *)(v7 + 8), v6, **(_DWORD **)(a1 + 32) - *(_DWORD *)(a1 + 24));
    int v9 = *(_DWORD *)(a1 + 24) + v6;
    *(_DWORD *)(a1 + 24) = v9;
    uint64_t v10 = *(int **)(a1 + 32);
    if (*v10 < v9) {
      *uint64_t v10 = v9;
    }
  }
  *(_DWORD *)(a1 + 40) = 0;
  uint64_t v11 = *(void *)(a2 + 8);
  if (v11) {
    sub_188B4F8(v4, (v11 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return a1;
}

void sub_180466C(_Unwind_Exception *a1)
{
  sub_1877CB8(v3);
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_18046B0(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1877CB8(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1804730(void *a1)
{
  sub_18046B0(a1);

  operator delete();
}

uint64_t sub_1804768(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 24);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 32) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_1804EAC(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 24) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = (uint64_t *)(v1 + 8);
  if (v6)
  {
    return sub_188B4AC(v5);
  }
  return result;
}

char *sub_18047E4(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v19 = a2;
  if ((sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v5 = (void *)(a1 + 8);
    while (1)
    {
      char v6 = v19 + 1;
      unsigned int v7 = *v19;
      if (*v19 < 0)
      {
        unsigned int v8 = v7 + (*v6 << 7);
        unsigned int v7 = v8 - 128;
        if (*v6 < 0)
        {
          char v6 = (char *)sub_188C180((uint64_t)v19, v8 - 128);
          unsigned int v7 = v9;
        }
        else
        {
          char v6 = v19 + 2;
        }
      }
      int v19 = v6;
      if (v7 == 10)
      {
        int v12 = v6 - 1;
        while (1)
        {
          uint64_t v13 = (unsigned __int8 *)(v12 + 1);
          int v19 = v12 + 1;
          uint64_t v14 = *(_DWORD **)(a1 + 32);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 24), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 24) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            unint64_t v17 = sub_1835754(*(void *)(a1 + 16));
            uint64_t v16 = sub_188CDC8(a1 + 16, (uint64_t)v17);
            uint64_t v13 = (unsigned __int8 *)v19;
          }
          int v12 = (char *)sub_1804984(a3, v16, v13);
          int v19 = v12;
          if (!v12) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_24;
          }
        }
      }
      if (!v7 || (v7 & 7) == 4) {
        break;
      }
      if (*v5)
      {
        uint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        uint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        char v6 = v19;
      }
      int v19 = (char *)sub_1885AC0(v7, v11, v6, a3);
      if (!v19) {
        return 0;
      }
LABEL_24:
      if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
        return v19;
      }
    }
    if (v6)
    {
      a3[10].i32[0] = v7 - 1;
      return v19;
    }
    return 0;
  }
  return v19;
}

uint64_t sub_1804984(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1805004(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1804A14(uint64_t a1, char *__dst, void *a3)
{
  int v6 = *(_DWORD *)(a1 + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        uint64_t v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        uint64_t v10 = __dst + 2;
      }
      __dst = sub_1805350(v8, v10, a3);
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return __dst;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    uint64_t v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    uint64_t v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*a3 - (void)__dst >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(__dst, v14, (int)v15);
    __dst += v16;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, __dst);
}

uint64_t sub_1804B58(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_18055D0(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 40) = v2;
  return v2;
}

std::string *sub_1804C08(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 32) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result->__r_.__value_.__r.__words[2], *(_DWORD *)(a2 + 24));
    uint64_t result = sub_187940C((std::string *)&v3->__r_.__value_.__r.__words[2], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__l.__size_ - LODWORD(v3[1].__r_.__value_.__l.__data_));
    int v7 = LODWORD(v3[1].__r_.__value_.__l.__data_) + v4;
    LODWORD(v3[1].__r_.__value_.__l.__data_) = v7;
    std::string::size_type size = (int *)v3[1].__r_.__value_.__l.__size_;
    if (*size < v7) {
      *std::string::size_type size = v7;
    }
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1804CD8()
{
  return 1;
}

void *sub_1804CE0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.BatchMerchantLookupBrandParameters");
}

void *sub_1804CF0(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_1804D74((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void ***sub_1804D74(uint64_t a1)
{
  uint64_t v3 = *(uint64_t **)(a1 + 24);
  uint64_t v2 = (void ***)(a1 + 24);
  if (v3 != &qword_2550250) {
    sub_1881C6C(v2);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(uint64_t **)(a1 + 40) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 40));
  }
  uint64_t result = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(result);
  }
  if ((uint64_t (***)())a1 != &off_254BF90)
  {
    uint64_t v5 = *(void *)(a1 + 56);
    if (v5)
    {
      sub_17E0360(v5);
      operator delete();
    }
    uint64_t v6 = *(void *)(a1 + 64);
    if (v6)
    {
      sub_17E0980(v6);
      operator delete();
    }
    uint64_t result = *(void ****)(a1 + 72);
    if (result)
    {
      sub_17E0DF4((uint64_t)result);
      operator delete();
    }
  }
  return result;
}

void sub_1804E74(void *a1)
{
  sub_1804CF0(a1);

  operator delete();
}

uint64_t sub_1804EAC(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 0x7F) == 0) {
    goto LABEL_10;
  }
  if (v2)
  {
    unint64_t v5 = *(void *)(result + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v5 + 23) < 0)
    {
      **(unsigned char **)unint64_t v5 = 0;
      *(void *)(v5 + 8) = 0;
      if ((v2 & 2) != 0) {
        goto LABEL_18;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v5 = 0;
      *(unsigned char *)(v5 + 23) = 0;
      if ((v2 & 2) != 0) {
        goto LABEL_18;
      }
    }
LABEL_4:
    if ((v2 & 4) == 0) {
      goto LABEL_5;
    }
LABEL_22:
    unint64_t v7 = *(void *)(result + 40) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v7 + 23) < 0)
    {
      **(unsigned char **)unint64_t v7 = 0;
      *(void *)(v7 + 8) = 0;
      if ((v2 & 8) != 0) {
        goto LABEL_26;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v7 = 0;
      *(unsigned char *)(v7 + 23) = 0;
      if ((v2 & 8) != 0) {
        goto LABEL_26;
      }
    }
LABEL_6:
    if ((v2 & 0x10) == 0) {
      goto LABEL_7;
    }
LABEL_30:
    uint64_t result = sub_17DE0E8(*(void *)(result + 56));
    if ((v2 & 0x20) == 0)
    {
LABEL_8:
      if ((v2 & 0x40) == 0) {
        goto LABEL_10;
      }
      goto LABEL_9;
    }
    goto LABEL_31;
  }
  if ((v2 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_18:
  unint64_t v6 = *(void *)(result + 32) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v6 + 23) < 0)
  {
    **(unsigned char **)unint64_t v6 = 0;
    *(void *)(v6 + 8) = 0;
    if ((v2 & 4) != 0) {
      goto LABEL_22;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v6 = 0;
    *(unsigned char *)(v6 + 23) = 0;
    if ((v2 & 4) != 0) {
      goto LABEL_22;
    }
  }
LABEL_5:
  if ((v2 & 8) == 0) {
    goto LABEL_6;
  }
LABEL_26:
  unint64_t v8 = *(void *)(result + 48) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v8 + 23) < 0)
  {
    **(unsigned char **)unint64_t v8 = 0;
    *(void *)(v8 + 8) = 0;
    if ((v2 & 0x10) != 0) {
      goto LABEL_30;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v8 = 0;
    *(unsigned char *)(v8 + 23) = 0;
    if ((v2 & 0x10) != 0) {
      goto LABEL_30;
    }
  }
LABEL_7:
  if ((v2 & 0x20) == 0) {
    goto LABEL_8;
  }
LABEL_31:
  uint64_t result = sub_17DE1A0(*(void *)(v1 + 64));
  if ((v2 & 0x40) != 0) {
LABEL_9:
  }
    uint64_t result = sub_17DE4E0(*(void *)(v1 + 72));
LABEL_10:
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_1805004(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v27 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v27, a3[11].i32[1])) {
    return *(void *)v27;
  }
  unint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    unint64_t v7 = (unsigned __int8 *)(*(void *)v27 + 1);
    unsigned int v8 = **(unsigned char **)v27;
    if ((char)**(unsigned char **)v27 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if ((char)*v7 < 0)
      {
        unint64_t v7 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v27, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        unint64_t v7 = (unsigned __int8 *)(*(void *)v27 + 2);
      }
    }
    *(void *)uint64_t v27 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 10) {
          goto LABEL_44;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v11 = *(void *)(a1 + 8);
        int v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
        if (v11) {
          int v12 = (uint64_t *)*v12;
        }
        unint64_t v13 = (void *)(a1 + 24);
        goto LABEL_37;
      case 2u:
        if (v8 != 18) {
          goto LABEL_44;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v14 = *(void *)(a1 + 8);
        int v12 = (uint64_t *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
        if (v14) {
          int v12 = (uint64_t *)*v12;
        }
        unint64_t v13 = (void *)(a1 + 32);
        goto LABEL_37;
      case 3u:
        if (v8 != 26) {
          goto LABEL_44;
        }
        *(_DWORD *)(a1 + 16) |= 0x10u;
        uint64_t v15 = *(void **)(a1 + 56);
        if (!v15)
        {
          uint64_t v16 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v16 = (void *)*v16;
          }
          uint64_t v15 = sub_1833A34((uint64_t)v16);
          *(void *)(a1 + 56) = v15;
          unint64_t v7 = *(unsigned __int8 **)v27;
        }
        uint64_t v17 = sub_17DED20(a3, (uint64_t)v15, v7);
        goto LABEL_51;
      case 4u:
        if (v8 != 34) {
          goto LABEL_44;
        }
        *(_DWORD *)(a1 + 16) |= 0x20u;
        uint64_t v18 = *(void **)(a1 + 64);
        if (!v18)
        {
          int v19 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            int v19 = (void *)*v19;
          }
          uint64_t v18 = sub_1833ABC((uint64_t)v19);
          *(void *)(a1 + 64) = v18;
          unint64_t v7 = *(unsigned __int8 **)v27;
        }
        uint64_t v17 = sub_17DEDB0(a3, (uint64_t)v18, v7);
        goto LABEL_51;
      case 5u:
        if (v8 != 42) {
          goto LABEL_44;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v20 = *(void *)(a1 + 8);
        int v12 = (uint64_t *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
        if (v20) {
          int v12 = (uint64_t *)*v12;
        }
        unint64_t v13 = (void *)(a1 + 40);
        goto LABEL_37;
      case 6u:
        if (v8 != 50) {
          goto LABEL_44;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v21 = *(void *)(a1 + 8);
        int v12 = (uint64_t *)(v21 & 0xFFFFFFFFFFFFFFFCLL);
        if (v21) {
          int v12 = (uint64_t *)*v12;
        }
        unint64_t v13 = (void *)(a1 + 48);
LABEL_37:
        int v22 = (std::string *)sub_1880F84(v13, v12);
        uint64_t v17 = (uint64_t)sub_188C244(v22, *(char **)v27, (uint64_t)a3);
        goto LABEL_51;
      case 7u:
        if (v8 != 58) {
          goto LABEL_44;
        }
        *(_DWORD *)(a1 + 16) |= 0x40u;
        uint64_t v23 = *(void **)(a1 + 72);
        if (!v23)
        {
          uint64_t v24 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v24 = (void *)*v24;
          }
          uint64_t v23 = sub_1833B40((uint64_t)v24);
          *(void *)(a1 + 72) = v23;
          unint64_t v7 = *(unsigned __int8 **)v27;
        }
        uint64_t v17 = sub_17DEED0(a3, (uint64_t)v23, v7);
        goto LABEL_51;
      default:
LABEL_44:
        if (v8) {
          BOOL v25 = (v8 & 7) == 4;
        }
        else {
          BOOL v25 = 1;
        }
        if (!v25)
        {
          if (*v6)
          {
            uint64_t v26 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v26 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unint64_t v7 = *(unsigned __int8 **)v27;
          }
          uint64_t v17 = (uint64_t)sub_1885AC0(v8, v26, (char *)v7, a3);
LABEL_51:
          *(void *)uint64_t v27 = v17;
          if (!v17) {
            return 0;
          }
          if (sub_11947B8((uint64_t)a3, (char **)v27, a3[11].i32[1])) {
            return *(void *)v27;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return *(void *)v27;
    }
  }
}

char *sub_1805350(uint64_t a1, char *__dst, void *a3)
{
  char v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    char v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 0x10) == 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  char v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x10) == 0)
  {
LABEL_4:
    if ((v6 & 0x20) == 0) {
      goto LABEL_5;
    }
    goto LABEL_17;
  }
LABEL_11:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v7 = *(void *)(a1 + 56);
  *char v4 = 26;
  unsigned int v8 = *(_DWORD *)(v7 + 20);
  v4[1] = v8;
  if (v8 > 0x7F) {
    unsigned int v9 = sub_188A9CC(v8, v4 + 1);
  }
  else {
    unsigned int v9 = v4 + 2;
  }
  char v4 = sub_17E0654(v7, v9, a3);
  if ((v6 & 0x20) == 0)
  {
LABEL_5:
    if ((v6 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_23;
  }
LABEL_17:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v10 = *(void *)(a1 + 64);
  *char v4 = 34;
  unsigned int v11 = *(_DWORD *)(v10 + 20);
  v4[1] = v11;
  if (v11 > 0x7F) {
    int v12 = sub_188A9CC(v11, v4 + 1);
  }
  else {
    int v12 = v4 + 2;
  }
  char v4 = sub_17E0BB0(v10, v12, a3);
  if ((v6 & 4) == 0)
  {
LABEL_6:
    if ((v6 & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_24;
  }
LABEL_23:
  char v4 = sub_117A0AC(a3, 5, (const void **)(*(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 8) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_31;
    }
    goto LABEL_25;
  }
LABEL_24:
  char v4 = sub_117A0AC(a3, 6, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x40) == 0) {
    goto LABEL_31;
  }
LABEL_25:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v13 = *(void *)(a1 + 72);
  *char v4 = 58;
  unsigned int v14 = *(_DWORD *)(v13 + 20);
  v4[1] = v14;
  if (v14 > 0x7F) {
    uint64_t v15 = sub_188A9CC(v14, v4 + 1);
  }
  else {
    uint64_t v15 = v4 + 2;
  }
  char v4 = sub_17E1024(v13, v15, a3);
LABEL_31:
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return v4;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    int v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    int v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if (*a3 - (void)v4 >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(v4, v19, (int)v20);
    v4 += v21;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v19, v20, v4);
}

uint64_t sub_18055D0(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0x7F) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_18;
  }
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
  uint64_t v6 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    uint64_t v6 = v5;
  }
  uint64_t v3 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 2) != 0)
  {
LABEL_9:
    unint64_t v7 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v8 = *(unsigned __int8 *)(v7 + 23);
    uint64_t v9 = *(void *)(v7 + 8);
    if ((v8 & 0x80u) == 0) {
      uint64_t v9 = v8;
    }
    v3 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v2 & 4) != 0)
  {
    unint64_t v13 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v14 = *(unsigned __int8 *)(v13 + 23);
    uint64_t v15 = *(void *)(v13 + 8);
    if ((v14 & 0x80u) == 0) {
      uint64_t v15 = v14;
    }
    v3 += v15 + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 8) == 0)
    {
LABEL_14:
      if ((v2 & 0x10) == 0) {
        goto LABEL_15;
      }
      goto LABEL_26;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_14;
  }
  unint64_t v16 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v17 = *(unsigned __int8 *)(v16 + 23);
  uint64_t v18 = *(void *)(v16 + 8);
  if ((v17 & 0x80u) == 0) {
    uint64_t v18 = v17;
  }
  v3 += v18 + ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x10) == 0)
  {
LABEL_15:
    if ((v2 & 0x20) == 0) {
      goto LABEL_16;
    }
    goto LABEL_27;
  }
LABEL_26:
  uint64_t v19 = sub_17E076C(*(void *)(a1 + 56));
  v3 += v19 + ((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x20) == 0)
  {
LABEL_16:
    if ((v2 & 0x40) == 0) {
      goto LABEL_18;
    }
    goto LABEL_17;
  }
LABEL_27:
  uint64_t v20 = sub_17E0C7C(*(void *)(a1 + 64));
  v3 += v20 + ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x40) != 0)
  {
LABEL_17:
    uint64_t v10 = sub_17E10F0(*(void *)(a1 + 72));
    v3 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_18:
  uint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    unint64_t v21 = v11 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v21 + 31) < 0) {
      uint64_t v22 = *(void *)(v21 + 16);
    }
    else {
      uint64_t v22 = *(unsigned __int8 *)(v21 + 31);
    }
    v3 += v22;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_18057FC(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0x7F) == 0) {
    goto LABEL_46;
  }
  if (v4)
  {
    uint64_t v5 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
    uint64_t v6 = (std::string **)&result[1];
    std::string::size_type size = v3->__r_.__value_.__l.__size_;
    uint64_t v8 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
    if (size) {
      uint64_t v8 = (uint64_t *)*v8;
    }
    uint64_t result = sub_1881DF4(v6, v5, v8);
    if ((v4 & 2) == 0)
    {
LABEL_4:
      if ((v4 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_16;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_4;
  }
  uint64_t v9 = (long long *)(*(void *)(a2 + 32) & 0xFFFFFFFFFFFFFFFELL);
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
  std::string::size_type v10 = v3->__r_.__value_.__l.__size_;
  uint64_t v11 = (uint64_t *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
  if (v10) {
    uint64_t v11 = (uint64_t *)*v11;
  }
  uint64_t result = sub_1881DF4((std::string **)&v3[1].__r_.__value_.__l.__size_, v9, v11);
  if ((v4 & 4) == 0)
  {
LABEL_5:
    if ((v4 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_19;
  }
LABEL_16:
  int v12 = (long long *)(*(void *)(a2 + 40) & 0xFFFFFFFFFFFFFFFELL);
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
  std::string::size_type v13 = v3->__r_.__value_.__l.__size_;
  uint64_t v14 = (uint64_t *)(v13 & 0xFFFFFFFFFFFFFFFCLL);
  if (v13) {
    uint64_t v14 = (uint64_t *)*v14;
  }
  uint64_t result = sub_1881DF4((std::string **)&v3[1].__r_.__value_.__r.__words[2], v12, v14);
  if ((v4 & 8) == 0)
  {
LABEL_6:
    if ((v4 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_22;
  }
LABEL_19:
  uint64_t v15 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= 8u;
  std::string::size_type v16 = v3->__r_.__value_.__l.__size_;
  uint64_t v17 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
  if (v16) {
    uint64_t v17 = (uint64_t *)*v17;
  }
  uint64_t result = sub_1881DF4((std::string **)&v3[2], v15, v17);
  if ((v4 & 0x10) == 0)
  {
LABEL_7:
    if ((v4 & 0x20) == 0) {
      goto LABEL_8;
    }
    goto LABEL_30;
  }
LABEL_22:
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x10u;
  uint64_t v18 = (std::string *)v3[2].__r_.__value_.__l.__size_;
  if (!v18)
  {
    std::string::size_type v19 = v3->__r_.__value_.__l.__size_;
    uint64_t v20 = (void *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
    if (v19) {
      uint64_t v20 = (void *)*v20;
    }
    uint64_t v18 = (std::string *)sub_1833A34((uint64_t)v20);
    v3[2].__r_.__value_.__l.__size_ = (std::string::size_type)v18;
  }
  if (*(void *)(a2 + 56)) {
    unint64_t v21 = *(uint64_t (****)())(a2 + 56);
  }
  else {
    unint64_t v21 = &off_254B368;
  }
  uint64_t result = sub_11D2930(v18, (uint64_t)v21);
  if ((v4 & 0x20) == 0)
  {
LABEL_8:
    if ((v4 & 0x40) == 0) {
      goto LABEL_46;
    }
    goto LABEL_38;
  }
LABEL_30:
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x20u;
  uint64_t v22 = (std::string *)v3[2].__r_.__value_.__r.__words[2];
  if (!v22)
  {
    std::string::size_type v23 = v3->__r_.__value_.__l.__size_;
    uint64_t v24 = (void *)(v23 & 0xFFFFFFFFFFFFFFFCLL);
    if (v23) {
      uint64_t v24 = (void *)*v24;
    }
    uint64_t v22 = (std::string *)sub_1833ABC((uint64_t)v24);
    v3[2].__r_.__value_.__r.__words[2] = (std::string::size_type)v22;
  }
  if (*(void *)(a2 + 64)) {
    BOOL v25 = *(uint64_t (****)())(a2 + 64);
  }
  else {
    BOOL v25 = &off_254B398;
  }
  uint64_t result = sub_12329D0(v22, (uint64_t)v25);
  if ((v4 & 0x40) != 0)
  {
LABEL_38:
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x40u;
    std::string::pointer data = (std::string *)v3[3].__r_.__value_.__l.__data_;
    if (!data)
    {
      std::string::size_type v27 = v3->__r_.__value_.__l.__size_;
      uint64_t v28 = (void *)(v27 & 0xFFFFFFFFFFFFFFFCLL);
      if (v27) {
        uint64_t v28 = (void *)*v28;
      }
      std::string::pointer data = (std::string *)sub_1833B40((uint64_t)v28);
      v3[3].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
    }
    if (*(void *)(a2 + 72)) {
      uint64_t v29 = *(uint64_t (****)())(a2 + 72);
    }
    else {
      uint64_t v29 = &off_254B3B8;
    }
    uint64_t result = sub_12329D0(data, (uint64_t)v29);
  }
LABEL_46:
  uint64_t v30 = *(void *)(a2 + 8);
  if (v30)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v30 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1805A38()
{
  return 1;
}

void *sub_1805A40@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.MerchantLookupBrandParameters");
}

uint64_t sub_1805A50(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 96);
  if (*(uint64_t **)(a1 + 96) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  sub_1889DA8(a1 + 80);
  sub_1889DA8(a1 + 64);
  sub_1889DA8(a1 + 48);
  sub_1889DE8((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1805B10(uint64_t a1)
{
  sub_1805A50(a1);

  operator delete();
}

uint64_t sub_1805B48(uint64_t a1)
{
  uint64_t result = sub_188CC00(a1 + 24);
  *(_DWORD *)(a1 + 48) = 0;
  *(_DWORD *)(a1 + 64) = 0;
  *(_DWORD *)(a1 + 80) = 0;
  int v3 = *(_DWORD *)(a1 + 16);
  if (v3)
  {
    unint64_t v4 = *(void *)(a1 + 96) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v4 + 23) < 0)
    {
      **(unsigned char **)unint64_t v4 = 0;
      *(void *)(v4 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v4 = 0;
      *(unsigned char *)(v4 + 23) = 0;
    }
  }
  if ((v3 & 0xE) != 0)
  {
    *(void *)(a1 + 104) = 0;
    *(void *)(a1 + 112) = 0;
    *(unsigned char *)(a1 + 120) = 0;
  }
  char v6 = *(unsigned char *)(a1 + 8);
  uint64_t v5 = a1 + 8;
  *(_DWORD *)(v5 + 8) = 0;
  if (v6)
  {
    return sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

uint64_t sub_1805BE8(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v60 = a2;
  int v5 = 0;
  if ((sub_11947B8((uint64_t)a3, (char **)v60, a3[11].i32[1]) & 1) == 0)
  {
    unint64_t v7 = (uint64_t **)(a1 + 24);
    uint64_t v59 = (uint64_t *)(a1 + 8);
    while (1)
    {
      uint64_t v8 = (unsigned __int8 *)(*(void *)v60 + 1);
      unsigned int v9 = **(unsigned char **)v60;
      if ((char)**(unsigned char **)v60 < 0)
      {
        unsigned int v10 = v9 + (*v8 << 7);
        unsigned int v9 = v10 - 128;
        if ((char)*v8 < 0)
        {
          uint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v60, v10 - 128);
          unsigned int v9 = v11;
        }
        else
        {
          uint64_t v8 = (unsigned __int8 *)(*(void *)v60 + 2);
        }
      }
      *(void *)uint64_t v60 = v8;
      switch(v9 >> 3)
      {
        case 1u:
          if (v9 != 8) {
            goto LABEL_95;
          }
          v5 |= 2u;
          int v12 = (char *)(v8 + 1);
          uint64_t v13 = *v8;
          if (((char)*v8 & 0x80000000) == 0) {
            goto LABEL_13;
          }
          int v14 = *v12;
          uint64_t v13 = v13 + (v14 << 7) - 128;
          if ((v14 & 0x80000000) == 0)
          {
            int v12 = (char *)(v8 + 2);
LABEL_13:
            *(void *)uint64_t v60 = v12;
            *(void *)(a1 + 104) = v13;
            goto LABEL_103;
          }
          uint64_t v50 = sub_188C138((uint64_t)v8, v13);
          *(void *)uint64_t v60 = v50;
          *(void *)(a1 + 104) = v51;
          if (!v50) {
            goto LABEL_108;
          }
          goto LABEL_103;
        case 2u:
          if (v9 != 18) {
            goto LABEL_95;
          }
          *(_DWORD *)(a1 + 16) |= 1u;
          uint64_t v15 = *(void *)(a1 + 8);
          std::string::size_type v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
          if (v15) {
            std::string::size_type v16 = (uint64_t *)*v16;
          }
          uint64_t v17 = (std::string *)sub_1880F84((void *)(a1 + 96), v16);
          uint64_t v18 = (void *)sub_188C244(v17, *(char **)v60, (uint64_t)a3);
          goto LABEL_102;
        case 3u:
          if (v9 != 26) {
            goto LABEL_95;
          }
          std::string::size_type v19 = (const std::string::value_type *)(v8 - 1);
          while (1)
          {
            uint64_t v20 = (char *)(v19 + 1);
            *(void *)uint64_t v60 = v19 + 1;
            unint64_t v21 = *(_DWORD **)(a1 + 40);
            if (v21 && (uint64_t v22 = *(int *)(a1 + 32), (int)v22 < *v21))
            {
              *(_DWORD *)(a1 + 32) = v22 + 1;
              std::string::size_type v23 = *(std::string **)&v21[2 * v22 + 2];
            }
            else
            {
              if (!*v7) {
                operator new();
              }
              *BOOL v25 = v24;
              v25[1] = sub_3A6EDC;
              void *v24 = 0;
              v24[1] = 0;
              v24[2] = 0;
              std::string::size_type v23 = (std::string *)sub_188CDC8(a1 + 24, (uint64_t)v24);
              uint64_t v20 = *(char **)v60;
            }
            std::string::size_type v19 = sub_188C244(v23, v20, (uint64_t)a3);
            *(void *)uint64_t v60 = v19;
            if (!v19) {
              goto LABEL_108;
            }
            if (*(void *)a3 <= (unint64_t)v19 || *v19 != 26) {
              goto LABEL_103;
            }
          }
        case 4u:
          if (v9 == 32)
          {
            uint64_t v26 = v8 - 1;
            while (1)
            {
              *(void *)uint64_t v60 = v26 + 1;
              uint64_t v27 = v26[1];
              if ((char)v26[1] < 0)
              {
                int v28 = v27 + (v26[2] << 7);
                uint64_t v27 = (v28 - 128);
                if ((char)v26[2] < 0)
                {
                  uint64_t v26 = (unsigned __int8 *)sub_188C138((uint64_t)(v26 + 1), (v28 - 128));
                  uint64_t v27 = v29;
                }
                else
                {
                  v26 += 3;
                }
              }
              else
              {
                v26 += 2;
              }
              *(void *)uint64_t v60 = v26;
              uint64_t v30 = *(unsigned int *)(a1 + 48);
              if (v30 == *(_DWORD *)(a1 + 52))
              {
                int v31 = v30 + 1;
                sub_188CA54((unsigned int *)(a1 + 48), v30 + 1);
                *(void *)(*(void *)(a1 + 56) + 8 * v30) = v27;
                uint64_t v26 = *(unsigned __int8 **)v60;
              }
              else
              {
                *(void *)(*(void *)(a1 + 56) + 8 * v30) = v27;
                int v31 = v30 + 1;
              }
              *(_DWORD *)(a1 + 48) = v31;
              if (!v26) {
                goto LABEL_108;
              }
              if (*(void *)a3 <= (unint64_t)v26 || *v26 != 32) {
                goto LABEL_103;
              }
            }
          }
          if (v9 == 34)
          {
            uint64_t v56 = (unsigned int *)(a1 + 48);
LABEL_94:
            uint64_t v18 = sub_188C2EC(v56, v8, (uint64_t)a3);
          }
          else
          {
LABEL_95:
            if (v9) {
              BOOL v57 = (v9 & 7) == 4;
            }
            else {
              BOOL v57 = 1;
            }
            if (v57)
            {
              if (v8)
              {
                a3[10].i32[0] = v9 - 1;
                goto LABEL_2;
              }
LABEL_108:
              *(void *)uint64_t v60 = 0;
              goto LABEL_2;
            }
            if (*v59)
            {
              unint64_t v58 = (std::string *)((*v59 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              unint64_t v58 = (std::string *)sub_188DBD8(v59);
              uint64_t v8 = *(unsigned __int8 **)v60;
            }
            uint64_t v18 = sub_1885AC0(v9, v58, (char *)v8, a3);
          }
LABEL_102:
          *(void *)uint64_t v60 = v18;
          if (!v18) {
            goto LABEL_108;
          }
LABEL_103:
          if (sub_11947B8((uint64_t)a3, (char **)v60, a3[11].i32[1])) {
            goto LABEL_2;
          }
          break;
        case 5u:
          if (v9 == 40)
          {
            long long v32 = v8 - 1;
            while (1)
            {
              *(void *)uint64_t v60 = v32 + 1;
              uint64_t v33 = v32[1];
              if ((char)v32[1] < 0)
              {
                int v34 = v33 + (v32[2] << 7);
                uint64_t v33 = (v34 - 128);
                if ((char)v32[2] < 0)
                {
                  long long v32 = (unsigned __int8 *)sub_188C138((uint64_t)(v32 + 1), (v34 - 128));
                  uint64_t v33 = v35;
                }
                else
                {
                  v32 += 3;
                }
              }
              else
              {
                v32 += 2;
              }
              *(void *)uint64_t v60 = v32;
              uint64_t v36 = *(unsigned int *)(a1 + 64);
              if (v36 == *(_DWORD *)(a1 + 68))
              {
                int v37 = v36 + 1;
                sub_188CA54((unsigned int *)(a1 + 64), v36 + 1);
                *(void *)(*(void *)(a1 + 72) + 8 * v36) = v33;
                long long v32 = *(unsigned __int8 **)v60;
              }
              else
              {
                *(void *)(*(void *)(a1 + 72) + 8 * v36) = v33;
                int v37 = v36 + 1;
              }
              *(_DWORD *)(a1 + 64) = v37;
              if (!v32) {
                goto LABEL_108;
              }
              if (*(void *)a3 <= (unint64_t)v32 || *v32 != 40) {
                goto LABEL_103;
              }
            }
          }
          if (v9 != 42) {
            goto LABEL_95;
          }
          uint64_t v56 = (unsigned int *)(a1 + 64);
          goto LABEL_94;
        case 6u:
          if (v9 != 48) {
            goto LABEL_95;
          }
          v5 |= 8u;
          uint64_t v38 = (char *)(v8 + 1);
          uint64_t v39 = *v8;
          if (((char)*v8 & 0x80000000) == 0) {
            goto LABEL_62;
          }
          int v40 = *v38;
          uint64_t v39 = v39 + (v40 << 7) - 128;
          if (v40 < 0)
          {
            uint64_t v52 = sub_188C138((uint64_t)v8, v39);
            *(void *)uint64_t v60 = v52;
            *(unsigned char *)(a1 + 120) = v53 != 0;
            if (!v52) {
              goto LABEL_108;
            }
          }
          else
          {
            uint64_t v38 = (char *)(v8 + 2);
LABEL_62:
            *(void *)uint64_t v60 = v38;
            *(unsigned char *)(a1 + 120) = v39 != 0;
          }
          goto LABEL_103;
        case 7u:
          if (v9 != 56) {
            goto LABEL_95;
          }
          v5 |= 4u;
          uint64_t v41 = (char *)(v8 + 1);
          uint64_t v42 = *v8;
          if (((char)*v8 & 0x80000000) == 0) {
            goto LABEL_67;
          }
          int v43 = *v41;
          uint64_t v42 = v42 + (v43 << 7) - 128;
          if (v43 < 0)
          {
            uint64_t v54 = sub_188C138((uint64_t)v8, v42);
            *(void *)uint64_t v60 = v54;
            *(void *)(a1 + 112) = v55;
            if (!v54) {
              goto LABEL_108;
            }
          }
          else
          {
            uint64_t v41 = (char *)(v8 + 2);
LABEL_67:
            *(void *)uint64_t v60 = v41;
            *(void *)(a1 + 112) = v42;
          }
          goto LABEL_103;
        case 8u:
          if (v9 == 64)
          {
            char v44 = v8 - 1;
            while (1)
            {
              *(void *)uint64_t v60 = v44 + 1;
              uint64_t v45 = v44[1];
              if ((char)v44[1] < 0)
              {
                int v46 = v45 + (v44[2] << 7);
                uint64_t v45 = (v46 - 128);
                if ((char)v44[2] < 0)
                {
                  char v44 = (unsigned __int8 *)sub_188C138((uint64_t)(v44 + 1), (v46 - 128));
                  uint64_t v45 = v47;
                }
                else
                {
                  v44 += 3;
                }
              }
              else
              {
                v44 += 2;
              }
              *(void *)uint64_t v60 = v44;
              uint64_t v48 = *(unsigned int *)(a1 + 80);
              if (v48 == *(_DWORD *)(a1 + 84))
              {
                int v49 = v48 + 1;
                sub_188CA54((unsigned int *)(a1 + 80), v48 + 1);
                *(void *)(*(void *)(a1 + 88) + 8 * v48) = v45;
                char v44 = *(unsigned __int8 **)v60;
              }
              else
              {
                *(void *)(*(void *)(a1 + 88) + 8 * v48) = v45;
                int v49 = v48 + 1;
              }
              *(_DWORD *)(a1 + 80) = v49;
              if (!v44) {
                goto LABEL_108;
              }
              if (*(void *)a3 <= (unint64_t)v44 || *v44 != 64) {
                goto LABEL_103;
              }
            }
          }
          if (v9 != 66) {
            goto LABEL_95;
          }
          uint64_t v56 = (unsigned int *)(a1 + 80);
          goto LABEL_94;
        default:
          goto LABEL_95;
      }
    }
  }
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return *(void *)v60;
}

char *sub_1806238(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  unint64_t v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*a3 <= __dst) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(void *)(a1 + 104);
    *unint64_t v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6) {
    unint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 96) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v10 = *(unsigned int *)(a1 + 32);
  if ((int)v10 >= 1)
  {
    uint64_t v11 = 0;
    uint64_t v12 = 8 * v10;
    do
    {
      uint64_t v13 = *(void **)(*(void *)(a1 + 40) + v11 + 8);
      if (*((char *)v13 + 23) < 0)
      {
        int64_t v14 = v13[1];
        if (v14 > 127) {
          goto LABEL_21;
        }
      }
      else
      {
        int64_t v14 = *((unsigned __int8 *)v13 + 23);
      }
      if ((uint64_t)(*a3 - (void)v4 + 14) >= v14)
      {
        *unint64_t v4 = 26;
        v4[1] = v14;
        if (*((char *)v13 + 23) < 0) {
          uint64_t v13 = (void *)*v13;
        }
        uint64_t v15 = v4 + 2;
        memcpy(v15, v13, v14);
        unint64_t v4 = &v15[v14];
        goto LABEL_19;
      }
LABEL_21:
      unint64_t v4 = (char *)sub_188A868(a3, 3, (uint64_t)v13, v4);
LABEL_19:
      v11 += 8;
    }
    while (v12 != v11);
  }
  uint64_t v16 = *(unsigned int *)(a1 + 48);
  if ((int)v16 >= 1)
  {
    for (uint64_t i = 0; i != v16; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v18 = *(void *)(*(void *)(a1 + 56) + 8 * i);
      *unint64_t v4 = 32;
      v4[1] = v18;
      if (v18 > 0x7F)
      {
        v4[1] = v18 | 0x80;
        unint64_t v19 = v18 >> 7;
        v4[2] = v18 >> 7;
        v4 += 3;
        if (v18 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v20 = v19 >> 14;
            v19 >>= 7;
            *v4++ = v19;
          }
          while (v20);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  uint64_t v21 = *(unsigned int *)(a1 + 64);
  if ((int)v21 >= 1)
  {
    for (uint64_t j = 0; j != v21; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v23 = *(void *)(*(void *)(a1 + 72) + 8 * j);
      *unint64_t v4 = 40;
      v4[1] = v23;
      if (v23 > 0x7F)
      {
        v4[1] = v23 | 0x80;
        unint64_t v24 = v23 >> 7;
        v4[2] = v23 >> 7;
        v4 += 3;
        if (v23 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v25 = v24 >> 14;
            v24 >>= 7;
            *v4++ = v24;
          }
          while (v25);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v26 = *(unsigned char *)(a1 + 120);
    *unint64_t v4 = 48;
    v4[1] = v26;
    v4 += 2;
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v27 = *(void *)(a1 + 112);
    *unint64_t v4 = 56;
    v4[1] = v27;
    if (v27 > 0x7F)
    {
      v4[1] = v27 | 0x80;
      unint64_t v28 = v27 >> 7;
      v4[2] = v27 >> 7;
      v4 += 3;
      if (v27 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v29 = v28 >> 14;
          v28 >>= 7;
          *v4++ = v28;
        }
        while (v29);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v30 = *(unsigned int *)(a1 + 80);
  if ((int)v30 >= 1)
  {
    for (uint64_t k = 0; k != v30; ++k)
    {
      if (*a3 <= (unint64_t)v4) {
        unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v32 = *(void *)(*(void *)(a1 + 88) + 8 * k);
      *unint64_t v4 = 64;
      v4[1] = v32;
      if (v32 > 0x7F)
      {
        v4[1] = v32 | 0x80;
        unint64_t v33 = v32 >> 7;
        v4[2] = v32 >> 7;
        v4 += 3;
        if (v32 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v34 = v33 >> 14;
            v33 >>= 7;
            *v4++ = v33;
          }
          while (v34);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  uint64_t v35 = *(void *)(a1 + 8);
  if ((v35 & 1) == 0) {
    return v4;
  }
  unint64_t v37 = v35 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v37 + 31) < 0)
  {
    uint64_t v38 = *(void **)(v37 + 8);
    uint64_t v39 = *(void *)(v37 + 16);
  }
  else
  {
    uint64_t v38 = (void *)(v37 + 8);
    LODWORD(v39) = *(unsigned __int8 *)(v37 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v39)
  {
    uint64_t v40 = (int)v39;
    memcpy(v4, v38, (int)v39);
    v4 += v40;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v38, v39, v4);
}

uint64_t sub_18066C8(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  if ((int)v2 < 1)
  {
    uint64_t v4 = *(unsigned int *)(a1 + 32);
  }
  else
  {
    int v3 = (uint64_t *)(*(void *)(a1 + 40) + 8);
    uint64_t v4 = *(unsigned int *)(a1 + 32);
    do
    {
      uint64_t v5 = *v3++;
      uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
      uint64_t v7 = *(void *)(v5 + 8);
      if ((v6 & 0x80u) == 0) {
        uint64_t v7 = v6;
      }
      v4 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      --v2;
    }
    while (v2);
  }
  uint64_t v8 = sub_188D5A8((unsigned int *)(a1 + 48));
  uint64_t v9 = *(unsigned int *)(a1 + 48);
  uint64_t v10 = sub_188D5A8((unsigned int *)(a1 + 64));
  uint64_t v11 = *(unsigned int *)(a1 + 64);
  uint64_t result = v8 + v4 + v9 + v10 + v11 + sub_188D5A8((unsigned int *)(a1 + 80)) + *(unsigned int *)(a1 + 80);
  int v13 = *(_DWORD *)(a1 + 16);
  if ((v13 & 0xF) != 0)
  {
    if (v13)
    {
      unint64_t v15 = *(void *)(a1 + 96) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v16 = *(unsigned __int8 *)(v15 + 23);
      uint64_t v17 = *(void *)(v15 + 8);
      if ((v16 & 0x80u) == 0) {
        uint64_t v17 = v16;
      }
      result += v17 + ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v13 & 2) == 0)
      {
LABEL_11:
        if ((v13 & 4) == 0) {
          goto LABEL_13;
        }
        goto LABEL_12;
      }
    }
    else if ((v13 & 2) == 0)
    {
      goto LABEL_11;
    }
    result += ((9 * (__clz(*(void *)(a1 + 104) | 1) ^ 0x3F) + 73) >> 6) + 1;
    if ((v13 & 4) == 0)
    {
LABEL_13:
      if ((v13 & 8) != 0) {
        result += 2;
      }
      goto LABEL_15;
    }
LABEL_12:
    result += ((9 * (__clz(*(void *)(a1 + 112) | 1) ^ 0x3F) + 73) >> 6) + 1;
    goto LABEL_13;
  }
LABEL_15:
  uint64_t v14 = *(void *)(a1 + 8);
  if (v14)
  {
    unint64_t v18 = v14 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v18 + 31) < 0) {
      uint64_t v19 = *(void *)(v18 + 16);
    }
    else {
      uint64_t v19 = *(unsigned __int8 *)(v18 + 31);
    }
    result += v19;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

std::string *sub_180687C(std::string *result, uint64_t a2)
{
  int v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (const std::string **)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = (std::string *)sub_188FB98((uint64_t)&v3[1], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2]- LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    uint64_t v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 48);
  if (v9)
  {
    uint64_t data_low = SLODWORD(v3[2].__r_.__value_.__l.__data_);
    sub_188CA54((unsigned int *)&v3[2], data_low + v9);
    std::string::size_type size = v3[2].__r_.__value_.__l.__size_;
    LODWORD(v3[2].__r_.__value_.__l.__data_) += *(_DWORD *)(a2 + 48);
    uint64_t result = (std::string *)memcpy((void *)(size + 8 * data_low), *(const void **)(a2 + 56), 8 * *(int *)(a2 + 48));
  }
  int v12 = *(_DWORD *)(a2 + 64);
  if (v12)
  {
    uint64_t v13 = SLODWORD(v3[2].__r_.__value_.__r.__words[2]);
    sub_188CA54((unsigned int *)&v3[2].__r_.__value_.__r.__words[2], v13 + v12);
    std::string::pointer data = v3[3].__r_.__value_.__l.__data_;
    LODWORD(v3[2].__r_.__value_.__r.__words[2]) += *(_DWORD *)(a2 + 64);
    uint64_t result = (std::string *)memcpy(&data[8 * v13], *(const void **)(a2 + 72), 8 * *(int *)(a2 + 64));
  }
  int v15 = *(_DWORD *)(a2 + 80);
  if (v15)
  {
    uint64_t v16 = SLODWORD(v3[3].__r_.__value_.__r.__words[1]);
    sub_188CA54((unsigned int *)&v3[3].__r_.__value_.__r.__words[1], v16 + v15);
    std::string::size_type v17 = v3[3].__r_.__value_.__r.__words[2];
    LODWORD(v3[3].__r_.__value_.__r.__words[1]) += *(_DWORD *)(a2 + 80);
    uint64_t result = (std::string *)memcpy((void *)(v17 + 8 * v16), *(const void **)(a2 + 88), 8 * *(int *)(a2 + 80));
  }
  int v18 = *(_DWORD *)(a2 + 16);
  if ((v18 & 0xF) != 0)
  {
    if (v18)
    {
      unint64_t v20 = (long long *)(*(void *)(a2 + 96) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::size_type v21 = v3->__r_.__value_.__l.__size_;
      uint64_t v22 = (uint64_t *)(v21 & 0xFFFFFFFFFFFFFFFCLL);
      if (v21) {
        uint64_t v22 = (uint64_t *)*v22;
      }
      uint64_t result = sub_1881DF4((std::string **)&v3[4], v20, v22);
      if ((v18 & 2) == 0)
      {
LABEL_13:
        if ((v18 & 4) == 0) {
          goto LABEL_14;
        }
        goto LABEL_25;
      }
    }
    else if ((v18 & 2) == 0)
    {
      goto LABEL_13;
    }
    v3[4].__r_.__value_.__l.__size_ = *(void *)(a2 + 104);
    if ((v18 & 4) == 0)
    {
LABEL_14:
      if ((v18 & 8) == 0)
      {
LABEL_16:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v18;
        goto LABEL_17;
      }
LABEL_15:
      v3[5].__r_.__value_.__s.__data_[0] = *(unsigned char *)(a2 + 120);
      goto LABEL_16;
    }
LABEL_25:
    v3[4].__r_.__value_.__r.__words[2] = *(void *)(a2 + 112);
    if ((v18 & 8) == 0) {
      goto LABEL_16;
    }
    goto LABEL_15;
  }
LABEL_17:
  uint64_t v19 = *(void *)(a2 + 8);
  if (v19)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v19 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1806A98()
{
  return 1;
}

void *sub_1806AA0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.BatchMerchantLookupBrandResult.MerchantBrandLookupResponse");
}

void *sub_1806AB0(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1877D38(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1806B30(void *a1)
{
  sub_1806AB0(a1);

  operator delete();
}

uint64_t sub_1806B68(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    int v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_1805B48(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = v1 + 8;
  *(_DWORD *)(v5 + 40) = 0;
  *(_DWORD *)(v5 + 8) = 0;
  if (v6)
  {
    return sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

char *sub_1806BEC(uint64_t a1, char *a2, int32x2_t *a3)
{
  char v26 = a2;
  if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
    return v26;
  }
  char v6 = (void *)(a1 + 8);
  while (1)
  {
    int v7 = v26 + 1;
    unsigned int v8 = *v26;
    if (*v26 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        int v7 = (char *)sub_188C180((uint64_t)v26, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        int v7 = v26 + 2;
      }
    }
    char v26 = v7;
    if (v8 >> 3 == 2)
    {
      if (v8 == 18)
      {
        uint64_t v14 = v7 - 1;
        while (1)
        {
          int v15 = (unsigned __int8 *)(v14 + 1);
          char v26 = v14 + 1;
          uint64_t v16 = *(_DWORD **)(a1 + 40);
          if (v16 && (uint64_t v17 = *(int *)(a1 + 32), (int)v17 < *v16))
          {
            *(_DWORD *)(a1 + 32) = v17 + 1;
            uint64_t v18 = *(void *)&v16[2 * v17 + 2];
          }
          else
          {
            uint64_t v19 = sub_18357E4(*(void *)(a1 + 24));
            uint64_t v18 = sub_188CDC8(a1 + 24, v19);
            int v15 = (unsigned __int8 *)v26;
          }
          uint64_t v14 = (char *)sub_1806E48(a3, v18, v15);
          char v26 = v14;
          if (!v14) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v14 || *v14 != 18) {
            goto LABEL_37;
          }
        }
      }
    }
    else if (v8 >> 3 == 1 && v8 == 8)
    {
      unint64_t v20 = v7 + 1;
      unint64_t v21 = *v7;
      if ((*v7 & 0x80000000) == 0) {
        goto LABEL_34;
      }
      int v22 = *v20;
      int v23 = v21 + (v22 << 7);
      unint64_t v21 = (v23 - 128);
      if (v22 < 0)
      {
        char v26 = (char *)sub_188C138((uint64_t)v7, (v23 - 128));
        if (!v26) {
          return 0;
        }
        unint64_t v21 = v24;
      }
      else
      {
        unint64_t v20 = v7 + 2;
LABEL_34:
        char v26 = v20;
      }
      if (sub_13E78E4(v21))
      {
        *(_DWORD *)(a1 + 16) |= 1u;
        *(_DWORD *)(a1 + 48) = v21;
      }
      else
      {
        if (*v6) {
          unint64_t v25 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          unint64_t v25 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        sub_188C020(1, v21, v25);
      }
      goto LABEL_37;
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v7 = v26;
    }
    char v26 = (char *)sub_1885AC0(v8, v13, v7, a3);
    if (!v26) {
      return 0;
    }
LABEL_37:
    if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
      return v26;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v26;
  }
  return 0;
}

uint64_t sub_1806E48(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1805BE8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_1806ED8(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v6 = *(int *)(a1 + 48);
    *uint64_t v4 = 8;
    v4[1] = v6;
    if (v6 > 0x7F)
    {
      v4[1] = v6 | 0x80;
      unint64_t v7 = v6 >> 7;
      v4[2] = v6 >> 7;
      v4 += 3;
      if (v6 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v8 = v7 >> 14;
          v7 >>= 7;
          *v4++ = v7;
        }
        while (v8);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v9 = *(_DWORD *)(a1 + 32);
  if (v9)
  {
    for (int i = 0; i != v9; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v11 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *uint64_t v4 = 18;
      unsigned int v12 = *(_DWORD *)(v11 + 20);
      v4[1] = v12;
      if (v12 > 0x7F) {
        uint64_t v13 = sub_188A9CC(v12, v4 + 1);
      }
      else {
        uint64_t v13 = v4 + 2;
      }
      uint64_t v4 = sub_1806238(v11, (unint64_t)v13, a3);
    }
  }
  uint64_t v14 = *(void *)(a1 + 8);
  if ((v14 & 1) == 0) {
    return v4;
  }
  unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v16 + 31) < 0)
  {
    uint64_t v17 = *(void **)(v16 + 8);
    uint64_t v18 = *(void *)(v16 + 16);
  }
  else
  {
    uint64_t v17 = (void *)(v16 + 8);
    LODWORD(v18) = *(unsigned __int8 *)(v16 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v18)
  {
    uint64_t v19 = (int)v18;
    memcpy(v4, v17, (int)v18);
    v4 += v19;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v17, v18, v4);
}

uint64_t sub_180709C(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_18066C8(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  if (*(unsigned char *)(a1 + 16))
  {
    int v8 = *(_DWORD *)(a1 + 48);
    if (v8 < 0) {
      uint64_t v9 = 11;
    }
    else {
      uint64_t v9 = ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v9;
  }
  uint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v12 + 31) < 0) {
      uint64_t v13 = *(void *)(v12 + 16);
    }
    else {
      uint64_t v13 = *(unsigned __int8 *)(v12 + 31);
    }
    v2 += v13;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_1807184(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = (std::string *)sub_1879498((uint64_t *)&v3[1], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2]- LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    int v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  if (*(unsigned char *)(a2 + 16))
  {
    int v9 = *(_DWORD *)(a2 + 48);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
    LODWORD(v3[2].__r_.__value_.__l.__data_) = v9;
  }
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1807270()
{
  return 1;
}

void *sub_1807278@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.BatchMerchantLookupBrandResult.MerchantLookupBrandResult");
}

uint64_t sub_1807288(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (uint64_t *)(a1 + 8);
  *(void *)a1 = off_24DF818;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v5 = (uint64_t *)(a1 + 24);
  *(_DWORD *)(a1 + 44) = 0;
  *(void *)(a1 + 28) = 0;
  *(void *)(a1 + 36) = 0;
  *(void *)(a1 + 20) = 0;
  int v6 = *(_DWORD *)(a2 + 32);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 40);
    int v8 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_1879524(v5, v8, (uint64_t *)(v7 + 8), v6, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v9 = *(_DWORD *)(a1 + 32) + v6;
    *(_DWORD *)(a1 + 32) = v9;
    uint64_t v10 = *(int **)(a1 + 40);
    if (*v10 < v9) {
      *uint64_t v10 = v9;
    }
  }
  uint64_t v11 = *(void *)(a2 + 8);
  if (v11) {
    sub_188B4F8(v4, (v11 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  return a1;
}

void sub_180737C(_Unwind_Exception *a1)
{
  sub_1877DB8(v3);
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_18073C0(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1877DB8(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1807440(void *a1)
{
  sub_18073C0(a1);

  operator delete();
}

uint64_t sub_1807478(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_1806B68(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = v1 + 8;
  *(_DWORD *)(v5 + 40) = 0;
  *(_DWORD *)(v5 + 8) = 0;
  if (v6)
  {
    return sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

char *sub_18074FC(uint64_t a1, char *a2, int32x2_t *a3)
{
  char v26 = a2;
  if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
    return v26;
  }
  char v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v26 + 1;
    unsigned int v8 = *v26;
    if (*v26 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v26, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v26 + 2;
      }
    }
    char v26 = v7;
    if (v8 >> 3 == 2)
    {
      if (v8 == 18)
      {
        uint64_t v14 = v7 - 1;
        while (1)
        {
          int v15 = (unsigned __int8 *)(v14 + 1);
          char v26 = v14 + 1;
          unint64_t v16 = *(_DWORD **)(a1 + 40);
          if (v16 && (uint64_t v17 = *(int *)(a1 + 32), (int)v17 < *v16))
          {
            *(_DWORD *)(a1 + 32) = v17 + 1;
            uint64_t v18 = *(void *)&v16[2 * v17 + 2];
          }
          else
          {
            uint64_t v19 = sub_18358B4(*(void *)(a1 + 24));
            uint64_t v18 = sub_188CDC8(a1 + 24, v19);
            int v15 = (unsigned __int8 *)v26;
          }
          uint64_t v14 = sub_1807758(a3, v18, v15);
          char v26 = v14;
          if (!v14) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v14 || *v14 != 18) {
            goto LABEL_37;
          }
        }
      }
    }
    else if (v8 >> 3 == 1 && v8 == 8)
    {
      unint64_t v20 = v7 + 1;
      unint64_t v21 = *v7;
      if ((*v7 & 0x80000000) == 0) {
        goto LABEL_34;
      }
      int v22 = *v20;
      int v23 = v21 + (v22 << 7);
      unint64_t v21 = (v23 - 128);
      if (v22 < 0)
      {
        char v26 = (char *)sub_188C138((uint64_t)v7, (v23 - 128));
        if (!v26) {
          return 0;
        }
        unint64_t v21 = v24;
      }
      else
      {
        unint64_t v20 = v7 + 2;
LABEL_34:
        char v26 = v20;
      }
      if (sub_13E78E4(v21))
      {
        *(_DWORD *)(a1 + 16) |= 1u;
        *(_DWORD *)(a1 + 48) = v21;
      }
      else
      {
        if (*v6) {
          unint64_t v25 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          unint64_t v25 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        sub_188C020(1, v21, v25);
      }
      goto LABEL_37;
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = v26;
    }
    char v26 = (char *)sub_1885AC0(v8, v13, v7, a3);
    if (!v26) {
      return 0;
    }
LABEL_37:
    if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
      return v26;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v26;
  }
  return 0;
}

char *sub_1807758(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1806BEC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_18077E8(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v6 = *(int *)(a1 + 48);
    *uint64_t v4 = 8;
    v4[1] = v6;
    if (v6 > 0x7F)
    {
      v4[1] = v6 | 0x80;
      unint64_t v7 = v6 >> 7;
      v4[2] = v6 >> 7;
      v4 += 3;
      if (v6 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v8 = v7 >> 14;
          v7 >>= 7;
          *v4++ = v7;
        }
        while (v8);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v9 = *(_DWORD *)(a1 + 32);
  if (v9)
  {
    for (int i = 0; i != v9; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v11 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *uint64_t v4 = 18;
      unsigned int v12 = *(_DWORD *)(v11 + 20);
      v4[1] = v12;
      if (v12 > 0x7F) {
        uint64_t v13 = sub_188A9CC(v12, v4 + 1);
      }
      else {
        uint64_t v13 = v4 + 2;
      }
      uint64_t v4 = sub_1806ED8(v11, (unint64_t)v13, a3);
    }
  }
  uint64_t v14 = *(void *)(a1 + 8);
  if ((v14 & 1) == 0) {
    return v4;
  }
  unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v16 + 31) < 0)
  {
    uint64_t v17 = *(void **)(v16 + 8);
    uint64_t v18 = *(void *)(v16 + 16);
  }
  else
  {
    uint64_t v17 = (void *)(v16 + 8);
    LODWORD(v18) = *(unsigned __int8 *)(v16 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v18)
  {
    uint64_t v19 = (int)v18;
    memcpy(v4, v17, (int)v18);
    v4 += v19;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v17, v18, v4);
}

uint64_t sub_18079AC(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_180709C(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  if (*(unsigned char *)(a1 + 16))
  {
    int v8 = *(_DWORD *)(a1 + 48);
    if (v8 < 0) {
      uint64_t v9 = 11;
    }
    else {
      uint64_t v9 = ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v9;
  }
  uint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v12 + 31) < 0) {
      uint64_t v13 = *(void *)(v12 + 16);
    }
    else {
      uint64_t v13 = *(unsigned __int8 *)(v12 + 31);
    }
    v2 += v13;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_1807A94(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = (std::string *)sub_1879524((uint64_t *)&v3[1], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2]- LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    int v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  if (*(unsigned char *)(a2 + 16))
  {
    int v9 = *(_DWORD *)(a2 + 48);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
    LODWORD(v3[2].__r_.__value_.__l.__data_) = v9;
  }
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1807B80()
{
  return 1;
}

void *sub_1807B88@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.BatchMerchantLookupBrandResult");
}

uint64_t sub_1807B98(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (void *)(a1 + 8);
  *(void *)a1 = off_24DF898;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 24) = &qword_2550250;
  if (*(unsigned char *)(a2 + 16))
  {
    uint64_t v6 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v6 = (uint64_t *)*v6;
    }
    sub_1881DF4((std::string **)(a1 + 24), (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL), v6);
  }
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

void sub_1807C4C(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_1807C7C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1807D1C(uint64_t a1)
{
  sub_1807C7C(a1);

  operator delete();
}

uint64_t sub_1807D54(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v1 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v1 + 23) < 0)
    {
      **(unsigned char **)unint64_t v1 = 0;
      *(void *)(v1 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v1 = 0;
      *(unsigned char *)(v1 + 23) = 0;
    }
  }
  char v3 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v3) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_1807D9C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unint64_t v24 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v24, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (1)
  {
    int v8 = (char *)(*(void *)v24 + 1);
    unsigned int v9 = **(unsigned char **)v24;
    if ((char)**(unsigned char **)v24 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        int v8 = (char *)sub_188C180(*(uint64_t *)v24, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        int v8 = (char *)(*(void *)v24 + 2);
      }
    }
    *(void *)unint64_t v24 = v8;
    if (v9 >> 3 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_13;
    }
    v5 |= 2u;
    unint64_t v16 = v8 + 1;
    uint64_t v17 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_24;
    }
    int v18 = *v16;
    uint64_t v17 = v17 + (v18 << 7) - 128;
    if ((v18 & 0x80000000) == 0)
    {
      unint64_t v16 = v8 + 2;
LABEL_24:
      *(void *)unint64_t v24 = v16;
      *(void *)(a1 + 32) = v17;
      goto LABEL_29;
    }
    uint64_t v22 = sub_188C138((uint64_t)v8, v17);
    *(void *)unint64_t v24 = v22;
    *(void *)(a1 + 32) = v23;
    if (!v22) {
      goto LABEL_36;
    }
LABEL_29:
    if (sub_11947B8((uint64_t)a3, (char **)v24, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 >> 3 == 1 && v9 == 10)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v19 = *(void *)(a1 + 8);
    unint64_t v20 = (uint64_t *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
    if (v19) {
      unint64_t v20 = (uint64_t *)*v20;
    }
    unint64_t v21 = (std::string *)sub_1880F84((void *)(a1 + 24), v20);
    int v15 = (void *)sub_188C244(v21, *(char **)v24, (uint64_t)a3);
LABEL_28:
    *(void *)unint64_t v24 = v15;
    if (!v15) {
      goto LABEL_36;
    }
    goto LABEL_29;
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      uint64_t v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v8 = *(char **)v24;
    }
    int v15 = sub_1885AC0(v9, v14, v8, a3);
    goto LABEL_28;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_36:
  *(void *)unint64_t v24 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return *(void *)v24;
}

unsigned char *sub_1807F78(uint64_t a1, unsigned char *__dst, void *a3)
{
  int v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    int v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v7 = *(void *)(a1 + 32);
    *int v4 = 16;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v10 = *(void *)(a1 + 8);
  if ((v10 & 1) == 0) {
    return v4;
  }
  unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v12 + 31) < 0)
  {
    BOOL v13 = *(void **)(v12 + 8);
    uint64_t v14 = *(void *)(v12 + 16);
  }
  else
  {
    BOOL v13 = (void *)(v12 + 8);
    LODWORD(v14) = *(unsigned __int8 *)(v12 + 31);
  }
  if (*a3 - (void)v4 >= (int)v14)
  {
    uint64_t v15 = (int)v14;
    memcpy(v4, v13, (int)v14);
    v4 += v15;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v13, v14, v4);
}

uint64_t sub_18080C0(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_10;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_10;
    }
LABEL_9:
    v2 += ((9 * (__clz(*(void *)(a1 + 32) | 1) ^ 0x3F) + 73) >> 6) + 1;
    goto LABEL_10;
  }
  unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
  uint64_t v5 = *(void *)(v3 + 8);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = v4;
  }
  uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0) {
    goto LABEL_9;
  }
LABEL_10:
  uint64_t v6 = *(void *)(a1 + 8);
  if (v6)
  {
    unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v8 + 31) < 0) {
      uint64_t v9 = *(void *)(v8 + 16);
    }
    else {
      uint64_t v9 = *(unsigned __int8 *)(v8 + 31);
    }
    v2 += v9;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_180817C()
{
  return 1;
}

void *sub_1808184@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.ChildPlaceLookupByCategoryParameters");
}

uint64_t sub_1808194(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_24DF918;
  *(_DWORD *)(a1 + 16) = 0;
  uint64_t v3 = *(void *)(a2 + 8);
  if (v3) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v3 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return a1;
}

void sub_1808200(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_1808230(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_18082A4(void *a1)
{
  sub_1808230(a1);

  operator delete();
}

uint64_t *sub_18082DC(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = (uint64_t *)(a1 + 8);
  if (v2) {
    return (uint64_t *)sub_188B4AC(result);
  }
  return result;
}

char *sub_18082EC(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v12 = a2;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  while (1)
  {
    if (sub_11947B8((uint64_t)a3, &v12, a3[11].i32[1])) {
      return v12;
    }
    uint64_t v5 = v12 + 1;
    unsigned int v6 = *v12;
    if (*v12 < 0)
    {
      unsigned int v7 = v6 + (*v5 << 7);
      unsigned int v6 = v7 - 128;
      if (*v5 < 0)
      {
        uint64_t v5 = (char *)sub_188C180((uint64_t)v12, v7 - 128);
        unsigned int v6 = v8;
      }
      else
      {
        uint64_t v5 = v12 + 2;
      }
    }
    unint64_t v12 = v5;
    if (!v6 || (v6 & 7) == 4) {
      break;
    }
    if (*v4)
    {
      uint64_t v10 = (std::string *)((*v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v10 = (std::string *)sub_188DBD8(v4);
      uint64_t v5 = v12;
    }
    unint64_t v12 = (char *)sub_1885AC0(v6, v10, v5, a3);
    if (!v12) {
      return 0;
    }
  }
  if (v5) {
    a3[10].i32[0] = v6 - 1;
  }
  return v5;
}

char *sub_18083EC(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v4 = *(void *)(a1 + 8);
  if ((v4 & 1) == 0) {
    return __dst;
  }
  unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v6 + 31) < 0)
  {
    unsigned int v7 = *(void **)(v6 + 8);
    unint64_t v6 = *(void *)(v6 + 16);
  }
  else
  {
    unsigned int v7 = (void *)(v6 + 8);
    LODWORD(v6) = *(unsigned __int8 *)(v6 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v6)
  {
    uint64_t v8 = (int)v6;
    memcpy(__dst, v7, (int)v6);
    __dst += v8;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v7, v6, __dst);
}

uint64_t sub_1808484(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (v1)
  {
    unint64_t v4 = v1 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v2 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v2 = *(unsigned __int8 *)(v4 + 31);
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  *(_DWORD *)(a1 + 16) = v2;
  return v2;
}

std::string *sub_18084B8(std::string *result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 8);
  if (v2) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v2 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_18084D4()
{
  return 1;
}

void *sub_18084DC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.ChildPlaceLookupByCategoryResult");
}

uint64_t sub_18084EC(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  unint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_180858C(uint64_t a1)
{
  sub_18084EC(a1);

  operator delete();
}

uint64_t sub_18085C4(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if (v1)
  {
    unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)unint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
    }
  }
  if ((v1 & 0x1E) != 0)
  {
    *(void *)(a1 + 32) = 0;
    *(void *)(a1 + 40) = 0;
    *(_DWORD *)(a1 + 48) = 0;
  }
  char v4 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v4) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_1808618(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v38 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v38, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unsigned int v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (char *)(*(void *)v38 + 1);
    unsigned int v9 = **(unsigned char **)v38;
    if ((char)**(unsigned char **)v38 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180(*(uint64_t *)v38, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (char *)(*(void *)v38 + 2);
      }
    }
    *(void *)uint64_t v38 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_33;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 8);
        BOOL v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          BOOL v13 = (uint64_t *)*v13;
        }
        uint64_t v14 = (std::string *)sub_1880F84((void *)(a1 + 24), v13);
        uint64_t v15 = (void *)sub_188C244(v14, *(char **)v38, (uint64_t)a3);
        goto LABEL_40;
      case 2u:
        if (v9 != 16) {
          goto LABEL_33;
        }
        v5 |= 2u;
        uint64_t v17 = v8 + 1;
        LODWORD(v16) = *v8;
        if ((v16 & 0x80) == 0) {
          goto LABEL_17;
        }
        int v18 = *v17;
        uint64_t v16 = v16 + (v18 << 7) - 128;
        if (v18 < 0)
        {
          uint64_t v30 = sub_188C138((uint64_t)v8, v16);
          *(void *)uint64_t v38 = v30;
          *(_DWORD *)(a1 + 32) = v31;
          if (!v30) {
            goto LABEL_54;
          }
        }
        else
        {
          uint64_t v17 = v8 + 2;
LABEL_17:
          *(void *)uint64_t v38 = v17;
          *(_DWORD *)(a1 + 32) = v16;
        }
        goto LABEL_41;
      case 3u:
        if (v9 != 24) {
          goto LABEL_33;
        }
        v5 |= 4u;
        unint64_t v20 = v8 + 1;
        LODWORD(v19) = *v8;
        if ((v19 & 0x80) == 0) {
          goto LABEL_22;
        }
        int v21 = *v20;
        uint64_t v19 = v19 + (v21 << 7) - 128;
        if (v21 < 0)
        {
          uint64_t v32 = sub_188C138((uint64_t)v8, v19);
          *(void *)uint64_t v38 = v32;
          *(_DWORD *)(a1 + 36) = v33;
          if (!v32) {
            goto LABEL_54;
          }
        }
        else
        {
          unint64_t v20 = v8 + 2;
LABEL_22:
          *(void *)uint64_t v38 = v20;
          *(_DWORD *)(a1 + 36) = v19;
        }
        goto LABEL_41;
      case 4u:
        if (v9 != 32) {
          goto LABEL_33;
        }
        v5 |= 8u;
        uint64_t v22 = v8 + 1;
        uint64_t v23 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_27;
        }
        int v24 = *v22;
        uint64_t v23 = v23 + (v24 << 7) - 128;
        if (v24 < 0)
        {
          uint64_t v34 = sub_188C138((uint64_t)v8, v23);
          *(void *)uint64_t v38 = v34;
          *(void *)(a1 + 40) = v35;
          if (!v34) {
            goto LABEL_54;
          }
        }
        else
        {
          uint64_t v22 = v8 + 2;
LABEL_27:
          *(void *)uint64_t v38 = v22;
          *(void *)(a1 + 40) = v23;
        }
        goto LABEL_41;
      case 5u:
        if (v9 != 40) {
          goto LABEL_33;
        }
        v5 |= 0x10u;
        unint64_t v25 = v8 + 1;
        int v26 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_32;
        }
        int v27 = *v25;
        int v26 = v26 + (v27 << 7) - 128;
        if (v27 < 0)
        {
          uint64_t v36 = sub_188C0D0((uint64_t)v8, v26);
          *(void *)uint64_t v38 = v36;
          *(_DWORD *)(a1 + 48) = v37;
          if (!v36) {
            goto LABEL_54;
          }
        }
        else
        {
          unint64_t v25 = v8 + 2;
LABEL_32:
          *(void *)uint64_t v38 = v25;
          *(_DWORD *)(a1 + 48) = v26;
        }
        goto LABEL_41;
      default:
LABEL_33:
        if (v9) {
          BOOL v28 = (v9 & 7) == 4;
        }
        else {
          BOOL v28 = 1;
        }
        if (!v28)
        {
          if (*v7)
          {
            unint64_t v29 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            unint64_t v29 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = *(char **)v38;
          }
          uint64_t v15 = sub_1885AC0(v9, v29, v8, a3);
LABEL_40:
          *(void *)uint64_t v38 = v15;
          if (!v15) {
            goto LABEL_54;
          }
LABEL_41:
          if (sub_11947B8((uint64_t)a3, (char **)v38, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_54:
        }
          *(void *)uint64_t v38 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v38;
    }
  }
}

unsigned char *sub_1808934(uint64_t a1, unsigned char *__dst, void *a3)
{
  char v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    char v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v7 = *(int *)(a1 + 32);
    *char v4 = 16;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 36);
    *char v4 = 24;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v13 = *(void *)(a1 + 40);
    *char v4 = 32;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unint64_t v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v16 = *(_DWORD *)(a1 + 48);
    *char v4 = 40;
    v4[1] = v16;
    if (v16 > 0x7F)
    {
      v4[1] = v16 | 0x80;
      unsigned int v17 = v16 >> 7;
      v4[2] = v16 >> 7;
      v4 += 3;
      if (v16 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v18 = v17 >> 14;
          v17 >>= 7;
          *v4++ = v17;
        }
        while (v18);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v19 = *(void *)(a1 + 8);
  if ((v19 & 1) == 0) {
    return v4;
  }
  unint64_t v21 = v19 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v21 + 31) < 0)
  {
    uint64_t v22 = *(void **)(v21 + 8);
    uint64_t v23 = *(void *)(v21 + 16);
  }
  else
  {
    uint64_t v22 = (void *)(v21 + 8);
    LODWORD(v23) = *(unsigned __int8 *)(v21 + 31);
  }
  if (*a3 - (void)v4 >= (int)v23)
  {
    uint64_t v24 = (int)v23;
    memcpy(v4, v22, (int)v23);
    v4 += v24;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v22, v23, v4);
}

uint64_t sub_1808BF0(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 0x1F) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_17;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_13;
    }
    goto LABEL_9;
  }
  unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
  uint64_t v5 = *(void *)(v3 + 8);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = v4;
  }
  uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    int v6 = *(_DWORD *)(a1 + 32);
    if (v6 < 0) {
      uint64_t v7 = 11;
    }
    else {
      uint64_t v7 = ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v7;
  }
LABEL_13:
  if ((v1 & 4) != 0)
  {
    int v10 = *(_DWORD *)(a1 + 36);
    if (v10 < 0) {
      uint64_t v11 = 11;
    }
    else {
      uint64_t v11 = ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v11;
    if ((v1 & 8) == 0)
    {
LABEL_15:
      if ((v1 & 0x10) == 0) {
        goto LABEL_17;
      }
      goto LABEL_16;
    }
  }
  else if ((v1 & 8) == 0)
  {
    goto LABEL_15;
  }
  v2 += ((9 * (__clz(*(void *)(a1 + 40) | 1) ^ 0x3F) + 73) >> 6) + 1;
  if ((v1 & 0x10) != 0) {
LABEL_16:
  }
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 48) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_17:
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v12 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v12 + 31) < 0) {
      uint64_t v13 = *(void *)(v12 + 16);
    }
    else {
      uint64_t v13 = *(unsigned __int8 *)(v12 + 31);
    }
    v2 += v13;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_1808D48(std::string *result, uint64_t a2)
{
  unint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0x1F) != 0)
  {
    if (v4)
    {
      int v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      uint64_t v7 = (std::string **)&result[1];
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      unint64_t v9 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        unint64_t v9 = (uint64_t *)*v9;
      }
      uint64_t result = sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_17;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 32);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_18;
    }
LABEL_17:
    HIDWORD(v3[1].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 36);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0)
      {
LABEL_8:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
        goto LABEL_9;
      }
LABEL_7:
      LODWORD(v3[2].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 48);
      goto LABEL_8;
    }
LABEL_18:
    v3[1].__r_.__value_.__r.__words[2] = *(void *)(a2 + 40);
    if ((v4 & 0x10) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
LABEL_9:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1808E38()
{
  return 1;
}

void *sub_1808E40@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.WifiAccessPoint");
}

void *sub_1808E50(void *a1)
{
  unint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1877E38(a1 + 6);
  sub_12C5234(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1808EDC(void *a1)
{
  sub_1808E50(a1);

  operator delete();
}

uint64_t sub_1808F14(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    unint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_15B043C(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  uint64_t v5 = *(unsigned int *)(v1 + 56);
  if ((int)v5 >= 1)
  {
    int v6 = (uint64_t *)(*(void *)(v1 + 64) + 8);
    do
    {
      uint64_t v7 = *v6++;
      uint64_t result = sub_18085C4(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(v1 + 56) = 0;
  }
  if ((*(unsigned char *)(v1 + 16) & 3) != 0)
  {
    *(void *)(v1 + 72) = 0;
    *(void *)(v1 + 80) = 0;
  }
  char v9 = *(unsigned char *)(v1 + 8);
  uint64_t v8 = v1 + 8;
  *(_DWORD *)(v8 + 8) = 0;
  if (v9)
  {
    return sub_188B4AC((uint64_t *)v8);
  }
  return result;
}

char *sub_1808FCC(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v36 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v36, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = v36 + 1;
    unsigned int v9 = *v36;
    if (*v36 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v36, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v36 + 2;
      }
    }
    uint64_t v36 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_39;
        }
        unint64_t v12 = v8 - 1;
        while (1)
        {
          uint64_t v13 = (unsigned __int8 *)(v12 + 1);
          uint64_t v36 = v12 + 1;
          unint64_t v14 = *(_DWORD **)(a1 + 40);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 32), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 32) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            uint64_t v17 = sub_15C1CB4(*(void *)(a1 + 24));
            uint64_t v16 = sub_188CDC8(a1 + 24, v17);
            uint64_t v13 = (unsigned __int8 *)v36;
          }
          unint64_t v12 = sub_11B3E48(a3, v16, v13);
          uint64_t v36 = v12;
          if (!v12) {
            goto LABEL_55;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_46;
          }
        }
      case 2u:
        if (v9 != 18) {
          goto LABEL_39;
        }
        unsigned int v18 = v8 - 1;
        while (1)
        {
          uint64_t v19 = (unsigned __int8 *)(v18 + 1);
          uint64_t v36 = v18 + 1;
          unint64_t v20 = *(_DWORD **)(a1 + 64);
          if (v20 && (uint64_t v21 = *(int *)(a1 + 56), (int)v21 < *v20))
          {
            *(_DWORD *)(a1 + 56) = v21 + 1;
            uint64_t v22 = *(void *)&v20[2 * v21 + 2];
          }
          else
          {
            uint64_t v23 = sub_1835AE8(*(void *)(a1 + 48));
            uint64_t v22 = sub_188CDC8(a1 + 48, v23);
            uint64_t v19 = (unsigned __int8 *)v36;
          }
          unsigned int v18 = (char *)sub_1809314(a3, v22, v19);
          uint64_t v36 = v18;
          if (!v18) {
            goto LABEL_55;
          }
          if (*(void *)a3 <= (unint64_t)v18 || *v18 != 18) {
            goto LABEL_46;
          }
        }
      case 3u:
        if (v9 != 24) {
          goto LABEL_39;
        }
        v5 |= 1u;
        uint64_t v24 = v8 + 1;
        uint64_t v25 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_33;
        }
        int v26 = *v24;
        uint64_t v25 = v25 + (v26 << 7) - 128;
        if (v26 < 0)
        {
          uint64_t v32 = (char *)sub_188C138((uint64_t)v8, v25);
          uint64_t v36 = v32;
          *(void *)(a1 + 72) = v33;
          if (!v32) {
            goto LABEL_55;
          }
        }
        else
        {
          uint64_t v24 = v8 + 2;
LABEL_33:
          uint64_t v36 = v24;
          *(void *)(a1 + 72) = v25;
        }
        goto LABEL_46;
      case 4u:
        if (v9 != 32) {
          goto LABEL_39;
        }
        v5 |= 2u;
        int v27 = v8 + 1;
        uint64_t v28 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_38;
        }
        int v29 = *v27;
        uint64_t v28 = v28 + (v29 << 7) - 128;
        if (v29 < 0)
        {
          uint64_t v34 = (char *)sub_188C138((uint64_t)v8, v28);
          uint64_t v36 = v34;
          *(void *)(a1 + 80) = v35;
          if (!v34) {
            goto LABEL_55;
          }
        }
        else
        {
          int v27 = v8 + 2;
LABEL_38:
          uint64_t v36 = v27;
          *(void *)(a1 + 80) = v28;
        }
        goto LABEL_46;
      default:
LABEL_39:
        if (v9) {
          BOOL v30 = (v9 & 7) == 4;
        }
        else {
          BOOL v30 = 1;
        }
        if (!v30)
        {
          if (*v7)
          {
            int v31 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            int v31 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = v36;
          }
          uint64_t v36 = (char *)sub_1885AC0(v9, v31, v8, a3);
          if (!v36) {
            goto LABEL_55;
          }
LABEL_46:
          if (sub_11947B8((uint64_t)a3, &v36, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_55:
        }
          uint64_t v36 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v36;
    }
  }
}

uint64_t sub_1809314(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1808618(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_18093A4(uint64_t a1, char *__dst, _DWORD *a3)
{
  int v6 = *(_DWORD *)(a1 + 32);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 44);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unsigned int v10 = __dst + 2;
      }
      __dst = sub_15B43E4(v8, v10, a3);
    }
  }
  int v11 = *(_DWORD *)(a1 + 56);
  if (v11)
  {
    for (int j = 0; j != v11; ++j)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v13 = *(void *)(*(void *)(a1 + 64) + 8 * j + 8);
      *__dst = 18;
      unsigned int v14 = *(_DWORD *)(v13 + 20);
      __dst[1] = v14;
      if (v14 > 0x7F) {
        uint64_t v15 = sub_188A9CC(v14, __dst + 1);
      }
      else {
        uint64_t v15 = __dst + 2;
      }
      __dst = sub_1808934(v13, v15, a3);
    }
  }
  int v16 = *(_DWORD *)(a1 + 16);
  if (v16)
  {
    if (*(void *)a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unint64_t v17 = *(void *)(a1 + 72);
    *__dst = 24;
    __dst[1] = v17;
    if (v17 > 0x7F)
    {
      __dst[1] = v17 | 0x80;
      unint64_t v18 = v17 >> 7;
      __dst[2] = v17 >> 7;
      __dst += 3;
      if (v17 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unint64_t v19 = v18 >> 14;
          v18 >>= 7;
          *__dst++ = v18;
        }
        while (v19);
      }
    }
    else
    {
      __dst += 2;
    }
  }
  if ((v16 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unint64_t v20 = *(void *)(a1 + 80);
    *__dst = 32;
    __dst[1] = v20;
    if (v20 > 0x7F)
    {
      __dst[1] = v20 | 0x80;
      unint64_t v21 = v20 >> 7;
      __dst[2] = v20 >> 7;
      __dst += 3;
      if (v20 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unint64_t v22 = v21 >> 14;
          v21 >>= 7;
          *__dst++ = v21;
        }
        while (v22);
      }
    }
    else
    {
      __dst += 2;
    }
  }
  uint64_t v23 = *(void *)(a1 + 8);
  if ((v23 & 1) == 0) {
    return __dst;
  }
  unint64_t v25 = v23 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v25 + 31) < 0)
  {
    int v26 = *(void **)(v25 + 8);
    uint64_t v27 = *(void *)(v25 + 16);
  }
  else
  {
    int v26 = (void *)(v25 + 8);
    LODWORD(v27) = *(unsigned __int8 *)(v25 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v27)
  {
    uint64_t v28 = (int)v27;
    memcpy(__dst, v26, (int)v27);
    __dst += v28;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v26, v27, __dst);
}

uint64_t sub_1809668(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_15B4924(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(int *)(a1 + 56);
  uint64_t v9 = v2 + v8;
  uint64_t v10 = *(void *)(a1 + 64);
  if (v10) {
    int v11 = (uint64_t *)(v10 + 8);
  }
  else {
    int v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_1808BF0(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  int v15 = *(_DWORD *)(a1 + 16);
  if ((v15 & 3) != 0)
  {
    if (v15) {
      v9 += ((9 * (__clz(*(void *)(a1 + 72) | 1) ^ 0x3F) + 73) >> 6) + 1;
    }
    if ((v15 & 2) != 0) {
      v9 += ((9 * (__clz(*(void *)(a1 + 80) | 1) ^ 0x3F) + 73) >> 6) + 1;
    }
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if (v16)
  {
    unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v18 + 31) < 0) {
      uint64_t v19 = *(void *)(v18 + 16);
    }
    else {
      uint64_t v19 = *(unsigned __int8 *)(v18 + 31);
    }
    v9 += v19;
  }
  *(_DWORD *)(a1 + 20) = v9;
  return v9;
}

void sub_18097BC(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_12C5340((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    uint64_t v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    int v11 = (std::string **)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_18795B0((uint64_t *)(a1 + 48), v11, v10, v9, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v12 = *(_DWORD *)(a1 + 56) + v9;
    *(_DWORD *)(a1 + 56) = v12;
    uint64_t v13 = *(int **)(a1 + 64);
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 16);
  if ((v14 & 3) != 0)
  {
    if (v14) {
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
    }
    if ((v14 & 2) != 0) {
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
    }
    *(_DWORD *)(a1 + 16) |= v14;
  }
  uint64_t v15 = *(void *)(a2 + 8);
  if (v15)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v15 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

BOOL sub_1809920(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  do
  {
    int v3 = v2;
    if ((int)v2 < 1) {
      break;
    }
    uint64_t v4 = v2 - 1;
    char v5 = sub_15B06D8(*(void *)(*(void *)(a1 + 40) + 8 * v2));
    uint64_t v2 = v4;
  }
  while ((v5 & 1) != 0);
  return v3 < 1;
}

void *sub_1809978@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.WifiMeasurement");
}

uint64_t sub_1809988(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)a1 = off_24DFA98;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  char v5 = (uint64_t *)(a1 + 24);
  *(_DWORD *)(a1 + 44) = 0;
  *(void *)(a1 + 28) = 0;
  *(void *)(a1 + 36) = 0;
  *(void *)(a1 + 20) = 0;
  int v6 = *(_DWORD *)(a2 + 32);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 40);
    uint64_t v8 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_187963C(v5, v8, (uint64_t *)(v7 + 8), v6, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v9 = *(_DWORD *)(a1 + 32) + v6;
    *(_DWORD *)(a1 + 32) = v9;
    uint64_t v10 = *(int **)(a1 + 40);
    if (*v10 < v9) {
      *uint64_t v10 = v9;
    }
  }
  uint64_t v11 = *(void *)(a2 + 8);
  if (v11) {
    sub_188B4F8(v4, (v11 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  return a1;
}

void sub_1809A7C(_Unwind_Exception *a1)
{
  sub_1877EB8(v3);
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_1809AC0(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1877EB8(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1809B40(void *a1)
{
  sub_1809AC0(a1);

  operator delete();
}

uint64_t sub_1809B78(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    int v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_1808F14(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = v1 + 8;
  *(_DWORD *)(v5 + 40) = 1000;
  *(_DWORD *)(v5 + 8) = 0;
  if (v6)
  {
    return sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

char *sub_1809C00(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v26 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v26 + 1;
    unsigned int v9 = *v26;
    if (*v26 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v26, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v26 + 2;
      }
    }
    int v26 = v8;
    if (v9 >> 3 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_13;
    }
    uint64_t v15 = v8 + 1;
    int v16 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_25;
    }
    int v17 = *v15;
    int v16 = v16 + (v17 << 7) - 128;
    if ((v17 & 0x80000000) == 0)
    {
      uint64_t v15 = v8 + 2;
LABEL_25:
      int v26 = v15;
      *(_DWORD *)(a1 + 48) = v16;
      int v5 = 1;
      goto LABEL_36;
    }
    uint64_t v24 = (char *)sub_188C0D0((uint64_t)v8, v16);
    int v26 = v24;
    *(_DWORD *)(a1 + 48) = v25;
    int v5 = 1;
    if (!v24) {
      goto LABEL_41;
    }
LABEL_36:
    if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 >> 3 == 1 && v9 == 10)
  {
    unint64_t v18 = v8 - 1;
    while (1)
    {
      uint64_t v19 = (unsigned __int8 *)(v18 + 1);
      int v26 = v18 + 1;
      unint64_t v20 = *(_DWORD **)(a1 + 40);
      if (v20 && (uint64_t v21 = *(int *)(a1 + 32), (int)v21 < *v20))
      {
        *(_DWORD *)(a1 + 32) = v21 + 1;
        uint64_t v22 = *(void *)&v20[2 * v21 + 2];
      }
      else
      {
        sub_1835B70(*(void *)(a1 + 24));
        uint64_t v22 = sub_188CDC8(a1 + 24, v23);
        uint64_t v19 = (unsigned __int8 *)v26;
      }
      unint64_t v18 = sub_1809E28(a3, v22, v19);
      int v26 = v18;
      if (!v18) {
        goto LABEL_41;
      }
      if (*(void *)a3 <= (unint64_t)v18 || *v18 != 10) {
        goto LABEL_36;
      }
    }
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      int v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      int v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = v26;
    }
    int v26 = (char *)sub_1885AC0(v9, v14, v8, a3);
    if (!v26) {
      goto LABEL_41;
    }
    goto LABEL_36;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_41:
  int v26 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v26;
}

char *sub_1809E28(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1808FCC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1809EB8(uint64_t a1, char *__dst, _DWORD *a3)
{
  int v6 = *(_DWORD *)(a1 + 32);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unsigned int v10 = __dst + 2;
      }
      __dst = sub_18093A4(v8, v10, a3);
    }
  }
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unsigned int v11 = *(_DWORD *)(a1 + 48);
    *__dst = 16;
    __dst[1] = v11;
    if (v11 > 0x7F)
    {
      __dst[1] = v11 | 0x80;
      unsigned int v12 = v11 >> 7;
      __dst[2] = v11 >> 7;
      __dst += 3;
      if (v11 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unsigned int v13 = v12 >> 14;
          v12 >>= 7;
          *__dst++ = v12;
        }
        while (v13);
      }
    }
    else
    {
      __dst += 2;
    }
  }
  uint64_t v14 = *(void *)(a1 + 8);
  if ((v14 & 1) == 0) {
    return __dst;
  }
  unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v16 + 31) < 0)
  {
    int v17 = *(void **)(v16 + 8);
    uint64_t v18 = *(void *)(v16 + 16);
  }
  else
  {
    int v17 = (void *)(v16 + 8);
    LODWORD(v18) = *(unsigned __int8 *)(v16 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v18)
  {
    uint64_t v19 = (int)v18;
    memcpy(__dst, v17, (int)v18);
    __dst += v19;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v17, v18, __dst);
}

uint64_t sub_180A07C(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_1809668(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  if (*(unsigned char *)(a1 + 16)) {
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 48) | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

void sub_180A158(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_187963C((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    uint64_t v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  if (*(unsigned char *)(a2 + 16))
  {
    int v9 = *(_DWORD *)(a2 + 48);
    *(_DWORD *)(a1 + 16) |= 1u;
    *(_DWORD *)(a1 + 48) = v9;
  }
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_180A244(uint64_t a1)
{
  return sub_180A24C(a1 + 24);
}

uint64_t sub_180A24C(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 8);
  if ((int)v1 >= 1)
  {
    do
    {
      uint64_t v3 = v1--;
      uint64_t v4 = *(void *)(*(void *)(a1 + 16) + 8 * v1 + 8);
      uint64_t v5 = *(unsigned int *)(v4 + 32);
      while ((int)v5 >= 1)
      {
        uint64_t v6 = v5 - 1;
        char v7 = sub_15B06D8(*(void *)(*(void *)(v4 + 40) + 8 * v5));
        uint64_t v5 = v6;
        if ((v7 & 1) == 0) {
          return 0;
        }
      }
    }
    while (v3 >= 2);
  }
  return 1;
}

void *sub_180A2D8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.WifiFingerprintParameters");
}

uint64_t sub_180A2E8(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_24DFB18;
  *(_DWORD *)(a1 + 16) = 0;
  uint64_t v3 = *(void *)(a2 + 8);
  if (v3) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v3 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return a1;
}

void sub_180A354(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_180A384(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_180A3F8(void *a1)
{
  sub_180A384(a1);

  operator delete();
}

uint64_t *sub_180A430(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = (uint64_t *)(a1 + 8);
  if (v2) {
    return (uint64_t *)sub_188B4AC(result);
  }
  return result;
}

char *sub_180A440(uint64_t a1, char *a2, int32x2_t *a3)
{
  unsigned int v12 = a2;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  while (1)
  {
    if (sub_11947B8((uint64_t)a3, &v12, a3[11].i32[1])) {
      return v12;
    }
    uint64_t v5 = v12 + 1;
    unsigned int v6 = *v12;
    if (*v12 < 0)
    {
      unsigned int v7 = v6 + (*v5 << 7);
      unsigned int v6 = v7 - 128;
      if (*v5 < 0)
      {
        uint64_t v5 = (char *)sub_188C180((uint64_t)v12, v7 - 128);
        unsigned int v6 = v8;
      }
      else
      {
        uint64_t v5 = v12 + 2;
      }
    }
    unsigned int v12 = v5;
    if (!v6 || (v6 & 7) == 4) {
      break;
    }
    if (*v4)
    {
      uint64_t v10 = (std::string *)((*v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v10 = (std::string *)sub_188DBD8(v4);
      uint64_t v5 = v12;
    }
    unsigned int v12 = (char *)sub_1885AC0(v6, v10, v5, a3);
    if (!v12) {
      return 0;
    }
  }
  if (v5) {
    a3[10].i32[0] = v6 - 1;
  }
  return v5;
}

char *sub_180A540(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v4 = *(void *)(a1 + 8);
  if ((v4 & 1) == 0) {
    return __dst;
  }
  unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v6 + 31) < 0)
  {
    unsigned int v7 = *(void **)(v6 + 8);
    unint64_t v6 = *(void *)(v6 + 16);
  }
  else
  {
    unsigned int v7 = (void *)(v6 + 8);
    LODWORD(v6) = *(unsigned __int8 *)(v6 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v6)
  {
    uint64_t v8 = (int)v6;
    memcpy(__dst, v7, (int)v6);
    __dst += v8;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v7, v6, __dst);
}

uint64_t sub_180A5D8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (v1)
  {
    unint64_t v4 = v1 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v2 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v2 = *(unsigned __int8 *)(v4 + 31);
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  *(_DWORD *)(a1 + 16) = v2;
  return v2;
}

std::string *sub_180A60C(std::string *result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 8);
  if (v2) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v2 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_180A628()
{
  return 1;
}

void *sub_180A630@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.WifiFingerprintResult");
}

uint64_t sub_180A640(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_24DFB98;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  if (*(unsigned char *)(a2 + 16)) {
    operator new();
  }
  *(void *)(a1 + 24) = 0;
  return a1;
}

void sub_180A6EC()
{
}

uint64_t sub_180A73C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_254C0A8)
  {
    uint64_t v6 = *(void *)(a1 + 24);
    if (v6)
    {
      sub_15B3DFC(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_180A7F4(uint64_t a1)
{
  sub_180A73C(a1);

  operator delete();
}

uint64_t sub_180A82C(uint64_t result)
{
  uint64_t v1 = result;
  if (*(unsigned char *)(result + 16)) {
    uint64_t result = sub_15B043C(*(void *)(result + 24));
  }
  char v3 = *(unsigned char *)(v1 + 8);
  uint64_t v2 = v1 + 8;
  *(_DWORD *)(v2 + 8) = 0;
  if (v3)
  {
    return sub_188B4AC((uint64_t *)v2);
  }
  return result;
}

char *sub_180A888(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v16 = a2;
  if (sub_11947B8((uint64_t)a3, &v16, a3[11].i32[1])) {
    return v16;
  }
  uint64_t v5 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v6 = v16 + 1;
    unsigned int v7 = *v16;
    if (*v16 < 0)
    {
      unsigned int v8 = v7 + (*v6 << 7);
      unsigned int v7 = v8 - 128;
      if (*v6 < 0)
      {
        uint64_t v6 = (char *)sub_188C180((uint64_t)v16, v8 - 128);
        unsigned int v7 = v9;
      }
      else
      {
        uint64_t v6 = v16 + 2;
      }
    }
    unint64_t v16 = v6;
    if (v7 != 10) {
      break;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v13 = *(void *)(a1 + 24);
    if (!v13)
    {
      uint64_t v14 = (void *)(*v5 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v5) {
        uint64_t v14 = (void *)*v14;
      }
      uint64_t v13 = sub_15C1CB4((uint64_t)v14);
      *(void *)(a1 + 24) = v13;
      uint64_t v6 = v16;
    }
    unsigned int v12 = sub_11B3E48(a3, v13, (unsigned __int8 *)v6);
LABEL_20:
    unint64_t v16 = v12;
    if (!v12) {
      return 0;
    }
    if (sub_11947B8((uint64_t)a3, &v16, a3[11].i32[1])) {
      return v16;
    }
  }
  if (v7) {
    BOOL v10 = (v7 & 7) == 4;
  }
  else {
    BOOL v10 = 1;
  }
  if (!v10)
  {
    if (*v5)
    {
      uint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v6 = v16;
    }
    unsigned int v12 = (char *)sub_1885AC0(v7, v11, v6, a3);
    goto LABEL_20;
  }
  if (v6)
  {
    a3[10].i32[0] = v7 - 1;
    return v16;
  }
  return 0;
}

char *sub_180A9E0(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v6 = *(void *)(a1 + 24);
    *uint64_t v4 = 10;
    unsigned int v7 = *(_DWORD *)(v6 + 44);
    v4[1] = v7;
    if (v7 > 0x7F) {
      unsigned int v8 = sub_188A9CC(v7, v4 + 1);
    }
    else {
      unsigned int v8 = v4 + 2;
    }
    uint64_t v4 = sub_15B43E4(v6, v8, a3);
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    unsigned int v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    unsigned int v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    v4 += v14;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v12, v13, v4);
}

uint64_t sub_180AAF0(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    uint64_t v3 = sub_15B4924(*(void *)(a1 + 24));
    uint64_t result = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  else
  {
    uint64_t result = 0;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v5 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    result += v6;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

void sub_180AB78(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a2 + 16))
  {
    uint64_t v4 = *(uint64_t (****)())(a2 + 24);
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v5 = *(void *)(a1 + 24);
    if (!v5)
    {
      uint64_t v6 = *(void *)(a1 + 8);
      unsigned int v7 = (void *)(v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (v6) {
        unsigned int v7 = (void *)*v7;
      }
      uint64_t v5 = sub_15C1CB4((uint64_t)v7);
      *(void *)(a1 + 24) = v5;
      uint64_t v4 = *(uint64_t (****)())(a2 + 24);
    }
    if (v4) {
      unsigned int v8 = v4;
    }
    else {
      unsigned int v8 = &off_253F2E8;
    }
    sub_15B04F0(v5, (uint64_t)v8);
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_180AC20(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 1;
  }
  uint64_t result = sub_15B06D8(*(void *)(a1 + 24));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_180AC4C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.InitialOfflineSuggestionParameters");
}

uint64_t sub_180AC5C(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_24DFC18;
  *(_DWORD *)(a1 + 16) = 0;
  uint64_t v3 = *(void *)(a2 + 8);
  if (v3) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v3 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return a1;
}

void sub_180ACC8(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_180ACF8(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_180AD6C(void *a1)
{
  sub_180ACF8(a1);

  operator delete();
}

uint64_t *sub_180ADA4(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = (uint64_t *)(a1 + 8);
  if (v2) {
    return (uint64_t *)sub_188B4AC(result);
  }
  return result;
}

char *sub_180ADB4(uint64_t a1, char *a2, int32x2_t *a3)
{
  unsigned int v12 = a2;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  while (1)
  {
    if (sub_11947B8((uint64_t)a3, &v12, a3[11].i32[1])) {
      return v12;
    }
    uint64_t v5 = v12 + 1;
    unsigned int v6 = *v12;
    if (*v12 < 0)
    {
      unsigned int v7 = v6 + (*v5 << 7);
      unsigned int v6 = v7 - 128;
      if (*v5 < 0)
      {
        uint64_t v5 = (char *)sub_188C180((uint64_t)v12, v7 - 128);
        unsigned int v6 = v8;
      }
      else
      {
        uint64_t v5 = v12 + 2;
      }
    }
    unsigned int v12 = v5;
    if (!v6 || (v6 & 7) == 4) {
      break;
    }
    if (*v4)
    {
      BOOL v10 = (std::string *)((*v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      BOOL v10 = (std::string *)sub_188DBD8(v4);
      uint64_t v5 = v12;
    }
    unsigned int v12 = (char *)sub_1885AC0(v6, v10, v5, a3);
    if (!v12) {
      return 0;
    }
  }
  if (v5) {
    a3[10].i32[0] = v6 - 1;
  }
  return v5;
}

char *sub_180AEB4(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v4 = *(void *)(a1 + 8);
  if ((v4 & 1) == 0) {
    return __dst;
  }
  unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v6 + 31) < 0)
  {
    unsigned int v7 = *(void **)(v6 + 8);
    unint64_t v6 = *(void *)(v6 + 16);
  }
  else
  {
    unsigned int v7 = (void *)(v6 + 8);
    LODWORD(v6) = *(unsigned __int8 *)(v6 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v6)
  {
    uint64_t v8 = (int)v6;
    memcpy(__dst, v7, (int)v6);
    __dst += v8;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v7, v6, __dst);
}

uint64_t sub_180AF4C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (v1)
  {
    unint64_t v4 = v1 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v2 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v2 = *(unsigned __int8 *)(v4 + 31);
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  *(_DWORD *)(a1 + 16) = v2;
  return v2;
}

std::string *sub_180AF80(std::string *result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 8);
  if (v2) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v2 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_180AF9C()
{
  return 1;
}

void *sub_180AFA4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.InitialOfflineSuggestionResult");
}

uint64_t sub_180AFB4(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  unint64_t v4 = (void *)(a1 + 8);
  *(void *)a1 = off_24DFC98;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 24) = &qword_2550250;
  if (*(unsigned char *)(a2 + 16))
  {
    unint64_t v6 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      unint64_t v6 = (uint64_t *)*v6;
    }
    sub_1881DF4((std::string **)(a1 + 24), (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL), v6);
  }
  return a1;
}

void sub_180B060(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_180B090(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  unint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_180B130(uint64_t a1)
{
  sub_180B090(a1);

  operator delete();
}

uint64_t sub_180B168(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v1 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v1 + 23) < 0)
    {
      **(unsigned char **)unint64_t v1 = 0;
      *(void *)(v1 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v1 = 0;
      *(unsigned char *)(v1 + 23) = 0;
    }
  }
  char v3 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v3) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_180B1AC(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v17 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v17, a3[11].i32[1])) {
    return *(void *)v17;
  }
  uint64_t v5 = (void *)(a1 + 8);
  while (1)
  {
    unint64_t v6 = (char *)(*(void *)v17 + 1);
    unsigned int v7 = **(unsigned char **)v17;
    if ((char)**(unsigned char **)v17 < 0)
    {
      unsigned int v8 = v7 + (*v6 << 7);
      unsigned int v7 = v8 - 128;
      if (*v6 < 0)
      {
        unint64_t v6 = (char *)sub_188C180(*(uint64_t *)v17, v8 - 128);
        unsigned int v7 = v9;
      }
      else
      {
        unint64_t v6 = (char *)(*(void *)v17 + 2);
      }
    }
    *(void *)int v17 = v6;
    if (v7 != 10) {
      break;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v13 = *(void *)(a1 + 8);
    uint64_t v14 = (uint64_t *)(v13 & 0xFFFFFFFFFFFFFFFCLL);
    if (v13) {
      uint64_t v14 = (uint64_t *)*v14;
    }
    uint64_t v15 = (std::string *)sub_1880F84((void *)(a1 + 24), v14);
    unsigned int v12 = (void *)sub_188C244(v15, *(char **)v17, (uint64_t)a3);
LABEL_18:
    *(void *)int v17 = v12;
    if (!v12) {
      goto LABEL_25;
    }
    if (sub_11947B8((uint64_t)a3, (char **)v17, a3[11].i32[1])) {
      return *(void *)v17;
    }
  }
  if (v7) {
    BOOL v10 = (v7 & 7) == 4;
  }
  else {
    BOOL v10 = 1;
  }
  if (!v10)
  {
    if (*v5)
    {
      unint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unint64_t v6 = *(char **)v17;
    }
    unsigned int v12 = sub_1885AC0(v7, v11, v6, a3);
    goto LABEL_18;
  }
  if (v6)
  {
    a3[10].i32[0] = v7 - 1;
    return *(void *)v17;
  }
LABEL_25:
  *(void *)int v17 = 0;
  return *(void *)v17;
}

char *sub_180B304(uint64_t a1, char *__dst, void *a3)
{
  unint64_t v4 = __dst;
  if (*(unsigned char *)(a1 + 16)) {
    unint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  uint64_t v6 = *(void *)(a1 + 8);
  if ((v6 & 1) == 0) {
    return v4;
  }
  unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v8 + 31) < 0)
  {
    unsigned int v9 = *(void **)(v8 + 8);
    uint64_t v10 = *(void *)(v8 + 16);
  }
  else
  {
    unsigned int v9 = (void *)(v8 + 8);
    LODWORD(v10) = *(unsigned __int8 *)(v8 + 31);
  }
  if (*a3 - (void)v4 >= (int)v10)
  {
    uint64_t v11 = (int)v10;
    memcpy(v4, v9, (int)v10);
    v4 += v11;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v9, v10, v4);
}

uint64_t sub_180B3D0(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v3 = *(unsigned __int8 *)(v2 + 23);
    uint64_t v4 = *(void *)(v2 + 8);
    if ((v3 & 0x80u) == 0) {
      uint64_t v4 = v3;
    }
    uint64_t v1 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  else
  {
    uint64_t v1 = 0;
  }
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5)
  {
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v7 + 31) < 0) {
      uint64_t v8 = *(void *)(v7 + 16);
    }
    else {
      uint64_t v8 = *(unsigned __int8 *)(v7 + 31);
    }
    v1 += v8;
  }
  *(_DWORD *)(a1 + 20) = v1;
  return v1;
}

uint64_t sub_180B454()
{
  return 1;
}

void *sub_180B45C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.IpGeoLookupParameters");
}

uint64_t sub_180B46C(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (void *)(a1 + 8);
  *(void *)a1 = off_24DFD18;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 24) = &qword_2550250;
  int v6 = *(_DWORD *)(a2 + 16);
  if (v6)
  {
    unint64_t v7 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      unint64_t v7 = (uint64_t *)*v7;
    }
    sub_1881DF4((std::string **)(a1 + 24), (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL), v7);
    int v6 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 32) = &qword_2550250;
  if ((v6 & 2) != 0)
  {
    uint64_t v8 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v8 = (uint64_t *)*v8;
    }
    sub_1881DF4((std::string **)(a1 + 32), (long long *)(*(void *)(a2 + 32) & 0xFFFFFFFFFFFFFFFELL), v8);
    int v6 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 40) = &qword_2550250;
  if ((v6 & 4) != 0)
  {
    unsigned int v9 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      unsigned int v9 = (uint64_t *)*v9;
    }
    sub_1881DF4((std::string **)(a1 + 40), (long long *)(*(void *)(a2 + 40) & 0xFFFFFFFFFFFFFFFELL), v9);
    int v6 = *(_DWORD *)(a2 + 16);
  }
  if ((v6 & 8) != 0) {
    operator new();
  }
  *(void *)(a1 + 48) = 0;
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  return a1;
}

void sub_180B5B8()
{
}

uint64_t sub_180B608(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_14;
    }
  }
  else if (v4)
  {
    goto LABEL_14;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(uint64_t **)(a1 + 40) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 40));
  }
  if ((uint64_t (***)())a1 != &off_254C100 && *(void *)(a1 + 48))
  {
    sub_15B0994();
    operator delete();
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_14:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_180B704(uint64_t a1)
{
  sub_180B608(a1);

  operator delete();
}

unsigned char *sub_180B73C(unsigned char *result)
{
  uint64_t v1 = result;
  int v2 = *((_DWORD *)result + 4);
  if ((v2 & 0xF) == 0) {
    goto LABEL_7;
  }
  if (v2)
  {
    unint64_t v5 = *((void *)result + 3) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v5 + 23) < 0)
    {
      **(unsigned char **)unint64_t v5 = 0;
      *(void *)(v5 + 8) = 0;
      if ((v2 & 2) != 0) {
        goto LABEL_15;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v5 = 0;
      *(unsigned char *)(v5 + 23) = 0;
      if ((v2 & 2) != 0) {
        goto LABEL_15;
      }
    }
LABEL_4:
    if ((v2 & 4) == 0) {
      goto LABEL_5;
    }
    goto LABEL_19;
  }
  if ((v2 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_15:
  unint64_t v6 = *((void *)result + 4) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v6 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v6 = 0;
    *(unsigned char *)(v6 + 23) = 0;
    if ((v2 & 4) != 0) {
      goto LABEL_19;
    }
LABEL_5:
    if ((v2 & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  **(unsigned char **)unint64_t v6 = 0;
  *(void *)(v6 + 8) = 0;
  if ((v2 & 4) == 0) {
    goto LABEL_5;
  }
LABEL_19:
  unint64_t v7 = *((void *)result + 5) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v7 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v7 = 0;
    *(unsigned char *)(v7 + 23) = 0;
    if ((v2 & 8) == 0) {
      goto LABEL_7;
    }
LABEL_6:
    uint64_t result = sub_15B09D0(*((void *)result + 6));
    goto LABEL_7;
  }
  **(unsigned char **)unint64_t v7 = 0;
  *(void *)(v7 + 8) = 0;
  if ((v2 & 8) != 0) {
    goto LABEL_6;
  }
LABEL_7:
  char v4 = v1[8];
  uint64_t v3 = v1 + 8;
  *((_DWORD *)v3 + 12) = 0;
  *((_DWORD *)v3 + 2) = 0;
  if (v4)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_180B844(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v28 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v28, a3[11].i32[1])) {
    return *(void *)v28;
  }
  unint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    unint64_t v7 = (unsigned __int8 *)(*(void *)v28 + 1);
    unsigned int v8 = **(unsigned char **)v28;
    if ((char)**(unsigned char **)v28 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if ((char)*v7 < 0)
      {
        unint64_t v7 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v28, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        unint64_t v7 = (unsigned __int8 *)(*(void *)v28 + 2);
      }
    }
    *(void *)uint64_t v28 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 8) {
          goto LABEL_35;
        }
        uint64_t v11 = (char *)(v7 + 1);
        unint64_t v12 = *v7;
        if (((char)*v7 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v13 = *v11;
        int v14 = v12 + (v13 << 7);
        unint64_t v12 = (v14 - 128);
        if (v13 < 0)
        {
          *(void *)uint64_t v28 = sub_188C138((uint64_t)v7, (v14 - 128));
          if (!*(void *)v28) {
            return 0;
          }
          unint64_t v12 = v26;
        }
        else
        {
          uint64_t v11 = (char *)(v7 + 2);
LABEL_13:
          *(void *)uint64_t v28 = v11;
        }
        if (sub_13E78E4(v12))
        {
          *(_DWORD *)(a1 + 16) |= 0x10u;
          *(_DWORD *)(a1 + 56) = v12;
        }
        else
        {
          if (*v6) {
            uint64_t v27 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v27 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(1, v12, v27);
        }
        goto LABEL_43;
      case 2u:
        if (v8 != 18) {
          goto LABEL_35;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v15 = *(void *)(a1 + 8);
        unint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          unint64_t v16 = (uint64_t *)*v16;
        }
        int v17 = (void *)(a1 + 24);
        goto LABEL_34;
      case 3u:
        if (v8 != 26) {
          goto LABEL_35;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v18 = *(void *)(a1 + 48);
        if (!v18)
        {
          uint64_t v19 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v19 = (void *)*v19;
          }
          uint64_t v18 = sub_15C1918((uint64_t)v19);
          *(void *)(a1 + 48) = v18;
          unint64_t v7 = *(unsigned __int8 **)v28;
        }
        unint64_t v20 = sub_1198F14(a3, v18, v7);
        goto LABEL_42;
      case 4u:
        if (v8 != 34) {
          goto LABEL_35;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v21 = *(void *)(a1 + 8);
        unint64_t v16 = (uint64_t *)(v21 & 0xFFFFFFFFFFFFFFFCLL);
        if (v21) {
          unint64_t v16 = (uint64_t *)*v16;
        }
        int v17 = (void *)(a1 + 32);
        goto LABEL_34;
      case 5u:
        if (v8 != 42) {
          goto LABEL_35;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v22 = *(void *)(a1 + 8);
        unint64_t v16 = (uint64_t *)(v22 & 0xFFFFFFFFFFFFFFFCLL);
        if (v22) {
          unint64_t v16 = (uint64_t *)*v16;
        }
        int v17 = (void *)(a1 + 40);
LABEL_34:
        uint64_t v23 = (std::string *)sub_1880F84(v17, v16);
        unint64_t v20 = (void *)sub_188C244(v23, *(char **)v28, (uint64_t)a3);
        goto LABEL_42;
      default:
LABEL_35:
        if (v8) {
          BOOL v24 = (v8 & 7) == 4;
        }
        else {
          BOOL v24 = 1;
        }
        if (!v24)
        {
          if (*v6)
          {
            int v25 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            int v25 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unint64_t v7 = *(unsigned __int8 **)v28;
          }
          unint64_t v20 = sub_1885AC0(v8, v25, (char *)v7, a3);
LABEL_42:
          *(void *)uint64_t v28 = v20;
          if (!v20) {
            return 0;
          }
LABEL_43:
          if (sub_11947B8((uint64_t)a3, (char **)v28, a3[11].i32[1])) {
            return *(void *)v28;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return *(void *)v28;
    }
  }
}

char *sub_180BB54(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= __dst) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 56);
    *char v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    char v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
    if ((v6 & 8) == 0)
    {
LABEL_10:
      if ((v6 & 2) == 0) {
        goto LABEL_11;
      }
      goto LABEL_22;
    }
  }
  else if ((v6 & 8) == 0)
  {
    goto LABEL_10;
  }
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v12 = *(void *)(a1 + 48);
  *char v4 = 26;
  unsigned int v13 = *(_DWORD *)(v12 + 44);
  v4[1] = v13;
  if (v13 > 0x7F) {
    int v14 = sub_188A9CC(v13, v4 + 1);
  }
  else {
    int v14 = v4 + 2;
  }
  char v4 = sub_15B0C0C(v12, v14, a3);
  if ((v6 & 2) == 0)
  {
LABEL_11:
    if ((v6 & 4) == 0) {
      goto LABEL_13;
    }
    goto LABEL_12;
  }
LABEL_22:
  char v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) != 0) {
LABEL_12:
  }
    char v4 = sub_117A0AC(a3, 5, (const void **)(*(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL), v4);
LABEL_13:
  uint64_t v10 = *(void *)(a1 + 8);
  if ((v10 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v10 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    unint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    unint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_180BD5C(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0x1F) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_24;
  }
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
  uint64_t v6 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    uint64_t v6 = v5;
  }
  uint64_t v3 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 2) != 0)
  {
LABEL_9:
    unint64_t v7 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v8 = *(unsigned __int8 *)(v7 + 23);
    uint64_t v9 = *(void *)(v7 + 8);
    if ((v8 & 0x80u) == 0) {
      uint64_t v9 = v8;
    }
    v3 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v2 & 4) != 0)
  {
    unint64_t v10 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v11 = *(unsigned __int8 *)(v10 + 23);
    uint64_t v12 = *(void *)(v10 + 8);
    if ((v11 & 0x80u) == 0) {
      uint64_t v12 = v11;
    }
    v3 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 8) == 0)
    {
LABEL_14:
      if ((v2 & 0x10) == 0) {
        goto LABEL_24;
      }
      goto LABEL_20;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_14;
  }
  uint64_t v13 = sub_15B0D90(*(void *)(a1 + 48));
  v3 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x10) == 0) {
    goto LABEL_24;
  }
LABEL_20:
  int v14 = *(_DWORD *)(a1 + 56);
  if (v14 < 0) {
    uint64_t v15 = 11;
  }
  else {
    uint64_t v15 = ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v3 += v15;
LABEL_24:
  uint64_t v16 = *(void *)(a1 + 8);
  if (v16)
  {
    unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v18 + 31) < 0) {
      uint64_t v19 = *(void *)(v18 + 16);
    }
    else {
      uint64_t v19 = *(unsigned __int8 *)(v18 + 31);
    }
    v3 += v19;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

void sub_180BF10(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0x1F) != 0)
  {
    if (v4)
    {
      uint64_t v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      unint64_t v7 = (std::string **)(a1 + 24);
      uint64_t v8 = *(void *)(a1 + 8);
      uint64_t v9 = (uint64_t *)(v8 & 0xFFFFFFFFFFFFFFFCLL);
      if (v8) {
        uint64_t v9 = (uint64_t *)*v9;
      }
      sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_19;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    unint64_t v10 = (long long *)(*(void *)(a2 + 32) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v11 = *(void *)(a1 + 8);
    uint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
    if (v11) {
      uint64_t v12 = (uint64_t *)*v12;
    }
    sub_1881DF4((std::string **)(a1 + 32), v10, v12);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_22;
    }
LABEL_19:
    uint64_t v13 = (long long *)(*(void *)(a2 + 40) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 4u;
    uint64_t v14 = *(void *)(a1 + 8);
    uint64_t v15 = (uint64_t *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
    if (v14) {
      uint64_t v15 = (uint64_t *)*v15;
    }
    sub_1881DF4((std::string **)(a1 + 40), v13, v15);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0)
      {
LABEL_8:
        *(_DWORD *)(a1 + 16) |= v4;
        goto LABEL_9;
      }
LABEL_7:
      *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
      goto LABEL_8;
    }
LABEL_22:
    *(_DWORD *)(a1 + 16) |= 8u;
    uint64_t v16 = *(void *)(a1 + 48);
    if (!v16)
    {
      uint64_t v17 = *(void *)(a1 + 8);
      unint64_t v18 = (void *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
      if (v17) {
        unint64_t v18 = (void *)*v18;
      }
      uint64_t v16 = sub_15C1918((uint64_t)v18);
      *(void *)(a1 + 48) = v16;
    }
    if (*(void *)(a2 + 48)) {
      uint64_t v19 = *(uint64_t (****)())(a2 + 48);
    }
    else {
      uint64_t v19 = &off_253F1A0;
    }
    sub_15B0E24(v16, (uint64_t)v19);
    if ((v4 & 0x10) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
LABEL_9:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_180C090(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 8) == 0) {
    return 1;
  }
  uint64_t result = sub_15B0F18(*(void *)(a1 + 48));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_180C0BC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.IpGeoLookupResult");
}

uint64_t sub_180C0CC(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_24DFD98;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  if (*(unsigned char *)(a2 + 16)) {
    operator new();
  }
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = v5;
  return a1;
}

void sub_180C17C()
{
}

uint64_t sub_180C1CC(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_254C140)
  {
    uint64_t v6 = *(void *)(a1 + 24);
    if (v6)
    {
      sub_15B3DFC(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_180C284(uint64_t a1)
{
  sub_180C1CC(a1);

  operator delete();
}

uint64_t sub_180C2BC(uint64_t result)
{
  uint64_t v1 = result;
  if (*(unsigned char *)(result + 16)) {
    uint64_t result = sub_15B043C(*(void *)(result + 24));
  }
  char v3 = *(unsigned char *)(v1 + 8);
  uint64_t v2 = v1 + 8;
  *(void *)(v2 + 24) = 0;
  *(_DWORD *)(v2 + 8) = 0;
  if (v3)
  {
    return sub_188B4AC((uint64_t *)v2);
  }
  return result;
}

char *sub_180C31C(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v23 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v23, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v23 + 1;
    unsigned int v9 = *v23;
    if (*v23 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v23, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v23 + 2;
      }
    }
    uint64_t v23 = v8;
    if (v9 >> 3 == 2) {
      break;
    }
    if (v9 >> 3 != 1 || v9 != 8) {
      goto LABEL_13;
    }
    v5 |= 2u;
    unint64_t v18 = v8 + 1;
    uint64_t v19 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_31;
    }
    int v20 = *v18;
    uint64_t v19 = v19 + (v20 << 7) - 128;
    if ((v20 & 0x80000000) == 0)
    {
      unint64_t v18 = v8 + 2;
LABEL_31:
      uint64_t v23 = v18;
      *(void *)(a1 + 32) = v19;
      goto LABEL_32;
    }
    uint64_t v21 = (char *)sub_188C138((uint64_t)v8, v19);
    uint64_t v23 = v21;
    *(void *)(a1 + 32) = v22;
    if (!v21) {
      goto LABEL_39;
    }
LABEL_32:
    if (sub_11947B8((uint64_t)a3, &v23, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 == 18)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v16 = *(void *)(a1 + 24);
    if (!v16)
    {
      uint64_t v17 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v7) {
        uint64_t v17 = (void *)*v17;
      }
      uint64_t v16 = sub_15C1CB4((uint64_t)v17);
      *(void *)(a1 + 24) = v16;
      uint64_t v8 = v23;
    }
    uint64_t v15 = sub_11B3E48(a3, v16, (unsigned __int8 *)v8);
LABEL_26:
    uint64_t v23 = v15;
    if (!v15) {
      goto LABEL_39;
    }
    goto LABEL_32;
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      uint64_t v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = v23;
    }
    uint64_t v15 = (char *)sub_1885AC0(v9, v14, v8, a3);
    goto LABEL_26;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_39:
  uint64_t v23 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v23;
}

char *sub_180C500(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(void *)(a1 + 32);
    *uint64_t v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 24);
    *uint64_t v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 44);
    v4[1] = v11;
    if (v11 > 0x7F) {
      uint64_t v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      uint64_t v12 = v4 + 2;
    }
    uint64_t v4 = sub_15B43E4(v10, v12, a3);
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    uint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    uint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_180C68C(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 3) == 0)
  {
    uint64_t result = 0;
    goto LABEL_8;
  }
  if (v2)
  {
    uint64_t v4 = sub_15B4924(*(void *)(a1 + 24));
    uint64_t result = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t result = 0;
  if ((v2 & 2) != 0) {
LABEL_7:
  }
    result += ((9 * (__clz(*(void *)(a1 + 32) | 1) ^ 0x3F) + 73) >> 6) + 1;
LABEL_8:
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5)
  {
    unint64_t v6 = v5 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v6 + 31) < 0) {
      uint64_t v7 = *(void *)(v6 + 16);
    }
    else {
      uint64_t v7 = *(unsigned __int8 *)(v6 + 31);
    }
    result += v7;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

void sub_180C74C(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 3) != 0)
  {
    if (v4)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v5 = *(void *)(a1 + 24);
      if (!v5)
      {
        uint64_t v6 = *(void *)(a1 + 8);
        uint64_t v7 = (void *)(v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (v6) {
          uint64_t v7 = (void *)*v7;
        }
        uint64_t v5 = sub_15C1CB4((uint64_t)v7);
        *(void *)(a1 + 24) = v5;
      }
      if (*(void *)(a2 + 24)) {
        unint64_t v8 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        unint64_t v8 = &off_253F2E8;
      }
      sub_15B04F0(v5, (uint64_t)v8);
    }
    if ((v4 & 2) != 0) {
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
    }
    *(_DWORD *)(a1 + 16) |= v4;
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_180C81C(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 1;
  }
  uint64_t result = sub_15B06D8(*(void *)(a1 + 24));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_180C848@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.GroundViewLabelParameters");
}

uint64_t sub_180C858(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_24DFE18;
  *(_DWORD *)(a1 + 16) = 0;
  uint64_t v3 = *(void *)(a2 + 8);
  if (v3) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v3 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return a1;
}

void sub_180C8C4(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_180C8F4(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_180C968(void *a1)
{
  sub_180C8F4(a1);

  operator delete();
}

uint64_t *sub_180C9A0(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = (uint64_t *)(a1 + 8);
  if (v2) {
    return (uint64_t *)sub_188B4AC(result);
  }
  return result;
}

char *sub_180C9B0(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v12 = a2;
  int v4 = (uint64_t *)(a1 + 8);
  while (1)
  {
    if (sub_11947B8((uint64_t)a3, &v12, a3[11].i32[1])) {
      return v12;
    }
    uint64_t v5 = v12 + 1;
    unsigned int v6 = *v12;
    if (*v12 < 0)
    {
      unsigned int v7 = v6 + (*v5 << 7);
      unsigned int v6 = v7 - 128;
      if (*v5 < 0)
      {
        uint64_t v5 = (char *)sub_188C180((uint64_t)v12, v7 - 128);
        unsigned int v6 = v8;
      }
      else
      {
        uint64_t v5 = v12 + 2;
      }
    }
    uint64_t v12 = v5;
    if (!v6 || (v6 & 7) == 4) {
      break;
    }
    if (*v4)
    {
      uint64_t v10 = (std::string *)((*v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v10 = (std::string *)sub_188DBD8(v4);
      uint64_t v5 = v12;
    }
    uint64_t v12 = (char *)sub_1885AC0(v6, v10, v5, a3);
    if (!v12) {
      return 0;
    }
  }
  if (v5) {
    a3[10].i32[0] = v6 - 1;
  }
  return v5;
}

char *sub_180CAB0(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v4 = *(void *)(a1 + 8);
  if ((v4 & 1) == 0) {
    return __dst;
  }
  unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v6 + 31) < 0)
  {
    unsigned int v7 = *(void **)(v6 + 8);
    unint64_t v6 = *(void *)(v6 + 16);
  }
  else
  {
    unsigned int v7 = (void *)(v6 + 8);
    LODWORD(v6) = *(unsigned __int8 *)(v6 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v6)
  {
    uint64_t v8 = (int)v6;
    memcpy(__dst, v7, (int)v6);
    __dst += v8;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v7, v6, __dst);
}

uint64_t sub_180CB48(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (v1)
  {
    unint64_t v4 = v1 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v2 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v2 = *(unsigned __int8 *)(v4 + 31);
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  *(_DWORD *)(a1 + 16) = v2;
  return v2;
}

std::string *sub_180CB7C(std::string *result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 8);
  if (v2) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v2 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_180CB98()
{
  return 1;
}

void *sub_180CBA0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.GroundViewLabelResult");
}

uint64_t sub_180CBB0(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  unint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = (uint64_t *)(a1 + 16);
  *(void *)a1 = off_24DFE98;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  int v6 = *(_DWORD *)(a2 + 24);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 32);
    uint64_t v8 = (uint64_t *)sub_188CCE4(a1 + 16, *(_DWORD *)(a2 + 24));
    sub_18796C8(v5, v8, (uint64_t *)(v7 + 8), v6, **(_DWORD **)(a1 + 32) - *(_DWORD *)(a1 + 24));
    int v9 = *(_DWORD *)(a1 + 24) + v6;
    *(_DWORD *)(a1 + 24) = v9;
    uint64_t v10 = *(int **)(a1 + 32);
    if (*v10 < v9) {
      *uint64_t v10 = v9;
    }
  }
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  int v11 = *(_DWORD *)(a2 + 48);
  if (v11)
  {
    uint64_t v12 = *(void *)(a2 + 56);
    uint64_t v13 = (uint64_t *)sub_188CCE4(a1 + 40, *(_DWORD *)(a2 + 48));
    sub_1879754((uint64_t *)(a1 + 40), v13, (uint64_t *)(v12 + 8), v11, **(_DWORD **)(a1 + 56) - *(_DWORD *)(a1 + 48));
    int v14 = *(_DWORD *)(a1 + 48) + v11;
    *(_DWORD *)(a1 + 48) = v14;
    unint64_t v15 = *(int **)(a1 + 56);
    if (*v15 < v14) {
      int *v15 = v14;
    }
  }
  *(_DWORD *)(a1 + 64) = 0;
  uint64_t v16 = *(void *)(a2 + 8);
  if (v16) {
    sub_188B4F8(v4, (v16 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return a1;
}

void sub_180CD00(_Unwind_Exception *a1)
{
  sub_1877FB8(v4);
  sub_1877F38(v3);
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_180CD58(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1877FB8(a1 + 5);
  sub_1877F38(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_180CDE4(void *a1)
{
  sub_180CD58(a1);

  operator delete();
}

uint64_t sub_180CE1C(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 24);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 32) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_16CBAF0(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 24) = 0;
  }
  uint64_t v5 = *(unsigned int *)(v1 + 48);
  if ((int)v5 >= 1)
  {
    int v6 = (uint64_t *)(*(void *)(v1 + 56) + 8);
    do
    {
      uint64_t v7 = *v6++;
      uint64_t result = sub_16CCD9C(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(v1 + 48) = 0;
  }
  char v9 = *(unsigned char *)(v1 + 8);
  uint64_t v8 = (uint64_t *)(v1 + 8);
  if (v9)
  {
    return sub_188B4AC(v8);
  }
  return result;
}

char *sub_180CEC0(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v26 = a2;
  if ((sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1]) & 1) == 0)
  {
    int v6 = (void *)(a1 + 8);
    while (1)
    {
      uint64_t v7 = v26 + 1;
      unsigned int v8 = *v26;
      if (*v26 < 0)
      {
        unsigned int v9 = v8 + (*v7 << 7);
        unsigned int v8 = v9 - 128;
        if (*v7 < 0)
        {
          uint64_t v7 = (char *)sub_188C180((uint64_t)v26, v9 - 128);
          unsigned int v8 = v10;
        }
        else
        {
          uint64_t v7 = v26 + 2;
        }
      }
      unint64_t v26 = v7;
      if (v8 >> 3 == 2)
      {
        if (v8 == 18)
        {
          int v14 = v7 - 1;
          while (1)
          {
            unint64_t v15 = (unsigned __int8 *)(v14 + 1);
            unint64_t v26 = v14 + 1;
            uint64_t v16 = *(_DWORD **)(a1 + 56);
            if (v16 && (uint64_t v17 = *(int *)(a1 + 48), (int)v17 < *v16))
            {
              *(_DWORD *)(a1 + 48) = v17 + 1;
              uint64_t v18 = *(void *)&v16[2 * v17 + 2];
            }
            else
            {
              sub_17870E8(*(void *)(a1 + 40));
              uint64_t v18 = sub_188CDC8(a1 + 40, v19);
              unint64_t v15 = (unsigned __int8 *)v26;
            }
            int v14 = sub_180D198(a3, v18, v15);
            unint64_t v26 = v14;
            if (!v14) {
              return 0;
            }
            if (*(void *)a3 <= (unint64_t)v14 || *v14 != 18) {
              goto LABEL_39;
            }
          }
        }
      }
      else if (v8 >> 3 == 1 && v8 == 10)
      {
        int v20 = v7 - 1;
        while (1)
        {
          uint64_t v21 = (unsigned __int8 *)(v20 + 1);
          unint64_t v26 = v20 + 1;
          uint64_t v22 = *(_DWORD **)(a1 + 32);
          if (v22 && (uint64_t v23 = *(int *)(a1 + 24), (int)v23 < *v22))
          {
            *(_DWORD *)(a1 + 24) = v23 + 1;
            uint64_t v24 = *(void *)&v22[2 * v23 + 2];
          }
          else
          {
            sub_1787024(*(void *)(a1 + 16));
            uint64_t v24 = sub_188CDC8(a1 + 16, v25);
            uint64_t v21 = (unsigned __int8 *)v26;
          }
          int v20 = sub_180D108(a3, v24, v21);
          unint64_t v26 = v20;
          if (!v20) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v20 || *v20 != 10) {
            goto LABEL_39;
          }
        }
      }
      if (!v8 || (v8 & 7) == 4) {
        break;
      }
      if (*v6)
      {
        uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        uint64_t v7 = v26;
      }
      unint64_t v26 = (char *)sub_1885AC0(v8, v13, v7, a3);
      if (!v26) {
        return 0;
      }
LABEL_39:
      if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
        return v26;
      }
    }
    if (v7)
    {
      a3[10].i32[0] = v8 - 1;
      return v26;
    }
    return 0;
  }
  return v26;
}

char *sub_180D108(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16CBBA0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_180D198(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16CCE18(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_180D228(uint64_t a1, char *__dst, _DWORD *a3)
{
  int v6 = *(_DWORD *)(a1 + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unsigned int v10 = __dst + 2;
      }
      __dst = sub_16CC250(v8, (unint64_t)v10, a3);
    }
  }
  int v11 = *(_DWORD *)(a1 + 48);
  if (v11)
  {
    for (int j = 0; j != v11; ++j)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v13 = *(void *)(*(void *)(a1 + 56) + 8 * j + 8);
      *__dst = 18;
      unsigned int v14 = *(_DWORD *)(v13 + 20);
      __dst[1] = v14;
      if (v14 > 0x7F) {
        unint64_t v15 = sub_188A9CC(v14, __dst + 1);
      }
      else {
        unint64_t v15 = __dst + 2;
      }
      __dst = sub_16CD224(v13, (unint64_t)v15, a3);
    }
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return __dst;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    uint64_t v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    uint64_t v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(__dst, v19, (int)v20);
    __dst += v21;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v19, v20, __dst);
}

uint64_t sub_180D3F0(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_16CC794(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(int *)(a1 + 48);
  uint64_t v9 = v2 + v8;
  uint64_t v10 = *(void *)(a1 + 56);
  if (v10) {
    int v11 = (uint64_t *)(v10 + 8);
  }
  else {
    int v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_16CD544(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  uint64_t v15 = *(void *)(a1 + 8);
  if (v15)
  {
    unint64_t v17 = v15 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v17 + 31) < 0) {
      uint64_t v18 = *(void *)(v17 + 16);
    }
    else {
      uint64_t v18 = *(unsigned __int8 *)(v17 + 31);
    }
    v9 += v18;
  }
  *(_DWORD *)(a1 + 64) = v9;
  return v9;
}

void sub_180D4F0(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 32) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 16, *(_DWORD *)(a2 + 24));
    sub_18796C8((uint64_t *)(a1 + 16), v6, v5, v4, **(_DWORD **)(a1 + 32) - *(_DWORD *)(a1 + 24));
    int v7 = *(_DWORD *)(a1 + 24) + v4;
    *(_DWORD *)(a1 + 24) = v7;
    uint64_t v8 = *(int **)(a1 + 32);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 48);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 56) + 8);
    int v11 = (uint64_t *)sub_188CCE4(a1 + 40, *(_DWORD *)(a2 + 48));
    sub_1879754((uint64_t *)(a1 + 40), v11, v10, v9, **(_DWORD **)(a1 + 56) - *(_DWORD *)(a1 + 48));
    int v12 = *(_DWORD *)(a1 + 48) + v9;
    *(_DWORD *)(a1 + 48) = v12;
    uint64_t v13 = *(int **)(a1 + 56);
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  uint64_t v14 = *(void *)(a2 + 8);
  if (v14)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v14 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_180D624(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 24);
  while ((int)v2 >= 1)
  {
    uint64_t v3 = v2 - 1;
    char v4 = sub_16CCC30(*(void *)(*(void *)(a1 + 32) + 8 * v2));
    uint64_t v2 = v3;
    if ((v4 & 1) == 0) {
      return 0;
    }
  }

  return sub_11A12C8(a1 + 40);
}

void *sub_180D68C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.BatchSpatialLookupParameters");
}

uint64_t sub_180D69C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  char v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_254C1C8)
  {
    uint64_t v6 = *(void *)(a1 + 48);
    if (v6)
    {
      sub_15B1678(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  sub_1878038((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_180D760(uint64_t a1)
{
  sub_180D69C(a1);

  operator delete();
}

uint64_t sub_180D798(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_16CDA30(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  if (*(unsigned char *)(v1 + 16)) {
    uint64_t result = (uint64_t)sub_15B16B4(*(unsigned char **)(v1 + 48));
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = v1 + 8;
  *(_DWORD *)(v5 + 48) = 0;
  *(_DWORD *)(v5 + 8) = 0;
  if (v6)
  {
    return sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

char *sub_180D82C(uint64_t a1, char *a2, int32x2_t *a3)
{
  BOOL v30 = a2;
  if (sub_11947B8((uint64_t)a3, &v30, a3[11].i32[1])) {
    return v30;
  }
  char v6 = (void *)(a1 + 8);
  while (1)
  {
    int v7 = v30 + 1;
    unsigned int v8 = *v30;
    if (*v30 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        int v7 = (char *)sub_188C180((uint64_t)v30, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        int v7 = v30 + 2;
      }
    }
    BOOL v30 = v7;
    unsigned int v11 = v8 >> 3;
    if (v8 >> 3 != 3) {
      break;
    }
    if (v8 != 26) {
      goto LABEL_14;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v16 = *(void *)(a1 + 48);
    if (!v16)
    {
      unint64_t v17 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        unint64_t v17 = (void *)*v17;
      }
      uint64_t v16 = sub_15C19EC((uint64_t)v17);
      *(void *)(a1 + 48) = v16;
      int v7 = v30;
    }
    uint64_t v15 = sub_11E1C60(a3, v16, (unsigned __int8 *)v7);
LABEL_27:
    BOOL v30 = v15;
    if (!v15) {
      return 0;
    }
LABEL_45:
    if (sub_11947B8((uint64_t)a3, &v30, a3[11].i32[1])) {
      return v30;
    }
  }
  if (v11 == 2)
  {
    if (v8 == 18)
    {
      uint64_t v18 = v7 - 1;
      while (1)
      {
        uint64_t v19 = (unsigned __int8 *)(v18 + 1);
        BOOL v30 = v18 + 1;
        uint64_t v20 = *(_DWORD **)(a1 + 40);
        if (v20 && (uint64_t v21 = *(int *)(a1 + 32), (int)v21 < *v20))
        {
          *(_DWORD *)(a1 + 32) = v21 + 1;
          uint64_t v22 = *(void *)&v20[2 * v21 + 2];
        }
        else
        {
          uint64_t v23 = sub_1787190(*(void *)(a1 + 24));
          uint64_t v22 = sub_188CDC8(a1 + 24, (uint64_t)v23);
          uint64_t v19 = (unsigned __int8 *)v30;
        }
        uint64_t v18 = sub_180DAE0(a3, v22, v19);
        BOOL v30 = v18;
        if (!v18) {
          return 0;
        }
        if (*(void *)a3 <= (unint64_t)v18 || *v18 != 18) {
          goto LABEL_45;
        }
      }
    }
  }
  else if (v11 == 1 && v8 == 8)
  {
    uint64_t v24 = v7 + 1;
    unint64_t v25 = *v7;
    if ((*v7 & 0x80000000) == 0) {
      goto LABEL_42;
    }
    int v26 = *v24;
    int v27 = v25 + (v26 << 7);
    unint64_t v25 = (v27 - 128);
    if (v26 < 0)
    {
      BOOL v30 = (char *)sub_188C138((uint64_t)v7, (v27 - 128));
      if (!v30) {
        return 0;
      }
      unint64_t v25 = v28;
    }
    else
    {
      uint64_t v24 = v7 + 2;
LABEL_42:
      BOOL v30 = v24;
    }
    if (sub_13E78E4(v25))
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      *(_DWORD *)(a1 + 56) = v25;
    }
    else
    {
      if (*v6) {
        int v29 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        int v29 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      sub_188C020(1, v25, v29);
    }
    goto LABEL_45;
  }
LABEL_14:
  if (v8) {
    BOOL v13 = (v8 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v6)
    {
      uint64_t v14 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v7 = v30;
    }
    uint64_t v15 = (char *)sub_1885AC0(v8, v14, v7, a3);
    goto LABEL_27;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v30;
  }
  return 0;
}

char *sub_180DAE0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16CDABC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_180DB70(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 56);
    *uint64_t v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v10 = *(_DWORD *)(a1 + 32);
  if (v10)
  {
    for (int i = 0; i != v10; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v12 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *uint64_t v4 = 18;
      unsigned int v13 = *(_DWORD *)(v12 + 20);
      v4[1] = v13;
      if (v13 > 0x7F) {
        uint64_t v14 = sub_188A9CC(v13, v4 + 1);
      }
      else {
        uint64_t v14 = v4 + 2;
      }
      uint64_t v4 = sub_16CDE44(v12, (unint64_t)v14, a3);
    }
  }
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v15 = *(void *)(a1 + 48);
    *uint64_t v4 = 26;
    unsigned int v16 = *(_DWORD *)(v15 + 20);
    v4[1] = v16;
    if (v16 > 0x7F) {
      unint64_t v17 = sub_188A9CC(v16, v4 + 1);
    }
    else {
      unint64_t v17 = v4 + 2;
    }
    uint64_t v4 = sub_15B1A68(v15, (unint64_t)v17, a3);
  }
  uint64_t v18 = *(void *)(a1 + 8);
  if ((v18 & 1) == 0) {
    return v4;
  }
  unint64_t v20 = v18 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v20 + 31) < 0)
  {
    uint64_t v21 = *(void **)(v20 + 8);
    uint64_t v22 = *(void *)(v20 + 16);
  }
  else
  {
    uint64_t v21 = (void *)(v20 + 8);
    LODWORD(v22) = *(unsigned __int8 *)(v20 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v22)
  {
    uint64_t v23 = (int)v22;
    memcpy(v4, v21, (int)v22);
    v4 += v23;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v21, v22, v4);
}

uint64_t sub_180DD98(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_16CE0D0(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 3) != 0)
  {
    if (v8)
    {
      uint64_t v9 = sub_15B1D1C(*(void *)(a1 + 48));
      v2 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v8 & 2) != 0)
    {
      int v10 = *(_DWORD *)(a1 + 56);
      if (v10 < 0) {
        uint64_t v11 = 11;
      }
      else {
        uint64_t v11 = ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
      v2 += v11;
    }
  }
  uint64_t v12 = *(void *)(a1 + 8);
  if (v12)
  {
    unint64_t v14 = v12 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v14 + 31) < 0) {
      uint64_t v15 = *(void *)(v14 + 16);
    }
    else {
      uint64_t v15 = *(unsigned __int8 *)(v14 + 31);
    }
    v2 += v15;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

void sub_180DEB8(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_18797E0((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    int v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 3) != 0)
  {
    if (v9)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v10 = *(void *)(a1 + 48);
      if (!v10)
      {
        uint64_t v11 = *(void *)(a1 + 8);
        uint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
        if (v11) {
          uint64_t v12 = (void *)*v12;
        }
        uint64_t v10 = sub_15C19EC((uint64_t)v12);
        *(void *)(a1 + 48) = v10;
      }
      if (*(void *)(a2 + 48)) {
        unsigned int v13 = *(uint64_t (****)())(a2 + 48);
      }
      else {
        unsigned int v13 = &off_253F208;
      }
      sub_15B1E3C(v10, (uint64_t)v13);
    }
    if ((v9 & 2) != 0) {
      *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
    }
    *(_DWORD *)(a1 + 16) |= v9;
  }
  uint64_t v14 = *(void *)(a2 + 8);
  if (v14)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v14 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

BOOL sub_180DFF8(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  while ((int)v2 >= 1)
  {
    uint64_t v3 = v2 - 1;
    char v4 = sub_16CE4A8(*(void *)(*(void *)(a1 + 40) + 8 * v2));
    uint64_t v2 = v3;
    if ((v4 & 1) == 0) {
      return 0;
    }
  }
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 1;
  }
  BOOL result = sub_15B1FC0(*(void *)(a1 + 48));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_180E05C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.BatchSpatialLookupResult.SpatialPlaceLookupResult");
}

uint64_t sub_180E06C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  char v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_254C208)
  {
    uint64_t v6 = *(void *)(a1 + 48);
    if (v6)
    {
      sub_15B1678(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  sub_18780B8((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_180E130(uint64_t a1)
{
  sub_180E06C(a1);

  operator delete();
}

uint64_t sub_180E168(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      BOOL result = sub_16CE704(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  if (*(unsigned char *)(v1 + 16)) {
    BOOL result = (uint64_t)sub_15B16B4(*(unsigned char **)(v1 + 48));
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = v1 + 8;
  *(_DWORD *)(v5 + 48) = 0;
  *(_DWORD *)(v5 + 8) = 0;
  if (v6)
  {
    return sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

char *sub_180E1FC(uint64_t a1, char *a2, int32x2_t *a3)
{
  BOOL v30 = a2;
  if (sub_11947B8((uint64_t)a3, &v30, a3[11].i32[1])) {
    return v30;
  }
  char v6 = (void *)(a1 + 8);
  while (1)
  {
    int v7 = v30 + 1;
    unsigned int v8 = *v30;
    if (*v30 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        int v7 = (char *)sub_188C180((uint64_t)v30, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        int v7 = v30 + 2;
      }
    }
    BOOL v30 = v7;
    unsigned int v11 = v8 >> 3;
    if (v8 >> 3 != 3) {
      break;
    }
    if (v8 != 26) {
      goto LABEL_14;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v16 = *(void *)(a1 + 48);
    if (!v16)
    {
      unint64_t v17 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        unint64_t v17 = (void *)*v17;
      }
      uint64_t v16 = sub_15C19EC((uint64_t)v17);
      *(void *)(a1 + 48) = v16;
      int v7 = v30;
    }
    uint64_t v15 = sub_11E1C60(a3, v16, (unsigned __int8 *)v7);
LABEL_27:
    BOOL v30 = v15;
    if (!v15) {
      return 0;
    }
LABEL_45:
    if (sub_11947B8((uint64_t)a3, &v30, a3[11].i32[1])) {
      return v30;
    }
  }
  if (v11 == 2)
  {
    if (v8 == 18)
    {
      uint64_t v18 = v7 - 1;
      while (1)
      {
        uint64_t v19 = (unsigned __int8 *)(v18 + 1);
        BOOL v30 = v18 + 1;
        unint64_t v20 = *(_DWORD **)(a1 + 40);
        if (v20 && (uint64_t v21 = *(int *)(a1 + 32), (int)v21 < *v20))
        {
          *(_DWORD *)(a1 + 32) = v21 + 1;
          uint64_t v22 = *(void *)&v20[2 * v21 + 2];
        }
        else
        {
          uint64_t v23 = sub_1787230(*(void *)(a1 + 24));
          uint64_t v22 = sub_188CDC8(a1 + 24, v23);
          uint64_t v19 = (unsigned __int8 *)v30;
        }
        uint64_t v18 = sub_180E4B0(a3, v22, v19);
        BOOL v30 = v18;
        if (!v18) {
          return 0;
        }
        if (*(void *)a3 <= (unint64_t)v18 || *v18 != 18) {
          goto LABEL_45;
        }
      }
    }
  }
  else if (v11 == 1 && v8 == 8)
  {
    uint64_t v24 = v7 + 1;
    unint64_t v25 = *v7;
    if ((*v7 & 0x80000000) == 0) {
      goto LABEL_42;
    }
    int v26 = *v24;
    int v27 = v25 + (v26 << 7);
    unint64_t v25 = (v27 - 128);
    if (v26 < 0)
    {
      BOOL v30 = (char *)sub_188C138((uint64_t)v7, (v27 - 128));
      if (!v30) {
        return 0;
      }
      unint64_t v25 = v28;
    }
    else
    {
      uint64_t v24 = v7 + 2;
LABEL_42:
      BOOL v30 = v24;
    }
    if (sub_13E78E4(v25))
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      *(_DWORD *)(a1 + 56) = v25;
    }
    else
    {
      if (*v6) {
        int v29 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        int v29 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      sub_188C020(1, v25, v29);
    }
    goto LABEL_45;
  }
LABEL_14:
  if (v8) {
    BOOL v13 = (v8 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v6)
    {
      uint64_t v14 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v7 = v30;
    }
    uint64_t v15 = (char *)sub_1885AC0(v8, v14, v7, a3);
    goto LABEL_27;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v30;
  }
  return 0;
}

char *sub_180E4B0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  BOOL result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    BOOL result = sub_16CE7D4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_180E540(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 56);
    *uint64_t v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v10 = *(_DWORD *)(a1 + 32);
  if (v10)
  {
    for (int i = 0; i != v10; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v12 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *uint64_t v4 = 18;
      unsigned int v13 = *(_DWORD *)(v12 + 20);
      v4[1] = v13;
      if (v13 > 0x7F) {
        uint64_t v14 = sub_188A9CC(v13, v4 + 1);
      }
      else {
        uint64_t v14 = v4 + 2;
      }
      uint64_t v4 = sub_16CECD0(v12, (unint64_t)v14, a3);
    }
  }
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v15 = *(void *)(a1 + 48);
    *uint64_t v4 = 26;
    unsigned int v16 = *(_DWORD *)(v15 + 20);
    v4[1] = v16;
    if (v16 > 0x7F) {
      unint64_t v17 = sub_188A9CC(v16, v4 + 1);
    }
    else {
      unint64_t v17 = v4 + 2;
    }
    uint64_t v4 = sub_15B1A68(v15, (unint64_t)v17, a3);
  }
  uint64_t v18 = *(void *)(a1 + 8);
  if ((v18 & 1) == 0) {
    return v4;
  }
  unint64_t v20 = v18 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v20 + 31) < 0)
  {
    uint64_t v21 = *(void **)(v20 + 8);
    uint64_t v22 = *(void *)(v20 + 16);
  }
  else
  {
    uint64_t v21 = (void *)(v20 + 8);
    LODWORD(v22) = *(unsigned __int8 *)(v20 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v22)
  {
    uint64_t v23 = (int)v22;
    memcpy(v4, v21, (int)v22);
    v4 += v23;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v21, v22, v4);
}

uint64_t sub_180E768(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_16CF044(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 3) != 0)
  {
    if (v8)
    {
      uint64_t v9 = sub_15B1D1C(*(void *)(a1 + 48));
      v2 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v8 & 2) != 0)
    {
      int v10 = *(_DWORD *)(a1 + 56);
      if (v10 < 0) {
        uint64_t v11 = 11;
      }
      else {
        uint64_t v11 = ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
      v2 += v11;
    }
  }
  uint64_t v12 = *(void *)(a1 + 8);
  if (v12)
  {
    unint64_t v14 = v12 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v14 + 31) < 0) {
      uint64_t v15 = *(void *)(v14 + 16);
    }
    else {
      uint64_t v15 = *(unsigned __int8 *)(v14 + 31);
    }
    v2 += v15;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

void sub_180E888(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_187986C((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    int v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 3) != 0)
  {
    if (v9)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v10 = *(void *)(a1 + 48);
      if (!v10)
      {
        uint64_t v11 = *(void *)(a1 + 8);
        uint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
        if (v11) {
          uint64_t v12 = (void *)*v12;
        }
        uint64_t v10 = sub_15C19EC((uint64_t)v12);
        *(void *)(a1 + 48) = v10;
      }
      if (*(void *)(a2 + 48)) {
        unsigned int v13 = *(uint64_t (****)())(a2 + 48);
      }
      else {
        unsigned int v13 = &off_253F208;
      }
      sub_15B1E3C(v10, (uint64_t)v13);
    }
    if ((v9 & 2) != 0) {
      *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
    }
    *(_DWORD *)(a1 + 16) |= v9;
  }
  uint64_t v14 = *(void *)(a2 + 8);
  if (v14)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v14 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

BOOL sub_180E9C8(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  while ((int)v2 >= 1)
  {
    uint64_t v3 = v2 - 1;
    char v4 = sub_16CF47C(*(void *)(*(void *)(a1 + 40) + 8 * v2));
    uint64_t v2 = v3;
    if ((v4 & 1) == 0) {
      return 0;
    }
  }
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 1;
  }
  BOOL result = sub_15B1FC0(*(void *)(a1 + 48));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_180EA2C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.BatchSpatialLookupResult.SpatialEventLookupResult");
}

uint64_t sub_180EA3C(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  char v4 = (uint64_t *)(a1 + 8);
  *(void *)a1 = off_24E0018;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v5 = (uint64_t *)(a1 + 24);
  *(_DWORD *)(a1 + 44) = 0;
  *(void *)(a1 + 28) = 0;
  *(void *)(a1 + 36) = 0;
  *(void *)(a1 + 20) = 0;
  int v6 = *(_DWORD *)(a2 + 32);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 40);
    int v8 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_18798F8(v5, v8, (uint64_t *)(v7 + 8), v6, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v9 = *(_DWORD *)(a1 + 32) + v6;
    *(_DWORD *)(a1 + 32) = v9;
    uint64_t v10 = *(int **)(a1 + 40);
    if (*v10 < v9) {
      *uint64_t v10 = v9;
    }
  }
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  int v11 = *(_DWORD *)(a2 + 56);
  if (v11)
  {
    uint64_t v12 = *(void *)(a2 + 64);
    unsigned int v13 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_1879984((uint64_t *)(a1 + 48), v13, (uint64_t *)(v12 + 8), v11, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v14 = *(_DWORD *)(a1 + 56) + v11;
    *(_DWORD *)(a1 + 56) = v14;
    uint64_t v15 = *(int **)(a1 + 64);
    if (*v15 < v14) {
      int *v15 = v14;
    }
  }
  uint64_t v16 = *(void *)(a2 + 8);
  if (v16) {
    sub_188B4F8(v4, (v16 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  return a1;
}

void sub_180EBA0(_Unwind_Exception *a1)
{
  sub_18781B8(v4);
  sub_1878138(v3);
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_180EBF8(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_18781B8(a1 + 6);
  sub_1878138(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_180EC84(void *a1)
{
  sub_180EBF8(a1);

  operator delete();
}

uint64_t sub_180ECBC(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      BOOL result = sub_180D798(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  uint64_t v5 = *(unsigned int *)(v1 + 56);
  if ((int)v5 >= 1)
  {
    int v6 = (uint64_t *)(*(void *)(v1 + 64) + 8);
    do
    {
      uint64_t v7 = *v6++;
      BOOL result = sub_180E168(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(v1 + 56) = 0;
  }
  char v9 = *(unsigned char *)(v1 + 8);
  uint64_t v8 = v1 + 8;
  *(_DWORD *)(v8 + 64) = 0;
  *(_DWORD *)(v8 + 8) = 0;
  if (v9)
  {
    return sub_188B4AC((uint64_t *)v8);
  }
  return result;
}

char *sub_180ED68(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v33 = a2;
  if (sub_11947B8((uint64_t)a3, &v33, a3[11].i32[1])) {
    return v33;
  }
  int v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v33 + 1;
    unsigned int v8 = *v33;
    if (*v33 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v33, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v33 + 2;
      }
    }
    uint64_t v33 = v7;
    unsigned int v11 = v8 >> 3;
    if (v8 >> 3 == 3)
    {
      if (v8 == 26)
      {
        uint64_t v15 = v7 - 1;
        while (1)
        {
          uint64_t v16 = (unsigned __int8 *)(v15 + 1);
          uint64_t v33 = v15 + 1;
          unint64_t v17 = *(_DWORD **)(a1 + 64);
          if (v17 && (uint64_t v18 = *(int *)(a1 + 56), (int)v18 < *v17))
          {
            *(_DWORD *)(a1 + 56) = v18 + 1;
            uint64_t v19 = *(void *)&v17[2 * v18 + 2];
          }
          else
          {
            uint64_t v20 = sub_1836174(*(void *)(a1 + 48));
            uint64_t v19 = sub_188CDC8(a1 + 48, v20);
            uint64_t v16 = (unsigned __int8 *)v33;
          }
          uint64_t v15 = sub_180F0EC(a3, v19, v16);
          uint64_t v33 = v15;
          if (!v15) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v15 || *v15 != 26) {
            goto LABEL_48;
          }
        }
      }
    }
    else if (v11 == 2)
    {
      if (v8 == 18)
      {
        uint64_t v21 = v7 - 1;
        while (1)
        {
          uint64_t v22 = (unsigned __int8 *)(v21 + 1);
          uint64_t v33 = v21 + 1;
          uint64_t v23 = *(_DWORD **)(a1 + 40);
          if (v23 && (uint64_t v24 = *(int *)(a1 + 32), (int)v24 < *v23))
          {
            *(_DWORD *)(a1 + 32) = v24 + 1;
            uint64_t v25 = *(void *)&v23[2 * v24 + 2];
          }
          else
          {
            uint64_t v26 = sub_18360D0(*(void *)(a1 + 24));
            uint64_t v25 = sub_188CDC8(a1 + 24, v26);
            uint64_t v22 = (unsigned __int8 *)v33;
          }
          uint64_t v21 = sub_180F05C(a3, v25, v22);
          uint64_t v33 = v21;
          if (!v21) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v21 || *v21 != 18) {
            goto LABEL_48;
          }
        }
      }
    }
    else if (v11 == 1 && v8 == 8)
    {
      int v27 = v7 + 1;
      unint64_t v28 = *v7;
      if ((*v7 & 0x80000000) == 0) {
        goto LABEL_45;
      }
      int v29 = *v27;
      int v30 = v28 + (v29 << 7);
      unint64_t v28 = (v30 - 128);
      if (v29 < 0)
      {
        uint64_t v33 = (char *)sub_188C138((uint64_t)v7, (v30 - 128));
        if (!v33) {
          return 0;
        }
        unint64_t v28 = v31;
      }
      else
      {
        int v27 = v7 + 2;
LABEL_45:
        uint64_t v33 = v27;
      }
      if (sub_13E78E4(v28))
      {
        *(_DWORD *)(a1 + 16) |= 1u;
        *(_DWORD *)(a1 + 72) = v28;
      }
      else
      {
        if (*v6) {
          uint64_t v32 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          uint64_t v32 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        sub_188C020(1, v28, v32);
      }
      goto LABEL_48;
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      int v14 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      int v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = v33;
    }
    uint64_t v33 = (char *)sub_1885AC0(v8, v14, v7, a3);
    if (!v33) {
      return 0;
    }
LABEL_48:
    if (sub_11947B8((uint64_t)a3, &v33, a3[11].i32[1])) {
      return v33;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v33;
  }
  return 0;
}

char *sub_180F05C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  BOOL result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    BOOL result = sub_180D82C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_180F0EC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  BOOL result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    BOOL result = sub_180E1FC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_180F17C(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v6 = *(int *)(a1 + 72);
    *uint64_t v4 = 8;
    v4[1] = v6;
    if (v6 > 0x7F)
    {
      v4[1] = v6 | 0x80;
      unint64_t v7 = v6 >> 7;
      v4[2] = v6 >> 7;
      v4 += 3;
      if (v6 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v8 = v7 >> 14;
          v7 >>= 7;
          *v4++ = v7;
        }
        while (v8);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v9 = *(_DWORD *)(a1 + 32);
  if (v9)
  {
    for (int i = 0; i != v9; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v11 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *uint64_t v4 = 18;
      unsigned int v12 = *(_DWORD *)(v11 + 20);
      v4[1] = v12;
      if (v12 > 0x7F) {
        unsigned int v13 = sub_188A9CC(v12, v4 + 1);
      }
      else {
        unsigned int v13 = v4 + 2;
      }
      uint64_t v4 = sub_180DB70(v11, (unint64_t)v13, a3);
    }
  }
  int v14 = *(_DWORD *)(a1 + 56);
  if (v14)
  {
    for (int j = 0; j != v14; ++j)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v16 = *(void *)(*(void *)(a1 + 64) + 8 * j + 8);
      *uint64_t v4 = 26;
      unsigned int v17 = *(_DWORD *)(v16 + 20);
      v4[1] = v17;
      if (v17 > 0x7F) {
        uint64_t v18 = sub_188A9CC(v17, v4 + 1);
      }
      else {
        uint64_t v18 = v4 + 2;
      }
      uint64_t v4 = sub_180E540(v16, (unint64_t)v18, a3);
    }
  }
  uint64_t v19 = *(void *)(a1 + 8);
  if ((v19 & 1) == 0) {
    return v4;
  }
  unint64_t v21 = v19 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v21 + 31) < 0)
  {
    uint64_t v22 = *(void **)(v21 + 8);
    uint64_t v23 = *(void *)(v21 + 16);
  }
  else
  {
    uint64_t v22 = (void *)(v21 + 8);
    LODWORD(v23) = *(unsigned __int8 *)(v21 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v23)
  {
    uint64_t v24 = (int)v23;
    memcpy(v4, v22, (int)v23);
    v4 += v24;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v22, v23, v4);
}

uint64_t sub_180F3C4(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_180DD98(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(int *)(a1 + 56);
  uint64_t v9 = v2 + v8;
  uint64_t v10 = *(void *)(a1 + 64);
  if (v10) {
    uint64_t v11 = (uint64_t *)(v10 + 8);
  }
  else {
    uint64_t v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_180E768(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  if (*(unsigned char *)(a1 + 16))
  {
    int v15 = *(_DWORD *)(a1 + 72);
    uint64_t v16 = ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if (v15 >= 0) {
      uint64_t v17 = v16;
    }
    else {
      uint64_t v17 = 11;
    }
    v9 += v17;
  }
  uint64_t v18 = *(void *)(a1 + 8);
  if (v18)
  {
    unint64_t v20 = v18 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v20 + 31) < 0) {
      uint64_t v21 = *(void *)(v20 + 16);
    }
    else {
      uint64_t v21 = *(unsigned __int8 *)(v20 + 31);
    }
    v9 += v21;
  }
  *(_DWORD *)(a1 + 20) = v9;
  return v9;
}

void sub_180F4FC(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_18798F8((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    uint64_t v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    uint64_t v11 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_1879984((uint64_t *)(a1 + 48), v11, v10, v9, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v12 = *(_DWORD *)(a1 + 56) + v9;
    *(_DWORD *)(a1 + 56) = v12;
    uint64_t v13 = *(int **)(a1 + 64);
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  if (*(unsigned char *)(a2 + 16))
  {
    int v14 = *(_DWORD *)(a2 + 72);
    *(_DWORD *)(a1 + 16) |= 1u;
    *(_DWORD *)(a1 + 72) = v14;
  }
  uint64_t v15 = *(void *)(a2 + 8);
  if (v15)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v15 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

BOOL sub_180F64C(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  while ((int)v2 >= 1)
  {
    uint64_t v3 = v2 - 1;
    BOOL v4 = sub_180DFF8(*(void *)(*(void *)(a1 + 40) + 8 * v2));
    uint64_t v2 = v3;
    if (!v4) {
      return 0;
    }
  }
  uint64_t v6 = *(unsigned int *)(a1 + 56);
  do
  {
    BOOL v5 = (int)v6 < 1;
    if ((int)v6 < 1) {
      break;
    }
    uint64_t v7 = v6 - 1;
    BOOL v8 = sub_180E9C8(*(void *)(*(void *)(a1 + 64) + 8 * v6));
    uint64_t v6 = v7;
  }
  while (v8);
  return v5;
}

void *sub_180F6CC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.BatchSpatialLookupResult");
}

uint64_t sub_180F6DC(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  BOOL v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = off_24E0098;
  *(void *)(a1 + 24) = 0;
  int v5 = *(_DWORD *)(a2 + 16);
  if (v5)
  {
    sub_188CA54((unsigned int *)(a1 + 16), v5);
    uint64_t v6 = *(void **)(a1 + 24);
    *(_DWORD *)(a1 + 16) += *(_DWORD *)(a2 + 16);
    memcpy(v6, *(const void **)(a2 + 24), 8 * *(int *)(a2 + 16));
  }
  *(_DWORD *)(a1 + 32) = 0;
  uint64_t v7 = *(void *)(a2 + 8);
  if (v7) {
    sub_188B4F8(v4, (v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return a1;
}

void sub_180F78C(_Unwind_Exception *a1)
{
  sub_1889DA8(v3);
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_180F7CC(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1889DA8((uint64_t)(a1 + 2));
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_180F848(void *a1)
{
  sub_180F7CC(a1);

  operator delete();
}

uint64_t sub_180F880(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_180F894(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v20 = a2;
  if (sub_11947B8((uint64_t)a3, &v20, a3[11].i32[1])) {
    return v20;
  }
  int v5 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v6 = v20 + 1;
    unsigned int v7 = *v20;
    if (*v20 < 0)
    {
      unsigned int v8 = v7 + (*v6 << 7);
      unsigned int v7 = v8 - 128;
      if (*v6 < 0)
      {
        uint64_t v6 = (char *)sub_188C180((uint64_t)v20, v8 - 128);
        unsigned int v7 = v9;
      }
      else
      {
        uint64_t v6 = v20 + 2;
      }
    }
    unint64_t v20 = v6;
    if ((v7 & 0xFFFFFFF8) == 8)
    {
      if (v7 == 8)
      {
        uint64_t v10 = v6 - 1;
        while (1)
        {
          unint64_t v20 = v10 + 1;
          uint64_t v11 = v10[1];
          if (v10[1] < 0)
          {
            int v12 = v11 + (v10[2] << 7);
            uint64_t v11 = (v12 - 128);
            if (v10[2] < 0)
            {
              uint64_t v10 = (char *)sub_188C138((uint64_t)(v10 + 1), (v12 - 128));
              uint64_t v11 = v13;
            }
            else
            {
              v10 += 3;
            }
          }
          else
          {
            v10 += 2;
          }
          unint64_t v20 = v10;
          uint64_t v14 = *(unsigned int *)(a1 + 16);
          if (v14 == *(_DWORD *)(a1 + 20))
          {
            int v15 = v14 + 1;
            sub_188CA54((unsigned int *)(a1 + 16), v14 + 1);
            *(void *)(*(void *)(a1 + 24) + 8 * v14) = v11;
            uint64_t v10 = v20;
          }
          else
          {
            *(void *)(*(void *)(a1 + 24) + 8 * v14) = v11;
            int v15 = v14 + 1;
          }
          *(_DWORD *)(a1 + 16) = v15;
          if (!v10) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v10 || *v10 != 8) {
            goto LABEL_32;
          }
        }
      }
      if (v7 == 10)
      {
        uint64_t v16 = sub_188C2EC((unsigned int *)(a1 + 16), (unsigned __int8 *)v6, (uint64_t)a3);
        goto LABEL_31;
      }
    }
    if (!v7 || (v7 & 7) == 4) {
      break;
    }
    if (*v5)
    {
      uint64_t v18 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v18 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v6 = v20;
    }
    uint64_t v16 = sub_1885AC0(v7, v18, v6, a3);
LABEL_31:
    unint64_t v20 = (char *)v16;
    if (!v16) {
      return 0;
    }
LABEL_32:
    if (sub_11947B8((uint64_t)a3, &v20, a3[11].i32[1])) {
      return v20;
    }
  }
  if (v6)
  {
    a3[10].i32[0] = v7 - 1;
    return v20;
  }
  return 0;
}

char *sub_180FA94(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v6 = *(unsigned int *)(a1 + 16);
  if ((int)v6 >= 1)
  {
    for (uint64_t i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      unint64_t v8 = *(void *)(*(void *)(a1 + 24) + 8 * i);
      *__dst = 8;
      __dst[1] = v8;
      if (v8 > 0x7F)
      {
        __dst[1] = v8 | 0x80;
        unint64_t v9 = v8 >> 7;
        __dst[2] = v8 >> 7;
        __dst += 3;
        if (v8 >= 0x4000)
        {
          do
          {
            *(__dst - 1) |= 0x80u;
            unint64_t v10 = v9 >> 14;
            v9 >>= 7;
            *__dst++ = v9;
          }
          while (v10);
        }
      }
      else
      {
        __dst += 2;
      }
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return __dst;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    uint64_t v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    uint64_t v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(__dst, v14, (int)v15);
    __dst += v16;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, __dst);
}

uint64_t sub_180FBE4(uint64_t a1)
{
  uint64_t result = sub_188D5A8((unsigned int *)(a1 + 16)) + *(unsigned int *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v4 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v5 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v5 = *(unsigned __int8 *)(v4 + 31);
    }
    result += v5;
  }
  *(_DWORD *)(a1 + 32) = result;
  return result;
}

uint64_t sub_180FC44()
{
  return 1;
}

void *sub_180FC4C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.TransitVehiclePositionParameters");
}

uint64_t sub_180FC5C(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  unint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)a1 = off_24E0118;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v5 = (uint64_t *)(a1 + 24);
  *(_DWORD *)(a1 + 44) = 0;
  *(void *)(a1 + 28) = 0;
  *(void *)(a1 + 36) = 0;
  *(void *)(a1 + 20) = 0;
  int v6 = *(_DWORD *)(a2 + 32);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 40);
    unint64_t v8 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_12C4B74(v5, v8, (uint64_t *)(v7 + 8), v6, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v9 = *(_DWORD *)(a1 + 32) + v6;
    *(_DWORD *)(a1 + 32) = v9;
    unint64_t v10 = *(int **)(a1 + 40);
    if (*v10 < v9) {
      *unint64_t v10 = v9;
    }
  }
  uint64_t v11 = *(void *)(a2 + 8);
  if (v11) {
    sub_188B4F8(v4, (v11 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  if (*(unsigned char *)(a2 + 16)) {
    operator new();
  }
  *(void *)(a1 + 48) = 0;
  return a1;
}

void sub_180FD80()
{
}

uint64_t sub_180FDE4(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  unint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  if ((uint64_t (***)())a1 != &off_254C2C0 && *(void *)(a1 + 48))
  {
    sub_15B0994();
    operator delete();
  }
  if (*(void *)(a1 + 8)) {
    sub_10E4F74(v3);
  }
LABEL_8:
  sub_12C45E8((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_180FEA8(uint64_t a1)
{
  sub_180FDE4(a1);

  operator delete();
}

unsigned char *sub_180FEE0(unsigned char *result)
{
  uint64_t v1 = result;
  uint64_t v2 = *((unsigned int *)result + 8);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*((void *)result + 5) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_16CD894(v4);
      --v2;
    }
    while (v2);
    *((_DWORD *)v1 + 8) = 0;
  }
  if (v1[16]) {
    uint64_t result = sub_15B09D0(*((void *)v1 + 6));
  }
  char v6 = v1[8];
  uint64_t v5 = v1 + 8;
  *((_DWORD *)v5 + 2) = 0;
  if (v6)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

char *sub_180FF70(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v23 = a2;
  if (sub_11947B8((uint64_t)a3, &v23, a3[11].i32[1])) {
    return v23;
  }
  char v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v23 + 1;
    unsigned int v8 = *v23;
    if (*v23 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v23, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v23 + 2;
      }
    }
    uint64_t v23 = v7;
    if (v8 >> 3 == 2) {
      break;
    }
    if (v8 >> 3 != 1 || v8 != 10) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v21 = *(void *)(a1 + 48);
    if (!v21)
    {
      uint64_t v22 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        uint64_t v22 = (void *)*v22;
      }
      uint64_t v21 = sub_15C1918((uint64_t)v22);
      *(void *)(a1 + 48) = v21;
      uint64_t v7 = v23;
    }
    uint64_t v14 = sub_1198F14(a3, v21, (unsigned __int8 *)v7);
LABEL_35:
    uint64_t v23 = v14;
    if (!v14) {
      return 0;
    }
LABEL_36:
    if (sub_11947B8((uint64_t)a3, &v23, a3[11].i32[1])) {
      return v23;
    }
  }
  if (v8 == 18)
  {
    uint64_t v15 = v7 - 1;
    while (1)
    {
      uint64_t v16 = (unsigned __int8 *)(v15 + 1);
      uint64_t v23 = v15 + 1;
      uint64_t v17 = *(_DWORD **)(a1 + 40);
      if (v17 && (uint64_t v18 = *(int *)(a1 + 32), (int)v18 < *v17))
      {
        *(_DWORD *)(a1 + 32) = v18 + 1;
        uint64_t v19 = *(void *)&v17[2 * v18 + 2];
      }
      else
      {
        uint64_t v20 = sub_185089C(*(void *)(a1 + 24));
        uint64_t v19 = sub_188CDC8(a1 + 24, v20);
        uint64_t v16 = (unsigned __int8 *)v23;
      }
      uint64_t v15 = sub_12688D0(a3, v19, v16);
      uint64_t v23 = v15;
      if (!v15) {
        return 0;
      }
      if (*(void *)a3 <= (unint64_t)v15 || *v15 != 18) {
        goto LABEL_36;
      }
    }
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      unint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = v23;
    }
    uint64_t v14 = (char *)sub_1885AC0(v8, v13, v7, a3);
    goto LABEL_35;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v23;
  }
  return 0;
}

char *sub_1810178(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v6 = *(void *)(a1 + 48);
    *uint64_t v4 = 10;
    unsigned int v7 = *(_DWORD *)(v6 + 44);
    v4[1] = v7;
    if (v7 > 0x7F) {
      unsigned int v8 = sub_188A9CC(v7, v4 + 1);
    }
    else {
      unsigned int v8 = v4 + 2;
    }
    uint64_t v4 = sub_15B0C0C(v6, v8, a3);
  }
  int v9 = *(_DWORD *)(a1 + 32);
  if (v9)
  {
    for (int i = 0; i != v9; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v11 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *uint64_t v4 = 18;
      unsigned int v12 = *(_DWORD *)(v11 + 44);
      v4[1] = v12;
      if (v12 > 0x7F) {
        unint64_t v13 = sub_188A9CC(v12, v4 + 1);
      }
      else {
        unint64_t v13 = v4 + 2;
      }
      uint64_t v4 = sub_184B3AC(v11, v13, a3);
    }
  }
  uint64_t v14 = *(void *)(a1 + 8);
  if ((v14 & 1) == 0) {
    return v4;
  }
  unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v16 + 31) < 0)
  {
    uint64_t v17 = *(void **)(v16 + 8);
    uint64_t v18 = *(void *)(v16 + 16);
  }
  else
  {
    uint64_t v17 = (void *)(v16 + 8);
    LODWORD(v18) = *(unsigned __int8 *)(v16 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v18)
  {
    uint64_t v19 = (int)v18;
    memcpy(v4, v17, (int)v18);
    v4 += v19;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v17, v18, v4);
}

uint64_t sub_1810324(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_184B568(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  if (*(unsigned char *)(a1 + 16))
  {
    uint64_t v8 = sub_15B0D90(*(void *)(a1 + 48));
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    v2 += v12;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

void sub_1810408(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_12C4B74((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    uint64_t v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  if (*(unsigned char *)(a2 + 16))
  {
    uint64_t v9 = *(uint64_t (****)())(a2 + 48);
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v10 = *(void *)(a1 + 48);
    if (!v10)
    {
      uint64_t v11 = *(void *)(a1 + 8);
      uint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        uint64_t v12 = (void *)*v12;
      }
      uint64_t v10 = sub_15C1918((uint64_t)v12);
      *(void *)(a1 + 48) = v10;
      uint64_t v9 = *(uint64_t (****)())(a2 + 48);
    }
    if (v9) {
      unint64_t v13 = v9;
    }
    else {
      unint64_t v13 = &off_253F1A0;
    }
    sub_15B0E24(v10, (uint64_t)v13);
  }
  uint64_t v14 = *(void *)(a2 + 8);
  if (v14)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v14 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_181052C(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  while ((int)v2 >= 1)
  {
    uint64_t v3 = v2 - 1;
    char v4 = sub_16CE508(*(void *)(*(void *)(a1 + 40) + 8 * v2));
    uint64_t v2 = v3;
    if ((v4 & 1) == 0) {
      return 0;
    }
  }
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 1;
  }
  uint64_t result = sub_15B0F18(*(void *)(a1 + 48));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_1810590@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PlaceCollectionLookupParameters");
}

uint64_t sub_18105A0(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  char v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = (uint64_t *)(a1 + 16);
  *(void *)a1 = off_24E0198;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  int v6 = *(_DWORD *)(a2 + 24);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 32);
    uint64_t v8 = (uint64_t *)sub_188CCE4(a1 + 16, *(_DWORD *)(a2 + 24));
    sub_1879A10(v5, v8, (uint64_t *)(v7 + 8), v6, **(_DWORD **)(a1 + 32) - *(_DWORD *)(a1 + 24));
    int v9 = *(_DWORD *)(a1 + 24) + v6;
    *(_DWORD *)(a1 + 24) = v9;
    uint64_t v10 = *(int **)(a1 + 32);
    if (*v10 < v9) {
      *uint64_t v10 = v9;
    }
  }
  *(_DWORD *)(a1 + 40) = 0;
  uint64_t v11 = *(void *)(a2 + 8);
  if (v11) {
    sub_188B4F8(v4, (v11 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return a1;
}

void sub_1810680(_Unwind_Exception *a1)
{
  sub_1878238(v3);
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_18106C4(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1878238(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1810744(void *a1)
{
  sub_18106C4(a1);

  operator delete();
}

unsigned char *sub_181077C(unsigned char *result)
{
  uint64_t v1 = result;
  uint64_t v2 = *((unsigned int *)result + 6);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*((void *)result + 4) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_171C384(v4);
      --v2;
    }
    while (v2);
    *((_DWORD *)v1 + 6) = 0;
  }
  char v6 = v1[8];
  uint64_t v5 = (uint64_t *)(v1 + 8);
  if (v6)
  {
    return (unsigned char *)sub_188B4AC(v5);
  }
  return result;
}

char *sub_18107F8(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v19 = a2;
  if ((sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v5 = (void *)(a1 + 8);
    while (1)
    {
      char v6 = v19 + 1;
      unsigned int v7 = *v19;
      if (*v19 < 0)
      {
        unsigned int v8 = v7 + (*v6 << 7);
        unsigned int v7 = v8 - 128;
        if (*v6 < 0)
        {
          char v6 = (char *)sub_188C180((uint64_t)v19, v8 - 128);
          unsigned int v7 = v9;
        }
        else
        {
          char v6 = v19 + 2;
        }
      }
      uint64_t v19 = v6;
      if (v7 == 10)
      {
        uint64_t v12 = v6 - 1;
        while (1)
        {
          unint64_t v13 = (unsigned __int8 *)(v12 + 1);
          uint64_t v19 = v12 + 1;
          uint64_t v14 = *(_DWORD **)(a1 + 32);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 24), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 24) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            uint64_t v17 = sub_178B2E8(*(void *)(a1 + 16));
            uint64_t v16 = sub_188CDC8(a1 + 16, (uint64_t)v17);
            unint64_t v13 = (unsigned __int8 *)v19;
          }
          uint64_t v12 = (char *)sub_1810998(a3, v16, v13);
          uint64_t v19 = v12;
          if (!v12) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_24;
          }
        }
      }
      if (!v7 || (v7 & 7) == 4) {
        break;
      }
      if (*v5)
      {
        uint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        uint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        char v6 = v19;
      }
      uint64_t v19 = (char *)sub_1885AC0(v7, v11, v6, a3);
      if (!v19) {
        return 0;
      }
LABEL_24:
      if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
        return v19;
      }
    }
    if (v6)
    {
      a3[10].i32[0] = v7 - 1;
      return v19;
    }
    return 0;
  }
  return v19;
}

uint64_t sub_1810998(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_171C444(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1810A28(uint64_t a1, char *__dst, void *a3)
{
  int v6 = *(_DWORD *)(a1 + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 44);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        uint64_t v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        uint64_t v10 = __dst + 2;
      }
      __dst = sub_171C6A8(v8, v10, a3);
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return __dst;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    uint64_t v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    uint64_t v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*a3 - (void)__dst >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(__dst, v14, (int)v15);
    __dst += v16;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, __dst);
}

uint64_t sub_1810B6C(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_171C848(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 40) = v2;
  return v2;
}

void sub_1810C1C(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 32) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 16, *(_DWORD *)(a2 + 24));
    sub_1879A10((uint64_t *)(a1 + 16), v6, v5, v4, **(_DWORD **)(a1 + 32) - *(_DWORD *)(a1 + 24));
    int v7 = *(_DWORD *)(a1 + 24) + v4;
    *(_DWORD *)(a1 + 24) = v7;
    uint64_t v8 = *(int **)(a1 + 32);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

BOOL sub_1810CEC(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 24);
  do
  {
    int v3 = v2;
    if ((int)v2 < 1) {
      break;
    }
    uint64_t v4 = v2 - 1;
    char v5 = sub_18856CC(*(void *)(*(void *)(a1 + 32) + 8 * v2) + 16);
    uint64_t v2 = v4;
  }
  while ((v5 & 1) != 0);
  return v3 < 1;
}

void *sub_1810D48@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.BatchCategoryLookupParameters");
}

uint64_t sub_1810D58(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_24E0218;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  if (*(unsigned char *)(a2 + 16)) {
    operator new();
  }
  *(void *)(a1 + 24) = 0;
  return a1;
}

void sub_1810E04()
{
}

uint64_t sub_1810E54(uint64_t a1)
{
  int v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_254C328)
  {
    uint64_t v6 = *(void *)(a1 + 24);
    if (v6)
    {
      sub_179203C(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1810F0C(uint64_t a1)
{
  sub_1810E54(a1);

  operator delete();
}

unsigned char *sub_1810F44(unsigned char *result)
{
  uint64_t v1 = result;
  if (result[16]) {
    uint64_t result = sub_179212C(*((unsigned char **)result + 3));
  }
  char v3 = v1[8];
  uint64_t v2 = v1 + 8;
  *((_DWORD *)v2 + 2) = 0;
  if (v3)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v2);
  }
  return result;
}

char *sub_1810FA0(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v16 = a2;
  if (sub_11947B8((uint64_t)a3, &v16, a3[11].i32[1])) {
    return v16;
  }
  uint64_t v5 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v6 = v16 + 1;
    unsigned int v7 = *v16;
    if (*v16 < 0)
    {
      unsigned int v8 = v7 + (*v6 << 7);
      unsigned int v7 = v8 - 128;
      if (*v6 < 0)
      {
        uint64_t v6 = (char *)sub_188C180((uint64_t)v16, v8 - 128);
        unsigned int v7 = v9;
      }
      else
      {
        uint64_t v6 = v16 + 2;
      }
    }
    uint64_t v16 = v6;
    if (v7 != 10) {
      break;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    unint64_t v13 = *(void **)(a1 + 24);
    if (!v13)
    {
      uint64_t v14 = (void *)(*v5 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v5) {
        uint64_t v14 = (void *)*v14;
      }
      unint64_t v13 = sub_18302C8((uint64_t)v14);
      *(void *)(a1 + 24) = v13;
      uint64_t v6 = v16;
    }
    uint64_t v12 = sub_120FE50(a3, (uint64_t)v13, (unsigned __int8 *)v6);
LABEL_20:
    uint64_t v16 = v12;
    if (!v12) {
      return 0;
    }
    if (sub_11947B8((uint64_t)a3, &v16, a3[11].i32[1])) {
      return v16;
    }
  }
  if (v7) {
    BOOL v10 = (v7 & 7) == 4;
  }
  else {
    BOOL v10 = 1;
  }
  if (!v10)
  {
    if (*v5)
    {
      uint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v6 = v16;
    }
    uint64_t v12 = (char *)sub_1885AC0(v7, v11, v6, a3);
    goto LABEL_20;
  }
  if (v6)
  {
    a3[10].i32[0] = v7 - 1;
    return v16;
  }
  return 0;
}

unsigned char *sub_18110F8(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v6 = *(void *)(a1 + 24);
    *uint64_t v4 = 10;
    unsigned int v7 = *(_DWORD *)(v6 + 20);
    v4[1] = v7;
    if (v7 > 0x7F) {
      unsigned int v8 = sub_188A9CC(v7, v4 + 1);
    }
    else {
      unsigned int v8 = v4 + 2;
    }
    uint64_t v4 = sub_1792424(v6, (unint64_t)v8, a3);
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    uint64_t v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    uint64_t v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    v4 += v14;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v12, v13, v4);
}

uint64_t sub_1811208(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    uint64_t v3 = sub_1792638(*(void *)(a1 + 24));
    uint64_t result = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  else
  {
    uint64_t result = 0;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v5 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    result += v6;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

BOOL sub_1811290(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 1;
  }
  uint64_t v1 = *(void *)(a1 + 24);
  if ((*(unsigned char *)(v1 + 16) & 1) == 0) {
    return 1;
  }
  BOOL result = sub_15B1FC0(*(void *)(v1 + 24));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_18112C8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.SearchCapabilitiesParameters");
}

uint64_t sub_18112D8(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_24E0298;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

void sub_1811354(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_1811384(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_18113F8(void *a1)
{
  sub_1811384(a1);

  operator delete();
}

uint64_t sub_1811430(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(unsigned char *)(result + 16) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_1811448(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v19 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
    goto LABEL_27;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    unsigned int v7 = v19 + 1;
    unsigned int v8 = *v19;
    if (*v19 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        unsigned int v7 = (char *)sub_188C180((uint64_t)v19, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        unsigned int v7 = v19 + 2;
      }
    }
    uint64_t v19 = v7;
    if (v8 != 8) {
      break;
    }
    uint64_t v13 = v7 + 1;
    uint64_t v14 = *v7;
    if ((*v7 & 0x80000000) == 0) {
      goto LABEL_19;
    }
    int v15 = *v13;
    uint64_t v14 = v14 + (v15 << 7) - 128;
    if ((v15 & 0x80000000) == 0)
    {
      uint64_t v13 = v7 + 2;
LABEL_19:
      uint64_t v19 = v13;
      *(unsigned char *)(a1 + 24) = v14 != 0;
      int v5 = 1;
      goto LABEL_20;
    }
    uint64_t v16 = (char *)sub_188C138((uint64_t)v7, v14);
    uint64_t v19 = v16;
    *(unsigned char *)(a1 + 24) = v17 != 0;
    int v5 = 1;
    if (!v16) {
      goto LABEL_28;
    }
LABEL_20:
    if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
      goto LABEL_27;
    }
  }
  if (v8) {
    BOOL v11 = (v8 & 7) == 4;
  }
  else {
    BOOL v11 = 1;
  }
  if (!v11)
  {
    if (*v6)
    {
      uint64_t v12 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v12 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unsigned int v7 = v19;
    }
    uint64_t v19 = (char *)sub_1885AC0(v8, v12, v7, a3);
    if (!v19) {
      goto LABEL_28;
    }
    goto LABEL_20;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    goto LABEL_27;
  }
LABEL_28:
  uint64_t v19 = 0;
LABEL_27:
  *(_DWORD *)(a1 + 16) |= v5;
  return v19;
}

unsigned char *sub_18115D8(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    char v6 = *(unsigned char *)(a1 + 24);
    *uint64_t v4 = 8;
    v4[1] = v6;
    v4 += 2;
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v9 + 31) < 0)
  {
    unsigned int v10 = *(void **)(v9 + 8);
    uint64_t v11 = *(void *)(v9 + 16);
  }
  else
  {
    unsigned int v10 = (void *)(v9 + 8);
    LODWORD(v11) = *(unsigned __int8 *)(v9 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v11)
  {
    uint64_t v12 = (int)v11;
    memcpy(v4, v10, (int)v11);
    v4 += v12;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v10, v11, v4);
}

uint64_t sub_18116BC(uint64_t a1)
{
  uint64_t v1 = 2 * (*(_DWORD *)(a1 + 16) & 1);
  uint64_t v2 = *(void *)(a1 + 8);
  if (v2)
  {
    unint64_t v4 = v2 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v5 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v5 = *(unsigned __int8 *)(v4 + 31);
    }
    v1 += v5;
  }
  *(_DWORD *)(a1 + 20) = v1;
  return v1;
}

uint64_t sub_18116FC()
{
  return 1;
}

void *sub_1811704@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.SearchCapabilitiesResult.Offline");
}

uint64_t sub_1811714(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_24E0318;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  if (*(unsigned char *)(a2 + 16)) {
    operator new();
  }
  *(void *)(a1 + 24) = 0;
  return a1;
}

void sub_18117C0()
{
}

uint64_t sub_1811810(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_254C368)
  {
    char v6 = *(void **)(a1 + 24);
    if (v6)
    {
      sub_1811384(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_18118C8(uint64_t a1)
{
  sub_1811810(a1);

  operator delete();
}

uint64_t sub_1811900(uint64_t result)
{
  uint64_t v1 = result;
  if (*(unsigned char *)(result + 16))
  {
    uint64_t v2 = *(void *)(result + 24);
    char v3 = *(unsigned char *)(v2 + 8);
    uint64_t result = v2 + 8;
    *(unsigned char *)(result + 16) = 0;
    *(_DWORD *)(result + 8) = 0;
    if (v3) {
      uint64_t result = sub_188B4AC((uint64_t *)result);
    }
  }
  char v5 = *(unsigned char *)(v1 + 8);
  uint64_t v4 = v1 + 8;
  *(_DWORD *)(v4 + 8) = 0;
  if (v5)
  {
    return sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

char *sub_181196C(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v16 = a2;
  if (sub_11947B8((uint64_t)a3, &v16, a3[11].i32[1])) {
    return v16;
  }
  char v5 = (void *)(a1 + 8);
  while (1)
  {
    char v6 = v16 + 1;
    unsigned int v7 = *v16;
    if (*v16 < 0)
    {
      unsigned int v8 = v7 + (*v6 << 7);
      unsigned int v7 = v8 - 128;
      if (*v6 < 0)
      {
        char v6 = (char *)sub_188C180((uint64_t)v16, v8 - 128);
        unsigned int v7 = v9;
      }
      else
      {
        char v6 = v16 + 2;
      }
    }
    uint64_t v16 = v6;
    if (v7 != 10) {
      break;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v13 = *(void *)(a1 + 24);
    if (!v13)
    {
      uint64_t v14 = (void *)(*v5 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v5) {
        uint64_t v14 = (void *)*v14;
      }
      uint64_t v13 = sub_183650C((uint64_t)v14);
      *(void *)(a1 + 24) = v13;
      char v6 = v16;
    }
    uint64_t v12 = sub_1811AC4(a3, v13, (unsigned __int8 *)v6);
LABEL_20:
    uint64_t v16 = v12;
    if (!v12) {
      return 0;
    }
    if (sub_11947B8((uint64_t)a3, &v16, a3[11].i32[1])) {
      return v16;
    }
  }
  if (v7) {
    BOOL v10 = (v7 & 7) == 4;
  }
  else {
    BOOL v10 = 1;
  }
  if (!v10)
  {
    if (*v5)
    {
      uint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      char v6 = v16;
    }
    uint64_t v12 = (char *)sub_1885AC0(v7, v11, v6, a3);
    goto LABEL_20;
  }
  if (v6)
  {
    a3[10].i32[0] = v7 - 1;
    return v16;
  }
  return 0;
}

char *sub_1811AC4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1811448(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_1811B54(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v6 = *(void *)(a1 + 24);
    *uint64_t v4 = 10;
    unsigned int v7 = *(_DWORD *)(v6 + 20);
    v4[1] = v7;
    if (v7 > 0x7F) {
      unsigned int v8 = sub_188A9CC(v7, v4 + 1);
    }
    else {
      unsigned int v8 = v4 + 2;
    }
    uint64_t v4 = sub_18115D8(v6, (unint64_t)v8, a3);
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    uint64_t v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    uint64_t v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    v4 += v14;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v12, v13, v4);
}

uint64_t sub_1811C64(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    uint64_t v2 = *(void *)(a1 + 24);
    uint64_t v3 = 2 * (*(_DWORD *)(v2 + 16) & 1);
    uint64_t v4 = *(void *)(v2 + 8);
    if (v4)
    {
      unint64_t v9 = v4 & 0xFFFFFFFFFFFFFFFCLL;
      if (*(char *)(v9 + 31) < 0) {
        uint64_t v10 = *(void *)(v9 + 16);
      }
      else {
        uint64_t v10 = *(unsigned __int8 *)(v9 + 31);
      }
      v3 += v10;
    }
    *(_DWORD *)(v2 + 20) = v3;
    uint64_t v1 = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  else
  {
    uint64_t v1 = 0;
  }
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5)
  {
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v7 + 31) < 0) {
      uint64_t v8 = *(void *)(v7 + 16);
    }
    else {
      uint64_t v8 = *(unsigned __int8 *)(v7 + 31);
    }
    v1 += v8;
  }
  *(_DWORD *)(a1 + 20) = v1;
  return v1;
}

std::string *sub_1811D04(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  if (*(unsigned char *)(a2 + 16))
  {
    uint64_t v4 = *(uint64_t (****)())(a2 + 24);
    LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
    std::string::pointer data = (std::string *)result[1].__r_.__value_.__l.__data_;
    if (!data)
    {
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      unint64_t v7 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        unint64_t v7 = (void *)*v7;
      }
      std::string::pointer data = (std::string *)sub_183650C((uint64_t)v7);
      v3[1].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      uint64_t v4 = *(uint64_t (****)())(a2 + 24);
    }
    if (v4) {
      uint64_t v8 = v4;
    }
    else {
      uint64_t v8 = &off_254C348;
    }
    uint64_t result = sub_13221BC(data, (uint64_t)v8);
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1811DAC()
{
  return 1;
}

void *sub_1811DB4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.SearchCapabilitiesResult");
}

uint64_t sub_1811DC4(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_24E0398;
  *(_DWORD *)(a1 + 16) = 0;
  uint64_t v3 = *(void *)(a2 + 8);
  if (v3) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v3 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return a1;
}

void sub_1811E30(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_1811E60(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1811ED4(void *a1)
{
  sub_1811E60(a1);

  operator delete();
}

uint64_t *sub_1811F0C(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = (uint64_t *)(a1 + 8);
  if (v2) {
    return (uint64_t *)sub_188B4AC(result);
  }
  return result;
}

char *sub_1811F1C(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v12 = a2;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  while (1)
  {
    if (sub_11947B8((uint64_t)a3, &v12, a3[11].i32[1])) {
      return v12;
    }
    uint64_t v5 = v12 + 1;
    unsigned int v6 = *v12;
    if (*v12 < 0)
    {
      unsigned int v7 = v6 + (*v5 << 7);
      unsigned int v6 = v7 - 128;
      if (*v5 < 0)
      {
        uint64_t v5 = (char *)sub_188C180((uint64_t)v12, v7 - 128);
        unsigned int v6 = v8;
      }
      else
      {
        uint64_t v5 = v12 + 2;
      }
    }
    uint64_t v12 = v5;
    if (!v6 || (v6 & 7) == 4) {
      break;
    }
    if (*v4)
    {
      uint64_t v10 = (std::string *)((*v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v10 = (std::string *)sub_188DBD8(v4);
      uint64_t v5 = v12;
    }
    uint64_t v12 = (char *)sub_1885AC0(v6, v10, v5, a3);
    if (!v12) {
      return 0;
    }
  }
  if (v5) {
    a3[10].i32[0] = v6 - 1;
  }
  return v5;
}

char *sub_181201C(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v4 = *(void *)(a1 + 8);
  if ((v4 & 1) == 0) {
    return __dst;
  }
  unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v6 + 31) < 0)
  {
    unsigned int v7 = *(void **)(v6 + 8);
    unint64_t v6 = *(void *)(v6 + 16);
  }
  else
  {
    unsigned int v7 = (void *)(v6 + 8);
    LODWORD(v6) = *(unsigned __int8 *)(v6 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v6)
  {
    uint64_t v8 = (int)v6;
    memcpy(__dst, v7, (int)v6);
    __dst += v8;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v7, v6, __dst);
}

uint64_t sub_18120B4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (v1)
  {
    unint64_t v4 = v1 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v2 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v2 = *(unsigned __int8 *)(v4 + 31);
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  *(_DWORD *)(a1 + 16) = v2;
  return v2;
}

std::string *sub_18120E8(std::string *result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 8);
  if (v2) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v2 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1812104()
{
  return 1;
}

void *sub_181210C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.TransitScheduleLookupResult");
}

uint64_t sub_181211C(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_24E0418;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  if (*(unsigned char *)(a2 + 16)) {
    operator new();
  }
  *(void *)(a1 + 24) = 0;
  return a1;
}

void sub_18121C8()
{
}

uint64_t sub_1812218(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_254C3A0)
  {
    uint64_t v6 = *(void *)(a1 + 24);
    if (v6)
    {
      sub_173F94C(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_18122D0(uint64_t a1)
{
  sub_1812218(a1);

  operator delete();
}

uint64_t sub_1812308(uint64_t result)
{
  uint64_t v1 = result;
  if (*(unsigned char *)(result + 16)) {
    uint64_t result = sub_173FA7C(*(void *)(result + 24));
  }
  char v3 = *(unsigned char *)(v1 + 8);
  uint64_t v2 = v1 + 8;
  *(_DWORD *)(v2 + 8) = 0;
  if (v3)
  {
    return sub_188B4AC((uint64_t *)v2);
  }
  return result;
}

char *sub_1812364(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v16 = a2;
  if (sub_11947B8((uint64_t)a3, &v16, a3[11].i32[1])) {
    return v16;
  }
  uint64_t v5 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v6 = v16 + 1;
    unsigned int v7 = *v16;
    if (*v16 < 0)
    {
      unsigned int v8 = v7 + (*v6 << 7);
      unsigned int v7 = v8 - 128;
      if (*v6 < 0)
      {
        uint64_t v6 = (char *)sub_188C180((uint64_t)v16, v8 - 128);
        unsigned int v7 = v9;
      }
      else
      {
        uint64_t v6 = v16 + 2;
      }
    }
    uint64_t v16 = v6;
    if (v7 != 10) {
      break;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v13 = *(void *)(a1 + 24);
    if (!v13)
    {
      uint64_t v14 = (void *)(*v5 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v5) {
        uint64_t v14 = (void *)*v14;
      }
      uint64_t v13 = sub_178B458((uint64_t)v14);
      *(void *)(a1 + 24) = v13;
      uint64_t v6 = v16;
    }
    uint64_t v12 = (char *)sub_123B124(a3, v13, (unsigned __int8 *)v6);
LABEL_20:
    uint64_t v16 = v12;
    if (!v12) {
      return 0;
    }
    if (sub_11947B8((uint64_t)a3, &v16, a3[11].i32[1])) {
      return v16;
    }
  }
  if (v7) {
    BOOL v10 = (v7 & 7) == 4;
  }
  else {
    BOOL v10 = 1;
  }
  if (!v10)
  {
    if (*v5)
    {
      unint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v6 = v16;
    }
    uint64_t v12 = (char *)sub_1885AC0(v7, v11, v6, a3);
    goto LABEL_20;
  }
  if (v6)
  {
    a3[10].i32[0] = v7 - 1;
    return v16;
  }
  return 0;
}

char *sub_18124BC(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v6 = *(void *)(a1 + 24);
    *uint64_t v4 = 10;
    unsigned int v7 = *(_DWORD *)(v6 + 44);
    v4[1] = v7;
    if (v7 > 0x7F) {
      unsigned int v8 = sub_188A9CC(v7, v4 + 1);
    }
    else {
      unsigned int v8 = v4 + 2;
    }
    uint64_t v4 = sub_1740568(v6, v8, a3);
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    uint64_t v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    uint64_t v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    v4 += v14;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v12, v13, v4);
}

uint64_t sub_18125CC(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    uint64_t v3 = sub_1740D5C(*(void *)(a1 + 24));
    uint64_t result = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  else
  {
    uint64_t result = 0;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v5 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    result += v6;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

void sub_1812654(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a2 + 16))
  {
    uint64_t v4 = *(uint64_t (****)())(a2 + 24);
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v5 = *(void *)(a1 + 24);
    if (!v5)
    {
      uint64_t v6 = *(void *)(a1 + 8);
      unsigned int v7 = (void *)(v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (v6) {
        unsigned int v7 = (void *)*v7;
      }
      uint64_t v5 = sub_178B458((uint64_t)v7);
      *(void *)(a1 + 24) = v5;
      uint64_t v4 = *(uint64_t (****)())(a2 + 24);
    }
    if (v4) {
      unsigned int v8 = v4;
    }
    else {
      unsigned int v8 = &off_25475D8;
    }
    sub_1741120(v5, (uint64_t)v8);
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_18126FC(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 1;
  }
  uint64_t result = sub_174147C(*(void *)(a1 + 24));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_1812728@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PlaceCollectionLookupResult");
}

uint64_t sub_1812738(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  if ((uint64_t (***)())a1 != &off_254C3C0)
  {
    uint64_t v5 = *(void *)(a1 + 24);
    if (v5)
    {
      sub_171C28C(v5);
      operator delete();
    }
    uint64_t v6 = *(void *)(a1 + 32);
    if (v6)
    {
      sub_171B7C8(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1812808(uint64_t a1)
{
  sub_1812738(a1);

  operator delete();
}

uint64_t sub_1812840(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 3) != 0)
  {
    if (v2) {
      uint64_t result = (uint64_t)sub_171C384(*(void *)(result + 24));
    }
    if ((v2 & 2) != 0) {
      uint64_t result = sub_171B910(*(void *)(v1 + 32));
    }
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_18128B0(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v19 = a2;
  if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
    return v19;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    unsigned int v7 = v19 + 1;
    unsigned int v8 = *v19;
    if (*v19 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        unsigned int v7 = (char *)sub_188C180((uint64_t)v19, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        unsigned int v7 = v19 + 2;
      }
    }
    uint64_t v19 = v7;
    if (v8 >> 3 != 2) {
      break;
    }
    if (v8 != 18) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    int v15 = *(void **)(a1 + 32);
    if (!v15)
    {
      uint64_t v16 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        uint64_t v16 = (void *)*v16;
      }
      int v15 = sub_178B28C((uint64_t)v16);
      *(void *)(a1 + 32) = v15;
      unsigned int v7 = v19;
    }
    uint64_t v14 = (char *)sub_17E2778(a3, (uint64_t)v15, (unsigned __int8 *)v7);
LABEL_31:
    uint64_t v19 = v14;
    if (!v14) {
      return 0;
    }
    if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
      return v19;
    }
  }
  if (v8 >> 3 == 1 && v8 == 10)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v17 = *(void **)(a1 + 24);
    if (!v17)
    {
      uint64_t v18 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        uint64_t v18 = (void *)*v18;
      }
      uint64_t v17 = sub_178B2E8((uint64_t)v18);
      *(void *)(a1 + 24) = v17;
      unsigned int v7 = v19;
    }
    uint64_t v14 = (char *)sub_1810998(a3, (uint64_t)v17, (unsigned __int8 *)v7);
    goto LABEL_31;
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unsigned int v7 = v19;
    }
    uint64_t v14 = (char *)sub_1885AC0(v8, v13, v7, a3);
    goto LABEL_31;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v19;
  }
  return 0;
}

char *sub_1812A70(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*a3 <= __dst) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    *char v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 44);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    char v4 = sub_171C6A8(v7, v9, a3);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 32);
    *char v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 44);
    v4[1] = v11;
    if (v11 > 0x7F) {
      BOOL v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      BOOL v12 = v4 + 2;
    }
    char v4 = sub_171BCAC(v10, v12, a3);
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    uint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    uint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_1812BF0(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 3) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_8;
  }
  if (v2)
  {
    uint64_t v4 = sub_171C848(*(void *)(a1 + 24));
    uint64_t v3 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_7:
    uint64_t v5 = sub_171BEA0(*(void *)(a1 + 32));
    v3 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_8:
  uint64_t v6 = *(void *)(a1 + 8);
  if (v6)
  {
    unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v8 + 31) < 0) {
      uint64_t v9 = *(void *)(v8 + 16);
    }
    else {
      uint64_t v9 = *(unsigned __int8 *)(v8 + 31);
    }
    v3 += v9;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

void sub_1812CC8(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 3) != 0)
  {
    if (v4)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v5 = *(void **)(a1 + 24);
      if (!v5)
      {
        uint64_t v6 = *(void *)(a1 + 8);
        uint64_t v7 = (void *)(v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (v6) {
          uint64_t v7 = (void *)*v7;
        }
        uint64_t v5 = sub_178B2E8((uint64_t)v7);
        *(void *)(a1 + 24) = v5;
      }
      if (*(void *)(a2 + 24)) {
        unint64_t v8 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        unint64_t v8 = &off_2546EB8;
      }
      sub_171C96C((uint64_t)v5, (uint64_t)v8);
    }
    if ((v4 & 2) != 0)
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      uint64_t v9 = *(void **)(a1 + 32);
      if (!v9)
      {
        uint64_t v10 = *(void *)(a1 + 8);
        unsigned int v11 = (void *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
        if (v10) {
          unsigned int v11 = (void *)*v11;
        }
        uint64_t v9 = sub_178B28C((uint64_t)v11);
        *(void *)(a1 + 32) = v9;
      }
      if (*(void *)(a2 + 32)) {
        BOOL v12 = *(uint64_t (****)())(a2 + 32);
      }
      else {
        BOOL v12 = &off_2546E68;
      }
      sub_171C00C((uint64_t)v9, (uint64_t)v12);
    }
  }
  uint64_t v13 = *(void *)(a2 + 8);
  if (v13)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v13 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_1812DCC(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if (v2)
  {
    uint64_t result = sub_18856CC(*(void *)(a1 + 24) + 16);
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 2) == 0) {
    return 1;
  }
  uint64_t result = sub_171C194(*(void *)(a1 + 32));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_1812E1C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.BatchCategoryLookupResult.CategoryLookupResult");
}

uint64_t sub_1812E2C(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = (uint64_t *)(a1 + 16);
  *(void *)a1 = off_24E0518;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  int v6 = *(_DWORD *)(a2 + 24);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 32);
    unint64_t v8 = (uint64_t *)sub_188CCE4(a1 + 16, *(_DWORD *)(a2 + 24));
    sub_1879A9C(v5, v8, (uint64_t *)(v7 + 8), v6, **(_DWORD **)(a1 + 32) - *(_DWORD *)(a1 + 24));
    int v9 = *(_DWORD *)(a1 + 24) + v6;
    *(_DWORD *)(a1 + 24) = v9;
    uint64_t v10 = *(int **)(a1 + 32);
    if (*v10 < v9) {
      *uint64_t v10 = v9;
    }
  }
  *(_DWORD *)(a1 + 40) = 0;
  uint64_t v11 = *(void *)(a2 + 8);
  if (v11) {
    sub_188B4F8(v4, (v11 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return a1;
}

void sub_1812F0C(_Unwind_Exception *a1)
{
  sub_18782B8(v3);
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_1812F50(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_18782B8(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1812FD0(void *a1)
{
  sub_1812F50(a1);

  operator delete();
}

uint64_t sub_1813008(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 24);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 32) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_1812840(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 24) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = (uint64_t *)(v1 + 8);
  if (v6)
  {
    return sub_188B4AC(v5);
  }
  return result;
}

char *sub_1813084(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v19 = a2;
  if ((sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v5 = (void *)(a1 + 8);
    while (1)
    {
      char v6 = v19 + 1;
      unsigned int v7 = *v19;
      if (*v19 < 0)
      {
        unsigned int v8 = v7 + (*v6 << 7);
        unsigned int v7 = v8 - 128;
        if (*v6 < 0)
        {
          char v6 = (char *)sub_188C180((uint64_t)v19, v8 - 128);
          unsigned int v7 = v9;
        }
        else
        {
          char v6 = v19 + 2;
        }
      }
      uint64_t v19 = v6;
      if (v7 == 10)
      {
        BOOL v12 = v6 - 1;
        while (1)
        {
          uint64_t v13 = (unsigned __int8 *)(v12 + 1);
          uint64_t v19 = v12 + 1;
          uint64_t v14 = *(_DWORD **)(a1 + 32);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 24), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 24) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            uint64_t v17 = sub_18366F0(*(void *)(a1 + 16));
            uint64_t v16 = sub_188CDC8(a1 + 16, (uint64_t)v17);
            uint64_t v13 = (unsigned __int8 *)v19;
          }
          BOOL v12 = sub_1813224(a3, v16, v13);
          uint64_t v19 = v12;
          if (!v12) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_24;
          }
        }
      }
      if (!v7 || (v7 & 7) == 4) {
        break;
      }
      if (*v5)
      {
        uint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        uint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        char v6 = v19;
      }
      uint64_t v19 = (char *)sub_1885AC0(v7, v11, v6, a3);
      if (!v19) {
        return 0;
      }
LABEL_24:
      if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
        return v19;
      }
    }
    if (v6)
    {
      a3[10].i32[0] = v7 - 1;
      return v19;
    }
    return 0;
  }
  return v19;
}

char *sub_1813224(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_18128B0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_18132B4(uint64_t a1, char *__dst, unint64_t *a3)
{
  int v6 = *(_DWORD *)(a1 + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        uint64_t v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        uint64_t v10 = __dst + 2;
      }
      __dst = sub_1812A70(v8, (unint64_t)v10, a3);
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return __dst;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    uint64_t v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    uint64_t v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if ((uint64_t)(*a3 - (void)__dst) >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(__dst, v14, (int)v15);
    __dst += v16;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, __dst);
}

uint64_t sub_18133F8(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_1812BF0(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 40) = v2;
  return v2;
}

void sub_18134A8(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 32) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 16, *(_DWORD *)(a2 + 24));
    sub_1879A9C((uint64_t *)(a1 + 16), v6, v5, v4, **(_DWORD **)(a1 + 32) - *(_DWORD *)(a1 + 24));
    int v7 = *(_DWORD *)(a1 + 24) + v4;
    *(_DWORD *)(a1 + 24) = v7;
    uint64_t v8 = *(int **)(a1 + 32);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

BOOL sub_1813578(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 24);
  do
  {
    int v3 = v2;
    if ((int)v2 < 1) {
      break;
    }
    uint64_t v4 = v2 - 1;
    char v5 = sub_1812DCC(*(void *)(*(void *)(a1 + 32) + 8 * v2));
    uint64_t v2 = v4;
  }
  while ((v5 & 1) != 0);
  return v3 < 1;
}

void *sub_18135D0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.BatchCategoryLookupResult");
}

uint64_t sub_18135E0(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)a1 = off_24E0598;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  char v5 = (uint64_t *)(a1 + 24);
  *(_DWORD *)(a1 + 44) = 0;
  *(void *)(a1 + 28) = 0;
  *(void *)(a1 + 36) = 0;
  *(void *)(a1 + 20) = 0;
  int v6 = *(_DWORD *)(a2 + 32);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 40);
    uint64_t v8 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_1879B28(v5, v8, (uint64_t *)(v7 + 8), v6, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v9 = *(_DWORD *)(a1 + 32) + v6;
    *(_DWORD *)(a1 + 32) = v9;
    unint64_t v10 = *(int **)(a1 + 40);
    if (*v10 < v9) {
      *unint64_t v10 = v9;
    }
  }
  uint64_t v11 = *(void *)(a2 + 8);
  if (v11) {
    sub_188B4F8(v4, (v11 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  if (*(unsigned char *)(a2 + 16)) {
    operator new();
  }
  *(void *)(a1 + 48) = 0;
  return a1;
}

void sub_1813704()
{
}

uint64_t sub_1813768(uint64_t a1)
{
  int v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_254C418)
  {
    uint64_t v6 = *(void *)(a1 + 48);
    if (v6)
    {
      sub_1473CF4(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  sub_1878338((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_181382C(uint64_t a1)
{
  sub_1813768(a1);

  operator delete();
}

uint64_t sub_1813864(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    int v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_18140F4(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  if (*(unsigned char *)(v1 + 16)) {
    uint64_t result = sub_13E8E44(*(void *)(v1 + 48));
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = v1 + 8;
  *(_DWORD *)(v5 + 8) = 0;
  if (v6)
  {
    return sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

char *sub_18138F4(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v24 = a2;
  if (sub_11947B8((uint64_t)a3, &v24, a3[11].i32[1])) {
    return v24;
  }
  char v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v24 + 1;
    unsigned int v8 = *v24;
    if (*v24 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v24, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v24 + 2;
      }
    }
    uint64_t v24 = v7;
    if (v8 >> 3 != 2) {
      break;
    }
    if (v8 != 18) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v15 = *(void *)(a1 + 48);
    if (!v15)
    {
      uint64_t v16 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        uint64_t v16 = (void *)*v16;
      }
      sub_1479774((uint64_t)v16);
      uint64_t v15 = v17;
      *(void *)(a1 + 48) = v17;
      uint64_t v7 = v24;
    }
    uint64_t v14 = sub_13529E4(a3, v15, (unsigned __int8 *)v7);
LABEL_26:
    uint64_t v24 = v14;
    if (!v14) {
      return 0;
    }
LABEL_27:
    if (sub_11947B8((uint64_t)a3, &v24, a3[11].i32[1])) {
      return v24;
    }
  }
  if (v8 >> 3 == 1 && v8 == 10)
  {
    uint64_t v18 = v7 - 1;
    while (1)
    {
      uint64_t v19 = (unsigned __int8 *)(v18 + 1);
      uint64_t v24 = v18 + 1;
      uint64_t v20 = *(_DWORD **)(a1 + 40);
      if (v20 && (uint64_t v21 = *(int *)(a1 + 32), (int)v21 < *v20))
      {
        *(_DWORD *)(a1 + 32) = v21 + 1;
        uint64_t v22 = *(void *)&v20[2 * v21 + 2];
      }
      else
      {
        uint64_t v23 = sub_18368A8(*(void *)(a1 + 24));
        uint64_t v22 = sub_188CDC8(a1 + 24, (uint64_t)v23);
        uint64_t v19 = (unsigned __int8 *)v24;
      }
      uint64_t v18 = sub_1813AFC(a3, v22, v19);
      uint64_t v24 = v18;
      if (!v18) {
        return 0;
      }
      if (*(void *)a3 <= (unint64_t)v18 || *v18 != 10) {
        goto LABEL_27;
      }
    }
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      unint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = v24;
    }
    uint64_t v14 = (char *)sub_1885AC0(v8, v13, v7, a3);
    goto LABEL_26;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v24;
  }
  return 0;
}

char *sub_1813AFC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1814150(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1813B8C(uint64_t a1, char *__dst, unint64_t *a3)
{
  int v6 = *(_DWORD *)(a1 + 32);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unsigned int v10 = __dst + 2;
      }
      __dst = sub_18142A8(v8, (unint64_t)v10, a3);
    }
  }
  if (*(unsigned char *)(a1 + 16))
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    uint64_t v11 = *(void *)(a1 + 48);
    *__dst = 18;
    unsigned int v12 = *(_DWORD *)(v11 + 20);
    __dst[1] = v12;
    if (v12 > 0x7F) {
      unint64_t v13 = sub_188A9CC(v12, __dst + 1);
    }
    else {
      unint64_t v13 = __dst + 2;
    }
    __dst = sub_1474538(v11, (unint64_t)v13, a3);
  }
  uint64_t v14 = *(void *)(a1 + 8);
  if ((v14 & 1) == 0) {
    return __dst;
  }
  unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v16 + 31) < 0)
  {
    uint64_t v17 = *(void **)(v16 + 8);
    uint64_t v18 = *(void *)(v16 + 16);
  }
  else
  {
    uint64_t v17 = (void *)(v16 + 8);
    LODWORD(v18) = *(unsigned __int8 *)(v16 + 31);
  }
  if ((uint64_t)(*a3 - (void)__dst) >= (int)v18)
  {
    uint64_t v19 = (int)v18;
    memcpy(__dst, v17, (int)v18);
    __dst += v19;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v17, v18, __dst);
}

uint64_t sub_1813D38(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_18143B8(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  if (*(unsigned char *)(a1 + 16))
  {
    uint64_t v8 = sub_1474A68(*(void *)(a1 + 48));
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    v2 += v12;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

void sub_1813E1C(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_1879B28((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    uint64_t v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  if (*(unsigned char *)(a2 + 16))
  {
    uint64_t v9 = *(uint64_t (****)())(a2 + 48);
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v10 = *(void *)(a1 + 48);
    if (!v10)
    {
      uint64_t v11 = *(void *)(a1 + 8);
      uint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        uint64_t v12 = (void *)*v12;
      }
      sub_1479774((uint64_t)v12);
      *(void *)(a1 + 48) = v10;
      uint64_t v9 = *(uint64_t (****)())(a2 + 48);
    }
    if (v9) {
      unint64_t v13 = v9;
    }
    else {
      unint64_t v13 = &off_2539B38;
    }
    sub_13EDA8C(v10, (uint64_t)v13);
  }
  uint64_t v14 = *(void *)(a2 + 8);
  if (v14)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v14 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_1813F40(uint64_t a1)
{
  uint64_t result = sub_1813F84(a1 + 24);
  if (result)
  {
    if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
      return 1;
    }
    uint64_t result = sub_13EDFC4(*(void *)(a1 + 48));
    if (result) {
      return 1;
    }
  }
  return result;
}

uint64_t sub_1813F84(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 8);
  if ((int)v1 < 1) {
    return 1;
  }
  uint64_t v3 = v1 + 1;
  for (unsigned int i = v1 - 1; ; --i)
  {
    uint64_t v5 = *(void *)(*(void *)(a1 + 16) + 8 * i + 8);
    if (*(unsigned char *)(v5 + 16))
    {
      uint64_t result = sub_13EDFC4(*(void *)(v5 + 24));
      if (!result) {
        break;
      }
    }
    if (--v3 <= 1) {
      return 1;
    }
  }
  return result;
}

void *sub_1813FF4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.TransitNearbyScheduleLookupParameters");
}

uint64_t sub_1814004(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_254C450)
  {
    uint64_t v6 = *(void *)(a1 + 24);
    if (v6)
    {
      sub_1473CF4(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_18140BC(uint64_t a1)
{
  sub_1814004(a1);

  operator delete();
}

uint64_t sub_18140F4(uint64_t result)
{
  uint64_t v1 = result;
  if (*(unsigned char *)(result + 16)) {
    uint64_t result = sub_13E8E44(*(void *)(result + 24));
  }
  char v3 = *(unsigned char *)(v1 + 8);
  uint64_t v2 = v1 + 8;
  *(_DWORD *)(v2 + 8) = 0;
  if (v3)
  {
    return sub_188B4AC((uint64_t *)v2);
  }
  return result;
}

char *sub_1814150(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v17 = a2;
  if (sub_11947B8((uint64_t)a3, &v17, a3[11].i32[1])) {
    return v17;
  }
  uint64_t v5 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v6 = v17 + 1;
    unsigned int v7 = *v17;
    if (*v17 < 0)
    {
      unsigned int v8 = v7 + (*v6 << 7);
      unsigned int v7 = v8 - 128;
      if (*v6 < 0)
      {
        uint64_t v6 = (char *)sub_188C180((uint64_t)v17, v8 - 128);
        unsigned int v7 = v9;
      }
      else
      {
        uint64_t v6 = v17 + 2;
      }
    }
    uint64_t v17 = v6;
    if (v7 != 10) {
      break;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v13 = *(void *)(a1 + 24);
    if (!v13)
    {
      uint64_t v14 = (void *)(*v5 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v5) {
        uint64_t v14 = (void *)*v14;
      }
      sub_1479774((uint64_t)v14);
      uint64_t v13 = v15;
      *(void *)(a1 + 24) = v15;
      uint64_t v6 = v17;
    }
    uint64_t v12 = sub_13529E4(a3, v13, (unsigned __int8 *)v6);
LABEL_20:
    uint64_t v17 = v12;
    if (!v12) {
      return 0;
    }
    if (sub_11947B8((uint64_t)a3, &v17, a3[11].i32[1])) {
      return v17;
    }
  }
  if (v7) {
    BOOL v10 = (v7 & 7) == 4;
  }
  else {
    BOOL v10 = 1;
  }
  if (!v10)
  {
    if (*v5)
    {
      uint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v6 = v17;
    }
    uint64_t v12 = (char *)sub_1885AC0(v7, v11, v6, a3);
    goto LABEL_20;
  }
  if (v6)
  {
    a3[10].i32[0] = v7 - 1;
    return v17;
  }
  return 0;
}

unsigned char *sub_18142A8(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  int v4 = (unsigned char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v6 = *(void *)(a1 + 24);
    *int v4 = 10;
    unsigned int v7 = *(_DWORD *)(v6 + 20);
    v4[1] = v7;
    if (v7 > 0x7F) {
      unsigned int v8 = sub_188A9CC(v7, v4 + 1);
    }
    else {
      unsigned int v8 = v4 + 2;
    }
    int v4 = sub_1474538(v6, (unint64_t)v8, a3);
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    uint64_t v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    uint64_t v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    v4 += v14;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v12, v13, v4);
}

uint64_t sub_18143B8(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    uint64_t v3 = sub_1474A68(*(void *)(a1 + 24));
    uint64_t result = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  else
  {
    uint64_t result = 0;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v5 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    result += v6;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

void sub_1814440(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a2 + 16))
  {
    uint64_t v4 = *(uint64_t (****)())(a2 + 24);
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v5 = *(void *)(a1 + 24);
    if (!v5)
    {
      uint64_t v6 = *(void *)(a1 + 8);
      unsigned int v7 = (void *)(v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (v6) {
        unsigned int v7 = (void *)*v7;
      }
      sub_1479774((uint64_t)v7);
      *(void *)(a1 + 24) = v5;
      uint64_t v4 = *(uint64_t (****)())(a2 + 24);
    }
    if (v4) {
      unsigned int v8 = v4;
    }
    else {
      unsigned int v8 = &off_2539B38;
    }
    sub_13EDA8C(v5, (uint64_t)v8);
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_18144E8(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 1;
  }
  uint64_t result = sub_13EDFC4(*(void *)(a1 + 24));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_1814514@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.TransitNearbyScheduleLookupOrigin");
}

uint64_t sub_1814524(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = (uint64_t *)(a1 + 16);
  *(void *)a1 = off_24E0698;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  int v6 = *(_DWORD *)(a2 + 24);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 32);
    unsigned int v8 = (uint64_t *)sub_188CCE4(a1 + 16, *(_DWORD *)(a2 + 24));
    sub_1879BB4(v5, v8, (uint64_t *)(v7 + 8), v6, **(_DWORD **)(a1 + 32) - *(_DWORD *)(a1 + 24));
    int v9 = *(_DWORD *)(a1 + 24) + v6;
    *(_DWORD *)(a1 + 24) = v9;
    BOOL v10 = *(int **)(a1 + 32);
    if (*v10 < v9) {
      *BOOL v10 = v9;
    }
  }
  *(_DWORD *)(a1 + 40) = 0;
  uint64_t v11 = *(void *)(a2 + 8);
  if (v11) {
    sub_188B4F8(v4, (v11 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return a1;
}

void sub_1814604(_Unwind_Exception *a1)
{
  sub_18783B8(v3);
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_1814648(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_18783B8(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_18146C8(void *a1)
{
  sub_1814648(a1);

  operator delete();
}

uint64_t sub_1814700(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 24);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 32) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_1814D78(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 24) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = (uint64_t *)(v1 + 8);
  if (v6)
  {
    return sub_188B4AC(v5);
  }
  return result;
}

char *sub_181477C(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v19 = a2;
  if ((sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v5 = (void *)(a1 + 8);
    while (1)
    {
      char v6 = v19 + 1;
      unsigned int v7 = *v19;
      if (*v19 < 0)
      {
        unsigned int v8 = v7 + (*v6 << 7);
        unsigned int v7 = v8 - 128;
        if (*v6 < 0)
        {
          char v6 = (char *)sub_188C180((uint64_t)v19, v8 - 128);
          unsigned int v7 = v9;
        }
        else
        {
          char v6 = v19 + 2;
        }
      }
      uint64_t v19 = v6;
      if (v7 == 10)
      {
        uint64_t v12 = v6 - 1;
        while (1)
        {
          uint64_t v13 = (unsigned __int8 *)(v12 + 1);
          uint64_t v19 = v12 + 1;
          uint64_t v14 = *(_DWORD **)(a1 + 32);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 24), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 24) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            uint64_t v17 = sub_18369C0(*(void *)(a1 + 16));
            uint64_t v16 = sub_188CDC8(a1 + 16, (uint64_t)v17);
            uint64_t v13 = (unsigned __int8 *)v19;
          }
          uint64_t v12 = sub_181491C(a3, v16, v13);
          uint64_t v19 = v12;
          if (!v12) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_24;
          }
        }
      }
      if (!v7 || (v7 & 7) == 4) {
        break;
      }
      if (*v5)
      {
        uint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        uint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        char v6 = v19;
      }
      uint64_t v19 = (char *)sub_1885AC0(v7, v11, v6, a3);
      if (!v19) {
        return 0;
      }
LABEL_24:
      if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
        return v19;
      }
    }
    if (v6)
    {
      a3[10].i32[0] = v7 - 1;
      return v19;
    }
    return 0;
  }
  return v19;
}

char *sub_181491C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1814DD4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_18149AC(uint64_t a1, char *__dst, unint64_t *a3)
{
  int v6 = *(_DWORD *)(a1 + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        BOOL v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        BOOL v10 = __dst + 2;
      }
      __dst = sub_1814F2C(v8, (unint64_t)v10, a3);
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return __dst;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    uint64_t v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    uint64_t v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if ((uint64_t)(*a3 - (void)__dst) >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(__dst, v14, (int)v15);
    __dst += v16;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, __dst);
}

uint64_t sub_1814AF0(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_181503C(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 40) = v2;
  return v2;
}

void sub_1814BA0(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 32) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 16, *(_DWORD *)(a2 + 24));
    sub_1879BB4((uint64_t *)(a1 + 16), v6, v5, v4, **(_DWORD **)(a1 + 32) - *(_DWORD *)(a1 + 24));
    int v7 = *(_DWORD *)(a1 + 24) + v4;
    *(_DWORD *)(a1 + 24) = v7;
    uint64_t v8 = *(int **)(a1 + 32);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_1814C70(uint64_t a1)
{
  return sub_1813F84(a1 + 16);
}

void *sub_1814C78@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.TransitNearbyPaymentMethodLookupParameters");
}

uint64_t sub_1814C88(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_254C4A0)
  {
    uint64_t v6 = *(void *)(a1 + 24);
    if (v6)
    {
      sub_1473CF4(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1814D40(uint64_t a1)
{
  sub_1814C88(a1);

  operator delete();
}

uint64_t sub_1814D78(uint64_t result)
{
  uint64_t v1 = result;
  if (*(unsigned char *)(result + 16)) {
    uint64_t result = sub_13E8E44(*(void *)(result + 24));
  }
  char v3 = *(unsigned char *)(v1 + 8);
  uint64_t v2 = v1 + 8;
  *(_DWORD *)(v2 + 8) = 0;
  if (v3)
  {
    return sub_188B4AC((uint64_t *)v2);
  }
  return result;
}

char *sub_1814DD4(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v17 = a2;
  if (sub_11947B8((uint64_t)a3, &v17, a3[11].i32[1])) {
    return v17;
  }
  uint64_t v5 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v6 = v17 + 1;
    unsigned int v7 = *v17;
    if (*v17 < 0)
    {
      unsigned int v8 = v7 + (*v6 << 7);
      unsigned int v7 = v8 - 128;
      if (*v6 < 0)
      {
        uint64_t v6 = (char *)sub_188C180((uint64_t)v17, v8 - 128);
        unsigned int v7 = v9;
      }
      else
      {
        uint64_t v6 = v17 + 2;
      }
    }
    uint64_t v17 = v6;
    if (v7 != 10) {
      break;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v13 = *(void *)(a1 + 24);
    if (!v13)
    {
      uint64_t v14 = (void *)(*v5 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v5) {
        uint64_t v14 = (void *)*v14;
      }
      sub_1479774((uint64_t)v14);
      uint64_t v13 = v15;
      *(void *)(a1 + 24) = v15;
      uint64_t v6 = v17;
    }
    uint64_t v12 = sub_13529E4(a3, v13, (unsigned __int8 *)v6);
LABEL_20:
    uint64_t v17 = v12;
    if (!v12) {
      return 0;
    }
    if (sub_11947B8((uint64_t)a3, &v17, a3[11].i32[1])) {
      return v17;
    }
  }
  if (v7) {
    BOOL v10 = (v7 & 7) == 4;
  }
  else {
    BOOL v10 = 1;
  }
  if (!v10)
  {
    if (*v5)
    {
      uint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v6 = v17;
    }
    uint64_t v12 = (char *)sub_1885AC0(v7, v11, v6, a3);
    goto LABEL_20;
  }
  if (v6)
  {
    a3[10].i32[0] = v7 - 1;
    return v17;
  }
  return 0;
}

unsigned char *sub_1814F2C(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  int v4 = (unsigned char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v6 = *(void *)(a1 + 24);
    *int v4 = 10;
    unsigned int v7 = *(_DWORD *)(v6 + 20);
    v4[1] = v7;
    if (v7 > 0x7F) {
      unsigned int v8 = sub_188A9CC(v7, v4 + 1);
    }
    else {
      unsigned int v8 = v4 + 2;
    }
    int v4 = sub_1474538(v6, (unint64_t)v8, a3);
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    uint64_t v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    uint64_t v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    v4 += v14;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v12, v13, v4);
}

uint64_t sub_181503C(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    uint64_t v3 = sub_1474A68(*(void *)(a1 + 24));
    uint64_t result = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  else
  {
    uint64_t result = 0;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v5 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    result += v6;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

uint64_t sub_18150C4(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 1;
  }
  uint64_t result = sub_13EDFC4(*(void *)(a1 + 24));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_18150F0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.TransitNearbyPaymentMethodLookupOrigin");
}

uint64_t sub_1815100(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)a1 = off_24E0798;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  unint64_t v5 = (uint64_t *)(a1 + 24);
  *(_DWORD *)(a1 + 44) = 0;
  *(void *)(a1 + 28) = 0;
  *(void *)(a1 + 36) = 0;
  *(void *)(a1 + 20) = 0;
  int v6 = *(_DWORD *)(a2 + 32);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 40);
    unsigned int v8 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_1879C30(v5, v8, (uint64_t *)(v7 + 8), v6, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v9 = *(_DWORD *)(a1 + 32) + v6;
    *(_DWORD *)(a1 + 32) = v9;
    BOOL v10 = *(int **)(a1 + 40);
    if (*v10 < v9) {
      *BOOL v10 = v9;
    }
  }
  uint64_t v11 = *(void *)(a2 + 8);
  if (v11) {
    sub_188B4F8(v4, (v11 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  if (*(unsigned char *)(a2 + 16)) {
    operator new();
  }
  *(void *)(a1 + 48) = 0;
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  return a1;
}

void sub_181522C()
{
}

uint64_t sub_1815290(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_254C4C0)
  {
    uint64_t v6 = *(void *)(a1 + 48);
    if (v6)
    {
      sub_184AFBC(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  sub_1878438((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1815354(uint64_t a1)
{
  sub_1815290(a1);

  operator delete();
}

uint64_t sub_181538C(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_16F5C4C(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  if (*(unsigned char *)(v1 + 16)) {
    uint64_t result = (uint64_t)sub_16CD894(*(void *)(v1 + 48));
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = v1 + 8;
  *(unsigned char *)(v5 + 48) = 0;
  *(_DWORD *)(v5 + 8) = 0;
  if (v6)
  {
    return sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

char *sub_1815420(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v30 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v30, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    unsigned int v8 = v30 + 1;
    unsigned int v9 = *v30;
    if (*v30 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unsigned int v8 = (char *)sub_188C180((uint64_t)v30, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unsigned int v8 = v30 + 2;
      }
    }
    int v30 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 != 3) {
      break;
    }
    if (v9 != 24) {
      goto LABEL_14;
    }
    v5 |= 2u;
    uint64_t v17 = v8 + 1;
    uint64_t v18 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_25;
    }
    int v19 = *v17;
    uint64_t v18 = v18 + (v19 << 7) - 128;
    if ((v19 & 0x80000000) == 0)
    {
      uint64_t v17 = v8 + 2;
LABEL_25:
      int v30 = v17;
      *(unsigned char *)(a1 + 56) = v18 != 0;
      goto LABEL_42;
    }
    unint64_t v28 = (char *)sub_188C138((uint64_t)v8, v18);
    int v30 = v28;
    *(unsigned char *)(a1 + 56) = v29 != 0;
    if (!v28) {
      goto LABEL_49;
    }
LABEL_42:
    if (sub_11947B8((uint64_t)a3, &v30, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v12 == 2)
  {
    if (v9 == 18)
    {
      uint64_t v20 = v8 - 1;
      while (1)
      {
        uint64_t v21 = (unsigned __int8 *)(v20 + 1);
        int v30 = v20 + 1;
        uint64_t v22 = *(_DWORD **)(a1 + 40);
        if (v22 && (uint64_t v23 = *(int *)(a1 + 32), (int)v23 < *v22))
        {
          *(_DWORD *)(a1 + 32) = v23 + 1;
          uint64_t v24 = *(void *)&v22[2 * v23 + 2];
        }
        else
        {
          uint64_t v25 = sub_1788FDC(*(void *)(a1 + 24));
          uint64_t v24 = sub_188CDC8(a1 + 24, (uint64_t)v25);
          uint64_t v21 = (unsigned __int8 *)v30;
        }
        uint64_t v20 = (char *)sub_17260D4(a3, v24, v21);
        int v30 = v20;
        if (!v20) {
          goto LABEL_49;
        }
        if (*(void *)a3 <= (unint64_t)v20 || *v20 != 18) {
          goto LABEL_42;
        }
      }
    }
  }
  else if (v12 == 1 && v9 == 10)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v26 = *(void *)(a1 + 48);
    if (!v26)
    {
      int v27 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v7) {
        int v27 = (void *)*v27;
      }
      uint64_t v26 = sub_185089C((uint64_t)v27);
      *(void *)(a1 + 48) = v26;
      unsigned int v8 = v30;
    }
    uint64_t v16 = sub_12688D0(a3, v26, (unsigned __int8 *)v8);
LABEL_41:
    int v30 = v16;
    if (!v16) {
      goto LABEL_49;
    }
    goto LABEL_42;
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (*v7)
    {
      uint64_t v15 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unsigned int v8 = v30;
    }
    uint64_t v16 = (char *)sub_1885AC0(v9, v15, v8, a3);
    goto LABEL_41;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_49:
  int v30 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v30;
}

char *sub_18156AC(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 48);
    *uint64_t v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 44);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    uint64_t v4 = sub_184B3AC(v7, v9, a3);
  }
  int v10 = *(_DWORD *)(a1 + 32);
  if (v10)
  {
    for (int i = 0; i != v10; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v12 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *uint64_t v4 = 18;
      unsigned int v13 = *(_DWORD *)(v12 + 44);
      v4[1] = v13;
      if (v13 > 0x7F) {
        BOOL v14 = sub_188A9CC(v13, v4 + 1);
      }
      else {
        BOOL v14 = v4 + 2;
      }
      uint64_t v4 = sub_16F6208(v12, v14, a3);
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v15 = *(unsigned char *)(a1 + 56);
    *uint64_t v4 = 24;
    v4[1] = v15;
    v4 += 2;
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return v4;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    int v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    int v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(v4, v19, (int)v20);
    v4 += v21;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v19, v20, v4);
}

uint64_t sub_1815890(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_16F650C(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 3) != 0)
  {
    if (v8)
    {
      uint64_t v9 = sub_184B568(*(void *)(a1 + 48));
      v2 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v8 & 2) != 0) {
      v2 += 2;
    }
  }
  uint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v12 + 31) < 0) {
      uint64_t v13 = *(void *)(v12 + 16);
    }
    else {
      uint64_t v13 = *(unsigned __int8 *)(v12 + 31);
    }
    v2 += v13;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

void sub_1815988(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_1879C30((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    int v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 3) != 0)
  {
    if (v9)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v10 = *(void *)(a1 + 48);
      if (!v10)
      {
        uint64_t v11 = *(void *)(a1 + 8);
        unint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
        if (v11) {
          unint64_t v12 = (void *)*v12;
        }
        uint64_t v10 = sub_185089C((uint64_t)v12);
        *(void *)(a1 + 48) = v10;
      }
      if (*(void *)(a2 + 48)) {
        uint64_t v13 = *(uint64_t (****)())(a2 + 48);
      }
      else {
        uint64_t v13 = &off_254D2B0;
      }
      sub_16CE3CC(v10, (uint64_t)v13);
    }
    if ((v9 & 2) != 0) {
      *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
    }
    *(_DWORD *)(a1 + 16) |= v9;
  }
  uint64_t v14 = *(void *)(a2 + 8);
  if (v14)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v14 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_1815AC8(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  while ((int)v2 >= 1)
  {
    uint64_t v3 = v2 - 1;
    char v4 = sub_18856CC(*(void *)(*(void *)(a1 + 40) + 8 * v2) + 16);
    uint64_t v2 = v3;
    if ((v4 & 1) == 0) {
      return 0;
    }
  }
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 1;
  }
  uint64_t result = sub_16CE508(*(void *)(a1 + 48));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_1815B30@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PlacecardEnrichmentParameters");
}

uint64_t sub_1815B40(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_24E0818;
  *(_DWORD *)(a1 + 16) = 0;
  uint64_t v3 = *(void *)(a2 + 8);
  if (v3) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v3 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return a1;
}

void sub_1815BAC(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_1815BDC(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1815C50(void *a1)
{
  sub_1815BDC(a1);

  operator delete();
}

uint64_t *sub_1815C88(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = (uint64_t *)(a1 + 8);
  if (v2) {
    return (uint64_t *)sub_188B4AC(result);
  }
  return result;
}

char *sub_1815C98(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v12 = a2;
  char v4 = (uint64_t *)(a1 + 8);
  while (1)
  {
    if (sub_11947B8((uint64_t)a3, &v12, a3[11].i32[1])) {
      return v12;
    }
    uint64_t v5 = v12 + 1;
    unsigned int v6 = *v12;
    if (*v12 < 0)
    {
      unsigned int v7 = v6 + (*v5 << 7);
      unsigned int v6 = v7 - 128;
      if (*v5 < 0)
      {
        uint64_t v5 = (char *)sub_188C180((uint64_t)v12, v7 - 128);
        unsigned int v6 = v8;
      }
      else
      {
        uint64_t v5 = v12 + 2;
      }
    }
    unint64_t v12 = v5;
    if (!v6 || (v6 & 7) == 4) {
      break;
    }
    if (*v4)
    {
      uint64_t v10 = (std::string *)((*v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v10 = (std::string *)sub_188DBD8(v4);
      uint64_t v5 = v12;
    }
    unint64_t v12 = (char *)sub_1885AC0(v6, v10, v5, a3);
    if (!v12) {
      return 0;
    }
  }
  if (v5) {
    a3[10].i32[0] = v6 - 1;
  }
  return v5;
}

char *sub_1815D98(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v4 = *(void *)(a1 + 8);
  if ((v4 & 1) == 0) {
    return __dst;
  }
  unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v6 + 31) < 0)
  {
    unsigned int v7 = *(void **)(v6 + 8);
    unint64_t v6 = *(void *)(v6 + 16);
  }
  else
  {
    unsigned int v7 = (void *)(v6 + 8);
    LODWORD(v6) = *(unsigned __int8 *)(v6 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v6)
  {
    uint64_t v8 = (int)v6;
    memcpy(__dst, v7, (int)v6);
    __dst += v8;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v7, v6, __dst);
}

uint64_t sub_1815E30(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (v1)
  {
    unint64_t v4 = v1 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v2 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v2 = *(unsigned __int8 *)(v4 + 31);
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  *(_DWORD *)(a1 + 16) = v2;
  return v2;
}

std::string *sub_1815E64(std::string *result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 8);
  if (v2) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v2 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1815E80()
{
  return 1;
}

void *sub_1815E88@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PlacecardEnrichmentResult");
}

uint64_t sub_1815E98(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_24E0898;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  if (*(unsigned char *)(a2 + 16)) {
    operator new();
  }
  *(void *)(a1 + 24) = 0;
  return a1;
}

void sub_1815F44()
{
}

uint64_t sub_1815F94(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_254C518)
  {
    uint64_t v6 = *(void *)(a1 + 24);
    if (v6)
    {
      sub_15B1678(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_181604C(uint64_t a1)
{
  sub_1815F94(a1);

  operator delete();
}

unsigned char *sub_1816084(unsigned char *result)
{
  uint64_t v1 = result;
  if (result[16]) {
    uint64_t result = sub_15B16B4(*((unsigned char **)result + 3));
  }
  char v3 = v1[8];
  uint64_t v2 = v1 + 8;
  *((_DWORD *)v2 + 2) = 0;
  if (v3)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v2);
  }
  return result;
}

char *sub_18160E0(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v16 = a2;
  if (sub_11947B8((uint64_t)a3, &v16, a3[11].i32[1])) {
    return v16;
  }
  uint64_t v5 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v6 = v16 + 1;
    unsigned int v7 = *v16;
    if (*v16 < 0)
    {
      unsigned int v8 = v7 + (*v6 << 7);
      unsigned int v7 = v8 - 128;
      if (*v6 < 0)
      {
        uint64_t v6 = (char *)sub_188C180((uint64_t)v16, v8 - 128);
        unsigned int v7 = v9;
      }
      else
      {
        uint64_t v6 = v16 + 2;
      }
    }
    uint64_t v16 = v6;
    if (v7 != 10) {
      break;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v13 = *(void *)(a1 + 24);
    if (!v13)
    {
      uint64_t v14 = (void *)(*v5 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v5) {
        uint64_t v14 = (void *)*v14;
      }
      uint64_t v13 = sub_15C19EC((uint64_t)v14);
      *(void *)(a1 + 24) = v13;
      uint64_t v6 = v16;
    }
    unint64_t v12 = sub_11E1C60(a3, v13, (unsigned __int8 *)v6);
LABEL_20:
    uint64_t v16 = v12;
    if (!v12) {
      return 0;
    }
    if (sub_11947B8((uint64_t)a3, &v16, a3[11].i32[1])) {
      return v16;
    }
  }
  if (v7) {
    BOOL v10 = (v7 & 7) == 4;
  }
  else {
    BOOL v10 = 1;
  }
  if (!v10)
  {
    if (*v5)
    {
      uint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v6 = v16;
    }
    unint64_t v12 = (char *)sub_1885AC0(v7, v11, v6, a3);
    goto LABEL_20;
  }
  if (v6)
  {
    a3[10].i32[0] = v7 - 1;
    return v16;
  }
  return 0;
}

unsigned char *sub_1816238(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v6 = *(void *)(a1 + 24);
    *uint64_t v4 = 10;
    unsigned int v7 = *(_DWORD *)(v6 + 20);
    v4[1] = v7;
    if (v7 > 0x7F) {
      unsigned int v8 = sub_188A9CC(v7, v4 + 1);
    }
    else {
      unsigned int v8 = v4 + 2;
    }
    uint64_t v4 = sub_15B1A68(v6, (unint64_t)v8, a3);
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    unint64_t v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    unint64_t v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    v4 += v14;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v12, v13, v4);
}

uint64_t sub_1816348(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    uint64_t v3 = sub_15B1D1C(*(void *)(a1 + 24));
    uint64_t result = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  else
  {
    uint64_t result = 0;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v5 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    result += v6;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

void sub_18163D0(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a2 + 16))
  {
    uint64_t v4 = *(uint64_t (****)())(a2 + 24);
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v5 = *(void *)(a1 + 24);
    if (!v5)
    {
      uint64_t v6 = *(void *)(a1 + 8);
      unsigned int v7 = (void *)(v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (v6) {
        unsigned int v7 = (void *)*v7;
      }
      uint64_t v5 = sub_15C19EC((uint64_t)v7);
      *(void *)(a1 + 24) = v5;
      uint64_t v4 = *(uint64_t (****)())(a2 + 24);
    }
    if (v4) {
      unsigned int v8 = v4;
    }
    else {
      unsigned int v8 = &off_253F208;
    }
    sub_15B1E3C(v5, (uint64_t)v8);
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

BOOL sub_1816478(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 1;
  }
  BOOL result = sub_15B1FC0(*(void *)(a1 + 24));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_18164A4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.OfflineRegionNameParameters");
}

uint64_t sub_18164B4(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_24E0918;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  if (*(unsigned char *)(a2 + 16)) {
    operator new();
  }
  *(void *)(a1 + 24) = 0;
  return a1;
}

void sub_1816560()
{
}

uint64_t sub_18165B0(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  if ((uint64_t (***)())a1 != &off_254C538 && *(void *)(a1 + 24))
  {
    sub_15B2C44();
    operator delete();
  }
  if (*(void *)(a1 + 8)) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1816668(uint64_t a1)
{
  sub_18165B0(a1);

  operator delete();
}

uint64_t sub_18166A0(uint64_t result)
{
  uint64_t v1 = result;
  if (*(unsigned char *)(result + 16)) {
    BOOL result = sub_15B2C80(*(void *)(result + 24));
  }
  char v3 = *(unsigned char *)(v1 + 8);
  uint64_t v2 = v1 + 8;
  *(_DWORD *)(v2 + 8) = 0;
  if (v3)
  {
    return sub_188B4AC((uint64_t *)v2);
  }
  return result;
}

char *sub_18166FC(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v16 = a2;
  if (sub_11947B8((uint64_t)a3, &v16, a3[11].i32[1])) {
    return v16;
  }
  uint64_t v5 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v6 = v16 + 1;
    unsigned int v7 = *v16;
    if (*v16 < 0)
    {
      unsigned int v8 = v7 + (*v6 << 7);
      unsigned int v7 = v8 - 128;
      if (*v6 < 0)
      {
        uint64_t v6 = (char *)sub_188C180((uint64_t)v16, v8 - 128);
        unsigned int v7 = v9;
      }
      else
      {
        uint64_t v6 = v16 + 2;
      }
    }
    uint64_t v16 = v6;
    if (v7 != 10) {
      break;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v13 = *(void **)(a1 + 24);
    if (!v13)
    {
      uint64_t v14 = (void *)(*v5 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v5) {
        uint64_t v14 = (void *)*v14;
      }
      uint64_t v13 = sub_15C1B30((uint64_t)v14);
      *(void *)(a1 + 24) = v13;
      uint64_t v6 = v16;
    }
    unint64_t v12 = (char *)sub_125CF74(a3, (uint64_t)v13, (unsigned __int8 *)v6);
LABEL_20:
    uint64_t v16 = v12;
    if (!v12) {
      return 0;
    }
    if (sub_11947B8((uint64_t)a3, &v16, a3[11].i32[1])) {
      return v16;
    }
  }
  if (v7) {
    BOOL v10 = (v7 & 7) == 4;
  }
  else {
    BOOL v10 = 1;
  }
  if (!v10)
  {
    if (*v5)
    {
      unint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v6 = v16;
    }
    unint64_t v12 = (char *)sub_1885AC0(v7, v11, v6, a3);
    goto LABEL_20;
  }
  if (v6)
  {
    a3[10].i32[0] = v7 - 1;
    return v16;
  }
  return 0;
}

char *sub_1816854(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v6 = *(void *)(a1 + 24);
    *uint64_t v4 = 10;
    unsigned int v7 = *(_DWORD *)(v6 + 20);
    v4[1] = v7;
    if (v7 > 0x7F) {
      unsigned int v8 = sub_188A9CC(v7, v4 + 1);
    }
    else {
      unsigned int v8 = v4 + 2;
    }
    uint64_t v4 = sub_15B2EA4(v6, v8, a3);
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    unint64_t v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    unint64_t v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    v4 += v14;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v12, v13, v4);
}

uint64_t sub_1816964(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    uint64_t v3 = sub_15B2F90(*(void *)(a1 + 24));
    uint64_t result = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  else
  {
    uint64_t result = 0;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v5 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    result += v6;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

std::string *sub_18169EC(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  if (*(unsigned char *)(a2 + 16))
  {
    uint64_t v4 = *(uint64_t (****)())(a2 + 24);
    LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
    std::string::pointer data = (std::string *)result[1].__r_.__value_.__l.__data_;
    if (!data)
    {
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      unsigned int v7 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        unsigned int v7 = (void *)*v7;
      }
      std::string::pointer data = (std::string *)sub_15C1B30((uint64_t)v7);
      v3[1].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      uint64_t v4 = *(uint64_t (****)())(a2 + 24);
    }
    if (v4) {
      unsigned int v8 = v4;
    }
    else {
      unsigned int v8 = &off_253F2A0;
    }
    uint64_t result = sub_11EC100(data, (uint64_t)v8);
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1816A94()
{
  return 1;
}

void *sub_1816A9C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.OfflineRegionNameResult");
}

void *sub_1816AAC(void *a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  a1[1] = v4;
  *a1 = off_24E0998;
  sub_1882BC4((uint64_t)(a1 + 2), a2);
  a1[5] = 0;
  a1[6] = &qword_2550250;
  a1[7] = 0;
  return a1;
}

void sub_1816B1C(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_1816B4C(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (void *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = a1 + 16;
  *(void *)a1 = off_24E0998;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 44) = 0;
  uint64_t v6 = *(void *)(a2 + 8);
  if (v6) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v5, a2 + 16);
  *(void *)(a1 + 48) = &qword_2550250;
  int v7 = *(_DWORD *)(a2 + 40);
  if (v7)
  {
    unsigned int v8 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      unsigned int v8 = (uint64_t *)*v8;
    }
    sub_1881DF4((std::string **)(a1 + 48), (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL), v8);
    int v7 = *(_DWORD *)(a2 + 40);
  }
  if ((v7 & 2) != 0) {
    operator new();
  }
  *(void *)(a1 + 56) = 0;
  return a1;
}

void sub_1816C54()
{
}

uint64_t sub_1816CB0(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  uint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_254C558)
  {
    uint64_t v6 = *(void **)(a1 + 56);
    if (v6)
    {
      sub_1750B8C(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1816D84(uint64_t a1)
{
  sub_1816CB0(a1);

  operator delete();
}

uint64_t sub_1816DBC(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  int v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 3) != 0)
  {
    if ((v3 & 1) == 0) {
      goto LABEL_5;
    }
    unint64_t v4 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if ((*(char *)(v4 + 23) & 0x80000000) == 0)
    {
      *(unsigned char *)unint64_t v4 = 0;
      *(unsigned char *)(v4 + 23) = 0;
LABEL_5:
      if ((v3 & 2) == 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
    **(unsigned char **)unint64_t v4 = 0;
    *(void *)(v4 + 8) = 0;
    if ((v3 & 2) != 0) {
LABEL_6:
    }
      uint64_t result = sub_17217EC(*(void *)(a1 + 56));
  }
LABEL_7:
  char v6 = *(unsigned char *)(a1 + 8);
  uint64_t v5 = a1 + 8;
  *(_DWORD *)(v5 + 32) = 0;
  if (v6)
  {
    return sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

uint64_t sub_1816E58(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v20 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
    return *(void *)v20;
  }
  char v6 = (void *)(a1 + 8);
  while (1)
  {
    int v7 = (unsigned __int8 *)(*(void *)v20 + 1);
    unsigned int v8 = **(unsigned char **)v20;
    if ((char)**(unsigned char **)v20 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if ((char)*v7 < 0)
      {
        int v7 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v20, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        int v7 = (unsigned __int8 *)(*(void *)v20 + 2);
      }
    }
    *(void *)uint64_t v20 = v7;
    if (v8 >> 3 != 2) {
      break;
    }
    if (v8 != 18) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 40) |= 2u;
    uint64_t v14 = *(void *)(a1 + 56);
    if (!v14)
    {
      char v15 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        char v15 = (void *)*v15;
      }
      uint64_t v14 = sub_178BE14((uint64_t)v15);
      *(void *)(a1 + 56) = v14;
      int v7 = *(unsigned __int8 **)v20;
    }
    uint64_t v13 = sub_17264C4(a3, v14, v7);
LABEL_31:
    *(void *)uint64_t v20 = v13;
    if (!v13) {
      goto LABEL_37;
    }
    if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
      return *(void *)v20;
    }
  }
  if (v8 >> 3 == 1 && v8 == 10)
  {
    *(_DWORD *)(a1 + 40) |= 1u;
    uint64_t v16 = *(void *)(a1 + 8);
    uint64_t v17 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
    if (v16) {
      uint64_t v17 = (uint64_t *)*v17;
    }
    unint64_t v18 = (std::string *)sub_1880F84((void *)(a1 + 48), v17);
    uint64_t v13 = (uint64_t)sub_188C244(v18, *(char **)v20, (uint64_t)a3);
    goto LABEL_31;
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (v8 - 800 > 0x31F)
    {
      if (*v6)
      {
        int v19 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        int v19 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        int v7 = *(unsigned __int8 **)v20;
      }
      uint64_t v13 = (uint64_t)sub_1885AC0(v8, v19, (char *)v7, a3);
    }
    else
    {
      uint64_t v13 = (uint64_t)sub_18859DC((uint64_t **)(a1 + 16), v8, (char *)v7, (uint64_t)&off_254C558, (uint64_t *)(a1 + 8), a3);
    }
    goto LABEL_31;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v20;
  }
LABEL_37:
  *(void *)uint64_t v20 = 0;
  return *(void *)v20;
}

char *sub_1817054(uint64_t a1, char *a2, void *a3)
{
  unint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if (v6) {
    unint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), a2);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v7 = *(void *)(a1 + 56);
    *unint64_t v4 = 18;
    unsigned int v8 = *(_DWORD *)(v7 + 112);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    unint64_t v4 = sub_1750FD4(v7, v9, a3);
  }
  if (*(_WORD *)(a1 + 26)) {
    unint64_t v4 = sub_1886844(a1 + 16, 100, 200, v4, a3);
  }
  uint64_t v10 = *(void *)(a1 + 8);
  if ((v10 & 1) == 0) {
    return v4;
  }
  unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v12 + 31) < 0)
  {
    uint64_t v13 = *(void **)(v12 + 8);
    uint64_t v14 = *(void *)(v12 + 16);
  }
  else
  {
    uint64_t v13 = (void *)(v12 + 8);
    LODWORD(v14) = *(unsigned __int8 *)(v12 + 31);
  }
  if (*a3 - (void)v4 >= (int)v14)
  {
    uint64_t v15 = (int)v14;
    memcpy(v4, v13, (int)v14);
    v4 += v15;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v13, v14, v4);
}

uint64_t sub_18171A8(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = v2;
  int v4 = *(_DWORD *)(a1 + 40);
  if ((v4 & 3) != 0)
  {
    if (v4)
    {
      unint64_t v5 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
      uint64_t v7 = *(void *)(v5 + 8);
      if ((v6 & 0x80u) == 0) {
        uint64_t v7 = v6;
      }
      uint64_t v3 = v2 + v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v4 & 2) != 0)
    {
      uint64_t v8 = sub_1751268(*(void *)(a1 + 56));
      v3 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    v3 += v12;
  }
  *(_DWORD *)(a1 + 44) = v3;
  return v3;
}

void sub_1817288(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 40);
  if ((v4 & 3) != 0)
  {
    if (v4)
    {
      unint64_t v5 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 40) |= 1u;
      uint64_t v6 = (std::string **)(a1 + 48);
      uint64_t v7 = *(void *)(a1 + 8);
      uint64_t v8 = (uint64_t *)(v7 & 0xFFFFFFFFFFFFFFFCLL);
      if (v7) {
        uint64_t v8 = (uint64_t *)*v8;
      }
      sub_1881DF4(v6, v5, v8);
    }
    if ((v4 & 2) != 0)
    {
      *(_DWORD *)(a1 + 40) |= 2u;
      uint64_t v9 = *(void *)(a1 + 56);
      if (!v9)
      {
        uint64_t v10 = *(void *)(a1 + 8);
        unint64_t v11 = (void *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
        if (v10) {
          unint64_t v11 = (void *)*v11;
        }
        uint64_t v9 = sub_178BE14((uint64_t)v11);
        *(void *)(a1 + 56) = v9;
      }
      if (*(void *)(a2 + 56)) {
        uint64_t v12 = *(uint64_t (****)())(a2 + 56);
      }
      else {
        uint64_t v12 = &off_2547F00;
      }
      sub_172F5F4(v9, (uint64_t)v12);
    }
  }
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v13 = *(void *)(a2 + 8);
  if (v13)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v13 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_1817380(uint64_t a1)
{
  uint64_t result = sub_18856CC(a1 + 16);
  if (result)
  {
    if ((*(unsigned char *)(a1 + 40) & 2) == 0) {
      return 1;
    }
    uint64_t result = sub_18856CC(*(void *)(a1 + 56) + 16);
    if (result) {
      return 1;
    }
  }
  return result;
}

void *sub_18173C8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.AddressRecommendationParameters");
}

uint64_t sub_18173D8(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  *(void *)(a1 + 8) = v4;
  *(void *)a1 = off_24E0A18;
  sub_1882BC4(a1 + 16, a2);
  *(_DWORD *)(a1 + 40) = 0;
  return a1;
}

void sub_181743C(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_181746C(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  uint64_t v4 = a1 + 16;
  *(void *)a1 = off_24E0A18;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = 0;
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v4, a2 + 16);
  return a1;
}

void sub_1817500(_Unwind_Exception *a1)
{
  sub_1882CC0(v3);
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_181753C(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_18175B8(void *a1)
{
  sub_181753C(a1);

  operator delete();
}

unsigned char *sub_18175F0(uint64_t a1)
{
  uint64_t result = sub_18843A4((unsigned char *)(a1 + 16));
  char v4 = *(unsigned char *)(a1 + 8);
  uint64_t v3 = (uint64_t *)(a1 + 8);
  if (v4)
  {
    return (unsigned char *)sub_188B4AC(v3);
  }
  return result;
}

char *sub_1817640(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v15 = a2;
  if ((sub_11947B8((uint64_t)a3, &v15, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v5 = (uint64_t *)(a1 + 8);
    uint64_t v6 = (uint64_t **)(a1 + 16);
    while (1)
    {
      uint64_t v7 = v15 + 1;
      unsigned int v8 = *v15;
      if (*v15 < 0)
      {
        unsigned int v9 = v8 + (*v7 << 7);
        unsigned int v8 = v9 - 128;
        if (*v7 < 0)
        {
          uint64_t v7 = (char *)sub_188C180((uint64_t)v15, v9 - 128);
          unsigned int v8 = v10;
        }
        else
        {
          uint64_t v7 = v15 + 2;
        }
      }
      uint64_t v15 = v7;
      if (!v8 || (v8 & 7) == 4) {
        break;
      }
      if (v8 - 800 > 0x31F)
      {
        if (*v5)
        {
          uint64_t v13 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else
        {
          uint64_t v13 = (std::string *)sub_188DBD8(v5);
          uint64_t v7 = v15;
        }
        uint64_t v12 = sub_1885AC0(v8, v13, v7, a3);
      }
      else
      {
        uint64_t v12 = sub_18859DC(v6, v8, v7, (uint64_t)&off_254C598, v5, a3);
      }
      uint64_t v15 = (char *)v12;
      if (!v12) {
        return 0;
      }
      if (sub_11947B8((uint64_t)a3, &v15, a3[11].i32[1])) {
        return v15;
      }
    }
    if (v7)
    {
      a3[10].i32[0] = v8 - 1;
      return v15;
    }
    return 0;
  }
  return v15;
}

char *sub_1817788(uint64_t a1, char *a2, _DWORD *a3)
{
  char v4 = a2;
  if (*(_WORD *)(a1 + 26)) {
    char v4 = sub_1886844(a1 + 16, 100, 200, a2, a3);
  }
  uint64_t v6 = *(void *)(a1 + 8);
  if ((v6 & 1) == 0) {
    return v4;
  }
  unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v8 + 31) < 0)
  {
    unsigned int v9 = *(void **)(v8 + 8);
    uint64_t v10 = *(void *)(v8 + 16);
  }
  else
  {
    unsigned int v9 = (void *)(v8 + 8);
    LODWORD(v10) = *(unsigned __int8 *)(v8 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v10)
  {
    uint64_t v11 = (int)v10;
    memcpy(v4, v9, (int)v10);
    v4 += v11;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v9, v10, v4);
}

uint64_t sub_1817854(uint64_t a1)
{
  uint64_t result = sub_1889280(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v4 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v5 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v5 = *(unsigned __int8 *)(v4 + 31);
    }
    result += v5;
  }
  *(_DWORD *)(a1 + 40) = result;
  return result;
}

uint64_t sub_18178AC(uint64_t a1)
{
  return sub_18856CC(a1 + 16);
}

void *sub_18178B4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.AddressRecommendationResult");
}

uint64_t sub_18178C4(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  *(void *)(a1 + 8) = v4;
  *(void *)a1 = off_24E0A98;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = 0;
  *(_DWORD *)(a1 + 48) = 0;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  *(_OWORD *)(a1 + 168) = 0u;
  *(_OWORD *)(a1 + 184) = 0u;
  *(_OWORD *)(a1 + 200) = 0u;
  *(_OWORD *)(a1 + 216) = 0u;
  *(_OWORD *)(a1 + 232) = 0u;
  *(_OWORD *)(a1 + 248) = 0u;
  *(void *)(a1 + 536) = 0;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 264) = 0u;
  *(_OWORD *)(a1 + 280) = 0u;
  *(_OWORD *)(a1 + 296) = 0u;
  *(_OWORD *)(a1 + 312) = 0u;
  *(_OWORD *)(a1 + 328) = 0u;
  *(_OWORD *)(a1 + 344) = 0u;
  *(_OWORD *)(a1 + 360) = 0u;
  *(_OWORD *)(a1 + 376) = 0u;
  *(_OWORD *)(a1 + 392) = 0u;
  *(_OWORD *)(a1 + 408) = 0u;
  *(_OWORD *)(a1 + 424) = 0u;
  *(_OWORD *)(a1 + 440) = 0u;
  *(_OWORD *)(a1 + 456) = 0u;
  *(_OWORD *)(a1 + 472) = 0u;
  *(_OWORD *)(a1 + 488) = 0u;
  *(_OWORD *)(a1 + 504) = 0u;
  *(_OWORD *)(a1 + 520) = 0u;
  return a1;
}

void sub_1817990(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_18179C0(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  uint64_t v4 = a1 + 16;
  *(void *)a1 = off_24E0A98;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(_DWORD *)(a1 + 48) = 0;
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v4, a2 + 16);
  int v6 = *(_DWORD *)(a2 + 40);
  if (v6) {
    operator new();
  }
  *(void *)(a1 + 56) = 0;
  if ((v6 & 2) != 0) {
    operator new();
  }
  *(void *)(a1 + 64) = 0;
  if ((v6 & 4) != 0) {
    operator new();
  }
  *(void *)(a1 + 72) = 0;
  if ((v6 & 8) != 0) {
    operator new();
  }
  *(void *)(a1 + 80) = 0;
  if ((v6 & 0x10) != 0) {
    operator new();
  }
  *(void *)(a1 + 88) = 0;
  if ((v6 & 0x20) != 0) {
    operator new();
  }
  *(void *)(a1 + 96) = 0;
  if ((v6 & 0x40) != 0) {
    operator new();
  }
  *(void *)(a1 + 104) = 0;
  if ((v6 & 0x80) != 0) {
    operator new();
  }
  *(void *)(a1 + 112) = 0;
  if ((v6 & 0x100) != 0) {
    operator new();
  }
  *(void *)(a1 + 120) = 0;
  if ((v6 & 0x200) != 0) {
    operator new();
  }
  *(void *)(a1 + 128) = 0;
  if ((v6 & 0x400) != 0) {
    operator new();
  }
  *(void *)(a1 + 136) = 0;
  if ((v6 & 0x800) != 0) {
    operator new();
  }
  *(void *)(a1 + 144) = 0;
  if ((v6 & 0x1000) != 0) {
    operator new();
  }
  *(void *)(a1 + 152) = 0;
  if ((v6 & 0x2000) != 0) {
    operator new();
  }
  *(void *)(a1 + 160) = 0;
  if ((v6 & 0x4000) != 0) {
    operator new();
  }
  *(void *)(a1 + 168) = 0;
  if ((v6 & 0x8000) != 0) {
    operator new();
  }
  *(void *)(a1 + 176) = 0;
  if ((v6 & 0x10000) != 0) {
    operator new();
  }
  *(void *)(a1 + 184) = 0;
  if ((v6 & 0x20000) != 0) {
    operator new();
  }
  *(void *)(a1 + 192) = 0;
  if ((v6 & 0x40000) != 0) {
    operator new();
  }
  *(void *)(a1 + 200) = 0;
  if ((v6 & 0x80000) != 0) {
    operator new();
  }
  *(void *)(a1 + 208) = 0;
  if ((v6 & 0x100000) != 0) {
    operator new();
  }
  *(void *)(a1 + 216) = 0;
  if ((v6 & 0x200000) != 0) {
    operator new();
  }
  *(void *)(a1 + 224) = 0;
  if ((v6 & 0x400000) != 0) {
    operator new();
  }
  *(void *)(a1 + 232) = 0;
  if ((v6 & 0x800000) != 0) {
    operator new();
  }
  *(void *)(a1 + 240) = 0;
  if ((v6 & 0x1000000) != 0) {
    operator new();
  }
  *(void *)(a1 + 248) = 0;
  if ((v6 & 0x2000000) != 0) {
    operator new();
  }
  *(void *)(a1 + 256) = 0;
  if ((v6 & 0x4000000) != 0) {
    operator new();
  }
  *(void *)(a1 + 264) = 0;
  if ((v6 & 0x8000000) != 0) {
    operator new();
  }
  *(void *)(a1 + 272) = 0;
  if ((v6 & 0x10000000) != 0) {
    operator new();
  }
  *(void *)(a1 + 280) = 0;
  if ((v6 & 0x20000000) != 0) {
    operator new();
  }
  *(void *)(a1 + 288) = 0;
  if ((v6 & 0x40000000) != 0) {
    operator new();
  }
  *(void *)(a1 + 296) = 0;
  if (v6 < 0) {
    operator new();
  }
  *(void *)(a1 + 304) = 0;
  int v7 = *(_DWORD *)(a2 + 44);
  if (v7) {
    operator new();
  }
  *(void *)(a1 + 312) = 0;
  if ((v7 & 2) != 0) {
    operator new();
  }
  *(void *)(a1 + 320) = 0;
  if ((v7 & 4) != 0) {
    operator new();
  }
  *(void *)(a1 + 328) = 0;
  if ((v7 & 8) != 0) {
    operator new();
  }
  *(void *)(a1 + 336) = 0;
  if ((v7 & 0x10) != 0) {
    operator new();
  }
  *(void *)(a1 + 344) = 0;
  if ((v7 & 0x20) != 0) {
    operator new();
  }
  *(void *)(a1 + 352) = 0;
  if ((v7 & 0x40) != 0) {
    operator new();
  }
  *(void *)(a1 + 360) = 0;
  if ((v7 & 0x80) != 0) {
    operator new();
  }
  *(void *)(a1 + 368) = 0;
  if ((v7 & 0x100) != 0) {
    operator new();
  }
  *(void *)(a1 + 376) = 0;
  if ((v7 & 0x200) != 0) {
    operator new();
  }
  *(void *)(a1 + 384) = 0;
  if ((v7 & 0x400) != 0) {
    operator new();
  }
  *(void *)(a1 + 392) = 0;
  if ((v7 & 0x800) != 0) {
    operator new();
  }
  *(void *)(a1 + 400) = 0;
  if ((v7 & 0x1000) != 0) {
    operator new();
  }
  *(void *)(a1 + 408) = 0;
  if ((v7 & 0x2000) != 0) {
    operator new();
  }
  *(void *)(a1 + 416) = 0;
  if ((v7 & 0x4000) != 0) {
    operator new();
  }
  *(void *)(a1 + 424) = 0;
  if ((v7 & 0x8000) != 0) {
    operator new();
  }
  *(void *)(a1 + 432) = 0;
  if ((v7 & 0x10000) != 0) {
    operator new();
  }
  *(void *)(a1 + 440) = 0;
  if ((v7 & 0x20000) != 0) {
    operator new();
  }
  *(void *)(a1 + 448) = 0;
  if ((v7 & 0x40000) != 0) {
    operator new();
  }
  *(void *)(a1 + 456) = 0;
  if ((v7 & 0x80000) != 0) {
    operator new();
  }
  *(void *)(a1 + 464) = 0;
  if ((v7 & 0x100000) != 0) {
    operator new();
  }
  *(void *)(a1 + 472) = 0;
  if ((v7 & 0x200000) != 0) {
    operator new();
  }
  *(void *)(a1 + 480) = 0;
  if ((v7 & 0x400000) != 0) {
    operator new();
  }
  *(void *)(a1 + 488) = 0;
  if ((v7 & 0x800000) != 0) {
    operator new();
  }
  *(void *)(a1 + 496) = 0;
  if ((v7 & 0x1000000) != 0) {
    operator new();
  }
  *(void *)(a1 + 504) = 0;
  if ((v7 & 0x2000000) != 0) {
    operator new();
  }
  *(void *)(a1 + 512) = 0;
  if ((v7 & 0x4000000) != 0) {
    operator new();
  }
  *(void *)(a1 + 520) = 0;
  if ((v7 & 0x8000000) != 0) {
    operator new();
  }
  *(void *)(a1 + 528) = 0;
  if ((v7 & 0x10000000) != 0) {
    operator new();
  }
  *(void *)(a1 + 536) = 0;
  return a1;
}

void sub_18187B4()
{
}

void *sub_1818BE8(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_1818C74((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

uint64_t sub_1818C74(uint64_t result)
{
  if ((uint64_t (***)())result != &off_254C5C8)
  {
    uint64_t v1 = (void *)result;
    uint64_t v2 = *(void **)(result + 56);
    if (v2)
    {
      sub_1795230(v2);
      operator delete();
    }
    uint64_t v3 = (void *)v1[8];
    if (v3)
    {
      sub_17D05F0(v3);
      operator delete();
    }
    uint64_t v4 = v1[9];
    if (v4)
    {
      sub_17CFBAC(v4);
      operator delete();
    }
    uint64_t v5 = (void *)v1[10];
    if (v5)
    {
      sub_17D30CC(v5);
      operator delete();
    }
    uint64_t v6 = v1[11];
    if (v6)
    {
      sub_17D4354(v6);
      operator delete();
    }
    int v7 = (void *)v1[12];
    if (v7)
    {
      sub_17DDC74(v7);
      operator delete();
    }
    unint64_t v8 = (void *)v1[13];
    if (v8)
    {
      sub_17D7538(v8);
      operator delete();
    }
    unsigned int v9 = (void *)v1[14];
    if (v9)
    {
      sub_17E5314(v9);
      operator delete();
    }
    uint64_t v10 = (void *)v1[15];
    if (v10)
    {
      sub_17E7CBC(v10);
      operator delete();
    }
    uint64_t v11 = (void *)v1[16];
    if (v11)
    {
      sub_17FFDB4(v11);
      operator delete();
    }
    uint64_t v12 = v1[17];
    if (v12)
    {
      sub_17A0284(v12);
      operator delete();
    }
    uint64_t v13 = (void *)v1[18];
    if (v13)
    {
      sub_17C5898(v13);
      operator delete();
    }
    uint64_t v14 = v1[19];
    if (v14)
    {
      sub_17CBBC0(v14);
      operator delete();
    }
    uint64_t v15 = v1[20];
    if (v15)
    {
      sub_17C1E44(v15);
      operator delete();
    }
    uint64_t v16 = (void *)v1[21];
    if (v16)
    {
      sub_17CF0F8(v16);
      operator delete();
    }
    uint64_t v17 = v1[22];
    if (v17)
    {
      sub_17CCFC8(v17);
      operator delete();
    }
    unint64_t v18 = (void *)v1[23];
    if (v18)
    {
      sub_17DC19C(v18);
      operator delete();
    }
    uint64_t v19 = v1[24];
    if (v19)
    {
      sub_17EA280(v19);
      operator delete();
    }
    uint64_t v20 = v1[25];
    if (v20)
    {
      sub_17D1E6C(v20);
      operator delete();
    }
    uint64_t v21 = (void *)v1[26];
    if (v21)
    {
      sub_17C3B40(v21);
      operator delete();
    }
    uint64_t v22 = v1[27];
    if (v22)
    {
      sub_17E2C48(v22);
      operator delete();
    }
    uint64_t v23 = v1[28];
    if (v23)
    {
      sub_17EB3EC(v23);
      operator delete();
    }
    uint64_t v24 = (void *)v1[29];
    if (v24)
    {
      sub_17D6678(v24);
      operator delete();
    }
    uint64_t v25 = v1[30];
    if (v25)
    {
      sub_17EC530(v25);
      operator delete();
    }
    uint64_t v26 = (void *)v1[31];
    if (v26)
    {
      sub_1802474(v26);
      operator delete();
    }
    int v27 = (void *)v1[32];
    if (v27)
    {
      sub_1803210(v27);
      operator delete();
    }
    unint64_t v28 = (void *)v1[33];
    if (v28)
    {
      sub_17ED3FC(v28);
      operator delete();
    }
    uint64_t v29 = (void *)v1[34];
    if (v29)
    {
      sub_17EE2AC(v29);
      operator delete();
    }
    uint64_t v30 = v1[35];
    if (v30)
    {
      sub_1803E58(v30);
      operator delete();
    }
    unint64_t v31 = (void *)v1[36];
    if (v31)
    {
      sub_17EF17C(v31);
      operator delete();
    }
    uint64_t v32 = (void *)v1[37];
    if (v32)
    {
      sub_1809AC0(v32);
      operator delete();
    }
    uint64_t v33 = v1[38];
    if (v33)
    {
      sub_180A73C(v33);
      operator delete();
    }
    uint64_t v34 = v1[39];
    if (v34)
    {
      sub_180B090(v34);
      operator delete();
    }
    uint64_t v35 = v1[40];
    if (v35)
    {
      sub_180C1CC(v35);
      operator delete();
    }
    uint64_t v36 = (void *)v1[41];
    if (v36)
    {
      sub_180CD58(v36);
      operator delete();
    }
    int v37 = (void *)v1[42];
    if (v37)
    {
      sub_180F7CC(v37);
      operator delete();
    }
    uint64_t v38 = v1[43];
    if (v38)
    {
      sub_180FDE4(v38);
      operator delete();
    }
    uint64_t v39 = v1[44];
    if (v39)
    {
      sub_132E718(v39);
      operator delete();
    }
    uint64_t v40 = (void *)v1[45];
    if (v40)
    {
      sub_18106C4(v40);
      operator delete();
    }
    uint64_t v41 = (void *)v1[46];
    if (v41)
    {
      sub_18046B0(v41);
      operator delete();
    }
    uint64_t v42 = v1[47];
    if (v42)
    {
      sub_1807C7C(v42);
      operator delete();
    }
    uint64_t v43 = v1[48];
    if (v43)
    {
      sub_17A2444(v43);
      operator delete();
    }
    uint64_t v44 = v1[49];
    if (v44)
    {
      sub_17AC668(v44);
      operator delete();
    }
    uint64_t v45 = (void *)v1[50];
    if (v45)
    {
      sub_161DE98(v45);
      operator delete();
    }
    uint64_t v46 = v1[51];
    if (v46)
    {
      sub_17A99AC(v46);
      operator delete();
    }
    uint64_t v47 = v1[52];
    if (v47)
    {
      sub_17A6A20(v47);
      operator delete();
    }
    uint64_t v48 = v1[53];
    if (v48)
    {
      sub_17D8DF8(v48);
      operator delete();
    }
    int v49 = (void *)v1[54];
    if (v49)
    {
      sub_17D9C08(v49);
      operator delete();
    }
    uint64_t v50 = v1[55];
    if (v50)
    {
      sub_1813768(v50);
      operator delete();
    }
    uint64_t v51 = v1[56];
    if (v51)
    {
      sub_17B638C(v51);
      operator delete();
    }
    uint64_t v52 = v1[57];
    if (v52)
    {
      sub_17AF2D8(v52);
      operator delete();
    }
    uint64_t v53 = v1[58];
    if (v53)
    {
      sub_17B26B4(v53);
      operator delete();
    }
    uint64_t v54 = v1[59];
    if (v54)
    {
      sub_17DA7A0(v54);
      operator delete();
    }
    uint64_t v55 = v1[60];
    if (v55)
    {
      sub_17B9034(v55);
      operator delete();
    }
    uint64_t v56 = (void *)v1[61];
    if (v56)
    {
      sub_17D5A7C(v56);
      operator delete();
    }
    BOOL v57 = (void *)v1[62];
    if (v57)
    {
      sub_1814648(v57);
      operator delete();
    }
    uint64_t v58 = v1[63];
    if (v58)
    {
      sub_1815290(v58);
      operator delete();
    }
    uint64_t v59 = v1[64];
    if (v59)
    {
      sub_1815F94(v59);
      operator delete();
    }
    uint64_t v60 = v1[65];
    if (v60)
    {
      sub_1810E54(v60);
      operator delete();
    }
    uint64_t v61 = (void *)v1[66];
    if (v61)
    {
      sub_17D4F7C(v61);
      operator delete();
    }
    uint64_t result = v1[67];
    if (result)
    {
      sub_1816CB0(result);
      operator delete();
    }
  }
  return result;
}

void sub_1819460(void *a1)
{
  sub_1818BE8(a1);

  operator delete();
}

uint64_t sub_1819498(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  unsigned int v3 = *(_DWORD *)(a1 + 40);
  if (!(_BYTE)v3) {
    goto LABEL_11;
  }
  if (v3)
  {
    uint64_t result = sub_1795608(*(void *)(a1 + 56));
    if ((v3 & 2) == 0)
    {
LABEL_4:
      if ((v3 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_48;
    }
  }
  else if ((v3 & 2) == 0)
  {
    goto LABEL_4;
  }
  uint64_t result = sub_17D0798(*(void *)(a1 + 64));
  if ((v3 & 4) == 0)
  {
LABEL_5:
    if ((v3 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_49;
  }
LABEL_48:
  uint64_t result = sub_17CFC84(*(void *)(a1 + 72));
  if ((v3 & 8) == 0)
  {
LABEL_6:
    if ((v3 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_50;
  }
LABEL_49:
  uint64_t result = sub_17D3198(*(void *)(a1 + 80));
  if ((v3 & 0x10) == 0)
  {
LABEL_7:
    if ((v3 & 0x20) == 0) {
      goto LABEL_8;
    }
LABEL_51:
    uint64_t result = sub_17DDEAC(*(void *)(a1 + 96));
    if ((v3 & 0x40) == 0)
    {
LABEL_9:
      if ((v3 & 0x80) == 0) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
    goto LABEL_52;
  }
LABEL_50:
  uint64_t result = (uint64_t)sub_17D4454(*(void *)(a1 + 88));
  if ((v3 & 0x20) != 0) {
    goto LABEL_51;
  }
LABEL_8:
  if ((v3 & 0x40) == 0) {
    goto LABEL_9;
  }
LABEL_52:
  uint64_t result = sub_17D76D4(*(void *)(a1 + 104));
  if ((v3 & 0x80) != 0) {
LABEL_10:
  }
    uint64_t result = sub_17E54DC(*(void *)(a1 + 112));
LABEL_11:
  if ((v3 & 0xFF00) == 0) {
    goto LABEL_21;
  }
  if ((v3 & 0x100) != 0)
  {
    uint64_t result = sub_17E7E7C(*(void *)(a1 + 120));
    if ((v3 & 0x200) == 0)
    {
LABEL_14:
      if ((v3 & 0x400) == 0) {
        goto LABEL_15;
      }
      goto LABEL_56;
    }
  }
  else if ((v3 & 0x200) == 0)
  {
    goto LABEL_14;
  }
  uint64_t result = sub_180006C(*(void *)(a1 + 128));
  if ((v3 & 0x400) == 0)
  {
LABEL_15:
    if ((v3 & 0x800) == 0) {
      goto LABEL_16;
    }
    goto LABEL_57;
  }
LABEL_56:
  uint64_t result = sub_17A041C(*(void *)(a1 + 136));
  if ((v3 & 0x800) == 0)
  {
LABEL_16:
    if ((v3 & 0x1000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_58;
  }
LABEL_57:
  uint64_t result = sub_17C5B54(*(void *)(a1 + 144));
  if ((v3 & 0x1000) == 0)
  {
LABEL_17:
    if ((v3 & 0x2000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_59;
  }
LABEL_58:
  uint64_t result = (uint64_t)sub_17CBCC4(*(unsigned char **)(a1 + 152));
  if ((v3 & 0x2000) == 0)
  {
LABEL_18:
    if ((v3 & 0x4000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_60;
  }
LABEL_59:
  uint64_t result = (uint64_t)sub_17C1F4C(*(unsigned char **)(a1 + 160));
  if ((v3 & 0x4000) == 0)
  {
LABEL_19:
    if ((v3 & 0x8000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_20;
  }
LABEL_60:
  uint64_t result = sub_17CF1A4(*(void *)(a1 + 168));
  if ((v3 & 0x8000) != 0) {
LABEL_20:
  }
    uint64_t result = sub_17CD0C0(*(void *)(a1 + 176));
LABEL_21:
  if ((v3 & 0xFF0000) == 0) {
    goto LABEL_31;
  }
  if ((v3 & 0x10000) != 0)
  {
    uint64_t result = sub_17DC340(*(void *)(a1 + 184));
    if ((v3 & 0x20000) == 0)
    {
LABEL_24:
      if ((v3 & 0x40000) == 0) {
        goto LABEL_25;
      }
      goto LABEL_64;
    }
  }
  else if ((v3 & 0x20000) == 0)
  {
    goto LABEL_24;
  }
  uint64_t result = sub_17EA388(*(void *)(a1 + 192));
  if ((v3 & 0x40000) == 0)
  {
LABEL_25:
    if ((v3 & 0x80000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_65;
  }
LABEL_64:
  uint64_t result = (uint64_t)sub_17D1F78(*(void *)(a1 + 200));
  if ((v3 & 0x80000) == 0)
  {
LABEL_26:
    if ((v3 & 0x100000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_66;
  }
LABEL_65:
  uint64_t result = sub_17C3BEC(*(void *)(a1 + 208));
  if ((v3 & 0x100000) == 0)
  {
LABEL_27:
    if ((v3 & 0x200000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_67;
  }
LABEL_66:
  uint64_t result = sub_17E2D54(*(void *)(a1 + 216));
  if ((v3 & 0x200000) == 0)
  {
LABEL_28:
    if ((v3 & 0x400000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_68;
  }
LABEL_67:
  uint64_t result = (uint64_t)sub_17EB4EC(*(void *)(a1 + 224));
  if ((v3 & 0x400000) == 0)
  {
LABEL_29:
    if ((v3 & 0x800000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_30;
  }
LABEL_68:
  uint64_t result = (uint64_t)sub_17D6738(*(void *)(a1 + 232));
  if ((v3 & 0x800000) != 0) {
LABEL_30:
  }
    uint64_t result = sub_17EC62C(*(void *)(a1 + 240));
LABEL_31:
  if (!HIBYTE(v3)) {
    goto LABEL_40;
  }
  if ((v3 & 0x1000000) != 0)
  {
    uint64_t result = sub_1802534(*(void *)(a1 + 248));
    if ((v3 & 0x2000000) == 0)
    {
LABEL_34:
      if ((v3 & 0x4000000) == 0) {
        goto LABEL_35;
      }
      goto LABEL_138;
    }
  }
  else if ((v3 & 0x2000000) == 0)
  {
    goto LABEL_34;
  }
  uint64_t result = sub_18032D4(*(void *)(a1 + 256));
  if ((v3 & 0x4000000) == 0)
  {
LABEL_35:
    if ((v3 & 0x8000000) == 0) {
      goto LABEL_36;
    }
    goto LABEL_139;
  }
LABEL_138:
  uint64_t result = sub_17ED4CC(*(void *)(a1 + 264));
  if ((v3 & 0x8000000) == 0)
  {
LABEL_36:
    if ((v3 & 0x10000000) == 0) {
      goto LABEL_37;
    }
    goto LABEL_140;
  }
LABEL_139:
  uint64_t result = (uint64_t)sub_17EE364(*(unsigned char **)(a1 + 272));
  if ((v3 & 0x10000000) == 0)
  {
LABEL_37:
    if ((v3 & 0x20000000) == 0) {
      goto LABEL_38;
    }
    goto LABEL_141;
  }
LABEL_140:
  uint64_t result = sub_1803F30(*(void *)(a1 + 280));
  if ((v3 & 0x20000000) == 0)
  {
LABEL_38:
    if ((v3 & 0x40000000) == 0) {
      goto LABEL_39;
    }
LABEL_142:
    uint64_t result = sub_1809B78(*(void *)(a1 + 296));
    if ((v3 & 0x80000000) == 0) {
      goto LABEL_40;
    }
    goto LABEL_143;
  }
LABEL_141:
  uint64_t result = sub_17EF234(*(void *)(a1 + 288));
  if ((v3 & 0x40000000) != 0) {
    goto LABEL_142;
  }
LABEL_39:
  if ((v3 & 0x80000000) == 0) {
    goto LABEL_40;
  }
LABEL_143:
  uint64_t result = sub_180A82C(*(void *)(a1 + 304));
LABEL_40:
  int v4 = *(_DWORD *)(a1 + 44);
  if (!(_BYTE)v4) {
    goto LABEL_80;
  }
  if (v4)
  {
    uint64_t result = sub_180B168(*(void *)(a1 + 312));
    if ((v4 & 2) == 0)
    {
LABEL_43:
      if ((v4 & 4) == 0) {
        goto LABEL_44;
      }
      goto LABEL_72;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_43;
  }
  uint64_t result = sub_180C2BC(*(void *)(a1 + 320));
  if ((v4 & 4) == 0)
  {
LABEL_44:
    if ((v4 & 8) == 0) {
      goto LABEL_75;
    }
    goto LABEL_73;
  }
LABEL_72:
  uint64_t result = sub_180CE1C(*(void *)(a1 + 328));
  if ((v4 & 8) == 0) {
    goto LABEL_75;
  }
LABEL_73:
  uint64_t v5 = *(void *)(a1 + 336);
  char v6 = *(unsigned char *)(v5 + 8);
  uint64_t result = v5 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v6) {
    uint64_t result = sub_188B4AC((uint64_t *)result);
  }
LABEL_75:
  if ((v4 & 0x10) != 0)
  {
    uint64_t result = (uint64_t)sub_180FEE0(*(unsigned char **)(a1 + 344));
    if ((v4 & 0x20) == 0)
    {
LABEL_77:
      if ((v4 & 0x40) == 0) {
        goto LABEL_78;
      }
      goto LABEL_113;
    }
  }
  else if ((v4 & 0x20) == 0)
  {
    goto LABEL_77;
  }
  uint64_t result = (uint64_t)sub_132E754(*(void *)(a1 + 352));
  if ((v4 & 0x40) == 0)
  {
LABEL_78:
    if ((v4 & 0x80) == 0) {
      goto LABEL_80;
    }
    goto LABEL_79;
  }
LABEL_113:
  uint64_t result = (uint64_t)sub_181077C(*(unsigned char **)(a1 + 360));
  if ((v4 & 0x80) != 0) {
LABEL_79:
  }
    uint64_t result = sub_1804768(*(void *)(a1 + 368));
LABEL_80:
  if ((v4 & 0xFF00) == 0) {
    goto LABEL_90;
  }
  if ((v4 & 0x100) != 0)
  {
    uint64_t result = sub_1807D54(*(void *)(a1 + 376));
    if ((v4 & 0x200) == 0)
    {
LABEL_83:
      if ((v4 & 0x400) == 0) {
        goto LABEL_84;
      }
      goto LABEL_117;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_83;
  }
  uint64_t result = sub_17A2554(*(void *)(a1 + 384));
  if ((v4 & 0x400) == 0)
  {
LABEL_84:
    if ((v4 & 0x800) == 0) {
      goto LABEL_85;
    }
    goto LABEL_118;
  }
LABEL_117:
  uint64_t result = sub_17AC838(*(void *)(a1 + 392));
  if ((v4 & 0x800) == 0)
  {
LABEL_85:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_86;
    }
    goto LABEL_119;
  }
LABEL_118:
  uint64_t result = (uint64_t)sub_161DED4(*(unsigned char **)(a1 + 400));
  if ((v4 & 0x1000) == 0)
  {
LABEL_86:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_87;
    }
    goto LABEL_120;
  }
LABEL_119:
  uint64_t result = sub_17A9AD4(*(void *)(a1 + 408));
  if ((v4 & 0x2000) == 0)
  {
LABEL_87:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_88;
    }
    goto LABEL_121;
  }
LABEL_120:
  uint64_t result = sub_17A6B48(*(void *)(a1 + 416));
  if ((v4 & 0x4000) == 0)
  {
LABEL_88:
    if ((v4 & 0x8000) == 0) {
      goto LABEL_90;
    }
    goto LABEL_89;
  }
LABEL_121:
  uint64_t result = sub_17D8F10(*(void *)(a1 + 424));
  if ((v4 & 0x8000) != 0) {
LABEL_89:
  }
    uint64_t result = sub_17D9CC0(*(void *)(a1 + 432));
LABEL_90:
  if ((v4 & 0xFF0000) == 0) {
    goto LABEL_100;
  }
  if ((v4 & 0x10000) != 0)
  {
    uint64_t result = sub_1813864(*(void *)(a1 + 440));
    if ((v4 & 0x20000) == 0)
    {
LABEL_93:
      if ((v4 & 0x40000) == 0) {
        goto LABEL_94;
      }
      goto LABEL_125;
    }
  }
  else if ((v4 & 0x20000) == 0)
  {
    goto LABEL_93;
  }
  uint64_t result = sub_17B647C(*(void *)(a1 + 448));
  if ((v4 & 0x40000) == 0)
  {
LABEL_94:
    if ((v4 & 0x80000) == 0) {
      goto LABEL_95;
    }
    goto LABEL_126;
  }
LABEL_125:
  uint64_t result = (uint64_t)sub_17AF3C8(*(unsigned char **)(a1 + 456));
  if ((v4 & 0x80000) == 0)
  {
LABEL_95:
    if ((v4 & 0x100000) == 0) {
      goto LABEL_96;
    }
    goto LABEL_127;
  }
LABEL_126:
  uint64_t result = sub_17B284C(*(void *)(a1 + 464));
  if ((v4 & 0x100000) == 0)
  {
LABEL_96:
    if ((v4 & 0x200000) == 0) {
      goto LABEL_97;
    }
    goto LABEL_128;
  }
LABEL_127:
  uint64_t result = sub_17DA8EC(*(void *)(a1 + 472));
  if ((v4 & 0x200000) == 0)
  {
LABEL_97:
    if ((v4 & 0x400000) == 0) {
      goto LABEL_98;
    }
    goto LABEL_129;
  }
LABEL_128:
  uint64_t result = sub_17B9178(*(void *)(a1 + 480));
  if ((v4 & 0x400000) == 0)
  {
LABEL_98:
    if ((v4 & 0x800000) == 0) {
      goto LABEL_100;
    }
    goto LABEL_99;
  }
LABEL_129:
  uint64_t result = sub_17D5B3C(*(void *)(a1 + 488));
  if ((v4 & 0x800000) != 0) {
LABEL_99:
  }
    uint64_t result = sub_1814700(*(void *)(a1 + 496));
LABEL_100:
  if ((v4 & 0x1F000000) == 0) {
    goto LABEL_107;
  }
  if ((v4 & 0x1000000) != 0)
  {
    uint64_t result = sub_181538C(*(void *)(a1 + 504));
    if ((v4 & 0x2000000) == 0)
    {
LABEL_103:
      if ((v4 & 0x4000000) == 0) {
        goto LABEL_104;
      }
      goto LABEL_133;
    }
  }
  else if ((v4 & 0x2000000) == 0)
  {
    goto LABEL_103;
  }
  uint64_t result = (uint64_t)sub_1816084(*(unsigned char **)(a1 + 512));
  if ((v4 & 0x4000000) == 0)
  {
LABEL_104:
    if ((v4 & 0x8000000) == 0) {
      goto LABEL_105;
    }
    goto LABEL_134;
  }
LABEL_133:
  uint64_t result = (uint64_t)sub_1810F44(*(unsigned char **)(a1 + 520));
  if ((v4 & 0x8000000) == 0)
  {
LABEL_105:
    if ((v4 & 0x10000000) == 0) {
      goto LABEL_107;
    }
    goto LABEL_106;
  }
LABEL_134:
  uint64_t result = (uint64_t)sub_17D503C(*(void *)(a1 + 528));
  if ((v4 & 0x10000000) != 0) {
LABEL_106:
  }
    uint64_t result = sub_1816DBC(*(void *)(a1 + 536));
LABEL_107:
  char v8 = *(unsigned char *)(a1 + 8);
  int v7 = (uint64_t *)(a1 + 8);
  v7[4] = 0;
  if (v8)
  {
    return sub_188B4AC(v7);
  }
  return result;
}

char *sub_1819910(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v150 = a2;
  if (sub_11947B8((uint64_t)a3, &v150, a3[11].i32[1])) {
    return v150;
  }
  char v6 = (void *)(a1 + 8);
  while (2)
  {
    int v7 = v150 + 1;
    unsigned int v8 = *v150;
    if (*v150 < 0)
    {
      unsigned int v8 = v8 + (*v7 << 7) - 128;
      if (*v7 < 0) {
        int v7 = (char *)sub_188C180((uint64_t)v150, v8);
      }
      else {
        int v7 = v150 + 2;
      }
    }
    int v150 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 10) {
          goto LABEL_375;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        uint64_t v9 = *(void *)(a1 + 56);
        if (!v9)
        {
          uint64_t v10 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v10 = (void *)*v10;
          }
          uint64_t v9 = sub_18304F0((uint64_t)v10);
          *(void *)(a1 + 56) = v9;
          int v7 = v150;
        }
        uint64_t v11 = (char *)sub_181AE98(a3, v9, (unsigned __int8 *)v7);
        goto LABEL_384;
      case 2u:
        if (v8 != 18) {
          goto LABEL_375;
        }
        *(_DWORD *)(a1 + 40) |= 2u;
        uint64_t v12 = *(void *)(a1 + 64);
        if (!v12)
        {
          uint64_t v13 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v13 = (void *)*v13;
          }
          uint64_t v12 = sub_1832F00((uint64_t)v13);
          *(void *)(a1 + 64) = v12;
          int v7 = v150;
        }
        uint64_t v11 = (char *)sub_181AF28(a3, v12, (unsigned __int8 *)v7);
        goto LABEL_384;
      case 3u:
        if (v8 != 26) {
          goto LABEL_375;
        }
        *(_DWORD *)(a1 + 40) |= 4u;
        uint64_t v14 = *(void **)(a1 + 72);
        if (!v14)
        {
          uint64_t v15 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v15 = (void *)*v15;
          }
          uint64_t v14 = sub_1832E04((uint64_t)v15);
          *(void *)(a1 + 72) = v14;
          int v7 = v150;
        }
        uint64_t v11 = (char *)sub_181AFB8(a3, (uint64_t)v14, (unsigned __int8 *)v7);
        goto LABEL_384;
      case 4u:
        if (v8 != 34) {
          goto LABEL_375;
        }
        *(_DWORD *)(a1 + 40) |= 8u;
        uint64_t v16 = *(void **)(a1 + 80);
        if (!v16)
        {
          uint64_t v17 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v17 = (void *)*v17;
          }
          uint64_t v16 = sub_1833070((uint64_t)v17);
          *(void *)(a1 + 80) = v16;
          int v7 = v150;
        }
        uint64_t v11 = sub_181B048(a3, (uint64_t)v16, (unsigned __int8 *)v7);
        goto LABEL_384;
      case 5u:
        if (v8 != 42) {
          goto LABEL_375;
        }
        *(_DWORD *)(a1 + 40) |= 0x10u;
        unint64_t v18 = *(void **)(a1 + 88);
        if (!v18)
        {
          uint64_t v19 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v19 = (void *)*v19;
          }
          unint64_t v18 = sub_1833128((uint64_t)v19);
          *(void *)(a1 + 88) = v18;
          int v7 = v150;
        }
        uint64_t v11 = sub_181B0D8(a3, (uint64_t)v18, (unsigned __int8 *)v7);
        goto LABEL_384;
      case 6u:
        if (v8 != 50) {
          goto LABEL_375;
        }
        *(_DWORD *)(a1 + 40) |= 0x20u;
        uint64_t v20 = *(void *)(a1 + 96);
        if (!v20)
        {
          uint64_t v21 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v21 = (void *)*v21;
          }
          sub_18339A8((uint64_t)v21);
          uint64_t v20 = v22;
          *(void *)(a1 + 96) = v22;
          int v7 = v150;
        }
        uint64_t v11 = (char *)sub_181B168(a3, v20, (unsigned __int8 *)v7);
        goto LABEL_384;
      case 7u:
        if (v8 != 58) {
          goto LABEL_375;
        }
        *(_DWORD *)(a1 + 40) |= 0x40u;
        uint64_t v23 = *(void *)(a1 + 104);
        if (!v23)
        {
          uint64_t v24 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v24 = (void *)*v24;
          }
          sub_1833400((uint64_t)v24);
          uint64_t v23 = v25;
          *(void *)(a1 + 104) = v25;
          int v7 = v150;
        }
        uint64_t v11 = (char *)sub_181B1F8(a3, v23, (unsigned __int8 *)v7);
        goto LABEL_384;
      case 8u:
        if (v8 != 66) {
          goto LABEL_375;
        }
        *(_DWORD *)(a1 + 40) |= 0x80u;
        uint64_t v26 = *(void *)(a1 + 112);
        if (!v26)
        {
          int v27 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            int v27 = (void *)*v27;
          }
          sub_1833F40((uint64_t)v27);
          uint64_t v26 = v28;
          *(void *)(a1 + 112) = v28;
          int v7 = v150;
        }
        uint64_t v11 = (char *)sub_181B288(a3, v26, (unsigned __int8 *)v7);
        goto LABEL_384;
      case 9u:
        if (v8 != 74) {
          goto LABEL_375;
        }
        *(_DWORD *)(a1 + 40) |= 0x100u;
        uint64_t v29 = *(void *)(a1 + 120);
        if (!v29)
        {
          uint64_t v30 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v30 = (void *)*v30;
          }
          sub_1834130((uint64_t)v30);
          uint64_t v29 = v31;
          *(void *)(a1 + 120) = v31;
          int v7 = v150;
        }
        uint64_t v11 = (char *)sub_181B318(a3, v29, (unsigned __int8 *)v7);
        goto LABEL_384;
      case 0xAu:
        if (v8 != 82) {
          goto LABEL_375;
        }
        *(_DWORD *)(a1 + 40) |= 0x200u;
        uint64_t v32 = *(void *)(a1 + 128);
        if (!v32)
        {
          uint64_t v33 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v33 = (void *)*v33;
          }
          uint64_t v32 = sub_1835324((uint64_t)v33);
          *(void *)(a1 + 128) = v32;
          int v7 = v150;
        }
        uint64_t v11 = sub_181B3A8(a3, v32, (unsigned __int8 *)v7);
        goto LABEL_384;
      case 0xBu:
        if (v8 != 90) {
          goto LABEL_375;
        }
        *(_DWORD *)(a1 + 40) |= 0x400u;
        uint64_t v34 = *(void *)(a1 + 136);
        if (!v34)
        {
          uint64_t v35 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v35 = (void *)*v35;
          }
          uint64_t v34 = sub_18307BC((uint64_t)v35);
          *(void *)(a1 + 136) = v34;
          int v7 = v150;
        }
        uint64_t v11 = (char *)sub_17ACD84(a3, v34, (unsigned __int8 *)v7);
        goto LABEL_384;
      case 0xCu:
        if (v8 != 98) {
          goto LABEL_375;
        }
        *(_DWORD *)(a1 + 40) |= 0x800u;
        uint64_t v36 = *(void *)(a1 + 144);
        if (!v36)
        {
          int v37 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            int v37 = (void *)*v37;
          }
          sub_18328CC((uint64_t)v37);
          uint64_t v36 = v38;
          *(void *)(a1 + 144) = v38;
          int v7 = v150;
        }
        uint64_t v11 = (char *)sub_181B438(a3, v36, (unsigned __int8 *)v7);
        goto LABEL_384;
      case 0xDu:
        if (v8 != 106) {
          goto LABEL_375;
        }
        *(_DWORD *)(a1 + 40) |= 0x1000u;
        uint64_t v39 = *(void **)(a1 + 152);
        if (!v39)
        {
          uint64_t v40 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v40 = (void *)*v40;
          }
          uint64_t v39 = sub_1832988((uint64_t)v40);
          *(void *)(a1 + 152) = v39;
          int v7 = v150;
        }
        uint64_t v11 = (char *)sub_181B4C8(a3, (uint64_t)v39, (unsigned __int8 *)v7);
        goto LABEL_384;
      case 0xEu:
        if (v8 != 114) {
          goto LABEL_375;
        }
        *(_DWORD *)(a1 + 40) |= 0x2000u;
        uint64_t v41 = *(void *)(a1 + 160);
        if (!v41)
        {
          uint64_t v42 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v42 = (void *)*v42;
          }
          sub_1832554((uint64_t)v42);
          uint64_t v41 = v43;
          *(void *)(a1 + 160) = v43;
          int v7 = v150;
        }
        uint64_t v11 = sub_181B558(a3, v41, (unsigned __int8 *)v7);
        goto LABEL_384;
      case 0xFu:
        if (v8 != 122) {
          goto LABEL_375;
        }
        *(_DWORD *)(a1 + 40) |= 0x4000u;
        uint64_t v44 = *(void **)(a1 + 168);
        if (!v44)
        {
          uint64_t v45 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v45 = (void *)*v45;
          }
          uint64_t v44 = sub_1832D04((uint64_t)v45);
          *(void *)(a1 + 168) = v44;
          int v7 = v150;
        }
        uint64_t v11 = sub_181B5E8(a3, (uint64_t)v44, (unsigned __int8 *)v7);
        goto LABEL_384;
      case 0x10u:
        if (v8 != 130) {
          goto LABEL_375;
        }
        *(_DWORD *)(a1 + 40) |= 0x8000u;
        uint64_t v46 = *(void *)(a1 + 176);
        if (!v46)
        {
          uint64_t v47 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v47 = (void *)*v47;
          }
          uint64_t v46 = sub_1832A98((uint64_t)v47);
          *(void *)(a1 + 176) = v46;
          int v7 = v150;
        }
        uint64_t v11 = (char *)sub_181B678(a3, v46, (unsigned __int8 *)v7);
        goto LABEL_384;
      case 0x11u:
        if (v8 != 138) {
          goto LABEL_375;
        }
        *(_DWORD *)(a1 + 40) |= 0x10000u;
        uint64_t v48 = *(void *)(a1 + 184);
        if (!v48)
        {
          int v49 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            int v49 = (void *)*v49;
          }
          sub_183387C((uint64_t)v49);
          uint64_t v48 = v50;
          *(void *)(a1 + 184) = v50;
          int v7 = v150;
        }
        uint64_t v11 = (char *)sub_181B708(a3, v48, (unsigned __int8 *)v7);
        goto LABEL_384;
      case 0x12u:
        if (v8 != 146) {
          goto LABEL_375;
        }
        *(_DWORD *)(a1 + 40) |= 0x20000u;
        uint64_t v51 = *(void *)(a1 + 192);
        if (!v51)
        {
          uint64_t v52 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v52 = (void *)*v52;
          }
          sub_1834300((uint64_t)v52);
          uint64_t v51 = v53;
          *(void *)(a1 + 192) = v53;
          int v7 = v150;
        }
        uint64_t v11 = sub_181B798(a3, v51, (unsigned __int8 *)v7);
        goto LABEL_384;
      case 0x13u:
        if (v8 != 154) {
          goto LABEL_375;
        }
        *(_DWORD *)(a1 + 40) |= 0x40000u;
        uint64_t v54 = *(void *)(a1 + 200);
        if (!v54)
        {
          uint64_t v55 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v55 = (void *)*v55;
          }
          uint64_t v54 = sub_1832FB8((uint64_t)v55);
          *(void *)(a1 + 200) = v54;
          int v7 = v150;
        }
        uint64_t v11 = (char *)sub_181B828(a3, v54, (unsigned __int8 *)v7);
        goto LABEL_384;
      case 0x14u:
        if (v8 != 162) {
          goto LABEL_375;
        }
        *(_DWORD *)(a1 + 40) |= 0x80000u;
        uint64_t v56 = *(void **)(a1 + 208);
        if (!v56)
        {
          BOOL v57 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            BOOL v57 = (void *)*v57;
          }
          uint64_t v56 = sub_1832718((uint64_t)v57);
          *(void *)(a1 + 208) = v56;
          int v7 = v150;
        }
        uint64_t v11 = sub_181B8B8(a3, (uint64_t)v56, (unsigned __int8 *)v7);
        goto LABEL_384;
      case 0x15u:
        if (v8 != 170) {
          goto LABEL_375;
        }
        *(_DWORD *)(a1 + 40) |= 0x100000u;
        uint64_t v58 = *(void **)(a1 + 216);
        if (!v58)
        {
          uint64_t v59 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v59 = (void *)*v59;
          }
          uint64_t v58 = sub_1833CC8((uint64_t)v59);
          *(void *)(a1 + 216) = v58;
          int v7 = v150;
        }
        uint64_t v11 = (char *)sub_181B948(a3, (uint64_t)v58, (unsigned __int8 *)v7);
        goto LABEL_384;
      case 0x16u:
        if (v8 != 178) {
          goto LABEL_375;
        }
        *(_DWORD *)(a1 + 40) |= 0x200000u;
        uint64_t v60 = *(void *)(a1 + 224);
        if (!v60)
        {
          uint64_t v61 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v61 = (void *)*v61;
          }
          uint64_t v60 = sub_18343E4((uint64_t)v61);
          *(void *)(a1 + 224) = v60;
          int v7 = v150;
        }
        uint64_t v11 = sub_181B9D8(a3, v60, (unsigned __int8 *)v7);
        goto LABEL_384;
      case 0x17u:
        if (v8 != 186) {
          goto LABEL_375;
        }
        *(_DWORD *)(a1 + 40) |= 0x400000u;
        unint64_t v62 = *(void **)(a1 + 232);
        if (!v62)
        {
          uint64_t v63 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v63 = (void *)*v63;
          }
          unint64_t v62 = sub_183332C((uint64_t)v63);
          *(void *)(a1 + 232) = v62;
          int v7 = v150;
        }
        uint64_t v11 = sub_181BA68(a3, (uint64_t)v62, (unsigned __int8 *)v7);
        goto LABEL_384;
      case 0x18u:
        if (v8 != 194) {
          goto LABEL_375;
        }
        *(_DWORD *)(a1 + 40) |= 0x800000u;
        uint64_t v64 = *(void *)(a1 + 240);
        if (!v64)
        {
          unint64_t v65 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            unint64_t v65 = (void *)*v65;
          }
          uint64_t v64 = sub_183449C((uint64_t)v65);
          *(void *)(a1 + 240) = v64;
          int v7 = v150;
        }
        uint64_t v11 = sub_181BAF8(a3, v64, (unsigned __int8 *)v7);
        goto LABEL_384;
      case 0x19u:
        if (v8 != 202) {
          goto LABEL_375;
        }
        *(_DWORD *)(a1 + 40) |= 0x1000000u;
        uint64_t v66 = *(void *)(a1 + 248);
        if (!v66)
        {
          BOOL v67 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            BOOL v67 = (void *)*v67;
          }
          uint64_t v66 = sub_1835380((uint64_t)v67);
          *(void *)(a1 + 248) = v66;
          int v7 = v150;
        }
        uint64_t v11 = sub_181BB88(a3, v66, (unsigned __int8 *)v7);
        goto LABEL_384;
      case 0x1Au:
        if (v8 != 210) {
          goto LABEL_375;
        }
        *(_DWORD *)(a1 + 40) |= 0x2000000u;
        uint64_t v68 = *(void *)(a1 + 256);
        if (!v68)
        {
          int v69 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            int v69 = (void *)*v69;
          }
          uint64_t v68 = sub_183549C((uint64_t)v69);
          *(void *)(a1 + 256) = v68;
          int v7 = v150;
        }
        uint64_t v11 = sub_181BC18(a3, v68, (unsigned __int8 *)v7);
        goto LABEL_384;
      case 0x1Cu:
        if (v8 != 226) {
          goto LABEL_375;
        }
        *(_DWORD *)(a1 + 40) |= 0x4000000u;
        uint64_t v70 = *(void *)(a1 + 264);
        if (!v70)
        {
          long long v71 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            long long v71 = (void *)*v71;
          }
          uint64_t v70 = sub_18345B0((uint64_t)v71);
          *(void *)(a1 + 264) = v70;
          int v7 = v150;
        }
        uint64_t v11 = sub_181BCA8(a3, v70, (unsigned __int8 *)v7);
        goto LABEL_384;
      case 0x1Du:
        if (v8 != 234) {
          goto LABEL_375;
        }
        *(_DWORD *)(a1 + 40) |= 0x8000000u;
        uint64_t v72 = *(void *)(a1 + 272);
        if (!v72)
        {
          int v73 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            int v73 = (void *)*v73;
          }
          uint64_t v72 = sub_18346D8((uint64_t)v73);
          *(void *)(a1 + 272) = v72;
          int v7 = v150;
        }
        uint64_t v11 = sub_181BD38(a3, v72, (unsigned __int8 *)v7);
        goto LABEL_384;
      case 0x1Eu:
        if (v8 != 242) {
          goto LABEL_375;
        }
        *(_DWORD *)(a1 + 40) |= 0x10000000u;
        unint64_t v74 = *(void **)(a1 + 280);
        if (!v74)
        {
          uint64_t v75 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v75 = (void *)*v75;
          }
          unint64_t v74 = sub_18355B8((uint64_t)v75);
          *(void *)(a1 + 280) = v74;
          int v7 = v150;
        }
        uint64_t v11 = (char *)sub_181BDC8(a3, (uint64_t)v74, (unsigned __int8 *)v7);
        goto LABEL_384;
      case 0x1Fu:
        if (v8 != 250) {
          goto LABEL_375;
        }
        *(_DWORD *)(a1 + 40) |= 0x20000000u;
        uint64_t v76 = *(void *)(a1 + 288);
        if (!v76)
        {
          uint64_t v77 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v77 = (void *)*v77;
          }
          uint64_t v76 = sub_1834814((uint64_t)v77);
          *(void *)(a1 + 288) = v76;
          int v7 = v150;
        }
        uint64_t v11 = sub_181BE58(a3, v76, (unsigned __int8 *)v7);
        goto LABEL_384;
      case 0x20u:
        if (v8 != 2) {
          goto LABEL_375;
        }
        *(_DWORD *)(a1 + 40) |= 0x40000000u;
        uint64_t v78 = *(void *)(a1 + 296);
        if (!v78)
        {
          int v79 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            int v79 = (void *)*v79;
          }
          uint64_t v78 = sub_1835C20((uint64_t)v79);
          *(void *)(a1 + 296) = v78;
          int v7 = v150;
        }
        uint64_t v11 = sub_181BEE8(a3, v78, (unsigned __int8 *)v7);
        goto LABEL_384;
      case 0x21u:
        if (v8 != 10) {
          goto LABEL_375;
        }
        *(_DWORD *)(a1 + 40) |= 0x80000000;
        uint64_t v80 = *(void **)(a1 + 304);
        if (!v80)
        {
          int v81 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            int v81 = (void *)*v81;
          }
          uint64_t v80 = sub_1835D38((uint64_t)v81);
          *(void *)(a1 + 304) = v80;
          int v7 = v150;
        }
        uint64_t v11 = sub_181BF78(a3, (uint64_t)v80, (unsigned __int8 *)v7);
        goto LABEL_384;
      case 0x22u:
        if (v8 != 18) {
          goto LABEL_375;
        }
        *(_DWORD *)(a1 + 44) |= 1u;
        unint64_t v82 = *(void **)(a1 + 312);
        if (!v82)
        {
          uint64_t v83 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v83 = (void *)*v83;
          }
          unint64_t v82 = sub_1835E28((uint64_t)v83);
          *(void *)(a1 + 312) = v82;
          int v7 = v150;
        }
        uint64_t v11 = (char *)sub_181C008(a3, (uint64_t)v82, (unsigned __int8 *)v7);
        goto LABEL_384;
      case 0x23u:
        if (v8 != 26) {
          goto LABEL_375;
        }
        *(_DWORD *)(a1 + 44) |= 2u;
        uint64_t v84 = *(void **)(a1 + 320);
        if (!v84)
        {
          unint64_t v85 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            unint64_t v85 = (void *)*v85;
          }
          uint64_t v84 = sub_1835F38((uint64_t)v85);
          *(void *)(a1 + 320) = v84;
          int v7 = v150;
        }
        uint64_t v11 = sub_181C098(a3, (uint64_t)v84, (unsigned __int8 *)v7);
        goto LABEL_384;
      case 0x24u:
        if (v8 != 34) {
          goto LABEL_375;
        }
        *(_DWORD *)(a1 + 44) |= 4u;
        uint64_t v86 = *(void *)(a1 + 328);
        if (!v86)
        {
          int v87 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            int v87 = (void *)*v87;
          }
          uint64_t v86 = sub_183602C((uint64_t)v87);
          *(void *)(a1 + 328) = v86;
          int v7 = v150;
        }
        uint64_t v11 = sub_181C128(a3, v86, (unsigned __int8 *)v7);
        goto LABEL_384;
      case 0x25u:
        if (v8 != 42) {
          goto LABEL_375;
        }
        *(_DWORD *)(a1 + 44) |= 8u;
        uint64_t v88 = *(void *)(a1 + 336);
        if (!v88)
        {
          unint64_t v89 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            unint64_t v89 = (void *)*v89;
          }
          uint64_t v88 = sub_18362C4((uint64_t)v89);
          *(void *)(a1 + 336) = v88;
          int v7 = v150;
        }
        uint64_t v11 = sub_181C1B8(a3, v88, (unsigned __int8 *)v7);
        goto LABEL_384;
      case 0x26u:
        if (v8 != 50) {
          goto LABEL_375;
        }
        *(_DWORD *)(a1 + 44) |= 0x10u;
        unint64_t v90 = *(void **)(a1 + 344);
        if (!v90)
        {
          int v91 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            int v91 = (void *)*v91;
          }
          unint64_t v90 = sub_1836358((uint64_t)v91);
          *(void *)(a1 + 344) = v90;
          int v7 = v150;
        }
        uint64_t v11 = sub_181C248(a3, (uint64_t)v90, (unsigned __int8 *)v7);
        goto LABEL_384;
      case 0x27u:
        if (v8 != 58) {
          goto LABEL_375;
        }
        *(_DWORD *)(a1 + 44) |= 0x20u;
        uint64_t v92 = *(void *)(a1 + 352);
        if (!v92)
        {
          uint64_t v93 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v93 = (void *)*v93;
          }
          uint64_t v92 = sub_1332690((uint64_t)v93);
          *(void *)(a1 + 352) = v92;
          int v7 = v150;
        }
        uint64_t v11 = (char *)sub_181C2D8(a3, v92, (unsigned __int8 *)v7);
        goto LABEL_384;
      case 0x28u:
        if (v8 != 66) {
          goto LABEL_375;
        }
        *(_DWORD *)(a1 + 44) |= 0x40u;
        uint64_t v94 = *(void *)(a1 + 360);
        if (!v94)
        {
          unint64_t v95 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            unint64_t v95 = (void *)*v95;
          }
          uint64_t v94 = sub_18363F4((uint64_t)v95);
          *(void *)(a1 + 360) = v94;
          int v7 = v150;
        }
        uint64_t v11 = sub_181C368(a3, v94, (unsigned __int8 *)v7);
        goto LABEL_384;
      case 0x29u:
        if (v8 != 74) {
          goto LABEL_375;
        }
        *(_DWORD *)(a1 + 44) |= 0x80u;
        uint64_t v96 = *(void *)(a1 + 368);
        if (!v96)
        {
          uint64_t v97 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v97 = (void *)*v97;
          }
          uint64_t v96 = sub_18356B4((uint64_t)v97);
          *(void *)(a1 + 368) = v96;
          int v7 = v150;
        }
        uint64_t v11 = sub_181C3F8(a3, v96, (unsigned __int8 *)v7);
        goto LABEL_384;
      case 0x2Au:
        if (v8 != 82) {
          goto LABEL_375;
        }
        *(_DWORD *)(a1 + 44) |= 0x100u;
        v98 = *(void **)(a1 + 376);
        if (!v98)
        {
          uint64_t v99 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v99 = (void *)*v99;
          }
          v98 = sub_18359EC((uint64_t)v99);
          *(void *)(a1 + 376) = v98;
          int v7 = v150;
        }
        uint64_t v11 = (char *)sub_181C488(a3, (uint64_t)v98, (unsigned __int8 *)v7);
        goto LABEL_384;
      case 0x2Bu:
        if (v8 != 90) {
          goto LABEL_375;
        }
        *(_DWORD *)(a1 + 44) |= 0x200u;
        uint64_t v100 = *(void *)(a1 + 384);
        if (!v100)
        {
          v101 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            v101 = (void *)*v101;
          }
          uint64_t v100 = sub_1830908((uint64_t)v101);
          *(void *)(a1 + 384) = v100;
          int v7 = v150;
        }
        uint64_t v11 = (char *)sub_17ACE14(a3, v100, (unsigned __int8 *)v7);
        goto LABEL_384;
      case 0x2Cu:
        if (v8 != 98) {
          goto LABEL_375;
        }
        *(_DWORD *)(a1 + 44) |= 0x400u;
        uint64_t v102 = *(void *)(a1 + 392);
        if (!v102)
        {
          int v103 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            int v103 = (void *)*v103;
          }
          sub_18312F4((uint64_t)v103);
          uint64_t v102 = v104;
          *(void *)(a1 + 392) = v104;
          int v7 = v150;
        }
        uint64_t v11 = sub_181C518(a3, v102, (unsigned __int8 *)v7);
        goto LABEL_384;
      case 0x2Du:
        if (v8 != 106) {
          goto LABEL_375;
        }
        *(_DWORD *)(a1 + 44) |= 0x800u;
        uint64_t v105 = *(void *)(a1 + 400);
        if (!v105)
        {
          int v106 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            int v106 = (void *)*v106;
          }
          uint64_t v105 = sub_16213B0((uint64_t)v106);
          *(void *)(a1 + 400) = v105;
          int v7 = v150;
        }
        uint64_t v11 = sub_181C5A8(a3, v105, (unsigned __int8 *)v7);
        goto LABEL_384;
      case 0x2Eu:
        if (v8 != 114) {
          goto LABEL_375;
        }
        *(_DWORD *)(a1 + 44) |= 0x1000u;
        uint64_t v107 = *(void *)(a1 + 408);
        if (!v107)
        {
          v108 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            v108 = (void *)*v108;
          }
          sub_1831060((uint64_t)v108);
          uint64_t v107 = v109;
          *(void *)(a1 + 408) = v109;
          int v7 = v150;
        }
        uint64_t v11 = sub_181C638(a3, v107, (unsigned __int8 *)v7);
        goto LABEL_384;
      case 0x2Fu:
        if (v8 != 122) {
          goto LABEL_375;
        }
        *(_DWORD *)(a1 + 44) |= 0x2000u;
        uint64_t v110 = *(void *)(a1 + 416);
        if (!v110)
        {
          v111 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            v111 = (void *)*v111;
          }
          sub_1830DCC((uint64_t)v111);
          uint64_t v110 = v112;
          *(void *)(a1 + 416) = v112;
          int v7 = v150;
        }
        uint64_t v11 = sub_181C6C8(a3, v110, (unsigned __int8 *)v7);
        goto LABEL_384;
      case 0x30u:
        if (v8 != 130) {
          goto LABEL_375;
        }
        *(_DWORD *)(a1 + 44) |= 0x4000u;
        uint64_t v113 = *(void *)(a1 + 424);
        if (!v113)
        {
          v114 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            v114 = (void *)*v114;
          }
          uint64_t v113 = sub_1833528((uint64_t)v114);
          *(void *)(a1 + 424) = v113;
          int v7 = v150;
        }
        uint64_t v11 = (char *)sub_181C758(a3, v113, (unsigned __int8 *)v7);
        goto LABEL_384;
      case 0x31u:
        if (v8 != 138) {
          goto LABEL_375;
        }
        *(_DWORD *)(a1 + 44) |= 0x8000u;
        uint64_t v115 = *(void *)(a1 + 432);
        if (!v115)
        {
          int v116 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            int v116 = (void *)*v116;
          }
          uint64_t v115 = sub_1833630((uint64_t)v116);
          *(void *)(a1 + 432) = v115;
          int v7 = v150;
        }
        uint64_t v11 = sub_181C7E8(a3, v115, (unsigned __int8 *)v7);
        goto LABEL_384;
      case 0x32u:
        if (v8 != 146) {
          goto LABEL_375;
        }
        *(_DWORD *)(a1 + 44) |= 0x10000u;
        uint64_t v117 = *(void **)(a1 + 440);
        if (!v117)
        {
          int v118 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            int v118 = (void *)*v118;
          }
          uint64_t v117 = sub_183680C((uint64_t)v118);
          *(void *)(a1 + 440) = v117;
          int v7 = v150;
        }
        uint64_t v11 = sub_181C878(a3, (uint64_t)v117, (unsigned __int8 *)v7);
        goto LABEL_384;
      case 0x33u:
        if (v8 != 154) {
          goto LABEL_375;
        }
        *(_DWORD *)(a1 + 44) |= 0x20000u;
        uint64_t v119 = *(void *)(a1 + 448);
        if (!v119)
        {
          uint64_t v120 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v120 = (void *)*v120;
          }
          uint64_t v119 = sub_1831AF8((uint64_t)v120);
          *(void *)(a1 + 448) = v119;
          int v7 = v150;
        }
        uint64_t v11 = sub_181C908(a3, v119, (unsigned __int8 *)v7);
        goto LABEL_384;
      case 0x34u:
        if (v8 != 162) {
          goto LABEL_375;
        }
        *(_DWORD *)(a1 + 44) |= 0x40000u;
        uint64_t v121 = *(void *)(a1 + 456);
        if (!v121)
        {
          uint64_t v122 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v122 = (void *)*v122;
          }
          uint64_t v121 = sub_18314D4((uint64_t)v122);
          *(void *)(a1 + 456) = v121;
          int v7 = v150;
        }
        uint64_t v11 = sub_181C998(a3, v121, (unsigned __int8 *)v7);
        goto LABEL_384;
      case 0x35u:
        if (v8 != 170) {
          goto LABEL_375;
        }
        *(_DWORD *)(a1 + 44) |= 0x80000u;
        uint64_t v123 = *(void *)(a1 + 464);
        if (!v123)
        {
          uint64_t v124 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v124 = (void *)*v124;
          }
          sub_1831834((uint64_t)v124);
          uint64_t v123 = v125;
          *(void *)(a1 + 464) = v125;
          int v7 = v150;
        }
        uint64_t v11 = sub_181CA28(a3, v123, (unsigned __int8 *)v7);
        goto LABEL_384;
      case 0x36u:
        if (v8 != 178) {
          goto LABEL_375;
        }
        *(_DWORD *)(a1 + 44) |= 0x100000u;
        uint64_t v126 = *(void *)(a1 + 472);
        if (!v126)
        {
          uint64_t v127 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v127 = (void *)*v127;
          }
          sub_1833748((uint64_t)v127);
          uint64_t v126 = v128;
          *(void *)(a1 + 472) = v128;
          int v7 = v150;
        }
        uint64_t v11 = (char *)sub_181CAB8(a3, v126, (unsigned __int8 *)v7);
        goto LABEL_384;
      case 0x37u:
        if (v8 != 186) {
          goto LABEL_375;
        }
        *(_DWORD *)(a1 + 44) |= 0x200000u;
        uint64_t v129 = *(void *)(a1 + 480);
        if (!v129)
        {
          uint64_t v130 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v130 = (void *)*v130;
          }
          sub_1831DEC((uint64_t)v130);
          uint64_t v129 = v131;
          *(void *)(a1 + 480) = v131;
          int v7 = v150;
        }
        uint64_t v11 = (char *)sub_181CB48(a3, v129, (unsigned __int8 *)v7);
        goto LABEL_384;
      case 0x38u:
        if (v8 != 194) {
          goto LABEL_375;
        }
        *(_DWORD *)(a1 + 44) |= 0x400000u;
        uint64_t v132 = *(void *)(a1 + 488);
        if (!v132)
        {
          uint64_t v133 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v133 = (void *)*v133;
          }
          uint64_t v132 = sub_1833258((uint64_t)v133);
          *(void *)(a1 + 488) = v132;
          int v7 = v150;
        }
        uint64_t v11 = sub_181CBD8(a3, v132, (unsigned __int8 *)v7);
        goto LABEL_384;
      case 0x39u:
        if (v8 != 202) {
          goto LABEL_375;
        }
        *(_DWORD *)(a1 + 44) |= 0x800000u;
        uint64_t v134 = *(void *)(a1 + 496);
        if (!v134)
        {
          uint64_t v135 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v135 = (void *)*v135;
          }
          uint64_t v134 = sub_1836920((uint64_t)v135);
          *(void *)(a1 + 496) = v134;
          int v7 = v150;
        }
        uint64_t v11 = sub_181CC68(a3, v134, (unsigned __int8 *)v7);
        goto LABEL_384;
      case 0x3Au:
        if (v8 != 210) {
          goto LABEL_375;
        }
        *(_DWORD *)(a1 + 44) |= 0x1000000u;
        uint64_t v136 = *(void *)(a1 + 504);
        if (!v136)
        {
          unint64_t v137 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            unint64_t v137 = (void *)*v137;
          }
          uint64_t v136 = sub_1836A38((uint64_t)v137);
          *(void *)(a1 + 504) = v136;
          int v7 = v150;
        }
        uint64_t v11 = sub_181CCF8(a3, v136, (unsigned __int8 *)v7);
        goto LABEL_384;
      case 0x3Bu:
        if (v8 != 218) {
          goto LABEL_375;
        }
        *(_DWORD *)(a1 + 44) |= 0x2000000u;
        uint64_t v138 = *(void **)(a1 + 512);
        if (!v138)
        {
          uint64_t v139 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v139 = (void *)*v139;
          }
          uint64_t v138 = sub_1836B54((uint64_t)v139);
          *(void *)(a1 + 512) = v138;
          int v7 = v150;
        }
        uint64_t v11 = sub_181CD88(a3, (uint64_t)v138, (unsigned __int8 *)v7);
        goto LABEL_384;
      case 0x3Cu:
        if (v8 != 226) {
          goto LABEL_375;
        }
        *(_DWORD *)(a1 + 44) |= 0x4000000u;
        uint64_t v140 = *(void **)(a1 + 520);
        if (!v140)
        {
          uint64_t v141 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v141 = (void *)*v141;
          }
          uint64_t v140 = sub_1836494((uint64_t)v141);
          *(void *)(a1 + 520) = v140;
          int v7 = v150;
        }
        uint64_t v11 = sub_181CE18(a3, (uint64_t)v140, (unsigned __int8 *)v7);
        goto LABEL_384;
      case 0x3Du:
        if (v8 != 234) {
          goto LABEL_375;
        }
        *(_DWORD *)(a1 + 44) |= 0x8000000u;
        uint64_t v142 = *(void *)(a1 + 528);
        if (!v142)
        {
          BOOL v143 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            BOOL v143 = (void *)*v143;
          }
          uint64_t v142 = sub_1833184((uint64_t)v143);
          *(void *)(a1 + 528) = v142;
          int v7 = v150;
        }
        uint64_t v11 = sub_181CEA8(a3, v142, (unsigned __int8 *)v7);
        goto LABEL_384;
      case 0x3Eu:
        if (v8 != 242) {
          goto LABEL_375;
        }
        *(_DWORD *)(a1 + 44) |= 0x10000000u;
        v144 = *(void **)(a1 + 536);
        if (!v144)
        {
          v145 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            v145 = (void *)*v145;
          }
          v144 = sub_1836C44((uint64_t)v145);
          *(void *)(a1 + 536) = v144;
          int v7 = v150;
        }
        uint64_t v11 = (char *)sub_181CF38(a3, (uint64_t)v144, (unsigned __int8 *)v7);
        goto LABEL_384;
      default:
LABEL_375:
        if (v8) {
          BOOL v146 = (v8 & 7) == 4;
        }
        else {
          BOOL v146 = 1;
        }
        if (!v146)
        {
          if (v8 - 8000 > 0x18F)
          {
            if (*v6)
            {
              v147 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              unsigned int v149 = v8;
              uint64_t v148 = sub_188DBD8((uint64_t *)(a1 + 8));
              unsigned int v8 = v149;
              int v7 = v150;
              v147 = (std::string *)v148;
            }
            uint64_t v11 = (char *)sub_1885AC0(v8, v147, v7, a3);
          }
          else
          {
            uint64_t v11 = (char *)sub_18859DC((uint64_t **)(a1 + 16), v8, v7, (uint64_t)&off_254C5C8, (uint64_t *)(a1 + 8), a3);
          }
LABEL_384:
          int v150 = v11;
          if (!v11) {
            return 0;
          }
          if (sub_11947B8((uint64_t)a3, &v150, a3[11].i32[1])) {
            return v150;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return v150;
    }
  }
}

uint64_t sub_181AE98(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = (uint64_t)sub_1795930(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_181AF28(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17D0880(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_181AFB8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17CFCC8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_181B048(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17D325C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_181B0D8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17D44CC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_181B168(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17DE524(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_181B1F8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17D77E8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_181B288(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17E563C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_181B318(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17E7F6C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_181B3A8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_18001B8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_181B438(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17C5D58(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_181B4C8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17CBD64(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_181B558(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17C1FD4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_181B5E8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17CF1CC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_181B678(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17CD134(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_181B708(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17DC4AC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_181B798(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17EA404(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_181B828(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17D201C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_181B8B8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17C3C10(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_181B948(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17E2DF4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_181B9D8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17EB564(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_181BA68(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17D67D4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_181BAF8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17EC6C0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_181BB88(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_18025B4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_181BC18(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1803378(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_181BCA8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17ED598(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_181BD38(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17EE3E8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_181BDC8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1803F74(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_181BE58(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17EF2B0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_181BEE8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1809C00(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_181BF78(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_180A888(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_181C008(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_180B1AC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_181C098(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_180C31C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_181C128(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_180CEC0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_181C1B8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_180F894(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_181C248(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_180FF70(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_181C2D8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_132E7EC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_181C368(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_18107F8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_181C3F8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_18047E4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_181C488(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1807D9C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_181C518(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17AC8F4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_181C5A8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_161DF50(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_181C638(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17A9BD4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_181C6C8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17A6C48(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_181C758(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17D900C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_181C7E8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17D9D3C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_181C878(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_18138F4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_181C908(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17B64DC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_181C998(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17AF428(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_181CA28(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17B28EC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_181CAB8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17DA9BC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_181CB48(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17B9240(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_181CBD8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17D5BC0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_181CC68(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_181477C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_181CCF8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1815420(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_181CD88(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_18160E0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_181CE18(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1810FA0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_181CEA8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17D50C0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_181CF38(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1816E58(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_181CFC8(uint64_t a1, char *a2, unint64_t *a3)
{
  int v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if (v6)
  {
    if (*a3 <= (unint64_t)a2) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    uint64_t v7 = *(void *)(a1 + 56);
    *int v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 48);
    v4[1] = v8;
    if (v8 > 0x7F) {
      uint64_t v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      uint64_t v9 = v4 + 2;
    }
    int v4 = sub_1797580(v7, v9, a3);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_46;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v10 = *(void *)(a1 + 64);
  *int v4 = 18;
  unsigned int v11 = *(_DWORD *)(v10 + 44);
  v4[1] = v11;
  if (v11 > 0x7F) {
    uint64_t v12 = sub_188A9CC(v11, v4 + 1);
  }
  else {
    uint64_t v12 = v4 + 2;
  }
  int v4 = sub_17D0C80(v10, v12, a3);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_52;
  }
LABEL_46:
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v13 = *(void *)(a1 + 72);
  *int v4 = 26;
  unsigned int v14 = *(_DWORD *)(v13 + 20);
  v4[1] = v14;
  if (v14 > 0x7F) {
    uint64_t v15 = sub_188A9CC(v14, v4 + 1);
  }
  else {
    uint64_t v15 = v4 + 2;
  }
  int v4 = sub_17CFE20(v13, v15, a3);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_58;
  }
LABEL_52:
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v16 = *(void *)(a1 + 80);
  *int v4 = 34;
  unsigned int v17 = *(_DWORD *)(v16 + 44);
  v4[1] = v17;
  if (v17 > 0x7F) {
    unint64_t v18 = sub_188A9CC(v17, v4 + 1);
  }
  else {
    unint64_t v18 = v4 + 2;
  }
  int v4 = sub_17D3638(v16, v18, a3);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_64;
  }
LABEL_58:
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v19 = *(void *)(a1 + 88);
  *int v4 = 42;
  unsigned int v20 = *(_DWORD *)(v19 + 44);
  v4[1] = v20;
  if (v20 > 0x7F) {
    uint64_t v21 = sub_188A9CC(v20, v4 + 1);
  }
  else {
    uint64_t v21 = v4 + 2;
  }
  int v4 = sub_17D486C(v19, v21, a3);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_70;
  }
LABEL_64:
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v22 = *(void *)(a1 + 96);
  *int v4 = 50;
  unsigned int v23 = *(_DWORD *)(v22 + 20);
  v4[1] = v23;
  if (v23 > 0x7F) {
    uint64_t v24 = sub_188A9CC(v23, v4 + 1);
  }
  else {
    uint64_t v24 = v4 + 2;
  }
  int v4 = sub_17DEF60(v22, v24, a3);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_76;
  }
LABEL_70:
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v25 = *(void *)(a1 + 104);
  *int v4 = 58;
  unsigned int v26 = *(_DWORD *)(v25 + 20);
  v4[1] = v26;
  if (v26 > 0x7F) {
    int v27 = sub_188A9CC(v26, v4 + 1);
  }
  else {
    int v27 = v4 + 2;
  }
  int v4 = sub_17D7E24(v25, (unint64_t)v27, a3);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_82;
  }
LABEL_76:
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v28 = *(void *)(a1 + 112);
  *int v4 = 66;
  unsigned int v29 = *(_DWORD *)(v28 + 20);
  v4[1] = v29;
  if (v29 > 0x7F) {
    uint64_t v30 = sub_188A9CC(v29, v4 + 1);
  }
  else {
    uint64_t v30 = v4 + 2;
  }
  int v4 = sub_17E5D64(v28, (unint64_t)v30, a3);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_88;
  }
LABEL_82:
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v31 = *(void *)(a1 + 120);
  *int v4 = 74;
  unsigned int v32 = *(_DWORD *)(v31 + 20);
  v4[1] = v32;
  if (v32 > 0x7F) {
    uint64_t v33 = sub_188A9CC(v32, v4 + 1);
  }
  else {
    uint64_t v33 = v4 + 2;
  }
  int v4 = sub_17E84E4(v31, (unint64_t)v33, a3);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_94;
  }
LABEL_88:
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v34 = *(void *)(a1 + 128);
  *int v4 = 82;
  unsigned int v35 = *(_DWORD *)(v34 + 44);
  v4[1] = v35;
  if (v35 > 0x7F) {
    uint64_t v36 = sub_188A9CC(v35, v4 + 1);
  }
  else {
    uint64_t v36 = v4 + 2;
  }
  int v4 = sub_1801148(v34, v36, a3);
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_100;
  }
LABEL_94:
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v37 = *(void *)(a1 + 136);
  *int v4 = 90;
  unsigned int v38 = *(_DWORD *)(v37 + 20);
  v4[1] = v38;
  if (v38 > 0x7F) {
    uint64_t v39 = sub_188A9CC(v38, v4 + 1);
  }
  else {
    uint64_t v39 = v4 + 2;
  }
  int v4 = sub_17A0D48(v37, (unint64_t)v39, a3);
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_106;
  }
LABEL_100:
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v40 = *(void *)(a1 + 144);
  *int v4 = 98;
  unsigned int v41 = *(_DWORD *)(v40 + 20);
  v4[1] = v41;
  if (v41 > 0x7F) {
    uint64_t v42 = sub_188A9CC(v41, v4 + 1);
  }
  else {
    uint64_t v42 = v4 + 2;
  }
  int v4 = sub_17C6DF8(v40, (unint64_t)v42, a3);
  if ((v6 & 0x1000) == 0)
  {
LABEL_14:
    if ((v6 & 0x2000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_112;
  }
LABEL_106:
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v43 = *(void *)(a1 + 152);
  *int v4 = 106;
  unsigned int v44 = *(_DWORD *)(v43 + 20);
  v4[1] = v44;
  if (v44 > 0x7F) {
    uint64_t v45 = sub_188A9CC(v44, v4 + 1);
  }
  else {
    uint64_t v45 = v4 + 2;
  }
  int v4 = sub_17CC060(v43, (unint64_t)v45, a3);
  if ((v6 & 0x2000) == 0)
  {
LABEL_15:
    if ((v6 & 0x4000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_118;
  }
LABEL_112:
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v46 = *(void *)(a1 + 160);
  *int v4 = 114;
  unsigned int v47 = *(_DWORD *)(v46 + 20);
  v4[1] = v47;
  if (v47 > 0x7F) {
    uint64_t v48 = sub_188A9CC(v47, v4 + 1);
  }
  else {
    uint64_t v48 = v4 + 2;
  }
  int v4 = sub_17C2370(v46, (unint64_t)v48, a3);
  if ((v6 & 0x4000) == 0)
  {
LABEL_16:
    if ((v6 & 0x8000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_124;
  }
LABEL_118:
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v49 = *(void *)(a1 + 168);
  *int v4 = 122;
  unsigned int v50 = *(_DWORD *)(v49 + 20);
  v4[1] = v50;
  if (v50 > 0x7F) {
    uint64_t v51 = sub_188A9CC(v50, v4 + 1);
  }
  else {
    uint64_t v51 = v4 + 2;
  }
  int v4 = sub_17CF410(v49, (unint64_t)v51, a3);
  if ((v6 & 0x8000) == 0)
  {
LABEL_17:
    if ((v6 & 0x10000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_130;
  }
LABEL_124:
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v52 = *(void *)(a1 + 176);
  *(_WORD *)int v4 = 386;
  unsigned int v53 = *(_DWORD *)(v52 + 20);
  v4[2] = v53;
  if (v53 > 0x7F) {
    uint64_t v54 = sub_188A9CC(v53, v4 + 2);
  }
  else {
    uint64_t v54 = v4 + 3;
  }
  int v4 = sub_17CD44C(v52, (unint64_t)v54, a3);
  if ((v6 & 0x10000) == 0)
  {
LABEL_18:
    if ((v6 & 0x20000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_136;
  }
LABEL_130:
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v55 = *(void *)(a1 + 184);
  *(_WORD *)int v4 = 394;
  unsigned int v56 = *(_DWORD *)(v55 + 20);
  v4[2] = v56;
  if (v56 > 0x7F) {
    BOOL v57 = sub_188A9CC(v56, v4 + 2);
  }
  else {
    BOOL v57 = v4 + 3;
  }
  int v4 = sub_17DCAA0(v55, (unint64_t)v57, a3);
  if ((v6 & 0x20000) == 0)
  {
LABEL_19:
    if ((v6 & 0x40000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_142;
  }
LABEL_136:
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v58 = *(void *)(a1 + 192);
  *(_WORD *)int v4 = 402;
  unsigned int v59 = *(_DWORD *)(v58 + 20);
  v4[2] = v59;
  if (v59 > 0x7F) {
    uint64_t v60 = sub_188A9CC(v59, v4 + 2);
  }
  else {
    uint64_t v60 = v4 + 3;
  }
  int v4 = sub_17EA798(v58, (unint64_t)v60, a3);
  if ((v6 & 0x40000) == 0)
  {
LABEL_20:
    if ((v6 & 0x80000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_148;
  }
LABEL_142:
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v61 = *(void *)(a1 + 200);
  *(_WORD *)int v4 = 410;
  unsigned int v62 = *(_DWORD *)(v61 + 44);
  v4[2] = v62;
  if (v62 > 0x7F) {
    uint64_t v63 = sub_188A9CC(v62, v4 + 2);
  }
  else {
    uint64_t v63 = v4 + 3;
  }
  int v4 = sub_17D228C(v61, v63, a3);
  if ((v6 & 0x80000) == 0)
  {
LABEL_21:
    if ((v6 & 0x100000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_154;
  }
LABEL_148:
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v64 = *(void *)(a1 + 208);
  *(_WORD *)int v4 = 418;
  unsigned int v65 = *(_DWORD *)(v64 + 20);
  v4[2] = v65;
  if (v65 > 0x7F) {
    uint64_t v66 = sub_188A9CC(v65, v4 + 2);
  }
  else {
    uint64_t v66 = v4 + 3;
  }
  int v4 = sub_17C3EE8(v64, (unint64_t)v66, a3);
  if ((v6 & 0x100000) == 0)
  {
LABEL_22:
    if ((v6 & 0x200000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_160;
  }
LABEL_154:
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v67 = *(void *)(a1 + 216);
  *(_WORD *)int v4 = 426;
  unsigned int v68 = *(_DWORD *)(v67 + 20);
  v4[2] = v68;
  if (v68 > 0x7F) {
    int v69 = sub_188A9CC(v68, v4 + 2);
  }
  else {
    int v69 = v4 + 3;
  }
  int v4 = sub_17E30F8(v67, (unint64_t)v69, a3);
  if ((v6 & 0x200000) == 0)
  {
LABEL_23:
    if ((v6 & 0x400000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_166;
  }
LABEL_160:
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v70 = *(void *)(a1 + 224);
  *(_WORD *)int v4 = 434;
  unsigned int v71 = *(_DWORD *)(v70 + 44);
  v4[2] = v71;
  if (v71 > 0x7F) {
    uint64_t v72 = sub_188A9CC(v71, v4 + 2);
  }
  else {
    uint64_t v72 = v4 + 3;
  }
  int v4 = sub_17EB93C(v70, v72, a3);
  if ((v6 & 0x400000) == 0)
  {
LABEL_24:
    if ((v6 & 0x800000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_172;
  }
LABEL_166:
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v73 = *(void *)(a1 + 232);
  *(_WORD *)int v4 = 442;
  unsigned int v74 = *(_DWORD *)(v73 + 44);
  v4[2] = v74;
  if (v74 > 0x7F) {
    uint64_t v75 = sub_188A9CC(v74, v4 + 2);
  }
  else {
    uint64_t v75 = v4 + 3;
  }
  int v4 = sub_17D6AA8(v73, v75, a3);
  if ((v6 & 0x800000) == 0)
  {
LABEL_25:
    if ((v6 & 0x1000000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_178;
  }
LABEL_172:
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v76 = *(void *)(a1 + 240);
  *(_WORD *)int v4 = 450;
  unsigned int v77 = *(_DWORD *)(v76 + 20);
  v4[2] = v77;
  if (v77 > 0x7F) {
    uint64_t v78 = sub_188A9CC(v77, v4 + 2);
  }
  else {
    uint64_t v78 = v4 + 3;
  }
  int v4 = sub_17EC9CC(v76, (unint64_t)v78, a3);
  if ((v6 & 0x1000000) == 0)
  {
LABEL_26:
    if ((v6 & 0x2000000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_184;
  }
LABEL_178:
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v79 = *(void *)(a1 + 248);
  *(_WORD *)int v4 = 458;
  unsigned int v80 = *(_DWORD *)(v79 + 56);
  v4[2] = v80;
  if (v80 > 0x7F) {
    int v81 = sub_188A9CC(v80, v4 + 2);
  }
  else {
    int v81 = v4 + 3;
  }
  int v4 = sub_18028AC(v79, v81, a3);
  if ((v6 & 0x2000000) == 0)
  {
LABEL_27:
    if ((v6 & 0x4000000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_190;
  }
LABEL_184:
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v82 = *(void *)(a1 + 256);
  *(_WORD *)int v4 = 466;
  unsigned int v83 = *(_DWORD *)(v82 + 64);
  v4[2] = v83;
  if (v83 > 0x7F) {
    uint64_t v84 = sub_188A9CC(v83, v4 + 2);
  }
  else {
    uint64_t v84 = v4 + 3;
  }
  int v4 = sub_18035C0(v82, v84, a3);
  if ((v6 & 0x4000000) == 0)
  {
LABEL_28:
    if ((v6 & 0x8000000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_196;
  }
LABEL_190:
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v85 = *(void *)(a1 + 264);
  *(_WORD *)int v4 = 482;
  unsigned int v86 = *(_DWORD *)(v85 + 88);
  v4[2] = v86;
  if (v86 > 0x7F) {
    int v87 = sub_188A9CC(v86, v4 + 2);
  }
  else {
    int v87 = v4 + 3;
  }
  int v4 = sub_17ED880(v85, v87, a3);
  if ((v6 & 0x8000000) == 0)
  {
LABEL_29:
    if ((v6 & 0x10000000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_202;
  }
LABEL_196:
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v88 = *(void *)(a1 + 272);
  *(_WORD *)int v4 = 490;
  unsigned int v89 = *(_DWORD *)(v88 + 20);
  v4[2] = v89;
  if (v89 > 0x7F) {
    unint64_t v90 = sub_188A9CC(v89, v4 + 2);
  }
  else {
    unint64_t v90 = v4 + 3;
  }
  int v4 = sub_17EE610(v88, v90, a3);
  if ((v6 & 0x10000000) == 0)
  {
LABEL_30:
    if ((v6 & 0x20000000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_208;
  }
LABEL_202:
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v91 = *(void *)(a1 + 280);
  *(_WORD *)int v4 = 498;
  unsigned int v92 = *(_DWORD *)(v91 + 20);
  v4[2] = v92;
  if (v92 > 0x7F) {
    uint64_t v93 = sub_188A9CC(v92, v4 + 2);
  }
  else {
    uint64_t v93 = v4 + 3;
  }
  int v4 = sub_18040CC(v91, v93, a3);
  if ((v6 & 0x20000000) == 0)
  {
LABEL_31:
    if ((v6 & 0x40000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_214;
  }
LABEL_208:
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v94 = *(void *)(a1 + 288);
  *(_WORD *)int v4 = 506;
  unsigned int v95 = *(_DWORD *)(v94 + 40);
  v4[2] = v95;
  if (v95 > 0x7F) {
    uint64_t v96 = sub_188A9CC(v95, v4 + 2);
  }
  else {
    uint64_t v96 = v4 + 3;
  }
  int v4 = sub_17EF4E0(v94, v96, a3);
  if ((v6 & 0x40000000) == 0)
  {
LABEL_32:
    if ((v6 & 0x80000000) == 0) {
      goto LABEL_226;
    }
    goto LABEL_220;
  }
LABEL_214:
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v97 = *(void *)(a1 + 296);
  *(_WORD *)int v4 = 642;
  unsigned int v98 = *(_DWORD *)(v97 + 20);
  v4[2] = v98;
  if (v98 > 0x7F) {
    uint64_t v99 = sub_188A9CC(v98, v4 + 2);
  }
  else {
    uint64_t v99 = v4 + 3;
  }
  int v4 = sub_1809EB8(v97, v99, a3);
  if (v6 < 0)
  {
LABEL_220:
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v100 = *(void *)(a1 + 304);
    *(_WORD *)int v4 = 650;
    unsigned int v101 = *(_DWORD *)(v100 + 20);
    v4[2] = v101;
    if (v101 > 0x7F) {
      uint64_t v102 = sub_188A9CC(v101, v4 + 2);
    }
    else {
      uint64_t v102 = v4 + 3;
    }
    int v4 = sub_180A9E0(v100, (unint64_t)v102, a3);
  }
LABEL_226:
  int v103 = *(_DWORD *)(a1 + 44);
  if (v103)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v104 = *(void *)(a1 + 312);
    *(_WORD *)int v4 = 658;
    unsigned int v105 = *(_DWORD *)(v104 + 20);
    v4[2] = v105;
    if (v105 > 0x7F) {
      int v106 = sub_188A9CC(v105, v4 + 2);
    }
    else {
      int v106 = v4 + 3;
    }
    int v4 = sub_180B304(v104, v106, a3);
    if ((v103 & 2) == 0)
    {
LABEL_228:
      if ((v103 & 4) == 0) {
        goto LABEL_229;
      }
      goto LABEL_268;
    }
  }
  else if ((v103 & 2) == 0)
  {
    goto LABEL_228;
  }
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v107 = *(void *)(a1 + 320);
  *(_WORD *)int v4 = 666;
  unsigned int v108 = *(_DWORD *)(v107 + 20);
  v4[2] = v108;
  if (v108 > 0x7F) {
    uint64_t v109 = sub_188A9CC(v108, v4 + 2);
  }
  else {
    uint64_t v109 = v4 + 3;
  }
  int v4 = sub_180C500(v107, (unint64_t)v109, a3);
  if ((v103 & 4) == 0)
  {
LABEL_229:
    if ((v103 & 8) == 0) {
      goto LABEL_230;
    }
    goto LABEL_274;
  }
LABEL_268:
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v110 = *(void *)(a1 + 328);
  *(_WORD *)int v4 = 674;
  unsigned int v111 = *(_DWORD *)(v110 + 64);
  v4[2] = v111;
  if (v111 > 0x7F) {
    uint64_t v112 = sub_188A9CC(v111, v4 + 2);
  }
  else {
    uint64_t v112 = v4 + 3;
  }
  int v4 = sub_180D228(v110, v112, a3);
  if ((v103 & 8) == 0)
  {
LABEL_230:
    if ((v103 & 0x10) == 0) {
      goto LABEL_231;
    }
    goto LABEL_280;
  }
LABEL_274:
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v113 = *(void *)(a1 + 336);
  *(_WORD *)int v4 = 682;
  unsigned int v114 = *(_DWORD *)(v113 + 32);
  v4[2] = v114;
  if (v114 > 0x7F) {
    uint64_t v115 = sub_188A9CC(v114, v4 + 2);
  }
  else {
    uint64_t v115 = v4 + 3;
  }
  int v4 = sub_180FA94(v113, v115, a3);
  if ((v103 & 0x10) == 0)
  {
LABEL_231:
    if ((v103 & 0x20) == 0) {
      goto LABEL_232;
    }
    goto LABEL_286;
  }
LABEL_280:
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v116 = *(void *)(a1 + 344);
  *(_WORD *)int v4 = 690;
  unsigned int v117 = *(_DWORD *)(v116 + 20);
  v4[2] = v117;
  if (v117 > 0x7F) {
    int v118 = sub_188A9CC(v117, v4 + 2);
  }
  else {
    int v118 = v4 + 3;
  }
  int v4 = sub_1810178(v116, (unint64_t)v118, a3);
  if ((v103 & 0x20) == 0)
  {
LABEL_232:
    if ((v103 & 0x40) == 0) {
      goto LABEL_233;
    }
    goto LABEL_292;
  }
LABEL_286:
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v119 = *(void *)(a1 + 352);
  *(_WORD *)int v4 = 698;
  unsigned int v120 = *(_DWORD *)(v119 + 44);
  v4[2] = v120;
  if (v120 > 0x7F) {
    uint64_t v121 = sub_188A9CC(v120, v4 + 2);
  }
  else {
    uint64_t v121 = v4 + 3;
  }
  int v4 = sub_132EBD8(v119, v121, a3);
  if ((v103 & 0x40) == 0)
  {
LABEL_233:
    if ((v103 & 0x80) == 0) {
      goto LABEL_234;
    }
    goto LABEL_298;
  }
LABEL_292:
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v122 = *(void *)(a1 + 360);
  *(_WORD *)int v4 = 706;
  unsigned int v123 = *(_DWORD *)(v122 + 40);
  v4[2] = v123;
  if (v123 > 0x7F) {
    uint64_t v124 = sub_188A9CC(v123, v4 + 2);
  }
  else {
    uint64_t v124 = v4 + 3;
  }
  int v4 = sub_1810A28(v122, v124, a3);
  if ((v103 & 0x80) == 0)
  {
LABEL_234:
    if ((v103 & 0x100) == 0) {
      goto LABEL_235;
    }
    goto LABEL_304;
  }
LABEL_298:
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v125 = *(void *)(a1 + 368);
  *(_WORD *)int v4 = 714;
  unsigned int v126 = *(_DWORD *)(v125 + 40);
  v4[2] = v126;
  if (v126 > 0x7F) {
    uint64_t v127 = sub_188A9CC(v126, v4 + 2);
  }
  else {
    uint64_t v127 = v4 + 3;
  }
  int v4 = sub_1804A14(v125, v127, a3);
  if ((v103 & 0x100) == 0)
  {
LABEL_235:
    if ((v103 & 0x200) == 0) {
      goto LABEL_236;
    }
    goto LABEL_310;
  }
LABEL_304:
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v128 = *(void *)(a1 + 376);
  *(_WORD *)int v4 = 722;
  unsigned int v129 = *(_DWORD *)(v128 + 20);
  v4[2] = v129;
  if (v129 > 0x7F) {
    uint64_t v130 = sub_188A9CC(v129, v4 + 2);
  }
  else {
    uint64_t v130 = v4 + 3;
  }
  int v4 = sub_1807F78(v128, v130, a3);
  if ((v103 & 0x200) == 0)
  {
LABEL_236:
    if ((v103 & 0x400) == 0) {
      goto LABEL_237;
    }
    goto LABEL_316;
  }
LABEL_310:
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v131 = *(void *)(a1 + 384);
  *(_WORD *)int v4 = 730;
  unsigned int v132 = *(_DWORD *)(v131 + 20);
  v4[2] = v132;
  if (v132 > 0x7F) {
    uint64_t v133 = sub_188A9CC(v132, v4 + 2);
  }
  else {
    uint64_t v133 = v4 + 3;
  }
  int v4 = sub_17A2A00(v131, (unint64_t)v133, a3);
  if ((v103 & 0x400) == 0)
  {
LABEL_237:
    if ((v103 & 0x800) == 0) {
      goto LABEL_238;
    }
    goto LABEL_322;
  }
LABEL_316:
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v134 = *(void *)(a1 + 392);
  *(_WORD *)int v4 = 738;
  unsigned int v135 = *(_DWORD *)(v134 + 20);
  v4[2] = v135;
  if (v135 > 0x7F) {
    uint64_t v136 = sub_188A9CC(v135, v4 + 2);
  }
  else {
    uint64_t v136 = v4 + 3;
  }
  int v4 = sub_17ACFC4(v134, v136, a3);
  if ((v103 & 0x800) == 0)
  {
LABEL_238:
    if ((v103 & 0x1000) == 0) {
      goto LABEL_239;
    }
    goto LABEL_328;
  }
LABEL_322:
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v137 = *(void *)(a1 + 400);
  *(_WORD *)int v4 = 746;
  unsigned int v138 = *(_DWORD *)(v137 + 40);
  v4[2] = v138;
  if (v138 > 0x7F) {
    uint64_t v139 = sub_188A9CC(v138, v4 + 2);
  }
  else {
    uint64_t v139 = v4 + 3;
  }
  int v4 = sub_161E180(v137, v139, a3);
  if ((v103 & 0x1000) == 0)
  {
LABEL_239:
    if ((v103 & 0x2000) == 0) {
      goto LABEL_240;
    }
    goto LABEL_334;
  }
LABEL_328:
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v140 = *(void *)(a1 + 408);
  *(_WORD *)int v4 = 754;
  unsigned int v141 = *(_DWORD *)(v140 + 20);
  v4[2] = v141;
  if (v141 > 0x7F) {
    uint64_t v142 = sub_188A9CC(v141, v4 + 2);
  }
  else {
    uint64_t v142 = v4 + 3;
  }
  int v4 = sub_17A9F18(v140, (unint64_t)v142, a3);
  if ((v103 & 0x2000) == 0)
  {
LABEL_240:
    if ((v103 & 0x4000) == 0) {
      goto LABEL_241;
    }
    goto LABEL_340;
  }
LABEL_334:
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v143 = *(void *)(a1 + 416);
  *(_WORD *)int v4 = 762;
  unsigned int v144 = *(_DWORD *)(v143 + 20);
  v4[2] = v144;
  if (v144 > 0x7F) {
    v145 = sub_188A9CC(v144, v4 + 2);
  }
  else {
    v145 = v4 + 3;
  }
  int v4 = sub_17A701C(v143, (unint64_t)v145, a3);
  if ((v103 & 0x4000) == 0)
  {
LABEL_241:
    if ((v103 & 0x8000) == 0) {
      goto LABEL_242;
    }
    goto LABEL_346;
  }
LABEL_340:
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v146 = *(void *)(a1 + 424);
  *(_WORD *)int v4 = 898;
  unsigned int v147 = *(_DWORD *)(v146 + 20);
  v4[2] = v147;
  if (v147 > 0x7F) {
    uint64_t v148 = sub_188A9CC(v147, v4 + 2);
  }
  else {
    uint64_t v148 = v4 + 3;
  }
  int v4 = sub_17D9378(v146, v148, a3);
  if ((v103 & 0x8000) == 0)
  {
LABEL_242:
    if ((v103 & 0x10000) == 0) {
      goto LABEL_243;
    }
    goto LABEL_352;
  }
LABEL_346:
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v149 = *(void *)(a1 + 432);
  *(_WORD *)int v4 = 906;
  unsigned int v150 = *(_DWORD *)(v149 + 40);
  v4[2] = v150;
  if (v150 > 0x7F) {
    v151 = sub_188A9CC(v150, v4 + 2);
  }
  else {
    v151 = v4 + 3;
  }
  int v4 = sub_17D9EDC(v149, v151, a3);
  if ((v103 & 0x10000) == 0)
  {
LABEL_243:
    if ((v103 & 0x20000) == 0) {
      goto LABEL_244;
    }
    goto LABEL_358;
  }
LABEL_352:
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v152 = *(void *)(a1 + 440);
  *(_WORD *)int v4 = 914;
  unsigned int v153 = *(_DWORD *)(v152 + 20);
  v4[2] = v153;
  if (v153 > 0x7F) {
    v154 = sub_188A9CC(v153, v4 + 2);
  }
  else {
    v154 = v4 + 3;
  }
  int v4 = sub_1813B8C(v152, v154, a3);
  if ((v103 & 0x20000) == 0)
  {
LABEL_244:
    if ((v103 & 0x40000) == 0) {
      goto LABEL_245;
    }
    goto LABEL_364;
  }
LABEL_358:
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v155 = *(void *)(a1 + 448);
  *(_WORD *)int v4 = 922;
  unsigned int v156 = *(_DWORD *)(v155 + 20);
  v4[2] = v156;
  if (v156 > 0x7F) {
    v157 = sub_188A9CC(v156, v4 + 2);
  }
  else {
    v157 = v4 + 3;
  }
  int v4 = sub_17B66D0(v155, (unint64_t)v157, a3);
  if ((v103 & 0x40000) == 0)
  {
LABEL_245:
    if ((v103 & 0x80000) == 0) {
      goto LABEL_246;
    }
    goto LABEL_370;
  }
LABEL_364:
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v158 = *(void *)(a1 + 456);
  *(_WORD *)int v4 = 930;
  unsigned int v159 = *(_DWORD *)(v158 + 20);
  v4[2] = v159;
  if (v159 > 0x7F) {
    v160 = sub_188A9CC(v159, v4 + 2);
  }
  else {
    v160 = v4 + 3;
  }
  int v4 = sub_17AF60C(v158, (unint64_t)v160, a3);
  if ((v103 & 0x80000) == 0)
  {
LABEL_246:
    if ((v103 & 0x100000) == 0) {
      goto LABEL_247;
    }
    goto LABEL_376;
  }
LABEL_370:
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v161 = *(void *)(a1 + 464);
  *(_WORD *)int v4 = 938;
  unsigned int v162 = *(_DWORD *)(v161 + 20);
  v4[2] = v162;
  if (v162 > 0x7F) {
    v163 = sub_188A9CC(v162, v4 + 2);
  }
  else {
    v163 = v4 + 3;
  }
  int v4 = sub_17B2DF0(v161, v163, a3);
  if ((v103 & 0x100000) == 0)
  {
LABEL_247:
    if ((v103 & 0x200000) == 0) {
      goto LABEL_248;
    }
    goto LABEL_382;
  }
LABEL_376:
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v164 = *(void *)(a1 + 472);
  *(_WORD *)int v4 = 946;
  unsigned int v165 = *(_DWORD *)(v164 + 20);
  v4[2] = v165;
  if (v165 > 0x7F) {
    v166 = sub_188A9CC(v165, v4 + 2);
  }
  else {
    v166 = v4 + 3;
  }
  int v4 = sub_17DAF7C(v164, (unint64_t)v166, a3);
  if ((v103 & 0x200000) == 0)
  {
LABEL_248:
    if ((v103 & 0x400000) == 0) {
      goto LABEL_249;
    }
    goto LABEL_388;
  }
LABEL_382:
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v167 = *(void *)(a1 + 480);
  *(_WORD *)int v4 = 954;
  unsigned int v168 = *(_DWORD *)(v167 + 20);
  v4[2] = v168;
  if (v168 > 0x7F) {
    v169 = sub_188A9CC(v168, v4 + 2);
  }
  else {
    v169 = v4 + 3;
  }
  int v4 = sub_17B9730(v167, (unint64_t)v169, a3);
  if ((v103 & 0x400000) == 0)
  {
LABEL_249:
    if ((v103 & 0x800000) == 0) {
      goto LABEL_250;
    }
    goto LABEL_394;
  }
LABEL_388:
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v170 = *(void *)(a1 + 488);
  *(_WORD *)int v4 = 962;
  unsigned int v171 = *(_DWORD *)(v170 + 64);
  v4[2] = v171;
  if (v171 > 0x7F) {
    v172 = sub_188A9CC(v171, v4 + 2);
  }
  else {
    v172 = v4 + 3;
  }
  int v4 = sub_17D5DA0(v170, v172, a3);
  if ((v103 & 0x800000) == 0)
  {
LABEL_250:
    if ((v103 & 0x1000000) == 0) {
      goto LABEL_251;
    }
    goto LABEL_400;
  }
LABEL_394:
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v173 = *(void *)(a1 + 496);
  *(_WORD *)int v4 = 970;
  unsigned int v174 = *(_DWORD *)(v173 + 40);
  v4[2] = v174;
  if (v174 > 0x7F) {
    v175 = sub_188A9CC(v174, v4 + 2);
  }
  else {
    v175 = v4 + 3;
  }
  int v4 = sub_18149AC(v173, v175, a3);
  if ((v103 & 0x1000000) == 0)
  {
LABEL_251:
    if ((v103 & 0x2000000) == 0) {
      goto LABEL_252;
    }
    goto LABEL_406;
  }
LABEL_400:
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v176 = *(void *)(a1 + 504);
  *(_WORD *)int v4 = 978;
  unsigned int v177 = *(_DWORD *)(v176 + 20);
  v4[2] = v177;
  if (v177 > 0x7F) {
    v178 = sub_188A9CC(v177, v4 + 2);
  }
  else {
    v178 = v4 + 3;
  }
  int v4 = sub_18156AC(v176, (unint64_t)v178, a3);
  if ((v103 & 0x2000000) == 0)
  {
LABEL_252:
    if ((v103 & 0x4000000) == 0) {
      goto LABEL_253;
    }
    goto LABEL_412;
  }
LABEL_406:
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v179 = *(void *)(a1 + 512);
  *(_WORD *)int v4 = 986;
  unsigned int v180 = *(_DWORD *)(v179 + 20);
  v4[2] = v180;
  if (v180 > 0x7F) {
    v181 = sub_188A9CC(v180, v4 + 2);
  }
  else {
    v181 = v4 + 3;
  }
  int v4 = sub_1816238(v179, (unint64_t)v181, a3);
  if ((v103 & 0x4000000) == 0)
  {
LABEL_253:
    if ((v103 & 0x8000000) == 0) {
      goto LABEL_254;
    }
    goto LABEL_418;
  }
LABEL_412:
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v182 = *(void *)(a1 + 520);
  *(_WORD *)int v4 = 994;
  unsigned int v183 = *(_DWORD *)(v182 + 20);
  v4[2] = v183;
  if (v183 > 0x7F) {
    v184 = sub_188A9CC(v183, v4 + 2);
  }
  else {
    v184 = v4 + 3;
  }
  int v4 = sub_18110F8(v182, (unint64_t)v184, a3);
  if ((v103 & 0x8000000) == 0)
  {
LABEL_254:
    if ((v103 & 0x10000000) == 0) {
      goto LABEL_430;
    }
    goto LABEL_424;
  }
LABEL_418:
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v185 = *(void *)(a1 + 528);
  *(_WORD *)int v4 = 1002;
  unsigned int v186 = *(_DWORD *)(v185 + 64);
  v4[2] = v186;
  if (v186 > 0x7F) {
    v187 = sub_188A9CC(v186, v4 + 2);
  }
  else {
    v187 = v4 + 3;
  }
  int v4 = sub_17D52A0(v185, v187, a3);
  if ((v103 & 0x10000000) != 0)
  {
LABEL_424:
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v188 = *(void *)(a1 + 536);
    *(_WORD *)int v4 = 1010;
    unsigned int v189 = *(_DWORD *)(v188 + 44);
    v4[2] = v189;
    if (v189 > 0x7F) {
      v190 = sub_188A9CC(v189, v4 + 2);
    }
    else {
      v190 = v4 + 3;
    }
    int v4 = sub_1817054(v188, v190, a3);
  }
LABEL_430:
  if (*(_WORD *)(a1 + 26)) {
    int v4 = sub_1886844(a1 + 16, 1000, 1050, v4, a3);
  }
  uint64_t v191 = *(void *)(a1 + 8);
  if ((v191 & 1) == 0) {
    return v4;
  }
  unint64_t v193 = v191 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v193 + 31) < 0)
  {
    v194 = *(void **)(v193 + 8);
    uint64_t v195 = *(void *)(v193 + 16);
  }
  else
  {
    v194 = (void *)(v193 + 8);
    LODWORD(v195) = *(unsigned __int8 *)(v193 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v195)
  {
    uint64_t v196 = (int)v195;
    memcpy(v4, v194, (int)v195);
    v4 += v196;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v194, v195, v4);
}

uint64_t sub_181E970(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  unsigned int v3 = *(_DWORD *)(a1 + 40);
  if (!(_BYTE)v3) {
    goto LABEL_11;
  }
  if (v3)
  {
    uint64_t v14 = sub_1798660(*(void *)(a1 + 56));
    v2 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v3 & 2) == 0)
    {
LABEL_4:
      if ((v3 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_81;
    }
  }
  else if ((v3 & 2) == 0)
  {
    goto LABEL_4;
  }
  uint64_t v15 = sub_17D0FD4(*(void *)(a1 + 64));
  v2 += v15 + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v3 & 4) == 0)
  {
LABEL_5:
    if ((v3 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_82;
  }
LABEL_81:
  uint64_t v16 = sub_17CFEEC(*(void *)(a1 + 72));
  v2 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v3 & 8) == 0)
  {
LABEL_6:
    if ((v3 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_83;
  }
LABEL_82:
  uint64_t v17 = sub_17D38DC(*(void *)(a1 + 80));
  v2 += v17 + ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v3 & 0x10) == 0)
  {
LABEL_7:
    if ((v3 & 0x20) == 0) {
      goto LABEL_8;
    }
LABEL_84:
    uint64_t v19 = sub_17DF5D0(*(void *)(a1 + 96));
    v2 += v19 + ((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v3 & 0x40) == 0)
    {
LABEL_9:
      if ((v3 & 0x80) == 0) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
    goto LABEL_85;
  }
LABEL_83:
  uint64_t v18 = sub_17D4B08(*(void *)(a1 + 88));
  v2 += v18 + ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v3 & 0x20) != 0) {
    goto LABEL_84;
  }
LABEL_8:
  if ((v3 & 0x40) == 0) {
    goto LABEL_9;
  }
LABEL_85:
  uint64_t v20 = sub_17D833C(*(void *)(a1 + 104));
  v2 += v20 + ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v3 & 0x80) != 0)
  {
LABEL_10:
    uint64_t v4 = sub_17E62A4(*(void *)(a1 + 112));
    v2 += v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_11:
  if ((v3 & 0xFF00) == 0) {
    goto LABEL_21;
  }
  if ((v3 & 0x100) != 0)
  {
    uint64_t v21 = sub_17E8940(*(void *)(a1 + 120));
    v2 += v21 + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v3 & 0x200) == 0)
    {
LABEL_14:
      if ((v3 & 0x400) == 0) {
        goto LABEL_15;
      }
      goto LABEL_89;
    }
  }
  else if ((v3 & 0x200) == 0)
  {
    goto LABEL_14;
  }
  uint64_t v22 = sub_18018FC(*(void *)(a1 + 128));
  v2 += v22 + ((9 * (__clz(v22 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v3 & 0x400) == 0)
  {
LABEL_15:
    if ((v3 & 0x800) == 0) {
      goto LABEL_16;
    }
    goto LABEL_90;
  }
LABEL_89:
  uint64_t v23 = sub_17A1394(*(void *)(a1 + 136));
  v2 += v23 + ((9 * (__clz(v23 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v3 & 0x800) == 0)
  {
LABEL_16:
    if ((v3 & 0x1000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_91;
  }
LABEL_90:
  uint64_t v24 = sub_17C7A5C(*(void *)(a1 + 144));
  v2 += v24 + ((9 * (__clz(v24 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v3 & 0x1000) == 0)
  {
LABEL_17:
    if ((v3 & 0x2000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_92;
  }
LABEL_91:
  uint64_t v25 = sub_17CC2A0(*(void *)(a1 + 152));
  v2 += v25 + ((9 * (__clz(v25 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v3 & 0x2000) == 0)
  {
LABEL_18:
    if ((v3 & 0x4000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_93;
  }
LABEL_92:
  uint64_t v26 = sub_17C2668(*(void *)(a1 + 160));
  v2 += v26 + ((9 * (__clz(v26 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v3 & 0x4000) == 0)
  {
LABEL_19:
    if ((v3 & 0x8000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_20;
  }
LABEL_93:
  uint64_t v27 = sub_17CF570(*(void *)(a1 + 168));
  v2 += v27 + ((9 * (__clz(v27 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v3 & 0x8000) != 0)
  {
LABEL_20:
    uint64_t v5 = sub_17CD65C(*(void *)(a1 + 176));
    v2 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
LABEL_21:
  if ((v3 & 0xFF0000) == 0) {
    goto LABEL_31;
  }
  if ((v3 & 0x10000) != 0)
  {
    uint64_t v28 = sub_17DCF58(*(void *)(a1 + 184));
    v2 += v28 + ((9 * (__clz(v28 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v3 & 0x20000) == 0)
    {
LABEL_24:
      if ((v3 & 0x40000) == 0) {
        goto LABEL_25;
      }
      goto LABEL_97;
    }
  }
  else if ((v3 & 0x20000) == 0)
  {
    goto LABEL_24;
  }
  uint64_t v29 = sub_17EAA10(*(void *)(a1 + 192));
  v2 += v29 + ((9 * (__clz(v29 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v3 & 0x40000) == 0)
  {
LABEL_25:
    if ((v3 & 0x80000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_98;
  }
LABEL_97:
  uint64_t v30 = sub_17D245C(*(void *)(a1 + 200));
  v2 += v30 + ((9 * (__clz(v30 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v3 & 0x80000) == 0)
  {
LABEL_26:
    if ((v3 & 0x100000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_99;
  }
LABEL_98:
  uint64_t v31 = sub_17C4184(*(void *)(a1 + 208));
  v2 += v31 + ((9 * (__clz(v31 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v3 & 0x100000) == 0)
  {
LABEL_27:
    if ((v3 & 0x200000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_100;
  }
LABEL_99:
  uint64_t v32 = sub_17E32B8(*(void *)(a1 + 216));
  v2 += v32 + ((9 * (__clz(v32 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v3 & 0x200000) == 0)
  {
LABEL_28:
    if ((v3 & 0x400000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_101;
  }
LABEL_100:
  uint64_t v33 = sub_17EBC10(*(void *)(a1 + 224));
  v2 += v33 + ((9 * (__clz(v33 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v3 & 0x400000) == 0)
  {
LABEL_29:
    if ((v3 & 0x800000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_30;
  }
LABEL_101:
  uint64_t v34 = sub_17D6CC8(*(void *)(a1 + 232));
  v2 += v34 + ((9 * (__clz(v34 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v3 & 0x800000) != 0)
  {
LABEL_30:
    uint64_t v6 = sub_17ECBF4(*(void *)(a1 + 240));
    v2 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
LABEL_31:
  if (!HIBYTE(v3)) {
    goto LABEL_40;
  }
  if ((v3 & 0x1000000) != 0)
  {
    uint64_t v60 = sub_1802A8C(*(void *)(a1 + 248));
    v2 += v60 + ((9 * (__clz(v60 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v3 & 0x2000000) == 0)
    {
LABEL_34:
      if ((v3 & 0x4000000) == 0) {
        goto LABEL_35;
      }
      goto LABEL_134;
    }
  }
  else if ((v3 & 0x2000000) == 0)
  {
    goto LABEL_34;
  }
  uint64_t v61 = sub_1803788(*(void *)(a1 + 256));
  v2 += v61 + ((9 * (__clz(v61 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v3 & 0x4000000) == 0)
  {
LABEL_35:
    if ((v3 & 0x8000000) == 0) {
      goto LABEL_36;
    }
    goto LABEL_135;
  }
LABEL_134:
  uint64_t v62 = sub_17EDACC(*(void *)(a1 + 264));
  v2 += v62 + ((9 * (__clz(v62 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v3 & 0x8000000) == 0)
  {
LABEL_36:
    if ((v3 & 0x10000000) == 0) {
      goto LABEL_37;
    }
    goto LABEL_136;
  }
LABEL_135:
  uint64_t v63 = sub_17EE7D4(*(void *)(a1 + 272));
  v2 += v63 + ((9 * (__clz(v63 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v3 & 0x10000000) == 0)
  {
LABEL_37:
    if ((v3 & 0x20000000) == 0) {
      goto LABEL_38;
    }
    goto LABEL_137;
  }
LABEL_136:
  uint64_t v64 = sub_1804198(*(void *)(a1 + 280));
  v2 += v64 + ((9 * (__clz(v64 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v3 & 0x20000000) == 0)
  {
LABEL_38:
    if ((v3 & 0x40000000) == 0) {
      goto LABEL_39;
    }
LABEL_138:
    uint64_t v66 = sub_180A07C(*(void *)(a1 + 296));
    v2 += v66 + ((9 * (__clz(v66 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v3 & 0x80000000) == 0) {
      goto LABEL_40;
    }
    goto LABEL_139;
  }
LABEL_137:
  uint64_t v65 = sub_17EF624(*(void *)(a1 + 288));
  v2 += v65 + ((9 * (__clz(v65 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v3 & 0x40000000) != 0) {
    goto LABEL_138;
  }
LABEL_39:
  if ((v3 & 0x80000000) == 0) {
    goto LABEL_40;
  }
LABEL_139:
  uint64_t v67 = sub_180AAF0(*(void *)(a1 + 304));
  v2 += v67 + ((9 * (__clz(v67 | 1) ^ 0x1F) + 73) >> 6) + 2;
LABEL_40:
  int v7 = *(_DWORD *)(a1 + 44);
  if (!(_BYTE)v7) {
    goto LABEL_50;
  }
  if (v7)
  {
    uint64_t v35 = sub_180B3D0(*(void *)(a1 + 312));
    v2 += v35 + ((9 * (__clz(v35 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v7 & 2) == 0)
    {
LABEL_43:
      if ((v7 & 4) == 0) {
        goto LABEL_44;
      }
      goto LABEL_105;
    }
  }
  else if ((v7 & 2) == 0)
  {
    goto LABEL_43;
  }
  uint64_t v36 = sub_180C68C(*(void *)(a1 + 320));
  v2 += v36 + ((9 * (__clz(v36 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v7 & 4) == 0)
  {
LABEL_44:
    if ((v7 & 8) == 0) {
      goto LABEL_45;
    }
    goto LABEL_106;
  }
LABEL_105:
  uint64_t v37 = sub_180D3F0(*(void *)(a1 + 328));
  v2 += v37 + ((9 * (__clz(v37 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v7 & 8) == 0)
  {
LABEL_45:
    if ((v7 & 0x10) == 0) {
      goto LABEL_46;
    }
    goto LABEL_107;
  }
LABEL_106:
  uint64_t v38 = sub_180FBE4(*(void *)(a1 + 336));
  v2 += v38 + ((9 * (__clz(v38 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v7 & 0x10) == 0)
  {
LABEL_46:
    if ((v7 & 0x20) == 0) {
      goto LABEL_47;
    }
    goto LABEL_108;
  }
LABEL_107:
  uint64_t v39 = sub_1810324(*(void *)(a1 + 344));
  v2 += v39 + ((9 * (__clz(v39 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v7 & 0x20) == 0)
  {
LABEL_47:
    if ((v7 & 0x40) == 0) {
      goto LABEL_48;
    }
    goto LABEL_109;
  }
LABEL_108:
  uint64_t v40 = sub_132EEB8(*(void *)(a1 + 352));
  v2 += v40 + ((9 * (__clz(v40 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v7 & 0x40) == 0)
  {
LABEL_48:
    if ((v7 & 0x80) == 0) {
      goto LABEL_50;
    }
    goto LABEL_49;
  }
LABEL_109:
  uint64_t v41 = sub_1810B6C(*(void *)(a1 + 360));
  v2 += v41 + ((9 * (__clz(v41 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v7 & 0x80) != 0)
  {
LABEL_49:
    uint64_t v8 = sub_1804B58(*(void *)(a1 + 368));
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
LABEL_50:
  if ((v7 & 0xFF00) == 0) {
    goto LABEL_60;
  }
  if ((v7 & 0x100) != 0)
  {
    uint64_t v42 = sub_18080C0(*(void *)(a1 + 376));
    v2 += v42 + ((9 * (__clz(v42 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v7 & 0x200) == 0)
    {
LABEL_53:
      if ((v7 & 0x400) == 0) {
        goto LABEL_54;
      }
      goto LABEL_113;
    }
  }
  else if ((v7 & 0x200) == 0)
  {
    goto LABEL_53;
  }
  uint64_t v43 = sub_17A2D10(*(void *)(a1 + 384));
  v2 += v43 + ((9 * (__clz(v43 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v7 & 0x400) == 0)
  {
LABEL_54:
    if ((v7 & 0x800) == 0) {
      goto LABEL_55;
    }
    goto LABEL_114;
  }
LABEL_113:
  uint64_t v44 = sub_17AD388(*(void *)(a1 + 392));
  v2 += v44 + ((9 * (__clz(v44 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v7 & 0x800) == 0)
  {
LABEL_55:
    if ((v7 & 0x1000) == 0) {
      goto LABEL_56;
    }
    goto LABEL_115;
  }
LABEL_114:
  uint64_t v45 = sub_161E2C4(*(void *)(a1 + 400));
  v2 += v45 + ((9 * (__clz(v45 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v7 & 0x1000) == 0)
  {
LABEL_56:
    if ((v7 & 0x2000) == 0) {
      goto LABEL_57;
    }
    goto LABEL_116;
  }
LABEL_115:
  uint64_t v46 = sub_17AA178(*(void *)(a1 + 408));
  v2 += v46 + ((9 * (__clz(v46 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v7 & 0x2000) == 0)
  {
LABEL_57:
    if ((v7 & 0x4000) == 0) {
      goto LABEL_58;
    }
    goto LABEL_117;
  }
LABEL_116:
  uint64_t v47 = sub_17A727C(*(void *)(a1 + 416));
  v2 += v47 + ((9 * (__clz(v47 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v7 & 0x4000) == 0)
  {
LABEL_58:
    if ((v7 & 0x8000) == 0) {
      goto LABEL_60;
    }
    goto LABEL_59;
  }
LABEL_117:
  uint64_t v48 = sub_17D95A8(*(void *)(a1 + 424));
  v2 += v48 + ((9 * (__clz(v48 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v7 & 0x8000) != 0)
  {
LABEL_59:
    uint64_t v9 = sub_17DA020(*(void *)(a1 + 432));
    v2 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
LABEL_60:
  if ((v7 & 0xFF0000) == 0) {
    goto LABEL_70;
  }
  if ((v7 & 0x10000) != 0)
  {
    uint64_t v49 = sub_1813D38(*(void *)(a1 + 440));
    v2 += v49 + ((9 * (__clz(v49 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v7 & 0x20000) == 0)
    {
LABEL_63:
      if ((v7 & 0x40000) == 0) {
        goto LABEL_64;
      }
      goto LABEL_121;
    }
  }
  else if ((v7 & 0x20000) == 0)
  {
    goto LABEL_63;
  }
  uint64_t v50 = sub_17B6824(*(void *)(a1 + 448));
  v2 += v50 + ((9 * (__clz(v50 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v7 & 0x40000) == 0)
  {
LABEL_64:
    if ((v7 & 0x80000) == 0) {
      goto LABEL_65;
    }
    goto LABEL_122;
  }
LABEL_121:
  uint64_t v51 = sub_17AF7A4(*(void *)(a1 + 456));
  v2 += v51 + ((9 * (__clz(v51 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v7 & 0x80000) == 0)
  {
LABEL_65:
    if ((v7 & 0x100000) == 0) {
      goto LABEL_66;
    }
    goto LABEL_123;
  }
LABEL_122:
  uint64_t v52 = sub_17B3180(*(void *)(a1 + 464));
  v2 += v52 + ((9 * (__clz(v52 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v7 & 0x100000) == 0)
  {
LABEL_66:
    if ((v7 & 0x200000) == 0) {
      goto LABEL_67;
    }
    goto LABEL_124;
  }
LABEL_123:
  uint64_t v53 = sub_17DB39C(*(void *)(a1 + 472));
  v2 += v53 + ((9 * (__clz(v53 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v7 & 0x200000) == 0)
  {
LABEL_67:
    if ((v7 & 0x400000) == 0) {
      goto LABEL_68;
    }
    goto LABEL_125;
  }
LABEL_124:
  uint64_t v54 = sub_17B9A38(*(void *)(a1 + 480));
  v2 += v54 + ((9 * (__clz(v54 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v7 & 0x400000) == 0)
  {
LABEL_68:
    if ((v7 & 0x800000) == 0) {
      goto LABEL_70;
    }
    goto LABEL_69;
  }
LABEL_125:
  uint64_t v55 = sub_17D5F08(*(void *)(a1 + 488));
  v2 += v55 + ((9 * (__clz(v55 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v7 & 0x800000) != 0)
  {
LABEL_69:
    uint64_t v10 = sub_1814AF0(*(void *)(a1 + 496));
    v2 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
LABEL_70:
  if ((v7 & 0x1F000000) == 0) {
    goto LABEL_77;
  }
  if ((v7 & 0x1000000) != 0)
  {
    uint64_t v56 = sub_1815890(*(void *)(a1 + 504));
    v2 += v56 + ((9 * (__clz(v56 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v7 & 0x2000000) == 0)
    {
LABEL_73:
      if ((v7 & 0x4000000) == 0) {
        goto LABEL_74;
      }
      goto LABEL_129;
    }
  }
  else if ((v7 & 0x2000000) == 0)
  {
    goto LABEL_73;
  }
  uint64_t v57 = sub_1816348(*(void *)(a1 + 512));
  v2 += v57 + ((9 * (__clz(v57 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v7 & 0x4000000) == 0)
  {
LABEL_74:
    if ((v7 & 0x8000000) == 0) {
      goto LABEL_75;
    }
    goto LABEL_130;
  }
LABEL_129:
  uint64_t v58 = sub_1811208(*(void *)(a1 + 520));
  v2 += v58 + ((9 * (__clz(v58 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v7 & 0x8000000) == 0)
  {
LABEL_75:
    if ((v7 & 0x10000000) == 0) {
      goto LABEL_77;
    }
    goto LABEL_76;
  }
LABEL_130:
  uint64_t v59 = sub_17D5408(*(void *)(a1 + 528));
  v2 += v59 + ((9 * (__clz(v59 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v7 & 0x10000000) != 0)
  {
LABEL_76:
    uint64_t v11 = sub_18171A8(*(void *)(a1 + 536));
    v2 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
LABEL_77:
  uint64_t v12 = *(void *)(a1 + 8);
  if (v12)
  {
    unint64_t v68 = v12 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v68 + 31) < 0) {
      uint64_t v69 = *(void *)(v68 + 16);
    }
    else {
      uint64_t v69 = *(unsigned __int8 *)(v68 + 31);
    }
    v2 += v69;
  }
  *(_DWORD *)(a1 + 48) = v2;
  return v2;
}

void sub_181F684(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(_DWORD *)(a2 + 40);
  if (!(_BYTE)v4) {
    goto LABEL_75;
  }
  if (v4)
  {
    *(_DWORD *)(a1 + 40) |= 1u;
    uint64_t v5 = *(void *)(a1 + 56);
    if (!v5)
    {
      uint64_t v6 = *(void *)(a1 + 8);
      int v7 = (void *)(v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (v6) {
        int v7 = (void *)*v7;
      }
      uint64_t v5 = sub_18304F0((uint64_t)v7);
      *(void *)(a1 + 56) = v5;
    }
    if (*(void *)(a2 + 56)) {
      uint64_t v8 = *(uint64_t (****)())(a2 + 56);
    }
    else {
      uint64_t v8 = &off_2549900;
    }
    sub_1798F60(v5, (uint64_t)v8);
    if ((v4 & 2) == 0)
    {
LABEL_4:
      if ((v4 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_27;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_4;
  }
  *(_DWORD *)(a1 + 40) |= 2u;
  uint64_t v9 = *(void *)(a1 + 64);
  if (!v9)
  {
    uint64_t v10 = *(void *)(a1 + 8);
    uint64_t v11 = (void *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
    if (v10) {
      uint64_t v11 = (void *)*v11;
    }
    uint64_t v9 = sub_1832F00((uint64_t)v11);
    *(void *)(a1 + 64) = v9;
  }
  if (*(void *)(a2 + 64)) {
    uint64_t v12 = *(uint64_t (****)())(a2 + 64);
  }
  else {
    uint64_t v12 = &off_254AD38;
  }
  sub_17D1194(v9, (uint64_t)v12);
  if ((v4 & 4) == 0)
  {
LABEL_5:
    if ((v4 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_35;
  }
LABEL_27:
  *(_DWORD *)(a1 + 40) |= 4u;
  uint64_t v13 = *(std::string **)(a1 + 72);
  if (!v13)
  {
    uint64_t v14 = *(void *)(a1 + 8);
    uint64_t v15 = (void *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
    if (v14) {
      uint64_t v15 = (void *)*v15;
    }
    uint64_t v13 = (std::string *)sub_1832E04((uint64_t)v15);
    *(void *)(a1 + 72) = v13;
  }
  if (*(void *)(a2 + 72)) {
    uint64_t v16 = *(uint64_t (****)())(a2 + 72);
  }
  else {
    uint64_t v16 = &off_254AD00;
  }
  sub_12329D0(v13, (uint64_t)v16);
  if ((v4 & 8) == 0)
  {
LABEL_6:
    if ((v4 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_43;
  }
LABEL_35:
  *(_DWORD *)(a1 + 40) |= 8u;
  uint64_t v17 = *(void **)(a1 + 80);
  if (!v17)
  {
    uint64_t v18 = *(void *)(a1 + 8);
    uint64_t v19 = (void *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
    if (v18) {
      uint64_t v19 = (void *)*v19;
    }
    uint64_t v17 = sub_1833070((uint64_t)v19);
    *(void *)(a1 + 80) = v17;
  }
  if (*(void *)(a2 + 80)) {
    uint64_t v20 = *(uint64_t (****)())(a2 + 80);
  }
  else {
    uint64_t v20 = &off_254AE70;
  }
  sub_17D3A2C((uint64_t)v17, (uint64_t)v20);
  if ((v4 & 0x10) == 0)
  {
LABEL_7:
    if ((v4 & 0x20) == 0) {
      goto LABEL_8;
    }
    goto LABEL_51;
  }
LABEL_43:
  *(_DWORD *)(a1 + 40) |= 0x10u;
  uint64_t v21 = *(void **)(a1 + 88);
  if (!v21)
  {
    uint64_t v22 = *(void *)(a1 + 8);
    uint64_t v23 = (void *)(v22 & 0xFFFFFFFFFFFFFFFCLL);
    if (v22) {
      uint64_t v23 = (void *)*v23;
    }
    uint64_t v21 = sub_1833128((uint64_t)v23);
    *(void *)(a1 + 88) = v21;
  }
  if (*(void *)(a2 + 88)) {
    uint64_t v24 = *(uint64_t (****)())(a2 + 88);
  }
  else {
    uint64_t v24 = &off_254AF08;
  }
  sub_17D4C00((uint64_t)v21, (uint64_t)v24);
  if ((v4 & 0x20) == 0)
  {
LABEL_8:
    if ((v4 & 0x40) == 0) {
      goto LABEL_9;
    }
    goto LABEL_59;
  }
LABEL_51:
  *(_DWORD *)(a1 + 40) |= 0x20u;
  uint64_t v25 = *(void *)(a1 + 96);
  if (!v25)
  {
    uint64_t v26 = *(void *)(a1 + 8);
    uint64_t v27 = (void *)(v26 & 0xFFFFFFFFFFFFFFFCLL);
    if (v26) {
      uint64_t v27 = (void *)*v27;
    }
    sub_18339A8((uint64_t)v27);
    *(void *)(a1 + 96) = v25;
  }
  if (*(void *)(a2 + 96)) {
    uint64_t v28 = *(uint64_t (****)())(a2 + 96);
  }
  else {
    uint64_t v28 = &off_254B2C8;
  }
  sub_17DFA1C(v25, (uint64_t)v28);
  if ((v4 & 0x40) == 0)
  {
LABEL_9:
    if ((v4 & 0x80) == 0) {
      goto LABEL_75;
    }
    goto LABEL_67;
  }
LABEL_59:
  *(_DWORD *)(a1 + 40) |= 0x40u;
  uint64_t v29 = *(void *)(a1 + 104);
  if (!v29)
  {
    uint64_t v30 = *(void *)(a1 + 8);
    uint64_t v31 = (void *)(v30 & 0xFFFFFFFFFFFFFFFCLL);
    if (v30) {
      uint64_t v31 = (void *)*v31;
    }
    sub_1833400((uint64_t)v31);
    *(void *)(a1 + 104) = v29;
  }
  if (*(void *)(a2 + 104)) {
    uint64_t v32 = *(uint64_t (****)())(a2 + 104);
  }
  else {
    uint64_t v32 = &off_254B080;
  }
  sub_17D8610(v29, (uint64_t)v32);
  if ((v4 & 0x80) != 0)
  {
LABEL_67:
    *(_DWORD *)(a1 + 40) |= 0x80u;
    uint64_t v33 = *(void *)(a1 + 112);
    if (!v33)
    {
      uint64_t v34 = *(void *)(a1 + 8);
      uint64_t v35 = (void *)(v34 & 0xFFFFFFFFFFFFFFFCLL);
      if (v34) {
        uint64_t v35 = (void *)*v35;
      }
      sub_1833F40((uint64_t)v35);
      *(void *)(a1 + 112) = v33;
    }
    if (*(void *)(a2 + 112)) {
      uint64_t v36 = *(uint64_t (****)())(a2 + 112);
    }
    else {
      uint64_t v36 = &off_254B538;
    }
    sub_17E659C(v33, (uint64_t)v36);
  }
LABEL_75:
  if ((v4 & 0xFF00) == 0) {
    goto LABEL_149;
  }
  if ((v4 & 0x100) != 0)
  {
    *(_DWORD *)(a1 + 40) |= 0x100u;
    uint64_t v37 = *(void *)(a1 + 120);
    if (!v37)
    {
      uint64_t v38 = *(void *)(a1 + 8);
      uint64_t v39 = (void *)(v38 & 0xFFFFFFFFFFFFFFFCLL);
      if (v38) {
        uint64_t v39 = (void *)*v39;
      }
      sub_1834130((uint64_t)v39);
      *(void *)(a1 + 120) = v37;
    }
    if (*(void *)(a2 + 120)) {
      uint64_t v40 = *(uint64_t (****)())(a2 + 120);
    }
    else {
      uint64_t v40 = &off_254B638;
    }
    sub_17E8B9C(v37, (uint64_t)v40);
    if ((v4 & 0x200) == 0)
    {
LABEL_78:
      if ((v4 & 0x400) == 0) {
        goto LABEL_79;
      }
      goto LABEL_101;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_78;
  }
  *(_DWORD *)(a1 + 40) |= 0x200u;
  uint64_t v41 = *(void *)(a1 + 128);
  if (!v41)
  {
    uint64_t v42 = *(void *)(a1 + 8);
    uint64_t v43 = (void *)(v42 & 0xFFFFFFFFFFFFFFFCLL);
    if (v42) {
      uint64_t v43 = (void *)*v43;
    }
    uint64_t v41 = sub_1835324((uint64_t)v43);
    *(void *)(a1 + 128) = v41;
  }
  if (*(void *)(a2 + 128)) {
    uint64_t v44 = *(uint64_t (****)())(a2 + 128);
  }
  else {
    uint64_t v44 = &off_254BDC0;
  }
  sub_1801CC4(v41, (uint64_t)v44);
  if ((v4 & 0x400) == 0)
  {
LABEL_79:
    if ((v4 & 0x800) == 0) {
      goto LABEL_80;
    }
    goto LABEL_109;
  }
LABEL_101:
  *(_DWORD *)(a1 + 40) |= 0x400u;
  uint64_t v45 = *(void *)(a1 + 136);
  if (!v45)
  {
    uint64_t v46 = *(void *)(a1 + 8);
    uint64_t v47 = (void *)(v46 & 0xFFFFFFFFFFFFFFFCLL);
    if (v46) {
      uint64_t v47 = (void *)*v47;
    }
    uint64_t v45 = sub_18307BC((uint64_t)v47);
    *(void *)(a1 + 136) = v45;
  }
  if (*(void *)(a2 + 136)) {
    uint64_t v48 = *(uint64_t (****)())(a2 + 136);
  }
  else {
    uint64_t v48 = &off_2549CA8;
  }
  sub_17A165C(v45, (uint64_t)v48);
  if ((v4 & 0x800) == 0)
  {
LABEL_80:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_81;
    }
    goto LABEL_117;
  }
LABEL_109:
  *(_DWORD *)(a1 + 40) |= 0x800u;
  uint64_t v49 = *(void *)(a1 + 144);
  if (!v49)
  {
    uint64_t v50 = *(void *)(a1 + 8);
    uint64_t v51 = (void *)(v50 & 0xFFFFFFFFFFFFFFFCLL);
    if (v50) {
      uint64_t v51 = (void *)*v51;
    }
    sub_18328CC((uint64_t)v51);
    *(void *)(a1 + 144) = v49;
  }
  if (*(void *)(a2 + 144)) {
    uint64_t v52 = *(uint64_t (****)())(a2 + 144);
  }
  else {
    uint64_t v52 = &off_254A9C0;
  }
  sub_17C8104(v49, (uint64_t)v52);
  if ((v4 & 0x1000) == 0)
  {
LABEL_81:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_82;
    }
    goto LABEL_125;
  }
LABEL_117:
  *(_DWORD *)(a1 + 40) |= 0x1000u;
  uint64_t v53 = *(void **)(a1 + 152);
  if (!v53)
  {
    uint64_t v54 = *(void *)(a1 + 8);
    uint64_t v55 = (void *)(v54 & 0xFFFFFFFFFFFFFFFCLL);
    if (v54) {
      uint64_t v55 = (void *)*v55;
    }
    uint64_t v53 = sub_1832988((uint64_t)v55);
    *(void *)(a1 + 152) = v53;
  }
  if (*(void *)(a2 + 152)) {
    uint64_t v56 = *(uint64_t (****)())(a2 + 152);
  }
  else {
    uint64_t v56 = &off_254ABE8;
  }
  sub_17CC3F0((uint64_t)v53, (uint64_t)v56);
  if ((v4 & 0x2000) == 0)
  {
LABEL_82:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_83;
    }
    goto LABEL_133;
  }
LABEL_125:
  *(_DWORD *)(a1 + 40) |= 0x2000u;
  uint64_t v57 = *(void *)(a1 + 160);
  if (!v57)
  {
    uint64_t v58 = *(void *)(a1 + 8);
    uint64_t v59 = (void *)(v58 & 0xFFFFFFFFFFFFFFFCLL);
    if (v58) {
      uint64_t v59 = (void *)*v59;
    }
    sub_1832554((uint64_t)v59);
    *(void *)(a1 + 160) = v57;
  }
  if (*(void *)(a2 + 160)) {
    uint64_t v60 = *(uint64_t (****)())(a2 + 160);
  }
  else {
    uint64_t v60 = &off_254A8B0;
  }
  sub_17C27B0(v57, (uint64_t)v60);
  if ((v4 & 0x4000) == 0)
  {
LABEL_83:
    if ((v4 & 0x8000) == 0) {
      goto LABEL_149;
    }
    goto LABEL_141;
  }
LABEL_133:
  *(_DWORD *)(a1 + 40) |= 0x4000u;
  uint64_t v61 = *(std::string **)(a1 + 168);
  if (!v61)
  {
    uint64_t v62 = *(void *)(a1 + 8);
    uint64_t v63 = (void *)(v62 & 0xFFFFFFFFFFFFFFFCLL);
    if (v62) {
      uint64_t v63 = (void *)*v63;
    }
    uint64_t v61 = (std::string *)sub_1832D04((uint64_t)v63);
    *(void *)(a1 + 168) = v61;
  }
  if (*(void *)(a2 + 168)) {
    uint64_t v64 = *(uint64_t (****)())(a2 + 168);
  }
  else {
    uint64_t v64 = &off_254ACC0;
  }
  sub_11AD324(v61, (uint64_t)v64);
  if ((v4 & 0x8000) != 0)
  {
LABEL_141:
    *(_DWORD *)(a1 + 40) |= 0x8000u;
    uint64_t v65 = *(void *)(a1 + 176);
    if (!v65)
    {
      uint64_t v66 = *(void *)(a1 + 8);
      uint64_t v67 = (void *)(v66 & 0xFFFFFFFFFFFFFFFCLL);
      if (v66) {
        uint64_t v67 = (void *)*v67;
      }
      uint64_t v65 = sub_1832A98((uint64_t)v67);
      *(void *)(a1 + 176) = v65;
    }
    if (*(void *)(a2 + 176)) {
      unint64_t v68 = *(uint64_t (****)())(a2 + 176);
    }
    else {
      unint64_t v68 = &off_254AC48;
    }
    sub_17CD788(v65, (uint64_t)v68);
  }
LABEL_149:
  if ((v4 & 0xFF0000) == 0) {
    goto LABEL_223;
  }
  if ((v4 & 0x10000) != 0)
  {
    *(_DWORD *)(a1 + 40) |= 0x10000u;
    uint64_t v69 = *(void *)(a1 + 184);
    if (!v69)
    {
      uint64_t v70 = *(void *)(a1 + 8);
      unsigned int v71 = (void *)(v70 & 0xFFFFFFFFFFFFFFFCLL);
      if (v70) {
        unsigned int v71 = (void *)*v71;
      }
      sub_183387C((uint64_t)v71);
      *(void *)(a1 + 184) = v69;
    }
    if (*(void *)(a2 + 184)) {
      uint64_t v72 = *(uint64_t (****)())(a2 + 184);
    }
    else {
      uint64_t v72 = &off_254B238;
    }
    sub_17DD278(v69, (uint64_t)v72);
    if ((v4 & 0x20000) == 0)
    {
LABEL_152:
      if ((v4 & 0x40000) == 0) {
        goto LABEL_153;
      }
      goto LABEL_175;
    }
  }
  else if ((v4 & 0x20000) == 0)
  {
    goto LABEL_152;
  }
  *(_DWORD *)(a1 + 40) |= 0x20000u;
  uint64_t v73 = *(void *)(a1 + 192);
  if (!v73)
  {
    uint64_t v74 = *(void *)(a1 + 8);
    uint64_t v75 = (void *)(v74 & 0xFFFFFFFFFFFFFFFCLL);
    if (v74) {
      uint64_t v75 = (void *)*v75;
    }
    sub_1834300((uint64_t)v75);
    *(void *)(a1 + 192) = v73;
  }
  if (*(void *)(a2 + 192)) {
    uint64_t v76 = *(uint64_t (****)())(a2 + 192);
  }
  else {
    uint64_t v76 = &off_254B708;
  }
  sub_17EAB4C(v73, (uint64_t)v76);
  if ((v4 & 0x40000) == 0)
  {
LABEL_153:
    if ((v4 & 0x80000) == 0) {
      goto LABEL_154;
    }
    goto LABEL_183;
  }
LABEL_175:
  *(_DWORD *)(a1 + 40) |= 0x40000u;
  uint64_t v77 = *(void *)(a1 + 200);
  if (!v77)
  {
    uint64_t v78 = *(void *)(a1 + 8);
    uint64_t v79 = (void *)(v78 & 0xFFFFFFFFFFFFFFFCLL);
    if (v78) {
      uint64_t v79 = (void *)*v79;
    }
    uint64_t v77 = sub_1832FB8((uint64_t)v79);
    *(void *)(a1 + 200) = v77;
  }
  if (*(void *)(a2 + 200)) {
    unsigned int v80 = *(uint64_t (****)())(a2 + 200);
  }
  else {
    unsigned int v80 = &off_254ADE0;
  }
  sub_17D2578(v77, (uint64_t)v80);
  if ((v4 & 0x80000) == 0)
  {
LABEL_154:
    if ((v4 & 0x100000) == 0) {
      goto LABEL_155;
    }
    goto LABEL_191;
  }
LABEL_183:
  *(_DWORD *)(a1 + 40) |= 0x80000u;
  int v81 = *(std::string **)(a1 + 208);
  if (!v81)
  {
    uint64_t v82 = *(void *)(a1 + 8);
    unsigned int v83 = (void *)(v82 & 0xFFFFFFFFFFFFFFFCLL);
    if (v82) {
      unsigned int v83 = (void *)*v83;
    }
    int v81 = (std::string *)sub_1832718((uint64_t)v83);
    *(void *)(a1 + 208) = v81;
  }
  if (*(void *)(a2 + 208)) {
    uint64_t v84 = *(uint64_t (****)())(a2 + 208);
  }
  else {
    uint64_t v84 = &off_254A938;
  }
  sub_1104DD8(v81, (uint64_t)v84);
  if ((v4 & 0x100000) == 0)
  {
LABEL_155:
    if ((v4 & 0x200000) == 0) {
      goto LABEL_156;
    }
    goto LABEL_199;
  }
LABEL_191:
  *(_DWORD *)(a1 + 40) |= 0x100000u;
  uint64_t v85 = *(void **)(a1 + 216);
  if (!v85)
  {
    uint64_t v86 = *(void *)(a1 + 8);
    int v87 = (void *)(v86 & 0xFFFFFFFFFFFFFFFCLL);
    if (v86) {
      int v87 = (void *)*v87;
    }
    uint64_t v85 = sub_1833CC8((uint64_t)v87);
    *(void *)(a1 + 216) = v85;
  }
  if (*(void *)(a2 + 216)) {
    uint64_t v88 = *(uint64_t (****)())(a2 + 216);
  }
  else {
    uint64_t v88 = &off_254B488;
  }
  sub_17E3400((uint64_t)v85, (uint64_t)v88);
  if ((v4 & 0x200000) == 0)
  {
LABEL_156:
    if ((v4 & 0x400000) == 0) {
      goto LABEL_157;
    }
    goto LABEL_207;
  }
LABEL_199:
  *(_DWORD *)(a1 + 40) |= 0x200000u;
  uint64_t v89 = *(void *)(a1 + 224);
  if (!v89)
  {
    uint64_t v90 = *(void *)(a1 + 8);
    uint64_t v91 = (void *)(v90 & 0xFFFFFFFFFFFFFFFCLL);
    if (v90) {
      uint64_t v91 = (void *)*v91;
    }
    uint64_t v89 = sub_18343E4((uint64_t)v91);
    *(void *)(a1 + 224) = v89;
  }
  if (*(void *)(a2 + 224)) {
    unsigned int v92 = *(uint64_t (****)())(a2 + 224);
  }
  else {
    unsigned int v92 = &off_254B768;
  }
  sub_17EBD2C(v89, (uint64_t)v92);
  if ((v4 & 0x400000) == 0)
  {
LABEL_157:
    if ((v4 & 0x800000) == 0) {
      goto LABEL_223;
    }
    goto LABEL_215;
  }
LABEL_207:
  *(_DWORD *)(a1 + 40) |= 0x400000u;
  uint64_t v93 = *(void **)(a1 + 232);
  if (!v93)
  {
    uint64_t v94 = *(void *)(a1 + 8);
    unsigned int v95 = (void *)(v94 & 0xFFFFFFFFFFFFFFFCLL);
    if (v94) {
      unsigned int v95 = (void *)*v95;
    }
    uint64_t v93 = sub_183332C((uint64_t)v95);
    *(void *)(a1 + 232) = v93;
  }
  if (*(void *)(a2 + 232)) {
    uint64_t v96 = *(uint64_t (****)())(a2 + 232);
  }
  else {
    uint64_t v96 = &off_254B018;
  }
  sub_17D6DC8((uint64_t)v93, (uint64_t)v96);
  if ((v4 & 0x800000) != 0)
  {
LABEL_215:
    *(_DWORD *)(a1 + 40) |= 0x800000u;
    uint64_t v97 = *(void *)(a1 + 240);
    if (!v97)
    {
      uint64_t v98 = *(void *)(a1 + 8);
      uint64_t v99 = (void *)(v98 & 0xFFFFFFFFFFFFFFFCLL);
      if (v98) {
        uint64_t v99 = (void *)*v99;
      }
      uint64_t v97 = sub_183449C((uint64_t)v99);
      *(void *)(a1 + 240) = v97;
    }
    if (*(void *)(a2 + 240)) {
      uint64_t v100 = *(uint64_t (****)())(a2 + 240);
    }
    else {
      uint64_t v100 = &off_254B7F0;
    }
    sub_17ECD04(v97, (uint64_t)v100);
  }
LABEL_223:
  if (!HIBYTE(v4)) {
    goto LABEL_297;
  }
  if ((v4 & 0x1000000) != 0)
  {
    *(_DWORD *)(a1 + 40) |= 0x1000000u;
    uint64_t v101 = *(void *)(a1 + 248);
    if (!v101)
    {
      uint64_t v102 = *(void *)(a1 + 8);
      int v103 = (void *)(v102 & 0xFFFFFFFFFFFFFFFCLL);
      if (v102) {
        int v103 = (void *)*v103;
      }
      uint64_t v101 = sub_1835380((uint64_t)v103);
      *(void *)(a1 + 248) = v101;
    }
    if (*(void *)(a2 + 248)) {
      uint64_t v104 = *(uint64_t (****)())(a2 + 248);
    }
    else {
      uint64_t v104 = &off_254BE70;
    }
    sub_1802B94(v101, (uint64_t)v104);
    if ((v4 & 0x2000000) == 0)
    {
LABEL_226:
      if ((v4 & 0x4000000) == 0) {
        goto LABEL_227;
      }
      goto LABEL_249;
    }
  }
  else if ((v4 & 0x2000000) == 0)
  {
    goto LABEL_226;
  }
  *(_DWORD *)(a1 + 40) |= 0x2000000u;
  uint64_t v105 = *(void *)(a1 + 256);
  if (!v105)
  {
    uint64_t v106 = *(void *)(a1 + 8);
    uint64_t v107 = (void *)(v106 & 0xFFFFFFFFFFFFFFFCLL);
    if (v106) {
      uint64_t v107 = (void *)*v107;
    }
    uint64_t v105 = sub_183549C((uint64_t)v107);
    *(void *)(a1 + 256) = v105;
  }
  if (*(void *)(a2 + 256)) {
    unsigned int v108 = *(uint64_t (****)())(a2 + 256);
  }
  else {
    unsigned int v108 = &off_254BEC8;
  }
  sub_1803888(v105, (uint64_t)v108);
  if ((v4 & 0x4000000) == 0)
  {
LABEL_227:
    if ((v4 & 0x8000000) == 0) {
      goto LABEL_228;
    }
    goto LABEL_257;
  }
LABEL_249:
  *(_DWORD *)(a1 + 40) |= 0x4000000u;
  uint64_t v109 = *(void *)(a1 + 264);
  if (!v109)
  {
    uint64_t v110 = *(void *)(a1 + 8);
    unsigned int v111 = (void *)(v110 & 0xFFFFFFFFFFFFFFFCLL);
    if (v110) {
      unsigned int v111 = (void *)*v111;
    }
    uint64_t v109 = sub_18345B0((uint64_t)v111);
    *(void *)(a1 + 264) = v109;
  }
  if (*(void *)(a2 + 264)) {
    uint64_t v112 = *(uint64_t (****)())(a2 + 264);
  }
  else {
    uint64_t v112 = &off_254B848;
  }
  sub_17EDC1C(v109, (uint64_t)v112);
  if ((v4 & 0x8000000) == 0)
  {
LABEL_228:
    if ((v4 & 0x10000000) == 0) {
      goto LABEL_229;
    }
    goto LABEL_265;
  }
LABEL_257:
  *(_DWORD *)(a1 + 40) |= 0x8000000u;
  uint64_t v113 = *(void *)(a1 + 272);
  if (!v113)
  {
    uint64_t v114 = *(void *)(a1 + 8);
    uint64_t v115 = (void *)(v114 & 0xFFFFFFFFFFFFFFFCLL);
    if (v114) {
      uint64_t v115 = (void *)*v115;
    }
    uint64_t v113 = sub_18346D8((uint64_t)v115);
    *(void *)(a1 + 272) = v113;
  }
  if (*(void *)(a2 + 272)) {
    uint64_t v116 = *(uint64_t (****)())(a2 + 272);
  }
  else {
    uint64_t v116 = &off_254B8C0;
  }
  sub_17EE8B0(v113, (uint64_t)v116);
  if ((v4 & 0x10000000) == 0)
  {
LABEL_229:
    if ((v4 & 0x20000000) == 0) {
      goto LABEL_230;
    }
    goto LABEL_273;
  }
LABEL_265:
  *(_DWORD *)(a1 + 40) |= 0x10000000u;
  unsigned int v117 = *(std::string **)(a1 + 280);
  if (!v117)
  {
    uint64_t v118 = *(void *)(a1 + 8);
    uint64_t v119 = (void *)(v118 & 0xFFFFFFFFFFFFFFFCLL);
    if (v118) {
      uint64_t v119 = (void *)*v119;
    }
    unsigned int v117 = (std::string *)sub_18355B8((uint64_t)v119);
    *(void *)(a1 + 280) = v117;
  }
  if (*(void *)(a2 + 280)) {
    unsigned int v120 = *(uint64_t (****)())(a2 + 280);
  }
  else {
    unsigned int v120 = &off_254BF28;
  }
  sub_12329D0(v117, (uint64_t)v120);
  if ((v4 & 0x20000000) == 0)
  {
LABEL_230:
    if ((v4 & 0x40000000) == 0) {
      goto LABEL_231;
    }
    goto LABEL_281;
  }
LABEL_273:
  *(_DWORD *)(a1 + 40) |= 0x20000000u;
  uint64_t v121 = *(void *)(a1 + 288);
  if (!v121)
  {
    uint64_t v122 = *(void *)(a1 + 8);
    unsigned int v123 = (void *)(v122 & 0xFFFFFFFFFFFFFFFCLL);
    if (v122) {
      unsigned int v123 = (void *)*v123;
    }
    uint64_t v121 = sub_1834814((uint64_t)v123);
    *(void *)(a1 + 288) = v121;
  }
  if (*(void *)(a2 + 288)) {
    uint64_t v124 = *(uint64_t (****)())(a2 + 288);
  }
  else {
    uint64_t v124 = &off_254B928;
  }
  sub_17EF6D4(v121, (uint64_t)v124);
  if ((v4 & 0x40000000) == 0)
  {
LABEL_231:
    if ((v4 & 0x80000000) == 0) {
      goto LABEL_297;
    }
    goto LABEL_289;
  }
LABEL_281:
  *(_DWORD *)(a1 + 40) |= 0x40000000u;
  uint64_t v125 = *(void *)(a1 + 296);
  if (!v125)
  {
    uint64_t v126 = *(void *)(a1 + 8);
    uint64_t v127 = (void *)(v126 & 0xFFFFFFFFFFFFFFFCLL);
    if (v126) {
      uint64_t v127 = (void *)*v127;
    }
    uint64_t v125 = sub_1835C20((uint64_t)v127);
    *(void *)(a1 + 296) = v125;
  }
  if (*(void *)(a2 + 296)) {
    uint64_t v128 = *(uint64_t (****)())(a2 + 296);
  }
  else {
    uint64_t v128 = &off_254C058;
  }
  sub_180A158(v125, (uint64_t)v128);
  if ((v4 & 0x80000000) != 0)
  {
LABEL_289:
    *(_DWORD *)(a1 + 40) |= 0x80000000;
    unsigned int v129 = *(void **)(a1 + 304);
    if (!v129)
    {
      uint64_t v130 = *(void *)(a1 + 8);
      uint64_t v131 = (void *)(v130 & 0xFFFFFFFFFFFFFFFCLL);
      if (v130) {
        uint64_t v131 = (void *)*v131;
      }
      unsigned int v129 = sub_1835D38((uint64_t)v131);
      *(void *)(a1 + 304) = v129;
    }
    if (*(void *)(a2 + 304)) {
      unsigned int v132 = *(uint64_t (****)())(a2 + 304);
    }
    else {
      unsigned int v132 = &off_254C0A8;
    }
    sub_180AB78((uint64_t)v129, (uint64_t)v132);
  }
LABEL_297:
  int v133 = *(_DWORD *)(a2 + 44);
  if (!(_BYTE)v133) {
    goto LABEL_371;
  }
  if (v133)
  {
    *(_DWORD *)(a1 + 44) |= 1u;
    uint64_t v134 = *(std::string **)(a1 + 312);
    if (!v134)
    {
      uint64_t v135 = *(void *)(a1 + 8);
      uint64_t v136 = (void *)(v135 & 0xFFFFFFFFFFFFFFFCLL);
      if (v135) {
        uint64_t v136 = (void *)*v136;
      }
      uint64_t v134 = (std::string *)sub_1835E28((uint64_t)v136);
      *(void *)(a1 + 312) = v134;
    }
    if (*(void *)(a2 + 312)) {
      uint64_t v137 = *(uint64_t (****)())(a2 + 312);
    }
    else {
      uint64_t v137 = &off_254C0E0;
    }
    sub_12329D0(v134, (uint64_t)v137);
    if ((v133 & 2) == 0)
    {
LABEL_300:
      if ((v133 & 4) == 0) {
        goto LABEL_301;
      }
      goto LABEL_323;
    }
  }
  else if ((v133 & 2) == 0)
  {
    goto LABEL_300;
  }
  *(_DWORD *)(a1 + 44) |= 2u;
  unsigned int v138 = *(void **)(a1 + 320);
  if (!v138)
  {
    uint64_t v139 = *(void *)(a1 + 8);
    uint64_t v140 = (void *)(v139 & 0xFFFFFFFFFFFFFFFCLL);
    if (v139) {
      uint64_t v140 = (void *)*v140;
    }
    unsigned int v138 = sub_1835F38((uint64_t)v140);
    *(void *)(a1 + 320) = v138;
  }
  if (*(void *)(a2 + 320)) {
    unsigned int v141 = *(uint64_t (****)())(a2 + 320);
  }
  else {
    unsigned int v141 = &off_254C140;
  }
  sub_180C74C((uint64_t)v138, (uint64_t)v141);
  if ((v133 & 4) == 0)
  {
LABEL_301:
    if ((v133 & 8) == 0) {
      goto LABEL_302;
    }
    goto LABEL_331;
  }
LABEL_323:
  *(_DWORD *)(a1 + 44) |= 4u;
  uint64_t v142 = *(void *)(a1 + 328);
  if (!v142)
  {
    uint64_t v143 = *(void *)(a1 + 8);
    unsigned int v144 = (void *)(v143 & 0xFFFFFFFFFFFFFFFCLL);
    if (v143) {
      unsigned int v144 = (void *)*v144;
    }
    uint64_t v142 = sub_183602C((uint64_t)v144);
    *(void *)(a1 + 328) = v142;
  }
  if (*(void *)(a2 + 328)) {
    v145 = *(uint64_t (****)())(a2 + 328);
  }
  else {
    v145 = &off_254C180;
  }
  sub_180D4F0(v142, (uint64_t)v145);
  if ((v133 & 8) == 0)
  {
LABEL_302:
    if ((v133 & 0x10) == 0) {
      goto LABEL_303;
    }
    goto LABEL_339;
  }
LABEL_331:
  *(_DWORD *)(a1 + 44) |= 8u;
  uint64_t v146 = *(std::string **)(a1 + 336);
  if (!v146)
  {
    uint64_t v147 = *(void *)(a1 + 8);
    uint64_t v148 = (void *)(v147 & 0xFFFFFFFFFFFFFFFCLL);
    if (v147) {
      uint64_t v148 = (void *)*v148;
    }
    uint64_t v146 = (std::string *)sub_18362C4((uint64_t)v148);
    *(void *)(a1 + 336) = v146;
  }
  if (*(void *)(a2 + 336)) {
    uint64_t v149 = *(uint64_t (****)())(a2 + 336);
  }
  else {
    uint64_t v149 = &off_254C298;
  }
  sub_132C740(v146, (uint64_t)v149);
  if ((v133 & 0x10) == 0)
  {
LABEL_303:
    if ((v133 & 0x20) == 0) {
      goto LABEL_304;
    }
    goto LABEL_347;
  }
LABEL_339:
  *(_DWORD *)(a1 + 44) |= 0x10u;
  unsigned int v150 = *(void **)(a1 + 344);
  if (!v150)
  {
    uint64_t v151 = *(void *)(a1 + 8);
    uint64_t v152 = (void *)(v151 & 0xFFFFFFFFFFFFFFFCLL);
    if (v151) {
      uint64_t v152 = (void *)*v152;
    }
    unsigned int v150 = sub_1836358((uint64_t)v152);
    *(void *)(a1 + 344) = v150;
  }
  if (*(void *)(a2 + 344)) {
    unsigned int v153 = *(uint64_t (****)())(a2 + 344);
  }
  else {
    unsigned int v153 = &off_254C2C0;
  }
  sub_1810408((uint64_t)v150, (uint64_t)v153);
  if ((v133 & 0x20) == 0)
  {
LABEL_304:
    if ((v133 & 0x40) == 0) {
      goto LABEL_305;
    }
    goto LABEL_355;
  }
LABEL_347:
  *(_DWORD *)(a1 + 44) |= 0x20u;
  uint64_t v154 = *(void *)(a1 + 352);
  if (!v154)
  {
    uint64_t v155 = *(void *)(a1 + 8);
    unsigned int v156 = (void *)(v155 & 0xFFFFFFFFFFFFFFFCLL);
    if (v155) {
      unsigned int v156 = (void *)*v156;
    }
    uint64_t v154 = sub_1332690((uint64_t)v156);
    *(void *)(a1 + 352) = v154;
  }
  if (*(void *)(a2 + 352)) {
    v157 = *(uint64_t (****)())(a2 + 352);
  }
  else {
    v157 = &off_25332F0;
  }
  sub_132EFF4(v154, (uint64_t)v157);
  if ((v133 & 0x40) == 0)
  {
LABEL_305:
    if ((v133 & 0x80) == 0) {
      goto LABEL_371;
    }
    goto LABEL_363;
  }
LABEL_355:
  *(_DWORD *)(a1 + 44) |= 0x40u;
  uint64_t v158 = *(void *)(a1 + 360);
  if (!v158)
  {
    uint64_t v159 = *(void *)(a1 + 8);
    v160 = (void *)(v159 & 0xFFFFFFFFFFFFFFFCLL);
    if (v159) {
      v160 = (void *)*v160;
    }
    uint64_t v158 = sub_18363F4((uint64_t)v160);
    *(void *)(a1 + 360) = v158;
  }
  if (*(void *)(a2 + 360)) {
    uint64_t v161 = *(uint64_t (****)())(a2 + 360);
  }
  else {
    uint64_t v161 = &off_254C2F8;
  }
  sub_1810C1C(v158, (uint64_t)v161);
  if ((v133 & 0x80) != 0)
  {
LABEL_363:
    *(_DWORD *)(a1 + 44) |= 0x80u;
    unsigned int v162 = *(std::string **)(a1 + 368);
    if (!v162)
    {
      uint64_t v163 = *(void *)(a1 + 8);
      uint64_t v164 = (void *)(v163 & 0xFFFFFFFFFFFFFFFCLL);
      if (v163) {
        uint64_t v164 = (void *)*v164;
      }
      unsigned int v162 = (std::string *)sub_18356B4((uint64_t)v164);
      *(void *)(a1 + 368) = v162;
    }
    if (*(void *)(a2 + 368)) {
      unsigned int v165 = *(uint64_t (****)())(a2 + 368);
    }
    else {
      unsigned int v165 = &off_254BF60;
    }
    sub_1804C08(v162, (uint64_t)v165);
  }
LABEL_371:
  if ((v133 & 0xFF00) == 0) {
    goto LABEL_445;
  }
  if ((v133 & 0x100) != 0)
  {
    *(_DWORD *)(a1 + 44) |= 0x100u;
    v166 = *(std::string **)(a1 + 376);
    if (!v166)
    {
      uint64_t v167 = *(void *)(a1 + 8);
      unsigned int v168 = (void *)(v167 & 0xFFFFFFFFFFFFFFFCLL);
      if (v167) {
        unsigned int v168 = (void *)*v168;
      }
      v166 = (std::string *)sub_18359EC((uint64_t)v168);
      *(void *)(a1 + 376) = v166;
    }
    if (*(void *)(a2 + 376)) {
      v169 = *(uint64_t (****)())(a2 + 376);
    }
    else {
      v169 = &off_254C018;
    }
    sub_11B0BDC(v166, (uint64_t)v169);
    if ((v133 & 0x200) == 0)
    {
LABEL_374:
      if ((v133 & 0x400) == 0) {
        goto LABEL_375;
      }
      goto LABEL_397;
    }
  }
  else if ((v133 & 0x200) == 0)
  {
    goto LABEL_374;
  }
  *(_DWORD *)(a1 + 44) |= 0x200u;
  uint64_t v170 = *(void *)(a1 + 384);
  if (!v170)
  {
    uint64_t v171 = *(void *)(a1 + 8);
    v172 = (void *)(v171 & 0xFFFFFFFFFFFFFFFCLL);
    if (v171) {
      v172 = (void *)*v172;
    }
    uint64_t v170 = sub_1830908((uint64_t)v172);
    *(void *)(a1 + 384) = v170;
  }
  if (*(void *)(a2 + 384)) {
    uint64_t v173 = *(uint64_t (****)())(a2 + 384);
  }
  else {
    uint64_t v173 = &off_2549D50;
  }
  sub_17A2EB0(v170, (uint64_t)v173);
  if ((v133 & 0x400) == 0)
  {
LABEL_375:
    if ((v133 & 0x800) == 0) {
      goto LABEL_376;
    }
    goto LABEL_405;
  }
LABEL_397:
  *(_DWORD *)(a1 + 44) |= 0x400u;
  uint64_t v174 = *(void *)(a1 + 392);
  if (!v174)
  {
    uint64_t v175 = *(void *)(a1 + 8);
    uint64_t v176 = (void *)(v175 & 0xFFFFFFFFFFFFFFFCLL);
    if (v175) {
      uint64_t v176 = (void *)*v176;
    }
    sub_18312F4((uint64_t)v176);
    *(void *)(a1 + 392) = v174;
  }
  if (*(void *)(a2 + 392)) {
    unsigned int v177 = *(uint64_t (****)())(a2 + 392);
  }
  else {
    unsigned int v177 = &off_254A118;
  }
  sub_17AD580(v174, (uint64_t)v177);
  if ((v133 & 0x800) == 0)
  {
LABEL_376:
    if ((v133 & 0x1000) == 0) {
      goto LABEL_377;
    }
    goto LABEL_413;
  }
LABEL_405:
  *(_DWORD *)(a1 + 44) |= 0x800u;
  uint64_t v178 = *(void *)(a1 + 400);
  if (!v178)
  {
    uint64_t v179 = *(void *)(a1 + 8);
    unsigned int v180 = (void *)(v179 & 0xFFFFFFFFFFFFFFFCLL);
    if (v179) {
      unsigned int v180 = (void *)*v180;
    }
    uint64_t v178 = sub_16213B0((uint64_t)v180);
    *(void *)(a1 + 400) = v178;
  }
  if (*(void *)(a2 + 400)) {
    v181 = *(uint64_t (****)())(a2 + 400);
  }
  else {
    v181 = &off_2541800;
  }
  sub_161E374(v178, (uint64_t)v181);
  if ((v133 & 0x1000) == 0)
  {
LABEL_377:
    if ((v133 & 0x2000) == 0) {
      goto LABEL_378;
    }
    goto LABEL_421;
  }
LABEL_413:
  *(_DWORD *)(a1 + 44) |= 0x1000u;
  uint64_t v182 = *(void *)(a1 + 408);
  if (!v182)
  {
    uint64_t v183 = *(void *)(a1 + 8);
    v184 = (void *)(v183 & 0xFFFFFFFFFFFFFFFCLL);
    if (v183) {
      v184 = (void *)*v184;
    }
    sub_1831060((uint64_t)v184);
    *(void *)(a1 + 408) = v182;
  }
  if (*(void *)(a2 + 408)) {
    uint64_t v185 = *(uint64_t (****)())(a2 + 408);
  }
  else {
    uint64_t v185 = &off_254A028;
  }
  sub_17AA2B0(v182, (uint64_t)v185);
  if ((v133 & 0x2000) == 0)
  {
LABEL_378:
    if ((v133 & 0x4000) == 0) {
      goto LABEL_379;
    }
    goto LABEL_429;
  }
LABEL_421:
  *(_DWORD *)(a1 + 44) |= 0x2000u;
  uint64_t v186 = *(void *)(a1 + 416);
  if (!v186)
  {
    uint64_t v187 = *(void *)(a1 + 8);
    uint64_t v188 = (void *)(v187 & 0xFFFFFFFFFFFFFFFCLL);
    if (v187) {
      uint64_t v188 = (void *)*v188;
    }
    sub_1830DCC((uint64_t)v188);
    *(void *)(a1 + 416) = v186;
  }
  if (*(void *)(a2 + 416)) {
    unsigned int v189 = *(uint64_t (****)())(a2 + 416);
  }
  else {
    unsigned int v189 = &off_2549F30;
  }
  sub_17A73B4(v186, (uint64_t)v189);
  if ((v133 & 0x4000) == 0)
  {
LABEL_379:
    if ((v133 & 0x8000) == 0) {
      goto LABEL_445;
    }
    goto LABEL_437;
  }
LABEL_429:
  *(_DWORD *)(a1 + 44) |= 0x4000u;
  v190 = *(std::string **)(a1 + 424);
  if (!v190)
  {
    uint64_t v191 = *(void *)(a1 + 8);
    v192 = (void *)(v191 & 0xFFFFFFFFFFFFFFFCLL);
    if (v191) {
      v192 = (void *)*v192;
    }
    v190 = (std::string *)sub_1833528((uint64_t)v192);
    *(void *)(a1 + 424) = v190;
  }
  if (*(void *)(a2 + 424)) {
    unint64_t v193 = *(uint64_t (****)())(a2 + 424);
  }
  else {
    unint64_t v193 = &off_254B108;
  }
  sub_13C37E4(v190, (uint64_t)v193);
  if ((v133 & 0x8000) != 0)
  {
LABEL_437:
    *(_DWORD *)(a1 + 44) |= 0x8000u;
    v194 = *(std::string **)(a1 + 432);
    if (!v194)
    {
      uint64_t v195 = *(void *)(a1 + 8);
      uint64_t v196 = (void *)(v195 & 0xFFFFFFFFFFFFFFFCLL);
      if (v195) {
        uint64_t v196 = (void *)*v196;
      }
      v194 = (std::string *)sub_1833630((uint64_t)v196);
      *(void *)(a1 + 432) = v194;
    }
    if (*(void *)(a2 + 432)) {
      v197 = *(uint64_t (****)())(a2 + 432);
    }
    else {
      v197 = &off_254B168;
    }
    sub_17DA0D0(v194, (uint64_t)v197);
  }
LABEL_445:
  if ((v133 & 0xFF0000) == 0) {
    goto LABEL_519;
  }
  if ((v133 & 0x10000) != 0)
  {
    *(_DWORD *)(a1 + 44) |= 0x10000u;
    v198 = *(void **)(a1 + 440);
    if (!v198)
    {
      uint64_t v199 = *(void *)(a1 + 8);
      v200 = (void *)(v199 & 0xFFFFFFFFFFFFFFFCLL);
      if (v199) {
        v200 = (void *)*v200;
      }
      v198 = sub_183680C((uint64_t)v200);
      *(void *)(a1 + 440) = v198;
    }
    if (*(void *)(a2 + 440)) {
      v201 = *(uint64_t (****)())(a2 + 440);
    }
    else {
      v201 = &off_254C418;
    }
    sub_1813E1C((uint64_t)v198, (uint64_t)v201);
    if ((v133 & 0x20000) == 0)
    {
LABEL_448:
      if ((v133 & 0x40000) == 0) {
        goto LABEL_449;
      }
      goto LABEL_471;
    }
  }
  else if ((v133 & 0x20000) == 0)
  {
    goto LABEL_448;
  }
  *(_DWORD *)(a1 + 44) |= 0x20000u;
  uint64_t v202 = *(void *)(a1 + 448);
  if (!v202)
  {
    uint64_t v203 = *(void *)(a1 + 8);
    v204 = (void *)(v203 & 0xFFFFFFFFFFFFFFFCLL);
    if (v203) {
      v204 = (void *)*v204;
    }
    uint64_t v202 = sub_1831AF8((uint64_t)v204);
    *(void *)(a1 + 448) = v202;
  }
  if (*(void *)(a2 + 448)) {
    v205 = *(uint64_t (****)())(a2 + 448);
  }
  else {
    v205 = &off_254A428;
  }
  sub_17B68C8(v202, (uint64_t)v205);
  if ((v133 & 0x40000) == 0)
  {
LABEL_449:
    if ((v133 & 0x80000) == 0) {
      goto LABEL_450;
    }
    goto LABEL_479;
  }
LABEL_471:
  *(_DWORD *)(a1 + 44) |= 0x40000u;
  uint64_t v206 = *(void *)(a1 + 456);
  if (!v206)
  {
    uint64_t v207 = *(void *)(a1 + 8);
    v208 = (void *)(v207 & 0xFFFFFFFFFFFFFFFCLL);
    if (v207) {
      v208 = (void *)*v208;
    }
    uint64_t v206 = sub_18314D4((uint64_t)v208);
    *(void *)(a1 + 456) = v206;
  }
  if (*(void *)(a2 + 456)) {
    v209 = *(uint64_t (****)())(a2 + 456);
  }
  else {
    v209 = &off_254A1F0;
  }
  sub_17AF868(v206, (uint64_t)v209);
  if ((v133 & 0x80000) == 0)
  {
LABEL_450:
    if ((v133 & 0x100000) == 0) {
      goto LABEL_451;
    }
    goto LABEL_487;
  }
LABEL_479:
  *(_DWORD *)(a1 + 44) |= 0x80000u;
  uint64_t v210 = *(void *)(a1 + 464);
  if (!v210)
  {
    uint64_t v211 = *(void *)(a1 + 8);
    v212 = (void *)(v211 & 0xFFFFFFFFFFFFFFFCLL);
    if (v211) {
      v212 = (void *)*v212;
    }
    sub_1831834((uint64_t)v212);
    *(void *)(a1 + 464) = v210;
  }
  if (*(void *)(a2 + 464)) {
    v213 = *(uint64_t (****)())(a2 + 464);
  }
  else {
    v213 = &off_254A318;
  }
  sub_17B336C(v210, (uint64_t)v213);
  if ((v133 & 0x100000) == 0)
  {
LABEL_451:
    if ((v133 & 0x200000) == 0) {
      goto LABEL_452;
    }
    goto LABEL_495;
  }
LABEL_487:
  *(_DWORD *)(a1 + 44) |= 0x100000u;
  uint64_t v214 = *(void *)(a1 + 472);
  if (!v214)
  {
    uint64_t v215 = *(void *)(a1 + 8);
    v216 = (void *)(v215 & 0xFFFFFFFFFFFFFFFCLL);
    if (v215) {
      v216 = (void *)*v216;
    }
    sub_1833748((uint64_t)v216);
    *(void *)(a1 + 472) = v214;
  }
  if (*(void *)(a2 + 472)) {
    v217 = *(uint64_t (****)())(a2 + 472);
  }
  else {
    v217 = &off_254B1B0;
  }
  sub_17DB55C(v214, (uint64_t)v217);
  if ((v133 & 0x200000) == 0)
  {
LABEL_452:
    if ((v133 & 0x400000) == 0) {
      goto LABEL_453;
    }
    goto LABEL_503;
  }
LABEL_495:
  *(_DWORD *)(a1 + 44) |= 0x200000u;
  uint64_t v218 = *(void *)(a1 + 480);
  if (!v218)
  {
    uint64_t v219 = *(void *)(a1 + 8);
    v220 = (void *)(v219 & 0xFFFFFFFFFFFFFFFCLL);
    if (v219) {
      v220 = (void *)*v220;
    }
    sub_1831DEC((uint64_t)v220);
    *(void *)(a1 + 480) = v218;
  }
  if (*(void *)(a2 + 480)) {
    v221 = *(uint64_t (****)())(a2 + 480);
  }
  else {
    v221 = &off_254A548;
  }
  sub_17B9BFC(v218, (uint64_t)v221);
  if ((v133 & 0x400000) == 0)
  {
LABEL_453:
    if ((v133 & 0x800000) == 0) {
      goto LABEL_519;
    }
    goto LABEL_511;
  }
LABEL_503:
  *(_DWORD *)(a1 + 44) |= 0x400000u;
  uint64_t v222 = *(void *)(a1 + 488);
  if (!v222)
  {
    uint64_t v223 = *(void *)(a1 + 8);
    v224 = (void *)(v223 & 0xFFFFFFFFFFFFFFFCLL);
    if (v223) {
      v224 = (void *)*v224;
    }
    uint64_t v222 = sub_1833258((uint64_t)v224);
    *(void *)(a1 + 488) = v222;
  }
  if (*(void *)(a2 + 488)) {
    v225 = *(uint64_t (****)())(a2 + 488);
  }
  else {
    v225 = &off_254AFB8;
  }
  sub_17D5FBC(v222, (uint64_t)v225);
  if ((v133 & 0x800000) != 0)
  {
LABEL_511:
    *(_DWORD *)(a1 + 44) |= 0x800000u;
    uint64_t v226 = *(void *)(a1 + 496);
    if (!v226)
    {
      uint64_t v227 = *(void *)(a1 + 8);
      v228 = (void *)(v227 & 0xFFFFFFFFFFFFFFFCLL);
      if (v227) {
        v228 = (void *)*v228;
      }
      uint64_t v226 = sub_1836920((uint64_t)v228);
      *(void *)(a1 + 496) = v226;
    }
    if (*(void *)(a2 + 496)) {
      v229 = *(uint64_t (****)())(a2 + 496);
    }
    else {
      v229 = &off_254C470;
    }
    sub_1814BA0(v226, (uint64_t)v229);
  }
LABEL_519:
  if ((v133 & 0x1F000000) == 0) {
    goto LABEL_566;
  }
  if ((v133 & 0x1000000) != 0)
  {
    *(_DWORD *)(a1 + 44) |= 0x1000000u;
    uint64_t v230 = *(void *)(a1 + 504);
    if (!v230)
    {
      uint64_t v231 = *(void *)(a1 + 8);
      v232 = (void *)(v231 & 0xFFFFFFFFFFFFFFFCLL);
      if (v231) {
        v232 = (void *)*v232;
      }
      uint64_t v230 = sub_1836A38((uint64_t)v232);
      *(void *)(a1 + 504) = v230;
    }
    if (*(void *)(a2 + 504)) {
      v233 = *(uint64_t (****)())(a2 + 504);
    }
    else {
      v233 = &off_254C4C0;
    }
    sub_1815988(v230, (uint64_t)v233);
    if ((v133 & 0x2000000) == 0)
    {
LABEL_522:
      if ((v133 & 0x4000000) == 0) {
        goto LABEL_523;
      }
      goto LABEL_542;
    }
  }
  else if ((v133 & 0x2000000) == 0)
  {
    goto LABEL_522;
  }
  *(_DWORD *)(a1 + 44) |= 0x2000000u;
  v234 = *(void **)(a1 + 512);
  if (!v234)
  {
    uint64_t v235 = *(void *)(a1 + 8);
    v236 = (void *)(v235 & 0xFFFFFFFFFFFFFFFCLL);
    if (v235) {
      v236 = (void *)*v236;
    }
    v234 = sub_1836B54((uint64_t)v236);
    *(void *)(a1 + 512) = v234;
  }
  if (*(void *)(a2 + 512)) {
    v237 = *(uint64_t (****)())(a2 + 512);
  }
  else {
    v237 = &off_254C518;
  }
  sub_18163D0((uint64_t)v234, (uint64_t)v237);
  if ((v133 & 0x4000000) == 0)
  {
LABEL_523:
    if ((v133 & 0x8000000) == 0) {
      goto LABEL_524;
    }
    goto LABEL_550;
  }
LABEL_542:
  *(_DWORD *)(a1 + 44) |= 0x4000000u;
  v238 = *(void **)(a1 + 520);
  if (!v238)
  {
    uint64_t v239 = *(void *)(a1 + 8);
    v240 = (void *)(v239 & 0xFFFFFFFFFFFFFFFCLL);
    if (v239) {
      v240 = (void *)*v240;
    }
    v238 = sub_1836494((uint64_t)v240);
    *(void *)(a1 + 520) = v238;
  }
  if (*(void *)(a2 + 520)) {
    v241 = *(uint64_t (****)())(a2 + 520);
  }
  else {
    v241 = &off_254C328;
  }
  sub_17A5EA8((uint64_t)v238, (uint64_t)v241);
  if ((v133 & 0x8000000) == 0)
  {
LABEL_524:
    if ((v133 & 0x10000000) == 0) {
      goto LABEL_566;
    }
    goto LABEL_558;
  }
LABEL_550:
  *(_DWORD *)(a1 + 44) |= 0x8000000u;
  uint64_t v242 = *(void *)(a1 + 528);
  if (!v242)
  {
    uint64_t v243 = *(void *)(a1 + 8);
    v244 = (void *)(v243 & 0xFFFFFFFFFFFFFFFCLL);
    if (v243) {
      v244 = (void *)*v244;
    }
    uint64_t v242 = sub_1833184((uint64_t)v244);
    *(void *)(a1 + 528) = v242;
  }
  if (*(void *)(a2 + 528)) {
    v245 = *(uint64_t (****)())(a2 + 528);
  }
  else {
    v245 = &off_254AF58;
  }
  sub_172E534(v242, (uint64_t)v245);
  if ((v133 & 0x10000000) != 0)
  {
LABEL_558:
    *(_DWORD *)(a1 + 44) |= 0x10000000u;
    v246 = *(void **)(a1 + 536);
    if (!v246)
    {
      uint64_t v247 = *(void *)(a1 + 8);
      v248 = (void *)(v247 & 0xFFFFFFFFFFFFFFFCLL);
      if (v247) {
        v248 = (void *)*v248;
      }
      v246 = sub_1836C44((uint64_t)v248);
      *(void *)(a1 + 536) = v246;
    }
    if (*(void *)(a2 + 536)) {
      v249 = *(uint64_t (****)())(a2 + 536);
    }
    else {
      v249 = &off_254C558;
    }
    sub_1817288((uint64_t)v246, (uint64_t)v249);
  }
LABEL_566:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v250 = *(void *)(a2 + 8);
  if (v250)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v250 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_1820A48(uint64_t a1)
{
  uint64_t result = sub_18856CC(a1 + 16);
  if (result)
  {
    int v3 = *(_DWORD *)(a1 + 40);
    if (v3)
    {
      uint64_t result = sub_1799934(*(void *)(a1 + 56));
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 2) != 0)
    {
      uint64_t result = sub_17D13B0(*(void *)(a1 + 64));
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 8) != 0)
    {
      uint64_t result = sub_17D3B9C(*(void *)(a1 + 80));
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 0x10) != 0)
    {
      uint64_t result = sub_17D4D38(*(void *)(a1 + 88));
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 0x20) != 0)
    {
      uint64_t v4 = *(void *)(a1 + 96);
      if ((*(unsigned char *)(v4 + 16) & 0x80) != 0)
      {
        uint64_t result = sub_15B06D8(*(void *)(v4 + 80));
        if (!result) {
          return result;
        }
        int v3 = *(_DWORD *)(a1 + 40);
      }
    }
    if ((v3 & 0x40) != 0)
    {
      uint64_t result = sub_17D88B4(*(void *)(a1 + 104));
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 0x80) != 0)
    {
      uint64_t result = sub_17E68E4(*(void *)(a1 + 112));
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 0x100) != 0)
    {
      uint64_t result = sub_17E8E14(*(void *)(a1 + 120));
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 0x200) != 0)
    {
      uint64_t result = sub_18021D4(*(void *)(a1 + 128));
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 0x400) != 0)
    {
      uint64_t result = sub_17A195C(*(void *)(a1 + 136));
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 0x800) != 0)
    {
      uint64_t result = sub_17C87B4(*(void *)(a1 + 144));
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 0x1000) != 0)
    {
      uint64_t result = sub_17CC510(*(void *)(a1 + 152));
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 0x2000) != 0)
    {
      uint64_t result = sub_17C2908(*(void *)(a1 + 160));
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 0x8000) != 0)
    {
      uint64_t result = sub_17CD8E0(*(void *)(a1 + 176));
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 0x10000) != 0)
    {
      uint64_t result = sub_17DD52C(*(void *)(a1 + 184));
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 0x20000) != 0)
    {
      uint64_t result = sub_17EAC84(*(void *)(a1 + 192));
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 0x40000) != 0)
    {
      uint64_t result = sub_17D2694(*(void *)(a1 + 200));
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 0x100000) != 0)
    {
      uint64_t v5 = *(void *)(a1 + 216);
      if ((*(unsigned char *)(v5 + 16) & 2) != 0)
      {
        uint64_t result = sub_15B06D8(*(void *)(v5 + 56));
        if (!result) {
          return result;
        }
        int v3 = *(_DWORD *)(a1 + 40);
      }
    }
    if ((v3 & 0x200000) != 0)
    {
      uint64_t result = sub_17EBE64(*(void *)(a1 + 224));
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 0x400000) != 0)
    {
      uint64_t result = sub_17D6ED4(*(void *)(a1 + 232));
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 0x800000) != 0)
    {
      uint64_t v6 = *(void *)(a1 + 240);
      if (*(unsigned char *)(v6 + 16))
      {
        uint64_t result = sub_15B06D8(*(void *)(v6 + 48));
        if (!result) {
          return result;
        }
        int v3 = *(_DWORD *)(a1 + 40);
      }
    }
    if ((v3 & 0x1000000) != 0)
    {
      uint64_t v7 = *(void *)(a1 + 248);
      uint64_t v8 = *(unsigned int *)(v7 + 24);
      while ((int)v8 >= 1)
      {
        uint64_t v9 = v8 - 1;
        char v10 = sub_15B06D8(*(void *)(*(void *)(v7 + 32) + 8 * v8));
        uint64_t result = 0;
        uint64_t v8 = v9;
        if ((v10 & 1) == 0) {
          return result;
        }
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 0x2000000) != 0)
    {
      uint64_t v11 = *(void *)(a1 + 256);
      uint64_t v12 = *(unsigned int *)(v11 + 24);
      while ((int)v12 >= 1)
      {
        uint64_t v13 = v12 - 1;
        char v14 = sub_15B0F18(*(void *)(*(void *)(v11 + 32) + 8 * v12));
        uint64_t result = 0;
        uint64_t v12 = v13;
        if ((v14 & 1) == 0) {
          return result;
        }
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 0x4000000) != 0)
    {
      uint64_t v15 = *(void *)(a1 + 264);
      uint64_t v16 = *(unsigned int *)(v15 + 48);
      while ((int)v16 >= 1)
      {
        uint64_t v17 = v16 - 1;
        BOOL v18 = sub_15B1FC0(*(void *)(*(void *)(v15 + 56) + 8 * v16));
        uint64_t result = 0;
        uint64_t v16 = v17;
        if (!v18) {
          return result;
        }
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 0x8000000) != 0)
    {
      uint64_t v19 = *(void *)(a1 + 272);
      uint64_t v20 = *(unsigned int *)(v19 + 32);
      while ((int)v20 >= 1)
      {
        uint64_t v21 = v20 - 1;
        char v22 = sub_15B0F18(*(void *)(*(void *)(v19 + 40) + 8 * v20));
        uint64_t result = 0;
        uint64_t v20 = v21;
        if ((v22 & 1) == 0) {
          return result;
        }
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 0x40000000) != 0)
    {
      uint64_t result = sub_180A24C(*(void *)(a1 + 296) + 24);
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 0x80000000) == 0
      || (uint64_t v23 = *(void *)(a1 + 304), (*(unsigned char *)(v23 + 16) & 1) == 0)
      || (uint64_t result = sub_15B06D8(*(void *)(v23 + 24)), result))
    {
      int v24 = *(_DWORD *)(a1 + 44);
      if ((v24 & 2) != 0)
      {
        uint64_t v25 = *(void *)(a1 + 320);
        if (*(unsigned char *)(v25 + 16))
        {
          uint64_t result = sub_15B06D8(*(void *)(v25 + 24));
          if (!result) {
            return result;
          }
          int v24 = *(_DWORD *)(a1 + 44);
        }
      }
      if ((v24 & 4) != 0)
      {
        uint64_t result = sub_180D624(*(void *)(a1 + 328));
        if (!result) {
          return result;
        }
        int v24 = *(_DWORD *)(a1 + 44);
      }
      if ((v24 & 0x10) != 0)
      {
        uint64_t result = sub_181052C(*(void *)(a1 + 344));
        if (!result) {
          return result;
        }
        int v24 = *(_DWORD *)(a1 + 44);
      }
      if ((v24 & 0x20) != 0)
      {
        uint64_t result = sub_132F100(*(void *)(a1 + 352));
        if (!result) {
          return result;
        }
        int v24 = *(_DWORD *)(a1 + 44);
      }
      if ((v24 & 0x40) != 0)
      {
        uint64_t v26 = *(void *)(a1 + 360);
        uint64_t v27 = *(unsigned int *)(v26 + 24);
        while ((int)v27 >= 1)
        {
          uint64_t v28 = v27 - 1;
          char v29 = sub_18856CC(*(void *)(*(void *)(v26 + 32) + 8 * v27) + 16);
          uint64_t result = 0;
          uint64_t v27 = v28;
          if ((v29 & 1) == 0) {
            return result;
          }
        }
        int v24 = *(_DWORD *)(a1 + 44);
      }
      if ((v24 & 0x200) != 0)
      {
        uint64_t result = sub_17A30B8(*(void *)(a1 + 384));
        if (!result) {
          return result;
        }
        int v24 = *(_DWORD *)(a1 + 44);
      }
      if ((v24 & 0x400) != 0)
      {
        uint64_t result = sub_17AD810(*(void *)(a1 + 392));
        if (!result) {
          return result;
        }
        int v24 = *(_DWORD *)(a1 + 44);
      }
      if ((v24 & 0x800) != 0)
      {
        uint64_t result = sub_161E444(*(void *)(a1 + 400));
        if (!result) {
          return result;
        }
        int v24 = *(_DWORD *)(a1 + 44);
      }
      if ((v24 & 0x1000) != 0)
      {
        uint64_t result = sub_17AA550(*(void *)(a1 + 408));
        if (!result) {
          return result;
        }
        int v24 = *(_DWORD *)(a1 + 44);
      }
      if ((v24 & 0x2000) != 0)
      {
        uint64_t result = sub_17A7654(*(void *)(a1 + 416));
        if (!result) {
          return result;
        }
        int v24 = *(_DWORD *)(a1 + 44);
      }
      if ((v24 & 0x8000) != 0)
      {
        uint64_t v30 = *(void *)(a1 + 432);
        uint64_t v31 = *(unsigned int *)(v30 + 24);
        while ((int)v31 >= 1)
        {
          uint64_t v32 = v31 - 1;
          BOOL v33 = sub_15B1450(*(void *)(*(void *)(v30 + 32) + 8 * v31));
          uint64_t result = 0;
          uint64_t v31 = v32;
          if (!v33) {
            return result;
          }
        }
        int v24 = *(_DWORD *)(a1 + 44);
      }
      if ((v24 & 0x10000) != 0)
      {
        uint64_t result = sub_1813F40(*(void *)(a1 + 440));
        if (!result) {
          return result;
        }
        int v24 = *(_DWORD *)(a1 + 44);
      }
      if ((v24 & 0x20000) != 0)
      {
        uint64_t v34 = *(void *)(a1 + 448);
        if (*(unsigned char *)(v34 + 16))
        {
          uint64_t result = sub_17A30B8(*(void *)(v34 + 24));
          if (!result) {
            return result;
          }
          int v24 = *(_DWORD *)(a1 + 44);
        }
      }
      if ((v24 & 0x40000) != 0)
      {
        uint64_t result = sub_17AF938(*(void *)(a1 + 456));
        if (!result) {
          return result;
        }
        int v24 = *(_DWORD *)(a1 + 44);
      }
      if ((v24 & 0x80000) != 0)
      {
        uint64_t result = sub_17B35A0(*(void *)(a1 + 464));
        if (!result) {
          return result;
        }
        int v24 = *(_DWORD *)(a1 + 44);
      }
      if ((v24 & 0x100000) != 0)
      {
        uint64_t result = sub_17DB780(*(void *)(a1 + 472));
        if (!result) {
          return result;
        }
        int v24 = *(_DWORD *)(a1 + 44);
      }
      if ((v24 & 0x200000) != 0)
      {
        uint64_t result = sub_17B9DBC(*(void *)(a1 + 480));
        if (!result) {
          return result;
        }
        int v24 = *(_DWORD *)(a1 + 44);
      }
      if ((v24 & 0x400000) != 0)
      {
        uint64_t result = sub_17D6098(*(void *)(a1 + 488));
        if (!result) {
          return result;
        }
        int v24 = *(_DWORD *)(a1 + 44);
      }
      if ((v24 & 0x800000) != 0)
      {
        uint64_t result = sub_1813F84(*(void *)(a1 + 496) + 16);
        if (!result) {
          return result;
        }
        int v24 = *(_DWORD *)(a1 + 44);
      }
      if ((v24 & 0x1000000) != 0)
      {
        uint64_t result = sub_1815AC8(*(void *)(a1 + 504));
        if (!result) {
          return result;
        }
        int v24 = *(_DWORD *)(a1 + 44);
      }
      if ((v24 & 0x2000000) != 0)
      {
        uint64_t v35 = *(void *)(a1 + 512);
        if (*(unsigned char *)(v35 + 16))
        {
          uint64_t result = sub_15B1FC0(*(void *)(v35 + 24));
          if (!result) {
            return result;
          }
          int v24 = *(_DWORD *)(a1 + 44);
        }
      }
      if ((v24 & 0x4000000) != 0)
      {
        uint64_t result = sub_1811290(*(void *)(a1 + 520));
        if (!result) {
          return result;
        }
        int v24 = *(_DWORD *)(a1 + 44);
      }
      if ((v24 & 0x8000000) != 0)
      {
        uint64_t result = sub_17D54BC(*(void *)(a1 + 528));
        if (!result) {
          return result;
        }
        int v24 = *(_DWORD *)(a1 + 44);
      }
      if ((v24 & 0x10000000) == 0) {
        return 1;
      }
      uint64_t result = sub_1817380(*(void *)(a1 + 536));
      if (result) {
        return 1;
      }
    }
  }
  return result;
}

void *sub_1820FCC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PlaceRequestParameters");
}

uint64_t sub_1820FDC(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = (uint64_t *)(a1 + 16);
  *(void *)a1 = off_24E0B18;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  int v6 = *(_DWORD *)(a2 + 24);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 32);
    uint64_t v8 = (std::string **)sub_188CCE4(a1 + 16, *(_DWORD *)(a2 + 24));
    sub_154B3BC(v5, v8, (uint64_t *)(v7 + 8), v6, **(_DWORD **)(a1 + 32) - *(_DWORD *)(a1 + 24));
    int v9 = *(_DWORD *)(a1 + 24) + v6;
    *(_DWORD *)(a1 + 24) = v9;
    char v10 = *(int **)(a1 + 32);
    if (*v10 < v9) {
      *char v10 = v9;
    }
  }
  *(_DWORD *)(a1 + 40) = 0;
  uint64_t v11 = *(void *)(a2 + 8);
  if (v11) {
    sub_188B4F8(v4, (v11 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return a1;
}

void sub_18210BC(_Unwind_Exception *a1)
{
  sub_154AEA8(v3);
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_1821100(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_154AEA8(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1821180(void *a1)
{
  sub_1821100(a1);

  operator delete();
}

uint64_t sub_18211B8(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 24);
  if ((int)v2 >= 1)
  {
    int v3 = (uint64_t *)(*(void *)(result + 32) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_175F27C(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 24) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = (uint64_t *)(v1 + 8);
  if (v6)
  {
    return sub_188B4AC(v5);
  }
  return result;
}

char *sub_1821234(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v19 = a2;
  if ((sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v5 = (void *)(a1 + 8);
    while (1)
    {
      char v6 = v19 + 1;
      unsigned int v7 = *v19;
      if (*v19 < 0)
      {
        unsigned int v8 = v7 + (*v6 << 7);
        unsigned int v7 = v8 - 128;
        if (*v6 < 0)
        {
          char v6 = (char *)sub_188C180((uint64_t)v19, v8 - 128);
          unsigned int v7 = v9;
        }
        else
        {
          char v6 = v19 + 2;
        }
      }
      uint64_t v19 = v6;
      if (v7 == 10)
      {
        uint64_t v12 = v6 - 1;
        while (1)
        {
          uint64_t v13 = (unsigned __int8 *)(v12 + 1);
          uint64_t v19 = v12 + 1;
          char v14 = *(_DWORD **)(a1 + 32);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 24), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 24) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            sub_178CAC0(*(void *)(a1 + 16));
            uint64_t v16 = sub_188CDC8(a1 + 16, v17);
            uint64_t v13 = (unsigned __int8 *)v19;
          }
          uint64_t v12 = sub_1540F48(a3, v16, v13);
          uint64_t v19 = v12;
          if (!v12) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_24;
          }
        }
      }
      if (!v7 || (v7 & 7) == 4) {
        break;
      }
      if (*v5)
      {
        uint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        uint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        char v6 = v19;
      }
      uint64_t v19 = (char *)sub_1885AC0(v7, v11, v6, a3);
      if (!v19) {
        return 0;
      }
LABEL_24:
      if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
        return v19;
      }
    }
    if (v6)
    {
      a3[10].i32[0] = v7 - 1;
      return v19;
    }
    return 0;
  }
  return v19;
}

char *sub_18213D4(uint64_t a1, char *__dst, unint64_t *a3)
{
  int v6 = *(_DWORD *)(a1 + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        char v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        char v10 = __dst + 2;
      }
      __dst = sub_175F720(v8, (unint64_t)v10, a3);
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return __dst;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    char v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    char v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if ((uint64_t)(*a3 - (void)__dst) >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(__dst, v14, (int)v15);
    __dst += v16;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, __dst);
}

uint64_t sub_1821518(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_175F998(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 40) = v2;
  return v2;
}

void sub_18215C8(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 32) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4(a1 + 16, *(_DWORD *)(a2 + 24));
    sub_154B3BC((uint64_t *)(a1 + 16), v6, v5, v4, **(_DWORD **)(a1 + 32) - *(_DWORD *)(a1 + 24));
    int v7 = *(_DWORD *)(a1 + 24) + v4;
    *(_DWORD *)(a1 + 24) = v7;
    uint64_t v8 = *(int **)(a1 + 32);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_1821698()
{
  return 1;
}

void *sub_18216A0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PlaceGlobalCommonResult");
}

uint64_t sub_18216B0(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  *(void *)(a1 + 8) = v4;
  *(void *)a1 = off_24E0B98;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = 0;
  *(_DWORD *)(a1 + 48) = 0;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  *(_OWORD *)(a1 + 168) = 0u;
  *(_OWORD *)(a1 + 184) = 0u;
  *(_OWORD *)(a1 + 200) = 0u;
  *(_OWORD *)(a1 + 216) = 0u;
  *(_OWORD *)(a1 + 232) = 0u;
  *(_OWORD *)(a1 + 248) = 0u;
  *(void *)(a1 + 504) = 0;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 264) = 0u;
  *(_OWORD *)(a1 + 280) = 0u;
  *(_OWORD *)(a1 + 296) = 0u;
  *(_OWORD *)(a1 + 312) = 0u;
  *(_OWORD *)(a1 + 328) = 0u;
  *(_OWORD *)(a1 + 344) = 0u;
  *(_OWORD *)(a1 + 360) = 0u;
  *(_OWORD *)(a1 + 376) = 0u;
  *(_OWORD *)(a1 + 392) = 0u;
  *(_OWORD *)(a1 + 408) = 0u;
  *(_OWORD *)(a1 + 424) = 0u;
  *(_OWORD *)(a1 + 440) = 0u;
  *(_OWORD *)(a1 + 456) = 0u;
  *(_OWORD *)(a1 + 472) = 0u;
  *(_OWORD *)(a1 + 488) = 0u;
  return a1;
}

void sub_1821778(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_18217A8(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  uint64_t v4 = a1 + 16;
  *(void *)a1 = off_24E0B98;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(_DWORD *)(a1 + 48) = 0;
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v4, a2 + 16);
  int v6 = *(_DWORD *)(a2 + 40);
  if (v6) {
    operator new();
  }
  *(void *)(a1 + 56) = 0;
  if ((v6 & 2) != 0) {
    operator new();
  }
  *(void *)(a1 + 64) = 0;
  if ((v6 & 4) != 0) {
    operator new();
  }
  *(void *)(a1 + 72) = 0;
  if ((v6 & 8) != 0) {
    operator new();
  }
  *(void *)(a1 + 80) = 0;
  if ((v6 & 0x10) != 0) {
    operator new();
  }
  *(void *)(a1 + 88) = 0;
  if ((v6 & 0x20) != 0) {
    operator new();
  }
  *(void *)(a1 + 96) = 0;
  if ((v6 & 0x40) != 0) {
    operator new();
  }
  *(void *)(a1 + 104) = 0;
  if ((v6 & 0x80) != 0) {
    operator new();
  }
  *(void *)(a1 + 112) = 0;
  if ((v6 & 0x100) != 0) {
    operator new();
  }
  *(void *)(a1 + 120) = 0;
  if ((v6 & 0x200) != 0) {
    operator new();
  }
  *(void *)(a1 + 128) = 0;
  if ((v6 & 0x400) != 0) {
    operator new();
  }
  *(void *)(a1 + 136) = 0;
  if ((v6 & 0x800) != 0) {
    operator new();
  }
  *(void *)(a1 + 144) = 0;
  if ((v6 & 0x1000) != 0) {
    operator new();
  }
  *(void *)(a1 + 152) = 0;
  if ((v6 & 0x2000) != 0) {
    operator new();
  }
  *(void *)(a1 + 160) = 0;
  if ((v6 & 0x4000) != 0) {
    operator new();
  }
  *(void *)(a1 + 168) = 0;
  if ((v6 & 0x8000) != 0) {
    operator new();
  }
  *(void *)(a1 + 176) = 0;
  if ((v6 & 0x10000) != 0) {
    operator new();
  }
  *(void *)(a1 + 184) = 0;
  if ((v6 & 0x20000) != 0) {
    operator new();
  }
  *(void *)(a1 + 192) = 0;
  if ((v6 & 0x40000) != 0) {
    operator new();
  }
  *(void *)(a1 + 200) = 0;
  if ((v6 & 0x80000) != 0) {
    operator new();
  }
  *(void *)(a1 + 208) = 0;
  if ((v6 & 0x100000) != 0) {
    operator new();
  }
  *(void *)(a1 + 216) = 0;
  if ((v6 & 0x200000) != 0) {
    operator new();
  }
  *(void *)(a1 + 224) = 0;
  if ((v6 & 0x400000) != 0) {
    operator new();
  }
  *(void *)(a1 + 232) = 0;
  if ((v6 & 0x800000) != 0) {
    operator new();
  }
  *(void *)(a1 + 240) = 0;
  if ((v6 & 0x1000000) != 0) {
    operator new();
  }
  *(void *)(a1 + 248) = 0;
  if ((v6 & 0x2000000) != 0) {
    operator new();
  }
  *(void *)(a1 + 256) = 0;
  if ((v6 & 0x4000000) != 0) {
    operator new();
  }
  *(void *)(a1 + 264) = 0;
  if ((v6 & 0x8000000) != 0) {
    operator new();
  }
  *(void *)(a1 + 272) = 0;
  if ((v6 & 0x10000000) != 0) {
    operator new();
  }
  *(void *)(a1 + 280) = 0;
  if ((v6 & 0x20000000) != 0) {
    operator new();
  }
  *(void *)(a1 + 288) = 0;
  if ((v6 & 0x40000000) != 0) {
    operator new();
  }
  *(void *)(a1 + 296) = 0;
  if (v6 < 0) {
    operator new();
  }
  *(void *)(a1 + 304) = 0;
  int v7 = *(_DWORD *)(a2 + 44);
  if (v7) {
    operator new();
  }
  *(void *)(a1 + 312) = 0;
  if ((v7 & 2) != 0) {
    operator new();
  }
  *(void *)(a1 + 320) = 0;
  if ((v7 & 4) != 0) {
    operator new();
  }
  *(void *)(a1 + 328) = 0;
  if ((v7 & 8) != 0) {
    operator new();
  }
  *(void *)(a1 + 336) = 0;
  if ((v7 & 0x10) != 0) {
    operator new();
  }
  *(void *)(a1 + 344) = 0;
  if ((v7 & 0x20) != 0) {
    operator new();
  }
  *(void *)(a1 + 352) = 0;
  if ((v7 & 0x40) != 0) {
    operator new();
  }
  *(void *)(a1 + 360) = 0;
  if ((v7 & 0x80) != 0) {
    operator new();
  }
  *(void *)(a1 + 368) = 0;
  if ((v7 & 0x100) != 0) {
    operator new();
  }
  *(void *)(a1 + 376) = 0;
  if ((v7 & 0x200) != 0) {
    operator new();
  }
  *(void *)(a1 + 384) = 0;
  if ((v7 & 0x400) != 0) {
    operator new();
  }
  *(void *)(a1 + 392) = 0;
  if ((v7 & 0x800) != 0) {
    operator new();
  }
  *(void *)(a1 + 400) = 0;
  if ((v7 & 0x1000) != 0) {
    operator new();
  }
  *(void *)(a1 + 408) = 0;
  if ((v7 & 0x2000) != 0) {
    operator new();
  }
  *(void *)(a1 + 416) = 0;
  if ((v7 & 0x4000) != 0) {
    operator new();
  }
  *(void *)(a1 + 424) = 0;
  if ((v7 & 0x8000) != 0) {
    operator new();
  }
  *(void *)(a1 + 432) = 0;
  if ((v7 & 0x10000) != 0) {
    operator new();
  }
  *(void *)(a1 + 440) = 0;
  if ((v7 & 0x20000) != 0) {
    operator new();
  }
  *(void *)(a1 + 448) = 0;
  if ((v7 & 0x40000) != 0) {
    operator new();
  }
  *(void *)(a1 + 456) = 0;
  if ((v7 & 0x80000) != 0) {
    operator new();
  }
  *(void *)(a1 + 464) = 0;
  if ((v7 & 0x100000) != 0) {
    operator new();
  }
  *(void *)(a1 + 472) = 0;
  if ((v7 & 0x200000) != 0) {
    operator new();
  }
  *(void *)(a1 + 480) = 0;
  if ((v7 & 0x400000) != 0) {
    operator new();
  }
  *(void *)(a1 + 488) = 0;
  if ((v7 & 0x800000) != 0) {
    operator new();
  }
  *(void *)(a1 + 496) = 0;
  if ((v7 & 0x1000000) != 0) {
    operator new();
  }
  *(void *)(a1 + 504) = 0;
  return a1;
}

void sub_18224BC()
{
}

uint64_t sub_1822740(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_18227CC((uint64_t (***)())a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

uint64_t (***sub_18227CC(uint64_t (***result)()))()
{
  if (result != &off_254C818)
  {
    uint64_t v1 = result;
    uint64_t v2 = result[7];
    if (v2)
    {
      sub_179B820(v2);
      operator delete();
    }
    uint64_t v3 = v1[8];
    if (v3)
    {
      sub_17D1628(v3);
      operator delete();
    }
    uint64_t v4 = v1[9];
    if (v4)
    {
      sub_17D0024(v4);
      operator delete();
    }
    uint64_t v5 = v1[10];
    if (v5)
    {
      sub_17D3D9C(v5);
      operator delete();
    }
    int v6 = v1[11];
    if (v6)
    {
      sub_17D55D0(v6);
      operator delete();
    }
    uint64_t v7 = (uint64_t)v1[12];
    if (v7)
    {
      sub_17E24D4(v7);
      operator delete();
    }
    uint64_t v8 = v1[13];
    if (v8)
    {
      sub_17D89C0(v8);
      operator delete();
    }
    uint64_t v9 = v1[14];
    if (v9)
    {
      sub_17E6B5C(v9);
      operator delete();
    }
    uint64_t v10 = (uint64_t)v1[15];
    if (v10)
    {
      sub_17E906C(v10);
      operator delete();
    }
    uint64_t v11 = (uint64_t)v1[16];
    if (v11)
    {
      sub_17F2034(v11);
      operator delete();
    }
    uint64_t v12 = v1[17];
    if (v12)
    {
      sub_17A1B38(v12);
      operator delete();
    }
    uint64_t v13 = (uint64_t)v1[18];
    if (v13)
    {
      sub_17C90AC(v13);
      operator delete();
    }
    uint64_t v14 = (uint64_t)v1[19];
    if (v14)
    {
      sub_17CC694(v14);
      operator delete();
    }
    uint64_t v15 = v1[20];
    if (v15)
    {
      sub_17C2B18(v15);
      operator delete();
    }
    uint64_t v16 = (uint64_t)v1[21];
    if (v16)
    {
      sub_17CF6F4(v16);
      operator delete();
    }
    uint64_t v17 = v1[22];
    if (v17)
    {
      sub_17CE978(v17);
      operator delete();
    }
    BOOL v18 = v1[23];
    if (v18)
    {
      sub_17DD624(v18);
      operator delete();
    }
    uint64_t v19 = v1[24];
    if (v19)
    {
      sub_17EAE30(v19);
      operator delete();
    }
    uint64_t v20 = v1[25];
    if (v20)
    {
      sub_17D28E4(v20);
      operator delete();
    }
    uint64_t v21 = v1[26];
    if (v21)
    {
      sub_17C43BC(v21);
      operator delete();
    }
    uint64_t v22 = (uint64_t)v1[27];
    if (v22)
    {
      sub_17E3698(v22);
      operator delete();
    }
    uint64_t v23 = v1[28];
    if (v23)
    {
      sub_17EC01C(v23);
      operator delete();
    }
    int v24 = v1[29];
    if (v24)
    {
      sub_17D6FE8(v24);
      operator delete();
    }
    uint64_t v25 = v1[30];
    if (v25)
    {
      sub_17ECF1C(v25);
      operator delete();
    }
    uint64_t v26 = v1[31];
    if (v26)
    {
      sub_1802DAC(v26);
      operator delete();
    }
    uint64_t v27 = v1[32];
    if (v27)
    {
      sub_1803AC0(v27);
      operator delete();
    }
    uint64_t v28 = v1[33];
    if (v28)
    {
      sub_17EDEB8(v28);
      operator delete();
    }
    char v29 = v1[34];
    if (v29)
    {
      sub_17EEB28(v29);
      operator delete();
    }
    uint64_t v30 = v1[35];
    if (v30)
    {
      sub_18042D0(v30);
      operator delete();
    }
    uint64_t v31 = v1[36];
    if (v31)
    {
      sub_17EF858(v31);
      operator delete();
    }
    uint64_t v32 = v1[37];
    if (v32)
    {
      sub_180A384(v32);
      operator delete();
    }
    BOOL v33 = v1[38];
    if (v33)
    {
      sub_180ACF8(v33);
      operator delete();
    }
    uint64_t v34 = (uint64_t)v1[39];
    if (v34)
    {
      sub_180B608(v34);
      operator delete();
    }
    uint64_t v35 = v1[40];
    if (v35)
    {
      sub_180C8F4(v35);
      operator delete();
    }
    uint64_t v36 = v1[41];
    if (v36)
    {
      sub_180EBF8(v36);
      operator delete();
    }
    uint64_t v37 = v1[42];
    if (v37)
    {
      sub_1821100(v37);
      operator delete();
    }
    uint64_t v38 = (uint64_t)v1[43];
    if (v38)
    {
      sub_1812218(v38);
      operator delete();
    }
    uint64_t v39 = v1[44];
    if (v39)
    {
      sub_1811E60(v39);
      operator delete();
    }
    uint64_t v40 = v1[45];
    if (v40)
    {
      sub_1812F50(v40);
      operator delete();
    }
    uint64_t v41 = v1[46];
    if (v41)
    {
      sub_18073C0(v41);
      operator delete();
    }
    uint64_t v42 = v1[47];
    if (v42)
    {
      sub_1808230(v42);
      operator delete();
    }
    uint64_t v43 = v1[48];
    if (v43)
    {
      sub_17AEB44(v43);
      operator delete();
    }
    uint64_t v44 = (uint64_t)v1[49];
    if (v44)
    {
      sub_17A32E8(v44);
      operator delete();
    }
    uint64_t v45 = v1[50];
    if (v45)
    {
      sub_17ABB58(v45);
      operator delete();
    }
    uint64_t v46 = (uint64_t)v1[51];
    if (v46)
    {
      sub_17A8D68(v46);
      operator delete();
    }
    uint64_t v47 = v1[52];
    if (v47)
    {
      sub_17D9828(v47);
      operator delete();
    }
    uint64_t v48 = v1[53];
    if (v48)
    {
      sub_17DA2A4(v48);
      operator delete();
    }
    uint64_t v49 = v1[54];
    if (v49)
    {
      sub_17B7618(v49);
      operator delete();
    }
    uint64_t v50 = (uint64_t)v1[55];
    if (v50)
    {
      sub_17B0B5C(v50);
      operator delete();
    }
    uint64_t v51 = (uint64_t)v1[56];
    if (v51)
    {
      sub_17B56A4(v51);
      operator delete();
    }
    uint64_t v52 = (uint64_t)v1[57];
    if (v52)
    {
      sub_17DB8C0(v52);
      operator delete();
    }
    uint64_t v53 = (uint64_t)v1[58];
    if (v53)
    {
      sub_17C1500(v53);
      operator delete();
    }
    uint64_t v54 = v1[59];
    if (v54)
    {
      sub_17D61AC(v54);
      operator delete();
    }
    uint64_t v55 = v1[60];
    if (v55)
    {
      sub_1815BDC(v55);
      operator delete();
    }
    uint64_t v56 = (uint64_t)v1[61];
    if (v56)
    {
      sub_18165B0(v56);
      operator delete();
    }
    uint64_t v57 = (uint64_t)v1[62];
    if (v57)
    {
      sub_1811810(v57);
      operator delete();
    }
    uint64_t result = (uint64_t (***)())v1[63];
    if (result)
    {
      sub_181753C(result);
      operator delete();
    }
  }
  return result;
}

void sub_1822F38(uint64_t a1)
{
  sub_1822740(a1);

  operator delete();
}

uint64_t *sub_1822F70(uint64_t a1)
{
  uint64_t result = (uint64_t *)sub_18843A4((unsigned char *)(a1 + 16));
  unsigned int v3 = *(_DWORD *)(a1 + 40);
  if (!(_BYTE)v3) {
    goto LABEL_22;
  }
  if (v3)
  {
    uint64_t result = (uint64_t *)sub_179BB88(*(void *)(a1 + 56));
    if ((v3 & 2) == 0)
    {
LABEL_4:
      if ((v3 & 4) == 0) {
        goto LABEL_10;
      }
LABEL_8:
      uint64_t v4 = *(void *)(a1 + 72);
      char v5 = *(unsigned char *)(v4 + 8);
      uint64_t result = (uint64_t *)(v4 + 8);
      if (v5) {
        uint64_t result = (uint64_t *)sub_188B4AC(result);
      }
      goto LABEL_10;
    }
  }
  else if ((v3 & 2) == 0)
  {
    goto LABEL_4;
  }
  uint64_t result = (uint64_t *)sub_17D16E8(*(void *)(a1 + 64));
  if ((v3 & 4) != 0) {
    goto LABEL_8;
  }
LABEL_10:
  if ((v3 & 8) != 0) {
    uint64_t result = (uint64_t *)sub_17D3E50(*(void *)(a1 + 80));
  }
  if ((v3 & 0x10) != 0)
  {
    uint64_t v6 = *(void *)(a1 + 88);
    char v7 = *(unsigned char *)(v6 + 8);
    uint64_t result = (uint64_t *)(v6 + 8);
    if (v7) {
      uint64_t result = (uint64_t *)sub_188B4AC(result);
    }
  }
  if ((v3 & 0x20) != 0) {
    uint64_t result = (uint64_t *)sub_17E25C4(*(void *)(a1 + 96));
  }
  if ((v3 & 0x40) != 0)
  {
    uint64_t v8 = *(void *)(a1 + 104);
    char v9 = *(unsigned char *)(v8 + 8);
    uint64_t result = (uint64_t *)(v8 + 8);
    if (v9) {
      uint64_t result = (uint64_t *)sub_188B4AC(result);
    }
  }
  if ((v3 & 0x80) != 0) {
    uint64_t result = (uint64_t *)sub_17E6C20(*(void *)(a1 + 112));
  }
LABEL_22:
  if ((v3 & 0xFF00) == 0) {
    goto LABEL_32;
  }
  if ((v3 & 0x100) != 0)
  {
    uint64_t result = (uint64_t *)sub_17E9180(*(void *)(a1 + 120));
    if ((v3 & 0x200) == 0)
    {
LABEL_25:
      if ((v3 & 0x400) == 0) {
        goto LABEL_26;
      }
      goto LABEL_45;
    }
  }
  else if ((v3 & 0x200) == 0)
  {
    goto LABEL_25;
  }
  uint64_t result = (uint64_t *)sub_17F2188(*(void *)(a1 + 128));
  if ((v3 & 0x400) == 0)
  {
LABEL_26:
    if ((v3 & 0x800) == 0) {
      goto LABEL_27;
    }
    goto LABEL_46;
  }
LABEL_45:
  uint64_t result = (uint64_t *)sub_17A1BF0(*(void *)(a1 + 136));
  if ((v3 & 0x800) == 0)
  {
LABEL_27:
    if ((v3 & 0x1000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_47;
  }
LABEL_46:
  uint64_t result = (uint64_t *)sub_17C9398(*(void *)(a1 + 144));
  if ((v3 & 0x1000) == 0)
  {
LABEL_28:
    if ((v3 & 0x2000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_48;
  }
LABEL_47:
  uint64_t result = (uint64_t *)sub_17CC798(*(unsigned char **)(a1 + 152));
  if ((v3 & 0x2000) == 0)
  {
LABEL_29:
    if ((v3 & 0x4000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_49;
  }
LABEL_48:
  uint64_t result = (uint64_t *)sub_17C2BDC(*(void *)(a1 + 160));
  if ((v3 & 0x4000) == 0)
  {
LABEL_30:
    if ((v3 & 0x8000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_31;
  }
LABEL_49:
  uint64_t result = (uint64_t *)sub_17CF7CC(*(void *)(a1 + 168));
  if ((v3 & 0x8000) != 0) {
LABEL_31:
  }
    uint64_t result = (uint64_t *)sub_17CEA30(*(void *)(a1 + 176));
LABEL_32:
  if ((v3 & 0xFF0000) == 0) {
    goto LABEL_61;
  }
  if ((v3 & 0x10000) != 0)
  {
    uint64_t v10 = *(void *)(a1 + 184);
    char v11 = *(unsigned char *)(v10 + 8);
    uint64_t result = (uint64_t *)(v10 + 8);
    if (v11) {
      uint64_t result = (uint64_t *)sub_188B4AC(result);
    }
  }
  if ((v3 & 0x20000) != 0)
  {
    uint64_t result = (uint64_t *)sub_17EAEE4(*(void *)(a1 + 192));
    if ((v3 & 0x40000) == 0)
    {
LABEL_38:
      if ((v3 & 0x80000) == 0) {
        goto LABEL_39;
      }
      goto LABEL_53;
    }
  }
  else if ((v3 & 0x40000) == 0)
  {
    goto LABEL_38;
  }
  uint64_t result = (uint64_t *)sub_17D29A4(*(void *)(a1 + 200));
  if ((v3 & 0x80000) == 0)
  {
LABEL_39:
    if ((v3 & 0x100000) == 0) {
      goto LABEL_40;
    }
    goto LABEL_54;
  }
LABEL_53:
  uint64_t result = (uint64_t *)sub_17C4474(*(void *)(a1 + 208));
  if ((v3 & 0x100000) == 0)
  {
LABEL_40:
    if ((v3 & 0x200000) == 0) {
      goto LABEL_41;
    }
    goto LABEL_55;
  }
LABEL_54:
  uint64_t result = (uint64_t *)sub_17E3770(*(void *)(a1 + 216));
  if ((v3 & 0x200000) == 0)
  {
LABEL_41:
    if ((v3 & 0x400000) == 0) {
      goto LABEL_58;
    }
LABEL_56:
    uint64_t v12 = *(void *)(a1 + 232);
    char v13 = *(unsigned char *)(v12 + 8);
    uint64_t result = (uint64_t *)(v12 + 8);
    if (v13) {
      uint64_t result = (uint64_t *)sub_188B4AC(result);
    }
    goto LABEL_58;
  }
LABEL_55:
  uint64_t result = (uint64_t *)sub_17EC0D0(*(void *)(a1 + 224));
  if ((v3 & 0x400000) != 0) {
    goto LABEL_56;
  }
LABEL_58:
  if ((v3 & 0x800000) != 0)
  {
    uint64_t v14 = *(void *)(a1 + 240);
    char v15 = *(unsigned char *)(v14 + 8);
    uint64_t result = (uint64_t *)(v14 + 8);
    if (v15) {
      uint64_t result = (uint64_t *)sub_188B4AC(result);
    }
  }
LABEL_61:
  if (HIBYTE(v3))
  {
    if ((v3 & 0x1000000) != 0)
    {
      uint64_t v16 = *(void *)(a1 + 248);
      char v17 = *(unsigned char *)(v16 + 8);
      uint64_t result = (uint64_t *)(v16 + 8);
      if (v17) {
        uint64_t result = (uint64_t *)sub_188B4AC(result);
      }
    }
    if ((v3 & 0x2000000) != 0)
    {
      uint64_t v18 = *(void *)(a1 + 256);
      char v19 = *(unsigned char *)(v18 + 8);
      uint64_t result = (uint64_t *)(v18 + 8);
      if (v19) {
        uint64_t result = (uint64_t *)sub_188B4AC(result);
      }
    }
    if ((v3 & 0x4000000) != 0)
    {
      uint64_t v20 = *(void *)(a1 + 264);
      char v21 = *(unsigned char *)(v20 + 8);
      uint64_t result = (uint64_t *)(v20 + 8);
      if (v21) {
        uint64_t result = (uint64_t *)sub_188B4AC(result);
      }
    }
    if ((v3 & 0x8000000) != 0) {
      uint64_t result = (uint64_t *)sub_17EEBE0(*(unsigned char **)(a1 + 272));
    }
    if ((v3 & 0x10000000) != 0)
    {
      uint64_t v22 = *(void *)(a1 + 280);
      char v23 = *(unsigned char *)(v22 + 8);
      uint64_t result = (uint64_t *)(v22 + 8);
      if (v23) {
        uint64_t result = (uint64_t *)sub_188B4AC(result);
      }
    }
    if ((v3 & 0x20000000) != 0)
    {
      uint64_t v24 = *(void *)(a1 + 288);
      char v25 = *(unsigned char *)(v24 + 8);
      uint64_t result = (uint64_t *)(v24 + 8);
      if (v25) {
        uint64_t result = (uint64_t *)sub_188B4AC(result);
      }
    }
    if ((v3 & 0x40000000) != 0)
    {
      uint64_t v26 = *(void *)(a1 + 296);
      char v27 = *(unsigned char *)(v26 + 8);
      uint64_t result = (uint64_t *)(v26 + 8);
      if (v27) {
        uint64_t result = (uint64_t *)sub_188B4AC(result);
      }
    }
    if ((v3 & 0x80000000) != 0)
    {
      uint64_t v28 = *(void *)(a1 + 304);
      char v29 = *(unsigned char *)(v28 + 8);
      uint64_t result = (uint64_t *)(v28 + 8);
      if (v29) {
        uint64_t result = (uint64_t *)sub_188B4AC(result);
      }
    }
  }
  int v30 = *(_DWORD *)(a1 + 44);
  if ((_BYTE)v30)
  {
    if (v30) {
      uint64_t result = (uint64_t *)sub_180B73C(*(unsigned char **)(a1 + 312));
    }
    if ((v30 & 2) != 0)
    {
      uint64_t v31 = *(void *)(a1 + 320);
      char v32 = *(unsigned char *)(v31 + 8);
      uint64_t result = (uint64_t *)(v31 + 8);
      if (v32) {
        uint64_t result = (uint64_t *)sub_188B4AC(result);
      }
    }
    if ((v30 & 4) != 0)
    {
      uint64_t result = (uint64_t *)sub_180ECBC(*(void *)(a1 + 328));
      if ((v30 & 8) == 0)
      {
LABEL_93:
        if ((v30 & 0x10) == 0) {
          goto LABEL_94;
        }
        goto LABEL_98;
      }
    }
    else if ((v30 & 8) == 0)
    {
      goto LABEL_93;
    }
    uint64_t result = (uint64_t *)sub_18211B8(*(void *)(a1 + 336));
    if ((v30 & 0x10) == 0)
    {
LABEL_94:
      if ((v30 & 0x20) == 0) {
        goto LABEL_101;
      }
      goto LABEL_99;
    }
LABEL_98:
    uint64_t result = (uint64_t *)sub_1812308(*(void *)(a1 + 344));
    if ((v30 & 0x20) == 0)
    {
LABEL_101:
      if ((v30 & 0x40) != 0) {
        uint64_t result = (uint64_t *)sub_1813008(*(void *)(a1 + 360));
      }
      if ((v30 & 0x80) != 0) {
        uint64_t result = (uint64_t *)sub_1807478(*(void *)(a1 + 368));
      }
      goto LABEL_105;
    }
LABEL_99:
    uint64_t v33 = *(void *)(a1 + 352);
    char v34 = *(unsigned char *)(v33 + 8);
    uint64_t result = (uint64_t *)(v33 + 8);
    if (v34) {
      uint64_t result = (uint64_t *)sub_188B4AC(result);
    }
    goto LABEL_101;
  }
LABEL_105:
  if ((v30 & 0xFF00) == 0) {
    goto LABEL_126;
  }
  if ((v30 & 0x100) != 0)
  {
    uint64_t v35 = *(void *)(a1 + 376);
    char v36 = *(unsigned char *)(v35 + 8);
    uint64_t result = (uint64_t *)(v35 + 8);
    if (v36) {
      uint64_t result = (uint64_t *)sub_188B4AC(result);
    }
  }
  if ((v30 & 0x200) != 0)
  {
    uint64_t result = (uint64_t *)sub_17AEBFC(*(void *)(a1 + 384));
    if ((v30 & 0x400) == 0)
    {
LABEL_111:
      if ((v30 & 0x800) == 0) {
        goto LABEL_112;
      }
      goto LABEL_117;
    }
  }
  else if ((v30 & 0x400) == 0)
  {
    goto LABEL_111;
  }
  uint64_t result = (uint64_t *)sub_17A33E4(*(void *)(a1 + 392));
  if ((v30 & 0x800) == 0)
  {
LABEL_112:
    if ((v30 & 0x1000) == 0) {
      goto LABEL_113;
    }
LABEL_118:
    uint64_t result = (uint64_t *)sub_17A8E70(*(void *)(a1 + 408));
    if ((v30 & 0x2000) == 0) {
      goto LABEL_121;
    }
LABEL_119:
    uint64_t v37 = *(void *)(a1 + 416);
    char v38 = *(unsigned char *)(v37 + 8);
    uint64_t result = (uint64_t *)(v37 + 8);
    if (v38) {
      uint64_t result = (uint64_t *)sub_188B4AC(result);
    }
    goto LABEL_121;
  }
LABEL_117:
  uint64_t result = (uint64_t *)sub_17ABC1C(*(void *)(a1 + 400));
  if ((v30 & 0x1000) != 0) {
    goto LABEL_118;
  }
LABEL_113:
  if ((v30 & 0x2000) != 0) {
    goto LABEL_119;
  }
LABEL_121:
  if ((v30 & 0x4000) != 0)
  {
    uint64_t v39 = *(void *)(a1 + 424);
    char v40 = *(unsigned char *)(v39 + 8);
    uint64_t result = (uint64_t *)(v39 + 8);
    if (v40) {
      uint64_t result = (uint64_t *)sub_188B4AC(result);
    }
  }
  if ((v30 & 0x8000) != 0) {
    uint64_t result = (uint64_t *)sub_17B76D0(*(void *)(a1 + 432));
  }
LABEL_126:
  if ((v30 & 0xFF0000) == 0) {
    goto LABEL_146;
  }
  if ((v30 & 0x10000) != 0)
  {
    uint64_t result = (uint64_t *)sub_17B0C40(*(void *)(a1 + 440));
    if ((v30 & 0x20000) == 0)
    {
LABEL_129:
      if ((v30 & 0x40000) == 0) {
        goto LABEL_130;
      }
      goto LABEL_135;
    }
  }
  else if ((v30 & 0x20000) == 0)
  {
    goto LABEL_129;
  }
  uint64_t result = (uint64_t *)sub_17B57D8(*(void *)(a1 + 448));
  if ((v30 & 0x40000) == 0)
  {
LABEL_130:
    if ((v30 & 0x80000) == 0) {
      goto LABEL_131;
    }
LABEL_136:
    uint64_t result = (uint64_t *)sub_17C15FC(*(void *)(a1 + 464));
    if ((v30 & 0x100000) == 0) {
      goto LABEL_139;
    }
LABEL_137:
    uint64_t v41 = *(void *)(a1 + 472);
    char v42 = *(unsigned char *)(v41 + 8);
    uint64_t result = (uint64_t *)(v41 + 8);
    if (v42) {
      uint64_t result = (uint64_t *)sub_188B4AC(result);
    }
    goto LABEL_139;
  }
LABEL_135:
  uint64_t result = (uint64_t *)sub_17DB998(*(void *)(a1 + 456));
  if ((v30 & 0x80000) != 0) {
    goto LABEL_136;
  }
LABEL_131:
  if ((v30 & 0x100000) != 0) {
    goto LABEL_137;
  }
LABEL_139:
  if ((v30 & 0x200000) != 0)
  {
    uint64_t v43 = *(void *)(a1 + 480);
    char v44 = *(unsigned char *)(v43 + 8);
    uint64_t result = (uint64_t *)(v43 + 8);
    if (v44) {
      uint64_t result = (uint64_t *)sub_188B4AC(result);
    }
  }
  if ((v30 & 0x400000) != 0) {
    uint64_t result = (uint64_t *)sub_18166A0(*(void *)(a1 + 488));
  }
  if ((v30 & 0x800000) != 0) {
    uint64_t result = (uint64_t *)sub_1811900(*(void *)(a1 + 496));
  }
LABEL_146:
  if ((v30 & 0x1000000) != 0) {
    uint64_t result = (uint64_t *)sub_18175F0(*(void *)(a1 + 504));
  }
  char v46 = *(unsigned char *)(a1 + 8);
  uint64_t v45 = (uint64_t *)(a1 + 8);
  v45[4] = 0;
  if (v46)
  {
    return (uint64_t *)sub_188B4AC(v45);
  }
  return result;
}

char *sub_18233CC(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v128 = a2;
  if (sub_11947B8((uint64_t)a3, &v128, a3[11].i32[1])) {
    return v128;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    char v7 = v128 + 1;
    unsigned int v8 = *v128;
    if (*v128 < 0)
    {
      unsigned int v8 = v8 + (*v7 << 7) - 128;
      if (*v7 < 0) {
        char v7 = (char *)sub_188C180((uint64_t)v128, v8);
      }
      else {
        char v7 = v128 + 2;
      }
    }
    uint64_t v128 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 10) {
          goto LABEL_351;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        uint64_t v9 = *(void *)(a1 + 56);
        if (!v9)
        {
          uint64_t v10 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v10 = (void *)*v10;
          }
          uint64_t v9 = sub_18306D8((uint64_t)v10);
          *(void *)(a1 + 56) = v9;
          char v7 = v128;
        }
        char v11 = (char *)sub_1824814(a3, v9, (unsigned __int8 *)v7);
        goto LABEL_360;
      case 2u:
        if (v8 != 18) {
          goto LABEL_351;
        }
        *(_DWORD *)(a1 + 40) |= 2u;
        uint64_t v12 = *(void *)(a1 + 64);
        if (!v12)
        {
          char v13 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            char v13 = (void *)*v13;
          }
          uint64_t v12 = sub_1832F5C((uint64_t)v13);
          *(void *)(a1 + 64) = v12;
          char v7 = v128;
        }
        char v11 = sub_18248A4(a3, v12, (unsigned __int8 *)v7);
        goto LABEL_360;
      case 3u:
        if (v8 != 26) {
          goto LABEL_351;
        }
        *(_DWORD *)(a1 + 40) |= 4u;
        uint64_t v14 = *(void *)(a1 + 72);
        if (!v14)
        {
          char v15 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            char v15 = (void *)*v15;
          }
          uint64_t v14 = sub_1832E88((uint64_t)v15);
          *(void *)(a1 + 72) = v14;
          char v7 = v128;
        }
        char v11 = sub_1824934(a3, v14, (unsigned __int8 *)v7);
        goto LABEL_360;
      case 4u:
        if (v8 != 34) {
          goto LABEL_351;
        }
        *(_DWORD *)(a1 + 40) |= 8u;
        uint64_t v16 = *(void *)(a1 + 80);
        if (!v16)
        {
          char v17 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            char v17 = (void *)*v17;
          }
          uint64_t v16 = sub_18330CC((uint64_t)v17);
          *(void *)(a1 + 80) = v16;
          char v7 = v128;
        }
        char v11 = sub_18249C4(a3, v16, (unsigned __int8 *)v7);
        goto LABEL_360;
      case 5u:
        if (v8 != 42) {
          goto LABEL_351;
        }
        *(_DWORD *)(a1 + 40) |= 0x10u;
        uint64_t v18 = *(void *)(a1 + 88);
        if (!v18)
        {
          char v19 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            char v19 = (void *)*v19;
          }
          uint64_t v18 = sub_18331E0((uint64_t)v19);
          *(void *)(a1 + 88) = v18;
          char v7 = v128;
        }
        char v11 = sub_1824A54(a3, v18, (unsigned __int8 *)v7);
        goto LABEL_360;
      case 6u:
        if (v8 != 50) {
          goto LABEL_351;
        }
        *(_DWORD *)(a1 + 40) |= 0x20u;
        uint64_t v20 = *(void **)(a1 + 96);
        if (!v20)
        {
          char v21 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            char v21 = (void *)*v21;
          }
          uint64_t v20 = sub_1833C50((uint64_t)v21);
          *(void *)(a1 + 96) = v20;
          char v7 = v128;
        }
        char v11 = sub_1824AE4(a3, (uint64_t)v20, (unsigned __int8 *)v7);
        goto LABEL_360;
      case 7u:
        if (v8 != 58) {
          goto LABEL_351;
        }
        *(_DWORD *)(a1 + 40) |= 0x40u;
        uint64_t v22 = *(void *)(a1 + 104);
        if (!v22)
        {
          char v23 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            char v23 = (void *)*v23;
          }
          uint64_t v22 = sub_18334B0((uint64_t)v23);
          *(void *)(a1 + 104) = v22;
          char v7 = v128;
        }
        char v11 = sub_1824B74(a3, v22, (unsigned __int8 *)v7);
        goto LABEL_360;
      case 8u:
        if (v8 != 66) {
          goto LABEL_351;
        }
        *(_DWORD *)(a1 + 40) |= 0x80u;
        uint64_t v24 = *(void *)(a1 + 112);
        if (!v24)
        {
          char v25 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            char v25 = (void *)*v25;
          }
          uint64_t v24 = sub_1834008((uint64_t)v25);
          *(void *)(a1 + 112) = v24;
          char v7 = v128;
        }
        char v11 = sub_1824C04(a3, v24, (unsigned __int8 *)v7);
        goto LABEL_360;
      case 9u:
        if (v8 != 74) {
          goto LABEL_351;
        }
        *(_DWORD *)(a1 + 40) |= 0x100u;
        uint64_t v26 = *(void *)(a1 + 120);
        if (!v26)
        {
          char v27 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            char v27 = (void *)*v27;
          }
          uint64_t v26 = sub_18341C8((uint64_t)v27);
          *(void *)(a1 + 120) = v26;
          char v7 = v128;
        }
        char v11 = sub_1824C94(a3, v26, (unsigned __int8 *)v7);
        goto LABEL_360;
      case 0xAu:
        if (v8 != 82) {
          goto LABEL_351;
        }
        *(_DWORD *)(a1 + 40) |= 0x200u;
        uint64_t v28 = *(void *)(a1 + 128);
        if (!v28)
        {
          char v29 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            char v29 = (void *)*v29;
          }
          uint64_t v28 = sub_1834A78((uint64_t)v29);
          *(void *)(a1 + 128) = v28;
          char v7 = v128;
        }
        char v11 = sub_1824D24(a3, v28, (unsigned __int8 *)v7);
        goto LABEL_360;
      case 0xBu:
        if (v8 != 90) {
          goto LABEL_351;
        }
        *(_DWORD *)(a1 + 40) |= 0x400u;
        uint64_t v30 = *(void *)(a1 + 136);
        if (!v30)
        {
          uint64_t v31 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v31 = (void *)*v31;
          }
          uint64_t v30 = sub_1830868((uint64_t)v31);
          *(void *)(a1 + 136) = v30;
          char v7 = v128;
        }
        char v11 = sub_17ADF38(a3, v30, (unsigned __int8 *)v7);
        goto LABEL_360;
      case 0xCu:
        if (v8 != 98) {
          goto LABEL_351;
        }
        *(_DWORD *)(a1 + 40) |= 0x800u;
        uint64_t v32 = *(void *)(a1 + 144);
        if (!v32)
        {
          uint64_t v33 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v33 = (void *)*v33;
          }
          uint64_t v32 = sub_183292C((uint64_t)v33);
          *(void *)(a1 + 144) = v32;
          char v7 = v128;
        }
        char v11 = sub_1824DB4(a3, v32, (unsigned __int8 *)v7);
        goto LABEL_360;
      case 0xDu:
        if (v8 != 106) {
          goto LABEL_351;
        }
        *(_DWORD *)(a1 + 40) |= 0x1000u;
        uint64_t v34 = *(void *)(a1 + 152);
        if (!v34)
        {
          uint64_t v35 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v35 = (void *)*v35;
          }
          uint64_t v34 = sub_1832A10((uint64_t)v35);
          *(void *)(a1 + 152) = v34;
          char v7 = v128;
        }
        char v11 = (char *)sub_1824E44(a3, v34, (unsigned __int8 *)v7);
        goto LABEL_360;
      case 0xEu:
        if (v8 != 114) {
          goto LABEL_351;
        }
        *(_DWORD *)(a1 + 40) |= 0x2000u;
        uint64_t v36 = *(void *)(a1 + 160);
        if (!v36)
        {
          uint64_t v37 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v37 = (void *)*v37;
          }
          uint64_t v36 = sub_18325DC((uint64_t)v37);
          *(void *)(a1 + 160) = v36;
          char v7 = v128;
        }
        char v11 = sub_1824ED4(a3, v36, (unsigned __int8 *)v7);
        goto LABEL_360;
      case 0xFu:
        if (v8 != 122) {
          goto LABEL_351;
        }
        *(_DWORD *)(a1 + 40) |= 0x4000u;
        char v38 = *(void **)(a1 + 168);
        if (!v38)
        {
          uint64_t v39 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v39 = (void *)*v39;
          }
          char v38 = sub_1832D80((uint64_t)v39);
          *(void *)(a1 + 168) = v38;
          char v7 = v128;
        }
        char v11 = (char *)sub_1824F64(a3, (uint64_t)v38, (unsigned __int8 *)v7);
        goto LABEL_360;
      case 0x10u:
        if (v8 != 130) {
          goto LABEL_351;
        }
        *(_DWORD *)(a1 + 40) |= 0x8000u;
        uint64_t v40 = *(void *)(a1 + 176);
        if (!v40)
        {
          uint64_t v41 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v41 = (void *)*v41;
          }
          uint64_t v40 = sub_1832C64((uint64_t)v41);
          *(void *)(a1 + 176) = v40;
          char v7 = v128;
        }
        char v11 = sub_1824FF4(a3, v40, (unsigned __int8 *)v7);
        goto LABEL_360;
      case 0x11u:
        if (v8 != 138) {
          goto LABEL_351;
        }
        *(_DWORD *)(a1 + 40) |= 0x10000u;
        uint64_t v42 = *(void *)(a1 + 184);
        if (!v42)
        {
          uint64_t v43 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v43 = (void *)*v43;
          }
          uint64_t v42 = sub_1833930((uint64_t)v43);
          *(void *)(a1 + 184) = v42;
          char v7 = v128;
        }
        char v11 = sub_1825084(a3, v42, (unsigned __int8 *)v7);
        goto LABEL_360;
      case 0x12u:
        if (v8 != 146) {
          goto LABEL_351;
        }
        *(_DWORD *)(a1 + 40) |= 0x20000u;
        uint64_t v44 = *(void *)(a1 + 192);
        if (!v44)
        {
          uint64_t v45 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v45 = (void *)*v45;
          }
          uint64_t v44 = sub_1834388((uint64_t)v45);
          *(void *)(a1 + 192) = v44;
          char v7 = v128;
        }
        char v11 = sub_1825114(a3, v44, (unsigned __int8 *)v7);
        goto LABEL_360;
      case 0x13u:
        if (v8 != 154) {
          goto LABEL_351;
        }
        *(_DWORD *)(a1 + 40) |= 0x40000u;
        uint64_t v46 = *(void *)(a1 + 200);
        if (!v46)
        {
          uint64_t v47 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v47 = (void *)*v47;
          }
          uint64_t v46 = sub_1833014((uint64_t)v47);
          *(void *)(a1 + 200) = v46;
          char v7 = v128;
        }
        char v11 = sub_18251A4(a3, v46, (unsigned __int8 *)v7);
        goto LABEL_360;
      case 0x14u:
        if (v8 != 162) {
          goto LABEL_351;
        }
        *(_DWORD *)(a1 + 40) |= 0x80000u;
        uint64_t v48 = *(void *)(a1 + 208);
        if (!v48)
        {
          uint64_t v49 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v49 = (void *)*v49;
          }
          uint64_t v48 = sub_1832794((uint64_t)v49);
          *(void *)(a1 + 208) = v48;
          char v7 = v128;
        }
        char v11 = sub_1825234(a3, v48, (unsigned __int8 *)v7);
        goto LABEL_360;
      case 0x15u:
        if (v8 != 170) {
          goto LABEL_351;
        }
        *(_DWORD *)(a1 + 40) |= 0x100000u;
        uint64_t v50 = *(void **)(a1 + 216);
        if (!v50)
        {
          uint64_t v51 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v51 = (void *)*v51;
          }
          uint64_t v50 = sub_1833D70((uint64_t)v51);
          *(void *)(a1 + 216) = v50;
          char v7 = v128;
        }
        char v11 = (char *)sub_18252C4(a3, (uint64_t)v50, (unsigned __int8 *)v7);
        goto LABEL_360;
      case 0x16u:
        if (v8 != 178) {
          goto LABEL_351;
        }
        *(_DWORD *)(a1 + 40) |= 0x200000u;
        uint64_t v52 = *(void *)(a1 + 224);
        if (!v52)
        {
          uint64_t v53 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v53 = (void *)*v53;
          }
          uint64_t v52 = sub_1834440((uint64_t)v53);
          *(void *)(a1 + 224) = v52;
          char v7 = v128;
        }
        char v11 = sub_1825354(a3, v52, (unsigned __int8 *)v7);
        goto LABEL_360;
      case 0x17u:
        if (v8 != 186) {
          goto LABEL_351;
        }
        *(_DWORD *)(a1 + 40) |= 0x400000u;
        uint64_t v54 = *(void *)(a1 + 232);
        if (!v54)
        {
          uint64_t v55 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v55 = (void *)*v55;
          }
          uint64_t v54 = sub_1833388((uint64_t)v55);
          *(void *)(a1 + 232) = v54;
          char v7 = v128;
        }
        char v11 = sub_18253E4(a3, v54, (unsigned __int8 *)v7);
        goto LABEL_360;
      case 0x18u:
        if (v8 != 194) {
          goto LABEL_351;
        }
        *(_DWORD *)(a1 + 40) |= 0x800000u;
        uint64_t v56 = *(void *)(a1 + 240);
        if (!v56)
        {
          uint64_t v57 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v57 = (void *)*v57;
          }
          uint64_t v56 = sub_1834538((uint64_t)v57);
          *(void *)(a1 + 240) = v56;
          char v7 = v128;
        }
        char v11 = sub_1825474(a3, v56, (unsigned __int8 *)v7);
        goto LABEL_360;
      case 0x19u:
        if (v8 != 202) {
          goto LABEL_351;
        }
        *(_DWORD *)(a1 + 40) |= 0x1000000u;
        uint64_t v58 = *(void *)(a1 + 248);
        if (!v58)
        {
          uint64_t v59 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v59 = (void *)*v59;
          }
          uint64_t v58 = sub_1835424((uint64_t)v59);
          *(void *)(a1 + 248) = v58;
          char v7 = v128;
        }
        char v11 = sub_1825504(a3, v58, (unsigned __int8 *)v7);
        goto LABEL_360;
      case 0x1Au:
        if (v8 != 210) {
          goto LABEL_351;
        }
        *(_DWORD *)(a1 + 40) |= 0x2000000u;
        uint64_t v60 = *(void *)(a1 + 256);
        if (!v60)
        {
          uint64_t v61 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v61 = (void *)*v61;
          }
          uint64_t v60 = sub_1835540((uint64_t)v61);
          *(void *)(a1 + 256) = v60;
          char v7 = v128;
        }
        char v11 = sub_1825594(a3, v60, (unsigned __int8 *)v7);
        goto LABEL_360;
      case 0x1Cu:
        if (v8 != 226) {
          goto LABEL_351;
        }
        *(_DWORD *)(a1 + 40) |= 0x4000000u;
        uint64_t v62 = *(void *)(a1 + 264);
        if (!v62)
        {
          uint64_t v63 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v63 = (void *)*v63;
          }
          uint64_t v62 = sub_1834660((uint64_t)v63);
          *(void *)(a1 + 264) = v62;
          char v7 = v128;
        }
        char v11 = sub_1825624(a3, v62, (unsigned __int8 *)v7);
        goto LABEL_360;
      case 0x1Du:
        if (v8 != 234) {
          goto LABEL_351;
        }
        *(_DWORD *)(a1 + 40) |= 0x8000000u;
        uint64_t v64 = *(void *)(a1 + 272);
        if (!v64)
        {
          uint64_t v65 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v65 = (void *)*v65;
          }
          uint64_t v64 = sub_1834774((uint64_t)v65);
          *(void *)(a1 + 272) = v64;
          char v7 = v128;
        }
        char v11 = sub_18256B4(a3, v64, (unsigned __int8 *)v7);
        goto LABEL_360;
      case 0x1Eu:
        if (v8 != 242) {
          goto LABEL_351;
        }
        *(_DWORD *)(a1 + 40) |= 0x10000000u;
        uint64_t v66 = *(void *)(a1 + 280);
        if (!v66)
        {
          uint64_t v67 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v67 = (void *)*v67;
          }
          uint64_t v66 = sub_183563C((uint64_t)v67);
          *(void *)(a1 + 280) = v66;
          char v7 = v128;
        }
        char v11 = sub_1825744(a3, v66, (unsigned __int8 *)v7);
        goto LABEL_360;
      case 0x1Fu:
        if (v8 != 250) {
          goto LABEL_351;
        }
        *(_DWORD *)(a1 + 40) |= 0x20000000u;
        uint64_t v68 = *(void *)(a1 + 288);
        if (!v68)
        {
          uint64_t v69 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v69 = (void *)*v69;
          }
          uint64_t v68 = sub_18348B4((uint64_t)v69);
          *(void *)(a1 + 288) = v68;
          char v7 = v128;
        }
        char v11 = sub_18257D4(a3, v68, (unsigned __int8 *)v7);
        goto LABEL_360;
      case 0x20u:
        if (v8 != 2) {
          goto LABEL_351;
        }
        *(_DWORD *)(a1 + 40) |= 0x40000000u;
        uint64_t v70 = *(void *)(a1 + 296);
        if (!v70)
        {
          unsigned int v71 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            unsigned int v71 = (void *)*v71;
          }
          uint64_t v70 = sub_1835CC0((uint64_t)v71);
          *(void *)(a1 + 296) = v70;
          char v7 = v128;
        }
        char v11 = sub_1825864(a3, v70, (unsigned __int8 *)v7);
        goto LABEL_360;
      case 0x21u:
        if (v8 != 10) {
          goto LABEL_351;
        }
        *(_DWORD *)(a1 + 40) |= 0x80000000;
        uint64_t v72 = *(void *)(a1 + 304);
        if (!v72)
        {
          uint64_t v73 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v73 = (void *)*v73;
          }
          uint64_t v72 = sub_1835DB0((uint64_t)v73);
          *(void *)(a1 + 304) = v72;
          char v7 = v128;
        }
        char v11 = sub_18258F4(a3, v72, (unsigned __int8 *)v7);
        goto LABEL_360;
      case 0x22u:
        if (v8 != 18) {
          goto LABEL_351;
        }
        *(_DWORD *)(a1 + 44) |= 1u;
        uint64_t v74 = *(void *)(a1 + 312);
        if (!v74)
        {
          uint64_t v75 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v75 = (void *)*v75;
          }
          uint64_t v74 = sub_1835EAC((uint64_t)v75);
          *(void *)(a1 + 312) = v74;
          char v7 = v128;
        }
        char v11 = (char *)sub_1825984(a3, v74, (unsigned __int8 *)v7);
        goto LABEL_360;
      case 0x23u:
        if (v8 != 26) {
          goto LABEL_351;
        }
        *(_DWORD *)(a1 + 44) |= 2u;
        uint64_t v76 = *(void *)(a1 + 320);
        if (!v76)
        {
          uint64_t v77 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v77 = (void *)*v77;
          }
          uint64_t v76 = sub_1835FB4((uint64_t)v77);
          *(void *)(a1 + 320) = v76;
          char v7 = v128;
        }
        char v11 = sub_1825A14(a3, v76, (unsigned __int8 *)v7);
        goto LABEL_360;
      case 0x24u:
        if (v8 != 34) {
          goto LABEL_351;
        }
        *(_DWORD *)(a1 + 44) |= 4u;
        uint64_t v78 = *(void *)(a1 + 328);
        if (!v78)
        {
          uint64_t v79 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v79 = (void *)*v79;
          }
          uint64_t v78 = sub_1836218((uint64_t)v79);
          *(void *)(a1 + 328) = v78;
          char v7 = v128;
        }
        char v11 = sub_1825AA4(a3, v78, (unsigned __int8 *)v7);
        goto LABEL_360;
      case 0x25u:
        if (v8 != 42) {
          goto LABEL_351;
        }
        *(_DWORD *)(a1 + 44) |= 8u;
        uint64_t v80 = *(void *)(a1 + 336);
        if (!v80)
        {
          int v81 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            int v81 = (void *)*v81;
          }
          uint64_t v80 = sub_1836D58((uint64_t)v81);
          *(void *)(a1 + 336) = v80;
          char v7 = v128;
        }
        char v11 = sub_1825B34(a3, v80, (unsigned __int8 *)v7);
        goto LABEL_360;
      case 0x26u:
        if (v8 != 50) {
          goto LABEL_351;
        }
        *(_DWORD *)(a1 + 44) |= 0x10u;
        uint64_t v82 = *(void **)(a1 + 344);
        if (!v82)
        {
          unsigned int v83 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            unsigned int v83 = (void *)*v83;
          }
          uint64_t v82 = sub_1836678((uint64_t)v83);
          *(void *)(a1 + 344) = v82;
          char v7 = v128;
        }
        char v11 = sub_1825BC4(a3, (uint64_t)v82, (unsigned __int8 *)v7);
        goto LABEL_360;
      case 0x27u:
        if (v8 != 58) {
          goto LABEL_351;
        }
        *(_DWORD *)(a1 + 44) |= 0x20u;
        uint64_t v84 = *(void *)(a1 + 352);
        if (!v84)
        {
          uint64_t v85 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v85 = (void *)*v85;
          }
          uint64_t v84 = sub_1836600((uint64_t)v85);
          *(void *)(a1 + 352) = v84;
          char v7 = v128;
        }
        char v11 = sub_1825C54(a3, v84, (unsigned __int8 *)v7);
        goto LABEL_360;
      case 0x28u:
        if (v8 != 66) {
          goto LABEL_351;
        }
        *(_DWORD *)(a1 + 44) |= 0x40u;
        uint64_t v86 = *(void *)(a1 + 360);
        if (!v86)
        {
          int v87 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            int v87 = (void *)*v87;
          }
          uint64_t v86 = sub_183676C((uint64_t)v87);
          *(void *)(a1 + 360) = v86;
          char v7 = v128;
        }
        char v11 = sub_1825CE4(a3, v86, (unsigned __int8 *)v7);
        goto LABEL_360;
      case 0x29u:
        if (v8 != 74) {
          goto LABEL_351;
        }
        *(_DWORD *)(a1 + 44) |= 0x80u;
        uint64_t v88 = *(void *)(a1 + 368);
        if (!v88)
        {
          uint64_t v89 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v89 = (void *)*v89;
          }
          uint64_t v88 = sub_1835950((uint64_t)v89);
          *(void *)(a1 + 368) = v88;
          char v7 = v128;
        }
        char v11 = sub_1825D74(a3, v88, (unsigned __int8 *)v7);
        goto LABEL_360;
      case 0x2Au:
        if (v8 != 82) {
          goto LABEL_351;
        }
        *(_DWORD *)(a1 + 44) |= 0x100u;
        uint64_t v90 = *(void *)(a1 + 376);
        if (!v90)
        {
          uint64_t v91 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v91 = (void *)*v91;
          }
          uint64_t v90 = sub_1835A70((uint64_t)v91);
          *(void *)(a1 + 376) = v90;
          char v7 = v128;
        }
        char v11 = sub_1825E04(a3, v90, (unsigned __int8 *)v7);
        goto LABEL_360;
      case 0x2Bu:
        if (v8 != 90) {
          goto LABEL_351;
        }
        *(_DWORD *)(a1 + 44) |= 0x200u;
        uint64_t v92 = *(void *)(a1 + 384);
        if (!v92)
        {
          uint64_t v93 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v93 = (void *)*v93;
          }
          uint64_t v92 = sub_1831434((uint64_t)v93);
          *(void *)(a1 + 384) = v92;
          char v7 = v128;
        }
        char v11 = sub_1825E94(a3, v92, (unsigned __int8 *)v7);
        goto LABEL_360;
      case 0x2Cu:
        if (v8 != 98) {
          goto LABEL_351;
        }
        *(_DWORD *)(a1 + 44) |= 0x400u;
        uint64_t v94 = *(void **)(a1 + 392);
        if (!v94)
        {
          unsigned int v95 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            unsigned int v95 = (void *)*v95;
          }
          uint64_t v94 = sub_18309B4((uint64_t)v95);
          *(void *)(a1 + 392) = v94;
          char v7 = v128;
        }
        char v11 = sub_17ADFC8(a3, (uint64_t)v94, (unsigned __int8 *)v7);
        goto LABEL_360;
      case 0x2Du:
        if (v8 != 106) {
          goto LABEL_351;
        }
        *(_DWORD *)(a1 + 44) |= 0x800u;
        uint64_t v96 = *(void *)(a1 + 400);
        if (!v96)
        {
          uint64_t v97 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v97 = (void *)*v97;
          }
          uint64_t v96 = sub_1831250((uint64_t)v97);
          *(void *)(a1 + 400) = v96;
          char v7 = v128;
        }
        char v11 = sub_1825F24(a3, v96, (unsigned __int8 *)v7);
        goto LABEL_360;
      case 0x2Eu:
        if (v8 != 114) {
          goto LABEL_351;
        }
        *(_DWORD *)(a1 + 44) |= 0x1000u;
        uint64_t v98 = *(void **)(a1 + 408);
        if (!v98)
        {
          uint64_t v99 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v99 = (void *)*v99;
          }
          uint64_t v98 = sub_1830FBC((uint64_t)v99);
          *(void *)(a1 + 408) = v98;
          char v7 = v128;
        }
        char v11 = sub_1825FB4(a3, (uint64_t)v98, (unsigned __int8 *)v7);
        goto LABEL_360;
      case 0x2Fu:
        if (v8 != 122) {
          goto LABEL_351;
        }
        *(_DWORD *)(a1 + 44) |= 0x2000u;
        uint64_t v100 = *(void *)(a1 + 416);
        if (!v100)
        {
          uint64_t v101 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v101 = (void *)*v101;
          }
          uint64_t v100 = sub_18335B8((uint64_t)v101);
          *(void *)(a1 + 416) = v100;
          char v7 = v128;
        }
        char v11 = sub_1826044(a3, v100, (unsigned __int8 *)v7);
        goto LABEL_360;
      case 0x30u:
        if (v8 != 130) {
          goto LABEL_351;
        }
        *(_DWORD *)(a1 + 44) |= 0x4000u;
        uint64_t v102 = *(void *)(a1 + 424);
        if (!v102)
        {
          int v103 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            int v103 = (void *)*v103;
          }
          uint64_t v102 = sub_18336D0((uint64_t)v103);
          *(void *)(a1 + 424) = v102;
          char v7 = v128;
        }
        char v11 = sub_18260D4(a3, v102, (unsigned __int8 *)v7);
        goto LABEL_360;
      case 0x31u:
        if (v8 != 138) {
          goto LABEL_351;
        }
        *(_DWORD *)(a1 + 44) |= 0x8000u;
        uint64_t v104 = *(void *)(a1 + 432);
        if (!v104)
        {
          uint64_t v105 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v105 = (void *)*v105;
          }
          uint64_t v104 = sub_1831C00((uint64_t)v105);
          *(void *)(a1 + 432) = v104;
          char v7 = v128;
        }
        char v11 = sub_1826164(a3, v104, (unsigned __int8 *)v7);
        goto LABEL_360;
      case 0x32u:
        if (v8 != 146) {
          goto LABEL_351;
        }
        *(_DWORD *)(a1 + 44) |= 0x10000u;
        uint64_t v106 = *(void **)(a1 + 440);
        if (!v106)
        {
          uint64_t v107 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v107 = (void *)*v107;
          }
          uint64_t v106 = sub_1831674((uint64_t)v107);
          *(void *)(a1 + 440) = v106;
          char v7 = v128;
        }
        char v11 = (char *)sub_18261F4(a3, (uint64_t)v106, (unsigned __int8 *)v7);
        goto LABEL_360;
      case 0x33u:
        if (v8 != 154) {
          goto LABEL_351;
        }
        *(_DWORD *)(a1 + 44) |= 0x20000u;
        uint64_t v108 = *(void *)(a1 + 448);
        if (!v108)
        {
          uint64_t v109 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v109 = (void *)*v109;
          }
          uint64_t v108 = sub_1831A58((uint64_t)v109);
          *(void *)(a1 + 448) = v108;
          char v7 = v128;
        }
        char v11 = sub_1826284(a3, v108, (unsigned __int8 *)v7);
        goto LABEL_360;
      case 0x36u:
        if (v8 != 178) {
          goto LABEL_351;
        }
        *(_DWORD *)(a1 + 44) |= 0x40000u;
        uint64_t v110 = *(void **)(a1 + 456);
        if (!v110)
        {
          unsigned int v111 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            unsigned int v111 = (void *)*v111;
          }
          uint64_t v110 = sub_18337F8((uint64_t)v111);
          *(void *)(a1 + 456) = v110;
          char v7 = v128;
        }
        char v11 = (char *)sub_1826314(a3, (uint64_t)v110, (unsigned __int8 *)v7);
        goto LABEL_360;
      case 0x37u:
        if (v8 != 186) {
          goto LABEL_351;
        }
        *(_DWORD *)(a1 + 44) |= 0x80000u;
        uint64_t v112 = *(void **)(a1 + 464);
        if (!v112)
        {
          uint64_t v113 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v113 = (void *)*v113;
          }
          uint64_t v112 = sub_18324B8((uint64_t)v113);
          *(void *)(a1 + 464) = v112;
          char v7 = v128;
        }
        char v11 = sub_18263A4(a3, (uint64_t)v112, (unsigned __int8 *)v7);
        goto LABEL_360;
      case 0x38u:
        if (v8 != 194) {
          goto LABEL_351;
        }
        *(_DWORD *)(a1 + 44) |= 0x100000u;
        uint64_t v114 = *(void *)(a1 + 472);
        if (!v114)
        {
          uint64_t v115 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v115 = (void *)*v115;
          }
          uint64_t v114 = sub_18332B4((uint64_t)v115);
          *(void *)(a1 + 472) = v114;
          char v7 = v128;
        }
        char v11 = sub_1826434(a3, v114, (unsigned __int8 *)v7);
        goto LABEL_360;
      case 0x3Au:
        if (v8 != 210) {
          goto LABEL_351;
        }
        *(_DWORD *)(a1 + 44) |= 0x200000u;
        uint64_t v116 = *(void *)(a1 + 480);
        if (!v116)
        {
          unsigned int v117 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            unsigned int v117 = (void *)*v117;
          }
          uint64_t v116 = sub_1836ADC((uint64_t)v117);
          *(void *)(a1 + 480) = v116;
          char v7 = v128;
        }
        char v11 = sub_18264C4(a3, v116, (unsigned __int8 *)v7);
        goto LABEL_360;
      case 0x3Bu:
        if (v8 != 218) {
          goto LABEL_351;
        }
        *(_DWORD *)(a1 + 44) |= 0x400000u;
        uint64_t v118 = *(void **)(a1 + 488);
        if (!v118)
        {
          uint64_t v119 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v119 = (void *)*v119;
          }
          uint64_t v118 = sub_1836BCC((uint64_t)v119);
          *(void *)(a1 + 488) = v118;
          char v7 = v128;
        }
        char v11 = sub_1826554(a3, (uint64_t)v118, (unsigned __int8 *)v7);
        goto LABEL_360;
      case 0x3Cu:
        if (v8 != 226) {
          goto LABEL_351;
        }
        *(_DWORD *)(a1 + 44) |= 0x800000u;
        unsigned int v120 = *(void **)(a1 + 496);
        if (!v120)
        {
          uint64_t v121 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v121 = (void *)*v121;
          }
          unsigned int v120 = sub_1836588((uint64_t)v121);
          *(void *)(a1 + 496) = v120;
          char v7 = v128;
        }
        char v11 = sub_18265E4(a3, (uint64_t)v120, (unsigned __int8 *)v7);
        goto LABEL_360;
      case 0x3Eu:
        if (v8 != 242) {
          goto LABEL_351;
        }
        *(_DWORD *)(a1 + 44) |= 0x1000000u;
        uint64_t v122 = *(void *)(a1 + 504);
        if (!v122)
        {
          unsigned int v123 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            unsigned int v123 = (void *)*v123;
          }
          uint64_t v122 = sub_1836CA0((uint64_t)v123);
          *(void *)(a1 + 504) = v122;
          char v7 = v128;
        }
        char v11 = sub_1826674(a3, v122, (unsigned __int8 *)v7);
        goto LABEL_360;
      default:
LABEL_351:
        if (v8) {
          BOOL v124 = (v8 & 7) == 4;
        }
        else {
          BOOL v124 = 1;
        }
        if (!v124)
        {
          if (v8 - 8000 > 0x18F)
          {
            if (*v6)
            {
              uint64_t v125 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              unsigned int v127 = v8;
              uint64_t v126 = sub_188DBD8((uint64_t *)(a1 + 8));
              unsigned int v8 = v127;
              char v7 = v128;
              uint64_t v125 = (std::string *)v126;
            }
            char v11 = (char *)sub_1885AC0(v8, v125, v7, a3);
          }
          else
          {
            char v11 = (char *)sub_18859DC((uint64_t **)(a1 + 16), v8, v7, (uint64_t)&off_254C818, (uint64_t *)(a1 + 8), a3);
          }
LABEL_360:
          uint64_t v128 = v11;
          if (!v11) {
            return 0;
          }
          if (sub_11947B8((uint64_t)a3, &v128, a3[11].i32[1])) {
            return v128;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return v128;
    }
  }
}

uint64_t sub_1824814(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_179BF20(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_18248A4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17D176C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1824934(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17D00E0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_18249C4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17D3EA0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1824A54(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17D568C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1824AE4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17E2620(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1824B74(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17D8A7C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1824C04(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17E6CCC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1824C94(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17E9224(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1824D24(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17F22B8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1824DB4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17C95D8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_1824E44(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17CC830(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1824ED4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17C2C80(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_1824F64(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17CF810(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1824FF4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17CEAAC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1825084(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17DD6E0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1825114(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17EAF34(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_18251A4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17D2A28(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1825234(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17C44F0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_18252C4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17E37B4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1825354(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17EC120(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_18253E4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17D70A4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1825474(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17ECFD8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1825504(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1802E68(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1825594(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1803B7C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1825624(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17EDF74(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_18256B4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17EEC5C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1825744(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_180438C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_18257D4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17EF914(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1825864(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_180A440(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_18258F4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_180ADB4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_1825984(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_180B844(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1825A14(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_180C9B0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1825AA4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_180ED68(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1825B34(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1821234(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1825BC4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1812364(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1825C54(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1811F1C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1825CE4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1813084(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1825D74(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_18074FC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1825E04(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_18082EC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1825E94(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17AEC78(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1825F24(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17ABCC0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1825FB4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17A8F28(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1826044(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17D98E4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_18260D4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17DA360(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1826164(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17B774C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_18261F4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17B0CF0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1826284(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17B5894(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_1826314(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17DB9E8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_18263A4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17C168C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1826434(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17D6268(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_18264C4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1815C98(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1826554(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_18166FC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_18265E4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_181196C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1826674(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1817640(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1826704(uint64_t a1, char *a2, unint64_t *a3)
{
  uint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if (v6)
  {
    if (*a3 <= (unint64_t)a2) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    uint64_t v7 = *(void *)(a1 + 56);
    *uint64_t v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 44);
    v4[1] = v8;
    if (v8 > 0x7F) {
      uint64_t v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      uint64_t v9 = v4 + 2;
    }
    uint64_t v4 = sub_179D50C(v7, v9, a3);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_46;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v10 = *(void *)(a1 + 64);
  *uint64_t v4 = 18;
  unsigned int v11 = *(_DWORD *)(v10 + 64);
  v4[1] = v11;
  if (v11 > 0x7F) {
    uint64_t v12 = sub_188A9CC(v11, v4 + 1);
  }
  else {
    uint64_t v12 = v4 + 2;
  }
  uint64_t v4 = sub_17D1948(v10, v12, a3);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_52;
  }
LABEL_46:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v13 = *(void *)(a1 + 72);
  *uint64_t v4 = 26;
  unsigned int v14 = *(_DWORD *)(v13 + 16);
  v4[1] = v14;
  if (v14 > 0x7F) {
    char v15 = sub_188A9CC(v14, v4 + 1);
  }
  else {
    char v15 = v4 + 2;
  }
  uint64_t v4 = sub_17D01E0(v13, v15, a3);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_58;
  }
LABEL_52:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v16 = *(void *)(a1 + 80);
  *uint64_t v4 = 34;
  unsigned int v17 = *(_DWORD *)(v16 + 40);
  v4[1] = v17;
  if (v17 > 0x7F) {
    uint64_t v18 = sub_188A9CC(v17, v4 + 1);
  }
  else {
    uint64_t v18 = v4 + 2;
  }
  uint64_t v4 = sub_17D3FE8(v16, v18, a3);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_64;
  }
LABEL_58:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v19 = *(void *)(a1 + 88);
  *uint64_t v4 = 42;
  unsigned int v20 = *(_DWORD *)(v19 + 16);
  v4[1] = v20;
  if (v20 > 0x7F) {
    char v21 = sub_188A9CC(v20, v4 + 1);
  }
  else {
    char v21 = v4 + 2;
  }
  uint64_t v4 = sub_17D578C(v19, v21, a3);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_70;
  }
LABEL_64:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v22 = *(void *)(a1 + 96);
  *uint64_t v4 = 50;
  unsigned int v23 = *(_DWORD *)(v22 + 20);
  v4[1] = v23;
  if (v23 > 0x7F) {
    uint64_t v24 = sub_188A9CC(v23, v4 + 1);
  }
  else {
    uint64_t v24 = v4 + 2;
  }
  uint64_t v4 = sub_17E2808(v22, (unint64_t)v24, a3);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_76;
  }
LABEL_70:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v25 = *(void *)(a1 + 104);
  *uint64_t v4 = 58;
  unsigned int v26 = *(_DWORD *)(v25 + 16);
  v4[1] = v26;
  if (v26 > 0x7F) {
    char v27 = sub_188A9CC(v26, v4 + 1);
  }
  else {
    char v27 = v4 + 2;
  }
  uint64_t v4 = sub_17D8B7C(v25, v27, a3);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_82;
  }
LABEL_76:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v28 = *(void *)(a1 + 112);
  *uint64_t v4 = 66;
  unsigned int v29 = *(_DWORD *)(v28 + 20);
  v4[1] = v29;
  if (v29 > 0x7F) {
    uint64_t v30 = sub_188A9CC(v29, v4 + 1);
  }
  else {
    uint64_t v30 = v4 + 2;
  }
  uint64_t v4 = sub_17E6FA4(v28, v30, a3);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_88;
  }
LABEL_82:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v31 = *(void *)(a1 + 120);
  *uint64_t v4 = 74;
  unsigned int v32 = *(_DWORD *)(v31 + 20);
  v4[1] = v32;
  if (v32 > 0x7F) {
    uint64_t v33 = sub_188A9CC(v32, v4 + 1);
  }
  else {
    uint64_t v33 = v4 + 2;
  }
  uint64_t v4 = sub_17E9484(v31, (unint64_t)v33, a3);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_94;
  }
LABEL_88:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v34 = *(void *)(a1 + 128);
  *uint64_t v4 = 82;
  unsigned int v35 = *(_DWORD *)(v34 + 44);
  v4[1] = v35;
  if (v35 > 0x7F) {
    uint64_t v36 = sub_188A9CC(v35, v4 + 1);
  }
  else {
    uint64_t v36 = v4 + 2;
  }
  uint64_t v4 = sub_17F2D68(v34, v36, a3);
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_100;
  }
LABEL_94:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v37 = *(void *)(a1 + 136);
  *uint64_t v4 = 90;
  unsigned int v38 = *(_DWORD *)(v37 + 40);
  v4[1] = v38;
  if (v38 > 0x7F) {
    uint64_t v39 = sub_188A9CC(v38, v4 + 1);
  }
  else {
    uint64_t v39 = v4 + 2;
  }
  uint64_t v4 = sub_17A1E0C(v37, v39, a3);
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_106;
  }
LABEL_100:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v40 = *(void *)(a1 + 144);
  *uint64_t v4 = 98;
  unsigned int v41 = *(_DWORD *)(v40 + 44);
  v4[1] = v41;
  if (v41 > 0x7F) {
    uint64_t v42 = sub_188A9CC(v41, v4 + 1);
  }
  else {
    uint64_t v42 = v4 + 2;
  }
  uint64_t v4 = sub_17CA234(v40, v42, a3);
  if ((v6 & 0x1000) == 0)
  {
LABEL_14:
    if ((v6 & 0x2000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_112;
  }
LABEL_106:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v43 = *(void *)(a1 + 152);
  *uint64_t v4 = 106;
  unsigned int v44 = *(_DWORD *)(v43 + 20);
  v4[1] = v44;
  if (v44 > 0x7F) {
    uint64_t v45 = sub_188A9CC(v44, v4 + 1);
  }
  else {
    uint64_t v45 = v4 + 2;
  }
  uint64_t v4 = sub_17CCA74(v43, (unint64_t)v45, a3);
  if ((v6 & 0x2000) == 0)
  {
LABEL_15:
    if ((v6 & 0x4000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_118;
  }
LABEL_112:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v46 = *(void *)(a1 + 160);
  *uint64_t v4 = 114;
  unsigned int v47 = *(_DWORD *)(v46 + 64);
  v4[1] = v47;
  if (v47 > 0x7F) {
    uint64_t v48 = sub_188A9CC(v47, v4 + 1);
  }
  else {
    uint64_t v48 = v4 + 2;
  }
  uint64_t v4 = sub_17C2F58(v46, v48, a3);
  if ((v6 & 0x4000) == 0)
  {
LABEL_16:
    if ((v6 & 0x8000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_124;
  }
LABEL_118:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v49 = *(void *)(a1 + 168);
  *uint64_t v4 = 122;
  unsigned int v50 = *(_DWORD *)(v49 + 20);
  v4[1] = v50;
  if (v50 > 0x7F) {
    uint64_t v51 = sub_188A9CC(v50, v4 + 1);
  }
  else {
    uint64_t v51 = v4 + 2;
  }
  uint64_t v4 = sub_17CF968(v49, v51, a3);
  if ((v6 & 0x8000) == 0)
  {
LABEL_17:
    if ((v6 & 0x10000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_130;
  }
LABEL_124:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v52 = *(void *)(a1 + 176);
  *(_WORD *)uint64_t v4 = 386;
  unsigned int v53 = *(_DWORD *)(v52 + 40);
  v4[2] = v53;
  if (v53 > 0x7F) {
    uint64_t v54 = sub_188A9CC(v53, v4 + 2);
  }
  else {
    uint64_t v54 = v4 + 3;
  }
  uint64_t v4 = sub_17CECDC(v52, v54, a3);
  if ((v6 & 0x10000) == 0)
  {
LABEL_18:
    if ((v6 & 0x20000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_136;
  }
LABEL_130:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v55 = *(void *)(a1 + 184);
  *(_WORD *)uint64_t v4 = 394;
  unsigned int v56 = *(_DWORD *)(v55 + 16);
  v4[2] = v56;
  if (v56 > 0x7F) {
    uint64_t v57 = sub_188A9CC(v56, v4 + 2);
  }
  else {
    uint64_t v57 = v4 + 3;
  }
  uint64_t v4 = sub_17DD7E0(v55, v57, a3);
  if ((v6 & 0x20000) == 0)
  {
LABEL_19:
    if ((v6 & 0x40000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_142;
  }
LABEL_136:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v58 = *(void *)(a1 + 192);
  *(_WORD *)uint64_t v4 = 402;
  unsigned int v59 = *(_DWORD *)(v58 + 40);
  v4[2] = v59;
  if (v59 > 0x7F) {
    uint64_t v60 = sub_188A9CC(v59, v4 + 2);
  }
  else {
    uint64_t v60 = v4 + 3;
  }
  uint64_t v4 = sub_17EB07C(v58, v60, a3);
  if ((v6 & 0x40000) == 0)
  {
LABEL_20:
    if ((v6 & 0x80000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_148;
  }
LABEL_142:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v61 = *(void *)(a1 + 200);
  *(_WORD *)uint64_t v4 = 410;
  unsigned int v62 = *(_DWORD *)(v61 + 64);
  v4[2] = v62;
  if (v62 > 0x7F) {
    uint64_t v63 = sub_188A9CC(v62, v4 + 2);
  }
  else {
    uint64_t v63 = v4 + 3;
  }
  uint64_t v4 = sub_17D2C04(v61, v63, a3);
  if ((v6 & 0x80000) == 0)
  {
LABEL_21:
    if ((v6 & 0x100000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_154;
  }
LABEL_148:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v64 = *(void *)(a1 + 208);
  *(_WORD *)uint64_t v4 = 418;
  unsigned int v65 = *(_DWORD *)(v64 + 40);
  v4[2] = v65;
  if (v65 > 0x7F) {
    uint64_t v66 = sub_188A9CC(v65, v4 + 2);
  }
  else {
    uint64_t v66 = v4 + 3;
  }
  uint64_t v4 = sub_17C4720(v64, v66, a3);
  if ((v6 & 0x100000) == 0)
  {
LABEL_22:
    if ((v6 & 0x200000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_160;
  }
LABEL_154:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v67 = *(void *)(a1 + 216);
  *(_WORD *)uint64_t v4 = 426;
  unsigned int v68 = *(_DWORD *)(v67 + 20);
  v4[2] = v68;
  if (v68 > 0x7F) {
    uint64_t v69 = sub_188A9CC(v68, v4 + 2);
  }
  else {
    uint64_t v69 = v4 + 3;
  }
  uint64_t v4 = sub_17E390C(v67, v69, a3);
  if ((v6 & 0x200000) == 0)
  {
LABEL_23:
    if ((v6 & 0x400000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_166;
  }
LABEL_160:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v70 = *(void *)(a1 + 224);
  *(_WORD *)uint64_t v4 = 434;
  unsigned int v71 = *(_DWORD *)(v70 + 40);
  v4[2] = v71;
  if (v71 > 0x7F) {
    uint64_t v72 = sub_188A9CC(v71, v4 + 2);
  }
  else {
    uint64_t v72 = v4 + 3;
  }
  uint64_t v4 = sub_17EC268(v70, v72, a3);
  if ((v6 & 0x400000) == 0)
  {
LABEL_24:
    if ((v6 & 0x800000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_172;
  }
LABEL_166:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v73 = *(void *)(a1 + 232);
  *(_WORD *)uint64_t v4 = 442;
  unsigned int v74 = *(_DWORD *)(v73 + 16);
  v4[2] = v74;
  if (v74 > 0x7F) {
    uint64_t v75 = sub_188A9CC(v74, v4 + 2);
  }
  else {
    uint64_t v75 = v4 + 3;
  }
  uint64_t v4 = sub_17D71A4(v73, v75, a3);
  if ((v6 & 0x800000) == 0)
  {
LABEL_25:
    if ((v6 & 0x1000000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_178;
  }
LABEL_172:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v76 = *(void *)(a1 + 240);
  *(_WORD *)uint64_t v4 = 450;
  unsigned int v77 = *(_DWORD *)(v76 + 16);
  v4[2] = v77;
  if (v77 > 0x7F) {
    uint64_t v78 = sub_188A9CC(v77, v4 + 2);
  }
  else {
    uint64_t v78 = v4 + 3;
  }
  uint64_t v4 = sub_17ED0D8(v76, v78, a3);
  if ((v6 & 0x1000000) == 0)
  {
LABEL_26:
    if ((v6 & 0x2000000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_184;
  }
LABEL_178:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v79 = *(void *)(a1 + 248);
  *(_WORD *)uint64_t v4 = 458;
  unsigned int v80 = *(_DWORD *)(v79 + 16);
  v4[2] = v80;
  if (v80 > 0x7F) {
    int v81 = sub_188A9CC(v80, v4 + 2);
  }
  else {
    int v81 = v4 + 3;
  }
  uint64_t v4 = sub_1802F68(v79, v81, a3);
  if ((v6 & 0x2000000) == 0)
  {
LABEL_27:
    if ((v6 & 0x4000000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_190;
  }
LABEL_184:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v82 = *(void *)(a1 + 256);
  *(_WORD *)uint64_t v4 = 466;
  unsigned int v83 = *(_DWORD *)(v82 + 16);
  v4[2] = v83;
  if (v83 > 0x7F) {
    uint64_t v84 = sub_188A9CC(v83, v4 + 2);
  }
  else {
    uint64_t v84 = v4 + 3;
  }
  uint64_t v4 = sub_1803C7C(v82, v84, a3);
  if ((v6 & 0x4000000) == 0)
  {
LABEL_28:
    if ((v6 & 0x8000000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_196;
  }
LABEL_190:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v85 = *(void *)(a1 + 264);
  *(_WORD *)uint64_t v4 = 482;
  unsigned int v86 = *(_DWORD *)(v85 + 16);
  v4[2] = v86;
  if (v86 > 0x7F) {
    int v87 = sub_188A9CC(v86, v4 + 2);
  }
  else {
    int v87 = v4 + 3;
  }
  uint64_t v4 = sub_17EE074(v85, v87, a3);
  if ((v6 & 0x8000000) == 0)
  {
LABEL_29:
    if ((v6 & 0x10000000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_202;
  }
LABEL_196:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v88 = *(void *)(a1 + 272);
  *(_WORD *)uint64_t v4 = 490;
  unsigned int v89 = *(_DWORD *)(v88 + 40);
  v4[2] = v89;
  if (v89 > 0x7F) {
    uint64_t v90 = sub_188A9CC(v89, v4 + 2);
  }
  else {
    uint64_t v90 = v4 + 3;
  }
  uint64_t v4 = sub_17EEDFC(v88, v90, a3);
  if ((v6 & 0x10000000) == 0)
  {
LABEL_30:
    if ((v6 & 0x20000000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_208;
  }
LABEL_202:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v91 = *(void *)(a1 + 280);
  *(_WORD *)uint64_t v4 = 498;
  unsigned int v92 = *(_DWORD *)(v91 + 16);
  v4[2] = v92;
  if (v92 > 0x7F) {
    uint64_t v93 = sub_188A9CC(v92, v4 + 2);
  }
  else {
    uint64_t v93 = v4 + 3;
  }
  uint64_t v4 = sub_180448C(v91, v93, a3);
  if ((v6 & 0x20000000) == 0)
  {
LABEL_31:
    if ((v6 & 0x40000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_214;
  }
LABEL_208:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v94 = *(void *)(a1 + 288);
  *(_WORD *)uint64_t v4 = 506;
  unsigned int v95 = *(_DWORD *)(v94 + 16);
  v4[2] = v95;
  if (v95 > 0x7F) {
    uint64_t v96 = sub_188A9CC(v95, v4 + 2);
  }
  else {
    uint64_t v96 = v4 + 3;
  }
  uint64_t v4 = sub_17EFA14(v94, v96, a3);
  if ((v6 & 0x40000000) == 0)
  {
LABEL_32:
    if ((v6 & 0x80000000) == 0) {
      goto LABEL_226;
    }
    goto LABEL_220;
  }
LABEL_214:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v97 = *(void *)(a1 + 296);
  *(_WORD *)uint64_t v4 = 642;
  unsigned int v98 = *(_DWORD *)(v97 + 16);
  v4[2] = v98;
  if (v98 > 0x7F) {
    uint64_t v99 = sub_188A9CC(v98, v4 + 2);
  }
  else {
    uint64_t v99 = v4 + 3;
  }
  uint64_t v4 = sub_180A540(v97, v99, a3);
  if (v6 < 0)
  {
LABEL_220:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v100 = *(void *)(a1 + 304);
    *(_WORD *)uint64_t v4 = 650;
    unsigned int v101 = *(_DWORD *)(v100 + 16);
    v4[2] = v101;
    if (v101 > 0x7F) {
      uint64_t v102 = sub_188A9CC(v101, v4 + 2);
    }
    else {
      uint64_t v102 = v4 + 3;
    }
    uint64_t v4 = sub_180AEB4(v100, v102, a3);
  }
LABEL_226:
  int v103 = *(_DWORD *)(a1 + 44);
  if (v103)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v104 = *(void *)(a1 + 312);
    *(_WORD *)uint64_t v4 = 658;
    unsigned int v105 = *(_DWORD *)(v104 + 20);
    v4[2] = v105;
    if (v105 > 0x7F) {
      uint64_t v106 = sub_188A9CC(v105, v4 + 2);
    }
    else {
      uint64_t v106 = v4 + 3;
    }
    uint64_t v4 = sub_180BB54(v104, (unint64_t)v106, a3);
    if ((v103 & 2) == 0)
    {
LABEL_228:
      if ((v103 & 4) == 0) {
        goto LABEL_229;
      }
      goto LABEL_264;
    }
  }
  else if ((v103 & 2) == 0)
  {
    goto LABEL_228;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v107 = *(void *)(a1 + 320);
  *(_WORD *)uint64_t v4 = 666;
  unsigned int v108 = *(_DWORD *)(v107 + 16);
  v4[2] = v108;
  if (v108 > 0x7F) {
    uint64_t v109 = sub_188A9CC(v108, v4 + 2);
  }
  else {
    uint64_t v109 = v4 + 3;
  }
  uint64_t v4 = sub_180CAB0(v107, v109, a3);
  if ((v103 & 4) == 0)
  {
LABEL_229:
    if ((v103 & 8) == 0) {
      goto LABEL_230;
    }
    goto LABEL_270;
  }
LABEL_264:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v110 = *(void *)(a1 + 328);
  *(_WORD *)uint64_t v4 = 674;
  unsigned int v111 = *(_DWORD *)(v110 + 20);
  v4[2] = v111;
  if (v111 > 0x7F) {
    uint64_t v112 = sub_188A9CC(v111, v4 + 2);
  }
  else {
    uint64_t v112 = v4 + 3;
  }
  uint64_t v4 = sub_180F17C(v110, (unint64_t)v112, a3);
  if ((v103 & 8) == 0)
  {
LABEL_230:
    if ((v103 & 0x10) == 0) {
      goto LABEL_231;
    }
    goto LABEL_276;
  }
LABEL_270:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v113 = *(void *)(a1 + 336);
  *(_WORD *)uint64_t v4 = 682;
  unsigned int v114 = *(_DWORD *)(v113 + 40);
  v4[2] = v114;
  if (v114 > 0x7F) {
    uint64_t v115 = sub_188A9CC(v114, v4 + 2);
  }
  else {
    uint64_t v115 = v4 + 3;
  }
  uint64_t v4 = sub_18213D4(v113, v115, a3);
  if ((v103 & 0x10) == 0)
  {
LABEL_231:
    if ((v103 & 0x20) == 0) {
      goto LABEL_232;
    }
    goto LABEL_282;
  }
LABEL_276:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v116 = *(void *)(a1 + 344);
  *(_WORD *)uint64_t v4 = 690;
  unsigned int v117 = *(_DWORD *)(v116 + 20);
  v4[2] = v117;
  if (v117 > 0x7F) {
    uint64_t v118 = sub_188A9CC(v117, v4 + 2);
  }
  else {
    uint64_t v118 = v4 + 3;
  }
  uint64_t v4 = sub_18124BC(v116, (unint64_t)v118, a3);
  if ((v103 & 0x20) == 0)
  {
LABEL_232:
    if ((v103 & 0x40) == 0) {
      goto LABEL_233;
    }
    goto LABEL_288;
  }
LABEL_282:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v119 = *(void *)(a1 + 352);
  *(_WORD *)uint64_t v4 = 698;
  unsigned int v120 = *(_DWORD *)(v119 + 16);
  v4[2] = v120;
  if (v120 > 0x7F) {
    uint64_t v121 = sub_188A9CC(v120, v4 + 2);
  }
  else {
    uint64_t v121 = v4 + 3;
  }
  uint64_t v4 = sub_181201C(v119, v121, a3);
  if ((v103 & 0x40) == 0)
  {
LABEL_233:
    if ((v103 & 0x80) == 0) {
      goto LABEL_234;
    }
    goto LABEL_294;
  }
LABEL_288:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v122 = *(void *)(a1 + 360);
  *(_WORD *)uint64_t v4 = 706;
  unsigned int v123 = *(_DWORD *)(v122 + 40);
  v4[2] = v123;
  if (v123 > 0x7F) {
    BOOL v124 = sub_188A9CC(v123, v4 + 2);
  }
  else {
    BOOL v124 = v4 + 3;
  }
  uint64_t v4 = sub_18132B4(v122, v124, a3);
  if ((v103 & 0x80) == 0)
  {
LABEL_234:
    if ((v103 & 0x100) == 0) {
      goto LABEL_235;
    }
    goto LABEL_300;
  }
LABEL_294:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v125 = *(void *)(a1 + 368);
  *(_WORD *)uint64_t v4 = 714;
  unsigned int v126 = *(_DWORD *)(v125 + 20);
  v4[2] = v126;
  if (v126 > 0x7F) {
    unsigned int v127 = sub_188A9CC(v126, v4 + 2);
  }
  else {
    unsigned int v127 = v4 + 3;
  }
  uint64_t v4 = sub_18077E8(v125, (unint64_t)v127, a3);
  if ((v103 & 0x100) == 0)
  {
LABEL_235:
    if ((v103 & 0x200) == 0) {
      goto LABEL_236;
    }
    goto LABEL_306;
  }
LABEL_300:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v128 = *(void *)(a1 + 376);
  *(_WORD *)uint64_t v4 = 722;
  unsigned int v129 = *(_DWORD *)(v128 + 16);
  v4[2] = v129;
  if (v129 > 0x7F) {
    uint64_t v130 = sub_188A9CC(v129, v4 + 2);
  }
  else {
    uint64_t v130 = v4 + 3;
  }
  uint64_t v4 = sub_18083EC(v128, v130, a3);
  if ((v103 & 0x200) == 0)
  {
LABEL_236:
    if ((v103 & 0x400) == 0) {
      goto LABEL_237;
    }
    goto LABEL_312;
  }
LABEL_306:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v131 = *(void *)(a1 + 384);
  *(_WORD *)uint64_t v4 = 730;
  unsigned int v132 = *(_DWORD *)(v131 + 40);
  v4[2] = v132;
  if (v132 > 0x7F) {
    int v133 = sub_188A9CC(v132, v4 + 2);
  }
  else {
    int v133 = v4 + 3;
  }
  uint64_t v4 = sub_17AEEA8(v131, v133, a3);
  if ((v103 & 0x400) == 0)
  {
LABEL_237:
    if ((v103 & 0x800) == 0) {
      goto LABEL_238;
    }
    goto LABEL_318;
  }
LABEL_312:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v134 = *(void *)(a1 + 392);
  *(_WORD *)uint64_t v4 = 738;
  unsigned int v135 = *(_DWORD *)(v134 + 20);
  v4[2] = v135;
  if (v135 > 0x7F) {
    uint64_t v136 = sub_188A9CC(v135, v4 + 2);
  }
  else {
    uint64_t v136 = v4 + 3;
  }
  uint64_t v4 = sub_17A367C(v134, v136, a3);
  if ((v103 & 0x800) == 0)
  {
LABEL_238:
    if ((v103 & 0x1000) == 0) {
      goto LABEL_239;
    }
    goto LABEL_324;
  }
LABEL_318:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v137 = *(void *)(a1 + 400);
  *(_WORD *)uint64_t v4 = 746;
  unsigned int v138 = *(_DWORD *)(v137 + 64);
  v4[2] = v138;
  if (v138 > 0x7F) {
    uint64_t v139 = sub_188A9CC(v138, v4 + 2);
  }
  else {
    uint64_t v139 = v4 + 3;
  }
  uint64_t v4 = sub_17ABF08(v137, v139, a3);
  if ((v103 & 0x1000) == 0)
  {
LABEL_239:
    if ((v103 & 0x2000) == 0) {
      goto LABEL_240;
    }
    goto LABEL_330;
  }
LABEL_324:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v140 = *(void *)(a1 + 408);
  *(_WORD *)uint64_t v4 = 754;
  unsigned int v141 = *(_DWORD *)(v140 + 20);
  v4[2] = v141;
  if (v141 > 0x7F) {
    uint64_t v142 = sub_188A9CC(v141, v4 + 2);
  }
  else {
    uint64_t v142 = v4 + 3;
  }
  uint64_t v4 = sub_17A9258(v140, (unint64_t)v142, a3);
  if ((v103 & 0x2000) == 0)
  {
LABEL_240:
    if ((v103 & 0x4000) == 0) {
      goto LABEL_241;
    }
    goto LABEL_336;
  }
LABEL_330:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v143 = *(void *)(a1 + 416);
  *(_WORD *)uint64_t v4 = 762;
  unsigned int v144 = *(_DWORD *)(v143 + 16);
  v4[2] = v144;
  if (v144 > 0x7F) {
    v145 = sub_188A9CC(v144, v4 + 2);
  }
  else {
    v145 = v4 + 3;
  }
  uint64_t v4 = sub_17D99E4(v143, v145, a3);
  if ((v103 & 0x4000) == 0)
  {
LABEL_241:
    if ((v103 & 0x8000) == 0) {
      goto LABEL_242;
    }
    goto LABEL_342;
  }
LABEL_336:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v146 = *(void *)(a1 + 424);
  *(_WORD *)uint64_t v4 = 898;
  unsigned int v147 = *(_DWORD *)(v146 + 16);
  v4[2] = v147;
  if (v147 > 0x7F) {
    uint64_t v148 = sub_188A9CC(v147, v4 + 2);
  }
  else {
    uint64_t v148 = v4 + 3;
  }
  uint64_t v4 = sub_17DA460(v146, v148, a3);
  if ((v103 & 0x8000) == 0)
  {
LABEL_242:
    if ((v103 & 0x10000) == 0) {
      goto LABEL_243;
    }
    goto LABEL_348;
  }
LABEL_342:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v149 = *(void *)(a1 + 432);
  *(_WORD *)uint64_t v4 = 906;
  unsigned int v150 = *(_DWORD *)(v149 + 40);
  v4[2] = v150;
  if (v150 > 0x7F) {
    uint64_t v151 = sub_188A9CC(v150, v4 + 2);
  }
  else {
    uint64_t v151 = v4 + 3;
  }
  uint64_t v4 = sub_17B797C(v149, v151, a3);
  if ((v103 & 0x10000) == 0)
  {
LABEL_243:
    if ((v103 & 0x20000) == 0) {
      goto LABEL_244;
    }
    goto LABEL_354;
  }
LABEL_348:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v152 = *(void *)(a1 + 440);
  *(_WORD *)uint64_t v4 = 914;
  unsigned int v153 = *(_DWORD *)(v152 + 20);
  v4[2] = v153;
  if (v153 > 0x7F) {
    uint64_t v154 = sub_188A9CC(v153, v4 + 2);
  }
  else {
    uint64_t v154 = v4 + 3;
  }
  uint64_t v4 = sub_17B0F80(v152, v154, a3);
  if ((v103 & 0x20000) == 0)
  {
LABEL_244:
    if ((v103 & 0x40000) == 0) {
      goto LABEL_245;
    }
    goto LABEL_360;
  }
LABEL_354:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v155 = *(void *)(a1 + 448);
  *(_WORD *)uint64_t v4 = 922;
  unsigned int v156 = *(_DWORD *)(v155 + 20);
  v4[2] = v156;
  if (v156 > 0x7F) {
    v157 = sub_188A9CC(v156, v4 + 2);
  }
  else {
    v157 = v4 + 3;
  }
  uint64_t v4 = sub_17B5C5C(v155, (unint64_t)v157, a3);
  if ((v103 & 0x40000) == 0)
  {
LABEL_245:
    if ((v103 & 0x80000) == 0) {
      goto LABEL_246;
    }
    goto LABEL_366;
  }
LABEL_360:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v158 = *(void *)(a1 + 456);
  *(_WORD *)uint64_t v4 = 946;
  unsigned int v159 = *(_DWORD *)(v158 + 20);
  v4[2] = v159;
  if (v159 > 0x7F) {
    v160 = sub_188A9CC(v159, v4 + 2);
  }
  else {
    v160 = v4 + 3;
  }
  uint64_t v4 = sub_17DBC7C(v158, (unint64_t)v160, a3);
  if ((v103 & 0x80000) == 0)
  {
LABEL_246:
    if ((v103 & 0x100000) == 0) {
      goto LABEL_247;
    }
    goto LABEL_372;
  }
LABEL_366:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v161 = *(void *)(a1 + 464);
  *(_WORD *)uint64_t v4 = 954;
  unsigned int v162 = *(_DWORD *)(v161 + 20);
  v4[2] = v162;
  if (v162 > 0x7F) {
    uint64_t v163 = sub_188A9CC(v162, v4 + 2);
  }
  else {
    uint64_t v163 = v4 + 3;
  }
  uint64_t v4 = sub_17C1894(v161, v163, a3);
  if ((v103 & 0x100000) == 0)
  {
LABEL_247:
    if ((v103 & 0x200000) == 0) {
      goto LABEL_248;
    }
    goto LABEL_378;
  }
LABEL_372:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v164 = *(void *)(a1 + 472);
  *(_WORD *)uint64_t v4 = 962;
  unsigned int v165 = *(_DWORD *)(v164 + 16);
  v4[2] = v165;
  if (v165 > 0x7F) {
    v166 = sub_188A9CC(v165, v4 + 2);
  }
  else {
    v166 = v4 + 3;
  }
  uint64_t v4 = sub_17D6368(v164, v166, a3);
  if ((v103 & 0x200000) == 0)
  {
LABEL_248:
    if ((v103 & 0x400000) == 0) {
      goto LABEL_249;
    }
    goto LABEL_384;
  }
LABEL_378:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v167 = *(void *)(a1 + 480);
  *(_WORD *)uint64_t v4 = 978;
  unsigned int v168 = *(_DWORD *)(v167 + 16);
  v4[2] = v168;
  if (v168 > 0x7F) {
    v169 = sub_188A9CC(v168, v4 + 2);
  }
  else {
    v169 = v4 + 3;
  }
  uint64_t v4 = sub_1815D98(v167, v169, a3);
  if ((v103 & 0x400000) == 0)
  {
LABEL_249:
    if ((v103 & 0x800000) == 0) {
      goto LABEL_250;
    }
    goto LABEL_390;
  }
LABEL_384:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v170 = *(void *)(a1 + 488);
  *(_WORD *)uint64_t v4 = 986;
  unsigned int v171 = *(_DWORD *)(v170 + 20);
  v4[2] = v171;
  if (v171 > 0x7F) {
    v172 = sub_188A9CC(v171, v4 + 2);
  }
  else {
    v172 = v4 + 3;
  }
  uint64_t v4 = sub_1816854(v170, (unint64_t)v172, a3);
  if ((v103 & 0x800000) == 0)
  {
LABEL_250:
    if ((v103 & 0x1000000) == 0) {
      goto LABEL_402;
    }
    goto LABEL_396;
  }
LABEL_390:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v173 = *(void *)(a1 + 496);
  *(_WORD *)uint64_t v4 = 994;
  unsigned int v174 = *(_DWORD *)(v173 + 20);
  v4[2] = v174;
  if (v174 > 0x7F) {
    uint64_t v175 = sub_188A9CC(v174, v4 + 2);
  }
  else {
    uint64_t v175 = v4 + 3;
  }
  uint64_t v4 = sub_1811B54(v173, (unint64_t)v175, a3);
  if ((v103 & 0x1000000) != 0)
  {
LABEL_396:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v176 = *(void *)(a1 + 504);
    *(_WORD *)uint64_t v4 = 1010;
    unsigned int v177 = *(_DWORD *)(v176 + 40);
    v4[2] = v177;
    if (v177 > 0x7F) {
      uint64_t v178 = sub_188A9CC(v177, v4 + 2);
    }
    else {
      uint64_t v178 = v4 + 3;
    }
    uint64_t v4 = sub_1817788(v176, v178, a3);
  }
LABEL_402:
  if (*(_WORD *)(a1 + 26)) {
    uint64_t v4 = sub_1886844(a1 + 16, 1000, 1050, v4, a3);
  }
  uint64_t v179 = *(void *)(a1 + 8);
  if ((v179 & 1) == 0) {
    return v4;
  }
  unint64_t v181 = v179 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v181 + 31) < 0)
  {
    uint64_t v182 = *(void **)(v181 + 8);
    uint64_t v183 = *(void *)(v181 + 16);
  }
  else
  {
    uint64_t v182 = (void *)(v181 + 8);
    LODWORD(v183) = *(unsigned __int8 *)(v181 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v183)
  {
    uint64_t v184 = (int)v183;
    memcpy(v4, v182, (int)v183);
    v4 += v184;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v182, v183, v4);
}

uint64_t sub_1827F0C(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  unsigned int v3 = *(_DWORD *)(a1 + 40);
  if (!(_BYTE)v3) {
    goto LABEL_11;
  }
  if (v3)
  {
    uint64_t v6 = sub_179E3D8(*(void *)(a1 + 56));
    v2 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v3 & 2) == 0)
    {
LABEL_4:
      if ((v3 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_33;
    }
  }
  else if ((v3 & 2) == 0)
  {
    goto LABEL_4;
  }
  uint64_t v7 = sub_17D1AB0(*(void *)(a1 + 64));
  v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v3 & 4) == 0)
  {
LABEL_5:
    if ((v3 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_36;
  }
LABEL_33:
  uint64_t v8 = *(void *)(a1 + 72);
  uint64_t v9 = *(void *)(v8 + 8);
  if (v9)
  {
    unint64_t v106 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v106 + 31) < 0) {
      uint64_t v10 = *(void *)(v106 + 16);
    }
    else {
      uint64_t v10 = *(unsigned __int8 *)(v106 + 31);
    }
  }
  else
  {
    uint64_t v10 = 0;
  }
  *(_DWORD *)(v8 + 16) = v10;
  v2 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v3 & 8) == 0)
  {
LABEL_6:
    if ((v3 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_37;
  }
LABEL_36:
  uint64_t v11 = sub_17D40B4(*(void *)(a1 + 80));
  v2 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v3 & 0x10) == 0)
  {
LABEL_7:
    if ((v3 & 0x20) == 0) {
      goto LABEL_8;
    }
LABEL_40:
    uint64_t v15 = sub_17E2918(*(void *)(a1 + 96));
    v2 += v15 + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v3 & 0x40) == 0)
    {
LABEL_9:
      if ((v3 & 0x80) == 0) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v12 = *(void *)(a1 + 88);
  uint64_t v13 = *(void *)(v12 + 8);
  if (v13)
  {
    unint64_t v107 = v13 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v107 + 31) < 0) {
      uint64_t v14 = *(void *)(v107 + 16);
    }
    else {
      uint64_t v14 = *(unsigned __int8 *)(v107 + 31);
    }
  }
  else
  {
    uint64_t v14 = 0;
  }
  *(_DWORD *)(v12 + 16) = v14;
  v2 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v3 & 0x20) != 0) {
    goto LABEL_40;
  }
LABEL_8:
  if ((v3 & 0x40) == 0) {
    goto LABEL_9;
  }
LABEL_41:
  uint64_t v16 = *(void *)(a1 + 104);
  uint64_t v17 = *(void *)(v16 + 8);
  if (v17)
  {
    unint64_t v108 = v17 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v108 + 31) < 0) {
      uint64_t v18 = *(void *)(v108 + 16);
    }
    else {
      uint64_t v18 = *(unsigned __int8 *)(v108 + 31);
    }
  }
  else
  {
    uint64_t v18 = 0;
  }
  *(_DWORD *)(v16 + 16) = v18;
  v2 += v18 + ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v3 & 0x80) != 0)
  {
LABEL_10:
    uint64_t v4 = sub_17E71A8(*(void *)(a1 + 112));
    v2 += v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_11:
  if ((v3 & 0xFF00) == 0) {
    goto LABEL_21;
  }
  if ((v3 & 0x100) != 0)
  {
    uint64_t v19 = sub_17E9694(*(void *)(a1 + 120));
    v2 += v19 + ((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v3 & 0x200) == 0)
    {
LABEL_14:
      if ((v3 & 0x400) == 0) {
        goto LABEL_15;
      }
      goto LABEL_47;
    }
  }
  else if ((v3 & 0x200) == 0)
  {
    goto LABEL_14;
  }
  uint64_t v20 = sub_17F3464(*(void *)(a1 + 128));
  v2 += v20 + ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v3 & 0x400) == 0)
  {
LABEL_15:
    if ((v3 & 0x800) == 0) {
      goto LABEL_16;
    }
    goto LABEL_48;
  }
LABEL_47:
  uint64_t v21 = sub_17A1F50(*(void *)(a1 + 136));
  v2 += v21 + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v3 & 0x800) == 0)
  {
LABEL_16:
    if ((v3 & 0x1000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_49;
  }
LABEL_48:
  uint64_t v22 = sub_17CACDC(*(void *)(a1 + 144));
  v2 += v22 + ((9 * (__clz(v22 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v3 & 0x1000) == 0)
  {
LABEL_17:
    if ((v3 & 0x2000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_50;
  }
LABEL_49:
  uint64_t v23 = sub_17CCBF4(*(void *)(a1 + 152));
  v2 += v23 + ((9 * (__clz(v23 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v3 & 0x2000) == 0)
  {
LABEL_18:
    if ((v3 & 0x4000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_51;
  }
LABEL_50:
  uint64_t v24 = sub_17C3120(*(void *)(a1 + 160));
  v2 += v24 + ((9 * (__clz(v24 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v3 & 0x4000) == 0)
  {
LABEL_19:
    if ((v3 & 0x8000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_20;
  }
LABEL_51:
  uint64_t v25 = sub_17CFA34(*(void *)(a1 + 168));
  v2 += v25 + ((9 * (__clz(v25 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v3 & 0x8000) != 0)
  {
LABEL_20:
    uint64_t v5 = sub_17CEE20(*(void *)(a1 + 176));
    v2 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
LABEL_21:
  if ((v3 & 0xFF0000) == 0) {
    goto LABEL_67;
  }
  if ((v3 & 0x10000) != 0)
  {
    uint64_t v26 = *(void *)(a1 + 184);
    uint64_t v27 = *(void *)(v26 + 8);
    if (v27)
    {
      unint64_t v109 = v27 & 0xFFFFFFFFFFFFFFFCLL;
      if (*(char *)(v109 + 31) < 0) {
        uint64_t v28 = *(void *)(v109 + 16);
      }
      else {
        uint64_t v28 = *(unsigned __int8 *)(v109 + 31);
      }
    }
    else
    {
      uint64_t v28 = 0;
    }
    *(_DWORD *)(v26 + 16) = v28;
    v2 += v28 + ((9 * (__clz(v28 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v3 & 0x20000) == 0)
    {
LABEL_24:
      if ((v3 & 0x40000) == 0) {
        goto LABEL_25;
      }
      goto LABEL_57;
    }
  }
  else if ((v3 & 0x20000) == 0)
  {
    goto LABEL_24;
  }
  uint64_t v29 = sub_17EB148(*(void *)(a1 + 192));
  v2 += v29 + ((9 * (__clz(v29 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v3 & 0x40000) == 0)
  {
LABEL_25:
    if ((v3 & 0x80000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_58;
  }
LABEL_57:
  uint64_t v30 = sub_17D2D6C(*(void *)(a1 + 200));
  v2 += v30 + ((9 * (__clz(v30 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v3 & 0x80000) == 0)
  {
LABEL_26:
    if ((v3 & 0x100000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_59;
  }
LABEL_58:
  uint64_t v31 = sub_17C4864(*(void *)(a1 + 208));
  v2 += v31 + ((9 * (__clz(v31 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v3 & 0x100000) == 0)
  {
LABEL_27:
    if ((v3 & 0x200000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_60;
  }
LABEL_59:
  uint64_t v32 = sub_17E39D8(*(void *)(a1 + 216));
  v2 += v32 + ((9 * (__clz(v32 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v3 & 0x200000) == 0)
  {
LABEL_28:
    if ((v3 & 0x400000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_61;
  }
LABEL_60:
  uint64_t v33 = sub_17EC334(*(void *)(a1 + 224));
  v2 += v33 + ((9 * (__clz(v33 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v3 & 0x400000) == 0)
  {
LABEL_29:
    if ((v3 & 0x800000) == 0) {
      goto LABEL_67;
    }
    goto LABEL_64;
  }
LABEL_61:
  uint64_t v34 = *(void *)(a1 + 232);
  uint64_t v35 = *(void *)(v34 + 8);
  if (v35)
  {
    unint64_t v110 = v35 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v110 + 31) < 0) {
      uint64_t v36 = *(void *)(v110 + 16);
    }
    else {
      uint64_t v36 = *(unsigned __int8 *)(v110 + 31);
    }
  }
  else
  {
    uint64_t v36 = 0;
  }
  *(_DWORD *)(v34 + 16) = v36;
  v2 += v36 + ((9 * (__clz(v36 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v3 & 0x800000) != 0)
  {
LABEL_64:
    uint64_t v37 = *(void *)(a1 + 240);
    uint64_t v38 = *(void *)(v37 + 8);
    if (v38)
    {
      unint64_t v111 = v38 & 0xFFFFFFFFFFFFFFFCLL;
      if (*(char *)(v111 + 31) < 0) {
        uint64_t v39 = *(void *)(v111 + 16);
      }
      else {
        uint64_t v39 = *(unsigned __int8 *)(v111 + 31);
      }
    }
    else
    {
      uint64_t v39 = 0;
    }
    *(_DWORD *)(v37 + 16) = v39;
    v2 += v39 + ((9 * (__clz(v39 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
LABEL_67:
  if (!HIBYTE(v3)) {
    goto LABEL_99;
  }
  if ((v3 & 0x1000000) != 0)
  {
    uint64_t v40 = *(void *)(a1 + 248);
    uint64_t v41 = *(void *)(v40 + 8);
    if (v41)
    {
      unint64_t v119 = v41 & 0xFFFFFFFFFFFFFFFCLL;
      if (*(char *)(v119 + 31) < 0) {
        uint64_t v42 = *(void *)(v119 + 16);
      }
      else {
        uint64_t v42 = *(unsigned __int8 *)(v119 + 31);
      }
    }
    else
    {
      uint64_t v42 = 0;
    }
    *(_DWORD *)(v40 + 16) = v42;
    v2 += v42 + ((9 * (__clz(v42 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v3 & 0x2000000) == 0)
    {
LABEL_70:
      if ((v3 & 0x4000000) == 0) {
        goto LABEL_71;
      }
      goto LABEL_83;
    }
  }
  else if ((v3 & 0x2000000) == 0)
  {
    goto LABEL_70;
  }
  uint64_t v43 = *(void *)(a1 + 256);
  uint64_t v44 = *(void *)(v43 + 8);
  if (v44)
  {
    unint64_t v120 = v44 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v120 + 31) < 0) {
      uint64_t v45 = *(void *)(v120 + 16);
    }
    else {
      uint64_t v45 = *(unsigned __int8 *)(v120 + 31);
    }
  }
  else
  {
    uint64_t v45 = 0;
  }
  *(_DWORD *)(v43 + 16) = v45;
  v2 += v45 + ((9 * (__clz(v45 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v3 & 0x4000000) == 0)
  {
LABEL_71:
    if ((v3 & 0x8000000) == 0) {
      goto LABEL_72;
    }
    goto LABEL_86;
  }
LABEL_83:
  uint64_t v46 = *(void *)(a1 + 264);
  uint64_t v47 = *(void *)(v46 + 8);
  if (v47)
  {
    unint64_t v121 = v47 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v121 + 31) < 0) {
      uint64_t v48 = *(void *)(v121 + 16);
    }
    else {
      uint64_t v48 = *(unsigned __int8 *)(v121 + 31);
    }
  }
  else
  {
    uint64_t v48 = 0;
  }
  *(_DWORD *)(v46 + 16) = v48;
  v2 += v48 + ((9 * (__clz(v48 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v3 & 0x8000000) == 0)
  {
LABEL_72:
    if ((v3 & 0x10000000) == 0) {
      goto LABEL_73;
    }
    goto LABEL_87;
  }
LABEL_86:
  uint64_t v49 = sub_17EEF40(*(void *)(a1 + 272));
  v2 += v49 + ((9 * (__clz(v49 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v3 & 0x10000000) == 0)
  {
LABEL_73:
    if ((v3 & 0x20000000) == 0) {
      goto LABEL_74;
    }
    goto LABEL_90;
  }
LABEL_87:
  uint64_t v50 = *(void *)(a1 + 280);
  uint64_t v51 = *(void *)(v50 + 8);
  if (v51)
  {
    unint64_t v122 = v51 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v122 + 31) < 0) {
      uint64_t v52 = *(void *)(v122 + 16);
    }
    else {
      uint64_t v52 = *(unsigned __int8 *)(v122 + 31);
    }
  }
  else
  {
    uint64_t v52 = 0;
  }
  *(_DWORD *)(v50 + 16) = v52;
  v2 += v52 + ((9 * (__clz(v52 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v3 & 0x20000000) == 0)
  {
LABEL_74:
    if ((v3 & 0x40000000) == 0) {
      goto LABEL_75;
    }
    goto LABEL_93;
  }
LABEL_90:
  uint64_t v53 = *(void *)(a1 + 288);
  uint64_t v54 = *(void *)(v53 + 8);
  if (v54)
  {
    unint64_t v123 = v54 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v123 + 31) < 0) {
      uint64_t v55 = *(void *)(v123 + 16);
    }
    else {
      uint64_t v55 = *(unsigned __int8 *)(v123 + 31);
    }
  }
  else
  {
    uint64_t v55 = 0;
  }
  *(_DWORD *)(v53 + 16) = v55;
  v2 += v55 + ((9 * (__clz(v55 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v3 & 0x40000000) == 0)
  {
LABEL_75:
    if ((v3 & 0x80000000) == 0) {
      goto LABEL_99;
    }
    goto LABEL_96;
  }
LABEL_93:
  uint64_t v56 = *(void *)(a1 + 296);
  uint64_t v57 = *(void *)(v56 + 8);
  if (v57)
  {
    unint64_t v124 = v57 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v124 + 31) < 0) {
      uint64_t v58 = *(void *)(v124 + 16);
    }
    else {
      uint64_t v58 = *(unsigned __int8 *)(v124 + 31);
    }
  }
  else
  {
    uint64_t v58 = 0;
  }
  *(_DWORD *)(v56 + 16) = v58;
  v2 += v58 + ((9 * (__clz(v58 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v3 & 0x80000000) != 0)
  {
LABEL_96:
    uint64_t v59 = *(void *)(a1 + 304);
    uint64_t v60 = *(void *)(v59 + 8);
    if (v60)
    {
      unint64_t v125 = v60 & 0xFFFFFFFFFFFFFFFCLL;
      if (*(char *)(v125 + 31) < 0) {
        uint64_t v61 = *(void *)(v125 + 16);
      }
      else {
        uint64_t v61 = *(unsigned __int8 *)(v125 + 31);
      }
    }
    else
    {
      uint64_t v61 = 0;
    }
    *(_DWORD *)(v59 + 16) = v61;
    v2 += v61 + ((9 * (__clz(v61 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
LABEL_99:
  int v62 = *(_DWORD *)(a1 + 44);
  if (!(_BYTE)v62) {
    goto LABEL_109;
  }
  if (v62)
  {
    uint64_t v69 = sub_180BD5C(*(void *)(a1 + 312));
    v2 += v69 + ((9 * (__clz(v69 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v62 & 2) == 0)
    {
LABEL_102:
      if ((v62 & 4) == 0) {
        goto LABEL_103;
      }
      goto LABEL_137;
    }
  }
  else if ((v62 & 2) == 0)
  {
    goto LABEL_102;
  }
  uint64_t v70 = *(void *)(a1 + 320);
  uint64_t v71 = *(void *)(v70 + 8);
  if (v71)
  {
    unint64_t v112 = v71 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v112 + 31) < 0) {
      uint64_t v72 = *(void *)(v112 + 16);
    }
    else {
      uint64_t v72 = *(unsigned __int8 *)(v112 + 31);
    }
  }
  else
  {
    uint64_t v72 = 0;
  }
  *(_DWORD *)(v70 + 16) = v72;
  v2 += v72 + ((9 * (__clz(v72 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v62 & 4) == 0)
  {
LABEL_103:
    if ((v62 & 8) == 0) {
      goto LABEL_104;
    }
    goto LABEL_138;
  }
LABEL_137:
  uint64_t v73 = sub_180F3C4(*(void *)(a1 + 328));
  v2 += v73 + ((9 * (__clz(v73 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v62 & 8) == 0)
  {
LABEL_104:
    if ((v62 & 0x10) == 0) {
      goto LABEL_105;
    }
    goto LABEL_139;
  }
LABEL_138:
  uint64_t v74 = sub_1821518(*(void *)(a1 + 336));
  v2 += v74 + ((9 * (__clz(v74 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v62 & 0x10) == 0)
  {
LABEL_105:
    if ((v62 & 0x20) == 0) {
      goto LABEL_106;
    }
    goto LABEL_140;
  }
LABEL_139:
  uint64_t v75 = sub_18125CC(*(void *)(a1 + 344));
  v2 += v75 + ((9 * (__clz(v75 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v62 & 0x20) == 0)
  {
LABEL_106:
    if ((v62 & 0x40) == 0) {
      goto LABEL_107;
    }
    goto LABEL_143;
  }
LABEL_140:
  uint64_t v76 = *(void *)(a1 + 352);
  uint64_t v77 = *(void *)(v76 + 8);
  if (v77)
  {
    unint64_t v113 = v77 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v113 + 31) < 0) {
      uint64_t v78 = *(void *)(v113 + 16);
    }
    else {
      uint64_t v78 = *(unsigned __int8 *)(v113 + 31);
    }
  }
  else
  {
    uint64_t v78 = 0;
  }
  *(_DWORD *)(v76 + 16) = v78;
  v2 += v78 + ((9 * (__clz(v78 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v62 & 0x40) == 0)
  {
LABEL_107:
    if ((v62 & 0x80) == 0) {
      goto LABEL_109;
    }
    goto LABEL_108;
  }
LABEL_143:
  uint64_t v79 = sub_18133F8(*(void *)(a1 + 360));
  v2 += v79 + ((9 * (__clz(v79 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v62 & 0x80) != 0)
  {
LABEL_108:
    uint64_t v63 = sub_18079AC(*(void *)(a1 + 368));
    v2 += v63 + ((9 * (__clz(v63 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
LABEL_109:
  if ((v62 & 0xFF00) == 0) {
    goto LABEL_119;
  }
  if ((v62 & 0x100) != 0)
  {
    uint64_t v80 = *(void *)(a1 + 376);
    uint64_t v81 = *(void *)(v80 + 8);
    if (v81)
    {
      unint64_t v114 = v81 & 0xFFFFFFFFFFFFFFFCLL;
      if (*(char *)(v114 + 31) < 0) {
        uint64_t v82 = *(void *)(v114 + 16);
      }
      else {
        uint64_t v82 = *(unsigned __int8 *)(v114 + 31);
      }
    }
    else
    {
      uint64_t v82 = 0;
    }
    *(_DWORD *)(v80 + 16) = v82;
    v2 += v82 + ((9 * (__clz(v82 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v62 & 0x200) == 0)
    {
LABEL_112:
      if ((v62 & 0x400) == 0) {
        goto LABEL_113;
      }
      goto LABEL_149;
    }
  }
  else if ((v62 & 0x200) == 0)
  {
    goto LABEL_112;
  }
  uint64_t v83 = sub_17AEFEC(*(void *)(a1 + 384));
  v2 += v83 + ((9 * (__clz(v83 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v62 & 0x400) == 0)
  {
LABEL_113:
    if ((v62 & 0x800) == 0) {
      goto LABEL_114;
    }
    goto LABEL_150;
  }
LABEL_149:
  uint64_t v84 = sub_17A3828(*(void *)(a1 + 392));
  v2 += v84 + ((9 * (__clz(v84 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v62 & 0x800) == 0)
  {
LABEL_114:
    if ((v62 & 0x1000) == 0) {
      goto LABEL_115;
    }
    goto LABEL_151;
  }
LABEL_150:
  uint64_t v85 = sub_17AC0D0(*(void *)(a1 + 400));
  v2 += v85 + ((9 * (__clz(v85 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v62 & 0x1000) == 0)
  {
LABEL_115:
    if ((v62 & 0x2000) == 0) {
      goto LABEL_116;
    }
    goto LABEL_152;
  }
LABEL_151:
  uint64_t v86 = sub_17A9488(*(void *)(a1 + 408));
  v2 += v86 + ((9 * (__clz(v86 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v62 & 0x2000) == 0)
  {
LABEL_116:
    if ((v62 & 0x4000) == 0) {
      goto LABEL_117;
    }
    goto LABEL_155;
  }
LABEL_152:
  uint64_t v87 = *(void *)(a1 + 416);
  uint64_t v88 = *(void *)(v87 + 8);
  if (v88)
  {
    unint64_t v115 = v88 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v115 + 31) < 0) {
      uint64_t v89 = *(void *)(v115 + 16);
    }
    else {
      uint64_t v89 = *(unsigned __int8 *)(v115 + 31);
    }
  }
  else
  {
    uint64_t v89 = 0;
  }
  *(_DWORD *)(v87 + 16) = v89;
  v2 += v89 + ((9 * (__clz(v89 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v62 & 0x4000) == 0)
  {
LABEL_117:
    if ((v62 & 0x8000) == 0) {
      goto LABEL_119;
    }
    goto LABEL_118;
  }
LABEL_155:
  uint64_t v90 = *(void *)(a1 + 424);
  uint64_t v91 = *(void *)(v90 + 8);
  if (v91)
  {
    unint64_t v116 = v91 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v116 + 31) < 0) {
      uint64_t v92 = *(void *)(v116 + 16);
    }
    else {
      uint64_t v92 = *(unsigned __int8 *)(v116 + 31);
    }
  }
  else
  {
    uint64_t v92 = 0;
  }
  *(_DWORD *)(v90 + 16) = v92;
  v2 += v92 + ((9 * (__clz(v92 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v62 & 0x8000) != 0)
  {
LABEL_118:
    uint64_t v64 = sub_17B7AC0(*(void *)(a1 + 432));
    v2 += v64 + ((9 * (__clz(v64 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
LABEL_119:
  if ((v62 & 0xFF0000) == 0) {
    goto LABEL_129;
  }
  if ((v62 & 0x10000) != 0)
  {
    uint64_t v93 = sub_17B10E8(*(void *)(a1 + 440));
    v2 += v93 + ((9 * (__clz(v93 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v62 & 0x20000) == 0)
    {
LABEL_122:
      if ((v62 & 0x40000) == 0) {
        goto LABEL_123;
      }
      goto LABEL_161;
    }
  }
  else if ((v62 & 0x20000) == 0)
  {
    goto LABEL_122;
  }
  uint64_t v94 = sub_17B5EDC(*(void *)(a1 + 448));
  v2 += v94 + ((9 * (__clz(v94 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v62 & 0x40000) == 0)
  {
LABEL_123:
    if ((v62 & 0x80000) == 0) {
      goto LABEL_124;
    }
    goto LABEL_162;
  }
LABEL_161:
  uint64_t v95 = sub_17DBE08(*(void *)(a1 + 456));
  v2 += v95 + ((9 * (__clz(v95 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v62 & 0x80000) == 0)
  {
LABEL_124:
    if ((v62 & 0x100000) == 0) {
      goto LABEL_125;
    }
    goto LABEL_163;
  }
LABEL_162:
  uint64_t v96 = sub_17C1A40(*(void *)(a1 + 464));
  v2 += v96 + ((9 * (__clz(v96 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v62 & 0x100000) == 0)
  {
LABEL_125:
    if ((v62 & 0x200000) == 0) {
      goto LABEL_126;
    }
    goto LABEL_166;
  }
LABEL_163:
  uint64_t v97 = *(void *)(a1 + 472);
  uint64_t v98 = *(void *)(v97 + 8);
  if (v98)
  {
    unint64_t v117 = v98 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v117 + 31) < 0) {
      uint64_t v99 = *(void *)(v117 + 16);
    }
    else {
      uint64_t v99 = *(unsigned __int8 *)(v117 + 31);
    }
  }
  else
  {
    uint64_t v99 = 0;
  }
  *(_DWORD *)(v97 + 16) = v99;
  v2 += v99 + ((9 * (__clz(v99 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v62 & 0x200000) == 0)
  {
LABEL_126:
    if ((v62 & 0x400000) == 0) {
      goto LABEL_127;
    }
    goto LABEL_169;
  }
LABEL_166:
  uint64_t v100 = *(void *)(a1 + 480);
  uint64_t v101 = *(void *)(v100 + 8);
  if (v101)
  {
    unint64_t v118 = v101 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v118 + 31) < 0) {
      uint64_t v102 = *(void *)(v118 + 16);
    }
    else {
      uint64_t v102 = *(unsigned __int8 *)(v118 + 31);
    }
  }
  else
  {
    uint64_t v102 = 0;
  }
  *(_DWORD *)(v100 + 16) = v102;
  v2 += v102 + ((9 * (__clz(v102 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v62 & 0x400000) == 0)
  {
LABEL_127:
    if ((v62 & 0x800000) == 0) {
      goto LABEL_129;
    }
    goto LABEL_128;
  }
LABEL_169:
  uint64_t v103 = sub_1816964(*(void *)(a1 + 488));
  v2 += v103 + ((9 * (__clz(v103 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v62 & 0x800000) != 0)
  {
LABEL_128:
    uint64_t v65 = sub_1811C64(*(void *)(a1 + 496));
    v2 += v65 + ((9 * (__clz(v65 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
LABEL_129:
  if ((v62 & 0x1000000) != 0)
  {
    uint64_t v66 = sub_1817854(*(void *)(a1 + 504));
    v2 += v66 + ((9 * (__clz(v66 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
  uint64_t v67 = *(void *)(a1 + 8);
  if (v67)
  {
    unint64_t v104 = v67 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v104 + 31) < 0) {
      uint64_t v105 = *(void *)(v104 + 16);
    }
    else {
      uint64_t v105 = *(unsigned __int8 *)(v104 + 31);
    }
    v2 += v105;
  }
  *(_DWORD *)(a1 + 48) = v2;
  return v2;
}

void sub_1828E64(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(_DWORD *)(a2 + 40);
  if (!(_BYTE)v4) {
    goto LABEL_75;
  }
  if ((v4 & 1) == 0)
  {
    if ((v4 & 2) == 0) {
      goto LABEL_4;
    }
LABEL_14:
    *(_DWORD *)(a1 + 40) |= 2u;
    uint64_t v9 = *(void *)(a1 + 64);
    if (!v9)
    {
      uint64_t v10 = *(void *)(a1 + 8);
      uint64_t v11 = (void *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
      if (v10) {
        uint64_t v11 = (void *)*v11;
      }
      uint64_t v9 = sub_1832F5C((uint64_t)v11);
      *(void *)(a1 + 64) = v9;
    }
    if (*(void *)(a2 + 64)) {
      uint64_t v12 = *(uint64_t (****)())(a2 + 64);
    }
    else {
      uint64_t v12 = &off_254AD98;
    }
    sub_17D1B64(v9, (uint64_t)v12);
    if ((v4 & 4) == 0) {
      goto LABEL_30;
    }
    goto LABEL_22;
  }
  *(_DWORD *)(a1 + 40) |= 1u;
  uint64_t v5 = *(void *)(a1 + 56);
  if (!v5)
  {
    uint64_t v6 = *(void *)(a1 + 8);
    uint64_t v7 = (void *)(v6 & 0xFFFFFFFFFFFFFFFCLL);
    if (v6) {
      uint64_t v7 = (void *)*v7;
    }
    uint64_t v5 = sub_18306D8((uint64_t)v7);
    *(void *)(a1 + 56) = v5;
  }
  if (*(void *)(a2 + 56)) {
    uint64_t v8 = *(uint64_t (****)())(a2 + 56);
  }
  else {
    uint64_t v8 = &off_2549AE8;
  }
  sub_179EB5C(v5, (uint64_t)v8);
  if ((v4 & 2) != 0) {
    goto LABEL_14;
  }
LABEL_4:
  if ((v4 & 4) != 0)
  {
LABEL_22:
    *(_DWORD *)(a1 + 40) |= 4u;
    uint64_t v13 = *(void *)(a1 + 72);
    if (!v13)
    {
      uint64_t v14 = *(void *)(a1 + 8);
      uint64_t v15 = (void *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
      if (v14) {
        uint64_t v15 = (void *)*v15;
      }
      uint64_t v13 = sub_1832E88((uint64_t)v15);
      *(void *)(a1 + 72) = v13;
    }
    uint64_t v16 = *(uint64_t (****)())(a2 + 72);
    if (!v16) {
      uint64_t v16 = &off_254AD20;
    }
    unint64_t v17 = (unint64_t)v16[1];
    if (v17) {
      sub_188B4F8((uint64_t *)(v13 + 8), (v17 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
  }
LABEL_30:
  if ((v4 & 8) != 0)
  {
    *(_DWORD *)(a1 + 40) |= 8u;
    uint64_t v18 = *(void *)(a1 + 80);
    if (!v18)
    {
      uint64_t v19 = *(void *)(a1 + 8);
      uint64_t v20 = (void *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
      if (v19) {
        uint64_t v20 = (void *)*v20;
      }
      uint64_t v18 = sub_18330CC((uint64_t)v20);
      *(void *)(a1 + 80) = v18;
    }
    if (*(void *)(a2 + 80)) {
      uint64_t v21 = *(uint64_t (****)())(a2 + 80);
    }
    else {
      uint64_t v21 = &off_254AED8;
    }
    sub_129AF38(v18, (uint64_t)v21);
  }
  if ((v4 & 0x10) != 0)
  {
    *(_DWORD *)(a1 + 40) |= 0x10u;
    uint64_t v22 = *(void *)(a1 + 88);
    if (!v22)
    {
      uint64_t v23 = *(void *)(a1 + 8);
      uint64_t v24 = (void *)(v23 & 0xFFFFFFFFFFFFFFFCLL);
      if (v23) {
        uint64_t v24 = (void *)*v24;
      }
      uint64_t v22 = sub_18331E0((uint64_t)v24);
      *(void *)(a1 + 88) = v22;
    }
    uint64_t v25 = *(uint64_t (****)())(a2 + 88);
    if (!v25) {
      uint64_t v25 = &off_254AFA0;
    }
    unint64_t v26 = (unint64_t)v25[1];
    if (v26) {
      sub_188B4F8((uint64_t *)(v22 + 8), (v26 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
  }
  if ((v4 & 0x20) != 0)
  {
    *(_DWORD *)(a1 + 40) |= 0x20u;
    uint64_t v27 = *(void **)(a1 + 96);
    if (!v27)
    {
      uint64_t v28 = *(void *)(a1 + 8);
      uint64_t v29 = (void *)(v28 & 0xFFFFFFFFFFFFFFFCLL);
      if (v28) {
        uint64_t v29 = (void *)*v29;
      }
      uint64_t v27 = sub_1833C50((uint64_t)v29);
      *(void *)(a1 + 96) = v27;
    }
    if (*(void *)(a2 + 96)) {
      uint64_t v30 = *(uint64_t (****)())(a2 + 96);
    }
    else {
      uint64_t v30 = &off_254B468;
    }
    sub_17E29A0((uint64_t)v27, (uint64_t)v30);
  }
  if ((v4 & 0x40) != 0)
  {
    *(_DWORD *)(a1 + 40) |= 0x40u;
    uint64_t v31 = *(void *)(a1 + 104);
    if (!v31)
    {
      uint64_t v32 = *(void *)(a1 + 8);
      uint64_t v33 = (void *)(v32 & 0xFFFFFFFFFFFFFFFCLL);
      if (v32) {
        uint64_t v33 = (void *)*v33;
      }
      uint64_t v31 = sub_18334B0((uint64_t)v33);
      *(void *)(a1 + 104) = v31;
    }
    uint64_t v34 = *(uint64_t (****)())(a2 + 104);
    if (!v34) {
      uint64_t v34 = &off_254B0F0;
    }
    unint64_t v35 = (unint64_t)v34[1];
    if (v35) {
      sub_188B4F8((uint64_t *)(v31 + 8), (v35 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
  }
  if ((v4 & 0x80) != 0)
  {
    *(_DWORD *)(a1 + 40) |= 0x80u;
    uint64_t v36 = *(void *)(a1 + 112);
    if (!v36)
    {
      uint64_t v37 = *(void *)(a1 + 8);
      uint64_t v38 = (void *)(v37 & 0xFFFFFFFFFFFFFFFCLL);
      if (v37) {
        uint64_t v38 = (void *)*v38;
      }
      uint64_t v36 = sub_1834008((uint64_t)v38);
      *(void *)(a1 + 112) = v36;
    }
    if (*(void *)(a2 + 112)) {
      uint64_t v39 = *(uint64_t (****)())(a2 + 112);
    }
    else {
      uint64_t v39 = &off_254B5C0;
    }
    sub_17E72B4(v36, (uint64_t)v39);
  }
LABEL_75:
  if ((v4 & 0xFF00) == 0) {
    goto LABEL_149;
  }
  if ((v4 & 0x100) != 0)
  {
    *(_DWORD *)(a1 + 40) |= 0x100u;
    uint64_t v40 = *(void *)(a1 + 120);
    if (!v40)
    {
      uint64_t v41 = *(void *)(a1 + 8);
      uint64_t v42 = (void *)(v41 & 0xFFFFFFFFFFFFFFFCLL);
      if (v41) {
        uint64_t v42 = (void *)*v42;
      }
      uint64_t v40 = sub_18341C8((uint64_t)v42);
      *(void *)(a1 + 120) = v40;
    }
    if (*(void *)(a2 + 120)) {
      uint64_t v43 = *(uint64_t (****)())(a2 + 120);
    }
    else {
      uint64_t v43 = &off_254B690;
    }
    sub_17E97B0(v40, (uint64_t)v43);
    if ((v4 & 0x200) == 0)
    {
LABEL_78:
      if ((v4 & 0x400) == 0) {
        goto LABEL_79;
      }
      goto LABEL_101;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_78;
  }
  *(_DWORD *)(a1 + 40) |= 0x200u;
  uint64_t v44 = *(void *)(a1 + 128);
  if (!v44)
  {
    uint64_t v45 = *(void *)(a1 + 8);
    uint64_t v46 = (void *)(v45 & 0xFFFFFFFFFFFFFFFCLL);
    if (v45) {
      uint64_t v46 = (void *)*v46;
    }
    uint64_t v44 = sub_1834A78((uint64_t)v46);
    *(void *)(a1 + 128) = v44;
  }
  if (*(void *)(a2 + 128)) {
    uint64_t v47 = *(uint64_t (****)())(a2 + 128);
  }
  else {
    uint64_t v47 = &off_254B970;
  }
  sub_17F375C(v44, (uint64_t)v47);
  if ((v4 & 0x400) == 0)
  {
LABEL_79:
    if ((v4 & 0x800) == 0) {
      goto LABEL_80;
    }
    goto LABEL_109;
  }
LABEL_101:
  *(_DWORD *)(a1 + 40) |= 0x400u;
  uint64_t v48 = *(void *)(a1 + 136);
  if (!v48)
  {
    uint64_t v49 = *(void *)(a1 + 8);
    uint64_t v50 = (void *)(v49 & 0xFFFFFFFFFFFFFFFCLL);
    if (v49) {
      uint64_t v50 = (void *)*v50;
    }
    uint64_t v48 = sub_1830868((uint64_t)v50);
    *(void *)(a1 + 136) = v48;
  }
  if (*(void *)(a2 + 136)) {
    uint64_t v51 = *(uint64_t (****)())(a2 + 136);
  }
  else {
    uint64_t v51 = &off_2549D20;
  }
  sub_17A2000(v48, (uint64_t)v51);
  if ((v4 & 0x800) == 0)
  {
LABEL_80:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_81;
    }
    goto LABEL_117;
  }
LABEL_109:
  *(_DWORD *)(a1 + 40) |= 0x800u;
  uint64_t v52 = *(void *)(a1 + 144);
  if (!v52)
  {
    uint64_t v53 = *(void *)(a1 + 8);
    uint64_t v54 = (void *)(v53 & 0xFFFFFFFFFFFFFFFCLL);
    if (v53) {
      uint64_t v54 = (void *)*v54;
    }
    uint64_t v52 = sub_183292C((uint64_t)v54);
    *(void *)(a1 + 144) = v52;
  }
  if (*(void *)(a2 + 144)) {
    uint64_t v55 = *(uint64_t (****)())(a2 + 144);
  }
  else {
    uint64_t v55 = &off_254AAC8;
  }
  sub_17CB228(v52, (uint64_t)v55);
  if ((v4 & 0x1000) == 0)
  {
LABEL_81:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_82;
    }
    goto LABEL_125;
  }
LABEL_117:
  *(_DWORD *)(a1 + 40) |= 0x1000u;
  uint64_t v56 = *(void *)(a1 + 152);
  if (!v56)
  {
    uint64_t v57 = *(void *)(a1 + 8);
    uint64_t v58 = (void *)(v57 & 0xFFFFFFFFFFFFFFFCLL);
    if (v57) {
      uint64_t v58 = (void *)*v58;
    }
    uint64_t v56 = sub_1832A10((uint64_t)v58);
    *(void *)(a1 + 152) = v56;
  }
  if (*(void *)(a2 + 152)) {
    uint64_t v59 = *(uint64_t (****)())(a2 + 152);
  }
  else {
    uint64_t v59 = &off_254AC18;
  }
  sub_17CCCE8(v56, (uint64_t)v59);
  if ((v4 & 0x2000) == 0)
  {
LABEL_82:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_83;
    }
    goto LABEL_133;
  }
LABEL_125:
  *(_DWORD *)(a1 + 40) |= 0x2000u;
  uint64_t v60 = *(void *)(a1 + 160);
  if (!v60)
  {
    uint64_t v61 = *(void *)(a1 + 8);
    int v62 = (void *)(v61 & 0xFFFFFFFFFFFFFFFCLL);
    if (v61) {
      int v62 = (void *)*v62;
    }
    uint64_t v60 = sub_18325DC((uint64_t)v62);
    *(void *)(a1 + 160) = v60;
  }
  if (*(void *)(a2 + 160)) {
    uint64_t v63 = *(uint64_t (****)())(a2 + 160);
  }
  else {
    uint64_t v63 = &off_254A8F0;
  }
  sub_17C3220(v60, (uint64_t)v63);
  if ((v4 & 0x4000) == 0)
  {
LABEL_83:
    if ((v4 & 0x8000) == 0) {
      goto LABEL_149;
    }
    goto LABEL_141;
  }
LABEL_133:
  *(_DWORD *)(a1 + 40) |= 0x4000u;
  uint64_t v64 = *(std::string **)(a1 + 168);
  if (!v64)
  {
    uint64_t v65 = *(void *)(a1 + 8);
    uint64_t v66 = (void *)(v65 & 0xFFFFFFFFFFFFFFFCLL);
    if (v65) {
      uint64_t v66 = (void *)*v66;
    }
    uint64_t v64 = (std::string *)sub_1832D80((uint64_t)v66);
    *(void *)(a1 + 168) = v64;
  }
  if (*(void *)(a2 + 168)) {
    uint64_t v67 = *(uint64_t (****)())(a2 + 168);
  }
  else {
    uint64_t v67 = &off_254ACE0;
  }
  sub_12329D0(v64, (uint64_t)v67);
  if ((v4 & 0x8000) != 0)
  {
LABEL_141:
    *(_DWORD *)(a1 + 40) |= 0x8000u;
    uint64_t v68 = *(void *)(a1 + 176);
    if (!v68)
    {
      uint64_t v69 = *(void *)(a1 + 8);
      uint64_t v70 = (void *)(v69 & 0xFFFFFFFFFFFFFFFCLL);
      if (v69) {
        uint64_t v70 = (void *)*v70;
      }
      uint64_t v68 = sub_1832C64((uint64_t)v70);
      *(void *)(a1 + 176) = v68;
    }
    if (*(void *)(a2 + 176)) {
      uint64_t v71 = *(uint64_t (****)())(a2 + 176);
    }
    else {
      uint64_t v71 = &off_254AC90;
    }
    sub_17CEED0(v68, (uint64_t)v71);
  }
LABEL_149:
  if ((v4 & 0xFF0000) == 0) {
    goto LABEL_223;
  }
  if ((v4 & 0x10000) != 0)
  {
    *(_DWORD *)(a1 + 40) |= 0x10000u;
    uint64_t v72 = *(void *)(a1 + 184);
    if (!v72)
    {
      uint64_t v73 = *(void *)(a1 + 8);
      uint64_t v74 = (void *)(v73 & 0xFFFFFFFFFFFFFFFCLL);
      if (v73) {
        uint64_t v74 = (void *)*v74;
      }
      uint64_t v72 = sub_1833930((uint64_t)v74);
      *(void *)(a1 + 184) = v72;
    }
    uint64_t v75 = *(uint64_t (****)())(a2 + 184);
    if (!v75) {
      uint64_t v75 = &off_254B2B0;
    }
    unint64_t v76 = (unint64_t)v75[1];
    if (v76) {
      sub_188B4F8((uint64_t *)(v72 + 8), (v76 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
  }
  if ((v4 & 0x20000) != 0)
  {
    *(_DWORD *)(a1 + 40) |= 0x20000u;
    uint64_t v77 = *(void *)(a1 + 192);
    if (!v77)
    {
      uint64_t v78 = *(void *)(a1 + 8);
      uint64_t v79 = (void *)(v78 & 0xFFFFFFFFFFFFFFFCLL);
      if (v78) {
        uint64_t v79 = (void *)*v79;
      }
      uint64_t v77 = sub_1834388((uint64_t)v79);
      *(void *)(a1 + 192) = v77;
    }
    if (*(void *)(a2 + 192)) {
      uint64_t v80 = *(uint64_t (****)())(a2 + 192);
    }
    else {
      uint64_t v80 = &off_254B738;
    }
    sub_129AF38(v77, (uint64_t)v80);
    if ((v4 & 0x40000) == 0)
    {
LABEL_161:
      if ((v4 & 0x80000) == 0) {
        goto LABEL_162;
      }
      goto LABEL_182;
    }
  }
  else if ((v4 & 0x40000) == 0)
  {
    goto LABEL_161;
  }
  *(_DWORD *)(a1 + 40) |= 0x40000u;
  uint64_t v81 = *(void *)(a1 + 200);
  if (!v81)
  {
    uint64_t v82 = *(void *)(a1 + 8);
    uint64_t v83 = (void *)(v82 & 0xFFFFFFFFFFFFFFFCLL);
    if (v82) {
      uint64_t v83 = (void *)*v83;
    }
    uint64_t v81 = sub_1833014((uint64_t)v83);
    *(void *)(a1 + 200) = v81;
  }
  if (*(void *)(a2 + 200)) {
    uint64_t v84 = *(uint64_t (****)())(a2 + 200);
  }
  else {
    uint64_t v84 = &off_254AE28;
  }
  sub_17D1B64(v81, (uint64_t)v84);
  if ((v4 & 0x80000) == 0)
  {
LABEL_162:
    if ((v4 & 0x100000) == 0) {
      goto LABEL_163;
    }
    goto LABEL_190;
  }
LABEL_182:
  *(_DWORD *)(a1 + 40) |= 0x80000u;
  uint64_t v85 = *(void *)(a1 + 208);
  if (!v85)
  {
    uint64_t v86 = *(void *)(a1 + 8);
    uint64_t v87 = (void *)(v86 & 0xFFFFFFFFFFFFFFFCLL);
    if (v86) {
      uint64_t v87 = (void *)*v87;
    }
    uint64_t v85 = sub_1832794((uint64_t)v87);
    *(void *)(a1 + 208) = v85;
  }
  if (*(void *)(a2 + 208)) {
    uint64_t v88 = *(uint64_t (****)())(a2 + 208);
  }
  else {
    uint64_t v88 = &off_254A960;
  }
  sub_17C4914(v85, (uint64_t)v88);
  if ((v4 & 0x100000) == 0)
  {
LABEL_163:
    if ((v4 & 0x200000) == 0) {
      goto LABEL_164;
    }
LABEL_198:
    *(_DWORD *)(a1 + 40) |= 0x200000u;
    uint64_t v93 = *(void *)(a1 + 224);
    if (!v93)
    {
      uint64_t v94 = *(void *)(a1 + 8);
      uint64_t v95 = (void *)(v94 & 0xFFFFFFFFFFFFFFFCLL);
      if (v94) {
        uint64_t v95 = (void *)*v95;
      }
      uint64_t v93 = sub_1834440((uint64_t)v95);
      *(void *)(a1 + 224) = v93;
    }
    if (*(void *)(a2 + 224)) {
      uint64_t v96 = *(uint64_t (****)())(a2 + 224);
    }
    else {
      uint64_t v96 = &off_254B7C0;
    }
    sub_129AF38(v93, (uint64_t)v96);
    if ((v4 & 0x400000) == 0) {
      goto LABEL_214;
    }
    goto LABEL_206;
  }
LABEL_190:
  *(_DWORD *)(a1 + 40) |= 0x100000u;
  uint64_t v89 = *(std::string **)(a1 + 216);
  if (!v89)
  {
    uint64_t v90 = *(void *)(a1 + 8);
    uint64_t v91 = (void *)(v90 & 0xFFFFFFFFFFFFFFFCLL);
    if (v90) {
      uint64_t v91 = (void *)*v91;
    }
    uint64_t v89 = (std::string *)sub_1833D70((uint64_t)v91);
    *(void *)(a1 + 216) = v89;
  }
  if (*(void *)(a2 + 216)) {
    uint64_t v92 = *(uint64_t (****)())(a2 + 216);
  }
  else {
    uint64_t v92 = &off_254B4D0;
  }
  sub_12329D0(v89, (uint64_t)v92);
  if ((v4 & 0x200000) != 0) {
    goto LABEL_198;
  }
LABEL_164:
  if ((v4 & 0x400000) != 0)
  {
LABEL_206:
    *(_DWORD *)(a1 + 40) |= 0x400000u;
    uint64_t v97 = *(void *)(a1 + 232);
    if (!v97)
    {
      uint64_t v98 = *(void *)(a1 + 8);
      uint64_t v99 = (void *)(v98 & 0xFFFFFFFFFFFFFFFCLL);
      if (v98) {
        uint64_t v99 = (void *)*v99;
      }
      uint64_t v97 = sub_1833388((uint64_t)v99);
      *(void *)(a1 + 232) = v97;
    }
    uint64_t v100 = *(uint64_t (****)())(a2 + 232);
    if (!v100) {
      uint64_t v100 = &off_254B068;
    }
    unint64_t v101 = (unint64_t)v100[1];
    if (v101) {
      sub_188B4F8((uint64_t *)(v97 + 8), (v101 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
  }
LABEL_214:
  if ((v4 & 0x800000) != 0)
  {
    *(_DWORD *)(a1 + 40) |= 0x800000u;
    uint64_t v102 = *(void *)(a1 + 240);
    if (!v102)
    {
      uint64_t v103 = *(void *)(a1 + 8);
      unint64_t v104 = (void *)(v103 & 0xFFFFFFFFFFFFFFFCLL);
      if (v103) {
        unint64_t v104 = (void *)*v104;
      }
      uint64_t v102 = sub_1834538((uint64_t)v104);
      *(void *)(a1 + 240) = v102;
    }
    uint64_t v105 = *(uint64_t (****)())(a2 + 240);
    if (!v105) {
      uint64_t v105 = &off_254B830;
    }
    unint64_t v106 = (unint64_t)v105[1];
    if (v106) {
      sub_188B4F8((uint64_t *)(v102 + 8), (v106 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
  }
LABEL_223:
  if (HIBYTE(v4))
  {
    if ((v4 & 0x1000000) != 0)
    {
      *(_DWORD *)(a1 + 40) |= 0x1000000u;
      uint64_t v107 = *(void *)(a1 + 248);
      if (!v107)
      {
        uint64_t v108 = *(void *)(a1 + 8);
        unint64_t v109 = (void *)(v108 & 0xFFFFFFFFFFFFFFFCLL);
        if (v108) {
          unint64_t v109 = (void *)*v109;
        }
        uint64_t v107 = sub_1835424((uint64_t)v109);
        *(void *)(a1 + 248) = v107;
      }
      unint64_t v110 = *(uint64_t (****)())(a2 + 248);
      if (!v110) {
        unint64_t v110 = &off_254BEB0;
      }
      unint64_t v111 = (unint64_t)v110[1];
      if (v111) {
        sub_188B4F8((uint64_t *)(v107 + 8), (v111 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
    }
    if ((v4 & 0x2000000) != 0)
    {
      *(_DWORD *)(a1 + 40) |= 0x2000000u;
      uint64_t v112 = *(void *)(a1 + 256);
      if (!v112)
      {
        uint64_t v113 = *(void *)(a1 + 8);
        unint64_t v114 = (void *)(v113 & 0xFFFFFFFFFFFFFFFCLL);
        if (v113) {
          unint64_t v114 = (void *)*v114;
        }
        uint64_t v112 = sub_1835540((uint64_t)v114);
        *(void *)(a1 + 256) = v112;
      }
      unint64_t v115 = *(uint64_t (****)())(a2 + 256);
      if (!v115) {
        unint64_t v115 = &off_254BF10;
      }
      unint64_t v116 = (unint64_t)v115[1];
      if (v116) {
        sub_188B4F8((uint64_t *)(v112 + 8), (v116 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
    }
    if ((v4 & 0x4000000) != 0)
    {
      *(_DWORD *)(a1 + 40) |= 0x4000000u;
      uint64_t v117 = *(void *)(a1 + 264);
      if (!v117)
      {
        uint64_t v118 = *(void *)(a1 + 8);
        unint64_t v119 = (void *)(v118 & 0xFFFFFFFFFFFFFFFCLL);
        if (v118) {
          unint64_t v119 = (void *)*v119;
        }
        uint64_t v117 = sub_1834660((uint64_t)v119);
        *(void *)(a1 + 264) = v117;
      }
      unint64_t v120 = *(uint64_t (****)())(a2 + 264);
      if (!v120) {
        unint64_t v120 = &off_254B8A8;
      }
      unint64_t v121 = (unint64_t)v120[1];
      if (v121) {
        sub_188B4F8((uint64_t *)(v117 + 8), (v121 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
    }
    if ((v4 & 0x8000000) != 0)
    {
      *(_DWORD *)(a1 + 40) |= 0x8000000u;
      uint64_t v122 = *(void *)(a1 + 272);
      if (!v122)
      {
        uint64_t v123 = *(void *)(a1 + 8);
        unint64_t v124 = (void *)(v123 & 0xFFFFFFFFFFFFFFFCLL);
        if (v123) {
          unint64_t v124 = (void *)*v124;
        }
        uint64_t v122 = sub_1834774((uint64_t)v124);
        *(void *)(a1 + 272) = v122;
      }
      if (*(void *)(a2 + 272)) {
        unint64_t v125 = *(uint64_t (****)())(a2 + 272);
      }
      else {
        unint64_t v125 = &off_254B8F8;
      }
      sub_14A2CE4(v122, (uint64_t)v125);
    }
    if ((v4 & 0x10000000) != 0)
    {
      *(_DWORD *)(a1 + 40) |= 0x10000000u;
      uint64_t v126 = *(void *)(a1 + 280);
      if (!v126)
      {
        uint64_t v127 = *(void *)(a1 + 8);
        uint64_t v128 = (void *)(v127 & 0xFFFFFFFFFFFFFFFCLL);
        if (v127) {
          uint64_t v128 = (void *)*v128;
        }
        uint64_t v126 = sub_183563C((uint64_t)v128);
        *(void *)(a1 + 280) = v126;
      }
      unsigned int v129 = *(uint64_t (****)())(a2 + 280);
      if (!v129) {
        unsigned int v129 = &off_254BF48;
      }
      unint64_t v130 = (unint64_t)v129[1];
      if (v130) {
        sub_188B4F8((uint64_t *)(v126 + 8), (v130 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
    }
    if ((v4 & 0x20000000) != 0)
    {
      *(_DWORD *)(a1 + 40) |= 0x20000000u;
      uint64_t v131 = *(void *)(a1 + 288);
      if (!v131)
      {
        uint64_t v132 = *(void *)(a1 + 8);
        int v133 = (void *)(v132 & 0xFFFFFFFFFFFFFFFCLL);
        if (v132) {
          int v133 = (void *)*v133;
        }
        uint64_t v131 = sub_18348B4((uint64_t)v133);
        *(void *)(a1 + 288) = v131;
      }
      uint64_t v134 = *(uint64_t (****)())(a2 + 288);
      if (!v134) {
        uint64_t v134 = &off_254B958;
      }
      unint64_t v135 = (unint64_t)v134[1];
      if (v135) {
        sub_188B4F8((uint64_t *)(v131 + 8), (v135 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
    }
    if ((v4 & 0x40000000) != 0)
    {
      *(_DWORD *)(a1 + 40) |= 0x40000000u;
      uint64_t v136 = *(void *)(a1 + 296);
      if (!v136)
      {
        uint64_t v137 = *(void *)(a1 + 8);
        unsigned int v138 = (void *)(v137 & 0xFFFFFFFFFFFFFFFCLL);
        if (v137) {
          unsigned int v138 = (void *)*v138;
        }
        uint64_t v136 = sub_1835CC0((uint64_t)v138);
        *(void *)(a1 + 296) = v136;
      }
      uint64_t v139 = *(uint64_t (****)())(a2 + 296);
      if (!v139) {
        uint64_t v139 = &off_254C090;
      }
      unint64_t v140 = (unint64_t)v139[1];
      if (v140) {
        sub_188B4F8((uint64_t *)(v136 + 8), (v140 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
    }
    if ((v4 & 0x80000000) != 0)
    {
      *(_DWORD *)(a1 + 40) |= 0x80000000;
      uint64_t v141 = *(void *)(a1 + 304);
      if (!v141)
      {
        uint64_t v142 = *(void *)(a1 + 8);
        uint64_t v143 = (void *)(v142 & 0xFFFFFFFFFFFFFFFCLL);
        if (v142) {
          uint64_t v143 = (void *)*v143;
        }
        uint64_t v141 = sub_1835DB0((uint64_t)v143);
        *(void *)(a1 + 304) = v141;
      }
      unsigned int v144 = *(uint64_t (****)())(a2 + 304);
      if (!v144) {
        unsigned int v144 = &off_254C0C8;
      }
      unint64_t v145 = (unint64_t)v144[1];
      if (v145) {
        sub_188B4F8((uint64_t *)(v141 + 8), (v145 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
    }
  }
  int v146 = *(_DWORD *)(a2 + 44);
  if ((_BYTE)v146)
  {
    if (v146)
    {
      *(_DWORD *)(a1 + 44) |= 1u;
      uint64_t v147 = *(void *)(a1 + 312);
      if (!v147)
      {
        uint64_t v148 = *(void *)(a1 + 8);
        uint64_t v149 = (void *)(v148 & 0xFFFFFFFFFFFFFFFCLL);
        if (v148) {
          uint64_t v149 = (void *)*v149;
        }
        uint64_t v147 = sub_1835EAC((uint64_t)v149);
        *(void *)(a1 + 312) = v147;
      }
      if (*(void *)(a2 + 312)) {
        unsigned int v150 = *(uint64_t (****)())(a2 + 312);
      }
      else {
        unsigned int v150 = &off_254C100;
      }
      sub_180BF10(v147, (uint64_t)v150);
    }
    if ((v146 & 2) != 0)
    {
      *(_DWORD *)(a1 + 44) |= 2u;
      uint64_t v151 = *(void *)(a1 + 320);
      if (!v151)
      {
        uint64_t v152 = *(void *)(a1 + 8);
        unsigned int v153 = (void *)(v152 & 0xFFFFFFFFFFFFFFFCLL);
        if (v152) {
          unsigned int v153 = (void *)*v153;
        }
        uint64_t v151 = sub_1835FB4((uint64_t)v153);
        *(void *)(a1 + 320) = v151;
      }
      uint64_t v154 = *(uint64_t (****)())(a2 + 320);
      if (!v154) {
        uint64_t v154 = &off_254C168;
      }
      unint64_t v155 = (unint64_t)v154[1];
      if (v155) {
        sub_188B4F8((uint64_t *)(v151 + 8), (v155 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
    }
    if ((v146 & 4) != 0)
    {
      *(_DWORD *)(a1 + 44) |= 4u;
      uint64_t v156 = *(void *)(a1 + 328);
      if (!v156)
      {
        uint64_t v157 = *(void *)(a1 + 8);
        uint64_t v158 = (void *)(v157 & 0xFFFFFFFFFFFFFFFCLL);
        if (v157) {
          uint64_t v158 = (void *)*v158;
        }
        uint64_t v156 = sub_1836218((uint64_t)v158);
        *(void *)(a1 + 328) = v156;
      }
      if (*(void *)(a2 + 328)) {
        unsigned int v159 = *(uint64_t (****)())(a2 + 328);
      }
      else {
        unsigned int v159 = &off_254C248;
      }
      sub_180F4FC(v156, (uint64_t)v159);
      if ((v146 & 8) == 0)
      {
LABEL_317:
        if ((v146 & 0x10) == 0) {
          goto LABEL_318;
        }
        goto LABEL_336;
      }
    }
    else if ((v146 & 8) == 0)
    {
      goto LABEL_317;
    }
    *(_DWORD *)(a1 + 44) |= 8u;
    uint64_t v160 = *(void *)(a1 + 336);
    if (!v160)
    {
      uint64_t v161 = *(void *)(a1 + 8);
      unsigned int v162 = (void *)(v161 & 0xFFFFFFFFFFFFFFFCLL);
      if (v161) {
        unsigned int v162 = (void *)*v162;
      }
      uint64_t v160 = sub_1836D58((uint64_t)v162);
      *(void *)(a1 + 336) = v160;
    }
    if (*(void *)(a2 + 336)) {
      uint64_t v163 = *(uint64_t (****)())(a2 + 336);
    }
    else {
      uint64_t v163 = &off_254C7E8;
    }
    sub_18215C8(v160, (uint64_t)v163);
    if ((v146 & 0x10) == 0)
    {
LABEL_318:
      if ((v146 & 0x20) == 0)
      {
LABEL_352:
        if ((v146 & 0x40) != 0)
        {
          *(_DWORD *)(a1 + 44) |= 0x40u;
          uint64_t v173 = *(void *)(a1 + 360);
          if (!v173)
          {
            uint64_t v174 = *(void *)(a1 + 8);
            uint64_t v175 = (void *)(v174 & 0xFFFFFFFFFFFFFFFCLL);
            if (v174) {
              uint64_t v175 = (void *)*v175;
            }
            uint64_t v173 = sub_183676C((uint64_t)v175);
            *(void *)(a1 + 360) = v173;
          }
          if (*(void *)(a2 + 360)) {
            uint64_t v176 = *(uint64_t (****)())(a2 + 360);
          }
          else {
            uint64_t v176 = &off_254C3E8;
          }
          sub_18134A8(v173, (uint64_t)v176);
        }
        if ((v146 & 0x80) != 0)
        {
          *(_DWORD *)(a1 + 44) |= 0x80u;
          unsigned int v177 = *(std::string **)(a1 + 368);
          if (!v177)
          {
            uint64_t v178 = *(void *)(a1 + 8);
            uint64_t v179 = (void *)(v178 & 0xFFFFFFFFFFFFFFFCLL);
            if (v178) {
              uint64_t v179 = (void *)*v179;
            }
            unsigned int v177 = (std::string *)sub_1835950((uint64_t)v179);
            *(void *)(a1 + 368) = v177;
          }
          if (*(void *)(a2 + 368)) {
            unsigned int v180 = *(uint64_t (****)())(a2 + 368);
          }
          else {
            unsigned int v180 = &off_254BFE0;
          }
          sub_1807A94(v177, (uint64_t)v180);
        }
        goto LABEL_370;
      }
LABEL_344:
      *(_DWORD *)(a1 + 44) |= 0x20u;
      uint64_t v168 = *(void *)(a1 + 352);
      if (!v168)
      {
        uint64_t v169 = *(void *)(a1 + 8);
        uint64_t v170 = (void *)(v169 & 0xFFFFFFFFFFFFFFFCLL);
        if (v169) {
          uint64_t v170 = (void *)*v170;
        }
        uint64_t v168 = sub_1836600((uint64_t)v170);
        *(void *)(a1 + 352) = v168;
      }
      unsigned int v171 = *(uint64_t (****)())(a2 + 352);
      if (!v171) {
        unsigned int v171 = &off_254C388;
      }
      unint64_t v172 = (unint64_t)v171[1];
      if (v172) {
        sub_188B4F8((uint64_t *)(v168 + 8), (v172 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      goto LABEL_352;
    }
LABEL_336:
    *(_DWORD *)(a1 + 44) |= 0x10u;
    uint64_t v164 = *(void **)(a1 + 344);
    if (!v164)
    {
      uint64_t v165 = *(void *)(a1 + 8);
      v166 = (void *)(v165 & 0xFFFFFFFFFFFFFFFCLL);
      if (v165) {
        v166 = (void *)*v166;
      }
      uint64_t v164 = sub_1836678((uint64_t)v166);
      *(void *)(a1 + 344) = v164;
    }
    if (*(void *)(a2 + 344)) {
      uint64_t v167 = *(uint64_t (****)())(a2 + 344);
    }
    else {
      uint64_t v167 = &off_254C3A0;
    }
    sub_1812654((uint64_t)v164, (uint64_t)v167);
    if ((v146 & 0x20) == 0) {
      goto LABEL_352;
    }
    goto LABEL_344;
  }
LABEL_370:
  if ((v146 & 0xFF00) == 0) {
    goto LABEL_444;
  }
  if ((v146 & 0x100) != 0)
  {
    *(_DWORD *)(a1 + 44) |= 0x100u;
    uint64_t v181 = *(void *)(a1 + 376);
    if (!v181)
    {
      uint64_t v182 = *(void *)(a1 + 8);
      uint64_t v183 = (void *)(v182 & 0xFFFFFFFFFFFFFFFCLL);
      if (v182) {
        uint64_t v183 = (void *)*v183;
      }
      uint64_t v181 = sub_1835A70((uint64_t)v183);
      *(void *)(a1 + 376) = v181;
    }
    uint64_t v184 = *(uint64_t (****)())(a2 + 376);
    if (!v184) {
      uint64_t v184 = &off_254C040;
    }
    unint64_t v185 = (unint64_t)v184[1];
    if (v185) {
      sub_188B4F8((uint64_t *)(v181 + 8), (v185 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
  }
  if ((v146 & 0x200) != 0)
  {
    *(_DWORD *)(a1 + 44) |= 0x200u;
    uint64_t v186 = *(void *)(a1 + 384);
    if (!v186)
    {
      uint64_t v187 = *(void *)(a1 + 8);
      uint64_t v188 = (void *)(v187 & 0xFFFFFFFFFFFFFFFCLL);
      if (v187) {
        uint64_t v188 = (void *)*v188;
      }
      uint64_t v186 = sub_1831434((uint64_t)v188);
      *(void *)(a1 + 384) = v186;
    }
    if (*(void *)(a2 + 384)) {
      unsigned int v189 = *(uint64_t (****)())(a2 + 384);
    }
    else {
      unsigned int v189 = &off_254A1C0;
    }
    sub_17AF09C(v186, (uint64_t)v189);
    if ((v146 & 0x400) == 0)
    {
LABEL_382:
      if ((v146 & 0x800) == 0) {
        goto LABEL_383;
      }
      goto LABEL_402;
    }
  }
  else if ((v146 & 0x400) == 0)
  {
    goto LABEL_382;
  }
  *(_DWORD *)(a1 + 44) |= 0x400u;
  v190 = *(void **)(a1 + 392);
  if (!v190)
  {
    uint64_t v191 = *(void *)(a1 + 8);
    v192 = (void *)(v191 & 0xFFFFFFFFFFFFFFFCLL);
    if (v191) {
      v192 = (void *)*v192;
    }
    v190 = sub_18309B4((uint64_t)v192);
    *(void *)(a1 + 392) = v190;
  }
  if (*(void *)(a2 + 392)) {
    unint64_t v193 = *(uint64_t (****)())(a2 + 392);
  }
  else {
    unint64_t v193 = &off_2549DC0;
  }
  sub_17A390C((uint64_t)v190, (uint64_t)v193);
  if ((v146 & 0x800) == 0)
  {
LABEL_383:
    if ((v146 & 0x1000) == 0) {
      goto LABEL_384;
    }
LABEL_410:
    *(_DWORD *)(a1 + 44) |= 0x1000u;
    v198 = *(void **)(a1 + 408);
    if (!v198)
    {
      uint64_t v199 = *(void *)(a1 + 8);
      v200 = (void *)(v199 & 0xFFFFFFFFFFFFFFFCLL);
      if (v199) {
        v200 = (void *)*v200;
      }
      v198 = sub_1830FBC((uint64_t)v200);
      *(void *)(a1 + 408) = v198;
    }
    if (*(void *)(a2 + 408)) {
      v201 = *(uint64_t (****)())(a2 + 408);
    }
    else {
      v201 = &off_2549FD8;
    }
    sub_17A95BC((uint64_t)v198, (uint64_t)v201);
    if ((v146 & 0x2000) == 0) {
      goto LABEL_426;
    }
    goto LABEL_418;
  }
LABEL_402:
  *(_DWORD *)(a1 + 44) |= 0x800u;
  uint64_t v194 = *(void *)(a1 + 400);
  if (!v194)
  {
    uint64_t v195 = *(void *)(a1 + 8);
    uint64_t v196 = (void *)(v195 & 0xFFFFFFFFFFFFFFFCLL);
    if (v195) {
      uint64_t v196 = (void *)*v196;
    }
    uint64_t v194 = sub_1831250((uint64_t)v196);
    *(void *)(a1 + 400) = v194;
  }
  if (*(void *)(a2 + 400)) {
    v197 = *(uint64_t (****)())(a2 + 400);
  }
  else {
    v197 = &off_254A0D0;
  }
  sub_17AC1D0(v194, (uint64_t)v197);
  if ((v146 & 0x1000) != 0) {
    goto LABEL_410;
  }
LABEL_384:
  if ((v146 & 0x2000) != 0)
  {
LABEL_418:
    *(_DWORD *)(a1 + 44) |= 0x2000u;
    uint64_t v202 = *(void *)(a1 + 416);
    if (!v202)
    {
      uint64_t v203 = *(void *)(a1 + 8);
      v204 = (void *)(v203 & 0xFFFFFFFFFFFFFFFCLL);
      if (v203) {
        v204 = (void *)*v204;
      }
      uint64_t v202 = sub_18335B8((uint64_t)v204);
      *(void *)(a1 + 416) = v202;
    }
    v205 = *(uint64_t (****)())(a2 + 416);
    if (!v205) {
      v205 = &off_254B150;
    }
    unint64_t v206 = (unint64_t)v205[1];
    if (v206) {
      sub_188B4F8((uint64_t *)(v202 + 8), (v206 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
  }
LABEL_426:
  if ((v146 & 0x4000) != 0)
  {
    *(_DWORD *)(a1 + 44) |= 0x4000u;
    uint64_t v207 = *(void *)(a1 + 424);
    if (!v207)
    {
      uint64_t v208 = *(void *)(a1 + 8);
      v209 = (void *)(v208 & 0xFFFFFFFFFFFFFFFCLL);
      if (v208) {
        v209 = (void *)*v209;
      }
      uint64_t v207 = sub_18336D0((uint64_t)v209);
      *(void *)(a1 + 424) = v207;
    }
    uint64_t v210 = *(uint64_t (****)())(a2 + 424);
    if (!v210) {
      uint64_t v210 = &off_254B198;
    }
    unint64_t v211 = (unint64_t)v210[1];
    if (v211) {
      sub_188B4F8((uint64_t *)(v207 + 8), (v211 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
  }
  if ((v146 & 0x8000) != 0)
  {
    *(_DWORD *)(a1 + 44) |= 0x8000u;
    uint64_t v212 = *(void *)(a1 + 432);
    if (!v212)
    {
      uint64_t v213 = *(void *)(a1 + 8);
      uint64_t v214 = (void *)(v213 & 0xFFFFFFFFFFFFFFFCLL);
      if (v213) {
        uint64_t v214 = (void *)*v214;
      }
      uint64_t v212 = sub_1831C00((uint64_t)v214);
      *(void *)(a1 + 432) = v212;
    }
    if (*(void *)(a2 + 432)) {
      uint64_t v215 = *(uint64_t (****)())(a2 + 432);
    }
    else {
      uint64_t v215 = &off_254A490;
    }
    sub_17B7B70(v212, (uint64_t)v215);
  }
LABEL_444:
  if ((v146 & 0xFF0000) == 0) {
    goto LABEL_518;
  }
  if ((v146 & 0x10000) != 0)
  {
    *(_DWORD *)(a1 + 44) |= 0x10000u;
    v216 = *(void **)(a1 + 440);
    if (!v216)
    {
      uint64_t v217 = *(void *)(a1 + 8);
      uint64_t v218 = (void *)(v217 & 0xFFFFFFFFFFFFFFFCLL);
      if (v217) {
        uint64_t v218 = (void *)*v218;
      }
      v216 = sub_1831674((uint64_t)v218);
      *(void *)(a1 + 440) = v216;
    }
    if (*(void *)(a2 + 440)) {
      uint64_t v219 = *(uint64_t (****)())(a2 + 440);
    }
    else {
      uint64_t v219 = &off_254A280;
    }
    sub_17B11E0((uint64_t)v216, (uint64_t)v219);
    if ((v146 & 0x20000) == 0)
    {
LABEL_447:
      if ((v146 & 0x40000) == 0) {
        goto LABEL_448;
      }
      goto LABEL_467;
    }
  }
  else if ((v146 & 0x20000) == 0)
  {
    goto LABEL_447;
  }
  *(_DWORD *)(a1 + 44) |= 0x20000u;
  uint64_t v220 = *(void *)(a1 + 448);
  if (!v220)
  {
    uint64_t v221 = *(void *)(a1 + 8);
    uint64_t v222 = (void *)(v221 & 0xFFFFFFFFFFFFFFFCLL);
    if (v221) {
      uint64_t v222 = (void *)*v222;
    }
    uint64_t v220 = sub_1831A58((uint64_t)v222);
    *(void *)(a1 + 448) = v220;
  }
  if (*(void *)(a2 + 448)) {
    uint64_t v223 = *(uint64_t (****)())(a2 + 448);
  }
  else {
    uint64_t v223 = &off_254A3E0;
  }
  sub_17B6030(v220, (uint64_t)v223);
  if ((v146 & 0x40000) == 0)
  {
LABEL_448:
    if ((v146 & 0x80000) == 0) {
      goto LABEL_449;
    }
LABEL_475:
    *(_DWORD *)(a1 + 44) |= 0x80000u;
    v228 = *(void **)(a1 + 464);
    if (!v228)
    {
      uint64_t v229 = *(void *)(a1 + 8);
      uint64_t v230 = (void *)(v229 & 0xFFFFFFFFFFFFFFFCLL);
      if (v229) {
        uint64_t v230 = (void *)*v230;
      }
      v228 = sub_18324B8((uint64_t)v230);
      *(void *)(a1 + 464) = v228;
    }
    if (*(void *)(a2 + 464)) {
      uint64_t v231 = *(uint64_t (****)())(a2 + 464);
    }
    else {
      uint64_t v231 = &off_254A878;
    }
    sub_17C1B24((uint64_t)v228, (uint64_t)v231);
    if ((v146 & 0x100000) == 0) {
      goto LABEL_491;
    }
    goto LABEL_483;
  }
LABEL_467:
  *(_DWORD *)(a1 + 44) |= 0x40000u;
  v224 = *(std::string **)(a1 + 456);
  if (!v224)
  {
    uint64_t v225 = *(void *)(a1 + 8);
    uint64_t v226 = (void *)(v225 & 0xFFFFFFFFFFFFFFFCLL);
    if (v225) {
      uint64_t v226 = (void *)*v226;
    }
    v224 = (std::string *)sub_18337F8((uint64_t)v226);
    *(void *)(a1 + 456) = v224;
  }
  if (*(void *)(a2 + 456)) {
    uint64_t v227 = *(uint64_t (****)())(a2 + 456);
  }
  else {
    uint64_t v227 = &off_254B210;
  }
  sub_176B134(v224, (uint64_t)v227);
  if ((v146 & 0x80000) != 0) {
    goto LABEL_475;
  }
LABEL_449:
  if ((v146 & 0x100000) != 0)
  {
LABEL_483:
    *(_DWORD *)(a1 + 44) |= 0x100000u;
    uint64_t v232 = *(void *)(a1 + 472);
    if (!v232)
    {
      uint64_t v233 = *(void *)(a1 + 8);
      v234 = (void *)(v233 & 0xFFFFFFFFFFFFFFFCLL);
      if (v233) {
        v234 = (void *)*v234;
      }
      uint64_t v232 = sub_18332B4((uint64_t)v234);
      *(void *)(a1 + 472) = v232;
    }
    uint64_t v235 = *(uint64_t (****)())(a2 + 472);
    if (!v235) {
      uint64_t v235 = &off_254B000;
    }
    unint64_t v236 = (unint64_t)v235[1];
    if (v236) {
      sub_188B4F8((uint64_t *)(v232 + 8), (v236 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
  }
LABEL_491:
  if ((v146 & 0x200000) != 0)
  {
    *(_DWORD *)(a1 + 44) |= 0x200000u;
    uint64_t v237 = *(void *)(a1 + 480);
    if (!v237)
    {
      uint64_t v238 = *(void *)(a1 + 8);
      uint64_t v239 = (void *)(v238 & 0xFFFFFFFFFFFFFFFCLL);
      if (v238) {
        uint64_t v239 = (void *)*v239;
      }
      uint64_t v237 = sub_1836ADC((uint64_t)v239);
      *(void *)(a1 + 480) = v237;
    }
    v240 = *(uint64_t (****)())(a2 + 480);
    if (!v240) {
      v240 = &off_254C500;
    }
    unint64_t v241 = (unint64_t)v240[1];
    if (v241) {
      sub_188B4F8((uint64_t *)(v237 + 8), (v241 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
  }
  if ((v146 & 0x400000) != 0)
  {
    *(_DWORD *)(a1 + 44) |= 0x400000u;
    uint64_t v242 = *(std::string **)(a1 + 488);
    if (!v242)
    {
      uint64_t v243 = *(void *)(a1 + 8);
      v244 = (void *)(v243 & 0xFFFFFFFFFFFFFFFCLL);
      if (v243) {
        v244 = (void *)*v244;
      }
      uint64_t v242 = (std::string *)sub_1836BCC((uint64_t)v244);
      *(void *)(a1 + 488) = v242;
    }
    if (*(void *)(a2 + 488)) {
      v245 = *(uint64_t (****)())(a2 + 488);
    }
    else {
      v245 = &off_254C538;
    }
    sub_18169EC(v242, (uint64_t)v245);
  }
  if ((v146 & 0x800000) != 0)
  {
    *(_DWORD *)(a1 + 44) |= 0x800000u;
    v246 = *(std::string **)(a1 + 496);
    if (!v246)
    {
      uint64_t v247 = *(void *)(a1 + 8);
      v248 = (void *)(v247 & 0xFFFFFFFFFFFFFFFCLL);
      if (v247) {
        v248 = (void *)*v248;
      }
      v246 = (std::string *)sub_1836588((uint64_t)v248);
      *(void *)(a1 + 496) = v246;
    }
    if (*(void *)(a2 + 496)) {
      v249 = *(uint64_t (****)())(a2 + 496);
    }
    else {
      v249 = &off_254C368;
    }
    sub_1811D04(v246, (uint64_t)v249);
  }
LABEL_518:
  if ((v146 & 0x1000000) != 0)
  {
    *(_DWORD *)(a1 + 44) |= 0x1000000u;
    uint64_t v250 = *(void *)(a1 + 504);
    if (!v250)
    {
      uint64_t v251 = *(void *)(a1 + 8);
      v252 = (void *)(v251 & 0xFFFFFFFFFFFFFFFCLL);
      if (v251) {
        v252 = (void *)*v252;
      }
      uint64_t v250 = sub_1836CA0((uint64_t)v252);
      *(void *)(a1 + 504) = v250;
    }
    if (*(void *)(a2 + 504)) {
      v253 = *(uint64_t (****)())(a2 + 504);
    }
    else {
      v253 = &off_254C598;
    }
    sub_129AF38(v250, (uint64_t)v253);
  }
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v254 = *(void *)(a2 + 8);
  if (v254)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v254 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_182A208(uint64_t a1)
{
  uint64_t result = sub_18856CC(a1 + 16);
  if (result)
  {
    int v3 = *(_DWORD *)(a1 + 40);
    if (v3)
    {
      uint64_t result = sub_179F600(*(void *)(a1 + 56));
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 2) != 0)
    {
      uint64_t result = sub_18856CC(*(void *)(a1 + 64) + 16);
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 8) != 0)
    {
      uint64_t result = sub_18856CC(*(void *)(a1 + 80) + 16);
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 0x20) != 0)
    {
      uint64_t v4 = *(void *)(a1 + 96);
      if (*(unsigned char *)(v4 + 16))
      {
        uint64_t result = sub_171C194(*(void *)(v4 + 24));
        if (!result) {
          return result;
        }
        int v3 = *(_DWORD *)(a1 + 40);
      }
    }
    if ((v3 & 0x80) != 0)
    {
      uint64_t v5 = *(void *)(a1 + 112);
      uint64_t v6 = *(unsigned int *)(v5 + 56);
      while ((int)v6 >= 1)
      {
        uint64_t v7 = v6 - 1;
        char v8 = sub_18856CC(*(void *)(*(void *)(v5 + 64) + 8 * v6) + 16);
        uint64_t v6 = v7;
        if ((v8 & 1) == 0) {
          return 0;
        }
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 0x100) != 0)
    {
      uint64_t v9 = *(void *)(a1 + 120);
      if (*(unsigned char *)(v9 + 16))
      {
        uint64_t result = sub_15B1FC0(*(void *)(v9 + 48));
        if (!result) {
          return result;
        }
        int v3 = *(_DWORD *)(a1 + 40);
      }
    }
    if ((v3 & 0x200) != 0)
    {
      uint64_t result = sub_17F3ACC(*(void *)(a1 + 128));
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 0x400) != 0)
    {
      uint64_t v10 = *(void *)(a1 + 136);
      uint64_t v11 = *(unsigned int *)(v10 + 24);
      while ((int)v11 >= 1)
      {
        uint64_t v12 = v11 - 1;
        char v13 = sub_12A0DC4(*(void *)(*(void *)(v10 + 32) + 8 * v11));
        uint64_t result = 0;
        uint64_t v11 = v12;
        if ((v13 & 1) == 0) {
          return result;
        }
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 0x800) != 0)
    {
      uint64_t result = sub_17CB938(*(void *)(a1 + 144));
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 0x1000) != 0)
    {
      uint64_t v14 = *(void *)(a1 + 152);
      if ((*(unsigned char *)(v14 + 16) & 2) != 0)
      {
        uint64_t result = sub_15B1FC0(*(void *)(v14 + 32));
        if (!result) {
          return result;
        }
        int v3 = *(_DWORD *)(a1 + 40);
      }
    }
    if ((v3 & 0x2000) != 0)
    {
      uint64_t v15 = *(void *)(a1 + 160);
      uint64_t v16 = *(unsigned int *)(v15 + 24);
      while ((int)v16 >= 1)
      {
        uint64_t v17 = v16 - 1;
        char v18 = sub_12A0DC4(*(void *)(*(void *)(v15 + 32) + 8 * v16));
        uint64_t result = 0;
        uint64_t v16 = v17;
        if ((v18 & 1) == 0) {
          return result;
        }
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 0x8000) != 0)
    {
      uint64_t result = sub_17CEFA8(*(void *)(a1 + 176) + 16);
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 0x20000) != 0)
    {
      uint64_t result = sub_18856CC(*(void *)(a1 + 192) + 16);
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 0x40000) != 0)
    {
      uint64_t result = sub_18856CC(*(void *)(a1 + 200) + 16);
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 0x80000) != 0)
    {
      uint64_t result = sub_17C49EC(*(void *)(a1 + 208) + 16);
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 0x200000) != 0)
    {
      uint64_t result = sub_18856CC(*(void *)(a1 + 224) + 16);
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 0x8000000) != 0)
    {
      uint64_t v26 = *(void *)(a1 + 272);
      uint64_t v27 = *(unsigned int *)(v26 + 24);
      while ((int)v27 >= 1)
      {
        uint64_t v28 = v27 - 1;
        BOOL v29 = sub_15B1FC0(*(void *)(*(void *)(v26 + 32) + 8 * v27));
        uint64_t result = 0;
        uint64_t v27 = v28;
        if (!v29) {
          return result;
        }
      }
    }
    int v19 = *(_DWORD *)(a1 + 44);
    if (v19)
    {
      uint64_t v20 = *(void *)(a1 + 312);
      if ((*(unsigned char *)(v20 + 16) & 8) != 0)
      {
        uint64_t result = sub_15B0F18(*(void *)(v20 + 48));
        if (!result) {
          return result;
        }
        int v19 = *(_DWORD *)(a1 + 44);
      }
    }
    if ((v19 & 4) != 0)
    {
      uint64_t result = sub_180F64C(*(void *)(a1 + 328));
      if (!result) {
        return result;
      }
      int v19 = *(_DWORD *)(a1 + 44);
    }
    if ((v19 & 0x10) != 0)
    {
      uint64_t v21 = *(void *)(a1 + 344);
      if (*(unsigned char *)(v21 + 16))
      {
        uint64_t result = sub_174147C(*(void *)(v21 + 24));
        if (!result) {
          return result;
        }
        int v19 = *(_DWORD *)(a1 + 44);
      }
    }
    if ((v19 & 0x40) != 0)
    {
      uint64_t v22 = *(void *)(a1 + 360);
      uint64_t v23 = *(unsigned int *)(v22 + 24);
      while ((int)v23 >= 1)
      {
        uint64_t v24 = v23 - 1;
        char v25 = sub_1812DCC(*(void *)(*(void *)(v22 + 32) + 8 * v23));
        uint64_t result = 0;
        uint64_t v23 = v24;
        if ((v25 & 1) == 0) {
          return result;
        }
      }
      int v19 = *(_DWORD *)(a1 + 44);
    }
    if ((v19 & 0x200) != 0)
    {
      uint64_t v30 = *(void *)(a1 + 384);
      uint64_t v31 = *(unsigned int *)(v30 + 24);
      while ((int)v31 >= 1)
      {
        uint64_t v32 = v31 - 1;
        char v33 = sub_17AE91C(*(void *)(*(void *)(v30 + 32) + 8 * v31));
        uint64_t result = 0;
        uint64_t v31 = v32;
        if ((v33 & 1) == 0) {
          return result;
        }
      }
      int v19 = *(_DWORD *)(a1 + 44);
    }
    if ((v19 & 0x400) != 0)
    {
      uint64_t result = sub_17A3A30(*(void *)(a1 + 392));
      if (!result) {
        return result;
      }
      int v19 = *(_DWORD *)(a1 + 44);
    }
    if ((v19 & 0x800) != 0)
    {
      uint64_t result = sub_17AC304(*(void *)(a1 + 400));
      if (!result) {
        return result;
      }
      int v19 = *(_DWORD *)(a1 + 44);
    }
    if ((v19 & 0x1000) != 0)
    {
      uint64_t result = sub_17A9744(*(void *)(a1 + 408));
      if (!result) {
        return result;
      }
      int v19 = *(_DWORD *)(a1 + 44);
    }
    if ((v19 & 0x8000) != 0)
    {
      uint64_t v34 = *(void *)(a1 + 432);
      uint64_t v35 = *(unsigned int *)(v34 + 24);
      while ((int)v35 >= 1)
      {
        uint64_t v36 = v35 - 1;
        char v37 = sub_17B7498(*(void *)(*(void *)(v34 + 32) + 8 * v35));
        uint64_t result = 0;
        uint64_t v35 = v36;
        if ((v37 & 1) == 0) {
          return result;
        }
      }
      int v19 = *(_DWORD *)(a1 + 44);
    }
    if ((v19 & 0x10000) != 0)
    {
      uint64_t v38 = *(void *)(a1 + 440);
      uint64_t v39 = *(unsigned int *)(v38 + 32);
      while ((int)v39 >= 1)
      {
        uint64_t v40 = v39 - 1;
        char v41 = sub_17B0974(*(void *)(*(void *)(v38 + 40) + 8 * v39));
        uint64_t result = 0;
        uint64_t v39 = v40;
        if ((v41 & 1) == 0) {
          return result;
        }
      }
      int v19 = *(_DWORD *)(a1 + 44);
    }
    if ((v19 & 0x20000) != 0)
    {
      uint64_t result = sub_17B61EC(*(void *)(a1 + 448));
      if (!result) {
        return result;
      }
      int v19 = *(_DWORD *)(a1 + 44);
    }
    if ((v19 & 0x80000) != 0)
    {
      uint64_t result = sub_17C1C48(*(void *)(a1 + 464));
      if (!result) {
        return result;
      }
      int v19 = *(_DWORD *)(a1 + 44);
    }
    if ((v19 & 0x1000000) == 0) {
      return 1;
    }
    uint64_t result = sub_18856CC(*(void *)(a1 + 504) + 16);
    if (result) {
      return 1;
    }
  }
  return result;
}

void *sub_182A634@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PlaceGlobalResult");
}

uint64_t sub_182A644(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    int v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_15BAAF0(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  int v5 = *(_DWORD *)(v1 + 16);
  if (!(_BYTE)v5) {
    goto LABEL_15;
  }
  if (v5)
  {
    unint64_t v8 = *(void *)(v1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v8 + 23) < 0)
    {
      **(unsigned char **)unint64_t v8 = 0;
      *(void *)(v8 + 8) = 0;
      if ((v5 & 2) != 0) {
        goto LABEL_32;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v8 = 0;
      *(unsigned char *)(v8 + 23) = 0;
      if ((v5 & 2) != 0) {
        goto LABEL_32;
      }
    }
LABEL_8:
    if ((v5 & 4) == 0) {
      goto LABEL_9;
    }
LABEL_36:
    unint64_t v10 = *(void *)(v1 + 64) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v10 + 23) < 0)
    {
      **(unsigned char **)unint64_t v10 = 0;
      *(void *)(v10 + 8) = 0;
      if ((v5 & 8) != 0) {
        goto LABEL_40;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v10 = 0;
      *(unsigned char *)(v10 + 23) = 0;
      if ((v5 & 8) != 0) {
        goto LABEL_40;
      }
    }
LABEL_10:
    if ((v5 & 0x10) == 0) {
      goto LABEL_11;
    }
LABEL_44:
    unint64_t v12 = *(void *)(v1 + 80) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v12 + 23) < 0)
    {
      **(unsigned char **)unint64_t v12 = 0;
      *(void *)(v12 + 8) = 0;
      if ((v5 & 0x20) != 0) {
        goto LABEL_48;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v12 = 0;
      *(unsigned char *)(v12 + 23) = 0;
      if ((v5 & 0x20) != 0) {
        goto LABEL_48;
      }
    }
LABEL_12:
    if ((v5 & 0x40) == 0) {
      goto LABEL_13;
    }
    goto LABEL_52;
  }
  if ((v5 & 2) == 0) {
    goto LABEL_8;
  }
LABEL_32:
  unint64_t v9 = *(void *)(v1 + 56) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v9 + 23) < 0)
  {
    **(unsigned char **)unint64_t v9 = 0;
    *(void *)(v9 + 8) = 0;
    if ((v5 & 4) != 0) {
      goto LABEL_36;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v9 = 0;
    *(unsigned char *)(v9 + 23) = 0;
    if ((v5 & 4) != 0) {
      goto LABEL_36;
    }
  }
LABEL_9:
  if ((v5 & 8) == 0) {
    goto LABEL_10;
  }
LABEL_40:
  unint64_t v11 = *(void *)(v1 + 72) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v11 + 23) < 0)
  {
    **(unsigned char **)unint64_t v11 = 0;
    *(void *)(v11 + 8) = 0;
    if ((v5 & 0x10) != 0) {
      goto LABEL_44;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v11 = 0;
    *(unsigned char *)(v11 + 23) = 0;
    if ((v5 & 0x10) != 0) {
      goto LABEL_44;
    }
  }
LABEL_11:
  if ((v5 & 0x20) == 0) {
    goto LABEL_12;
  }
LABEL_48:
  unint64_t v13 = *(void *)(v1 + 88) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v13 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v13 = 0;
    *(unsigned char *)(v13 + 23) = 0;
    if ((v5 & 0x40) != 0) {
      goto LABEL_52;
    }
LABEL_13:
    if ((v5 & 0x80) == 0) {
      goto LABEL_15;
    }
    goto LABEL_14;
  }
  **(unsigned char **)unint64_t v13 = 0;
  *(void *)(v13 + 8) = 0;
  if ((v5 & 0x40) == 0) {
    goto LABEL_13;
  }
LABEL_52:
  unint64_t v14 = *(void *)(v1 + 96) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v14 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v14 = 0;
    *(unsigned char *)(v14 + 23) = 0;
    if ((v5 & 0x80) == 0) {
      goto LABEL_15;
    }
LABEL_14:
    uint64_t result = sub_15B9F6C(*(void *)(v1 + 104));
    goto LABEL_15;
  }
  **(unsigned char **)unint64_t v14 = 0;
  *(void *)(v14 + 8) = 0;
  if ((v5 & 0x80) != 0) {
    goto LABEL_14;
  }
LABEL_15:
  if ((v5 & 0x300) != 0)
  {
    if ((v5 & 0x100) != 0) {
      uint64_t result = (uint64_t)sub_15BF14C(*(void *)(v1 + 112));
    }
    if ((v5 & 0x200) != 0) {
      uint64_t result = (uint64_t)sub_15BE99C(*(void *)(v1 + 120));
    }
  }
  if ((v5 & 0xFC00) != 0)
  {
    *(void *)(v1 + 128) = 0;
    *(void *)(v1 + 136) = 0;
    *(_DWORD *)(v1 + 143) = 0;
  }
  if ((v5 & 0x70000) != 0)
  {
    *(void *)(v1 + 152) = 0;
    *(void *)(v1 + 147) = 0;
  }
  char v7 = *(unsigned char *)(v1 + 8);
  uint64_t v6 = v1 + 8;
  *(_DWORD *)(v6 + 8) = 0;
  if (v7)
  {
    return sub_188B4AC((uint64_t *)v6);
  }
  return result;
}

uint64_t sub_182A88C(uint64_t a1)
{
  sub_18843A4((unsigned char *)(a1 + 16));
  sub_188CC00(a1 + 48);
  uint64_t v2 = *(unsigned int *)(a1 + 80);
  if ((int)v2 >= 1)
  {
    int v3 = (uint64_t *)(*(void *)(a1 + 88) + 8);
    do
    {
      uint64_t v4 = *v3++;
      sub_15B043C(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(a1 + 80) = 0;
  }
  *(_DWORD *)(a1 + 96) = 0;
  *(_DWORD *)(a1 + 112) = 0;
  uint64_t result = sub_188CC00(a1 + 128);
  *(_DWORD *)(a1 + 152) = 0;
  *(_DWORD *)(a1 + 168) = 0;
  *(_DWORD *)(a1 + 192) = 0;
  int v6 = *(_DWORD *)(a1 + 40);
  if ((_BYTE)v6)
  {
    if ((v6 & 1) == 0)
    {
      if ((v6 & 2) == 0) {
        goto LABEL_8;
      }
LABEL_19:
      unint64_t v8 = *(void *)(a1 + 216) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v8 + 23) < 0)
      {
        **(unsigned char **)unint64_t v8 = 0;
        *(void *)(v8 + 8) = 0;
        if ((v6 & 4) != 0) {
          goto LABEL_23;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v8 = 0;
        *(unsigned char *)(v8 + 23) = 0;
        if ((v6 & 4) != 0) {
          goto LABEL_23;
        }
      }
LABEL_9:
      if ((v6 & 8) == 0) {
        goto LABEL_10;
      }
LABEL_27:
      unint64_t v10 = *(void *)(a1 + 232) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v10 + 23) < 0)
      {
        **(unsigned char **)unint64_t v10 = 0;
        *(void *)(v10 + 8) = 0;
        if ((v6 & 0x10) != 0) {
          goto LABEL_31;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v10 = 0;
        *(unsigned char *)(v10 + 23) = 0;
        if ((v6 & 0x10) != 0) {
          goto LABEL_31;
        }
      }
LABEL_11:
      if ((v6 & 0x20) == 0) {
        goto LABEL_12;
      }
LABEL_35:
      unint64_t v12 = *(void *)(a1 + 248) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v12 + 23) < 0)
      {
        **(unsigned char **)unint64_t v12 = 0;
        *(void *)(v12 + 8) = 0;
        if ((v6 & 0x40) != 0) {
          goto LABEL_39;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v12 = 0;
        *(unsigned char *)(v12 + 23) = 0;
        if ((v6 & 0x40) != 0) {
          goto LABEL_39;
        }
      }
LABEL_13:
      if ((v6 & 0x80) == 0) {
        goto LABEL_46;
      }
LABEL_43:
      unint64_t v14 = *(void *)(a1 + 264) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v14 + 23) < 0)
      {
        **(unsigned char **)unint64_t v14 = 0;
        *(void *)(v14 + 8) = 0;
      }
      else
      {
        *(unsigned char *)unint64_t v14 = 0;
        *(unsigned char *)(v14 + 23) = 0;
      }
      goto LABEL_46;
    }
    unint64_t v7 = *(void *)(a1 + 208) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v7 + 23) < 0)
    {
      **(unsigned char **)unint64_t v7 = 0;
      *(void *)(v7 + 8) = 0;
      if ((v6 & 2) != 0) {
        goto LABEL_19;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v7 = 0;
      *(unsigned char *)(v7 + 23) = 0;
      if ((v6 & 2) != 0) {
        goto LABEL_19;
      }
    }
LABEL_8:
    if ((v6 & 4) == 0) {
      goto LABEL_9;
    }
LABEL_23:
    unint64_t v9 = *(void *)(a1 + 224) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v9 + 23) < 0)
    {
      **(unsigned char **)unint64_t v9 = 0;
      *(void *)(v9 + 8) = 0;
      if ((v6 & 8) != 0) {
        goto LABEL_27;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v9 = 0;
      *(unsigned char *)(v9 + 23) = 0;
      if ((v6 & 8) != 0) {
        goto LABEL_27;
      }
    }
LABEL_10:
    if ((v6 & 0x10) == 0) {
      goto LABEL_11;
    }
LABEL_31:
    unint64_t v11 = *(void *)(a1 + 240) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v11 + 23) < 0)
    {
      **(unsigned char **)unint64_t v11 = 0;
      *(void *)(v11 + 8) = 0;
      if ((v6 & 0x20) != 0) {
        goto LABEL_35;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v11 = 0;
      *(unsigned char *)(v11 + 23) = 0;
      if ((v6 & 0x20) != 0) {
        goto LABEL_35;
      }
    }
LABEL_12:
    if ((v6 & 0x40) == 0) {
      goto LABEL_13;
    }
LABEL_39:
    unint64_t v13 = *(void *)(a1 + 256) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v13 + 23) < 0)
    {
      **(unsigned char **)unint64_t v13 = 0;
      *(void *)(v13 + 8) = 0;
      if ((v6 & 0x80) == 0) {
        goto LABEL_46;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v13 = 0;
      *(unsigned char *)(v13 + 23) = 0;
      if ((v6 & 0x80) == 0) {
        goto LABEL_46;
      }
    }
    goto LABEL_43;
  }
LABEL_46:
  if ((v6 & 0x1F00) == 0) {
    goto LABEL_59;
  }
  if ((v6 & 0x100) != 0)
  {
    uint64_t result = (uint64_t)sub_15B09D0(*(void *)(a1 + 272));
    if ((v6 & 0x200) == 0)
    {
LABEL_49:
      if ((v6 & 0x400) == 0) {
        goto LABEL_50;
      }
      goto LABEL_55;
    }
  }
  else if ((v6 & 0x200) == 0)
  {
    goto LABEL_49;
  }
  uint64_t result = sub_13E123C(*(void *)(a1 + 280));
  if ((v6 & 0x400) == 0)
  {
LABEL_50:
    if ((v6 & 0x800) == 0) {
      goto LABEL_51;
    }
    goto LABEL_56;
  }
LABEL_55:
  uint64_t result = sub_15B043C(*(void *)(a1 + 288));
  if ((v6 & 0x800) == 0)
  {
LABEL_51:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_59;
    }
    goto LABEL_57;
  }
LABEL_56:
  uint64_t result = sub_15C05F0(*(void *)(a1 + 296));
  if ((v6 & 0x1000) == 0) {
    goto LABEL_59;
  }
LABEL_57:
  uint64_t v15 = *(void *)(a1 + 304);
  char v16 = *(unsigned char *)(v15 + 8);
  uint64_t result = v15 + 8;
  *(void *)(result + 16) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v16) {
    uint64_t result = sub_188B4AC((uint64_t *)result);
  }
LABEL_59:
  if ((v6 & 0xE000) != 0)
  {
    *(_DWORD *)(a1 + 320) = 0;
    *(void *)(a1 + 312) = 0;
  }
  if ((v6 & 0xFF0000) != 0)
  {
    *(void *)(a1 + 332) = 0;
    *(void *)(a1 + 324) = 0;
    *(void *)(a1 + 340) = 0x100000000;
  }
  char v18 = *(unsigned char *)(a1 + 8);
  uint64_t v17 = a1 + 8;
  *(_DWORD *)(v17 + 32) = 0;
  if (v18)
  {
    return sub_188B4AC((uint64_t *)v17);
  }
  return result;
}

uint64_t sub_182AB78(uint64_t result)
{
  uint64_t v1 = *(unsigned int *)(result + 104);
  if ((int)v1 >= 1)
  {
    uint64_t v2 = result;
    int v3 = (uint64_t *)(*(void *)(result + 112) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_174171C(v4);
      --v1;
    }
    while (v1);
    *(_DWORD *)(v2 + 104) = 0;
  }
  return result;
}

uint64_t sub_182ABC8(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  *(void *)(a1 + 8) = v5;
  *(void *)a1 = off_24E0C18;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = a2;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = a2;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = a2;
  *(void *)(a1 + 104) = 0;
  *(void *)(a1 + 112) = 0;
  *(void *)(a1 + 120) = a2;
  *(void *)(a1 + 128) = 0;
  *(void *)(a1 + 136) = 0;
  *(void *)(a1 + 144) = a2;
  *(void *)(a1 + 152) = 0;
  *(void *)(a1 + 160) = 0;
  *(void *)(a1 + 168) = &qword_2550250;
  *(_OWORD *)(a1 + 204) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  return a1;
}

void sub_182AC64(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_182AC98(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = a1 + 16;
  *(void *)a1 = off_24E0C18;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  uint64_t v6 = a1 + 48;
  *(_DWORD *)(a1 + 68) = 0;
  *(void *)(a1 + 52) = 0;
  *(void *)(a1 + 60) = 0;
  *(void *)(a1 + 44) = 0;
  int v7 = *(_DWORD *)(a2 + 56);
  if (v7)
  {
    uint64_t v8 = *(void *)(a2 + 64);
    unint64_t v9 = (std::string **)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_188FB98(v6, v9, (const std::string **)(v8 + 8), v7, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v10 = *(_DWORD *)(a1 + 56) + v7;
    *(_DWORD *)(a1 + 56) = v10;
    unint64_t v11 = *(int **)(a1 + 64);
    if (*v11 < v10) {
      int *v11 = v10;
    }
  }
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0;
  int v12 = *(_DWORD *)(a2 + 80);
  if (v12)
  {
    uint64_t v13 = *(void *)(a2 + 88);
    unint64_t v14 = (std::string **)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_188FB98(a1 + 72, v14, (const std::string **)(v13 + 8), v12, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v15 = *(_DWORD *)(a1 + 80) + v12;
    *(_DWORD *)(a1 + 80) = v15;
    char v16 = *(int **)(a1 + 88);
    if (*v16 < v15) {
      *char v16 = v15;
    }
  }
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 104) = 0;
  *(void *)(a1 + 112) = 0;
  int v17 = *(_DWORD *)(a2 + 104);
  if (v17)
  {
    uint64_t v18 = *(void *)(a2 + 112);
    int v19 = (uint64_t *)sub_188CCE4(a1 + 96, *(_DWORD *)(a2 + 104));
    sub_1879CBC((uint64_t *)(a1 + 96), v19, (uint64_t *)(v18 + 8), v17, **(_DWORD **)(a1 + 112) - *(_DWORD *)(a1 + 104));
    int v20 = *(_DWORD *)(a1 + 104) + v17;
    *(_DWORD *)(a1 + 104) = v20;
    uint64_t v21 = *(int **)(a1 + 112);
    if (*v21 < v20) {
      int *v21 = v20;
    }
  }
  *(void *)(a1 + 120) = 0;
  *(void *)(a1 + 128) = 0;
  *(void *)(a1 + 136) = 0;
  int v22 = *(_DWORD *)(a2 + 128);
  if (v22)
  {
    uint64_t v23 = *(void *)(a2 + 136);
    uint64_t v24 = (uint64_t *)sub_188CCE4(a1 + 120, *(_DWORD *)(a2 + 128));
    sub_1879CBC((uint64_t *)(a1 + 120), v24, (uint64_t *)(v23 + 8), v22, **(_DWORD **)(a1 + 136) - *(_DWORD *)(a1 + 128));
    int v25 = *(_DWORD *)(a1 + 128) + v22;
    *(_DWORD *)(a1 + 128) = v25;
    uint64_t v26 = *(int **)(a1 + 136);
    if (*v26 < v25) {
      int *v26 = v25;
    }
  }
  *(void *)(a1 + 144) = 0;
  *(void *)(a1 + 152) = 0;
  *(void *)(a1 + 160) = 0;
  int v27 = *(_DWORD *)(a2 + 152);
  if (v27)
  {
    uint64_t v28 = *(void *)(a2 + 160);
    BOOL v29 = (uint64_t *)sub_188CCE4(a1 + 144, *(_DWORD *)(a2 + 152));
    sub_1879CBC((uint64_t *)(a1 + 144), v29, (uint64_t *)(v28 + 8), v27, **(_DWORD **)(a1 + 160) - *(_DWORD *)(a1 + 152));
    int v30 = *(_DWORD *)(a1 + 152) + v27;
    *(_DWORD *)(a1 + 152) = v30;
    uint64_t v31 = *(int **)(a1 + 160);
    if (*v31 < v30) {
      *uint64_t v31 = v30;
    }
  }
  uint64_t v32 = *(void *)(a2 + 8);
  if (v32) {
    sub_188B4F8(v4, (v32 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v5, a2 + 16);
  *(void *)(a1 + 168) = &qword_2550250;
  int v33 = *(_DWORD *)(a2 + 40);
  if (v33)
  {
    uint64_t v34 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v34 = (uint64_t *)*v34;
    }
    sub_1881DF4((std::string **)(a1 + 168), (long long *)(*(void *)(a2 + 168) & 0xFFFFFFFFFFFFFFFELL), v34);
    int v33 = *(_DWORD *)(a2 + 40);
  }
  if ((v33 & 2) != 0) {
    operator new();
  }
  *(void *)(a1 + 176) = 0;
  if ((v33 & 4) != 0) {
    operator new();
  }
  *(void *)(a1 + 184) = 0;
  if ((v33 & 8) != 0) {
    operator new();
  }
  *(void *)(a1 + 192) = 0;
  if ((v33 & 0x10) != 0) {
    operator new();
  }
  *(void *)(a1 + 200) = 0;
  uint64_t v35 = *(void *)(a2 + 208);
  *(_DWORD *)(a1 + 216) = *(_DWORD *)(a2 + 216);
  *(void *)(a1 + 208) = v35;
  return a1;
}

void sub_182B084()
{
}

void *sub_182B18C(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_182B24C((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  sub_18784B8(a1 + 18);
  sub_18784B8(a1 + 15);
  sub_18784B8(a1 + 12);
  sub_1889DE8(a1 + 9);
  sub_1889DE8(a1 + 6);
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void ***sub_182B24C(uint64_t a1)
{
  int v3 = *(uint64_t **)(a1 + 168);
  uint64_t result = (void ***)(a1 + 168);
  if (v3 != &qword_2550250) {
    sub_1881C6C(result);
  }
  if ((uint64_t (***)())a1 != &off_254CA18)
  {
    uint64_t v4 = *(void **)(a1 + 176);
    if (v4)
    {
      sub_184BE18(v4);
      operator delete();
    }
    uint64_t v5 = *(void **)(a1 + 184);
    if (v5)
    {
      sub_184DAF4(v5);
      operator delete();
    }
    uint64_t v6 = *(void **)(a1 + 192);
    if (v6)
    {
      sub_1818BE8(v6);
      operator delete();
    }
    uint64_t result = *(void ****)(a1 + 200);
    if (result)
    {
      sub_15C0D18();
      operator delete();
    }
  }
  return result;
}

void sub_182B330(void *a1)
{
  sub_182B18C(a1);

  operator delete();
}

uint64_t sub_182B368(uint64_t a1)
{
  sub_18843A4((unsigned char *)(a1 + 16));
  sub_188CC00(a1 + 48);
  uint64_t result = sub_188CC00(a1 + 72);
  uint64_t v3 = *(unsigned int *)(a1 + 104);
  if ((int)v3 >= 1)
  {
    uint64_t v4 = (uint64_t *)(*(void *)(a1 + 112) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = sub_174171C(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 104) = 0;
  }
  uint64_t v6 = *(unsigned int *)(a1 + 128);
  if ((int)v6 >= 1)
  {
    int v7 = (uint64_t *)(*(void *)(a1 + 136) + 8);
    do
    {
      uint64_t v8 = *v7++;
      uint64_t result = sub_174171C(v8);
      --v6;
    }
    while (v6);
    *(_DWORD *)(a1 + 128) = 0;
  }
  uint64_t v9 = *(unsigned int *)(a1 + 152);
  if ((int)v9 >= 1)
  {
    int v10 = (uint64_t *)(*(void *)(a1 + 160) + 8);
    do
    {
      uint64_t v11 = *v10++;
      uint64_t result = sub_174171C(v11);
      --v9;
    }
    while (v9);
    *(_DWORD *)(a1 + 152) = 0;
  }
  int v12 = *(_DWORD *)(a1 + 40);
  if ((v12 & 0x1F) == 0) {
    goto LABEL_20;
  }
  if (v12)
  {
    unint64_t v15 = *(void *)(a1 + 168) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v15 + 23) < 0)
    {
      **(unsigned char **)unint64_t v15 = 0;
      *(void *)(v15 + 8) = 0;
      if ((v12 & 2) != 0) {
        goto LABEL_30;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v15 = 0;
      *(unsigned char *)(v15 + 23) = 0;
      if ((v12 & 2) != 0) {
        goto LABEL_30;
      }
    }
LABEL_16:
    if ((v12 & 4) == 0) {
      goto LABEL_17;
    }
LABEL_31:
    uint64_t result = sub_182A88C(*(void *)(a1 + 184));
    if ((v12 & 8) == 0)
    {
LABEL_18:
      if ((v12 & 0x10) == 0) {
        goto LABEL_20;
      }
      goto LABEL_19;
    }
    goto LABEL_32;
  }
  if ((v12 & 2) == 0) {
    goto LABEL_16;
  }
LABEL_30:
  uint64_t result = sub_182A644(*(void *)(a1 + 176));
  if ((v12 & 4) != 0) {
    goto LABEL_31;
  }
LABEL_17:
  if ((v12 & 8) == 0) {
    goto LABEL_18;
  }
LABEL_32:
  uint64_t result = sub_1819498(*(void *)(a1 + 192));
  if ((v12 & 0x10) != 0) {
LABEL_19:
  }
    uint64_t result = sub_15C0D54(*(void *)(a1 + 200));
LABEL_20:
  if ((v12 & 0xE0) != 0)
  {
    *(_DWORD *)(a1 + 216) = 0;
    *(void *)(a1 + 208) = 0;
  }
  char v14 = *(unsigned char *)(a1 + 8);
  uint64_t v13 = a1 + 8;
  *(_DWORD *)(v13 + 32) = 0;
  if (v14)
  {
    return sub_188B4AC((uint64_t *)v13);
  }
  return result;
}

uint64_t sub_182B4E0(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v77 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v77, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v76 = (uint64_t *)(a1 + 8);
  int v7 = (uint64_t **)(a1 + 72);
  uint64_t v8 = (uint64_t **)(a1 + 48);
  while (2)
  {
    uint64_t v9 = (unsigned __int8 *)(*(void *)v77 + 1);
    unsigned int v10 = **(unsigned char **)v77;
    if ((char)**(unsigned char **)v77 < 0)
    {
      unsigned int v11 = v10 + (*v9 << 7);
      unsigned int v10 = v11 - 128;
      if ((char)*v9 < 0)
      {
        uint64_t v9 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v77, v11 - 128);
        unsigned int v10 = v12;
      }
      else
      {
        uint64_t v9 = (unsigned __int8 *)(*(void *)v77 + 2);
      }
    }
    *(void *)uint64_t v77 = v9;
    switch(v10 >> 3)
    {
      case 1u:
        if (v10 != 10) {
          goto LABEL_108;
        }
        *(_DWORD *)(a1 + 40) |= 2u;
        uint64_t v13 = *(void *)(a1 + 176);
        if (!v13)
        {
          char v14 = (void *)(*v76 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v76) {
            char v14 = (void *)*v14;
          }
          sub_1850970((uint64_t)v14);
          uint64_t v13 = v15;
          *(void *)(a1 + 176) = v15;
          uint64_t v9 = *(unsigned __int8 **)v77;
        }
        uint64_t v16 = sub_12799CC(a3, v13, v9);
        goto LABEL_118;
      case 2u:
        if (v10 != 18) {
          goto LABEL_108;
        }
        *(_DWORD *)(a1 + 40) |= 4u;
        uint64_t v17 = *(void *)(a1 + 184);
        if (!v17)
        {
          uint64_t v18 = (void *)(*v76 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v76) {
            uint64_t v18 = (void *)*v18;
          }
          uint64_t v17 = sub_1850A04((uint64_t)v18);
          *(void *)(a1 + 184) = v17;
          uint64_t v9 = *(unsigned __int8 **)v77;
        }
        uint64_t v16 = sub_1279A5C(a3, v17, v9);
        goto LABEL_118;
      case 3u:
        if (v10 != 26) {
          goto LABEL_108;
        }
        int v19 = (const std::string::value_type *)(v9 - 1);
        while (1)
        {
          int v20 = (char *)(v19 + 1);
          *(void *)uint64_t v77 = v19 + 1;
          uint64_t v21 = *(_DWORD **)(a1 + 64);
          if (v21 && (uint64_t v22 = *(int *)(a1 + 56), (int)v22 < *v21))
          {
            *(_DWORD *)(a1 + 56) = v22 + 1;
            uint64_t v23 = *(std::string **)&v21[2 * v22 + 2];
          }
          else
          {
            if (!*v8) {
              operator new();
            }
            *int v25 = v24;
            v25[1] = sub_3A6EDC;
            void *v24 = 0;
            v24[1] = 0;
            int v24[2] = 0;
            uint64_t v23 = (std::string *)sub_188CDC8(a1 + 48, (uint64_t)v24);
            int v20 = *(char **)v77;
          }
          int v19 = sub_188C244(v23, v20, (uint64_t)a3);
          *(void *)uint64_t v77 = v19;
          if (!v19) {
            goto LABEL_134;
          }
          if (*(void *)a3 <= (unint64_t)v19 || *v19 != 26) {
            goto LABEL_119;
          }
        }
      case 4u:
        if (v10 != 34) {
          goto LABEL_108;
        }
        uint64_t v26 = (const std::string::value_type *)(v9 - 1);
        while (1)
        {
          int v27 = (char *)(v26 + 1);
          *(void *)uint64_t v77 = v26 + 1;
          uint64_t v28 = *(_DWORD **)(a1 + 88);
          if (v28 && (uint64_t v29 = *(int *)(a1 + 80), (int)v29 < *v28))
          {
            *(_DWORD *)(a1 + 80) = v29 + 1;
            int v30 = *(std::string **)&v28[2 * v29 + 2];
          }
          else
          {
            if (!*v7) {
              operator new();
            }
            void *v32 = v31;
            v32[1] = sub_3A6EDC;
            *uint64_t v31 = 0;
            v31[1] = 0;
            v31[2] = 0;
            int v30 = (std::string *)sub_188CDC8(a1 + 72, (uint64_t)v31);
            int v27 = *(char **)v77;
          }
          uint64_t v26 = sub_188C244(v30, v27, (uint64_t)a3);
          *(void *)uint64_t v77 = v26;
          if (!v26) {
            goto LABEL_134;
          }
          if (*(void *)a3 <= (unint64_t)v26 || *v26 != 34) {
            goto LABEL_119;
          }
        }
      case 5u:
        if (v10 != 42) {
          goto LABEL_108;
        }
        int v33 = (char *)(v9 - 1);
        while (1)
        {
          uint64_t v34 = (unsigned __int8 *)(v33 + 1);
          *(void *)uint64_t v77 = v33 + 1;
          uint64_t v35 = *(_DWORD **)(a1 + 112);
          if (v35 && (uint64_t v36 = *(int *)(a1 + 104), (int)v36 < *v35))
          {
            *(_DWORD *)(a1 + 104) = v36 + 1;
            uint64_t v37 = *(void *)&v35[2 * v36 + 2];
          }
          else
          {
            sub_178B4B4(*(void *)(a1 + 96));
            uint64_t v37 = sub_188CDC8(a1 + 96, v38);
            uint64_t v34 = *(unsigned __int8 **)v77;
          }
          int v33 = sub_182BD30(a3, v37, v34);
          *(void *)uint64_t v77 = v33;
          if (!v33) {
            goto LABEL_134;
          }
          if (*(void *)a3 <= (unint64_t)v33 || *v33 != 42) {
            goto LABEL_119;
          }
        }
      case 6u:
        if (v10 != 48) {
          goto LABEL_108;
        }
        v5 |= 0x20u;
        uint64_t v39 = (char *)(v9 + 1);
        uint64_t v40 = *v9;
        if (((char)*v9 & 0x80000000) == 0) {
          goto LABEL_59;
        }
        int v41 = *v39;
        uint64_t v40 = v40 + (v41 << 7) - 128;
        if (v41 < 0)
        {
          uint64_t v70 = sub_188C138((uint64_t)v9, v40);
          *(void *)uint64_t v77 = v70;
          *(unsigned char *)(a1 + 208) = v71 != 0;
          if (!v70) {
            goto LABEL_134;
          }
        }
        else
        {
          uint64_t v39 = (char *)(v9 + 2);
LABEL_59:
          *(void *)uint64_t v77 = v39;
          *(unsigned char *)(a1 + 208) = v40 != 0;
        }
        goto LABEL_119;
      case 7u:
        if (v10 != 56) {
          goto LABEL_108;
        }
        uint64_t v42 = (char *)(v9 + 1);
        unint64_t v43 = *v9;
        if (((char)*v9 & 0x80000000) == 0) {
          goto LABEL_64;
        }
        int v44 = *v42;
        int v45 = v43 + (v44 << 7);
        unint64_t v43 = (v45 - 128);
        if (v44 < 0)
        {
          *(void *)uint64_t v77 = sub_188C138((uint64_t)v9, (v45 - 128));
          if (!*(void *)v77) {
            goto LABEL_134;
          }
          unint64_t v43 = v72;
        }
        else
        {
          uint64_t v42 = (char *)(v9 + 2);
LABEL_64:
          *(void *)uint64_t v77 = v42;
        }
        if (v43 > 0x3E)
        {
          if (*v76) {
            uint64_t v75 = (std::string *)((*v76 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v75 = (std::string *)sub_188DBD8(v76);
          }
          sub_188C020(7, v43, v75);
        }
        else
        {
          *(_DWORD *)(a1 + 40) |= 0x40u;
          *(_DWORD *)(a1 + 212) = v43;
        }
        goto LABEL_119;
      case 8u:
        if (v10 != 66) {
          goto LABEL_108;
        }
        *(_DWORD *)(a1 + 40) |= 8u;
        uint64_t v46 = *(void *)(a1 + 192);
        if (!v46)
        {
          uint64_t v47 = (void *)(*v76 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v76) {
            uint64_t v47 = (void *)*v47;
          }
          uint64_t v46 = sub_1836CFC((uint64_t)v47);
          *(void *)(a1 + 192) = v46;
          uint64_t v9 = *(unsigned __int8 **)v77;
        }
        uint64_t v16 = (uint64_t)sub_182BDC0(a3, v46, v9);
        goto LABEL_118;
      case 9u:
        if (v10 != 74) {
          goto LABEL_108;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        uint64_t v48 = *(void *)(a1 + 8);
        uint64_t v49 = (uint64_t *)(v48 & 0xFFFFFFFFFFFFFFFCLL);
        if (v48) {
          uint64_t v49 = (uint64_t *)*v49;
        }
        uint64_t v50 = (std::string *)sub_1880F84((void *)(a1 + 168), v49);
        uint64_t v16 = (uint64_t)sub_188C244(v50, *(char **)v77, (uint64_t)a3);
        goto LABEL_118;
      case 0xAu:
        if (v10 != 80) {
          goto LABEL_108;
        }
        v5 |= 0x80u;
        uint64_t v51 = (char *)(v9 + 1);
        int v52 = *v9;
        if (((char)*v9 & 0x80000000) == 0) {
          goto LABEL_81;
        }
        int v53 = *v51;
        int v52 = v52 + (v53 << 7) - 128;
        if (v53 < 0)
        {
          uint64_t v73 = sub_188C0D0((uint64_t)v9, v52);
          *(void *)uint64_t v77 = v73;
          *(_DWORD *)(a1 + 216) = v74;
          if (!v73) {
            goto LABEL_134;
          }
        }
        else
        {
          uint64_t v51 = (char *)(v9 + 2);
LABEL_81:
          *(void *)uint64_t v77 = v51;
          *(_DWORD *)(a1 + 216) = v52;
        }
        goto LABEL_119;
      case 0xBu:
        if (v10 != 90) {
          goto LABEL_108;
        }
        uint64_t v54 = (char *)(v9 - 1);
        while (1)
        {
          uint64_t v55 = (unsigned __int8 *)(v54 + 1);
          *(void *)uint64_t v77 = v54 + 1;
          uint64_t v56 = *(_DWORD **)(a1 + 136);
          if (v56 && (uint64_t v57 = *(int *)(a1 + 128), (int)v57 < *v56))
          {
            *(_DWORD *)(a1 + 128) = v57 + 1;
            uint64_t v58 = *(void *)&v56[2 * v57 + 2];
          }
          else
          {
            sub_178B4B4(*(void *)(a1 + 120));
            uint64_t v58 = sub_188CDC8(a1 + 120, v59);
            uint64_t v55 = *(unsigned __int8 **)v77;
          }
          uint64_t v54 = sub_182BD30(a3, v58, v55);
          *(void *)uint64_t v77 = v54;
          if (!v54) {
            goto LABEL_134;
          }
          if (*(void *)a3 <= (unint64_t)v54 || *v54 != 90) {
            goto LABEL_119;
          }
        }
      case 0xCu:
        if (v10 != 98) {
          goto LABEL_108;
        }
        *(_DWORD *)(a1 + 40) |= 0x10u;
        uint64_t v60 = *(void *)(a1 + 200);
        if (!v60)
        {
          uint64_t v61 = (void *)(*v76 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v76) {
            uint64_t v61 = (void *)*v61;
          }
          uint64_t v60 = sub_15C26A4((uint64_t)v61);
          *(void *)(a1 + 200) = v60;
          uint64_t v9 = *(unsigned __int8 **)v77;
        }
        uint64_t v16 = (uint64_t)sub_1352B94(a3, v60, v9);
        goto LABEL_118;
      case 0xDu:
        if (v10 != 106) {
          goto LABEL_108;
        }
        int v62 = (char *)(v9 - 1);
        while (1)
        {
          uint64_t v63 = (unsigned __int8 *)(v62 + 1);
          *(void *)uint64_t v77 = v62 + 1;
          uint64_t v64 = *(_DWORD **)(a1 + 160);
          if (v64 && (uint64_t v65 = *(int *)(a1 + 152), (int)v65 < *v64))
          {
            *(_DWORD *)(a1 + 152) = v65 + 1;
            uint64_t v66 = *(void *)&v64[2 * v65 + 2];
          }
          else
          {
            sub_178B4B4(*(void *)(a1 + 144));
            uint64_t v66 = sub_188CDC8(a1 + 144, v67);
            uint64_t v63 = *(unsigned __int8 **)v77;
          }
          int v62 = sub_182BD30(a3, v66, v63);
          *(void *)uint64_t v77 = v62;
          if (!v62) {
            goto LABEL_134;
          }
          if (*(void *)a3 <= (unint64_t)v62 || *v62 != 106) {
            goto LABEL_119;
          }
        }
      default:
LABEL_108:
        if (v10) {
          BOOL v68 = (v10 & 7) == 4;
        }
        else {
          BOOL v68 = 1;
        }
        if (!v68)
        {
          if (v10 - 8000 < 0x198 || v10 - 16000 <= 0x197)
          {
            uint64_t v16 = (uint64_t)sub_18859DC((uint64_t **)(a1 + 16), v10, (char *)v9, (uint64_t)&off_254CA18, v76, a3);
          }
          else
          {
            if (*v76)
            {
              uint64_t v69 = (std::string *)((*v76 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              uint64_t v69 = (std::string *)sub_188DBD8(v76);
              uint64_t v9 = *(unsigned __int8 **)v77;
            }
            uint64_t v16 = (uint64_t)sub_1885AC0(v10, v69, (char *)v9, a3);
          }
LABEL_118:
          *(void *)uint64_t v77 = v16;
          if (!v16) {
            goto LABEL_134;
          }
LABEL_119:
          if (sub_11947B8((uint64_t)a3, (char **)v77, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v9) {
          a3[10].i32[0] = v10 - 1;
        }
        else {
LABEL_134:
        }
          *(void *)uint64_t v77 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 40) |= v5;
        return *(void *)v77;
    }
  }
}

char *sub_182BD30(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1741788(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_182BDC0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1819910(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_182BE50(uint64_t a1, char *a2, unint64_t *a3)
{
  uint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    uint64_t v7 = *(void *)(a1 + 176);
    *uint64_t v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      uint64_t v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      uint64_t v9 = v4 + 2;
    }
    uint64_t v4 = sub_184C838(v7, v9, a3);
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 184);
    *uint64_t v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 44);
    v4[1] = v11;
    if (v11 > 0x7F) {
      unsigned int v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      unsigned int v12 = v4 + 2;
    }
    uint64_t v4 = sub_184F13C(v10, v12, a3);
  }
  uint64_t v13 = *(unsigned int *)(a1 + 56);
  if ((int)v13 >= 1)
  {
    uint64_t v14 = 0;
    uint64_t v15 = 8 * v13;
    do
    {
      uint64_t v16 = *(void **)(*(void *)(a1 + 64) + v14 + 8);
      if (*((char *)v16 + 23) < 0)
      {
        int64_t v17 = v16[1];
        if (v17 > 127) {
          goto LABEL_26;
        }
      }
      else
      {
        int64_t v17 = *((unsigned __int8 *)v16 + 23);
      }
      if ((uint64_t)(*a3 - (void)v4 + 14) >= v17)
      {
        *uint64_t v4 = 26;
        v4[1] = v17;
        if (*((char *)v16 + 23) < 0) {
          uint64_t v16 = (void *)*v16;
        }
        uint64_t v18 = v4 + 2;
        memcpy(v18, v16, v17);
        uint64_t v4 = &v18[v17];
        goto LABEL_24;
      }
LABEL_26:
      uint64_t v4 = (char *)sub_188A868(a3, 3, (uint64_t)v16, v4);
LABEL_24:
      v14 += 8;
    }
    while (v15 != v14);
  }
  uint64_t v19 = *(unsigned int *)(a1 + 80);
  if ((int)v19 >= 1)
  {
    uint64_t v20 = 0;
    uint64_t v21 = 8 * v19;
    do
    {
      uint64_t v22 = *(void **)(*(void *)(a1 + 88) + v20 + 8);
      if (*((char *)v22 + 23) < 0)
      {
        int64_t v23 = v22[1];
        if (v23 > 127) {
          goto LABEL_38;
        }
      }
      else
      {
        int64_t v23 = *((unsigned __int8 *)v22 + 23);
      }
      if ((uint64_t)(*a3 - (void)v4 + 14) >= v23)
      {
        *uint64_t v4 = 34;
        v4[1] = v23;
        if (*((char *)v22 + 23) < 0) {
          uint64_t v22 = (void *)*v22;
        }
        uint64_t v24 = v4 + 2;
        memcpy(v24, v22, v23);
        uint64_t v4 = &v24[v23];
        goto LABEL_36;
      }
LABEL_38:
      uint64_t v4 = (char *)sub_188A868(a3, 4, (uint64_t)v22, v4);
LABEL_36:
      v20 += 8;
    }
    while (v21 != v20);
  }
  int v25 = *(_DWORD *)(a1 + 104);
  if (v25)
  {
    for (int i = 0; i != v25; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v27 = *(void *)(*(void *)(a1 + 112) + 8 * i + 8);
      *uint64_t v4 = 42;
      unsigned int v28 = *(_DWORD *)(v27 + 20);
      v4[1] = v28;
      if (v28 > 0x7F) {
        uint64_t v29 = sub_188A9CC(v28, v4 + 1);
      }
      else {
        uint64_t v29 = v4 + 2;
      }
      uint64_t v4 = sub_1741C3C(v27, (unint64_t)v29, a3);
    }
  }
  if ((v6 & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v30 = *(unsigned char *)(a1 + 208);
    *uint64_t v4 = 48;
    v4[1] = v30;
    v4 += 2;
  }
  if ((v6 & 0x40) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v31 = *(int *)(a1 + 212);
    *uint64_t v4 = 56;
    v4[1] = v31;
    if (v31 > 0x7F)
    {
      v4[1] = v31 | 0x80;
      unint64_t v32 = v31 >> 7;
      v4[2] = v31 >> 7;
      v4 += 3;
      if (v31 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v33 = v32 >> 14;
          v32 >>= 7;
          *v4++ = v32;
        }
        while (v33);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v34 = *(void *)(a1 + 192);
    *uint64_t v4 = 66;
    unsigned int v35 = *(_DWORD *)(v34 + 48);
    v4[1] = v35;
    if (v35 > 0x7F) {
      uint64_t v36 = sub_188A9CC(v35, v4 + 1);
    }
    else {
      uint64_t v36 = v4 + 2;
    }
    uint64_t v4 = sub_181CFC8(v34, v36, a3);
    if ((v6 & 1) == 0)
    {
LABEL_60:
      if ((v6 & 0x80) == 0) {
        goto LABEL_75;
      }
      goto LABEL_69;
    }
  }
  else if ((v6 & 1) == 0)
  {
    goto LABEL_60;
  }
  uint64_t v4 = sub_117A0AC(a3, 9, (const void **)(*(void *)(a1 + 168) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x80) == 0) {
    goto LABEL_75;
  }
LABEL_69:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  unsigned int v37 = *(_DWORD *)(a1 + 216);
  *uint64_t v4 = 80;
  v4[1] = v37;
  if (v37 > 0x7F)
  {
    v4[1] = v37 | 0x80;
    unsigned int v38 = v37 >> 7;
    v4[2] = v37 >> 7;
    v4 += 3;
    if (v37 >= 0x4000)
    {
      do
      {
        *(v4 - 1) |= 0x80u;
        unsigned int v39 = v38 >> 14;
        v38 >>= 7;
        *v4++ = v38;
      }
      while (v39);
    }
  }
  else
  {
    v4 += 2;
  }
LABEL_75:
  int v40 = *(_DWORD *)(a1 + 128);
  if (v40)
  {
    for (int j = 0; j != v40; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v42 = *(void *)(*(void *)(a1 + 136) + 8 * j + 8);
      *uint64_t v4 = 90;
      unsigned int v43 = *(_DWORD *)(v42 + 20);
      v4[1] = v43;
      if (v43 > 0x7F) {
        int v44 = sub_188A9CC(v43, v4 + 1);
      }
      else {
        int v44 = v4 + 2;
      }
      uint64_t v4 = sub_1741C3C(v42, (unint64_t)v44, a3);
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v45 = *(void *)(a1 + 200);
    *uint64_t v4 = 98;
    unsigned int v46 = *(_DWORD *)(v45 + 20);
    v4[1] = v46;
    if (v46 > 0x7F) {
      uint64_t v47 = sub_188A9CC(v46, v4 + 1);
    }
    else {
      uint64_t v47 = v4 + 2;
    }
    uint64_t v4 = sub_15C1084(v45, (unint64_t)v47, a3);
  }
  int v48 = *(_DWORD *)(a1 + 152);
  if (v48)
  {
    for (int k = 0; k != v48; ++k)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v50 = *(void *)(*(void *)(a1 + 160) + 8 * k + 8);
      *uint64_t v4 = 106;
      unsigned int v51 = *(_DWORD *)(v50 + 20);
      v4[1] = v51;
      if (v51 > 0x7F) {
        int v52 = sub_188A9CC(v51, v4 + 1);
      }
      else {
        int v52 = v4 + 2;
      }
      uint64_t v4 = sub_1741C3C(v50, (unint64_t)v52, a3);
    }
  }
  if (*(_WORD *)(a1 + 26)) {
    uint64_t v4 = sub_1886844(a1 + 16, 1000, 2051, v4, a3);
  }
  uint64_t v53 = *(void *)(a1 + 8);
  if ((v53 & 1) == 0) {
    return v4;
  }
  unint64_t v55 = v53 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v55 + 31) < 0)
  {
    uint64_t v56 = *(void **)(v55 + 8);
    uint64_t v57 = *(void *)(v55 + 16);
  }
  else
  {
    uint64_t v56 = (void *)(v55 + 8);
    LODWORD(v57) = *(unsigned __int8 *)(v55 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v57)
  {
    uint64_t v58 = (int)v57;
    memcpy(v4, v56, (int)v57);
    v4 += v58;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v56, v57, v4);
}

uint64_t sub_182C500(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(unsigned int *)(a1 + 56);
  uint64_t v4 = v2 + v3;
  if ((int)v3 >= 1)
  {
    int v5 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v6 = *v5++;
      uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
      uint64_t v8 = *(void *)(v6 + 8);
      if ((v7 & 0x80u) == 0) {
        uint64_t v8 = v7;
      }
      v4 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6);
      --v3;
    }
    while (v3);
  }
  uint64_t v9 = *(unsigned int *)(a1 + 80);
  uint64_t v10 = v4 + v9;
  if ((int)v9 >= 1)
  {
    unsigned int v11 = (uint64_t *)(*(void *)(a1 + 88) + 8);
    do
    {
      uint64_t v12 = *v11++;
      uint64_t v13 = *(unsigned __int8 *)(v12 + 23);
      uint64_t v14 = *(void *)(v12 + 8);
      if ((v13 & 0x80u) == 0) {
        uint64_t v14 = v13;
      }
      v10 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      --v9;
    }
    while (v9);
  }
  uint64_t v15 = *(int *)(a1 + 104);
  uint64_t v16 = v10 + v15;
  uint64_t v17 = *(void *)(a1 + 112);
  if (v17) {
    uint64_t v18 = (uint64_t *)(v17 + 8);
  }
  else {
    uint64_t v18 = 0;
  }
  if (v15)
  {
    uint64_t v19 = 8 * v15;
    do
    {
      uint64_t v20 = *v18++;
      uint64_t v21 = sub_1741F8C(v20);
      v16 += v21 + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6);
      v19 -= 8;
    }
    while (v19);
  }
  uint64_t v22 = *(int *)(a1 + 128);
  uint64_t v23 = v16 + v22;
  uint64_t v24 = *(void *)(a1 + 136);
  if (v24) {
    int v25 = (uint64_t *)(v24 + 8);
  }
  else {
    int v25 = 0;
  }
  if (v22)
  {
    uint64_t v26 = 8 * v22;
    do
    {
      uint64_t v27 = *v25++;
      uint64_t v28 = sub_1741F8C(v27);
      v23 += v28 + ((9 * (__clz(v28 | 1) ^ 0x1F) + 73) >> 6);
      v26 -= 8;
    }
    while (v26);
  }
  uint64_t v29 = *(int *)(a1 + 152);
  uint64_t v30 = v23 + v29;
  uint64_t v31 = *(void *)(a1 + 160);
  if (v31) {
    unint64_t v32 = (uint64_t *)(v31 + 8);
  }
  else {
    unint64_t v32 = 0;
  }
  if (v29)
  {
    uint64_t v33 = 8 * v29;
    do
    {
      uint64_t v34 = *v32++;
      uint64_t v35 = sub_1741F8C(v34);
      v30 += v35 + ((9 * (__clz(v35 | 1) ^ 0x1F) + 73) >> 6);
      v33 -= 8;
    }
    while (v33);
  }
  char v36 = *(unsigned char *)(a1 + 40);
  if (v36)
  {
    if (*(unsigned char *)(a1 + 40))
    {
      unint64_t v43 = *(void *)(a1 + 168) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v44 = *(unsigned __int8 *)(v43 + 23);
      uint64_t v45 = *(void *)(v43 + 8);
      if ((v44 & 0x80u) == 0) {
        uint64_t v45 = v44;
      }
      v30 += v45 + ((9 * (__clz(v45 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((*(unsigned char *)(a1 + 40) & 2) == 0)
      {
LABEL_32:
        if ((*(unsigned char *)(a1 + 40) & 4) == 0) {
          goto LABEL_33;
        }
        goto LABEL_51;
      }
    }
    else if ((*(unsigned char *)(a1 + 40) & 2) == 0)
    {
      goto LABEL_32;
    }
    uint64_t v46 = sub_184CE90(*(void *)(a1 + 176));
    v30 += v46 + ((9 * (__clz(v46 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v36 & 4) == 0)
    {
LABEL_33:
      if ((v36 & 8) == 0) {
        goto LABEL_34;
      }
      goto LABEL_52;
    }
LABEL_51:
    uint64_t v47 = sub_184FEFC(*(void *)(a1 + 184));
    v30 += v47 + ((9 * (__clz(v47 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v36 & 8) == 0)
    {
LABEL_34:
      if ((v36 & 0x10) == 0)
      {
LABEL_36:
        if ((v36 & 0x20) != 0) {
          v30 += 2;
        }
        if ((v36 & 0x40) != 0)
        {
          int v38 = *(_DWORD *)(a1 + 212);
          uint64_t v39 = ((9 * (__clz(v38 | 1) ^ 0x1F) + 73) >> 6) + 1;
          if (v38 >= 0) {
            uint64_t v40 = v39;
          }
          else {
            uint64_t v40 = 11;
          }
          v30 += v40;
        }
        if (v36 < 0) {
          v30 += ((9 * (__clz(*(_DWORD *)(a1 + 216) | 1) ^ 0x1F) + 73) >> 6) + 1;
        }
        goto LABEL_45;
      }
LABEL_35:
      uint64_t v37 = sub_15C1220(*(void *)(a1 + 200));
      v30 += v37 + ((9 * (__clz(v37 | 1) ^ 0x1F) + 73) >> 6) + 1;
      goto LABEL_36;
    }
LABEL_52:
    uint64_t v48 = sub_181E970(*(void *)(a1 + 192));
    v30 += v48 + ((9 * (__clz(v48 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v36 & 0x10) == 0) {
      goto LABEL_36;
    }
    goto LABEL_35;
  }
LABEL_45:
  uint64_t v41 = *(void *)(a1 + 8);
  if (v41)
  {
    unint64_t v49 = v41 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v49 + 31) < 0) {
      uint64_t v50 = *(void *)(v49 + 16);
    }
    else {
      uint64_t v50 = *(unsigned __int8 *)(v49 + 31);
    }
    v30 += v50;
  }
  *(_DWORD *)(a1 + 44) = v30;
  return v30;
}

void sub_182C88C(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 56);
  if (v4)
  {
    int v5 = (const std::string **)(*(void *)(a2 + 64) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_188FB98(a1 + 48, v6, v5, v4, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v7 = *(_DWORD *)(a1 + 56) + v4;
    *(_DWORD *)(a1 + 56) = v7;
    uint64_t v8 = *(int **)(a1 + 64);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 80);
  if (v9)
  {
    uint64_t v10 = (const std::string **)(*(void *)(a2 + 88) + 8);
    unsigned int v11 = (std::string **)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_188FB98(a1 + 72, v11, v10, v9, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v12 = *(_DWORD *)(a1 + 80) + v9;
    *(_DWORD *)(a1 + 80) = v12;
    uint64_t v13 = *(int **)(a1 + 88);
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 104);
  if (v14)
  {
    uint64_t v15 = (uint64_t *)(*(void *)(a2 + 112) + 8);
    uint64_t v16 = (uint64_t *)sub_188CCE4(a1 + 96, *(_DWORD *)(a2 + 104));
    sub_1879CBC((uint64_t *)(a1 + 96), v16, v15, v14, **(_DWORD **)(a1 + 112) - *(_DWORD *)(a1 + 104));
    int v17 = *(_DWORD *)(a1 + 104) + v14;
    *(_DWORD *)(a1 + 104) = v17;
    uint64_t v18 = *(int **)(a1 + 112);
    if (*v18 < v17) {
      int *v18 = v17;
    }
  }
  int v19 = *(_DWORD *)(a2 + 128);
  if (v19)
  {
    uint64_t v20 = (uint64_t *)(*(void *)(a2 + 136) + 8);
    uint64_t v21 = (uint64_t *)sub_188CCE4(a1 + 120, *(_DWORD *)(a2 + 128));
    sub_1879CBC((uint64_t *)(a1 + 120), v21, v20, v19, **(_DWORD **)(a1 + 136) - *(_DWORD *)(a1 + 128));
    int v22 = *(_DWORD *)(a1 + 128) + v19;
    *(_DWORD *)(a1 + 128) = v22;
    uint64_t v23 = *(int **)(a1 + 136);
    if (*v23 < v22) {
      int *v23 = v22;
    }
  }
  int v24 = *(_DWORD *)(a2 + 152);
  if (v24)
  {
    int v25 = (uint64_t *)(*(void *)(a2 + 160) + 8);
    uint64_t v26 = (uint64_t *)sub_188CCE4(a1 + 144, *(_DWORD *)(a2 + 152));
    sub_1879CBC((uint64_t *)(a1 + 144), v26, v25, v24, **(_DWORD **)(a1 + 160) - *(_DWORD *)(a1 + 152));
    int v27 = *(_DWORD *)(a1 + 152) + v24;
    *(_DWORD *)(a1 + 152) = v27;
    uint64_t v28 = *(int **)(a1 + 160);
    if (*v28 < v27) {
      *uint64_t v28 = v27;
    }
  }
  int v29 = *(_DWORD *)(a2 + 40);
  if ((_BYTE)v29)
  {
    if (v29)
    {
      uint64_t v31 = (long long *)(*(void *)(a2 + 168) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 40) |= 1u;
      uint64_t v32 = *(void *)(a1 + 8);
      uint64_t v33 = (uint64_t *)(v32 & 0xFFFFFFFFFFFFFFFCLL);
      if (v32) {
        uint64_t v33 = (uint64_t *)*v33;
      }
      sub_1881DF4((std::string **)(a1 + 168), v31, v33);
      if ((v29 & 2) == 0)
      {
LABEL_19:
        if ((v29 & 4) == 0) {
          goto LABEL_20;
        }
        goto LABEL_42;
      }
    }
    else if ((v29 & 2) == 0)
    {
      goto LABEL_19;
    }
    *(_DWORD *)(a1 + 40) |= 2u;
    uint64_t v34 = *(void *)(a1 + 176);
    if (!v34)
    {
      uint64_t v35 = *(void *)(a1 + 8);
      char v36 = (void *)(v35 & 0xFFFFFFFFFFFFFFFCLL);
      if (v35) {
        char v36 = (void *)*v36;
      }
      sub_1850970((uint64_t)v36);
      *(void *)(a1 + 176) = v34;
    }
    if (*(void *)(a2 + 176)) {
      uint64_t v37 = *(uint64_t (****)())(a2 + 176);
    }
    else {
      uint64_t v37 = &off_254D310;
    }
    sub_182CCB8(v34, (uint64_t)v37);
    if ((v29 & 4) == 0)
    {
LABEL_20:
      if ((v29 & 8) == 0) {
        goto LABEL_21;
      }
      goto LABEL_50;
    }
LABEL_42:
    *(_DWORD *)(a1 + 40) |= 4u;
    uint64_t v38 = *(void *)(a1 + 184);
    if (!v38)
    {
      uint64_t v39 = *(void *)(a1 + 8);
      uint64_t v40 = (void *)(v39 & 0xFFFFFFFFFFFFFFFCLL);
      if (v39) {
        uint64_t v40 = (void *)*v40;
      }
      uint64_t v38 = sub_1850A04((uint64_t)v40);
      *(void *)(a1 + 184) = v38;
    }
    if (*(void *)(a2 + 184)) {
      uint64_t v41 = *(uint64_t (****)())(a2 + 184);
    }
    else {
      uint64_t v41 = &off_254D3B0;
    }
    sub_182D0C4(v38, (uint64_t)v41);
    if ((v29 & 8) == 0)
    {
LABEL_21:
      if ((v29 & 0x10) == 0) {
        goto LABEL_22;
      }
      goto LABEL_58;
    }
LABEL_50:
    *(_DWORD *)(a1 + 40) |= 8u;
    uint64_t v42 = *(void *)(a1 + 192);
    if (!v42)
    {
      uint64_t v43 = *(void *)(a1 + 8);
      uint64_t v44 = (void *)(v43 & 0xFFFFFFFFFFFFFFFCLL);
      if (v43) {
        uint64_t v44 = (void *)*v44;
      }
      uint64_t v42 = sub_1836CFC((uint64_t)v44);
      *(void *)(a1 + 192) = v42;
    }
    if (*(void *)(a2 + 192)) {
      uint64_t v45 = *(uint64_t (****)())(a2 + 192);
    }
    else {
      uint64_t v45 = &off_254C5C8;
    }
    sub_181F684(v42, (uint64_t)v45);
    if ((v29 & 0x10) == 0)
    {
LABEL_22:
      if ((v29 & 0x20) == 0) {
        goto LABEL_23;
      }
      goto LABEL_66;
    }
LABEL_58:
    *(_DWORD *)(a1 + 40) |= 0x10u;
    uint64_t v46 = *(std::string **)(a1 + 200);
    if (!v46)
    {
      uint64_t v47 = *(void *)(a1 + 8);
      uint64_t v48 = (void *)(v47 & 0xFFFFFFFFFFFFFFFCLL);
      if (v47) {
        uint64_t v48 = (void *)*v48;
      }
      uint64_t v46 = (std::string *)sub_15C26A4((uint64_t)v48);
      *(void *)(a1 + 200) = v46;
    }
    if (*(void *)(a2 + 200)) {
      unint64_t v49 = *(uint64_t (****)())(a2 + 200);
    }
    else {
      unint64_t v49 = &off_253F780;
    }
    sub_13B15D0(v46, (uint64_t)v49);
    if ((v29 & 0x20) == 0)
    {
LABEL_23:
      if ((v29 & 0x40) == 0) {
        goto LABEL_24;
      }
      goto LABEL_67;
    }
LABEL_66:
    *(unsigned char *)(a1 + 208) = *(unsigned char *)(a2 + 208);
    if ((v29 & 0x40) == 0)
    {
LABEL_24:
      if ((v29 & 0x80) == 0)
      {
LABEL_26:
        *(_DWORD *)(a1 + 40) |= v29;
        goto LABEL_27;
      }
LABEL_25:
      *(_DWORD *)(a1 + 216) = *(_DWORD *)(a2 + 216);
      goto LABEL_26;
    }
LABEL_67:
    *(_DWORD *)(a1 + 212) = *(_DWORD *)(a2 + 212);
    if ((v29 & 0x80) == 0) {
      goto LABEL_26;
    }
    goto LABEL_25;
  }
LABEL_27:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v30 = *(void *)(a2 + 8);
  if (v30)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v30 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_182CCB8(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    int v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_11DB348((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    uint64_t v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if (!(_BYTE)v9) {
    goto LABEL_43;
  }
  if (v9)
  {
    uint64_t v10 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v11 = *(void *)(a1 + 8);
    int v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
    if (v11) {
      int v12 = (uint64_t *)*v12;
    }
    sub_1881DF4((std::string **)(a1 + 48), v10, v12);
    if ((v9 & 2) == 0)
    {
LABEL_7:
      if ((v9 & 4) == 0) {
        goto LABEL_8;
      }
      goto LABEL_20;
    }
  }
  else if ((v9 & 2) == 0)
  {
    goto LABEL_7;
  }
  uint64_t v13 = (long long *)(*(void *)(a2 + 56) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 16) |= 2u;
  uint64_t v14 = *(void *)(a1 + 8);
  uint64_t v15 = (uint64_t *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
  if (v14) {
    uint64_t v15 = (uint64_t *)*v15;
  }
  sub_1881DF4((std::string **)(a1 + 56), v13, v15);
  if ((v9 & 4) == 0)
  {
LABEL_8:
    if ((v9 & 8) == 0) {
      goto LABEL_9;
    }
    goto LABEL_23;
  }
LABEL_20:
  uint64_t v16 = (long long *)(*(void *)(a2 + 64) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 16) |= 4u;
  uint64_t v17 = *(void *)(a1 + 8);
  uint64_t v18 = (uint64_t *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
  if (v17) {
    uint64_t v18 = (uint64_t *)*v18;
  }
  sub_1881DF4((std::string **)(a1 + 64), v16, v18);
  if ((v9 & 8) == 0)
  {
LABEL_9:
    if ((v9 & 0x10) == 0) {
      goto LABEL_10;
    }
    goto LABEL_26;
  }
LABEL_23:
  int v19 = (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 16) |= 8u;
  uint64_t v20 = *(void *)(a1 + 8);
  uint64_t v21 = (uint64_t *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
  if (v20) {
    uint64_t v21 = (uint64_t *)*v21;
  }
  sub_1881DF4((std::string **)(a1 + 72), v19, v21);
  if ((v9 & 0x10) == 0)
  {
LABEL_10:
    if ((v9 & 0x20) == 0) {
      goto LABEL_11;
    }
LABEL_29:
    int v25 = (long long *)(*(void *)(a2 + 88) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 0x20u;
    uint64_t v26 = *(void *)(a1 + 8);
    int v27 = (uint64_t *)(v26 & 0xFFFFFFFFFFFFFFFCLL);
    if (v26) {
      int v27 = (uint64_t *)*v27;
    }
    sub_1881DF4((std::string **)(a1 + 88), v25, v27);
    if ((v9 & 0x40) == 0)
    {
LABEL_12:
      if ((v9 & 0x80) == 0) {
        goto LABEL_43;
      }
      goto LABEL_35;
    }
    goto LABEL_32;
  }
LABEL_26:
  int v22 = (long long *)(*(void *)(a2 + 80) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 16) |= 0x10u;
  uint64_t v23 = *(void *)(a1 + 8);
  int v24 = (uint64_t *)(v23 & 0xFFFFFFFFFFFFFFFCLL);
  if (v23) {
    int v24 = (uint64_t *)*v24;
  }
  sub_1881DF4((std::string **)(a1 + 80), v22, v24);
  if ((v9 & 0x20) != 0) {
    goto LABEL_29;
  }
LABEL_11:
  if ((v9 & 0x40) == 0) {
    goto LABEL_12;
  }
LABEL_32:
  uint64_t v28 = (long long *)(*(void *)(a2 + 96) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 16) |= 0x40u;
  uint64_t v29 = *(void *)(a1 + 8);
  uint64_t v30 = (uint64_t *)(v29 & 0xFFFFFFFFFFFFFFFCLL);
  if (v29) {
    uint64_t v30 = (uint64_t *)*v30;
  }
  sub_1881DF4((std::string **)(a1 + 96), v28, v30);
  if ((v9 & 0x80) != 0)
  {
LABEL_35:
    *(_DWORD *)(a1 + 16) |= 0x80u;
    uint64_t v31 = *(std::string **)(a1 + 104);
    if (!v31)
    {
      uint64_t v32 = *(void *)(a1 + 8);
      uint64_t v33 = (void *)(v32 & 0xFFFFFFFFFFFFFFFCLL);
      if (v32) {
        uint64_t v33 = (void *)*v33;
      }
      uint64_t v31 = (std::string *)sub_15C2014((uint64_t)v33);
      *(void *)(a1 + 104) = v31;
    }
    if (*(void *)(a2 + 104)) {
      uint64_t v34 = *(uint64_t (****)())(a2 + 104);
    }
    else {
      uint64_t v34 = &off_253F530;
    }
    sub_1113E40(v31, (uint64_t)v34);
  }
LABEL_43:
  if ((v9 & 0xFF00) == 0) {
    goto LABEL_54;
  }
  if ((v9 & 0x100) != 0)
  {
    *(_DWORD *)(a1 + 16) |= 0x100u;
    char v36 = *(void **)(a1 + 112);
    if (!v36)
    {
      uint64_t v37 = *(void *)(a1 + 8);
      uint64_t v38 = (void *)(v37 & 0xFFFFFFFFFFFFFFFCLL);
      if (v37) {
        uint64_t v38 = (void *)*v38;
      }
      char v36 = sub_15C24B4((uint64_t)v38);
      *(void *)(a1 + 112) = v36;
    }
    if (*(void *)(a2 + 112)) {
      uint64_t v39 = *(uint64_t (****)())(a2 + 112);
    }
    else {
      uint64_t v39 = &off_253F6E8;
    }
    sub_15BF630((uint64_t)v36, (uint64_t)v39);
    if ((v9 & 0x200) == 0)
    {
LABEL_46:
      if ((v9 & 0x400) == 0) {
        goto LABEL_47;
      }
      goto LABEL_80;
    }
  }
  else if ((v9 & 0x200) == 0)
  {
    goto LABEL_46;
  }
  *(_DWORD *)(a1 + 16) |= 0x200u;
  uint64_t v40 = *(void *)(a1 + 120);
  if (!v40)
  {
    uint64_t v41 = *(void *)(a1 + 8);
    uint64_t v42 = (void *)(v41 & 0xFFFFFFFFFFFFFFFCLL);
    if (v41) {
      uint64_t v42 = (void *)*v42;
    }
    uint64_t v40 = sub_15C2458((uint64_t)v42);
    *(void *)(a1 + 120) = v40;
  }
  if (*(void *)(a2 + 120)) {
    uint64_t v43 = *(uint64_t (****)())(a2 + 120);
  }
  else {
    uint64_t v43 = &off_253F6A8;
  }
  sub_15BEE0C(v40, (uint64_t)v43);
  if ((v9 & 0x400) == 0)
  {
LABEL_47:
    if ((v9 & 0x800) == 0) {
      goto LABEL_48;
    }
    goto LABEL_81;
  }
LABEL_80:
  *(_DWORD *)(a1 + 128) = *(_DWORD *)(a2 + 128);
  if ((v9 & 0x800) == 0)
  {
LABEL_48:
    if ((v9 & 0x1000) == 0) {
      goto LABEL_49;
    }
    goto LABEL_82;
  }
LABEL_81:
  *(_DWORD *)(a1 + 132) = *(_DWORD *)(a2 + 132);
  if ((v9 & 0x1000) == 0)
  {
LABEL_49:
    if ((v9 & 0x2000) == 0) {
      goto LABEL_50;
    }
    goto LABEL_83;
  }
LABEL_82:
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  if ((v9 & 0x2000) == 0)
  {
LABEL_50:
    if ((v9 & 0x4000) == 0) {
      goto LABEL_51;
    }
LABEL_84:
    *(unsigned char *)(a1 + 145) = *(unsigned char *)(a2 + 145);
    if ((v9 & 0x8000) == 0) {
      goto LABEL_53;
    }
    goto LABEL_52;
  }
LABEL_83:
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  if ((v9 & 0x4000) != 0) {
    goto LABEL_84;
  }
LABEL_51:
  if ((v9 & 0x8000) != 0) {
LABEL_52:
  }
    *(unsigned char *)(a1 + 146) = *(unsigned char *)(a2 + 146);
LABEL_53:
  *(_DWORD *)(a1 + 16) |= v9;
LABEL_54:
  if ((v9 & 0x70000) == 0) {
    goto LABEL_60;
  }
  if ((v9 & 0x10000) == 0)
  {
    if ((v9 & 0x20000) == 0) {
      goto LABEL_57;
    }
LABEL_87:
    *(_DWORD *)(a1 + 148) = *(_DWORD *)(a2 + 148);
    if ((v9 & 0x40000) == 0) {
      goto LABEL_59;
    }
    goto LABEL_58;
  }
  *(unsigned char *)(a1 + 147) = *(unsigned char *)(a2 + 147);
  if ((v9 & 0x20000) != 0) {
    goto LABEL_87;
  }
LABEL_57:
  if ((v9 & 0x40000) != 0) {
LABEL_58:
  }
    *(void *)(a1 + 152) = *(void *)(a2 + 152);
LABEL_59:
  *(_DWORD *)(a1 + 16) |= v9;
LABEL_60:
  uint64_t v35 = *(void *)(a2 + 8);
  if (v35)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v35 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_182D0C4(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 56);
  if (v4)
  {
    int v5 = (const std::string **)(*(void *)(a2 + 64) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_188FB98(a1 + 48, v6, v5, v4, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v7 = *(_DWORD *)(a1 + 56) + v4;
    *(_DWORD *)(a1 + 56) = v7;
    uint64_t v8 = *(int **)(a1 + 64);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 80);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 88) + 8);
    uint64_t v11 = (uint64_t *)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_12C5340((uint64_t *)(a1 + 72), v11, v10, v9, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v12 = *(_DWORD *)(a1 + 80) + v9;
    *(_DWORD *)(a1 + 80) = v12;
    uint64_t v13 = *(int **)(a1 + 88);
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 96);
  if (v14)
  {
    uint64_t v15 = *(int *)(a1 + 96);
    sub_188C80C((unsigned int *)(a1 + 96), v15 + v14);
    uint64_t v16 = *(void *)(a1 + 104);
    *(_DWORD *)(a1 + 96) += *(_DWORD *)(a2 + 96);
    memcpy((void *)(v16 + 4 * v15), *(const void **)(a2 + 104), 4 * *(int *)(a2 + 96));
  }
  int v17 = *(_DWORD *)(a2 + 112);
  if (v17)
  {
    uint64_t v18 = *(int *)(a1 + 112);
    sub_188C80C((unsigned int *)(a1 + 112), v18 + v17);
    uint64_t v19 = *(void *)(a1 + 120);
    *(_DWORD *)(a1 + 112) += *(_DWORD *)(a2 + 112);
    memcpy((void *)(v19 + 4 * v18), *(const void **)(a2 + 120), 4 * *(int *)(a2 + 112));
  }
  int v20 = *(_DWORD *)(a2 + 136);
  if (v20)
  {
    uint64_t v21 = (const std::string **)(*(void *)(a2 + 144) + 8);
    int v22 = (std::string **)sub_188CCE4(a1 + 128, *(_DWORD *)(a2 + 136));
    sub_188FB98(a1 + 128, v22, v21, v20, **(_DWORD **)(a1 + 144) - *(_DWORD *)(a1 + 136));
    int v23 = *(_DWORD *)(a1 + 136) + v20;
    *(_DWORD *)(a1 + 136) = v23;
    int v24 = *(int **)(a1 + 144);
    if (*v24 < v23) {
      int *v24 = v23;
    }
  }
  int v25 = *(_DWORD *)(a2 + 152);
  if (v25)
  {
    uint64_t v26 = *(int *)(a1 + 152);
    sub_188C80C((unsigned int *)(a1 + 152), v26 + v25);
    uint64_t v27 = *(void *)(a1 + 160);
    *(_DWORD *)(a1 + 152) += *(_DWORD *)(a2 + 152);
    memcpy((void *)(v27 + 4 * v26), *(const void **)(a2 + 160), 4 * *(int *)(a2 + 152));
  }
  int v28 = *(_DWORD *)(a2 + 168);
  if (v28)
  {
    uint64_t v29 = *(int *)(a1 + 168);
    sub_188C80C((unsigned int *)(a1 + 168), v29 + v28);
    uint64_t v30 = *(void *)(a1 + 176);
    *(_DWORD *)(a1 + 168) += *(_DWORD *)(a2 + 168);
    memcpy((void *)(v30 + 4 * v29), *(const void **)(a2 + 176), 4 * *(int *)(a2 + 168));
  }
  int v31 = *(_DWORD *)(a2 + 192);
  if (v31)
  {
    uint64_t v32 = *(int *)(a1 + 192);
    sub_188C80C((unsigned int *)(a1 + 192), v32 + v31);
    uint64_t v33 = *(void *)(a1 + 200);
    *(_DWORD *)(a1 + 192) += *(_DWORD *)(a2 + 192);
    memcpy((void *)(v33 + 4 * v32), *(const void **)(a2 + 200), 4 * *(int *)(a2 + 192));
  }
  int v34 = *(_DWORD *)(a2 + 40);
  if (!(_BYTE)v34) {
    goto LABEL_54;
  }
  if (v34)
  {
    uint64_t v35 = (long long *)(*(void *)(a2 + 208) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 40) |= 1u;
    uint64_t v36 = *(void *)(a1 + 8);
    uint64_t v37 = (uint64_t *)(v36 & 0xFFFFFFFFFFFFFFFCLL);
    if (v36) {
      uint64_t v37 = (uint64_t *)*v37;
    }
    sub_1881DF4((std::string **)(a1 + 208), v35, v37);
    if ((v34 & 2) == 0)
    {
LABEL_23:
      if ((v34 & 4) == 0) {
        goto LABEL_24;
      }
      goto LABEL_36;
    }
  }
  else if ((v34 & 2) == 0)
  {
    goto LABEL_23;
  }
  uint64_t v38 = (long long *)(*(void *)(a2 + 216) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 40) |= 2u;
  uint64_t v39 = *(void *)(a1 + 8);
  uint64_t v40 = (uint64_t *)(v39 & 0xFFFFFFFFFFFFFFFCLL);
  if (v39) {
    uint64_t v40 = (uint64_t *)*v40;
  }
  sub_1881DF4((std::string **)(a1 + 216), v38, v40);
  if ((v34 & 4) == 0)
  {
LABEL_24:
    if ((v34 & 8) == 0) {
      goto LABEL_25;
    }
    goto LABEL_39;
  }
LABEL_36:
  uint64_t v41 = (long long *)(*(void *)(a2 + 224) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 40) |= 4u;
  uint64_t v42 = *(void *)(a1 + 8);
  uint64_t v43 = (uint64_t *)(v42 & 0xFFFFFFFFFFFFFFFCLL);
  if (v42) {
    uint64_t v43 = (uint64_t *)*v43;
  }
  sub_1881DF4((std::string **)(a1 + 224), v41, v43);
  if ((v34 & 8) == 0)
  {
LABEL_25:
    if ((v34 & 0x10) == 0) {
      goto LABEL_26;
    }
    goto LABEL_42;
  }
LABEL_39:
  uint64_t v44 = (long long *)(*(void *)(a2 + 232) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 40) |= 8u;
  uint64_t v45 = *(void *)(a1 + 8);
  uint64_t v46 = (uint64_t *)(v45 & 0xFFFFFFFFFFFFFFFCLL);
  if (v45) {
    uint64_t v46 = (uint64_t *)*v46;
  }
  sub_1881DF4((std::string **)(a1 + 232), v44, v46);
  if ((v34 & 0x10) == 0)
  {
LABEL_26:
    if ((v34 & 0x20) == 0) {
      goto LABEL_27;
    }
LABEL_45:
    uint64_t v50 = (long long *)(*(void *)(a2 + 248) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 40) |= 0x20u;
    uint64_t v51 = *(void *)(a1 + 8);
    int v52 = (uint64_t *)(v51 & 0xFFFFFFFFFFFFFFFCLL);
    if (v51) {
      int v52 = (uint64_t *)*v52;
    }
    sub_1881DF4((std::string **)(a1 + 248), v50, v52);
    if ((v34 & 0x40) == 0)
    {
LABEL_28:
      if ((v34 & 0x80) == 0) {
        goto LABEL_54;
      }
      goto LABEL_51;
    }
    goto LABEL_48;
  }
LABEL_42:
  uint64_t v47 = (long long *)(*(void *)(a2 + 240) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 40) |= 0x10u;
  uint64_t v48 = *(void *)(a1 + 8);
  unint64_t v49 = (uint64_t *)(v48 & 0xFFFFFFFFFFFFFFFCLL);
  if (v48) {
    unint64_t v49 = (uint64_t *)*v49;
  }
  sub_1881DF4((std::string **)(a1 + 240), v47, v49);
  if ((v34 & 0x20) != 0) {
    goto LABEL_45;
  }
LABEL_27:
  if ((v34 & 0x40) == 0) {
    goto LABEL_28;
  }
LABEL_48:
  uint64_t v53 = (long long *)(*(void *)(a2 + 256) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 40) |= 0x40u;
  uint64_t v54 = *(void *)(a1 + 8);
  unint64_t v55 = (uint64_t *)(v54 & 0xFFFFFFFFFFFFFFFCLL);
  if (v54) {
    unint64_t v55 = (uint64_t *)*v55;
  }
  sub_1881DF4((std::string **)(a1 + 256), v53, v55);
  if ((v34 & 0x80) != 0)
  {
LABEL_51:
    uint64_t v56 = (long long *)(*(void *)(a2 + 264) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 40) |= 0x80u;
    uint64_t v57 = *(void *)(a1 + 8);
    uint64_t v58 = (uint64_t *)(v57 & 0xFFFFFFFFFFFFFFFCLL);
    if (v57) {
      uint64_t v58 = (uint64_t *)*v58;
    }
    sub_1881DF4((std::string **)(a1 + 264), v56, v58);
  }
LABEL_54:
  if ((v34 & 0xFF00) == 0) {
    goto LABEL_65;
  }
  if ((v34 & 0x100) != 0)
  {
    *(_DWORD *)(a1 + 40) |= 0x100u;
    uint64_t v60 = *(void *)(a1 + 272);
    if (!v60)
    {
      uint64_t v61 = *(void *)(a1 + 8);
      int v62 = (void *)(v61 & 0xFFFFFFFFFFFFFFFCLL);
      if (v61) {
        int v62 = (void *)*v62;
      }
      uint64_t v60 = sub_15C1918((uint64_t)v62);
      *(void *)(a1 + 272) = v60;
    }
    if (*(void *)(a2 + 272)) {
      uint64_t v63 = *(uint64_t (****)())(a2 + 272);
    }
    else {
      uint64_t v63 = &off_253F1A0;
    }
    sub_15B0E24(v60, (uint64_t)v63);
    if ((v34 & 0x200) == 0)
    {
LABEL_57:
      if ((v34 & 0x400) == 0) {
        goto LABEL_58;
      }
      goto LABEL_96;
    }
  }
  else if ((v34 & 0x200) == 0)
  {
    goto LABEL_57;
  }
  *(_DWORD *)(a1 + 40) |= 0x200u;
  uint64_t v64 = *(std::string **)(a1 + 280);
  if (!v64)
  {
    uint64_t v65 = *(void *)(a1 + 8);
    uint64_t v66 = (void *)(v65 & 0xFFFFFFFFFFFFFFFCLL);
    if (v65) {
      uint64_t v66 = (void *)*v66;
    }
    uint64_t v64 = (std::string *)sub_1479978((uint64_t)v66);
    *(void *)(a1 + 280) = v64;
  }
  if (*(void *)(a2 + 280)) {
    uint64_t v67 = *(uint64_t (****)())(a2 + 280);
  }
  else {
    uint64_t v67 = &off_2539C48;
  }
  sub_1216B14(v64, (uint64_t)v67);
  if ((v34 & 0x400) == 0)
  {
LABEL_58:
    if ((v34 & 0x800) == 0) {
      goto LABEL_59;
    }
    goto LABEL_104;
  }
LABEL_96:
  *(_DWORD *)(a1 + 40) |= 0x400u;
  uint64_t v68 = *(void *)(a1 + 288);
  if (!v68)
  {
    uint64_t v69 = *(void *)(a1 + 8);
    uint64_t v70 = (void *)(v69 & 0xFFFFFFFFFFFFFFFCLL);
    if (v69) {
      uint64_t v70 = (void *)*v70;
    }
    uint64_t v68 = sub_15C1CB4((uint64_t)v70);
    *(void *)(a1 + 288) = v68;
  }
  if (*(void *)(a2 + 288)) {
    uint64_t v71 = *(uint64_t (****)())(a2 + 288);
  }
  else {
    uint64_t v71 = &off_253F2E8;
  }
  sub_15B04F0(v68, (uint64_t)v71);
  if ((v34 & 0x800) == 0)
  {
LABEL_59:
    if ((v34 & 0x1000) == 0) {
      goto LABEL_60;
    }
    goto LABEL_112;
  }
LABEL_104:
  *(_DWORD *)(a1 + 40) |= 0x800u;
  unint64_t v72 = *(std::string **)(a1 + 296);
  if (!v72)
  {
    uint64_t v73 = *(void *)(a1 + 8);
    int v74 = (void *)(v73 & 0xFFFFFFFFFFFFFFFCLL);
    if (v73) {
      int v74 = (void *)*v74;
    }
    unint64_t v72 = (std::string *)sub_15C2608((uint64_t)v74);
    *(void *)(a1 + 296) = v72;
  }
  if (*(void *)(a2 + 296)) {
    uint64_t v75 = *(uint64_t (****)())(a2 + 296);
  }
  else {
    uint64_t v75 = &off_253F750;
  }
  sub_15C0B20(v72, (uint64_t)v75);
  if ((v34 & 0x1000) == 0)
  {
LABEL_60:
    if ((v34 & 0x2000) == 0) {
      goto LABEL_61;
    }
    goto LABEL_120;
  }
LABEL_112:
  *(_DWORD *)(a1 + 40) |= 0x1000u;
  unint64_t v76 = *(std::string **)(a1 + 304);
  if (!v76)
  {
    uint64_t v77 = *(void *)(a1 + 8);
    uint64_t v78 = (void *)(v77 & 0xFFFFFFFFFFFFFFFCLL);
    if (v77) {
      uint64_t v78 = (void *)*v78;
    }
    unint64_t v76 = (std::string *)sub_18508F8((uint64_t)v78);
    *(void *)(a1 + 304) = v76;
  }
  if (*(void *)(a2 + 304)) {
    uint64_t v79 = *(uint64_t (****)())(a2 + 304);
  }
  else {
    uint64_t v79 = &off_254D2F0;
  }
  sub_123DB18(v76, (uint64_t)v79);
  if ((v34 & 0x2000) == 0)
  {
LABEL_61:
    if ((v34 & 0x4000) == 0) {
      goto LABEL_62;
    }
LABEL_121:
    *(_DWORD *)(a1 + 316) = *(_DWORD *)(a2 + 316);
    if ((v34 & 0x8000) == 0) {
      goto LABEL_64;
    }
    goto LABEL_63;
  }
LABEL_120:
  *(_DWORD *)(a1 + 312) = *(_DWORD *)(a2 + 312);
  if ((v34 & 0x4000) != 0) {
    goto LABEL_121;
  }
LABEL_62:
  if ((v34 & 0x8000) != 0) {
LABEL_63:
  }
    *(_DWORD *)(a1 + 320) = *(_DWORD *)(a2 + 320);
LABEL_64:
  *(_DWORD *)(a1 + 40) |= v34;
LABEL_65:
  if ((v34 & 0xFF0000) == 0) {
    goto LABEL_76;
  }
  if ((v34 & 0x10000) != 0)
  {
    *(_DWORD *)(a1 + 324) = *(_DWORD *)(a2 + 324);
    if ((v34 & 0x20000) == 0)
    {
LABEL_68:
      if ((v34 & 0x40000) == 0) {
        goto LABEL_69;
      }
      goto LABEL_125;
    }
  }
  else if ((v34 & 0x20000) == 0)
  {
    goto LABEL_68;
  }
  *(_DWORD *)(a1 + 328) = *(_DWORD *)(a2 + 328);
  if ((v34 & 0x40000) == 0)
  {
LABEL_69:
    if ((v34 & 0x80000) == 0) {
      goto LABEL_70;
    }
    goto LABEL_126;
  }
LABEL_125:
  *(_DWORD *)(a1 + 332) = *(_DWORD *)(a2 + 332);
  if ((v34 & 0x80000) == 0)
  {
LABEL_70:
    if ((v34 & 0x100000) == 0) {
      goto LABEL_71;
    }
    goto LABEL_127;
  }
LABEL_126:
  *(unsigned char *)(a1 + 336) = *(unsigned char *)(a2 + 336);
  if ((v34 & 0x100000) == 0)
  {
LABEL_71:
    if ((v34 & 0x200000) == 0) {
      goto LABEL_72;
    }
    goto LABEL_128;
  }
LABEL_127:
  *(unsigned char *)(a1 + 337) = *(unsigned char *)(a2 + 337);
  if ((v34 & 0x200000) == 0)
  {
LABEL_72:
    if ((v34 & 0x400000) == 0) {
      goto LABEL_73;
    }
LABEL_129:
    *(_DWORD *)(a1 + 340) = *(_DWORD *)(a2 + 340);
    if ((v34 & 0x800000) == 0) {
      goto LABEL_75;
    }
    goto LABEL_74;
  }
LABEL_128:
  *(unsigned char *)(a1 + 338) = *(unsigned char *)(a2 + 338);
  if ((v34 & 0x400000) != 0) {
    goto LABEL_129;
  }
LABEL_73:
  if ((v34 & 0x800000) != 0) {
LABEL_74:
  }
    *(_DWORD *)(a1 + 344) = *(_DWORD *)(a2 + 344);
LABEL_75:
  *(_DWORD *)(a1 + 40) |= v34;
LABEL_76:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v59 = *(void *)(a2 + 8);
  if (v59)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v59 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_182D7F0(uint64_t a1, uint64_t a2)
{
  if (a2 != a1)
  {
    sub_182B368(a1);
    sub_182C88C(a1, a2);
  }
}

uint64_t sub_182D83C(uint64_t a1)
{
  uint64_t result = sub_18856CC(a1 + 16);
  if (result)
  {
    uint64_t result = sub_182D8CC(a1 + 96);
    if (result)
    {
      uint64_t result = sub_182D8CC(a1 + 120);
      if (result)
      {
        uint64_t result = sub_182D8CC(a1 + 144);
        if (result)
        {
          int v3 = *(_DWORD *)(a1 + 40);
          if ((v3 & 2) != 0)
          {
            uint64_t result = sub_182D93C(*(void *)(a1 + 176));
            if (!result) {
              return result;
            }
            int v3 = *(_DWORD *)(a1 + 40);
          }
          if ((v3 & 4) != 0)
          {
            uint64_t result = sub_182D9C8(*(void *)(a1 + 184));
            if (!result) {
              return result;
            }
            int v3 = *(_DWORD *)(a1 + 40);
          }
          if ((v3 & 8) == 0) {
            return 1;
          }
          uint64_t result = sub_1820A48(*(void *)(a1 + 192));
          if (result) {
            return 1;
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_182D8CC(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 8);
  if ((int)v1 < 1) {
    return 1;
  }
  uint64_t v3 = v1 + 1;
  for (unsigned int i = v1 - 1; ; --i)
  {
    uint64_t v5 = *(void *)(*(void *)(a1 + 16) + 8 * i + 8);
    if (*(unsigned char *)(v5 + 16))
    {
      uint64_t result = sub_173EF4C(*(void *)(v5 + 24));
      if (!result) {
        break;
      }
    }
    if (--v3 <= 1) {
      return 1;
    }
  }
  return result;
}

uint64_t sub_182D93C(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  while ((int)v2 >= 1)
  {
    uint64_t v3 = v2 - 1;
    char v4 = sub_15BAF9C(*(void *)(*(void *)(a1 + 40) + 8 * v2));
    uint64_t v2 = v3;
    if ((v4 & 1) == 0) {
      return 0;
    }
  }
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 0x80) != 0)
  {
    uint64_t result = sub_15BA3C8(*(void *)(a1 + 104));
    if (!result) {
      return result;
    }
    int v6 = *(_DWORD *)(a1 + 16);
  }
  if ((v6 & 0x100) != 0)
  {
    uint64_t result = sub_15BF6F4(*(void *)(a1 + 112));
    if (!result) {
      return result;
    }
    int v6 = *(_DWORD *)(a1 + 16);
  }
  if ((v6 & 0x200) == 0) {
    return 1;
  }
  uint64_t result = sub_15BEE9C(*(void *)(a1 + 120));
  if (result) {
    return 1;
  }
  return result;
}

uint64_t sub_182D9C8(uint64_t a1)
{
  uint64_t result = sub_18856CC(a1 + 16);
  if (result)
  {
    uint64_t v3 = *(unsigned int *)(a1 + 80);
    while ((int)v3 >= 1)
    {
      uint64_t v4 = v3 - 1;
      char v5 = sub_15B06D8(*(void *)(*(void *)(a1 + 88) + 8 * v3));
      uint64_t v3 = v4;
      if ((v5 & 1) == 0) {
        return 0;
      }
    }
    int v6 = *(_DWORD *)(a1 + 40);
    if ((v6 & 0x100) != 0)
    {
      uint64_t result = sub_15B0F18(*(void *)(a1 + 272));
      if (!result) {
        return result;
      }
      int v6 = *(_DWORD *)(a1 + 40);
    }
    if ((v6 & 0x400) == 0) {
      return 1;
    }
    uint64_t result = sub_15B06D8(*(void *)(a1 + 288));
    if (result) {
      return 1;
    }
  }
  return result;
}

__n128 sub_182DA4C(uint64_t a1, uint64_t a2)
{
  sub_1885338((uint64_t *)(a1 + 16), (uint64_t *)(a2 + 16));
  uint64_t v4 = *(void *)(a1 + 8);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a2 + 8) = v4;
  LODWORD(v4) = *(_DWORD *)(a1 + 40);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a2 + 40) = v4;
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(a1 + 56);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(void *)(a2 + 48) = v5;
  *(void *)(a2 + 56) = v6;
  uint64_t v7 = *(void *)(a1 + 64);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a2 + 64) = v7;
  uint64_t v8 = *(void *)(a1 + 72);
  uint64_t v9 = *(void *)(a1 + 80);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(void *)(a2 + 72) = v8;
  *(void *)(a2 + 80) = v9;
  uint64_t v10 = *(void *)(a1 + 88);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a2 + 88) = v10;
  uint64_t v11 = *(void *)(a1 + 96);
  uint64_t v12 = *(void *)(a1 + 104);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(void *)(a2 + 96) = v11;
  *(void *)(a2 + 104) = v12;
  uint64_t v13 = *(void *)(a1 + 112);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a2 + 112) = v13;
  uint64_t v14 = *(void *)(a1 + 120);
  uint64_t v15 = *(void *)(a1 + 128);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(void *)(a2 + 120) = v14;
  *(void *)(a2 + 128) = v15;
  uint64_t v16 = *(void *)(a1 + 136);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a2 + 136) = v16;
  uint64_t v17 = *(void *)(a1 + 144);
  uint64_t v18 = *(void *)(a1 + 152);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(void *)(a2 + 144) = v17;
  *(void *)(a2 + 152) = v18;
  uint64_t v19 = *(void *)(a1 + 160);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a2 + 160) = v19;
  uint64_t v20 = *(void *)(a2 + 168);
  *(void *)(a2 + 168) = *(void *)(a1 + 168);
  *(void *)(a1 + 168) = v20;
  uint64_t v21 = *(void *)(a1 + 176);
  uint64_t v22 = *(void *)(a1 + 184);
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(void *)(a2 + 176) = v21;
  *(void *)(a2 + 184) = v22;
  uint64_t v23 = *(void *)(a1 + 192);
  uint64_t v24 = *(void *)(a1 + 200);
  __n128 result = *(__n128 *)(a2 + 192);
  *(__n128 *)(a1 + 192) = result;
  *(void *)(a2 + 192) = v23;
  *(void *)(a2 + 200) = v24;
  uint64_t v26 = *(void *)(a1 + 208);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(void *)(a2 + 208) = v26;
  LODWORD(v26) = *(_DWORD *)(a1 + 216);
  *(_DWORD *)(a1 + 216) = *(_DWORD *)(a2 + 216);
  *(_DWORD *)(a2 + 216) = v26;
  return result;
}

void *sub_182DB8C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PlaceRequest");
}

uint64_t sub_182DB9C(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  *(void *)(a1 + 8) = v4;
  *(void *)a1 = off_24E0C98;
  sub_1882BC4(a1 + 16, a2);
  *(_DWORD *)(a1 + 40) = 0;
  return a1;
}

void sub_182DC00(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_182DC30(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  uint64_t v4 = a1 + 16;
  *(void *)a1 = off_24E0C98;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = 0;
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v4, a2 + 16);
  return a1;
}

void sub_182DCC4(_Unwind_Exception *a1)
{
  sub_1882CC0(v3);
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_182DD00(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_182DD7C(void *a1)
{
  sub_182DD00(a1);

  operator delete();
}

unsigned char *sub_182DDB4(uint64_t a1)
{
  __n128 result = sub_18843A4((unsigned char *)(a1 + 16));
  char v4 = *(unsigned char *)(a1 + 8);
  uint64_t v3 = (uint64_t *)(a1 + 8);
  if (v4)
  {
    return (unsigned char *)sub_188B4AC(v3);
  }
  return result;
}

char *sub_182DE04(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v15 = a2;
  if ((sub_11947B8((uint64_t)a3, &v15, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v5 = (uint64_t *)(a1 + 8);
    uint64_t v6 = (uint64_t **)(a1 + 16);
    while (1)
    {
      uint64_t v7 = v15 + 1;
      unsigned int v8 = *v15;
      if (*v15 < 0)
      {
        unsigned int v9 = v8 + (*v7 << 7);
        unsigned int v8 = v9 - 128;
        if (*v7 < 0)
        {
          uint64_t v7 = (char *)sub_188C180((uint64_t)v15, v9 - 128);
          unsigned int v8 = v10;
        }
        else
        {
          uint64_t v7 = v15 + 2;
        }
      }
      uint64_t v15 = v7;
      if (!v8 || (v8 & 7) == 4) {
        break;
      }
      if (v8 - 4008 > 0x317)
      {
        if (*v5)
        {
          uint64_t v13 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else
        {
          uint64_t v13 = (std::string *)sub_188DBD8(v5);
          uint64_t v7 = v15;
        }
        uint64_t v12 = sub_1885AC0(v8, v13, v7, a3);
      }
      else
      {
        uint64_t v12 = sub_18859DC(v6, v8, v7, (uint64_t)&off_254CAF8, v5, a3);
      }
      uint64_t v15 = (char *)v12;
      if (!v12) {
        return 0;
      }
      if (sub_11947B8((uint64_t)a3, &v15, a3[11].i32[1])) {
        return v15;
      }
    }
    if (v7)
    {
      a3[10].i32[0] = v8 - 1;
      return v15;
    }
    return 0;
  }
  return v15;
}

char *sub_182DF4C(uint64_t a1, char *a2, _DWORD *a3)
{
  char v4 = a2;
  if (*(_WORD *)(a1 + 26)) {
    char v4 = sub_1886844(a1 + 16, 501, 600, a2, a3);
  }
  uint64_t v6 = *(void *)(a1 + 8);
  if ((v6 & 1) == 0) {
    return v4;
  }
  unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v8 + 31) < 0)
  {
    unsigned int v9 = *(void **)(v8 + 8);
    uint64_t v10 = *(void *)(v8 + 16);
  }
  else
  {
    unsigned int v9 = (void *)(v8 + 8);
    LODWORD(v10) = *(unsigned __int8 *)(v8 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v10)
  {
    uint64_t v11 = (int)v10;
    memcpy(v4, v9, (int)v10);
    v4 += v11;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v9, v10, v4);
}

uint64_t sub_182E018(uint64_t a1)
{
  uint64_t result = sub_1889280(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v4 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v5 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v5 = *(unsigned __int8 *)(v4 + 31);
    }
    result += v5;
  }
  *(_DWORD *)(a1 + 40) = result;
  return result;
}

uint64_t sub_182E070(uint64_t a1)
{
  return sub_18856CC(a1 + 16);
}

void *sub_182E078@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PlaceResponse.PlacesRequestResponseAnalyticsData");
}

uint64_t sub_182E088(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  *(void *)(a1 + 8) = v5;
  *(void *)a1 = off_24E0D18;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = a2;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = a2;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = a2;
  *(void *)(a1 + 104) = 0;
  *(void *)(a1 + 112) = 0;
  *(void *)(a1 + 120) = a2;
  *(void *)(a1 + 128) = 0;
  *(void *)(a1 + 136) = 0;
  *(void *)(a1 + 144) = a2;
  *(void *)(a1 + 152) = 0;
  *(void *)(a1 + 160) = 0;
  *(void *)(a1 + 168) = &qword_2550250;
  *(void *)(a1 + 176) = &qword_2550250;
  *(_OWORD *)(a1 + 200) = 0u;
  *(_OWORD *)(a1 + 184) = 0u;
  return a1;
}

void sub_182E128(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_182E15C(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  unint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = a1 + 16;
  *(void *)a1 = off_24E0D18;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  uint64_t v6 = (uint64_t *)(a1 + 48);
  *(_DWORD *)(a1 + 68) = 0;
  *(void *)(a1 + 52) = 0;
  *(void *)(a1 + 60) = 0;
  *(void *)(a1 + 44) = 0;
  int v7 = *(_DWORD *)(a2 + 56);
  if (v7)
  {
    uint64_t v8 = *(void *)(a2 + 64);
    unsigned int v9 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_12C3474(v6, v9, (uint64_t *)(v8 + 8), v7, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v10 = *(_DWORD *)(a1 + 56) + v7;
    *(_DWORD *)(a1 + 56) = v10;
    uint64_t v11 = *(int **)(a1 + 64);
    if (*v11 < v10) {
      int *v11 = v10;
    }
  }
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0;
  int v12 = *(_DWORD *)(a2 + 80);
  if (v12)
  {
    uint64_t v13 = *(void *)(a2 + 88);
    uint64_t v14 = (std::string **)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_188FB98(a1 + 72, v14, (const std::string **)(v13 + 8), v12, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v15 = *(_DWORD *)(a1 + 80) + v12;
    *(_DWORD *)(a1 + 80) = v15;
    uint64_t v16 = *(int **)(a1 + 88);
    if (*v16 < v15) {
      *uint64_t v16 = v15;
    }
  }
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 104) = 0;
  *(void *)(a1 + 112) = 0;
  int v17 = *(_DWORD *)(a2 + 104);
  if (v17)
  {
    uint64_t v18 = *(void *)(a2 + 112);
    uint64_t v19 = (std::string **)sub_188CCE4(a1 + 96, *(_DWORD *)(a2 + 104));
    sub_188FB98(a1 + 96, v19, (const std::string **)(v18 + 8), v17, **(_DWORD **)(a1 + 112) - *(_DWORD *)(a1 + 104));
    int v20 = *(_DWORD *)(a1 + 104) + v17;
    *(_DWORD *)(a1 + 104) = v20;
    uint64_t v21 = *(int **)(a1 + 112);
    if (*v21 < v20) {
      int *v21 = v20;
    }
  }
  *(void *)(a1 + 120) = 0;
  *(void *)(a1 + 128) = 0;
  *(void *)(a1 + 136) = 0;
  int v22 = *(_DWORD *)(a2 + 128);
  if (v22)
  {
    uint64_t v23 = *(void *)(a2 + 136);
    uint64_t v24 = (uint64_t *)sub_188CCE4(a1 + 120, *(_DWORD *)(a2 + 128));
    sub_1879D48((uint64_t *)(a1 + 120), v24, (uint64_t *)(v23 + 8), v22, **(_DWORD **)(a1 + 136) - *(_DWORD *)(a1 + 128));
    int v25 = *(_DWORD *)(a1 + 128) + v22;
    *(_DWORD *)(a1 + 128) = v25;
    uint64_t v26 = *(int **)(a1 + 136);
    if (*v26 < v25) {
      int *v26 = v25;
    }
  }
  *(void *)(a1 + 144) = 0;
  *(void *)(a1 + 152) = 0;
  *(void *)(a1 + 160) = 0;
  int v27 = *(_DWORD *)(a2 + 152);
  if (v27)
  {
    uint64_t v28 = *(void *)(a2 + 160);
    uint64_t v29 = (uint64_t *)sub_188CCE4(a1 + 144, *(_DWORD *)(a2 + 152));
    sub_154B550((uint64_t *)(a1 + 144), v29, (uint64_t *)(v28 + 8), v27, **(_DWORD **)(a1 + 160) - *(_DWORD *)(a1 + 152));
    int v30 = *(_DWORD *)(a1 + 152) + v27;
    *(_DWORD *)(a1 + 152) = v30;
    int v31 = *(int **)(a1 + 160);
    if (*v31 < v30) {
      *int v31 = v30;
    }
  }
  uint64_t v32 = *(void *)(a2 + 8);
  if (v32) {
    sub_188B4F8(v4, (v32 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v5, a2 + 16);
  *(void *)(a1 + 168) = &qword_2550250;
  int v33 = *(_DWORD *)(a2 + 40);
  if (v33)
  {
    int v34 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      int v34 = (uint64_t *)*v34;
    }
    sub_1881DF4((std::string **)(a1 + 168), (long long *)(*(void *)(a2 + 168) & 0xFFFFFFFFFFFFFFFELL), v34);
    int v33 = *(_DWORD *)(a2 + 40);
  }
  *(void *)(a1 + 176) = &qword_2550250;
  if ((v33 & 2) != 0)
  {
    uint64_t v35 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v35 = (uint64_t *)*v35;
    }
    sub_1881DF4((std::string **)(a1 + 176), (long long *)(*(void *)(a2 + 176) & 0xFFFFFFFFFFFFFFFELL), v35);
    int v33 = *(_DWORD *)(a2 + 40);
  }
  if ((v33 & 4) != 0) {
    operator new();
  }
  *(void *)(a1 + 184) = 0;
  if ((v33 & 8) != 0) {
    operator new();
  }
  *(void *)(a1 + 192) = 0;
  if ((v33 & 0x10) != 0) {
    operator new();
  }
  *(void *)(a1 + 200) = 0;
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  return a1;
}

void sub_182E538()
{
}

void *sub_182E624(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  unint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_182E6E4((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  sub_154B028(a1 + 18);
  sub_1878538(a1 + 15);
  sub_1889DE8(a1 + 12);
  sub_1889DE8(a1 + 9);
  sub_12C28B4(a1 + 6);
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void ***sub_182E6E4(uint64_t a1)
{
  uint64_t v3 = *(uint64_t **)(a1 + 168);
  uint64_t v2 = (void ***)(a1 + 168);
  if (v3 != &qword_2550250) {
    sub_1881C6C(v2);
  }
  uint64_t result = (void ***)(a1 + 176);
  if (*(uint64_t **)(a1 + 176) != &qword_2550250) {
    sub_1881C6C(result);
  }
  if ((uint64_t (***)())a1 != &off_254CB28)
  {
    uint64_t v5 = *(void *)(a1 + 184);
    if (v5)
    {
      sub_1822740(v5);
      operator delete();
    }
    uint64_t v6 = *(void **)(a1 + 192);
    if (v6)
    {
      sub_13060E0(v6);
      operator delete();
    }
    uint64_t result = *(void ****)(a1 + 200);
    if (result)
    {
      sub_182DD00(result);
      operator delete();
    }
  }
  return result;
}

void sub_182E7BC(void *a1)
{
  sub_182E624(a1);

  operator delete();
}

uint64_t sub_182E7F4(uint64_t a1)
{
  sub_18843A4((unsigned char *)(a1 + 16));
  uint64_t v2 = *(unsigned int *)(a1 + 56);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v4 = *v3++;
      sub_175FE78(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(a1 + 56) = 0;
  }
  sub_188CC00(a1 + 72);
  uint64_t result = sub_188CC00(a1 + 96);
  uint64_t v6 = *(unsigned int *)(a1 + 128);
  if ((int)v6 >= 1)
  {
    int v7 = (uint64_t *)(*(void *)(a1 + 136) + 8);
    do
    {
      uint64_t v8 = *v7++;
      uint64_t result = sub_175FDCC(v8);
      --v6;
    }
    while (v6);
    *(_DWORD *)(a1 + 128) = 0;
  }
  uint64_t v9 = *(unsigned int *)(a1 + 152);
  if ((int)v9 >= 1)
  {
    int v10 = (uint64_t *)(*(void *)(a1 + 160) + 8);
    do
    {
      uint64_t v11 = *v10++;
      uint64_t result = sub_175AED8(v11);
      --v9;
    }
    while (v9);
    *(_DWORD *)(a1 + 152) = 0;
  }
  int v12 = *(_DWORD *)(a1 + 40);
  if ((v12 & 0x1F) == 0) {
    goto LABEL_20;
  }
  if (v12)
  {
    unint64_t v15 = *(void *)(a1 + 168) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v15 + 23) < 0)
    {
      **(unsigned char **)unint64_t v15 = 0;
      *(void *)(v15 + 8) = 0;
      if ((v12 & 2) != 0) {
        goto LABEL_30;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v15 = 0;
      *(unsigned char *)(v15 + 23) = 0;
      if ((v12 & 2) != 0) {
        goto LABEL_30;
      }
    }
LABEL_16:
    if ((v12 & 4) == 0) {
      goto LABEL_17;
    }
LABEL_34:
    uint64_t result = (uint64_t)sub_1822F70(*(void *)(a1 + 184));
    if ((v12 & 8) == 0)
    {
LABEL_18:
      if ((v12 & 0x10) == 0) {
        goto LABEL_20;
      }
      goto LABEL_19;
    }
    goto LABEL_35;
  }
  if ((v12 & 2) == 0) {
    goto LABEL_16;
  }
LABEL_30:
  unint64_t v16 = *(void *)(a1 + 176) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v16 + 23) < 0)
  {
    **(unsigned char **)unint64_t v16 = 0;
    *(void *)(v16 + 8) = 0;
    if ((v12 & 4) != 0) {
      goto LABEL_34;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v16 = 0;
    *(unsigned char *)(v16 + 23) = 0;
    if ((v12 & 4) != 0) {
      goto LABEL_34;
    }
  }
LABEL_17:
  if ((v12 & 8) == 0) {
    goto LABEL_18;
  }
LABEL_35:
  uint64_t result = sub_130611C(*(void *)(a1 + 192));
  if ((v12 & 0x10) != 0) {
LABEL_19:
  }
    uint64_t result = (uint64_t)sub_182DDB4(*(void *)(a1 + 200));
LABEL_20:
  if ((v12 & 0x60) != 0) {
    *(void *)(a1 + 208) = 0;
  }
  char v14 = *(unsigned char *)(a1 + 8);
  uint64_t v13 = a1 + 8;
  *(_DWORD *)(v13 + 32) = 0;
  if (v14)
  {
    return sub_188B4AC((uint64_t *)v13);
  }
  return result;
}

uint64_t sub_182E98C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v70 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v70, a3[11].i32[1])) {
    return *(void *)v70;
  }
  uint64_t v6 = (void *)(a1 + 8);
  int v7 = (uint64_t **)(a1 + 96);
  uint64_t v8 = (uint64_t **)(a1 + 72);
  while (2)
  {
    uint64_t v9 = (unsigned __int8 *)(*(void *)v70 + 1);
    unsigned int v10 = **(unsigned char **)v70;
    if ((char)**(unsigned char **)v70 < 0)
    {
      unsigned int v11 = v10 + (*v9 << 7);
      unsigned int v10 = v11 - 128;
      if ((char)*v9 < 0)
      {
        uint64_t v9 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v70, v11 - 128);
        unsigned int v10 = v12;
      }
      else
      {
        uint64_t v9 = (unsigned __int8 *)(*(void *)v70 + 2);
      }
    }
    *(void *)uint64_t v70 = v9;
    switch(v10 >> 3)
    {
      case 1u:
        if (v10 != 8) {
          goto LABEL_104;
        }
        uint64_t v13 = (char *)(v9 + 1);
        unint64_t v14 = *v9;
        if (((char)*v9 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v15 = *v13;
        int v16 = v14 + (v15 << 7);
        unint64_t v14 = (v16 - 128);
        if (v15 < 0)
        {
          *(void *)uint64_t v70 = sub_188C138((uint64_t)v9, (v16 - 128));
          if (!*(void *)v70) {
            return 0;
          }
          unint64_t v14 = v66;
        }
        else
        {
          uint64_t v13 = (char *)(v9 + 2);
LABEL_13:
          *(void *)uint64_t v70 = v13;
        }
        if (sub_13E78E4(v14))
        {
          *(_DWORD *)(a1 + 40) |= 0x20u;
          *(_DWORD *)(a1 + 208) = v14;
          goto LABEL_115;
        }
        if (*v6) {
          uint64_t v68 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          uint64_t v68 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v69 = 1;
        goto LABEL_127;
      case 2u:
        if (v10 != 16) {
          goto LABEL_104;
        }
        int v17 = (char *)(v9 + 1);
        unint64_t v14 = *v9;
        if (((char)*v9 & 0x80000000) == 0) {
          goto LABEL_20;
        }
        int v18 = *v17;
        int v19 = v14 + (v18 << 7);
        unint64_t v14 = (v19 - 128);
        if (v18 < 0)
        {
          *(void *)uint64_t v70 = sub_188C138((uint64_t)v9, (v19 - 128));
          if (!*(void *)v70) {
            return 0;
          }
          unint64_t v14 = v67;
        }
        else
        {
          int v17 = (char *)(v9 + 2);
LABEL_20:
          *(void *)uint64_t v70 = v17;
        }
        if (v14 > 0x3E)
        {
          if (*v6) {
            uint64_t v68 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v68 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          int v69 = 2;
LABEL_127:
          sub_188C020(v69, v14, v68);
        }
        else
        {
          *(_DWORD *)(a1 + 40) |= 0x40u;
          *(_DWORD *)(a1 + 212) = v14;
        }
        goto LABEL_115;
      case 3u:
        if (v10 != 26) {
          goto LABEL_104;
        }
        *(_DWORD *)(a1 + 40) |= 4u;
        uint64_t v20 = *(void *)(a1 + 184);
        if (!v20)
        {
          uint64_t v21 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v21 = (void *)*v21;
          }
          uint64_t v20 = sub_1836DF8((uint64_t)v21);
          *(void *)(a1 + 184) = v20;
          uint64_t v9 = *(unsigned __int8 **)v70;
        }
        int v22 = sub_182F16C(a3, v20, v9);
        goto LABEL_114;
      case 4u:
        if (v10 != 34) {
          goto LABEL_104;
        }
        uint64_t v23 = v9 - 1;
        while (1)
        {
          uint64_t v24 = v23 + 1;
          *(void *)uint64_t v70 = v23 + 1;
          int v25 = *(_DWORD **)(a1 + 64);
          if (v25 && (uint64_t v26 = *(int *)(a1 + 56), (int)v26 < *v25))
          {
            *(_DWORD *)(a1 + 56) = v26 + 1;
            uint64_t v27 = *(void *)&v25[2 * v26 + 2];
          }
          else
          {
            uint64_t v28 = sub_178CDA8(*(void *)(a1 + 48));
            uint64_t v27 = sub_188CDC8(a1 + 48, v28);
            uint64_t v24 = *(unsigned __int8 **)v70;
          }
          uint64_t v23 = (unsigned __int8 *)sub_1265F8C(a3, v27, v24);
          *(void *)uint64_t v70 = v23;
          if (!v23) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v23 || *v23 != 34) {
            goto LABEL_115;
          }
        }
      case 5u:
        if (v10 != 42) {
          goto LABEL_104;
        }
        uint64_t v29 = (const std::string::value_type *)(v9 - 1);
        while (1)
        {
          int v30 = (char *)(v29 + 1);
          *(void *)uint64_t v70 = v29 + 1;
          int v31 = *(_DWORD **)(a1 + 88);
          if (v31 && (uint64_t v32 = *(int *)(a1 + 80), (int)v32 < *v31))
          {
            *(_DWORD *)(a1 + 80) = v32 + 1;
            int v33 = *(std::string **)&v31[2 * v32 + 2];
          }
          else
          {
            if (!*v8) {
              operator new();
            }
            *uint64_t v35 = v34;
            v35[1] = sub_3A6EDC;
            void *v34 = 0;
            v34[1] = 0;
            v34[2] = 0;
            int v33 = (std::string *)sub_188CDC8(a1 + 72, (uint64_t)v34);
            int v30 = *(char **)v70;
          }
          uint64_t v29 = sub_188C244(v33, v30, (uint64_t)a3);
          *(void *)uint64_t v70 = v29;
          if (!v29) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v29 || *v29 != 42) {
            goto LABEL_115;
          }
        }
      case 6u:
        if (v10 != 50) {
          goto LABEL_104;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        uint64_t v36 = *(void *)(a1 + 8);
        uint64_t v37 = (uint64_t *)(v36 & 0xFFFFFFFFFFFFFFFCLL);
        if (v36) {
          uint64_t v37 = (uint64_t *)*v37;
        }
        uint64_t v38 = (void *)(a1 + 168);
        goto LABEL_71;
      case 7u:
        if (v10 != 58) {
          goto LABEL_104;
        }
        uint64_t v39 = (const std::string::value_type *)(v9 - 1);
        while (1)
        {
          uint64_t v40 = (char *)(v39 + 1);
          *(void *)uint64_t v70 = v39 + 1;
          uint64_t v41 = *(_DWORD **)(a1 + 112);
          if (v41 && (uint64_t v42 = *(int *)(a1 + 104), (int)v42 < *v41))
          {
            *(_DWORD *)(a1 + 104) = v42 + 1;
            uint64_t v43 = *(std::string **)&v41[2 * v42 + 2];
          }
          else
          {
            if (!*v7) {
              operator new();
            }
            *uint64_t v45 = v44;
            v45[1] = sub_3A6EDC;
            void *v44 = 0;
            v44[1] = 0;
            v44[2] = 0;
            uint64_t v43 = (std::string *)sub_188CDC8(a1 + 96, (uint64_t)v44);
            uint64_t v40 = *(char **)v70;
          }
          uint64_t v39 = sub_188C244(v43, v40, (uint64_t)a3);
          *(void *)uint64_t v70 = v39;
          if (!v39) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v39 || *v39 != 58) {
            goto LABEL_115;
          }
        }
      case 8u:
        if (v10 != 66) {
          goto LABEL_104;
        }
        *(_DWORD *)(a1 + 40) |= 2u;
        uint64_t v46 = *(void *)(a1 + 8);
        uint64_t v37 = (uint64_t *)(v46 & 0xFFFFFFFFFFFFFFFCLL);
        if (v46) {
          uint64_t v37 = (uint64_t *)*v37;
        }
        uint64_t v38 = (void *)(a1 + 176);
LABEL_71:
        uint64_t v47 = (std::string *)sub_1880F84(v38, v37);
        int v22 = (void *)sub_188C244(v47, *(char **)v70, (uint64_t)a3);
        goto LABEL_114;
      case 9u:
        if (v10 != 74) {
          goto LABEL_104;
        }
        *(_DWORD *)(a1 + 40) |= 8u;
        uint64_t v48 = *(void *)(a1 + 192);
        if (!v48)
        {
          unint64_t v49 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            unint64_t v49 = (void *)*v49;
          }
          uint64_t v48 = sub_13064B8((uint64_t)v49);
          *(void *)(a1 + 192) = v48;
          uint64_t v9 = *(unsigned __int8 **)v70;
        }
        int v22 = sub_1354680(a3, v48, v9);
        goto LABEL_114;
      case 0xAu:
        if (v10 != 82) {
          goto LABEL_104;
        }
        uint64_t v50 = (char *)(v9 - 1);
        while (1)
        {
          uint64_t v51 = (unsigned __int8 *)(v50 + 1);
          *(void *)uint64_t v70 = v50 + 1;
          int v52 = *(_DWORD **)(a1 + 136);
          if (v52 && (uint64_t v53 = *(int *)(a1 + 128), (int)v53 < *v52))
          {
            *(_DWORD *)(a1 + 128) = v53 + 1;
            uint64_t v54 = *(void *)&v52[2 * v53 + 2];
          }
          else
          {
            sub_178CB40(*(void *)(a1 + 120));
            uint64_t v54 = sub_188CDC8(a1 + 120, v55);
            uint64_t v51 = *(unsigned __int8 **)v70;
          }
          uint64_t v50 = sub_182F1FC(a3, v54, v51);
          *(void *)uint64_t v70 = v50;
          if (!v50) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v50 || *v50 != 82) {
            goto LABEL_115;
          }
        }
      case 0xBu:
        if (v10 != 90) {
          goto LABEL_104;
        }
        uint64_t v56 = v9 - 1;
        while (1)
        {
          uint64_t v57 = v56 + 1;
          *(void *)uint64_t v70 = v56 + 1;
          uint64_t v58 = *(_DWORD **)(a1 + 160);
          if (v58 && (uint64_t v59 = *(int *)(a1 + 152), (int)v59 < *v58))
          {
            *(_DWORD *)(a1 + 152) = v59 + 1;
            uint64_t v60 = *(void *)&v58[2 * v59 + 2];
          }
          else
          {
            uint64_t v61 = sub_178C798(*(void *)(a1 + 144));
            uint64_t v60 = sub_188CDC8(a1 + 144, (uint64_t)v61);
            uint64_t v57 = *(unsigned __int8 **)v70;
          }
          uint64_t v56 = (unsigned __int8 *)sub_15410F8(a3, v60, v57);
          *(void *)uint64_t v70 = v56;
          if (!v56) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v56 || *v56 != 90) {
            goto LABEL_115;
          }
        }
      case 0xCu:
        if (v10 != 98) {
          goto LABEL_104;
        }
        *(_DWORD *)(a1 + 40) |= 0x10u;
        uint64_t v62 = *(void *)(a1 + 200);
        if (!v62)
        {
          uint64_t v63 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v63 = (void *)*v63;
          }
          uint64_t v62 = sub_1836EB0((uint64_t)v63);
          *(void *)(a1 + 200) = v62;
          uint64_t v9 = *(unsigned __int8 **)v70;
        }
        int v22 = sub_163E0E0(a3, v62, v9);
        goto LABEL_114;
      default:
LABEL_104:
        if (v10) {
          BOOL v64 = (v10 & 7) == 4;
        }
        else {
          BOOL v64 = 1;
        }
        if (!v64)
        {
          if (v10 - 8000 < 0x328 || v10 - 16000 <= 0x197)
          {
            int v22 = sub_18859DC((uint64_t **)(a1 + 16), v10, (char *)v9, (uint64_t)&off_254CB28, (uint64_t *)(a1 + 8), a3);
          }
          else
          {
            if (*v6)
            {
              uint64_t v65 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              uint64_t v65 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              uint64_t v9 = *(unsigned __int8 **)v70;
            }
            int v22 = sub_1885AC0(v10, v65, (char *)v9, a3);
          }
LABEL_114:
          *(void *)uint64_t v70 = v22;
          if (!v22) {
            return 0;
          }
LABEL_115:
          if (sub_11947B8((uint64_t)a3, (char **)v70, a3[11].i32[1])) {
            return *(void *)v70;
          }
          continue;
        }
        if (!v9) {
          return 0;
        }
        a3[10].i32[0] = v10 - 1;
        return *(void *)v70;
    }
  }
}

char *sub_182F16C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_18233CC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_182F1FC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1760108(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_182F28C(uint64_t a1, char *a2, unint64_t *a3)
{
  uint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if ((v6 & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unint64_t v7 = *(int *)(a1 + 208);
    *uint64_t v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x40) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 212);
    *uint64_t v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v13 = *(void *)(a1 + 184);
    *uint64_t v4 = 26;
    unsigned int v14 = *(_DWORD *)(v13 + 48);
    v4[1] = v14;
    if (v14 > 0x7F) {
      int v15 = sub_188A9CC(v14, v4 + 1);
    }
    else {
      int v15 = v4 + 2;
    }
    uint64_t v4 = sub_1826704(v13, v15, a3);
  }
  int v16 = *(_DWORD *)(a1 + 56);
  if (v16)
  {
    for (int i = 0; i != v16; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v18 = *(void *)(*(void *)(a1 + 64) + 8 * i + 8);
      *uint64_t v4 = 34;
      unsigned int v19 = *(_DWORD *)(v18 + 44);
      v4[1] = v19;
      if (v19 > 0x7F) {
        uint64_t v20 = sub_188A9CC(v19, v4 + 1);
      }
      else {
        uint64_t v20 = v4 + 2;
      }
      uint64_t v4 = sub_1763540(v18, v20, a3);
    }
  }
  uint64_t v21 = *(unsigned int *)(a1 + 80);
  if ((int)v21 >= 1)
  {
    uint64_t v22 = 0;
    uint64_t v23 = 8 * v21;
    do
    {
      uint64_t v24 = *(void **)(*(void *)(a1 + 88) + v22 + 8);
      if (*((char *)v24 + 23) < 0)
      {
        int64_t v25 = v24[1];
        if (v25 > 127) {
          goto LABEL_41;
        }
      }
      else
      {
        int64_t v25 = *((unsigned __int8 *)v24 + 23);
      }
      if ((uint64_t)(*a3 - (void)v4 + 14) >= v25)
      {
        *uint64_t v4 = 42;
        v4[1] = v25;
        if (*((char *)v24 + 23) < 0) {
          uint64_t v24 = (void *)*v24;
        }
        uint64_t v26 = v4 + 2;
        memcpy(v26, v24, v25);
        uint64_t v4 = &v26[v25];
        goto LABEL_39;
      }
LABEL_41:
      uint64_t v4 = (char *)sub_188A868(a3, 5, (uint64_t)v24, v4);
LABEL_39:
      v22 += 8;
    }
    while (v23 != v22);
  }
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 6, (const void **)(*(void *)(a1 + 168) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v27 = *(unsigned int *)(a1 + 104);
  if ((int)v27 >= 1)
  {
    uint64_t v28 = 0;
    uint64_t v29 = 8 * v27;
    do
    {
      int v30 = *(void **)(*(void *)(a1 + 112) + v28 + 8);
      if (*((char *)v30 + 23) < 0)
      {
        int64_t v31 = v30[1];
        if (v31 > 127) {
          goto LABEL_55;
        }
      }
      else
      {
        int64_t v31 = *((unsigned __int8 *)v30 + 23);
      }
      if ((uint64_t)(*a3 - (void)v4 + 14) >= v31)
      {
        *uint64_t v4 = 58;
        v4[1] = v31;
        if (*((char *)v30 + 23) < 0) {
          int v30 = (void *)*v30;
        }
        uint64_t v32 = v4 + 2;
        memcpy(v32, v30, v31);
        uint64_t v4 = &v32[v31];
        goto LABEL_53;
      }
LABEL_55:
      uint64_t v4 = (char *)sub_188A868(a3, 7, (uint64_t)v30, v4);
LABEL_53:
      v28 += 8;
    }
    while (v29 != v28);
  }
  if ((v6 & 2) != 0) {
    uint64_t v4 = sub_117A0AC(a3, 8, (const void **)(*(void *)(a1 + 176) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v33 = *(void *)(a1 + 192);
    *uint64_t v4 = 74;
    unsigned int v34 = *(_DWORD *)(v33 + 20);
    v4[1] = v34;
    if (v34 > 0x7F) {
      uint64_t v35 = sub_188A9CC(v34, v4 + 1);
    }
    else {
      uint64_t v35 = v4 + 2;
    }
    uint64_t v4 = sub_13062B4(v33, (unint64_t)v35, a3);
  }
  int v36 = *(_DWORD *)(a1 + 128);
  if (v36)
  {
    for (int j = 0; j != v36; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v38 = *(void *)(*(void *)(a1 + 136) + 8 * j + 8);
      *uint64_t v4 = 82;
      unsigned int v39 = *(_DWORD *)(v38 + 20);
      v4[1] = v39;
      if (v39 > 0x7F) {
        uint64_t v40 = sub_188A9CC(v39, v4 + 1);
      }
      else {
        uint64_t v40 = v4 + 2;
      }
      uint64_t v4 = sub_176064C(v38, (unint64_t)v40, a3);
    }
  }
  int v41 = *(_DWORD *)(a1 + 152);
  if (v41)
  {
    for (int k = 0; k != v41; ++k)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v43 = *(void *)(*(void *)(a1 + 160) + 8 * k + 8);
      *uint64_t v4 = 90;
      unsigned int v44 = *(_DWORD *)(v43 + 20);
      v4[1] = v44;
      if (v44 > 0x7F) {
        uint64_t v45 = sub_188A9CC(v44, v4 + 1);
      }
      else {
        uint64_t v45 = v4 + 2;
      }
      uint64_t v4 = sub_175B224(v43, (unint64_t)v45, a3);
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v46 = *(void *)(a1 + 200);
    *uint64_t v4 = 98;
    unsigned int v47 = *(_DWORD *)(v46 + 40);
    v4[1] = v47;
    if (v47 > 0x7F) {
      uint64_t v48 = sub_188A9CC(v47, v4 + 1);
    }
    else {
      uint64_t v48 = v4 + 2;
    }
    uint64_t v4 = sub_182DF4C(v46, v48, a3);
  }
  if (*(_WORD *)(a1 + 26)) {
    uint64_t v4 = sub_1886844(a1 + 16, 1000, 2051, v4, a3);
  }
  uint64_t v49 = *(void *)(a1 + 8);
  if ((v49 & 1) == 0) {
    return v4;
  }
  unint64_t v51 = v49 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v51 + 31) < 0)
  {
    int v52 = *(void **)(v51 + 8);
    uint64_t v53 = *(void *)(v51 + 16);
  }
  else
  {
    int v52 = (void *)(v51 + 8);
    LODWORD(v53) = *(unsigned __int8 *)(v51 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v53)
  {
    uint64_t v54 = (int)v53;
    memcpy(v4, v52, (int)v53);
    v4 += v54;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v52, v53, v4);
}

uint64_t sub_182F8B4(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(int *)(a1 + 56);
  uint64_t v4 = v2 + v3;
  uint64_t v5 = *(void *)(a1 + 64);
  if (v5) {
    int v6 = (uint64_t *)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = sub_1763C40(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  uint64_t v10 = *(unsigned int *)(a1 + 80);
  uint64_t v11 = v4 + v10;
  if ((int)v10 >= 1)
  {
    unint64_t v12 = (uint64_t *)(*(void *)(a1 + 88) + 8);
    do
    {
      uint64_t v13 = *v12++;
      uint64_t v14 = *(unsigned __int8 *)(v13 + 23);
      uint64_t v15 = *(void *)(v13 + 8);
      if ((v14 & 0x80u) == 0) {
        uint64_t v15 = v14;
      }
      v11 += v15 + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6);
      --v10;
    }
    while (v10);
  }
  uint64_t v16 = *(unsigned int *)(a1 + 104);
  uint64_t v17 = v11 + v16;
  if ((int)v16 >= 1)
  {
    uint64_t v18 = (uint64_t *)(*(void *)(a1 + 112) + 8);
    do
    {
      uint64_t v19 = *v18++;
      uint64_t v20 = *(unsigned __int8 *)(v19 + 23);
      uint64_t v21 = *(void *)(v19 + 8);
      if ((v20 & 0x80u) == 0) {
        uint64_t v21 = v20;
      }
      v17 += v21 + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6);
      --v16;
    }
    while (v16);
  }
  uint64_t v22 = *(int *)(a1 + 128);
  uint64_t v23 = v17 + v22;
  uint64_t v24 = *(void *)(a1 + 136);
  if (v24) {
    int64_t v25 = (uint64_t *)(v24 + 8);
  }
  else {
    int64_t v25 = 0;
  }
  if (v22)
  {
    uint64_t v26 = 8 * v22;
    do
    {
      uint64_t v27 = *v25++;
      uint64_t v28 = sub_1760988(v27);
      v23 += v28 + ((9 * (__clz(v28 | 1) ^ 0x1F) + 73) >> 6);
      v26 -= 8;
    }
    while (v26);
  }
  uint64_t v29 = *(int *)(a1 + 152);
  uint64_t v30 = v23 + v29;
  uint64_t v31 = *(void *)(a1 + 160);
  if (v31) {
    uint64_t v32 = (uint64_t *)(v31 + 8);
  }
  else {
    uint64_t v32 = 0;
  }
  if (v29)
  {
    uint64_t v33 = 8 * v29;
    do
    {
      uint64_t v34 = *v32++;
      uint64_t v35 = sub_175B438(v34);
      v30 += v35 + ((9 * (__clz(v35 | 1) ^ 0x1F) + 73) >> 6);
      v33 -= 8;
    }
    while (v33);
  }
  int v36 = *(_DWORD *)(a1 + 40);
  if ((v36 & 0x7F) == 0) {
    goto LABEL_41;
  }
  if (v36)
  {
    unint64_t v42 = *(void *)(a1 + 168) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v43 = *(unsigned __int8 *)(v42 + 23);
    uint64_t v44 = *(void *)(v42 + 8);
    if ((v43 & 0x80u) == 0) {
      uint64_t v44 = v43;
    }
    v30 += v44 + ((9 * (__clz(v44 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v36 & 2) == 0)
    {
LABEL_32:
      if ((v36 & 4) == 0) {
        goto LABEL_33;
      }
      goto LABEL_49;
    }
  }
  else if ((v36 & 2) == 0)
  {
    goto LABEL_32;
  }
  unint64_t v45 = *(void *)(a1 + 176) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v46 = *(unsigned __int8 *)(v45 + 23);
  uint64_t v47 = *(void *)(v45 + 8);
  if ((v46 & 0x80u) == 0) {
    uint64_t v47 = v46;
  }
  v30 += v47 + ((9 * (__clz(v47 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v36 & 4) == 0)
  {
LABEL_33:
    if ((v36 & 8) == 0) {
      goto LABEL_34;
    }
    goto LABEL_50;
  }
LABEL_49:
  uint64_t v48 = sub_1827F0C(*(void *)(a1 + 184));
  v30 += v48 + ((9 * (__clz(v48 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v36 & 8) == 0)
  {
LABEL_34:
    if ((v36 & 0x10) == 0) {
      goto LABEL_35;
    }
LABEL_51:
    uint64_t v50 = sub_182E018(*(void *)(a1 + 200));
    v30 += v50 + ((9 * (__clz(v50 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v36 & 0x20) == 0)
    {
LABEL_36:
      if ((v36 & 0x40) == 0) {
        goto LABEL_41;
      }
      goto LABEL_37;
    }
    goto LABEL_52;
  }
LABEL_50:
  uint64_t v49 = sub_13063DC(*(void *)(a1 + 192));
  v30 += v49 + ((9 * (__clz(v49 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v36 & 0x10) != 0) {
    goto LABEL_51;
  }
LABEL_35:
  if ((v36 & 0x20) == 0) {
    goto LABEL_36;
  }
LABEL_52:
  int v51 = *(_DWORD *)(a1 + 208);
  uint64_t v52 = ((9 * (__clz(v51 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if (v51 >= 0) {
    uint64_t v53 = v52;
  }
  else {
    uint64_t v53 = 11;
  }
  v30 += v53;
  if ((v36 & 0x40) != 0)
  {
LABEL_37:
    int v37 = *(_DWORD *)(a1 + 212);
    uint64_t v38 = ((9 * (__clz(v37 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if (v37 >= 0) {
      uint64_t v39 = v38;
    }
    else {
      uint64_t v39 = 11;
    }
    v30 += v39;
  }
LABEL_41:
  uint64_t v40 = *(void *)(a1 + 8);
  if (v40)
  {
    unint64_t v54 = v40 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v54 + 31) < 0) {
      uint64_t v55 = *(void *)(v54 + 16);
    }
    else {
      uint64_t v55 = *(unsigned __int8 *)(v54 + 31);
    }
    v30 += v55;
  }
  *(_DWORD *)(a1 + 44) = v30;
  return v30;
}

void sub_182FC60(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 56);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    int v6 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_12C3474((uint64_t *)(a1 + 48), v6, v5, v4, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v7 = *(_DWORD *)(a1 + 56) + v4;
    *(_DWORD *)(a1 + 56) = v7;
    uint64_t v8 = *(int **)(a1 + 64);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 80);
  if (v9)
  {
    uint64_t v10 = (const std::string **)(*(void *)(a2 + 88) + 8);
    uint64_t v11 = (std::string **)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_188FB98(a1 + 72, v11, v10, v9, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v12 = *(_DWORD *)(a1 + 80) + v9;
    *(_DWORD *)(a1 + 80) = v12;
    uint64_t v13 = *(int **)(a1 + 88);
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 104);
  if (v14)
  {
    uint64_t v15 = (const std::string **)(*(void *)(a2 + 112) + 8);
    uint64_t v16 = (std::string **)sub_188CCE4(a1 + 96, *(_DWORD *)(a2 + 104));
    sub_188FB98(a1 + 96, v16, v15, v14, **(_DWORD **)(a1 + 112) - *(_DWORD *)(a1 + 104));
    int v17 = *(_DWORD *)(a1 + 104) + v14;
    *(_DWORD *)(a1 + 104) = v17;
    uint64_t v18 = *(int **)(a1 + 112);
    if (*v18 < v17) {
      int *v18 = v17;
    }
  }
  int v19 = *(_DWORD *)(a2 + 128);
  if (v19)
  {
    uint64_t v20 = (uint64_t *)(*(void *)(a2 + 136) + 8);
    uint64_t v21 = (uint64_t *)sub_188CCE4(a1 + 120, *(_DWORD *)(a2 + 128));
    sub_1879D48((uint64_t *)(a1 + 120), v21, v20, v19, **(_DWORD **)(a1 + 136) - *(_DWORD *)(a1 + 128));
    int v22 = *(_DWORD *)(a1 + 128) + v19;
    *(_DWORD *)(a1 + 128) = v22;
    uint64_t v23 = *(int **)(a1 + 136);
    if (*v23 < v22) {
      int *v23 = v22;
    }
  }
  int v24 = *(_DWORD *)(a2 + 152);
  if (v24)
  {
    int64_t v25 = (uint64_t *)(*(void *)(a2 + 160) + 8);
    uint64_t v26 = (uint64_t *)sub_188CCE4(a1 + 144, *(_DWORD *)(a2 + 152));
    sub_154B550((uint64_t *)(a1 + 144), v26, v25, v24, **(_DWORD **)(a1 + 160) - *(_DWORD *)(a1 + 152));
    int v27 = *(_DWORD *)(a1 + 152) + v24;
    *(_DWORD *)(a1 + 152) = v27;
    uint64_t v28 = *(int **)(a1 + 160);
    if (*v28 < v27) {
      *uint64_t v28 = v27;
    }
  }
  int v29 = *(_DWORD *)(a2 + 40);
  if ((v29 & 0x7F) != 0)
  {
    if (v29)
    {
      uint64_t v31 = (long long *)(*(void *)(a2 + 168) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 40) |= 1u;
      uint64_t v32 = *(void *)(a1 + 8);
      uint64_t v33 = (uint64_t *)(v32 & 0xFFFFFFFFFFFFFFFCLL);
      if (v32) {
        uint64_t v33 = (uint64_t *)*v33;
      }
      sub_1881DF4((std::string **)(a1 + 168), v31, v33);
      if ((v29 & 2) == 0)
      {
LABEL_19:
        if ((v29 & 4) == 0) {
          goto LABEL_20;
        }
        goto LABEL_36;
      }
    }
    else if ((v29 & 2) == 0)
    {
      goto LABEL_19;
    }
    uint64_t v34 = (long long *)(*(void *)(a2 + 176) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 40) |= 2u;
    uint64_t v35 = *(void *)(a1 + 8);
    int v36 = (uint64_t *)(v35 & 0xFFFFFFFFFFFFFFFCLL);
    if (v35) {
      int v36 = (uint64_t *)*v36;
    }
    sub_1881DF4((std::string **)(a1 + 176), v34, v36);
    if ((v29 & 4) == 0)
    {
LABEL_20:
      if ((v29 & 8) == 0) {
        goto LABEL_21;
      }
      goto LABEL_44;
    }
LABEL_36:
    *(_DWORD *)(a1 + 40) |= 4u;
    uint64_t v37 = *(void *)(a1 + 184);
    if (!v37)
    {
      uint64_t v38 = *(void *)(a1 + 8);
      uint64_t v39 = (void *)(v38 & 0xFFFFFFFFFFFFFFFCLL);
      if (v38) {
        uint64_t v39 = (void *)*v39;
      }
      uint64_t v37 = sub_1836DF8((uint64_t)v39);
      *(void *)(a1 + 184) = v37;
    }
    if (*(void *)(a2 + 184)) {
      uint64_t v40 = *(uint64_t (****)())(a2 + 184);
    }
    else {
      uint64_t v40 = &off_254C818;
    }
    sub_1828E64(v37, (uint64_t)v40);
    if ((v29 & 8) == 0)
    {
LABEL_21:
      if ((v29 & 0x10) == 0) {
        goto LABEL_22;
      }
      goto LABEL_52;
    }
LABEL_44:
    *(_DWORD *)(a1 + 40) |= 8u;
    int v41 = *(std::string **)(a1 + 192);
    if (!v41)
    {
      uint64_t v42 = *(void *)(a1 + 8);
      uint64_t v43 = (void *)(v42 & 0xFFFFFFFFFFFFFFFCLL);
      if (v42) {
        uint64_t v43 = (void *)*v43;
      }
      int v41 = (std::string *)sub_13064B8((uint64_t)v43);
      *(void *)(a1 + 192) = v41;
    }
    if (*(void *)(a2 + 192)) {
      uint64_t v44 = *(uint64_t (****)())(a2 + 192);
    }
    else {
      uint64_t v44 = &off_25324B8;
    }
    sub_11A7934(v41, (uint64_t)v44);
    if ((v29 & 0x10) == 0)
    {
LABEL_22:
      if ((v29 & 0x20) == 0) {
        goto LABEL_23;
      }
      goto LABEL_60;
    }
LABEL_52:
    *(_DWORD *)(a1 + 40) |= 0x10u;
    uint64_t v45 = *(void *)(a1 + 200);
    if (!v45)
    {
      uint64_t v46 = *(void *)(a1 + 8);
      uint64_t v47 = (void *)(v46 & 0xFFFFFFFFFFFFFFFCLL);
      if (v46) {
        uint64_t v47 = (void *)*v47;
      }
      uint64_t v45 = sub_1836EB0((uint64_t)v47);
      *(void *)(a1 + 200) = v45;
    }
    if (*(void *)(a2 + 200)) {
      uint64_t v48 = *(uint64_t (****)())(a2 + 200);
    }
    else {
      uint64_t v48 = &off_254CAF8;
    }
    sub_129AF38(v45, (uint64_t)v48);
    if ((v29 & 0x20) == 0)
    {
LABEL_23:
      if ((v29 & 0x40) == 0)
      {
LABEL_25:
        *(_DWORD *)(a1 + 40) |= v29;
        goto LABEL_26;
      }
LABEL_24:
      *(_DWORD *)(a1 + 212) = *(_DWORD *)(a2 + 212);
      goto LABEL_25;
    }
LABEL_60:
    *(_DWORD *)(a1 + 208) = *(_DWORD *)(a2 + 208);
    if ((v29 & 0x40) == 0) {
      goto LABEL_25;
    }
    goto LABEL_24;
  }
LABEL_26:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v30 = *(void *)(a2 + 8);
  if (v30)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v30 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_1830064(uint64_t a1, uint64_t a2)
{
  if (a2 != a1)
  {
    sub_182E7F4(a1);
    sub_182FC60(a1, a2);
  }
}

uint64_t sub_18300B0(uint64_t a1)
{
  uint64_t result = sub_18856CC(a1 + 16);
  if (result)
  {
    uint64_t v3 = *(unsigned int *)(a1 + 56);
    while ((int)v3 >= 1)
    {
      uint64_t v4 = v3 - 1;
      char v5 = sub_17612D4(*(void *)(*(void *)(a1 + 64) + 8 * v3));
      uint64_t v3 = v4;
      if ((v5 & 1) == 0) {
        return 0;
      }
    }
    uint64_t v6 = *(unsigned int *)(a1 + 128);
    while ((int)v6 >= 1)
    {
      uint64_t v7 = v6 - 1;
      char v8 = sub_176124C(*(void *)(*(void *)(a1 + 136) + 8 * v6));
      uint64_t v6 = v7;
      if ((v8 & 1) == 0) {
        return 0;
      }
    }
    uint64_t v9 = *(unsigned int *)(a1 + 152);
    while ((int)v9 >= 1)
    {
      uint64_t v10 = v9 - 1;
      char v11 = sub_175B720(*(void *)(*(void *)(a1 + 160) + 8 * v9));
      uint64_t v9 = v10;
      if ((v11 & 1) == 0) {
        return 0;
      }
    }
    int v12 = *(_DWORD *)(a1 + 40);
    if ((v12 & 4) != 0)
    {
      uint64_t result = sub_182A208(*(void *)(a1 + 184));
      if (!result) {
        return result;
      }
      int v12 = *(_DWORD *)(a1 + 40);
    }
    if ((v12 & 0x10) == 0) {
      return 1;
    }
    uint64_t result = sub_18856CC(*(void *)(a1 + 200) + 16);
    if (result) {
      return 1;
    }
  }
  return result;
}

__n128 sub_1830188(uint64_t a1, uint64_t a2)
{
  sub_1885338((uint64_t *)(a1 + 16), (uint64_t *)(a2 + 16));
  uint64_t v4 = *(void *)(a1 + 8);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a2 + 8) = v4;
  LODWORD(v4) = *(_DWORD *)(a1 + 40);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a2 + 40) = v4;
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(a1 + 56);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(void *)(a2 + 48) = v5;
  *(void *)(a2 + 56) = v6;
  uint64_t v7 = *(void *)(a1 + 64);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a2 + 64) = v7;
  uint64_t v8 = *(void *)(a1 + 72);
  uint64_t v9 = *(void *)(a1 + 80);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(void *)(a2 + 72) = v8;
  *(void *)(a2 + 80) = v9;
  uint64_t v10 = *(void *)(a1 + 88);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a2 + 88) = v10;
  uint64_t v11 = *(void *)(a1 + 96);
  uint64_t v12 = *(void *)(a1 + 104);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(void *)(a2 + 96) = v11;
  *(void *)(a2 + 104) = v12;
  uint64_t v13 = *(void *)(a1 + 112);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a2 + 112) = v13;
  uint64_t v14 = *(void *)(a1 + 120);
  uint64_t v15 = *(void *)(a1 + 128);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(void *)(a2 + 120) = v14;
  *(void *)(a2 + 128) = v15;
  uint64_t v16 = *(void *)(a1 + 136);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a2 + 136) = v16;
  uint64_t v17 = *(void *)(a1 + 144);
  uint64_t v18 = *(void *)(a1 + 152);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(void *)(a2 + 144) = v17;
  *(void *)(a2 + 152) = v18;
  uint64_t v19 = *(void *)(a1 + 160);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a2 + 160) = v19;
  uint64_t v20 = *(void *)(a2 + 168);
  *(void *)(a2 + 168) = *(void *)(a1 + 168);
  *(void *)(a1 + 168) = v20;
  uint64_t v21 = *(void *)(a2 + 176);
  *(void *)(a2 + 176) = *(void *)(a1 + 176);
  *(void *)(a1 + 176) = v21;
  uint64_t v22 = *(void *)(a1 + 184);
  uint64_t v23 = *(void *)(a1 + 192);
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  *(void *)(a2 + 184) = v22;
  *(void *)(a2 + 192) = v23;
  uint64_t v24 = *(void *)(a1 + 200);
  uint64_t v25 = *(void *)(a1 + 208);
  __n128 result = *(__n128 *)(a2 + 200);
  *(__n128 *)(a1 + 200) = result;
  *(void *)(a2 + 200) = v24;
  *(void *)(a2 + 208) = v25;
  return result;
}

void *sub_18302B8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PlaceResponse");
}

void *sub_18302C8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *__n128 result = off_24DA918;
  result[3] = 0;
  result[4] = 0;
  result[2] = 0;
  return result;
}

uint64_t sub_1830344(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24DA998;
  *(void *)(result + 8) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

uint64_t sub_18303E4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24DAA18;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = &qword_2550250;
  *(void *)(result + 56) = &qword_2550250;
  *(void *)(result + 64) = &qword_2550250;
  *(void *)(result + 72) = &qword_2550250;
  *(void *)(result + 80) = &qword_2550250;
  *(void *)(result + 88) = &qword_2550250;
  *(_DWORD *)(result + 96) = 0;
  return result;
}

void *sub_1830494(uint64_t a1)
{
  if (!a1)
  {
    sub_1879DD4();
  }

  return sub_1793EA4(v3, a1, 0);
}

uint64_t sub_18304F0(uint64_t a1)
{
  if (!a1)
  {
    sub_1879E40();
  }

  return sub_179481C(v3, a1, 0);
}

uint64_t sub_183054C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24DAB98;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = &qword_2550250;
  *(unsigned char *)(result + 32) = 0;
  return result;
}

uint64_t sub_18305D4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24DAC18;
  *(void *)(result + 16) = 0;
  *(_WORD *)(result + 24) = 0;
  return result;
}

uint64_t sub_1830650(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24DAC98;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = &qword_2550250;
  *(void *)(result + 32) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

uint64_t sub_18306D8(uint64_t a1)
{
  if (!a1)
  {
    sub_1879EAC();
  }

  return sub_179AD68(v3, a1, 0);
}

void *sub_1830734(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24DAD98;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = &qword_2550250;
  result[5] = 0;
  return result;
}

uint64_t sub_18307BC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24DAE18;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = a1;
  *(void *)(result + 40) = a1;
  *(_OWORD *)(result + 48) = 0u;
  *(_OWORD *)(result + 64) = 0u;
  *(_OWORD *)(result + 80) = 0u;
  *(_OWORD *)(result + 96) = 0u;
  *(_DWORD *)(result + 112) = 0;
  *(_DWORD *)(result + 116) = 8;
  return result;
}

uint64_t sub_1830868(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24DAE98;
  *(void *)(result + 8) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

uint64_t sub_1830908(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24DAF18;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = a1;
  *(void *)(result + 56) = 0;
  *(void *)(result + 64) = 0;
  *(void *)(result + 72) = a1;
  *(_OWORD *)(result + 80) = 0u;
  *(_OWORD *)(result + 96) = 0u;
  return result;
}

void *sub_18309B4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = off_24DAF98;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = 0;
  return result;
}

void *sub_1830A50(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24DB018;
  result[3] = 0;
  result[4] = 0;
  result[2] = 0;
  return result;
}

uint64_t sub_1830ACC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24DB098;
  *(void *)(result + 8) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

void *sub_1830B6C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = off_24DB118;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = a1;
  result[7] = 0;
  result[8] = 0;
  result[9] = 0;
  return result;
}

uint64_t sub_1830C10(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24DB198;
  *(void *)(result + 8) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

void *sub_1830CB0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24DB218;
  result[2] = 0;
  result[3] = 0;
  return result;
}

void *sub_1830D28(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = off_24DB298;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = &qword_2550250;
  result[7] = 0;
  return result;
}

double sub_1830DCC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = off_24DB318;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_DWORD *)(v2 + 48) = 0;
  return result;
}

void *sub_1830E4C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *double result = off_24DB398;
  result[2] = 0;
  result[3] = 0;
  return result;
}

void *sub_1830EC4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *double result = off_24DB418;
  result[2] = 0;
  result[3] = 0;
  return result;
}

uint64_t sub_1830F3C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24DB498;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

void *sub_1830FBC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = off_24DB518;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = a1;
  result[7] = 0;
  result[8] = 0;
  result[9] = 0;
  return result;
}

double sub_1831060(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = off_24DB598;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_DWORD *)(v2 + 48) = 0;
  return result;
}

void *sub_18310E0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *double result = off_24DB618;
  result[2] = 0;
  result[3] = 0;
  return result;
}

void *sub_1831158(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *double result = off_24DB698;
  result[2] = 0;
  result[3] = 0;
  return result;
}

uint64_t sub_18311D0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24DB718;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

uint64_t sub_1831250(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24DB798;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = a1;
  *(void *)(result + 48) = 0;
  *(void *)(result + 56) = 0;
  *(_DWORD *)(result + 64) = 0;
  return result;
}

double sub_18312F4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t v2 = off_24DB818;
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = 0;
  *(void *)(v2 + 32) = a1;
  double result = 0.0;
  *(_OWORD *)(v2 + 40) = 0u;
  *(_OWORD *)(v2 + 56) = 0u;
  *(_OWORD *)(v2 + 72) = 0u;
  return result;
}

double sub_18313A4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = off_24DB898;
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = &qword_2550250;
  double result = 0.0;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 60) = 0u;
  return result;
}

uint64_t sub_1831434(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24DB918;
  *(void *)(result + 8) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

uint64_t sub_18314D4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24DB998;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_1831550(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24DBA18;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = &qword_2550250;
  *(void *)(result + 32) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

void *sub_18315D8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = off_24DBA98;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = 0;
  return result;
}

void *sub_1831674(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = off_24DBB18;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = &qword_2550250;
  return result;
}

void *sub_1831718(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24DBB98;
  result[2] = 0;
  result[3] = 0;
  return result;
}

uint64_t sub_1831790(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24DBC18;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = 0;
  *(_DWORD *)(result + 56) = 0;
  return result;
}

double sub_1831834(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t v2 = off_24DBC98;
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = 0;
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = 0;
  *(void *)(v2 + 48) = a1;
  double result = 0.0;
  *(_OWORD *)(v2 + 56) = 0u;
  *(_OWORD *)(v2 + 72) = 0u;
  return result;
}

uint64_t sub_18318E4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24DBD18;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = a1;
  *(void *)(result + 56) = 0;
  *(void *)(result + 64) = 0;
  *(void *)(result + 72) = a1;
  *(void *)(result + 80) = 0;
  *(void *)(result + 88) = 0;
  *(void *)(result + 96) = &qword_2550250;
  *(_DWORD *)(result + 104) = 0;
  return result;
}

void *sub_18319A0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = off_24DBD98;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = a1;
  result[7] = 0;
  result[8] = 0;
  result[9] = a1;
  result[10] = 0;
  result[11] = 0;
  result[12] = &qword_2550250;
  result[13] = 0;
  return result;
}

uint64_t sub_1831A58(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24DBE18;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(_OWORD *)(result + 32) = 0u;
  *(_OWORD *)(result + 48) = 0u;
  *(void *)(result + 64) = 0;
  return result;
}

uint64_t sub_1831AF8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24DBE98;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(unsigned char *)(result + 32) = 0;
  return result;
}

uint64_t sub_1831B74(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24DBF18;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = &qword_2550250;
  *(void *)(result + 32) = &qword_2550250;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = 0;
  *(_DWORD *)(result + 56) = 0;
  return result;
}

uint64_t sub_1831C00(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24DBF98;
  *(void *)(result + 8) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

uint64_t sub_1831CA0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24DC018;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = &qword_2550250;
  *(_DWORD *)(result + 56) = 0;
  return result;
}

uint64_t sub_1831D48(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24DC098;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = a1;
  *(void *)(result + 48) = 0;
  *(void *)(result + 56) = 0;
  *(_DWORD *)(result + 64) = 0;
  return result;
}

double sub_1831DEC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = off_24DC118;
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = &qword_2550250;
  double result = 0.0;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  return result;
}

uint64_t sub_1831E74(uint64_t a1)
{
  if (!a1)
  {
    sub_1879F18();
  }

  return sub_17B9E04(v3, a1, 0);
}

void *sub_1831ED0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *double result = off_24DC218;
  result[3] = 0;
  result[4] = 0;
  result[2] = 0;
  return result;
}

uint64_t sub_1831F4C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24DC298;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

double sub_1831FC8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = off_24DC318;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 61) = 0u;
  return result;
}

void *sub_183204C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *double result = off_24DC398;
  result[2] = 0;
  result[3] = 0;
  result[4] = 0;
  result[5] = 0xFFFFFFF700000000;
  return result;
}

uint64_t sub_18320D0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24DC418;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = a1;
  *(void *)(result + 56) = 0;
  *(void *)(result + 64) = 0;
  *(void *)(result + 72) = &qword_2550250;
  *(void *)(result + 80) = &qword_2550250;
  *(void *)(result + 88) = &qword_2550250;
  *(void *)(result + 96) = 0;
  *(void *)(result + 102) = 0;
  *(_DWORD *)(result + 112) = -9;
  return result;
}

void *sub_1832190(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24DC498;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = &qword_2550250;
  return result;
}

double sub_1832214(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t v2 = off_24DC518;
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = 0;
  *(void *)(v2 + 40) = 0;
  *(void *)(v2 + 48) = a1;
  *(void *)(v2 + 56) = 0;
  *(void *)(v2 + 64) = 0;
  *(void *)(v2 + 72) = a1;
  *(void *)(v2 + 80) = 0;
  *(void *)(v2 + 88) = 0;
  *(void *)(v2 + 96) = a1;
  *(void *)(v2 + 104) = 0;
  *(void *)(v2 + 112) = 0;
  *(void *)(v2 + 120) = a1;
  *(void *)(v2 + 128) = 0;
  *(void *)(v2 + 136) = 0;
  *(void *)(v2 + 144) = &qword_2550250;
  *(void *)(v2 + 152) = &qword_2550250;
  *(void *)(v2 + 160) = &qword_2550250;
  *(void *)(v2 + 168) = &qword_2550250;
  *(void *)(v2 + 176) = &qword_2550250;
  double result = 0.0;
  *(_OWORD *)(v2 + 184) = 0u;
  *(_OWORD *)(v2 + 200) = 0u;
  *(_OWORD *)(v2 + 216) = 0u;
  *(unsigned char *)(v2 + 232) = 0;
  return result;
}

uint64_t sub_18322F8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24DC598;
  *(void *)(result + 8) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

uint64_t sub_1832398(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24DC618;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

uint64_t sub_1832418(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24DC698;
  *(void *)(result + 8) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

void *sub_18324B8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = off_24DC718;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = 0;
  return result;
}

double sub_1832554(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = off_24DC798;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(void *)(v2 + 45) = 0;
  *(_DWORD *)(v2 + 56) = 10;
  return result;
}

uint64_t sub_18325DC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24DC818;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = a1;
  *(void *)(result + 48) = 0;
  *(void *)(result + 56) = 0;
  *(_DWORD *)(result + 64) = 0;
  return result;
}

void *sub_1832680(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = off_24DC898;
  result[1] = a1;
  result[2] = 0;
  result[3] = 0;
  result[4] = a1;
  result[5] = 0;
  return result;
}

void *sub_1832718(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24DC918;
  result[3] = 0;
  result[4] = 0;
  result[2] = 0;
  return result;
}

uint64_t sub_1832794(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24DC998;
  *(void *)(result + 8) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

void *sub_1832834(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = off_24DCA18;
  result[1] = a1;
  result[2] = 0;
  result[3] = 0;
  result[4] = a1;
  result[5] = 0;
  return result;
}

double sub_18328CC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  return sub_17C51A4(v2, a1, 0);
}

uint64_t sub_183292C(uint64_t a1)
{
  if (!a1)
  {
    sub_1879F84();
  }

  return sub_17C8878(v3, a1, 0);
}

void *sub_1832988(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24DCB98;
  result[2] = 0;
  result[4] = 0;
  result[5] = 0;
  result[3] = &qword_2550250;
  return result;
}

uint64_t sub_1832A10(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24DCC18;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = &qword_2550250;
  *(void *)(result + 32) = 0;
  *(unsigned char *)(result + 40) = 0;
  return result;
}

uint64_t sub_1832A98(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24DCC98;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(_OWORD *)(result + 32) = 0u;
  *(_OWORD *)(result + 48) = 0u;
  *(_DWORD *)(result + 64) = 0;
  return result;
}

uint64_t sub_1832B38(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24DCD18;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

void *sub_1832BB4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = off_24DCD98;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = a1;
  result[7] = 0;
  result[8] = 0;
  result[9] = &qword_2550250;
  return result;
}

uint64_t sub_1832C64(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24DCE18;
  *(void *)(result + 8) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

void *sub_1832D04(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24DCE98;
  result[2] = 0;
  *(void *)((char *)result + 21) = 0;
  return result;
}

void *sub_1832D80(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24DCF18;
  result[2] = 0;
  result[3] = &qword_2550250;
  return result;
}

void *sub_1832E04(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24DCF98;
  result[2] = 0;
  result[3] = &qword_2550250;
  return result;
}

uint64_t sub_1832E88(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24DD018;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_1832F00(uint64_t a1)
{
  if (!a1)
  {
    sub_1879FF0();
  }

  return sub_17D02E0(v3, a1, 0);
}

uint64_t sub_1832F5C(uint64_t a1)
{
  if (!a1)
  {
    sub_187A05C();
  }

  return sub_17D1438(v3, a1, 0);
}

uint64_t sub_1832FB8(uint64_t a1)
{
  if (!a1)
  {
    sub_187A0C8();
  }

  return sub_17D1C58(v3, a1, 0);
}

uint64_t sub_1833014(uint64_t a1)
{
  if (!a1)
  {
    sub_187A134();
  }

  return sub_17D26F4(v3, a1, 0);
}

void *sub_1833070(uint64_t a1)
{
  if (!a1)
  {
    sub_187A1A0();
  }

  return sub_17D2E38(v3, a1, 0);
}

uint64_t sub_18330CC(uint64_t a1)
{
  if (!a1)
  {
    sub_187A20C();
  }

  return sub_17D3C38(v3, a1, 0);
}

void *sub_1833128(uint64_t a1)
{
  if (!a1)
  {
    sub_187A278();
  }

  return sub_17D4124(v3, a1, 0);
}

uint64_t sub_1833184(uint64_t a1)
{
  if (!a1)
  {
    sub_187A2E4();
  }

  return sub_17D4D8C(v3, a1, 0);
}

uint64_t sub_18331E0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24DD498;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_1833258(uint64_t a1)
{
  if (!a1)
  {
    sub_187A350();
  }

  return sub_17D588C(v3, a1, 0);
}

uint64_t sub_18332B4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24DD598;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

void *sub_183332C(uint64_t a1)
{
  if (!a1)
  {
    sub_187A3BC();
  }

  return sub_17D6468(v3, a1, 0);
}

uint64_t sub_1833388(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24DD698;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

double sub_1833400(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t v2 = off_24DD718;
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = 0;
  *(void *)(v2 + 40) = 0;
  *(void *)(v2 + 48) = &qword_2550250;
  *(void *)(v2 + 56) = &qword_2550250;
  double result = 0.0;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 80) = 0u;
  *(_OWORD *)(v2 + 93) = 0u;
  return result;
}

uint64_t sub_18334B0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24DD798;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_1833528(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24DD818;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = &qword_2550250;
  *(void *)(result + 32) = &qword_2550250;
  *(void *)(result + 40) = &qword_2550250;
  *(void *)(result + 48) = &qword_2550250;
  *(void *)(result + 56) = 0;
  *(_DWORD *)(result + 64) = 0;
  return result;
}

uint64_t sub_18335B8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24DD898;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_1833630(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24DD918;
  *(void *)(result + 8) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

uint64_t sub_18336D0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24DD998;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

double sub_1833748(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t v2 = off_24DDA18;
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = 0;
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = &qword_2550250;
  double result = 0.0;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 74) = 0u;
  return result;
}

void *sub_18337F8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *double result = off_24DDA98;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = 0;
  return result;
}

double sub_183387C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t v2 = off_24DDB18;
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = 0;
  *(void *)(v2 + 40) = 0;
  *(void *)(v2 + 48) = &qword_2550250;
  *(void *)(v2 + 56) = &qword_2550250;
  *(void *)(v2 + 64) = &qword_2550250;
  *(void *)(v2 + 72) = &qword_2550250;
  double result = 0.0;
  *(_OWORD *)(v2 + 80) = 0u;
  *(_OWORD *)(v2 + 96) = 0u;
  *(_DWORD *)(v2 + 112) = 0;
  return result;
}

uint64_t sub_1833930(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24DDB98;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

double sub_18339A8(uint64_t a1)
{
  if (!a1)
  {
    sub_187A428();
  }
  *(void *)uint64_t v3 = off_24DDC18;
  *(void *)(v3 + 8) = a1;
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = &qword_2550250;
  *(void *)(v3 + 32) = &qword_2550250;
  *(void *)(v3 + 40) = &qword_2550250;
  *(void *)(v3 + 48) = &qword_2550250;
  *(void *)(v3 + 56) = &qword_2550250;
  *(void *)(v3 + 64) = &qword_2550250;
  *(void *)(v3 + 72) = &qword_2550250;
  double result = 0.0;
  *(_OWORD *)(v3 + 80) = 0u;
  *(_OWORD *)(v3 + 96) = 0u;
  *(_OWORD *)(v3 + 112) = 0u;
  *(_OWORD *)(v3 + 128) = 0u;
  *(_OWORD *)(v3 + 140) = 0u;
  return result;
}

void *sub_1833A34(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *double result = off_24DDC98;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = &qword_2550250;
  result[5] = &qword_2550250;
  return result;
}

void *sub_1833ABC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *double result = off_24DDD18;
  result[2] = 0;
  result[3] = &qword_2550250;
  return result;
}

void *sub_1833B40(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *double result = off_24DDD98;
  result[2] = 0;
  result[3] = &qword_2550250;
  return result;
}

uint64_t sub_1833BC4(uint64_t a1)
{
  if (!a1)
  {
    sub_187A49C();
  }
  *(void *)uint64_t result = off_24DDE18;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = &qword_2550250;
  *(void *)(result + 32) = &qword_2550250;
  *(void *)(result + 40) = &qword_2550250;
  *(void *)(result + 48) = &qword_2550250;
  *(void *)(result + 56) = &qword_2550250;
  *(void *)(result + 64) = &qword_2550250;
  *(void *)(result + 72) = &qword_2550250;
  *(void *)(result + 80) = &qword_2550250;
  *(void *)(result + 88) = &qword_2550250;
  *(void *)(result + 96) = &qword_2550250;
  *(void *)(result + 104) = &qword_2550250;
  *(void *)(result + 112) = &qword_2550250;
  *(void *)(result + 120) = &qword_2550250;
  *(void *)(result + 128) = &qword_2550250;
  *(_DWORD *)(result + 136) = 0;
  return result;
}

void *sub_1833C50(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24DDE98;
  result[2] = 0;
  result[3] = 0;
  return result;
}

void *sub_1833CC8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = off_24DDF18;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[7] = 0;
  result[8] = 0;
  result[6] = &qword_2550250;
  return result;
}

void *sub_1833D70(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24DDF98;
  result[2] = 0;
  result[3] = &qword_2550250;
  return result;
}

uint64_t sub_1833DF4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24DE018;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = 0;
  *(_DWORD *)(result + 56) = 0;
  return result;
}

uint64_t sub_1833E98(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24DE098;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = &qword_2550250;
  *(void *)(result + 56) = &qword_2550250;
  *(_DWORD *)(result + 64) = 0;
  return result;
}

double sub_1833F40(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t v2 = off_24DE118;
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = 0;
  *(void *)(v2 + 40) = 0;
  *(void *)(v2 + 48) = a1;
  *(void *)(v2 + 56) = 0;
  *(void *)(v2 + 64) = 0;
  *(void *)(v2 + 72) = &qword_2550250;
  *(void *)(v2 + 80) = &qword_2550250;
  double result = 0.0;
  *(_OWORD *)(v2 + 88) = 0u;
  *(_OWORD *)(v2 + 104) = 0u;
  *(void *)(v2 + 118) = 0;
  *(_DWORD *)(v2 + 128) = 10;
  return result;
}

uint64_t sub_1834008(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24DE198;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = a1;
  *(void *)(result + 56) = 0;
  *(void *)(result + 64) = 0;
  *(unsigned char *)(result + 72) = 0;
  return result;
}

uint64_t sub_18340B4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24DE218;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(unsigned char *)(result + 32) = 0;
  return result;
}

double sub_1834130(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = off_24DE298;
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = &qword_2550250;
  double result = 0.0;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_DWORD *)(v2 + 80) = 10;
  return result;
}

uint64_t sub_18341C8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24DE318;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(_OWORD *)(result + 32) = 0u;
  *(_OWORD *)(result + 48) = 0u;
  return result;
}

uint64_t sub_1834264(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24DE398;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(_DWORD *)(result + 48) = 0;
  return result;
}

double sub_1834300(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  v2[1] = a1;
  void *v2 = off_24DE418;
  v2[3] = 0;
  v2[4] = 0;
  v2[2] = 0;
  *(void *)&double result = 0xA00000002;
  v2[5] = 0xA00000002;
  return result;
}

uint64_t sub_1834388(uint64_t a1)
{
  if (!a1)
  {
    sub_187A510();
  }

  return sub_17EACCC(v3, a1, 0);
}

uint64_t sub_18343E4(uint64_t a1)
{
  if (!a1)
  {
    sub_187A57C();
  }

  return sub_17EB1B8(v3, a1, 0);
}

uint64_t sub_1834440(uint64_t a1)
{
  if (!a1)
  {
    sub_187A5E8();
  }

  return sub_17EBEB8(v3, a1, 0);
}

uint64_t sub_183449C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24DE618;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(_OWORD *)(result + 32) = 0u;
  *(_OWORD *)(result + 48) = 0u;
  return result;
}

uint64_t sub_1834538(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24DE698;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_18345B0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24DE718;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = a1;
  *(void *)(result + 48) = 0;
  *(void *)(result + 56) = 0;
  *(void *)(result + 72) = 0;
  *(void *)(result + 80) = 0;
  *(void *)(result + 64) = a1;
  *(_DWORD *)(result + 88) = 0;
  return result;
}

uint64_t sub_1834660(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24DE798;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_18346D8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24DE818;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(_DWORD *)(result + 48) = 0;
  return result;
}

uint64_t sub_1834774(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24DE898;
  *(void *)(result + 8) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

uint64_t sub_1834814(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24DE918;
  *(void *)(result + 8) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

uint64_t sub_18348B4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24DE998;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_183492C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24DEA18;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_18349A8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24DEA98;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = 0;
  *(void *)(result + 56) = a1;
  *(void *)(result + 64) = 0;
  *(void *)(result + 72) = a1;
  *(void *)(result + 80) = 0;
  *(void *)(result + 88) = a1;
  *(void *)(result + 104) = 0;
  *(void *)(result + 112) = 0;
  *(void *)(result + 96) = &qword_2550250;
  *(_DWORD *)(result + 120) = 0;
  return result;
}

uint64_t sub_1834A78(uint64_t a1)
{
  if (!a1)
  {
    sub_187A654();
  }

  return sub_17F1C14(v3, a1, 0);
}

uint64_t sub_1834AD4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24DEB98;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = &qword_2550250;
  *(void *)(result + 32) = 0;
  *(unsigned char *)(result + 40) = 0;
  *(_DWORD *)(result + 44) = 15;
  return result;
}

uint64_t sub_1834B64(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24DEC18;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = &qword_2550250;
  *(void *)(result + 32) = 0;
  *(unsigned char *)(result + 40) = 0;
  *(_DWORD *)(result + 44) = 15;
  return result;
}

uint64_t sub_1834BF4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24DEC98;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = &qword_2550250;
  *(void *)(result + 32) = 0;
  *(unsigned char *)(result + 40) = 0;
  *(_DWORD *)(result + 44) = 15;
  return result;
}

uint64_t sub_1834C84(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24DED18;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(_WORD *)(result + 32) = 0;
  return result;
}

void *sub_1834D00(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24DED98;
  result[3] = 0;
  result[4] = 0;
  result[2] = 0;
  return result;
}

double sub_1834D7C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  return sub_17F6A44(v2, a1, 0);
}

uint64_t sub_1834E34(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24DEE98;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = &qword_2550250;
  *(void *)(result + 32) = &qword_2550250;
  *(void *)(result + 40) = 0;
  *(_WORD *)(result + 48) = 0;
  *(_DWORD *)(result + 52) = 15;
  return result;
}

uint64_t sub_1834EC8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24DEF18;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = &qword_2550250;
  *(void *)(result + 32) = 0;
  *(unsigned char *)(result + 40) = 0;
  *(_DWORD *)(result + 44) = 15;
  return result;
}

double sub_1834F58(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t v2 = off_24DEF98;
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = 0;
  *(void *)(v2 + 40) = 0;
  *(void *)(v2 + 48) = &qword_2550250;
  double result = 0.0;
  *(_OWORD *)(v2 + 56) = 0u;
  *(_OWORD *)(v2 + 72) = 0u;
  *(_OWORD *)(v2 + 81) = 0u;
  *(_DWORD *)(v2 + 100) = 15;
  return result;
}

uint64_t sub_1835014(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24DF018;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = &qword_2550250;
  *(void *)(result + 32) = 0;
  *(unsigned char *)(result + 40) = 0;
  *(_DWORD *)(result + 44) = 15;
  return result;
}

uint64_t sub_18350A4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24DF098;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = &qword_2550250;
  *(void *)(result + 32) = 0;
  *(unsigned char *)(result + 40) = 0;
  *(_DWORD *)(result + 44) = 15;
  return result;
}

uint64_t sub_1835134(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24DF118;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = &qword_2550250;
  *(void *)(result + 32) = 0;
  *(unsigned char *)(result + 40) = 0;
  *(_DWORD *)(result + 44) = 15;
  return result;
}

void *sub_18351C4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = off_24DF198;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = &qword_2550250;
  result[7] = 0;
  return result;
}

double sub_1835268(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t v2 = off_24DF218;
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = 0;
  *(void *)(v2 + 32) = a1;
  double result = 0.0;
  *(void *)(v2 + 40) = 0;
  *(void *)(v2 + 48) = a1;
  *(void *)(v2 + 56) = 0;
  *(void *)(v2 + 72) = 0;
  *(void *)(v2 + 80) = 0;
  *(void *)(v2 + 64) = a1;
  *(unsigned char *)(v2 + 88) = 0;
  return result;
}

uint64_t sub_1835324(uint64_t a1)
{
  if (!a1)
  {
    sub_187A6C0();
  }

  return sub_17FF844(v3, a1, 0);
}

uint64_t sub_1835380(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24DF318;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = a1;
  *(_DWORD *)(result + 56) = 0;
  return result;
}

uint64_t sub_1835424(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24DF398;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_183549C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24DF418;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = a1;
  *(void *)(result + 48) = 0;
  *(void *)(result + 56) = 0;
  *(_DWORD *)(result + 64) = 0;
  return result;
}

uint64_t sub_1835540(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24DF498;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

void *sub_18355B8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24DF518;
  result[2] = 0;
  result[3] = &qword_2550250;
  return result;
}

uint64_t sub_183563C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24DF598;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_18356B4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24DF618;
  *(void *)(result + 8) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

void *sub_1835754(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24DF698;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = &qword_2550250;
  result[5] = &qword_2550250;
  result[6] = &qword_2550250;
  result[8] = 0;
  result[9] = 0;
  result[7] = 0;
  return result;
}

uint64_t sub_18357E4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24DF718;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = 0;
  *(void *)(result + 56) = a1;
  *(void *)(result + 64) = 0;
  *(void *)(result + 72) = a1;
  *(void *)(result + 80) = 0;
  *(void *)(result + 88) = a1;
  *(void *)(result + 104) = 0;
  *(void *)(result + 112) = 0;
  *(void *)(result + 96) = &qword_2550250;
  *(unsigned char *)(result + 120) = 0;
  return result;
}

uint64_t sub_18358B4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24DF798;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(_DWORD *)(result + 48) = 0;
  return result;
}

uint64_t sub_1835950(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24DF818;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(_DWORD *)(result + 48) = 0;
  return result;
}

void *sub_18359EC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24DF898;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = 0;
  return result;
}

uint64_t sub_1835A70(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24DF918;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_1835AE8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24DF998;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = &qword_2550250;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(_DWORD *)(result + 48) = 0;
  return result;
}

double sub_1835B70(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t v2 = off_24DFA18;
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = 0;
  *(void *)(v2 + 40) = 0;
  *(void *)(v2 + 48) = a1;
  double result = 0.0;
  *(_OWORD *)(v2 + 56) = 0u;
  *(_OWORD *)(v2 + 72) = 0u;
  return result;
}

uint64_t sub_1835C20(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24DFA98;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(_DWORD *)(result + 48) = 1000;
  return result;
}

uint64_t sub_1835CC0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24DFB18;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

void *sub_1835D38(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24DFB98;
  result[2] = 0;
  result[3] = 0;
  return result;
}

uint64_t sub_1835DB0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24DFC18;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

void *sub_1835E28(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24DFC98;
  result[2] = 0;
  result[3] = &qword_2550250;
  return result;
}

uint64_t sub_1835EAC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24DFD18;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = &qword_2550250;
  *(void *)(result + 32) = &qword_2550250;
  *(void *)(result + 40) = &qword_2550250;
  *(void *)(result + 48) = 0;
  *(_DWORD *)(result + 56) = 0;
  return result;
}

void *sub_1835F38(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24DFD98;
  result[3] = 0;
  result[4] = 0;
  result[2] = 0;
  return result;
}

uint64_t sub_1835FB4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24DFE18;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_183602C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24DFE98;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = a1;
  *(void *)(result + 48) = 0;
  *(void *)(result + 56) = 0;
  *(_DWORD *)(result + 64) = 0;
  return result;
}

uint64_t sub_18360D0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24DFF18;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = 0;
  *(_DWORD *)(result + 56) = 0;
  return result;
}

uint64_t sub_1836174(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24DFF98;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = 0;
  *(_DWORD *)(result + 56) = 0;
  return result;
}

uint64_t sub_1836218(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24E0018;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = a1;
  *(void *)(result + 56) = 0;
  *(void *)(result + 64) = 0;
  *(_DWORD *)(result + 72) = 0;
  return result;
}

uint64_t sub_18362C4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24E0098;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

void *sub_1836358(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = off_24E0118;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = 0;
  return result;
}

uint64_t sub_18363F4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24E0198;
  *(void *)(result + 8) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

void *sub_1836494(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24E0218;
  result[2] = 0;
  result[3] = 0;
  return result;
}

uint64_t sub_183650C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24E0298;
  *(void *)(result + 16) = 0;
  *(unsigned char *)(result + 24) = 0;
  return result;
}

void *sub_1836588(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24E0318;
  result[2] = 0;
  result[3] = 0;
  return result;
}

uint64_t sub_1836600(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24E0398;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

void *sub_1836678(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24E0418;
  result[2] = 0;
  result[3] = 0;
  return result;
}

void *sub_18366F0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24E0498;
  result[3] = 0;
  result[4] = 0;
  result[2] = 0;
  return result;
}

uint64_t sub_183676C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24E0518;
  *(void *)(result + 8) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

void *sub_183680C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = off_24E0598;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = 0;
  return result;
}

void *sub_18368A8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24E0618;
  result[2] = 0;
  result[3] = 0;
  return result;
}

uint64_t sub_1836920(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24E0698;
  *(void *)(result + 8) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

void *sub_18369C0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24E0718;
  result[2] = 0;
  result[3] = 0;
  return result;
}

uint64_t sub_1836A38(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24E0798;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = 0;
  *(unsigned char *)(result + 56) = 0;
  return result;
}

uint64_t sub_1836ADC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24E0818;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

void *sub_1836B54(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24E0898;
  result[2] = 0;
  result[3] = 0;
  return result;
}

void *sub_1836BCC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24E0918;
  result[2] = 0;
  result[3] = 0;
  return result;
}

void *sub_1836C44(uint64_t a1)
{
  if (!a1)
  {
    sub_187A72C();
  }

  return sub_1816AAC(v3, a1, 0);
}

uint64_t sub_1836CA0(uint64_t a1)
{
  if (!a1)
  {
    sub_187A798();
  }

  return sub_18173D8(v3, a1, 0);
}

uint64_t sub_1836CFC(uint64_t a1)
{
  if (!a1)
  {
    sub_187A804();
  }

  return sub_18178C4(v3, a1, 0);
}

uint64_t sub_1836D58(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24E0B18;
  *(void *)(result + 8) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

uint64_t sub_1836DF8(uint64_t a1)
{
  if (!a1)
  {
    sub_187A870();
  }

  return sub_18216B0(v3, a1, 0);
}

uint64_t sub_1836E54(uint64_t a1)
{
  if (!a1)
  {
    sub_187A8DC();
  }

  return sub_182ABC8(v3, a1, 0);
}

uint64_t sub_1836EB0(uint64_t a1)
{
  if (!a1)
  {
    sub_187A948();
  }

  return sub_182DB9C(v3, a1, 0);
}

uint64_t sub_1836F0C(uint64_t a1)
{
  if (!a1)
  {
    sub_187A9B4();
  }

  return sub_182E088(v3, a1, 0);
}

uint64_t sub_1836F68(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  if ((uint64_t (***)())a1 != &off_254CC00 && *(void *)(a1 + 24))
  {
    sub_15B0994();
    operator delete();
  }
  if (*(void *)(a1 + 8)) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1837020(uint64_t a1)
{
  sub_1836F68(a1);

  operator delete();
}

unsigned char *sub_1837058(unsigned char *result)
{
  uint64_t v1 = result;
  if (result[16]) {
    uint64_t result = sub_15B09D0(*((void *)result + 3));
  }
  char v3 = v1[8];
  uint64_t v2 = v1 + 8;
  *((void *)v2 + 3) = 0;
  *((_DWORD *)v2 + 2) = 0;
  if (v3)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v2);
  }
  return result;
}

char *sub_18370B8(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v23 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v23, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v23 + 1;
    unsigned int v9 = *v23;
    if (*v23 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v23, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v23 + 2;
      }
    }
    uint64_t v23 = v8;
    if (v9 >> 3 == 2) {
      break;
    }
    if (v9 >> 3 != 1 || v9 != 8) {
      goto LABEL_13;
    }
    v5 |= 2u;
    uint64_t v18 = v8 + 1;
    uint64_t v19 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_31;
    }
    int v20 = *v18;
    uint64_t v19 = v19 + (v20 << 7) - 128;
    if ((v20 & 0x80000000) == 0)
    {
      uint64_t v18 = v8 + 2;
LABEL_31:
      uint64_t v23 = v18;
      *(void *)(a1 + 32) = v19;
      goto LABEL_32;
    }
    uint64_t v21 = (char *)sub_188C138((uint64_t)v8, v19);
    uint64_t v23 = v21;
    *(void *)(a1 + 32) = v22;
    if (!v21) {
      goto LABEL_39;
    }
LABEL_32:
    if (sub_11947B8((uint64_t)a3, &v23, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 == 18)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v16 = *(void *)(a1 + 24);
    if (!v16)
    {
      uint64_t v17 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v7) {
        uint64_t v17 = (void *)*v17;
      }
      uint64_t v16 = sub_15C1918((uint64_t)v17);
      *(void *)(a1 + 24) = v16;
      uint64_t v8 = v23;
    }
    uint64_t v15 = sub_1198F14(a3, v16, (unsigned __int8 *)v8);
LABEL_26:
    uint64_t v23 = v15;
    if (!v15) {
      goto LABEL_39;
    }
    goto LABEL_32;
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      uint64_t v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = v23;
    }
    uint64_t v15 = (char *)sub_1885AC0(v9, v14, v8, a3);
    goto LABEL_26;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_39:
  uint64_t v23 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v23;
}

char *sub_183729C(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(void *)(a1 + 32);
    *uint64_t v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 24);
    *uint64_t v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 44);
    v4[1] = v11;
    if (v11 > 0x7F) {
      uint64_t v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      uint64_t v12 = v4 + 2;
    }
    uint64_t v4 = sub_15B0C0C(v10, v12, a3);
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    uint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    uint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_1837428(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 3) == 0)
  {
    uint64_t result = 0;
    goto LABEL_8;
  }
  if (v2)
  {
    uint64_t v4 = sub_15B0D90(*(void *)(a1 + 24));
    uint64_t result = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t result = 0;
  if ((v2 & 2) != 0) {
LABEL_7:
  }
    result += ((9 * (__clz(*(void *)(a1 + 32) | 1) ^ 0x3F) + 73) >> 6) + 1;
LABEL_8:
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5)
  {
    unint64_t v6 = v5 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v6 + 31) < 0) {
      uint64_t v7 = *(void *)(v6 + 16);
    }
    else {
      uint64_t v7 = *(unsigned __int8 *)(v6 + 31);
    }
    result += v7;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

uint64_t sub_18374E8(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 1;
  }
  uint64_t result = sub_15B0F18(*(void *)(a1 + 24));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_1837514@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PlaceIdentifier");
}

void *sub_1837524(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = &off_24E0D98;
  result[3] = 0;
  result[4] = 0;
  result[2] = 0;
  return result;
}

BOOL sub_18375A0(unsigned int a1)
{
  return a1 < 8;
}

BOOL sub_18375AC(unsigned int a1)
{
  return a1 < 0xC;
}

void *sub_18375B8(void *a1)
{
  char v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_183762C(void *a1)
{
  sub_18375B8(a1);

  operator delete();
}

uint64_t *sub_1837664(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = (uint64_t *)(a1 + 8);
  if (v2) {
    return (uint64_t *)sub_188B4AC(result);
  }
  return result;
}

char *sub_1837674(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v12 = a2;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  while (1)
  {
    if (sub_11947B8((uint64_t)a3, &v12, a3[11].i32[1])) {
      return v12;
    }
    uint64_t v5 = v12 + 1;
    unsigned int v6 = *v12;
    if (*v12 < 0)
    {
      unsigned int v7 = v6 + (*v5 << 7);
      unsigned int v6 = v7 - 128;
      if (*v5 < 0)
      {
        uint64_t v5 = (char *)sub_188C180((uint64_t)v12, v7 - 128);
        unsigned int v6 = v8;
      }
      else
      {
        uint64_t v5 = v12 + 2;
      }
    }
    uint64_t v12 = v5;
    if (!v6 || (v6 & 7) == 4) {
      break;
    }
    if (*v4)
    {
      uint64_t v10 = (std::string *)((*v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v10 = (std::string *)sub_188DBD8(v4);
      uint64_t v5 = v12;
    }
    uint64_t v12 = (char *)sub_1885AC0(v6, v10, v5, a3);
    if (!v12) {
      return 0;
    }
  }
  if (v5) {
    a3[10].i32[0] = v6 - 1;
  }
  return v5;
}

char *sub_1837774(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v4 = *(void *)(a1 + 8);
  if ((v4 & 1) == 0) {
    return __dst;
  }
  unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v6 + 31) < 0)
  {
    unsigned int v7 = *(void **)(v6 + 8);
    unint64_t v6 = *(void *)(v6 + 16);
  }
  else
  {
    unsigned int v7 = (void *)(v6 + 8);
    LODWORD(v6) = *(unsigned __int8 *)(v6 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v6)
  {
    uint64_t v8 = (int)v6;
    memcpy(__dst, v7, (int)v6);
    __dst += v8;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v7, v6, __dst);
}

uint64_t sub_183780C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (v1)
  {
    unint64_t v4 = v1 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v2 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v2 = *(unsigned __int8 *)(v4 + 31);
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  *(_DWORD *)(a1 + 16) = v2;
  return v2;
}

std::string *sub_1837840(std::string *result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 8);
  if (v2) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v2 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_183785C()
{
  return 1;
}

void *sub_1837864@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PlaceSummaryLayoutUnitName");
}

void *sub_1837874(void *a1)
{
  char v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_18378E8(void *a1)
{
  sub_1837874(a1);

  operator delete();
}

uint64_t *sub_1837920(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = (uint64_t *)(a1 + 8);
  if (v2) {
    return (uint64_t *)sub_188B4AC(result);
  }
  return result;
}

char *sub_1837930(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v12 = a2;
  unint64_t v4 = (uint64_t *)(a1 + 8);
  while (1)
  {
    if (sub_11947B8((uint64_t)a3, &v12, a3[11].i32[1])) {
      return v12;
    }
    uint64_t v5 = v12 + 1;
    unsigned int v6 = *v12;
    if (*v12 < 0)
    {
      unsigned int v7 = v6 + (*v5 << 7);
      unsigned int v6 = v7 - 128;
      if (*v5 < 0)
      {
        uint64_t v5 = (char *)sub_188C180((uint64_t)v12, v7 - 128);
        unsigned int v6 = v8;
      }
      else
      {
        uint64_t v5 = v12 + 2;
      }
    }
    uint64_t v12 = v5;
    if (!v6 || (v6 & 7) == 4) {
      break;
    }
    if (*v4)
    {
      uint64_t v10 = (std::string *)((*v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v10 = (std::string *)sub_188DBD8(v4);
      uint64_t v5 = v12;
    }
    uint64_t v12 = (char *)sub_1885AC0(v6, v10, v5, a3);
    if (!v12) {
      return 0;
    }
  }
  if (v5) {
    a3[10].i32[0] = v6 - 1;
  }
  return v5;
}

char *sub_1837A30(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v4 = *(void *)(a1 + 8);
  if ((v4 & 1) == 0) {
    return __dst;
  }
  unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v6 + 31) < 0)
  {
    unsigned int v7 = *(void **)(v6 + 8);
    unint64_t v6 = *(void *)(v6 + 16);
  }
  else
  {
    unsigned int v7 = (void *)(v6 + 8);
    LODWORD(v6) = *(unsigned __int8 *)(v6 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v6)
  {
    uint64_t v8 = (int)v6;
    memcpy(__dst, v7, (int)v6);
    __dst += v8;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v7, v6, __dst);
}

uint64_t sub_1837AC8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (v1)
  {
    unint64_t v4 = v1 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v2 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v2 = *(unsigned __int8 *)(v4 + 31);
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  *(_DWORD *)(a1 + 16) = v2;
  return v2;
}

std::string *sub_1837AFC(std::string *result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 8);
  if (v2) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v2 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1837B18()
{
  return 1;
}

void *sub_1837B20@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PlaceSummaryLayoutUnitCategory");
}

void *sub_1837B30(void *a1)
{
  char v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1837BA4(void *a1)
{
  sub_1837B30(a1);

  operator delete();
}

uint64_t sub_1837BDC(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(void *)(result + 16) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_1837BF4(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v19 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
    goto LABEL_27;
  }
  unint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    unsigned int v7 = v19 + 1;
    unsigned int v8 = *v19;
    if (*v19 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        unsigned int v7 = (char *)sub_188C180((uint64_t)v19, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        unsigned int v7 = v19 + 2;
      }
    }
    uint64_t v19 = v7;
    if (v8 != 8) {
      break;
    }
    uint64_t v13 = v7 + 1;
    uint64_t v14 = *v7;
    if ((*v7 & 0x80000000) == 0) {
      goto LABEL_19;
    }
    int v15 = *v13;
    uint64_t v14 = v14 + (v15 << 7) - 128;
    if ((v15 & 0x80000000) == 0)
    {
      uint64_t v13 = v7 + 2;
LABEL_19:
      uint64_t v19 = v13;
      *(void *)(a1 + 24) = v14;
      int v5 = 1;
      goto LABEL_20;
    }
    uint64_t v16 = (char *)sub_188C138((uint64_t)v7, v14);
    uint64_t v19 = v16;
    *(void *)(a1 + 24) = v17;
    int v5 = 1;
    if (!v16) {
      goto LABEL_28;
    }
LABEL_20:
    if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
      goto LABEL_27;
    }
  }
  if (v8) {
    BOOL v11 = (v8 & 7) == 4;
  }
  else {
    BOOL v11 = 1;
  }
  if (!v11)
  {
    if (*v6)
    {
      uint64_t v12 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v12 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unsigned int v7 = v19;
    }
    uint64_t v19 = (char *)sub_1885AC0(v8, v12, v7, a3);
    if (!v19) {
      goto LABEL_28;
    }
    goto LABEL_20;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    goto LABEL_27;
  }
LABEL_28:
  uint64_t v19 = 0;
LABEL_27:
  *(_DWORD *)(a1 + 16) |= v5;
  return v19;
}

unsigned char *sub_1837D74(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  unint64_t v4 = (unsigned char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= __dst) {
      unint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v6 = *(void *)(a1 + 24);
    *unint64_t v4 = 8;
    v4[1] = v6;
    if (v6 > 0x7F)
    {
      v4[1] = v6 | 0x80;
      unint64_t v7 = v6 >> 7;
      v4[2] = v6 >> 7;
      v4 += 3;
      if (v6 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v8 = v7 >> 14;
          v7 >>= 7;
          *v4++ = v7;
        }
        while (v8);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    uint64_t v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    uint64_t v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    v4 += v14;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v12, v13, v4);
}

unint64_t sub_1837E9C(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16)) {
    unint64_t v1 = ((9 * (__clz(*(void *)(a1 + 24) | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
  else {
    unint64_t v1 = 0;
  }
  uint64_t v2 = *(void *)(a1 + 8);
  if (v2)
  {
    unint64_t v4 = v2 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v5 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v5 = *(unsigned __int8 *)(v4 + 31);
    }
    v1 += v5;
  }
  *(_DWORD *)(a1 + 20) = v1;
  return v1;
}

uint64_t sub_1837F04()
{
  return 1;
}

void *sub_1837F0C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PlaceSummaryLayoutUnitDistance");
}

void *sub_1837F1C(void *a1)
{
  char v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1837F90(void *a1)
{
  sub_1837F1C(a1);

  operator delete();
}

uint64_t *sub_1837FC8(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = (uint64_t *)(a1 + 8);
  if (v2) {
    return (uint64_t *)sub_188B4AC(result);
  }
  return result;
}

char *sub_1837FD8(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v12 = a2;
  unint64_t v4 = (uint64_t *)(a1 + 8);
  while (1)
  {
    if (sub_11947B8((uint64_t)a3, &v12, a3[11].i32[1])) {
      return v12;
    }
    uint64_t v5 = v12 + 1;
    unsigned int v6 = *v12;
    if (*v12 < 0)
    {
      unsigned int v7 = v6 + (*v5 << 7);
      unsigned int v6 = v7 - 128;
      if (*v5 < 0)
      {
        uint64_t v5 = (char *)sub_188C180((uint64_t)v12, v7 - 128);
        unsigned int v6 = v8;
      }
      else
      {
        uint64_t v5 = v12 + 2;
      }
    }
    uint64_t v12 = v5;
    if (!v6 || (v6 & 7) == 4) {
      break;
    }
    if (*v4)
    {
      unsigned int v10 = (std::string *)((*v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unsigned int v10 = (std::string *)sub_188DBD8(v4);
      uint64_t v5 = v12;
    }
    uint64_t v12 = (char *)sub_1885AC0(v6, v10, v5, a3);
    if (!v12) {
      return 0;
    }
  }
  if (v5) {
    a3[10].i32[0] = v6 - 1;
  }
  return v5;
}

char *sub_18380D8(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v4 = *(void *)(a1 + 8);
  if ((v4 & 1) == 0) {
    return __dst;
  }
  unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v6 + 31) < 0)
  {
    unsigned int v7 = *(void **)(v6 + 8);
    unint64_t v6 = *(void *)(v6 + 16);
  }
  else
  {
    unsigned int v7 = (void *)(v6 + 8);
    LODWORD(v6) = *(unsigned __int8 *)(v6 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v6)
  {
    uint64_t v8 = (int)v6;
    memcpy(__dst, v7, (int)v6);
    __dst += v8;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v7, v6, __dst);
}

uint64_t sub_1838170(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (v1)
  {
    unint64_t v4 = v1 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v2 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v2 = *(unsigned __int8 *)(v4 + 31);
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  *(_DWORD *)(a1 + 16) = v2;
  return v2;
}

std::string *sub_18381A4(std::string *result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 8);
  if (v2) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v2 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_18381C0()
{
  return 1;
}

void *sub_18381C8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PlaceSummaryLayoutUnitPrice");
}

void *sub_18381D8(void *a1)
{
  char v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1889DA8((uint64_t)(a1 + 3));
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1838254(void *a1)
{
  sub_18381D8(a1);

  operator delete();
}

uint64_t sub_183828C(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 16) = 0;
  *(_DWORD *)(result + 32) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_18382A8(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v31 = a2;
  if (sub_11947B8((uint64_t)a3, &v31, a3[11].i32[1])) {
    return v31;
  }
  unint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    unsigned int v7 = v31 + 1;
    unsigned int v8 = *v31;
    if (*v31 < 0)
    {
      int v9 = *v7;
      unsigned int v10 = v8 + (v9 << 7);
      unsigned int v8 = v10 - 128;
      if (v9 < 0)
      {
        unsigned int v7 = (char *)sub_188C180((uint64_t)v31, v10 - 128);
        unsigned int v8 = v11;
      }
      else
      {
        unsigned int v7 = v31 + 2;
      }
    }
    uint64_t v31 = v7;
    if (v8 >> 3 == 2) {
      break;
    }
    if (v8 >> 3 != 1 || v8 != 8) {
      goto LABEL_13;
    }
    uint64_t v25 = v7 + 1;
    unint64_t v26 = *v7;
    if (*v7 < 0)
    {
      int v27 = *v25;
      int v28 = v26 + (v27 << 7);
      unint64_t v26 = (v28 - 128);
      if (v27 < 0)
      {
        uint64_t v31 = (char *)sub_188C138((uint64_t)v7, (v28 - 128));
        if (!v31) {
          return 0;
        }
        unint64_t v26 = v29;
        goto LABEL_46;
      }
      uint64_t v25 = v7 + 2;
    }
    uint64_t v31 = v25;
LABEL_46:
    if (v26 > 2)
    {
      if (*v6) {
        uint64_t v30 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        uint64_t v30 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      sub_188C020(1, v26, v30);
    }
    else
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      *(_DWORD *)(a1 + 40) = v26;
    }
LABEL_48:
    if (sub_11947B8((uint64_t)a3, &v31, a3[11].i32[1])) {
      return v31;
    }
  }
  if (v8 == 16)
  {
    uint64_t v16 = v7 - 1;
    while (1)
    {
      uint64_t v31 = v16 + 1;
      unint64_t v17 = v16[1];
      uint64_t v18 = v16 + 2;
      if (v16[1] < 0)
      {
        int v19 = *v18;
        int v20 = v17 + (v19 << 7);
        unint64_t v17 = (v20 - 128);
        if (v19 < 0)
        {
          uint64_t v31 = (char *)sub_188C138((uint64_t)(v16 + 1), (v20 - 128));
          if (!v31) {
            return 0;
          }
          unint64_t v17 = v23;
          goto LABEL_28;
        }
        uint64_t v18 = v16 + 3;
      }
      uint64_t v31 = v18;
LABEL_28:
      if (v17 > 7)
      {
        if (*v6) {
          uint64_t v24 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          uint64_t v24 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        sub_188C020(2, v17, v24);
      }
      else
      {
        uint64_t v21 = *(unsigned int *)(a1 + 24);
        if (v21 == *(_DWORD *)(a1 + 28))
        {
          int v22 = v21 + 1;
          sub_188C80C((unsigned int *)(a1 + 24), v21 + 1);
          *(_DWORD *)(*(void *)(a1 + 32) + 4 * v21) = v17;
        }
        else
        {
          *(_DWORD *)(*(void *)(a1 + 32) + 4 * v21) = v17;
          int v22 = v21 + 1;
        }
        *(_DWORD *)(a1 + 24) = v22;
      }
      uint64_t v16 = v31;
      if (*(void *)a3 <= (unint64_t)v31 || *v31 != 16) {
        goto LABEL_48;
      }
    }
  }
  if (v8 == 18)
  {
    *(void *)&long long v32 = a1 + 24;
    *((void *)&v32 + 1) = sub_18375A0;
    uint64_t v33 = a1 + 8;
    int v34 = 2;
    int v15 = sub_1112E88((uint64_t)a3, v7, &v32);
    goto LABEL_20;
  }
LABEL_13:
  if (v8) {
    BOOL v13 = (v8 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v6)
    {
      uint64_t v14 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unsigned int v7 = v31;
    }
    int v15 = (char *)sub_1885AC0(v8, v14, v7, a3);
LABEL_20:
    uint64_t v31 = v15;
    if (!v15) {
      return 0;
    }
    goto LABEL_48;
  }
  if (!v7) {
    return 0;
  }
  a3[10].i32[0] = v8 - 1;
  return v31;
}

unsigned char *sub_18385A4(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  unint64_t v4 = (unsigned char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= __dst) {
      unint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v6 = *(int *)(a1 + 40);
    *unint64_t v4 = 8;
    v4[1] = v6;
    if (v6 > 0x7F)
    {
      v4[1] = v6 | 0x80;
      unint64_t v7 = v6 >> 7;
      v4[2] = v6 >> 7;
      v4 += 3;
      if (v6 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v8 = v7 >> 14;
          v7 >>= 7;
          *v4++ = v7;
        }
        while (v8);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v9 = *(unsigned int *)(a1 + 24);
  if ((int)v9 >= 1)
  {
    for (uint64_t i = 0; i != v9; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v11 = *(int *)(*(void *)(a1 + 32) + 4 * i);
      *unint64_t v4 = 16;
      v4[1] = v11;
      if (v11 > 0x7F)
      {
        v4[1] = v11 | 0x80;
        unint64_t v12 = v11 >> 7;
        v4[2] = v11 >> 7;
        v4 += 3;
        if (v11 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v13 = v12 >> 14;
            v12 >>= 7;
            *v4++ = v12;
          }
          while (v13);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  uint64_t v14 = *(void *)(a1 + 8);
  if ((v14 & 1) == 0) {
    return v4;
  }
  unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v16 + 31) < 0)
  {
    unint64_t v17 = *(void **)(v16 + 8);
    uint64_t v18 = *(void *)(v16 + 16);
  }
  else
  {
    unint64_t v17 = (void *)(v16 + 8);
    LODWORD(v18) = *(unsigned __int8 *)(v16 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v18)
  {
    uint64_t v19 = (int)v18;
    memcpy(v4, v17, (int)v18);
    v4 += v19;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v17, v18, v4);
}

uint64_t sub_1838774(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 24);
  if (v1)
  {
    int v2 = 0;
    uint64_t v3 = 0;
    do
    {
      int v4 = *(_DWORD *)(*(void *)(a1 + 32) + 4 * v2);
      if (v4 < 0) {
        uint64_t v5 = 10;
      }
      else {
        uint64_t v5 = (9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6;
      }
      v3 += v5;
      ++v2;
    }
    while (v1 != v2);
  }
  else
  {
    uint64_t v3 = 0;
  }
  uint64_t v6 = v3 + v1;
  if (*(unsigned char *)(a1 + 16))
  {
    int v7 = *(_DWORD *)(a1 + 40);
    if (v7 < 0) {
      uint64_t v8 = 11;
    }
    else {
      uint64_t v8 = ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v6 += v8;
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    v6 += v12;
  }
  *(_DWORD *)(a1 + 20) = v6;
  return v6;
}

uint64_t sub_183883C()
{
  return 1;
}

void *sub_1838844@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PlaceSummaryLayoutUnitHours");
}

void *sub_1838854(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_18388C8(void *a1)
{
  sub_1838854(a1);

  operator delete();
}

uint64_t sub_1838900(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 16) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_1838918(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v19 = a2;
  if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
    return v19;
  }
  uint64_t v5 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v6 = v19 + 1;
    unsigned int v7 = *v19;
    if (*v19 < 0)
    {
      unsigned int v8 = v7 + (*v6 << 7);
      unsigned int v7 = v8 - 128;
      if (*v6 < 0)
      {
        uint64_t v6 = (char *)sub_188C180((uint64_t)v19, v8 - 128);
        unsigned int v7 = v9;
      }
      else
      {
        uint64_t v6 = v19 + 2;
      }
    }
    uint64_t v19 = v6;
    if (v7 == 8)
    {
      uint64_t v12 = v6 + 1;
      unint64_t v13 = *v6;
      if (*v6 < 0)
      {
        int v14 = *v12;
        int v15 = v13 + (v14 << 7);
        unint64_t v13 = (v15 - 128);
        if (v14 < 0)
        {
          uint64_t v19 = (char *)sub_188C138((uint64_t)v6, (v15 - 128));
          if (!v19) {
            return 0;
          }
          unint64_t v13 = v16;
          goto LABEL_20;
        }
        uint64_t v12 = v6 + 2;
      }
      uint64_t v19 = v12;
LABEL_20:
      if (v13 > 4)
      {
        if (*v5) {
          unint64_t v17 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          unint64_t v17 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        sub_188C020(1, v13, v17);
      }
      else
      {
        *(_DWORD *)(a1 + 16) |= 1u;
        *(_DWORD *)(a1 + 24) = v13;
      }
      goto LABEL_22;
    }
    if (!v7 || (v7 & 7) == 4) {
      break;
    }
    if (*v5)
    {
      unint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v6 = v19;
    }
    uint64_t v19 = (char *)sub_1885AC0(v7, v11, v6, a3);
    if (!v19) {
      return 0;
    }
LABEL_22:
    if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
      return v19;
    }
  }
  if (v6)
  {
    a3[10].i32[0] = v7 - 1;
    return v19;
  }
  return 0;
}

unsigned char *sub_1838AC0(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (unsigned char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v6 = *(int *)(a1 + 24);
    *int v4 = 8;
    v4[1] = v6;
    if (v6 > 0x7F)
    {
      v4[1] = v6 | 0x80;
      unint64_t v7 = v6 >> 7;
      v4[2] = v6 >> 7;
      v4 += 3;
      if (v6 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v8 = v7 >> 14;
          v7 >>= 7;
          *v4++ = v7;
        }
        while (v8);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    uint64_t v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    uint64_t v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    v4 += v14;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v12, v13, v4);
}

uint64_t sub_1838BE8(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    int v2 = *(_DWORD *)(a1 + 24);
    if (v2 < 0) {
      uint64_t v1 = 11;
    }
    else {
      uint64_t v1 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  else
  {
    uint64_t v1 = 0;
  }
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v5 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    v1 += v6;
  }
  *(_DWORD *)(a1 + 20) = v1;
  return v1;
}

uint64_t sub_1838C5C()
{
  return 1;
}

void *sub_1838C64@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PlaceSummaryLayoutUnitAddress");
}

void *sub_1838C74(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1838CE8(void *a1)
{
  sub_1838C74(a1);

  operator delete();
}

uint64_t sub_1838D20(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(unsigned char *)(result + 16) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_1838D38(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v19 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
    goto LABEL_27;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    unint64_t v7 = v19 + 1;
    unsigned int v8 = *v19;
    if (*v19 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        unint64_t v7 = (char *)sub_188C180((uint64_t)v19, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        unint64_t v7 = v19 + 2;
      }
    }
    uint64_t v19 = v7;
    if (v8 != 8) {
      break;
    }
    uint64_t v13 = v7 + 1;
    uint64_t v14 = *v7;
    if ((*v7 & 0x80000000) == 0) {
      goto LABEL_19;
    }
    int v15 = *v13;
    uint64_t v14 = v14 + (v15 << 7) - 128;
    if ((v15 & 0x80000000) == 0)
    {
      uint64_t v13 = v7 + 2;
LABEL_19:
      uint64_t v19 = v13;
      *(unsigned char *)(a1 + 24) = v14 != 0;
      int v5 = 1;
      goto LABEL_20;
    }
    unint64_t v16 = (char *)sub_188C138((uint64_t)v7, v14);
    uint64_t v19 = v16;
    *(unsigned char *)(a1 + 24) = v17 != 0;
    int v5 = 1;
    if (!v16) {
      goto LABEL_28;
    }
LABEL_20:
    if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
      goto LABEL_27;
    }
  }
  if (v8) {
    BOOL v11 = (v8 & 7) == 4;
  }
  else {
    BOOL v11 = 1;
  }
  if (!v11)
  {
    if (*v6)
    {
      uint64_t v12 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v12 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unint64_t v7 = v19;
    }
    uint64_t v19 = (char *)sub_1885AC0(v8, v12, v7, a3);
    if (!v19) {
      goto LABEL_28;
    }
    goto LABEL_20;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    goto LABEL_27;
  }
LABEL_28:
  uint64_t v19 = 0;
LABEL_27:
  *(_DWORD *)(a1 + 16) |= v5;
  return v19;
}

unsigned char *sub_1838EC8(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (unsigned char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    char v6 = *(unsigned char *)(a1 + 24);
    *int v4 = 8;
    v4[1] = v6;
    v4 += 2;
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v9 + 31) < 0)
  {
    unsigned int v10 = *(void **)(v9 + 8);
    uint64_t v11 = *(void *)(v9 + 16);
  }
  else
  {
    unsigned int v10 = (void *)(v9 + 8);
    LODWORD(v11) = *(unsigned __int8 *)(v9 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v11)
  {
    uint64_t v12 = (int)v11;
    memcpy(v4, v10, (int)v11);
    v4 += v12;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v10, v11, v4);
}

uint64_t sub_1838FAC(uint64_t a1)
{
  uint64_t v1 = 2 * (*(_DWORD *)(a1 + 16) & 1);
  uint64_t v2 = *(void *)(a1 + 8);
  if (v2)
  {
    unint64_t v4 = v2 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v5 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v5 = *(unsigned __int8 *)(v4 + 31);
    }
    v1 += v5;
  }
  *(_DWORD *)(a1 + 20) = v1;
  return v1;
}

uint64_t sub_1838FEC()
{
  return 1;
}

void *sub_1838FF4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PlaceSummaryLayoutUnitRatings");
}

void *sub_1839004(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1839078(void *a1)
{
  sub_1839004(a1);

  operator delete();
}

uint64_t *sub_18390B0(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = (uint64_t *)(a1 + 8);
  if (v2) {
    return (uint64_t *)sub_188B4AC(result);
  }
  return result;
}

char *sub_18390C0(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v12 = a2;
  unint64_t v4 = (uint64_t *)(a1 + 8);
  while (1)
  {
    if (sub_11947B8((uint64_t)a3, &v12, a3[11].i32[1])) {
      return v12;
    }
    uint64_t v5 = v12 + 1;
    unsigned int v6 = *v12;
    if (*v12 < 0)
    {
      unsigned int v7 = v6 + (*v5 << 7);
      unsigned int v6 = v7 - 128;
      if (*v5 < 0)
      {
        uint64_t v5 = (char *)sub_188C180((uint64_t)v12, v7 - 128);
        unsigned int v6 = v8;
      }
      else
      {
        uint64_t v5 = v12 + 2;
      }
    }
    uint64_t v12 = v5;
    if (!v6 || (v6 & 7) == 4) {
      break;
    }
    if (*v4)
    {
      unsigned int v10 = (std::string *)((*v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unsigned int v10 = (std::string *)sub_188DBD8(v4);
      uint64_t v5 = v12;
    }
    uint64_t v12 = (char *)sub_1885AC0(v6, v10, v5, a3);
    if (!v12) {
      return 0;
    }
  }
  if (v5) {
    a3[10].i32[0] = v6 - 1;
  }
  return v5;
}

char *sub_18391C0(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v4 = *(void *)(a1 + 8);
  if ((v4 & 1) == 0) {
    return __dst;
  }
  unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v6 + 31) < 0)
  {
    unsigned int v7 = *(void **)(v6 + 8);
    unint64_t v6 = *(void *)(v6 + 16);
  }
  else
  {
    unsigned int v7 = (void *)(v6 + 8);
    LODWORD(v6) = *(unsigned __int8 *)(v6 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v6)
  {
    uint64_t v8 = (int)v6;
    memcpy(__dst, v7, (int)v6);
    __dst += v8;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v7, v6, __dst);
}

uint64_t sub_1839258(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (v1)
  {
    unint64_t v4 = v1 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v2 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v2 = *(unsigned __int8 *)(v4 + 31);
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  *(_DWORD *)(a1 + 16) = v2;
  return v2;
}

std::string *sub_183928C(std::string *result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 8);
  if (v2) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v2 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_18392A8()
{
  return 1;
}

void *sub_18392B0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PlaceSummaryLayoutUnitTransitShields");
}

void *sub_18392C0(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1839334(void *a1)
{
  sub_18392C0(a1);

  operator delete();
}

uint64_t *sub_183936C(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = (uint64_t *)(a1 + 8);
  if (v2) {
    return (uint64_t *)sub_188B4AC(result);
  }
  return result;
}

char *sub_183937C(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v12 = a2;
  unint64_t v4 = (uint64_t *)(a1 + 8);
  while (1)
  {
    if (sub_11947B8((uint64_t)a3, &v12, a3[11].i32[1])) {
      return v12;
    }
    uint64_t v5 = v12 + 1;
    unsigned int v6 = *v12;
    if (*v12 < 0)
    {
      unsigned int v7 = v6 + (*v5 << 7);
      unsigned int v6 = v7 - 128;
      if (*v5 < 0)
      {
        uint64_t v5 = (char *)sub_188C180((uint64_t)v12, v7 - 128);
        unsigned int v6 = v8;
      }
      else
      {
        uint64_t v5 = v12 + 2;
      }
    }
    uint64_t v12 = v5;
    if (!v6 || (v6 & 7) == 4) {
      break;
    }
    if (*v4)
    {
      unsigned int v10 = (std::string *)((*v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unsigned int v10 = (std::string *)sub_188DBD8(v4);
      uint64_t v5 = v12;
    }
    uint64_t v12 = (char *)sub_1885AC0(v6, v10, v5, a3);
    if (!v12) {
      return 0;
    }
  }
  if (v5) {
    a3[10].i32[0] = v6 - 1;
  }
  return v5;
}

char *sub_183947C(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v4 = *(void *)(a1 + 8);
  if ((v4 & 1) == 0) {
    return __dst;
  }
  unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v6 + 31) < 0)
  {
    unsigned int v7 = *(void **)(v6 + 8);
    unint64_t v6 = *(void *)(v6 + 16);
  }
  else
  {
    unsigned int v7 = (void *)(v6 + 8);
    LODWORD(v6) = *(unsigned __int8 *)(v6 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v6)
  {
    uint64_t v8 = (int)v6;
    memcpy(__dst, v7, (int)v6);
    __dst += v8;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v7, v6, __dst);
}

uint64_t sub_1839514(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (v1)
  {
    unint64_t v4 = v1 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v2 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v2 = *(unsigned __int8 *)(v4 + 31);
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  *(_DWORD *)(a1 + 16) = v2;
  return v2;
}

std::string *sub_1839548(std::string *result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 8);
  if (v2) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v2 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1839564()
{
  return 1;
}

void *sub_183956C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PlaceSummaryLayoutUnitUserGeneratedGuides");
}

void *sub_183957C(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_18395F0(void *a1)
{
  sub_183957C(a1);

  operator delete();
}

uint64_t sub_1839628(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 16) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_1839640(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v19 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
    goto LABEL_27;
  }
  unint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    unsigned int v7 = v19 + 1;
    unsigned int v8 = *v19;
    if (*v19 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        unsigned int v7 = (char *)sub_188C180((uint64_t)v19, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        unsigned int v7 = v19 + 2;
      }
    }
    uint64_t v19 = v7;
    if (v8 != 8) {
      break;
    }
    uint64_t v13 = v7 + 1;
    int v14 = *v7;
    if ((*v7 & 0x80000000) == 0) {
      goto LABEL_19;
    }
    int v15 = *v13;
    int v14 = v14 + (v15 << 7) - 128;
    if ((v15 & 0x80000000) == 0)
    {
      uint64_t v13 = v7 + 2;
LABEL_19:
      uint64_t v19 = v13;
      *(_DWORD *)(a1 + 24) = v14;
      int v5 = 1;
      goto LABEL_20;
    }
    unint64_t v16 = (char *)sub_188C0D0((uint64_t)v7, v14);
    uint64_t v19 = v16;
    *(_DWORD *)(a1 + 24) = v17;
    int v5 = 1;
    if (!v16) {
      goto LABEL_28;
    }
LABEL_20:
    if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
      goto LABEL_27;
    }
  }
  if (v8) {
    BOOL v11 = (v8 & 7) == 4;
  }
  else {
    BOOL v11 = 1;
  }
  if (!v11)
  {
    if (*v6)
    {
      uint64_t v12 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v12 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unsigned int v7 = v19;
    }
    uint64_t v19 = (char *)sub_1885AC0(v8, v12, v7, a3);
    if (!v19) {
      goto LABEL_28;
    }
    goto LABEL_20;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    goto LABEL_27;
  }
LABEL_28:
  uint64_t v19 = 0;
LABEL_27:
  *(_DWORD *)(a1 + 16) |= v5;
  return v19;
}

unsigned char *sub_18397C0(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  unint64_t v4 = (unsigned char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= __dst) {
      unint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v6 = *(_DWORD *)(a1 + 24);
    *unint64_t v4 = 8;
    v4[1] = v6;
    if (v6 > 0x7F)
    {
      v4[1] = v6 | 0x80;
      unsigned int v7 = v6 >> 7;
      v4[2] = v6 >> 7;
      v4 += 3;
      if (v6 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v8 = v7 >> 14;
          v7 >>= 7;
          *v4++ = v7;
        }
        while (v8);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    uint64_t v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    uint64_t v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    v4 += v14;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v12, v13, v4);
}

uint64_t sub_18398E8(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16)) {
    uint64_t v1 = ((9 * (__clz(*(_DWORD *)(a1 + 24) | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  else {
    uint64_t v1 = 0;
  }
  uint64_t v2 = *(void *)(a1 + 8);
  if (v2)
  {
    unint64_t v4 = v2 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v5 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v5 = *(unsigned __int8 *)(v4 + 31);
    }
    v1 += v5;
  }
  *(_DWORD *)(a1 + 20) = v1;
  return v1;
}

uint64_t sub_1839950()
{
  return 1;
}

void *sub_1839958@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PlaceSummaryLayoutUnitCuratedGuides");
}

void *sub_1839968(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_18399DC(void *a1)
{
  sub_1839968(a1);

  operator delete();
}

uint64_t *sub_1839A14(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = (uint64_t *)(a1 + 8);
  if (v2) {
    return (uint64_t *)sub_188B4AC(result);
  }
  return result;
}

char *sub_1839A24(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v12 = a2;
  unint64_t v4 = (uint64_t *)(a1 + 8);
  while (1)
  {
    if (sub_11947B8((uint64_t)a3, &v12, a3[11].i32[1])) {
      return v12;
    }
    uint64_t v5 = v12 + 1;
    unsigned int v6 = *v12;
    if (*v12 < 0)
    {
      unsigned int v7 = v6 + (*v5 << 7);
      unsigned int v6 = v7 - 128;
      if (*v5 < 0)
      {
        uint64_t v5 = (char *)sub_188C180((uint64_t)v12, v7 - 128);
        unsigned int v6 = v8;
      }
      else
      {
        uint64_t v5 = v12 + 2;
      }
    }
    uint64_t v12 = v5;
    if (!v6 || (v6 & 7) == 4) {
      break;
    }
    if (*v4)
    {
      unsigned int v10 = (std::string *)((*v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unsigned int v10 = (std::string *)sub_188DBD8(v4);
      uint64_t v5 = v12;
    }
    uint64_t v12 = (char *)sub_1885AC0(v6, v10, v5, a3);
    if (!v12) {
      return 0;
    }
  }
  if (v5) {
    a3[10].i32[0] = v6 - 1;
  }
  return v5;
}

char *sub_1839B24(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v4 = *(void *)(a1 + 8);
  if ((v4 & 1) == 0) {
    return __dst;
  }
  unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v6 + 31) < 0)
  {
    unsigned int v7 = *(void **)(v6 + 8);
    unint64_t v6 = *(void *)(v6 + 16);
  }
  else
  {
    unsigned int v7 = (void *)(v6 + 8);
    LODWORD(v6) = *(unsigned __int8 *)(v6 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v6)
  {
    uint64_t v8 = (int)v6;
    memcpy(__dst, v7, (int)v6);
    __dst += v8;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v7, v6, __dst);
}

uint64_t sub_1839BBC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (v1)
  {
    unint64_t v4 = v1 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v2 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v2 = *(unsigned __int8 *)(v4 + 31);
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  *(_DWORD *)(a1 + 16) = v2;
  return v2;
}

std::string *sub_1839BF0(std::string *result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 8);
  if (v2) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v2 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1839C0C()
{
  return 1;
}

void *sub_1839C14@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PlaceSummaryLayoutUnitEVChargersNumber");
}

void *sub_1839C24(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1839C98(void *a1)
{
  sub_1839C24(a1);

  operator delete();
}

uint64_t *sub_1839CD0(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = (uint64_t *)(a1 + 8);
  if (v2) {
    return (uint64_t *)sub_188B4AC(result);
  }
  return result;
}

char *sub_1839CE0(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v12 = a2;
  unint64_t v4 = (uint64_t *)(a1 + 8);
  while (1)
  {
    if (sub_11947B8((uint64_t)a3, &v12, a3[11].i32[1])) {
      return v12;
    }
    uint64_t v5 = v12 + 1;
    unsigned int v6 = *v12;
    if (*v12 < 0)
    {
      unsigned int v7 = v6 + (*v5 << 7);
      unsigned int v6 = v7 - 128;
      if (*v5 < 0)
      {
        uint64_t v5 = (char *)sub_188C180((uint64_t)v12, v7 - 128);
        unsigned int v6 = v8;
      }
      else
      {
        uint64_t v5 = v12 + 2;
      }
    }
    uint64_t v12 = v5;
    if (!v6 || (v6 & 7) == 4) {
      break;
    }
    if (*v4)
    {
      unsigned int v10 = (std::string *)((*v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unsigned int v10 = (std::string *)sub_188DBD8(v4);
      uint64_t v5 = v12;
    }
    uint64_t v12 = (char *)sub_1885AC0(v6, v10, v5, a3);
    if (!v12) {
      return 0;
    }
  }
  if (v5) {
    a3[10].i32[0] = v6 - 1;
  }
  return v5;
}

char *sub_1839DE0(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v4 = *(void *)(a1 + 8);
  if ((v4 & 1) == 0) {
    return __dst;
  }
  unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v6 + 31) < 0)
  {
    unsigned int v7 = *(void **)(v6 + 8);
    unint64_t v6 = *(void *)(v6 + 16);
  }
  else
  {
    unsigned int v7 = (void *)(v6 + 8);
    LODWORD(v6) = *(unsigned __int8 *)(v6 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v6)
  {
    uint64_t v8 = (int)v6;
    memcpy(__dst, v7, (int)v6);
    __dst += v8;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v7, v6, __dst);
}

uint64_t sub_1839E78(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (v1)
  {
    unint64_t v4 = v1 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v2 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v2 = *(unsigned __int8 *)(v4 + 31);
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  *(_DWORD *)(a1 + 16) = v2;
  return v2;
}

std::string *sub_1839EAC(std::string *result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 8);
  if (v2) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v2 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1839EC8()
{
  return 1;
}

void *sub_1839ED0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PlaceSummaryLayoutUnitRealTimeEVChargerAvailability");
}

void *sub_1839EE0(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1839F54(void *a1)
{
  sub_1839EE0(a1);

  operator delete();
}

uint64_t *sub_1839F8C(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = (uint64_t *)(a1 + 8);
  if (v2) {
    return (uint64_t *)sub_188B4AC(result);
  }
  return result;
}

char *sub_1839F9C(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v12 = a2;
  unint64_t v4 = (uint64_t *)(a1 + 8);
  while (1)
  {
    if (sub_11947B8((uint64_t)a3, &v12, a3[11].i32[1])) {
      return v12;
    }
    uint64_t v5 = v12 + 1;
    unsigned int v6 = *v12;
    if (*v12 < 0)
    {
      unsigned int v7 = v6 + (*v5 << 7);
      unsigned int v6 = v7 - 128;
      if (*v5 < 0)
      {
        uint64_t v5 = (char *)sub_188C180((uint64_t)v12, v7 - 128);
        unsigned int v6 = v8;
      }
      else
      {
        uint64_t v5 = v12 + 2;
      }
    }
    uint64_t v12 = v5;
    if (!v6 || (v6 & 7) == 4) {
      break;
    }
    if (*v4)
    {
      unsigned int v10 = (std::string *)((*v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unsigned int v10 = (std::string *)sub_188DBD8(v4);
      uint64_t v5 = v12;
    }
    uint64_t v12 = (char *)sub_1885AC0(v6, v10, v5, a3);
    if (!v12) {
      return 0;
    }
  }
  if (v5) {
    a3[10].i32[0] = v6 - 1;
  }
  return v5;
}

char *sub_183A09C(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v4 = *(void *)(a1 + 8);
  if ((v4 & 1) == 0) {
    return __dst;
  }
  unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v6 + 31) < 0)
  {
    unsigned int v7 = *(void **)(v6 + 8);
    unint64_t v6 = *(void *)(v6 + 16);
  }
  else
  {
    unsigned int v7 = (void *)(v6 + 8);
    LODWORD(v6) = *(unsigned __int8 *)(v6 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v6)
  {
    uint64_t v8 = (int)v6;
    memcpy(__dst, v7, (int)v6);
    __dst += v8;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v7, v6, __dst);
}

uint64_t sub_183A134(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (v1)
  {
    unint64_t v4 = v1 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v2 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v2 = *(unsigned __int8 *)(v4 + 31);
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  *(_DWORD *)(a1 + 16) = v2;
  return v2;
}

std::string *sub_183A168(std::string *result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 8);
  if (v2) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v2 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_183A184()
{
  return 1;
}

void *sub_183A18C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PlaceSummaryLayoutUnitDetourTime");
}

void *sub_183A19C(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_183A210(void *a1)
{
  sub_183A19C(a1);

  operator delete();
}

uint64_t *sub_183A248(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = (uint64_t *)(a1 + 8);
  if (v2) {
    return (uint64_t *)sub_188B4AC(result);
  }
  return result;
}

char *sub_183A258(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v12 = a2;
  unint64_t v4 = (uint64_t *)(a1 + 8);
  while (1)
  {
    if (sub_11947B8((uint64_t)a3, &v12, a3[11].i32[1])) {
      return v12;
    }
    uint64_t v5 = v12 + 1;
    unsigned int v6 = *v12;
    if (*v12 < 0)
    {
      unsigned int v7 = v6 + (*v5 << 7);
      unsigned int v6 = v7 - 128;
      if (*v5 < 0)
      {
        uint64_t v5 = (char *)sub_188C180((uint64_t)v12, v7 - 128);
        unsigned int v6 = v8;
      }
      else
      {
        uint64_t v5 = v12 + 2;
      }
    }
    uint64_t v12 = v5;
    if (!v6 || (v6 & 7) == 4) {
      break;
    }
    if (*v4)
    {
      unsigned int v10 = (std::string *)((*v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unsigned int v10 = (std::string *)sub_188DBD8(v4);
      uint64_t v5 = v12;
    }
    uint64_t v12 = (char *)sub_1885AC0(v6, v10, v5, a3);
    if (!v12) {
      return 0;
    }
  }
  if (v5) {
    a3[10].i32[0] = v6 - 1;
  }
  return v5;
}

char *sub_183A358(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v4 = *(void *)(a1 + 8);
  if ((v4 & 1) == 0) {
    return __dst;
  }
  unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v6 + 31) < 0)
  {
    unsigned int v7 = *(void **)(v6 + 8);
    unint64_t v6 = *(void *)(v6 + 16);
  }
  else
  {
    unsigned int v7 = (void *)(v6 + 8);
    LODWORD(v6) = *(unsigned __int8 *)(v6 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v6)
  {
    uint64_t v8 = (int)v6;
    memcpy(__dst, v7, (int)v6);
    __dst += v8;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v7, v6, __dst);
}

uint64_t sub_183A3F0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (v1)
  {
    unint64_t v4 = v1 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v2 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v2 = *(unsigned __int8 *)(v4 + 31);
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  *(_DWORD *)(a1 + 16) = v2;
  return v2;
}

std::string *sub_183A424(std::string *result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 8);
  if (v2) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v2 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_183A440()
{
  return 1;
}

void *sub_183A448@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PlaceSummaryLayoutUnitUGCUserSubmittedRecommendations");
}

uint64_t sub_183A458(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  unint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_254CDB0)
  {
    uint64_t v6 = *(void *)(a1 + 24);
    if (v6)
    {
      sub_184AFBC(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_183A510(uint64_t a1)
{
  sub_183A458(a1);

  operator delete();
}

unsigned char *sub_183A548(unsigned char *result)
{
  uint64_t v1 = result;
  int v2 = *((_DWORD *)result + 4);
  if (v2) {
    uint64_t result = sub_16CD894(*((void *)result + 3));
  }
  if ((v2 & 0xE) != 0)
  {
    *((_DWORD *)v1 + 10) = 0;
    *((void *)v1 + 4) = 0;
  }
  char v4 = v1[8];
  uint64_t v3 = v1 + 8;
  *((_DWORD *)v3 + 2) = 0;
  if (v4)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_183A5B4(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v33 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v33, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unsigned int v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = v33 + 1;
    unsigned int v9 = *v33;
    if (*v33 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v33, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v33 + 2;
      }
    }
    uint64_t v33 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_32;
        }
        uint64_t v12 = v8 + 1;
        unint64_t v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        int v15 = v13 + (v14 << 7);
        unint64_t v13 = (v15 - 128);
        if (v14 < 0)
        {
          uint64_t v33 = (char *)sub_188C138((uint64_t)v8, (v15 - 128));
          if (!v33) {
            goto LABEL_55;
          }
          unint64_t v13 = v27;
        }
        else
        {
          uint64_t v12 = v8 + 2;
LABEL_13:
          uint64_t v33 = v12;
        }
        if (v13 > 4)
        {
          if (*v7) {
            long long v32 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            long long v32 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(1, v13, v32);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 2u;
          *(_DWORD *)(a1 + 32) = v13;
        }
        goto LABEL_40;
      case 2u:
        if (v9 != 16) {
          goto LABEL_32;
        }
        v5 |= 4u;
        unint64_t v16 = v8 + 1;
        int v17 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_20;
        }
        int v18 = *v16;
        int v17 = v17 + (v18 << 7) - 128;
        if (v18 < 0)
        {
          int v28 = (char *)sub_188C0D0((uint64_t)v8, v17);
          uint64_t v33 = v28;
          *(_DWORD *)(a1 + 36) = v29;
          if (!v28) {
            goto LABEL_55;
          }
        }
        else
        {
          unint64_t v16 = v8 + 2;
LABEL_20:
          uint64_t v33 = v16;
          *(_DWORD *)(a1 + 36) = v17;
        }
        goto LABEL_40;
      case 3u:
        if (v9 != 24) {
          goto LABEL_32;
        }
        v5 |= 8u;
        uint64_t v19 = v8 + 1;
        int v20 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_25;
        }
        int v21 = *v19;
        int v20 = v20 + (v21 << 7) - 128;
        if (v21 < 0)
        {
          uint64_t v30 = (char *)sub_188C0D0((uint64_t)v8, v20);
          uint64_t v33 = v30;
          *(_DWORD *)(a1 + 40) = v31;
          if (!v30) {
            goto LABEL_55;
          }
        }
        else
        {
          uint64_t v19 = v8 + 2;
LABEL_25:
          uint64_t v33 = v19;
          *(_DWORD *)(a1 + 40) = v20;
        }
        goto LABEL_40;
      case 4u:
        if (v9 != 34) {
          goto LABEL_32;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v22 = *(void *)(a1 + 24);
        if (!v22)
        {
          unint64_t v23 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            unint64_t v23 = (void *)*v23;
          }
          uint64_t v22 = sub_185089C((uint64_t)v23);
          *(void *)(a1 + 24) = v22;
          uint64_t v8 = v33;
        }
        uint64_t v24 = sub_12688D0(a3, v22, (unsigned __int8 *)v8);
        goto LABEL_39;
      default:
LABEL_32:
        if (v9) {
          BOOL v25 = (v9 & 7) == 4;
        }
        else {
          BOOL v25 = 1;
        }
        if (!v25)
        {
          if (*v7)
          {
            unint64_t v26 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            unint64_t v26 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = v33;
          }
          uint64_t v24 = (char *)sub_1885AC0(v9, v26, v8, a3);
LABEL_39:
          uint64_t v33 = v24;
          if (!v24) {
            goto LABEL_55;
          }
LABEL_40:
          if (sub_11947B8((uint64_t)a3, &v33, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_55:
        }
          uint64_t v33 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v33;
    }
  }
}

char *sub_183A8C4(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  char v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= __dst) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 32);
    *char v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 36);
    *char v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v13 = *(_DWORD *)(a1 + 40);
    *char v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unsigned int v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v16 = *(void *)(a1 + 24);
    *char v4 = 34;
    unsigned int v17 = *(_DWORD *)(v16 + 44);
    v4[1] = v17;
    if (v17 > 0x7F) {
      int v18 = sub_188A9CC(v17, v4 + 1);
    }
    else {
      int v18 = v4 + 2;
    }
    char v4 = sub_184B3AC(v16, v18, a3);
  }
  uint64_t v19 = *(void *)(a1 + 8);
  if ((v19 & 1) == 0) {
    return v4;
  }
  unint64_t v21 = v19 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v21 + 31) < 0)
  {
    uint64_t v22 = *(void **)(v21 + 8);
    uint64_t v23 = *(void *)(v21 + 16);
  }
  else
  {
    uint64_t v22 = (void *)(v21 + 8);
    LODWORD(v23) = *(unsigned __int8 *)(v21 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v23)
  {
    uint64_t v24 = (int)v23;
    memcpy(v4, v22, (int)v23);
    v4 += v24;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v22, v23, v4);
}

uint64_t sub_183AB48(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0xF) == 0)
  {
    uint64_t result = 0;
    goto LABEL_14;
  }
  if (v2)
  {
    uint64_t v4 = sub_184B568(*(void *)(a1 + 24));
    uint64_t result = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_11;
    }
  }
  else
  {
    uint64_t result = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_11;
    }
  }
  int v5 = *(_DWORD *)(a1 + 32);
  if (v5 < 0) {
    uint64_t v6 = 11;
  }
  else {
    uint64_t v6 = ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  result += v6;
LABEL_11:
  if ((v2 & 4) == 0)
  {
    if ((v2 & 8) == 0) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  result += ((9 * (__clz(*(_DWORD *)(a1 + 36) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 8) != 0) {
LABEL_13:
  }
    result += ((9 * (__clz(*(_DWORD *)(a1 + 40) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_14:
  uint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    unint64_t v8 = v7 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v8 + 31) < 0) {
      uint64_t v9 = *(void *)(v8 + 16);
    }
    else {
      uint64_t v9 = *(unsigned __int8 *)(v8 + 31);
    }
    result += v9;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

void sub_183AC70(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0xF) != 0)
  {
    if (v4)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v6 = *(void *)(a1 + 24);
      if (!v6)
      {
        uint64_t v7 = *(void *)(a1 + 8);
        unint64_t v8 = (void *)(v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (v7) {
          unint64_t v8 = (void *)*v8;
        }
        uint64_t v6 = sub_185089C((uint64_t)v8);
        *(void *)(a1 + 24) = v6;
      }
      if (*(void *)(a2 + 24)) {
        uint64_t v9 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        uint64_t v9 = &off_254D2B0;
      }
      sub_16CE3CC(v6, (uint64_t)v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_21;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0)
      {
LABEL_7:
        *(_DWORD *)(a1 + 16) |= v4;
        goto LABEL_8;
      }
LABEL_6:
      *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
      goto LABEL_7;
    }
LABEL_21:
    *(_DWORD *)(a1 + 36) = *(_DWORD *)(a2 + 36);
    if ((v4 & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_8:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_183AD68(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 1;
  }
  uint64_t result = sub_16CE508(*(void *)(a1 + 24));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_183AD94@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PlaceSummaryLayoutUnitString.PlaceSummaryFormat");
}

uint64_t sub_183ADA4(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_13;
    }
  }
  else if (v4)
  {
    goto LABEL_13;
  }
  uint64_t v5 = (void ***)(a1 + 72);
  if (*(uint64_t **)(a1 + 72) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 80) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 80));
  }
  if (*(uint64_t **)(a1 + 88) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 88));
  }
  if (*(uint64_t **)(a1 + 96) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 96));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_13:
  sub_187AAA0((void *)(a1 + 48));
  sub_187AA20((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_183AE9C(uint64_t a1)
{
  sub_183ADA4(a1);

  operator delete();
}

uint64_t sub_183AED4(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (unsigned char **)(*(void *)(result + 40) + 8);
    do
    {
      int v4 = *v3++;
      uint64_t result = (uint64_t)sub_183A548(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  uint64_t v5 = *(unsigned int *)(v1 + 56);
  if ((int)v5 >= 1)
  {
    uint64_t v6 = (uint64_t *)(*(void *)(v1 + 64) + 8);
    do
    {
      uint64_t v7 = *v6++;
      uint64_t result = sub_1369BB4(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(v1 + 56) = 0;
  }
  int v8 = *(_DWORD *)(v1 + 16);
  if ((v8 & 0xF) != 0)
  {
    if ((v8 & 1) == 0)
    {
      if ((v8 & 2) == 0) {
        goto LABEL_12;
      }
LABEL_19:
      unint64_t v10 = *(void *)(v1 + 80) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v10 + 23) < 0)
      {
        **(unsigned char **)unint64_t v10 = 0;
        *(void *)(v10 + 8) = 0;
        if ((v8 & 4) != 0) {
          goto LABEL_23;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v10 = 0;
        *(unsigned char *)(v10 + 23) = 0;
        if ((v8 & 4) != 0) {
          goto LABEL_23;
        }
      }
LABEL_13:
      if ((v8 & 8) == 0) {
        goto LABEL_30;
      }
LABEL_27:
      unint64_t v12 = *(void *)(v1 + 96) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v12 + 23) < 0)
      {
        **(unsigned char **)unint64_t v12 = 0;
        *(void *)(v12 + 8) = 0;
      }
      else
      {
        *(unsigned char *)unint64_t v12 = 0;
        *(unsigned char *)(v12 + 23) = 0;
      }
      goto LABEL_30;
    }
    unint64_t v9 = *(void *)(v1 + 72) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v9 + 23) < 0)
    {
      **(unsigned char **)unint64_t v9 = 0;
      *(void *)(v9 + 8) = 0;
      if ((v8 & 2) != 0) {
        goto LABEL_19;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v9 = 0;
      *(unsigned char *)(v9 + 23) = 0;
      if ((v8 & 2) != 0) {
        goto LABEL_19;
      }
    }
LABEL_12:
    if ((v8 & 4) == 0) {
      goto LABEL_13;
    }
LABEL_23:
    unint64_t v11 = *(void *)(v1 + 88) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v11 + 23) < 0)
    {
      **(unsigned char **)unint64_t v11 = 0;
      *(void *)(v11 + 8) = 0;
      if ((v8 & 8) == 0) {
        goto LABEL_30;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v11 = 0;
      *(unsigned char *)(v11 + 23) = 0;
      if ((v8 & 8) == 0) {
        goto LABEL_30;
      }
    }
    goto LABEL_27;
  }
LABEL_30:
  if ((v8 & 0x30) != 0)
  {
    *(unsigned char *)(v1 + 108) = 0;
    *(_DWORD *)(v1 + 104) = 0;
  }
  char v14 = *(unsigned char *)(v1 + 8);
  uint64_t v13 = v1 + 8;
  *(_DWORD *)(v13 + 8) = 0;
  if (v14)
  {
    return sub_188B4AC((uint64_t *)v13);
  }
  return result;
}

uint64_t sub_183B064(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v44 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v44, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v43 = (uint64_t *)(a1 + 8);
  while (2)
  {
    uint64_t v7 = (char *)(*(void *)v44 + 1);
    unsigned int v8 = **(unsigned char **)v44;
    if ((char)**(unsigned char **)v44 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180(*(uint64_t *)v44, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (char *)(*(void *)v44 + 2);
      }
    }
    *(void *)uint64_t v44 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 10) {
          goto LABEL_59;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v11 = *(void *)(a1 + 8);
        unint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
        if (v11) {
          unint64_t v12 = (uint64_t *)*v12;
        }
        uint64_t v13 = (void *)(a1 + 72);
        goto LABEL_45;
      case 2u:
        if (v8 != 18) {
          goto LABEL_59;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v14 = *(void *)(a1 + 8);
        unint64_t v12 = (uint64_t *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
        if (v14) {
          unint64_t v12 = (uint64_t *)*v12;
        }
        uint64_t v13 = (void *)(a1 + 80);
        goto LABEL_45;
      case 3u:
        if (v8 != 26) {
          goto LABEL_59;
        }
        unsigned int v15 = v7 - 1;
        while (1)
        {
          uint64_t v16 = (unsigned __int8 *)(v15 + 1);
          *(void *)uint64_t v44 = v15 + 1;
          unsigned int v17 = *(_DWORD **)(a1 + 40);
          if (v17 && (uint64_t v18 = *(int *)(a1 + 32), (int)v18 < *v17))
          {
            *(_DWORD *)(a1 + 32) = v18 + 1;
            uint64_t v19 = *(void *)&v17[2 * v18 + 2];
          }
          else
          {
            uint64_t v20 = sub_1849128(*(void *)(a1 + 24));
            uint64_t v19 = sub_188CDC8(a1 + 24, v20);
            uint64_t v16 = *(unsigned __int8 **)v44;
          }
          unsigned int v15 = sub_183B4CC(a3, v19, v16);
          *(void *)uint64_t v44 = v15;
          if (!v15) {
            goto LABEL_73;
          }
          if (*(void *)a3 <= (unint64_t)v15 || *v15 != 26) {
            goto LABEL_47;
          }
        }
      case 4u:
        if (v8 != 32) {
          goto LABEL_59;
        }
        v5 |= 0x10u;
        unint64_t v21 = v7 + 1;
        int v22 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_31;
        }
        int v23 = *v21;
        int v22 = v22 + (v23 << 7) - 128;
        if (v23 < 0)
        {
          uint64_t v39 = sub_188C0D0((uint64_t)v7, v22);
          *(void *)uint64_t v44 = v39;
          *(_DWORD *)(a1 + 104) = v40;
          if (!v39) {
            goto LABEL_73;
          }
        }
        else
        {
          unint64_t v21 = v7 + 2;
LABEL_31:
          *(void *)uint64_t v44 = v21;
          *(_DWORD *)(a1 + 104) = v22;
        }
        goto LABEL_47;
      case 5u:
        if (v8 != 40) {
          goto LABEL_59;
        }
        v5 |= 0x20u;
        uint64_t v24 = v7 + 1;
        uint64_t v25 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_36;
        }
        int v26 = *v24;
        uint64_t v25 = v25 + (v26 << 7) - 128;
        if (v26 < 0)
        {
          uint64_t v41 = sub_188C138((uint64_t)v7, v25);
          *(void *)uint64_t v44 = v41;
          *(unsigned char *)(a1 + 108) = v42 != 0;
          if (!v41) {
            goto LABEL_73;
          }
        }
        else
        {
          uint64_t v24 = v7 + 2;
LABEL_36:
          *(void *)uint64_t v44 = v24;
          *(unsigned char *)(a1 + 108) = v25 != 0;
        }
        goto LABEL_47;
      case 6u:
        if (v8 != 50) {
          goto LABEL_59;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v27 = *(void *)(a1 + 8);
        unint64_t v12 = (uint64_t *)(v27 & 0xFFFFFFFFFFFFFFFCLL);
        if (v27) {
          unint64_t v12 = (uint64_t *)*v12;
        }
        uint64_t v13 = (void *)(a1 + 88);
        goto LABEL_45;
      case 7u:
        if (v8 != 58) {
          goto LABEL_59;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v28 = *(void *)(a1 + 8);
        unint64_t v12 = (uint64_t *)(v28 & 0xFFFFFFFFFFFFFFFCLL);
        if (v28) {
          unint64_t v12 = (uint64_t *)*v12;
        }
        uint64_t v13 = (void *)(a1 + 96);
LABEL_45:
        int v29 = (std::string *)sub_1880F84(v13, v12);
        uint64_t v30 = (void *)sub_188C244(v29, *(char **)v44, (uint64_t)a3);
        goto LABEL_46;
      case 8u:
        if (v8 != 66) {
          goto LABEL_59;
        }
        int v31 = v7 - 1;
        while (1)
        {
          long long v32 = (unsigned __int8 *)(v31 + 1);
          *(void *)uint64_t v44 = v31 + 1;
          uint64_t v33 = *(_DWORD **)(a1 + 64);
          if (v33 && (uint64_t v34 = *(int *)(a1 + 56), (int)v34 < *v33))
          {
            *(_DWORD *)(a1 + 56) = v34 + 1;
            uint64_t v35 = *(void *)&v33[2 * v34 + 2];
          }
          else
          {
            int v36 = sub_1478C60(*(void *)(a1 + 48));
            uint64_t v35 = sub_188CDC8(a1 + 48, (uint64_t)v36);
            long long v32 = *(unsigned __int8 **)v44;
          }
          int v31 = sub_129760C(a3, v35, v32);
          *(void *)uint64_t v44 = v31;
          if (!v31) {
            goto LABEL_73;
          }
          if (*(void *)a3 <= (unint64_t)v31 || *v31 != 66) {
            goto LABEL_47;
          }
        }
      default:
LABEL_59:
        if (v8) {
          BOOL v37 = (v8 & 7) == 4;
        }
        else {
          BOOL v37 = 1;
        }
        if (!v37)
        {
          if (*v43)
          {
            uint64_t v38 = (std::string *)((*v43 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v38 = (std::string *)sub_188DBD8(v43);
            uint64_t v7 = *(char **)v44;
          }
          uint64_t v30 = sub_1885AC0(v8, v38, v7, a3);
LABEL_46:
          *(void *)uint64_t v44 = v30;
          if (!v30) {
            goto LABEL_73;
          }
LABEL_47:
          if (sub_11947B8((uint64_t)a3, (char **)v44, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v7) {
          a3[10].i32[0] = v8 - 1;
        }
        else {
LABEL_73:
        }
          *(void *)uint64_t v44 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v44;
    }
  }
}

char *sub_183B4CC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_183A5B4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_183B55C(uint64_t a1, unsigned char *__dst, void *a3)
{
  int v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    int v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 2) != 0) {
    int v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  int v7 = *(_DWORD *)(a1 + 32);
  if (v7)
  {
    for (int i = 0; i != v7; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *int v4 = 26;
      unsigned int v10 = *(_DWORD *)(v9 + 20);
      v4[1] = v10;
      if (v10 > 0x7F) {
        uint64_t v11 = sub_188A9CC(v10, v4 + 1);
      }
      else {
        uint64_t v11 = v4 + 2;
      }
      int v4 = sub_183A8C4(v9, (unint64_t)v11, a3);
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v12 = *(_DWORD *)(a1 + 104);
    *int v4 = 32;
    v4[1] = v12;
    if (v12 > 0x7F)
    {
      v4[1] = v12 | 0x80;
      unsigned int v13 = v12 >> 7;
      v4[2] = v12 >> 7;
      v4 += 3;
      if (v12 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v14 = v13 >> 14;
          v13 >>= 7;
          *v4++ = v13;
        }
        while (v14);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v22 = *(unsigned char *)(a1 + 108);
    *int v4 = 40;
    v4[1] = v22;
    v4 += 2;
    if ((v6 & 4) == 0)
    {
LABEL_22:
      if ((v6 & 8) == 0) {
        goto LABEL_24;
      }
      goto LABEL_23;
    }
  }
  else if ((v6 & 4) == 0)
  {
    goto LABEL_22;
  }
  int v4 = sub_117A0AC(a3, 6, (const void **)(*(void *)(a1 + 88) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 8) != 0) {
LABEL_23:
  }
    int v4 = sub_117A0AC(a3, 7, (const void **)(*(void *)(a1 + 96) & 0xFFFFFFFFFFFFFFFELL), v4);
LABEL_24:
  int v15 = *(_DWORD *)(a1 + 56);
  if (v15)
  {
    for (int j = 0; j != v15; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v17 = *(void *)(*(void *)(a1 + 64) + 8 * j + 8);
      *int v4 = 66;
      unsigned int v18 = *(_DWORD *)(v17 + 44);
      v4[1] = v18;
      if (v18 > 0x7F) {
        uint64_t v19 = sub_188A9CC(v18, v4 + 1);
      }
      else {
        uint64_t v19 = v4 + 2;
      }
      int v4 = sub_1460138(v17, v19, a3);
    }
  }
  uint64_t v20 = *(void *)(a1 + 8);
  if ((v20 & 1) == 0) {
    return v4;
  }
  unint64_t v23 = v20 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v23 + 31) < 0)
  {
    uint64_t v24 = *(void **)(v23 + 8);
    uint64_t v25 = *(void *)(v23 + 16);
  }
  else
  {
    uint64_t v24 = (void *)(v23 + 8);
    LODWORD(v25) = *(unsigned __int8 *)(v23 + 31);
  }
  if (*a3 - (void)v4 >= (int)v25)
  {
    uint64_t v26 = (int)v25;
    memcpy(v4, v24, (int)v25);
    v4 += v26;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v24, v25, v4);
}

uint64_t sub_183B868(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    int v4 = (uint64_t *)(v3 + 8);
  }
  else {
    int v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_183AB48(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(int *)(a1 + 56);
  uint64_t v9 = v2 + v8;
  uint64_t v10 = *(void *)(a1 + 64);
  if (v10) {
    uint64_t v11 = (uint64_t *)(v10 + 8);
  }
  else {
    uint64_t v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_1460320(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  int v15 = *(_DWORD *)(a1 + 16);
  if ((v15 & 0x3F) != 0)
  {
    if (v15)
    {
      unint64_t v18 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v19 = *(unsigned __int8 *)(v18 + 23);
      uint64_t v20 = *(void *)(v18 + 8);
      if ((v19 & 0x80u) == 0) {
        uint64_t v20 = v19;
      }
      v9 += v20 + ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v15 & 2) == 0)
      {
LABEL_18:
        if ((v15 & 4) == 0) {
          goto LABEL_19;
        }
        goto LABEL_32;
      }
    }
    else if ((v15 & 2) == 0)
    {
      goto LABEL_18;
    }
    unint64_t v21 = *(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v22 = *(unsigned __int8 *)(v21 + 23);
    uint64_t v23 = *(void *)(v21 + 8);
    if ((v22 & 0x80u) == 0) {
      uint64_t v23 = v22;
    }
    v9 += v23 + ((9 * (__clz(v23 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v15 & 4) == 0)
    {
LABEL_19:
      if ((v15 & 8) == 0) {
        goto LABEL_20;
      }
      goto LABEL_35;
    }
LABEL_32:
    unint64_t v24 = *(void *)(a1 + 88) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v25 = *(unsigned __int8 *)(v24 + 23);
    uint64_t v26 = *(void *)(v24 + 8);
    if ((v25 & 0x80u) == 0) {
      uint64_t v26 = v25;
    }
    v9 += v26 + ((9 * (__clz(v26 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v15 & 8) == 0)
    {
LABEL_20:
      if ((v15 & 0x10) == 0) {
        goto LABEL_22;
      }
      goto LABEL_21;
    }
LABEL_35:
    unint64_t v27 = *(void *)(a1 + 96) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v28 = *(unsigned __int8 *)(v27 + 23);
    uint64_t v29 = *(void *)(v27 + 8);
    if ((v28 & 0x80u) == 0) {
      uint64_t v29 = v28;
    }
    v9 += v29 + ((9 * (__clz(v29 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v15 & 0x10) == 0) {
      goto LABEL_22;
    }
LABEL_21:
    v9 += ((9 * (__clz(*(_DWORD *)(a1 + 104) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_22:
    if ((v15 & 0x20) != 0) {
      v9 += 2;
    }
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if (v16)
  {
    unint64_t v30 = v16 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v30 + 31) < 0) {
      uint64_t v31 = *(void *)(v30 + 16);
    }
    else {
      uint64_t v31 = *(unsigned __int8 *)(v30 + 31);
    }
    v9 += v31;
  }
  *(_DWORD *)(a1 + 20) = v9;
  return v9;
}

void sub_183BACC(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_187AE20((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    uint64_t v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    uint64_t v11 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_187AEAC((uint64_t *)(a1 + 48), v11, v10, v9, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v12 = *(_DWORD *)(a1 + 56) + v9;
    *(_DWORD *)(a1 + 56) = v12;
    uint64_t v13 = *(int **)(a1 + 64);
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 16);
  if ((v14 & 0x3F) != 0)
  {
    if (v14)
    {
      uint64_t v16 = (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v17 = *(void *)(a1 + 8);
      unint64_t v18 = (uint64_t *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
      if (v17) {
        unint64_t v18 = (uint64_t *)*v18;
      }
      sub_1881DF4((std::string **)(a1 + 72), v16, v18);
      if ((v14 & 2) == 0)
      {
LABEL_10:
        if ((v14 & 4) == 0) {
          goto LABEL_11;
        }
        goto LABEL_26;
      }
    }
    else if ((v14 & 2) == 0)
    {
      goto LABEL_10;
    }
    uint64_t v19 = (long long *)(*(void *)(a2 + 80) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v20 = *(void *)(a1 + 8);
    unint64_t v21 = (uint64_t *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
    if (v20) {
      unint64_t v21 = (uint64_t *)*v21;
    }
    sub_1881DF4((std::string **)(a1 + 80), v19, v21);
    if ((v14 & 4) == 0)
    {
LABEL_11:
      if ((v14 & 8) == 0) {
        goto LABEL_12;
      }
      goto LABEL_29;
    }
LABEL_26:
    uint64_t v22 = (long long *)(*(void *)(a2 + 88) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 4u;
    uint64_t v23 = *(void *)(a1 + 8);
    unint64_t v24 = (uint64_t *)(v23 & 0xFFFFFFFFFFFFFFFCLL);
    if (v23) {
      unint64_t v24 = (uint64_t *)*v24;
    }
    sub_1881DF4((std::string **)(a1 + 88), v22, v24);
    if ((v14 & 8) == 0)
    {
LABEL_12:
      if ((v14 & 0x10) == 0) {
        goto LABEL_13;
      }
      goto LABEL_32;
    }
LABEL_29:
    uint64_t v25 = (long long *)(*(void *)(a2 + 96) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 8u;
    uint64_t v26 = *(void *)(a1 + 8);
    unint64_t v27 = (uint64_t *)(v26 & 0xFFFFFFFFFFFFFFFCLL);
    if (v26) {
      unint64_t v27 = (uint64_t *)*v27;
    }
    sub_1881DF4((std::string **)(a1 + 96), v25, v27);
    if ((v14 & 0x10) == 0)
    {
LABEL_13:
      if ((v14 & 0x20) == 0)
      {
LABEL_15:
        *(_DWORD *)(a1 + 16) |= v14;
        goto LABEL_16;
      }
LABEL_14:
      *(unsigned char *)(a1 + 108) = *(unsigned char *)(a2 + 108);
      goto LABEL_15;
    }
LABEL_32:
    *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
    if ((v14 & 0x20) == 0) {
      goto LABEL_15;
    }
    goto LABEL_14;
  }
LABEL_16:
  uint64_t v15 = *(void *)(a2 + 8);
  if (v15)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v15 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

BOOL sub_183BD18(uint64_t a1)
{
  if (!sub_183BD80(a1 + 24)) {
    return 0;
  }
  uint64_t v2 = *(unsigned int *)(a1 + 56);
  do
  {
    BOOL v3 = (int)v2 < 1;
    if ((int)v2 < 1) {
      break;
    }
    uint64_t v4 = v2 - 1;
    char v5 = sub_136AEA0(*(void *)(*(void *)(a1 + 64) + 8 * v2));
    uint64_t v2 = v4;
  }
  while ((v5 & 1) != 0);
  return v3;
}

uint64_t sub_183BD80(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 8);
  if ((int)v1 < 1) {
    return 1;
  }
  uint64_t v3 = v1 + 1;
  for (unsigned int i = v1 - 1; ; --i)
  {
    uint64_t v5 = *(void *)(*(void *)(a1 + 16) + 8 * i + 8);
    if (*(unsigned char *)(v5 + 16))
    {
      uint64_t result = sub_16CE508(*(void *)(v5 + 24));
      if (!result) {
        break;
      }
    }
    if (--v3 <= 1) {
      return 1;
    }
  }
  return result;
}

void *sub_183BDF0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PlaceSummaryLayoutUnitString");
}

void *sub_183BE00(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_183BE74(void *a1)
{
  sub_183BE00(a1);

  operator delete();
}

uint64_t sub_183BEAC(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 16) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_183BEC4(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v19 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
    goto LABEL_27;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    int v7 = v19 + 1;
    unsigned int v8 = *v19;
    if (*v19 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        int v7 = (char *)sub_188C180((uint64_t)v19, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        int v7 = v19 + 2;
      }
    }
    uint64_t v19 = v7;
    if (v8 != 8) {
      break;
    }
    uint64_t v13 = v7 + 1;
    int v14 = *v7;
    if ((*v7 & 0x80000000) == 0) {
      goto LABEL_19;
    }
    int v15 = *v13;
    int v14 = v14 + (v15 << 7) - 128;
    if ((v15 & 0x80000000) == 0)
    {
      uint64_t v13 = v7 + 2;
LABEL_19:
      uint64_t v19 = v13;
      *(_DWORD *)(a1 + 24) = v14;
      int v5 = 1;
      goto LABEL_20;
    }
    uint64_t v16 = (char *)sub_188C0D0((uint64_t)v7, v14);
    uint64_t v19 = v16;
    *(_DWORD *)(a1 + 24) = v17;
    int v5 = 1;
    if (!v16) {
      goto LABEL_28;
    }
LABEL_20:
    if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
      goto LABEL_27;
    }
  }
  if (v8) {
    BOOL v11 = (v8 & 7) == 4;
  }
  else {
    BOOL v11 = 1;
  }
  if (!v11)
  {
    if (*v6)
    {
      int v12 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      int v12 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v7 = v19;
    }
    uint64_t v19 = (char *)sub_1885AC0(v8, v12, v7, a3);
    if (!v19) {
      goto LABEL_28;
    }
    goto LABEL_20;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    goto LABEL_27;
  }
LABEL_28:
  uint64_t v19 = 0;
LABEL_27:
  *(_DWORD *)(a1 + 16) |= v5;
  return v19;
}

unsigned char *sub_183C044(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v6 = *(_DWORD *)(a1 + 24);
    *uint64_t v4 = 8;
    v4[1] = v6;
    if (v6 > 0x7F)
    {
      v4[1] = v6 | 0x80;
      unsigned int v7 = v6 >> 7;
      v4[2] = v6 >> 7;
      v4 += 3;
      if (v6 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v8 = v7 >> 14;
          v7 >>= 7;
          *v4++ = v7;
        }
        while (v8);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    int v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    int v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    v4 += v14;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v12, v13, v4);
}

uint64_t sub_183C16C(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16)) {
    uint64_t v1 = ((9 * (__clz(*(_DWORD *)(a1 + 24) | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  else {
    uint64_t v1 = 0;
  }
  uint64_t v2 = *(void *)(a1 + 8);
  if (v2)
  {
    unint64_t v4 = v2 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v5 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v5 = *(unsigned __int8 *)(v4 + 31);
    }
    v1 += v5;
  }
  *(_DWORD *)(a1 + 20) = v1;
  return v1;
}

uint64_t sub_183C1D4()
{
  return 1;
}

void *sub_183C1DC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PlaceSummaryLayoutUnitServerOverride");
}

void *sub_183C1EC(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_183C260(void *a1)
{
  sub_183C1EC(a1);

  operator delete();
}

uint64_t sub_183C298(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 16) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_183C2B0(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v19 = a2;
  if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
    return v19;
  }
  uint64_t v5 = (void *)(a1 + 8);
  while (1)
  {
    unsigned int v6 = v19 + 1;
    unsigned int v7 = *v19;
    if (*v19 < 0)
    {
      unsigned int v8 = v7 + (*v6 << 7);
      unsigned int v7 = v8 - 128;
      if (*v6 < 0)
      {
        unsigned int v6 = (char *)sub_188C180((uint64_t)v19, v8 - 128);
        unsigned int v7 = v9;
      }
      else
      {
        unsigned int v6 = v19 + 2;
      }
    }
    uint64_t v19 = v6;
    if (v7 == 8)
    {
      int v12 = v6 + 1;
      unint64_t v13 = *v6;
      if (*v6 < 0)
      {
        int v14 = *v12;
        int v15 = v13 + (v14 << 7);
        unint64_t v13 = (v15 - 128);
        if (v14 < 0)
        {
          uint64_t v19 = (char *)sub_188C138((uint64_t)v6, (v15 - 128));
          if (!v19) {
            return 0;
          }
          unint64_t v13 = v16;
          goto LABEL_20;
        }
        int v12 = v6 + 2;
      }
      uint64_t v19 = v12;
LABEL_20:
      if (v13 > 4)
      {
        if (*v5) {
          int v17 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          int v17 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        sub_188C020(1, v13, v17);
      }
      else
      {
        *(_DWORD *)(a1 + 16) |= 1u;
        *(_DWORD *)(a1 + 24) = v13;
      }
      goto LABEL_22;
    }
    if (!v7 || (v7 & 7) == 4) {
      break;
    }
    if (*v5)
    {
      unint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unsigned int v6 = v19;
    }
    uint64_t v19 = (char *)sub_1885AC0(v7, v11, v6, a3);
    if (!v19) {
      return 0;
    }
LABEL_22:
    if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
      return v19;
    }
  }
  if (v6)
  {
    a3[10].i32[0] = v7 - 1;
    return v19;
  }
  return 0;
}

unsigned char *sub_183C458(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  unint64_t v4 = (unsigned char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= __dst) {
      unint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v6 = *(int *)(a1 + 24);
    *unint64_t v4 = 8;
    v4[1] = v6;
    if (v6 > 0x7F)
    {
      v4[1] = v6 | 0x80;
      unint64_t v7 = v6 >> 7;
      v4[2] = v6 >> 7;
      v4 += 3;
      if (v6 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v8 = v7 >> 14;
          v7 >>= 7;
          *v4++ = v7;
        }
        while (v8);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    int v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    int v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    v4 += v14;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v12, v13, v4);
}

uint64_t sub_183C580(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    int v2 = *(_DWORD *)(a1 + 24);
    if (v2 < 0) {
      uint64_t v1 = 11;
    }
    else {
      uint64_t v1 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  else
  {
    uint64_t v1 = 0;
  }
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v5 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    v1 += v6;
  }
  *(_DWORD *)(a1 + 20) = v1;
  return v1;
}

uint64_t sub_183C5F4()
{
  return 1;
}

void *sub_183C5FC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PlaceSummaryLayoutUnitContainment");
}

void *sub_183C60C(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_183C680(void *a1)
{
  sub_183C60C(a1);

  operator delete();
}

uint64_t *sub_183C6B8(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = (uint64_t *)(a1 + 8);
  if (v2) {
    return (uint64_t *)sub_188B4AC(result);
  }
  return result;
}

char *sub_183C6C8(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v12 = a2;
  unint64_t v4 = (uint64_t *)(a1 + 8);
  while (1)
  {
    if (sub_11947B8((uint64_t)a3, &v12, a3[11].i32[1])) {
      return v12;
    }
    unint64_t v5 = v12 + 1;
    unsigned int v6 = *v12;
    if (*v12 < 0)
    {
      unsigned int v7 = v6 + (*v5 << 7);
      unsigned int v6 = v7 - 128;
      if (*v5 < 0)
      {
        unint64_t v5 = (char *)sub_188C180((uint64_t)v12, v7 - 128);
        unsigned int v6 = v8;
      }
      else
      {
        unint64_t v5 = v12 + 2;
      }
    }
    int v12 = v5;
    if (!v6 || (v6 & 7) == 4) {
      break;
    }
    if (*v4)
    {
      unsigned int v10 = (std::string *)((*v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unsigned int v10 = (std::string *)sub_188DBD8(v4);
      unint64_t v5 = v12;
    }
    int v12 = (char *)sub_1885AC0(v6, v10, v5, a3);
    if (!v12) {
      return 0;
    }
  }
  if (v5) {
    a3[10].i32[0] = v6 - 1;
  }
  return v5;
}

char *sub_183C7C8(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v4 = *(void *)(a1 + 8);
  if ((v4 & 1) == 0) {
    return __dst;
  }
  unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v6 + 31) < 0)
  {
    unsigned int v7 = *(void **)(v6 + 8);
    unint64_t v6 = *(void *)(v6 + 16);
  }
  else
  {
    unsigned int v7 = (void *)(v6 + 8);
    LODWORD(v6) = *(unsigned __int8 *)(v6 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v6)
  {
    uint64_t v8 = (int)v6;
    memcpy(__dst, v7, (int)v6);
    __dst += v8;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v7, v6, __dst);
}

uint64_t sub_183C860(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (v1)
  {
    unint64_t v4 = v1 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v2 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v2 = *(unsigned __int8 *)(v4 + 31);
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  *(_DWORD *)(a1 + 16) = v2;
  return v2;
}

std::string *sub_183C894(std::string *result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 8);
  if (v2) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v2 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_183C8B0()
{
  return 1;
}

void *sub_183C8B8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PlaceSummaryLayoutUnitRecent");
}

void *sub_183C8C8(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_183C93C(void *a1)
{
  sub_183C8C8(a1);

  operator delete();
}

uint64_t *sub_183C974(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = (uint64_t *)(a1 + 8);
  if (v2) {
    return (uint64_t *)sub_188B4AC(result);
  }
  return result;
}

char *sub_183C984(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v12 = a2;
  unint64_t v4 = (uint64_t *)(a1 + 8);
  while (1)
  {
    if (sub_11947B8((uint64_t)a3, &v12, a3[11].i32[1])) {
      return v12;
    }
    unint64_t v5 = v12 + 1;
    unsigned int v6 = *v12;
    if (*v12 < 0)
    {
      unsigned int v7 = v6 + (*v5 << 7);
      unsigned int v6 = v7 - 128;
      if (*v5 < 0)
      {
        unint64_t v5 = (char *)sub_188C180((uint64_t)v12, v7 - 128);
        unsigned int v6 = v8;
      }
      else
      {
        unint64_t v5 = v12 + 2;
      }
    }
    int v12 = v5;
    if (!v6 || (v6 & 7) == 4) {
      break;
    }
    if (*v4)
    {
      unsigned int v10 = (std::string *)((*v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unsigned int v10 = (std::string *)sub_188DBD8(v4);
      unint64_t v5 = v12;
    }
    int v12 = (char *)sub_1885AC0(v6, v10, v5, a3);
    if (!v12) {
      return 0;
    }
  }
  if (v5) {
    a3[10].i32[0] = v6 - 1;
  }
  return v5;
}

char *sub_183CA84(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v4 = *(void *)(a1 + 8);
  if ((v4 & 1) == 0) {
    return __dst;
  }
  unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v6 + 31) < 0)
  {
    unsigned int v7 = *(void **)(v6 + 8);
    unint64_t v6 = *(void *)(v6 + 16);
  }
  else
  {
    unsigned int v7 = (void *)(v6 + 8);
    LODWORD(v6) = *(unsigned __int8 *)(v6 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v6)
  {
    uint64_t v8 = (int)v6;
    memcpy(__dst, v7, (int)v6);
    __dst += v8;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v7, v6, __dst);
}

uint64_t sub_183CB1C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (v1)
  {
    unint64_t v4 = v1 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v2 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v2 = *(unsigned __int8 *)(v4 + 31);
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  *(_DWORD *)(a1 + 16) = v2;
  return v2;
}

std::string *sub_183CB50(std::string *result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 8);
  if (v2) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v2 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_183CB6C()
{
  return 1;
}

void *sub_183CB74@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PlaceSummaryLayoutUnitHighlightMain");
}

void *sub_183CB84(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_183CBF8(void *a1)
{
  sub_183CB84(a1);

  operator delete();
}

uint64_t *sub_183CC30(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = (uint64_t *)(a1 + 8);
  if (v2) {
    return (uint64_t *)sub_188B4AC(result);
  }
  return result;
}

char *sub_183CC40(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v12 = a2;
  unint64_t v4 = (uint64_t *)(a1 + 8);
  while (1)
  {
    if (sub_11947B8((uint64_t)a3, &v12, a3[11].i32[1])) {
      return v12;
    }
    unint64_t v5 = v12 + 1;
    unsigned int v6 = *v12;
    if (*v12 < 0)
    {
      unsigned int v7 = v6 + (*v5 << 7);
      unsigned int v6 = v7 - 128;
      if (*v5 < 0)
      {
        unint64_t v5 = (char *)sub_188C180((uint64_t)v12, v7 - 128);
        unsigned int v6 = v8;
      }
      else
      {
        unint64_t v5 = v12 + 2;
      }
    }
    int v12 = v5;
    if (!v6 || (v6 & 7) == 4) {
      break;
    }
    if (*v4)
    {
      unsigned int v10 = (std::string *)((*v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unsigned int v10 = (std::string *)sub_188DBD8(v4);
      unint64_t v5 = v12;
    }
    int v12 = (char *)sub_1885AC0(v6, v10, v5, a3);
    if (!v12) {
      return 0;
    }
  }
  if (v5) {
    a3[10].i32[0] = v6 - 1;
  }
  return v5;
}

char *sub_183CD40(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v4 = *(void *)(a1 + 8);
  if ((v4 & 1) == 0) {
    return __dst;
  }
  unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v6 + 31) < 0)
  {
    unsigned int v7 = *(void **)(v6 + 8);
    unint64_t v6 = *(void *)(v6 + 16);
  }
  else
  {
    unsigned int v7 = (void *)(v6 + 8);
    LODWORD(v6) = *(unsigned __int8 *)(v6 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v6)
  {
    uint64_t v8 = (int)v6;
    memcpy(__dst, v7, (int)v6);
    __dst += v8;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v7, v6, __dst);
}

uint64_t sub_183CDD8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (v1)
  {
    unint64_t v4 = v1 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v2 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v2 = *(unsigned __int8 *)(v4 + 31);
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  *(_DWORD *)(a1 + 16) = v2;
  return v2;
}

std::string *sub_183CE0C(std::string *result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 8);
  if (v2) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v2 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_183CE28()
{
  return 1;
}

void *sub_183CE30@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PlaceSummaryLayoutUnitHighlightExtra");
}

void *sub_183CE40(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_183CEB4(void *a1)
{
  sub_183CE40(a1);

  operator delete();
}

uint64_t *sub_183CEEC(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = (uint64_t *)(a1 + 8);
  if (v2) {
    return (uint64_t *)sub_188B4AC(result);
  }
  return result;
}

char *sub_183CEFC(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v12 = a2;
  unint64_t v4 = (uint64_t *)(a1 + 8);
  while (1)
  {
    if (sub_11947B8((uint64_t)a3, &v12, a3[11].i32[1])) {
      return v12;
    }
    unint64_t v5 = v12 + 1;
    unsigned int v6 = *v12;
    if (*v12 < 0)
    {
      unsigned int v7 = v6 + (*v5 << 7);
      unsigned int v6 = v7 - 128;
      if (*v5 < 0)
      {
        unint64_t v5 = (char *)sub_188C180((uint64_t)v12, v7 - 128);
        unsigned int v6 = v8;
      }
      else
      {
        unint64_t v5 = v12 + 2;
      }
    }
    int v12 = v5;
    if (!v6 || (v6 & 7) == 4) {
      break;
    }
    if (*v4)
    {
      unsigned int v10 = (std::string *)((*v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unsigned int v10 = (std::string *)sub_188DBD8(v4);
      unint64_t v5 = v12;
    }
    int v12 = (char *)sub_1885AC0(v6, v10, v5, a3);
    if (!v12) {
      return 0;
    }
  }
  if (v5) {
    a3[10].i32[0] = v6 - 1;
  }
  return v5;
}

char *sub_183CFFC(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v4 = *(void *)(a1 + 8);
  if ((v4 & 1) == 0) {
    return __dst;
  }
  unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v6 + 31) < 0)
  {
    unsigned int v7 = *(void **)(v6 + 8);
    unint64_t v6 = *(void *)(v6 + 16);
  }
  else
  {
    unsigned int v7 = (void *)(v6 + 8);
    LODWORD(v6) = *(unsigned __int8 *)(v6 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v6)
  {
    uint64_t v8 = (int)v6;
    memcpy(__dst, v7, (int)v6);
    __dst += v8;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v7, v6, __dst);
}

uint64_t sub_183D094(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (v1)
  {
    unint64_t v4 = v1 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v2 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v2 = *(unsigned __int8 *)(v4 + 31);
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  *(_DWORD *)(a1 + 16) = v2;
  return v2;
}

std::string *sub_183D0C8(std::string *result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 8);
  if (v2) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v2 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_183D0E4()
{
  return 1;
}

void *sub_183D0EC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PlaceSummaryLayoutUnitPublisherNameForGuide");
}

void *sub_183D0FC(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_183D170(void *a1)
{
  sub_183D0FC(a1);

  operator delete();
}

uint64_t *sub_183D1A8(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = (uint64_t *)(a1 + 8);
  if (v2) {
    return (uint64_t *)sub_188B4AC(result);
  }
  return result;
}

char *sub_183D1B8(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v12 = a2;
  unint64_t v4 = (uint64_t *)(a1 + 8);
  while (1)
  {
    if (sub_11947B8((uint64_t)a3, &v12, a3[11].i32[1])) {
      return v12;
    }
    unint64_t v5 = v12 + 1;
    unsigned int v6 = *v12;
    if (*v12 < 0)
    {
      unsigned int v7 = v6 + (*v5 << 7);
      unsigned int v6 = v7 - 128;
      if (*v5 < 0)
      {
        unint64_t v5 = (char *)sub_188C180((uint64_t)v12, v7 - 128);
        unsigned int v6 = v8;
      }
      else
      {
        unint64_t v5 = v12 + 2;
      }
    }
    int v12 = v5;
    if (!v6 || (v6 & 7) == 4) {
      break;
    }
    if (*v4)
    {
      unsigned int v10 = (std::string *)((*v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unsigned int v10 = (std::string *)sub_188DBD8(v4);
      unint64_t v5 = v12;
    }
    int v12 = (char *)sub_1885AC0(v6, v10, v5, a3);
    if (!v12) {
      return 0;
    }
  }
  if (v5) {
    a3[10].i32[0] = v6 - 1;
  }
  return v5;
}

char *sub_183D2B8(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v4 = *(void *)(a1 + 8);
  if ((v4 & 1) == 0) {
    return __dst;
  }
  unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v6 + 31) < 0)
  {
    unsigned int v7 = *(void **)(v6 + 8);
    unint64_t v6 = *(void *)(v6 + 16);
  }
  else
  {
    unsigned int v7 = (void *)(v6 + 8);
    LODWORD(v6) = *(unsigned __int8 *)(v6 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v6)
  {
    uint64_t v8 = (int)v6;
    memcpy(__dst, v7, (int)v6);
    __dst += v8;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v7, v6, __dst);
}

uint64_t sub_183D350(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (v1)
  {
    unint64_t v4 = v1 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v2 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v2 = *(unsigned __int8 *)(v4 + 31);
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  *(_DWORD *)(a1 + 16) = v2;
  return v2;
}

std::string *sub_183D384(std::string *result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 8);
  if (v2) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v2 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_183D3A0()
{
  return 1;
}

void *sub_183D3A8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PlaceSummaryLayoutUnitNumPlacesInGuide");
}

void *sub_183D3B8(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_183D42C(void *a1)
{
  sub_183D3B8(a1);

  operator delete();
}

uint64_t *sub_183D464(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = (uint64_t *)(a1 + 8);
  if (v2) {
    return (uint64_t *)sub_188B4AC(result);
  }
  return result;
}

char *sub_183D474(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v12 = a2;
  unint64_t v4 = (uint64_t *)(a1 + 8);
  while (1)
  {
    if (sub_11947B8((uint64_t)a3, &v12, a3[11].i32[1])) {
      return v12;
    }
    unint64_t v5 = v12 + 1;
    unsigned int v6 = *v12;
    if (*v12 < 0)
    {
      unsigned int v7 = v6 + (*v5 << 7);
      unsigned int v6 = v7 - 128;
      if (*v5 < 0)
      {
        unint64_t v5 = (char *)sub_188C180((uint64_t)v12, v7 - 128);
        unsigned int v6 = v8;
      }
      else
      {
        unint64_t v5 = v12 + 2;
      }
    }
    int v12 = v5;
    if (!v6 || (v6 & 7) == 4) {
      break;
    }
    if (*v4)
    {
      unsigned int v10 = (std::string *)((*v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unsigned int v10 = (std::string *)sub_188DBD8(v4);
      unint64_t v5 = v12;
    }
    int v12 = (char *)sub_1885AC0(v6, v10, v5, a3);
    if (!v12) {
      return 0;
    }
  }
  if (v5) {
    a3[10].i32[0] = v6 - 1;
  }
  return v5;
}

char *sub_183D574(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v4 = *(void *)(a1 + 8);
  if ((v4 & 1) == 0) {
    return __dst;
  }
  unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v6 + 31) < 0)
  {
    unsigned int v7 = *(void **)(v6 + 8);
    unint64_t v6 = *(void *)(v6 + 16);
  }
  else
  {
    unsigned int v7 = (void *)(v6 + 8);
    LODWORD(v6) = *(unsigned __int8 *)(v6 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v6)
  {
    uint64_t v8 = (int)v6;
    memcpy(__dst, v7, (int)v6);
    __dst += v8;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v7, v6, __dst);
}

uint64_t sub_183D60C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (v1)
  {
    unint64_t v4 = v1 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v2 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v2 = *(unsigned __int8 *)(v4 + 31);
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  *(_DWORD *)(a1 + 16) = v2;
  return v2;
}

std::string *sub_183D640(std::string *result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 8);
  if (v2) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v2 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_183D65C()
{
  return 1;
}

void *sub_183D664@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PlaceSummaryLayoutUnitPublisherDescription");
}

void *sub_183D674(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_183D6E8(void *a1)
{
  sub_183D674(a1);

  operator delete();
}

uint64_t *sub_183D720(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = (uint64_t *)(a1 + 8);
  if (v2) {
    return (uint64_t *)sub_188B4AC(result);
  }
  return result;
}

char *sub_183D730(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v12 = a2;
  unint64_t v4 = (uint64_t *)(a1 + 8);
  while (1)
  {
    if (sub_11947B8((uint64_t)a3, &v12, a3[11].i32[1])) {
      return v12;
    }
    unint64_t v5 = v12 + 1;
    unsigned int v6 = *v12;
    if (*v12 < 0)
    {
      unsigned int v7 = v6 + (*v5 << 7);
      unsigned int v6 = v7 - 128;
      if (*v5 < 0)
      {
        unint64_t v5 = (char *)sub_188C180((uint64_t)v12, v7 - 128);
        unsigned int v6 = v8;
      }
      else
      {
        unint64_t v5 = v12 + 2;
      }
    }
    int v12 = v5;
    if (!v6 || (v6 & 7) == 4) {
      break;
    }
    if (*v4)
    {
      unsigned int v10 = (std::string *)((*v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unsigned int v10 = (std::string *)sub_188DBD8(v4);
      unint64_t v5 = v12;
    }
    int v12 = (char *)sub_1885AC0(v6, v10, v5, a3);
    if (!v12) {
      return 0;
    }
  }
  if (v5) {
    a3[10].i32[0] = v6 - 1;
  }
  return v5;
}

char *sub_183D830(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v4 = *(void *)(a1 + 8);
  if ((v4 & 1) == 0) {
    return __dst;
  }
  unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v6 + 31) < 0)
  {
    unsigned int v7 = *(void **)(v6 + 8);
    unint64_t v6 = *(void *)(v6 + 16);
  }
  else
  {
    unsigned int v7 = (void *)(v6 + 8);
    LODWORD(v6) = *(unsigned __int8 *)(v6 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v6)
  {
    uint64_t v8 = (int)v6;
    memcpy(__dst, v7, (int)v6);
    __dst += v8;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v7, v6, __dst);
}

uint64_t sub_183D8C8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (v1)
  {
    unint64_t v4 = v1 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v2 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v2 = *(unsigned __int8 *)(v4 + 31);
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  *(_DWORD *)(a1 + 16) = v2;
  return v2;
}

std::string *sub_183D8FC(std::string *result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 8);
  if (v2) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v2 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_183D918()
{
  return 1;
}

void *sub_183D920@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PlaceSummaryLayoutUnitHikingDifficulty");
}

void *sub_183D930(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_183D9A4(void *a1)
{
  sub_183D930(a1);

  operator delete();
}

uint64_t *sub_183D9DC(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = (uint64_t *)(a1 + 8);
  if (v2) {
    return (uint64_t *)sub_188B4AC(result);
  }
  return result;
}

char *sub_183D9EC(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v12 = a2;
  unint64_t v4 = (uint64_t *)(a1 + 8);
  while (1)
  {
    if (sub_11947B8((uint64_t)a3, &v12, a3[11].i32[1])) {
      return v12;
    }
    unint64_t v5 = v12 + 1;
    unsigned int v6 = *v12;
    if (*v12 < 0)
    {
      unsigned int v7 = v6 + (*v5 << 7);
      unsigned int v6 = v7 - 128;
      if (*v5 < 0)
      {
        unint64_t v5 = (char *)sub_188C180((uint64_t)v12, v7 - 128);
        unsigned int v6 = v8;
      }
      else
      {
        unint64_t v5 = v12 + 2;
      }
    }
    int v12 = v5;
    if (!v6 || (v6 & 7) == 4) {
      break;
    }
    if (*v4)
    {
      unsigned int v10 = (std::string *)((*v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unsigned int v10 = (std::string *)sub_188DBD8(v4);
      unint64_t v5 = v12;
    }
    int v12 = (char *)sub_1885AC0(v6, v10, v5, a3);
    if (!v12) {
      return 0;
    }
  }
  if (v5) {
    a3[10].i32[0] = v6 - 1;
  }
  return v5;
}

char *sub_183DAEC(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v4 = *(void *)(a1 + 8);
  if ((v4 & 1) == 0) {
    return __dst;
  }
  unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v6 + 31) < 0)
  {
    unsigned int v7 = *(void **)(v6 + 8);
    unint64_t v6 = *(void *)(v6 + 16);
  }
  else
  {
    unsigned int v7 = (void *)(v6 + 8);
    LODWORD(v6) = *(unsigned __int8 *)(v6 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v6)
  {
    uint64_t v8 = (int)v6;
    memcpy(__dst, v7, (int)v6);
    __dst += v8;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v7, v6, __dst);
}

uint64_t sub_183DB84(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (v1)
  {
    unint64_t v4 = v1 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v2 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v2 = *(unsigned __int8 *)(v4 + 31);
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  *(_DWORD *)(a1 + 16) = v2;
  return v2;
}

std::string *sub_183DBB8(std::string *result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 8);
  if (v2) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v2 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_183DBD4()
{
  return 1;
}

void *sub_183DBDC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PlaceSummaryLayoutUnitHikingTrailLength");
}

void *sub_183DBEC(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_183DC60(void *a1)
{
  sub_183DBEC(a1);

  operator delete();
}

uint64_t sub_183DC98(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 16) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_183DCB0(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v19 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
    goto LABEL_27;
  }
  unint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    unsigned int v7 = v19 + 1;
    unsigned int v8 = *v19;
    if (*v19 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        unsigned int v7 = (char *)sub_188C180((uint64_t)v19, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        unsigned int v7 = v19 + 2;
      }
    }
    uint64_t v19 = v7;
    if (v8 != 8) {
      break;
    }
    uint64_t v13 = v7 + 1;
    int v14 = *v7;
    if ((*v7 & 0x80000000) == 0) {
      goto LABEL_19;
    }
    int v15 = *v13;
    int v14 = v14 + (v15 << 7) - 128;
    if ((v15 & 0x80000000) == 0)
    {
      uint64_t v13 = v7 + 2;
LABEL_19:
      uint64_t v19 = v13;
      *(_DWORD *)(a1 + 24) = v14;
      int v5 = 1;
      goto LABEL_20;
    }
    unint64_t v16 = (char *)sub_188C0D0((uint64_t)v7, v14);
    uint64_t v19 = v16;
    *(_DWORD *)(a1 + 24) = v17;
    int v5 = 1;
    if (!v16) {
      goto LABEL_28;
    }
LABEL_20:
    if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
      goto LABEL_27;
    }
  }
  if (v8) {
    BOOL v11 = (v8 & 7) == 4;
  }
  else {
    BOOL v11 = 1;
  }
  if (!v11)
  {
    if (*v6)
    {
      int v12 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      int v12 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unsigned int v7 = v19;
    }
    uint64_t v19 = (char *)sub_1885AC0(v8, v12, v7, a3);
    if (!v19) {
      goto LABEL_28;
    }
    goto LABEL_20;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    goto LABEL_27;
  }
LABEL_28:
  uint64_t v19 = 0;
LABEL_27:
  *(_DWORD *)(a1 + 16) |= v5;
  return v19;
}

unsigned char *sub_183DE30(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  unint64_t v4 = (unsigned char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= __dst) {
      unint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v6 = *(_DWORD *)(a1 + 24);
    *unint64_t v4 = 8;
    v4[1] = v6;
    if (v6 > 0x7F)
    {
      v4[1] = v6 | 0x80;
      unsigned int v7 = v6 >> 7;
      v4[2] = v6 >> 7;
      v4 += 3;
      if (v6 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v8 = v7 >> 14;
          v7 >>= 7;
          *v4++ = v7;
        }
        while (v8);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    int v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    int v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    v4 += v14;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v12, v13, v4);
}

uint64_t sub_183DF58(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16)) {
    uint64_t v1 = ((9 * (__clz(*(_DWORD *)(a1 + 24) | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  else {
    uint64_t v1 = 0;
  }
  uint64_t v2 = *(void *)(a1 + 8);
  if (v2)
  {
    unint64_t v4 = v2 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v5 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v5 = *(unsigned __int8 *)(v4 + 31);
    }
    v1 += v5;
  }
  *(_DWORD *)(a1 + 20) = v1;
  return v1;
}

uint64_t sub_183DFC0()
{
  return 1;
}

void *sub_183DFC8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PlaceSummaryLayoutUnitPhotoCarousel");
}

void *sub_183DFD8(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_183E04C(void *a1)
{
  sub_183DFD8(a1);

  operator delete();
}

uint64_t *sub_183E084(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = (uint64_t *)(a1 + 8);
  if (v2) {
    return (uint64_t *)sub_188B4AC(result);
  }
  return result;
}

char *sub_183E094(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v12 = a2;
  unint64_t v4 = (uint64_t *)(a1 + 8);
  while (1)
  {
    if (sub_11947B8((uint64_t)a3, &v12, a3[11].i32[1])) {
      return v12;
    }
    uint64_t v5 = v12 + 1;
    unsigned int v6 = *v12;
    if (*v12 < 0)
    {
      unsigned int v7 = v6 + (*v5 << 7);
      unsigned int v6 = v7 - 128;
      if (*v5 < 0)
      {
        uint64_t v5 = (char *)sub_188C180((uint64_t)v12, v7 - 128);
        unsigned int v6 = v8;
      }
      else
      {
        uint64_t v5 = v12 + 2;
      }
    }
    int v12 = v5;
    if (!v6 || (v6 & 7) == 4) {
      break;
    }
    if (*v4)
    {
      unsigned int v10 = (std::string *)((*v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unsigned int v10 = (std::string *)sub_188DBD8(v4);
      uint64_t v5 = v12;
    }
    int v12 = (char *)sub_1885AC0(v6, v10, v5, a3);
    if (!v12) {
      return 0;
    }
  }
  if (v5) {
    a3[10].i32[0] = v6 - 1;
  }
  return v5;
}

char *sub_183E194(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v4 = *(void *)(a1 + 8);
  if ((v4 & 1) == 0) {
    return __dst;
  }
  unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v6 + 31) < 0)
  {
    unsigned int v7 = *(void **)(v6 + 8);
    unint64_t v6 = *(void *)(v6 + 16);
  }
  else
  {
    unsigned int v7 = (void *)(v6 + 8);
    LODWORD(v6) = *(unsigned __int8 *)(v6 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v6)
  {
    uint64_t v8 = (int)v6;
    memcpy(__dst, v7, (int)v6);
    __dst += v8;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v7, v6, __dst);
}

uint64_t sub_183E22C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (v1)
  {
    unint64_t v4 = v1 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v2 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v2 = *(unsigned __int8 *)(v4 + 31);
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  *(_DWORD *)(a1 + 16) = v2;
  return v2;
}

std::string *sub_183E260(std::string *result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 8);
  if (v2) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v2 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_183E27C()
{
  return 1;
}

void *sub_183E284@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PlaceSummaryLayoutUnitInUserLibrary");
}

void *sub_183E294(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_183E308(void *a1)
{
  sub_183E294(a1);

  operator delete();
}

uint64_t *sub_183E340(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = (uint64_t *)(a1 + 8);
  if (v2) {
    return (uint64_t *)sub_188B4AC(result);
  }
  return result;
}

char *sub_183E350(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v12 = a2;
  unint64_t v4 = (uint64_t *)(a1 + 8);
  while (1)
  {
    if (sub_11947B8((uint64_t)a3, &v12, a3[11].i32[1])) {
      return v12;
    }
    uint64_t v5 = v12 + 1;
    unsigned int v6 = *v12;
    if (*v12 < 0)
    {
      unsigned int v7 = v6 + (*v5 << 7);
      unsigned int v6 = v7 - 128;
      if (*v5 < 0)
      {
        uint64_t v5 = (char *)sub_188C180((uint64_t)v12, v7 - 128);
        unsigned int v6 = v8;
      }
      else
      {
        uint64_t v5 = v12 + 2;
      }
    }
    int v12 = v5;
    if (!v6 || (v6 & 7) == 4) {
      break;
    }
    if (*v4)
    {
      unsigned int v10 = (std::string *)((*v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unsigned int v10 = (std::string *)sub_188DBD8(v4);
      uint64_t v5 = v12;
    }
    int v12 = (char *)sub_1885AC0(v6, v10, v5, a3);
    if (!v12) {
      return 0;
    }
  }
  if (v5) {
    a3[10].i32[0] = v6 - 1;
  }
  return v5;
}

char *sub_183E450(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v4 = *(void *)(a1 + 8);
  if ((v4 & 1) == 0) {
    return __dst;
  }
  unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v6 + 31) < 0)
  {
    unsigned int v7 = *(void **)(v6 + 8);
    unint64_t v6 = *(void *)(v6 + 16);
  }
  else
  {
    unsigned int v7 = (void *)(v6 + 8);
    LODWORD(v6) = *(unsigned __int8 *)(v6 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v6)
  {
    uint64_t v8 = (int)v6;
    memcpy(__dst, v7, (int)v6);
    __dst += v8;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v7, v6, __dst);
}

uint64_t sub_183E4E8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (v1)
  {
    unint64_t v4 = v1 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v2 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v2 = *(unsigned __int8 *)(v4 + 31);
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  *(_DWORD *)(a1 + 16) = v2;
  return v2;
}

std::string *sub_183E51C(std::string *result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 8);
  if (v2) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v2 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_183E538()
{
  return 1;
}

void *sub_183E540@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PlaceSummaryLayoutUnitUserNote");
}

uint64_t sub_183E550(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  unint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_183E5F0(uint64_t a1)
{
  sub_183E550(a1);

  operator delete();
}

uint64_t sub_183E628(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v1 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v1 + 23) < 0)
    {
      **(unsigned char **)unint64_t v1 = 0;
      *(void *)(v1 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v1 = 0;
      *(unsigned char *)(v1 + 23) = 0;
    }
  }
  char v3 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v3) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_183E66C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v17 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v17, a3[11].i32[1])) {
    return *(void *)v17;
  }
  uint64_t v5 = (void *)(a1 + 8);
  while (1)
  {
    unint64_t v6 = (char *)(*(void *)v17 + 1);
    unsigned int v7 = **(unsigned char **)v17;
    if ((char)**(unsigned char **)v17 < 0)
    {
      unsigned int v8 = v7 + (*v6 << 7);
      unsigned int v7 = v8 - 128;
      if (*v6 < 0)
      {
        unint64_t v6 = (char *)sub_188C180(*(uint64_t *)v17, v8 - 128);
        unsigned int v7 = v9;
      }
      else
      {
        unint64_t v6 = (char *)(*(void *)v17 + 2);
      }
    }
    *(void *)int v17 = v6;
    if (v7 != 10) {
      break;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v13 = *(void *)(a1 + 8);
    uint64_t v14 = (uint64_t *)(v13 & 0xFFFFFFFFFFFFFFFCLL);
    if (v13) {
      uint64_t v14 = (uint64_t *)*v14;
    }
    int v15 = (std::string *)sub_1880F84((void *)(a1 + 24), v14);
    int v12 = (void *)sub_188C244(v15, *(char **)v17, (uint64_t)a3);
LABEL_18:
    *(void *)int v17 = v12;
    if (!v12) {
      goto LABEL_25;
    }
    if (sub_11947B8((uint64_t)a3, (char **)v17, a3[11].i32[1])) {
      return *(void *)v17;
    }
  }
  if (v7) {
    BOOL v10 = (v7 & 7) == 4;
  }
  else {
    BOOL v10 = 1;
  }
  if (!v10)
  {
    if (*v5)
    {
      unint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unint64_t v6 = *(char **)v17;
    }
    int v12 = sub_1885AC0(v7, v11, v6, a3);
    goto LABEL_18;
  }
  if (v6)
  {
    a3[10].i32[0] = v7 - 1;
    return *(void *)v17;
  }
LABEL_25:
  *(void *)int v17 = 0;
  return *(void *)v17;
}

char *sub_183E7C4(uint64_t a1, char *__dst, void *a3)
{
  unint64_t v4 = __dst;
  if (*(unsigned char *)(a1 + 16)) {
    unint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  uint64_t v6 = *(void *)(a1 + 8);
  if ((v6 & 1) == 0) {
    return v4;
  }
  unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v8 + 31) < 0)
  {
    unsigned int v9 = *(void **)(v8 + 8);
    uint64_t v10 = *(void *)(v8 + 16);
  }
  else
  {
    unsigned int v9 = (void *)(v8 + 8);
    LODWORD(v10) = *(unsigned __int8 *)(v8 + 31);
  }
  if (*a3 - (void)v4 >= (int)v10)
  {
    uint64_t v11 = (int)v10;
    memcpy(v4, v9, (int)v10);
    v4 += v11;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v9, v10, v4);
}

uint64_t sub_183E890(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v3 = *(unsigned __int8 *)(v2 + 23);
    uint64_t v4 = *(void *)(v2 + 8);
    if ((v3 & 0x80u) == 0) {
      uint64_t v4 = v3;
    }
    uint64_t v1 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  else
  {
    uint64_t v1 = 0;
  }
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5)
  {
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v7 + 31) < 0) {
      uint64_t v8 = *(void *)(v7 + 16);
    }
    else {
      uint64_t v8 = *(unsigned __int8 *)(v7 + 31);
    }
    v1 += v8;
  }
  *(_DWORD *)(a1 + 20) = v1;
  return v1;
}

uint64_t sub_183E914()
{
  return 1;
}

void *sub_183E91C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PlaceSummaryLayoutUnitSecondaryName");
}

void *sub_183E92C(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_183E9A0(void *a1)
{
  sub_183E92C(a1);

  operator delete();
}

uint64_t sub_183E9D8(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 16) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_183E9F0(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v19 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
    goto LABEL_27;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    unint64_t v7 = v19 + 1;
    unsigned int v8 = *v19;
    if (*v19 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        unint64_t v7 = (char *)sub_188C180((uint64_t)v19, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        unint64_t v7 = v19 + 2;
      }
    }
    uint64_t v19 = v7;
    if (v8 != 8) {
      break;
    }
    uint64_t v13 = v7 + 1;
    int v14 = *v7;
    if ((*v7 & 0x80000000) == 0) {
      goto LABEL_19;
    }
    int v15 = *v13;
    int v14 = v14 + (v15 << 7) - 128;
    if ((v15 & 0x80000000) == 0)
    {
      uint64_t v13 = v7 + 2;
LABEL_19:
      uint64_t v19 = v13;
      *(_DWORD *)(a1 + 24) = v14;
      int v5 = 1;
      goto LABEL_20;
    }
    unint64_t v16 = (char *)sub_188C0D0((uint64_t)v7, v14);
    uint64_t v19 = v16;
    *(_DWORD *)(a1 + 24) = v17;
    int v5 = 1;
    if (!v16) {
      goto LABEL_28;
    }
LABEL_20:
    if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
      goto LABEL_27;
    }
  }
  if (v8) {
    BOOL v11 = (v8 & 7) == 4;
  }
  else {
    BOOL v11 = 1;
  }
  if (!v11)
  {
    if (*v6)
    {
      int v12 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      int v12 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unint64_t v7 = v19;
    }
    uint64_t v19 = (char *)sub_1885AC0(v8, v12, v7, a3);
    if (!v19) {
      goto LABEL_28;
    }
    goto LABEL_20;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    goto LABEL_27;
  }
LABEL_28:
  uint64_t v19 = 0;
LABEL_27:
  *(_DWORD *)(a1 + 16) |= v5;
  return v19;
}

unsigned char *sub_183EB70(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v6 = *(_DWORD *)(a1 + 24);
    *uint64_t v4 = 8;
    v4[1] = v6;
    if (v6 > 0x7F)
    {
      v4[1] = v6 | 0x80;
      unsigned int v7 = v6 >> 7;
      v4[2] = v6 >> 7;
      v4 += 3;
      if (v6 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v8 = v7 >> 14;
          v7 >>= 7;
          *v4++ = v7;
        }
        while (v8);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    int v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    int v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    v4 += v14;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v12, v13, v4);
}

uint64_t sub_183EC98(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16)) {
    uint64_t v1 = ((9 * (__clz(*(_DWORD *)(a1 + 24) | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  else {
    uint64_t v1 = 0;
  }
  uint64_t v2 = *(void *)(a1 + 8);
  if (v2)
  {
    unint64_t v4 = v2 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v5 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v5 = *(unsigned __int8 *)(v4 + 31);
    }
    v1 += v5;
  }
  *(_DWORD *)(a1 + 20) = v1;
  return v1;
}

uint64_t sub_183ED00()
{
  return 1;
}

void *sub_183ED08@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PlaceSummaryLayoutUnitFactoid");
}

void *sub_183ED18(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_183ED8C(void *a1)
{
  sub_183ED18(a1);

  operator delete();
}

uint64_t *sub_183EDC4(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = (uint64_t *)(a1 + 8);
  if (v2) {
    return (uint64_t *)sub_188B4AC(result);
  }
  return result;
}

char *sub_183EDD4(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v12 = a2;
  unint64_t v4 = (uint64_t *)(a1 + 8);
  while (1)
  {
    if (sub_11947B8((uint64_t)a3, &v12, a3[11].i32[1])) {
      return v12;
    }
    uint64_t v5 = v12 + 1;
    unsigned int v6 = *v12;
    if (*v12 < 0)
    {
      unsigned int v7 = v6 + (*v5 << 7);
      unsigned int v6 = v7 - 128;
      if (*v5 < 0)
      {
        uint64_t v5 = (char *)sub_188C180((uint64_t)v12, v7 - 128);
        unsigned int v6 = v8;
      }
      else
      {
        uint64_t v5 = v12 + 2;
      }
    }
    int v12 = v5;
    if (!v6 || (v6 & 7) == 4) {
      break;
    }
    if (*v4)
    {
      unsigned int v10 = (std::string *)((*v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unsigned int v10 = (std::string *)sub_188DBD8(v4);
      uint64_t v5 = v12;
    }
    int v12 = (char *)sub_1885AC0(v6, v10, v5, a3);
    if (!v12) {
      return 0;
    }
  }
  if (v5) {
    a3[10].i32[0] = v6 - 1;
  }
  return v5;
}

char *sub_183EED4(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v4 = *(void *)(a1 + 8);
  if ((v4 & 1) == 0) {
    return __dst;
  }
  unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v6 + 31) < 0)
  {
    unsigned int v7 = *(void **)(v6 + 8);
    unint64_t v6 = *(void *)(v6 + 16);
  }
  else
  {
    unsigned int v7 = (void *)(v6 + 8);
    LODWORD(v6) = *(unsigned __int8 *)(v6 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v6)
  {
    uint64_t v8 = (int)v6;
    memcpy(__dst, v7, (int)v6);
    __dst += v8;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v7, v6, __dst);
}

uint64_t sub_183EF6C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (v1)
  {
    unint64_t v4 = v1 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v2 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v2 = *(unsigned __int8 *)(v4 + 31);
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  *(_DWORD *)(a1 + 16) = v2;
  return v2;
}

std::string *sub_183EFA0(std::string *result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 8);
  if (v2) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v2 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_183EFBC()
{
  return 1;
}

void *sub_183EFC4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PlaceSummaryLayoutUnitArpRatings");
}

void *sub_183EFD4(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_183F048(void *a1)
{
  sub_183EFD4(a1);

  operator delete();
}

uint64_t *sub_183F080(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = (uint64_t *)(a1 + 8);
  if (v2) {
    return (uint64_t *)sub_188B4AC(result);
  }
  return result;
}

char *sub_183F090(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v12 = a2;
  unint64_t v4 = (uint64_t *)(a1 + 8);
  while (1)
  {
    if (sub_11947B8((uint64_t)a3, &v12, a3[11].i32[1])) {
      return v12;
    }
    uint64_t v5 = v12 + 1;
    unsigned int v6 = *v12;
    if (*v12 < 0)
    {
      unsigned int v7 = v6 + (*v5 << 7);
      unsigned int v6 = v7 - 128;
      if (*v5 < 0)
      {
        uint64_t v5 = (char *)sub_188C180((uint64_t)v12, v7 - 128);
        unsigned int v6 = v8;
      }
      else
      {
        uint64_t v5 = v12 + 2;
      }
    }
    int v12 = v5;
    if (!v6 || (v6 & 7) == 4) {
      break;
    }
    if (*v4)
    {
      unsigned int v10 = (std::string *)((*v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unsigned int v10 = (std::string *)sub_188DBD8(v4);
      uint64_t v5 = v12;
    }
    int v12 = (char *)sub_1885AC0(v6, v10, v5, a3);
    if (!v12) {
      return 0;
    }
  }
  if (v5) {
    a3[10].i32[0] = v6 - 1;
  }
  return v5;
}

char *sub_183F190(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v4 = *(void *)(a1 + 8);
  if ((v4 & 1) == 0) {
    return __dst;
  }
  unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v6 + 31) < 0)
  {
    unsigned int v7 = *(void **)(v6 + 8);
    unint64_t v6 = *(void *)(v6 + 16);
  }
  else
  {
    unsigned int v7 = (void *)(v6 + 8);
    LODWORD(v6) = *(unsigned __int8 *)(v6 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v6)
  {
    uint64_t v8 = (int)v6;
    memcpy(__dst, v7, (int)v6);
    __dst += v8;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v7, v6, __dst);
}

uint64_t sub_183F228(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (v1)
  {
    unint64_t v4 = v1 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v2 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v2 = *(unsigned __int8 *)(v4 + 31);
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  *(_DWORD *)(a1 + 16) = v2;
  return v2;
}

std::string *sub_183F25C(std::string *result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 8);
  if (v2) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v2 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_183F278()
{
  return 1;
}

void *sub_183F280@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PlaceSummaryLayoutUnitHikeRouteFactoidElevationGainLoss");
}

void *sub_183F290(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_183F304(void *a1)
{
  sub_183F290(a1);

  operator delete();
}

uint64_t *sub_183F33C(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = (uint64_t *)(a1 + 8);
  if (v2) {
    return (uint64_t *)sub_188B4AC(result);
  }
  return result;
}

char *sub_183F34C(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v12 = a2;
  unint64_t v4 = (uint64_t *)(a1 + 8);
  while (1)
  {
    if (sub_11947B8((uint64_t)a3, &v12, a3[11].i32[1])) {
      return v12;
    }
    uint64_t v5 = v12 + 1;
    unsigned int v6 = *v12;
    if (*v12 < 0)
    {
      unsigned int v7 = v6 + (*v5 << 7);
      unsigned int v6 = v7 - 128;
      if (*v5 < 0)
      {
        uint64_t v5 = (char *)sub_188C180((uint64_t)v12, v7 - 128);
        unsigned int v6 = v8;
      }
      else
      {
        uint64_t v5 = v12 + 2;
      }
    }
    int v12 = v5;
    if (!v6 || (v6 & 7) == 4) {
      break;
    }
    if (*v4)
    {
      unsigned int v10 = (std::string *)((*v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unsigned int v10 = (std::string *)sub_188DBD8(v4);
      uint64_t v5 = v12;
    }
    int v12 = (char *)sub_1885AC0(v6, v10, v5, a3);
    if (!v12) {
      return 0;
    }
  }
  if (v5) {
    a3[10].i32[0] = v6 - 1;
  }
  return v5;
}

char *sub_183F44C(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v4 = *(void *)(a1 + 8);
  if ((v4 & 1) == 0) {
    return __dst;
  }
  unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v6 + 31) < 0)
  {
    unsigned int v7 = *(void **)(v6 + 8);
    unint64_t v6 = *(void *)(v6 + 16);
  }
  else
  {
    unsigned int v7 = (void *)(v6 + 8);
    LODWORD(v6) = *(unsigned __int8 *)(v6 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v6)
  {
    uint64_t v8 = (int)v6;
    memcpy(__dst, v7, (int)v6);
    __dst += v8;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v7, v6, __dst);
}

uint64_t sub_183F4E4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (v1)
  {
    unint64_t v4 = v1 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v2 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v2 = *(unsigned __int8 *)(v4 + 31);
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  *(_DWORD *)(a1 + 16) = v2;
  return v2;
}

std::string *sub_183F518(std::string *result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 8);
  if (v2) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v2 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_183F534()
{
  return 1;
}

void *sub_183F53C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PlaceSummaryLayoutUnitHikeRouteType");
}

void *sub_183F54C(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_183F5C0(void *a1)
{
  sub_183F54C(a1);

  operator delete();
}

uint64_t *sub_183F5F8(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = (uint64_t *)(a1 + 8);
  if (v2) {
    return (uint64_t *)sub_188B4AC(result);
  }
  return result;
}

char *sub_183F608(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v12 = a2;
  unint64_t v4 = (uint64_t *)(a1 + 8);
  while (1)
  {
    if (sub_11947B8((uint64_t)a3, &v12, a3[11].i32[1])) {
      return v12;
    }
    uint64_t v5 = v12 + 1;
    unsigned int v6 = *v12;
    if (*v12 < 0)
    {
      unsigned int v7 = v6 + (*v5 << 7);
      unsigned int v6 = v7 - 128;
      if (*v5 < 0)
      {
        uint64_t v5 = (char *)sub_188C180((uint64_t)v12, v7 - 128);
        unsigned int v6 = v8;
      }
      else
      {
        uint64_t v5 = v12 + 2;
      }
    }
    int v12 = v5;
    if (!v6 || (v6 & 7) == 4) {
      break;
    }
    if (*v4)
    {
      unsigned int v10 = (std::string *)((*v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unsigned int v10 = (std::string *)sub_188DBD8(v4);
      uint64_t v5 = v12;
    }
    int v12 = (char *)sub_1885AC0(v6, v10, v5, a3);
    if (!v12) {
      return 0;
    }
  }
  if (v5) {
    a3[10].i32[0] = v6 - 1;
  }
  return v5;
}

char *sub_183F708(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v4 = *(void *)(a1 + 8);
  if ((v4 & 1) == 0) {
    return __dst;
  }
  unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v6 + 31) < 0)
  {
    unsigned int v7 = *(void **)(v6 + 8);
    unint64_t v6 = *(void *)(v6 + 16);
  }
  else
  {
    unsigned int v7 = (void *)(v6 + 8);
    LODWORD(v6) = *(unsigned __int8 *)(v6 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v6)
  {
    uint64_t v8 = (int)v6;
    memcpy(__dst, v7, (int)v6);
    __dst += v8;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v7, v6, __dst);
}

uint64_t sub_183F7A0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (v1)
  {
    unint64_t v4 = v1 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v2 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v2 = *(unsigned __int8 *)(v4 + 31);
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  *(_DWORD *)(a1 + 16) = v2;
  return v2;
}

std::string *sub_183F7D4(std::string *result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 8);
  if (v2) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v2 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_183F7F0()
{
  return 1;
}

void *sub_183F7F8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PlaceSummaryLayoutUnitHikeRouteDuration");
}

void *sub_183F808(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_183F87C(void *a1)
{
  sub_183F808(a1);

  operator delete();
}

uint64_t *sub_183F8B4(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = (uint64_t *)(a1 + 8);
  if (v2) {
    return (uint64_t *)sub_188B4AC(result);
  }
  return result;
}

char *sub_183F8C4(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v12 = a2;
  unint64_t v4 = (uint64_t *)(a1 + 8);
  while (1)
  {
    if (sub_11947B8((uint64_t)a3, &v12, a3[11].i32[1])) {
      return v12;
    }
    uint64_t v5 = v12 + 1;
    unsigned int v6 = *v12;
    if (*v12 < 0)
    {
      unsigned int v7 = v6 + (*v5 << 7);
      unsigned int v6 = v7 - 128;
      if (*v5 < 0)
      {
        uint64_t v5 = (char *)sub_188C180((uint64_t)v12, v7 - 128);
        unsigned int v6 = v8;
      }
      else
      {
        uint64_t v5 = v12 + 2;
      }
    }
    int v12 = v5;
    if (!v6 || (v6 & 7) == 4) {
      break;
    }
    if (*v4)
    {
      unsigned int v10 = (std::string *)((*v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unsigned int v10 = (std::string *)sub_188DBD8(v4);
      uint64_t v5 = v12;
    }
    int v12 = (char *)sub_1885AC0(v6, v10, v5, a3);
    if (!v12) {
      return 0;
    }
  }
  if (v5) {
    a3[10].i32[0] = v6 - 1;
  }
  return v5;
}

char *sub_183F9C4(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v4 = *(void *)(a1 + 8);
  if ((v4 & 1) == 0) {
    return __dst;
  }
  unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v6 + 31) < 0)
  {
    unsigned int v7 = *(void **)(v6 + 8);
    unint64_t v6 = *(void *)(v6 + 16);
  }
  else
  {
    unsigned int v7 = (void *)(v6 + 8);
    LODWORD(v6) = *(unsigned __int8 *)(v6 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v6)
  {
    uint64_t v8 = (int)v6;
    memcpy(__dst, v7, (int)v6);
    __dst += v8;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v7, v6, __dst);
}

uint64_t sub_183FA5C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (v1)
  {
    unint64_t v4 = v1 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v2 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v2 = *(unsigned __int8 *)(v4 + 31);
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  *(_DWORD *)(a1 + 16) = v2;
  return v2;
}

std::string *sub_183FA90(std::string *result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 8);
  if (v2) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v2 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_183FAAC()
{
  return 1;
}

void *sub_183FAB4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PlaceSummaryLayoutUnitHikeRouteLength");
}

uint64_t sub_183FAC4(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  unint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_183FB48((uint64_t (***)(void))a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

uint64_t (***sub_183FB48(uint64_t (***result)(void)))(void)
{
  if (result != &off_254D058)
  {
    uint64_t v1 = result;
    uint64_t v2 = result[4];
    if (v2)
    {
      sub_18375B8(v2);
      operator delete();
    }
    uint64_t v3 = v1[5];
    if (v3)
    {
      sub_1837874(v3);
      operator delete();
    }
    unint64_t v4 = v1[6];
    if (v4)
    {
      sub_1837B30(v4);
      operator delete();
    }
    uint64_t v5 = v1[7];
    if (v5)
    {
      sub_1837F1C(v5);
      operator delete();
    }
    unint64_t v6 = v1[8];
    if (v6)
    {
      sub_18381D8(v6);
      operator delete();
    }
    unsigned int v7 = v1[9];
    if (v7)
    {
      sub_1838854(v7);
      operator delete();
    }
    uint64_t v8 = v1[10];
    if (v8)
    {
      sub_1838C74(v8);
      operator delete();
    }
    uint64_t v9 = v1[11];
    if (v9)
    {
      sub_1839004(v9);
      operator delete();
    }
    unsigned int v10 = v1[12];
    if (v10)
    {
      sub_18392C0(v10);
      operator delete();
    }
    unint64_t v11 = v1[13];
    if (v11)
    {
      sub_183957C(v11);
      operator delete();
    }
    int v12 = v1[14];
    if (v12)
    {
      sub_1839968(v12);
      operator delete();
    }
    uint64_t v13 = v1[15];
    if (v13)
    {
      sub_183A19C(v13);
      operator delete();
    }
    uint64_t v14 = (uint64_t)v1[16];
    if (v14)
    {
      sub_183ADA4(v14);
      operator delete();
    }
    int v15 = v1[17];
    if (v15)
    {
      sub_183BE00(v15);
      operator delete();
    }
    unint64_t v16 = v1[18];
    if (v16)
    {
      sub_183C1EC(v16);
      operator delete();
    }
    int v17 = v1[19];
    if (v17)
    {
      sub_183C60C(v17);
      operator delete();
    }
    unint64_t v18 = v1[20];
    if (v18)
    {
      sub_183C8C8(v18);
      operator delete();
    }
    uint64_t v19 = v1[21];
    if (v19)
    {
      sub_183CB84(v19);
      operator delete();
    }
    uint64_t v20 = v1[22];
    if (v20)
    {
      sub_183CE40(v20);
      operator delete();
    }
    unint64_t v21 = v1[23];
    if (v21)
    {
      sub_183D0FC(v21);
      operator delete();
    }
    uint64_t v22 = v1[24];
    if (v22)
    {
      sub_183D3B8(v22);
      operator delete();
    }
    uint64_t v23 = (uint64_t)v1[25];
    if (v23)
    {
      sub_183E550(v23);
      operator delete();
    }
    unint64_t v24 = v1[26];
    if (v24)
    {
      sub_183E92C(v24);
      operator delete();
    }
    uint64_t v25 = v1[27];
    if (v25)
    {
      sub_183ED18(v25);
      operator delete();
    }
    uint64_t v26 = v1[28];
    if (v26)
    {
      sub_1839C24(v26);
      operator delete();
    }
    unint64_t v27 = v1[29];
    if (v27)
    {
      sub_1839EE0(v27);
      operator delete();
    }
    uint64_t v28 = v1[30];
    if (v28)
    {
      sub_183D674(v28);
      operator delete();
    }
    uint64_t v29 = v1[31];
    if (v29)
    {
      sub_183D930(v29);
      operator delete();
    }
    unint64_t v30 = v1[32];
    if (v30)
    {
      sub_183DBEC(v30);
      operator delete();
    }
    uint64_t v31 = v1[33];
    if (v31)
    {
      sub_183E294(v31);
      operator delete();
    }
    long long v32 = v1[34];
    if (v32)
    {
      sub_183DFD8(v32);
      operator delete();
    }
    uint64_t v33 = v1[35];
    if (v33)
    {
      sub_183EFD4(v33);
      operator delete();
    }
    uint64_t v34 = v1[36];
    if (v34)
    {
      sub_183F290(v34);
      operator delete();
    }
    uint64_t v35 = v1[37];
    if (v35)
    {
      sub_183F54C(v35);
      operator delete();
    }
    int v36 = v1[38];
    if (v36)
    {
      sub_183F808(v36);
      operator delete();
    }
    uint64_t result = (uint64_t (***)(void))v1[39];
    if (result)
    {
      sub_183FAC4();
      operator delete();
    }
  }
  return result;
}

void sub_1840014(uint64_t a1)
{
  sub_183FAC4(a1);

  operator delete();
}

uint64_t sub_184004C(uint64_t result)
{
  uint64_t v1 = result;
  unsigned int v2 = *(_DWORD *)(result + 16);
  if ((_BYTE)v2)
  {
    if (v2)
    {
      uint64_t v3 = *(void *)(result + 32);
      char v4 = *(unsigned char *)(v3 + 8);
      uint64_t result = v3 + 8;
      if (v4) {
        uint64_t result = sub_188B4AC((uint64_t *)result);
      }
    }
    if ((v2 & 2) != 0)
    {
      uint64_t v5 = *(void *)(v1 + 40);
      char v6 = *(unsigned char *)(v5 + 8);
      uint64_t result = v5 + 8;
      if (v6) {
        uint64_t result = sub_188B4AC((uint64_t *)result);
      }
    }
    if ((v2 & 4) != 0)
    {
      uint64_t v7 = *(void *)(v1 + 48);
      char v8 = *(unsigned char *)(v7 + 8);
      uint64_t result = v7 + 8;
      *(void *)(result + 16) = 0;
      *(_DWORD *)(result + 8) = 0;
      if (v8) {
        uint64_t result = sub_188B4AC((uint64_t *)result);
      }
    }
    if ((v2 & 8) != 0)
    {
      uint64_t v9 = *(void *)(v1 + 56);
      char v10 = *(unsigned char *)(v9 + 8);
      uint64_t result = v9 + 8;
      if (v10) {
        uint64_t result = sub_188B4AC((uint64_t *)result);
      }
    }
    if ((v2 & 0x10) != 0)
    {
      uint64_t v11 = *(void *)(v1 + 64);
      char v12 = *(unsigned char *)(v11 + 8);
      uint64_t result = v11 + 8;
      *(_DWORD *)(result + 16) = 0;
      *(_DWORD *)(result + 32) = 0;
      *(_DWORD *)(result + 8) = 0;
      if (v12) {
        uint64_t result = sub_188B4AC((uint64_t *)result);
      }
    }
    if ((v2 & 0x20) != 0)
    {
      uint64_t v13 = *(void *)(v1 + 72);
      char v14 = *(unsigned char *)(v13 + 8);
      uint64_t result = v13 + 8;
      *(_DWORD *)(result + 16) = 0;
      *(_DWORD *)(result + 8) = 0;
      if (v14) {
        uint64_t result = sub_188B4AC((uint64_t *)result);
      }
    }
    if ((v2 & 0x40) != 0)
    {
      uint64_t v15 = *(void *)(v1 + 80);
      char v16 = *(unsigned char *)(v15 + 8);
      uint64_t result = v15 + 8;
      *(unsigned char *)(result + 16) = 0;
      *(_DWORD *)(result + 8) = 0;
      if (v16) {
        uint64_t result = sub_188B4AC((uint64_t *)result);
      }
    }
    if ((v2 & 0x80) != 0)
    {
      uint64_t v17 = *(void *)(v1 + 88);
      char v18 = *(unsigned char *)(v17 + 8);
      uint64_t result = v17 + 8;
      if (v18) {
        uint64_t result = sub_188B4AC((uint64_t *)result);
      }
    }
  }
  if ((v2 & 0xFF00) != 0)
  {
    if ((v2 & 0x100) != 0)
    {
      uint64_t v19 = *(void *)(v1 + 96);
      char v20 = *(unsigned char *)(v19 + 8);
      uint64_t result = v19 + 8;
      if (v20) {
        uint64_t result = sub_188B4AC((uint64_t *)result);
      }
    }
    if ((v2 & 0x200) != 0)
    {
      uint64_t v21 = *(void *)(v1 + 104);
      char v22 = *(unsigned char *)(v21 + 8);
      uint64_t result = v21 + 8;
      *(_DWORD *)(result + 16) = 0;
      *(_DWORD *)(result + 8) = 0;
      if (v22) {
        uint64_t result = sub_188B4AC((uint64_t *)result);
      }
    }
    if ((v2 & 0x400) != 0)
    {
      uint64_t v23 = *(void *)(v1 + 112);
      char v24 = *(unsigned char *)(v23 + 8);
      uint64_t result = v23 + 8;
      if (v24) {
        uint64_t result = sub_188B4AC((uint64_t *)result);
      }
    }
    if ((v2 & 0x800) != 0)
    {
      uint64_t v25 = *(void *)(v1 + 120);
      char v26 = *(unsigned char *)(v25 + 8);
      uint64_t result = v25 + 8;
      if (v26) {
        uint64_t result = sub_188B4AC((uint64_t *)result);
      }
    }
    if ((v2 & 0x1000) != 0) {
      uint64_t result = sub_183AED4(*(void *)(v1 + 128));
    }
    if ((v2 & 0x2000) != 0)
    {
      uint64_t v27 = *(void *)(v1 + 136);
      char v28 = *(unsigned char *)(v27 + 8);
      uint64_t result = v27 + 8;
      *(_DWORD *)(result + 16) = 0;
      *(_DWORD *)(result + 8) = 0;
      if (v28) {
        uint64_t result = sub_188B4AC((uint64_t *)result);
      }
    }
    if ((v2 & 0x4000) != 0)
    {
      uint64_t v29 = *(void *)(v1 + 144);
      char v30 = *(unsigned char *)(v29 + 8);
      uint64_t result = v29 + 8;
      *(_DWORD *)(result + 16) = 0;
      *(_DWORD *)(result + 8) = 0;
      if (v30) {
        uint64_t result = sub_188B4AC((uint64_t *)result);
      }
    }
    if ((v2 & 0x8000) != 0)
    {
      uint64_t v31 = *(void *)(v1 + 152);
      char v32 = *(unsigned char *)(v31 + 8);
      uint64_t result = v31 + 8;
      if (v32) {
        uint64_t result = sub_188B4AC((uint64_t *)result);
      }
    }
  }
  if ((v2 & 0xFF0000) != 0)
  {
    if ((v2 & 0x10000) != 0)
    {
      uint64_t v33 = *(void *)(v1 + 160);
      char v34 = *(unsigned char *)(v33 + 8);
      uint64_t result = v33 + 8;
      if (v34) {
        uint64_t result = sub_188B4AC((uint64_t *)result);
      }
    }
    if ((v2 & 0x20000) != 0)
    {
      uint64_t v35 = *(void *)(v1 + 168);
      char v36 = *(unsigned char *)(v35 + 8);
      uint64_t result = v35 + 8;
      if (v36) {
        uint64_t result = sub_188B4AC((uint64_t *)result);
      }
    }
    if ((v2 & 0x40000) != 0)
    {
      uint64_t v37 = *(void *)(v1 + 176);
      char v38 = *(unsigned char *)(v37 + 8);
      uint64_t result = v37 + 8;
      if (v38) {
        uint64_t result = sub_188B4AC((uint64_t *)result);
      }
    }
    if ((v2 & 0x80000) != 0)
    {
      uint64_t v39 = *(void *)(v1 + 184);
      char v40 = *(unsigned char *)(v39 + 8);
      uint64_t result = v39 + 8;
      if (v40) {
        uint64_t result = sub_188B4AC((uint64_t *)result);
      }
    }
    if ((v2 & 0x100000) != 0)
    {
      uint64_t v41 = *(void *)(v1 + 192);
      char v42 = *(unsigned char *)(v41 + 8);
      uint64_t result = v41 + 8;
      if (v42) {
        uint64_t result = sub_188B4AC((uint64_t *)result);
      }
    }
    if ((v2 & 0x200000) != 0) {
      uint64_t result = sub_183E628(*(void *)(v1 + 200));
    }
    if ((v2 & 0x400000) != 0)
    {
      uint64_t v43 = *(void *)(v1 + 208);
      char v44 = *(unsigned char *)(v43 + 8);
      uint64_t result = v43 + 8;
      *(_DWORD *)(result + 16) = 0;
      *(_DWORD *)(result + 8) = 0;
      if (v44) {
        uint64_t result = sub_188B4AC((uint64_t *)result);
      }
    }
    if ((v2 & 0x800000) != 0)
    {
      uint64_t v45 = *(void *)(v1 + 216);
      char v46 = *(unsigned char *)(v45 + 8);
      uint64_t result = v45 + 8;
      if (v46) {
        uint64_t result = sub_188B4AC((uint64_t *)result);
      }
    }
  }
  if (HIBYTE(v2))
  {
    if ((v2 & 0x1000000) != 0)
    {
      uint64_t v47 = *(void *)(v1 + 224);
      char v48 = *(unsigned char *)(v47 + 8);
      uint64_t result = v47 + 8;
      if (v48) {
        uint64_t result = sub_188B4AC((uint64_t *)result);
      }
    }
    if ((v2 & 0x2000000) != 0)
    {
      uint64_t v49 = *(void *)(v1 + 232);
      char v50 = *(unsigned char *)(v49 + 8);
      uint64_t result = v49 + 8;
      if (v50) {
        uint64_t result = sub_188B4AC((uint64_t *)result);
      }
    }
    if ((v2 & 0x4000000) != 0)
    {
      uint64_t v51 = *(void *)(v1 + 240);
      char v52 = *(unsigned char *)(v51 + 8);
      uint64_t result = v51 + 8;
      if (v52) {
        uint64_t result = sub_188B4AC((uint64_t *)result);
      }
    }
    if ((v2 & 0x8000000) != 0)
    {
      uint64_t v53 = *(void *)(v1 + 248);
      char v54 = *(unsigned char *)(v53 + 8);
      uint64_t result = v53 + 8;
      if (v54) {
        uint64_t result = sub_188B4AC((uint64_t *)result);
      }
    }
    if ((v2 & 0x10000000) != 0)
    {
      uint64_t v55 = *(void *)(v1 + 256);
      char v56 = *(unsigned char *)(v55 + 8);
      uint64_t result = v55 + 8;
      *(_DWORD *)(result + 16) = 0;
      *(_DWORD *)(result + 8) = 0;
      if (v56) {
        uint64_t result = sub_188B4AC((uint64_t *)result);
      }
    }
    if ((v2 & 0x20000000) != 0)
    {
      uint64_t v57 = *(void *)(v1 + 264);
      char v58 = *(unsigned char *)(v57 + 8);
      uint64_t result = v57 + 8;
      if (v58) {
        uint64_t result = sub_188B4AC((uint64_t *)result);
      }
    }
    if ((v2 & 0x40000000) != 0)
    {
      uint64_t v59 = *(void *)(v1 + 272);
      char v60 = *(unsigned char *)(v59 + 8);
      uint64_t result = v59 + 8;
      if (v60) {
        uint64_t result = sub_188B4AC((uint64_t *)result);
      }
    }
    if ((v2 & 0x80000000) != 0)
    {
      uint64_t v61 = *(void *)(v1 + 280);
      char v62 = *(unsigned char *)(v61 + 8);
      uint64_t result = v61 + 8;
      if (v62) {
        uint64_t result = sub_188B4AC((uint64_t *)result);
      }
    }
  }
  int v63 = *(_DWORD *)(v1 + 20);
  if ((v63 & 0xF) != 0)
  {
    if (v63)
    {
      uint64_t v64 = *(void *)(v1 + 288);
      char v65 = *(unsigned char *)(v64 + 8);
      uint64_t result = v64 + 8;
      if (v65) {
        uint64_t result = sub_188B4AC((uint64_t *)result);
      }
    }
    if ((v63 & 2) != 0)
    {
      uint64_t v66 = *(void *)(v1 + 296);
      char v67 = *(unsigned char *)(v66 + 8);
      uint64_t result = v66 + 8;
      if (v67) {
        uint64_t result = sub_188B4AC((uint64_t *)result);
      }
    }
    if ((v63 & 4) != 0)
    {
      uint64_t v68 = *(void *)(v1 + 304);
      char v69 = *(unsigned char *)(v68 + 8);
      uint64_t result = v68 + 8;
      if (v69) {
        uint64_t result = sub_188B4AC((uint64_t *)result);
      }
    }
    if ((v63 & 8) != 0) {
      uint64_t result = sub_184004C(*(void *)(v1 + 312));
    }
  }
  if ((v63 & 0x30) != 0) {
    *(void *)(v1 + 320) = 0;
  }
  char v71 = *(unsigned char *)(v1 + 8);
  uint64_t v70 = (uint64_t *)(v1 + 8);
  v70[1] = 0;
  if (v71)
  {
    return sub_188B4AC(v70);
  }
  return result;
}

char *sub_18403D8(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v99 = a2;
  if (sub_11947B8((uint64_t)a3, &v99, a3[11].i32[1])) {
    return v99;
  }
  char v6 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v7 = v99 + 1;
    unsigned int v8 = *v99;
    if (*v99 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v99, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v99 + 2;
      }
    }
    uint64_t v99 = v7;
    unsigned int v11 = v8 >> 3;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 8) {
          goto LABEL_239;
        }
        char v12 = v7 + 1;
        unint64_t v13 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        int v15 = v13 + (v14 << 7);
        unint64_t v13 = (v15 - 128);
        if (v14 < 0)
        {
          uint64_t v99 = (char *)sub_188C138((uint64_t)v7, (v15 - 128));
          if (!v99) {
            return 0;
          }
          unint64_t v13 = v95;
        }
        else
        {
          char v12 = v7 + 2;
LABEL_13:
          uint64_t v99 = v12;
        }
        if (v13 > 0x23)
        {
          if (*v6) {
            uint64_t v98 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v98 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(1, v13, v98);
        }
        else
        {
          *(_DWORD *)(a1 + 20) |= 0x10u;
          *(_DWORD *)(a1 + 320) = v13;
        }
        goto LABEL_247;
      case 2u:
        if (v8 != 18) {
          goto LABEL_239;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v20 = *(void *)(a1 + 32);
        if (!v20)
        {
          uint64_t v21 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v21 = (void *)*v21;
          }
          uint64_t v20 = sub_1848A68((uint64_t)v21);
          *(void *)(a1 + 32) = v20;
          uint64_t v7 = v99;
        }
        uint64_t v19 = sub_18411F8(a3, v20, (unsigned __int8 *)v7);
        goto LABEL_246;
      case 3u:
        if (v8 != 26) {
          goto LABEL_239;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v22 = *(void *)(a1 + 40);
        if (!v22)
        {
          uint64_t v23 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v23 = (void *)*v23;
          }
          uint64_t v22 = sub_1848AE0((uint64_t)v23);
          *(void *)(a1 + 40) = v22;
          uint64_t v7 = v99;
        }
        uint64_t v19 = sub_1841288(a3, v22, (unsigned __int8 *)v7);
        goto LABEL_246;
      case 4u:
        if (v8 != 34) {
          goto LABEL_239;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        char v24 = *(void **)(a1 + 48);
        if (!v24)
        {
          uint64_t v25 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v25 = (void *)*v25;
          }
          char v24 = sub_1848B58((uint64_t)v25);
          *(void *)(a1 + 48) = v24;
          uint64_t v7 = v99;
        }
        uint64_t v19 = sub_1841318(a3, (uint64_t)v24, (unsigned __int8 *)v7);
        goto LABEL_246;
      case 5u:
        if (v8 != 42) {
          goto LABEL_239;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v26 = *(void *)(a1 + 56);
        if (!v26)
        {
          uint64_t v27 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v27 = (void *)*v27;
          }
          uint64_t v26 = sub_1848BD0((uint64_t)v27);
          *(void *)(a1 + 56) = v26;
          uint64_t v7 = v99;
        }
        uint64_t v19 = sub_18413A8(a3, v26, (unsigned __int8 *)v7);
        goto LABEL_246;
      case 6u:
        if (v8 != 50) {
          goto LABEL_239;
        }
        *(_DWORD *)(a1 + 16) |= 0x10u;
        uint64_t v28 = *(void *)(a1 + 64);
        if (!v28)
        {
          uint64_t v29 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v29 = (void *)*v29;
          }
          uint64_t v28 = sub_1848C48((uint64_t)v29);
          *(void *)(a1 + 64) = v28;
          uint64_t v7 = v99;
        }
        uint64_t v19 = sub_1841438(a3, v28, (unsigned __int8 *)v7);
        goto LABEL_246;
      case 7u:
        if (v8 != 58) {
          goto LABEL_239;
        }
        *(_DWORD *)(a1 + 16) |= 0x20u;
        uint64_t v30 = *(void *)(a1 + 72);
        if (!v30)
        {
          uint64_t v31 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v31 = (void *)*v31;
          }
          uint64_t v30 = sub_1848CE4((uint64_t)v31);
          *(void *)(a1 + 72) = v30;
          uint64_t v7 = v99;
        }
        uint64_t v19 = sub_18414C8(a3, v30, (unsigned __int8 *)v7);
        goto LABEL_246;
      case 8u:
        if (v8 != 66) {
          goto LABEL_239;
        }
        *(_DWORD *)(a1 + 16) |= 0x40u;
        uint64_t v32 = *(void *)(a1 + 80);
        if (!v32)
        {
          uint64_t v33 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v33 = (void *)*v33;
          }
          uint64_t v32 = sub_1848D60((uint64_t)v33);
          *(void *)(a1 + 80) = v32;
          uint64_t v7 = v99;
        }
        uint64_t v19 = sub_1841558(a3, v32, (unsigned __int8 *)v7);
        goto LABEL_246;
      case 9u:
        if (v8 != 74) {
          goto LABEL_239;
        }
        *(_DWORD *)(a1 + 16) |= 0x80u;
        uint64_t v34 = *(void *)(a1 + 88);
        if (!v34)
        {
          uint64_t v35 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v35 = (void *)*v35;
          }
          uint64_t v34 = sub_1848DDC((uint64_t)v35);
          *(void *)(a1 + 88) = v34;
          uint64_t v7 = v99;
        }
        uint64_t v19 = sub_18415E8(a3, v34, (unsigned __int8 *)v7);
        goto LABEL_246;
      case 0xAu:
        if (v8 != 82) {
          goto LABEL_239;
        }
        *(_DWORD *)(a1 + 16) |= 0x100u;
        uint64_t v36 = *(void *)(a1 + 96);
        if (!v36)
        {
          uint64_t v37 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v37 = (void *)*v37;
          }
          uint64_t v36 = sub_1848E54((uint64_t)v37);
          *(void *)(a1 + 96) = v36;
          uint64_t v7 = v99;
        }
        uint64_t v19 = sub_1841678(a3, v36, (unsigned __int8 *)v7);
        goto LABEL_246;
      case 0xBu:
        if (v8 != 90) {
          goto LABEL_239;
        }
        *(_DWORD *)(a1 + 16) |= 0x200u;
        uint64_t v38 = *(void *)(a1 + 104);
        if (!v38)
        {
          uint64_t v39 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v39 = (void *)*v39;
          }
          uint64_t v38 = sub_1848ECC((uint64_t)v39);
          *(void *)(a1 + 104) = v38;
          uint64_t v7 = v99;
        }
        uint64_t v19 = sub_1841708(a3, v38, (unsigned __int8 *)v7);
        goto LABEL_246;
      case 0xCu:
        if (v8 != 98) {
          goto LABEL_239;
        }
        *(_DWORD *)(a1 + 16) |= 0x400u;
        uint64_t v40 = *(void *)(a1 + 112);
        if (!v40)
        {
          uint64_t v41 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v41 = (void *)*v41;
          }
          uint64_t v40 = sub_1848F48((uint64_t)v41);
          *(void *)(a1 + 112) = v40;
          uint64_t v7 = v99;
        }
        uint64_t v19 = sub_1841798(a3, v40, (unsigned __int8 *)v7);
        goto LABEL_246;
      case 0xDu:
        if (v8 != 106) {
          goto LABEL_239;
        }
        *(_DWORD *)(a1 + 16) |= 0x800u;
        uint64_t v42 = *(void *)(a1 + 120);
        if (!v42)
        {
          uint64_t v43 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v43 = (void *)*v43;
          }
          uint64_t v42 = sub_18490B0((uint64_t)v43);
          *(void *)(a1 + 120) = v42;
          uint64_t v7 = v99;
        }
        uint64_t v19 = sub_1841828(a3, v42, (unsigned __int8 *)v7);
        goto LABEL_246;
      case 0xEu:
        if (v8 != 114) {
          goto LABEL_239;
        }
        *(_DWORD *)(a1 + 16) |= 0x1000u;
        uint64_t v44 = *(void *)(a1 + 128);
        if (!v44)
        {
          uint64_t v45 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v45 = (void *)*v45;
          }
          uint64_t v44 = sub_18491A8((uint64_t)v45);
          *(void *)(a1 + 128) = v44;
          uint64_t v7 = v99;
        }
        uint64_t v19 = (char *)sub_18418B8(a3, v44, (unsigned __int8 *)v7);
        goto LABEL_246;
      case 0xFu:
        if (v8 != 122) {
          goto LABEL_239;
        }
        *(_DWORD *)(a1 + 16) |= 0x2000u;
        uint64_t v46 = *(void *)(a1 + 136);
        if (!v46)
        {
          uint64_t v47 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v47 = (void *)*v47;
          }
          uint64_t v46 = sub_1849264((uint64_t)v47);
          *(void *)(a1 + 136) = v46;
          uint64_t v7 = v99;
        }
        uint64_t v19 = sub_1841948(a3, v46, (unsigned __int8 *)v7);
        goto LABEL_246;
      case 0x10u:
        if (v8 != 130) {
          goto LABEL_239;
        }
        *(_DWORD *)(a1 + 16) |= 0x4000u;
        uint64_t v48 = *(void *)(a1 + 144);
        if (!v48)
        {
          uint64_t v49 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v49 = (void *)*v49;
          }
          uint64_t v48 = sub_18492E0((uint64_t)v49);
          *(void *)(a1 + 144) = v48;
          uint64_t v7 = v99;
        }
        uint64_t v19 = sub_18419D8(a3, v48, (unsigned __int8 *)v7);
        goto LABEL_246;
      case 0x11u:
        if (v8 != 138) {
          goto LABEL_239;
        }
        *(_DWORD *)(a1 + 16) |= 0x8000u;
        uint64_t v50 = *(void *)(a1 + 152);
        if (!v50)
        {
          uint64_t v51 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v51 = (void *)*v51;
          }
          uint64_t v50 = sub_184935C((uint64_t)v51);
          *(void *)(a1 + 152) = v50;
          uint64_t v7 = v99;
        }
        uint64_t v19 = sub_1841A68(a3, v50, (unsigned __int8 *)v7);
        goto LABEL_246;
      case 0x12u:
        if (v8 != 146) {
          goto LABEL_239;
        }
        *(_DWORD *)(a1 + 16) |= 0x10000u;
        uint64_t v52 = *(void *)(a1 + 160);
        if (!v52)
        {
          uint64_t v53 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v53 = (void *)*v53;
          }
          uint64_t v52 = sub_18493D4((uint64_t)v53);
          *(void *)(a1 + 160) = v52;
          uint64_t v7 = v99;
        }
        uint64_t v19 = sub_1841AF8(a3, v52, (unsigned __int8 *)v7);
        goto LABEL_246;
      case 0x13u:
        if (v8 != 154) {
          goto LABEL_239;
        }
        *(_DWORD *)(a1 + 16) |= 0x20000u;
        uint64_t v54 = *(void *)(a1 + 168);
        if (!v54)
        {
          uint64_t v55 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v55 = (void *)*v55;
          }
          uint64_t v54 = sub_184944C((uint64_t)v55);
          *(void *)(a1 + 168) = v54;
          uint64_t v7 = v99;
        }
        uint64_t v19 = sub_1841B88(a3, v54, (unsigned __int8 *)v7);
        goto LABEL_246;
      case 0x14u:
        if (v8 != 162) {
          goto LABEL_239;
        }
        *(_DWORD *)(a1 + 16) |= 0x40000u;
        uint64_t v56 = *(void *)(a1 + 176);
        if (!v56)
        {
          uint64_t v57 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v57 = (void *)*v57;
          }
          uint64_t v56 = sub_18494C4((uint64_t)v57);
          *(void *)(a1 + 176) = v56;
          uint64_t v7 = v99;
        }
        uint64_t v19 = sub_1841C18(a3, v56, (unsigned __int8 *)v7);
        goto LABEL_246;
      case 0x15u:
        if (v8 != 170) {
          goto LABEL_239;
        }
        *(_DWORD *)(a1 + 16) |= 0x80000u;
        uint64_t v58 = *(void *)(a1 + 184);
        if (!v58)
        {
          uint64_t v59 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v59 = (void *)*v59;
          }
          uint64_t v58 = sub_184953C((uint64_t)v59);
          *(void *)(a1 + 184) = v58;
          uint64_t v7 = v99;
        }
        uint64_t v19 = sub_1841CA8(a3, v58, (unsigned __int8 *)v7);
        goto LABEL_246;
      case 0x16u:
        if (v8 != 178) {
          goto LABEL_239;
        }
        *(_DWORD *)(a1 + 16) |= 0x100000u;
        uint64_t v60 = *(void *)(a1 + 192);
        if (!v60)
        {
          uint64_t v61 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v61 = (void *)*v61;
          }
          uint64_t v60 = sub_18495B4((uint64_t)v61);
          *(void *)(a1 + 192) = v60;
          uint64_t v7 = v99;
        }
        uint64_t v19 = sub_1841D38(a3, v60, (unsigned __int8 *)v7);
        goto LABEL_246;
      case 0x17u:
        if (v8 != 186) {
          goto LABEL_239;
        }
        *(_DWORD *)(a1 + 16) |= 0x200000u;
        char v62 = *(void **)(a1 + 200);
        if (!v62)
        {
          int v63 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            int v63 = (void *)*v63;
          }
          char v62 = sub_1849888((uint64_t)v63);
          *(void *)(a1 + 200) = v62;
          uint64_t v7 = v99;
        }
        uint64_t v19 = (char *)sub_1841DC8(a3, (uint64_t)v62, (unsigned __int8 *)v7);
        goto LABEL_246;
      case 0x18u:
        if (v8 != 194) {
          goto LABEL_239;
        }
        *(_DWORD *)(a1 + 16) |= 0x400000u;
        uint64_t v64 = *(void *)(a1 + 208);
        if (!v64)
        {
          char v65 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            char v65 = (void *)*v65;
          }
          uint64_t v64 = sub_184990C((uint64_t)v65);
          *(void *)(a1 + 208) = v64;
          uint64_t v7 = v99;
        }
        uint64_t v19 = sub_1841E58(a3, v64, (unsigned __int8 *)v7);
        goto LABEL_246;
      case 0x19u:
        if (v8 != 202) {
          goto LABEL_239;
        }
        *(_DWORD *)(a1 + 16) |= 0x800000u;
        uint64_t v66 = *(void *)(a1 + 216);
        if (!v66)
        {
          char v67 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            char v67 = (void *)*v67;
          }
          uint64_t v66 = sub_1849988((uint64_t)v67);
          *(void *)(a1 + 216) = v66;
          uint64_t v7 = v99;
        }
        uint64_t v19 = sub_1841EE8(a3, v66, (unsigned __int8 *)v7);
        goto LABEL_246;
      case 0x1Au:
        if (v8 != 210) {
          goto LABEL_239;
        }
        *(_DWORD *)(a1 + 16) |= 0x1000000u;
        uint64_t v68 = *(void *)(a1 + 224);
        if (!v68)
        {
          char v69 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            char v69 = (void *)*v69;
          }
          uint64_t v68 = sub_1848FC0((uint64_t)v69);
          *(void *)(a1 + 224) = v68;
          uint64_t v7 = v99;
        }
        uint64_t v19 = sub_1841F78(a3, v68, (unsigned __int8 *)v7);
        goto LABEL_246;
      case 0x1Bu:
        if (v8 != 218) {
          goto LABEL_239;
        }
        *(_DWORD *)(a1 + 16) |= 0x2000000u;
        uint64_t v70 = *(void *)(a1 + 232);
        if (!v70)
        {
          char v71 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            char v71 = (void *)*v71;
          }
          uint64_t v70 = sub_1849038((uint64_t)v71);
          *(void *)(a1 + 232) = v70;
          uint64_t v7 = v99;
        }
        uint64_t v19 = sub_1842008(a3, v70, (unsigned __int8 *)v7);
        goto LABEL_246;
      case 0x1Cu:
        if (v8 != 226) {
          goto LABEL_239;
        }
        *(_DWORD *)(a1 + 16) |= 0x4000000u;
        uint64_t v72 = *(void *)(a1 + 240);
        if (!v72)
        {
          uint64_t v73 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v73 = (void *)*v73;
          }
          uint64_t v72 = sub_184962C((uint64_t)v73);
          *(void *)(a1 + 240) = v72;
          uint64_t v7 = v99;
        }
        uint64_t v19 = sub_1842098(a3, v72, (unsigned __int8 *)v7);
        goto LABEL_246;
      case 0x1Du:
        if (v8 != 234) {
          goto LABEL_239;
        }
        *(_DWORD *)(a1 + 16) |= 0x8000000u;
        uint64_t v74 = *(void *)(a1 + 248);
        if (!v74)
        {
          uint64_t v75 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v75 = (void *)*v75;
          }
          uint64_t v74 = sub_18496A4((uint64_t)v75);
          *(void *)(a1 + 248) = v74;
          uint64_t v7 = v99;
        }
        uint64_t v19 = sub_1842128(a3, v74, (unsigned __int8 *)v7);
        goto LABEL_246;
      case 0x1Eu:
        if (v8 != 242) {
          goto LABEL_239;
        }
        *(_DWORD *)(a1 + 16) |= 0x10000000u;
        uint64_t v76 = *(void *)(a1 + 256);
        if (!v76)
        {
          uint64_t v77 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v77 = (void *)*v77;
          }
          uint64_t v76 = sub_184971C((uint64_t)v77);
          *(void *)(a1 + 256) = v76;
          uint64_t v7 = v99;
        }
        uint64_t v19 = sub_18421B8(a3, v76, (unsigned __int8 *)v7);
        goto LABEL_246;
      case 0x1Fu:
        if (v8 != 250) {
          goto LABEL_239;
        }
        *(_DWORD *)(a1 + 16) |= 0x20000000u;
        uint64_t v78 = *(void *)(a1 + 264);
        if (!v78)
        {
          uint64_t v79 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v79 = (void *)*v79;
          }
          uint64_t v78 = sub_1849810((uint64_t)v79);
          *(void *)(a1 + 264) = v78;
          uint64_t v7 = v99;
        }
        uint64_t v19 = sub_1842248(a3, v78, (unsigned __int8 *)v7);
        goto LABEL_246;
      case 0x20u:
        if (v8 != 2) {
          goto LABEL_239;
        }
        *(_DWORD *)(a1 + 16) |= 0x40000000u;
        uint64_t v80 = *(void *)(a1 + 272);
        if (!v80)
        {
          uint64_t v81 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v81 = (void *)*v81;
          }
          uint64_t v80 = sub_1849798((uint64_t)v81);
          *(void *)(a1 + 272) = v80;
          uint64_t v7 = v99;
        }
        uint64_t v19 = sub_18422D8(a3, v80, (unsigned __int8 *)v7);
        goto LABEL_246;
      case 0x21u:
        if (v8 != 10) {
          goto LABEL_239;
        }
        *(_DWORD *)(a1 + 16) |= 0x80000000;
        uint64_t v82 = *(void *)(a1 + 280);
        if (!v82)
        {
          uint64_t v83 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v83 = (void *)*v83;
          }
          uint64_t v82 = sub_1849A00((uint64_t)v83);
          *(void *)(a1 + 280) = v82;
          uint64_t v7 = v99;
        }
        uint64_t v19 = sub_1842368(a3, v82, (unsigned __int8 *)v7);
        goto LABEL_246;
      case 0x22u:
        if (v8 != 18) {
          goto LABEL_239;
        }
        *(_DWORD *)(a1 + 20) |= 1u;
        uint64_t v84 = *(void *)(a1 + 288);
        if (!v84)
        {
          uint64_t v85 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v85 = (void *)*v85;
          }
          uint64_t v84 = sub_1849A78((uint64_t)v85);
          *(void *)(a1 + 288) = v84;
          uint64_t v7 = v99;
        }
        uint64_t v19 = sub_18423F8(a3, v84, (unsigned __int8 *)v7);
        goto LABEL_246;
      case 0x23u:
        if (v8 != 26) {
          goto LABEL_239;
        }
        *(_DWORD *)(a1 + 20) |= 2u;
        uint64_t v86 = *(void *)(a1 + 296);
        if (!v86)
        {
          uint64_t v87 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v87 = (void *)*v87;
          }
          uint64_t v86 = sub_1849AF0((uint64_t)v87);
          *(void *)(a1 + 296) = v86;
          uint64_t v7 = v99;
        }
        uint64_t v19 = sub_1842488(a3, v86, (unsigned __int8 *)v7);
        goto LABEL_246;
      case 0x24u:
        if (v8 != 34) {
          goto LABEL_239;
        }
        *(_DWORD *)(a1 + 20) |= 4u;
        uint64_t v88 = *(void *)(a1 + 304);
        if (!v88)
        {
          uint64_t v89 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v89 = (void *)*v89;
          }
          uint64_t v88 = sub_1849B68((uint64_t)v89);
          *(void *)(a1 + 304) = v88;
          uint64_t v7 = v99;
        }
        uint64_t v19 = sub_1842518(a3, v88, (unsigned __int8 *)v7);
        goto LABEL_246;
      default:
        if (v11 == 101)
        {
          if (v8 != 40) {
            goto LABEL_239;
          }
          *(_DWORD *)(a1 + 20) |= 0x20u;
          uint64_t v91 = v7 + 1;
          LODWORD(v90) = *v7;
          if ((v90 & 0x80) == 0) {
            goto LABEL_238;
          }
          int v92 = *v91;
          uint64_t v90 = v90 + (v92 << 7) - 128;
          if ((v92 & 0x80000000) == 0)
          {
            uint64_t v91 = v7 + 2;
LABEL_238:
            uint64_t v99 = v91;
            *(_DWORD *)(a1 + 324) = v90;
            goto LABEL_247;
          }
          uint64_t v96 = (char *)sub_188C138((uint64_t)v7, v90);
          uint64_t v99 = v96;
          *(_DWORD *)(a1 + 324) = v97;
          if (!v96) {
            return 0;
          }
LABEL_247:
          if (sub_11947B8((uint64_t)a3, &v99, a3[11].i32[1])) {
            return v99;
          }
          continue;
        }
        if (v11 == 102 && v8 == 50)
        {
          *(_DWORD *)(a1 + 20) |= 8u;
          uint64_t v16 = *(void *)(a1 + 312);
          if (!v16)
          {
            uint64_t v17 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v6) {
              uint64_t v17 = (void *)*v17;
            }
            sub_1849BE0((uint64_t)v17);
            uint64_t v16 = v18;
            *(void *)(a1 + 312) = v18;
          }
          uint64_t v19 = (char *)sub_18425A8(a3, v16);
LABEL_246:
          uint64_t v99 = v19;
          if (!v19) {
            return 0;
          }
          goto LABEL_247;
        }
LABEL_239:
        if (v8) {
          BOOL v93 = (v8 & 7) == 4;
        }
        else {
          BOOL v93 = 1;
        }
        if (!v93)
        {
          if (*v6)
          {
            uint64_t v94 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v94 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v7 = v99;
          }
          uint64_t v19 = (char *)sub_1885AC0(v8, v94, v7, a3);
          goto LABEL_246;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return v99;
    }
  }
}

char *sub_18411F8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1837674(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1841288(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1837930(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1841318(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1837BF4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_18413A8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1837FD8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1841438(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_18382A8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_18414C8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1838918(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1841558(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1838D38(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_18415E8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_18390C0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1841678(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_183937C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1841708(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1839640(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1841798(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1839A24(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1841828(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_183A258(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_18418B8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_183B064(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1841948(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_183BEC4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_18419D8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_183C2B0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1841A68(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_183C6C8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1841AF8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_183C984(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1841B88(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_183CC40(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1841C18(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_183CEFC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1841CA8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_183D1B8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1841D38(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_183D474(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_1841DC8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_183E66C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1841E58(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_183E9F0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1841EE8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_183EDD4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1841F78(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1839CE0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1842008(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1839F9C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1842098(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_183D730(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1842128(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_183D9EC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_18421B8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_183DCB0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1842248(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_183E350(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_18422D8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_183E094(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1842368(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_183F090(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_18423F8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_183F34C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1842488(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_183F608(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1842518(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_183F8C4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_18425A8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_18403D8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_1842638(uint64_t a1, unsigned char *a2, _DWORD *a3)
{
  char v4 = a2;
  if ((*(unsigned char *)(a1 + 20) & 0x10) != 0)
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unint64_t v6 = *(int *)(a1 + 320);
    *char v4 = 8;
    v4[1] = v6;
    if (v6 > 0x7F)
    {
      v4[1] = v6 | 0x80;
      unint64_t v7 = v6 >> 7;
      v4[2] = v6 >> 7;
      v4 += 3;
      if (v6 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v8 = v7 >> 14;
          v7 >>= 7;
          *v4++ = v7;
        }
        while (v8);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v9 = *(_DWORD *)(a1 + 16);
  if (v9)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 32);
    *char v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 16);
    v4[1] = v11;
    if (v11 > 0x7F) {
      char v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      char v12 = v4 + 2;
    }
    char v4 = sub_1837774(v10, v12, a3);
    if ((v9 & 2) == 0)
    {
LABEL_10:
      if ((v9 & 4) == 0) {
        goto LABEL_11;
      }
      goto LABEL_53;
    }
  }
  else if ((v9 & 2) == 0)
  {
    goto LABEL_10;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v13 = *(void *)(a1 + 40);
  *char v4 = 26;
  unsigned int v14 = *(_DWORD *)(v13 + 16);
  v4[1] = v14;
  if (v14 > 0x7F) {
    int v15 = sub_188A9CC(v14, v4 + 1);
  }
  else {
    int v15 = v4 + 2;
  }
  char v4 = sub_1837A30(v13, v15, a3);
  if ((v9 & 4) == 0)
  {
LABEL_11:
    if ((v9 & 8) == 0) {
      goto LABEL_12;
    }
    goto LABEL_59;
  }
LABEL_53:
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v16 = *(void *)(a1 + 48);
  *char v4 = 34;
  unsigned int v17 = *(_DWORD *)(v16 + 20);
  v4[1] = v17;
  if (v17 > 0x7F) {
    uint64_t v18 = sub_188A9CC(v17, v4 + 1);
  }
  else {
    uint64_t v18 = v4 + 2;
  }
  char v4 = sub_1837D74(v16, (unint64_t)v18, a3);
  if ((v9 & 8) == 0)
  {
LABEL_12:
    if ((v9 & 0x10) == 0) {
      goto LABEL_13;
    }
    goto LABEL_65;
  }
LABEL_59:
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v19 = *(void *)(a1 + 56);
  *char v4 = 42;
  unsigned int v20 = *(_DWORD *)(v19 + 16);
  v4[1] = v20;
  if (v20 > 0x7F) {
    uint64_t v21 = sub_188A9CC(v20, v4 + 1);
  }
  else {
    uint64_t v21 = v4 + 2;
  }
  char v4 = sub_18380D8(v19, v21, a3);
  if ((v9 & 0x10) == 0)
  {
LABEL_13:
    if ((v9 & 0x20) == 0) {
      goto LABEL_14;
    }
    goto LABEL_71;
  }
LABEL_65:
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v22 = *(void *)(a1 + 64);
  *char v4 = 50;
  unsigned int v23 = *(_DWORD *)(v22 + 20);
  v4[1] = v23;
  if (v23 > 0x7F) {
    char v24 = sub_188A9CC(v23, v4 + 1);
  }
  else {
    char v24 = v4 + 2;
  }
  char v4 = sub_18385A4(v22, (unint64_t)v24, a3);
  if ((v9 & 0x20) == 0)
  {
LABEL_14:
    if ((v9 & 0x40) == 0) {
      goto LABEL_15;
    }
    goto LABEL_77;
  }
LABEL_71:
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v25 = *(void *)(a1 + 72);
  *char v4 = 58;
  unsigned int v26 = *(_DWORD *)(v25 + 20);
  v4[1] = v26;
  if (v26 > 0x7F) {
    uint64_t v27 = sub_188A9CC(v26, v4 + 1);
  }
  else {
    uint64_t v27 = v4 + 2;
  }
  char v4 = sub_1838AC0(v25, (unint64_t)v27, a3);
  if ((v9 & 0x40) == 0)
  {
LABEL_15:
    if ((v9 & 0x80) == 0) {
      goto LABEL_16;
    }
    goto LABEL_83;
  }
LABEL_77:
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v28 = *(void *)(a1 + 80);
  *char v4 = 66;
  unsigned int v29 = *(_DWORD *)(v28 + 20);
  v4[1] = v29;
  if (v29 > 0x7F) {
    uint64_t v30 = sub_188A9CC(v29, v4 + 1);
  }
  else {
    uint64_t v30 = v4 + 2;
  }
  char v4 = sub_1838EC8(v28, (unint64_t)v30, a3);
  if ((v9 & 0x80) == 0)
  {
LABEL_16:
    if ((v9 & 0x100) == 0) {
      goto LABEL_17;
    }
    goto LABEL_89;
  }
LABEL_83:
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v31 = *(void *)(a1 + 88);
  *char v4 = 74;
  unsigned int v32 = *(_DWORD *)(v31 + 16);
  v4[1] = v32;
  if (v32 > 0x7F) {
    uint64_t v33 = sub_188A9CC(v32, v4 + 1);
  }
  else {
    uint64_t v33 = v4 + 2;
  }
  char v4 = sub_18391C0(v31, v33, a3);
  if ((v9 & 0x100) == 0)
  {
LABEL_17:
    if ((v9 & 0x200) == 0) {
      goto LABEL_18;
    }
    goto LABEL_95;
  }
LABEL_89:
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v34 = *(void *)(a1 + 96);
  *char v4 = 82;
  unsigned int v35 = *(_DWORD *)(v34 + 16);
  v4[1] = v35;
  if (v35 > 0x7F) {
    uint64_t v36 = sub_188A9CC(v35, v4 + 1);
  }
  else {
    uint64_t v36 = v4 + 2;
  }
  char v4 = sub_183947C(v34, v36, a3);
  if ((v9 & 0x200) == 0)
  {
LABEL_18:
    if ((v9 & 0x400) == 0) {
      goto LABEL_19;
    }
    goto LABEL_101;
  }
LABEL_95:
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v37 = *(void *)(a1 + 104);
  *char v4 = 90;
  unsigned int v38 = *(_DWORD *)(v37 + 20);
  v4[1] = v38;
  if (v38 > 0x7F) {
    uint64_t v39 = sub_188A9CC(v38, v4 + 1);
  }
  else {
    uint64_t v39 = v4 + 2;
  }
  char v4 = sub_18397C0(v37, (unint64_t)v39, a3);
  if ((v9 & 0x400) == 0)
  {
LABEL_19:
    if ((v9 & 0x800) == 0) {
      goto LABEL_20;
    }
    goto LABEL_107;
  }
LABEL_101:
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v40 = *(void *)(a1 + 112);
  *char v4 = 98;
  unsigned int v41 = *(_DWORD *)(v40 + 16);
  v4[1] = v41;
  if (v41 > 0x7F) {
    uint64_t v42 = sub_188A9CC(v41, v4 + 1);
  }
  else {
    uint64_t v42 = v4 + 2;
  }
  char v4 = sub_1839B24(v40, v42, a3);
  if ((v9 & 0x800) == 0)
  {
LABEL_20:
    if ((v9 & 0x1000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_113;
  }
LABEL_107:
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v43 = *(void *)(a1 + 120);
  *char v4 = 106;
  unsigned int v44 = *(_DWORD *)(v43 + 16);
  v4[1] = v44;
  if (v44 > 0x7F) {
    uint64_t v45 = sub_188A9CC(v44, v4 + 1);
  }
  else {
    uint64_t v45 = v4 + 2;
  }
  char v4 = sub_183A358(v43, v45, a3);
  if ((v9 & 0x1000) == 0)
  {
LABEL_21:
    if ((v9 & 0x2000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_119;
  }
LABEL_113:
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v46 = *(void *)(a1 + 128);
  *char v4 = 114;
  unsigned int v47 = *(_DWORD *)(v46 + 20);
  v4[1] = v47;
  if (v47 > 0x7F) {
    uint64_t v48 = sub_188A9CC(v47, v4 + 1);
  }
  else {
    uint64_t v48 = v4 + 2;
  }
  char v4 = sub_183B55C(v46, v48, a3);
  if ((v9 & 0x2000) == 0)
  {
LABEL_22:
    if ((v9 & 0x4000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_125;
  }
LABEL_119:
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v49 = *(void *)(a1 + 136);
  *char v4 = 122;
  unsigned int v50 = *(_DWORD *)(v49 + 20);
  v4[1] = v50;
  if (v50 > 0x7F) {
    uint64_t v51 = sub_188A9CC(v50, v4 + 1);
  }
  else {
    uint64_t v51 = v4 + 2;
  }
  char v4 = sub_183C044(v49, (unint64_t)v51, a3);
  if ((v9 & 0x4000) == 0)
  {
LABEL_23:
    if ((v9 & 0x8000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_131;
  }
LABEL_125:
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v52 = *(void *)(a1 + 144);
  *(_WORD *)char v4 = 386;
  unsigned int v53 = *(_DWORD *)(v52 + 20);
  v4[2] = v53;
  if (v53 > 0x7F) {
    uint64_t v54 = sub_188A9CC(v53, v4 + 2);
  }
  else {
    uint64_t v54 = v4 + 3;
  }
  char v4 = sub_183C458(v52, (unint64_t)v54, a3);
  if ((v9 & 0x8000) == 0)
  {
LABEL_24:
    if ((v9 & 0x10000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_137;
  }
LABEL_131:
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v55 = *(void *)(a1 + 152);
  *(_WORD *)char v4 = 394;
  unsigned int v56 = *(_DWORD *)(v55 + 16);
  v4[2] = v56;
  if (v56 > 0x7F) {
    uint64_t v57 = sub_188A9CC(v56, v4 + 2);
  }
  else {
    uint64_t v57 = v4 + 3;
  }
  char v4 = sub_183C7C8(v55, v57, a3);
  if ((v9 & 0x10000) == 0)
  {
LABEL_25:
    if ((v9 & 0x20000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_143;
  }
LABEL_137:
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v58 = *(void *)(a1 + 160);
  *(_WORD *)char v4 = 402;
  unsigned int v59 = *(_DWORD *)(v58 + 16);
  v4[2] = v59;
  if (v59 > 0x7F) {
    uint64_t v60 = sub_188A9CC(v59, v4 + 2);
  }
  else {
    uint64_t v60 = v4 + 3;
  }
  char v4 = sub_183CA84(v58, v60, a3);
  if ((v9 & 0x20000) == 0)
  {
LABEL_26:
    if ((v9 & 0x40000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_149;
  }
LABEL_143:
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v61 = *(void *)(a1 + 168);
  *(_WORD *)char v4 = 410;
  unsigned int v62 = *(_DWORD *)(v61 + 16);
  v4[2] = v62;
  if (v62 > 0x7F) {
    int v63 = sub_188A9CC(v62, v4 + 2);
  }
  else {
    int v63 = v4 + 3;
  }
  char v4 = sub_183CD40(v61, v63, a3);
  if ((v9 & 0x40000) == 0)
  {
LABEL_27:
    if ((v9 & 0x80000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_155;
  }
LABEL_149:
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v64 = *(void *)(a1 + 176);
  *(_WORD *)char v4 = 418;
  unsigned int v65 = *(_DWORD *)(v64 + 16);
  v4[2] = v65;
  if (v65 > 0x7F) {
    uint64_t v66 = sub_188A9CC(v65, v4 + 2);
  }
  else {
    uint64_t v66 = v4 + 3;
  }
  char v4 = sub_183CFFC(v64, v66, a3);
  if ((v9 & 0x80000) == 0)
  {
LABEL_28:
    if ((v9 & 0x100000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_161;
  }
LABEL_155:
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v67 = *(void *)(a1 + 184);
  *(_WORD *)char v4 = 426;
  unsigned int v68 = *(_DWORD *)(v67 + 16);
  v4[2] = v68;
  if (v68 > 0x7F) {
    char v69 = sub_188A9CC(v68, v4 + 2);
  }
  else {
    char v69 = v4 + 3;
  }
  char v4 = sub_183D2B8(v67, v69, a3);
  if ((v9 & 0x100000) == 0)
  {
LABEL_29:
    if ((v9 & 0x200000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_167;
  }
LABEL_161:
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v70 = *(void *)(a1 + 192);
  *(_WORD *)char v4 = 434;
  unsigned int v71 = *(_DWORD *)(v70 + 16);
  v4[2] = v71;
  if (v71 > 0x7F) {
    uint64_t v72 = sub_188A9CC(v71, v4 + 2);
  }
  else {
    uint64_t v72 = v4 + 3;
  }
  char v4 = sub_183D574(v70, v72, a3);
  if ((v9 & 0x200000) == 0)
  {
LABEL_30:
    if ((v9 & 0x400000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_173;
  }
LABEL_167:
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v73 = *(void *)(a1 + 200);
  *(_WORD *)char v4 = 442;
  unsigned int v74 = *(_DWORD *)(v73 + 20);
  v4[2] = v74;
  if (v74 > 0x7F) {
    uint64_t v75 = sub_188A9CC(v74, v4 + 2);
  }
  else {
    uint64_t v75 = v4 + 3;
  }
  char v4 = sub_183E7C4(v73, v75, a3);
  if ((v9 & 0x400000) == 0)
  {
LABEL_31:
    if ((v9 & 0x800000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_179;
  }
LABEL_173:
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v76 = *(void *)(a1 + 208);
  *(_WORD *)char v4 = 450;
  unsigned int v77 = *(_DWORD *)(v76 + 20);
  v4[2] = v77;
  if (v77 > 0x7F) {
    uint64_t v78 = sub_188A9CC(v77, v4 + 2);
  }
  else {
    uint64_t v78 = v4 + 3;
  }
  char v4 = sub_183EB70(v76, (unint64_t)v78, a3);
  if ((v9 & 0x800000) == 0)
  {
LABEL_32:
    if ((v9 & 0x1000000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_185;
  }
LABEL_179:
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v79 = *(void *)(a1 + 216);
  *(_WORD *)char v4 = 458;
  unsigned int v80 = *(_DWORD *)(v79 + 16);
  v4[2] = v80;
  if (v80 > 0x7F) {
    uint64_t v81 = sub_188A9CC(v80, v4 + 2);
  }
  else {
    uint64_t v81 = v4 + 3;
  }
  char v4 = sub_183EED4(v79, v81, a3);
  if ((v9 & 0x1000000) == 0)
  {
LABEL_33:
    if ((v9 & 0x2000000) == 0) {
      goto LABEL_34;
    }
    goto LABEL_191;
  }
LABEL_185:
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v82 = *(void *)(a1 + 224);
  *(_WORD *)char v4 = 466;
  unsigned int v83 = *(_DWORD *)(v82 + 16);
  v4[2] = v83;
  if (v83 > 0x7F) {
    uint64_t v84 = sub_188A9CC(v83, v4 + 2);
  }
  else {
    uint64_t v84 = v4 + 3;
  }
  char v4 = sub_1839DE0(v82, v84, a3);
  if ((v9 & 0x2000000) == 0)
  {
LABEL_34:
    if ((v9 & 0x4000000) == 0) {
      goto LABEL_35;
    }
    goto LABEL_197;
  }
LABEL_191:
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v85 = *(void *)(a1 + 232);
  *(_WORD *)char v4 = 474;
  unsigned int v86 = *(_DWORD *)(v85 + 16);
  v4[2] = v86;
  if (v86 > 0x7F) {
    uint64_t v87 = sub_188A9CC(v86, v4 + 2);
  }
  else {
    uint64_t v87 = v4 + 3;
  }
  char v4 = sub_183A09C(v85, v87, a3);
  if ((v9 & 0x4000000) == 0)
  {
LABEL_35:
    if ((v9 & 0x8000000) == 0) {
      goto LABEL_36;
    }
    goto LABEL_203;
  }
LABEL_197:
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v88 = *(void *)(a1 + 240);
  *(_WORD *)char v4 = 482;
  unsigned int v89 = *(_DWORD *)(v88 + 16);
  v4[2] = v89;
  if (v89 > 0x7F) {
    uint64_t v90 = sub_188A9CC(v89, v4 + 2);
  }
  else {
    uint64_t v90 = v4 + 3;
  }
  char v4 = sub_183D830(v88, v90, a3);
  if ((v9 & 0x8000000) == 0)
  {
LABEL_36:
    if ((v9 & 0x10000000) == 0) {
      goto LABEL_37;
    }
    goto LABEL_209;
  }
LABEL_203:
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v91 = *(void *)(a1 + 248);
  *(_WORD *)char v4 = 490;
  unsigned int v92 = *(_DWORD *)(v91 + 16);
  v4[2] = v92;
  if (v92 > 0x7F) {
    BOOL v93 = sub_188A9CC(v92, v4 + 2);
  }
  else {
    BOOL v93 = v4 + 3;
  }
  char v4 = sub_183DAEC(v91, v93, a3);
  if ((v9 & 0x10000000) == 0)
  {
LABEL_37:
    if ((v9 & 0x20000000) == 0) {
      goto LABEL_38;
    }
    goto LABEL_215;
  }
LABEL_209:
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v94 = *(void *)(a1 + 256);
  *(_WORD *)char v4 = 498;
  unsigned int v95 = *(_DWORD *)(v94 + 20);
  v4[2] = v95;
  if (v95 > 0x7F) {
    uint64_t v96 = sub_188A9CC(v95, v4 + 2);
  }
  else {
    uint64_t v96 = v4 + 3;
  }
  char v4 = sub_183DE30(v94, (unint64_t)v96, a3);
  if ((v9 & 0x20000000) == 0)
  {
LABEL_38:
    if ((v9 & 0x40000000) == 0) {
      goto LABEL_39;
    }
    goto LABEL_221;
  }
LABEL_215:
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v97 = *(void *)(a1 + 264);
  *(_WORD *)char v4 = 506;
  unsigned int v98 = *(_DWORD *)(v97 + 16);
  v4[2] = v98;
  if (v98 > 0x7F) {
    uint64_t v99 = sub_188A9CC(v98, v4 + 2);
  }
  else {
    uint64_t v99 = v4 + 3;
  }
  char v4 = sub_183E450(v97, v99, a3);
  if ((v9 & 0x40000000) == 0)
  {
LABEL_39:
    if ((v9 & 0x80000000) == 0) {
      goto LABEL_233;
    }
    goto LABEL_227;
  }
LABEL_221:
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v100 = *(void *)(a1 + 272);
  *(_WORD *)char v4 = 642;
  unsigned int v101 = *(_DWORD *)(v100 + 16);
  v4[2] = v101;
  if (v101 > 0x7F) {
    uint64_t v102 = sub_188A9CC(v101, v4 + 2);
  }
  else {
    uint64_t v102 = v4 + 3;
  }
  char v4 = sub_183E194(v100, v102, a3);
  if (v9 < 0)
  {
LABEL_227:
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v103 = *(void *)(a1 + 280);
    *(_WORD *)char v4 = 650;
    unsigned int v104 = *(_DWORD *)(v103 + 16);
    v4[2] = v104;
    if (v104 > 0x7F) {
      uint64_t v105 = sub_188A9CC(v104, v4 + 2);
    }
    else {
      uint64_t v105 = v4 + 3;
    }
    char v4 = sub_183F190(v103, v105, a3);
  }
LABEL_233:
  int v106 = *(_DWORD *)(a1 + 20);
  if (v106)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v107 = *(void *)(a1 + 288);
    *(_WORD *)char v4 = 658;
    unsigned int v108 = *(_DWORD *)(v107 + 16);
    v4[2] = v108;
    if (v108 > 0x7F) {
      unint64_t v109 = sub_188A9CC(v108, v4 + 2);
    }
    else {
      unint64_t v109 = v4 + 3;
    }
    char v4 = sub_183F44C(v107, v109, a3);
    if ((v106 & 2) == 0)
    {
LABEL_235:
      if ((v106 & 4) == 0) {
        goto LABEL_236;
      }
      goto LABEL_250;
    }
  }
  else if ((v106 & 2) == 0)
  {
    goto LABEL_235;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v110 = *(void *)(a1 + 296);
  *(_WORD *)char v4 = 666;
  unsigned int v111 = *(_DWORD *)(v110 + 16);
  v4[2] = v111;
  if (v111 > 0x7F) {
    uint64_t v112 = sub_188A9CC(v111, v4 + 2);
  }
  else {
    uint64_t v112 = v4 + 3;
  }
  char v4 = sub_183F708(v110, v112, a3);
  if ((v106 & 4) == 0)
  {
LABEL_236:
    if ((v106 & 0x20) == 0) {
      goto LABEL_262;
    }
    goto LABEL_256;
  }
LABEL_250:
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v113 = *(void *)(a1 + 304);
  *(_WORD *)char v4 = 674;
  unsigned int v114 = *(_DWORD *)(v113 + 16);
  v4[2] = v114;
  if (v114 > 0x7F) {
    unint64_t v115 = sub_188A9CC(v114, v4 + 2);
  }
  else {
    unint64_t v115 = v4 + 3;
  }
  char v4 = sub_183F9C4(v113, v115, a3);
  if ((v106 & 0x20) != 0)
  {
LABEL_256:
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v116 = *(int *)(a1 + 324);
    *(_WORD *)char v4 = 1704;
    v4[2] = v116;
    if (v116 > 0x7F)
    {
      v4[2] = v116 | 0x80;
      unint64_t v117 = v116 >> 7;
      v4[3] = v116 >> 7;
      v4 += 4;
      if (v116 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v118 = v117 >> 14;
          v117 >>= 7;
          *v4++ = v117;
        }
        while (v118);
      }
    }
    else
    {
      v4 += 3;
    }
  }
LABEL_262:
  if ((v106 & 8) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v119 = *(void *)(a1 + 312);
    *(_WORD *)char v4 = 1714;
    unsigned int v120 = *(_DWORD *)(v119 + 24);
    v4[2] = v120;
    if (v120 > 0x7F) {
      unint64_t v121 = sub_188A9CC(v120, v4 + 2);
    }
    else {
      unint64_t v121 = v4 + 3;
    }
    char v4 = (unsigned char *)sub_1842638(v119, v121, a3);
  }
  uint64_t v122 = *(void *)(a1 + 8);
  if ((v122 & 1) == 0) {
    return (uint64_t)v4;
  }
  unint64_t v124 = v122 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v124 + 31) < 0)
  {
    unint64_t v125 = *(void **)(v124 + 8);
    uint64_t v126 = *(void *)(v124 + 16);
  }
  else
  {
    unint64_t v125 = (void *)(v124 + 8);
    LODWORD(v126) = *(unsigned __int8 *)(v124 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v126)
  {
    uint64_t v127 = (int)v126;
    memcpy(v4, v125, (int)v126);
    v4 += v127;
    return (uint64_t)v4;
  }

  return sub_188A528(a3, (char *)v125, v126, v4);
}