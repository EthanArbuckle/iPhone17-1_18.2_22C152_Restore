uint64_t sub_13C9D88(uint64_t a1)
{
  int v1;
  uint64_t v2;
  int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v8;
  uint64_t v9;

  v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    v2 = 0;
    goto LABEL_14;
  }
  if (v1)
  {
    v3 = *(_DWORD *)(a1 + 24);
    if (v3 < 0)
    {
      v2 = 11;
      if ((v1 & 2) == 0) {
        goto LABEL_14;
      }
    }
    else
    {
      v2 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v1 & 2) == 0) {
        goto LABEL_14;
      }
    }
  }
  else
  {
    v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_14;
    }
  }
  v4 = *(_DWORD *)(a1 + 28);
  if (v4 < 0) {
    v5 = 11;
  }
  else {
    v5 = ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v2 += v5;
LABEL_14:
  v6 = *(void *)(a1 + 8);
  if (v6)
  {
    v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v8 + 31) < 0) {
      v9 = *(void *)(v8 + 16);
    }
    else {
      v9 = *(unsigned __int8 *)(v8 + 31);
    }
    v2 += v9;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_13C9E48()
{
  return 1;
}

void *sub_13C9E50@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.TransitOptions.FareOptions");
}

uint64_t sub_13C9E60(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  *(void *)(a1 + 8) = v5;
  *(void *)a1 = off_24B0488;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 56) = a2;
  *(unsigned char *)(a1 + 80) = 1;
  return a1;
}

void sub_13C9ED8(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_13C9F08(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = a1 + 16;
  *(void *)a1 = off_24B0488;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 60) = 0;
  *(void *)(a1 + 44) = 0;
  *(void *)(a1 + 52) = 0;
  int v6 = *(_DWORD *)(a2 + 48);
  if (v6)
  {
    sub_188C80C((unsigned int *)(a1 + 48), v6);
    v7 = *(void **)(a1 + 56);
    *(_DWORD *)(a1 + 48) += *(_DWORD *)(a2 + 48);
    memcpy(v7, *(const void **)(a2 + 56), 4 * *(int *)(a2 + 48));
  }
  uint64_t v8 = *(void *)(a2 + 8);
  if (v8) {
    sub_188B4F8(v4, (v8 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v5, a2 + 16);
  if (*(unsigned char *)(a2 + 40)) {
    operator new();
  }
  *(void *)(a1 + 64) = 0;
  uint64_t v9 = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 72) = v9;
  return a1;
}

void sub_13CA02C()
{
}

uint64_t sub_13CA098(uint64_t a1)
{
  v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_2536528)
  {
    int v6 = *(void **)(a1 + 64);
    if (v6)
    {
      sub_13C98E0(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  sub_1889DA8(a1 + 48);
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_13CA160(uint64_t a1)
{
  sub_13CA098(a1);

  operator delete();
}

char *sub_13CA198(uint64_t a1, char *a2, int32x2_t *a3)
{
  v43 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v43, a3[11].i32[1])) {
    goto LABEL_2;
  }
  v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = v43 + 1;
    unsigned int v9 = *v43;
    if (*v43 < 0)
    {
      int v10 = *v8;
      unsigned int v11 = v9 + (v10 << 7);
      unsigned int v9 = v11 - 128;
      if (v10 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v43, v11 - 128);
        unsigned int v9 = v12;
      }
      else
      {
        uint64_t v8 = v43 + 2;
      }
    }
    v43 = v8;
    switch(v9 >> 3)
    {
      case 6u:
        if (v9 == 48)
        {
          v13 = v8 - 1;
          while (1)
          {
            v43 = v13 + 1;
            unint64_t v14 = v13[1];
            v15 = v13 + 2;
            if (v13[1] < 0)
            {
              int v16 = *v15;
              int v17 = v14 + (v16 << 7);
              unint64_t v14 = (v17 - 128);
              if (v16 < 0)
              {
                v43 = (char *)sub_188C138((uint64_t)(v13 + 1), (v17 - 128));
                if (!v43) {
                  goto LABEL_86;
                }
                unint64_t v14 = v20;
                goto LABEL_15;
              }
              v15 = v13 + 3;
            }
            v43 = v15;
LABEL_15:
            if (v14 > 5)
            {
              if (*v7) {
                v21 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
              }
              else {
                v21 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              }
              sub_188C020(6, v14, v21);
            }
            else
            {
              uint64_t v18 = *(unsigned int *)(a1 + 48);
              if (v18 == *(_DWORD *)(a1 + 52))
              {
                int v19 = v18 + 1;
                sub_188C80C((unsigned int *)(a1 + 48), v18 + 1);
                *(_DWORD *)(*(void *)(a1 + 56) + 4 * v18) = v14;
              }
              else
              {
                *(_DWORD *)(*(void *)(a1 + 56) + 4 * v18) = v14;
                int v19 = v18 + 1;
              }
              *(_DWORD *)(a1 + 48) = v19;
            }
            v13 = v43;
            if (*(void *)a3 <= (unint64_t)v43 || *v43 != 48) {
              goto LABEL_72;
            }
          }
        }
        if (v9 != 50) {
          goto LABEL_62;
        }
        *(void *)&long long v44 = a1 + 48;
        *((void *)&v44 + 1) = sub_1369B50;
        uint64_t v45 = a1 + 8;
        int v46 = 6;
        v28 = sub_1112E88((uint64_t)a3, v8, &v44);
        goto LABEL_71;
      case 8u:
        if (v9 != 64) {
          goto LABEL_62;
        }
        v22 = v8 + 1;
        unint64_t v23 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_33;
        }
        int v24 = *v22;
        int v25 = v23 + (v24 << 7);
        unint64_t v23 = (v25 - 128);
        if (v24 < 0)
        {
          v43 = (char *)sub_188C138((uint64_t)v8, (v25 - 128));
          if (!v43) {
            goto LABEL_86;
          }
          unint64_t v23 = v35;
        }
        else
        {
          v22 = v8 + 2;
LABEL_33:
          v43 = v22;
        }
        if (v23 <= 3)
        {
          *(_DWORD *)(a1 + 40) |= 2u;
          *(_DWORD *)(a1 + 72) = v23;
          goto LABEL_72;
        }
        if (*v7) {
          v41 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          v41 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v42 = 8;
        goto LABEL_80;
      case 0xAu:
        if (v9 != 82) {
          goto LABEL_62;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        v26 = *(void **)(a1 + 64);
        if (!v26)
        {
          v27 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            v27 = (void *)*v27;
          }
          v26 = sub_13DA334((uint64_t)v27);
          *(void *)(a1 + 64) = v26;
          uint64_t v8 = v43;
        }
        v28 = sub_13CA678(a3, (uint64_t)v26, (unsigned __int8 *)v8);
        goto LABEL_71;
      case 0xBu:
        if (v9 != 88) {
          goto LABEL_62;
        }
        v29 = v8 + 1;
        unint64_t v23 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_46;
        }
        int v30 = *v29;
        int v31 = v23 + (v30 << 7);
        unint64_t v23 = (v31 - 128);
        if (v30 < 0)
        {
          v43 = (char *)sub_188C138((uint64_t)v8, (v31 - 128));
          if (!v43) {
            goto LABEL_86;
          }
          unint64_t v23 = v36;
        }
        else
        {
          v29 = v8 + 2;
LABEL_46:
          v43 = v29;
        }
        if (v23 > 2)
        {
          if (*v7) {
            v41 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            v41 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          int v42 = 11;
LABEL_80:
          sub_188C020(v42, v23, v41);
        }
        else
        {
          *(_DWORD *)(a1 + 40) |= 4u;
          *(_DWORD *)(a1 + 76) = v23;
        }
        goto LABEL_72;
      case 0xCu:
        if (v9 != 96) {
          goto LABEL_62;
        }
        v5 |= 8u;
        v32 = v8 + 1;
        uint64_t v33 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_53;
        }
        int v34 = *v32;
        uint64_t v33 = v33 + (v34 << 7) - 128;
        if (v34 < 0)
        {
          v37 = (char *)sub_188C138((uint64_t)v8, v33);
          v43 = v37;
          *(unsigned char *)(a1 + 80) = v38 != 0;
          if (!v37) {
            goto LABEL_86;
          }
        }
        else
        {
          v32 = v8 + 2;
LABEL_53:
          v43 = v32;
          *(unsigned char *)(a1 + 80) = v33 != 0;
        }
        goto LABEL_72;
      default:
LABEL_62:
        if (v9) {
          BOOL v39 = (v9 & 7) == 4;
        }
        else {
          BOOL v39 = 1;
        }
        if (!v39)
        {
          if (v9 - 7600 > 0x18F)
          {
            if (*v7)
            {
              v40 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              v40 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              uint64_t v8 = v43;
            }
            v28 = (char *)sub_1885AC0(v9, v40, v8, a3);
          }
          else
          {
            v28 = (char *)sub_18859DC((uint64_t **)(a1 + 16), v9, v8, (uint64_t)&off_2536528, (uint64_t *)(a1 + 8), a3);
          }
LABEL_71:
          v43 = v28;
          if (!v28) {
            goto LABEL_86;
          }
LABEL_72:
          if (sub_11947B8((uint64_t)a3, &v43, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_86:
        }
          v43 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 40) |= v5;
        return v43;
    }
  }
}

char *sub_13CA678(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    result = sub_13C99B0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_13CA708(uint64_t a1, char *a2, _DWORD *a3)
{
  uint64_t v6 = *(unsigned int *)(a1 + 48);
  if ((int)v6 >= 1)
  {
    for (uint64_t i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      unint64_t v8 = *(int *)(*(void *)(a1 + 56) + 4 * i);
      *a2 = 48;
      a2[1] = v8;
      if (v8 > 0x7F)
      {
        a2[1] = v8 | 0x80;
        unint64_t v9 = v8 >> 7;
        a2[2] = v8 >> 7;
        a2 += 3;
        if (v8 >= 0x4000)
        {
          do
          {
            *(a2 - 1) |= 0x80u;
            unint64_t v10 = v9 >> 14;
            v9 >>= 7;
            *a2++ = v9;
          }
          while (v10);
        }
      }
      else
      {
        a2 += 2;
      }
    }
  }
  int v11 = *(_DWORD *)(a1 + 40);
  if ((v11 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unint64_t v12 = *(int *)(a1 + 72);
    *a2 = 64;
    a2[1] = v12;
    if (v12 > 0x7F)
    {
      a2[1] = v12 | 0x80;
      unint64_t v13 = v12 >> 7;
      a2[2] = v12 >> 7;
      a2 += 3;
      if (v12 >= 0x4000)
      {
        do
        {
          *(a2 - 1) |= 0x80u;
          unint64_t v14 = v13 >> 14;
          v13 >>= 7;
          *a2++ = v13;
        }
        while (v14);
      }
    }
    else
    {
      a2 += 2;
    }
  }
  if (v11)
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    uint64_t v15 = *(void *)(a1 + 64);
    *a2 = 82;
    unsigned int v16 = *(_DWORD *)(v15 + 20);
    a2[1] = v16;
    if (v16 > 0x7F) {
      int v17 = sub_188A9CC(v16, a2 + 1);
    }
    else {
      int v17 = a2 + 2;
    }
    a2 = sub_13C9BE4(v15, (unint64_t)v17, a3);
  }
  if ((v11 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unint64_t v18 = *(int *)(a1 + 76);
    *a2 = 88;
    a2[1] = v18;
    if (v18 > 0x7F)
    {
      a2[1] = v18 | 0x80;
      unint64_t v19 = v18 >> 7;
      a2[2] = v18 >> 7;
      a2 += 3;
      if (v18 >= 0x4000)
      {
        do
        {
          *(a2 - 1) |= 0x80u;
          unint64_t v20 = v19 >> 14;
          v19 >>= 7;
          *a2++ = v19;
        }
        while (v20);
      }
    }
    else
    {
      a2 += 2;
    }
  }
  if ((v11 & 8) != 0)
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    char v21 = *(unsigned char *)(a1 + 80);
    *a2 = 96;
    a2[1] = v21;
    a2 += 2;
  }
  if (*(_WORD *)(a1 + 26)) {
    a2 = sub_1886844(a1 + 16, 950, 1000, a2, a3);
  }
  uint64_t v22 = *(void *)(a1 + 8);
  if ((v22 & 1) == 0) {
    return a2;
  }
  unint64_t v24 = v22 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v24 + 31) < 0)
  {
    int v25 = *(void **)(v24 + 8);
    uint64_t v26 = *(void *)(v24 + 16);
  }
  else
  {
    int v25 = (void *)(v24 + 8);
    LODWORD(v26) = *(unsigned __int8 *)(v24 + 31);
  }
  if (*(void *)a3 - (void)a2 >= (int)v26)
  {
    uint64_t v27 = (int)v26;
    memcpy(a2, v25, (int)v26);
    a2 += v27;
    return a2;
  }

  return (char *)sub_188A528(a3, (char *)v25, v26, a2);
}

uint64_t sub_13CAA14(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(unsigned int *)(a1 + 48);
  if (v3)
  {
    int v4 = 0;
    uint64_t v5 = 0;
    do
    {
      int v6 = *(_DWORD *)(*(void *)(a1 + 56) + 4 * v4);
      if (v6 < 0) {
        uint64_t v7 = 10;
      }
      else {
        uint64_t v7 = (9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6;
      }
      v5 += v7;
      ++v4;
    }
    while (v3 != v4);
  }
  else
  {
    uint64_t v5 = 0;
  }
  uint64_t v8 = v2 + v3 + v5;
  int v9 = *(_DWORD *)(a1 + 40);
  if ((v9 & 0xF) == 0) {
    goto LABEL_25;
  }
  if (v9)
  {
    uint64_t v10 = sub_13C9D88(*(void *)(a1 + 64));
    v8 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v9 & 2) == 0)
    {
LABEL_12:
      if ((v9 & 4) == 0) {
        goto LABEL_23;
      }
      goto LABEL_19;
    }
  }
  else if ((v9 & 2) == 0)
  {
    goto LABEL_12;
  }
  int v11 = *(_DWORD *)(a1 + 72);
  if (v11 < 0) {
    uint64_t v12 = 11;
  }
  else {
    uint64_t v12 = ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v8 += v12;
  if ((v9 & 4) != 0)
  {
LABEL_19:
    int v13 = *(_DWORD *)(a1 + 76);
    if (v13 < 0) {
      uint64_t v14 = 11;
    }
    else {
      uint64_t v14 = ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v8 += v14;
  }
LABEL_23:
  if ((v9 & 8) != 0) {
    v8 += 2;
  }
LABEL_25:
  uint64_t v15 = *(void *)(a1 + 8);
  if (v15)
  {
    unint64_t v17 = v15 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v17 + 31) < 0) {
      uint64_t v18 = *(void *)(v17 + 16);
    }
    else {
      uint64_t v18 = *(unsigned __int8 *)(v17 + 31);
    }
    v8 += v18;
  }
  *(_DWORD *)(a1 + 44) = v8;
  return v8;
}

void *sub_13CAB90@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.TransitOptions");
}

uint64_t sub_13CABA0(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_24B0508;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  __int16 v5 = *(_WORD *)(a2 + 24);
  *(unsigned char *)(a1 + 26) = *(unsigned char *)(a2 + 26);
  *(_WORD *)(a1 + 24) = v5;
  return a1;
}

void sub_13CAC24(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_13CAC54(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_13CACC8(void *a1)
{
  sub_13CAC54(a1);

  operator delete();
}

uint64_t sub_13CAD00(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(unsigned char *)(result + 18) = 0;
  *(_WORD *)(result + 16) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_13CAD1C(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v31 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v31, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v31 + 1;
    unsigned int v9 = *v31;
    if (*v31 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v31, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v31 + 2;
      }
    }
    int v31 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 == 3)
    {
      if (v9 != 24) {
        goto LABEL_14;
      }
      v5 |= 4u;
      unsigned int v16 = v8 + 1;
      uint64_t v17 = *v8;
      if ((*v8 & 0x80000000) == 0) {
        goto LABEL_26;
      }
      int v18 = *v16;
      uint64_t v17 = v17 + (v18 << 7) - 128;
      if ((v18 & 0x80000000) == 0)
      {
        unsigned int v16 = v8 + 2;
LABEL_26:
        int v31 = v16;
        *(unsigned char *)(a1 + 26) = v17 != 0;
        goto LABEL_36;
      }
      int v25 = (char *)sub_188C138((uint64_t)v8, v17);
      int v31 = v25;
      *(unsigned char *)(a1 + 26) = v26 != 0;
      if (!v25) {
        goto LABEL_47;
      }
      goto LABEL_36;
    }
    if (v12 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_14;
    }
    v5 |= 2u;
    unint64_t v19 = v8 + 1;
    uint64_t v20 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_31;
    }
    int v21 = *v19;
    uint64_t v20 = v20 + (v21 << 7) - 128;
    if ((v21 & 0x80000000) == 0)
    {
      unint64_t v19 = v8 + 2;
LABEL_31:
      int v31 = v19;
      *(unsigned char *)(a1 + 25) = v20 != 0;
      goto LABEL_36;
    }
    uint64_t v27 = (char *)sub_188C138((uint64_t)v8, v20);
    int v31 = v27;
    *(unsigned char *)(a1 + 25) = v28 != 0;
    if (!v27) {
      goto LABEL_47;
    }
LABEL_36:
    if (sub_11947B8((uint64_t)a3, &v31, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v12 == 1 && v9 == 8)
  {
    v5 |= 1u;
    uint64_t v22 = v8 + 1;
    uint64_t v23 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_35;
    }
    int v24 = *v22;
    uint64_t v23 = v23 + (v24 << 7) - 128;
    if ((v24 & 0x80000000) == 0)
    {
      uint64_t v22 = v8 + 2;
LABEL_35:
      int v31 = v22;
      *(unsigned char *)(a1 + 24) = v23 != 0;
      goto LABEL_36;
    }
    v29 = (char *)sub_188C138((uint64_t)v8, v23);
    int v31 = v29;
    *(unsigned char *)(a1 + 24) = v30 != 0;
    if (!v29) {
      goto LABEL_47;
    }
    goto LABEL_36;
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (*v7)
    {
      uint64_t v15 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = v31;
    }
    int v31 = (char *)sub_1885AC0(v9, v15, v8, a3);
    if (!v31) {
      goto LABEL_47;
    }
    goto LABEL_36;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_47:
  int v31 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v31;
}

unsigned char *sub_13CAFA0(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    char v7 = *(unsigned char *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v7;
    v4 += 2;
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_14;
      }
      goto LABEL_11;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v8 = *(unsigned char *)(a1 + 25);
  unsigned char *v4 = 16;
  v4[1] = v8;
  v4 += 2;
  if ((v6 & 4) != 0)
  {
LABEL_11:
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v9 = *(unsigned char *)(a1 + 26);
    unsigned char *v4 = 24;
    v4[1] = v9;
    v4 += 2;
  }
LABEL_14:
  uint64_t v10 = *(void *)(a1 + 8);
  if ((v10 & 1) == 0) {
    return v4;
  }
  unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v12 + 31) < 0)
  {
    int v13 = *(void **)(v12 + 8);
    uint64_t v14 = *(void *)(v12 + 16);
  }
  else
  {
    int v13 = (void *)(v12 + 8);
    LODWORD(v14) = *(unsigned __int8 *)(v12 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v14)
  {
    uint64_t v15 = (int)v14;
    memcpy(v4, v13, (int)v14);
    v4 += v15;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v13, v14, v4);
}

uint64_t sub_13CB100(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  uint64_t v2 = 2 * (v1 & 1);
  if ((v1 & 2) != 0) {
    v2 += 2;
  }
  if ((v1 & 4) != 0) {
    v2 += 2;
  }
  if ((v1 & 7) != 0) {
    uint64_t v3 = v2;
  }
  else {
    uint64_t v3 = 0;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v6 + 31) < 0) {
      uint64_t v7 = *(void *)(v6 + 16);
    }
    else {
      uint64_t v7 = *(unsigned __int8 *)(v6 + 31);
    }
    v3 += v7;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

uint64_t sub_13CB164()
{
  return 1;
}

void *sub_13CB16C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.WalkingOptions.WalkingUserPreferences");
}

uint64_t sub_13CB17C(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)a1 = off_24B0588;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 36) = 0;
  *(void *)(a1 + 20) = 0;
  *(void *)(a1 + 28) = 0;
  int v5 = *(_DWORD *)(a2 + 24);
  if (v5)
  {
    sub_188C80C((unsigned int *)(a1 + 24), v5);
    unint64_t v6 = *(void **)(a1 + 32);
    *(_DWORD *)(a1 + 24) += *(_DWORD *)(a2 + 24);
    memcpy(v6, *(const void **)(a2 + 32), 4 * *(int *)(a2 + 24));
  }
  uint64_t v7 = *(void *)(a2 + 8);
  if (v7) {
    sub_188B4F8(v4, (v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  if (*(unsigned char *)(a2 + 16)) {
    operator new();
  }
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  return a1;
}

void sub_13CB27C()
{
}

uint64_t sub_13CB2DC(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_25365A0)
  {
    unint64_t v6 = *(void **)(a1 + 40);
    if (v6)
    {
      sub_13CAC54(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  sub_1889DA8(a1 + 24);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_13CB39C(uint64_t a1)
{
  sub_13CB2DC(a1);

  operator delete();
}

char *sub_13CB3D4(uint64_t a1, char *a2, int32x2_t *a3)
{
  v29 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v29, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    char v8 = v29 + 1;
    unsigned int v9 = *v29;
    if (*v29 < 0)
    {
      int v10 = *v8;
      unsigned int v11 = v9 + (v10 << 7);
      unsigned int v9 = v11 - 128;
      if (v10 < 0)
      {
        char v8 = (char *)sub_188C180((uint64_t)v29, v11 - 128);
        unsigned int v9 = v12;
      }
      else
      {
        char v8 = v29 + 2;
      }
    }
    v29 = v8;
    unsigned int v13 = v9 >> 3;
    if (v9 >> 3 == 3)
    {
      if (v9 != 26) {
        goto LABEL_14;
      }
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v18 = *(void *)(a1 + 40);
      if (!v18)
      {
        unint64_t v19 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          unint64_t v19 = (void *)*v19;
        }
        uint64_t v18 = sub_13DA408((uint64_t)v19);
        *(void *)(a1 + 40) = v18;
        char v8 = v29;
      }
      uint64_t v17 = sub_13CB6B8(a3, v18, (unsigned __int8 *)v8);
LABEL_27:
      v29 = v17;
      if (!v17) {
        goto LABEL_56;
      }
      goto LABEL_49;
    }
    if (v13 == 2) {
      break;
    }
    if (v13 != 1 || v9 != 9) {
      goto LABEL_14;
    }
    v5 |= 2u;
    *(void *)(a1 + 48) = *(void *)v8;
    v29 = v8 + 8;
LABEL_49:
    if (sub_11947B8((uint64_t)a3, &v29, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 == 16)
  {
    uint64_t v20 = v8 - 1;
    while (1)
    {
      v29 = v20 + 1;
      unint64_t v21 = v20[1];
      uint64_t v22 = v20 + 2;
      if ((v20[1] & 0x80000000) == 0) {
        goto LABEL_34;
      }
      int v23 = *v22;
      int v24 = v21 + (v23 << 7);
      unint64_t v21 = (v24 - 128);
      if ((v23 & 0x80000000) == 0) {
        break;
      }
      v29 = (char *)sub_188C138((uint64_t)(v20 + 1), (v24 - 128));
      if (!v29) {
        goto LABEL_56;
      }
      unint64_t v21 = v27;
      if (v27)
      {
LABEL_44:
        if (*v7) {
          uint64_t v28 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          uint64_t v28 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        sub_188C020(2, v21, v28);
        goto LABEL_39;
      }
LABEL_35:
      uint64_t v25 = *(unsigned int *)(a1 + 24);
      if (v25 == *(_DWORD *)(a1 + 28))
      {
        int v26 = v25 + 1;
        sub_188C80C((unsigned int *)(a1 + 24), v25 + 1);
        *(_DWORD *)(*(void *)(a1 + 32) + 4 * v25) = 0;
      }
      else
      {
        *(_DWORD *)(*(void *)(a1 + 32) + 4 * v25) = 0;
        int v26 = v25 + 1;
      }
      *(_DWORD *)(a1 + 24) = v26;
LABEL_39:
      uint64_t v20 = v29;
      if (*(void *)a3 <= (unint64_t)v29 || *v29 != 16) {
        goto LABEL_49;
      }
    }
    uint64_t v22 = v20 + 3;
LABEL_34:
    v29 = v22;
    if (v21) {
      goto LABEL_44;
    }
    goto LABEL_35;
  }
  if (v9 == 18)
  {
    *(void *)&long long v30 = a1 + 24;
    *((void *)&v30 + 1) = sub_1369B5C;
    uint64_t v31 = a1 + 8;
    int v32 = 2;
    uint64_t v17 = sub_1112E88((uint64_t)a3, v8, &v30);
    goto LABEL_27;
  }
LABEL_14:
  if (v9) {
    BOOL v15 = (v9 & 7) == 4;
  }
  else {
    BOOL v15 = 1;
  }
  if (!v15)
  {
    if (*v7)
    {
      unsigned int v16 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unsigned int v16 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      char v8 = v29;
    }
    uint64_t v17 = (char *)sub_1885AC0(v9, v16, v8, a3);
    goto LABEL_27;
  }
  if (v8) {
    a3[10].i32[0] = v9 - 1;
  }
  else {
LABEL_56:
  }
    v29 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v29;
}

char *sub_13CB6B8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_13CAD1C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_13CB748(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 48);
    unsigned char *v4 = 9;
    *(void *)(v4 + 1) = v7;
    v4 += 9;
  }
  uint64_t v8 = *(unsigned int *)(a1 + 24);
  if ((int)v8 >= 1)
  {
    for (uint64_t i = 0; i != v8; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v10 = *(int *)(*(void *)(a1 + 32) + 4 * i);
      unsigned char *v4 = 16;
      v4[1] = v10;
      if (v10 > 0x7F)
      {
        v4[1] = v10 | 0x80;
        unint64_t v11 = v10 >> 7;
        v4[2] = v10 >> 7;
        v4 += 3;
        if (v10 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v12 = v11 >> 14;
            v11 >>= 7;
            *v4++ = v11;
          }
          while (v12);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v13 = *(void *)(a1 + 40);
    unsigned char *v4 = 26;
    unsigned int v14 = *(_DWORD *)(v13 + 20);
    v4[1] = v14;
    if (v14 > 0x7F) {
      BOOL v15 = sub_188A9CC(v14, v4 + 1);
    }
    else {
      BOOL v15 = v4 + 2;
    }
    uint64_t v4 = sub_13CAFA0(v13, (unint64_t)v15, a3);
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return v4;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    unint64_t v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    unint64_t v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(v4, v19, (int)v20);
    v4 += v21;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v19, v20, v4);
}

uint64_t sub_13CB944(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 24);
  if (v2)
  {
    int v3 = 0;
    uint64_t v4 = 0;
    do
    {
      int v5 = *(_DWORD *)(*(void *)(a1 + 32) + 4 * v3);
      if (v5 < 0) {
        uint64_t v6 = 10;
      }
      else {
        uint64_t v6 = (9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6;
      }
      v4 += v6;
      ++v3;
    }
    while (v2 != v3);
  }
  else
  {
    uint64_t v4 = 0;
  }
  uint64_t v7 = v4 + v2;
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 3) != 0)
  {
    if (v8)
    {
      uint64_t v9 = sub_13CB100(*(void *)(a1 + 40));
      v7 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v8 & 2) != 0) {
      v7 += 9;
    }
  }
  uint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v12 + 31) < 0) {
      uint64_t v13 = *(void *)(v12 + 16);
    }
    else {
      uint64_t v13 = *(unsigned __int8 *)(v12 + 31);
    }
    v7 += v13;
  }
  *(_DWORD *)(a1 + 20) = v7;
  return v7;
}

uint64_t sub_13CBA40()
{
  return 1;
}

void *sub_13CBA48@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.WalkingOptions");
}

void *sub_13CBA58(void *result, uint64_t a2, int a3)
{
  uint64_t v3 = a2 | 2;
  if (!a3) {
    uint64_t v3 = a2;
  }
  char *result = off_24B0608;
  result[1] = v3;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = &qword_2550250;
  result[5] = 0;
  result[6] = 0;
  return result;
}

uint64_t sub_13CBA98(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (void *)(a1 + 8);
  *(void *)a1 = off_24B0608;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 24) = &qword_2550250;
  int v6 = *(_DWORD *)(a2 + 16);
  if (v6)
  {
    uint64_t v7 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v7 = (uint64_t *)*v7;
    }
    sub_1881DF4((std::string **)(a1 + 24), (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL), v7);
    int v6 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 32) = &qword_2550250;
  if ((v6 & 2) != 0)
  {
    int v8 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      int v8 = (uint64_t *)*v8;
    }
    sub_1881DF4((std::string **)(a1 + 32), (long long *)(*(void *)(a2 + 32) & 0xFFFFFFFFFFFFFFFELL), v8);
    int v6 = *(_DWORD *)(a2 + 16);
  }
  if ((v6 & 4) != 0) {
    operator new();
  }
  *(void *)(a1 + 40) = 0;
  if ((v6 & 8) != 0) {
    operator new();
  }
  *(void *)(a1 + 48) = 0;
  return a1;
}

void sub_13CBBE4()
{
}

uint64_t sub_13CBC3C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_14;
    }
  }
  else if (v4)
  {
    goto LABEL_14;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if ((uint64_t (***)())a1 != &off_25365D8)
  {
    uint64_t v6 = *(void *)(a1 + 40);
    if (v6)
    {
      sub_1374224(v6);
      operator delete();
    }
    uint64_t v7 = *(void *)(a1 + 48);
    if (v7)
    {
      sub_1374224(v7);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_14:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_13CBD44(uint64_t a1)
{
  sub_13CBC3C(a1);

  operator delete();
}

uint64_t sub_13CBD7C(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 0xF) == 0) {
    goto LABEL_7;
  }
  if (v2)
  {
    unint64_t v5 = *(void *)(result + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v5 + 23) < 0)
    {
      **(unsigned char **)unint64_t v5 = 0;
      *(void *)(v5 + 8) = 0;
      if ((v2 & 2) != 0) {
        goto LABEL_15;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v5 = 0;
      *(unsigned char *)(v5 + 23) = 0;
      if ((v2 & 2) != 0) {
        goto LABEL_15;
      }
    }
LABEL_4:
    if ((v2 & 4) == 0) {
      goto LABEL_5;
    }
    goto LABEL_19;
  }
  if ((v2 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_15:
  unint64_t v6 = *(void *)(result + 32) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v6 + 23) < 0)
  {
    **(unsigned char **)unint64_t v6 = 0;
    *(void *)(v6 + 8) = 0;
    if ((v2 & 4) != 0) {
      goto LABEL_19;
    }
LABEL_5:
    if ((v2 & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  *(unsigned char *)unint64_t v6 = 0;
  *(unsigned char *)(v6 + 23) = 0;
  if ((v2 & 4) == 0) {
    goto LABEL_5;
  }
LABEL_19:
  uint64_t result = sub_1369E6C(*(void *)(result + 40));
  if ((v2 & 8) != 0) {
LABEL_6:
  }
    uint64_t result = sub_1369E6C(*(void *)(v1 + 48));
LABEL_7:
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_13CBE5C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v24 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v24, a3[11].i32[1])) {
    return *(void *)v24;
  }
  unint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v7 = (unsigned __int8 *)(*(void *)v24 + 1);
    unsigned int v8 = **(unsigned char **)v24;
    if ((char)**(unsigned char **)v24 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if ((char)*v7 < 0)
      {
        uint64_t v7 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v24, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (unsigned __int8 *)(*(void *)v24 + 2);
      }
    }
    *(void *)int v24 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 10) {
          goto LABEL_30;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v11 = *(void *)(a1 + 8);
        unint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
        if (v11) {
          unint64_t v12 = (uint64_t *)*v12;
        }
        uint64_t v13 = (void *)(a1 + 24);
        goto LABEL_17;
      case 2u:
        if (v8 != 18) {
          goto LABEL_30;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v14 = *(void *)(a1 + 8);
        unint64_t v12 = (uint64_t *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
        if (v14) {
          unint64_t v12 = (uint64_t *)*v12;
        }
        uint64_t v13 = (void *)(a1 + 32);
LABEL_17:
        BOOL v15 = (std::string *)sub_1880F84(v13, v12);
        uint64_t v16 = (uint64_t)sub_188C244(v15, *(char **)v24, (uint64_t)a3);
        goto LABEL_37;
      case 3u:
        if (v8 != 26) {
          goto LABEL_30;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v17 = *(void *)(a1 + 40);
        if (v17) {
          goto LABEL_29;
        }
        unint64_t v18 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          unint64_t v18 = (void *)*v18;
        }
        sub_13D6A1C((uint64_t)v18);
        uint64_t v17 = v19;
        *(void *)(a1 + 40) = v19;
        goto LABEL_28;
      case 4u:
        if (v8 != 34) {
          goto LABEL_30;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v17 = *(void *)(a1 + 48);
        if (v17) {
          goto LABEL_29;
        }
        uint64_t v20 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          uint64_t v20 = (void *)*v20;
        }
        sub_13D6A1C((uint64_t)v20);
        uint64_t v17 = v21;
        *(void *)(a1 + 48) = v21;
LABEL_28:
        uint64_t v7 = *(unsigned __int8 **)v24;
LABEL_29:
        uint64_t v16 = sub_13319DC(a3, v17, v7);
        goto LABEL_37;
      default:
LABEL_30:
        if (v8) {
          BOOL v22 = (v8 & 7) == 4;
        }
        else {
          BOOL v22 = 1;
        }
        if (!v22)
        {
          if (*v6)
          {
            int v23 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            int v23 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v7 = *(unsigned __int8 **)v24;
          }
          uint64_t v16 = (uint64_t)sub_1885AC0(v8, v23, (char *)v7, a3);
LABEL_37:
          *(void *)int v24 = v16;
          if (!v16) {
            return 0;
          }
          if (sub_11947B8((uint64_t)a3, (char **)v24, a3[11].i32[1])) {
            return *(void *)v24;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return *(void *)v24;
    }
  }
}

char *sub_13CC0C8(uint64_t a1, char *__dst, unint64_t *a3)
{
  char v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    char v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_8;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  char v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_20;
    }
    goto LABEL_14;
  }
LABEL_8:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v7 = *(void *)(a1 + 40);
  char *v4 = 26;
  unsigned int v8 = *(_DWORD *)(v7 + 20);
  v4[1] = v8;
  if (v8 > 0x7F) {
    unsigned int v9 = sub_188A9CC(v8, v4 + 1);
  }
  else {
    unsigned int v9 = v4 + 2;
  }
  char v4 = sub_1374B08(v7, v9, a3);
  if ((v6 & 8) != 0)
  {
LABEL_14:
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 48);
    char *v4 = 34;
    unsigned int v11 = *(_DWORD *)(v10 + 20);
    v4[1] = v11;
    if (v11 > 0x7F) {
      unint64_t v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      unint64_t v12 = v4 + 2;
    }
    char v4 = sub_1374B08(v10, v12, a3);
  }
LABEL_20:
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    uint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    uint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_13CC298(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0xF) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_15;
  }
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
  uint64_t v6 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    uint64_t v6 = v5;
  }
  uint64_t v3 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 2) != 0)
  {
LABEL_9:
    unint64_t v7 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v8 = *(unsigned __int8 *)(v7 + 23);
    uint64_t v9 = *(void *)(v7 + 8);
    if ((v8 & 0x80u) == 0) {
      uint64_t v9 = v8;
    }
    v3 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v2 & 4) == 0)
  {
    if ((v2 & 8) == 0) {
      goto LABEL_15;
    }
    goto LABEL_14;
  }
  uint64_t v13 = sub_1374EEC(*(void *)(a1 + 40));
  v3 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 8) != 0)
  {
LABEL_14:
    uint64_t v10 = sub_1374EEC(*(void *)(a1 + 48));
    v3 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_15:
  uint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    unint64_t v14 = v11 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v14 + 31) < 0) {
      uint64_t v15 = *(void *)(v14 + 16);
    }
    else {
      uint64_t v15 = *(unsigned __int8 *)(v14 + 31);
    }
    v3 += v15;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

void sub_13CC400(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0xF) != 0)
  {
    if (v4)
    {
      uint64_t v5 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v6 = (std::string **)(a1 + 24);
      uint64_t v7 = *(void *)(a1 + 8);
      uint64_t v8 = (uint64_t *)(v7 & 0xFFFFFFFFFFFFFFFCLL);
      if (v7) {
        uint64_t v8 = (uint64_t *)*v8;
      }
      sub_1881DF4(v6, v5, v8);
    }
    if ((v4 & 2) != 0)
    {
      uint64_t v9 = (long long *)(*(void *)(a2 + 32) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 2u;
      uint64_t v10 = *(void *)(a1 + 8);
      uint64_t v11 = (uint64_t *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
      if (v10) {
        uint64_t v11 = (uint64_t *)*v11;
      }
      sub_1881DF4((std::string **)(a1 + 32), v9, v11);
    }
    if ((v4 & 4) != 0)
    {
      *(_DWORD *)(a1 + 16) |= 4u;
      uint64_t v12 = *(void *)(a1 + 40);
      if (!v12)
      {
        uint64_t v13 = *(void *)(a1 + 8);
        unint64_t v14 = (void *)(v13 & 0xFFFFFFFFFFFFFFFCLL);
        if (v13) {
          unint64_t v14 = (void *)*v14;
        }
        sub_13D6A1C((uint64_t)v14);
        *(void *)(a1 + 40) = v12;
      }
      if (*(void *)(a2 + 40)) {
        uint64_t v15 = *(uint64_t (****)())(a2 + 40);
      }
      else {
        uint64_t v15 = &off_2534750;
      }
      sub_136A7DC(v12, (uint64_t)v15);
    }
    if ((v4 & 8) != 0)
    {
      *(_DWORD *)(a1 + 16) |= 8u;
      uint64_t v16 = *(void *)(a1 + 48);
      if (!v16)
      {
        uint64_t v17 = *(void *)(a1 + 8);
        uint64_t v18 = (void *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
        if (v17) {
          uint64_t v18 = (void *)*v18;
        }
        sub_13D6A1C((uint64_t)v18);
        *(void *)(a1 + 48) = v16;
      }
      if (*(void *)(a2 + 48)) {
        uint64_t v19 = *(uint64_t (****)())(a2 + 48);
      }
      else {
        uint64_t v19 = &off_2534750;
      }
      sub_136A7DC(v16, (uint64_t)v19);
    }
  }
  uint64_t v20 = *(void *)(a2 + 8);
  if (v20)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v20 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_13CC564(uint64_t a1, uint64_t a2)
{
  if (a2 != a1)
  {
    sub_13CBD7C(a1);
    sub_13CC400(a1, a2);
  }
}

uint64_t sub_13CC5B0(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 4) != 0)
  {
    uint64_t result = sub_136ADBC(*(void *)(a1 + 40));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 8) == 0) {
    return 1;
  }
  uint64_t result = sub_136ADBC(*(void *)(a1 + 48));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_13CC5FC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.Alert");
}

uint64_t sub_13CC60C(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (void *)(a1 + 8);
  *(void *)a1 = off_24B0688;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 24) = &qword_2550250;
  int v6 = *(_DWORD *)(a2 + 16);
  if (v6)
  {
    uint64_t v7 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v7 = (uint64_t *)*v7;
    }
    sub_1881DF4((std::string **)(a1 + 24), (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL), v7);
    int v6 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 32) = &qword_2550250;
  if ((v6 & 2) != 0)
  {
    uint64_t v8 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v8 = (uint64_t *)*v8;
    }
    sub_1881DF4((std::string **)(a1 + 32), (long long *)(*(void *)(a2 + 32) & 0xFFFFFFFFFFFFFFFELL), v8);
    int v6 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 40) = &qword_2550250;
  if ((v6 & 4) != 0)
  {
    uint64_t v9 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v9 = (uint64_t *)*v9;
    }
    sub_1881DF4((std::string **)(a1 + 40), (long long *)(*(void *)(a2 + 40) & 0xFFFFFFFFFFFFFFFELL), v9);
  }
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  return a1;
}

void sub_13CC720(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_13CC754(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_11;
    }
  }
  else if (v4)
  {
    goto LABEL_11;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(uint64_t **)(a1 + 40) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 40));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_11:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_13CC820(uint64_t a1)
{
  sub_13CC754(a1);

  operator delete();
}

uint64_t sub_13CC858(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 7) == 0) {
    goto LABEL_17;
  }
  if (v1)
  {
    unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)unint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
      if ((v1 & 2) != 0) {
        goto LABEL_10;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
      if ((v1 & 2) != 0) {
        goto LABEL_10;
      }
    }
LABEL_4:
    if ((v1 & 4) == 0) {
      goto LABEL_17;
    }
LABEL_14:
    unint64_t v4 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v4 + 23) < 0)
    {
      **(unsigned char **)unint64_t v4 = 0;
      *(void *)(v4 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v4 = 0;
      *(unsigned char *)(v4 + 23) = 0;
    }
    goto LABEL_17;
  }
  if ((v1 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_10:
  unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v3 + 23) < 0)
  {
    **(unsigned char **)unint64_t v3 = 0;
    *(void *)(v3 + 8) = 0;
    if ((v1 & 4) == 0) {
      goto LABEL_17;
    }
    goto LABEL_14;
  }
  *(unsigned char *)unint64_t v3 = 0;
  *(unsigned char *)(v3 + 23) = 0;
  if ((v1 & 4) != 0) {
    goto LABEL_14;
  }
LABEL_17:
  char v6 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 40) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v6) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_13CC914(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v26 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v26, a3[11].i32[1])) {
    return *(void *)v26;
  }
  char v6 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v7 = (char *)(*(void *)v26 + 1);
    unsigned int v8 = **(unsigned char **)v26;
    if ((char)**(unsigned char **)v26 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180(*(uint64_t *)v26, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (char *)(*(void *)v26 + 2);
      }
    }
    *(void *)int v26 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 8) {
          goto LABEL_29;
        }
        uint64_t v11 = v7 + 1;
        unint64_t v12 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v13 = *v11;
        int v14 = v12 + (v13 << 7);
        unint64_t v12 = (v14 - 128);
        if (v13 < 0)
        {
          *(void *)int v26 = sub_188C138((uint64_t)v7, (v14 - 128));
          if (!*(void *)v26) {
            return 0;
          }
          unint64_t v12 = v24;
        }
        else
        {
          uint64_t v11 = v7 + 2;
LABEL_13:
          *(void *)int v26 = v11;
        }
        if (v12 > 5)
        {
          if (*v6) {
            uint64_t v25 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v25 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(1, v12, v25);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 8u;
          *(_DWORD *)(a1 + 48) = v12;
        }
        goto LABEL_37;
      case 2u:
        if (v8 != 18) {
          goto LABEL_29;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v15 = *(void *)(a1 + 8);
        uint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          uint64_t v16 = (uint64_t *)*v16;
        }
        uint64_t v17 = (void *)(a1 + 24);
        goto LABEL_28;
      case 3u:
        if (v8 != 26) {
          goto LABEL_29;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v18 = *(void *)(a1 + 8);
        uint64_t v16 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
        if (v18) {
          uint64_t v16 = (uint64_t *)*v16;
        }
        uint64_t v17 = (void *)(a1 + 32);
        goto LABEL_28;
      case 4u:
        if (v8 != 34) {
          goto LABEL_29;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v19 = *(void *)(a1 + 8);
        uint64_t v16 = (uint64_t *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
        if (v19) {
          uint64_t v16 = (uint64_t *)*v16;
        }
        uint64_t v17 = (void *)(a1 + 40);
LABEL_28:
        uint64_t v20 = (std::string *)sub_1880F84(v17, v16);
        uint64_t v21 = (void *)sub_188C244(v20, *(char **)v26, (uint64_t)a3);
        goto LABEL_36;
      default:
LABEL_29:
        if (v8) {
          BOOL v22 = (v8 & 7) == 4;
        }
        else {
          BOOL v22 = 1;
        }
        if (!v22)
        {
          if (*v6)
          {
            int v23 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            int v23 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v7 = *(char **)v26;
          }
          uint64_t v21 = sub_1885AC0(v8, v23, v7, a3);
LABEL_36:
          *(void *)int v26 = v21;
          if (!v21) {
            return 0;
          }
LABEL_37:
          if (sub_11947B8((uint64_t)a3, (char **)v26, a3[11].i32[1])) {
            return *(void *)v26;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return *(void *)v26;
    }
  }
}

unsigned char *sub_13CCBCC(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  unint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 8) != 0)
  {
    if (*a3 <= __dst) {
      unint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 48);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    unint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
    if ((v6 & 2) == 0)
    {
LABEL_10:
      if ((v6 & 4) == 0) {
        goto LABEL_12;
      }
      goto LABEL_11;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_10;
  }
  unint64_t v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) != 0) {
LABEL_11:
  }
    unint64_t v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL), v4);
LABEL_12:
  uint64_t v10 = *(void *)(a1 + 8);
  if ((v10 & 1) == 0) {
    return v4;
  }
  unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v12 + 31) < 0)
  {
    int v13 = *(void **)(v12 + 8);
    uint64_t v14 = *(void *)(v12 + 16);
  }
  else
  {
    int v13 = (void *)(v12 + 8);
    LODWORD(v14) = *(unsigned __int8 *)(v12 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v14)
  {
    uint64_t v15 = (int)v14;
    memcpy(v4, v13, (int)v14);
    v4 += v15;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v13, v14, v4);
}

uint64_t sub_13CCD60(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 0xF) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_22;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
  uint64_t v5 = *(void *)(v3 + 8);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = v4;
  }
  uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    unint64_t v6 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v1 & 4) == 0)
  {
    if ((v1 & 8) == 0) {
      goto LABEL_22;
    }
    goto LABEL_18;
  }
  unint64_t v9 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v10 = *(unsigned __int8 *)(v9 + 23);
  uint64_t v11 = *(void *)(v9 + 8);
  if ((v10 & 0x80u) == 0) {
    uint64_t v11 = v10;
  }
  v2 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 8) != 0)
  {
LABEL_18:
    int v12 = *(_DWORD *)(a1 + 48);
    if (v12 < 0) {
      uint64_t v13 = 11;
    }
    else {
      uint64_t v13 = ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v13;
  }
LABEL_22:
  uint64_t v14 = *(void *)(a1 + 8);
  if (v14)
  {
    unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v16 + 31) < 0) {
      uint64_t v17 = *(void *)(v16 + 16);
    }
    else {
      uint64_t v17 = *(unsigned __int8 *)(v16 + 31);
    }
    v2 += v17;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_13CCEBC()
{
  return 1;
}

void *sub_13CCEC4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.RouteTrafficDetail");
}

uint64_t sub_13CCED4(uint64_t a1)
{
  unint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_13CCF74(uint64_t a1)
{
  sub_13CCED4(a1);

  operator delete();
}

uint64_t sub_13CCFAC(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v1 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v1 + 23) < 0)
    {
      **(unsigned char **)unint64_t v1 = 0;
      *(void *)(v1 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v1 = 0;
      *(unsigned char *)(v1 + 23) = 0;
    }
  }
  char v3 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 24) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v3) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_13CCFF4(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v19 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v19, a3[11].i32[1])) {
    goto LABEL_30;
  }
  unint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = (char *)(*(void *)v19 + 1);
    unsigned int v8 = **(unsigned char **)v19;
    if ((char)**(unsigned char **)v19 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180(*(uint64_t *)v19, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (char *)(*(void *)v19 + 2);
      }
    }
    *(void *)uint64_t v19 = v7;
    if (v8 >> 3 == 2) {
      break;
    }
    if (v8 >> 3 != 1 || v8 != 10) {
      goto LABEL_12;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v15 = *(void *)(a1 + 8);
    unint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
    if (v15) {
      unint64_t v16 = (uint64_t *)*v16;
    }
    uint64_t v17 = (std::string *)sub_1880F84((void *)(a1 + 24), v16);
    uint64_t v14 = (void *)sub_188C244(v17, *(char **)v19, (uint64_t)a3);
LABEL_24:
    *(void *)uint64_t v19 = v14;
    if (!v14) {
      goto LABEL_31;
    }
LABEL_25:
    if (sub_11947B8((uint64_t)a3, (char **)v19, a3[11].i32[1])) {
      goto LABEL_30;
    }
  }
  if (v8 == 21)
  {
    v5 |= 2u;
    *(_DWORD *)(a1 + 32) = *(_DWORD *)v7;
    *(void *)uint64_t v19 = v7 + 4;
    goto LABEL_25;
  }
LABEL_12:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = *(char **)v19;
    }
    uint64_t v14 = sub_1885AC0(v8, v13, v7, a3);
    goto LABEL_24;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    goto LABEL_30;
  }
LABEL_31:
  *(void *)uint64_t v19 = 0;
LABEL_30:
  *(_DWORD *)(a1 + 16) |= v5;
  return *(void *)v19;
}

char *sub_13CD190(uint64_t a1, char *__dst, void *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    int v7 = *(_DWORD *)(a1 + 32);
    char *v4 = 21;
    *(_DWORD *)(v4 + 1) = v7;
    v4 += 5;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if ((v8 & 1) == 0) {
    return v4;
  }
  unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v10 + 31) < 0)
  {
    uint64_t v11 = *(void **)(v10 + 8);
    uint64_t v12 = *(void *)(v10 + 16);
  }
  else
  {
    uint64_t v11 = (void *)(v10 + 8);
    LODWORD(v12) = *(unsigned __int8 *)(v10 + 31);
  }
  if (*a3 - (void)v4 >= (int)v12)
  {
    uint64_t v13 = (int)v12;
    memcpy(v4, v11, (int)v12);
    v4 += v13;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v11, v12, v4);
}

uint64_t sub_13CD294(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) != 0)
  {
    if (v1)
    {
      unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
      uint64_t v6 = *(void *)(v4 + 8);
      if ((v5 & 0x80u) == 0) {
        uint64_t v6 = v5;
      }
      uint64_t v2 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    else
    {
      uint64_t v2 = 0;
    }
    if ((v1 & 2) != 0) {
      uint64_t v3 = v2 + 5;
    }
    else {
      uint64_t v3 = v2;
    }
  }
  else
  {
    uint64_t v3 = 0;
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v9 + 31) < 0) {
      uint64_t v10 = *(void *)(v9 + 16);
    }
    else {
      uint64_t v10 = *(unsigned __int8 *)(v9 + 31);
    }
    v3 += v10;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

uint64_t sub_13CD334()
{
  return 1;
}

void *sub_13CD33C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.SnapScoreMetadata.SnapScoreSegment.ScoreCategory");
}

uint64_t sub_13CD34C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  unint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  if ((uint64_t (***)())a1 != &off_2536648 && *(void *)(a1 + 72))
  {
    sub_15B0994();
    operator delete();
  }
  if (*(void *)(a1 + 8)) {
    sub_10E4F74(v3);
  }
LABEL_8:
  sub_1889DE8((void *)(a1 + 48));
  sub_148C948((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_13CD418(uint64_t a1)
{
  sub_13CD34C(a1);

  operator delete();
}

uint64_t sub_13CD450(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(a1 + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      sub_13CCFAC(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(a1 + 32) = 0;
  }
  uint64_t result = sub_188CC00(a1 + 48);
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    uint64_t result = (uint64_t)sub_15B09D0(*(void *)(a1 + 72));
  }
  if ((v6 & 6) != 0)
  {
    *(_DWORD *)(a1 + 88) = 0;
    *(void *)(a1 + 80) = 0;
  }
  char v8 = *(unsigned char *)(a1 + 8);
  uint64_t v7 = a1 + 8;
  *(_DWORD *)(v7 + 8) = 0;
  if (v8)
  {
    return sub_188B4AC((uint64_t *)v7);
  }
  return result;
}

uint64_t sub_13CD4F8(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unint64_t v36 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v36, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (uint64_t **)(a1 + 48);
  char v8 = (void *)(a1 + 8);
  while (2)
  {
    unint64_t v9 = (unsigned __int8 *)(*(void *)v36 + 1);
    unsigned int v10 = **(unsigned char **)v36;
    if ((char)**(unsigned char **)v36 < 0)
    {
      unsigned int v11 = v10 + (*v9 << 7);
      unsigned int v10 = v11 - 128;
      if ((char)*v9 < 0)
      {
        unint64_t v9 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v36, v11 - 128);
        unsigned int v10 = v12;
      }
      else
      {
        unint64_t v9 = (unsigned __int8 *)(*(void *)v36 + 2);
      }
    }
    *(void *)unint64_t v36 = v9;
    switch(v10 >> 3)
    {
      case 1u:
        if (v10 != 8) {
          goto LABEL_44;
        }
        v5 |= 2u;
        uint64_t v13 = (char *)(v9 + 1);
        uint64_t v14 = *v9;
        if (((char)*v9 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v15 = *v13;
        uint64_t v14 = v14 + (v15 << 7) - 128;
        if ((v15 & 0x80000000) == 0)
        {
          uint64_t v13 = (char *)(v9 + 2);
LABEL_13:
          *(void *)unint64_t v36 = v13;
          *(void *)(a1 + 80) = v14;
          goto LABEL_52;
        }
        uint64_t v34 = sub_188C138((uint64_t)v9, v14);
        *(void *)unint64_t v36 = v34;
        *(void *)(a1 + 80) = v35;
        if (v34) {
          goto LABEL_52;
        }
        goto LABEL_59;
      case 2u:
        if (v10 != 18) {
          goto LABEL_44;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v16 = *(void *)(a1 + 72);
        if (!v16)
        {
          uint64_t v17 = (void *)(*v8 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v8) {
            uint64_t v17 = (void *)*v17;
          }
          uint64_t v16 = sub_15C1918((uint64_t)v17);
          *(void *)(a1 + 72) = v16;
          unint64_t v9 = *(unsigned __int8 **)v36;
        }
        uint64_t v18 = sub_1198F14(a3, v16, v9);
        goto LABEL_51;
      case 3u:
        if (v10 != 29) {
          goto LABEL_44;
        }
        v5 |= 4u;
        *(_DWORD *)(a1 + 88) = *(_DWORD *)v9;
        *(void *)unint64_t v36 = v9 + 4;
        goto LABEL_52;
      case 4u:
        if (v10 != 34) {
          goto LABEL_44;
        }
        uint64_t v19 = v9 - 1;
        while (1)
        {
          uint64_t v20 = v19 + 1;
          *(void *)unint64_t v36 = v19 + 1;
          uint64_t v21 = *(_DWORD **)(a1 + 40);
          if (v21 && (uint64_t v22 = *(int *)(a1 + 32), (int)v22 < *v21))
          {
            *(_DWORD *)(a1 + 32) = v22 + 1;
            uint64_t v23 = *(void *)&v21[2 * v22 + 2];
          }
          else
          {
            uint64_t v24 = sub_13DA634(*(void *)(a1 + 24));
            uint64_t v23 = sub_188CDC8(a1 + 24, v24);
            uint64_t v20 = *(unsigned __int8 **)v36;
          }
          uint64_t v19 = (unsigned __int8 *)sub_13CD8A4(a3, v23, v20);
          *(void *)unint64_t v36 = v19;
          if (!v19) {
            goto LABEL_59;
          }
          if (*(void *)a3 <= (unint64_t)v19 || *v19 != 34) {
            goto LABEL_52;
          }
        }
      case 5u:
        if (v10 != 42) {
          goto LABEL_44;
        }
        uint64_t v25 = (const std::string::value_type *)(v9 - 1);
        while (1)
        {
          int v26 = (char *)(v25 + 1);
          *(void *)unint64_t v36 = v25 + 1;
          unint64_t v27 = *(_DWORD **)(a1 + 64);
          if (v27 && (uint64_t v28 = *(int *)(a1 + 56), (int)v28 < *v27))
          {
            *(_DWORD *)(a1 + 56) = v28 + 1;
            v29 = *(std::string **)&v27[2 * v28 + 2];
          }
          else
          {
            if (!*v7) {
              operator new();
            }
            *uint64_t v31 = v30;
            v31[1] = sub_3A6EDC;
            *long long v30 = 0;
            v30[1] = 0;
            v30[2] = 0;
            v29 = (std::string *)sub_188CDC8(a1 + 48, (uint64_t)v30);
            int v26 = *(char **)v36;
          }
          uint64_t v25 = sub_188C244(v29, v26, (uint64_t)a3);
          *(void *)unint64_t v36 = v25;
          if (!v25) {
            goto LABEL_59;
          }
          if (*(void *)a3 <= (unint64_t)v25 || *v25 != 42) {
            goto LABEL_52;
          }
        }
      default:
LABEL_44:
        if (v10) {
          BOOL v32 = (v10 & 7) == 4;
        }
        else {
          BOOL v32 = 1;
        }
        if (!v32)
        {
          if (*v8)
          {
            uint64_t v33 = (std::string *)((*v8 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v33 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unint64_t v9 = *(unsigned __int8 **)v36;
          }
          uint64_t v18 = sub_1885AC0(v10, v33, (char *)v9, a3);
LABEL_51:
          *(void *)unint64_t v36 = v18;
          if (!v18) {
            goto LABEL_59;
          }
LABEL_52:
          if (sub_11947B8((uint64_t)a3, (char **)v36, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v9) {
          a3[10].i32[0] = v10 - 1;
        }
        else {
LABEL_59:
        }
          *(void *)unint64_t v36 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v36;
    }
  }
}

uint64_t sub_13CD8A4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_13CCFF4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_13CD934(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(void *)(a1 + 80);
    char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 72);
    char *v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 44);
    v4[1] = v11;
    if (v11 > 0x7F) {
      unsigned int v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      unsigned int v12 = v4 + 2;
    }
    uint64_t v4 = sub_15B0C0C(v10, v12, a3);
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    int v13 = *(_DWORD *)(a1 + 88);
    char *v4 = 29;
    *(_DWORD *)(v4 + 1) = v13;
    v4 += 5;
  }
  int v14 = *(_DWORD *)(a1 + 32);
  if (v14)
  {
    for (int i = 0; i != v14; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v16 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      char *v4 = 34;
      unsigned int v17 = *(_DWORD *)(v16 + 20);
      v4[1] = v17;
      if (v17 > 0x7F) {
        uint64_t v18 = sub_188A9CC(v17, v4 + 1);
      }
      else {
        uint64_t v18 = v4 + 2;
      }
      uint64_t v4 = sub_13CD190(v16, v18, a3);
    }
  }
  uint64_t v19 = *(unsigned int *)(a1 + 56);
  if ((int)v19 >= 1)
  {
    uint64_t v20 = 0;
    uint64_t v21 = 8 * v19;
    do
    {
      uint64_t v22 = *(void **)(*(void *)(a1 + 64) + v20 + 8);
      if (*((char *)v22 + 23) < 0)
      {
        int64_t v23 = v22[1];
        if (v23 > 127) {
          goto LABEL_38;
        }
      }
      else
      {
        int64_t v23 = *((unsigned __int8 *)v22 + 23);
      }
      if (*(void *)a3 - (void)v4 + 14 >= v23)
      {
        char *v4 = 42;
        v4[1] = v23;
        if (*((char *)v22 + 23) < 0) {
          uint64_t v22 = (void *)*v22;
        }
        uint64_t v24 = v4 + 2;
        memcpy(v24, v22, v23);
        uint64_t v4 = &v24[v23];
        goto LABEL_36;
      }
LABEL_38:
      uint64_t v4 = (char *)sub_188A868(a3, 5, (uint64_t)v22, v4);
LABEL_36:
      v20 += 8;
    }
    while (v21 != v20);
  }
  uint64_t v25 = *(void *)(a1 + 8);
  if ((v25 & 1) == 0) {
    return v4;
  }
  unint64_t v27 = v25 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v27 + 31) < 0)
  {
    uint64_t v28 = *(void **)(v27 + 8);
    uint64_t v29 = *(void *)(v27 + 16);
  }
  else
  {
    uint64_t v28 = (void *)(v27 + 8);
    LODWORD(v29) = *(unsigned __int8 *)(v27 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v29)
  {
    uint64_t v30 = (int)v29;
    memcpy(v4, v28, (int)v29);
    v4 += v30;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v28, v29, v4);
}

uint64_t sub_13CDC3C(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_13CD294(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(unsigned int *)(a1 + 56);
  uint64_t v9 = v2 + v8;
  if ((int)v8 >= 1)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v11 = *v10++;
      uint64_t v12 = *(unsigned __int8 *)(v11 + 23);
      uint64_t v13 = *(void *)(v11 + 8);
      if ((v12 & 0x80u) == 0) {
        uint64_t v13 = v12;
      }
      v9 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6);
      --v8;
    }
    while (v8);
  }
  int v14 = *(_DWORD *)(a1 + 16);
  if ((v14 & 7) != 0)
  {
    if (v14)
    {
      uint64_t v15 = sub_15B0D90(*(void *)(a1 + 72));
      v9 += v15 + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v14 & 2) != 0) {
      v9 += ((9 * (__clz(*(void *)(a1 + 80) | 1) ^ 0x3F) + 73) >> 6) + 1;
    }
    if ((v14 & 4) != 0) {
      v9 += 5;
    }
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if (v16)
  {
    unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v18 + 31) < 0) {
      uint64_t v19 = *(void *)(v18 + 16);
    }
    else {
      uint64_t v19 = *(unsigned __int8 *)(v18 + 31);
    }
    v9 += v19;
  }
  *(_DWORD *)(a1 + 20) = v9;
  return v9;
}

void sub_13CDDB0(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_148E400((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    uint64_t v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    uint64_t v10 = (const std::string **)(*(void *)(a2 + 64) + 8);
    uint64_t v11 = (std::string **)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_188FB98(a1 + 48, v11, v10, v9, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v12 = *(_DWORD *)(a1 + 56) + v9;
    *(_DWORD *)(a1 + 56) = v12;
    uint64_t v13 = *(int **)(a1 + 64);
    if (*v13 < v12) {
      int *v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 16);
  if ((v14 & 7) != 0)
  {
    if (v14)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v16 = *(void *)(a1 + 72);
      if (!v16)
      {
        uint64_t v17 = *(void *)(a1 + 8);
        unint64_t v18 = (void *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
        if (v17) {
          unint64_t v18 = (void *)*v18;
        }
        uint64_t v16 = sub_15C1918((uint64_t)v18);
        *(void *)(a1 + 72) = v16;
      }
      if (*(void *)(a2 + 72)) {
        uint64_t v19 = *(uint64_t (****)())(a2 + 72);
      }
      else {
        uint64_t v19 = &off_253F1A0;
      }
      sub_15B0E24(v16, (uint64_t)v19);
      if ((v14 & 2) == 0)
      {
LABEL_10:
        if ((v14 & 4) == 0)
        {
LABEL_12:
          *(_DWORD *)(a1 + 16) |= v14;
          goto LABEL_13;
        }
LABEL_11:
        *(_DWORD *)(a1 + 88) = *(_DWORD *)(a2 + 88);
        goto LABEL_12;
      }
    }
    else if ((v14 & 2) == 0)
    {
      goto LABEL_10;
    }
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    if ((v14 & 4) == 0) {
      goto LABEL_12;
    }
    goto LABEL_11;
  }
LABEL_13:
  uint64_t v15 = *(void *)(a2 + 8);
  if (v15)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v15 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_13CDF6C(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 1;
  }
  uint64_t result = sub_15B0F18(*(void *)(a1 + 72));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_13CDF98@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.SnapScoreMetadata.SnapScoreSegment");
}

uint64_t sub_13CDFA8(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (uint64_t *)(a1 + 8);
  *(void *)a1 = off_24B0808;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v5 = (uint64_t *)(a1 + 24);
  *(_DWORD *)(a1 + 44) = 0;
  *(void *)(a1 + 28) = 0;
  *(void *)(a1 + 36) = 0;
  *(void *)(a1 + 20) = 0;
  int v6 = *(_DWORD *)(a2 + 32);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 40);
    uint64_t v8 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_148E48C(v5, v8, (uint64_t *)(v7 + 8), v6, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v9 = *(_DWORD *)(a1 + 32) + v6;
    *(_DWORD *)(a1 + 32) = v9;
    uint64_t v10 = *(int **)(a1 + 40);
    if (*v10 < v9) {
      *uint64_t v10 = v9;
    }
  }
  uint64_t v11 = *(void *)(a2 + 8);
  if (v11) {
    sub_188B4F8(v4, (v11 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  if (*(unsigned char *)(a2 + 16)) {
    operator new();
  }
  *(void *)(a1 + 48) = 0;
  return a1;
}

void sub_13CE0CC()
{
}

uint64_t sub_13CE130(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  if ((uint64_t (***)())a1 != &off_25366A8 && *(void *)(a1 + 48))
  {
    sub_15B0994();
    operator delete();
  }
  if (*(void *)(a1 + 8)) {
    sub_10E4F74(v3);
  }
LABEL_8:
  sub_148C9C8((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_13CE1F4(uint64_t a1)
{
  sub_13CE130(a1);

  operator delete();
}

uint64_t sub_13CE22C(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_13CD450(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  if (*(unsigned char *)(v1 + 16)) {
    uint64_t result = (uint64_t)sub_15B09D0(*(void *)(v1 + 48));
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = v1 + 8;
  *(_DWORD *)(v5 + 8) = 0;
  if (v6)
  {
    return sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

char *sub_13CE2BC(uint64_t a1, char *a2, int32x2_t *a3)
{
  int64_t v23 = a2;
  if (sub_11947B8((uint64_t)a3, &v23, a3[11].i32[1])) {
    return v23;
  }
  char v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v23 + 1;
    unsigned int v8 = *v23;
    if (*v23 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v23, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v23 + 2;
      }
    }
    int64_t v23 = v7;
    if (v8 >> 3 == 2) {
      break;
    }
    if (v8 >> 3 != 1 || v8 != 10) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v21 = *(void *)(a1 + 48);
    if (!v21)
    {
      uint64_t v22 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        uint64_t v22 = (void *)*v22;
      }
      uint64_t v21 = sub_15C1918((uint64_t)v22);
      *(void *)(a1 + 48) = v21;
      uint64_t v7 = v23;
    }
    int v14 = sub_1198F14(a3, v21, (unsigned __int8 *)v7);
LABEL_35:
    int64_t v23 = v14;
    if (!v14) {
      return 0;
    }
LABEL_36:
    if (sub_11947B8((uint64_t)a3, &v23, a3[11].i32[1])) {
      return v23;
    }
  }
  if (v8 == 18)
  {
    uint64_t v15 = v7 - 1;
    while (1)
    {
      uint64_t v16 = (unsigned __int8 *)(v15 + 1);
      int64_t v23 = v15 + 1;
      uint64_t v17 = *(_DWORD **)(a1 + 40);
      if (v17 && (uint64_t v18 = *(int *)(a1 + 32), (int)v18 < *v17))
      {
        *(_DWORD *)(a1 + 32) = v18 + 1;
        uint64_t v19 = *(void *)&v17[2 * v18 + 2];
      }
      else
      {
        sub_13DA6BC(*(void *)(a1 + 24));
        uint64_t v19 = sub_188CDC8(a1 + 24, v20);
        uint64_t v16 = (unsigned __int8 *)v23;
      }
      uint64_t v15 = (char *)sub_13CE4C4(a3, v19, v16);
      int64_t v23 = v15;
      if (!v15) {
        return 0;
      }
      if (*(void *)a3 <= (unint64_t)v15 || *v15 != 18) {
        goto LABEL_36;
      }
    }
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = v23;
    }
    int v14 = (char *)sub_1885AC0(v8, v13, v7, a3);
    goto LABEL_35;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v23;
  }
  return 0;
}

uint64_t sub_13CE4C4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_13CD4F8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_13CE554(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v6 = *(void *)(a1 + 48);
    char *v4 = 10;
    unsigned int v7 = *(_DWORD *)(v6 + 44);
    v4[1] = v7;
    if (v7 > 0x7F) {
      unsigned int v8 = sub_188A9CC(v7, v4 + 1);
    }
    else {
      unsigned int v8 = v4 + 2;
    }
    uint64_t v4 = sub_15B0C0C(v6, v8, a3);
  }
  int v9 = *(_DWORD *)(a1 + 32);
  if (v9)
  {
    for (int i = 0; i != v9; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v11 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      char *v4 = 18;
      unsigned int v12 = *(_DWORD *)(v11 + 20);
      v4[1] = v12;
      if (v12 > 0x7F) {
        uint64_t v13 = sub_188A9CC(v12, v4 + 1);
      }
      else {
        uint64_t v13 = v4 + 2;
      }
      uint64_t v4 = sub_13CD934(v11, (unint64_t)v13, a3);
    }
  }
  uint64_t v14 = *(void *)(a1 + 8);
  if ((v14 & 1) == 0) {
    return v4;
  }
  unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v16 + 31) < 0)
  {
    uint64_t v17 = *(void **)(v16 + 8);
    uint64_t v18 = *(void *)(v16 + 16);
  }
  else
  {
    uint64_t v17 = (void *)(v16 + 8);
    LODWORD(v18) = *(unsigned __int8 *)(v16 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v18)
  {
    uint64_t v19 = (int)v18;
    memcpy(v4, v17, (int)v18);
    v4 += v19;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v17, v18, v4);
}

uint64_t sub_13CE700(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_13CDC3C(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  if (*(unsigned char *)(a1 + 16))
  {
    uint64_t v8 = sub_15B0D90(*(void *)(a1 + 48));
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    v2 += v12;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

void sub_13CE7E4(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_148E48C((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    uint64_t v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  if (*(unsigned char *)(a2 + 16))
  {
    uint64_t v9 = *(uint64_t (****)())(a2 + 48);
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v10 = *(void *)(a1 + 48);
    if (!v10)
    {
      uint64_t v11 = *(void *)(a1 + 8);
      uint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        uint64_t v12 = (void *)*v12;
      }
      uint64_t v10 = sub_15C1918((uint64_t)v12);
      *(void *)(a1 + 48) = v10;
      uint64_t v9 = *(uint64_t (****)())(a2 + 48);
    }
    if (v9) {
      uint64_t v13 = v9;
    }
    else {
      uint64_t v13 = &off_253F1A0;
    }
    sub_15B0E24(v10, (uint64_t)v13);
  }
  uint64_t v14 = *(void *)(a2 + 8);
  if (v14)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v14 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_13CE908(uint64_t a1)
{
  uint64_t result = sub_13CE94C(a1 + 24);
  if (result)
  {
    if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
      return 1;
    }
    uint64_t result = sub_15B0F18(*(void *)(a1 + 48));
    if (result) {
      return 1;
    }
  }
  return result;
}

uint64_t sub_13CE94C(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 8);
  if ((int)v1 < 1) {
    return 1;
  }
  uint64_t v3 = v1 + 1;
  for (unsigned int i = v1 - 1; ; --i)
  {
    uint64_t v5 = *(void *)(*(void *)(a1 + 16) + 8 * i + 8);
    if (*(unsigned char *)(v5 + 16))
    {
      uint64_t result = sub_15B0F18(*(void *)(v5 + 72));
      if (!result) {
        break;
      }
    }
    if (--v3 <= 1) {
      return 1;
    }
  }
  return result;
}

void *sub_13CE9BC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.SnapScoreMetadata.SnapScorePoint");
}

uint64_t sub_13CE9CC(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (uint64_t *)(a1 + 8);
  *(void *)a1 = off_24B0888;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v5 = (uint64_t *)(a1 + 24);
  *(_DWORD *)(a1 + 44) = 0;
  *(void *)(a1 + 28) = 0;
  *(void *)(a1 + 36) = 0;
  *(void *)(a1 + 20) = 0;
  int v6 = *(_DWORD *)(a2 + 32);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 40);
    uint64_t v8 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_148E518(v5, v8, (uint64_t *)(v7 + 8), v6, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v9 = *(_DWORD *)(a1 + 32) + v6;
    *(_DWORD *)(a1 + 32) = v9;
    uint64_t v10 = *(int **)(a1 + 40);
    if (*v10 < v9) {
      *uint64_t v10 = v9;
    }
  }
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  int v11 = *(_DWORD *)(a2 + 56);
  if (v11)
  {
    uint64_t v12 = *(void *)(a2 + 64);
    uint64_t v13 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_148E518((uint64_t *)(a1 + 48), v13, (uint64_t *)(v12 + 8), v11, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v14 = *(_DWORD *)(a1 + 56) + v11;
    *(_DWORD *)(a1 + 56) = v14;
    uint64_t v15 = *(int **)(a1 + 64);
    if (*v15 < v14) {
      int *v15 = v14;
    }
  }
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0;
  int v16 = *(_DWORD *)(a2 + 80);
  if (v16)
  {
    uint64_t v17 = *(void *)(a2 + 88);
    uint64_t v18 = (uint64_t *)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_148E518((uint64_t *)(a1 + 72), v18, (uint64_t *)(v17 + 8), v16, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v19 = *(_DWORD *)(a1 + 80) + v16;
    *(_DWORD *)(a1 + 80) = v19;
    uint64_t v20 = *(int **)(a1 + 88);
    if (*v20 < v19) {
      *uint64_t v20 = v19;
    }
  }
  uint64_t v21 = *(void *)(a2 + 8);
  if (v21) {
    sub_188B4F8(v4, (v21 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  if (*(unsigned char *)(a2 + 16)) {
    operator new();
  }
  *(void *)(a1 + 96) = 0;
  return a1;
}

void sub_13CEBC8()
{
}

uint64_t sub_13CEC58(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_25366E0)
  {
    uint64_t v6 = *(void *)(a1 + 96);
    if (v6)
    {
      sub_13CE130(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  sub_148CA48((void *)(a1 + 72));
  sub_148CA48((void *)(a1 + 48));
  sub_148CA48((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_13CED34(uint64_t a1)
{
  sub_13CEC58(a1);

  operator delete();
}

uint64_t sub_13CED6C(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_13CE22C(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  uint64_t v5 = *(unsigned int *)(v1 + 56);
  if ((int)v5 >= 1)
  {
    uint64_t v6 = (uint64_t *)(*(void *)(v1 + 64) + 8);
    do
    {
      uint64_t v7 = *v6++;
      uint64_t result = sub_13CE22C(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(v1 + 56) = 0;
  }
  uint64_t v8 = *(unsigned int *)(v1 + 80);
  if ((int)v8 >= 1)
  {
    int v9 = (uint64_t *)(*(void *)(v1 + 88) + 8);
    do
    {
      uint64_t v10 = *v9++;
      uint64_t result = sub_13CE22C(v10);
      --v8;
    }
    while (v8);
    *(_DWORD *)(v1 + 80) = 0;
  }
  if (*(unsigned char *)(v1 + 16)) {
    uint64_t result = sub_13CE22C(*(void *)(v1 + 96));
  }
  char v12 = *(unsigned char *)(v1 + 8);
  uint64_t v11 = v1 + 8;
  *(_DWORD *)(v11 + 8) = 0;
  if (v12)
  {
    return sub_188B4AC((uint64_t *)v11);
  }
  return result;
}

char *sub_13CEE4C(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v34 = a2;
  if (sub_11947B8((uint64_t)a3, &v34, a3[11].i32[1])) {
    return v34;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v7 = v34 + 1;
    unsigned int v8 = *v34;
    if (*v34 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v34, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v34 + 2;
      }
    }
    uint64_t v34 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 10) {
          goto LABEL_45;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v11 = *(void **)(a1 + 96);
        if (!v11)
        {
          char v12 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            char v12 = (void *)*v12;
          }
          uint64_t v11 = sub_13DA770((uint64_t)v12);
          *(void *)(a1 + 96) = v11;
          uint64_t v7 = v34;
        }
        uint64_t v13 = sub_13CF1AC(a3, (uint64_t)v11, (unsigned __int8 *)v7);
        goto LABEL_52;
      case 2u:
        if (v8 != 18) {
          goto LABEL_45;
        }
        int v14 = v7 - 1;
        while (1)
        {
          uint64_t v15 = (unsigned __int8 *)(v14 + 1);
          uint64_t v34 = v14 + 1;
          int v16 = *(_DWORD **)(a1 + 40);
          if (v16 && (uint64_t v17 = *(int *)(a1 + 32), (int)v17 < *v16))
          {
            *(_DWORD *)(a1 + 32) = v17 + 1;
            uint64_t v18 = *(void *)&v16[2 * v17 + 2];
          }
          else
          {
            int v19 = sub_13DA770(*(void *)(a1 + 24));
            uint64_t v18 = sub_188CDC8(a1 + 24, (uint64_t)v19);
            uint64_t v15 = (unsigned __int8 *)v34;
          }
          int v14 = sub_13CF1AC(a3, v18, v15);
          uint64_t v34 = v14;
          if (!v14) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v14 || *v14 != 18) {
            goto LABEL_53;
          }
        }
      case 3u:
        if (v8 != 26) {
          goto LABEL_45;
        }
        uint64_t v20 = v7 - 1;
        while (1)
        {
          uint64_t v21 = (unsigned __int8 *)(v20 + 1);
          uint64_t v34 = v20 + 1;
          uint64_t v22 = *(_DWORD **)(a1 + 64);
          if (v22 && (uint64_t v23 = *(int *)(a1 + 56), (int)v23 < *v22))
          {
            *(_DWORD *)(a1 + 56) = v23 + 1;
            uint64_t v24 = *(void *)&v22[2 * v23 + 2];
          }
          else
          {
            uint64_t v25 = sub_13DA770(*(void *)(a1 + 48));
            uint64_t v24 = sub_188CDC8(a1 + 48, (uint64_t)v25);
            uint64_t v21 = (unsigned __int8 *)v34;
          }
          uint64_t v20 = sub_13CF1AC(a3, v24, v21);
          uint64_t v34 = v20;
          if (!v20) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v20 || *v20 != 26) {
            goto LABEL_53;
          }
        }
      case 4u:
        if (v8 != 34) {
          goto LABEL_45;
        }
        int v26 = v7 - 1;
        while (1)
        {
          unint64_t v27 = (unsigned __int8 *)(v26 + 1);
          uint64_t v34 = v26 + 1;
          uint64_t v28 = *(_DWORD **)(a1 + 88);
          if (v28 && (uint64_t v29 = *(int *)(a1 + 80), (int)v29 < *v28))
          {
            *(_DWORD *)(a1 + 80) = v29 + 1;
            uint64_t v30 = *(void *)&v28[2 * v29 + 2];
          }
          else
          {
            uint64_t v31 = sub_13DA770(*(void *)(a1 + 72));
            uint64_t v30 = sub_188CDC8(a1 + 72, (uint64_t)v31);
            unint64_t v27 = (unsigned __int8 *)v34;
          }
          int v26 = sub_13CF1AC(a3, v30, v27);
          uint64_t v34 = v26;
          if (!v26) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v26 || *v26 != 34) {
            goto LABEL_53;
          }
        }
      default:
LABEL_45:
        if (v8) {
          BOOL v32 = (v8 & 7) == 4;
        }
        else {
          BOOL v32 = 1;
        }
        if (!v32)
        {
          if (*v6)
          {
            uint64_t v33 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v33 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v7 = v34;
          }
          uint64_t v13 = (char *)sub_1885AC0(v8, v33, v7, a3);
LABEL_52:
          uint64_t v34 = v13;
          if (!v13) {
            return 0;
          }
LABEL_53:
          if (sub_11947B8((uint64_t)a3, &v34, a3[11].i32[1])) {
            return v34;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return v34;
    }
  }
}

char *sub_13CF1AC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_13CE2BC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_13CF23C(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v6 = *(void *)(a1 + 96);
    unsigned char *v4 = 10;
    unsigned int v7 = *(_DWORD *)(v6 + 20);
    v4[1] = v7;
    if (v7 > 0x7F) {
      unsigned int v8 = sub_188A9CC(v7, v4 + 1);
    }
    else {
      unsigned int v8 = v4 + 2;
    }
    uint64_t v4 = sub_13CE554(v6, (unint64_t)v8, a3);
  }
  int v9 = *(_DWORD *)(a1 + 32);
  if (v9)
  {
    for (int i = 0; i != v9; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v11 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      unsigned char *v4 = 18;
      unsigned int v12 = *(_DWORD *)(v11 + 20);
      v4[1] = v12;
      if (v12 > 0x7F) {
        uint64_t v13 = sub_188A9CC(v12, v4 + 1);
      }
      else {
        uint64_t v13 = v4 + 2;
      }
      uint64_t v4 = sub_13CE554(v11, (unint64_t)v13, a3);
    }
  }
  int v14 = *(_DWORD *)(a1 + 56);
  if (v14)
  {
    for (int j = 0; j != v14; ++j)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v16 = *(void *)(*(void *)(a1 + 64) + 8 * j + 8);
      unsigned char *v4 = 26;
      unsigned int v17 = *(_DWORD *)(v16 + 20);
      v4[1] = v17;
      if (v17 > 0x7F) {
        uint64_t v18 = sub_188A9CC(v17, v4 + 1);
      }
      else {
        uint64_t v18 = v4 + 2;
      }
      uint64_t v4 = sub_13CE554(v16, (unint64_t)v18, a3);
    }
  }
  int v19 = *(_DWORD *)(a1 + 80);
  if (v19)
  {
    for (int k = 0; k != v19; ++k)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v21 = *(void *)(*(void *)(a1 + 88) + 8 * k + 8);
      unsigned char *v4 = 34;
      unsigned int v22 = *(_DWORD *)(v21 + 20);
      v4[1] = v22;
      if (v22 > 0x7F) {
        uint64_t v23 = sub_188A9CC(v22, v4 + 1);
      }
      else {
        uint64_t v23 = v4 + 2;
      }
      uint64_t v4 = sub_13CE554(v21, (unint64_t)v23, a3);
    }
  }
  uint64_t v24 = *(void *)(a1 + 8);
  if ((v24 & 1) == 0) {
    return v4;
  }
  unint64_t v26 = v24 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v26 + 31) < 0)
  {
    unint64_t v27 = *(void **)(v26 + 8);
    uint64_t v28 = *(void *)(v26 + 16);
  }
  else
  {
    unint64_t v27 = (void *)(v26 + 8);
    LODWORD(v28) = *(unsigned __int8 *)(v26 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v28)
  {
    uint64_t v29 = (int)v28;
    memcpy(v4, v27, (int)v28);
    v4 += v29;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v27, v28, v4);
}

uint64_t sub_13CF4F0(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_13CE700(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(int *)(a1 + 56);
  uint64_t v9 = v2 + v8;
  uint64_t v10 = *(void *)(a1 + 64);
  if (v10) {
    uint64_t v11 = (uint64_t *)(v10 + 8);
  }
  else {
    uint64_t v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_13CE700(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  uint64_t v15 = *(int *)(a1 + 80);
  uint64_t v16 = v9 + v15;
  uint64_t v17 = *(void *)(a1 + 88);
  if (v17) {
    uint64_t v18 = (uint64_t *)(v17 + 8);
  }
  else {
    uint64_t v18 = 0;
  }
  if (v15)
  {
    uint64_t v19 = 8 * v15;
    do
    {
      uint64_t v20 = *v18++;
      uint64_t v21 = sub_13CE700(v20);
      v16 += v21 + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6);
      v19 -= 8;
    }
    while (v19);
  }
  if (*(unsigned char *)(a1 + 16))
  {
    uint64_t v22 = sub_13CE700(*(void *)(a1 + 96));
    v16 += v22 + ((9 * (__clz(v22 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v23 = *(void *)(a1 + 8);
  if (v23)
  {
    unint64_t v25 = v23 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v25 + 31) < 0) {
      uint64_t v26 = *(void *)(v25 + 16);
    }
    else {
      uint64_t v26 = *(unsigned __int8 *)(v25 + 31);
    }
    v16 += v26;
  }
  *(_DWORD *)(a1 + 20) = v16;
  return v16;
}

void sub_13CF674(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_148E518((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    uint64_t v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    uint64_t v11 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_148E518((uint64_t *)(a1 + 48), v11, v10, v9, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v12 = *(_DWORD *)(a1 + 56) + v9;
    *(_DWORD *)(a1 + 56) = v12;
    uint64_t v13 = *(int **)(a1 + 64);
    if (*v13 < v12) {
      int *v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 80);
  if (v14)
  {
    uint64_t v15 = (uint64_t *)(*(void *)(a2 + 88) + 8);
    uint64_t v16 = (uint64_t *)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_148E518((uint64_t *)(a1 + 72), v16, v15, v14, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v17 = *(_DWORD *)(a1 + 80) + v14;
    *(_DWORD *)(a1 + 80) = v17;
    uint64_t v18 = *(int **)(a1 + 88);
    if (*v18 < v17) {
      *uint64_t v18 = v17;
    }
  }
  if (*(unsigned char *)(a2 + 16))
  {
    uint64_t v19 = *(uint64_t (****)())(a2 + 96);
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v20 = *(void **)(a1 + 96);
    if (!v20)
    {
      uint64_t v21 = *(void *)(a1 + 8);
      uint64_t v22 = (void *)(v21 & 0xFFFFFFFFFFFFFFFCLL);
      if (v21) {
        uint64_t v22 = (void *)*v22;
      }
      uint64_t v20 = sub_13DA770((uint64_t)v22);
      *(void *)(a1 + 96) = v20;
      uint64_t v19 = *(uint64_t (****)())(a2 + 96);
    }
    if (v19) {
      uint64_t v23 = v19;
    }
    else {
      uint64_t v23 = &off_25366A8;
    }
    sub_13CE7E4((uint64_t)v20, (uint64_t)v23);
  }
  uint64_t v24 = *(void *)(a2 + 8);
  if (v24)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v24 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_13CF860(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  while ((int)v2 >= 1)
  {
    uint64_t v3 = v2 - 1;
    char v4 = sub_13CE908(*(void *)(*(void *)(a1 + 40) + 8 * v2));
    uint64_t v2 = v3;
    if ((v4 & 1) == 0) {
      return 0;
    }
  }
  uint64_t v5 = *(unsigned int *)(a1 + 56);
  while ((int)v5 >= 1)
  {
    uint64_t v6 = v5 - 1;
    char v7 = sub_13CE908(*(void *)(*(void *)(a1 + 64) + 8 * v5));
    uint64_t v5 = v6;
    if ((v7 & 1) == 0) {
      return 0;
    }
  }
  uint64_t v8 = *(unsigned int *)(a1 + 80);
  while ((int)v8 >= 1)
  {
    uint64_t v9 = v8 - 1;
    char v10 = sub_13CE908(*(void *)(*(void *)(a1 + 88) + 8 * v8));
    uint64_t v8 = v9;
    if ((v10 & 1) == 0) {
      return 0;
    }
  }
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 1;
  }
  uint64_t result = sub_13CE908(*(void *)(a1 + 96));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_13CF914@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.SnapScoreMetadata");
}

uint64_t sub_13CF924(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_24B0908;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  return a1;
}

void sub_13CF9A0(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_13CF9D0(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_13CFA44(void *a1)
{
  sub_13CF9D0(a1);

  operator delete();
}

char *sub_13CFA7C(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v25 = a2;
  if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
    return v25;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    char v7 = v25 + 1;
    unsigned int v8 = *v25;
    if (*v25 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        char v7 = (char *)sub_188C180((uint64_t)v25, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        char v7 = v25 + 2;
      }
    }
    unint64_t v25 = v7;
    if (v8 >> 3 != 2) {
      break;
    }
    if (v8 != 16) {
      goto LABEL_13;
    }
    int v14 = v7 + 1;
    unint64_t v15 = *v7;
    if (*v7 < 0)
    {
      int v16 = *v14;
      int v17 = v15 + (v16 << 7);
      unint64_t v15 = (v17 - 128);
      if (v16 < 0)
      {
        unint64_t v25 = (char *)sub_188C138((uint64_t)v7, (v17 - 128));
        if (!v25) {
          return 0;
        }
        unint64_t v15 = v21;
        goto LABEL_26;
      }
      int v14 = v7 + 2;
    }
    unint64_t v25 = v14;
LABEL_26:
    if (v15 > 3)
    {
      if (*v6) {
        uint64_t v23 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        uint64_t v23 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      int v24 = 2;
      goto LABEL_46;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    *(_DWORD *)(a1 + 28) = v15;
LABEL_34:
    if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
      return v25;
    }
  }
  if (v8 >> 3 == 1 && v8 == 8)
  {
    uint64_t v18 = v7 + 1;
    unint64_t v15 = *v7;
    if ((*v7 & 0x80000000) == 0) {
      goto LABEL_31;
    }
    int v19 = *v18;
    int v20 = v15 + (v19 << 7);
    unint64_t v15 = (v20 - 128);
    if (v19 < 0)
    {
      unint64_t v25 = (char *)sub_188C138((uint64_t)v7, (v20 - 128));
      if (!v25) {
        return 0;
      }
      unint64_t v15 = v22;
    }
    else
    {
      uint64_t v18 = v7 + 2;
LABEL_31:
      unint64_t v25 = v18;
    }
    if (v15 <= 6)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      *(_DWORD *)(a1 + 24) = v15;
      goto LABEL_34;
    }
    if (*v6) {
      uint64_t v23 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else {
      uint64_t v23 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
    }
    int v24 = 1;
LABEL_46:
    sub_188C020(v24, v15, v23);
    goto LABEL_34;
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      char v7 = v25;
    }
    unint64_t v25 = (char *)sub_1885AC0(v8, v13, v7, a3);
    if (!v25) {
      return 0;
    }
    goto LABEL_34;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v25;
  }
  return 0;
}

unsigned char *sub_13CFCD4(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 28);
    unsigned char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    int v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    int v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_13CFE78(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_14;
  }
  if (v1)
  {
    int v3 = *(_DWORD *)(a1 + 24);
    if (v3 < 0)
    {
      uint64_t v2 = 11;
      if ((v1 & 2) == 0) {
        goto LABEL_14;
      }
    }
    else
    {
      uint64_t v2 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v1 & 2) == 0) {
        goto LABEL_14;
      }
    }
  }
  else
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_14;
    }
  }
  int v4 = *(_DWORD *)(a1 + 28);
  if (v4 < 0) {
    uint64_t v5 = 11;
  }
  else {
    uint64_t v5 = ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v2 += v5;
LABEL_14:
  uint64_t v6 = *(void *)(a1 + 8);
  if (v6)
  {
    unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v8 + 31) < 0) {
      uint64_t v9 = *(void *)(v8 + 16);
    }
    else {
      uint64_t v9 = *(unsigned __int8 *)(v8 + 31);
    }
    v2 += v9;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_13CFF38()
{
  return 1;
}

void *sub_13CFF40@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.FormattedStringMetaData");
}

uint64_t sub_13CFF50(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (uint64_t *)(a1 + 8);
  *(void *)a1 = off_24B0988;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 36) = 0;
  *(void *)(a1 + 20) = 0;
  *(void *)(a1 + 28) = 0;
  int v5 = *(_DWORD *)(a2 + 24);
  if (v5)
  {
    sub_188C80C((unsigned int *)(a1 + 24), v5);
    uint64_t v6 = *(void **)(a1 + 32);
    *(_DWORD *)(a1 + 24) += *(_DWORD *)(a2 + 24);
    memcpy(v6, *(const void **)(a2 + 32), 4 * *(int *)(a2 + 24));
  }
  uint64_t v7 = *(void *)(a2 + 8);
  if (v7) {
    sub_188B4F8(v4, (v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  if (*(unsigned char *)(a2 + 16)) {
    operator new();
  }
  *(void *)(a1 + 40) = 0;
  return a1;
}

void sub_13D0048()
{
}

uint64_t sub_13D00A8(uint64_t a1)
{
  int v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_2536768)
  {
    uint64_t v6 = *(void *)(a1 + 40);
    if (v6)
    {
      sub_1374224(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  sub_1889DA8(a1 + 24);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_13D0168(uint64_t a1)
{
  sub_13D00A8(a1);

  operator delete();
}

char *sub_13D01A0(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v24 = a2;
  if (sub_11947B8((uint64_t)a3, &v24, a3[11].i32[1])) {
    return v24;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v24 + 1;
    unsigned int v8 = *v24;
    if (*v24 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v24, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v24 + 2;
      }
    }
    int v24 = v7;
    if (v8 >> 3 == 2) {
      break;
    }
    if (v8 >> 3 != 1 || v8 != 10) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v21 = *(void *)(a1 + 40);
    if (!v21)
    {
      unint64_t v22 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        unint64_t v22 = (void *)*v22;
      }
      sub_13D6A1C((uint64_t)v22);
      uint64_t v21 = v23;
      *(void *)(a1 + 40) = v23;
      uint64_t v7 = v24;
    }
    int v14 = (char *)sub_13319DC(a3, v21, (unsigned __int8 *)v7);
LABEL_39:
    int v24 = v14;
    if (!v14) {
      return 0;
    }
LABEL_40:
    if (sub_11947B8((uint64_t)a3, &v24, a3[11].i32[1])) {
      return v24;
    }
  }
  if (v8 == 16)
  {
    unint64_t v15 = v7 - 1;
    while (1)
    {
      int v24 = v15 + 1;
      int v16 = v15[1];
      if (v15[1] < 0)
      {
        int v17 = v16 + (v15[2] << 7);
        int v16 = v17 - 128;
        if (v15[2] < 0)
        {
          unint64_t v15 = (char *)sub_188C0D0((uint64_t)(v15 + 1), v17 - 128);
          int v16 = v18;
        }
        else
        {
          v15 += 3;
        }
      }
      else
      {
        v15 += 2;
      }
      int v24 = v15;
      uint64_t v19 = *(unsigned int *)(a1 + 24);
      if (v19 == *(_DWORD *)(a1 + 28))
      {
        int v20 = v19 + 1;
        sub_188C80C((unsigned int *)(a1 + 24), v19 + 1);
        *(_DWORD *)(*(void *)(a1 + 32) + 4 * v19) = v16;
        unint64_t v15 = v24;
      }
      else
      {
        *(_DWORD *)(*(void *)(a1 + 32) + 4 * v19) = v16;
        int v20 = v19 + 1;
      }
      *(_DWORD *)(a1 + 24) = v20;
      if (!v15) {
        return 0;
      }
      if (*(void *)a3 <= (unint64_t)v15 || *v15 != 16) {
        goto LABEL_40;
      }
    }
  }
  if (v8 == 18)
  {
    int v14 = (char *)sub_188C2CC((unsigned int *)(a1 + 24), (unsigned __int8 *)v7, (uint64_t)a3);
    goto LABEL_39;
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = v24;
    }
    int v14 = (char *)sub_1885AC0(v8, v13, v7, a3);
    goto LABEL_39;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v24;
  }
  return 0;
}

char *sub_13D03FC(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  int v4 = (char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*a3 <= __dst) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v6 = *(void *)(a1 + 40);
    char *v4 = 10;
    unsigned int v7 = *(_DWORD *)(v6 + 20);
    v4[1] = v7;
    if (v7 > 0x7F) {
      unsigned int v8 = sub_188A9CC(v7, v4 + 1);
    }
    else {
      unsigned int v8 = v4 + 2;
    }
    int v4 = sub_1374B08(v6, v8, a3);
  }
  uint64_t v9 = *(unsigned int *)(a1 + 24);
  if ((int)v9 >= 1)
  {
    for (uint64_t i = 0; i != v9; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unsigned int v11 = *(_DWORD *)(*(void *)(a1 + 32) + 4 * i);
      char *v4 = 16;
      v4[1] = v11;
      if (v11 > 0x7F)
      {
        v4[1] = v11 | 0x80;
        unsigned int v12 = v11 >> 7;
        v4[2] = v11 >> 7;
        v4 += 3;
        if (v11 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unsigned int v13 = v12 >> 14;
            v12 >>= 7;
            *v4++ = v12;
          }
          while (v13);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  uint64_t v14 = *(void *)(a1 + 8);
  if ((v14 & 1) == 0) {
    return v4;
  }
  unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v16 + 31) < 0)
  {
    int v17 = *(void **)(v16 + 8);
    uint64_t v18 = *(void *)(v16 + 16);
  }
  else
  {
    int v17 = (void *)(v16 + 8);
    LODWORD(v18) = *(unsigned __int8 *)(v16 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v18)
  {
    uint64_t v19 = (int)v18;
    memcpy(v4, v17, (int)v18);
    v4 += v19;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v17, v18, v4);
}

uint64_t sub_13D05B4(uint64_t a1)
{
  uint64_t v2 = sub_188D4F0((unsigned int *)(a1 + 24)) + *(unsigned int *)(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    uint64_t v3 = sub_1374EEC(*(void *)(a1 + 40));
    v2 += v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v6 + 31) < 0) {
      uint64_t v7 = *(void *)(v6 + 16);
    }
    else {
      uint64_t v7 = *(unsigned __int8 *)(v6 + 31);
    }
    v2 += v7;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

void *sub_13D064C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.ClickableAdvisory");
}

void *sub_13D065C(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_13D06D0(void *a1)
{
  sub_13D065C(a1);

  operator delete();
}

uint64_t sub_13D0708(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 0x7F) != 0)
  {
    *(void *)(a1 + 56) = 0;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_13D0738(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v42 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v42, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    unsigned int v8 = v42 + 1;
    unsigned int v9 = *v42;
    if (*v42 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unsigned int v8 = (char *)sub_188C180((uint64_t)v42, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unsigned int v8 = v42 + 2;
      }
    }
    int v42 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_39;
        }
        v5 |= 2u;
        unsigned int v12 = v8 + 1;
        int v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        int v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          unsigned int v12 = v8 + 2;
LABEL_13:
          int v42 = v12;
          *(_DWORD *)(a1 + 32) = v13;
          goto LABEL_46;
        }
        BOOL v32 = (char *)sub_188C0D0((uint64_t)v8, v13);
        int v42 = v32;
        *(_DWORD *)(a1 + 32) = v33;
        if (v32) {
          goto LABEL_46;
        }
        goto LABEL_61;
      case 2u:
        if (v9 != 17) {
          goto LABEL_39;
        }
        uint64_t v16 = *(void *)v8;
        unint64_t v15 = v8 + 8;
        v5 |= 1u;
        *(void *)(a1 + 24) = v16;
        goto LABEL_38;
      case 3u:
        if (v9 != 24) {
          goto LABEL_39;
        }
        v5 |= 4u;
        int v17 = v8 + 1;
        int v18 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_20;
        }
        int v19 = *v17;
        int v18 = v18 + (v19 << 7) - 128;
        if (v19 < 0)
        {
          uint64_t v34 = (char *)sub_188C0D0((uint64_t)v8, v18);
          int v42 = v34;
          *(_DWORD *)(a1 + 36) = v35;
          if (!v34) {
            goto LABEL_61;
          }
        }
        else
        {
          int v17 = v8 + 2;
LABEL_20:
          int v42 = v17;
          *(_DWORD *)(a1 + 36) = v18;
        }
        goto LABEL_46;
      case 4u:
        if (v9 != 32) {
          goto LABEL_39;
        }
        v5 |= 8u;
        int v20 = v8 + 1;
        uint64_t v21 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_25;
        }
        int v22 = *v20;
        uint64_t v21 = v21 + (v22 << 7) - 128;
        if (v22 < 0)
        {
          unint64_t v36 = (char *)sub_188C138((uint64_t)v8, v21);
          int v42 = v36;
          *(void *)(a1 + 40) = v37;
          if (!v36) {
            goto LABEL_61;
          }
        }
        else
        {
          int v20 = v8 + 2;
LABEL_25:
          int v42 = v20;
          *(void *)(a1 + 40) = v21;
        }
        goto LABEL_46;
      case 5u:
        if (v9 != 40) {
          goto LABEL_39;
        }
        v5 |= 0x10u;
        uint64_t v23 = v8 + 1;
        int v24 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_30;
        }
        int v25 = *v23;
        int v24 = v24 + (v25 << 7) - 128;
        if (v25 < 0)
        {
          uint64_t v38 = (char *)sub_188C0D0((uint64_t)v8, v24);
          int v42 = v38;
          *(_DWORD *)(a1 + 48) = v39;
          if (!v38) {
            goto LABEL_61;
          }
        }
        else
        {
          uint64_t v23 = v8 + 2;
LABEL_30:
          int v42 = v23;
          *(_DWORD *)(a1 + 48) = v24;
        }
        goto LABEL_46;
      case 6u:
        if (v9 != 48) {
          goto LABEL_39;
        }
        v5 |= 0x20u;
        uint64_t v26 = v8 + 1;
        int v27 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_35;
        }
        int v28 = *v26;
        int v27 = v27 + (v28 << 7) - 128;
        if (v28 < 0)
        {
          v40 = (char *)sub_188C0D0((uint64_t)v8, v27);
          int v42 = v40;
          *(_DWORD *)(a1 + 52) = v41;
          if (!v40) {
            goto LABEL_61;
          }
        }
        else
        {
          uint64_t v26 = v8 + 2;
LABEL_35:
          int v42 = v26;
          *(_DWORD *)(a1 + 52) = v27;
        }
        goto LABEL_46;
      case 7u:
        if (v9 != 57) {
          goto LABEL_39;
        }
        uint64_t v29 = *(void *)v8;
        unint64_t v15 = v8 + 8;
        v5 |= 0x40u;
        *(void *)(a1 + 56) = v29;
LABEL_38:
        int v42 = v15;
        goto LABEL_46;
      default:
LABEL_39:
        if (v9) {
          BOOL v30 = (v9 & 7) == 4;
        }
        else {
          BOOL v30 = 1;
        }
        if (!v30)
        {
          if (*v7)
          {
            uint64_t v31 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v31 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unsigned int v8 = v42;
          }
          int v42 = (char *)sub_1885AC0(v9, v31, v8, a3);
          if (!v42) {
            goto LABEL_61;
          }
LABEL_46:
          if (sub_11947B8((uint64_t)a3, &v42, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_61:
        }
          int v42 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v42;
    }
  }
}

unsigned char *sub_13D0AB4(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 32);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 24);
    unsigned char *v4 = 17;
    *(void *)(v4 + 1) = v10;
    v4 += 9;
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v11 = *(_DWORD *)(a1 + 36);
    unsigned char *v4 = 24;
    v4[1] = v11;
    if (v11 > 0x7F)
    {
      v4[1] = v11 | 0x80;
      unsigned int v12 = v11 >> 7;
      v4[2] = v11 >> 7;
      v4 += 3;
      if (v11 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v13 = v12 >> 14;
          v12 >>= 7;
          *v4++ = v12;
        }
        while (v13);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v14 = *(void *)(a1 + 40);
    unsigned char *v4 = 32;
    v4[1] = v14;
    if (v14 > 0x7F)
    {
      v4[1] = v14 | 0x80;
      unint64_t v15 = v14 >> 7;
      v4[2] = v14 >> 7;
      v4 += 3;
      if (v14 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v16 = v15 >> 14;
          v15 >>= 7;
          *v4++ = v15;
        }
        while (v16);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v17 = *(_DWORD *)(a1 + 48);
    unsigned char *v4 = 40;
    v4[1] = v17;
    if (v17 > 0x7F)
    {
      v4[1] = v17 | 0x80;
      unsigned int v18 = v17 >> 7;
      v4[2] = v17 >> 7;
      v4 += 3;
      if (v17 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v19 = v18 >> 14;
          v18 >>= 7;
          *v4++ = v18;
        }
        while (v19);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x20) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v20 = *(_DWORD *)(a1 + 52);
    unsigned char *v4 = 48;
    v4[1] = v20;
    if (v20 > 0x7F)
    {
      v4[1] = v20 | 0x80;
      unsigned int v21 = v20 >> 7;
      v4[2] = v20 >> 7;
      v4 += 3;
      if (v20 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v22 = v21 >> 14;
          v21 >>= 7;
          *v4++ = v21;
        }
        while (v22);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x40) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v23 = *(void *)(a1 + 56);
    unsigned char *v4 = 57;
    *(void *)(v4 + 1) = v23;
    v4 += 9;
  }
  uint64_t v24 = *(void *)(a1 + 8);
  if ((v24 & 1) == 0) {
    return v4;
  }
  unint64_t v26 = v24 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v26 + 31) < 0)
  {
    int v27 = *(void **)(v26 + 8);
    uint64_t v28 = *(void *)(v26 + 16);
  }
  else
  {
    int v27 = (void *)(v26 + 8);
    LODWORD(v28) = *(unsigned __int8 *)(v26 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v28)
  {
    uint64_t v29 = (int)v28;
    memcpy(v4, v27, (int)v28);
    v4 += v29;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v27, v28, v4);
}

uint64_t sub_13D0E3C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 0x7F) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_14;
  }
  uint64_t v2 = 9;
  if ((v1 & 1) == 0) {
    uint64_t v2 = 0;
  }
  if ((v1 & 2) != 0)
  {
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 32) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 4) == 0)
    {
LABEL_6:
      if ((v1 & 8) == 0) {
        goto LABEL_7;
      }
      goto LABEL_18;
    }
  }
  else if ((v1 & 4) == 0)
  {
    goto LABEL_6;
  }
  v2 += ((9 * (__clz(*(_DWORD *)(a1 + 36) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 8) == 0)
  {
LABEL_7:
    if ((v1 & 0x10) == 0) {
      goto LABEL_8;
    }
    goto LABEL_19;
  }
LABEL_18:
  v2 += ((9 * (__clz(*(void *)(a1 + 40) | 1) ^ 0x3F) + 73) >> 6) + 1;
  if ((v1 & 0x10) == 0)
  {
LABEL_8:
    if ((v1 & 0x20) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
LABEL_19:
  v2 += ((9 * (__clz(*(_DWORD *)(a1 + 48) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 0x20) != 0) {
LABEL_9:
  }
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 52) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_10:
  if ((v1 & 0x40) != 0) {
    uint64_t v3 = v2 + 9;
  }
  else {
    uint64_t v3 = v2;
  }
LABEL_14:
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v6 + 31) < 0) {
      uint64_t v7 = *(void *)(v6 + 16);
    }
    else {
      uint64_t v7 = *(unsigned __int8 *)(v6 + 31);
    }
    v3 += v7;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_13D0F78(std::string *result, uint64_t a2)
{
  int v2 = *(_DWORD *)(a2 + 16);
  if ((v2 & 0x7F) == 0) {
    goto LABEL_11;
  }
  if (v2)
  {
    result[1].__r_.__value_.__r.__words[0] = *(void *)(a2 + 24);
    if ((v2 & 2) == 0)
    {
LABEL_4:
      if ((v2 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_15;
    }
  }
  else if ((v2 & 2) == 0)
  {
    goto LABEL_4;
  }
  LODWORD(result[1].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 32);
  if ((v2 & 4) == 0)
  {
LABEL_5:
    if ((v2 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_16;
  }
LABEL_15:
  HIDWORD(result[1].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 36);
  if ((v2 & 8) == 0)
  {
LABEL_6:
    if ((v2 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_17;
  }
LABEL_16:
  result[1].__r_.__value_.__r.__words[2] = *(void *)(a2 + 40);
  if ((v2 & 0x10) == 0)
  {
LABEL_7:
    if ((v2 & 0x20) == 0) {
      goto LABEL_8;
    }
LABEL_18:
    HIDWORD(result[2].__r_.__value_.__r.__words[0]) = *(_DWORD *)(a2 + 52);
    if ((v2 & 0x40) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
LABEL_17:
  LODWORD(result[2].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 48);
  if ((v2 & 0x20) != 0) {
    goto LABEL_18;
  }
LABEL_8:
  if ((v2 & 0x40) != 0) {
LABEL_9:
  }
    result[2].__r_.__value_.__l.__size_ = *(void *)(a2 + 56);
LABEL_10:
  LODWORD(result->__r_.__value_.__r.__words[2]) |= v2;
LABEL_11:
  uint64_t v3 = *(void *)(a2 + 8);
  if (v3) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v3 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_13D101C()
{
  return 1;
}

void *sub_13D1024@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.StopStepEVInfo");
}

uint64_t sub_13D1034(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)a1 = off_24B0A88;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  int v5 = (std::string *)(a1 + 24);
  *(_DWORD *)(a1 + 44) = 0;
  *(void *)(a1 + 28) = 0;
  *(void *)(a1 + 36) = 0;
  *(void *)(a1 + 20) = 0;
  int v6 = *(_DWORD *)(a2 + 32);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 40);
    unsigned int v8 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_148E5A4(v5, v8, (uint64_t *)(v7 + 8), v6, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v9 = *(_DWORD *)(a1 + 32) + v6;
    *(_DWORD *)(a1 + 32) = v9;
    uint64_t v10 = *(int **)(a1 + 40);
    if (*v10 < v9) {
      *uint64_t v10 = v9;
    }
  }
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  int v11 = *(_DWORD *)(a2 + 48);
  if (v11)
  {
    sub_188C80C((unsigned int *)(a1 + 48), v11);
    unsigned int v12 = *(void **)(a1 + 56);
    *(_DWORD *)(a1 + 48) += *(_DWORD *)(a2 + 48);
    memcpy(v12, *(const void **)(a2 + 56), 4 * *(int *)(a2 + 48));
  }
  uint64_t v13 = *(void *)(a2 + 8);
  if (v13) {
    sub_188B4F8(v4, (v13 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 64) = &qword_2550250;
  int v14 = *(_DWORD *)(a2 + 16);
  if (v14)
  {
    unint64_t v15 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      unint64_t v15 = (uint64_t *)*v15;
    }
    sub_1881DF4((std::string **)(a1 + 64), (long long *)(*(void *)(a2 + 64) & 0xFFFFFFFFFFFFFFFELL), v15);
    int v14 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 72) = &qword_2550250;
  if ((v14 & 2) != 0)
  {
    unint64_t v16 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      unint64_t v16 = (uint64_t *)*v16;
    }
    sub_1881DF4((std::string **)(a1 + 72), (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL), v16);
    int v14 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 80) = &qword_2550250;
  if ((v14 & 4) != 0)
  {
    unsigned int v17 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      unsigned int v17 = (uint64_t *)*v17;
    }
    sub_1881DF4((std::string **)(a1 + 80), (long long *)(*(void *)(a2 + 80) & 0xFFFFFFFFFFFFFFFELL), v17);
    int v14 = *(_DWORD *)(a2 + 16);
  }
  if ((v14 & 8) != 0) {
    operator new();
  }
  *(void *)(a1 + 88) = 0;
  long long v18 = *(_OWORD *)(a2 + 96);
  *(_DWORD *)(a1 + 112) = *(_DWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = v18;
  return a1;
}

void sub_13D123C()
{
}

uint64_t sub_13D12B4(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_14;
    }
  }
  else if (v4)
  {
    goto LABEL_14;
  }
  int v5 = (void ***)(a1 + 64);
  if (*(uint64_t **)(a1 + 64) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 72) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 72));
  }
  if (*(uint64_t **)(a1 + 80) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 80));
  }
  if ((uint64_t (***)())a1 != &off_25367D8 && *(void *)(a1 + 88))
  {
    sub_15B10B4();
    operator delete();
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_14:
  sub_1889DA8(a1 + 48);
  sub_148CAC8((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_13D13C4(uint64_t a1)
{
  sub_13D12B4(a1);

  operator delete();
}

uint64_t sub_13D13FC(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_15B10F0(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  *(_DWORD *)(v1 + 48) = 0;
  int v5 = *(_DWORD *)(v1 + 16);
  if ((v5 & 0xF) == 0) {
    goto LABEL_11;
  }
  if (v5)
  {
    unint64_t v8 = *(void *)(v1 + 64) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v8 + 23) < 0)
    {
      **(unsigned char **)unint64_t v8 = 0;
      *(void *)(v8 + 8) = 0;
      if ((v5 & 2) != 0) {
        goto LABEL_21;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v8 = 0;
      *(unsigned char *)(v8 + 23) = 0;
      if ((v5 & 2) != 0) {
        goto LABEL_21;
      }
    }
LABEL_8:
    if ((v5 & 4) == 0) {
      goto LABEL_9;
    }
    goto LABEL_25;
  }
  if ((v5 & 2) == 0) {
    goto LABEL_8;
  }
LABEL_21:
  unint64_t v9 = *(void *)(v1 + 72) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v9 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v9 = 0;
    *(unsigned char *)(v9 + 23) = 0;
    if ((v5 & 4) != 0) {
      goto LABEL_25;
    }
LABEL_9:
    if ((v5 & 8) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  **(unsigned char **)unint64_t v9 = 0;
  *(void *)(v9 + 8) = 0;
  if ((v5 & 4) == 0) {
    goto LABEL_9;
  }
LABEL_25:
  unint64_t v10 = *(void *)(v1 + 80) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v10 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v10 = 0;
    *(unsigned char *)(v10 + 23) = 0;
    if ((v5 & 8) == 0) {
      goto LABEL_11;
    }
LABEL_10:
    uint64_t result = sub_15B10F0(*(void *)(v1 + 88));
    goto LABEL_11;
  }
  **(unsigned char **)unint64_t v10 = 0;
  *(void *)(v10 + 8) = 0;
  if ((v5 & 8) != 0) {
    goto LABEL_10;
  }
LABEL_11:
  if ((v5 & 0xF0) != 0)
  {
    *(void *)(v1 + 96) = 0;
    *(void *)(v1 + 104) = 0;
    *(_DWORD *)(v1 + 112) = 1;
  }
  char v7 = *(unsigned char *)(v1 + 8);
  uint64_t v6 = v1 + 8;
  *(_DWORD *)(v6 + 8) = 0;
  if (v7)
  {
    return sub_188B4AC((uint64_t *)v6);
  }
  return result;
}

uint64_t sub_13D154C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)v55 = a2;
  int v5 = 0;
  if ((sub_11947B8((uint64_t)a3, (char **)v55, a3[11].i32[1]) & 1) == 0)
  {
    char v7 = (void *)(a1 + 8);
    while (1)
    {
      unint64_t v8 = (unsigned __int8 *)(*(void *)v55 + 1);
      unsigned int v9 = **(unsigned char **)v55;
      if ((char)**(unsigned char **)v55 < 0)
      {
        unsigned int v10 = v9 + (*v8 << 7);
        unsigned int v9 = v10 - 128;
        if ((char)*v8 < 0)
        {
          unint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v55, v10 - 128);
          unsigned int v9 = v11;
        }
        else
        {
          unint64_t v8 = (unsigned __int8 *)(*(void *)v55 + 2);
        }
      }
      *(void *)v55 = v8;
      switch(v9 >> 3)
      {
        case 1u:
          if (v9 != 10) {
            goto LABEL_82;
          }
          *(_DWORD *)(a1 + 16) |= 8u;
          unsigned int v12 = *(void **)(a1 + 88);
          if (!v12)
          {
            uint64_t v13 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v7) {
              uint64_t v13 = (void *)*v13;
            }
            unsigned int v12 = sub_15C1974((uint64_t)v13);
            *(void *)(a1 + 88) = v12;
            unint64_t v8 = *(unsigned __int8 **)v55;
          }
          int v14 = sub_11FF4E8(a3, (uint64_t)v12, v8);
          goto LABEL_89;
        case 2u:
          if (v9 != 16) {
            goto LABEL_82;
          }
          v5 |= 0x10u;
          unint64_t v15 = (char *)(v8 + 1);
          uint64_t v16 = *v8;
          if (((char)*v8 & 0x80000000) == 0) {
            goto LABEL_19;
          }
          int v17 = *v15;
          uint64_t v16 = v16 + (v17 << 7) - 128;
          if (v17 < 0)
          {
            uint64_t v45 = sub_188C138((uint64_t)v8, v16);
            *(void *)v55 = v45;
            *(void *)(a1 + 96) = v46;
            if (!v45) {
              goto LABEL_95;
            }
          }
          else
          {
            unint64_t v15 = (char *)(v8 + 2);
LABEL_19:
            *(void *)v55 = v15;
            *(void *)(a1 + 96) = v16;
          }
          goto LABEL_90;
        case 3u:
          if (v9 != 26) {
            goto LABEL_82;
          }
          long long v18 = (char *)(v8 - 1);
          while (1)
          {
            unsigned int v19 = (unsigned __int8 *)(v18 + 1);
            *(void *)v55 = v18 + 1;
            unsigned int v20 = *(_DWORD **)(a1 + 40);
            if (v20 && (uint64_t v21 = *(int *)(a1 + 32), (int)v21 < *v20))
            {
              *(_DWORD *)(a1 + 32) = v21 + 1;
              uint64_t v22 = *(void *)&v20[2 * v21 + 2];
            }
            else
            {
              uint64_t v23 = sub_15C1974(*(void *)(a1 + 24));
              uint64_t v22 = sub_188CDC8(a1 + 24, (uint64_t)v23);
              unsigned int v19 = *(unsigned __int8 **)v55;
            }
            long long v18 = sub_11FF4E8(a3, v22, v19);
            *(void *)v55 = v18;
            if (!v18) {
              goto LABEL_95;
            }
            if (*(void *)a3 <= (unint64_t)v18 || *v18 != 26) {
              goto LABEL_90;
            }
          }
        case 4u:
          if (v9 != 32) {
            goto LABEL_82;
          }
          v5 |= 0x80u;
          uint64_t v24 = (char *)(v8 + 1);
          int v25 = *v8;
          if (((char)*v8 & 0x80000000) == 0) {
            goto LABEL_34;
          }
          int v26 = *v24;
          int v25 = v25 + (v26 << 7) - 128;
          if (v26 < 0)
          {
            uint64_t v47 = sub_188C0D0((uint64_t)v8, v25);
            *(void *)v55 = v47;
            *(_DWORD *)(a1 + 112) = v48;
            if (!v47) {
              goto LABEL_95;
            }
          }
          else
          {
            uint64_t v24 = (char *)(v8 + 2);
LABEL_34:
            *(void *)v55 = v24;
            *(_DWORD *)(a1 + 112) = v25;
          }
          goto LABEL_90;
        case 5u:
          if (v9 != 40) {
            goto LABEL_82;
          }
          v5 |= 0x20u;
          int v27 = (char *)(v8 + 1);
          int v28 = *v8;
          if (((char)*v8 & 0x80000000) == 0) {
            goto LABEL_39;
          }
          int v29 = *v27;
          int v28 = v28 + (v29 << 7) - 128;
          if (v29 < 0)
          {
            uint64_t v49 = sub_188C0D0((uint64_t)v8, v28);
            *(void *)v55 = v49;
            *(_DWORD *)(a1 + 104) = v50;
            if (!v49) {
              goto LABEL_95;
            }
          }
          else
          {
            int v27 = (char *)(v8 + 2);
LABEL_39:
            *(void *)v55 = v27;
            *(_DWORD *)(a1 + 104) = v28;
          }
          goto LABEL_90;
        case 6u:
          if (v9 == 48)
          {
            BOOL v30 = v8 - 1;
            while (1)
            {
              *(void *)v55 = v30 + 1;
              int v31 = v30[1];
              if ((char)v30[1] < 0)
              {
                int v32 = v31 + (v30[2] << 7);
                int v31 = v32 - 128;
                if ((char)v30[2] < 0)
                {
                  BOOL v30 = (unsigned __int8 *)sub_188C138((uint64_t)(v30 + 1), (v32 - 128));
                  int v31 = v33;
                }
                else
                {
                  v30 += 3;
                }
              }
              else
              {
                v30 += 2;
              }
              *(void *)v55 = v30;
              uint64_t v34 = *(unsigned int *)(a1 + 48);
              if (v34 == *(_DWORD *)(a1 + 52))
              {
                int v35 = v34 + 1;
                sub_188C80C((unsigned int *)(a1 + 48), v34 + 1);
                *(_DWORD *)(*(void *)(a1 + 56) + 4 * v34) = v31;
                BOOL v30 = *(unsigned __int8 **)v55;
              }
              else
              {
                *(_DWORD *)(*(void *)(a1 + 56) + 4 * v34) = v31;
                int v35 = v34 + 1;
              }
              *(_DWORD *)(a1 + 48) = v35;
              if (!v30) {
                goto LABEL_95;
              }
              if (*(void *)a3 <= (unint64_t)v30 || *v30 != 48) {
                goto LABEL_90;
              }
            }
          }
          if (v9 == 50)
          {
            int v14 = sub_188C2BC((unsigned int *)(a1 + 48), v8, (uint64_t)a3);
          }
          else
          {
LABEL_82:
            if (v9) {
              BOOL v53 = (v9 & 7) == 4;
            }
            else {
              BOOL v53 = 1;
            }
            if (v53)
            {
              if (v8)
              {
                a3[10].i32[0] = v9 - 1;
                goto LABEL_2;
              }
LABEL_95:
              *(void *)v55 = 0;
              goto LABEL_2;
            }
            if (*v7)
            {
              v54 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              v54 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              unint64_t v8 = *(unsigned __int8 **)v55;
            }
            int v14 = sub_1885AC0(v9, v54, (char *)v8, a3);
          }
LABEL_89:
          *(void *)v55 = v14;
          if (!v14) {
            goto LABEL_95;
          }
LABEL_90:
          if (sub_11947B8((uint64_t)a3, (char **)v55, a3[11].i32[1])) {
            goto LABEL_2;
          }
          break;
        case 7u:
          if (v9 != 56) {
            goto LABEL_82;
          }
          v5 |= 0x40u;
          unint64_t v36 = (char *)(v8 + 1);
          int v37 = *v8;
          if (((char)*v8 & 0x80000000) == 0) {
            goto LABEL_58;
          }
          int v38 = *v36;
          int v37 = v37 + (v38 << 7) - 128;
          if (v38 < 0)
          {
            uint64_t v51 = sub_188C0D0((uint64_t)v8, v37);
            *(void *)v55 = v51;
            *(_DWORD *)(a1 + 108) = v52;
            if (!v51) {
              goto LABEL_95;
            }
          }
          else
          {
            unint64_t v36 = (char *)(v8 + 2);
LABEL_58:
            *(void *)v55 = v36;
            *(_DWORD *)(a1 + 108) = v37;
          }
          goto LABEL_90;
        case 8u:
          if (v9 != 66) {
            goto LABEL_82;
          }
          *(_DWORD *)(a1 + 16) |= 1u;
          uint64_t v39 = *(void *)(a1 + 8);
          v40 = (uint64_t *)(v39 & 0xFFFFFFFFFFFFFFFCLL);
          if (v39) {
            v40 = (uint64_t *)*v40;
          }
          int v41 = (void *)(a1 + 64);
          goto LABEL_71;
        case 9u:
          if (v9 != 74) {
            goto LABEL_82;
          }
          *(_DWORD *)(a1 + 16) |= 2u;
          uint64_t v42 = *(void *)(a1 + 8);
          v40 = (uint64_t *)(v42 & 0xFFFFFFFFFFFFFFFCLL);
          if (v42) {
            v40 = (uint64_t *)*v40;
          }
          int v41 = (void *)(a1 + 72);
          goto LABEL_71;
        case 0xAu:
          if (v9 != 82) {
            goto LABEL_82;
          }
          *(_DWORD *)(a1 + 16) |= 4u;
          uint64_t v43 = *(void *)(a1 + 8);
          v40 = (uint64_t *)(v43 & 0xFFFFFFFFFFFFFFFCLL);
          if (v43) {
            v40 = (uint64_t *)*v40;
          }
          int v41 = (void *)(a1 + 80);
LABEL_71:
          long long v44 = (std::string *)sub_1880F84(v41, v40);
          int v14 = (void *)sub_188C244(v44, *(char **)v55, (uint64_t)a3);
          goto LABEL_89;
        default:
          goto LABEL_82;
      }
    }
  }
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return *(void *)v55;
}

unsigned char *sub_13D1AC4(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 8) != 0)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 88);
    unsigned char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    uint64_t v4 = sub_15B1284(v7, (unint64_t)v9, a3);
  }
  if ((v6 & 0x10) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(void *)(a1 + 96);
    unsigned char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v13 = *(_DWORD *)(a1 + 32);
  if (v13)
  {
    for (int i = 0; i != v13; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v15 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      unsigned char *v4 = 26;
      unsigned int v16 = *(_DWORD *)(v15 + 20);
      v4[1] = v16;
      if (v16 > 0x7F) {
        int v17 = sub_188A9CC(v16, v4 + 1);
      }
      else {
        int v17 = v4 + 2;
      }
      uint64_t v4 = sub_15B1284(v15, (unint64_t)v17, a3);
    }
  }
  if ((v6 & 0x80) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v18 = *(_DWORD *)(a1 + 112);
    unsigned char *v4 = 32;
    v4[1] = v18;
    if (v18 > 0x7F)
    {
      v4[1] = v18 | 0x80;
      unsigned int v19 = v18 >> 7;
      v4[2] = v18 >> 7;
      v4 += 3;
      if (v18 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v20 = v19 >> 14;
          v19 >>= 7;
          *v4++ = v19;
        }
        while (v20);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x20) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v21 = *(_DWORD *)(a1 + 104);
    unsigned char *v4 = 40;
    v4[1] = v21;
    if (v21 > 0x7F)
    {
      v4[1] = v21 | 0x80;
      unsigned int v22 = v21 >> 7;
      v4[2] = v21 >> 7;
      v4 += 3;
      if (v21 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v23 = v22 >> 14;
          v22 >>= 7;
          *v4++ = v22;
        }
        while (v23);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v24 = *(unsigned int *)(a1 + 48);
  if ((int)v24 >= 1)
  {
    for (uint64_t j = 0; j != v24; ++j)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v26 = *(int *)(*(void *)(a1 + 56) + 4 * j);
      unsigned char *v4 = 48;
      v4[1] = v26;
      if (v26 > 0x7F)
      {
        v4[1] = v26 | 0x80;
        unint64_t v27 = v26 >> 7;
        v4[2] = v26 >> 7;
        v4 += 3;
        if (v26 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v28 = v27 >> 14;
            v27 >>= 7;
            *v4++ = v27;
          }
          while (v28);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  if ((v6 & 0x40) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v29 = *(_DWORD *)(a1 + 108);
    unsigned char *v4 = 56;
    v4[1] = v29;
    if (v29 > 0x7F)
    {
      v4[1] = v29 | 0x80;
      unsigned int v30 = v29 >> 7;
      v4[2] = v29 >> 7;
      v4 += 3;
      if (v29 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v31 = v30 >> 14;
          v30 >>= 7;
          *v4++ = v30;
        }
        while (v31);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    uint64_t v4 = sub_117A0AC(a3, 8, (const void **)(*(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL), v4);
    if ((v6 & 2) == 0)
    {
LABEL_55:
      if ((v6 & 4) == 0) {
        goto LABEL_57;
      }
      goto LABEL_56;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_55;
  }
  uint64_t v4 = sub_117A0AC(a3, 9, (const void **)(*(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) != 0) {
LABEL_56:
  }
    uint64_t v4 = sub_117A0AC(a3, 10, (const void **)(*(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL), v4);
LABEL_57:
  uint64_t v32 = *(void *)(a1 + 8);
  if ((v32 & 1) == 0) {
    return v4;
  }
  unint64_t v34 = v32 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v34 + 31) < 0)
  {
    int v35 = *(void **)(v34 + 8);
    uint64_t v36 = *(void *)(v34 + 16);
  }
  else
  {
    int v35 = (void *)(v34 + 8);
    LODWORD(v36) = *(unsigned __int8 *)(v34 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v36)
  {
    uint64_t v37 = (int)v36;
    memcpy(v4, v35, (int)v36);
    v4 += v37;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v35, v36, v4);
}

uint64_t sub_13D1F68(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_15B13A0(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = sub_188D498((unsigned int *)(a1 + 48)) + v2 + *(unsigned int *)(a1 + 48);
  char v9 = *(unsigned char *)(a1 + 16);
  if (!v9) {
    goto LABEL_19;
  }
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v12 = *(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v13 = *(unsigned __int8 *)(v12 + 23);
    uint64_t v14 = *(void *)(v12 + 8);
    if ((v13 & 0x80u) == 0) {
      uint64_t v14 = v13;
    }
    v8 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((*(unsigned char *)(a1 + 16) & 2) == 0)
    {
LABEL_12:
      if ((*(unsigned char *)(a1 + 16) & 4) == 0) {
        goto LABEL_13;
      }
      goto LABEL_27;
    }
  }
  else if ((*(unsigned char *)(a1 + 16) & 2) == 0)
  {
    goto LABEL_12;
  }
  unint64_t v15 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v16 = *(unsigned __int8 *)(v15 + 23);
  uint64_t v17 = *(void *)(v15 + 8);
  if ((v16 & 0x80u) == 0) {
    uint64_t v17 = v16;
  }
  v8 += v17 + ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((*(unsigned char *)(a1 + 16) & 4) == 0)
  {
LABEL_13:
    if ((*(unsigned char *)(a1 + 16) & 8) == 0) {
      goto LABEL_14;
    }
    goto LABEL_30;
  }
LABEL_27:
  unint64_t v18 = *(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v19 = *(unsigned __int8 *)(v18 + 23);
  uint64_t v20 = *(void *)(v18 + 8);
  if ((v19 & 0x80u) == 0) {
    uint64_t v20 = v19;
  }
  v8 += v20 + ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((*(unsigned char *)(a1 + 16) & 8) == 0)
  {
LABEL_14:
    if ((*(unsigned char *)(a1 + 16) & 0x10) == 0) {
      goto LABEL_15;
    }
    goto LABEL_31;
  }
LABEL_30:
  uint64_t v21 = sub_15B13A0(*(void *)(a1 + 88));
  v8 += v21 + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v9 & 0x10) == 0)
  {
LABEL_15:
    if ((v9 & 0x20) == 0) {
      goto LABEL_16;
    }
LABEL_32:
    v8 += ((9 * (__clz(*(_DWORD *)(a1 + 104) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v9 & 0x40) == 0)
    {
LABEL_17:
      if ((v9 & 0x80) == 0) {
        goto LABEL_19;
      }
      goto LABEL_18;
    }
    goto LABEL_33;
  }
LABEL_31:
  v8 += ((9 * (__clz(*(void *)(a1 + 96) | 1) ^ 0x3F) + 73) >> 6) + 1;
  if ((v9 & 0x20) != 0) {
    goto LABEL_32;
  }
LABEL_16:
  if ((v9 & 0x40) == 0) {
    goto LABEL_17;
  }
LABEL_33:
  v8 += ((9 * (__clz(*(_DWORD *)(a1 + 108) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if (v9 < 0) {
LABEL_18:
  }
    v8 += ((9 * (__clz(*(_DWORD *)(a1 + 112) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_19:
  uint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    unint64_t v22 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v22 + 31) < 0) {
      uint64_t v23 = *(void *)(v22 + 16);
    }
    else {
      uint64_t v23 = *(unsigned __int8 *)(v22 + 31);
    }
    v8 += v23;
  }
  *(_DWORD *)(a1 + 20) = v8;
  return v8;
}

std::string *sub_13D21EC(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = sub_148E5A4(v3 + 1, v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2] - LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    uint64_t v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 48);
  if (v9)
  {
    uint64_t data_low = SLODWORD(v3[2].__r_.__value_.__l.__data_);
    sub_188C80C((unsigned int *)&v3[2], data_low + v9);
    std::string::size_type size = v3[2].__r_.__value_.__l.__size_;
    LODWORD(v3[2].__r_.__value_.__l.__data_) += *(_DWORD *)(a2 + 48);
    uint64_t result = (std::string *)memcpy((void *)(size + 4 * data_low), *(const void **)(a2 + 56), 4 * *(int *)(a2 + 48));
  }
  int v12 = *(_DWORD *)(a2 + 16);
  if ((_BYTE)v12)
  {
    if (v12)
    {
      uint64_t v14 = (long long *)(*(void *)(a2 + 64) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::size_type v15 = v3->__r_.__value_.__l.__size_;
      uint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
      if (v15) {
        uint64_t v16 = (uint64_t *)*v16;
      }
      uint64_t result = sub_1881DF4((std::string **)&v3[2].__r_.__value_.__r.__words[2], v14, v16);
      if ((v12 & 2) == 0)
      {
LABEL_9:
        if ((v12 & 4) == 0) {
          goto LABEL_10;
        }
        goto LABEL_27;
      }
    }
    else if ((v12 & 2) == 0)
    {
      goto LABEL_9;
    }
    uint64_t v17 = (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    std::string::size_type v18 = v3->__r_.__value_.__l.__size_;
    uint64_t v19 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
    if (v18) {
      uint64_t v19 = (uint64_t *)*v19;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[3], v17, v19);
    if ((v12 & 4) == 0)
    {
LABEL_10:
      if ((v12 & 8) == 0) {
        goto LABEL_11;
      }
      goto LABEL_30;
    }
LABEL_27:
    uint64_t v20 = (long long *)(*(void *)(a2 + 80) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
    std::string::size_type v21 = v3->__r_.__value_.__l.__size_;
    unint64_t v22 = (uint64_t *)(v21 & 0xFFFFFFFFFFFFFFFCLL);
    if (v21) {
      unint64_t v22 = (uint64_t *)*v22;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[3].__r_.__value_.__l.__size_, v20, v22);
    if ((v12 & 8) == 0)
    {
LABEL_11:
      if ((v12 & 0x10) == 0) {
        goto LABEL_12;
      }
      goto LABEL_38;
    }
LABEL_30:
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 8u;
    uint64_t v23 = (std::string *)v3[3].__r_.__value_.__r.__words[2];
    if (!v23)
    {
      std::string::size_type v24 = v3->__r_.__value_.__l.__size_;
      int v25 = (void *)(v24 & 0xFFFFFFFFFFFFFFFCLL);
      if (v24) {
        int v25 = (void *)*v25;
      }
      uint64_t v23 = (std::string *)sub_15C1974((uint64_t)v25);
      v3[3].__r_.__value_.__r.__words[2] = (std::string::size_type)v23;
    }
    if (*(void *)(a2 + 88)) {
      unint64_t v26 = *(uint64_t (****)())(a2 + 88);
    }
    else {
      unint64_t v26 = &off_253F1E8;
    }
    uint64_t result = sub_117EF04(v23, (uint64_t)v26);
    if ((v12 & 0x10) == 0)
    {
LABEL_12:
      if ((v12 & 0x20) == 0) {
        goto LABEL_13;
      }
      goto LABEL_39;
    }
LABEL_38:
    v3[4].__r_.__value_.__r.__words[0] = *(void *)(a2 + 96);
    if ((v12 & 0x20) == 0)
    {
LABEL_13:
      if ((v12 & 0x40) == 0) {
        goto LABEL_14;
      }
      goto LABEL_40;
    }
LABEL_39:
    LODWORD(v3[4].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 104);
    if ((v12 & 0x40) == 0)
    {
LABEL_14:
      if ((v12 & 0x80) == 0)
      {
LABEL_16:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v12;
        goto LABEL_17;
      }
LABEL_15:
      LODWORD(v3[4].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 112);
      goto LABEL_16;
    }
LABEL_40:
    HIDWORD(v3[4].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 108);
    if ((v12 & 0x80) == 0) {
      goto LABEL_16;
    }
    goto LABEL_15;
  }
LABEL_17:
  uint64_t v13 = *(void *)(a2 + 8);
  if (v13)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v13 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

BOOL sub_13D2450(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  while ((int)v2 >= 1)
  {
    uint64_t v3 = v2 - 1;
    BOOL v4 = sub_15B1450(*(void *)(*(void *)(a1 + 40) + 8 * v2));
    uint64_t v2 = v3;
    if (!v4) {
      return 0;
    }
  }
  if ((*(unsigned char *)(a1 + 16) & 8) == 0) {
    return 1;
  }
  BOOL result = sub_15B1450(*(void *)(a1 + 88));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_13D24B4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.RecentLocationHistory");
}

uint64_t sub_13D24C4(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  *(void *)(a1 + 8) = v4;
  *(void *)a1 = off_24B0B08;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = &qword_2550250;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_DWORD *)(a1 + 88) = 0;
  return a1;
}

void sub_13D2544(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_13D2574(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (void *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = a1 + 16;
  *(void *)a1 = off_24B0B08;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 44) = 0;
  uint64_t v6 = *(void *)(a2 + 8);
  if (v6) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v5, a2 + 16);
  *(void *)(a1 + 48) = &qword_2550250;
  int v7 = *(_DWORD *)(a2 + 40);
  if (v7)
  {
    uint64_t v8 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v8 = (uint64_t *)*v8;
    }
    sub_1881DF4((std::string **)(a1 + 48), (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL), v8);
    int v7 = *(_DWORD *)(a2 + 40);
  }
  if ((v7 & 2) != 0) {
    operator new();
  }
  *(void *)(a1 + 56) = 0;
  if ((v7 & 4) != 0) {
    operator new();
  }
  *(void *)(a1 + 64) = 0;
  if ((v7 & 8) != 0) {
    operator new();
  }
  *(void *)(a1 + 72) = 0;
  uint64_t v9 = *(void *)(a2 + 80);
  *(_DWORD *)(a1 + 88) = *(_DWORD *)(a2 + 88);
  *(void *)(a1 + 80) = v9;
  return a1;
}

void sub_13D26FC()
{
}

uint64_t sub_13D2774(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_14;
    }
  }
  else if (v4)
  {
    goto LABEL_14;
  }
  uint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_2536850)
  {
    uint64_t v6 = *(void *)(a1 + 56);
    if (v6)
    {
      sub_13D3944(v6);
      operator delete();
    }
    uint64_t v7 = *(void *)(a1 + 64);
    if (v7)
    {
      sub_13D4128(v7);
      operator delete();
    }
    uint64_t v8 = *(void *)(a1 + 72);
    if (v8)
    {
      sub_13D3944(v8);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_14:
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_13D2888(uint64_t a1)
{
  sub_13D2774(a1);

  operator delete();
}

unsigned char *sub_13D28C0(uint64_t a1)
{
  BOOL result = sub_18843A4((unsigned char *)(a1 + 16));
  int v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 3) != 0)
  {
    if (v3)
    {
      unint64_t v4 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v4 + 23) < 0)
      {
        **(unsigned char **)unint64_t v4 = 0;
        *(void *)(v4 + 8) = 0;
        if ((v3 & 2) == 0) {
          goto LABEL_11;
        }
        goto LABEL_6;
      }
      *(unsigned char *)unint64_t v4 = 0;
      *(unsigned char *)(v4 + 23) = 0;
    }
    if ((v3 & 2) == 0) {
      goto LABEL_11;
    }
LABEL_6:
    unint64_t v5 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v5 + 23) < 0)
    {
      **(unsigned char **)unint64_t v5 = 0;
      *(void *)(v5 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v5 = 0;
      *(unsigned char *)(v5 + 23) = 0;
    }
  }
LABEL_11:
  char v7 = *(unsigned char *)(a1 + 8);
  uint64_t v6 = a1 + 8;
  *(_DWORD *)(v6 + 56) = 0;
  *(_DWORD *)(v6 + 32) = 0;
  if (v7)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v6);
  }
  return result;
}

uint64_t sub_13D2980(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  int v3 = *(_DWORD *)(a1 + 40);
  if (v3) {
    uint64_t result = sub_1369BB4(*(void *)(a1 + 48));
  }
  if ((v3 & 6) != 0) {
    *(void *)(a1 + 56) = 0;
  }
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t v4 = a1 + 8;
  *(_DWORD *)(v4 + 32) = 0;
  if (v5)
  {
    return sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

uint64_t sub_13D29F0(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v38 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v38, a3[11].i32[1])) {
    return *(void *)v38;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    char v7 = (unsigned __int8 *)(*(void *)v38 + 1);
    unsigned int v8 = **(unsigned char **)v38;
    if ((char)**(unsigned char **)v38 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if ((char)*v7 < 0)
      {
        char v7 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v38, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        char v7 = (unsigned __int8 *)(*(void *)v38 + 2);
      }
    }
    *(void *)int v38 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 8) {
          goto LABEL_55;
        }
        unint64_t v11 = (char *)(v7 + 1);
        unint64_t v12 = *v7;
        if (((char)*v7 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v13 = *v11;
        int v14 = v12 + (v13 << 7);
        unint64_t v12 = (v14 - 128);
        if (v13 < 0)
        {
          *(void *)int v38 = sub_188C138((uint64_t)v7, (v14 - 128));
          if (!*(void *)v38) {
            return 0;
          }
          unint64_t v12 = v33;
        }
        else
        {
          unint64_t v11 = (char *)(v7 + 2);
LABEL_13:
          *(void *)int v38 = v11;
        }
        if (v12 <= 2)
        {
          *(_DWORD *)(a1 + 40) |= 0x10u;
          *(_DWORD *)(a1 + 80) = v12;
          goto LABEL_65;
        }
        if (*v6) {
          uint64_t v36 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          uint64_t v36 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v37 = 1;
        goto LABEL_76;
      case 2u:
        if (v8 != 16) {
          goto LABEL_55;
        }
        std::string::size_type v15 = (char *)(v7 + 1);
        unint64_t v12 = *v7;
        if (((char)*v7 & 0x80000000) == 0) {
          goto LABEL_20;
        }
        int v16 = *v15;
        int v17 = v12 + (v16 << 7);
        unint64_t v12 = (v17 - 128);
        if (v16 < 0)
        {
          *(void *)int v38 = sub_188C138((uint64_t)v7, (v17 - 128));
          if (!*(void *)v38) {
            return 0;
          }
          unint64_t v12 = v34;
        }
        else
        {
          std::string::size_type v15 = (char *)(v7 + 2);
LABEL_20:
          *(void *)int v38 = v15;
        }
        if (v12 <= 0xC && ((1 << v12) & 0x1EFB) != 0)
        {
          *(_DWORD *)(a1 + 40) |= 0x20u;
          *(_DWORD *)(a1 + 84) = v12;
          goto LABEL_65;
        }
        if (*v6) {
          uint64_t v36 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          uint64_t v36 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v37 = 2;
        goto LABEL_76;
      case 0xAu:
        if (v8 != 82) {
          goto LABEL_55;
        }
        *(_DWORD *)(a1 + 40) |= 2u;
        uint64_t v19 = *(void *)(a1 + 56);
        if (v19) {
          goto LABEL_43;
        }
        uint64_t v20 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          uint64_t v20 = (void *)*v20;
        }
        uint64_t v19 = sub_13DAB64((uint64_t)v20);
        *(void *)(a1 + 56) = v19;
        goto LABEL_42;
      case 0xBu:
        if (v8 != 90) {
          goto LABEL_55;
        }
        *(_DWORD *)(a1 + 40) |= 4u;
        std::string::size_type v21 = *(void **)(a1 + 64);
        if (!v21)
        {
          unint64_t v22 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            unint64_t v22 = (void *)*v22;
          }
          std::string::size_type v21 = sub_13DABC0((uint64_t)v22);
          *(void *)(a1 + 64) = v21;
          char v7 = *(unsigned __int8 **)v38;
        }
        uint64_t v23 = (uint64_t)sub_13D2EC8(a3, (uint64_t)v21, v7);
        goto LABEL_64;
      case 0xCu:
        if (v8 != 98) {
          goto LABEL_55;
        }
        *(_DWORD *)(a1 + 40) |= 8u;
        uint64_t v19 = *(void *)(a1 + 72);
        if (v19) {
          goto LABEL_43;
        }
        std::string::size_type v24 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          std::string::size_type v24 = (void *)*v24;
        }
        uint64_t v19 = sub_13DAB64((uint64_t)v24);
        *(void *)(a1 + 72) = v19;
LABEL_42:
        char v7 = *(unsigned __int8 **)v38;
LABEL_43:
        uint64_t v23 = sub_132DA30(a3, v19, v7);
        goto LABEL_64;
      case 0xDu:
        if (v8 != 104) {
          goto LABEL_55;
        }
        int v25 = (char *)(v7 + 1);
        unint64_t v12 = *v7;
        if (((char)*v7 & 0x80000000) == 0) {
          goto LABEL_48;
        }
        int v26 = *v25;
        int v27 = v12 + (v26 << 7);
        unint64_t v12 = (v27 - 128);
        if (v26 < 0)
        {
          *(void *)int v38 = sub_188C138((uint64_t)v7, (v27 - 128));
          if (!*(void *)v38) {
            return 0;
          }
          unint64_t v12 = v35;
        }
        else
        {
          int v25 = (char *)(v7 + 2);
LABEL_48:
          *(void *)int v38 = v25;
        }
        if (v12 > 1)
        {
          if (*v6) {
            uint64_t v36 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v36 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          int v37 = 13;
LABEL_76:
          sub_188C020(v37, v12, v36);
        }
        else
        {
          *(_DWORD *)(a1 + 40) |= 0x40u;
          *(_DWORD *)(a1 + 88) = v12;
        }
        goto LABEL_65;
      case 0xEu:
        if (v8 != 114) {
          goto LABEL_55;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        uint64_t v28 = *(void *)(a1 + 8);
        unsigned int v29 = (uint64_t *)(v28 & 0xFFFFFFFFFFFFFFFCLL);
        if (v28) {
          unsigned int v29 = (uint64_t *)*v29;
        }
        unsigned int v30 = (std::string *)sub_1880F84((void *)(a1 + 48), v29);
        uint64_t v23 = (uint64_t)sub_188C244(v30, *(char **)v38, (uint64_t)a3);
        goto LABEL_64;
      default:
LABEL_55:
        if (v8) {
          BOOL v31 = (v8 & 7) == 4;
        }
        else {
          BOOL v31 = 1;
        }
        if (!v31)
        {
          if (v8 - 8000 > 0xF9F)
          {
            if (*v6)
            {
              uint64_t v32 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              uint64_t v32 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              char v7 = *(unsigned __int8 **)v38;
            }
            uint64_t v23 = (uint64_t)sub_1885AC0(v8, v32, (char *)v7, a3);
          }
          else
          {
            uint64_t v23 = (uint64_t)sub_18859DC((uint64_t **)(a1 + 16), v8, (char *)v7, (uint64_t)&off_2536850, (uint64_t *)(a1 + 8), a3);
          }
LABEL_64:
          *(void *)int v38 = v23;
          if (!v23) {
            return 0;
          }
LABEL_65:
          if (sub_11947B8((uint64_t)a3, (char **)v38, a3[11].i32[1])) {
            return *(void *)v38;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return *(void *)v38;
    }
  }
}

char *sub_13D2EC8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_13D4220(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_13D2F58(uint64_t a1, char *a2, void *a3)
{
  uint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unint64_t v7 = *(int *)(a1 + 80);
    char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 84);
    char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v13 = *(void *)(a1 + 56);
    char *v4 = 82;
    unsigned int v14 = *(_DWORD *)(v13 + 44);
    v4[1] = v14;
    if (v14 > 0x7F) {
      std::string::size_type v15 = sub_188A9CC(v14, v4 + 1);
    }
    else {
      std::string::size_type v15 = v4 + 2;
    }
    uint64_t v4 = sub_13D3CA0(v13, v15, a3);
    if ((v6 & 4) == 0)
    {
LABEL_17:
      if ((v6 & 8) == 0) {
        goto LABEL_18;
      }
      goto LABEL_32;
    }
  }
  else if ((v6 & 4) == 0)
  {
    goto LABEL_17;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v16 = *(void *)(a1 + 64);
  char *v4 = 90;
  unsigned int v17 = *(_DWORD *)(v16 + 44);
  v4[1] = v17;
  if (v17 > 0x7F) {
    std::string::size_type v18 = sub_188A9CC(v17, v4 + 1);
  }
  else {
    std::string::size_type v18 = v4 + 2;
  }
  uint64_t v4 = sub_13D44A8(v16, v18, a3);
  if ((v6 & 8) == 0)
  {
LABEL_18:
    if ((v6 & 0x40) == 0) {
      goto LABEL_44;
    }
    goto LABEL_38;
  }
LABEL_32:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v19 = *(void *)(a1 + 72);
  char *v4 = 98;
  unsigned int v20 = *(_DWORD *)(v19 + 44);
  v4[1] = v20;
  if (v20 > 0x7F) {
    std::string::size_type v21 = sub_188A9CC(v20, v4 + 1);
  }
  else {
    std::string::size_type v21 = v4 + 2;
  }
  uint64_t v4 = sub_13D3CA0(v19, v21, a3);
  if ((v6 & 0x40) != 0)
  {
LABEL_38:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v22 = *(int *)(a1 + 88);
    char *v4 = 104;
    v4[1] = v22;
    if (v22 > 0x7F)
    {
      v4[1] = v22 | 0x80;
      unint64_t v23 = v22 >> 7;
      v4[2] = v22 >> 7;
      v4 += 3;
      if (v22 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v24 = v23 >> 14;
          v23 >>= 7;
          *v4++ = v23;
        }
        while (v24);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_44:
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 14, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  if (*(_WORD *)(a1 + 26)) {
    uint64_t v4 = sub_1886844(a1 + 16, 1000, 1500, v4, a3);
  }
  uint64_t v25 = *(void *)(a1 + 8);
  if ((v25 & 1) == 0) {
    return v4;
  }
  unint64_t v27 = v25 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v27 + 31) < 0)
  {
    uint64_t v28 = *(void **)(v27 + 8);
    uint64_t v29 = *(void *)(v27 + 16);
  }
  else
  {
    uint64_t v28 = (void *)(v27 + 8);
    LODWORD(v29) = *(unsigned __int8 *)(v27 + 31);
  }
  if (*a3 - (void)v4 >= (int)v29)
  {
    uint64_t v30 = (int)v29;
    memcpy(v4, v28, (int)v29);
    v4 += v30;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v28, v29, v4);
}

uint64_t sub_13D3304(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = v2;
  int v4 = *(_DWORD *)(a1 + 40);
  if ((v4 & 0x7F) == 0) {
    goto LABEL_28;
  }
  if (v4)
  {
    unint64_t v5 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
    uint64_t v7 = *(void *)(v5 + 8);
    if ((v6 & 0x80u) == 0) {
      uint64_t v7 = v6;
    }
    uint64_t v3 = v2 + v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v4 & 2) == 0)
    {
LABEL_4:
      if ((v4 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_14;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_4;
  }
  uint64_t v8 = sub_13D3E2C(*(void *)(a1 + 56));
  v3 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v4 & 4) == 0)
  {
LABEL_5:
    if ((v4 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_15;
  }
LABEL_14:
  uint64_t v9 = sub_13D46D4(*(void *)(a1 + 64));
  v3 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v4 & 8) == 0)
  {
LABEL_6:
    if ((v4 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_16;
  }
LABEL_15:
  uint64_t v10 = sub_13D3E2C(*(void *)(a1 + 72));
  v3 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v4 & 0x10) == 0)
  {
LABEL_7:
    if ((v4 & 0x20) == 0) {
      goto LABEL_8;
    }
    goto LABEL_20;
  }
LABEL_16:
  int v11 = *(_DWORD *)(a1 + 80);
  if (v11 < 0) {
    uint64_t v12 = 11;
  }
  else {
    uint64_t v12 = ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v3 += v12;
  if ((v4 & 0x20) == 0)
  {
LABEL_8:
    if ((v4 & 0x40) == 0) {
      goto LABEL_28;
    }
    goto LABEL_24;
  }
LABEL_20:
  int v13 = *(_DWORD *)(a1 + 84);
  if (v13 < 0) {
    uint64_t v14 = 11;
  }
  else {
    uint64_t v14 = ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v3 += v14;
  if ((v4 & 0x40) != 0)
  {
LABEL_24:
    int v15 = *(_DWORD *)(a1 + 88);
    if (v15 < 0) {
      uint64_t v16 = 11;
    }
    else {
      uint64_t v16 = ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v3 += v16;
  }
LABEL_28:
  uint64_t v17 = *(void *)(a1 + 8);
  if (v17)
  {
    unint64_t v19 = v17 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v19 + 31) < 0) {
      uint64_t v20 = *(void *)(v19 + 16);
    }
    else {
      uint64_t v20 = *(unsigned __int8 *)(v19 + 31);
    }
    v3 += v20;
  }
  *(_DWORD *)(a1 + 44) = v3;
  return v3;
}

void sub_13D3504(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 40);
  if ((v4 & 7) != 0)
  {
    if (v4)
    {
      uint64_t v6 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 40) |= 1u;
      uint64_t v7 = (std::string **)(a1 + 48);
      uint64_t v8 = *(void *)(a1 + 8);
      uint64_t v9 = (uint64_t *)(v8 & 0xFFFFFFFFFFFFFFFCLL);
      if (v8) {
        uint64_t v9 = (uint64_t *)*v9;
      }
      sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0)
        {
LABEL_6:
          *(_DWORD *)(a1 + 40) |= v4;
          goto LABEL_7;
        }
LABEL_5:
        *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
        goto LABEL_6;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    uint64_t v10 = (long long *)(*(void *)(a2 + 56) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 40) |= 2u;
    uint64_t v11 = *(void *)(a1 + 8);
    uint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
    if (v11) {
      uint64_t v12 = (uint64_t *)*v12;
    }
    sub_1881DF4((std::string **)(a1 + 56), v10, v12);
    if ((v4 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_7:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_13D3608(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 40);
  if ((v4 & 7) != 0)
  {
    if (v4)
    {
      *(_DWORD *)(a1 + 40) |= 1u;
      uint64_t v6 = *(void **)(a1 + 48);
      if (!v6)
      {
        uint64_t v7 = *(void *)(a1 + 8);
        uint64_t v8 = (void *)(v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (v7) {
          uint64_t v8 = (void *)*v8;
        }
        uint64_t v6 = sub_1478C60((uint64_t)v8);
        *(void *)(a1 + 48) = v6;
      }
      if (*(void *)(a2 + 48)) {
        uint64_t v9 = *(uint64_t (****)())(a2 + 48);
      }
      else {
        uint64_t v9 = &off_2539400;
      }
      sub_136AC4C((uint64_t)v6, (uint64_t)v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0)
        {
LABEL_6:
          *(_DWORD *)(a1 + 40) |= v4;
          goto LABEL_7;
        }
LABEL_5:
        *(_DWORD *)(a1 + 60) = *(_DWORD *)(a2 + 60);
        goto LABEL_6;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
    if ((v4 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_7:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_13D36FC(uint64_t a1)
{
  return sub_18856CC(a1 + 16);
}

uint64_t sub_13D3704(uint64_t a1)
{
  uint64_t result = sub_18856CC(a1 + 16);
  if (result)
  {
    if ((*(unsigned char *)(a1 + 40) & 1) == 0) {
      return 1;
    }
    uint64_t result = sub_18856CC(*(void *)(a1 + 48) + 16);
    if (result) {
      return 1;
    }
  }
  return result;
}

void *sub_13D374C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.Artwork");
}

uint64_t sub_13D375C(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  *(void *)(a1 + 8) = v4;
  *(void *)a1 = off_24B0B88;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = &qword_2550250;
  *(void *)(a1 + 56) = &qword_2550250;
  *(_DWORD *)(a1 + 64) = 0;
  return a1;
}

void sub_13D37D0(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_13D3800(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (void *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = a1 + 16;
  *(void *)a1 = off_24B0B88;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 44) = 0;
  uint64_t v6 = *(void *)(a2 + 8);
  if (v6) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v5, a2 + 16);
  *(void *)(a1 + 48) = &qword_2550250;
  int v7 = *(_DWORD *)(a2 + 40);
  if (v7)
  {
    uint64_t v8 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v8 = (uint64_t *)*v8;
    }
    sub_1881DF4((std::string **)(a1 + 48), (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL), v8);
    int v7 = *(_DWORD *)(a2 + 40);
  }
  *(void *)(a1 + 56) = &qword_2550250;
  if ((v7 & 2) != 0)
  {
    uint64_t v9 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v9 = (uint64_t *)*v9;
    }
    sub_1881DF4((std::string **)(a1 + 56), (long long *)(*(void *)(a2 + 56) & 0xFFFFFFFFFFFFFFFELL), v9);
  }
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  return a1;
}

void sub_13D3908(_Unwind_Exception *a1)
{
  sub_1882CC0(v3);
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_13D3944(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_9;
    }
  }
  else if (v4)
  {
    goto LABEL_9;
  }
  uint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 56) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 56));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_9:
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_13D3A04(uint64_t a1)
{
  sub_13D3944(a1);

  operator delete();
}

uint64_t sub_13D3A3C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unint64_t v27 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v27, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = (char *)(*(void *)v27 + 1);
    unsigned int v9 = **(unsigned char **)v27;
    if ((char)**(unsigned char **)v27 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180(*(uint64_t *)v27, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (char *)(*(void *)v27 + 2);
      }
    }
    *(void *)unint64_t v27 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 == 4)
    {
      if (v9 != 34) {
        goto LABEL_14;
      }
      *(_DWORD *)(a1 + 40) |= 2u;
      uint64_t v16 = *(void *)(a1 + 8);
      uint64_t v17 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
      if (v16) {
        uint64_t v17 = (uint64_t *)*v17;
      }
      std::string::size_type v18 = (void *)(a1 + 56);
      goto LABEL_32;
    }
    if (v12 != 3) {
      break;
    }
    if (v9 != 24) {
      goto LABEL_14;
    }
    v5 |= 4u;
    unint64_t v19 = v8 + 1;
    int v20 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_28;
    }
    int v21 = *v19;
    int v20 = v20 + (v21 << 7) - 128;
    if ((v21 & 0x80000000) == 0)
    {
      unint64_t v19 = v8 + 2;
LABEL_28:
      *(void *)unint64_t v27 = v19;
      *(_DWORD *)(a1 + 64) = v20;
      goto LABEL_34;
    }
    uint64_t v25 = sub_188C0D0((uint64_t)v8, v20);
    *(void *)unint64_t v27 = v25;
    *(_DWORD *)(a1 + 64) = v26;
    if (!v25) {
      goto LABEL_44;
    }
LABEL_34:
    if (sub_11947B8((uint64_t)a3, (char **)v27, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v12 == 2 && v9 == 18)
  {
    *(_DWORD *)(a1 + 40) |= 1u;
    uint64_t v22 = *(void *)(a1 + 8);
    uint64_t v17 = (uint64_t *)(v22 & 0xFFFFFFFFFFFFFFFCLL);
    if (v22) {
      uint64_t v17 = (uint64_t *)*v17;
    }
    std::string::size_type v18 = (void *)(a1 + 48);
LABEL_32:
    unint64_t v23 = (std::string *)sub_1880F84(v18, v17);
    int v15 = (void *)sub_188C244(v23, *(char **)v27, (uint64_t)a3);
    goto LABEL_33;
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (v9 - 8000 > 0xF9F)
    {
      if (*v7)
      {
        unint64_t v24 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        unint64_t v24 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        uint64_t v8 = *(char **)v27;
      }
      int v15 = sub_1885AC0(v9, v24, v8, a3);
    }
    else
    {
      int v15 = sub_18859DC((uint64_t **)(a1 + 16), v9, v8, (uint64_t)&off_25368B0, (uint64_t *)(a1 + 8), a3);
    }
LABEL_33:
    *(void *)unint64_t v27 = v15;
    if (!v15) {
      goto LABEL_44;
    }
    goto LABEL_34;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_44:
  *(void *)unint64_t v27 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 40) |= v5;
  return *(void *)v27;
}

char *sub_13D3CA0(uint64_t a1, char *a2, void *a3)
{
  uint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), a2);
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 64);
    char *v4 = 24;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0) {
    uint64_t v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  if (*(_WORD *)(a1 + 26)) {
    uint64_t v4 = sub_1886844(a1 + 16, 1000, 1500, v4, a3);
  }
  uint64_t v10 = *(void *)(a1 + 8);
  if ((v10 & 1) == 0) {
    return v4;
  }
  unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v12 + 31) < 0)
  {
    int v13 = *(void **)(v12 + 8);
    uint64_t v14 = *(void *)(v12 + 16);
  }
  else
  {
    int v13 = (void *)(v12 + 8);
    LODWORD(v14) = *(unsigned __int8 *)(v12 + 31);
  }
  if (*a3 - (void)v4 >= (int)v14)
  {
    uint64_t v15 = (int)v14;
    memcpy(v4, v13, (int)v14);
    v4 += v15;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v13, v14, v4);
}

uint64_t sub_13D3E2C(uint64_t a1)
{
  uint64_t result = sub_1889280(a1 + 16);
  int v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 7) != 0)
  {
    if (v3)
    {
      unint64_t v5 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
      uint64_t v7 = *(void *)(v5 + 8);
      if ((v6 & 0x80u) == 0) {
        uint64_t v7 = v6;
      }
      result += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v3 & 2) == 0)
      {
LABEL_4:
        if ((v3 & 4) == 0) {
          goto LABEL_6;
        }
        goto LABEL_5;
      }
    }
    else if ((v3 & 2) == 0)
    {
      goto LABEL_4;
    }
    unint64_t v8 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v9 = *(unsigned __int8 *)(v8 + 23);
    uint64_t v10 = *(void *)(v8 + 8);
    if ((v9 & 0x80u) == 0) {
      uint64_t v10 = v9;
    }
    result += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v3 & 4) != 0) {
LABEL_5:
    }
      result += ((9 * (__clz(*(_DWORD *)(a1 + 64) | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_6:
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v11 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    result += v12;
  }
  *(_DWORD *)(a1 + 44) = result;
  return result;
}

void *sub_13D3F4C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.Shield");
}

void *sub_13D3F5C(void *a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  a1[1] = v4;
  *a1 = off_24B0C08;
  sub_1882BC4((uint64_t)(a1 + 2), a2);
  a1[5] = 0;
  a1[6] = 0;
  a1[7] = 0;
  return a1;
}

void sub_13D3FC4(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_13D3FF4(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  uint64_t v4 = a1 + 16;
  *(void *)a1 = off_24B0C08;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 44) = 0;
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v4, a2 + 16);
  if (*(unsigned char *)(a2 + 40)) {
    operator new();
  }
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  return a1;
}

void sub_13D40CC()
{
}

uint64_t sub_13D4128(uint64_t a1)
{
  int v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_25368F8)
  {
    uint64_t v6 = *(void **)(a1 + 48);
    if (v6)
    {
      sub_145FD84(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_13D41E8(uint64_t a1)
{
  sub_13D4128(a1);

  operator delete();
}

char *sub_13D4220(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v29 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v29, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    unint64_t v8 = v29 + 1;
    unsigned int v9 = *v29;
    if (*v29 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unint64_t v8 = (char *)sub_188C180((uint64_t)v29, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unint64_t v8 = v29 + 2;
      }
    }
    uint64_t v29 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 == 3) {
      break;
    }
    if (v12 == 2)
    {
      if (v9 != 16) {
        goto LABEL_14;
      }
      v5 |= 4u;
      std::string::size_type v18 = v8 + 1;
      int v19 = *v8;
      if ((*v8 & 0x80000000) == 0) {
        goto LABEL_30;
      }
      int v20 = *v18;
      int v19 = v19 + (v20 << 7) - 128;
      if ((v20 & 0x80000000) == 0)
      {
        std::string::size_type v18 = v8 + 2;
LABEL_30:
        uint64_t v29 = v18;
        *(_DWORD *)(a1 + 60) = v19;
        goto LABEL_39;
      }
      uint64_t v25 = (char *)sub_188C0D0((uint64_t)v8, v19);
      uint64_t v29 = v25;
      *(_DWORD *)(a1 + 60) = v26;
      if (!v25) {
        goto LABEL_48;
      }
    }
    else
    {
      if (v12 != 1 || v9 != 8) {
        goto LABEL_14;
      }
      v5 |= 2u;
      int v21 = v8 + 1;
      int v22 = *v8;
      if ((*v8 & 0x80000000) == 0) {
        goto LABEL_34;
      }
      int v23 = *v21;
      int v22 = v22 + (v23 << 7) - 128;
      if ((v23 & 0x80000000) == 0)
      {
        int v21 = v8 + 2;
LABEL_34:
        uint64_t v29 = v21;
        *(_DWORD *)(a1 + 56) = v22;
        goto LABEL_39;
      }
      unint64_t v27 = (char *)sub_188C0D0((uint64_t)v8, v22);
      uint64_t v29 = v27;
      *(_DWORD *)(a1 + 56) = v28;
      if (!v27) {
        goto LABEL_48;
      }
    }
LABEL_39:
    if (sub_11947B8((uint64_t)a3, &v29, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 == 26)
  {
    *(_DWORD *)(a1 + 40) |= 1u;
    uint64_t v16 = *(void **)(a1 + 48);
    if (!v16)
    {
      uint64_t v17 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v7) {
        uint64_t v17 = (void *)*v17;
      }
      uint64_t v16 = sub_1478C60((uint64_t)v17);
      *(void *)(a1 + 48) = v16;
      unint64_t v8 = v29;
    }
    uint64_t v15 = sub_129760C(a3, (uint64_t)v16, (unsigned __int8 *)v8);
LABEL_38:
    uint64_t v29 = v15;
    if (!v15) {
      goto LABEL_48;
    }
    goto LABEL_39;
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (v9 - 8000 > 0xF9F)
    {
      if (*v7)
      {
        unint64_t v24 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        unint64_t v24 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        unint64_t v8 = v29;
      }
      uint64_t v15 = (char *)sub_1885AC0(v9, v24, v8, a3);
    }
    else
    {
      uint64_t v15 = (char *)sub_18859DC((uint64_t **)(a1 + 16), v9, v8, (uint64_t)&off_25368F8, (uint64_t *)(a1 + 8), a3);
    }
    goto LABEL_38;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_48:
  uint64_t v29 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 40) |= v5;
  return v29;
}

char *sub_13D44A8(uint64_t a1, char *a2, _DWORD *a3)
{
  uint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 56);
    char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 60);
    char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v13 = *(void *)(a1 + 48);
    char *v4 = 26;
    unsigned int v14 = *(_DWORD *)(v13 + 44);
    v4[1] = v14;
    if (v14 > 0x7F) {
      uint64_t v15 = sub_188A9CC(v14, v4 + 1);
    }
    else {
      uint64_t v15 = v4 + 2;
    }
    uint64_t v4 = sub_1460138(v13, v15, a3);
  }
  if (*(_WORD *)(a1 + 26)) {
    uint64_t v4 = sub_1886844(a1 + 16, 1000, 1500, v4, a3);
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return v4;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    int v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    int v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(v4, v19, (int)v20);
    v4 += v21;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v19, v20, v4);
}

uint64_t sub_13D46D4(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  int v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 7) != 0)
  {
    if (v3)
    {
      uint64_t v6 = sub_1460320(*(void *)(a1 + 48));
      v2 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v3 & 2) == 0)
      {
LABEL_4:
        if ((v3 & 4) == 0) {
          goto LABEL_6;
        }
        goto LABEL_5;
      }
    }
    else if ((v3 & 2) == 0)
    {
      goto LABEL_4;
    }
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 56) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v3 & 4) != 0) {
LABEL_5:
    }
      v2 += ((9 * (__clz(*(_DWORD *)(a1 + 60) | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_6:
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v7 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v7 + 31) < 0) {
      uint64_t v8 = *(void *)(v7 + 16);
    }
    else {
      uint64_t v8 = *(unsigned __int8 *)(v7 + 31);
    }
    v2 += v8;
  }
  *(_DWORD *)(a1 + 44) = v2;
  return v2;
}

void *sub_13D47D4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.Icon");
}

uint64_t sub_13D47E4(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_24B0C88;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

void sub_13D4860(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_13D4894(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_13D4908(void *a1)
{
  sub_13D4894(a1);

  operator delete();
}

uint64_t sub_13D4940(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(unsigned char *)(result + 16) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_13D4958(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v19 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
    goto LABEL_27;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    unint64_t v7 = v19 + 1;
    unsigned int v8 = *v19;
    if (*v19 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        unint64_t v7 = (char *)sub_188C180((uint64_t)v19, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        unint64_t v7 = v19 + 2;
      }
    }
    int v19 = v7;
    if (v8 != 8) {
      break;
    }
    uint64_t v13 = v7 + 1;
    uint64_t v14 = *v7;
    if ((*v7 & 0x80000000) == 0) {
      goto LABEL_19;
    }
    int v15 = *v13;
    uint64_t v14 = v14 + (v15 << 7) - 128;
    if ((v15 & 0x80000000) == 0)
    {
      uint64_t v13 = v7 + 2;
LABEL_19:
      int v19 = v13;
      *(unsigned char *)(a1 + 24) = v14 != 0;
      int v5 = 1;
      goto LABEL_20;
    }
    uint64_t v16 = (char *)sub_188C138((uint64_t)v7, v14);
    int v19 = v16;
    *(unsigned char *)(a1 + 24) = v17 != 0;
    int v5 = 1;
    if (!v16) {
      goto LABEL_28;
    }
LABEL_20:
    if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
      goto LABEL_27;
    }
  }
  if (v8) {
    BOOL v11 = (v8 & 7) == 4;
  }
  else {
    BOOL v11 = 1;
  }
  if (!v11)
  {
    if (*v6)
    {
      unsigned int v12 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unsigned int v12 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unint64_t v7 = v19;
    }
    int v19 = (char *)sub_1885AC0(v8, v12, v7, a3);
    if (!v19) {
      goto LABEL_28;
    }
    goto LABEL_20;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    goto LABEL_27;
  }
LABEL_28:
  int v19 = 0;
LABEL_27:
  *(_DWORD *)(a1 + 16) |= v5;
  return v19;
}

unsigned char *sub_13D4AE8(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    char v6 = *(unsigned char *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v6;
    v4 += 2;
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v9 + 31) < 0)
  {
    unsigned int v10 = *(void **)(v9 + 8);
    uint64_t v11 = *(void *)(v9 + 16);
  }
  else
  {
    unsigned int v10 = (void *)(v9 + 8);
    LODWORD(v11) = *(unsigned __int8 *)(v9 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v11)
  {
    uint64_t v12 = (int)v11;
    memcpy(v4, v10, (int)v11);
    v4 += v12;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v10, v11, v4);
}

uint64_t sub_13D4BCC(uint64_t a1)
{
  uint64_t v1 = 2 * (*(_DWORD *)(a1 + 16) & 1);
  uint64_t v2 = *(void *)(a1 + 8);
  if (v2)
  {
    unint64_t v4 = v2 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v5 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v5 = *(unsigned __int8 *)(v4 + 31);
    }
    v1 += v5;
  }
  *(_DWORD *)(a1 + 20) = v1;
  return v1;
}

uint64_t sub_13D4C0C()
{
  return 1;
}

void *sub_13D4C14@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.TripInfo");
}

void *sub_13D4C24(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_13D4C98(void *a1)
{
  sub_13D4C24(a1);

  operator delete();
}

uint64_t sub_13D4CD0(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 3) != 0) {
    *(void *)(a1 + 24) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_13D4CF4(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v25 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    unsigned int v8 = v25 + 1;
    unsigned int v9 = *v25;
    if (*v25 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unsigned int v8 = (char *)sub_188C180((uint64_t)v25, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unsigned int v8 = v25 + 2;
      }
    }
    uint64_t v25 = v8;
    if (v9 >> 3 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_13;
    }
    v5 |= 2u;
    int v15 = v8 + 1;
    int v16 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_25;
    }
    int v17 = *v15;
    int v16 = v16 + (v17 << 7) - 128;
    if ((v17 & 0x80000000) == 0)
    {
      int v15 = v8 + 2;
LABEL_25:
      uint64_t v25 = v15;
      *(_DWORD *)(a1 + 28) = v16;
      goto LABEL_30;
    }
    uint64_t v21 = (char *)sub_188C0D0((uint64_t)v8, v16);
    uint64_t v25 = v21;
    *(_DWORD *)(a1 + 28) = v22;
    if (!v21) {
      goto LABEL_39;
    }
LABEL_30:
    if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 >> 3 == 1 && v9 == 8)
  {
    v5 |= 1u;
    unint64_t v18 = v8 + 1;
    int v19 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_29;
    }
    int v20 = *v18;
    int v19 = v19 + (v20 << 7) - 128;
    if ((v20 & 0x80000000) == 0)
    {
      unint64_t v18 = v8 + 2;
LABEL_29:
      uint64_t v25 = v18;
      *(_DWORD *)(a1 + 24) = v19;
      goto LABEL_30;
    }
    int v23 = (char *)sub_188C0D0((uint64_t)v8, v19);
    uint64_t v25 = v23;
    *(_DWORD *)(a1 + 24) = v24;
    if (!v23) {
      goto LABEL_39;
    }
    goto LABEL_30;
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      uint64_t v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unsigned int v8 = v25;
    }
    uint64_t v25 = (char *)sub_1885AC0(v9, v14, v8, a3);
    if (!v25) {
      goto LABEL_39;
    }
    goto LABEL_30;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_39:
  uint64_t v25 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v25;
}

unsigned char *sub_13D4EE4(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  unint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      unint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 28);
    unsigned char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    int v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    int v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_13D5088(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_8;
  }
  if (v1)
  {
    uint64_t v2 = ((9 * (__clz(*(_DWORD *)(a1 + 24) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v2 = 0;
  if ((v1 & 2) != 0) {
LABEL_7:
  }
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 28) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_8:
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v5 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    v2 += v6;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_13D512C()
{
  return 1;
}

void *sub_13D5134@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.PathMapMatcherInstructions.PathStretch");
}

uint64_t sub_13D5144(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  unint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_2536978)
  {
    uint64_t v6 = *(void **)(a1 + 24);
    if (v6)
    {
      sub_13D4C24(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_13D51FC(uint64_t a1)
{
  sub_13D5144(a1);

  operator delete();
}

uint64_t sub_13D5234(uint64_t result)
{
  uint64_t v1 = result;
  if (*(unsigned char *)(result + 16)) {
    uint64_t result = sub_13D4CD0(*(void *)(result + 24));
  }
  char v3 = *(unsigned char *)(v1 + 8);
  uint64_t v2 = v1 + 8;
  *(_DWORD *)(v2 + 8) = 0;
  if (v3)
  {
    return sub_188B4AC((uint64_t *)v2);
  }
  return result;
}

char *sub_13D5290(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v16 = a2;
  if (sub_11947B8((uint64_t)a3, &v16, a3[11].i32[1])) {
    return v16;
  }
  uint64_t v5 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v6 = v16 + 1;
    unsigned int v7 = *v16;
    if (*v16 < 0)
    {
      unsigned int v8 = v7 + (*v6 << 7);
      unsigned int v7 = v8 - 128;
      if (*v6 < 0)
      {
        uint64_t v6 = (char *)sub_188C180((uint64_t)v16, v8 - 128);
        unsigned int v7 = v9;
      }
      else
      {
        uint64_t v6 = v16 + 2;
      }
    }
    int v16 = v6;
    if (v7 != 10) {
      break;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v13 = *(void **)(a1 + 24);
    if (!v13)
    {
      uint64_t v14 = (void *)(*v5 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v5) {
        uint64_t v14 = (void *)*v14;
      }
      uint64_t v13 = sub_13DAC98((uint64_t)v14);
      *(void *)(a1 + 24) = v13;
      uint64_t v6 = v16;
    }
    unsigned int v12 = sub_13D53E8(a3, (uint64_t)v13, (unsigned __int8 *)v6);
LABEL_20:
    int v16 = v12;
    if (!v12) {
      return 0;
    }
    if (sub_11947B8((uint64_t)a3, &v16, a3[11].i32[1])) {
      return v16;
    }
  }
  if (v7) {
    BOOL v10 = (v7 & 7) == 4;
  }
  else {
    BOOL v10 = 1;
  }
  if (!v10)
  {
    if (*v5)
    {
      unsigned int v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unsigned int v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v6 = v16;
    }
    unsigned int v12 = (char *)sub_1885AC0(v7, v11, v6, a3);
    goto LABEL_20;
  }
  if (v6)
  {
    a3[10].i32[0] = v7 - 1;
    return v16;
  }
  return 0;
}

char *sub_13D53E8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_13D4CF4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_13D5478(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  unint64_t v4 = (unsigned char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= __dst) {
      unint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v6 = *(void *)(a1 + 24);
    unsigned char *v4 = 10;
    unsigned int v7 = *(_DWORD *)(v6 + 20);
    v4[1] = v7;
    if (v7 > 0x7F) {
      unsigned int v8 = sub_188A9CC(v7, v4 + 1);
    }
    else {
      unsigned int v8 = v4 + 2;
    }
    unint64_t v4 = sub_13D4EE4(v6, (unint64_t)v8, a3);
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    unsigned int v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    unsigned int v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    v4 += v14;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v12, v13, v4);
}

uint64_t sub_13D5588(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    uint64_t v3 = sub_13D5088(*(void *)(a1 + 24));
    uint64_t result = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  else
  {
    uint64_t result = 0;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v5 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    result += v6;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

std::string *sub_13D5610(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  if (*(unsigned char *)(a2 + 16))
  {
    uint64_t v4 = *(uint64_t (****)())(a2 + 24);
    LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
    data = (std::string *)result[1].__r_.__value_.__l.__data_;
    if (!data)
    {
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      unsigned int v7 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        unsigned int v7 = (void *)*v7;
      }
      data = (std::string *)sub_13DAC98((uint64_t)v7);
      v3[1].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      uint64_t v4 = *(uint64_t (****)())(a2 + 24);
    }
    if (v4) {
      unsigned int v8 = v4;
    }
    else {
      unsigned int v8 = &off_2536958;
    }
    uint64_t result = sub_117EF04(data, (uint64_t)v8);
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_13D56B8()
{
  return 1;
}

void *sub_13D56C0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.PathMapMatcherInstructions.NoMatch");
}

void *sub_13D56D0(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_148CB48(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_13D5750(void *a1)
{
  sub_13D56D0(a1);

  operator delete();
}

char *sub_13D5788(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v19 = a2;
  if ((sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1]) & 1) == 0)
  {
    unint64_t v5 = (void *)(a1 + 8);
    while (1)
    {
      uint64_t v6 = v19 + 1;
      unsigned int v7 = *v19;
      if (*v19 < 0)
      {
        unsigned int v8 = v7 + (*v6 << 7);
        unsigned int v7 = v8 - 128;
        if (*v6 < 0)
        {
          uint64_t v6 = (char *)sub_188C180((uint64_t)v19, v8 - 128);
          unsigned int v7 = v9;
        }
        else
        {
          uint64_t v6 = v19 + 2;
        }
      }
      int v19 = v6;
      if (v7 == 10)
      {
        unsigned int v12 = v6 - 1;
        while (1)
        {
          uint64_t v13 = (unsigned __int8 *)(v12 + 1);
          int v19 = v12 + 1;
          uint64_t v14 = *(_DWORD **)(a1 + 32);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 24), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 24) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            uint64_t v17 = sub_13DAD10(*(void *)(a1 + 16));
            uint64_t v16 = sub_188CDC8(a1 + 16, (uint64_t)v17);
            uint64_t v13 = (unsigned __int8 *)v19;
          }
          unsigned int v12 = sub_13D5928(a3, v16, v13);
          int v19 = v12;
          if (!v12) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_24;
          }
        }
      }
      if (!v7 || (v7 & 7) == 4) {
        break;
      }
      if (*v5)
      {
        unint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        unint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        uint64_t v6 = v19;
      }
      int v19 = (char *)sub_1885AC0(v7, v11, v6, a3);
      if (!v19) {
        return 0;
      }
LABEL_24:
      if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
        return v19;
      }
    }
    if (v6)
    {
      a3[10].i32[0] = v7 - 1;
      return v19;
    }
    return 0;
  }
  return v19;
}

char *sub_13D5928(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_13D5290(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_13D59B8(uint64_t a1, char *__dst, _DWORD *a3)
{
  int v6 = *(_DWORD *)(a1 + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        BOOL v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        BOOL v10 = __dst + 2;
      }
      __dst = sub_13D5478(v8, (unint64_t)v10, a3);
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return __dst;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    uint64_t v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    uint64_t v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(__dst, v14, (int)v15);
    __dst += v16;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, __dst);
}

uint64_t sub_13D5AFC(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_13D5588(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 40) = v2;
  return v2;
}

uint64_t sub_13D5BAC()
{
  return 1;
}

void *sub_13D5BB4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.PathMapMatcherInstructions");
}

uint64_t sub_13D5BC4(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_24B0E88;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  return a1;
}

void sub_13D5C40(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_13D5C74(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_13D5CE8(void *a1)
{
  sub_13D5C74(a1);

  operator delete();
}

uint64_t sub_13D5D20(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 16) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_13D5D38(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v19 = a2;
  if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
    return v19;
  }
  uint64_t v5 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v6 = v19 + 1;
    unsigned int v7 = *v19;
    if (*v19 < 0)
    {
      unsigned int v8 = v7 + (*v6 << 7);
      unsigned int v7 = v8 - 128;
      if (*v6 < 0)
      {
        uint64_t v6 = (char *)sub_188C180((uint64_t)v19, v8 - 128);
        unsigned int v7 = v9;
      }
      else
      {
        uint64_t v6 = v19 + 2;
      }
    }
    int v19 = v6;
    if (v7 == 8)
    {
      unsigned int v12 = v6 + 1;
      unint64_t v13 = *v6;
      if (*v6 < 0)
      {
        int v14 = *v12;
        int v15 = v13 + (v14 << 7);
        unint64_t v13 = (v15 - 128);
        if (v14 < 0)
        {
          int v19 = (char *)sub_188C138((uint64_t)v6, (v15 - 128));
          if (!v19) {
            return 0;
          }
          unint64_t v13 = v16;
          goto LABEL_20;
        }
        unsigned int v12 = v6 + 2;
      }
      int v19 = v12;
LABEL_20:
      if (sub_15B0788(v13))
      {
        *(_DWORD *)(a1 + 16) |= 1u;
        *(_DWORD *)(a1 + 24) = v13;
      }
      else
      {
        if (*v5) {
          uint64_t v17 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          uint64_t v17 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        sub_188C020(1, v13, v17);
      }
      goto LABEL_22;
    }
    if (!v7 || (v7 & 7) == 4) {
      break;
    }
    if (*v5)
    {
      uint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v6 = v19;
    }
    int v19 = (char *)sub_1885AC0(v7, v11, v6, a3);
    if (!v19) {
      return 0;
    }
LABEL_22:
    if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
      return v19;
    }
  }
  if (v6)
  {
    a3[10].i32[0] = v7 - 1;
    return v19;
  }
  return 0;
}

unsigned char *sub_13D5EE4(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v6 = *(int *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v6;
    if (v6 > 0x7F)
    {
      v4[1] = v6 | 0x80;
      unint64_t v7 = v6 >> 7;
      v4[2] = v6 >> 7;
      v4 += 3;
      if (v6 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v8 = v7 >> 14;
          v7 >>= 7;
          *v4++ = v7;
        }
        while (v8);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    unsigned int v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    unsigned int v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    v4 += v14;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v12, v13, v4);
}

uint64_t sub_13D600C(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    int v2 = *(_DWORD *)(a1 + 24);
    if (v2 < 0) {
      uint64_t v1 = 11;
    }
    else {
      uint64_t v1 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  else
  {
    uint64_t v1 = 0;
  }
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v5 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    v1 += v6;
  }
  *(_DWORD *)(a1 + 20) = v1;
  return v1;
}

uint64_t sub_13D6080()
{
  return 1;
}

void *sub_13D6088@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.CommonResponseAttributes");
}

double sub_13D6098(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = off_24AC688;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(void *)(v2 + 48) = 0;
  return result;
}

uint64_t sub_13D6118(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24AC708;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_13D6194(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24AC788;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(_OWORD *)(result + 32) = 0u;
  *(_OWORD *)(result + 48) = 0u;
  *(_OWORD *)(result + 60) = 0u;
  *(unsigned char *)(result + 76) = 1;
  return result;
}

uint64_t sub_13D623C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24AC808;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

double sub_13D62B8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t v2 = off_24AC888;
  *(void *)(v2 + 8) = a1;
  double result = 0.0;
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = a1;
  *(_DWORD *)(v2 + 32) = 0;
  *(void *)(v2 + 40) = 0;
  *(void *)(v2 + 48) = a1;
  *(void *)(v2 + 56) = 0;
  return result;
}

void *sub_13D636C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  void *result = off_24AC908;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = &qword_2550250;
  return result;
}

uint64_t sub_13D63F0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24AC988;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = &qword_2550250;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

void *sub_13D6478(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  void *result = off_24ACA08;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = 0;
  *(void *)((char *)result + 37) = 0;
  return result;
}

void *sub_13D6500(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  void *result = off_24ACA88;
  result[1] = a1;
  result[2] = 0;
  result[3] = 0;
  result[4] = a1;
  result[5] = a1;
  result[6] = 0;
  result[7] = 0;
  result[8] = 0;
  result[9] = a1;
  result[10] = &qword_2550250;
  result[11] = &qword_2550250;
  return result;
}

uint64_t sub_13D65B0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24ACB08;
  *(void *)(result + 16) = 0;
  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t sub_13D662C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24ACB88;
  *(void *)(result + 16) = 0;
  *(unsigned char *)(result + 24) = 1;
  return result;
}

uint64_t sub_13D66AC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24ACC08;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

double sub_13D6728(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  v2[1] = a1;
  void *v2 = off_24ACC88;
  v2[2] = 0;
  v2[3] = &qword_2550250;
  *(void *)&double result = 0x100000000;
  v2[4] = 0x100000000;
  return result;
}

uint64_t sub_13D67B4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24ACD08;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_13D6830(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24ACD88;
  *(void *)(result + 8) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

double sub_13D68D0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t v2 = off_24ACE08;
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = 0;
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a1;
  *(void *)(v2 + 48) = 0;
  *(void *)(v2 + 56) = 0;
  *(void *)(v2 + 64) = &qword_2550250;
  *(void *)(v2 + 72) = &qword_2550250;
  double result = 0.0;
  *(_OWORD *)(v2 + 80) = 0u;
  *(_OWORD *)(v2 + 96) = 0u;
  *(_OWORD *)(v2 + 112) = 0u;
  *(_OWORD *)(v2 + 128) = 0u;
  *(_OWORD *)(v2 + 144) = 0u;
  *(void *)(v2 + 160) = 0xFFFFFFFF00000000;
  return result;
}

uint64_t sub_13D6994(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24ACE88;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = &qword_2550250;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

double sub_13D6A1C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t v2 = off_24ACF08;
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = 0;
  *(void *)(v2 + 40) = 0;
  *(void *)(v2 + 48) = a1;
  *(void *)(v2 + 56) = 0;
  *(void *)(v2 + 64) = 0;
  *(void *)(v2 + 72) = a1;
  *(void *)(v2 + 80) = 0;
  *(void *)(v2 + 88) = 0;
  *(void *)(v2 + 96) = a1;
  double result = 0.0;
  *(_OWORD *)(v2 + 104) = 0u;
  *(_OWORD *)(v2 + 120) = 0u;
  return result;
}

void *sub_13D6AE0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  void *result = off_24ACF88;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = 0;
  return result;
}

void *sub_13D6B7C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  void *result = off_24AD008;
  result[3] = 0;
  result[4] = 0;
  result[2] = 0;
  return result;
}

double sub_13D6BF8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = off_24AD088;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 80) = 0u;
  return result;
}

uint64_t sub_13D6C7C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24AD108;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = a1;
  *(void *)(result + 56) = 0;
  *(void *)(result + 64) = 0;
  *(void *)(result + 72) = a1;
  *(_OWORD *)(result + 80) = 0u;
  *(_OWORD *)(result + 96) = 0u;
  *(void *)(result + 112) = 0;
  return result;
}

double sub_13D6D2C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = off_24AD188;
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = &qword_2550250;
  double result = 0.0;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  return result;
}

uint64_t sub_13D6DB4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24AD208;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(_OWORD *)(result + 32) = 0u;
  *(_OWORD *)(result + 48) = 0u;
  *(_OWORD *)(result + 64) = 0u;
  *(_DWORD *)(result + 80) = 0;
  return result;
}

void *sub_13D6E58(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  void *result = off_24AD288;
  result[2] = 0;
  result[3] = &qword_2550250;
  return result;
}

uint64_t sub_13D6EDC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24AD308;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = 0;
  *(unsigned char *)(result + 40) = 0;
  return result;
}

uint64_t sub_13D6F5C(uint64_t a1)
{
  if (!a1)
  {
    sub_148E6AC();
  }

  return sub_137A8BC(v3, a1, 0);
}

uint64_t sub_13D6FB8(uint64_t a1)
{
  if (!a1)
  {
    sub_148E718();
  }

  return sub_137BC18(v3, a1, 0);
}

uint64_t sub_13D7014(uint64_t a1)
{
  if (!a1)
  {
    sub_148E784();
  }

  return sub_137CC40(v3, a1, 0);
}

uint64_t sub_13D7070(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24AD508;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

double sub_13D7104(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = off_24AD588;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 80) = 0u;
  *(_OWORD *)(v2 + 96) = 0u;
  *(_OWORD *)(v2 + 112) = 0u;
  *(_OWORD *)(v2 + 128) = 0u;
  *(unsigned char *)(v2 + 144) = 1;
  return result;
}

void *sub_13D7194(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  void *result = off_24AD608;
  result[3] = 0;
  result[4] = 0;
  result[2] = 0;
  return result;
}

uint64_t sub_13D7210(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24AD688;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = 0;
  *(_DWORD *)(result + 56) = 0;
  return result;
}

uint64_t sub_13D72B4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24AD708;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = a1;
  *(void *)(result + 56) = 0;
  *(void *)(result + 64) = 0;
  *(void *)(result + 72) = a1;
  *(_OWORD *)(result + 80) = 0u;
  *(_OWORD *)(result + 96) = 0u;
  *(_OWORD *)(result + 112) = 0u;
  return result;
}

uint64_t sub_13D7364(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24AD788;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(unsigned char *)(result + 32) = 0;
  return result;
}

uint64_t sub_13D73E0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24AD808;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = a1;
  *(_OWORD *)(result + 56) = 0u;
  *(_OWORD *)(result + 72) = 0u;
  *(_OWORD *)(result + 84) = 0u;
  *(_DWORD *)(result + 100) = 1;
  return result;
}

uint64_t sub_13D74A0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24AD888;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(_DWORD *)(result + 47) = 0;
  return result;
}

void *sub_13D753C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  void *result = off_24AD908;
  result[2] = 0;
  result[3] = 0;
  return result;
}

uint64_t sub_13D75B4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24AD988;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = a1;
  *(void *)(result + 48) = 0;
  *(void *)(result + 56) = 0;
  *(void *)(result + 72) = 0;
  *(void *)(result + 80) = 0;
  *(void *)(result + 64) = a1;
  *(_DWORD *)(result + 88) = 0;
  return result;
}

void *sub_13D7664(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  void *result = off_24ADA08;
  result[2] = 0;
  result[3] = 0;
  return result;
}

uint64_t sub_13D76DC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24ADA88;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = &qword_2550250;
  *(void *)(result + 56) = 0;
  *(_DWORD *)(result + 64) = 0;
  return result;
}

uint64_t sub_13D7784(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24ADB08;
  *(void *)(result + 8) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

void *sub_13D7824(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  void *result = off_24ADB88;
  result[2] = 0;
  result[3] = 0;
  return result;
}

void *sub_13D789C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  void *result = off_24ADC08;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = 0;
  return result;
}

uint64_t sub_13D7938(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24ADC88;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

void *sub_13D79B4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  void *result = off_24ADD08;
  result[2] = 0;
  result[3] = 0;
  return result;
}

void *sub_13D7A2C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  void *result = off_24ADD88;
  result[2] = 0;
  result[3] = 0;
  return result;
}

void *sub_13D7AA4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  void *result = off_24ADE08;
  result[3] = 0;
  result[4] = 0;
  result[2] = 0;
  return result;
}

double sub_13D7B20(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t v2 = off_24ADE88;
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = 0;
  *(void *)(v2 + 40) = 0;
  *(void *)(v2 + 48) = a1;
  double result = 0.0;
  *(_OWORD *)(v2 + 56) = 0u;
  *(_OWORD *)(v2 + 72) = 0u;
  *(void *)(v2 + 88) = 0;
  return result;
}

uint64_t sub_13D7BD4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24ADF08;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

void *sub_13D7C50(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  void *result = off_24ADF88;
  result[3] = 0;
  result[4] = 0;
  result[2] = 0;
  return result;
}

uint64_t sub_13D7CCC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24AE008;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

void *sub_13D7D4C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  void *result = off_24AE088;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = 0;
  result[5] = 0;
  result[6] = 0;
  return result;
}

uint64_t sub_13D7DD4(uint64_t a1)
{
  if (!a1)
  {
    sub_148E7F0();
  }

  return sub_138C54C(v3, a1, 0);
}

void *sub_13D7E30(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  void *result = off_24AE188;
  result[2] = 0;
  result[3] = 0;
  return result;
}

uint64_t sub_13D7EA8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24AE208;
  *(void *)(result + 8) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

void *sub_13D7F48(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  void *result = off_24AE288;
  result[2] = 0;
  result[3] = 0;
  return result;
}

uint64_t sub_13D7FC0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24AE308;
  *(void *)(result + 8) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

uint64_t sub_13D8060(uint64_t a1)
{
  if (!a1)
  {
    sub_148E85C();
  }

  return sub_13918C0(v3, a1, 0);
}

uint64_t sub_13D80BC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24AE408;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(_OWORD *)(result + 32) = 0u;
  *(_OWORD *)(result + 48) = 0u;
  *(_DWORD *)(result + 64) = 1;
  return result;
}

void *sub_13D8160(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  void *result = off_24AE488;
  result[2] = 0;
  result[3] = 0;
  return result;
}

void *sub_13D81D8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  void *result = off_24AE508;
  result[2] = 0;
  result[3] = 0;
  return result;
}

uint64_t sub_13D8250(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24AE588;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = a1;
  *(void *)(result + 48) = 0;
  *(void *)(result + 56) = 0;
  *(_DWORD *)(result + 64) = 0;
  return result;
}

uint64_t sub_13D82F4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24AE608;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

uint64_t sub_13D8374(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24AE688;
  *(void *)(result + 8) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

double sub_13D8414(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = off_24AE708;
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = &qword_2550250;
  double result = 0.0;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 80) = 0u;
  *(_OWORD *)(v2 + 92) = 0u;
  return result;
}

uint64_t sub_13D84A8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24AE788;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

uint64_t sub_13D8528(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24AE808;
  *(void *)(result + 16) = 0;
  *(_DWORD *)(result + 23) = 0;
  return result;
}

double sub_13D85A4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = off_24AE888;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(void *)(v2 + 64) = 0;
  return result;
}

double sub_13D8628(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = off_24AE908;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(void *)(v2 + 48) = 0;
  return result;
}

double sub_13D86A8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = off_24AE988;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  return result;
}

uint64_t sub_13D8724(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24AEA08;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

double sub_13D87A0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = off_24AEA88;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(void *)(v2 + 64) = 0;
  return result;
}

uint64_t sub_13D8824(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24AEB08;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(_OWORD *)(result + 32) = 0u;
  *(_OWORD *)(result + 48) = 0u;
  return result;
}

uint64_t sub_13D88C0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24AEB88;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = a1;
  *(void *)(result + 40) = a1;
  *(void *)(result + 48) = 0;
  *(void *)(result + 56) = 0;
  *(void *)(result + 64) = a1;
  *(void *)(result + 72) = 0;
  *(void *)(result + 80) = 0;
  *(void *)(result + 88) = a1;
  *(_OWORD *)(result + 96) = 0u;
  *(_OWORD *)(result + 112) = 0u;
  *(_OWORD *)(result + 128) = 0u;
  return result;
}

uint64_t sub_13D8978(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24AEC08;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = a1;
  *(void *)(result + 56) = 0;
  *(void *)(result + 64) = 0;
  *(void *)(result + 72) = a1;
  *(_OWORD *)(result + 80) = 0u;
  *(_OWORD *)(result + 96) = 0u;
  *(void *)(result + 112) = 0;
  return result;
}

uint64_t sub_13D8A28(uint64_t a1)
{
  if (!a1)
  {
    sub_148E8C8();
  }

  return sub_139F148(v3, a1, 0);
}

void *sub_13D8A84(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  void *result = off_24AED08;
  result[2] = 0;
  result[3] = 0;
  return result;
}

double sub_13D8AFC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = off_24AED88;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(void *)(v2 + 80) = 0;
  return result;
}

void *sub_13D8B80(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  void *result = off_24AEE08;
  result[2] = 0;
  result[3] = 0;
  return result;
}

uint64_t sub_13D8BF8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24AEE88;
  *(void *)(result + 16) = 0;
  *(_WORD *)(result + 24) = 0;
  return result;
}

uint64_t sub_13D8C74(uint64_t a1)
{
  if (!a1)
  {
    sub_148E934();
  }

  return sub_13A1FB0(v3, a1, 0);
}

uint64_t sub_13D8CD0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24AEF88;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = 0;
  *(_DWORD *)(result + 56) = -1;
  return result;
}

void *sub_13D8D74(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  void *result = off_24AF008;
  result[1] = a1;
  result[2] = 0;
  result[3] = 0;
  result[4] = a1;
  result[5] = 0;
  return result;
}

void *sub_13D8E0C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  void *result = off_24AF088;
  result[2] = 0;
  result[3] = 0;
  return result;
}

uint64_t sub_13D8E84(uint64_t a1)
{
  if (!a1)
  {
    sub_148E9A0();
  }

  return sub_13A6044(v3, a1, 0);
}

uint64_t sub_13D8EE0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24AF188;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

uint64_t sub_13D8F60(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24AF208;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = a1;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = a1;
  *(void *)(result + 56) = 0;
  *(void *)(result + 64) = a1;
  *(void *)(result + 72) = &qword_2550250;
  *(_OWORD *)(result + 80) = 0u;
  *(_OWORD *)(result + 96) = 0u;
  *(_OWORD *)(result + 112) = 0u;
  *(_OWORD *)(result + 128) = 0u;
  *(_OWORD *)(result + 140) = 0u;
  *(_DWORD *)(result + 156) = 800000;
  *(_WORD *)(result + 160) = 257;
  *(_DWORD *)(result + 164) = 1;
  return result;
}

uint64_t sub_13D9048(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24AF288;
  *(void *)(result + 16) = 0;
  *(void *)(result + 22) = 0;
  *(unsigned char *)(result + 30) = 1;
  return result;
}

uint64_t sub_13D90CC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24AF308;
  *(void *)(result + 8) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

uint64_t sub_13D916C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24AF388;
  *(void *)(result + 8) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

uint64_t sub_13D920C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24AF408;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(_WORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_13D9288(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24AF488;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

void *sub_13D9308(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  void *result = off_24AF508;
  result[3] = 0;
  result[4] = 0;
  result[2] = 0;
  return result;
}

double sub_13D9384(uint64_t a1)
{
  if (!a1)
  {
    sub_148EA0C();
  }
  *(void *)uint64_t v3 = off_24AF588;
  *(void *)(v3 + 8) = a1;
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = a1;
  *(void *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(void *)(v3 + 56) = 0;
  *(void *)(v3 + 64) = 0;
  *(void *)(v3 + 72) = a1;
  *(void *)(v3 + 80) = 0;
  *(void *)(v3 + 88) = 0;
  *(void *)(v3 + 96) = a1;
  *(void *)(v3 + 104) = 0;
  *(void *)(v3 + 112) = 0;
  *(void *)(v3 + 120) = &qword_2550250;
  *(void *)(v3 + 128) = &qword_2550250;
  *(void *)(v3 + 136) = &qword_2550250;
  *(unsigned char *)(v3 + 256) = 0;
  double result = 0.0;
  *(_OWORD *)(v3 + 224) = 0u;
  *(_OWORD *)(v3 + 240) = 0u;
  *(_OWORD *)(v3 + 192) = 0u;
  *(_OWORD *)(v3 + 208) = 0u;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_OWORD *)(v3 + 144) = 0u;
  *(_DWORD *)(v3 + 260) = 20;
  *(_WORD *)(v3 + 264) = 257;
  *(unsigned char *)(v3 + 266) = 1;
  return result;
}

uint64_t sub_13D9440(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24AF608;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = &qword_2550250;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = 0;
  *(unsigned char *)(result + 56) = 0;
  return result;
}

void *sub_13D94CC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  void *result = off_24AF688;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = 0;
  return result;
}

uint64_t sub_13D9568(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24AF708;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(_OWORD *)(result + 32) = 0u;
  *(_OWORD *)(result + 48) = 0u;
  *(void *)(result + 64) = 0;
  return result;
}

uint64_t sub_13D9608(uint64_t a1)
{
  if (!a1)
  {
    sub_148EAA0();
  }

  return sub_13B9378(v3, a1, 0);
}

uint64_t sub_13D9664(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24AF808;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

double sub_13D96E0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = off_24AF888;
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = &qword_2550250;
  *(void *)(v2 + 32) = &qword_2550250;
  double result = 0.0;
  *(_OWORD *)(v2 + 40) = 0u;
  *(_OWORD *)(v2 + 56) = 0u;
  *(_OWORD *)(v2 + 72) = 0u;
  return result;
}

void *sub_13D9774(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  void *result = off_24AF908;
  result[2] = 0;
  result[4] = 0;
  result[5] = 0;
  result[3] = &qword_2550250;
  return result;
}

double sub_13D97FC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t v2 = off_24AF988;
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = 0;
  *(void *)(v2 + 40) = 0;
  *(void *)(v2 + 48) = &qword_2550250;
  double result = 0.0;
  *(_OWORD *)(v2 + 56) = 0u;
  *(_OWORD *)(v2 + 72) = 0u;
  *(_DWORD *)(v2 + 88) = 0;
  return result;
}

double sub_13D98B0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = off_24AFA08;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  return result;
}

uint64_t sub_13D992C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24AFA88;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_13D99A8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24AFB08;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = 0;
  *(_DWORD *)(result + 40) = 1;
  return result;
}

void *sub_13D9A2C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  void *result = off_24AFB88;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = a1;
  result[7] = 0;
  result[8] = 0;
  result[9] = 0;
  return result;
}

double sub_13D9AD0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = off_24AFC08;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = xmmword_2142220;
  return result;
}

void *sub_13D9B50(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  void *result = off_24AFC88;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = &qword_2550250;
  result[5] = 0;
  return result;
}

double sub_13D9BD8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  v2[1] = a1;
  void *v2 = off_24AFD08;
  v2[2] = 0;
  v2[3] = &qword_2550250;
  v2[4] = &qword_2550250;
  double result = NAN;
  v2[5] = 0xFFFFFFFF00000000;
  return result;
}

void *sub_13D9C64(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  void *result = off_24AFD88;
  result[3] = 0;
  result[4] = 0;
  result[2] = 0;
  return result;
}

uint64_t sub_13D9CE0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24AFE08;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_13D9D5C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24AFE88;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = &qword_2550250;
  *(void *)(result + 32) = &qword_2550250;
  *(void *)(result + 40) = &qword_2550250;
  *(void *)(result + 48) = &qword_2550250;
  *(void *)(result + 56) = 0;
  *(_DWORD *)(result + 64) = 0;
  return result;
}

double sub_13D9DEC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = off_24AFF08;
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = &qword_2550250;
  *(void *)(v2 + 32) = &qword_2550250;
  *(void *)(v2 + 40) = &qword_2550250;
  *(void *)(v2 + 48) = &qword_2550250;
  double result = 0.0;
  *(_OWORD *)(v2 + 56) = 0u;
  *(_OWORD *)(v2 + 72) = 0u;
  *(_OWORD *)(v2 + 84) = 0u;
  return result;
}

void *sub_13D9E84(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  void *result = off_24AFF88;
  result[2] = 0;
  result[3] = 0;
  return result;
}

double sub_13D9EFC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = off_24B0008;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_DWORD *)(v2 + 48) = 1;
  return result;
}

uint64_t sub_13D9F80(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24B0088;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(_WORD *)(result + 48) = 0;
  return result;
}

uint64_t sub_13DA01C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24B0108;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = 0;
  *(unsigned char *)(result + 40) = 0;
  *(_DWORD *)(result + 44) = 1;
  *(unsigned char *)(result + 48) = 1;
  return result;
}

uint64_t sub_13DA0A8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24B0188;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_13DA124(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24B0208;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(_DWORD *)(result + 48) = 0;
  return result;
}

uint64_t sub_13DA1C0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24B0288;
  *(void *)(result + 16) = 0;
  *(_DWORD *)(result + 23) = 0;
  return result;
}

uint64_t sub_13DA23C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24B0308;
  *(void *)(result + 16) = 0;
  *(unsigned char *)(result + 24) = 0;
  return result;
}

void *sub_13DA2B8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  void *result = off_24B0388;
  result[3] = 0;
  result[4] = 0;
  result[2] = 0;
  return result;
}

void *sub_13DA334(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  void *result = off_24B0408;
  result[2] = 0;
  result[3] = 0;
  return result;
}

uint64_t sub_13DA3AC(uint64_t a1)
{
  if (!a1)
  {
    sub_148EB0C();
  }

  return sub_13C9E60(v3, a1, 0);
}

uint64_t sub_13DA408(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24B0508;
  *(void *)(result + 16) = 0;
  *(_DWORD *)(result + 23) = 0;
  return result;
}

void *sub_13DA484(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  void *result = off_24B0588;
  result[1] = a1;
  result[2] = 0;
  result[3] = 0;
  result[5] = 0;
  result[6] = 0;
  result[4] = a1;
  return result;
}

void *sub_13DA524(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  void *result = off_24B0608;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = &qword_2550250;
  result[5] = 0;
  result[6] = 0;
  return result;
}

uint64_t sub_13DA5AC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24B0688;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = &qword_2550250;
  *(void *)(result + 32) = &qword_2550250;
  *(void *)(result + 40) = &qword_2550250;
  *(_DWORD *)(result + 48) = 0;
  return result;
}

uint64_t sub_13DA634(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24B0708;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = &qword_2550250;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

double sub_13DA6BC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t v2 = off_24B0788;
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = 0;
  *(void *)(v2 + 40) = 0;
  *(void *)(v2 + 48) = a1;
  double result = 0.0;
  *(_OWORD *)(v2 + 56) = 0u;
  *(_OWORD *)(v2 + 72) = 0u;
  *(_DWORD *)(v2 + 88) = 0;
  return result;
}

void *sub_13DA770(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  void *result = off_24B0808;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = 0;
  return result;
}

void *sub_13DA80C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  void *result = off_24B0888;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = a1;
  result[7] = 0;
  result[8] = 0;
  result[9] = a1;
  result[10] = 0;
  result[11] = 0;
  result[12] = 0;
  return result;
}

void *sub_13DA8BC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  void *result = off_24B0908;
  result[2] = 0;
  result[3] = 0;
  return result;
}

void *sub_13DA934(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  void *result = off_24B0988;
  result[1] = a1;
  result[2] = 0;
  result[3] = 0;
  result[4] = a1;
  result[5] = 0;
  return result;
}

double sub_13DA9CC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = off_24B0A08;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  return result;
}

uint64_t sub_13DAA4C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24B0A88;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = 0;
  *(void *)(result + 56) = a1;
  *(void *)(result + 64) = &qword_2550250;
  *(void *)(result + 72) = &qword_2550250;
  *(void *)(result + 80) = &qword_2550250;
  *(void *)(result + 88) = 0;
  *(void *)(result + 96) = 0;
  *(void *)(result + 104) = 0;
  *(_DWORD *)(result + 112) = 1;
  return result;
}

uint64_t sub_13DAB08(uint64_t a1)
{
  if (!a1)
  {
    sub_148EB78();
  }

  return sub_13D24C4(v3, a1, 0);
}

uint64_t sub_13DAB64(uint64_t a1)
{
  if (!a1)
  {
    sub_148EBE4();
  }

  return sub_13D375C(v3, a1, 0);
}

void *sub_13DABC0(uint64_t a1)
{
  if (!a1)
  {
    sub_148EC50();
  }

  return sub_13D3F5C(v3, a1, 0);
}

uint64_t sub_13DAC1C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24B0C88;
  *(void *)(result + 16) = 0;
  *(unsigned char *)(result + 24) = 0;
  return result;
}

void *sub_13DAC98(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  void *result = off_24B0D08;
  result[2] = 0;
  result[3] = 0;
  return result;
}

void *sub_13DAD10(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  void *result = off_24B0D88;
  result[2] = 0;
  result[3] = 0;
  return result;
}

uint64_t sub_13DAD88(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24B0E08;
  *(void *)(result + 8) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

uint64_t sub_13DAE28(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24B0E88;
  *(void *)(result + 16) = 0;
  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t sub_13DAEA4(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  *(void *)(a1 + 8) = v4;
  *(void *)a1 = off_24B0F08;
  sub_1882BC4(a1 + 16, a2);
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_DWORD *)(a1 + 88) = -1;
  return a1;
}

void sub_13DAF1C(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_13DAF4C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_12;
    }
  }
  else if (v4)
  {
    goto LABEL_12;
  }
  if ((uint64_t (***)())a1 != &off_2536A08)
  {
    unint64_t v5 = *(void **)(a1 + 48);
    if (v5)
    {
      sub_136CAC0(v5);
      operator delete();
    }
    uint64_t v6 = *(void **)(a1 + 56);
    if (v6)
    {
      sub_13D065C(v6);
      operator delete();
    }
    unint64_t v7 = *(void **)(a1 + 64);
    if (v7)
    {
      sub_1393AC0(v7);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_12:
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_13DB044(uint64_t a1)
{
  sub_13DAF4C(a1);

  operator delete();
}

uint64_t sub_13DB07C(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  int v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 7) != 0)
  {
    if (v3)
    {
      uint64_t v4 = *(void *)(a1 + 48);
      char v5 = *(unsigned char *)(v4 + 8);
      uint64_t result = v4 + 8;
      *(_DWORD *)(result + 8) = 0;
      *(_DWORD *)(result + 32) = 0;
      if (v5) {
        uint64_t result = sub_188B4AC((uint64_t *)result);
      }
    }
    if ((v3 & 2) != 0) {
      uint64_t result = sub_13D0708(*(void *)(a1 + 56));
    }
    if ((v3 & 4) != 0) {
      uint64_t result = sub_138CB30(*(void *)(a1 + 64));
    }
  }
  if ((v3 & 0xF8) != 0)
  {
    *(void *)(a1 + 72) = 0;
    *(void *)(a1 + 80) = 0;
    *(_DWORD *)(a1 + 88) = -1;
  }
  char v7 = *(unsigned char *)(a1 + 8);
  uint64_t v6 = a1 + 8;
  *(_DWORD *)(v6 + 32) = 0;
  if (v7)
  {
    return sub_188B4AC((uint64_t *)v6);
  }
  return result;
}

char *sub_13DB124(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v48 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v48, a3[11].i32[1])) {
    goto LABEL_2;
  }
  char v7 = (void *)(a1 + 8);
  while (2)
  {
    unint64_t v8 = v48 + 1;
    unsigned int v9 = *v48;
    if (*v48 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unint64_t v8 = (char *)sub_188C180((uint64_t)v48, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unint64_t v8 = v48 + 2;
      }
    }
    int v48 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_52;
        }
        v5 |= 8u;
        unsigned int v12 = v8 + 1;
        int v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        int v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          unsigned int v12 = v8 + 2;
LABEL_13:
          int v48 = v12;
          *(_DWORD *)(a1 + 72) = v13;
          goto LABEL_62;
        }
        int v38 = (char *)sub_188C0D0((uint64_t)v8, v13);
        int v48 = v38;
        *(_DWORD *)(a1 + 72) = v39;
        if (v38) {
          goto LABEL_62;
        }
        goto LABEL_77;
      case 2u:
        if (v9 != 16) {
          goto LABEL_52;
        }
        v5 |= 0x10u;
        int v15 = v8 + 1;
        int v16 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_18;
        }
        int v17 = *v15;
        int v16 = v16 + (v17 << 7) - 128;
        if (v17 < 0)
        {
          v40 = (char *)sub_188C0D0((uint64_t)v8, v16);
          int v48 = v40;
          *(_DWORD *)(a1 + 76) = v41;
          if (!v40) {
            goto LABEL_77;
          }
        }
        else
        {
          int v15 = v8 + 2;
LABEL_18:
          int v48 = v15;
          *(_DWORD *)(a1 + 76) = v16;
        }
        goto LABEL_62;
      case 3u:
        if (v9 != 24) {
          goto LABEL_52;
        }
        v5 |= 0x80u;
        int v19 = v8 + 1;
        LODWORD(v18) = *v8;
        if ((v18 & 0x80) == 0) {
          goto LABEL_23;
        }
        int v20 = *v19;
        uint64_t v18 = v18 + (v20 << 7) - 128;
        if (v20 < 0)
        {
          uint64_t v42 = (char *)sub_188C138((uint64_t)v8, v18);
          int v48 = v42;
          *(_DWORD *)(a1 + 88) = v43;
          if (!v42) {
            goto LABEL_77;
          }
        }
        else
        {
          int v19 = v8 + 2;
LABEL_23:
          int v48 = v19;
          *(_DWORD *)(a1 + 88) = v18;
        }
        goto LABEL_62;
      case 4u:
        if (v9 != 34) {
          goto LABEL_52;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        uint64_t v21 = *(void *)(a1 + 48);
        if (!v21)
        {
          int v22 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            int v22 = (void *)*v22;
          }
          sub_13D62B8((uint64_t)v22);
          uint64_t v21 = v23;
          *(void *)(a1 + 48) = v23;
          unint64_t v8 = v48;
        }
        int v24 = sub_138DE10(a3, v21, (unsigned __int8 *)v8);
        goto LABEL_61;
      case 5u:
        if (v9 != 40) {
          goto LABEL_52;
        }
        v5 |= 0x20u;
        uint64_t v25 = v8 + 1;
        int v26 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_34;
        }
        int v27 = *v25;
        int v26 = v26 + (v27 << 7) - 128;
        if (v27 < 0)
        {
          long long v44 = (char *)sub_188C0D0((uint64_t)v8, v26);
          int v48 = v44;
          *(_DWORD *)(a1 + 80) = v45;
          if (!v44) {
            goto LABEL_77;
          }
        }
        else
        {
          uint64_t v25 = v8 + 2;
LABEL_34:
          int v48 = v25;
          *(_DWORD *)(a1 + 80) = v26;
        }
        goto LABEL_62;
      case 6u:
        if (v9 != 50) {
          goto LABEL_52;
        }
        *(_DWORD *)(a1 + 40) |= 2u;
        uint64_t v28 = *(void *)(a1 + 56);
        if (!v28)
        {
          uint64_t v29 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v29 = (void *)*v29;
          }
          sub_13DA9CC((uint64_t)v29);
          uint64_t v28 = v30;
          *(void *)(a1 + 56) = v30;
          unint64_t v8 = v48;
        }
        int v24 = sub_13DB590(a3, v28, (unsigned __int8 *)v8);
        goto LABEL_61;
      case 7u:
        if (v9 != 58) {
          goto LABEL_52;
        }
        *(_DWORD *)(a1 + 40) |= 4u;
        BOOL v31 = *(void **)(a1 + 64);
        if (!v31)
        {
          uint64_t v32 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v32 = (void *)*v32;
          }
          BOOL v31 = sub_13D8160((uint64_t)v32);
          *(void *)(a1 + 64) = v31;
          unint64_t v8 = v48;
        }
        int v24 = sub_138DF30(a3, (uint64_t)v31, (unsigned __int8 *)v8);
        goto LABEL_61;
      case 8u:
        if (v9 != 64) {
          goto LABEL_52;
        }
        v5 |= 0x40u;
        unint64_t v33 = v8 + 1;
        int v34 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_51;
        }
        int v35 = *v33;
        int v34 = v34 + (v35 << 7) - 128;
        if (v35 < 0)
        {
          uint64_t v46 = (char *)sub_188C0D0((uint64_t)v8, v34);
          int v48 = v46;
          *(_DWORD *)(a1 + 84) = v47;
          if (!v46) {
            goto LABEL_77;
          }
        }
        else
        {
          unint64_t v33 = v8 + 2;
LABEL_51:
          int v48 = v33;
          *(_DWORD *)(a1 + 84) = v34;
        }
        goto LABEL_62;
      default:
LABEL_52:
        if (v9) {
          BOOL v36 = (v9 & 7) == 4;
        }
        else {
          BOOL v36 = 1;
        }
        if (!v36)
        {
          if (v9 - 800 > 0x31F)
          {
            if (*v7)
            {
              int v37 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              int v37 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              unint64_t v8 = v48;
            }
            int v24 = (char *)sub_1885AC0(v9, v37, v8, a3);
          }
          else
          {
            int v24 = (char *)sub_18859DC((uint64_t **)(a1 + 16), v9, v8, (uint64_t)&off_2536A08, (uint64_t *)(a1 + 8), a3);
          }
LABEL_61:
          int v48 = v24;
          if (!v24) {
            goto LABEL_77;
          }
LABEL_62:
          if (sub_11947B8((uint64_t)a3, &v48, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_77:
        }
          int v48 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 40) |= v5;
        return v48;
    }
  }
}

char *sub_13DB590(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_13D0738(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_13DB620(uint64_t a1, char *a2, _DWORD *a3)
{
  uint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if ((v6 & 8) != 0)
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 72);
    char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 76);
    char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x80) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v13 = *(int *)(a1 + 88);
    char *v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unint64_t v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v16 = *(void *)(a1 + 48);
    char *v4 = 34;
    unsigned int v17 = *(_DWORD *)(v16 + 60);
    v4[1] = v17;
    if (v17 > 0x7F) {
      uint64_t v18 = sub_188A9CC(v17, v4 + 1);
    }
    else {
      uint64_t v18 = v4 + 2;
    }
    uint64_t v4 = sub_136CD44(v16, (unint64_t)v18, a3);
  }
  if ((v6 & 0x20) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v19 = *(_DWORD *)(a1 + 80);
    char *v4 = 40;
    v4[1] = v19;
    if (v19 > 0x7F)
    {
      v4[1] = v19 | 0x80;
      unsigned int v20 = v19 >> 7;
      v4[2] = v19 >> 7;
      v4 += 3;
      if (v19 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v21 = v20 >> 14;
          v20 >>= 7;
          *v4++ = v20;
        }
        while (v21);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v22 = *(void *)(a1 + 56);
    char *v4 = 50;
    unsigned int v23 = *(_DWORD *)(v22 + 20);
    v4[1] = v23;
    if (v23 > 0x7F) {
      int v24 = sub_188A9CC(v23, v4 + 1);
    }
    else {
      int v24 = v4 + 2;
    }
    uint64_t v4 = sub_13D0AB4(v22, (unint64_t)v24, a3);
    if ((v6 & 4) == 0)
    {
LABEL_38:
      if ((v6 & 0x40) == 0) {
        goto LABEL_58;
      }
      goto LABEL_52;
    }
  }
  else if ((v6 & 4) == 0)
  {
    goto LABEL_38;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v25 = *(void *)(a1 + 64);
  char *v4 = 58;
  unsigned int v26 = *(_DWORD *)(v25 + 20);
  v4[1] = v26;
  if (v26 > 0x7F) {
    int v27 = sub_188A9CC(v26, v4 + 1);
  }
  else {
    int v27 = v4 + 2;
  }
  uint64_t v4 = sub_1393D5C(v25, (unint64_t)v27, a3);
  if ((v6 & 0x40) != 0)
  {
LABEL_52:
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v28 = *(_DWORD *)(a1 + 84);
    char *v4 = 64;
    v4[1] = v28;
    if (v28 > 0x7F)
    {
      v4[1] = v28 | 0x80;
      unsigned int v29 = v28 >> 7;
      v4[2] = v28 >> 7;
      v4 += 3;
      if (v28 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v30 = v29 >> 14;
          v29 >>= 7;
          *v4++ = v29;
        }
        while (v30);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_58:
  if (*(_WORD *)(a1 + 26)) {
    uint64_t v4 = sub_1886844(a1 + 16, 100, 200, v4, a3);
  }
  uint64_t v31 = *(void *)(a1 + 8);
  if ((v31 & 1) == 0) {
    return v4;
  }
  unint64_t v33 = v31 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v33 + 31) < 0)
  {
    int v34 = *(void **)(v33 + 8);
    uint64_t v35 = *(void *)(v33 + 16);
  }
  else
  {
    int v34 = (void *)(v33 + 8);
    LODWORD(v35) = *(unsigned __int8 *)(v33 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v35)
  {
    uint64_t v36 = (int)v35;
    memcpy(v4, v34, (int)v35);
    v4 += v36;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v34, v35, v4);
}

uint64_t sub_13DBAA0(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  char v3 = *(unsigned char *)(a1 + 40);
  if (!v3) {
    goto LABEL_22;
  }
  if (*(unsigned char *)(a1 + 40))
  {
    uint64_t v4 = sub_136CFD0(*(void *)(a1 + 48));
    v2 += v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v3 & 2) == 0)
    {
LABEL_4:
      if ((v3 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_13;
    }
  }
  else if ((*(unsigned char *)(a1 + 40) & 2) == 0)
  {
    goto LABEL_4;
  }
  uint64_t v5 = sub_13D0E3C(*(void *)(a1 + 56));
  v2 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v3 & 4) == 0)
  {
LABEL_5:
    if ((v3 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_14;
  }
LABEL_13:
  uint64_t v6 = sub_1393F00(*(void *)(a1 + 64));
  v2 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v3 & 8) == 0)
  {
LABEL_6:
    if ((v3 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_15;
  }
LABEL_14:
  v2 += ((9 * (__clz(*(_DWORD *)(a1 + 72) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v3 & 0x10) == 0)
  {
LABEL_7:
    if ((v3 & 0x20) == 0) {
      goto LABEL_8;
    }
    goto LABEL_16;
  }
LABEL_15:
  v2 += ((9 * (__clz(*(_DWORD *)(a1 + 76) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v3 & 0x20) == 0)
  {
LABEL_8:
    if ((v3 & 0x40) == 0) {
      goto LABEL_9;
    }
    goto LABEL_17;
  }
LABEL_16:
  v2 += ((9 * (__clz(*(_DWORD *)(a1 + 80) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v3 & 0x40) == 0)
  {
LABEL_9:
    if ((v3 & 0x80) == 0) {
      goto LABEL_22;
    }
    goto LABEL_18;
  }
LABEL_17:
  v2 += ((9 * (__clz(*(_DWORD *)(a1 + 84) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v3 & 0x80) == 0) {
    goto LABEL_22;
  }
LABEL_18:
  int v7 = *(_DWORD *)(a1 + 88);
  if (v7 < 0) {
    uint64_t v8 = 11;
  }
  else {
    uint64_t v8 = ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v2 += v8;
LABEL_22:
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    v2 += v12;
  }
  *(_DWORD *)(a1 + 44) = v2;
  return v2;
}

void sub_13DBC94(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 40);
  if ((_BYTE)v4)
  {
    if (v4)
    {
      *(_DWORD *)(a1 + 40) |= 1u;
      uint64_t v6 = *(std::string **)(a1 + 48);
      if (!v6)
      {
        uint64_t v7 = *(void *)(a1 + 8);
        uint64_t v8 = (void *)(v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (v7) {
          uint64_t v8 = (void *)*v8;
        }
        sub_13D62B8((uint64_t)v8);
        *(void *)(a1 + 48) = v6;
      }
      if (*(void *)(a2 + 48)) {
        uint64_t v9 = *(uint64_t (****)())(a2 + 48);
      }
      else {
        uint64_t v9 = &off_25344D0;
      }
      sub_136D0B8(v6, (uint64_t)v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_32;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    *(_DWORD *)(a1 + 40) |= 2u;
    unsigned int v10 = *(std::string **)(a1 + 56);
    if (!v10)
    {
      uint64_t v11 = *(void *)(a1 + 8);
      uint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        uint64_t v12 = (void *)*v12;
      }
      sub_13DA9CC((uint64_t)v12);
      *(void *)(a1 + 56) = v10;
    }
    if (*(void *)(a2 + 56)) {
      unint64_t v13 = *(uint64_t (****)())(a2 + 56);
    }
    else {
      unint64_t v13 = &off_2536798;
    }
    sub_13D0F78(v10, (uint64_t)v13);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_40;
    }
LABEL_32:
    *(_DWORD *)(a1 + 40) |= 4u;
    unint64_t v14 = *(std::string **)(a1 + 64);
    if (!v14)
    {
      uint64_t v15 = *(void *)(a1 + 8);
      uint64_t v16 = (void *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
      if (v15) {
        uint64_t v16 = (void *)*v16;
      }
      unint64_t v14 = (std::string *)sub_13D8160((uint64_t)v16);
      *(void *)(a1 + 64) = v14;
    }
    if (*(void *)(a2 + 64)) {
      unsigned int v17 = *(uint64_t (****)())(a2 + 64);
    }
    else {
      unsigned int v17 = &off_2535208;
    }
    sub_117EF04(v14, (uint64_t)v17);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0) {
        goto LABEL_7;
      }
      goto LABEL_41;
    }
LABEL_40:
    *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
    if ((v4 & 0x10) == 0)
    {
LABEL_7:
      if ((v4 & 0x20) == 0) {
        goto LABEL_8;
      }
      goto LABEL_42;
    }
LABEL_41:
    *(_DWORD *)(a1 + 76) = *(_DWORD *)(a2 + 76);
    if ((v4 & 0x20) == 0)
    {
LABEL_8:
      if ((v4 & 0x40) == 0) {
        goto LABEL_9;
      }
      goto LABEL_43;
    }
LABEL_42:
    *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
    if ((v4 & 0x40) == 0)
    {
LABEL_9:
      if ((v4 & 0x80) == 0)
      {
LABEL_11:
        *(_DWORD *)(a1 + 40) |= v4;
        goto LABEL_12;
      }
LABEL_10:
      *(_DWORD *)(a1 + 88) = *(_DWORD *)(a2 + 88);
      goto LABEL_11;
    }
LABEL_43:
    *(_DWORD *)(a1 + 84) = *(_DWORD *)(a2 + 84);
    if ((v4 & 0x80) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
LABEL_12:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_13DBE58(uint64_t a1)
{
  return sub_18856CC(a1 + 16);
}

void *sub_13DBE60@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.ETAStep");
}

uint64_t sub_13DBE70(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  *(void *)(a1 + 8) = v5;
  *(void *)a1 = off_24B0F88;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = a2;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = a2;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = a2;
  *(void *)(a1 + 104) = 0;
  *(void *)(a1 + 112) = 0;
  *(void *)(a1 + 120) = a2;
  *(void *)(a1 + 128) = 0;
  *(void *)(a1 + 136) = 0;
  *(void *)(a1 + 144) = 0;
  *(void *)(a1 + 152) = a2;
  *(_DWORD *)(a1 + 160) = 0;
  *(void *)(a1 + 168) = 0;
  *(void *)(a1 + 176) = a2;
  *(_DWORD *)(a1 + 184) = 0;
  *(void *)(a1 + 192) = a2;
  *(void *)(a1 + 200) = 0;
  *(void *)(a1 + 208) = 0;
  *(void *)(a1 + 216) = a2;
  *(void *)(a1 + 224) = 0;
  *(void *)(a1 + 232) = 0;
  *(void *)(a1 + 240) = a2;
  *(void *)(a1 + 248) = 0;
  *(void *)(a1 + 256) = 0;
  *(void *)(a1 + 264) = 0;
  *(void *)(a1 + 272) = a2;
  *(_DWORD *)(a1 + 280) = 0;
  *(void *)(a1 + 288) = a2;
  *(void *)(a1 + 296) = 0;
  *(void *)(a1 + 304) = 0;
  *(void *)(a1 + 312) = a2;
  *(void *)(a1 + 320) = 0;
  *(void *)(a1 + 328) = 0;
  *(void *)(a1 + 336) = a2;
  *(void *)(a1 + 344) = 0;
  *(void *)(a1 + 352) = 0;
  *(void *)(a1 + 360) = 0;
  *(void *)(a1 + 368) = a2;
  *(_DWORD *)(a1 + 376) = 0;
  *(void *)(a1 + 384) = a2;
  *(void *)(a1 + 392) = 0;
  *(void *)(a1 + 400) = 0;
  *(void *)(a1 + 408) = a2;
  *(void *)(a1 + 416) = 0;
  *(void *)(a1 + 424) = 0;
  *(void *)(a1 + 432) = a2;
  *(void *)(a1 + 440) = 0;
  *(void *)(a1 + 448) = 0;
  *(void *)(a1 + 456) = &qword_2550250;
  *(void *)(a1 + 464) = &qword_2550250;
  *(void *)(a1 + 520) = 0;
  *(_OWORD *)(a1 + 488) = 0u;
  *(_OWORD *)(a1 + 504) = 0u;
  *(_OWORD *)(a1 + 472) = 0u;
  return a1;
}

void sub_13DBF70(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_13DBFA0(void *a1)
{
  char v3 = a1 + 1;
  uint64_t v2 = a1[1];
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_13DC0E0((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  sub_148C5C8(a1 + 54);
  sub_148B9C8(a1 + 51);
  sub_148C5C8(a1 + 48);
  sub_1889DA8((uint64_t)(a1 + 45));
  sub_148C4C8(a1 + 42);
  sub_148C448(a1 + 39);
  sub_148C248(a1 + 36);
  sub_1889DA8((uint64_t)(a1 + 33));
  sub_13693AC(a1 + 30);
  sub_13693AC(a1 + 27);
  sub_13693AC(a1 + 24);
  sub_1889DA8((uint64_t)(a1 + 21));
  sub_1889DA8((uint64_t)(a1 + 18));
  sub_1889DE8(a1 + 15);
  sub_1367118(a1 + 12);
  sub_1889DE8(a1 + 9);
  sub_148ECBC(a1 + 6);
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

uint64_t sub_13DC0E0(uint64_t result)
{
  uint64_t v1 = (void *)result;
  if (*(uint64_t **)(result + 456) != &qword_2550250) {
    sub_1881C6C((void ***)(result + 456));
  }
  if (*(uint64_t **)(result + 464) != &qword_2550250) {
    sub_1881C6C((void ***)(result + 464));
  }
  if ((uint64_t (***)())result != &off_2536A68)
  {
    uint64_t v2 = *(void **)(result + 472);
    if (v2)
    {
      sub_13B4428(v2);
      operator delete();
    }
    char v3 = (void *)v1[60];
    if (v3)
    {
      sub_1396498(v3);
      operator delete();
    }
    int v4 = (void *)v1[61];
    if (v4)
    {
      sub_1396498(v4);
      operator delete();
    }
    uint64_t result = v1[62];
    if (result)
    {
      sub_13A1B50((void *)result);
      operator delete();
    }
  }
  return result;
}

void sub_13DC1DC(void *a1)
{
  sub_13DBFA0(a1);

  operator delete();
}

uint64_t sub_13DC214(uint64_t a1)
{
  sub_18843A4((unsigned char *)(a1 + 16));
  uint64_t v2 = *(unsigned int *)(a1 + 56);
  if ((int)v2 >= 1)
  {
    char v3 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v4 = *v3++;
      sub_13DB07C(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(a1 + 56) = 0;
  }
  sub_188CC00(a1 + 72);
  uint64_t v5 = *(unsigned int *)(a1 + 104);
  if ((int)v5 >= 1)
  {
    uint64_t v6 = (uint64_t *)(*(void *)(a1 + 112) + 8);
    do
    {
      uint64_t v7 = *v6++;
      sub_13A6644(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(a1 + 104) = 0;
  }
  uint64_t result = sub_188CC00(a1 + 120);
  *(_DWORD *)(a1 + 144) = 0;
  *(_DWORD *)(a1 + 168) = 0;
  uint64_t v9 = *(unsigned int *)(a1 + 200);
  if ((int)v9 >= 1)
  {
    unsigned int v10 = (uint64_t *)(*(void *)(a1 + 208) + 8);
    do
    {
      uint64_t v11 = *v10++;
      uint64_t result = sub_13B9618(v11);
      --v9;
    }
    while (v9);
    *(_DWORD *)(a1 + 200) = 0;
  }
  uint64_t v12 = *(unsigned int *)(a1 + 224);
  if ((int)v12 >= 1)
  {
    unint64_t v13 = (uint64_t *)(*(void *)(a1 + 232) + 8);
    do
    {
      uint64_t v14 = *v13++;
      uint64_t result = sub_13B9618(v14);
      --v12;
    }
    while (v12);
    *(_DWORD *)(a1 + 224) = 0;
  }
  uint64_t v15 = *(unsigned int *)(a1 + 248);
  if ((int)v15 >= 1)
  {
    uint64_t v16 = (uint64_t *)(*(void *)(a1 + 256) + 8);
    do
    {
      uint64_t v17 = *v16++;
      uint64_t result = sub_13B9618(v17);
      --v15;
    }
    while (v15);
    *(_DWORD *)(a1 + 248) = 0;
  }
  *(_DWORD *)(a1 + 264) = 0;
  uint64_t v18 = *(unsigned int *)(a1 + 296);
  if ((int)v18 >= 1)
  {
    unsigned int v19 = (uint64_t *)(*(void *)(a1 + 304) + 8);
    do
    {
      uint64_t v20 = *v19++;
      uint64_t result = sub_13BD3C0(v20);
      --v18;
    }
    while (v18);
    *(_DWORD *)(a1 + 296) = 0;
  }
  uint64_t v21 = *(unsigned int *)(a1 + 320);
  if ((int)v21 >= 1)
  {
    uint64_t v22 = (uint64_t *)(*(void *)(a1 + 328) + 8);
    do
    {
      uint64_t v23 = *v22++;
      uint64_t result = sub_13907D8(v23);
      --v21;
    }
    while (v21);
    *(_DWORD *)(a1 + 320) = 0;
  }
  uint64_t v24 = *(unsigned int *)(a1 + 344);
  if ((int)v24 >= 1)
  {
    uint64_t v25 = (uint64_t *)(*(void *)(a1 + 352) + 8);
    do
    {
      uint64_t v26 = *v25++;
      uint64_t result = sub_1391338(v26);
      --v24;
    }
    while (v24);
    *(_DWORD *)(a1 + 344) = 0;
  }
  *(_DWORD *)(a1 + 360) = 0;
  uint64_t v27 = *(unsigned int *)(a1 + 392);
  if ((int)v27 >= 1)
  {
    unsigned int v28 = (uint64_t *)(*(void *)(a1 + 400) + 8);
    do
    {
      uint64_t v29 = *v28++;
      uint64_t result = sub_136B5F8(v29);
      --v27;
    }
    while (v27);
    *(_DWORD *)(a1 + 392) = 0;
  }
  uint64_t v30 = *(unsigned int *)(a1 + 416);
  if ((int)v30 >= 1)
  {
    uint64_t v31 = (uint64_t *)(*(void *)(a1 + 424) + 8);
    do
    {
      uint64_t v32 = *v31++;
      uint64_t result = sub_137E904(v32);
      --v30;
    }
    while (v30);
    *(_DWORD *)(a1 + 416) = 0;
  }
  uint64_t v33 = *(unsigned int *)(a1 + 440);
  if ((int)v33 >= 1)
  {
    int v34 = (uint64_t *)(*(void *)(a1 + 448) + 8);
    do
    {
      uint64_t v35 = *v34++;
      uint64_t result = sub_136B5F8(v35);
      --v33;
    }
    while (v33);
    *(_DWORD *)(a1 + 440) = 0;
  }
  int v36 = *(_DWORD *)(a1 + 40);
  if ((v36 & 0x3F) != 0)
  {
    if ((v36 & 1) == 0)
    {
      if ((v36 & 2) == 0) {
        goto LABEL_48;
      }
LABEL_57:
      unint64_t v38 = *(void *)(a1 + 464) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v38 + 23) < 0)
      {
        **(unsigned char **)unint64_t v38 = 0;
        *(void *)(v38 + 8) = 0;
        if ((v36 & 4) != 0) {
          goto LABEL_61;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v38 = 0;
        *(unsigned char *)(v38 + 23) = 0;
        if ((v36 & 4) != 0) {
          goto LABEL_61;
        }
      }
LABEL_49:
      if ((v36 & 8) == 0) {
        goto LABEL_50;
      }
      goto LABEL_62;
    }
    unint64_t v37 = *(void *)(a1 + 456) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v37 + 23) < 0)
    {
      **(unsigned char **)unint64_t v37 = 0;
      *(void *)(v37 + 8) = 0;
      if ((v36 & 2) != 0) {
        goto LABEL_57;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v37 = 0;
      *(unsigned char *)(v37 + 23) = 0;
      if ((v36 & 2) != 0) {
        goto LABEL_57;
      }
    }
LABEL_48:
    if ((v36 & 4) == 0) {
      goto LABEL_49;
    }
LABEL_61:
    uint64_t result = sub_13B4694(*(void *)(a1 + 472));
    if ((v36 & 8) == 0)
    {
LABEL_50:
      if ((v36 & 0x10) == 0) {
        goto LABEL_51;
      }
      goto LABEL_63;
    }
LABEL_62:
    uint64_t result = sub_1391C04(*(void *)(a1 + 480));
    if ((v36 & 0x10) == 0)
    {
LABEL_51:
      if ((v36 & 0x20) == 0) {
        goto LABEL_66;
      }
      goto LABEL_64;
    }
LABEL_63:
    uint64_t result = sub_1391C04(*(void *)(a1 + 488));
    if ((v36 & 0x20) == 0) {
      goto LABEL_66;
    }
LABEL_64:
    uint64_t v39 = *(void *)(a1 + 496);
    char v40 = *(unsigned char *)(v39 + 8);
    uint64_t result = v39 + 8;
    *(_WORD *)(result + 16) = 0;
    *(_DWORD *)(result + 8) = 0;
    if (v40) {
      uint64_t result = sub_188B4AC((uint64_t *)result);
    }
  }
LABEL_66:
  if ((v36 & 0xC0) != 0) {
    *(void *)(a1 + 504) = 0;
  }
  if ((v36 & 0xF00) != 0) {
    *(_OWORD *)(a1 + 512) = 0u;
  }
  char v42 = *(unsigned char *)(a1 + 8);
  uint64_t v41 = a1 + 8;
  *(_DWORD *)(v41 + 32) = 0;
  if (v42)
  {
    return sub_188B4AC((uint64_t *)v41);
  }
  return result;
}

char *sub_13DC52C(uint64_t a1, char *a2, int32x2_t *a3)
{
  v153 = a2;
  if (sub_11947B8((uint64_t)a3, &v153, a3[11].i32[1]))
  {
    int v152 = 0;
    goto LABEL_3;
  }
  int v152 = 0;
  v150 = (uint64_t *)(a1 + 408);
  v151 = (uint64_t *)(a1 + 432);
  v145 = (uint64_t *)(a1 + 8);
  v148 = (uint64_t *)(a1 + 336);
  v149 = (uint64_t *)(a1 + 384);
  v146 = (uint64_t *)(a1 + 288);
  v147 = (uint64_t *)(a1 + 312);
  uint64_t v6 = (uint64_t **)(a1 + 120);
  uint64_t v7 = (uint64_t **)(a1 + 72);
  while (2)
  {
    uint64_t v8 = v153 + 1;
    unsigned int v9 = *v153;
    if (*v153 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v153, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v153 + 2;
      }
    }
    v153 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_241;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        uint64_t v12 = *(void *)(a1 + 8);
        unint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          unint64_t v13 = (uint64_t *)*v13;
        }
        uint64_t v14 = (void *)(a1 + 456);
        goto LABEL_185;
      case 2u:
        if (v9 != 18) {
          goto LABEL_241;
        }
        uint64_t v15 = v8 - 1;
        while (1)
        {
          uint64_t v16 = (unsigned __int8 *)(v15 + 1);
          v153 = v15 + 1;
          uint64_t v17 = *(_DWORD **)(a1 + 64);
          if (v17 && (uint64_t v18 = *(int *)(a1 + 56), (int)v18 < *v17))
          {
            *(_DWORD *)(a1 + 56) = v18 + 1;
            uint64_t v19 = *(void *)&v17[2 * v18 + 2];
          }
          else
          {
            uint64_t v20 = sub_13F3778(*(void *)(a1 + 48));
            uint64_t v19 = sub_188CDC8(a1 + 48, v20);
            uint64_t v16 = (unsigned __int8 *)v153;
          }
          uint64_t v15 = sub_13DD494(a3, v19, v16);
          v153 = v15;
          if (!v15) {
            goto LABEL_254;
          }
          if (*(void *)a3 <= (unint64_t)v15 || *v15 != 18) {
            goto LABEL_187;
          }
        }
      case 3u:
        if (v9 != 26) {
          goto LABEL_241;
        }
        uint64_t v21 = v8 - 1;
        while (1)
        {
          uint64_t v22 = (char *)(v21 + 1);
          v153 = (char *)(v21 + 1);
          uint64_t v23 = *(_DWORD **)(a1 + 88);
          if (v23 && (uint64_t v24 = *(int *)(a1 + 80), (int)v24 < *v23))
          {
            *(_DWORD *)(a1 + 80) = v24 + 1;
            uint64_t v25 = *(std::string **)&v23[2 * v24 + 2];
          }
          else
          {
            if (!*v7) {
              operator new();
            }
            void *v27 = v26;
            v27[1] = sub_3A6EDC;
            void *v26 = 0;
            v26[1] = 0;
            int v26[2] = 0;
            uint64_t v25 = (std::string *)sub_188CDC8(a1 + 72, (uint64_t)v26);
            uint64_t v22 = v153;
          }
          uint64_t v21 = sub_188C244(v25, v22, (uint64_t)a3);
          v153 = (char *)v21;
          if (!v21) {
            goto LABEL_254;
          }
          if (*(void *)a3 <= (unint64_t)v21 || *v21 != 26) {
            goto LABEL_187;
          }
        }
      case 4u:
        if (v9 != 32) {
          goto LABEL_241;
        }
        unsigned int v28 = v8 + 1;
        uint64_t v29 = *v8;
        v152 |= 0x40u;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_40;
        }
        int v30 = *v28;
        uint64_t v29 = v29 + (v30 << 7) - 128;
        if (v30 < 0)
        {
          v127 = (char *)sub_188C138((uint64_t)v8, v29);
          v153 = v127;
          *(unsigned char *)(a1 + 504) = v128 != 0;
          if (!v127) {
            goto LABEL_254;
          }
        }
        else
        {
          unsigned int v28 = v8 + 2;
LABEL_40:
          v153 = v28;
          *(unsigned char *)(a1 + 504) = v29 != 0;
        }
        goto LABEL_187;
      case 5u:
        if (v9 != 42) {
          goto LABEL_241;
        }
        uint64_t v31 = v8 - 1;
        while (1)
        {
          uint64_t v32 = (unsigned __int8 *)(v31 + 1);
          v153 = v31 + 1;
          uint64_t v33 = *(_DWORD **)(a1 + 112);
          if (v33 && (uint64_t v34 = *(int *)(a1 + 104), (int)v34 < *v33))
          {
            *(_DWORD *)(a1 + 104) = v34 + 1;
            uint64_t v35 = *(void *)&v33[2 * v34 + 2];
          }
          else
          {
            uint64_t v36 = sub_13D8E84(*(void *)(a1 + 96));
            uint64_t v35 = sub_188CDC8(a1 + 96, v36);
            uint64_t v32 = (unsigned __int8 *)v153;
          }
          uint64_t v31 = sub_134AF6C(a3, v35, v32);
          v153 = v31;
          if (!v31) {
            goto LABEL_254;
          }
          if (*(void *)a3 <= (unint64_t)v31 || *v31 != 42) {
            goto LABEL_187;
          }
        }
      case 6u:
        if (v9 != 50) {
          goto LABEL_241;
        }
        unint64_t v37 = v8 - 1;
        while (1)
        {
          unint64_t v38 = (char *)(v37 + 1);
          v153 = (char *)(v37 + 1);
          uint64_t v39 = *(_DWORD **)(a1 + 136);
          if (v39 && (uint64_t v40 = *(int *)(a1 + 128), (int)v40 < *v39))
          {
            *(_DWORD *)(a1 + 128) = v40 + 1;
            uint64_t v41 = *(std::string **)&v39[2 * v40 + 2];
          }
          else
          {
            if (!*v6) {
              operator new();
            }
            void *v43 = v42;
            v43[1] = sub_3A6EDC;
            *char v42 = 0;
            v42[1] = 0;
            v42[2] = 0;
            uint64_t v41 = (std::string *)sub_188CDC8(a1 + 120, (uint64_t)v42);
            unint64_t v38 = v153;
          }
          unint64_t v37 = sub_188C244(v41, v38, (uint64_t)a3);
          v153 = (char *)v37;
          if (!v37) {
            goto LABEL_254;
          }
          if (*(void *)a3 <= (unint64_t)v37 || *v37 != 50) {
            goto LABEL_187;
          }
        }
      case 7u:
        if (v9 == 58)
        {
          long long v44 = (unsigned int *)(a1 + 144);
LABEL_174:
          v69 = (char *)sub_188C2CC(v44, (unsigned __int8 *)v8, (uint64_t)a3);
          goto LABEL_186;
        }
        if (v9 != 56) {
          goto LABEL_241;
        }
        int v139 = sub_110DAD8((uint64_t *)&v153);
        sub_13DD524(a1, v139);
        goto LABEL_239;
      case 8u:
        if (v9 == 66)
        {
          long long v44 = (unsigned int *)(a1 + 168);
          goto LABEL_174;
        }
        if (v9 != 64) {
          goto LABEL_241;
        }
        int v140 = sub_110DAD8((uint64_t *)&v153);
        sub_13DD594(a1, v140);
        goto LABEL_239;
      case 0xAu:
        if (v9 != 82) {
          goto LABEL_241;
        }
        int v45 = v8 - 1;
        while (1)
        {
          uint64_t v46 = (unsigned __int8 *)(v45 + 1);
          v153 = v45 + 1;
          int v47 = *(_DWORD **)(a1 + 208);
          if (v47 && (uint64_t v48 = *(int *)(a1 + 200), (int)v48 < *v47))
          {
            *(_DWORD *)(a1 + 200) = v48 + 1;
            uint64_t v49 = *(void *)&v47[2 * v48 + 2];
          }
          else
          {
            uint64_t v50 = sub_13D9608(*(void *)(a1 + 192));
            uint64_t v49 = sub_188CDC8(a1 + 192, v50);
            uint64_t v46 = (unsigned __int8 *)v153;
          }
          int v45 = (char *)sub_11AB844(a3, v49, v46);
          v153 = v45;
          if (!v45) {
            goto LABEL_254;
          }
          if (*(void *)a3 <= (unint64_t)v45 || *v45 != 82) {
            goto LABEL_187;
          }
        }
      case 0xBu:
        if (v9 != 90) {
          goto LABEL_241;
        }
        uint64_t v51 = v8 - 1;
        while (1)
        {
          int v52 = (unsigned __int8 *)(v51 + 1);
          v153 = v51 + 1;
          BOOL v53 = *(_DWORD **)(a1 + 232);
          if (v53 && (uint64_t v54 = *(int *)(a1 + 224), (int)v54 < *v53))
          {
            *(_DWORD *)(a1 + 224) = v54 + 1;
            uint64_t v55 = *(void *)&v53[2 * v54 + 2];
          }
          else
          {
            uint64_t v56 = sub_13D9608(*(void *)(a1 + 216));
            uint64_t v55 = sub_188CDC8(a1 + 216, v56);
            int v52 = (unsigned __int8 *)v153;
          }
          uint64_t v51 = (char *)sub_11AB844(a3, v55, v52);
          v153 = v51;
          if (!v51) {
            goto LABEL_254;
          }
          if (*(void *)a3 <= (unint64_t)v51 || *v51 != 90) {
            goto LABEL_187;
          }
        }
      case 0xCu:
        if (v9 != 98) {
          goto LABEL_241;
        }
        v57 = v8 - 1;
        while (1)
        {
          v58 = (unsigned __int8 *)(v57 + 1);
          v153 = v57 + 1;
          v59 = *(_DWORD **)(a1 + 256);
          if (v59 && (uint64_t v60 = *(int *)(a1 + 248), (int)v60 < *v59))
          {
            *(_DWORD *)(a1 + 248) = v60 + 1;
            uint64_t v61 = *(void *)&v59[2 * v60 + 2];
          }
          else
          {
            uint64_t v62 = sub_13D9608(*(void *)(a1 + 240));
            uint64_t v61 = sub_188CDC8(a1 + 240, v62);
            v58 = (unsigned __int8 *)v153;
          }
          v57 = (char *)sub_11AB844(a3, v61, v58);
          v153 = v57;
          if (!v57) {
            goto LABEL_254;
          }
          if (*(void *)a3 <= (unint64_t)v57 || *v57 != 98) {
            goto LABEL_187;
          }
        }
      case 0xDu:
        if (v9 != 104) {
          goto LABEL_241;
        }
        v63 = v8 + 1;
        int v64 = *v8;
        v152 |= 0x80u;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_101;
        }
        int v65 = *v63;
        int v64 = v64 + (v65 << 7) - 128;
        if (v65 < 0)
        {
          v129 = (char *)sub_188C0D0((uint64_t)v8, v64);
          v153 = v129;
          *(_DWORD *)(a1 + 508) = v130;
          if (!v129) {
            goto LABEL_254;
          }
        }
        else
        {
          v63 = v8 + 2;
LABEL_101:
          v153 = v63;
          *(_DWORD *)(a1 + 508) = v64;
        }
        goto LABEL_187;
      case 0xEu:
        if (v9 == 114)
        {
          long long v44 = (unsigned int *)(a1 + 264);
          goto LABEL_174;
        }
        if (v9 != 112) {
          goto LABEL_241;
        }
        int v141 = sub_110DAD8((uint64_t *)&v153);
        sub_13DD604(a1, v141);
        goto LABEL_239;
      case 0xFu:
        if (v9 != 122) {
          goto LABEL_241;
        }
        *(_DWORD *)(a1 + 40) |= 4u;
        uint64_t v66 = *(void *)(a1 + 472);
        if (!v66)
        {
          v67 = (void *)(*v145 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v145) {
            v67 = (void *)*v67;
          }
          sub_13D9384((uint64_t)v67);
          uint64_t v66 = v68;
          *(void *)(a1 + 472) = v68;
          uint64_t v8 = v153;
        }
        v69 = (char *)sub_13A348C(a3, v66, (unsigned __int8 *)v8);
        goto LABEL_186;
      case 0x10u:
        if (v9 != 128) {
          goto LABEL_241;
        }
        v70 = v8 + 1;
        int v71 = *v8;
        v152 |= 0x100u;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_114;
        }
        int v72 = *v70;
        int v71 = v71 + (v72 << 7) - 128;
        if (v72 < 0)
        {
          v131 = (char *)sub_188C0D0((uint64_t)v8, v71);
          v153 = v131;
          *(_DWORD *)(a1 + 512) = v132;
          if (!v131) {
            goto LABEL_254;
          }
        }
        else
        {
          v70 = v8 + 2;
LABEL_114:
          v153 = v70;
          *(_DWORD *)(a1 + 512) = v71;
        }
        goto LABEL_187;
      case 0x11u:
        if (v9 != 136) {
          goto LABEL_241;
        }
        v73 = v8 + 1;
        int v74 = *v8;
        v152 |= 0x200u;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_119;
        }
        int v75 = *v73;
        int v74 = v74 + (v75 << 7) - 128;
        if (v75 < 0)
        {
          v133 = (char *)sub_188C0D0((uint64_t)v8, v74);
          v153 = v133;
          *(_DWORD *)(a1 + 516) = v134;
          if (!v133) {
            goto LABEL_254;
          }
        }
        else
        {
          v73 = v8 + 2;
LABEL_119:
          v153 = v73;
          *(_DWORD *)(a1 + 516) = v74;
        }
        goto LABEL_187;
      case 0x12u:
        if (v9 != 144) {
          goto LABEL_241;
        }
        v76 = v8 + 1;
        int v77 = *v8;
        v152 |= 0x400u;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_124;
        }
        int v78 = *v76;
        int v77 = v77 + (v78 << 7) - 128;
        if (v78 < 0)
        {
          v135 = (char *)sub_188C0D0((uint64_t)v8, v77);
          v153 = v135;
          *(_DWORD *)(a1 + 520) = v136;
          if (!v135) {
            goto LABEL_254;
          }
        }
        else
        {
          v76 = v8 + 2;
LABEL_124:
          v153 = v76;
          *(_DWORD *)(a1 + 520) = v77;
        }
        goto LABEL_187;
      case 0x13u:
        if (v9 != 152) {
          goto LABEL_241;
        }
        v79 = v8 + 1;
        int v80 = *v8;
        v152 |= 0x800u;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_129;
        }
        int v81 = *v79;
        int v80 = v80 + (v81 << 7) - 128;
        if (v81 < 0)
        {
          v137 = (char *)sub_188C0D0((uint64_t)v8, v80);
          v153 = v137;
          *(_DWORD *)(a1 + 524) = v138;
          if (!v137) {
            goto LABEL_254;
          }
        }
        else
        {
          v79 = v8 + 2;
LABEL_129:
          v153 = v79;
          *(_DWORD *)(a1 + 524) = v80;
        }
        goto LABEL_187;
      case 0x14u:
        if (v9 != 162) {
          goto LABEL_241;
        }
        v82 = v8 - 2;
        while (1)
        {
          v83 = (unsigned __int8 *)(v82 + 2);
          v153 = v82 + 2;
          v84 = *(_DWORD **)(a1 + 304);
          if (v84 && (uint64_t v85 = *(int *)(a1 + 296), (int)v85 < *v84))
          {
            *(_DWORD *)(a1 + 296) = v85 + 1;
            uint64_t v86 = *(void *)&v84[2 * v85 + 2];
          }
          else
          {
            sub_13D97FC(*v146);
            uint64_t v86 = sub_188CDC8((uint64_t)v146, v87);
            v83 = (unsigned __int8 *)v153;
          }
          v82 = (char *)sub_13A8E24(a3, v86, v83);
          v153 = v82;
          if (!v82) {
            goto LABEL_254;
          }
          if (*(void *)a3 <= (unint64_t)v82 || *(_WORD *)v82 != 418) {
            goto LABEL_187;
          }
        }
      case 0x15u:
        if (v9 != 170) {
          goto LABEL_241;
        }
        v88 = v8 - 2;
        while (1)
        {
          v89 = (unsigned __int8 *)(v88 + 2);
          v153 = v88 + 2;
          v90 = *(_DWORD **)(a1 + 328);
          if (v90 && (uint64_t v91 = *(int *)(a1 + 320), (int)v91 < *v90))
          {
            *(_DWORD *)(a1 + 320) = v91 + 1;
            uint64_t v92 = *(void *)&v90[2 * v91 + 2];
          }
          else
          {
            uint64_t v93 = sub_13D7EA8(*v147);
            uint64_t v92 = sub_188CDC8((uint64_t)v147, v93);
            v89 = (unsigned __int8 *)v153;
          }
          v88 = sub_13A9268(a3, v92, v89);
          v153 = v88;
          if (!v88) {
            goto LABEL_254;
          }
          if (*(void *)a3 <= (unint64_t)v88 || *(_WORD *)v88 != 426) {
            goto LABEL_187;
          }
        }
      case 0x16u:
        if (v9 != 178) {
          goto LABEL_241;
        }
        v94 = v8 - 2;
        while (1)
        {
          v95 = (unsigned __int8 *)(v94 + 2);
          v153 = v94 + 2;
          v96 = *(_DWORD **)(a1 + 352);
          if (v96 && (uint64_t v97 = *(int *)(a1 + 344), (int)v97 < *v96))
          {
            *(_DWORD *)(a1 + 344) = v97 + 1;
            uint64_t v98 = *(void *)&v96[2 * v97 + 2];
          }
          else
          {
            uint64_t v99 = sub_13D7FC0(*v148);
            uint64_t v98 = sub_188CDC8((uint64_t)v148, v99);
            v95 = (unsigned __int8 *)v153;
          }
          v94 = sub_13A92F8(a3, v98, v95);
          v153 = v94;
          if (!v94) {
            goto LABEL_254;
          }
          if (*(void *)a3 <= (unint64_t)v94 || *(_WORD *)v94 != 434) {
            goto LABEL_187;
          }
        }
      case 0x17u:
        if (v9 != 186) {
          goto LABEL_241;
        }
        *(_DWORD *)(a1 + 40) |= 8u;
        uint64_t v100 = *(void *)(a1 + 480);
        if (v100) {
          goto LABEL_171;
        }
        v101 = (void *)(*v145 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v145) {
          v101 = (void *)*v101;
        }
        sub_13D8414((uint64_t)v101);
        uint64_t v100 = v102;
        *(void *)(a1 + 480) = v102;
        goto LABEL_170;
      case 0x18u:
        if (v9 != 194) {
          goto LABEL_241;
        }
        *(_DWORD *)(a1 + 40) |= 0x10u;
        uint64_t v100 = *(void *)(a1 + 488);
        if (v100) {
          goto LABEL_171;
        }
        v103 = (void *)(*v145 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v145) {
          v103 = (void *)*v103;
        }
        sub_13D8414((uint64_t)v103);
        uint64_t v100 = v104;
        *(void *)(a1 + 488) = v104;
LABEL_170:
        uint64_t v8 = v153;
LABEL_171:
        v69 = (char *)sub_1392098(a3, v100, (unsigned __int8 *)v8);
        goto LABEL_186;
      case 0x19u:
        if (v9 == 202)
        {
          long long v44 = (unsigned int *)(a1 + 360);
          goto LABEL_174;
        }
        if (v9 == 200)
        {
          int v142 = sub_110DAD8((uint64_t *)&v153);
          sub_13DD678(a1, v142);
LABEL_239:
          if (!v153) {
            goto LABEL_254;
          }
LABEL_187:
          if (sub_11947B8((uint64_t)a3, &v153, a3[11].i32[1])) {
            goto LABEL_3;
          }
          continue;
        }
LABEL_241:
        if (v9) {
          BOOL v143 = (v9 & 7) == 4;
        }
        else {
          BOOL v143 = 1;
        }
        if (!v143)
        {
          if (v9 - 8000 < 0x648 || v9 - 80008 <= 0x31F)
          {
            v69 = (char *)sub_18859DC((uint64_t **)(a1 + 16), v9, v8, (uint64_t)&off_2536A68, v145, a3);
          }
          else
          {
            if (*v145)
            {
              v144 = (std::string *)((*v145 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              v144 = (std::string *)sub_188DBD8(v145);
              uint64_t v8 = v153;
            }
            v69 = (char *)sub_1885AC0(v9, v144, v8, a3);
          }
LABEL_186:
          v153 = v69;
          if (!v69) {
            goto LABEL_254;
          }
          goto LABEL_187;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_254:
        }
          v153 = 0;
LABEL_3:
        *(_DWORD *)(a1 + 40) |= v152;
        return v153;
      case 0x1Au:
        if (v9 != 210) {
          goto LABEL_241;
        }
        *(_DWORD *)(a1 + 40) |= 0x20u;
        uint64_t v105 = *(void *)(a1 + 496);
        if (!v105)
        {
          v106 = (void *)(*v145 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v145) {
            v106 = (void *)*v106;
          }
          uint64_t v105 = sub_13D8BF8((uint64_t)v106);
          *(void *)(a1 + 496) = v105;
          uint64_t v8 = v153;
        }
        v69 = sub_13DD6EC(a3, v105, (unsigned __int8 *)v8);
        goto LABEL_186;
      case 0x1Bu:
        if (v9 != 218) {
          goto LABEL_241;
        }
        *(_DWORD *)(a1 + 40) |= 2u;
        uint64_t v107 = *(void *)(a1 + 8);
        unint64_t v13 = (uint64_t *)(v107 & 0xFFFFFFFFFFFFFFFCLL);
        if (v107) {
          unint64_t v13 = (uint64_t *)*v13;
        }
        uint64_t v14 = (void *)(a1 + 464);
LABEL_185:
        v108 = (std::string *)sub_1880F84(v14, v13);
        v69 = (char *)sub_188C244(v108, v153, (uint64_t)a3);
        goto LABEL_186;
      case 0x1Cu:
        if (v9 != 226) {
          goto LABEL_241;
        }
        v109 = v8 - 2;
        while (1)
        {
          v110 = (unsigned __int8 *)(v109 + 2);
          v153 = v109 + 2;
          v111 = *(_DWORD **)(a1 + 400);
          if (v111 && (uint64_t v112 = *(int *)(a1 + 392), (int)v112 < *v111))
          {
            *(_DWORD *)(a1 + 392) = v112 + 1;
            uint64_t v113 = *(void *)&v111[2 * v112 + 2];
          }
          else
          {
            uint64_t v114 = sub_13D6194(*v149);
            uint64_t v113 = sub_188CDC8((uint64_t)v149, v114);
            v110 = (unsigned __int8 *)v153;
          }
          v109 = sub_13A950C(a3, v113, v110);
          v153 = v109;
          if (!v109) {
            goto LABEL_254;
          }
          if (*(void *)a3 <= (unint64_t)v109 || *(_WORD *)v109 != 482) {
            goto LABEL_187;
          }
        }
      case 0x1Du:
        if (v9 != 234) {
          goto LABEL_241;
        }
        v115 = v8 - 2;
        while (1)
        {
          v116 = (unsigned __int8 *)(v115 + 2);
          v153 = v115 + 2;
          v117 = *(_DWORD **)(a1 + 424);
          if (v117 && (uint64_t v118 = *(int *)(a1 + 416), (int)v118 < *v117))
          {
            *(_DWORD *)(a1 + 416) = v118 + 1;
            uint64_t v119 = *(void *)&v117[2 * v118 + 2];
          }
          else
          {
            sub_13D7104(*v150);
            uint64_t v119 = sub_188CDC8((uint64_t)v150, v120);
            v116 = (unsigned __int8 *)v153;
          }
          v115 = sub_138DEA0(a3, v119, v116);
          v153 = v115;
          if (!v115) {
            goto LABEL_254;
          }
          if (*(void *)a3 <= (unint64_t)v115 || *(_WORD *)v115 != 490) {
            goto LABEL_187;
          }
        }
      case 0x1Eu:
        if (v9 != 242) {
          goto LABEL_241;
        }
        v121 = v8 - 2;
        while (1)
        {
          v122 = (unsigned __int8 *)(v121 + 2);
          v153 = v121 + 2;
          v123 = *(_DWORD **)(a1 + 448);
          if (v123 && (uint64_t v124 = *(int *)(a1 + 440), (int)v124 < *v123))
          {
            *(_DWORD *)(a1 + 440) = v124 + 1;
            uint64_t v125 = *(void *)&v123[2 * v124 + 2];
          }
          else
          {
            uint64_t v126 = sub_13D6194(*v151);
            uint64_t v125 = sub_188CDC8((uint64_t)v151, v126);
            v122 = (unsigned __int8 *)v153;
          }
          v121 = sub_13A950C(a3, v125, v122);
          v153 = v121;
          if (!v121) {
            goto LABEL_254;
          }
          if (*(void *)a3 <= (unint64_t)v121 || *(_WORD *)v121 != 498) {
            goto LABEL_187;
          }
        }
      default:
        goto LABEL_241;
    }
  }
}

char *sub_13DD494(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_13DB124(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

void sub_13DD524(uint64_t a1, int a2)
{
  uint64_t v5 = *(unsigned int *)(a1 + 144);
  uint64_t v4 = (_DWORD *)(a1 + 144);
  if (v5 == *(_DWORD *)(a1 + 148))
  {
    int v6 = v5 + 1;
    sub_188C80C((unsigned int *)(a1 + 144), v5 + 1);
    *(_DWORD *)(*(void *)(a1 + 152) + 4 * v5) = a2;
  }
  else
  {
    *(_DWORD *)(*(void *)(a1 + 152) + 4 * v5) = a2;
    int v6 = v5 + 1;
  }
  _DWORD *v4 = v6;
}

void sub_13DD594(uint64_t a1, int a2)
{
  uint64_t v5 = *(unsigned int *)(a1 + 168);
  uint64_t v4 = (_DWORD *)(a1 + 168);
  if (v5 == *(_DWORD *)(a1 + 172))
  {
    int v6 = v5 + 1;
    sub_188C80C((unsigned int *)(a1 + 168), v5 + 1);
    *(_DWORD *)(*(void *)(a1 + 176) + 4 * v5) = a2;
  }
  else
  {
    *(_DWORD *)(*(void *)(a1 + 176) + 4 * v5) = a2;
    int v6 = v5 + 1;
  }
  _DWORD *v4 = v6;
}

void sub_13DD604(uint64_t a1, int a2)
{
  uint64_t v4 = (_DWORD *)(a1 + 264);
  uint64_t v5 = *(unsigned int *)(a1 + 264);
  if (v5 == *(_DWORD *)(a1 + 268))
  {
    int v6 = v5 + 1;
    sub_188C80C((unsigned int *)(a1 + 264), v5 + 1);
    *(_DWORD *)(*(void *)(a1 + 272) + 4 * v5) = a2;
  }
  else
  {
    *(_DWORD *)(*(void *)(a1 + 272) + 4 * v5) = a2;
    int v6 = v5 + 1;
  }
  _DWORD *v4 = v6;
}

void sub_13DD678(uint64_t a1, int a2)
{
  uint64_t v4 = (_DWORD *)(a1 + 360);
  uint64_t v5 = *(unsigned int *)(a1 + 360);
  if (v5 == *(_DWORD *)(a1 + 364))
  {
    int v6 = v5 + 1;
    sub_188C80C((unsigned int *)(a1 + 360), v5 + 1);
    *(_DWORD *)(*(void *)(a1 + 368) + 4 * v5) = a2;
  }
  else
  {
    *(_DWORD *)(*(void *)(a1 + 368) + 4 * v5) = a2;
    int v6 = v5 + 1;
  }
  _DWORD *v4 = v6;
}

char *sub_13DD6EC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_13A1C14(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_13DD77C(uint64_t a1, char *a2, unint64_t *a3)
{
  uint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 456) & 0xFFFFFFFFFFFFFFFELL), a2);
  }
  int v7 = *(_DWORD *)(a1 + 56);
  if (v7)
  {
    for (int i = 0; i != v7; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v9 = *(void *)(*(void *)(a1 + 64) + 8 * i + 8);
      char *v4 = 18;
      unsigned int v10 = *(_DWORD *)(v9 + 44);
      v4[1] = v10;
      if (v10 > 0x7F) {
        unsigned int v11 = sub_188A9CC(v10, v4 + 1);
      }
      else {
        unsigned int v11 = v4 + 2;
      }
      uint64_t v4 = sub_13DB620(v9, v11, a3);
    }
  }
  uint64_t v12 = *(unsigned int *)(a1 + 80);
  if ((int)v12 >= 1)
  {
    uint64_t v13 = 0;
    uint64_t v14 = 8 * v12;
    do
    {
      uint64_t v4 = (char *)sub_125CE58(a3, 3, *(void *)(*(void *)(a1 + 88) + v13 + 8), v4);
      v13 += 8;
    }
    while (v14 != v13);
  }
  if ((v6 & 0x40) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v15 = *(unsigned char *)(a1 + 504);
    char *v4 = 32;
    v4[1] = v15;
    v4 += 2;
  }
  int v16 = *(_DWORD *)(a1 + 104);
  if (v16)
  {
    for (int j = 0; j != v16; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v18 = *(void *)(*(void *)(a1 + 112) + 8 * j + 8);
      char *v4 = 42;
      unsigned int v19 = *(_DWORD *)(v18 + 48);
      v4[1] = v19;
      if (v19 > 0x7F) {
        uint64_t v20 = sub_188A9CC(v19, v4 + 1);
      }
      else {
        uint64_t v20 = v4 + 2;
      }
      uint64_t v4 = sub_13A962C(v18, v20, a3);
    }
  }
  uint64_t v21 = *(unsigned int *)(a1 + 128);
  if ((int)v21 >= 1)
  {
    uint64_t v22 = 0;
    uint64_t v23 = 8 * v21;
    do
    {
      uint64_t v4 = (char *)sub_125CE58(a3, 6, *(void *)(*(void *)(a1 + 136) + v22 + 8), v4);
      v22 += 8;
    }
    while (v23 != v22);
  }
  unsigned int v24 = *(_DWORD *)(a1 + 160);
  if ((int)v24 > 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char *v4 = 58;
    uint64_t v25 = v4 + 1;
    if (v24 >= 0x80)
    {
      do
      {
        *v25++ = v24 | 0x80;
        unsigned int v134 = v24 >> 14;
        v24 >>= 7;
      }
      while (v134);
      uint64_t v4 = v25 - 1;
    }
    v4 += 2;
    *uint64_t v25 = v24;
    uint64_t v26 = *(unsigned int **)(a1 + 152);
    uint64_t v27 = &v26[*(int *)(a1 + 144)];
    do
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unsigned int v29 = *v26++;
      unsigned int v28 = v29;
      char *v4 = v29;
      if (v29 > 0x7F)
      {
        char *v4 = v28 | 0x80;
        unsigned int v30 = v28 >> 7;
        v4[1] = v28 >> 7;
        v4 += 2;
        if (v28 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unsigned int v31 = v30 >> 14;
            v30 >>= 7;
            *v4++ = v30;
          }
          while (v31);
        }
      }
      else
      {
        ++v4;
      }
    }
    while (v26 < v27);
  }
  unsigned int v32 = *(_DWORD *)(a1 + 184);
  if ((int)v32 >= 1)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char *v4 = 66;
    uint64_t v33 = v4 + 1;
    if (v32 >= 0x80)
    {
      do
      {
        *v33++ = v32 | 0x80;
        unsigned int v135 = v32 >> 14;
        v32 >>= 7;
      }
      while (v135);
      uint64_t v4 = v33 - 1;
    }
    v4 += 2;
    *uint64_t v33 = v32;
    uint64_t v34 = *(unsigned int **)(a1 + 176);
    uint64_t v35 = &v34[*(int *)(a1 + 168)];
    do
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unsigned int v37 = *v34++;
      unsigned int v36 = v37;
      char *v4 = v37;
      if (v37 > 0x7F)
      {
        char *v4 = v36 | 0x80;
        unsigned int v38 = v36 >> 7;
        v4[1] = v36 >> 7;
        v4 += 2;
        if (v36 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unsigned int v39 = v38 >> 14;
            v38 >>= 7;
            *v4++ = v38;
          }
          while (v39);
        }
      }
      else
      {
        ++v4;
      }
    }
    while (v34 < v35);
  }
  int v40 = *(_DWORD *)(a1 + 200);
  if (v40)
  {
    for (int k = 0; k != v40; ++k)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v42 = *(void *)(*(void *)(a1 + 208) + 8 * k + 8);
      char *v4 = 82;
      unsigned int v43 = *(_DWORD *)(v42 + 44);
      v4[1] = v43;
      if (v43 > 0x7F) {
        long long v44 = sub_188A9CC(v43, v4 + 1);
      }
      else {
        long long v44 = v4 + 2;
      }
      uint64_t v4 = sub_13BA104(v42, v44, a3);
    }
  }
  int v45 = *(_DWORD *)(a1 + 224);
  if (v45)
  {
    for (int m = 0; m != v45; ++m)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v47 = *(void *)(*(void *)(a1 + 232) + 8 * m + 8);
      char *v4 = 90;
      unsigned int v48 = *(_DWORD *)(v47 + 44);
      v4[1] = v48;
      if (v48 > 0x7F) {
        uint64_t v49 = sub_188A9CC(v48, v4 + 1);
      }
      else {
        uint64_t v49 = v4 + 2;
      }
      uint64_t v4 = sub_13BA104(v47, v49, a3);
    }
  }
  int v50 = *(_DWORD *)(a1 + 248);
  if (v50)
  {
    for (int n = 0; n != v50; ++n)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v52 = *(void *)(*(void *)(a1 + 256) + 8 * n + 8);
      char *v4 = 98;
      unsigned int v53 = *(_DWORD *)(v52 + 44);
      v4[1] = v53;
      if (v53 > 0x7F) {
        uint64_t v54 = sub_188A9CC(v53, v4 + 1);
      }
      else {
        uint64_t v54 = v4 + 2;
      }
      uint64_t v4 = sub_13BA104(v52, v54, a3);
    }
  }
  if ((v6 & 0x80) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v55 = *(_DWORD *)(a1 + 508);
    char *v4 = 104;
    v4[1] = v55;
    if (v55 > 0x7F)
    {
      v4[1] = v55 | 0x80;
      unsigned int v56 = v55 >> 7;
      v4[2] = v55 >> 7;
      v4 += 3;
      if (v55 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v57 = v56 >> 14;
          v56 >>= 7;
          *v4++ = v56;
        }
        while (v57);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  unsigned int v58 = *(_DWORD *)(a1 + 280);
  if ((int)v58 >= 1)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char *v4 = 114;
    v59 = v4 + 1;
    if (v58 >= 0x80)
    {
      do
      {
        *v59++ = v58 | 0x80;
        unsigned int v136 = v58 >> 14;
        v58 >>= 7;
      }
      while (v136);
      uint64_t v4 = v59 - 1;
    }
    v4 += 2;
    unsigned char *v59 = v58;
    uint64_t v60 = *(unsigned int **)(a1 + 272);
    uint64_t v61 = &v60[*(int *)(a1 + 264)];
    do
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unsigned int v63 = *v60++;
      unsigned int v62 = v63;
      char *v4 = v63;
      if (v63 > 0x7F)
      {
        char *v4 = v62 | 0x80;
        unsigned int v64 = v62 >> 7;
        v4[1] = v62 >> 7;
        v4 += 2;
        if (v62 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unsigned int v65 = v64 >> 14;
            v64 >>= 7;
            *v4++ = v64;
          }
          while (v65);
        }
      }
      else
      {
        ++v4;
      }
    }
    while (v60 < v61);
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v66 = *(void *)(a1 + 472);
    char *v4 = 122;
    unsigned int v67 = *(_DWORD *)(v66 + 20);
    v4[1] = v67;
    if (v67 > 0x7F) {
      uint64_t v68 = sub_188A9CC(v67, v4 + 1);
    }
    else {
      uint64_t v68 = v4 + 2;
    }
    uint64_t v4 = sub_13B5938(v66, v68, a3);
  }
  if ((v6 & 0x100) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v69 = *(_DWORD *)(a1 + 512);
    *(_WORD *)uint64_t v4 = 384;
    v4[2] = v69;
    if (v69 > 0x7F)
    {
      v4[2] = v69 | 0x80;
      unsigned int v70 = v69 >> 7;
      v4[3] = v69 >> 7;
      v4 += 4;
      if (v69 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v71 = v70 >> 14;
          v70 >>= 7;
          *v4++ = v70;
        }
        while (v71);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if ((v6 & 0x200) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v72 = *(_DWORD *)(a1 + 516);
    *(_WORD *)uint64_t v4 = 392;
    v4[2] = v72;
    if (v72 > 0x7F)
    {
      v4[2] = v72 | 0x80;
      unsigned int v73 = v72 >> 7;
      v4[3] = v72 >> 7;
      v4 += 4;
      if (v72 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v74 = v73 >> 14;
          v73 >>= 7;
          *v4++ = v73;
        }
        while (v74);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if ((v6 & 0x400) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v75 = *(_DWORD *)(a1 + 520);
    *(_WORD *)uint64_t v4 = 400;
    v4[2] = v75;
    if (v75 > 0x7F)
    {
      v4[2] = v75 | 0x80;
      unsigned int v76 = v75 >> 7;
      v4[3] = v75 >> 7;
      v4 += 4;
      if (v75 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v77 = v76 >> 14;
          v76 >>= 7;
          *v4++ = v76;
        }
        while (v77);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if ((v6 & 0x800) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v78 = *(_DWORD *)(a1 + 524);
    *(_WORD *)uint64_t v4 = 408;
    v4[2] = v78;
    if (v78 > 0x7F)
    {
      v4[2] = v78 | 0x80;
      unsigned int v79 = v78 >> 7;
      v4[3] = v78 >> 7;
      v4 += 4;
      if (v78 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v80 = v79 >> 14;
          v79 >>= 7;
          *v4++ = v79;
        }
        while (v80);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  int v81 = *(_DWORD *)(a1 + 296);
  if (v81)
  {
    for (iint i = 0; ii != v81; ++ii)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v83 = *(void *)(*(void *)(a1 + 304) + 8 * ii + 8);
      *(_WORD *)uint64_t v4 = 418;
      unsigned int v84 = *(_DWORD *)(v83 + 20);
      v4[2] = v84;
      if (v84 > 0x7F) {
        uint64_t v85 = sub_188A9CC(v84, v4 + 2);
      }
      else {
        uint64_t v85 = v4 + 3;
      }
      uint64_t v4 = sub_13BDB20(v83, (unint64_t)v85, a3);
    }
  }
  int v86 = *(_DWORD *)(a1 + 320);
  if (v86)
  {
    for (jint j = 0; jj != v86; ++jj)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v88 = *(void *)(*(void *)(a1 + 328) + 8 * jj + 8);
      *(_WORD *)uint64_t v4 = 426;
      unsigned int v89 = *(_DWORD *)(v88 + 40);
      v4[2] = v89;
      if (v89 > 0x7F) {
        v90 = sub_188A9CC(v89, v4 + 2);
      }
      else {
        v90 = v4 + 3;
      }
      uint64_t v4 = sub_1390A84(v88, v90, a3);
    }
  }
  int v91 = *(_DWORD *)(a1 + 344);
  if (v91)
  {
    for (kint k = 0; kk != v91; ++kk)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v93 = *(void *)(*(void *)(a1 + 352) + 8 * kk + 8);
      *(_WORD *)uint64_t v4 = 434;
      unsigned int v94 = *(_DWORD *)(v93 + 40);
      v4[2] = v94;
      if (v94 > 0x7F) {
        v95 = sub_188A9CC(v94, v4 + 2);
      }
      else {
        v95 = v4 + 3;
      }
      uint64_t v4 = sub_13915E4(v93, v95, a3);
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v96 = *(void *)(a1 + 480);
    *(_WORD *)uint64_t v4 = 442;
    unsigned int v97 = *(_DWORD *)(v96 + 20);
    v4[2] = v97;
    if (v97 > 0x7F) {
      uint64_t v98 = sub_188A9CC(v97, v4 + 2);
    }
    else {
      uint64_t v98 = v4 + 3;
    }
    uint64_t v4 = sub_1396D20(v96, (unint64_t)v98, a3);
  }
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v99 = *(void *)(a1 + 488);
    *(_WORD *)uint64_t v4 = 450;
    unsigned int v100 = *(_DWORD *)(v99 + 20);
    v4[2] = v100;
    if (v100 > 0x7F) {
      v101 = sub_188A9CC(v100, v4 + 2);
    }
    else {
      v101 = v4 + 3;
    }
    uint64_t v4 = sub_1396D20(v99, (unint64_t)v101, a3);
  }
  unsigned int v102 = *(_DWORD *)(a1 + 376);
  if ((int)v102 >= 1)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    *(_WORD *)uint64_t v4 = 458;
    v103 = v4 + 2;
    if (v102 >= 0x80)
    {
      do
      {
        *v103++ = v102 | 0x80;
        unsigned int v104 = v102 >> 7;
        unsigned int v137 = v102 >> 14;
        v102 >>= 7;
      }
      while (v137);
    }
    else
    {
      LOBYTE(v104) = v102;
    }
    unsigned char *v103 = v104;
    uint64_t v4 = v103 + 1;
    uint64_t v105 = *(unsigned int **)(a1 + 368);
    v106 = &v105[*(int *)(a1 + 360)];
    do
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unsigned int v108 = *v105++;
      unsigned int v107 = v108;
      char *v4 = v108;
      if (v108 > 0x7F)
      {
        char *v4 = v107 | 0x80;
        unsigned int v109 = v107 >> 7;
        v4[1] = v107 >> 7;
        v4 += 2;
        if (v107 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unsigned int v110 = v109 >> 14;
            v109 >>= 7;
            *v4++ = v109;
          }
          while (v110);
        }
      }
      else
      {
        ++v4;
      }
    }
    while (v105 < v106);
  }
  if ((v6 & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v111 = *(void *)(a1 + 496);
    *(_WORD *)uint64_t v4 = 466;
    unsigned int v112 = *(_DWORD *)(v111 + 20);
    v4[2] = v112;
    if (v112 > 0x7F) {
      uint64_t v113 = sub_188A9CC(v112, v4 + 2);
    }
    else {
      uint64_t v113 = v4 + 3;
    }
    uint64_t v4 = sub_13A1E24(v111, (unint64_t)v113, a3);
  }
  if ((v6 & 2) != 0) {
    uint64_t v4 = sub_117A0AC(a3, 27, (const void **)(*(void *)(a1 + 464) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  int v114 = *(_DWORD *)(a1 + 392);
  if (v114)
  {
    for (mint m = 0; mm != v114; ++mm)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v116 = *(void *)(*(void *)(a1 + 400) + 8 * mm + 8);
      *(_WORD *)uint64_t v4 = 482;
      unsigned int v117 = *(_DWORD *)(v116 + 20);
      v4[2] = v117;
      if (v117 > 0x7F) {
        uint64_t v118 = sub_188A9CC(v117, v4 + 2);
      }
      else {
        uint64_t v118 = v4 + 3;
      }
      uint64_t v4 = sub_136BC38(v116, (unint64_t)v118, a3);
    }
  }
  int v119 = *(_DWORD *)(a1 + 416);
  if (v119)
  {
    for (nint n = 0; nn != v119; ++nn)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v121 = *(void *)(*(void *)(a1 + 424) + 8 * nn + 8);
      *(_WORD *)uint64_t v4 = 490;
      unsigned int v122 = *(_DWORD *)(v121 + 20);
      v4[2] = v122;
      if (v122 > 0x7F) {
        v123 = sub_188A9CC(v122, v4 + 2);
      }
      else {
        v123 = v4 + 3;
      }
      uint64_t v4 = sub_137FB48(v121, (unint64_t)v123, a3);
    }
  }
  int v124 = *(_DWORD *)(a1 + 440);
  if (v124)
  {
    for (int i1 = 0; i1 != v124; ++i1)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v126 = *(void *)(*(void *)(a1 + 448) + 8 * i1 + 8);
      *(_WORD *)uint64_t v4 = 498;
      unsigned int v127 = *(_DWORD *)(v126 + 20);
      v4[2] = v127;
      if (v127 > 0x7F) {
        uint64_t v128 = sub_188A9CC(v127, v4 + 2);
      }
      else {
        uint64_t v128 = v4 + 3;
      }
      uint64_t v4 = sub_136BC38(v126, (unint64_t)v128, a3);
    }
  }
  if (*(_WORD *)(a1 + 26)) {
    uint64_t v4 = sub_1886844(a1 + 16, 1000, 10101, v4, a3);
  }
  uint64_t v129 = *(void *)(a1 + 8);
  if ((v129 & 1) == 0) {
    return v4;
  }
  unint64_t v131 = v129 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v131 + 31) < 0)
  {
    int v132 = *(void **)(v131 + 8);
    uint64_t v133 = *(void *)(v131 + 16);
  }
  else
  {
    int v132 = (void *)(v131 + 8);
    LODWORD(v133) = *(unsigned __int8 *)(v131 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v133)
  {
    uint64_t v138 = (int)v133;
    memcpy(v4, v132, (int)v133);
    v4 += v138;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v132, v133, v4);
}

uint64_t sub_13DE6B0(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(int *)(a1 + 56);
  uint64_t v4 = v2 + v3;
  uint64_t v5 = *(void *)(a1 + 64);
  if (v5) {
    int v6 = (uint64_t *)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = sub_13DBAA0(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  uint64_t v10 = *(unsigned int *)(a1 + 80);
  uint64_t v11 = v4 + v10;
  if ((int)v10 >= 1)
  {
    uint64_t v12 = (uint64_t *)(*(void *)(a1 + 88) + 8);
    do
    {
      uint64_t v13 = *v12++;
      uint64_t v14 = *(unsigned __int8 *)(v13 + 23);
      uint64_t v15 = *(void *)(v13 + 8);
      if ((v14 & 0x80u) == 0) {
        uint64_t v15 = v14;
      }
      v11 += v15 + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6);
      --v10;
    }
    while (v10);
  }
  uint64_t v16 = *(int *)(a1 + 104);
  uint64_t v17 = v11 + v16;
  uint64_t v18 = *(void *)(a1 + 112);
  if (v18) {
    unsigned int v19 = (uint64_t *)(v18 + 8);
  }
  else {
    unsigned int v19 = 0;
  }
  if (v16)
  {
    uint64_t v20 = 8 * v16;
    do
    {
      uint64_t v21 = *v19++;
      uint64_t v22 = sub_13AB404(v21);
      v17 += v22 + ((9 * (__clz(v22 | 1) ^ 0x1F) + 73) >> 6);
      v20 -= 8;
    }
    while (v20);
  }
  uint64_t v23 = *(unsigned int *)(a1 + 128);
  uint64_t v24 = v17 + v23;
  if ((int)v23 >= 1)
  {
    uint64_t v25 = (uint64_t *)(*(void *)(a1 + 136) + 8);
    do
    {
      uint64_t v26 = *v25++;
      uint64_t v27 = *(unsigned __int8 *)(v26 + 23);
      uint64_t v28 = *(void *)(v26 + 8);
      if ((v27 & 0x80u) == 0) {
        uint64_t v28 = v27;
      }
      v24 += v28 + ((9 * (__clz(v28 | 1) ^ 0x1F) + 73) >> 6);
      --v23;
    }
    while (v23);
  }
  uint64_t v29 = sub_188D4F0((unsigned int *)(a1 + 144));
  uint64_t v30 = 10;
  uint64_t v31 = (9 * (__clz(v29 | 1) ^ 0x1F) + 73) >> 6;
  if ((int)v29 >= 0) {
    uint64_t v30 = v31;
  }
  uint64_t v32 = v24 + v30;
  if (v29) {
    int v33 = v29;
  }
  else {
    int v33 = 0;
  }
  if (v29) {
    uint64_t v34 = v32 + 1;
  }
  else {
    uint64_t v34 = v24;
  }
  *(_DWORD *)(a1 + 160) = v33;
  uint64_t v35 = v34 + v29;
  uint64_t v36 = sub_188D4F0((unsigned int *)(a1 + 168));
  uint64_t v37 = 10;
  uint64_t v38 = (9 * (__clz(v36 | 1) ^ 0x1F) + 73) >> 6;
  if ((int)v36 >= 0) {
    uint64_t v37 = v38;
  }
  uint64_t v39 = v35 + v37;
  if (v36) {
    int v40 = v36;
  }
  else {
    int v40 = 0;
  }
  if (v36) {
    uint64_t v41 = v39 + 1;
  }
  else {
    uint64_t v41 = v35;
  }
  *(_DWORD *)(a1 + 184) = v40;
  uint64_t v42 = *(int *)(a1 + 200);
  uint64_t v43 = v41 + v36 + v42;
  uint64_t v44 = *(void *)(a1 + 208);
  if (v44) {
    int v45 = (uint64_t *)(v44 + 8);
  }
  else {
    int v45 = 0;
  }
  if (v42)
  {
    uint64_t v46 = 8 * v42;
    do
    {
      uint64_t v47 = *v45++;
      uint64_t v48 = sub_13BA868(v47);
      v43 += v48 + ((9 * (__clz(v48 | 1) ^ 0x1F) + 73) >> 6);
      v46 -= 8;
    }
    while (v46);
  }
  uint64_t v49 = *(int *)(a1 + 224);
  uint64_t v50 = v43 + v49;
  uint64_t v51 = *(void *)(a1 + 232);
  if (v51) {
    uint64_t v52 = (uint64_t *)(v51 + 8);
  }
  else {
    uint64_t v52 = 0;
  }
  if (v49)
  {
    uint64_t v53 = 8 * v49;
    do
    {
      uint64_t v54 = *v52++;
      uint64_t v55 = sub_13BA868(v54);
      v50 += v55 + ((9 * (__clz(v55 | 1) ^ 0x1F) + 73) >> 6);
      v53 -= 8;
    }
    while (v53);
  }
  uint64_t v56 = *(int *)(a1 + 248);
  uint64_t v57 = v50 + v56;
  uint64_t v58 = *(void *)(a1 + 256);
  if (v58) {
    v59 = (uint64_t *)(v58 + 8);
  }
  else {
    v59 = 0;
  }
  if (v56)
  {
    uint64_t v60 = 8 * v56;
    do
    {
      uint64_t v61 = *v59++;
      uint64_t v62 = sub_13BA868(v61);
      v57 += v62 + ((9 * (__clz(v62 | 1) ^ 0x1F) + 73) >> 6);
      v60 -= 8;
    }
    while (v60);
  }
  uint64_t v63 = sub_188D4F0((unsigned int *)(a1 + 264));
  uint64_t v64 = 10;
  uint64_t v65 = (9 * (__clz(v63 | 1) ^ 0x1F) + 73) >> 6;
  if ((int)v63 >= 0) {
    uint64_t v64 = v65;
  }
  uint64_t v66 = v57 + v64;
  if (v63) {
    int v67 = v63;
  }
  else {
    int v67 = 0;
  }
  if (v63) {
    uint64_t v68 = v66 + 1;
  }
  else {
    uint64_t v68 = v57;
  }
  *(_DWORD *)(a1 + 280) = v67;
  uint64_t v69 = *(int *)(a1 + 296);
  uint64_t v70 = v68 + v63 + 2 * v69;
  uint64_t v71 = *(void *)(a1 + 304);
  if (v71) {
    unsigned int v72 = (uint64_t *)(v71 + 8);
  }
  else {
    unsigned int v72 = 0;
  }
  if (v69)
  {
    uint64_t v73 = 8 * v69;
    do
    {
      uint64_t v74 = *v72++;
      uint64_t v75 = sub_13BE050(v74);
      v70 += v75 + ((9 * (__clz(v75 | 1) ^ 0x1F) + 73) >> 6);
      v73 -= 8;
    }
    while (v73);
  }
  uint64_t v76 = *(int *)(a1 + 320);
  uint64_t v77 = v70 + 2 * v76;
  uint64_t v78 = *(void *)(a1 + 328);
  if (v78) {
    unsigned int v79 = (uint64_t *)(v78 + 8);
  }
  else {
    unsigned int v79 = 0;
  }
  if (v76)
  {
    uint64_t v80 = 8 * v76;
    do
    {
      uint64_t v81 = *v79++;
      uint64_t v82 = sub_1390BC8(v81);
      v77 += v82 + ((9 * (__clz(v82 | 1) ^ 0x1F) + 73) >> 6);
      v80 -= 8;
    }
    while (v80);
  }
  uint64_t v83 = *(int *)(a1 + 344);
  uint64_t v84 = v77 + 2 * v83;
  uint64_t v85 = *(void *)(a1 + 352);
  if (v85) {
    int v86 = (uint64_t *)(v85 + 8);
  }
  else {
    int v86 = 0;
  }
  if (v83)
  {
    uint64_t v87 = 8 * v83;
    do
    {
      uint64_t v88 = *v86++;
      uint64_t v89 = sub_1391728(v88);
      v84 += v89 + ((9 * (__clz(v89 | 1) ^ 0x1F) + 73) >> 6);
      v87 -= 8;
    }
    while (v87);
  }
  uint64_t v90 = sub_188D4F0((unsigned int *)(a1 + 360));
  uint64_t v91 = 10;
  uint64_t v92 = (9 * (__clz(v90 | 1) ^ 0x1F) + 73) >> 6;
  if ((int)v90 >= 0) {
    uint64_t v91 = v92;
  }
  uint64_t v93 = v84 + v91 + 2;
  if (v90) {
    int v94 = v90;
  }
  else {
    int v94 = 0;
  }
  if (!v90) {
    uint64_t v93 = v84;
  }
  *(_DWORD *)(a1 + 376) = v94;
  uint64_t v95 = *(int *)(a1 + 392);
  uint64_t v96 = v93 + v90 + 2 * v95;
  uint64_t v97 = *(void *)(a1 + 400);
  if (v97) {
    uint64_t v98 = (uint64_t *)(v97 + 8);
  }
  else {
    uint64_t v98 = 0;
  }
  if (v95)
  {
    uint64_t v99 = 8 * v95;
    do
    {
      uint64_t v100 = *v98++;
      uint64_t v101 = sub_136C000(v100);
      v96 += v101 + ((9 * (__clz(v101 | 1) ^ 0x1F) + 73) >> 6);
      v99 -= 8;
    }
    while (v99);
  }
  uint64_t v102 = *(int *)(a1 + 416);
  uint64_t v103 = v96 + 2 * v102;
  uint64_t v104 = *(void *)(a1 + 424);
  if (v104) {
    uint64_t v105 = (uint64_t *)(v104 + 8);
  }
  else {
    uint64_t v105 = 0;
  }
  if (v102)
  {
    uint64_t v106 = 8 * v102;
    do
    {
      uint64_t v107 = *v105++;
      uint64_t v108 = sub_1380528(v107);
      v103 += v108 + ((9 * (__clz(v108 | 1) ^ 0x1F) + 73) >> 6);
      v106 -= 8;
    }
    while (v106);
  }
  uint64_t v109 = *(int *)(a1 + 440);
  uint64_t v110 = v103 + 2 * v109;
  uint64_t v111 = *(void *)(a1 + 448);
  if (v111) {
    unsigned int v112 = (uint64_t *)(v111 + 8);
  }
  else {
    unsigned int v112 = 0;
  }
  if (v109)
  {
    uint64_t v113 = 8 * v109;
    do
    {
      uint64_t v114 = *v112++;
      uint64_t v115 = sub_136C000(v114);
      v110 += v115 + ((9 * (__clz(v115 | 1) ^ 0x1F) + 73) >> 6);
      v113 -= 8;
    }
    while (v113);
  }
  int v116 = *(_DWORD *)(a1 + 40);
  if ((_BYTE)v116)
  {
    if (v116)
    {
      unint64_t v120 = *(void *)(a1 + 456) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v121 = *(unsigned __int8 *)(v120 + 23);
      uint64_t v122 = *(void *)(v120 + 8);
      if ((v121 & 0x80u) == 0) {
        uint64_t v122 = v121;
      }
      v110 += v122 + ((9 * (__clz(v122 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v116 & 2) == 0)
      {
LABEL_111:
        if ((v116 & 4) == 0) {
          goto LABEL_112;
        }
        goto LABEL_134;
      }
    }
    else if ((v116 & 2) == 0)
    {
      goto LABEL_111;
    }
    unint64_t v123 = *(void *)(a1 + 464) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v124 = *(unsigned __int8 *)(v123 + 23);
    uint64_t v125 = *(void *)(v123 + 8);
    if ((v124 & 0x80u) == 0) {
      uint64_t v125 = v124;
    }
    v110 += v125 + ((9 * (__clz(v125 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v116 & 4) == 0)
    {
LABEL_112:
      if ((v116 & 8) == 0) {
        goto LABEL_113;
      }
      goto LABEL_135;
    }
LABEL_134:
    uint64_t v126 = sub_13B6760(*(void *)(a1 + 472));
    v110 += v126 + ((9 * (__clz(v126 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v116 & 8) == 0)
    {
LABEL_113:
      if ((v116 & 0x10) == 0) {
        goto LABEL_114;
      }
      goto LABEL_136;
    }
LABEL_135:
    uint64_t v127 = sub_1397238(*(void *)(a1 + 480));
    v110 += v127 + ((9 * (__clz(v127 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v116 & 0x10) == 0)
    {
LABEL_114:
      if ((v116 & 0x20) == 0)
      {
LABEL_116:
        if ((v116 & 0x40) != 0) {
          v110 += 2;
        }
        if ((v116 & 0x80) != 0) {
          v110 += ((9 * (__clz(*(_DWORD *)(a1 + 508) | 1) ^ 0x1F) + 73) >> 6) + 1;
        }
        goto LABEL_120;
      }
LABEL_115:
      uint64_t v117 = sub_13A1F40(*(void *)(a1 + 496));
      v110 += v117 + ((9 * (__clz(v117 | 1) ^ 0x1F) + 73) >> 6) + 2;
      goto LABEL_116;
    }
LABEL_136:
    uint64_t v128 = sub_1397238(*(void *)(a1 + 488));
    v110 += v128 + ((9 * (__clz(v128 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v116 & 0x20) == 0) {
      goto LABEL_116;
    }
    goto LABEL_115;
  }
LABEL_120:
  if ((v116 & 0xF00) == 0) {
    goto LABEL_126;
  }
  if ((v116 & 0x100) != 0)
  {
    v110 += ((9 * (__clz(*(_DWORD *)(a1 + 512) | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v116 & 0x200) == 0)
    {
LABEL_123:
      if ((v116 & 0x400) == 0) {
        goto LABEL_124;
      }
      goto LABEL_140;
    }
  }
  else if ((v116 & 0x200) == 0)
  {
    goto LABEL_123;
  }
  v110 += ((9 * (__clz(*(_DWORD *)(a1 + 516) | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v116 & 0x400) == 0)
  {
LABEL_124:
    if ((v116 & 0x800) == 0) {
      goto LABEL_126;
    }
    goto LABEL_125;
  }
LABEL_140:
  v110 += ((9 * (__clz(*(_DWORD *)(a1 + 520) | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v116 & 0x800) != 0) {
LABEL_125:
  }
    v110 += ((9 * (__clz(*(_DWORD *)(a1 + 524) | 1) ^ 0x1F) + 73) >> 6) + 2;
LABEL_126:
  uint64_t v118 = *(void *)(a1 + 8);
  if (v118)
  {
    unint64_t v129 = v118 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v129 + 31) < 0) {
      uint64_t v130 = *(void *)(v129 + 16);
    }
    else {
      uint64_t v130 = *(unsigned __int8 *)(v129 + 31);
    }
    v110 += v130;
  }
  *(_DWORD *)(a1 + 44) = v110;
  return v110;
}

void sub_13DEEA0(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 56);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    int v6 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_148F03C((uint64_t *)(a1 + 48), v6, v5, v4, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v7 = *(_DWORD *)(a1 + 56) + v4;
    *(_DWORD *)(a1 + 56) = v7;
    uint64_t v8 = *(int **)(a1 + 64);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 80);
  if (v9)
  {
    uint64_t v10 = (const std::string **)(*(void *)(a2 + 88) + 8);
    uint64_t v11 = (std::string **)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_188FB98(a1 + 72, v11, v10, v9, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v12 = *(_DWORD *)(a1 + 80) + v9;
    *(_DWORD *)(a1 + 80) = v12;
    uint64_t v13 = *(int **)(a1 + 88);
    if (*v13 < v12) {
      int *v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 104);
  if (v14)
  {
    uint64_t v15 = (uint64_t *)(*(void *)(a2 + 112) + 8);
    uint64_t v16 = (uint64_t *)sub_188CCE4(a1 + 96, *(_DWORD *)(a2 + 104));
    sub_136818C((uint64_t *)(a1 + 96), v16, v15, v14, **(_DWORD **)(a1 + 112) - *(_DWORD *)(a1 + 104));
    int v17 = *(_DWORD *)(a1 + 104) + v14;
    *(_DWORD *)(a1 + 104) = v17;
    uint64_t v18 = *(int **)(a1 + 112);
    if (*v18 < v17) {
      *uint64_t v18 = v17;
    }
  }
  int v19 = *(_DWORD *)(a2 + 128);
  if (v19)
  {
    uint64_t v20 = (const std::string **)(*(void *)(a2 + 136) + 8);
    uint64_t v21 = (std::string **)sub_188CCE4(a1 + 120, *(_DWORD *)(a2 + 128));
    sub_188FB98(a1 + 120, v21, v20, v19, **(_DWORD **)(a1 + 136) - *(_DWORD *)(a1 + 128));
    int v22 = *(_DWORD *)(a1 + 128) + v19;
    *(_DWORD *)(a1 + 128) = v22;
    uint64_t v23 = *(int **)(a1 + 136);
    if (*v23 < v22) {
      *uint64_t v23 = v22;
    }
  }
  int v24 = *(_DWORD *)(a2 + 144);
  if (v24)
  {
    uint64_t v25 = *(int *)(a1 + 144);
    sub_188C80C((unsigned int *)(a1 + 144), v25 + v24);
    uint64_t v26 = *(void *)(a1 + 152);
    *(_DWORD *)(a1 + 144) += *(_DWORD *)(a2 + 144);
    memcpy((void *)(v26 + 4 * v25), *(const void **)(a2 + 152), 4 * *(int *)(a2 + 144));
  }
  int v27 = *(_DWORD *)(a2 + 168);
  if (v27)
  {
    uint64_t v28 = *(int *)(a1 + 168);
    sub_188C80C((unsigned int *)(a1 + 168), v28 + v27);
    uint64_t v29 = *(void *)(a1 + 176);
    *(_DWORD *)(a1 + 168) += *(_DWORD *)(a2 + 168);
    memcpy((void *)(v29 + 4 * v28), *(const void **)(a2 + 176), 4 * *(int *)(a2 + 168));
  }
  int v30 = *(_DWORD *)(a2 + 200);
  if (v30)
  {
    uint64_t v31 = (uint64_t *)(*(void *)(a2 + 208) + 8);
    uint64_t v32 = (uint64_t *)sub_188CCE4(a1 + 192, *(_DWORD *)(a2 + 200));
    sub_13694B8((uint64_t *)(a1 + 192), v32, v31, v30, **(_DWORD **)(a1 + 208) - *(_DWORD *)(a1 + 200));
    int v33 = *(_DWORD *)(a1 + 200) + v30;
    *(_DWORD *)(a1 + 200) = v33;
    uint64_t v34 = *(int **)(a1 + 208);
    if (*v34 < v33) {
      *uint64_t v34 = v33;
    }
  }
  int v35 = *(_DWORD *)(a2 + 224);
  if (v35)
  {
    uint64_t v36 = (uint64_t *)(*(void *)(a2 + 232) + 8);
    uint64_t v37 = (uint64_t *)sub_188CCE4(a1 + 216, *(_DWORD *)(a2 + 224));
    sub_13694B8((uint64_t *)(a1 + 216), v37, v36, v35, **(_DWORD **)(a1 + 232) - *(_DWORD *)(a1 + 224));
    int v38 = *(_DWORD *)(a1 + 224) + v35;
    *(_DWORD *)(a1 + 224) = v38;
    uint64_t v39 = *(int **)(a1 + 232);
    if (*v39 < v38) {
      *uint64_t v39 = v38;
    }
  }
  int v40 = *(_DWORD *)(a2 + 248);
  if (v40)
  {
    uint64_t v41 = (uint64_t *)(*(void *)(a2 + 256) + 8);
    uint64_t v42 = (uint64_t *)sub_188CCE4(a1 + 240, *(_DWORD *)(a2 + 248));
    sub_13694B8((uint64_t *)(a1 + 240), v42, v41, v40, **(_DWORD **)(a1 + 256) - *(_DWORD *)(a1 + 248));
    int v43 = *(_DWORD *)(a1 + 248) + v40;
    *(_DWORD *)(a1 + 248) = v43;
    uint64_t v44 = *(int **)(a1 + 256);
    if (*v44 < v43) {
      *uint64_t v44 = v43;
    }
  }
  int v45 = *(_DWORD *)(a2 + 264);
  if (v45)
  {
    uint64_t v46 = *(int *)(a1 + 264);
    sub_188C80C((unsigned int *)(a1 + 264), v46 + v45);
    uint64_t v47 = *(void *)(a1 + 272);
    *(_DWORD *)(a1 + 264) += *(_DWORD *)(a2 + 264);
    memcpy((void *)(v47 + 4 * v46), *(const void **)(a2 + 272), 4 * *(int *)(a2 + 264));
  }
  int v48 = *(_DWORD *)(a2 + 296);
  if (v48)
  {
    uint64_t v49 = (uint64_t *)(*(void *)(a2 + 304) + 8);
    uint64_t v50 = (uint64_t *)sub_188CCE4(a1 + 288, *(_DWORD *)(a2 + 296));
    sub_148DD24((uint64_t *)(a1 + 288), v50, v49, v48, **(_DWORD **)(a1 + 304) - *(_DWORD *)(a1 + 296));
    int v51 = *(_DWORD *)(a1 + 296) + v48;
    *(_DWORD *)(a1 + 296) = v51;
    uint64_t v52 = *(int **)(a1 + 304);
    if (*v52 < v51) {
      *uint64_t v52 = v51;
    }
  }
  int v53 = *(_DWORD *)(a2 + 320);
  if (v53)
  {
    uint64_t v54 = (uint64_t *)(*(void *)(a2 + 328) + 8);
    uint64_t v55 = (std::string **)sub_188CCE4(a1 + 312, *(_DWORD *)(a2 + 320));
    sub_148DF44((uint64_t *)(a1 + 312), v55, v54, v53, **(_DWORD **)(a1 + 328) - *(_DWORD *)(a1 + 320));
    int v56 = *(_DWORD *)(a1 + 320) + v53;
    *(_DWORD *)(a1 + 320) = v56;
    uint64_t v57 = *(int **)(a1 + 328);
    if (*v57 < v56) {
      int *v57 = v56;
    }
  }
  int v58 = *(_DWORD *)(a2 + 344);
  if (v58)
  {
    v59 = (uint64_t *)(*(void *)(a2 + 352) + 8);
    uint64_t v60 = (std::string **)sub_188CCE4(a1 + 336, *(_DWORD *)(a2 + 344));
    sub_148DFD0((uint64_t *)(a1 + 336), v60, v59, v58, **(_DWORD **)(a1 + 352) - *(_DWORD *)(a1 + 344));
    int v61 = *(_DWORD *)(a1 + 344) + v58;
    *(_DWORD *)(a1 + 344) = v61;
    uint64_t v62 = *(int **)(a1 + 352);
    if (*v62 < v61) {
      *uint64_t v62 = v61;
    }
  }
  int v63 = *(_DWORD *)(a2 + 360);
  if (v63)
  {
    uint64_t v64 = *(int *)(a1 + 360);
    sub_188C80C((unsigned int *)(a1 + 360), v64 + v63);
    uint64_t v65 = *(void *)(a1 + 368);
    *(_DWORD *)(a1 + 360) += *(_DWORD *)(a2 + 360);
    memcpy((void *)(v65 + 4 * v64), *(const void **)(a2 + 368), 4 * *(int *)(a2 + 360));
  }
  int v66 = *(_DWORD *)(a2 + 392);
  if (v66)
  {
    int v67 = (uint64_t *)(*(void *)(a2 + 400) + 8);
    uint64_t v68 = (uint64_t *)sub_188CCE4(a1 + 384, *(_DWORD *)(a2 + 392));
    sub_148E0D8((uint64_t *)(a1 + 384), v68, v67, v66, **(_DWORD **)(a1 + 400) - *(_DWORD *)(a1 + 392));
    int v69 = *(_DWORD *)(a1 + 392) + v66;
    *(_DWORD *)(a1 + 392) = v69;
    uint64_t v70 = *(int **)(a1 + 400);
    if (*v70 < v69) {
      int *v70 = v69;
    }
  }
  int v71 = *(_DWORD *)(a2 + 416);
  if (v71)
  {
    unsigned int v72 = (uint64_t *)(*(void *)(a2 + 424) + 8);
    uint64_t v73 = (uint64_t *)sub_188CCE4(a1 + 408, *(_DWORD *)(a2 + 416));
    sub_148D418((uint64_t *)(a1 + 408), v73, v72, v71, **(_DWORD **)(a1 + 424) - *(_DWORD *)(a1 + 416));
    int v74 = *(_DWORD *)(a1 + 416) + v71;
    *(_DWORD *)(a1 + 416) = v74;
    uint64_t v75 = *(int **)(a1 + 424);
    if (*v75 < v74) {
      *uint64_t v75 = v74;
    }
  }
  int v76 = *(_DWORD *)(a2 + 440);
  if (v76)
  {
    uint64_t v77 = (uint64_t *)(*(void *)(a2 + 448) + 8);
    uint64_t v78 = (uint64_t *)sub_188CCE4(a1 + 432, *(_DWORD *)(a2 + 440));
    sub_148E0D8((uint64_t *)(a1 + 432), v78, v77, v76, **(_DWORD **)(a1 + 448) - *(_DWORD *)(a1 + 440));
    int v79 = *(_DWORD *)(a1 + 440) + v76;
    *(_DWORD *)(a1 + 440) = v79;
    uint64_t v80 = *(int **)(a1 + 448);
    if (*v80 < v79) {
      *uint64_t v80 = v79;
    }
  }
  int v81 = *(_DWORD *)(a2 + 40);
  if ((_BYTE)v81)
  {
    if (v81)
    {
      uint64_t v82 = (long long *)(*(void *)(a2 + 456) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 40) |= 1u;
      uint64_t v83 = *(void *)(a1 + 8);
      uint64_t v84 = (uint64_t *)(v83 & 0xFFFFFFFFFFFFFFFCLL);
      if (v83) {
        uint64_t v84 = (uint64_t *)*v84;
      }
      sub_1881DF4((std::string **)(a1 + 456), v82, v84);
      if ((v81 & 2) == 0)
      {
LABEL_51:
        if ((v81 & 4) == 0) {
          goto LABEL_67;
        }
        goto LABEL_59;
      }
    }
    else if ((v81 & 2) == 0)
    {
      goto LABEL_51;
    }
    uint64_t v85 = (long long *)(*(void *)(a2 + 464) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 40) |= 2u;
    uint64_t v86 = *(void *)(a1 + 8);
    uint64_t v87 = (uint64_t *)(v86 & 0xFFFFFFFFFFFFFFFCLL);
    if (v86) {
      uint64_t v87 = (uint64_t *)*v87;
    }
    sub_1881DF4((std::string **)(a1 + 464), v85, v87);
    if ((v81 & 4) == 0)
    {
LABEL_67:
      if ((v81 & 8) != 0)
      {
        *(_DWORD *)(a1 + 40) |= 8u;
        uint64_t v93 = *(void *)(a1 + 480);
        if (!v93)
        {
          uint64_t v94 = *(void *)(a1 + 8);
          uint64_t v95 = (void *)(v94 & 0xFFFFFFFFFFFFFFFCLL);
          if (v94) {
            uint64_t v95 = (void *)*v95;
          }
          sub_13D8414((uint64_t)v95);
          *(void *)(a1 + 480) = v93;
        }
        if (*(void *)(a2 + 480)) {
          uint64_t v96 = *(uint64_t (****)())(a2 + 480);
        }
        else {
          uint64_t v96 = &off_25352D0;
        }
        sub_13927B8(v93, (uint64_t)v96);
        if ((v81 & 0x10) == 0)
        {
LABEL_69:
          if ((v81 & 0x20) == 0) {
            goto LABEL_70;
          }
          goto LABEL_101;
        }
      }
      else if ((v81 & 0x10) == 0)
      {
        goto LABEL_69;
      }
      *(_DWORD *)(a1 + 40) |= 0x10u;
      uint64_t v97 = *(void *)(a1 + 488);
      if (!v97)
      {
        uint64_t v98 = *(void *)(a1 + 8);
        uint64_t v99 = (void *)(v98 & 0xFFFFFFFFFFFFFFFCLL);
        if (v98) {
          uint64_t v99 = (void *)*v99;
        }
        sub_13D8414((uint64_t)v99);
        *(void *)(a1 + 488) = v97;
      }
      if (*(void *)(a2 + 488)) {
        uint64_t v100 = *(uint64_t (****)())(a2 + 488);
      }
      else {
        uint64_t v100 = &off_25352D0;
      }
      sub_13927B8(v97, (uint64_t)v100);
      if ((v81 & 0x20) == 0)
      {
LABEL_70:
        if ((v81 & 0x40) == 0) {
          goto LABEL_71;
        }
        goto LABEL_109;
      }
LABEL_101:
      *(_DWORD *)(a1 + 40) |= 0x20u;
      uint64_t v101 = *(std::string **)(a1 + 496);
      if (!v101)
      {
        uint64_t v102 = *(void *)(a1 + 8);
        uint64_t v103 = (void *)(v102 & 0xFFFFFFFFFFFFFFFCLL);
        if (v102) {
          uint64_t v103 = (void *)*v103;
        }
        uint64_t v101 = (std::string *)sub_13D8BF8((uint64_t)v103);
        *(void *)(a1 + 496) = v101;
      }
      if (*(void *)(a2 + 496)) {
        uint64_t v104 = *(uint64_t (****)())(a2 + 496);
      }
      else {
        uint64_t v104 = &off_25356E8;
      }
      sub_11B0678(v101, (uint64_t)v104);
      if ((v81 & 0x40) == 0)
      {
LABEL_71:
        if ((v81 & 0x80) == 0)
        {
LABEL_73:
          *(_DWORD *)(a1 + 40) |= v81;
          goto LABEL_74;
        }
LABEL_72:
        *(_DWORD *)(a1 + 508) = *(_DWORD *)(a2 + 508);
        goto LABEL_73;
      }
LABEL_109:
      *(unsigned char *)(a1 + 504) = *(unsigned char *)(a2 + 504);
      if ((v81 & 0x80) == 0) {
        goto LABEL_73;
      }
      goto LABEL_72;
    }
LABEL_59:
    *(_DWORD *)(a1 + 40) |= 4u;
    uint64_t v88 = *(void *)(a1 + 472);
    if (!v88)
    {
      uint64_t v89 = *(void *)(a1 + 8);
      uint64_t v90 = (void *)(v89 & 0xFFFFFFFFFFFFFFFCLL);
      if (v89) {
        uint64_t v90 = (void *)*v90;
      }
      sub_13D9384((uint64_t)v90);
      *(void *)(a1 + 472) = v88;
    }
    if (*(void *)(a2 + 472)) {
      uint64_t v91 = *(uint64_t (****)())(a2 + 472);
    }
    else {
      uint64_t v91 = &off_2535DF8;
    }
    sub_13B6E44(v88, (uint64_t)v91);
    goto LABEL_67;
  }
LABEL_74:
  if ((v81 & 0xF00) == 0) {
    goto LABEL_81;
  }
  if ((v81 & 0x100) != 0)
  {
    *(_DWORD *)(a1 + 512) = *(_DWORD *)(a2 + 512);
    if ((v81 & 0x200) == 0)
    {
LABEL_77:
      if ((v81 & 0x400) == 0) {
        goto LABEL_78;
      }
LABEL_113:
      *(_DWORD *)(a1 + 520) = *(_DWORD *)(a2 + 520);
      if ((v81 & 0x800) == 0) {
        goto LABEL_80;
      }
      goto LABEL_79;
    }
  }
  else if ((v81 & 0x200) == 0)
  {
    goto LABEL_77;
  }
  *(_DWORD *)(a1 + 516) = *(_DWORD *)(a2 + 516);
  if ((v81 & 0x400) != 0) {
    goto LABEL_113;
  }
LABEL_78:
  if ((v81 & 0x800) != 0) {
LABEL_79:
  }
    *(_DWORD *)(a1 + 524) = *(_DWORD *)(a2 + 524);
LABEL_80:
  *(_DWORD *)(a1 + 40) |= v81;
LABEL_81:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v92 = *(void *)(a2 + 8);
  if (v92)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v92 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_13DF768(uint64_t a1)
{
  uint64_t result = sub_18856CC(a1 + 16);
  if (result)
  {
    uint64_t v3 = *(unsigned int *)(a1 + 56);
    while ((int)v3 >= 1)
    {
      uint64_t v4 = v3 - 1;
      char v5 = sub_18856CC(*(void *)(*(void *)(a1 + 64) + 8 * v3) + 16);
      uint64_t v3 = v4;
      if ((v5 & 1) == 0) {
        return 0;
      }
    }
    uint64_t v6 = *(unsigned int *)(a1 + 104);
    while ((int)v6 >= 1)
    {
      uint64_t v7 = v6 - 1;
      char v8 = sub_13AD634(*(void *)(*(void *)(a1 + 112) + 8 * v6));
      uint64_t v6 = v7;
      if ((v8 & 1) == 0) {
        return 0;
      }
    }
    uint64_t v9 = *(unsigned int *)(a1 + 200);
    while ((int)v9 >= 1)
    {
      uint64_t v10 = v9 - 1;
      char v11 = sub_13BB038(*(void *)(*(void *)(a1 + 208) + 8 * v9));
      uint64_t v9 = v10;
      if ((v11 & 1) == 0) {
        return 0;
      }
    }
    uint64_t v12 = *(unsigned int *)(a1 + 224);
    while ((int)v12 >= 1)
    {
      uint64_t v13 = v12 - 1;
      char v14 = sub_13BB038(*(void *)(*(void *)(a1 + 232) + 8 * v12));
      uint64_t v12 = v13;
      if ((v14 & 1) == 0) {
        return 0;
      }
    }
    uint64_t v15 = *(unsigned int *)(a1 + 248);
    while ((int)v15 >= 1)
    {
      uint64_t v16 = v15 - 1;
      char v17 = sub_13BB038(*(void *)(*(void *)(a1 + 256) + 8 * v15));
      uint64_t result = 0;
      uint64_t v15 = v16;
      if ((v17 & 1) == 0) {
        return result;
      }
    }
    uint64_t v18 = *(unsigned int *)(a1 + 296);
    while ((int)v18 >= 1)
    {
      uint64_t v19 = v18 - 1;
      char v20 = sub_13BE5E4(*(void *)(*(void *)(a1 + 304) + 8 * v18));
      uint64_t result = 0;
      uint64_t v18 = v19;
      if ((v20 & 1) == 0) {
        return result;
      }
    }
    uint64_t v21 = *(unsigned int *)(a1 + 392);
    while ((int)v21 >= 1)
    {
      uint64_t v22 = v21 - 1;
      char v23 = sub_136C388(*(void *)(*(void *)(a1 + 400) + 8 * v21));
      uint64_t result = 0;
      uint64_t v21 = v22;
      if ((v23 & 1) == 0) {
        return result;
      }
    }
    uint64_t v24 = *(unsigned int *)(a1 + 416);
    while ((int)v24 >= 1)
    {
      uint64_t v25 = v24 - 1;
      char v26 = sub_1381680(*(void *)(*(void *)(a1 + 424) + 8 * v24));
      uint64_t result = 0;
      uint64_t v24 = v25;
      if ((v26 & 1) == 0) {
        return result;
      }
    }
    uint64_t v27 = *(unsigned int *)(a1 + 440);
    while ((int)v27 >= 1)
    {
      uint64_t v28 = v27 - 1;
      char v29 = sub_136C388(*(void *)(*(void *)(a1 + 448) + 8 * v27));
      uint64_t result = 0;
      uint64_t v27 = v28;
      if ((v29 & 1) == 0) {
        return result;
      }
    }
    int v30 = *(_DWORD *)(a1 + 40);
    if ((v30 & 4) != 0)
    {
      uint64_t result = sub_13B74A8(*(void *)(a1 + 472));
      if (!result) {
        return result;
      }
      int v30 = *(_DWORD *)(a1 + 40);
    }
    if ((v30 & 8) != 0)
    {
      uint64_t result = sub_1392B68(*(void *)(a1 + 480));
      if (!result) {
        return result;
      }
      int v30 = *(_DWORD *)(a1 + 40);
    }
    if ((v30 & 0x10) == 0) {
      return 1;
    }
    uint64_t result = sub_1392B68(*(void *)(a1 + 488));
    if (result) {
      return 1;
    }
  }
  return result;
}

void *sub_13DF96C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.ETARoute");
}

uint64_t sub_13DF97C(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)a1 = off_24B1008;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  char v5 = (uint64_t *)(a1 + 24);
  *(_DWORD *)(a1 + 44) = 0;
  *(void *)(a1 + 28) = 0;
  *(void *)(a1 + 36) = 0;
  *(void *)(a1 + 20) = 0;
  int v6 = *(_DWORD *)(a2 + 32);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 40);
    char v8 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_148F0C8(v5, v8, (uint64_t *)(v7 + 8), v6, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v9 = *(_DWORD *)(a1 + 32) + v6;
    *(_DWORD *)(a1 + 32) = v9;
    uint64_t v10 = *(int **)(a1 + 40);
    if (*v10 < v9) {
      *uint64_t v10 = v9;
    }
  }
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  int v11 = *(_DWORD *)(a2 + 56);
  if (v11)
  {
    uint64_t v12 = *(void *)(a2 + 64);
    uint64_t v13 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_13694B8((uint64_t *)(a1 + 48), v13, (uint64_t *)(v12 + 8), v11, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v14 = *(_DWORD *)(a1 + 56) + v11;
    *(_DWORD *)(a1 + 56) = v14;
    uint64_t v15 = *(int **)(a1 + 64);
    if (*v15 < v14) {
      int *v15 = v14;
    }
  }
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0;
  int v16 = *(_DWORD *)(a2 + 80);
  if (v16)
  {
    uint64_t v17 = *(void *)(a2 + 88);
    uint64_t v18 = (uint64_t *)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_148DB80((uint64_t *)(a1 + 72), v18, (uint64_t *)(v17 + 8), v16, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v19 = *(_DWORD *)(a1 + 80) + v16;
    *(_DWORD *)(a1 + 80) = v19;
    char v20 = *(int **)(a1 + 88);
    if (*v20 < v19) {
      *char v20 = v19;
    }
  }
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 104) = 0;
  *(void *)(a1 + 112) = 0;
  int v21 = *(_DWORD *)(a2 + 104);
  if (v21)
  {
    uint64_t v22 = *(void *)(a2 + 112);
    char v23 = (uint64_t *)sub_188CCE4(a1 + 96, *(_DWORD *)(a2 + 104));
    sub_DF401C((uint64_t *)(a1 + 96), v23, (uint64_t *)(v22 + 8), v21, **(_DWORD **)(a1 + 112) - *(_DWORD *)(a1 + 104));
    int v24 = *(_DWORD *)(a1 + 104) + v21;
    *(_DWORD *)(a1 + 104) = v24;
    uint64_t v25 = *(int **)(a1 + 112);
    if (*v25 < v24) {
      *uint64_t v25 = v24;
    }
  }
  uint64_t v26 = *(void *)(a2 + 8);
  if (v26) {
    sub_188B4F8(v4, (v26 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  int v27 = *(_DWORD *)(a2 + 16);
  if (v27) {
    operator new();
  }
  *(void *)(a1 + 120) = 0;
  if ((v27 & 2) != 0) {
    operator new();
  }
  *(void *)(a1 + 128) = 0;
  *(_DWORD *)(a1 + 136) = *(_DWORD *)(a2 + 136);
  return a1;
}

void sub_13DFC28()
{
}

uint64_t sub_13DFCDC(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  if ((uint64_t (***)())a1 != &off_2536C78)
  {
    char v5 = *(void **)(a1 + 120);
    if (v5)
    {
      sub_13975C0(v5);
      operator delete();
    }
    int v6 = *(void **)(a1 + 128);
    if (v6)
    {
      sub_13A1B50(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  sub_148EDBC((void *)(a1 + 96));
  sub_148C0C8((void *)(a1 + 72));
  sub_13693AC((void *)(a1 + 48));
  sub_148ED3C((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_13DFDDC(uint64_t a1)
{
  sub_13DFCDC(a1);

  operator delete();
}

uint64_t sub_13DFE14(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_13DC214(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  uint64_t v5 = *(unsigned int *)(v1 + 56);
  if ((int)v5 >= 1)
  {
    int v6 = (uint64_t *)(*(void *)(v1 + 64) + 8);
    do
    {
      uint64_t v7 = *v6++;
      uint64_t result = sub_13B9618(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(v1 + 56) = 0;
  }
  uint64_t v8 = *(unsigned int *)(v1 + 80);
  if ((int)v8 >= 1)
  {
    int v9 = (uint64_t *)(*(void *)(v1 + 88) + 8);
    do
    {
      uint64_t v10 = *v9++;
      uint64_t result = sub_13B4694(v10);
      --v8;
    }
    while (v8);
    *(_DWORD *)(v1 + 80) = 0;
  }
  uint64_t v11 = *(unsigned int *)(v1 + 104);
  if ((int)v11 >= 1)
  {
    uint64_t v12 = (uint64_t *)(*(void *)(v1 + 112) + 8);
    do
    {
      uint64_t v13 = *v12++;
      uint64_t result = sub_13A22B8(v13);
      --v11;
    }
    while (v11);
    *(_DWORD *)(v1 + 104) = 0;
  }
  int v14 = *(_DWORD *)(v1 + 16);
  if ((v14 & 3) != 0)
  {
    if (v14) {
      uint64_t result = sub_139766C(*(void *)(v1 + 120));
    }
    if ((v14 & 2) != 0)
    {
      uint64_t v15 = *(void *)(v1 + 128);
      char v16 = *(unsigned char *)(v15 + 8);
      uint64_t result = v15 + 8;
      *(_WORD *)(result + 16) = 0;
      *(_DWORD *)(result + 8) = 0;
      if (v16) {
        uint64_t result = sub_188B4AC((uint64_t *)result);
      }
    }
  }
  char v18 = *(unsigned char *)(v1 + 8);
  uint64_t v17 = v1 + 8;
  *(_DWORD *)(v17 + 128) = 0;
  *(_DWORD *)(v17 + 8) = 0;
  if (v18)
  {
    return sub_188B4AC((uint64_t *)v17);
  }
  return result;
}

char *sub_13DFF44(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v48 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v48, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = v48 + 1;
    unsigned int v9 = *v48;
    if (*v48 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v48, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v48 + 2;
      }
    }
    int v48 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_66;
        }
        v5 |= 4u;
        uint64_t v12 = v8 + 1;
        int v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        int v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          uint64_t v12 = v8 + 2;
LABEL_13:
          int v48 = v12;
          *(_DWORD *)(a1 + 136) = v13;
          goto LABEL_74;
        }
        uint64_t v46 = (char *)sub_188C0D0((uint64_t)v8, v13);
        int v48 = v46;
        *(_DWORD *)(a1 + 136) = v47;
        if (v46) {
          goto LABEL_74;
        }
        goto LABEL_81;
      case 2u:
        if (v9 != 18) {
          goto LABEL_66;
        }
        uint64_t v15 = v8 - 1;
        while (1)
        {
          char v16 = (unsigned __int8 *)(v15 + 1);
          int v48 = v15 + 1;
          uint64_t v17 = *(_DWORD **)(a1 + 40);
          if (v17 && (uint64_t v18 = *(int *)(a1 + 32), (int)v18 < *v17))
          {
            *(_DWORD *)(a1 + 32) = v18 + 1;
            uint64_t v19 = *(void *)&v17[2 * v18 + 2];
          }
          else
          {
            uint64_t v20 = sub_13F37D4(*(void *)(a1 + 24));
            uint64_t v19 = sub_188CDC8(a1 + 24, v20);
            char v16 = (unsigned __int8 *)v48;
          }
          uint64_t v15 = sub_13E0408(a3, v19, v16);
          int v48 = v15;
          if (!v15) {
            goto LABEL_81;
          }
          if (*(void *)a3 <= (unint64_t)v15 || *v15 != 18) {
            goto LABEL_74;
          }
        }
      case 4u:
        if (v9 != 34) {
          goto LABEL_66;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v21 = *(void *)(a1 + 120);
        if (!v21)
        {
          uint64_t v22 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v22 = (void *)*v22;
          }
          uint64_t v21 = sub_13D84A8((uint64_t)v22);
          *(void *)(a1 + 120) = v21;
          uint64_t v8 = v48;
        }
        char v23 = sub_11C5070(a3, v21, (unsigned __int8 *)v8);
        goto LABEL_73;
      case 5u:
        if (v9 != 42) {
          goto LABEL_66;
        }
        int v24 = v8 - 1;
        while (1)
        {
          uint64_t v25 = (unsigned __int8 *)(v24 + 1);
          int v48 = v24 + 1;
          uint64_t v26 = *(_DWORD **)(a1 + 64);
          if (v26 && (uint64_t v27 = *(int *)(a1 + 56), (int)v27 < *v26))
          {
            *(_DWORD *)(a1 + 56) = v27 + 1;
            uint64_t v28 = *(void *)&v26[2 * v27 + 2];
          }
          else
          {
            uint64_t v29 = sub_13D9608(*(void *)(a1 + 48));
            uint64_t v28 = sub_188CDC8(a1 + 48, v29);
            uint64_t v25 = (unsigned __int8 *)v48;
          }
          int v24 = (char *)sub_11AB844(a3, v28, v25);
          int v48 = v24;
          if (!v24) {
            goto LABEL_81;
          }
          if (*(void *)a3 <= (unint64_t)v24 || *v24 != 42) {
            goto LABEL_74;
          }
        }
      case 6u:
        if (v9 != 50) {
          goto LABEL_66;
        }
        int v30 = v8 - 1;
        while (1)
        {
          uint64_t v31 = (unsigned __int8 *)(v30 + 1);
          int v48 = v30 + 1;
          uint64_t v32 = *(_DWORD **)(a1 + 88);
          if (v32 && (uint64_t v33 = *(int *)(a1 + 80), (int)v33 < *v32))
          {
            *(_DWORD *)(a1 + 80) = v33 + 1;
            uint64_t v34 = *(void *)&v32[2 * v33 + 2];
          }
          else
          {
            sub_13D9384(*(void *)(a1 + 72));
            uint64_t v34 = sub_188CDC8(a1 + 72, v35);
            uint64_t v31 = (unsigned __int8 *)v48;
          }
          int v30 = (char *)sub_13A348C(a3, v34, v31);
          int v48 = v30;
          if (!v30) {
            goto LABEL_81;
          }
          if (*(void *)a3 <= (unint64_t)v30 || *v30 != 50) {
            goto LABEL_74;
          }
        }
      case 7u:
        if (v9 != 58) {
          goto LABEL_66;
        }
        uint64_t v36 = v8 - 1;
        while (1)
        {
          uint64_t v37 = (unsigned __int8 *)(v36 + 1);
          int v48 = v36 + 1;
          int v38 = *(_DWORD **)(a1 + 112);
          if (v38 && (uint64_t v39 = *(int *)(a1 + 104), (int)v39 < *v38))
          {
            *(_DWORD *)(a1 + 104) = v39 + 1;
            uint64_t v40 = *(void *)&v38[2 * v39 + 2];
          }
          else
          {
            uint64_t v41 = sub_13D8C74(*(void *)(a1 + 96));
            uint64_t v40 = sub_188CDC8(a1 + 96, v41);
            uint64_t v37 = (unsigned __int8 *)v48;
          }
          uint64_t v36 = sub_13E0498(a3, v40, v37);
          int v48 = v36;
          if (!v36) {
            goto LABEL_81;
          }
          if (*(void *)a3 <= (unint64_t)v36 || *v36 != 58) {
            goto LABEL_74;
          }
        }
      case 8u:
        if (v9 != 66) {
          goto LABEL_66;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v42 = *(void *)(a1 + 128);
        if (!v42)
        {
          int v43 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            int v43 = (void *)*v43;
          }
          uint64_t v42 = sub_13D8BF8((uint64_t)v43);
          *(void *)(a1 + 128) = v42;
          uint64_t v8 = v48;
        }
        char v23 = sub_13DD6EC(a3, v42, (unsigned __int8 *)v8);
        goto LABEL_73;
      default:
LABEL_66:
        if (v9) {
          BOOL v44 = (v9 & 7) == 4;
        }
        else {
          BOOL v44 = 1;
        }
        if (!v44)
        {
          if (*v7)
          {
            int v45 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            int v45 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = v48;
          }
          char v23 = (char *)sub_1885AC0(v9, v45, v8, a3);
LABEL_73:
          int v48 = v23;
          if (!v23) {
            goto LABEL_81;
          }
LABEL_74:
          if (sub_11947B8((uint64_t)a3, &v48, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_81:
        }
          int v48 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v48;
    }
  }
}

char *sub_13E0408(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_13DC52C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_13E0498(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_13A24C8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_13E0528(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 4) != 0)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 136);
    char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v10 = *(_DWORD *)(a1 + 32);
  if (v10)
  {
    for (int i = 0; i != v10; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v12 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      char *v4 = 18;
      unsigned int v13 = *(_DWORD *)(v12 + 44);
      v4[1] = v13;
      if (v13 > 0x7F) {
        int v14 = sub_188A9CC(v13, v4 + 1);
      }
      else {
        int v14 = v4 + 2;
      }
      uint64_t v4 = sub_13DD77C(v12, v14, a3);
    }
  }
  if (v6)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v15 = *(void *)(a1 + 120);
    char *v4 = 34;
    unsigned int v16 = *(_DWORD *)(v15 + 20);
    v4[1] = v16;
    if (v16 > 0x7F) {
      uint64_t v17 = sub_188A9CC(v16, v4 + 1);
    }
    else {
      uint64_t v17 = v4 + 2;
    }
    uint64_t v4 = sub_13979CC(v15, (unint64_t)v17, a3);
  }
  int v18 = *(_DWORD *)(a1 + 56);
  if (v18)
  {
    for (int j = 0; j != v18; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v20 = *(void *)(*(void *)(a1 + 64) + 8 * j + 8);
      char *v4 = 42;
      unsigned int v21 = *(_DWORD *)(v20 + 44);
      v4[1] = v21;
      if (v21 > 0x7F) {
        uint64_t v22 = sub_188A9CC(v21, v4 + 1);
      }
      else {
        uint64_t v22 = v4 + 2;
      }
      uint64_t v4 = sub_13BA104(v20, v22, a3);
    }
  }
  int v23 = *(_DWORD *)(a1 + 80);
  if (v23)
  {
    for (int k = 0; k != v23; ++k)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v25 = *(void *)(*(void *)(a1 + 88) + 8 * k + 8);
      char *v4 = 50;
      unsigned int v26 = *(_DWORD *)(v25 + 20);
      v4[1] = v26;
      if (v26 > 0x7F) {
        uint64_t v27 = sub_188A9CC(v26, v4 + 1);
      }
      else {
        uint64_t v27 = v4 + 2;
      }
      uint64_t v4 = sub_13B5938(v25, v27, a3);
    }
  }
  int v28 = *(_DWORD *)(a1 + 104);
  if (v28)
  {
    for (int m = 0; m != v28; ++m)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v30 = *(void *)(*(void *)(a1 + 112) + 8 * m + 8);
      char *v4 = 58;
      unsigned int v31 = *(_DWORD *)(v30 + 44);
      v4[1] = v31;
      if (v31 > 0x7F) {
        uint64_t v32 = sub_188A9CC(v31, v4 + 1);
      }
      else {
        uint64_t v32 = v4 + 2;
      }
      uint64_t v4 = sub_13A351C(v30, v32, a3);
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v33 = *(void *)(a1 + 128);
    char *v4 = 66;
    unsigned int v34 = *(_DWORD *)(v33 + 20);
    v4[1] = v34;
    if (v34 > 0x7F) {
      uint64_t v35 = sub_188A9CC(v34, v4 + 1);
    }
    else {
      uint64_t v35 = v4 + 2;
    }
    uint64_t v4 = sub_13A1E24(v33, (unint64_t)v35, a3);
  }
  uint64_t v36 = *(void *)(a1 + 8);
  if ((v36 & 1) == 0) {
    return v4;
  }
  unint64_t v38 = v36 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v38 + 31) < 0)
  {
    uint64_t v39 = *(void **)(v38 + 8);
    uint64_t v40 = *(void *)(v38 + 16);
  }
  else
  {
    uint64_t v39 = (void *)(v38 + 8);
    LODWORD(v40) = *(unsigned __int8 *)(v38 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v40)
  {
    uint64_t v41 = (int)v40;
    memcpy(v4, v39, (int)v40);
    v4 += v41;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v39, v40, v4);
}

uint64_t sub_13E0940(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_13DE6B0(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(int *)(a1 + 56);
  uint64_t v9 = v2 + v8;
  uint64_t v10 = *(void *)(a1 + 64);
  if (v10) {
    unsigned int v11 = (uint64_t *)(v10 + 8);
  }
  else {
    unsigned int v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_13BA868(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  uint64_t v15 = *(int *)(a1 + 80);
  uint64_t v16 = v9 + v15;
  uint64_t v17 = *(void *)(a1 + 88);
  if (v17) {
    int v18 = (uint64_t *)(v17 + 8);
  }
  else {
    int v18 = 0;
  }
  if (v15)
  {
    uint64_t v19 = 8 * v15;
    do
    {
      uint64_t v20 = *v18++;
      uint64_t v21 = sub_13B6760(v20);
      v16 += v21 + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6);
      v19 -= 8;
    }
    while (v19);
  }
  uint64_t v22 = *(int *)(a1 + 104);
  uint64_t v23 = v16 + v22;
  uint64_t v24 = *(void *)(a1 + 112);
  if (v24) {
    uint64_t v25 = (uint64_t *)(v24 + 8);
  }
  else {
    uint64_t v25 = 0;
  }
  if (v22)
  {
    uint64_t v26 = 8 * v22;
    do
    {
      uint64_t v27 = *v25++;
      uint64_t v28 = sub_13A3F0C(v27);
      v23 += v28 + ((9 * (__clz(v28 | 1) ^ 0x1F) + 73) >> 6);
      v26 -= 8;
    }
    while (v26);
  }
  int v29 = *(_DWORD *)(a1 + 16);
  if ((v29 & 7) != 0)
  {
    if (v29)
    {
      uint64_t v32 = sub_1397CE4(*(void *)(a1 + 120));
      v23 += v32 + ((9 * (__clz(v32 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v29 & 2) == 0)
      {
LABEL_30:
        if ((v29 & 4) == 0) {
          goto LABEL_32;
        }
        goto LABEL_31;
      }
    }
    else if ((v29 & 2) == 0)
    {
      goto LABEL_30;
    }
    uint64_t v33 = sub_13A1F40(*(void *)(a1 + 128));
    v23 += v33 + ((9 * (__clz(v33 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v29 & 4) != 0) {
LABEL_31:
    }
      v23 += ((9 * (__clz(*(_DWORD *)(a1 + 136) | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_32:
  uint64_t v30 = *(void *)(a1 + 8);
  if (v30)
  {
    unint64_t v34 = v30 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v34 + 31) < 0) {
      uint64_t v35 = *(void *)(v34 + 16);
    }
    else {
      uint64_t v35 = *(unsigned __int8 *)(v34 + 31);
    }
    v23 += v35;
  }
  *(_DWORD *)(a1 + 20) = v23;
  return v23;
}

void sub_13E0B80(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_148F0C8((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    uint64_t v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    unsigned int v11 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_13694B8((uint64_t *)(a1 + 48), v11, v10, v9, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v12 = *(_DWORD *)(a1 + 56) + v9;
    *(_DWORD *)(a1 + 56) = v12;
    uint64_t v13 = *(int **)(a1 + 64);
    if (*v13 < v12) {
      int *v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 80);
  if (v14)
  {
    uint64_t v15 = (uint64_t *)(*(void *)(a2 + 88) + 8);
    uint64_t v16 = (uint64_t *)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_148DB80((uint64_t *)(a1 + 72), v16, v15, v14, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v17 = *(_DWORD *)(a1 + 80) + v14;
    *(_DWORD *)(a1 + 80) = v17;
    int v18 = *(int **)(a1 + 88);
    if (*v18 < v17) {
      *int v18 = v17;
    }
  }
  int v19 = *(_DWORD *)(a2 + 104);
  if (v19)
  {
    uint64_t v20 = (uint64_t *)(*(void *)(a2 + 112) + 8);
    uint64_t v21 = (uint64_t *)sub_188CCE4(a1 + 96, *(_DWORD *)(a2 + 104));
    sub_DF401C((uint64_t *)(a1 + 96), v21, v20, v19, **(_DWORD **)(a1 + 112) - *(_DWORD *)(a1 + 104));
    int v22 = *(_DWORD *)(a1 + 104) + v19;
    *(_DWORD *)(a1 + 104) = v22;
    uint64_t v23 = *(int **)(a1 + 112);
    if (*v23 < v22) {
      *uint64_t v23 = v22;
    }
  }
  int v24 = *(_DWORD *)(a2 + 16);
  if ((v24 & 7) != 0)
  {
    if (v24)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v26 = *(std::string **)(a1 + 120);
      if (!v26)
      {
        uint64_t v27 = *(void *)(a1 + 8);
        uint64_t v28 = (void *)(v27 & 0xFFFFFFFFFFFFFFFCLL);
        if (v27) {
          uint64_t v28 = (void *)*v28;
        }
        uint64_t v26 = (std::string *)sub_13D84A8((uint64_t)v28);
        *(void *)(a1 + 120) = v26;
      }
      if (*(void *)(a2 + 120)) {
        int v29 = *(uint64_t (****)())(a2 + 120);
      }
      else {
        int v29 = &off_2535340;
      }
      sub_118D9C0(v26, (uint64_t)v29);
      if ((v24 & 2) == 0)
      {
LABEL_16:
        if ((v24 & 4) == 0)
        {
LABEL_18:
          *(_DWORD *)(a1 + 16) |= v24;
          goto LABEL_19;
        }
LABEL_17:
        *(_DWORD *)(a1 + 136) = *(_DWORD *)(a2 + 136);
        goto LABEL_18;
      }
    }
    else if ((v24 & 2) == 0)
    {
      goto LABEL_16;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v30 = *(std::string **)(a1 + 128);
    if (!v30)
    {
      uint64_t v31 = *(void *)(a1 + 8);
      uint64_t v32 = (void *)(v31 & 0xFFFFFFFFFFFFFFFCLL);
      if (v31) {
        uint64_t v32 = (void *)*v32;
      }
      uint64_t v30 = (std::string *)sub_13D8BF8((uint64_t)v32);
      *(void *)(a1 + 128) = v30;
    }
    if (*(void *)(a2 + 128)) {
      uint64_t v33 = *(uint64_t (****)())(a2 + 128);
    }
    else {
      uint64_t v33 = &off_25356E8;
    }
    sub_11B0678(v30, (uint64_t)v33);
    if ((v24 & 4) == 0) {
      goto LABEL_18;
    }
    goto LABEL_17;
  }
LABEL_19:
  uint64_t v25 = *(void *)(a2 + 8);
  if (v25)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v25 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

BOOL sub_13E0E44(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  while ((int)v2 >= 1)
  {
    uint64_t v3 = v2 - 1;
    char v4 = sub_13DF768(*(void *)(*(void *)(a1 + 40) + 8 * v2));
    uint64_t v2 = v3;
    if ((v4 & 1) == 0) {
      return 0;
    }
  }
  uint64_t v5 = *(unsigned int *)(a1 + 56);
  while ((int)v5 >= 1)
  {
    uint64_t v6 = v5 - 1;
    char v7 = sub_13BB038(*(void *)(*(void *)(a1 + 64) + 8 * v5));
    uint64_t v5 = v6;
    if ((v7 & 1) == 0) {
      return 0;
    }
  }
  uint64_t v8 = *(unsigned int *)(a1 + 80);
  while ((int)v8 >= 1)
  {
    uint64_t v9 = v8 - 1;
    char v10 = sub_13B74A8(*(void *)(*(void *)(a1 + 88) + 8 * v8));
    uint64_t v8 = v9;
    if ((v10 & 1) == 0) {
      return 0;
    }
  }
  uint64_t v13 = *(unsigned int *)(a1 + 104);
  do
  {
    BOOL v11 = (int)v13 < 1;
    if ((int)v13 < 1) {
      break;
    }
    uint64_t v14 = v13 - 1;
    char v15 = sub_13A4A14(*(void *)(*(void *)(a1 + 112) + 8 * v13));
    uint64_t v13 = v14;
  }
  while ((v15 & 1) != 0);
  return v11;
}

void *sub_13E0F14@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.ETATrafficUpdateWaypointRoute");
}

uint64_t sub_13E0F24(uint64_t a1)
{
  uint64_t result = sub_188CC00(a1 + 32);
  *(_DWORD *)(a1 + 56) = 0;
  *(_DWORD *)(a1 + 72) = 0;
  *(_DWORD *)(a1 + 88) = 0;
  unsigned int v3 = *(_DWORD *)(a1 + 16);
  if ((_BYTE)v3)
  {
    if ((v3 & 1) == 0)
    {
      if ((v3 & 2) == 0) {
        goto LABEL_4;
      }
LABEL_15:
      unint64_t v5 = *(void *)(a1 + 112) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v5 + 23) < 0)
      {
        **(unsigned char **)unint64_t v5 = 0;
        *(void *)(v5 + 8) = 0;
        if ((v3 & 4) != 0) {
          goto LABEL_19;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v5 = 0;
        *(unsigned char *)(v5 + 23) = 0;
        if ((v3 & 4) != 0) {
          goto LABEL_19;
        }
      }
LABEL_5:
      if ((v3 & 8) == 0) {
        goto LABEL_6;
      }
LABEL_23:
      unint64_t v7 = *(void *)(a1 + 128) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v7 + 23) < 0)
      {
        **(unsigned char **)unint64_t v7 = 0;
        *(void *)(v7 + 8) = 0;
        if ((v3 & 0x10) != 0) {
          goto LABEL_27;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v7 = 0;
        *(unsigned char *)(v7 + 23) = 0;
        if ((v3 & 0x10) != 0) {
          goto LABEL_27;
        }
      }
LABEL_7:
      if ((v3 & 0x20) == 0) {
        goto LABEL_8;
      }
LABEL_31:
      unint64_t v9 = *(void *)(a1 + 144) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v9 + 23) < 0)
      {
        **(unsigned char **)unint64_t v9 = 0;
        *(void *)(v9 + 8) = 0;
        if ((v3 & 0x40) != 0) {
          goto LABEL_35;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v9 = 0;
        *(unsigned char *)(v9 + 23) = 0;
        if ((v3 & 0x40) != 0) {
          goto LABEL_35;
        }
      }
LABEL_9:
      if ((v3 & 0x80) == 0) {
        goto LABEL_42;
      }
LABEL_39:
      unint64_t v11 = *(void *)(a1 + 160) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v11 + 23) < 0)
      {
        **(unsigned char **)unint64_t v11 = 0;
        *(void *)(v11 + 8) = 0;
      }
      else
      {
        *(unsigned char *)unint64_t v11 = 0;
        *(unsigned char *)(v11 + 23) = 0;
      }
      goto LABEL_42;
    }
    unint64_t v4 = *(void *)(a1 + 104) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v4 + 23) < 0)
    {
      **(unsigned char **)unint64_t v4 = 0;
      *(void *)(v4 + 8) = 0;
      if ((v3 & 2) != 0) {
        goto LABEL_15;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v4 = 0;
      *(unsigned char *)(v4 + 23) = 0;
      if ((v3 & 2) != 0) {
        goto LABEL_15;
      }
    }
LABEL_4:
    if ((v3 & 4) == 0) {
      goto LABEL_5;
    }
LABEL_19:
    unint64_t v6 = *(void *)(a1 + 120) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v6 + 23) < 0)
    {
      **(unsigned char **)unint64_t v6 = 0;
      *(void *)(v6 + 8) = 0;
      if ((v3 & 8) != 0) {
        goto LABEL_23;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v6 = 0;
      *(unsigned char *)(v6 + 23) = 0;
      if ((v3 & 8) != 0) {
        goto LABEL_23;
      }
    }
LABEL_6:
    if ((v3 & 0x10) == 0) {
      goto LABEL_7;
    }
LABEL_27:
    unint64_t v8 = *(void *)(a1 + 136) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v8 + 23) < 0)
    {
      **(unsigned char **)unint64_t v8 = 0;
      *(void *)(v8 + 8) = 0;
      if ((v3 & 0x20) != 0) {
        goto LABEL_31;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v8 = 0;
      *(unsigned char *)(v8 + 23) = 0;
      if ((v3 & 0x20) != 0) {
        goto LABEL_31;
      }
    }
LABEL_8:
    if ((v3 & 0x40) == 0) {
      goto LABEL_9;
    }
LABEL_35:
    unint64_t v10 = *(void *)(a1 + 152) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v10 + 23) < 0)
    {
      **(unsigned char **)unint64_t v10 = 0;
      *(void *)(v10 + 8) = 0;
      if ((v3 & 0x80) == 0) {
        goto LABEL_42;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v10 = 0;
      *(unsigned char *)(v10 + 23) = 0;
      if ((v3 & 0x80) == 0) {
        goto LABEL_42;
      }
    }
    goto LABEL_39;
  }
LABEL_42:
  if ((v3 & 0x3F00) == 0) {
    goto LABEL_59;
  }
  if ((v3 & 0x100) != 0)
  {
    uint64_t v12 = *(void *)(a1 + 168);
    char v13 = *(unsigned char *)(v12 + 8);
    uint64_t result = v12 + 8;
    *(unsigned char *)(result + 18) = 0;
    *(_WORD *)(result + 16) = 0;
    *(_DWORD *)(result + 8) = 0;
    if (v13) {
      uint64_t result = sub_188B4AC((uint64_t *)result);
    }
  }
  if ((v3 & 0x200) != 0)
  {
    uint64_t result = (uint64_t)sub_15BF14C(*(void *)(a1 + 176));
    if ((v3 & 0x400) == 0)
    {
LABEL_48:
      if ((v3 & 0x800) == 0) {
        goto LABEL_49;
      }
      goto LABEL_53;
    }
  }
  else if ((v3 & 0x400) == 0)
  {
    goto LABEL_48;
  }
  uint64_t result = (uint64_t)sub_15BE99C(*(void *)(a1 + 184));
  if ((v3 & 0x800) == 0)
  {
LABEL_49:
    if ((v3 & 0x1000) == 0) {
      goto LABEL_56;
    }
LABEL_54:
    uint64_t v14 = *(void *)(a1 + 200);
    char v15 = *(unsigned char *)(v14 + 8);
    uint64_t result = v14 + 8;
    *(_WORD *)(result + 16) = 0;
    *(_DWORD *)(result + 8) = 0;
    if (v15) {
      uint64_t result = sub_188B4AC((uint64_t *)result);
    }
    goto LABEL_56;
  }
LABEL_53:
  uint64_t result = sub_15C05F0(*(void *)(a1 + 192));
  if ((v3 & 0x1000) != 0) {
    goto LABEL_54;
  }
LABEL_56:
  if ((v3 & 0x2000) != 0)
  {
    uint64_t v16 = *(void *)(a1 + 208);
    char v17 = *(unsigned char *)(v16 + 8);
    uint64_t result = v16 + 8;
    *(unsigned char *)(result + 16) = 0;
    *(_DWORD *)(result + 8) = 0;
    if (v17) {
      uint64_t result = sub_188B4AC((uint64_t *)result);
    }
  }
LABEL_59:
  if ((v3 & 0xC000) != 0) {
    *(_WORD *)(a1 + 216) = 0;
  }
  if ((v3 & 0xFF0000) != 0) {
    *(void *)(a1 + 218) = 0;
  }
  if (HIBYTE(v3)) {
    *(void *)(a1 + 226) = 0;
  }
  int v18 = *(_DWORD *)(a1 + 20);
  if ((_BYTE)v18) {
    *(void *)(a1 + 234) = 0;
  }
  if ((v18 & 0xFF00) != 0) {
    *(void *)(a1 + 242) = 0;
  }
  if ((v18 & 0xFF0000) != 0)
  {
    *(unsigned char *)(a1 + 254) = 0;
    *(_DWORD *)(a1 + 250) = 0;
    *(void *)(a1 + 256) = 0x3F00000001;
    *(_DWORD *)(a1 + 264) = 3;
  }
  if ((v18 & 0xF000000) != 0) {
    *(_OWORD *)(a1 + 268) = xmmword_2142230;
  }
  char v20 = *(unsigned char *)(a1 + 8);
  int v19 = (uint64_t *)(a1 + 8);
  v19[1] = 0;
  if (v20)
  {
    return sub_188B4AC(v19);
  }
  return result;
}

uint64_t sub_13E123C(uint64_t a1)
{
  sub_188CC00(a1 + 16);
  uint64_t result = sub_188CC00(a1 + 40);
  char v4 = *(unsigned char *)(a1 + 8);
  unsigned int v3 = (uint64_t *)(a1 + 8);
  if (v4)
  {
    return sub_188B4AC(v3);
  }
  return result;
}

uint64_t sub_13E1294(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  *(void *)(a1 + 8) = v5;
  *(void *)a1 = off_24B1088;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = a2;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = a2;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = a2;
  *(void *)(a1 + 104) = 0;
  *(void *)(a1 + 112) = 0;
  *(void *)(a1 + 120) = a2;
  *(void *)(a1 + 128) = 0;
  *(void *)(a1 + 136) = 0;
  *(void *)(a1 + 144) = a2;
  *(void *)(a1 + 152) = 0;
  *(void *)(a1 + 160) = 0;
  *(void *)(a1 + 168) = a2;
  *(void *)(a1 + 176) = 0;
  *(void *)(a1 + 184) = 0;
  *(void *)(a1 + 192) = a2;
  *(void *)(a1 + 200) = 0;
  *(void *)(a1 + 208) = 0;
  *(void *)(a1 + 216) = a2;
  *(void *)(a1 + 224) = 0;
  *(void *)(a1 + 232) = 0;
  *(void *)(a1 + 240) = &qword_2550250;
  *(void *)(a1 + 248) = &qword_2550250;
  *(void *)(a1 + 256) = &qword_2550250;
  *(void *)(a1 + 264) = &qword_2550250;
  *(void *)(a1 + 272) = &qword_2550250;
  *(_OWORD *)(a1 + 280) = 0u;
  *(_OWORD *)(a1 + 296) = 0u;
  *(_OWORD *)(a1 + 312) = 0u;
  *(_OWORD *)(a1 + 328) = 0u;
  *(_OWORD *)(a1 + 344) = 0u;
  *(_OWORD *)(a1 + 360) = 0u;
  *(_OWORD *)(a1 + 376) = 0u;
  *(_OWORD *)(a1 + 392) = 0u;
  *(void *)(a1 + 408) = 0;
  *(unsigned char *)(a1 + 416) = 1;
  return a1;
}

void sub_13E1364(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_13E1398(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v56 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v55 = a1 + 16;
  *(void *)a1 = off_24B1088;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  char v4 = (uint64_t *)(a1 + 48);
  *(_DWORD *)(a1 + 68) = 0;
  *(void *)(a1 + 52) = 0;
  *(void *)(a1 + 60) = 0;
  *(void *)(a1 + 44) = 0;
  int v5 = *(_DWORD *)(a2 + 56);
  if (v5)
  {
    uint64_t v6 = *(void *)(a2 + 64);
    unint64_t v7 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_12C52B4(v4, v7, (uint64_t *)(v6 + 8), v5, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v8 = *(_DWORD *)(a1 + 56) + v5;
    *(_DWORD *)(a1 + 56) = v8;
    unint64_t v9 = *(int **)(a1 + 64);
    if (*v9 < v8) {
      *unint64_t v9 = v8;
    }
  }
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0;
  int v10 = *(_DWORD *)(a2 + 80);
  if (v10)
  {
    uint64_t v11 = *(void *)(a2 + 88);
    uint64_t v12 = (uint64_t *)sub_188CCE4(a1 + 72, v10);
    sub_148F0C8((uint64_t *)(a1 + 72), v12, (uint64_t *)(v11 + 8), v10, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v13 = *(_DWORD *)(a1 + 80) + v10;
    *(_DWORD *)(a1 + 80) = v13;
    uint64_t v14 = *(int **)(a1 + 88);
    if (*v14 < v13) {
      *uint64_t v14 = v13;
    }
  }
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 104) = 0;
  *(void *)(a1 + 112) = 0;
  int v15 = *(_DWORD *)(a2 + 104);
  if (v15)
  {
    uint64_t v16 = *(void *)(a2 + 112);
    char v17 = (uint64_t *)sub_188CCE4(a1 + 96, v15);
    sub_1368FF8((uint64_t *)(a1 + 96), v17, (uint64_t *)(v16 + 8), v15, **(_DWORD **)(a1 + 112) - *(_DWORD *)(a1 + 104));
    int v18 = *(_DWORD *)(a1 + 104) + v15;
    *(_DWORD *)(a1 + 104) = v18;
    int v19 = *(int **)(a1 + 112);
    if (*v19 < v18) {
      *int v19 = v18;
    }
  }
  *(void *)(a1 + 120) = 0;
  *(void *)(a1 + 128) = 0;
  *(void *)(a1 + 136) = 0;
  int v20 = *(_DWORD *)(a2 + 128);
  if (v20)
  {
    uint64_t v21 = *(void *)(a2 + 136);
    int v22 = (std::string **)sub_188CCE4(a1 + 120, *(_DWORD *)(a2 + 128));
    sub_188FB98(a1 + 120, v22, (const std::string **)(v21 + 8), v20, **(_DWORD **)(a1 + 136) - *(_DWORD *)(a1 + 128));
    int v23 = *(_DWORD *)(a1 + 128) + v20;
    *(_DWORD *)(a1 + 128) = v23;
    int v24 = *(int **)(a1 + 136);
    if (*v24 < v23) {
      *int v24 = v23;
    }
  }
  *(void *)(a1 + 144) = 0;
  *(void *)(a1 + 152) = 0;
  *(void *)(a1 + 160) = 0;
  int v25 = *(_DWORD *)(a2 + 152);
  if (v25)
  {
    uint64_t v26 = *(void *)(a2 + 160);
    uint64_t v27 = (uint64_t *)sub_188CCE4(a1 + 144, *(_DWORD *)(a2 + 152));
    sub_1368FF8((uint64_t *)(a1 + 144), v27, (uint64_t *)(v26 + 8), v25, **(_DWORD **)(a1 + 160) - *(_DWORD *)(a1 + 152));
    int v28 = *(_DWORD *)(a1 + 152) + v25;
    *(_DWORD *)(a1 + 152) = v28;
    int v29 = *(int **)(a1 + 160);
    if (*v29 < v28) {
      int *v29 = v28;
    }
  }
  *(void *)(a1 + 168) = 0;
  *(void *)(a1 + 176) = 0;
  *(void *)(a1 + 184) = 0;
  int v30 = *(_DWORD *)(a2 + 176);
  if (v30)
  {
    uint64_t v31 = *(void *)(a2 + 184);
    uint64_t v32 = (std::string **)sub_188CCE4(a1 + 168, *(_DWORD *)(a2 + 176));
    sub_11DB348((uint64_t *)(a1 + 168), v32, (uint64_t *)(v31 + 8), v30, **(_DWORD **)(a1 + 184) - *(_DWORD *)(a1 + 176));
    int v33 = *(_DWORD *)(a1 + 176) + v30;
    *(_DWORD *)(a1 + 176) = v33;
    unint64_t v34 = *(int **)(a1 + 184);
    if (*v34 < v33) {
      *unint64_t v34 = v33;
    }
  }
  *(void *)(a1 + 192) = 0;
  *(void *)(a1 + 200) = 0;
  *(void *)(a1 + 208) = 0;
  int v35 = *(_DWORD *)(a2 + 200);
  if (v35)
  {
    uint64_t v36 = *(void *)(a2 + 208);
    uint64_t v37 = (std::string **)sub_188CCE4(a1 + 192, *(_DWORD *)(a2 + 200));
    sub_188FB98(a1 + 192, v37, (const std::string **)(v36 + 8), v35, **(_DWORD **)(a1 + 208) - *(_DWORD *)(a1 + 200));
    int v38 = *(_DWORD *)(a1 + 200) + v35;
    *(_DWORD *)(a1 + 200) = v38;
    uint64_t v39 = *(int **)(a1 + 208);
    if (*v39 < v38) {
      *uint64_t v39 = v38;
    }
  }
  *(void *)(a1 + 216) = 0;
  *(void *)(a1 + 224) = 0;
  *(void *)(a1 + 232) = 0;
  int v40 = *(_DWORD *)(a2 + 224);
  if (v40)
  {
    uint64_t v41 = *(void *)(a2 + 232);
    uint64_t v42 = (std::string **)sub_188CCE4(a1 + 216, *(_DWORD *)(a2 + 224));
    sub_188FB98(a1 + 216, v42, (const std::string **)(v41 + 8), v40, **(_DWORD **)(a1 + 232) - *(_DWORD *)(a1 + 224));
    int v43 = *(_DWORD *)(a1 + 224) + v40;
    *(_DWORD *)(a1 + 224) = v43;
    BOOL v44 = *(int **)(a1 + 232);
    if (*v44 < v43) {
      *BOOL v44 = v43;
    }
  }
  uint64_t v45 = *(void *)(a2 + 8);
  if (v45) {
    sub_188B4F8(v56, (v45 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v55, a2 + 16);
  *(void *)(a1 + 240) = &qword_2550250;
  int v46 = *(_DWORD *)(a2 + 40);
  if (v46)
  {
    int v47 = (uint64_t *)(*v56 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v56) {
      int v47 = (uint64_t *)*v47;
    }
    sub_1881DF4((std::string **)(a1 + 240), (long long *)(*(void *)(a2 + 240) & 0xFFFFFFFFFFFFFFFELL), v47);
    int v46 = *(_DWORD *)(a2 + 40);
  }
  *(void *)(a1 + 248) = &qword_2550250;
  if ((v46 & 2) != 0)
  {
    int v48 = (uint64_t *)(*v56 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v56) {
      int v48 = (uint64_t *)*v48;
    }
    sub_1881DF4((std::string **)(a1 + 248), (long long *)(*(void *)(a2 + 248) & 0xFFFFFFFFFFFFFFFELL), v48);
    int v46 = *(_DWORD *)(a2 + 40);
  }
  *(void *)(a1 + 256) = &qword_2550250;
  if ((v46 & 4) != 0)
  {
    uint64_t v49 = (uint64_t *)(*v56 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v56) {
      uint64_t v49 = (uint64_t *)*v49;
    }
    sub_1881DF4((std::string **)(a1 + 256), (long long *)(*(void *)(a2 + 256) & 0xFFFFFFFFFFFFFFFELL), v49);
    int v46 = *(_DWORD *)(a2 + 40);
  }
  *(void *)(a1 + 264) = &qword_2550250;
  if ((v46 & 8) != 0)
  {
    uint64_t v50 = (uint64_t *)(*v56 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v56) {
      uint64_t v50 = (uint64_t *)*v50;
    }
    sub_1881DF4((std::string **)(a1 + 264), (long long *)(*(void *)(a2 + 264) & 0xFFFFFFFFFFFFFFFELL), v50);
    int v46 = *(_DWORD *)(a2 + 40);
  }
  *(void *)(a1 + 272) = &qword_2550250;
  if ((v46 & 0x10) != 0)
  {
    int v51 = (uint64_t *)(*v56 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v56) {
      int v51 = (uint64_t *)*v51;
    }
    sub_1881DF4((std::string **)(a1 + 272), (long long *)(*(void *)(a2 + 272) & 0xFFFFFFFFFFFFFFFELL), v51);
    int v46 = *(_DWORD *)(a2 + 40);
  }
  if ((v46 & 0x20) != 0) {
    operator new();
  }
  *(void *)(a1 + 280) = 0;
  if ((v46 & 0x40) != 0) {
    operator new();
  }
  *(void *)(a1 + 288) = 0;
  if ((v46 & 0x80) != 0) {
    operator new();
  }
  *(void *)(a1 + 296) = 0;
  if ((v46 & 0x100) != 0) {
    operator new();
  }
  *(void *)(a1 + 304) = 0;
  if ((v46 & 0x200) != 0) {
    operator new();
  }
  *(void *)(a1 + 312) = 0;
  if ((v46 & 0x400) != 0) {
    operator new();
  }
  *(void *)(a1 + 320) = 0;
  if ((v46 & 0x800) != 0) {
    operator new();
  }
  *(void *)(a1 + 328) = 0;
  if ((v46 & 0x1000) != 0) {
    operator new();
  }
  *(void *)(a1 + 336) = 0;
  if ((v46 & 0x2000) != 0) {
    operator new();
  }
  *(void *)(a1 + 344) = 0;
  if ((v46 & 0x4000) != 0) {
    operator new();
  }
  *(void *)(a1 + 352) = 0;
  if ((v46 & 0x8000) != 0) {
    operator new();
  }
  *(void *)(a1 + 360) = 0;
  if ((v46 & 0x10000) != 0) {
    operator new();
  }
  *(void *)(a1 + 368) = 0;
  if ((v46 & 0x20000) != 0) {
    operator new();
  }
  *(void *)(a1 + 376) = 0;
  long long v52 = *(_OWORD *)(a2 + 384);
  long long v53 = *(_OWORD *)(a2 + 400);
  *(unsigned char *)(a1 + 416) = *(unsigned char *)(a2 + 416);
  *(_OWORD *)(a1 + 384) = v52;
  *(_OWORD *)(a1 + 400) = v53;
  return a1;
}

void sub_13E1B84()
{
}

void *sub_13E1D68(void *a1)
{
  unsigned int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  char v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_13E1E48((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  sub_1889DE8(a1 + 27);
  sub_1889DE8(a1 + 24);
  sub_11DB1BC(a1 + 21);
  sub_1368D54(a1 + 18);
  sub_1889DE8(a1 + 15);
  sub_1368D54(a1 + 12);
  sub_148ED3C(a1 + 9);
  sub_12C51B4(a1 + 6);
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void ***sub_13E1E48(uint64_t a1)
{
  unsigned int v3 = *(uint64_t **)(a1 + 240);
  uint64_t v2 = (void ***)(a1 + 240);
  if (v3 != &qword_2550250) {
    sub_1881C6C(v2);
  }
  uint64_t result = (void ***)(a1 + 248);
  if (*(uint64_t **)(a1 + 248) != &qword_2550250) {
    sub_1881C6C(result);
  }
  if (*(uint64_t **)(a1 + 256) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 256));
  }
  if (*(uint64_t **)(a1 + 264) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 264));
  }
  if (*(uint64_t **)(a1 + 272) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 272));
  }
  if ((uint64_t (***)())a1 != &off_2536D08)
  {
    uint64_t v5 = *(void *)(a1 + 280);
    if (v5)
    {
      sub_15B3DFC(v5);
      operator delete();
    }
    uint64_t v6 = *(void **)(a1 + 288);
    if (v6)
    {
      sub_13AE494(v6);
      operator delete();
    }
    unint64_t v7 = *(void **)(a1 + 296);
    if (v7)
    {
      sub_145A5CC(v7);
      operator delete();
    }
    if (*(void *)(a1 + 304))
    {
      sub_15B9F30();
      operator delete();
    }
    int v8 = *(void **)(a1 + 312);
    if (v8)
    {
      sub_1477530(v8);
      operator delete();
    }
    unint64_t v9 = *(void **)(a1 + 320);
    if (v9)
    {
      sub_13B1884(v9);
      operator delete();
    }
    if (*(void *)(a1 + 328))
    {
      sub_13059CC();
      operator delete();
    }
    uint64_t v10 = *(void *)(a1 + 336);
    if (v10)
    {
      sub_13DFCDC(v10);
      operator delete();
    }
    uint64_t v11 = *(void *)(a1 + 344);
    if (v11)
    {
      sub_15B3DFC(v11);
      operator delete();
    }
    uint64_t v12 = *(void *)(a1 + 352);
    if (v12)
    {
      sub_13D12B4(v12);
      operator delete();
    }
    if (*(void *)(a1 + 360))
    {
      sub_15C0D18();
      operator delete();
    }
    int v13 = *(void **)(a1 + 368);
    if (v13)
    {
      sub_13D4894(v13);
      operator delete();
    }
    uint64_t result = *(void ****)(a1 + 376);
    if (result)
    {
      sub_13B2294(result);
      operator delete();
    }
  }
  return result;
}

void sub_13E209C(void *a1)
{
  sub_13E1D68(a1);

  operator delete();
}

uint64_t sub_13E20D4(uint64_t a1)
{
  sub_18843A4((unsigned char *)(a1 + 16));
  uint64_t v2 = *(unsigned int *)(a1 + 56);
  if ((int)v2 >= 1)
  {
    unsigned int v3 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v4 = *v3++;
      sub_13E8D98(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(a1 + 56) = 0;
  }
  uint64_t v5 = *(unsigned int *)(a1 + 80);
  if ((int)v5 >= 1)
  {
    uint64_t v6 = (uint64_t *)(*(void *)(a1 + 88) + 8);
    do
    {
      uint64_t v7 = *v6++;
      sub_13DC214(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(a1 + 80) = 0;
  }
  uint64_t v8 = *(unsigned int *)(a1 + 104);
  if ((int)v8 >= 1)
  {
    unint64_t v9 = (uint64_t *)(*(void *)(a1 + 112) + 8);
    do
    {
      uint64_t v10 = *v9++;
      sub_13E8E44(v10);
      --v8;
    }
    while (v8);
    *(_DWORD *)(a1 + 104) = 0;
  }
  sub_188CC00(a1 + 120);
  uint64_t v11 = *(unsigned int *)(a1 + 152);
  if ((int)v11 >= 1)
  {
    uint64_t v12 = (uint64_t *)(*(void *)(a1 + 160) + 8);
    do
    {
      uint64_t v13 = *v12++;
      sub_13E8E44(v13);
      --v11;
    }
    while (v11);
    *(_DWORD *)(a1 + 152) = 0;
  }
  uint64_t v14 = *(unsigned int *)(a1 + 176);
  if ((int)v14 >= 1)
  {
    int v15 = (uint64_t *)(*(void *)(a1 + 184) + 8);
    do
    {
      uint64_t v16 = *v15++;
      sub_15BAAF0(v16);
      --v14;
    }
    while (v14);
    *(_DWORD *)(a1 + 176) = 0;
  }
  sub_188CC00(a1 + 192);
  uint64_t result = sub_188CC00(a1 + 216);
  int v18 = *(_DWORD *)(a1 + 40);
  if (!(_BYTE)v18) {
    goto LABEL_31;
  }
  if ((v18 & 1) == 0)
  {
    if ((v18 & 2) == 0) {
      goto LABEL_24;
    }
LABEL_67:
    unint64_t v24 = *(void *)(a1 + 248) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v24 + 23) < 0)
    {
      **(unsigned char **)unint64_t v24 = 0;
      *(void *)(v24 + 8) = 0;
      if ((v18 & 4) != 0) {
        goto LABEL_71;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v24 = 0;
      *(unsigned char *)(v24 + 23) = 0;
      if ((v18 & 4) != 0) {
        goto LABEL_71;
      }
    }
LABEL_25:
    if ((v18 & 8) == 0) {
      goto LABEL_26;
    }
LABEL_75:
    unint64_t v26 = *(void *)(a1 + 264) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v26 + 23) < 0)
    {
      **(unsigned char **)unint64_t v26 = 0;
      *(void *)(v26 + 8) = 0;
      if ((v18 & 0x10) != 0) {
        goto LABEL_79;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v26 = 0;
      *(unsigned char *)(v26 + 23) = 0;
      if ((v18 & 0x10) != 0) {
        goto LABEL_79;
      }
    }
LABEL_27:
    if ((v18 & 0x20) == 0) {
      goto LABEL_28;
    }
LABEL_83:
    uint64_t result = sub_15B043C(*(void *)(a1 + 280));
    if ((v18 & 0x40) == 0)
    {
LABEL_29:
      if ((v18 & 0x80) == 0) {
        goto LABEL_31;
      }
      goto LABEL_30;
    }
    goto LABEL_84;
  }
  unint64_t v23 = *(void *)(a1 + 240) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v23 + 23) < 0)
  {
    **(unsigned char **)unint64_t v23 = 0;
    *(void *)(v23 + 8) = 0;
    if ((v18 & 2) != 0) {
      goto LABEL_67;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v23 = 0;
    *(unsigned char *)(v23 + 23) = 0;
    if ((v18 & 2) != 0) {
      goto LABEL_67;
    }
  }
LABEL_24:
  if ((v18 & 4) == 0) {
    goto LABEL_25;
  }
LABEL_71:
  unint64_t v25 = *(void *)(a1 + 256) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v25 + 23) < 0)
  {
    **(unsigned char **)unint64_t v25 = 0;
    *(void *)(v25 + 8) = 0;
    if ((v18 & 8) != 0) {
      goto LABEL_75;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v25 = 0;
    *(unsigned char *)(v25 + 23) = 0;
    if ((v18 & 8) != 0) {
      goto LABEL_75;
    }
  }
LABEL_26:
  if ((v18 & 0x10) == 0) {
    goto LABEL_27;
  }
LABEL_79:
  unint64_t v27 = *(void *)(a1 + 272) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v27 + 23) < 0)
  {
    **(unsigned char **)unint64_t v27 = 0;
    *(void *)(v27 + 8) = 0;
    if ((v18 & 0x20) != 0) {
      goto LABEL_83;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v27 = 0;
    *(unsigned char *)(v27 + 23) = 0;
    if ((v18 & 0x20) != 0) {
      goto LABEL_83;
    }
  }
LABEL_28:
  if ((v18 & 0x40) == 0) {
    goto LABEL_29;
  }
LABEL_84:
  uint64_t result = sub_13AE68C(*(void *)(a1 + 288));
  if ((v18 & 0x80) != 0) {
LABEL_30:
  }
    uint64_t result = sub_13E0F24(*(void *)(a1 + 296));
LABEL_31:
  if ((v18 & 0xFF00) == 0) {
    goto LABEL_41;
  }
  if ((v18 & 0x100) != 0)
  {
    uint64_t result = sub_15B9F6C(*(void *)(a1 + 304));
    if ((v18 & 0x200) == 0)
    {
LABEL_34:
      if ((v18 & 0x400) == 0) {
        goto LABEL_35;
      }
      goto LABEL_60;
    }
  }
  else if ((v18 & 0x200) == 0)
  {
    goto LABEL_34;
  }
  uint64_t result = sub_13E123C(*(void *)(a1 + 312));
  if ((v18 & 0x400) == 0)
  {
LABEL_35:
    if ((v18 & 0x800) == 0) {
      goto LABEL_36;
    }
    goto LABEL_61;
  }
LABEL_60:
  uint64_t result = sub_13B1930(*(void *)(a1 + 320));
  if ((v18 & 0x800) == 0)
  {
LABEL_36:
    if ((v18 & 0x1000) == 0) {
      goto LABEL_37;
    }
    goto LABEL_62;
  }
LABEL_61:
  uint64_t result = (uint64_t)sub_1305A08(*(void *)(a1 + 328));
  if ((v18 & 0x1000) == 0)
  {
LABEL_37:
    if ((v18 & 0x2000) == 0) {
      goto LABEL_38;
    }
    goto LABEL_63;
  }
LABEL_62:
  uint64_t result = sub_13DFE14(*(void *)(a1 + 336));
  if ((v18 & 0x2000) == 0)
  {
LABEL_38:
    if ((v18 & 0x4000) == 0) {
      goto LABEL_39;
    }
    goto LABEL_64;
  }
LABEL_63:
  uint64_t result = sub_15B043C(*(void *)(a1 + 344));
  if ((v18 & 0x4000) == 0)
  {
LABEL_39:
    if ((v18 & 0x8000) == 0) {
      goto LABEL_41;
    }
    goto LABEL_40;
  }
LABEL_64:
  uint64_t result = sub_13D13FC(*(void *)(a1 + 352));
  if ((v18 & 0x8000) != 0) {
LABEL_40:
  }
    uint64_t result = sub_15C0D54(*(void *)(a1 + 360));
LABEL_41:
  if ((v18 & 0x30000) != 0)
  {
    if ((v18 & 0x10000) != 0)
    {
      uint64_t v19 = *(void *)(a1 + 368);
      char v20 = *(unsigned char *)(v19 + 8);
      uint64_t result = v19 + 8;
      *(unsigned char *)(result + 16) = 0;
      *(_DWORD *)(result + 8) = 0;
      if (v20) {
        uint64_t result = sub_188B4AC((uint64_t *)result);
      }
    }
    if ((v18 & 0x20000) != 0) {
      uint64_t result = sub_13B2348(*(void *)(a1 + 376));
    }
  }
  if ((v18 & 0xFC0000) != 0)
  {
    *(void *)(a1 + 384) = 0;
    *(void *)(a1 + 392) = 0;
    *(_DWORD *)(a1 + 408) = 0;
    *(void *)(a1 + 400) = 0;
  }
  if ((v18 & 0x3000000) != 0)
  {
    *(_DWORD *)(a1 + 412) = 0;
    *(unsigned char *)(a1 + 416) = 1;
  }
  char v22 = *(unsigned char *)(a1 + 8);
  uint64_t v21 = a1 + 8;
  *(_DWORD *)(v21 + 32) = 0;
  if (v22)
  {
    return sub_188B4AC((uint64_t *)v21);
  }
  return result;
}

uint64_t sub_13E2434(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v140 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v140, a3[11].i32[1]))
  {
    int v138 = 0;
    goto LABEL_3;
  }
  int v138 = 0;
  int v139 = (uint64_t **)(a1 + 216);
  uint64_t v6 = (uint64_t **)(a1 + 192);
  unsigned int v137 = (uint64_t *)(a1 + 8);
  uint64_t v7 = (uint64_t **)(a1 + 120);
  while (2)
  {
    uint64_t v8 = (unsigned __int8 *)(*(void *)v140 + 1);
    unsigned int v9 = **(unsigned char **)v140;
    if ((char)**(unsigned char **)v140 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        uint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v140, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (unsigned __int8 *)(*(void *)v140 + 2);
      }
    }
    *(void *)int v140 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_240;
        }
        *(_DWORD *)(a1 + 40) |= 0x20u;
        uint64_t v12 = *(void *)(a1 + 280);
        if (v12) {
          goto LABEL_144;
        }
        uint64_t v13 = (void *)(*v137 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v137) {
          uint64_t v13 = (void *)*v13;
        }
        uint64_t v12 = sub_15C1CB4((uint64_t)v13);
        *(void *)(a1 + 280) = v12;
        goto LABEL_143;
      case 2u:
        if (v9 != 18) {
          goto LABEL_240;
        }
        *(_DWORD *)(a1 + 40) |= 0x40u;
        uint64_t v20 = *(void *)(a1 + 288);
        if (!v20)
        {
          uint64_t v21 = (void *)(*v137 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v137) {
            uint64_t v21 = (void *)*v21;
          }
          uint64_t v20 = sub_13D8F60((uint64_t)v21);
          *(void *)(a1 + 288) = v20;
          uint64_t v8 = *(unsigned __int8 **)v140;
        }
        uint64_t v22 = sub_1352A74(a3, v20, v8);
        goto LABEL_162;
      case 3u:
        if (v9 != 24) {
          goto LABEL_240;
        }
        v138 |= 0x2000000u;
        unint64_t v23 = (char *)(v8 + 1);
        uint64_t v24 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_36;
        }
        int v25 = *v23;
        uint64_t v24 = v24 + (v25 << 7) - 128;
        if (v25 < 0)
        {
          uint64_t v123 = sub_188C138((uint64_t)v8, v24);
          *(void *)int v140 = v123;
          *(unsigned char *)(a1 + 416) = v124 != 0;
          if (!v123) {
            goto LABEL_276;
          }
        }
        else
        {
          unint64_t v23 = (char *)(v8 + 2);
LABEL_36:
          *(void *)int v140 = v23;
          *(unsigned char *)(a1 + 416) = v24 != 0;
        }
        goto LABEL_163;
      case 4u:
        if (v9 != 34) {
          goto LABEL_240;
        }
        unint64_t v26 = (char *)(v8 - 1);
        while (1)
        {
          unint64_t v27 = (unsigned __int8 *)(v26 + 1);
          *(void *)int v140 = v26 + 1;
          int v28 = *(_DWORD **)(a1 + 64);
          if (v28 && (uint64_t v29 = *(int *)(a1 + 56), (int)v29 < *v28))
          {
            *(_DWORD *)(a1 + 56) = v29 + 1;
            uint64_t v30 = *(void *)&v28[2 * v29 + 2];
          }
          else
          {
            uint64_t v31 = sub_1479450(*(void *)(a1 + 48));
            uint64_t v30 = sub_188CDC8(a1 + 48, v31);
            unint64_t v27 = *(unsigned __int8 **)v140;
          }
          unint64_t v26 = sub_12BD720(a3, v30, v27);
          *(void *)int v140 = v26;
          if (!v26) {
            goto LABEL_276;
          }
          if (*(void *)a3 <= (unint64_t)v26 || *v26 != 34) {
            goto LABEL_163;
          }
        }
      case 5u:
        if (v9 != 42) {
          goto LABEL_240;
        }
        uint64_t v32 = (char *)(v8 - 1);
        while (1)
        {
          int v33 = (unsigned __int8 *)(v32 + 1);
          *(void *)int v140 = v32 + 1;
          unint64_t v34 = *(_DWORD **)(a1 + 88);
          if (v34 && (uint64_t v35 = *(int *)(a1 + 80), (int)v35 < *v34))
          {
            *(_DWORD *)(a1 + 80) = v35 + 1;
            uint64_t v36 = *(void *)&v34[2 * v35 + 2];
          }
          else
          {
            uint64_t v37 = sub_13F37D4(*(void *)(a1 + 72));
            uint64_t v36 = sub_188CDC8(a1 + 72, v37);
            int v33 = *(unsigned __int8 **)v140;
          }
          uint64_t v32 = sub_13E0408(a3, v36, v33);
          *(void *)int v140 = v32;
          if (!v32) {
            goto LABEL_276;
          }
          if (*(void *)a3 <= (unint64_t)v32 || *v32 != 42) {
            goto LABEL_163;
          }
        }
      case 6u:
        if (v9 != 50) {
          goto LABEL_240;
        }
        *(_DWORD *)(a1 + 40) |= 0x80u;
        uint64_t v38 = *(void *)(a1 + 296);
        if (!v38)
        {
          uint64_t v39 = (void *)(*v137 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v137) {
            uint64_t v39 = (void *)*v39;
          }
          sub_1478B2C((uint64_t)v39);
          uint64_t v38 = v40;
          *(void *)(a1 + 296) = v40;
          uint64_t v8 = *(unsigned __int8 **)v140;
        }
        uint64_t v22 = sub_1281B58(a3, v38, v8);
        goto LABEL_162;
      case 7u:
        if (v9 != 58) {
          goto LABEL_240;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        uint64_t v41 = *(void *)(a1 + 8);
        uint64_t v42 = (uint64_t *)(v41 & 0xFFFFFFFFFFFFFFFCLL);
        if (v41) {
          uint64_t v42 = (uint64_t *)*v42;
        }
        int v43 = (void *)(a1 + 240);
        goto LABEL_161;
      case 8u:
        if (v9 != 66) {
          goto LABEL_240;
        }
        *(_DWORD *)(a1 + 40) |= 0x100u;
        BOOL v44 = *(void **)(a1 + 304);
        if (!v44)
        {
          uint64_t v45 = (void *)(*v137 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v137) {
            uint64_t v45 = (void *)*v45;
          }
          BOOL v44 = sub_15C2014((uint64_t)v45);
          *(void *)(a1 + 304) = v44;
          uint64_t v8 = *(unsigned __int8 **)v140;
        }
        uint64_t v22 = (uint64_t)sub_11EAA5C(a3, (uint64_t)v44, v8);
        goto LABEL_162;
      case 9u:
        if (v9 != 74) {
          goto LABEL_240;
        }
        *(_DWORD *)(a1 + 40) |= 0x200u;
        uint64_t v46 = *(void *)(a1 + 312);
        if (!v46)
        {
          int v47 = (void *)(*v137 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v137) {
            int v47 = (void *)*v47;
          }
          uint64_t v46 = sub_1479978((uint64_t)v47);
          *(void *)(a1 + 312) = v46;
          uint64_t v8 = *(unsigned __int8 **)v140;
        }
        uint64_t v22 = sub_1352B04(a3, v46, v8);
        goto LABEL_162;
      case 0xAu:
        if (v9 != 82) {
          goto LABEL_240;
        }
        int v48 = (char *)(v8 - 1);
        while (1)
        {
          uint64_t v49 = (unsigned __int8 *)(v48 + 1);
          *(void *)int v140 = v48 + 1;
          uint64_t v50 = *(_DWORD **)(a1 + 112);
          if (v50 && (uint64_t v51 = *(int *)(a1 + 104), (int)v51 < *v50))
          {
            *(_DWORD *)(a1 + 104) = v51 + 1;
            uint64_t v52 = *(void *)&v50[2 * v51 + 2];
          }
          else
          {
            sub_1479774(*(void *)(a1 + 96));
            uint64_t v52 = sub_188CDC8(a1 + 96, v53);
            uint64_t v49 = *(unsigned __int8 **)v140;
          }
          int v48 = sub_13529E4(a3, v52, v49);
          *(void *)int v140 = v48;
          if (!v48) {
            goto LABEL_276;
          }
          if (*(void *)a3 <= (unint64_t)v48 || *v48 != 82) {
            goto LABEL_163;
          }
        }
      case 0xBu:
        if (v9 != 88) {
          goto LABEL_240;
        }
        v138 |= 0x40000u;
        uint64_t v54 = (char *)(v8 + 1);
        int v55 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_93;
        }
        int v56 = *v54;
        int v55 = v55 + (v56 << 7) - 128;
        if (v56 < 0)
        {
          uint64_t v125 = sub_188C0D0((uint64_t)v8, v55);
          *(void *)int v140 = v125;
          *(_DWORD *)(a1 + 384) = v126;
          if (!v125) {
            goto LABEL_276;
          }
        }
        else
        {
          uint64_t v54 = (char *)(v8 + 2);
LABEL_93:
          *(void *)int v140 = v54;
          *(_DWORD *)(a1 + 384) = v55;
        }
        goto LABEL_163;
      case 0xCu:
        if (v9 != 98) {
          goto LABEL_240;
        }
        *(_DWORD *)(a1 + 40) |= 2u;
        uint64_t v57 = *(void *)(a1 + 8);
        uint64_t v42 = (uint64_t *)(v57 & 0xFFFFFFFFFFFFFFFCLL);
        if (v57) {
          uint64_t v42 = (uint64_t *)*v42;
        }
        int v43 = (void *)(a1 + 248);
        goto LABEL_161;
      case 0xDu:
        if (v9 != 104) {
          goto LABEL_240;
        }
        int v58 = (char *)(v8 + 1);
        unint64_t v59 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_102;
        }
        int v60 = *v58;
        int v61 = v59 + (v60 << 7);
        unint64_t v59 = (v61 - 128);
        if (v60 < 0)
        {
          *(void *)int v140 = sub_188C138((uint64_t)v8, (v61 - 128));
          if (!*(void *)v140) {
            goto LABEL_276;
          }
          unint64_t v59 = v127;
        }
        else
        {
          int v58 = (char *)(v8 + 2);
LABEL_102:
          *(void *)int v140 = v58;
        }
        if (v59 <= 4)
        {
          *(_DWORD *)(a1 + 40) |= 0x80000u;
          *(_DWORD *)(a1 + 388) = v59;
          goto LABEL_163;
        }
        if (*v137) {
          unsigned int v135 = (std::string *)((*v137 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          unsigned int v135 = (std::string *)sub_188DBD8(v137);
        }
        int v136 = 13;
        goto LABEL_270;
      case 0xEu:
        if (v9 != 114) {
          goto LABEL_240;
        }
        *(_DWORD *)(a1 + 40) |= 0x400u;
        uint64_t v62 = *(void *)(a1 + 320);
        if (!v62)
        {
          int v63 = (void *)(*v137 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v137) {
            int v63 = (void *)*v63;
          }
          uint64_t v62 = sub_13D9048((uint64_t)v63);
          *(void *)(a1 + 320) = v62;
          uint64_t v8 = *(unsigned __int8 **)v140;
        }
        uint64_t v22 = (uint64_t)sub_13E34EC(a3, v62, v8);
        goto LABEL_162;
      case 0xFu:
      case 0x10u:
      case 0x11u:
        goto LABEL_240;
      case 0x12u:
        if (v9 != 146) {
          goto LABEL_240;
        }
        *(_DWORD *)(a1 + 40) |= 0x800u;
        uint64_t v64 = *(void **)(a1 + 328);
        if (!v64)
        {
          uint64_t v65 = (void *)(*v137 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v137) {
            uint64_t v65 = (void *)*v65;
          }
          uint64_t v64 = sub_130645C((uint64_t)v65);
          *(void *)(a1 + 328) = v64;
          uint64_t v8 = *(unsigned __int8 **)v140;
        }
        uint64_t v22 = (uint64_t)sub_1192188(a3, (uint64_t)v64, v8);
        goto LABEL_162;
      case 0x13u:
        if (v9 != 152) {
          goto LABEL_240;
        }
        v138 |= 0x200000u;
        int v66 = (char *)(v8 + 1);
        int v67 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_121;
        }
        int v68 = *v66;
        int v67 = v67 + (v68 << 7) - 128;
        if (v68 < 0)
        {
          uint64_t v128 = sub_188C0D0((uint64_t)v8, v67);
          *(void *)int v140 = v128;
          *(_DWORD *)(a1 + 400) = v129;
          if (!v128) {
            goto LABEL_276;
          }
        }
        else
        {
          int v66 = (char *)(v8 + 2);
LABEL_121:
          *(void *)int v140 = v66;
          *(_DWORD *)(a1 + 400) = v67;
        }
        goto LABEL_163;
      case 0x14u:
        if (v9 != 162) {
          goto LABEL_240;
        }
        *(_DWORD *)(a1 + 40) |= 4u;
        uint64_t v69 = *(void *)(a1 + 8);
        uint64_t v42 = (uint64_t *)(v69 & 0xFFFFFFFFFFFFFFFCLL);
        if (v69) {
          uint64_t v42 = (uint64_t *)*v42;
        }
        int v43 = (void *)(a1 + 256);
        goto LABEL_161;
      case 0x15u:
        if (v9 != 170) {
          goto LABEL_240;
        }
        *(_DWORD *)(a1 + 40) |= 8u;
        uint64_t v70 = *(void *)(a1 + 8);
        uint64_t v42 = (uint64_t *)(v70 & 0xFFFFFFFFFFFFFFFCLL);
        if (v70) {
          uint64_t v42 = (uint64_t *)*v42;
        }
        int v43 = (void *)(a1 + 264);
        goto LABEL_161;
      case 0x16u:
        if (v9 != 177) {
          goto LABEL_240;
        }
        v138 |= 0x100000u;
        *(void *)(a1 + 392) = *(void *)v8;
        *(void *)int v140 = v8 + 8;
        goto LABEL_163;
      case 0x17u:
        if (v9 != 186) {
          goto LABEL_240;
        }
        *(_DWORD *)(a1 + 40) |= 0x1000u;
        uint64_t v71 = *(void *)(a1 + 336);
        if (!v71)
        {
          unsigned int v72 = (void *)(*v137 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v137) {
            unsigned int v72 = (void *)*v72;
          }
          sub_13F3830((uint64_t)v72);
          uint64_t v71 = v73;
          *(void *)(a1 + 336) = v73;
          uint64_t v8 = *(unsigned __int8 **)v140;
        }
        uint64_t v22 = (uint64_t)sub_13E357C(a3, v71, v8);
        goto LABEL_162;
      case 0x18u:
        if (v9 != 194) {
          goto LABEL_240;
        }
        *(_DWORD *)(a1 + 40) |= 0x2000u;
        uint64_t v12 = *(void *)(a1 + 344);
        if (v12) {
          goto LABEL_144;
        }
        int v74 = (void *)(*v137 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v137) {
          int v74 = (void *)*v74;
        }
        uint64_t v12 = sub_15C1CB4((uint64_t)v74);
        *(void *)(a1 + 344) = v12;
LABEL_143:
        uint64_t v8 = *(unsigned __int8 **)v140;
LABEL_144:
        uint64_t v22 = (uint64_t)sub_11B3E48(a3, v12, v8);
        goto LABEL_162;
      case 0x19u:
        if (v9 != 202) {
          goto LABEL_240;
        }
        uint64_t v75 = (const std::string::value_type *)(v8 - 2);
        while (1)
        {
          int v76 = (char *)(v75 + 2);
          *(void *)int v140 = v75 + 2;
          uint64_t v77 = *(_DWORD **)(a1 + 136);
          if (v77 && (uint64_t v78 = *(int *)(a1 + 128), (int)v78 < *v77))
          {
            *(_DWORD *)(a1 + 128) = v78 + 1;
            int v79 = *(std::string **)&v77[2 * v78 + 2];
          }
          else
          {
            if (!*v7) {
              operator new();
            }
            *int v81 = v80;
            v81[1] = sub_3A6EDC;
            *uint64_t v80 = 0;
            v80[1] = 0;
            v80[2] = 0;
            int v79 = (std::string *)sub_188CDC8(a1 + 120, (uint64_t)v80);
            int v76 = *(char **)v140;
          }
          uint64_t v75 = sub_188C244(v79, v76, (uint64_t)a3);
          *(void *)int v140 = v75;
          if (!v75) {
            goto LABEL_276;
          }
          if (*(void *)a3 <= (unint64_t)v75 || *(_WORD *)v75 != 458) {
            goto LABEL_163;
          }
        }
      case 0x1Au:
        if (v9 != 210) {
          goto LABEL_240;
        }
        *(_DWORD *)(a1 + 40) |= 0x10u;
        uint64_t v82 = *(void *)(a1 + 8);
        uint64_t v42 = (uint64_t *)(v82 & 0xFFFFFFFFFFFFFFFCLL);
        if (v82) {
          uint64_t v42 = (uint64_t *)*v42;
        }
        int v43 = (void *)(a1 + 272);
LABEL_161:
        uint64_t v83 = (std::string *)sub_1880F84(v43, v42);
        uint64_t v22 = (uint64_t)sub_188C244(v83, *(char **)v140, (uint64_t)a3);
        goto LABEL_162;
      case 0x1Bu:
        if (v9 != 218) {
          goto LABEL_240;
        }
        uint64_t v84 = (char *)(v8 - 2);
        while (1)
        {
          uint64_t v85 = (unsigned __int8 *)(v84 + 2);
          *(void *)int v140 = v84 + 2;
          uint64_t v86 = *(_DWORD **)(a1 + 160);
          if (v86 && (uint64_t v87 = *(int *)(a1 + 152), (int)v87 < *v86))
          {
            *(_DWORD *)(a1 + 152) = v87 + 1;
            uint64_t v88 = *(void *)&v86[2 * v87 + 2];
          }
          else
          {
            sub_1479774(*(void *)(a1 + 144));
            uint64_t v88 = sub_188CDC8(a1 + 144, v89);
            uint64_t v85 = *(unsigned __int8 **)v140;
          }
          uint64_t v84 = sub_13529E4(a3, v88, v85);
          *(void *)int v140 = v84;
          if (!v84) {
            goto LABEL_276;
          }
          if (*(void *)a3 <= (unint64_t)v84 || *(_WORD *)v84 != 474) {
            goto LABEL_163;
          }
        }
      case 0x1Cu:
        if (v9 != 226) {
          goto LABEL_240;
        }
        *(_DWORD *)(a1 + 40) |= 0x4000u;
        uint64_t v90 = *(void *)(a1 + 352);
        if (!v90)
        {
          uint64_t v91 = (void *)(*v137 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v137) {
            uint64_t v91 = (void *)*v91;
          }
          uint64_t v90 = sub_13DAA4C((uint64_t)v91);
          *(void *)(a1 + 352) = v90;
          uint64_t v8 = *(unsigned __int8 **)v140;
        }
        uint64_t v22 = sub_13E360C(a3, v90, v8);
        goto LABEL_162;
      case 0x1Du:
        if (v9 != 234) {
          goto LABEL_240;
        }
        *(_DWORD *)(a1 + 40) |= 0x8000u;
        uint64_t v92 = *(void *)(a1 + 360);
        if (!v92)
        {
          uint64_t v93 = (void *)(*v137 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v137) {
            uint64_t v93 = (void *)*v93;
          }
          uint64_t v92 = sub_15C26A4((uint64_t)v93);
          *(void *)(a1 + 360) = v92;
          uint64_t v8 = *(unsigned __int8 **)v140;
        }
        uint64_t v22 = (uint64_t)sub_1352B94(a3, v92, v8);
        goto LABEL_162;
      case 0x1Eu:
        if (v9 != 240) {
          goto LABEL_240;
        }
        v138 |= 0x400000u;
        uint64_t v94 = (char *)(v8 + 1);
        int v95 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_191;
        }
        int v96 = *v94;
        int v95 = v95 + (v96 << 7) - 128;
        if (v96 < 0)
        {
          uint64_t v130 = sub_188C0D0((uint64_t)v8, v95);
          *(void *)int v140 = v130;
          *(_DWORD *)(a1 + 404) = v131;
          if (!v130) {
            goto LABEL_276;
          }
        }
        else
        {
          uint64_t v94 = (char *)(v8 + 2);
LABEL_191:
          *(void *)int v140 = v94;
          *(_DWORD *)(a1 + 404) = v95;
        }
        goto LABEL_163;
      case 0x1Fu:
        if (v9 != 250) {
          goto LABEL_240;
        }
        *(_DWORD *)(a1 + 40) |= 0x10000u;
        uint64_t v97 = *(void *)(a1 + 368);
        if (!v97)
        {
          uint64_t v98 = (void *)(*v137 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v137) {
            uint64_t v98 = (void *)*v98;
          }
          uint64_t v97 = sub_13DAC1C((uint64_t)v98);
          *(void *)(a1 + 368) = v97;
          uint64_t v8 = *(unsigned __int8 **)v140;
        }
        uint64_t v22 = (uint64_t)sub_13E369C(a3, v97, v8);
        goto LABEL_162;
      case 0x20u:
        if (v9 != 2) {
          goto LABEL_240;
        }
        *(_DWORD *)(a1 + 40) |= 0x20000u;
        uint64_t v99 = *(void *)(a1 + 376);
        if (!v99)
        {
          uint64_t v100 = (void *)(*v137 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v137) {
            uint64_t v100 = (void *)*v100;
          }
          uint64_t v99 = sub_13D90CC((uint64_t)v100);
          *(void *)(a1 + 376) = v99;
          uint64_t v8 = *(unsigned __int8 **)v140;
        }
        uint64_t v22 = sub_13E372C(a3, v99, v8);
        goto LABEL_162;
      case 0x21u:
        if (v9 == 8)
        {
          uint64_t v101 = (char *)(v8 + 1);
          unint64_t v59 = *v8;
          if ((char)*v8 < 0)
          {
            int v102 = *v101;
            int v103 = v59 + (v102 << 7);
            unint64_t v59 = (v103 - 128);
            if (v102 < 0)
            {
              *(void *)int v140 = sub_188C138((uint64_t)v8, (v103 - 128));
              if (!*(void *)v140) {
                goto LABEL_276;
              }
              unint64_t v59 = v132;
              goto LABEL_209;
            }
            uint64_t v101 = (char *)(v8 + 2);
          }
          *(void *)int v140 = v101;
LABEL_209:
          if (v59 > 6)
          {
            if (*v137) {
              unsigned int v135 = (std::string *)((*v137 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else {
              unsigned int v135 = (std::string *)sub_188DBD8(v137);
            }
            int v136 = 33;
LABEL_270:
            sub_188C020(v136, v59, v135);
          }
          else
          {
            *(_DWORD *)(a1 + 40) |= 0x800000u;
            *(_DWORD *)(a1 + 408) = v59;
          }
          goto LABEL_163;
        }
LABEL_240:
        if (v9) {
          BOOL v121 = (v9 & 7) == 4;
        }
        else {
          BOOL v121 = 1;
        }
        if (!v121)
        {
          if (v9 - 8000 < 0x968 || v9 - 80008 <= 0x31F)
          {
            uint64_t v22 = (uint64_t)sub_18859DC((uint64_t **)(a1 + 16), v9, (char *)v8, (uint64_t)&off_2536D08, v137, a3);
          }
          else
          {
            if (*v137)
            {
              uint64_t v122 = (std::string *)((*v137 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              uint64_t v122 = (std::string *)sub_188DBD8(v137);
              uint64_t v8 = *(unsigned __int8 **)v140;
            }
            uint64_t v22 = (uint64_t)sub_1885AC0(v9, v122, (char *)v8, a3);
          }
LABEL_162:
          *(void *)int v140 = v22;
          if (!v22) {
            goto LABEL_276;
          }
LABEL_163:
          if (sub_11947B8((uint64_t)a3, (char **)v140, a3[11].i32[1])) {
            goto LABEL_3;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_276:
        }
          *(void *)int v140 = 0;
LABEL_3:
        *(_DWORD *)(a1 + 40) |= v138;
        return *(void *)v140;
      default:
        switch(v9 >> 3)
        {
          case 'd':
            if (v9 != 34) {
              goto LABEL_240;
            }
            uint64_t v14 = v8 - 2;
            while (1)
            {
              int v15 = v14 + 2;
              *(void *)int v140 = v14 + 2;
              uint64_t v16 = *(_DWORD **)(a1 + 184);
              if (v16 && (uint64_t v17 = *(int *)(a1 + 176), (int)v17 < *v16))
              {
                *(_DWORD *)(a1 + 176) = v17 + 1;
                uint64_t v18 = *(void *)&v16[2 * v17 + 2];
              }
              else
              {
                uint64_t v19 = sub_15C2114(*(void *)(a1 + 168));
                uint64_t v18 = sub_188CDC8(a1 + 168, v19);
                int v15 = *(unsigned __int8 **)v140;
              }
              uint64_t v14 = (unsigned __int8 *)sub_11A058C(a3, v18, v15);
              *(void *)int v140 = v14;
              if (!v14) {
                goto LABEL_276;
              }
              if (*(void *)a3 <= (unint64_t)v14 || *(_WORD *)v14 != 1698) {
                goto LABEL_163;
              }
            }
          case 'e':
            if (v9 != 42) {
              goto LABEL_240;
            }
            uint64_t v104 = (const std::string::value_type *)(v8 - 2);
            while (1)
            {
              uint64_t v105 = (char *)(v104 + 2);
              *(void *)int v140 = v104 + 2;
              uint64_t v106 = *(_DWORD **)(a1 + 208);
              if (v106 && (uint64_t v107 = *(int *)(a1 + 200), (int)v107 < *v106))
              {
                *(_DWORD *)(a1 + 200) = v107 + 1;
                uint64_t v108 = *(std::string **)&v106[2 * v107 + 2];
              }
              else
              {
                if (!*v6) {
                  operator new();
                }
                void *v110 = v109;
                v110[1] = sub_3A6EDC;
                void *v109 = 0;
                v109[1] = 0;
                v109[2] = 0;
                uint64_t v108 = (std::string *)sub_188CDC8(a1 + 192, (uint64_t)v109);
                uint64_t v105 = *(char **)v140;
              }
              uint64_t v104 = sub_188C244(v108, v105, (uint64_t)a3);
              *(void *)int v140 = v104;
              if (!v104) {
                goto LABEL_276;
              }
              if (*(void *)a3 <= (unint64_t)v104 || *(_WORD *)v104 != 1706) {
                goto LABEL_163;
              }
            }
          case 'f':
            if (v9 != 50) {
              goto LABEL_240;
            }
            uint64_t v111 = (const std::string::value_type *)(v8 - 2);
            while (1)
            {
              unsigned int v112 = (char *)(v111 + 2);
              *(void *)int v140 = v111 + 2;
              uint64_t v113 = *(_DWORD **)(a1 + 232);
              if (v113 && (uint64_t v114 = *(int *)(a1 + 224), (int)v114 < *v113))
              {
                *(_DWORD *)(a1 + 224) = v114 + 1;
                uint64_t v115 = *(std::string **)&v113[2 * v114 + 2];
              }
              else
              {
                if (!*v139) {
                  operator new();
                }
                void *v117 = v116;
                v117[1] = sub_3A6EDC;
                void *v116 = 0;
                v116[1] = 0;
                v116[2] = 0;
                uint64_t v115 = (std::string *)sub_188CDC8((uint64_t)v139, (uint64_t)v116);
                unsigned int v112 = *(char **)v140;
              }
              uint64_t v111 = sub_188C244(v115, v112, (uint64_t)a3);
              *(void *)int v140 = v111;
              if (!v111) {
                goto LABEL_276;
              }
              if (*(void *)a3 <= (unint64_t)v111 || *(_WORD *)v111 != 1714) {
                goto LABEL_163;
              }
            }
          case 'g':
            if (v9 != 56) {
              goto LABEL_240;
            }
            v138 |= 0x1000000u;
            uint64_t v118 = (char *)(v8 + 1);
            int v119 = *v8;
            if (((char)*v8 & 0x80000000) == 0) {
              goto LABEL_239;
            }
            int v120 = *v118;
            int v119 = v119 + (v120 << 7) - 128;
            if (v120 < 0)
            {
              uint64_t v133 = sub_188C0D0((uint64_t)v8, v119);
              *(void *)int v140 = v133;
              *(_DWORD *)(a1 + 412) = v134;
              if (!v133) {
                goto LABEL_276;
              }
            }
            else
            {
              uint64_t v118 = (char *)(v8 + 2);
LABEL_239:
              *(void *)int v140 = v118;
              *(_DWORD *)(a1 + 412) = v119;
            }
            break;
          default:
            goto LABEL_240;
        }
        goto LABEL_163;
    }
  }
}

char *sub_13E34EC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_13B1960(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_13E357C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_13DFF44(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_13E360C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_13D154C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_13E369C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_13D4958(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_13E372C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_13B2398(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_13E37BC(uint64_t a1, char *a2, unint64_t *a3)
{
  uint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if ((v6 & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    uint64_t v7 = *(void *)(a1 + 280);
    char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 44);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    uint64_t v4 = sub_15B43E4(v7, v9, a3);
    if ((v6 & 0x40) == 0)
    {
LABEL_3:
      if ((v6 & 0x2000000) == 0) {
        goto LABEL_20;
      }
      goto LABEL_17;
    }
  }
  else if ((v6 & 0x40) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v10 = *(void *)(a1 + 288);
  char *v4 = 18;
  unsigned int v11 = *(_DWORD *)(v10 + 20);
  v4[1] = v11;
  if (v11 > 0x7F) {
    uint64_t v12 = sub_188A9CC(v11, v4 + 1);
  }
  else {
    uint64_t v12 = v4 + 2;
  }
  uint64_t v4 = sub_13AFD70(v10, (unint64_t)v12, a3);
  if ((v6 & 0x2000000) != 0)
  {
LABEL_17:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v13 = *(unsigned char *)(a1 + 416);
    char *v4 = 24;
    v4[1] = v13;
    v4 += 2;
  }
LABEL_20:
  int v14 = *(_DWORD *)(a1 + 56);
  if (v14)
  {
    for (int i = 0; i != v14; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v16 = *(void *)(*(void *)(a1 + 64) + 8 * i + 8);
      char *v4 = 34;
      unsigned int v17 = *(_DWORD *)(v16 + 44);
      v4[1] = v17;
      if (v17 > 0x7F) {
        uint64_t v18 = sub_188A9CC(v17, v4 + 1);
      }
      else {
        uint64_t v18 = v4 + 2;
      }
      uint64_t v4 = sub_146FD9C(v16, v18, a3);
    }
  }
  int v19 = *(_DWORD *)(a1 + 80);
  if (v19)
  {
    for (int j = 0; j != v19; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v21 = *(void *)(*(void *)(a1 + 88) + 8 * j + 8);
      char *v4 = 42;
      unsigned int v22 = *(_DWORD *)(v21 + 44);
      v4[1] = v22;
      if (v22 > 0x7F) {
        unint64_t v23 = sub_188A9CC(v22, v4 + 1);
      }
      else {
        unint64_t v23 = v4 + 2;
      }
      uint64_t v4 = sub_13DD77C(v21, v23, a3);
    }
  }
  if ((v6 & 0x80) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v24 = *(void *)(a1 + 296);
    char *v4 = 50;
    unsigned int v25 = *(_DWORD *)(v24 + 24);
    v4[1] = v25;
    if (v25 > 0x7F) {
      unint64_t v26 = sub_188A9CC(v25, v4 + 1);
    }
    else {
      unint64_t v26 = v4 + 2;
    }
    uint64_t v4 = sub_145CBCC(v24, v26, a3);
    if ((v6 & 1) == 0)
    {
LABEL_38:
      if ((v6 & 0x100) == 0) {
        goto LABEL_39;
      }
      goto LABEL_48;
    }
  }
  else if ((v6 & 1) == 0)
  {
    goto LABEL_38;
  }
  uint64_t v4 = sub_117A0AC(a3, 7, (const void **)(*(void *)(a1 + 240) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x100) == 0)
  {
LABEL_39:
    if ((v6 & 0x200) == 0) {
      goto LABEL_60;
    }
    goto LABEL_54;
  }
LABEL_48:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v27 = *(void *)(a1 + 304);
  char *v4 = 66;
  unsigned int v28 = *(_DWORD *)(v27 + 20);
  v4[1] = v28;
  if (v28 > 0x7F) {
    uint64_t v29 = sub_188A9CC(v28, v4 + 1);
  }
  else {
    uint64_t v29 = v4 + 2;
  }
  uint64_t v4 = sub_15BA180(v27, (unint64_t)v29, a3);
  if ((v6 & 0x200) != 0)
  {
LABEL_54:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v30 = *(void *)(a1 + 312);
    char *v4 = 74;
    unsigned int v31 = *(_DWORD *)(v30 + 64);
    v4[1] = v31;
    if (v31 > 0x7F) {
      uint64_t v32 = sub_188A9CC(v31, v4 + 1);
    }
    else {
      uint64_t v32 = v4 + 2;
    }
    uint64_t v4 = sub_14778CC(v30, v32, a3);
  }
LABEL_60:
  int v33 = *(_DWORD *)(a1 + 104);
  if (v33)
  {
    for (int k = 0; k != v33; ++k)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v35 = *(void *)(*(void *)(a1 + 112) + 8 * k + 8);
      char *v4 = 82;
      unsigned int v36 = *(_DWORD *)(v35 + 20);
      v4[1] = v36;
      if (v36 > 0x7F) {
        uint64_t v37 = sub_188A9CC(v36, v4 + 1);
      }
      else {
        uint64_t v37 = v4 + 2;
      }
      uint64_t v4 = sub_1474538(v35, (unint64_t)v37, a3);
    }
  }
  if ((v6 & 0x40000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v38 = *(_DWORD *)(a1 + 384);
    char *v4 = 88;
    v4[1] = v38;
    if (v38 > 0x7F)
    {
      v4[1] = v38 | 0x80;
      unsigned int v39 = v38 >> 7;
      v4[2] = v38 >> 7;
      v4 += 3;
      if (v38 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v40 = v39 >> 14;
          v39 >>= 7;
          *v4++ = v39;
        }
        while (v40);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0) {
    uint64_t v4 = sub_117A0AC(a3, 12, (const void **)(*(void *)(a1 + 248) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  if ((v6 & 0x80000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v41 = *(int *)(a1 + 388);
    char *v4 = 104;
    v4[1] = v41;
    if (v41 > 0x7F)
    {
      v4[1] = v41 | 0x80;
      unint64_t v42 = v41 >> 7;
      v4[2] = v41 >> 7;
      v4 += 3;
      if (v41 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v43 = v42 >> 14;
          v42 >>= 7;
          *v4++ = v42;
        }
        while (v43);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x400) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v44 = *(void *)(a1 + 320);
    char *v4 = 114;
    unsigned int v45 = *(_DWORD *)(v44 + 20);
    v4[1] = v45;
    if (v45 > 0x7F) {
      uint64_t v46 = sub_188A9CC(v45, v4 + 1);
    }
    else {
      uint64_t v46 = v4 + 2;
    }
    uint64_t v4 = sub_13B1DC8(v44, (unint64_t)v46, a3);
    if ((v6 & 0x800) == 0)
    {
LABEL_86:
      if ((v6 & 0x200000) == 0) {
        goto LABEL_106;
      }
      goto LABEL_100;
    }
  }
  else if ((v6 & 0x800) == 0)
  {
    goto LABEL_86;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v47 = *(void *)(a1 + 328);
  *(_WORD *)uint64_t v4 = 402;
  unsigned int v48 = *(_DWORD *)(v47 + 44);
  v4[2] = v48;
  if (v48 > 0x7F) {
    uint64_t v49 = sub_188A9CC(v48, v4 + 2);
  }
  else {
    uint64_t v49 = v4 + 3;
  }
  uint64_t v4 = sub_1305C9C(v47, v49, a3);
  if ((v6 & 0x200000) != 0)
  {
LABEL_100:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v50 = *(_DWORD *)(a1 + 400);
    *(_WORD *)uint64_t v4 = 408;
    v4[2] = v50;
    if (v50 > 0x7F)
    {
      v4[2] = v50 | 0x80;
      unsigned int v51 = v50 >> 7;
      v4[3] = v50 >> 7;
      v4 += 4;
      if (v50 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v52 = v51 >> 14;
          v51 >>= 7;
          *v4++ = v51;
        }
        while (v52);
      }
    }
    else
    {
      v4 += 3;
    }
  }
LABEL_106:
  if ((v6 & 4) != 0)
  {
    uint64_t v4 = sub_117A0AC(a3, 20, (const void **)(*(void *)(a1 + 256) & 0xFFFFFFFFFFFFFFFELL), v4);
    if ((v6 & 8) == 0)
    {
LABEL_108:
      if ((v6 & 0x100000) == 0) {
        goto LABEL_109;
      }
      goto LABEL_114;
    }
  }
  else if ((v6 & 8) == 0)
  {
    goto LABEL_108;
  }
  uint64_t v4 = sub_117A0AC(a3, 21, (const void **)(*(void *)(a1 + 264) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x100000) == 0)
  {
LABEL_109:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_110;
    }
    goto LABEL_117;
  }
LABEL_114:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v53 = *(void *)(a1 + 392);
  *(_WORD *)uint64_t v4 = 433;
  *(void *)(v4 + 2) = v53;
  v4 += 10;
  if ((v6 & 0x1000) == 0)
  {
LABEL_110:
    if ((v6 & 0x2000) == 0) {
      goto LABEL_129;
    }
    goto LABEL_123;
  }
LABEL_117:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v54 = *(void *)(a1 + 336);
  *(_WORD *)uint64_t v4 = 442;
  unsigned int v55 = *(_DWORD *)(v54 + 20);
  v4[2] = v55;
  if (v55 > 0x7F) {
    int v56 = sub_188A9CC(v55, v4 + 2);
  }
  else {
    int v56 = v4 + 3;
  }
  uint64_t v4 = sub_13E0528(v54, (unint64_t)v56, a3);
  if ((v6 & 0x2000) != 0)
  {
LABEL_123:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v57 = *(void *)(a1 + 344);
    *(_WORD *)uint64_t v4 = 450;
    unsigned int v58 = *(_DWORD *)(v57 + 44);
    v4[2] = v58;
    if (v58 > 0x7F) {
      unint64_t v59 = sub_188A9CC(v58, v4 + 2);
    }
    else {
      unint64_t v59 = v4 + 3;
    }
    uint64_t v4 = sub_15B43E4(v57, v59, a3);
  }
LABEL_129:
  uint64_t v60 = *(unsigned int *)(a1 + 128);
  if ((int)v60 >= 1)
  {
    uint64_t v61 = 0;
    uint64_t v62 = 8 * v60;
    do
    {
      int v63 = *(void **)(*(void *)(a1 + 136) + v61 + 8);
      if (*((char *)v63 + 23) < 0)
      {
        int64_t v64 = v63[1];
        if (v64 > 127) {
          goto LABEL_140;
        }
      }
      else
      {
        int64_t v64 = *((unsigned __int8 *)v63 + 23);
      }
      if ((uint64_t)(*a3 - (void)v4 + 13) >= v64)
      {
        *(_WORD *)uint64_t v4 = 458;
        v4[2] = v64;
        if (*((char *)v63 + 23) < 0) {
          int v63 = (void *)*v63;
        }
        uint64_t v65 = v4 + 3;
        memcpy(v65, v63, v64);
        uint64_t v4 = &v65[v64];
        goto LABEL_138;
      }
LABEL_140:
      uint64_t v4 = (char *)sub_188A868(a3, 25, (uint64_t)v63, v4);
LABEL_138:
      v61 += 8;
    }
    while (v62 != v61);
  }
  if ((v6 & 0x10) != 0) {
    uint64_t v4 = sub_117A0AC(a3, 26, (const void **)(*(void *)(a1 + 272) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  int v66 = *(_DWORD *)(a1 + 152);
  if (v66)
  {
    for (int m = 0; m != v66; ++m)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v68 = *(void *)(*(void *)(a1 + 160) + 8 * m + 8);
      *(_WORD *)uint64_t v4 = 474;
      unsigned int v69 = *(_DWORD *)(v68 + 20);
      v4[2] = v69;
      if (v69 > 0x7F) {
        uint64_t v70 = sub_188A9CC(v69, v4 + 2);
      }
      else {
        uint64_t v70 = v4 + 3;
      }
      uint64_t v4 = sub_1474538(v68, (unint64_t)v70, a3);
    }
  }
  if ((v6 & 0x4000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v71 = *(void *)(a1 + 352);
    *(_WORD *)uint64_t v4 = 482;
    unsigned int v72 = *(_DWORD *)(v71 + 20);
    v4[2] = v72;
    if (v72 > 0x7F) {
      uint64_t v73 = sub_188A9CC(v72, v4 + 2);
    }
    else {
      uint64_t v73 = v4 + 3;
    }
    uint64_t v4 = sub_13D1AC4(v71, (unint64_t)v73, a3);
    if ((v6 & 0x8000) == 0)
    {
LABEL_153:
      if ((v6 & 0x400000) == 0) {
        goto LABEL_173;
      }
      goto LABEL_167;
    }
  }
  else if ((v6 & 0x8000) == 0)
  {
    goto LABEL_153;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v74 = *(void *)(a1 + 360);
  *(_WORD *)uint64_t v4 = 490;
  unsigned int v75 = *(_DWORD *)(v74 + 20);
  v4[2] = v75;
  if (v75 > 0x7F) {
    int v76 = sub_188A9CC(v75, v4 + 2);
  }
  else {
    int v76 = v4 + 3;
  }
  uint64_t v4 = sub_15C1084(v74, (unint64_t)v76, a3);
  if ((v6 & 0x400000) != 0)
  {
LABEL_167:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v77 = *(_DWORD *)(a1 + 404);
    *(_WORD *)uint64_t v4 = 496;
    v4[2] = v77;
    if (v77 > 0x7F)
    {
      v4[2] = v77 | 0x80;
      unsigned int v78 = v77 >> 7;
      v4[3] = v77 >> 7;
      v4 += 4;
      if (v77 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v79 = v78 >> 14;
          v78 >>= 7;
          *v4++ = v78;
        }
        while (v79);
      }
    }
    else
    {
      v4 += 3;
    }
  }
LABEL_173:
  if ((v6 & 0x10000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v80 = *(void *)(a1 + 368);
    *(_WORD *)uint64_t v4 = 506;
    unsigned int v81 = *(_DWORD *)(v80 + 20);
    v4[2] = v81;
    if (v81 > 0x7F) {
      uint64_t v82 = sub_188A9CC(v81, v4 + 2);
    }
    else {
      uint64_t v82 = v4 + 3;
    }
    uint64_t v4 = sub_13D4AE8(v80, (unint64_t)v82, a3);
    if ((v6 & 0x20000) == 0)
    {
LABEL_175:
      if ((v6 & 0x800000) == 0) {
        goto LABEL_195;
      }
      goto LABEL_189;
    }
  }
  else if ((v6 & 0x20000) == 0)
  {
    goto LABEL_175;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v83 = *(void *)(a1 + 376);
  *(_WORD *)uint64_t v4 = 642;
  unsigned int v84 = *(_DWORD *)(v83 + 40);
  v4[2] = v84;
  if (v84 > 0x7F) {
    uint64_t v85 = sub_188A9CC(v84, v4 + 2);
  }
  else {
    uint64_t v85 = v4 + 3;
  }
  uint64_t v4 = sub_13B2584(v83, v85, a3);
  if ((v6 & 0x800000) != 0)
  {
LABEL_189:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v86 = *(int *)(a1 + 408);
    *(_WORD *)uint64_t v4 = 648;
    v4[2] = v86;
    if (v86 > 0x7F)
    {
      v4[2] = v86 | 0x80;
      unint64_t v87 = v86 >> 7;
      v4[3] = v86 >> 7;
      v4 += 4;
      if (v86 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v88 = v87 >> 14;
          v87 >>= 7;
          *v4++ = v87;
        }
        while (v88);
      }
    }
    else
    {
      v4 += 3;
    }
  }
LABEL_195:
  int v89 = *(_DWORD *)(a1 + 176);
  if (v89)
  {
    for (int n = 0; n != v89; ++n)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v91 = *(void *)(*(void *)(a1 + 184) + 8 * n + 8);
      *(_WORD *)uint64_t v4 = 1698;
      unsigned int v92 = *(_DWORD *)(v91 + 20);
      v4[2] = v92;
      if (v92 > 0x7F) {
        uint64_t v93 = sub_188A9CC(v92, v4 + 2);
      }
      else {
        uint64_t v93 = v4 + 3;
      }
      uint64_t v4 = sub_15BAD4C(v91, (unint64_t)v93, a3);
    }
  }
  uint64_t v94 = *(unsigned int *)(a1 + 200);
  if ((int)v94 >= 1)
  {
    uint64_t v95 = 0;
    uint64_t v96 = 8 * v94;
    do
    {
      uint64_t v4 = (char *)sub_125CE58(a3, 101, *(void *)(*(void *)(a1 + 208) + v95 + 8), v4);
      v95 += 8;
    }
    while (v96 != v95);
  }
  uint64_t v97 = *(unsigned int *)(a1 + 224);
  if ((int)v97 >= 1)
  {
    uint64_t v98 = 0;
    uint64_t v99 = 8 * v97;
    do
    {
      uint64_t v100 = *(void **)(*(void *)(a1 + 232) + v98 + 8);
      if (*((char *)v100 + 23) < 0)
      {
        int64_t v101 = v100[1];
        if (v101 > 127) {
          goto LABEL_217;
        }
      }
      else
      {
        int64_t v101 = *((unsigned __int8 *)v100 + 23);
      }
      if ((uint64_t)(*a3 - (void)v4 + 13) >= v101)
      {
        *(_WORD *)uint64_t v4 = 1714;
        v4[2] = v101;
        if (*((char *)v100 + 23) < 0) {
          uint64_t v100 = (void *)*v100;
        }
        int v102 = v4 + 3;
        memcpy(v102, v100, v101);
        uint64_t v4 = &v102[v101];
        goto LABEL_215;
      }
LABEL_217:
      uint64_t v4 = (char *)sub_188A868(a3, 102, (uint64_t)v100, v4);
LABEL_215:
      v98 += 8;
    }
    while (v99 != v98);
  }
  if ((v6 & 0x1000000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v103 = *(_DWORD *)(a1 + 412);
    *(_WORD *)uint64_t v4 = 1720;
    v4[2] = v103;
    if (v103 > 0x7F)
    {
      v4[2] = v103 | 0x80;
      unsigned int v104 = v103 >> 7;
      v4[3] = v103 >> 7;
      v4 += 4;
      if (v103 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v105 = v104 >> 14;
          v104 >>= 7;
          *v4++ = v104;
        }
        while (v105);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if (*(_WORD *)(a1 + 26)) {
    uint64_t v4 = sub_1886844(a1 + 16, 1000, 10101, v4, a3);
  }
  uint64_t v106 = *(void *)(a1 + 8);
  if ((v106 & 1) == 0) {
    return v4;
  }
  unint64_t v108 = v106 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v108 + 31) < 0)
  {
    uint64_t v109 = *(void **)(v108 + 8);
    uint64_t v110 = *(void *)(v108 + 16);
  }
  else
  {
    uint64_t v109 = (void *)(v108 + 8);
    LODWORD(v110) = *(unsigned __int8 *)(v108 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v110)
  {
    uint64_t v111 = (int)v110;
    memcpy(v4, v109, (int)v110);
    v4 += v111;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v109, v110, v4);
}

uint64_t sub_13E4628(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(int *)(a1 + 56);
  uint64_t v4 = v2 + v3;
  uint64_t v5 = *(void *)(a1 + 64);
  if (v5) {
    int v6 = (uint64_t *)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = sub_146FFD0(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  uint64_t v10 = *(int *)(a1 + 80);
  uint64_t v11 = v4 + v10;
  uint64_t v12 = *(void *)(a1 + 88);
  if (v12) {
    char v13 = (uint64_t *)(v12 + 8);
  }
  else {
    char v13 = 0;
  }
  if (v10)
  {
    uint64_t v14 = 8 * v10;
    do
    {
      uint64_t v15 = *v13++;
      uint64_t v16 = sub_13DE6B0(v15);
      v11 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6);
      v14 -= 8;
    }
    while (v14);
  }
  uint64_t v17 = *(int *)(a1 + 104);
  uint64_t v18 = v11 + v17;
  uint64_t v19 = *(void *)(a1 + 112);
  if (v19) {
    uint64_t v20 = (uint64_t *)(v19 + 8);
  }
  else {
    uint64_t v20 = 0;
  }
  if (v17)
  {
    uint64_t v21 = 8 * v17;
    do
    {
      uint64_t v22 = *v20++;
      uint64_t v23 = sub_1474A68(v22);
      v18 += v23 + ((9 * (__clz(v23 | 1) ^ 0x1F) + 73) >> 6);
      v21 -= 8;
    }
    while (v21);
  }
  uint64_t v24 = *(unsigned int *)(a1 + 128);
  uint64_t v25 = v18 + 2 * v24;
  if ((int)v24 >= 1)
  {
    unint64_t v26 = (uint64_t *)(*(void *)(a1 + 136) + 8);
    do
    {
      uint64_t v27 = *v26++;
      uint64_t v28 = *(unsigned __int8 *)(v27 + 23);
      uint64_t v29 = *(void *)(v27 + 8);
      if ((v28 & 0x80u) == 0) {
        uint64_t v29 = v28;
      }
      v25 += v29 + ((9 * (__clz(v29 | 1) ^ 0x1F) + 73) >> 6);
      --v24;
    }
    while (v24);
  }
  uint64_t v30 = *(int *)(a1 + 152);
  uint64_t v31 = v25 + 2 * v30;
  uint64_t v32 = *(void *)(a1 + 160);
  if (v32) {
    int v33 = (uint64_t *)(v32 + 8);
  }
  else {
    int v33 = 0;
  }
  if (v30)
  {
    uint64_t v34 = 8 * v30;
    do
    {
      uint64_t v35 = *v33++;
      uint64_t v36 = sub_1474A68(v35);
      v31 += v36 + ((9 * (__clz(v36 | 1) ^ 0x1F) + 73) >> 6);
      v34 -= 8;
    }
    while (v34);
  }
  uint64_t v37 = *(int *)(a1 + 176);
  uint64_t v38 = v31 + 2 * v37;
  uint64_t v39 = *(void *)(a1 + 184);
  if (v39) {
    unsigned int v40 = (uint64_t *)(v39 + 8);
  }
  else {
    unsigned int v40 = 0;
  }
  if (v37)
  {
    uint64_t v41 = 8 * v37;
    do
    {
      uint64_t v42 = *v40++;
      uint64_t v43 = sub_15BAE94(v42);
      v38 += v43 + ((9 * (__clz(v43 | 1) ^ 0x1F) + 73) >> 6);
      v41 -= 8;
    }
    while (v41);
  }
  uint64_t v44 = *(unsigned int *)(a1 + 200);
  uint64_t v45 = v38 + 2 * v44;
  if ((int)v44 >= 1)
  {
    uint64_t v46 = (uint64_t *)(*(void *)(a1 + 208) + 8);
    do
    {
      uint64_t v47 = *v46++;
      uint64_t v48 = *(unsigned __int8 *)(v47 + 23);
      uint64_t v49 = *(void *)(v47 + 8);
      if ((v48 & 0x80u) == 0) {
        uint64_t v49 = v48;
      }
      v45 += v49 + ((9 * (__clz(v49 | 1) ^ 0x1F) + 73) >> 6);
      --v44;
    }
    while (v44);
  }
  uint64_t v50 = *(unsigned int *)(a1 + 224);
  uint64_t v51 = v45 + 2 * v50;
  if ((int)v50 >= 1)
  {
    unsigned int v52 = (uint64_t *)(*(void *)(a1 + 232) + 8);
    do
    {
      uint64_t v53 = *v52++;
      uint64_t v54 = *(unsigned __int8 *)(v53 + 23);
      uint64_t v55 = *(void *)(v53 + 8);
      if ((v54 & 0x80u) == 0) {
        uint64_t v55 = v54;
      }
      v51 += v55 + ((9 * (__clz(v55 | 1) ^ 0x1F) + 73) >> 6);
      --v50;
    }
    while (v50);
  }
  int v56 = *(_DWORD *)(a1 + 40);
  if (!(_BYTE)v56) {
    goto LABEL_56;
  }
  if (v56)
  {
    unint64_t v67 = *(void *)(a1 + 240) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v68 = *(unsigned __int8 *)(v67 + 23);
    uint64_t v69 = *(void *)(v67 + 8);
    if ((v68 & 0x80u) == 0) {
      uint64_t v69 = v68;
    }
    v51 += v69 + ((9 * (__clz(v69 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v56 & 2) == 0)
    {
LABEL_49:
      if ((v56 & 4) == 0) {
        goto LABEL_50;
      }
      goto LABEL_97;
    }
  }
  else if ((v56 & 2) == 0)
  {
    goto LABEL_49;
  }
  unint64_t v70 = *(void *)(a1 + 248) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v71 = *(unsigned __int8 *)(v70 + 23);
  uint64_t v72 = *(void *)(v70 + 8);
  if ((v71 & 0x80u) == 0) {
    uint64_t v72 = v71;
  }
  v51 += v72 + ((9 * (__clz(v72 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v56 & 4) == 0)
  {
LABEL_50:
    if ((v56 & 8) == 0) {
      goto LABEL_51;
    }
    goto LABEL_100;
  }
LABEL_97:
  unint64_t v73 = *(void *)(a1 + 256) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v74 = *(unsigned __int8 *)(v73 + 23);
  uint64_t v75 = *(void *)(v73 + 8);
  if ((v74 & 0x80u) == 0) {
    uint64_t v75 = v74;
  }
  v51 += v75 + ((9 * (__clz(v75 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v56 & 8) == 0)
  {
LABEL_51:
    if ((v56 & 0x10) == 0) {
      goto LABEL_52;
    }
    goto LABEL_103;
  }
LABEL_100:
  unint64_t v76 = *(void *)(a1 + 264) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v77 = *(unsigned __int8 *)(v76 + 23);
  uint64_t v78 = *(void *)(v76 + 8);
  if ((v77 & 0x80u) == 0) {
    uint64_t v78 = v77;
  }
  v51 += v78 + ((9 * (__clz(v78 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v56 & 0x10) == 0)
  {
LABEL_52:
    if ((v56 & 0x20) == 0) {
      goto LABEL_53;
    }
LABEL_106:
    uint64_t v82 = sub_15B4924(*(void *)(a1 + 280));
    v51 += v82 + ((9 * (__clz(v82 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v56 & 0x40) == 0)
    {
LABEL_54:
      if ((v56 & 0x80) == 0) {
        goto LABEL_56;
      }
      goto LABEL_55;
    }
    goto LABEL_107;
  }
LABEL_103:
  unint64_t v79 = *(void *)(a1 + 272) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v80 = *(unsigned __int8 *)(v79 + 23);
  uint64_t v81 = *(void *)(v79 + 8);
  if ((v80 & 0x80u) == 0) {
    uint64_t v81 = v80;
  }
  v51 += v81 + ((9 * (__clz(v81 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v56 & 0x20) != 0) {
    goto LABEL_106;
  }
LABEL_53:
  if ((v56 & 0x40) == 0) {
    goto LABEL_54;
  }
LABEL_107:
  uint64_t v83 = sub_13B0894(*(void *)(a1 + 288));
  v51 += v83 + ((9 * (__clz(v83 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v56 & 0x80) != 0)
  {
LABEL_55:
    uint64_t v57 = sub_145DF38(*(void *)(a1 + 296));
    v51 += v57 + ((9 * (__clz(v57 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_56:
  if ((v56 & 0xFF00) == 0) {
    goto LABEL_66;
  }
  if ((v56 & 0x100) != 0)
  {
    unint64_t v84 = sub_15BA324(*(void *)(a1 + 304));
    v51 += v84 + ((9 * (__clz(v84 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v56 & 0x200) == 0)
    {
LABEL_59:
      if ((v56 & 0x400) == 0) {
        goto LABEL_60;
      }
      goto LABEL_111;
    }
  }
  else if ((v56 & 0x200) == 0)
  {
    goto LABEL_59;
  }
  uint64_t v85 = sub_1477ADC(*(void *)(a1 + 312));
  v51 += v85 + ((9 * (__clz(v85 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v56 & 0x400) == 0)
  {
LABEL_60:
    if ((v56 & 0x800) == 0) {
      goto LABEL_61;
    }
    goto LABEL_112;
  }
LABEL_111:
  uint64_t v86 = sub_13B2018(*(void *)(a1 + 320));
  v51 += v86 + ((9 * (__clz(v86 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v56 & 0x800) == 0)
  {
LABEL_61:
    if ((v56 & 0x1000) == 0) {
      goto LABEL_62;
    }
    goto LABEL_113;
  }
LABEL_112:
  uint64_t v87 = sub_1305E64(*(void *)(a1 + 328));
  v51 += v87 + ((9 * (__clz(v87 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v56 & 0x1000) == 0)
  {
LABEL_62:
    if ((v56 & 0x2000) == 0) {
      goto LABEL_63;
    }
    goto LABEL_114;
  }
LABEL_113:
  uint64_t v88 = sub_13E0940(*(void *)(a1 + 336));
  v51 += v88 + ((9 * (__clz(v88 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v56 & 0x2000) == 0)
  {
LABEL_63:
    if ((v56 & 0x4000) == 0) {
      goto LABEL_64;
    }
    goto LABEL_115;
  }
LABEL_114:
  uint64_t v89 = sub_15B4924(*(void *)(a1 + 344));
  v51 += v89 + ((9 * (__clz(v89 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v56 & 0x4000) == 0)
  {
LABEL_64:
    if ((v56 & 0x8000) == 0) {
      goto LABEL_66;
    }
    goto LABEL_65;
  }
LABEL_115:
  uint64_t v90 = sub_13D1F68(*(void *)(a1 + 352));
  v51 += v90 + ((9 * (__clz(v90 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v56 & 0x8000) != 0)
  {
LABEL_65:
    uint64_t v58 = sub_15C1220(*(void *)(a1 + 360));
    v51 += v58 + ((9 * (__clz(v58 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
LABEL_66:
  if ((v56 & 0xFF0000) == 0) {
    goto LABEL_84;
  }
  if ((v56 & 0x10000) != 0)
  {
    uint64_t v91 = *(void *)(a1 + 368);
    uint64_t v92 = 2 * (*(_DWORD *)(v91 + 16) & 1);
    uint64_t v93 = *(void *)(v91 + 8);
    if (v93)
    {
      unint64_t v97 = v93 & 0xFFFFFFFFFFFFFFFCLL;
      if (*(char *)(v97 + 31) < 0) {
        uint64_t v98 = *(void *)(v97 + 16);
      }
      else {
        uint64_t v98 = *(unsigned __int8 *)(v97 + 31);
      }
      v92 += v98;
    }
    *(_DWORD *)(v91 + 20) = v92;
    v51 += v92 + ((9 * (__clz(v92 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v56 & 0x20000) == 0)
    {
LABEL_69:
      if ((v56 & 0x40000) == 0) {
        goto LABEL_70;
      }
LABEL_120:
      v51 += ((9 * (__clz(*(_DWORD *)(a1 + 384) | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v56 & 0x80000) == 0) {
        goto LABEL_75;
      }
      goto LABEL_71;
    }
  }
  else if ((v56 & 0x20000) == 0)
  {
    goto LABEL_69;
  }
  uint64_t v94 = sub_13B2678(*(void *)(a1 + 376));
  v51 += v94 + ((9 * (__clz(v94 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v56 & 0x40000) != 0) {
    goto LABEL_120;
  }
LABEL_70:
  if ((v56 & 0x80000) == 0) {
    goto LABEL_75;
  }
LABEL_71:
  int v59 = *(_DWORD *)(a1 + 388);
  uint64_t v60 = ((9 * (__clz(v59 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if (v59 >= 0) {
    uint64_t v61 = v60;
  }
  else {
    uint64_t v61 = 11;
  }
  v51 += v61;
LABEL_75:
  if ((v56 & 0x100000) != 0) {
    v51 += 10;
  }
  if ((v56 & 0x200000) == 0)
  {
    if ((v56 & 0x400000) == 0) {
      goto LABEL_79;
    }
LABEL_123:
    v51 += ((9 * (__clz(*(_DWORD *)(a1 + 404) | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v56 & 0x800000) == 0) {
      goto LABEL_84;
    }
    goto LABEL_80;
  }
  v51 += ((9 * (__clz(*(_DWORD *)(a1 + 400) | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v56 & 0x400000) != 0) {
    goto LABEL_123;
  }
LABEL_79:
  if ((v56 & 0x800000) == 0) {
    goto LABEL_84;
  }
LABEL_80:
  int v62 = *(_DWORD *)(a1 + 408);
  uint64_t v63 = ((9 * (__clz(v62 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if (v62 >= 0) {
    uint64_t v64 = v63;
  }
  else {
    uint64_t v64 = 12;
  }
  v51 += v64;
LABEL_84:
  if ((v56 & 0x3000000) != 0)
  {
    if ((v56 & 0x1000000) != 0) {
      v51 += ((9 * (__clz(*(_DWORD *)(a1 + 412) | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    if ((v56 & 0x2000000) != 0) {
      v51 += 2;
    }
  }
  uint64_t v65 = *(void *)(a1 + 8);
  if (v65)
  {
    unint64_t v95 = v65 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v95 + 31) < 0) {
      uint64_t v96 = *(void *)(v95 + 16);
    }
    else {
      uint64_t v96 = *(unsigned __int8 *)(v95 + 31);
    }
    v51 += v96;
  }
  *(_DWORD *)(a1 + 44) = v51;
  return v51;
}

void sub_13E4EB8(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 56);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    int v6 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_12C52B4((uint64_t *)(a1 + 48), v6, v5, v4, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v7 = *(_DWORD *)(a1 + 56) + v4;
    *(_DWORD *)(a1 + 56) = v7;
    uint64_t v8 = *(int **)(a1 + 64);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 80);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 88) + 8);
    uint64_t v11 = (uint64_t *)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_148F0C8((uint64_t *)(a1 + 72), v11, v10, v9, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v12 = *(_DWORD *)(a1 + 80) + v9;
    *(_DWORD *)(a1 + 80) = v12;
    char v13 = *(int **)(a1 + 88);
    if (*v13 < v12) {
      int *v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 104);
  if (v14)
  {
    uint64_t v15 = (uint64_t *)(*(void *)(a2 + 112) + 8);
    uint64_t v16 = (uint64_t *)sub_188CCE4(a1 + 96, *(_DWORD *)(a2 + 104));
    sub_1368FF8((uint64_t *)(a1 + 96), v16, v15, v14, **(_DWORD **)(a1 + 112) - *(_DWORD *)(a1 + 104));
    int v17 = *(_DWORD *)(a1 + 104) + v14;
    *(_DWORD *)(a1 + 104) = v17;
    uint64_t v18 = *(int **)(a1 + 112);
    if (*v18 < v17) {
      *uint64_t v18 = v17;
    }
  }
  int v19 = *(_DWORD *)(a2 + 128);
  if (v19)
  {
    uint64_t v20 = (const std::string **)(*(void *)(a2 + 136) + 8);
    uint64_t v21 = (std::string **)sub_188CCE4(a1 + 120, *(_DWORD *)(a2 + 128));
    sub_188FB98(a1 + 120, v21, v20, v19, **(_DWORD **)(a1 + 136) - *(_DWORD *)(a1 + 128));
    int v22 = *(_DWORD *)(a1 + 128) + v19;
    *(_DWORD *)(a1 + 128) = v22;
    uint64_t v23 = *(int **)(a1 + 136);
    if (*v23 < v22) {
      *uint64_t v23 = v22;
    }
  }
  int v24 = *(_DWORD *)(a2 + 152);
  if (v24)
  {
    uint64_t v25 = (uint64_t *)(*(void *)(a2 + 160) + 8);
    unint64_t v26 = (uint64_t *)sub_188CCE4(a1 + 144, *(_DWORD *)(a2 + 152));
    sub_1368FF8((uint64_t *)(a1 + 144), v26, v25, v24, **(_DWORD **)(a1 + 160) - *(_DWORD *)(a1 + 152));
    int v27 = *(_DWORD *)(a1 + 152) + v24;
    *(_DWORD *)(a1 + 152) = v27;
    uint64_t v28 = *(int **)(a1 + 160);
    if (*v28 < v27) {
      int *v28 = v27;
    }
  }
  int v29 = *(_DWORD *)(a2 + 176);
  if (v29)
  {
    uint64_t v30 = (uint64_t *)(*(void *)(a2 + 184) + 8);
    uint64_t v31 = (std::string **)sub_188CCE4(a1 + 168, *(_DWORD *)(a2 + 176));
    sub_11DB348((uint64_t *)(a1 + 168), v31, v30, v29, **(_DWORD **)(a1 + 184) - *(_DWORD *)(a1 + 176));
    int v32 = *(_DWORD *)(a1 + 176) + v29;
    *(_DWORD *)(a1 + 176) = v32;
    int v33 = *(int **)(a1 + 184);
    if (*v33 < v32) {
      *int v33 = v32;
    }
  }
  int v34 = *(_DWORD *)(a2 + 200);
  if (v34)
  {
    uint64_t v35 = (const std::string **)(*(void *)(a2 + 208) + 8);
    uint64_t v36 = (std::string **)sub_188CCE4(a1 + 192, *(_DWORD *)(a2 + 200));
    sub_188FB98(a1 + 192, v36, v35, v34, **(_DWORD **)(a1 + 208) - *(_DWORD *)(a1 + 200));
    int v37 = *(_DWORD *)(a1 + 200) + v34;
    *(_DWORD *)(a1 + 200) = v37;
    uint64_t v38 = *(int **)(a1 + 208);
    if (*v38 < v37) {
      *uint64_t v38 = v37;
    }
  }
  int v39 = *(_DWORD *)(a2 + 224);
  if (v39)
  {
    unsigned int v40 = (const std::string **)(*(void *)(a2 + 232) + 8);
    uint64_t v41 = (std::string **)sub_188CCE4(a1 + 216, *(_DWORD *)(a2 + 224));
    sub_188FB98(a1 + 216, v41, v40, v39, **(_DWORD **)(a1 + 232) - *(_DWORD *)(a1 + 224));
    int v42 = *(_DWORD *)(a1 + 224) + v39;
    *(_DWORD *)(a1 + 224) = v42;
    uint64_t v43 = *(int **)(a1 + 232);
    if (*v43 < v42) {
      int *v43 = v42;
    }
  }
  int v44 = *(_DWORD *)(a2 + 40);
  if (!(_BYTE)v44) {
    goto LABEL_74;
  }
  if (v44)
  {
    uint64_t v45 = (long long *)(*(void *)(a2 + 240) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 40) |= 1u;
    uint64_t v46 = *(void *)(a1 + 8);
    uint64_t v47 = (uint64_t *)(v46 & 0xFFFFFFFFFFFFFFFCLL);
    if (v46) {
      uint64_t v47 = (uint64_t *)*v47;
    }
    sub_1881DF4((std::string **)(a1 + 240), v45, v47);
    if ((v44 & 2) == 0)
    {
LABEL_28:
      if ((v44 & 4) == 0) {
        goto LABEL_29;
      }
      goto LABEL_41;
    }
  }
  else if ((v44 & 2) == 0)
  {
    goto LABEL_28;
  }
  uint64_t v48 = (long long *)(*(void *)(a2 + 248) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 40) |= 2u;
  uint64_t v49 = *(void *)(a1 + 8);
  uint64_t v50 = (uint64_t *)(v49 & 0xFFFFFFFFFFFFFFFCLL);
  if (v49) {
    uint64_t v50 = (uint64_t *)*v50;
  }
  sub_1881DF4((std::string **)(a1 + 248), v48, v50);
  if ((v44 & 4) == 0)
  {
LABEL_29:
    if ((v44 & 8) == 0) {
      goto LABEL_30;
    }
    goto LABEL_44;
  }
LABEL_41:
  uint64_t v51 = (long long *)(*(void *)(a2 + 256) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 40) |= 4u;
  uint64_t v52 = *(void *)(a1 + 8);
  uint64_t v53 = (uint64_t *)(v52 & 0xFFFFFFFFFFFFFFFCLL);
  if (v52) {
    uint64_t v53 = (uint64_t *)*v53;
  }
  sub_1881DF4((std::string **)(a1 + 256), v51, v53);
  if ((v44 & 8) == 0)
  {
LABEL_30:
    if ((v44 & 0x10) == 0) {
      goto LABEL_31;
    }
    goto LABEL_47;
  }
LABEL_44:
  uint64_t v54 = (long long *)(*(void *)(a2 + 264) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 40) |= 8u;
  uint64_t v55 = *(void *)(a1 + 8);
  int v56 = (uint64_t *)(v55 & 0xFFFFFFFFFFFFFFFCLL);
  if (v55) {
    int v56 = (uint64_t *)*v56;
  }
  sub_1881DF4((std::string **)(a1 + 264), v54, v56);
  if ((v44 & 0x10) == 0)
  {
LABEL_31:
    if ((v44 & 0x20) == 0) {
      goto LABEL_32;
    }
LABEL_50:
    *(_DWORD *)(a1 + 40) |= 0x20u;
    uint64_t v60 = *(void *)(a1 + 280);
    if (!v60)
    {
      uint64_t v61 = *(void *)(a1 + 8);
      int v62 = (void *)(v61 & 0xFFFFFFFFFFFFFFFCLL);
      if (v61) {
        int v62 = (void *)*v62;
      }
      uint64_t v60 = sub_15C1CB4((uint64_t)v62);
      *(void *)(a1 + 280) = v60;
    }
    if (*(void *)(a2 + 280)) {
      uint64_t v63 = *(uint64_t (****)())(a2 + 280);
    }
    else {
      uint64_t v63 = &off_253F2E8;
    }
    sub_15B04F0(v60, (uint64_t)v63);
    if ((v44 & 0x40) == 0)
    {
LABEL_33:
      if ((v44 & 0x80) == 0) {
        goto LABEL_74;
      }
      goto LABEL_66;
    }
    goto LABEL_58;
  }
LABEL_47:
  uint64_t v57 = (long long *)(*(void *)(a2 + 272) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 40) |= 0x10u;
  uint64_t v58 = *(void *)(a1 + 8);
  int v59 = (uint64_t *)(v58 & 0xFFFFFFFFFFFFFFFCLL);
  if (v58) {
    int v59 = (uint64_t *)*v59;
  }
  sub_1881DF4((std::string **)(a1 + 272), v57, v59);
  if ((v44 & 0x20) != 0) {
    goto LABEL_50;
  }
LABEL_32:
  if ((v44 & 0x40) == 0) {
    goto LABEL_33;
  }
LABEL_58:
  *(_DWORD *)(a1 + 40) |= 0x40u;
  uint64_t v64 = *(void *)(a1 + 288);
  if (!v64)
  {
    uint64_t v65 = *(void *)(a1 + 8);
    int v66 = (void *)(v65 & 0xFFFFFFFFFFFFFFFCLL);
    if (v65) {
      int v66 = (void *)*v66;
    }
    uint64_t v64 = sub_13D8F60((uint64_t)v66);
    *(void *)(a1 + 288) = v64;
  }
  if (*(void *)(a2 + 288)) {
    unint64_t v67 = *(uint64_t (****)())(a2 + 288);
  }
  else {
    unint64_t v67 = &off_2535C50;
  }
  sub_13B0D54(v64, (uint64_t)v67);
  if ((v44 & 0x80) != 0)
  {
LABEL_66:
    *(_DWORD *)(a1 + 40) |= 0x80u;
    uint64_t v68 = *(void *)(a1 + 296);
    if (!v68)
    {
      uint64_t v69 = *(void *)(a1 + 8);
      unint64_t v70 = (void *)(v69 & 0xFFFFFFFFFFFFFFFCLL);
      if (v69) {
        unint64_t v70 = (void *)*v70;
      }
      sub_1478B2C((uint64_t)v70);
      *(void *)(a1 + 296) = v68;
    }
    if (*(void *)(a2 + 296)) {
      uint64_t v71 = *(uint64_t (****)())(a2 + 296);
    }
    else {
      uint64_t v71 = &off_2539290;
    }
    sub_13E582C(v68, (uint64_t)v71);
  }
LABEL_74:
  if ((v44 & 0xFF00) == 0) {
    goto LABEL_148;
  }
  if ((v44 & 0x100) != 0)
  {
    *(_DWORD *)(a1 + 40) |= 0x100u;
    uint64_t v72 = *(std::string **)(a1 + 304);
    if (!v72)
    {
      uint64_t v73 = *(void *)(a1 + 8);
      uint64_t v74 = (void *)(v73 & 0xFFFFFFFFFFFFFFFCLL);
      if (v73) {
        uint64_t v74 = (void *)*v74;
      }
      uint64_t v72 = (std::string *)sub_15C2014((uint64_t)v74);
      *(void *)(a1 + 304) = v72;
    }
    if (*(void *)(a2 + 304)) {
      uint64_t v75 = *(uint64_t (****)())(a2 + 304);
    }
    else {
      uint64_t v75 = &off_253F530;
    }
    sub_1113E40(v72, (uint64_t)v75);
    if ((v44 & 0x200) == 0)
    {
LABEL_77:
      if ((v44 & 0x400) == 0) {
        goto LABEL_78;
      }
      goto LABEL_100;
    }
  }
  else if ((v44 & 0x200) == 0)
  {
    goto LABEL_77;
  }
  *(_DWORD *)(a1 + 40) |= 0x200u;
  unint64_t v76 = *(std::string **)(a1 + 312);
  if (!v76)
  {
    uint64_t v77 = *(void *)(a1 + 8);
    uint64_t v78 = (void *)(v77 & 0xFFFFFFFFFFFFFFFCLL);
    if (v77) {
      uint64_t v78 = (void *)*v78;
    }
    unint64_t v76 = (std::string *)sub_1479978((uint64_t)v78);
    *(void *)(a1 + 312) = v76;
  }
  if (*(void *)(a2 + 312)) {
    unint64_t v79 = *(uint64_t (****)())(a2 + 312);
  }
  else {
    unint64_t v79 = &off_2539C48;
  }
  sub_1216B14(v76, (uint64_t)v79);
  if ((v44 & 0x400) == 0)
  {
LABEL_78:
    if ((v44 & 0x800) == 0) {
      goto LABEL_79;
    }
    goto LABEL_108;
  }
LABEL_100:
  *(_DWORD *)(a1 + 40) |= 0x400u;
  uint64_t v80 = *(std::string **)(a1 + 320);
  if (!v80)
  {
    uint64_t v81 = *(void *)(a1 + 8);
    uint64_t v82 = (void *)(v81 & 0xFFFFFFFFFFFFFFFCLL);
    if (v81) {
      uint64_t v82 = (void *)*v82;
    }
    uint64_t v80 = (std::string *)sub_13D9048((uint64_t)v82);
    *(void *)(a1 + 320) = v80;
  }
  if (*(void *)(a2 + 320)) {
    uint64_t v83 = *(uint64_t (****)())(a2 + 320);
  }
  else {
    uint64_t v83 = &off_2535CF8;
  }
  sub_13B20B4(v80, (uint64_t)v83);
  if ((v44 & 0x800) == 0)
  {
LABEL_79:
    if ((v44 & 0x1000) == 0) {
      goto LABEL_80;
    }
    goto LABEL_116;
  }
LABEL_108:
  *(_DWORD *)(a1 + 40) |= 0x800u;
  unint64_t v84 = *(void **)(a1 + 328);
  if (!v84)
  {
    uint64_t v85 = *(void *)(a1 + 8);
    uint64_t v86 = (void *)(v85 & 0xFFFFFFFFFFFFFFFCLL);
    if (v85) {
      uint64_t v86 = (void *)*v86;
    }
    unint64_t v84 = sub_130645C((uint64_t)v86);
    *(void *)(a1 + 328) = v84;
  }
  if (*(void *)(a2 + 328)) {
    uint64_t v87 = *(uint64_t (****)())(a2 + 328);
  }
  else {
    uint64_t v87 = &off_2532480;
  }
  sub_1305F18((uint64_t)v84, (uint64_t)v87);
  if ((v44 & 0x1000) == 0)
  {
LABEL_80:
    if ((v44 & 0x2000) == 0) {
      goto LABEL_81;
    }
    goto LABEL_124;
  }
LABEL_116:
  *(_DWORD *)(a1 + 40) |= 0x1000u;
  uint64_t v88 = *(void *)(a1 + 336);
  if (!v88)
  {
    uint64_t v89 = *(void *)(a1 + 8);
    uint64_t v90 = (void *)(v89 & 0xFFFFFFFFFFFFFFFCLL);
    if (v89) {
      uint64_t v90 = (void *)*v90;
    }
    sub_13F3830((uint64_t)v90);
    *(void *)(a1 + 336) = v88;
  }
  if (*(void *)(a2 + 336)) {
    uint64_t v91 = *(uint64_t (****)())(a2 + 336);
  }
  else {
    uint64_t v91 = &off_2536C78;
  }
  sub_13E0B80(v88, (uint64_t)v91);
  if ((v44 & 0x2000) == 0)
  {
LABEL_81:
    if ((v44 & 0x4000) == 0) {
      goto LABEL_82;
    }
    goto LABEL_132;
  }
LABEL_124:
  *(_DWORD *)(a1 + 40) |= 0x2000u;
  uint64_t v92 = *(void *)(a1 + 344);
  if (!v92)
  {
    uint64_t v93 = *(void *)(a1 + 8);
    uint64_t v94 = (void *)(v93 & 0xFFFFFFFFFFFFFFFCLL);
    if (v93) {
      uint64_t v94 = (void *)*v94;
    }
    uint64_t v92 = sub_15C1CB4((uint64_t)v94);
    *(void *)(a1 + 344) = v92;
  }
  if (*(void *)(a2 + 344)) {
    unint64_t v95 = *(uint64_t (****)())(a2 + 344);
  }
  else {
    unint64_t v95 = &off_253F2E8;
  }
  sub_15B04F0(v92, (uint64_t)v95);
  if ((v44 & 0x4000) == 0)
  {
LABEL_82:
    if ((v44 & 0x8000) == 0) {
      goto LABEL_148;
    }
    goto LABEL_140;
  }
LABEL_132:
  *(_DWORD *)(a1 + 40) |= 0x4000u;
  uint64_t v96 = *(std::string **)(a1 + 352);
  if (!v96)
  {
    uint64_t v97 = *(void *)(a1 + 8);
    uint64_t v98 = (void *)(v97 & 0xFFFFFFFFFFFFFFFCLL);
    if (v97) {
      uint64_t v98 = (void *)*v98;
    }
    uint64_t v96 = (std::string *)sub_13DAA4C((uint64_t)v98);
    *(void *)(a1 + 352) = v96;
  }
  if (*(void *)(a2 + 352)) {
    uint64_t v99 = *(uint64_t (****)())(a2 + 352);
  }
  else {
    uint64_t v99 = &off_25367D8;
  }
  sub_13D21EC(v96, (uint64_t)v99);
  if ((v44 & 0x8000) != 0)
  {
LABEL_140:
    *(_DWORD *)(a1 + 40) |= 0x8000u;
    uint64_t v100 = *(std::string **)(a1 + 360);
    if (!v100)
    {
      uint64_t v101 = *(void *)(a1 + 8);
      int v102 = (void *)(v101 & 0xFFFFFFFFFFFFFFFCLL);
      if (v101) {
        int v102 = (void *)*v102;
      }
      uint64_t v100 = (std::string *)sub_15C26A4((uint64_t)v102);
      *(void *)(a1 + 360) = v100;
    }
    if (*(void *)(a2 + 360)) {
      unsigned int v103 = *(uint64_t (****)())(a2 + 360);
    }
    else {
      unsigned int v103 = &off_253F780;
    }
    sub_13B15D0(v100, (uint64_t)v103);
  }
LABEL_148:
  if ((v44 & 0xFF0000) == 0) {
    goto LABEL_159;
  }
  if ((v44 & 0x10000) != 0)
  {
    *(_DWORD *)(a1 + 40) |= 0x10000u;
    unsigned int v105 = *(std::string **)(a1 + 368);
    if (!v105)
    {
      uint64_t v106 = *(void *)(a1 + 8);
      uint64_t v107 = (void *)(v106 & 0xFFFFFFFFFFFFFFFCLL);
      if (v106) {
        uint64_t v107 = (void *)*v107;
      }
      unsigned int v105 = (std::string *)sub_13DAC1C((uint64_t)v107);
      *(void *)(a1 + 368) = v105;
    }
    if (*(void *)(a2 + 368)) {
      unint64_t v108 = *(uint64_t (****)())(a2 + 368);
    }
    else {
      unint64_t v108 = &off_2536938;
    }
    sub_13221BC(v105, (uint64_t)v108);
    if ((v44 & 0x20000) == 0)
    {
LABEL_151:
      if ((v44 & 0x40000) == 0) {
        goto LABEL_152;
      }
      goto LABEL_185;
    }
  }
  else if ((v44 & 0x20000) == 0)
  {
    goto LABEL_151;
  }
  *(_DWORD *)(a1 + 40) |= 0x20000u;
  uint64_t v109 = *(std::string **)(a1 + 376);
  if (!v109)
  {
    uint64_t v110 = *(void *)(a1 + 8);
    uint64_t v111 = (void *)(v110 & 0xFFFFFFFFFFFFFFFCLL);
    if (v110) {
      uint64_t v111 = (void *)*v111;
    }
    uint64_t v109 = (std::string *)sub_13D90CC((uint64_t)v111);
    *(void *)(a1 + 376) = v109;
  }
  if (*(void *)(a2 + 376)) {
    unsigned int v112 = *(uint64_t (****)())(a2 + 376);
  }
  else {
    unsigned int v112 = &off_2535D18;
  }
  sub_1381334(v109, (uint64_t)v112);
  if ((v44 & 0x40000) == 0)
  {
LABEL_152:
    if ((v44 & 0x80000) == 0) {
      goto LABEL_153;
    }
    goto LABEL_186;
  }
LABEL_185:
  *(_DWORD *)(a1 + 384) = *(_DWORD *)(a2 + 384);
  if ((v44 & 0x80000) == 0)
  {
LABEL_153:
    if ((v44 & 0x100000) == 0) {
      goto LABEL_154;
    }
    goto LABEL_187;
  }
LABEL_186:
  *(_DWORD *)(a1 + 388) = *(_DWORD *)(a2 + 388);
  if ((v44 & 0x100000) == 0)
  {
LABEL_154:
    if ((v44 & 0x200000) == 0) {
      goto LABEL_155;
    }
    goto LABEL_188;
  }
LABEL_187:
  *(void *)(a1 + 392) = *(void *)(a2 + 392);
  if ((v44 & 0x200000) == 0)
  {
LABEL_155:
    if ((v44 & 0x400000) == 0) {
      goto LABEL_156;
    }
LABEL_189:
    *(_DWORD *)(a1 + 404) = *(_DWORD *)(a2 + 404);
    if ((v44 & 0x800000) == 0) {
      goto LABEL_158;
    }
    goto LABEL_157;
  }
LABEL_188:
  *(_DWORD *)(a1 + 400) = *(_DWORD *)(a2 + 400);
  if ((v44 & 0x400000) != 0) {
    goto LABEL_189;
  }
LABEL_156:
  if ((v44 & 0x800000) != 0) {
LABEL_157:
  }
    *(_DWORD *)(a1 + 408) = *(_DWORD *)(a2 + 408);
LABEL_158:
  *(_DWORD *)(a1 + 40) |= v44;
LABEL_159:
  if ((v44 & 0x3000000) != 0)
  {
    if ((v44 & 0x1000000) != 0) {
      *(_DWORD *)(a1 + 412) = *(_DWORD *)(a2 + 412);
    }
    if ((v44 & 0x2000000) != 0) {
      *(unsigned char *)(a1 + 416) = *(unsigned char *)(a2 + 416);
    }
    *(_DWORD *)(a1 + 40) |= v44;
  }
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v104 = *(void *)(a2 + 8);
  if (v104)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v104 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_13E582C(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 40);
  if (v4)
  {
    uint64_t v5 = (const std::string **)(*(void *)(a2 + 48) + 8);
    int v6 = (std::string **)sub_188CCE4(a1 + 32, *(_DWORD *)(a2 + 40));
    sub_188FB98(a1 + 32, v6, v5, v4, **(_DWORD **)(a1 + 48) - *(_DWORD *)(a1 + 40));
    int v7 = *(_DWORD *)(a1 + 40) + v4;
    *(_DWORD *)(a1 + 40) = v7;
    uint64_t v8 = *(int **)(a1 + 48);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    uint64_t v10 = *(int *)(a1 + 56);
    sub_188C80C((unsigned int *)(a1 + 56), v10 + v9);
    uint64_t v11 = *(void *)(a1 + 64);
    *(_DWORD *)(a1 + 56) += *(_DWORD *)(a2 + 56);
    memcpy((void *)(v11 + 4 * v10), *(const void **)(a2 + 64), 4 * *(int *)(a2 + 56));
  }
  int v12 = *(_DWORD *)(a2 + 72);
  if (v12)
  {
    uint64_t v13 = *(int *)(a1 + 72);
    sub_188C80C((unsigned int *)(a1 + 72), v13 + v12);
    uint64_t v14 = *(void *)(a1 + 80);
    *(_DWORD *)(a1 + 72) += *(_DWORD *)(a2 + 72);
    memcpy((void *)(v14 + 4 * v13), *(const void **)(a2 + 80), 4 * *(int *)(a2 + 72));
  }
  int v15 = *(_DWORD *)(a2 + 88);
  if (v15)
  {
    uint64_t v16 = *(int *)(a1 + 88);
    sub_188C80C((unsigned int *)(a1 + 88), v16 + v15);
    uint64_t v17 = *(void *)(a1 + 96);
    *(_DWORD *)(a1 + 88) += *(_DWORD *)(a2 + 88);
    memcpy((void *)(v17 + 4 * v16), *(const void **)(a2 + 96), 4 * *(int *)(a2 + 88));
  }
  unsigned int v18 = *(_DWORD *)(a2 + 16);
  if (!(_BYTE)v18) {
    goto LABEL_44;
  }
  if (v18)
  {
    int v19 = (long long *)(*(void *)(a2 + 104) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v20 = *(void *)(a1 + 8);
    uint64_t v21 = (uint64_t *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
    if (v20) {
      uint64_t v21 = (uint64_t *)*v21;
    }
    sub_1881DF4((std::string **)(a1 + 104), v19, v21);
    if ((v18 & 2) == 0)
    {
LABEL_13:
      if ((v18 & 4) == 0) {
        goto LABEL_14;
      }
      goto LABEL_26;
    }
  }
  else if ((v18 & 2) == 0)
  {
    goto LABEL_13;
  }
  int v22 = (long long *)(*(void *)(a2 + 112) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 16) |= 2u;
  uint64_t v23 = *(void *)(a1 + 8);
  int v24 = (uint64_t *)(v23 & 0xFFFFFFFFFFFFFFFCLL);
  if (v23) {
    int v24 = (uint64_t *)*v24;
  }
  sub_1881DF4((std::string **)(a1 + 112), v22, v24);
  if ((v18 & 4) == 0)
  {
LABEL_14:
    if ((v18 & 8) == 0) {
      goto LABEL_15;
    }
    goto LABEL_29;
  }
LABEL_26:
  uint64_t v25 = (long long *)(*(void *)(a2 + 120) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 16) |= 4u;
  uint64_t v26 = *(void *)(a1 + 8);
  int v27 = (uint64_t *)(v26 & 0xFFFFFFFFFFFFFFFCLL);
  if (v26) {
    int v27 = (uint64_t *)*v27;
  }
  sub_1881DF4((std::string **)(a1 + 120), v25, v27);
  if ((v18 & 8) == 0)
  {
LABEL_15:
    if ((v18 & 0x10) == 0) {
      goto LABEL_16;
    }
    goto LABEL_32;
  }
LABEL_29:
  uint64_t v28 = (long long *)(*(void *)(a2 + 128) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 16) |= 8u;
  uint64_t v29 = *(void *)(a1 + 8);
  uint64_t v30 = (uint64_t *)(v29 & 0xFFFFFFFFFFFFFFFCLL);
  if (v29) {
    uint64_t v30 = (uint64_t *)*v30;
  }
  sub_1881DF4((std::string **)(a1 + 128), v28, v30);
  if ((v18 & 0x10) == 0)
  {
LABEL_16:
    if ((v18 & 0x20) == 0) {
      goto LABEL_17;
    }
LABEL_35:
    int v34 = (long long *)(*(void *)(a2 + 144) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 0x20u;
    uint64_t v35 = *(void *)(a1 + 8);
    uint64_t v36 = (uint64_t *)(v35 & 0xFFFFFFFFFFFFFFFCLL);
    if (v35) {
      uint64_t v36 = (uint64_t *)*v36;
    }
    sub_1881DF4((std::string **)(a1 + 144), v34, v36);
    if ((v18 & 0x40) == 0)
    {
LABEL_18:
      if ((v18 & 0x80) == 0) {
        goto LABEL_44;
      }
      goto LABEL_41;
    }
    goto LABEL_38;
  }
LABEL_32:
  uint64_t v31 = (long long *)(*(void *)(a2 + 136) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 16) |= 0x10u;
  uint64_t v32 = *(void *)(a1 + 8);
  int v33 = (uint64_t *)(v32 & 0xFFFFFFFFFFFFFFFCLL);
  if (v32) {
    int v33 = (uint64_t *)*v33;
  }
  sub_1881DF4((std::string **)(a1 + 136), v31, v33);
  if ((v18 & 0x20) != 0) {
    goto LABEL_35;
  }
LABEL_17:
  if ((v18 & 0x40) == 0) {
    goto LABEL_18;
  }
LABEL_38:
  int v37 = (long long *)(*(void *)(a2 + 152) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 16) |= 0x40u;
  uint64_t v38 = *(void *)(a1 + 8);
  int v39 = (uint64_t *)(v38 & 0xFFFFFFFFFFFFFFFCLL);
  if (v38) {
    int v39 = (uint64_t *)*v39;
  }
  sub_1881DF4((std::string **)(a1 + 152), v37, v39);
  if ((v18 & 0x80) != 0)
  {
LABEL_41:
    unsigned int v40 = (long long *)(*(void *)(a2 + 160) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 0x80u;
    uint64_t v41 = *(void *)(a1 + 8);
    int v42 = (uint64_t *)(v41 & 0xFFFFFFFFFFFFFFFCLL);
    if (v41) {
      int v42 = (uint64_t *)*v42;
    }
    sub_1881DF4((std::string **)(a1 + 160), v40, v42);
  }
LABEL_44:
  if ((v18 & 0xFF00) == 0) {
    goto LABEL_55;
  }
  if ((v18 & 0x100) != 0)
  {
    *(_DWORD *)(a1 + 16) |= 0x100u;
    uint64_t v45 = *(std::string **)(a1 + 168);
    if (!v45)
    {
      uint64_t v46 = *(void *)(a1 + 8);
      uint64_t v47 = (void *)(v46 & 0xFFFFFFFFFFFFFFFCLL);
      if (v46) {
        uint64_t v47 = (void *)*v47;
      }
      uint64_t v45 = (std::string *)sub_14789B8((uint64_t)v47);
      *(void *)(a1 + 168) = v45;
    }
    if (*(void *)(a2 + 168)) {
      uint64_t v48 = *(uint64_t (****)())(a2 + 168);
    }
    else {
      uint64_t v48 = &off_2539230;
    }
    sub_1263204(v45, (uint64_t)v48);
    if ((v18 & 0x200) == 0)
    {
LABEL_47:
      if ((v18 & 0x400) == 0) {
        goto LABEL_48;
      }
      goto LABEL_136;
    }
  }
  else if ((v18 & 0x200) == 0)
  {
    goto LABEL_47;
  }
  *(_DWORD *)(a1 + 16) |= 0x200u;
  uint64_t v49 = *(void **)(a1 + 176);
  if (!v49)
  {
    uint64_t v50 = *(void *)(a1 + 8);
    uint64_t v51 = (void *)(v50 & 0xFFFFFFFFFFFFFFFCLL);
    if (v50) {
      uint64_t v51 = (void *)*v51;
    }
    uint64_t v49 = sub_15C24B4((uint64_t)v51);
    *(void *)(a1 + 176) = v49;
  }
  if (*(void *)(a2 + 176)) {
    uint64_t v52 = *(uint64_t (****)())(a2 + 176);
  }
  else {
    uint64_t v52 = &off_253F6E8;
  }
  sub_15BF630((uint64_t)v49, (uint64_t)v52);
  if ((v18 & 0x400) == 0)
  {
LABEL_48:
    if ((v18 & 0x800) == 0) {
      goto LABEL_49;
    }
    goto LABEL_144;
  }
LABEL_136:
  *(_DWORD *)(a1 + 16) |= 0x400u;
  uint64_t v53 = *(void *)(a1 + 184);
  if (!v53)
  {
    uint64_t v54 = *(void *)(a1 + 8);
    uint64_t v55 = (void *)(v54 & 0xFFFFFFFFFFFFFFFCLL);
    if (v54) {
      uint64_t v55 = (void *)*v55;
    }
    uint64_t v53 = sub_15C2458((uint64_t)v55);
    *(void *)(a1 + 184) = v53;
  }
  if (*(void *)(a2 + 184)) {
    int v56 = *(uint64_t (****)())(a2 + 184);
  }
  else {
    int v56 = &off_253F6A8;
  }
  sub_15BEE0C(v53, (uint64_t)v56);
  if ((v18 & 0x800) == 0)
  {
LABEL_49:
    if ((v18 & 0x1000) == 0) {
      goto LABEL_50;
    }
    goto LABEL_152;
  }
LABEL_144:
  *(_DWORD *)(a1 + 16) |= 0x800u;
  uint64_t v57 = *(std::string **)(a1 + 192);
  if (!v57)
  {
    uint64_t v58 = *(void *)(a1 + 8);
    int v59 = (void *)(v58 & 0xFFFFFFFFFFFFFFFCLL);
    if (v58) {
      int v59 = (void *)*v59;
    }
    uint64_t v57 = (std::string *)sub_15C2608((uint64_t)v59);
    *(void *)(a1 + 192) = v57;
  }
  if (*(void *)(a2 + 192)) {
    uint64_t v60 = *(uint64_t (****)())(a2 + 192);
  }
  else {
    uint64_t v60 = &off_253F750;
  }
  sub_15C0B20(v57, (uint64_t)v60);
  if ((v18 & 0x1000) == 0)
  {
LABEL_50:
    if ((v18 & 0x2000) == 0) {
      goto LABEL_51;
    }
    goto LABEL_160;
  }
LABEL_152:
  *(_DWORD *)(a1 + 16) |= 0x1000u;
  uint64_t v61 = *(std::string **)(a1 + 200);
  if (!v61)
  {
    uint64_t v62 = *(void *)(a1 + 8);
    uint64_t v63 = (void *)(v62 & 0xFFFFFFFFFFFFFFFCLL);
    if (v62) {
      uint64_t v63 = (void *)*v63;
    }
    uint64_t v61 = (std::string *)sub_1478A34((uint64_t)v63);
    *(void *)(a1 + 200) = v61;
  }
  if (*(void *)(a2 + 200)) {
    uint64_t v64 = *(uint64_t (****)())(a2 + 200);
  }
  else {
    uint64_t v64 = &off_2539250;
  }
  sub_11B0678(v61, (uint64_t)v64);
  if ((v18 & 0x2000) == 0)
  {
LABEL_51:
    if ((v18 & 0x4000) == 0) {
      goto LABEL_52;
    }
LABEL_168:
    *(unsigned char *)(a1 + 216) = *(unsigned char *)(a2 + 216);
    if ((v18 & 0x8000) == 0) {
      goto LABEL_54;
    }
    goto LABEL_53;
  }
LABEL_160:
  *(_DWORD *)(a1 + 16) |= 0x2000u;
  uint64_t v65 = *(std::string **)(a1 + 208);
  if (!v65)
  {
    uint64_t v66 = *(void *)(a1 + 8);
    unint64_t v67 = (void *)(v66 & 0xFFFFFFFFFFFFFFFCLL);
    if (v66) {
      unint64_t v67 = (void *)*v67;
    }
    uint64_t v65 = (std::string *)sub_1478AB0((uint64_t)v67);
    *(void *)(a1 + 208) = v65;
  }
  if (*(void *)(a2 + 208)) {
    uint64_t v68 = *(uint64_t (****)())(a2 + 208);
  }
  else {
    uint64_t v68 = &off_2539270;
  }
  sub_13221BC(v65, (uint64_t)v68);
  if ((v18 & 0x4000) != 0) {
    goto LABEL_168;
  }
LABEL_52:
  if ((v18 & 0x8000) != 0) {
LABEL_53:
  }
    *(unsigned char *)(a1 + 217) = *(unsigned char *)(a2 + 217);
LABEL_54:
  *(_DWORD *)(a1 + 16) |= v18;
LABEL_55:
  if ((v18 & 0xFF0000) == 0) {
    goto LABEL_66;
  }
  if ((v18 & 0x10000) != 0)
  {
    *(unsigned char *)(a1 + 218) = *(unsigned char *)(a2 + 218);
    if ((v18 & 0x20000) == 0)
    {
LABEL_58:
      if ((v18 & 0x40000) == 0) {
        goto LABEL_59;
      }
      goto LABEL_172;
    }
  }
  else if ((v18 & 0x20000) == 0)
  {
    goto LABEL_58;
  }
  *(unsigned char *)(a1 + 219) = *(unsigned char *)(a2 + 219);
  if ((v18 & 0x40000) == 0)
  {
LABEL_59:
    if ((v18 & 0x80000) == 0) {
      goto LABEL_60;
    }
    goto LABEL_173;
  }
LABEL_172:
  *(unsigned char *)(a1 + 220) = *(unsigned char *)(a2 + 220);
  if ((v18 & 0x80000) == 0)
  {
LABEL_60:
    if ((v18 & 0x100000) == 0) {
      goto LABEL_61;
    }
    goto LABEL_174;
  }
LABEL_173:
  *(unsigned char *)(a1 + 221) = *(unsigned char *)(a2 + 221);
  if ((v18 & 0x100000) == 0)
  {
LABEL_61:
    if ((v18 & 0x200000) == 0) {
      goto LABEL_62;
    }
    goto LABEL_175;
  }
LABEL_174:
  *(unsigned char *)(a1 + 222) = *(unsigned char *)(a2 + 222);
  if ((v18 & 0x200000) == 0)
  {
LABEL_62:
    if ((v18 & 0x400000) == 0) {
      goto LABEL_63;
    }
LABEL_176:
    *(unsigned char *)(a1 + 224) = *(unsigned char *)(a2 + 224);
    if ((v18 & 0x800000) == 0) {
      goto LABEL_65;
    }
    goto LABEL_64;
  }
LABEL_175:
  *(unsigned char *)(a1 + 223) = *(unsigned char *)(a2 + 223);
  if ((v18 & 0x400000) != 0) {
    goto LABEL_176;
  }
LABEL_63:
  if ((v18 & 0x800000) != 0) {
LABEL_64:
  }
    *(unsigned char *)(a1 + 225) = *(unsigned char *)(a2 + 225);
LABEL_65:
  *(_DWORD *)(a1 + 16) |= v18;
LABEL_66:
  if (!HIBYTE(v18)) {
    goto LABEL_76;
  }
  if ((v18 & 0x1000000) != 0)
  {
    *(unsigned char *)(a1 + 226) = *(unsigned char *)(a2 + 226);
    if ((v18 & 0x2000000) == 0)
    {
LABEL_69:
      if ((v18 & 0x4000000) == 0) {
        goto LABEL_70;
      }
      goto LABEL_208;
    }
  }
  else if ((v18 & 0x2000000) == 0)
  {
    goto LABEL_69;
  }
  *(unsigned char *)(a1 + 227) = *(unsigned char *)(a2 + 227);
  if ((v18 & 0x4000000) == 0)
  {
LABEL_70:
    if ((v18 & 0x8000000) == 0) {
      goto LABEL_71;
    }
    goto LABEL_209;
  }
LABEL_208:
  *(unsigned char *)(a1 + 228) = *(unsigned char *)(a2 + 228);
  if ((v18 & 0x8000000) == 0)
  {
LABEL_71:
    if ((v18 & 0x10000000) == 0) {
      goto LABEL_72;
    }
    goto LABEL_210;
  }
LABEL_209:
  *(unsigned char *)(a1 + 229) = *(unsigned char *)(a2 + 229);
  if ((v18 & 0x10000000) == 0)
  {
LABEL_72:
    if ((v18 & 0x20000000) == 0) {
      goto LABEL_73;
    }
    goto LABEL_211;
  }
LABEL_210:
  *(unsigned char *)(a1 + 230) = *(unsigned char *)(a2 + 230);
  if ((v18 & 0x20000000) == 0)
  {
LABEL_73:
    if ((v18 & 0x40000000) == 0) {
      goto LABEL_74;
    }
LABEL_212:
    *(unsigned char *)(a1 + 232) = *(unsigned char *)(a2 + 232);
    if ((v18 & 0x80000000) == 0) {
      goto LABEL_75;
    }
LABEL_213:
    *(unsigned char *)(a1 + 233) = *(unsigned char *)(a2 + 233);
    goto LABEL_75;
  }
LABEL_211:
  *(unsigned char *)(a1 + 231) = *(unsigned char *)(a2 + 231);
  if ((v18 & 0x40000000) != 0) {
    goto LABEL_212;
  }
LABEL_74:
  if ((v18 & 0x80000000) != 0) {
    goto LABEL_213;
  }
LABEL_75:
  *(_DWORD *)(a1 + 16) |= v18;
LABEL_76:
  int v43 = *(_DWORD *)(a2 + 20);
  if (!(_BYTE)v43) {
    goto LABEL_87;
  }
  if (v43)
  {
    *(unsigned char *)(a1 + 234) = *(unsigned char *)(a2 + 234);
    if ((v43 & 2) == 0)
    {
LABEL_79:
      if ((v43 & 4) == 0) {
        goto LABEL_80;
      }
      goto LABEL_180;
    }
  }
  else if ((v43 & 2) == 0)
  {
    goto LABEL_79;
  }
  *(unsigned char *)(a1 + 235) = *(unsigned char *)(a2 + 235);
  if ((v43 & 4) == 0)
  {
LABEL_80:
    if ((v43 & 8) == 0) {
      goto LABEL_81;
    }
    goto LABEL_181;
  }
LABEL_180:
  *(unsigned char *)(a1 + 236) = *(unsigned char *)(a2 + 236);
  if ((v43 & 8) == 0)
  {
LABEL_81:
    if ((v43 & 0x10) == 0) {
      goto LABEL_82;
    }
    goto LABEL_182;
  }
LABEL_181:
  *(unsigned char *)(a1 + 237) = *(unsigned char *)(a2 + 237);
  if ((v43 & 0x10) == 0)
  {
LABEL_82:
    if ((v43 & 0x20) == 0) {
      goto LABEL_83;
    }
    goto LABEL_183;
  }
LABEL_182:
  *(unsigned char *)(a1 + 238) = *(unsigned char *)(a2 + 238);
  if ((v43 & 0x20) == 0)
  {
LABEL_83:
    if ((v43 & 0x40) == 0) {
      goto LABEL_84;
    }
LABEL_184:
    *(unsigned char *)(a1 + 240) = *(unsigned char *)(a2 + 240);
    if ((v43 & 0x80) == 0) {
      goto LABEL_86;
    }
    goto LABEL_85;
  }
LABEL_183:
  *(unsigned char *)(a1 + 239) = *(unsigned char *)(a2 + 239);
  if ((v43 & 0x40) != 0) {
    goto LABEL_184;
  }
LABEL_84:
  if ((v43 & 0x80) != 0) {
LABEL_85:
  }
    *(unsigned char *)(a1 + 241) = *(unsigned char *)(a2 + 241);
LABEL_86:
  *(_DWORD *)(a1 + 20) |= v43;
LABEL_87:
  if ((v43 & 0xFF00) == 0) {
    goto LABEL_98;
  }
  if ((v43 & 0x100) != 0)
  {
    *(unsigned char *)(a1 + 242) = *(unsigned char *)(a2 + 242);
    if ((v43 & 0x200) == 0)
    {
LABEL_90:
      if ((v43 & 0x400) == 0) {
        goto LABEL_91;
      }
      goto LABEL_188;
    }
  }
  else if ((v43 & 0x200) == 0)
  {
    goto LABEL_90;
  }
  *(unsigned char *)(a1 + 243) = *(unsigned char *)(a2 + 243);
  if ((v43 & 0x400) == 0)
  {
LABEL_91:
    if ((v43 & 0x800) == 0) {
      goto LABEL_92;
    }
    goto LABEL_189;
  }
LABEL_188:
  *(unsigned char *)(a1 + 244) = *(unsigned char *)(a2 + 244);
  if ((v43 & 0x800) == 0)
  {
LABEL_92:
    if ((v43 & 0x1000) == 0) {
      goto LABEL_93;
    }
    goto LABEL_190;
  }
LABEL_189:
  *(unsigned char *)(a1 + 245) = *(unsigned char *)(a2 + 245);
  if ((v43 & 0x1000) == 0)
  {
LABEL_93:
    if ((v43 & 0x2000) == 0) {
      goto LABEL_94;
    }
    goto LABEL_191;
  }
LABEL_190:
  *(unsigned char *)(a1 + 246) = *(unsigned char *)(a2 + 246);
  if ((v43 & 0x2000) == 0)
  {
LABEL_94:
    if ((v43 & 0x4000) == 0) {
      goto LABEL_95;
    }
LABEL_192:
    *(unsigned char *)(a1 + 248) = *(unsigned char *)(a2 + 248);
    if ((v43 & 0x8000) == 0) {
      goto LABEL_97;
    }
    goto LABEL_96;
  }
LABEL_191:
  *(unsigned char *)(a1 + 247) = *(unsigned char *)(a2 + 247);
  if ((v43 & 0x4000) != 0) {
    goto LABEL_192;
  }
LABEL_95:
  if ((v43 & 0x8000) != 0) {
LABEL_96:
  }
    *(unsigned char *)(a1 + 249) = *(unsigned char *)(a2 + 249);
LABEL_97:
  *(_DWORD *)(a1 + 20) |= v43;
LABEL_98:
  if ((v43 & 0xFF0000) == 0) {
    goto LABEL_109;
  }
  if ((v43 & 0x10000) != 0)
  {
    *(unsigned char *)(a1 + 250) = *(unsigned char *)(a2 + 250);
    if ((v43 & 0x20000) == 0)
    {
LABEL_101:
      if ((v43 & 0x40000) == 0) {
        goto LABEL_102;
      }
      goto LABEL_196;
    }
  }
  else if ((v43 & 0x20000) == 0)
  {
    goto LABEL_101;
  }
  *(unsigned char *)(a1 + 251) = *(unsigned char *)(a2 + 251);
  if ((v43 & 0x40000) == 0)
  {
LABEL_102:
    if ((v43 & 0x80000) == 0) {
      goto LABEL_103;
    }
    goto LABEL_197;
  }
LABEL_196:
  *(unsigned char *)(a1 + 252) = *(unsigned char *)(a2 + 252);
  if ((v43 & 0x80000) == 0)
  {
LABEL_103:
    if ((v43 & 0x100000) == 0) {
      goto LABEL_104;
    }
    goto LABEL_198;
  }
LABEL_197:
  *(unsigned char *)(a1 + 253) = *(unsigned char *)(a2 + 253);
  if ((v43 & 0x100000) == 0)
  {
LABEL_104:
    if ((v43 & 0x200000) == 0) {
      goto LABEL_105;
    }
    goto LABEL_199;
  }
LABEL_198:
  *(unsigned char *)(a1 + 254) = *(unsigned char *)(a2 + 254);
  if ((v43 & 0x200000) == 0)
  {
LABEL_105:
    if ((v43 & 0x400000) == 0) {
      goto LABEL_106;
    }
LABEL_200:
    *(_DWORD *)(a1 + 260) = *(_DWORD *)(a2 + 260);
    if ((v43 & 0x800000) == 0) {
      goto LABEL_108;
    }
    goto LABEL_107;
  }
LABEL_199:
  *(_DWORD *)(a1 + 256) = *(_DWORD *)(a2 + 256);
  if ((v43 & 0x400000) != 0) {
    goto LABEL_200;
  }
LABEL_106:
  if ((v43 & 0x800000) != 0) {
LABEL_107:
  }
    *(_DWORD *)(a1 + 264) = *(_DWORD *)(a2 + 264);
LABEL_108:
  *(_DWORD *)(a1 + 20) |= v43;
LABEL_109:
  if ((v43 & 0xF000000) == 0) {
    goto LABEL_116;
  }
  if ((v43 & 0x1000000) != 0)
  {
    *(_DWORD *)(a1 + 268) = *(_DWORD *)(a2 + 268);
    if ((v43 & 0x2000000) == 0)
    {
LABEL_112:
      if ((v43 & 0x4000000) == 0) {
        goto LABEL_113;
      }
LABEL_204:
      *(_DWORD *)(a1 + 276) = *(_DWORD *)(a2 + 276);
      if ((v43 & 0x8000000) == 0) {
        goto LABEL_115;
      }
      goto LABEL_114;
    }
  }
  else if ((v43 & 0x2000000) == 0)
  {
    goto LABEL_112;
  }
  *(_DWORD *)(a1 + 272) = *(_DWORD *)(a2 + 272);
  if ((v43 & 0x4000000) != 0) {
    goto LABEL_204;
  }
LABEL_113:
  if ((v43 & 0x8000000) != 0) {
LABEL_114:
  }
    *(_DWORD *)(a1 + 280) = *(_DWORD *)(a2 + 280);
LABEL_115:
  *(_DWORD *)(a1 + 20) |= v43;
LABEL_116:
  uint64_t v44 = *(void *)(a2 + 8);
  if (v44)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v44 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_13E60E4(uint64_t a1, uint64_t a2)
{
  if (a2 != a1)
  {
    sub_13E20D4(a1);
    sub_13E4EB8(a1, a2);
  }
}

uint64_t sub_13E6130(uint64_t a1)
{
  uint64_t result = sub_18856CC(a1 + 16);
  if (result)
  {
    uint64_t v3 = *(unsigned int *)(a1 + 56);
    while ((int)v3 >= 1)
    {
      uint64_t v4 = v3 - 1;
      char v5 = sub_13EDF40(*(void *)(*(void *)(a1 + 64) + 8 * v3));
      uint64_t v3 = v4;
      if ((v5 & 1) == 0) {
        return 0;
      }
    }
    uint64_t v6 = *(unsigned int *)(a1 + 80);
    while ((int)v6 >= 1)
    {
      uint64_t v7 = v6 - 1;
      char v8 = sub_13DF768(*(void *)(*(void *)(a1 + 88) + 8 * v6));
      uint64_t v6 = v7;
      if ((v8 & 1) == 0) {
        return 0;
      }
    }
    uint64_t v9 = *(unsigned int *)(a1 + 104);
    while ((int)v9 >= 1)
    {
      uint64_t v10 = v9 - 1;
      char v11 = sub_13EDFC4(*(void *)(*(void *)(a1 + 112) + 8 * v9));
      uint64_t v9 = v10;
      if ((v11 & 1) == 0) {
        return 0;
      }
    }
    uint64_t v12 = *(unsigned int *)(a1 + 152);
    while ((int)v12 >= 1)
    {
      uint64_t v13 = v12 - 1;
      char v14 = sub_13EDFC4(*(void *)(*(void *)(a1 + 160) + 8 * v12));
      uint64_t v12 = v13;
      if ((v14 & 1) == 0) {
        return 0;
      }
    }
    uint64_t v15 = *(unsigned int *)(a1 + 176);
    while ((int)v15 >= 1)
    {
      uint64_t v16 = v15 - 1;
      char v17 = sub_15BAF9C(*(void *)(*(void *)(a1 + 184) + 8 * v15));
      uint64_t result = 0;
      uint64_t v15 = v16;
      if ((v17 & 1) == 0) {
        return result;
      }
    }
    int v18 = *(_DWORD *)(a1 + 40);
    if ((v18 & 0x20) != 0)
    {
      uint64_t result = sub_15B06D8(*(void *)(a1 + 280));
      if (!result) {
        return result;
      }
      int v18 = *(_DWORD *)(a1 + 40);
    }
    if ((v18 & 0x40) != 0)
    {
      uint64_t v19 = *(void *)(a1 + 288);
      if ((*(unsigned char *)(v19 + 16) & 8) != 0)
      {
        uint64_t result = sub_18856CC(*(void *)(v19 + 96) + 16);
        if (!result) {
          return result;
        }
        int v18 = *(_DWORD *)(a1 + 40);
      }
    }
    if ((v18 & 0x80) != 0)
    {
      uint64_t result = sub_13E62E4(*(void *)(a1 + 296));
      if (!result) {
        return result;
      }
      int v18 = *(_DWORD *)(a1 + 40);
    }
    if ((v18 & 0x100) != 0)
    {
      uint64_t result = sub_15BA3C8(*(void *)(a1 + 304));
      if (!result) {
        return result;
      }
      int v18 = *(_DWORD *)(a1 + 40);
    }
    if ((v18 & 0x800) != 0)
    {
      uint64_t result = sub_1305FA8(*(void *)(a1 + 328));
      if (!result) {
        return result;
      }
      int v18 = *(_DWORD *)(a1 + 40);
    }
    if ((v18 & 0x1000) != 0)
    {
      uint64_t result = sub_13E0E44(*(void *)(a1 + 336));
      if (!result) {
        return result;
      }
      int v18 = *(_DWORD *)(a1 + 40);
    }
    if ((v18 & 0x2000) != 0)
    {
      uint64_t result = sub_15B06D8(*(void *)(a1 + 344));
      if (!result) {
        return result;
      }
      int v18 = *(_DWORD *)(a1 + 40);
    }
    if ((v18 & 0x4000) == 0) {
      return 1;
    }
    uint64_t result = sub_13D2450(*(void *)(a1 + 352));
    if (result) {
      return 1;
    }
  }
  return result;
}

uint64_t sub_13E62E4(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0x200) != 0)
  {
    uint64_t result = sub_15BF6F4(*(void *)(a1 + 176));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 0x400) == 0) {
    return 1;
  }
  uint64_t result = sub_15BEE9C(*(void *)(a1 + 184));
  if (result) {
    return 1;
  }
  return result;
}

void sub_13E6330(uint64_t a1, uint64_t a2)
{
  sub_1885338((uint64_t *)(a1 + 16), (uint64_t *)(a2 + 16));
  uint64_t v4 = *(void *)(a1 + 8);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a2 + 8) = v4;
  LODWORD(v4) = *(_DWORD *)(a1 + 40);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a2 + 40) = v4;
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(a1 + 56);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(void *)(a2 + 48) = v5;
  *(void *)(a2 + 56) = v6;
  uint64_t v7 = *(void *)(a1 + 64);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a2 + 64) = v7;
  uint64_t v8 = *(void *)(a1 + 72);
  uint64_t v9 = *(void *)(a1 + 80);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(void *)(a2 + 72) = v8;
  *(void *)(a2 + 80) = v9;
  uint64_t v10 = *(void *)(a1 + 88);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a2 + 88) = v10;
  uint64_t v11 = *(void *)(a1 + 96);
  uint64_t v12 = *(void *)(a1 + 104);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(void *)(a2 + 96) = v11;
  *(void *)(a2 + 104) = v12;
  uint64_t v13 = *(void *)(a1 + 112);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a2 + 112) = v13;
  uint64_t v14 = *(void *)(a1 + 120);
  uint64_t v15 = *(void *)(a1 + 128);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(void *)(a2 + 120) = v14;
  *(void *)(a2 + 128) = v15;
  uint64_t v16 = *(void *)(a1 + 136);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a2 + 136) = v16;
  uint64_t v17 = *(void *)(a1 + 144);
  uint64_t v18 = *(void *)(a1 + 152);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(void *)(a2 + 144) = v17;
  *(void *)(a2 + 152) = v18;
  uint64_t v19 = *(void *)(a1 + 160);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a2 + 160) = v19;
  uint64_t v20 = *(void *)(a1 + 168);
  uint64_t v21 = *(void *)(a1 + 176);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(void *)(a2 + 168) = v20;
  *(void *)(a2 + 176) = v21;
  uint64_t v22 = *(void *)(a1 + 184);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a2 + 184) = v22;
  uint64_t v23 = *(void *)(a1 + 192);
  uint64_t v24 = *(void *)(a1 + 200);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(void *)(a2 + 192) = v23;
  *(void *)(a2 + 200) = v24;
  uint64_t v25 = *(void *)(a1 + 208);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(void *)(a2 + 208) = v25;
  uint64_t v26 = *(void *)(a1 + 216);
  uint64_t v27 = *(void *)(a1 + 224);
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(void *)(a2 + 216) = v26;
  *(void *)(a2 + 224) = v27;
  uint64_t v28 = *(void *)(a1 + 232);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  *(void *)(a2 + 232) = v28;
  uint64_t v29 = *(void *)(a2 + 240);
  *(void *)(a2 + 240) = *(void *)(a1 + 240);
  *(void *)(a1 + 240) = v29;
  uint64_t v30 = *(void *)(a2 + 248);
  *(void *)(a2 + 248) = *(void *)(a1 + 248);
  *(void *)(a1 + 248) = v30;
  uint64_t v31 = *(void *)(a2 + 256);
  *(void *)(a2 + 256) = *(void *)(a1 + 256);
  *(void *)(a1 + 256) = v31;
  uint64_t v32 = *(void *)(a2 + 264);
  *(void *)(a2 + 264) = *(void *)(a1 + 264);
  *(void *)(a1 + 264) = v32;
  uint64_t v33 = *(void *)(a2 + 272);
  *(void *)(a2 + 272) = *(void *)(a1 + 272);
  *(void *)(a1 + 272) = v33;
  uint64_t v34 = *(void *)(a1 + 280);
  uint64_t v35 = *(void *)(a1 + 288);
  *(_OWORD *)(a1 + 280) = *(_OWORD *)(a2 + 280);
  *(void *)(a2 + 280) = v34;
  *(void *)(a2 + 288) = v35;
  sub_124F1D8((void *)(a1 + 296), a2 + 296);
  char v36 = *(unsigned char *)(a1 + 416);
  *(unsigned char *)(a1 + 416) = *(unsigned char *)(a2 + 416);
  *(unsigned char *)(a2 + 416) = v36;
}

void *sub_13E6504@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.ETATrafficUpdateRequest");
}

uint64_t sub_13E6514(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 3) != 0)
  {
    *(void *)(a1 + 24) = 0;
    *(void *)(a1 + 32) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_13E6538(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  *(void *)(a1 + 8) = v5;
  *(void *)a1 = off_24B1108;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = a2;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = a2;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = a2;
  *(void *)(a1 + 104) = 0;
  *(void *)(a1 + 112) = 0;
  *(void *)(a1 + 120) = a2;
  *(void *)(a1 + 128) = 0;
  *(void *)(a1 + 136) = 0;
  *(void *)(a1 + 144) = a2;
  *(void *)(a1 + 152) = 0;
  *(void *)(a1 + 160) = 0;
  *(void *)(a1 + 168) = a2;
  *(void *)(a1 + 176) = 0;
  *(void *)(a1 + 184) = 0;
  *(void *)(a1 + 192) = &qword_2550250;
  *(void *)(a1 + 200) = &qword_2550250;
  *(void *)(a1 + 208) = &qword_2550250;
  *(_OWORD *)(a1 + 216) = 0u;
  *(_OWORD *)(a1 + 232) = 0u;
  *(void *)(a1 + 248) = 0;
  return a1;
}

void sub_13E65E4(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_13E6618(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v42 = a1 + 16;
  *(void *)a1 = off_24B1108;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  uint64_t v5 = (uint64_t *)(a1 + 48);
  *(_DWORD *)(a1 + 68) = 0;
  *(void *)(a1 + 52) = 0;
  *(void *)(a1 + 60) = 0;
  *(void *)(a1 + 44) = 0;
  int v6 = *(_DWORD *)(a2 + 56);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 64);
    uint64_t v8 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_148F0C8(v5, v8, (uint64_t *)(v7 + 8), v6, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v9 = *(_DWORD *)(a1 + 56) + v6;
    *(_DWORD *)(a1 + 56) = v9;
    uint64_t v10 = *(int **)(a1 + 64);
    if (*v10 < v9) {
      *uint64_t v10 = v9;
    }
  }
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0;
  int v11 = *(_DWORD *)(a2 + 80);
  if (v11)
  {
    uint64_t v12 = *(void *)(a2 + 88);
    uint64_t v13 = (uint64_t *)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_148DAF4((uint64_t *)(a1 + 72), v13, (uint64_t *)(v12 + 8), v11, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v14 = *(_DWORD *)(a1 + 80) + v11;
    *(_DWORD *)(a1 + 80) = v14;
    uint64_t v15 = *(int **)(a1 + 88);
    if (*v15 < v14) {
      int *v15 = v14;
    }
  }
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 104) = 0;
  *(void *)(a1 + 112) = 0;
  int v16 = *(_DWORD *)(a2 + 104);
  if (v16)
  {
    uint64_t v17 = *(void *)(a2 + 112);
    uint64_t v18 = (uint64_t *)sub_188CCE4(a1 + 96, *(_DWORD *)(a2 + 104));
    sub_148DA68((uint64_t *)(a1 + 96), v18, (uint64_t *)(v17 + 8), v16, **(_DWORD **)(a1 + 112) - *(_DWORD *)(a1 + 104));
    int v19 = *(_DWORD *)(a1 + 104) + v16;
    *(_DWORD *)(a1 + 104) = v19;
    uint64_t v20 = *(int **)(a1 + 112);
    if (*v20 < v19) {
      *uint64_t v20 = v19;
    }
  }
  *(void *)(a1 + 120) = 0;
  *(void *)(a1 + 128) = 0;
  *(void *)(a1 + 136) = 0;
  int v21 = *(_DWORD *)(a2 + 128);
  if (v21)
  {
    uint64_t v22 = *(void *)(a2 + 136);
    uint64_t v23 = (uint64_t *)sub_188CCE4(a1 + 120, *(_DWORD *)(a2 + 128));
    sub_148D9DC((uint64_t *)(a1 + 120), v23, (uint64_t *)(v22 + 8), v21, **(_DWORD **)(a1 + 136) - *(_DWORD *)(a1 + 128));
    int v24 = *(_DWORD *)(a1 + 128) + v21;
    *(_DWORD *)(a1 + 128) = v24;
    uint64_t v25 = *(int **)(a1 + 136);
    if (*v25 < v24) {
      *uint64_t v25 = v24;
    }
  }
  *(void *)(a1 + 144) = 0;
  *(void *)(a1 + 152) = 0;
  *(void *)(a1 + 160) = 0;
  int v26 = *(_DWORD *)(a2 + 152);
  if (v26)
  {
    uint64_t v27 = *(void *)(a2 + 160);
    uint64_t v28 = (std::string **)sub_188CCE4(a1 + 144, *(_DWORD *)(a2 + 152));
    sub_148F154((uint64_t *)(a1 + 144), v28, (uint64_t *)(v27 + 8), v26, **(_DWORD **)(a1 + 160) - *(_DWORD *)(a1 + 152));
    int v29 = *(_DWORD *)(a1 + 152) + v26;
    *(_DWORD *)(a1 + 152) = v29;
    uint64_t v30 = *(int **)(a1 + 160);
    if (*v30 < v29) {
      *uint64_t v30 = v29;
    }
  }
  *(void *)(a1 + 168) = 0;
  *(void *)(a1 + 176) = 0;
  *(void *)(a1 + 184) = 0;
  int v31 = *(_DWORD *)(a2 + 176);
  if (v31)
  {
    uint64_t v32 = *(void *)(a2 + 184);
    uint64_t v33 = (std::string **)sub_188CCE4(a1 + 168, *(_DWORD *)(a2 + 176));
    sub_188FB98(a1 + 168, v33, (const std::string **)(v32 + 8), v31, **(_DWORD **)(a1 + 184) - *(_DWORD *)(a1 + 176));
    int v34 = *(_DWORD *)(a1 + 176) + v31;
    *(_DWORD *)(a1 + 176) = v34;
    uint64_t v35 = *(int **)(a1 + 184);
    if (*v35 < v34) {
      *uint64_t v35 = v34;
    }
  }
  uint64_t v36 = *(void *)(a2 + 8);
  if (v36) {
    sub_188B4F8(v4, (v36 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v42, a2 + 16);
  *(void *)(a1 + 192) = &qword_2550250;
  int v37 = *(_DWORD *)(a2 + 40);
  if (v37)
  {
    uint64_t v38 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v38 = (uint64_t *)*v38;
    }
    sub_1881DF4((std::string **)(a1 + 192), (long long *)(*(void *)(a2 + 192) & 0xFFFFFFFFFFFFFFFELL), v38);
    int v37 = *(_DWORD *)(a2 + 40);
  }
  *(void *)(a1 + 200) = &qword_2550250;
  if ((v37 & 2) != 0)
  {
    int v39 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      int v39 = (uint64_t *)*v39;
    }
    sub_1881DF4((std::string **)(a1 + 200), (long long *)(*(void *)(a2 + 200) & 0xFFFFFFFFFFFFFFFELL), v39);
    int v37 = *(_DWORD *)(a2 + 40);
  }
  *(void *)(a1 + 208) = &qword_2550250;
  if ((v37 & 4) != 0)
  {
    unsigned int v40 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      unsigned int v40 = (uint64_t *)*v40;
    }
    sub_1881DF4((std::string **)(a1 + 208), (long long *)(*(void *)(a2 + 208) & 0xFFFFFFFFFFFFFFFELL), v40);
    int v37 = *(_DWORD *)(a2 + 40);
  }
  if ((v37 & 8) != 0) {
    operator new();
  }
  *(void *)(a1 + 216) = 0;
  if ((v37 & 0x10) != 0) {
    operator new();
  }
  *(void *)(a1 + 224) = 0;
  if ((v37 & 0x20) != 0) {
    operator new();
  }
  *(void *)(a1 + 232) = 0;
  if ((v37 & 0x40) != 0) {
    operator new();
  }
  *(void *)(a1 + 240) = 0;
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  return a1;
}

void sub_13E6AC8()
{
}

void *sub_13E6BD4(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_13E6CA4((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  sub_1889DE8(a1 + 21);
  sub_148EE3C(a1 + 18);
  sub_148BF48(a1 + 15);
  sub_148BFC8(a1 + 12);
  sub_148C048(a1 + 9);
  sub_148ED3C(a1 + 6);
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void ***sub_13E6CA4(uint64_t a1)
{
  uint64_t v3 = *(uint64_t **)(a1 + 192);
  uint64_t v2 = (void ***)(a1 + 192);
  if (v3 != &qword_2550250) {
    sub_1881C6C(v2);
  }
  if (*(uint64_t **)(a1 + 200) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 200));
  }
  uint64_t result = (void ***)(a1 + 208);
  if (*(uint64_t **)(a1 + 208) != &qword_2550250) {
    sub_1881C6C(result);
  }
  if ((uint64_t (***)())a1 != &off_2536EB0)
  {
    uint64_t v5 = *(void **)(a1 + 216);
    if (v5)
    {
      sub_13060E0(v5);
      operator delete();
    }
    uint64_t v6 = *(void *)(a1 + 224);
    if (v6)
    {
      sub_13DFCDC(v6);
      operator delete();
    }
    uint64_t v7 = *(void **)(a1 + 232);
    if (v7)
    {
      sub_1472D78(v7);
      operator delete();
    }
    uint64_t result = *(void ****)(a1 + 240);
    if (result)
    {
      sub_13D5C74(result);
      operator delete();
    }
  }
  return result;
}

void sub_13E6DB0(void *a1)
{
  sub_13E6BD4(a1);

  operator delete();
}

uint64_t sub_13E6DE8(uint64_t a1)
{
  sub_18843A4((unsigned char *)(a1 + 16));
  uint64_t v2 = *(unsigned int *)(a1 + 56);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v4 = *v3++;
      sub_13DC214(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(a1 + 56) = 0;
  }
  uint64_t v5 = *(unsigned int *)(a1 + 80);
  if ((int)v5 >= 1)
  {
    uint64_t v6 = (uint64_t *)(*(void *)(a1 + 88) + 8);
    do
    {
      uint64_t v7 = *v6++;
      sub_13BB8E4(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(a1 + 80) = 0;
  }
  uint64_t v8 = *(unsigned int *)(a1 + 104);
  if ((int)v8 >= 1)
  {
    int v9 = (unsigned char **)(*(void *)(a1 + 112) + 8);
    do
    {
      uint64_t v10 = *v9++;
      sub_13BC9E8(v10);
      --v8;
    }
    while (v8);
    *(_DWORD *)(a1 + 104) = 0;
  }
  uint64_t v11 = *(unsigned int *)(a1 + 128);
  if ((int)v11 >= 1)
  {
    uint64_t v12 = (unsigned char **)(*(void *)(a1 + 136) + 8);
    do
    {
      uint64_t v13 = *v12++;
      sub_13BFD78(v13);
      --v11;
    }
    while (v11);
    *(_DWORD *)(a1 + 128) = 0;
  }
  uint64_t v14 = *(unsigned int *)(a1 + 152);
  if ((int)v14 >= 1)
  {
    uint64_t v15 = (uint64_t *)(*(void *)(a1 + 160) + 8);
    do
    {
      uint64_t v16 = *v15++;
      sub_13C09AC(v16);
      --v14;
    }
    while (v14);
    *(_DWORD *)(a1 + 152) = 0;
  }
  uint64_t result = sub_188CC00(a1 + 168);
  int v18 = *(_DWORD *)(a1 + 40);
  if ((v18 & 0x7F) != 0)
  {
    if ((v18 & 1) == 0)
    {
      if ((v18 & 2) == 0) {
        goto LABEL_24;
      }
LABEL_34:
      unint64_t v20 = *(void *)(a1 + 200) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v20 + 23) < 0)
      {
        **(unsigned char **)unint64_t v20 = 0;
        *(void *)(v20 + 8) = 0;
        if ((v18 & 4) != 0) {
          goto LABEL_38;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v20 = 0;
        *(unsigned char *)(v20 + 23) = 0;
        if ((v18 & 4) != 0) {
          goto LABEL_38;
        }
      }
LABEL_25:
      if ((v18 & 8) == 0) {
        goto LABEL_26;
      }
LABEL_42:
      uint64_t result = sub_130611C(*(void *)(a1 + 216));
      if ((v18 & 0x10) == 0)
      {
LABEL_27:
        if ((v18 & 0x20) == 0) {
          goto LABEL_28;
        }
        goto LABEL_44;
      }
LABEL_43:
      uint64_t result = sub_13DFE14(*(void *)(a1 + 224));
      if ((v18 & 0x20) == 0)
      {
LABEL_28:
        if ((v18 & 0x40) == 0) {
          goto LABEL_47;
        }
        goto LABEL_45;
      }
LABEL_44:
      uint64_t result = sub_13E6514(*(void *)(a1 + 232));
      if ((v18 & 0x40) == 0) {
        goto LABEL_47;
      }
LABEL_45:
      uint64_t v22 = *(void *)(a1 + 240);
      char v23 = *(unsigned char *)(v22 + 8);
      uint64_t result = v22 + 8;
      *(_DWORD *)(result + 16) = 0;
      *(_DWORD *)(result + 8) = 0;
      if (v23) {
        uint64_t result = sub_188B4AC((uint64_t *)result);
      }
      goto LABEL_47;
    }
    unint64_t v19 = *(void *)(a1 + 192) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v19 + 23) < 0)
    {
      **(unsigned char **)unint64_t v19 = 0;
      *(void *)(v19 + 8) = 0;
      if ((v18 & 2) != 0) {
        goto LABEL_34;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v19 = 0;
      *(unsigned char *)(v19 + 23) = 0;
      if ((v18 & 2) != 0) {
        goto LABEL_34;
      }
    }
LABEL_24:
    if ((v18 & 4) == 0) {
      goto LABEL_25;
    }
LABEL_38:
    unint64_t v21 = *(void *)(a1 + 208) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v21 + 23) < 0)
    {
      **(unsigned char **)unint64_t v21 = 0;
      *(void *)(v21 + 8) = 0;
      if ((v18 & 8) != 0) {
        goto LABEL_42;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v21 = 0;
      *(unsigned char *)(v21 + 23) = 0;
      if ((v18 & 8) != 0) {
        goto LABEL_42;
      }
    }
LABEL_26:
    if ((v18 & 0x10) == 0) {
      goto LABEL_27;
    }
    goto LABEL_43;
  }
LABEL_47:
  char v25 = *(unsigned char *)(a1 + 8);
  uint64_t v24 = a1 + 8;
  *(void *)(v24 + 240) = 0;
  *(_DWORD *)(v24 + 32) = 0;
  if (v25)
  {
    return sub_188B4AC((uint64_t *)v24);
  }
  return result;
}

uint64_t sub_13E7014(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v80 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v80, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (uint64_t **)(a1 + 168);
  unint64_t v79 = (uint64_t *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (unsigned __int8 *)(*(void *)v80 + 1);
    unsigned int v9 = **(unsigned char **)v80;
    if ((char)**(unsigned char **)v80 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        uint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v80, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (unsigned __int8 *)(*(void *)v80 + 2);
      }
    }
    *(void *)uint64_t v80 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_123;
        }
        uint64_t v12 = (char *)(v8 + 1);
        unint64_t v13 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        int v15 = v13 + (v14 << 7);
        unint64_t v13 = (v15 - 128);
        if (v14 < 0)
        {
          *(void *)uint64_t v80 = sub_188C138((uint64_t)v8, (v15 - 128));
          if (!*(void *)v80) {
            goto LABEL_147;
          }
          unint64_t v13 = v75;
        }
        else
        {
          uint64_t v12 = (char *)(v8 + 2);
LABEL_13:
          *(void *)uint64_t v80 = v12;
        }
        if (v13 > 0x3C || ((1 << v13) & 0x1004010040100027) == 0)
        {
          if (*v79) {
            uint64_t v78 = (std::string *)((*v79 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v78 = (std::string *)sub_188DBD8(v79);
          }
          sub_188C020(1, v13, v78);
        }
        else
        {
          *(_DWORD *)(a1 + 40) |= 0x80u;
          *(_DWORD *)(a1 + 248) = v13;
        }
        goto LABEL_134;
      case 2u:
        if (v9 != 18) {
          goto LABEL_123;
        }
        uint64_t v17 = (char *)(v8 - 1);
        while (1)
        {
          int v18 = (unsigned __int8 *)(v17 + 1);
          *(void *)uint64_t v80 = v17 + 1;
          unint64_t v19 = *(_DWORD **)(a1 + 64);
          if (v19 && (uint64_t v20 = *(int *)(a1 + 56), (int)v20 < *v19))
          {
            *(_DWORD *)(a1 + 56) = v20 + 1;
            uint64_t v21 = *(void *)&v19[2 * v20 + 2];
          }
          else
          {
            uint64_t v22 = sub_13F37D4(*(void *)(a1 + 48));
            uint64_t v21 = sub_188CDC8(a1 + 48, v22);
            int v18 = *(unsigned __int8 **)v80;
          }
          uint64_t v17 = sub_13E0408(a3, v21, v18);
          *(void *)uint64_t v80 = v17;
          if (!v17) {
            goto LABEL_147;
          }
          if (*(void *)a3 <= (unint64_t)v17 || *v17 != 18) {
            goto LABEL_134;
          }
        }
      case 3u:
        if (v9 != 26) {
          goto LABEL_123;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        uint64_t v23 = *(void *)(a1 + 8);
        uint64_t v24 = (uint64_t *)(v23 & 0xFFFFFFFFFFFFFFFCLL);
        if (v23) {
          uint64_t v24 = (uint64_t *)*v24;
        }
        char v25 = (void *)(a1 + 192);
        goto LABEL_57;
      case 4u:
        if (v9 != 34) {
          goto LABEL_123;
        }
        *(_DWORD *)(a1 + 40) |= 8u;
        uint64_t v26 = *(void *)(a1 + 216);
        if (!v26)
        {
          uint64_t v27 = (void *)(*v79 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v79) {
            uint64_t v27 = (void *)*v27;
          }
          uint64_t v26 = sub_13064B8((uint64_t)v27);
          *(void *)(a1 + 216) = v26;
          uint64_t v8 = *(unsigned __int8 **)v80;
        }
        uint64_t v28 = sub_1354680(a3, v26, v8);
        goto LABEL_133;
      case 5u:
        if (v9 != 42) {
          goto LABEL_123;
        }
        int v29 = v8 - 1;
        while (1)
        {
          uint64_t v30 = v29 + 1;
          *(void *)uint64_t v80 = v29 + 1;
          int v31 = *(_DWORD **)(a1 + 88);
          if (v31 && (uint64_t v32 = *(int *)(a1 + 80), (int)v32 < *v31))
          {
            *(_DWORD *)(a1 + 80) = v32 + 1;
            uint64_t v33 = *(void *)&v31[2 * v32 + 2];
          }
          else
          {
            sub_13D96E0(*(void *)(a1 + 72));
            uint64_t v33 = sub_188CDC8(a1 + 72, v34);
            uint64_t v30 = *(unsigned __int8 **)v80;
          }
          int v29 = (unsigned __int8 *)sub_13A32DC(a3, v33, v30);
          *(void *)uint64_t v80 = v29;
          if (!v29) {
            goto LABEL_147;
          }
          if (*(void *)a3 <= (unint64_t)v29 || *v29 != 42) {
            goto LABEL_134;
          }
        }
      case 6u:
        if (v9 != 50) {
          goto LABEL_123;
        }
        *(_DWORD *)(a1 + 40) |= 2u;
        uint64_t v35 = *(void *)(a1 + 8);
        uint64_t v24 = (uint64_t *)(v35 & 0xFFFFFFFFFFFFFFFCLL);
        if (v35) {
          uint64_t v24 = (uint64_t *)*v24;
        }
        char v25 = (void *)(a1 + 200);
        goto LABEL_57;
      case 7u:
        if (v9 != 58) {
          goto LABEL_123;
        }
        *(_DWORD *)(a1 + 40) |= 4u;
        uint64_t v36 = *(void *)(a1 + 8);
        uint64_t v24 = (uint64_t *)(v36 & 0xFFFFFFFFFFFFFFFCLL);
        if (v36) {
          uint64_t v24 = (uint64_t *)*v24;
        }
        char v25 = (void *)(a1 + 208);
LABEL_57:
        int v37 = (std::string *)sub_1880F84(v25, v24);
        uint64_t v28 = (void *)sub_188C244(v37, *(char **)v80, (uint64_t)a3);
        goto LABEL_133;
      case 8u:
        if (v9 != 66) {
          goto LABEL_123;
        }
        uint64_t v38 = v8 - 1;
        while (1)
        {
          int v39 = v38 + 1;
          *(void *)uint64_t v80 = v38 + 1;
          unsigned int v40 = *(_DWORD **)(a1 + 112);
          if (v40 && (uint64_t v41 = *(int *)(a1 + 104), (int)v41 < *v40))
          {
            *(_DWORD *)(a1 + 104) = v41 + 1;
            uint64_t v42 = *(void *)&v40[2 * v41 + 2];
          }
          else
          {
            int v43 = sub_13D9774(*(void *)(a1 + 96));
            uint64_t v42 = sub_188CDC8(a1 + 96, (uint64_t)v43);
            int v39 = *(unsigned __int8 **)v80;
          }
          uint64_t v38 = (unsigned __int8 *)sub_13A324C(a3, v42, v39);
          *(void *)uint64_t v80 = v38;
          if (!v38) {
            goto LABEL_147;
          }
          if (*(void *)a3 <= (unint64_t)v38 || *v38 != 66) {
            goto LABEL_134;
          }
        }
      case 9u:
        if (v9 != 74) {
          goto LABEL_123;
        }
        uint64_t v44 = (char *)(v8 - 1);
        while (1)
        {
          uint64_t v45 = (unsigned __int8 *)(v44 + 1);
          *(void *)uint64_t v80 = v44 + 1;
          uint64_t v46 = *(_DWORD **)(a1 + 136);
          if (v46 && (uint64_t v47 = *(int *)(a1 + 128), (int)v47 < *v46))
          {
            *(_DWORD *)(a1 + 128) = v47 + 1;
            uint64_t v48 = *(void *)&v46[2 * v47 + 2];
          }
          else
          {
            uint64_t v49 = sub_13D9A2C(*(void *)(a1 + 120));
            uint64_t v48 = sub_188CDC8(a1 + 120, (uint64_t)v49);
            uint64_t v45 = *(unsigned __int8 **)v80;
          }
          uint64_t v44 = sub_13A31BC(a3, v48, v45);
          *(void *)uint64_t v80 = v44;
          if (!v44) {
            goto LABEL_147;
          }
          if (*(void *)a3 <= (unint64_t)v44 || *v44 != 74) {
            goto LABEL_134;
          }
        }
      case 0xAu:
        if (v9 != 82) {
          goto LABEL_123;
        }
        uint64_t v50 = (char *)(v8 - 1);
        while (1)
        {
          uint64_t v51 = (unsigned __int8 *)(v50 + 1);
          *(void *)uint64_t v80 = v50 + 1;
          uint64_t v52 = *(_DWORD **)(a1 + 160);
          if (v52 && (uint64_t v53 = *(int *)(a1 + 152), (int)v53 < *v52))
          {
            *(_DWORD *)(a1 + 152) = v53 + 1;
            uint64_t v54 = *(void *)&v52[2 * v53 + 2];
          }
          else
          {
            sub_13D9AD0(*(void *)(a1 + 144));
            uint64_t v54 = sub_188CDC8(a1 + 144, v55);
            uint64_t v51 = *(unsigned __int8 **)v80;
          }
          uint64_t v50 = sub_13E7908(a3, v54, v51);
          *(void *)uint64_t v80 = v50;
          if (!v50) {
            goto LABEL_147;
          }
          if (*(void *)a3 <= (unint64_t)v50 || *v50 != 82) {
            goto LABEL_134;
          }
        }
      case 0xBu:
        if (v9 != 90) {
          goto LABEL_123;
        }
        *(_DWORD *)(a1 + 40) |= 0x10u;
        uint64_t v56 = *(void *)(a1 + 224);
        if (!v56)
        {
          uint64_t v57 = (void *)(*v79 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v79) {
            uint64_t v57 = (void *)*v57;
          }
          sub_13F3830((uint64_t)v57);
          uint64_t v56 = v58;
          *(void *)(a1 + 224) = v58;
          uint64_t v8 = *(unsigned __int8 **)v80;
        }
        uint64_t v28 = sub_13E357C(a3, v56, v8);
        goto LABEL_133;
      case 0xCu:
        if (v9 != 96) {
          goto LABEL_123;
        }
        v5 |= 0x100u;
        int v59 = (char *)(v8 + 1);
        int v60 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_98;
        }
        int v61 = *v59;
        int v60 = v60 + (v61 << 7) - 128;
        if (v61 < 0)
        {
          uint64_t v76 = sub_188C0D0((uint64_t)v8, v60);
          *(void *)uint64_t v80 = v76;
          *(_DWORD *)(a1 + 252) = v77;
          if (!v76) {
            goto LABEL_147;
          }
        }
        else
        {
          int v59 = (char *)(v8 + 2);
LABEL_98:
          *(void *)uint64_t v80 = v59;
          *(_DWORD *)(a1 + 252) = v60;
        }
        goto LABEL_134;
      case 0xDu:
        if (v9 != 106) {
          goto LABEL_123;
        }
        uint64_t v62 = (const std::string::value_type *)(v8 - 1);
        while (1)
        {
          uint64_t v63 = (char *)(v62 + 1);
          *(void *)uint64_t v80 = v62 + 1;
          uint64_t v64 = *(_DWORD **)(a1 + 184);
          if (v64 && (uint64_t v65 = *(int *)(a1 + 176), (int)v65 < *v64))
          {
            *(_DWORD *)(a1 + 176) = v65 + 1;
            uint64_t v66 = *(std::string **)&v64[2 * v65 + 2];
          }
          else
          {
            if (!*v7) {
              operator new();
            }
            *uint64_t v68 = v67;
            v68[1] = sub_3A6EDC;
            void *v67 = 0;
            v67[1] = 0;
            v67[2] = 0;
            uint64_t v66 = (std::string *)sub_188CDC8(a1 + 168, (uint64_t)v67);
            uint64_t v63 = *(char **)v80;
          }
          uint64_t v62 = sub_188C244(v66, v63, (uint64_t)a3);
          *(void *)uint64_t v80 = v62;
          if (!v62) {
            goto LABEL_147;
          }
          if (*(void *)a3 <= (unint64_t)v62 || *v62 != 106) {
            goto LABEL_134;
          }
        }
      case 0xEu:
        if (v9 != 114) {
          goto LABEL_123;
        }
        *(_DWORD *)(a1 + 40) |= 0x20u;
        uint64_t v69 = *(void **)(a1 + 232);
        if (!v69)
        {
          unint64_t v70 = (void *)(*v79 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v79) {
            unint64_t v70 = (void *)*v70;
          }
          uint64_t v69 = sub_147967C((uint64_t)v70);
          *(void *)(a1 + 232) = v69;
          uint64_t v8 = *(unsigned __int8 **)v80;
        }
        uint64_t v28 = sub_13E7998(a3, (uint64_t)v69, v8);
        goto LABEL_133;
      case 0xFu:
        if (v9 != 122) {
          goto LABEL_123;
        }
        *(_DWORD *)(a1 + 40) |= 0x40u;
        uint64_t v71 = *(void *)(a1 + 240);
        if (!v71)
        {
          uint64_t v72 = (void *)(*v79 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v79) {
            uint64_t v72 = (void *)*v72;
          }
          uint64_t v71 = sub_13DAE28((uint64_t)v72);
          *(void *)(a1 + 240) = v71;
          uint64_t v8 = *(unsigned __int8 **)v80;
        }
        uint64_t v28 = sub_13E7A28(a3, v71, v8);
        goto LABEL_133;
      default:
LABEL_123:
        if (v9) {
          BOOL v73 = (v9 & 7) == 4;
        }
        else {
          BOOL v73 = 1;
        }
        if (!v73)
        {
          if (v9 - 8000 < 0x648 || v9 - 80008 <= 0x31F)
          {
            uint64_t v28 = sub_18859DC((uint64_t **)(a1 + 16), v9, (char *)v8, (uint64_t)&off_2536EB0, v79, a3);
          }
          else
          {
            if (*v79)
            {
              uint64_t v74 = (std::string *)((*v79 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              uint64_t v74 = (std::string *)sub_188DBD8(v79);
              uint64_t v8 = *(unsigned __int8 **)v80;
            }
            uint64_t v28 = sub_1885AC0(v9, v74, (char *)v8, a3);
          }
LABEL_133:
          *(void *)uint64_t v80 = v28;
          if (!v28) {
            goto LABEL_147;
          }
LABEL_134:
          if (sub_11947B8((uint64_t)a3, (char **)v80, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_147:
        }
          *(void *)uint64_t v80 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 40) |= v5;
        return *(void *)v80;
    }
  }
}

uint64_t sub_13E78E4(unsigned int a1)
{
  return (a1 < 0x3D) & (0x1004010040100027uLL >> a1);
}

char *sub_13E7908(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_13C09D8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_13E7998(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1472E24(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_13E7A28(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_13D5D38(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_13E7AB8(uint64_t a1, char *a2, unint64_t *a3)
{
  uint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if ((v6 & 0x80) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unint64_t v7 = *(int *)(a1 + 248);
    char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v10 = *(_DWORD *)(a1 + 56);
  if (v10)
  {
    for (int i = 0; i != v10; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v12 = *(void *)(*(void *)(a1 + 64) + 8 * i + 8);
      char *v4 = 18;
      unsigned int v13 = *(_DWORD *)(v12 + 44);
      v4[1] = v13;
      if (v13 > 0x7F) {
        int v14 = sub_188A9CC(v13, v4 + 1);
      }
      else {
        int v14 = v4 + 2;
      }
      uint64_t v4 = sub_13DD77C(v12, v14, a3);
    }
  }
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 192) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v15 = *(void *)(a1 + 216);
    char *v4 = 34;
    unsigned int v16 = *(_DWORD *)(v15 + 20);
    v4[1] = v16;
    if (v16 > 0x7F) {
      uint64_t v17 = sub_188A9CC(v16, v4 + 1);
    }
    else {
      uint64_t v17 = v4 + 2;
    }
    uint64_t v4 = sub_13062B4(v15, (unint64_t)v17, a3);
  }
  int v18 = *(_DWORD *)(a1 + 80);
  if (v18)
  {
    for (int j = 0; j != v18; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v20 = *(void *)(*(void *)(a1 + 88) + 8 * j + 8);
      char *v4 = 42;
      unsigned int v21 = *(_DWORD *)(v20 + 20);
      v4[1] = v21;
      if (v21 > 0x7F) {
        uint64_t v22 = sub_188A9CC(v21, v4 + 1);
      }
      else {
        uint64_t v22 = v4 + 2;
      }
      uint64_t v4 = sub_13BBF3C(v20, v22, a3);
    }
  }
  if ((v6 & 2) != 0) {
    uint64_t v4 = sub_117A0AC(a3, 6, (const void **)(*(void *)(a1 + 200) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  if ((v6 & 4) != 0) {
    uint64_t v4 = sub_117A0AC(a3, 7, (const void **)(*(void *)(a1 + 208) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  int v23 = *(_DWORD *)(a1 + 104);
  if (v23)
  {
    for (int k = 0; k != v23; ++k)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v25 = *(void *)(*(void *)(a1 + 112) + 8 * k + 8);
      char *v4 = 66;
      unsigned int v26 = *(_DWORD *)(v25 + 20);
      v4[1] = v26;
      if (v26 > 0x7F) {
        uint64_t v27 = sub_188A9CC(v26, v4 + 1);
      }
      else {
        uint64_t v27 = v4 + 2;
      }
      uint64_t v4 = sub_13BCD84(v25, v27, a3);
    }
  }
  int v28 = *(_DWORD *)(a1 + 128);
  if (v28)
  {
    for (int m = 0; m != v28; ++m)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v30 = *(void *)(*(void *)(a1 + 136) + 8 * m + 8);
      char *v4 = 74;
      unsigned int v31 = *(_DWORD *)(v30 + 20);
      v4[1] = v31;
      if (v31 > 0x7F) {
        uint64_t v32 = sub_188A9CC(v31, v4 + 1);
      }
      else {
        uint64_t v32 = v4 + 2;
      }
      uint64_t v4 = sub_13C029C(v30, (unint64_t)v32, a3);
    }
  }
  int v33 = *(_DWORD *)(a1 + 152);
  if (v33)
  {
    for (int n = 0; n != v33; ++n)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v35 = *(void *)(*(void *)(a1 + 160) + 8 * n + 8);
      char *v4 = 82;
      unsigned int v36 = *(_DWORD *)(v35 + 20);
      v4[1] = v36;
      if (v36 > 0x7F) {
        int v37 = sub_188A9CC(v36, v4 + 1);
      }
      else {
        int v37 = v4 + 2;
      }
      uint64_t v4 = sub_13C0C18(v35, (unint64_t)v37, a3);
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v38 = *(void *)(a1 + 224);
    char *v4 = 90;
    unsigned int v39 = *(_DWORD *)(v38 + 20);
    v4[1] = v39;
    if (v39 > 0x7F) {
      unsigned int v40 = sub_188A9CC(v39, v4 + 1);
    }
    else {
      unsigned int v40 = v4 + 2;
    }
    uint64_t v4 = sub_13E0528(v38, (unint64_t)v40, a3);
  }
  if ((v6 & 0x100) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v41 = *(_DWORD *)(a1 + 252);
    char *v4 = 96;
    v4[1] = v41;
    if (v41 > 0x7F)
    {
      v4[1] = v41 | 0x80;
      unsigned int v42 = v41 >> 7;
      v4[2] = v41 >> 7;
      v4 += 3;
      if (v41 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v43 = v42 >> 14;
          v42 >>= 7;
          *v4++ = v42;
        }
        while (v43);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v44 = *(unsigned int *)(a1 + 176);
  if ((int)v44 >= 1)
  {
    uint64_t v45 = 0;
    uint64_t v46 = 8 * v44;
    do
    {
      uint64_t v47 = *(void **)(*(void *)(a1 + 184) + v45 + 8);
      if (*((char *)v47 + 23) < 0)
      {
        int64_t v48 = v47[1];
        if (v48 > 127) {
          goto LABEL_86;
        }
      }
      else
      {
        int64_t v48 = *((unsigned __int8 *)v47 + 23);
      }
      if ((uint64_t)(*a3 - (void)v4 + 14) >= v48)
      {
        char *v4 = 106;
        v4[1] = v48;
        if (*((char *)v47 + 23) < 0) {
          uint64_t v47 = (void *)*v47;
        }
        uint64_t v49 = v4 + 2;
        memcpy(v49, v47, v48);
        uint64_t v4 = &v49[v48];
        goto LABEL_84;
      }
LABEL_86:
      uint64_t v4 = (char *)sub_188A868(a3, 13, (uint64_t)v47, v4);
LABEL_84:
      v45 += 8;
    }
    while (v46 != v45);
  }
  if ((v6 & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v50 = *(void *)(a1 + 232);
    char *v4 = 114;
    unsigned int v51 = *(_DWORD *)(v50 + 20);
    v4[1] = v51;
    if (v51 > 0x7F) {
      uint64_t v52 = sub_188A9CC(v51, v4 + 1);
    }
    else {
      uint64_t v52 = v4 + 2;
    }
    uint64_t v4 = sub_1473014(v50, (unint64_t)v52, a3);
  }
  if ((v6 & 0x40) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v53 = *(void *)(a1 + 240);
    char *v4 = 122;
    unsigned int v54 = *(_DWORD *)(v53 + 20);
    v4[1] = v54;
    if (v54 > 0x7F) {
      uint64_t v55 = sub_188A9CC(v54, v4 + 1);
    }
    else {
      uint64_t v55 = v4 + 2;
    }
    uint64_t v4 = sub_13D5EE4(v53, (unint64_t)v55, a3);
  }
  if (*(_WORD *)(a1 + 26)) {
    uint64_t v4 = sub_1886844(a1 + 16, 1000, 10101, v4, a3);
  }
  uint64_t v56 = *(void *)(a1 + 8);
  if ((v56 & 1) == 0) {
    return v4;
  }
  unint64_t v58 = v56 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v58 + 31) < 0)
  {
    int v59 = *(void **)(v58 + 8);
    uint64_t v60 = *(void *)(v58 + 16);
  }
  else
  {
    int v59 = (void *)(v58 + 8);
    LODWORD(v60) = *(unsigned __int8 *)(v58 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v60)
  {
    uint64_t v61 = (int)v60;
    memcpy(v4, v59, (int)v60);
    v4 += v61;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v59, v60, v4);
}

uint64_t sub_13E81C4(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(int *)(a1 + 56);
  uint64_t v4 = v2 + v3;
  uint64_t v5 = *(void *)(a1 + 64);
  if (v5) {
    int v6 = (uint64_t *)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = sub_13DE6B0(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  uint64_t v10 = *(int *)(a1 + 80);
  uint64_t v11 = v4 + v10;
  uint64_t v12 = *(void *)(a1 + 88);
  if (v12) {
    unsigned int v13 = (uint64_t *)(v12 + 8);
  }
  else {
    unsigned int v13 = 0;
  }
  if (v10)
  {
    uint64_t v14 = 8 * v10;
    do
    {
      uint64_t v15 = *v13++;
      uint64_t v16 = sub_13BC39C(v15);
      v11 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6);
      v14 -= 8;
    }
    while (v14);
  }
  uint64_t v17 = *(int *)(a1 + 104);
  uint64_t v18 = v11 + v17;
  uint64_t v19 = *(void *)(a1 + 112);
  if (v19) {
    uint64_t v20 = (uint64_t *)(v19 + 8);
  }
  else {
    uint64_t v20 = 0;
  }
  if (v17)
  {
    uint64_t v21 = 8 * v17;
    do
    {
      uint64_t v22 = *v20++;
      uint64_t v23 = sub_13BCFB8(v22);
      v18 += v23 + ((9 * (__clz(v23 | 1) ^ 0x1F) + 73) >> 6);
      v21 -= 8;
    }
    while (v21);
  }
  uint64_t v24 = *(int *)(a1 + 128);
  uint64_t v25 = v18 + v24;
  uint64_t v26 = *(void *)(a1 + 136);
  if (v26) {
    uint64_t v27 = (uint64_t *)(v26 + 8);
  }
  else {
    uint64_t v27 = 0;
  }
  if (v24)
  {
    uint64_t v28 = 8 * v24;
    do
    {
      uint64_t v29 = *v27++;
      uint64_t v30 = sub_13C0560(v29);
      v25 += v30 + ((9 * (__clz(v30 | 1) ^ 0x1F) + 73) >> 6);
      v28 -= 8;
    }
    while (v28);
  }
  uint64_t v31 = *(int *)(a1 + 152);
  uint64_t v32 = v25 + v31;
  uint64_t v33 = *(void *)(a1 + 160);
  if (v33) {
    uint64_t v34 = (uint64_t *)(v33 + 8);
  }
  else {
    uint64_t v34 = 0;
  }
  if (v31)
  {
    uint64_t v35 = 8 * v31;
    do
    {
      uint64_t v36 = *v34++;
      uint64_t v37 = sub_13C0DBC(v36);
      v32 += v37 + ((9 * (__clz(v37 | 1) ^ 0x1F) + 73) >> 6);
      v35 -= 8;
    }
    while (v35);
  }
  uint64_t v38 = *(unsigned int *)(a1 + 176);
  uint64_t v39 = v32 + v38;
  if ((int)v38 >= 1)
  {
    unsigned int v40 = (uint64_t *)(*(void *)(a1 + 184) + 8);
    do
    {
      uint64_t v41 = *v40++;
      uint64_t v42 = *(unsigned __int8 *)(v41 + 23);
      uint64_t v43 = *(void *)(v41 + 8);
      if ((v42 & 0x80u) == 0) {
        uint64_t v43 = v42;
      }
      v39 += v43 + ((9 * (__clz(v43 | 1) ^ 0x1F) + 73) >> 6);
      --v38;
    }
    while (v38);
  }
  int v44 = *(_DWORD *)(a1 + 40);
  if ((_BYTE)v44)
  {
    if (v44)
    {
      unint64_t v50 = *(void *)(a1 + 192) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v51 = *(unsigned __int8 *)(v50 + 23);
      uint64_t v52 = *(void *)(v50 + 8);
      if ((v51 & 0x80u) == 0) {
        uint64_t v52 = v51;
      }
      v39 += v52 + ((9 * (__clz(v52 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v44 & 2) == 0)
      {
LABEL_39:
        if ((v44 & 4) == 0) {
          goto LABEL_40;
        }
        goto LABEL_59;
      }
    }
    else if ((v44 & 2) == 0)
    {
      goto LABEL_39;
    }
    unint64_t v53 = *(void *)(a1 + 200) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v54 = *(unsigned __int8 *)(v53 + 23);
    uint64_t v55 = *(void *)(v53 + 8);
    if ((v54 & 0x80u) == 0) {
      uint64_t v55 = v54;
    }
    v39 += v55 + ((9 * (__clz(v55 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v44 & 4) == 0)
    {
LABEL_40:
      if ((v44 & 8) == 0) {
        goto LABEL_41;
      }
      goto LABEL_62;
    }
LABEL_59:
    unint64_t v56 = *(void *)(a1 + 208) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v57 = *(unsigned __int8 *)(v56 + 23);
    uint64_t v58 = *(void *)(v56 + 8);
    if ((v57 & 0x80u) == 0) {
      uint64_t v58 = v57;
    }
    v39 += v58 + ((9 * (__clz(v58 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v44 & 8) == 0)
    {
LABEL_41:
      if ((v44 & 0x10) == 0) {
        goto LABEL_42;
      }
      goto LABEL_63;
    }
LABEL_62:
    uint64_t v59 = sub_13063DC(*(void *)(a1 + 216));
    v39 += v59 + ((9 * (__clz(v59 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v44 & 0x10) == 0)
    {
LABEL_42:
      if ((v44 & 0x20) == 0) {
        goto LABEL_43;
      }
      goto LABEL_64;
    }
LABEL_63:
    uint64_t v60 = sub_13E0940(*(void *)(a1 + 224));
    v39 += v60 + ((9 * (__clz(v60 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v44 & 0x20) == 0)
    {
LABEL_43:
      if ((v44 & 0x40) == 0) {
        goto LABEL_44;
      }
      goto LABEL_65;
    }
LABEL_64:
    unint64_t v61 = sub_14731B8(*(void *)(a1 + 232));
    v39 += v61 + ((9 * (__clz(v61 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v44 & 0x40) == 0)
    {
LABEL_44:
      if ((v44 & 0x80) == 0) {
        goto LABEL_49;
      }
LABEL_45:
      int v45 = *(_DWORD *)(a1 + 248);
      uint64_t v46 = ((9 * (__clz(v45 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if (v45 >= 0) {
        uint64_t v47 = v46;
      }
      else {
        uint64_t v47 = 11;
      }
      v39 += v47;
      goto LABEL_49;
    }
LABEL_65:
    uint64_t v62 = sub_13D600C(*(void *)(a1 + 240));
    v39 += v62 + ((9 * (__clz(v62 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v44 & 0x80) == 0) {
      goto LABEL_49;
    }
    goto LABEL_45;
  }
LABEL_49:
  if ((v44 & 0x100) != 0) {
    v39 += ((9 * (__clz(*(_DWORD *)(a1 + 252) | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v48 = *(void *)(a1 + 8);
  if (v48)
  {
    unint64_t v63 = v48 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v63 + 31) < 0) {
      uint64_t v64 = *(void *)(v63 + 16);
    }
    else {
      uint64_t v64 = *(unsigned __int8 *)(v63 + 31);
    }
    v39 += v64;
  }
  *(_DWORD *)(a1 + 44) = v39;
  return v39;
}

void sub_13E8624(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 56);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    int v6 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_148F0C8((uint64_t *)(a1 + 48), v6, v5, v4, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v7 = *(_DWORD *)(a1 + 56) + v4;
    *(_DWORD *)(a1 + 56) = v7;
    uint64_t v8 = *(int **)(a1 + 64);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 80);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 88) + 8);
    uint64_t v11 = (uint64_t *)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_148DAF4((uint64_t *)(a1 + 72), v11, v10, v9, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v12 = *(_DWORD *)(a1 + 80) + v9;
    *(_DWORD *)(a1 + 80) = v12;
    unsigned int v13 = *(int **)(a1 + 88);
    if (*v13 < v12) {
      int *v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 104);
  if (v14)
  {
    uint64_t v15 = (uint64_t *)(*(void *)(a2 + 112) + 8);
    uint64_t v16 = (uint64_t *)sub_188CCE4(a1 + 96, *(_DWORD *)(a2 + 104));
    sub_148DA68((uint64_t *)(a1 + 96), v16, v15, v14, **(_DWORD **)(a1 + 112) - *(_DWORD *)(a1 + 104));
    int v17 = *(_DWORD *)(a1 + 104) + v14;
    *(_DWORD *)(a1 + 104) = v17;
    uint64_t v18 = *(int **)(a1 + 112);
    if (*v18 < v17) {
      *uint64_t v18 = v17;
    }
  }
  int v19 = *(_DWORD *)(a2 + 128);
  if (v19)
  {
    uint64_t v20 = (uint64_t *)(*(void *)(a2 + 136) + 8);
    uint64_t v21 = (uint64_t *)sub_188CCE4(a1 + 120, *(_DWORD *)(a2 + 128));
    sub_148D9DC((uint64_t *)(a1 + 120), v21, v20, v19, **(_DWORD **)(a1 + 136) - *(_DWORD *)(a1 + 128));
    int v22 = *(_DWORD *)(a1 + 128) + v19;
    *(_DWORD *)(a1 + 128) = v22;
    uint64_t v23 = *(int **)(a1 + 136);
    if (*v23 < v22) {
      *uint64_t v23 = v22;
    }
  }
  int v24 = *(_DWORD *)(a2 + 152);
  if (v24)
  {
    uint64_t v25 = (uint64_t *)(*(void *)(a2 + 160) + 8);
    uint64_t v26 = (std::string **)sub_188CCE4(a1 + 144, *(_DWORD *)(a2 + 152));
    sub_148F154((uint64_t *)(a1 + 144), v26, v25, v24, **(_DWORD **)(a1 + 160) - *(_DWORD *)(a1 + 152));
    int v27 = *(_DWORD *)(a1 + 152) + v24;
    *(_DWORD *)(a1 + 152) = v27;
    uint64_t v28 = *(int **)(a1 + 160);
    if (*v28 < v27) {
      int *v28 = v27;
    }
  }
  int v29 = *(_DWORD *)(a2 + 176);
  if (v29)
  {
    uint64_t v30 = (const std::string **)(*(void *)(a2 + 184) + 8);
    uint64_t v31 = (std::string **)sub_188CCE4(a1 + 168, *(_DWORD *)(a2 + 176));
    sub_188FB98(a1 + 168, v31, v30, v29, **(_DWORD **)(a1 + 184) - *(_DWORD *)(a1 + 176));
    int v32 = *(_DWORD *)(a1 + 176) + v29;
    *(_DWORD *)(a1 + 176) = v32;
    uint64_t v33 = *(int **)(a1 + 184);
    if (*v33 < v32) {
      *uint64_t v33 = v32;
    }
  }
  int v34 = *(_DWORD *)(a2 + 40);
  if ((_BYTE)v34)
  {
    if (v34)
    {
      uint64_t v37 = (long long *)(*(void *)(a2 + 192) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 40) |= 1u;
      uint64_t v38 = *(void *)(a1 + 8);
      uint64_t v39 = (uint64_t *)(v38 & 0xFFFFFFFFFFFFFFFCLL);
      if (v38) {
        uint64_t v39 = (uint64_t *)*v39;
      }
      sub_1881DF4((std::string **)(a1 + 192), v37, v39);
      if ((v34 & 2) == 0)
      {
LABEL_22:
        if ((v34 & 4) == 0) {
          goto LABEL_23;
        }
        goto LABEL_42;
      }
    }
    else if ((v34 & 2) == 0)
    {
      goto LABEL_22;
    }
    unsigned int v40 = (long long *)(*(void *)(a2 + 200) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 40) |= 2u;
    uint64_t v41 = *(void *)(a1 + 8);
    uint64_t v42 = (uint64_t *)(v41 & 0xFFFFFFFFFFFFFFFCLL);
    if (v41) {
      uint64_t v42 = (uint64_t *)*v42;
    }
    sub_1881DF4((std::string **)(a1 + 200), v40, v42);
    if ((v34 & 4) == 0)
    {
LABEL_23:
      if ((v34 & 8) == 0) {
        goto LABEL_24;
      }
      goto LABEL_45;
    }
LABEL_42:
    uint64_t v43 = (long long *)(*(void *)(a2 + 208) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 40) |= 4u;
    uint64_t v44 = *(void *)(a1 + 8);
    int v45 = (uint64_t *)(v44 & 0xFFFFFFFFFFFFFFFCLL);
    if (v44) {
      int v45 = (uint64_t *)*v45;
    }
    sub_1881DF4((std::string **)(a1 + 208), v43, v45);
    if ((v34 & 8) == 0)
    {
LABEL_24:
      if ((v34 & 0x10) == 0) {
        goto LABEL_25;
      }
      goto LABEL_53;
    }
LABEL_45:
    *(_DWORD *)(a1 + 40) |= 8u;
    uint64_t v46 = *(std::string **)(a1 + 216);
    if (!v46)
    {
      uint64_t v47 = *(void *)(a1 + 8);
      uint64_t v48 = (void *)(v47 & 0xFFFFFFFFFFFFFFFCLL);
      if (v47) {
        uint64_t v48 = (void *)*v48;
      }
      uint64_t v46 = (std::string *)sub_13064B8((uint64_t)v48);
      *(void *)(a1 + 216) = v46;
    }
    if (*(void *)(a2 + 216)) {
      uint64_t v49 = *(uint64_t (****)())(a2 + 216);
    }
    else {
      uint64_t v49 = &off_25324B8;
    }
    sub_11A7934(v46, (uint64_t)v49);
    if ((v34 & 0x10) == 0)
    {
LABEL_25:
      if ((v34 & 0x20) == 0) {
        goto LABEL_26;
      }
      goto LABEL_61;
    }
LABEL_53:
    *(_DWORD *)(a1 + 40) |= 0x10u;
    uint64_t v50 = *(void *)(a1 + 224);
    if (!v50)
    {
      uint64_t v51 = *(void *)(a1 + 8);
      uint64_t v52 = (void *)(v51 & 0xFFFFFFFFFFFFFFFCLL);
      if (v51) {
        uint64_t v52 = (void *)*v52;
      }
      sub_13F3830((uint64_t)v52);
      *(void *)(a1 + 224) = v50;
    }
    if (*(void *)(a2 + 224)) {
      unint64_t v53 = *(uint64_t (****)())(a2 + 224);
    }
    else {
      unint64_t v53 = &off_2536C78;
    }
    sub_13E0B80(v50, (uint64_t)v53);
    if ((v34 & 0x20) == 0)
    {
LABEL_26:
      if ((v34 & 0x40) == 0) {
        goto LABEL_27;
      }
      goto LABEL_69;
    }
LABEL_61:
    *(_DWORD *)(a1 + 40) |= 0x20u;
    uint64_t v54 = *(std::string **)(a1 + 232);
    if (!v54)
    {
      uint64_t v55 = *(void *)(a1 + 8);
      unint64_t v56 = (void *)(v55 & 0xFFFFFFFFFFFFFFFCLL);
      if (v55) {
        unint64_t v56 = (void *)*v56;
      }
      uint64_t v54 = (std::string *)sub_147967C((uint64_t)v56);
      *(void *)(a1 + 232) = v54;
    }
    if (*(void *)(a2 + 232)) {
      uint64_t v57 = *(uint64_t (****)())(a2 + 232);
    }
    else {
      uint64_t v57 = &off_2539AF0;
    }
    sub_1113E40(v54, (uint64_t)v57);
    if ((v34 & 0x40) == 0)
    {
LABEL_27:
      if ((v34 & 0x80) == 0)
      {
LABEL_29:
        *(_DWORD *)(a1 + 40) |= v34;
        goto LABEL_30;
      }
LABEL_28:
      *(_DWORD *)(a1 + 248) = *(_DWORD *)(a2 + 248);
      goto LABEL_29;
    }
LABEL_69:
    *(_DWORD *)(a1 + 40) |= 0x40u;
    uint64_t v58 = *(std::string **)(a1 + 240);
    if (!v58)
    {
      uint64_t v59 = *(void *)(a1 + 8);
      uint64_t v60 = (void *)(v59 & 0xFFFFFFFFFFFFFFFCLL);
      if (v59) {
        uint64_t v60 = (void *)*v60;
      }
      uint64_t v58 = (std::string *)sub_13DAE28((uint64_t)v60);
      *(void *)(a1 + 240) = v58;
    }
    if (*(void *)(a2 + 240)) {
      unint64_t v61 = *(uint64_t (****)())(a2 + 240);
    }
    else {
      unint64_t v61 = &off_25369C8;
    }
    sub_11A7934(v58, (uint64_t)v61);
    if ((v34 & 0x80) == 0) {
      goto LABEL_29;
    }
    goto LABEL_28;
  }
LABEL_30:
  if ((v34 & 0x100) != 0)
  {
    int v35 = *(_DWORD *)(a2 + 252);
    *(_DWORD *)(a1 + 40) |= 0x100u;
    *(_DWORD *)(a1 + 252) = v35;
  }
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v36 = *(void *)(a2 + 8);
  if (v36)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v36 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_13E8B1C(uint64_t a1, uint64_t a2)
{
  if (a2 != a1)
  {
    sub_13E6DE8(a1);
    sub_13E8624(a1, a2);
  }
}

uint64_t sub_13E8B68(uint64_t a1)
{
  uint64_t result = sub_18856CC(a1 + 16);
  if (result)
  {
    uint64_t v3 = *(unsigned int *)(a1 + 56);
    while ((int)v3 >= 1)
    {
      uint64_t v4 = v3 - 1;
      char v5 = sub_13DF768(*(void *)(*(void *)(a1 + 64) + 8 * v3));
      uint64_t v3 = v4;
      if ((v5 & 1) == 0) {
        return 0;
      }
    }
    uint64_t v6 = *(unsigned int *)(a1 + 80);
    while ((int)v6 >= 1)
    {
      uint64_t v7 = v6 - 1;
      char v8 = sub_13BC874(*(void *)(*(void *)(a1 + 88) + 8 * v6));
      uint64_t v6 = v7;
      if ((v8 & 1) == 0) {
        return 0;
      }
    }
    uint64_t result = sub_11C2A6C(a1 + 96);
    if (result)
    {
      uint64_t result = sub_13A4B98(a1 + 120);
      if (result)
      {
        if ((*(unsigned char *)(a1 + 40) & 0x10) == 0) {
          return 1;
        }
        uint64_t result = sub_13E0E44(*(void *)(a1 + 224));
        if (result) {
          return 1;
        }
      }
    }
  }
  return result;
}

__n128 sub_13E8C18(uint64_t a1, uint64_t a2)
{
  sub_1885338((uint64_t *)(a1 + 16), (uint64_t *)(a2 + 16));
  uint64_t v4 = *(void *)(a1 + 8);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a2 + 8) = v4;
  LODWORD(v4) = *(_DWORD *)(a1 + 40);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a2 + 40) = v4;
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(a1 + 56);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(void *)(a2 + 48) = v5;
  *(void *)(a2 + 56) = v6;
  uint64_t v7 = *(void *)(a1 + 64);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a2 + 64) = v7;
  uint64_t v8 = *(void *)(a1 + 72);
  uint64_t v9 = *(void *)(a1 + 80);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(void *)(a2 + 72) = v8;
  *(void *)(a2 + 80) = v9;
  uint64_t v10 = *(void *)(a1 + 88);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a2 + 88) = v10;
  uint64_t v11 = *(void *)(a1 + 96);
  uint64_t v12 = *(void *)(a1 + 104);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(void *)(a2 + 96) = v11;
  *(void *)(a2 + 104) = v12;
  uint64_t v13 = *(void *)(a1 + 112);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a2 + 112) = v13;
  uint64_t v14 = *(void *)(a1 + 120);
  uint64_t v15 = *(void *)(a1 + 128);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(void *)(a2 + 120) = v14;
  *(void *)(a2 + 128) = v15;
  uint64_t v16 = *(void *)(a1 + 136);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a2 + 136) = v16;
  uint64_t v17 = *(void *)(a1 + 144);
  uint64_t v18 = *(void *)(a1 + 152);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(void *)(a2 + 144) = v17;
  *(void *)(a2 + 152) = v18;
  uint64_t v19 = *(void *)(a1 + 160);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a2 + 160) = v19;
  uint64_t v20 = *(void *)(a1 + 168);
  uint64_t v21 = *(void *)(a1 + 176);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(void *)(a2 + 168) = v20;
  *(void *)(a2 + 176) = v21;
  uint64_t v22 = *(void *)(a1 + 184);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a2 + 184) = v22;
  uint64_t v23 = *(void *)(a2 + 192);
  *(void *)(a2 + 192) = *(void *)(a1 + 192);
  *(void *)(a1 + 192) = v23;
  uint64_t v24 = *(void *)(a2 + 200);
  *(void *)(a2 + 200) = *(void *)(a1 + 200);
  *(void *)(a1 + 200) = v24;
  uint64_t v25 = *(void *)(a2 + 208);
  *(void *)(a2 + 208) = *(void *)(a1 + 208);
  *(void *)(a1 + 208) = v25;
  uint64_t v26 = *(void *)(a1 + 216);
  uint64_t v27 = *(void *)(a1 + 224);
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(void *)(a2 + 216) = v26;
  *(void *)(a2 + 224) = v27;
  uint64_t v28 = *(void *)(a1 + 232);
  uint64_t v29 = *(void *)(a1 + 240);
  __n128 result = *(__n128 *)(a2 + 232);
  *(__n128 *)(a1 + 232) = result;
  *(void *)(a2 + 232) = v28;
  *(void *)(a2 + 240) = v29;
  uint64_t v31 = *(void *)(a1 + 248);
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  *(void *)(a2 + 248) = v31;
  return result;
}

void *sub_13E8D88@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.ETATrafficUpdateResponse");
}

uint64_t sub_13E8D98(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  uint64_t v3 = *(unsigned int *)(a1 + 56);
  if ((int)v3 >= 1)
  {
    uint64_t v4 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = (uint64_t)sub_15B09D0(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 56) = 0;
  }
  int v6 = *(_DWORD *)(a1 + 40);
  if ((v6 & 3) != 0)
  {
    if (v6) {
      uint64_t result = sub_1464034(*(void *)(a1 + 72));
    }
    if ((v6 & 2) != 0) {
      uint64_t result = sub_15B043C(*(void *)(a1 + 80));
    }
  }
  char v8 = *(unsigned char *)(a1 + 8);
  uint64_t v7 = a1 + 8;
  *(_DWORD *)(v7 + 32) = 0;
  if (v8)
  {
    return sub_188B4AC((uint64_t *)v7);
  }
  return result;
}

uint64_t sub_13E8E44(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 0x1F) == 0) {
    goto LABEL_14;
  }
  if (v2)
  {
    uint64_t result = sub_1470530(*(void *)(result + 24));
    if ((v2 & 2) == 0)
    {
LABEL_4:
      if ((v2 & 4) == 0) {
        goto LABEL_5;
      }
LABEL_9:
      uint64_t result = sub_1472260(*(void *)(v1 + 40));
      if ((v2 & 8) == 0) {
        goto LABEL_12;
      }
LABEL_10:
      uint64_t v3 = *(void *)(v1 + 48);
      char v4 = *(unsigned char *)(v3 + 8);
      uint64_t result = v3 + 8;
      *(_DWORD *)(result + 16) = 0;
      *(_DWORD *)(result + 8) = 0;
      if (v4) {
        uint64_t result = sub_188B4AC((uint64_t *)result);
      }
      goto LABEL_12;
    }
  }
  else if ((v2 & 2) == 0)
  {
    goto LABEL_4;
  }
  uint64_t result = (uint64_t)sub_147177C(*(unsigned char **)(v1 + 32));
  if ((v2 & 4) != 0) {
    goto LABEL_9;
  }
LABEL_5:
  if ((v2 & 8) != 0) {
    goto LABEL_10;
  }
LABEL_12:
  if ((v2 & 0x10) != 0) {
    uint64_t result = sub_1396114(*(void *)(v1 + 56));
  }
LABEL_14:
  if ((v2 & 0xE0) != 0) {
    *(void *)(v1 + 64) = 0;
  }
  if ((v2 & 0x700) != 0)
  {
    *(void *)(v1 + 72) = 0;
    *(_DWORD *)(v1 + 80) = 2;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = v1 + 8;
  *(_DWORD *)(v5 + 8) = 0;
  if (v6)
  {
    return sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

uint64_t sub_13E8F18(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  *(void *)(a1 + 8) = v5;
  *(void *)a1 = off_24B1188;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = a2;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = a2;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = a2;
  *(void *)(a1 + 104) = 0;
  *(void *)(a1 + 112) = 0;
  *(void *)(a1 + 120) = a2;
  *(void *)(a1 + 128) = 0;
  *(void *)(a1 + 136) = 0;
  *(void *)(a1 + 144) = a2;
  *(void *)(a1 + 152) = 0;
  *(void *)(a1 + 160) = 0;
  *(void *)(a1 + 168) = a2;
  *(void *)(a1 + 176) = 0;
  *(void *)(a1 + 184) = 0;
  *(void *)(a1 + 192) = a2;
  *(void *)(a1 + 200) = 0;
  *(void *)(a1 + 208) = 0;
  *(void *)(a1 + 216) = a2;
  *(void *)(a1 + 224) = 0;
  *(void *)(a1 + 232) = 0;
  *(void *)(a1 + 240) = &qword_2550250;
  *(void *)(a1 + 248) = &qword_2550250;
  *(void *)(a1 + 256) = &qword_2550250;
  *(void *)(a1 + 264) = &qword_2550250;
  *(_OWORD *)(a1 + 272) = 0u;
  *(_OWORD *)(a1 + 288) = 0u;
  *(_OWORD *)(a1 + 304) = 0u;
  *(_OWORD *)(a1 + 320) = 0u;
  *(_OWORD *)(a1 + 336) = 0u;
  *(_OWORD *)(a1 + 352) = 0u;
  *(_OWORD *)(a1 + 368) = 0u;
  *(_OWORD *)(a1 + 384) = 0u;
  *(_OWORD *)(a1 + 400) = 0u;
  *(_OWORD *)(a1 + 416) = 0u;
  *(_DWORD *)(a1 + 432) = 800000;
  return a1;
}

void sub_13E8FE4(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_13E9018(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v54 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v53 = a1 + 16;
  *(void *)a1 = off_24B1188;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  char v4 = (uint64_t *)(a1 + 48);
  *(_DWORD *)(a1 + 68) = 0;
  *(void *)(a1 + 52) = 0;
  *(void *)(a1 + 60) = 0;
  *(void *)(a1 + 44) = 0;
  int v5 = *(_DWORD *)(a2 + 56);
  if (v5)
  {
    uint64_t v6 = *(void *)(a2 + 64);
    uint64_t v7 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_12C52B4(v4, v7, (uint64_t *)(v6 + 8), v5, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v8 = *(_DWORD *)(a1 + 56) + v5;
    *(_DWORD *)(a1 + 56) = v8;
    uint64_t v9 = *(int **)(a1 + 64);
    if (*v9 < v8) {
      *uint64_t v9 = v8;
    }
  }
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0;
  int v10 = *(_DWORD *)(a2 + 80);
  if (v10)
  {
    uint64_t v11 = *(void *)(a2 + 88);
    uint64_t v12 = (uint64_t *)sub_188CCE4(a1 + 72, v10);
    sub_1368FF8((uint64_t *)(a1 + 72), v12, (uint64_t *)(v11 + 8), v10, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v13 = *(_DWORD *)(a1 + 80) + v10;
    *(_DWORD *)(a1 + 80) = v13;
    uint64_t v14 = *(int **)(a1 + 88);
    if (*v14 < v13) {
      *uint64_t v14 = v13;
    }
  }
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 104) = 0;
  *(void *)(a1 + 112) = 0;
  int v15 = *(_DWORD *)(a2 + 104);
  if (v15)
  {
    uint64_t v16 = *(void *)(a2 + 112);
    uint64_t v17 = (std::string **)sub_188CCE4(a1 + 96, v15);
    sub_188FB98(a1 + 96, v17, (const std::string **)(v16 + 8), v15, **(_DWORD **)(a1 + 112) - *(_DWORD *)(a1 + 104));
    int v18 = *(_DWORD *)(a1 + 104) + v15;
    *(_DWORD *)(a1 + 104) = v18;
    uint64_t v19 = *(int **)(a1 + 112);
    if (*v19 < v18) {
      *uint64_t v19 = v18;
    }
  }
  *(void *)(a1 + 120) = 0;
  *(void *)(a1 + 128) = 0;
  *(void *)(a1 + 136) = 0;
  int v20 = *(_DWORD *)(a2 + 128);
  if (v20)
  {
    uint64_t v21 = *(void *)(a2 + 136);
    uint64_t v22 = (uint64_t *)sub_188CCE4(a1 + 120, *(_DWORD *)(a2 + 128));
    sub_12C5340((uint64_t *)(a1 + 120), v22, (uint64_t *)(v21 + 8), v20, **(_DWORD **)(a1 + 136) - *(_DWORD *)(a1 + 128));
    int v23 = *(_DWORD *)(a1 + 128) + v20;
    *(_DWORD *)(a1 + 128) = v23;
    uint64_t v24 = *(int **)(a1 + 136);
    if (*v24 < v23) {
      *uint64_t v24 = v23;
    }
  }
  *(void *)(a1 + 144) = 0;
  *(void *)(a1 + 152) = 0;
  *(void *)(a1 + 160) = 0;
  int v25 = *(_DWORD *)(a2 + 152);
  if (v25)
  {
    uint64_t v26 = *(void *)(a2 + 160);
    uint64_t v27 = (uint64_t *)sub_188CCE4(a1 + 144, *(_DWORD *)(a2 + 152));
    sub_1368FF8((uint64_t *)(a1 + 144), v27, (uint64_t *)(v26 + 8), v25, **(_DWORD **)(a1 + 160) - *(_DWORD *)(a1 + 152));
    int v28 = *(_DWORD *)(a1 + 152) + v25;
    *(_DWORD *)(a1 + 152) = v28;
    uint64_t v29 = *(int **)(a1 + 160);
    if (*v29 < v28) {
      int *v29 = v28;
    }
  }
  *(void *)(a1 + 168) = 0;
  *(void *)(a1 + 176) = 0;
  *(void *)(a1 + 184) = 0;
  int v30 = *(_DWORD *)(a2 + 176);
  if (v30)
  {
    uint64_t v31 = *(void *)(a2 + 184);
    int v32 = (std::string **)sub_188CCE4(a1 + 168, *(_DWORD *)(a2 + 176));
    sub_11DB348((uint64_t *)(a1 + 168), v32, (uint64_t *)(v31 + 8), v30, **(_DWORD **)(a1 + 184) - *(_DWORD *)(a1 + 176));
    int v33 = *(_DWORD *)(a1 + 176) + v30;
    *(_DWORD *)(a1 + 176) = v33;
    int v34 = *(int **)(a1 + 184);
    if (*v34 < v33) {
      *int v34 = v33;
    }
  }
  *(void *)(a1 + 192) = 0;
  *(void *)(a1 + 200) = 0;
  *(void *)(a1 + 208) = 0;
  int v35 = *(_DWORD *)(a2 + 200);
  if (v35)
  {
    uint64_t v36 = *(void *)(a2 + 208);
    uint64_t v37 = (std::string **)sub_188CCE4(a1 + 192, *(_DWORD *)(a2 + 200));
    sub_188FB98(a1 + 192, v37, (const std::string **)(v36 + 8), v35, **(_DWORD **)(a1 + 208) - *(_DWORD *)(a1 + 200));
    int v38 = *(_DWORD *)(a1 + 200) + v35;
    *(_DWORD *)(a1 + 200) = v38;
    uint64_t v39 = *(int **)(a1 + 208);
    if (*v39 < v38) {
      *uint64_t v39 = v38;
    }
  }
  *(void *)(a1 + 216) = 0;
  *(void *)(a1 + 224) = 0;
  *(void *)(a1 + 232) = 0;
  int v40 = *(_DWORD *)(a2 + 224);
  if (v40)
  {
    uint64_t v41 = *(void *)(a2 + 232);
    uint64_t v42 = (std::string **)sub_188CCE4(a1 + 216, *(_DWORD *)(a2 + 224));
    sub_188FB98(a1 + 216, v42, (const std::string **)(v41 + 8), v40, **(_DWORD **)(a1 + 232) - *(_DWORD *)(a1 + 224));
    int v43 = *(_DWORD *)(a1 + 224) + v40;
    *(_DWORD *)(a1 + 224) = v43;
    uint64_t v44 = *(int **)(a1 + 232);
    if (*v44 < v43) {
      *uint64_t v44 = v43;
    }
  }
  uint64_t v45 = *(void *)(a2 + 8);
  if (v45) {
    sub_188B4F8(v54, (v45 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v53, a2 + 16);
  *(void *)(a1 + 240) = &qword_2550250;
  int v46 = *(_DWORD *)(a2 + 40);
  if (v46)
  {
    uint64_t v47 = (uint64_t *)(*v54 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v54) {
      uint64_t v47 = (uint64_t *)*v47;
    }
    sub_1881DF4((std::string **)(a1 + 240), (long long *)(*(void *)(a2 + 240) & 0xFFFFFFFFFFFFFFFELL), v47);
    int v46 = *(_DWORD *)(a2 + 40);
  }
  *(void *)(a1 + 248) = &qword_2550250;
  if ((v46 & 2) != 0)
  {
    uint64_t v48 = (uint64_t *)(*v54 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v54) {
      uint64_t v48 = (uint64_t *)*v48;
    }
    sub_1881DF4((std::string **)(a1 + 248), (long long *)(*(void *)(a2 + 248) & 0xFFFFFFFFFFFFFFFELL), v48);
    int v46 = *(_DWORD *)(a2 + 40);
  }
  *(void *)(a1 + 256) = &qword_2550250;
  if ((v46 & 4) != 0)
  {
    uint64_t v49 = (uint64_t *)(*v54 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v54) {
      uint64_t v49 = (uint64_t *)*v49;
    }
    sub_1881DF4((std::string **)(a1 + 256), (long long *)(*(void *)(a2 + 256) & 0xFFFFFFFFFFFFFFFELL), v49);
    int v46 = *(_DWORD *)(a2 + 40);
  }
  *(void *)(a1 + 264) = &qword_2550250;
  if ((v46 & 8) != 0)
  {
    uint64_t v50 = (uint64_t *)(*v54 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v54) {
      uint64_t v50 = (uint64_t *)*v50;
    }
    sub_1881DF4((std::string **)(a1 + 264), (long long *)(*(void *)(a2 + 264) & 0xFFFFFFFFFFFFFFFELL), v50);
    int v46 = *(_DWORD *)(a2 + 40);
  }
  if ((v46 & 0x10) != 0) {
    operator new();
  }
  *(void *)(a1 + 272) = 0;
  if ((v46 & 0x20) != 0) {
    operator new();
  }
  *(void *)(a1 + 280) = 0;
  if ((v46 & 0x40) != 0) {
    operator new();
  }
  *(void *)(a1 + 288) = 0;
  if ((v46 & 0x80) != 0) {
    operator new();
  }
  *(void *)(a1 + 296) = 0;
  if ((v46 & 0x100) != 0) {
    operator new();
  }
  *(void *)(a1 + 304) = 0;
  if ((v46 & 0x200) != 0) {
    operator new();
  }
  *(void *)(a1 + 312) = 0;
  if ((v46 & 0x400) != 0) {
    operator new();
  }
  *(void *)(a1 + 320) = 0;
  if ((v46 & 0x800) != 0) {
    operator new();
  }
  *(void *)(a1 + 328) = 0;
  if ((v46 & 0x1000) != 0) {
    operator new();
  }
  *(void *)(a1 + 336) = 0;
  if ((v46 & 0x2000) != 0) {
    operator new();
  }
  *(void *)(a1 + 344) = 0;
  if ((v46 & 0x4000) != 0) {
    operator new();
  }
  *(void *)(a1 + 352) = 0;
  if ((v46 & 0x8000) != 0) {
    operator new();
  }
  *(void *)(a1 + 360) = 0;
  if ((v46 & 0x10000) != 0) {
    operator new();
  }
  *(void *)(a1 + 368) = 0;
  if ((v46 & 0x20000) != 0) {
    operator new();
  }
  *(void *)(a1 + 376) = 0;
  if ((v46 & 0x40000) != 0) {
    operator new();
  }
  *(void *)(a1 + 384) = 0;
  if ((v46 & 0x80000) != 0) {
    operator new();
  }
  *(void *)(a1 + 392) = 0;
  if ((v46 & 0x100000) != 0) {
    operator new();
  }
  *(void *)(a1 + 400) = 0;
  long long v51 = *(_OWORD *)(a2 + 408);
  *(_OWORD *)(a1 + 420) = *(_OWORD *)(a2 + 420);
  *(_OWORD *)(a1 + 408) = v51;
  return a1;
}

void sub_13E98BC()
{
}

void *sub_13E9AEC(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  char v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_13E9BCC((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  sub_1889DE8(a1 + 27);
  sub_1889DE8(a1 + 24);
  sub_11DB1BC(a1 + 21);
  sub_1368D54(a1 + 18);
  sub_12C5234(a1 + 15);
  sub_1889DE8(a1 + 12);
  sub_1368D54(a1 + 9);
  sub_12C51B4(a1 + 6);
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void ***sub_13E9BCC(uint64_t a1)
{
  uint64_t v3 = *(uint64_t **)(a1 + 240);
  uint64_t v2 = (void ***)(a1 + 240);
  if (v3 != &qword_2550250) {
    sub_1881C6C(v2);
  }
  uint64_t result = (void ***)(a1 + 248);
  if (*(uint64_t **)(a1 + 248) != &qword_2550250) {
    sub_1881C6C(result);
  }
  if (*(uint64_t **)(a1 + 256) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 256));
  }
  if (*(uint64_t **)(a1 + 264) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 264));
  }
  if ((uint64_t (***)())a1 != &off_2536FB0)
  {
    int v5 = *(void **)(a1 + 272);
    if (v5)
    {
      sub_13ADABC(v5);
      operator delete();
    }
    uint64_t v6 = *(void *)(a1 + 280);
    if (v6)
    {
      sub_146F9E4(v6);
      operator delete();
    }
    if (*(void *)(a1 + 288))
    {
      sub_15B9F30();
      operator delete();
    }
    uint64_t v7 = *(void **)(a1 + 296);
    if (v7)
    {
      sub_1477530(v7);
      operator delete();
    }
    uint64_t v8 = *(void *)(a1 + 304);
    if (v8)
    {
      sub_1473B88(v8);
      operator delete();
    }
    uint64_t v9 = *(void *)(a1 + 312);
    if (v9)
    {
      sub_13C6DAC(v9);
      operator delete();
    }
    uint64_t v10 = *(void *)(a1 + 320);
    if (v10)
    {
      sub_13CA098(v10);
      operator delete();
    }
    uint64_t v11 = *(void *)(a1 + 328);
    if (v11)
    {
      sub_13CB2DC(v11);
      operator delete();
    }
    uint64_t v12 = *(void **)(a1 + 336);
    if (v12)
    {
      sub_13B1884(v12);
      operator delete();
    }
    int v13 = *(void **)(a1 + 344);
    if (v13)
    {
      sub_145A5CC(v13);
      operator delete();
    }
    uint64_t v14 = *(void *)(a1 + 352);
    if (v14)
    {
      sub_15B3DFC(v14);
      operator delete();
    }
    if (*(void *)(a1 + 360))
    {
      sub_13059CC();
      operator delete();
    }
    uint64_t v15 = *(void *)(a1 + 368);
    if (v15)
    {
      sub_13C916C(v15);
      operator delete();
    }
    uint64_t v16 = *(void **)(a1 + 376);
    if (v16)
    {
      sub_1392D48(v16);
      operator delete();
    }
    uint64_t v17 = *(void *)(a1 + 384);
    if (v17)
    {
      sub_13D12B4(v17);
      operator delete();
    }
    if (*(void *)(a1 + 392))
    {
      sub_15C0D18();
      operator delete();
    }
    uint64_t result = *(void ****)(a1 + 400);
    if (result)
    {
      sub_13EE2AC(result);
      operator delete();
    }
  }
  return result;
}

void sub_13E9E8C(void *a1)
{
  sub_13E9AEC(a1);

  operator delete();
}

uint64_t sub_13E9EC4(uint64_t a1)
{
  sub_18843A4((unsigned char *)(a1 + 16));
  uint64_t v2 = *(unsigned int *)(a1 + 56);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v4 = *v3++;
      sub_13E8D98(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(a1 + 56) = 0;
  }
  uint64_t v5 = *(unsigned int *)(a1 + 80);
  if ((int)v5 >= 1)
  {
    uint64_t v6 = (uint64_t *)(*(void *)(a1 + 88) + 8);
    do
    {
      uint64_t v7 = *v6++;
      sub_13E8E44(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(a1 + 80) = 0;
  }
  sub_188CC00(a1 + 96);
  uint64_t v8 = *(unsigned int *)(a1 + 128);
  if ((int)v8 >= 1)
  {
    uint64_t v9 = (uint64_t *)(*(void *)(a1 + 136) + 8);
    do
    {
      uint64_t v10 = *v9++;
      sub_15B043C(v10);
      --v8;
    }
    while (v8);
    *(_DWORD *)(a1 + 128) = 0;
  }
  uint64_t v11 = *(unsigned int *)(a1 + 152);
  if ((int)v11 >= 1)
  {
    uint64_t v12 = (uint64_t *)(*(void *)(a1 + 160) + 8);
    do
    {
      uint64_t v13 = *v12++;
      sub_13E8E44(v13);
      --v11;
    }
    while (v11);
    *(_DWORD *)(a1 + 152) = 0;
  }
  uint64_t v14 = *(unsigned int *)(a1 + 176);
  if ((int)v14 >= 1)
  {
    uint64_t v15 = (uint64_t *)(*(void *)(a1 + 184) + 8);
    do
    {
      uint64_t v16 = *v15++;
      sub_15BAAF0(v16);
      --v14;
    }
    while (v14);
    *(_DWORD *)(a1 + 176) = 0;
  }
  sub_188CC00(a1 + 192);
  uint64_t result = sub_188CC00(a1 + 216);
  unsigned int v18 = *(_DWORD *)(a1 + 40);
  if (!(_BYTE)v18) {
    goto LABEL_31;
  }
  if ((v18 & 1) == 0)
  {
    if ((v18 & 2) == 0) {
      goto LABEL_24;
    }
LABEL_74:
    unint64_t v24 = *(void *)(a1 + 248) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v24 + 23) < 0)
    {
      **(unsigned char **)unint64_t v24 = 0;
      *(void *)(v24 + 8) = 0;
      if ((v18 & 4) != 0) {
        goto LABEL_78;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v24 = 0;
      *(unsigned char *)(v24 + 23) = 0;
      if ((v18 & 4) != 0) {
        goto LABEL_78;
      }
    }
LABEL_25:
    if ((v18 & 8) == 0) {
      goto LABEL_26;
    }
LABEL_82:
    unint64_t v26 = *(void *)(a1 + 264) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v26 + 23) < 0)
    {
      **(unsigned char **)unint64_t v26 = 0;
      *(void *)(v26 + 8) = 0;
      if ((v18 & 0x10) != 0) {
        goto LABEL_86;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v26 = 0;
      *(unsigned char *)(v26 + 23) = 0;
      if ((v18 & 0x10) != 0) {
        goto LABEL_86;
      }
    }
LABEL_27:
    if ((v18 & 0x20) == 0) {
      goto LABEL_28;
    }
LABEL_87:
    uint64_t result = sub_13E8D98(*(void *)(a1 + 280));
    if ((v18 & 0x40) == 0)
    {
LABEL_29:
      if ((v18 & 0x80) == 0) {
        goto LABEL_31;
      }
      goto LABEL_30;
    }
    goto LABEL_88;
  }
  unint64_t v19 = *(void *)(a1 + 240) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v19 + 23) < 0)
  {
    **(unsigned char **)unint64_t v19 = 0;
    *(void *)(v19 + 8) = 0;
    if ((v18 & 2) != 0) {
      goto LABEL_74;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v19 = 0;
    *(unsigned char *)(v19 + 23) = 0;
    if ((v18 & 2) != 0) {
      goto LABEL_74;
    }
  }
LABEL_24:
  if ((v18 & 4) == 0) {
    goto LABEL_25;
  }
LABEL_78:
  unint64_t v25 = *(void *)(a1 + 256) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v25 + 23) < 0)
  {
    **(unsigned char **)unint64_t v25 = 0;
    *(void *)(v25 + 8) = 0;
    if ((v18 & 8) != 0) {
      goto LABEL_82;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v25 = 0;
    *(unsigned char *)(v25 + 23) = 0;
    if ((v18 & 8) != 0) {
      goto LABEL_82;
    }
  }
LABEL_26:
  if ((v18 & 0x10) == 0) {
    goto LABEL_27;
  }
LABEL_86:
  uint64_t result = sub_13ADB68(*(void *)(a1 + 272));
  if ((v18 & 0x20) != 0) {
    goto LABEL_87;
  }
LABEL_28:
  if ((v18 & 0x40) == 0) {
    goto LABEL_29;
  }
LABEL_88:
  uint64_t result = sub_15B9F6C(*(void *)(a1 + 288));
  if ((v18 & 0x80) != 0) {
LABEL_30:
  }
    uint64_t result = sub_13E123C(*(void *)(a1 + 296));
LABEL_31:
  if ((v18 & 0xFF00) == 0) {
    goto LABEL_41;
  }
  if ((v18 & 0x100) != 0)
  {
    uint64_t result = sub_13E8E44(*(void *)(a1 + 304));
    if ((v18 & 0x200) == 0)
    {
LABEL_34:
      if ((v18 & 0x400) == 0) {
        goto LABEL_35;
      }
      goto LABEL_53;
    }
  }
  else if ((v18 & 0x200) == 0)
  {
    goto LABEL_34;
  }
  uint64_t result = sub_13AE7D8(*(void *)(a1 + 312));
  if ((v18 & 0x400) == 0)
  {
LABEL_35:
    if ((v18 & 0x800) == 0) {
      goto LABEL_36;
    }
    goto LABEL_54;
  }
LABEL_53:
  uint64_t result = sub_13AE860(*(void *)(a1 + 320));
  if ((v18 & 0x800) == 0)
  {
LABEL_36:
    if ((v18 & 0x1000) == 0) {
      goto LABEL_37;
    }
    goto LABEL_55;
  }
LABEL_54:
  uint64_t result = sub_13AE8DC(*(void *)(a1 + 328));
  if ((v18 & 0x1000) == 0)
  {
LABEL_37:
    if ((v18 & 0x2000) == 0) {
      goto LABEL_38;
    }
    goto LABEL_56;
  }
LABEL_55:
  uint64_t result = sub_13B1930(*(void *)(a1 + 336));
  if ((v18 & 0x2000) == 0)
  {
LABEL_38:
    if ((v18 & 0x4000) == 0) {
      goto LABEL_39;
    }
    goto LABEL_57;
  }
LABEL_56:
  uint64_t result = sub_13E0F24(*(void *)(a1 + 344));
  if ((v18 & 0x4000) == 0)
  {
LABEL_39:
    if ((v18 & 0x8000) == 0) {
      goto LABEL_41;
    }
    goto LABEL_40;
  }
LABEL_57:
  uint64_t result = sub_15B043C(*(void *)(a1 + 352));
  if ((v18 & 0x8000) != 0) {
LABEL_40:
  }
    uint64_t result = (uint64_t)sub_1305A08(*(void *)(a1 + 360));
LABEL_41:
  if ((v18 & 0x1F0000) == 0) {
    goto LABEL_65;
  }
  if ((v18 & 0x10000) != 0)
  {
    uint64_t result = sub_13AE954(*(void *)(a1 + 368));
    if ((v18 & 0x20000) == 0)
    {
LABEL_44:
      if ((v18 & 0x40000) == 0) {
        goto LABEL_45;
      }
      goto LABEL_61;
    }
  }
  else if ((v18 & 0x20000) == 0)
  {
    goto LABEL_44;
  }
  uint64_t result = sub_1392E00(*(void *)(a1 + 376));
  if ((v18 & 0x40000) == 0)
  {
LABEL_45:
    if ((v18 & 0x80000) == 0) {
      goto LABEL_46;
    }
    goto LABEL_62;
  }
LABEL_61:
  uint64_t result = sub_13D13FC(*(void *)(a1 + 384));
  if ((v18 & 0x80000) == 0)
  {
LABEL_46:
    if ((v18 & 0x100000) == 0) {
      goto LABEL_65;
    }
    goto LABEL_63;
  }
LABEL_62:
  uint64_t result = sub_15C0D54(*(void *)(a1 + 392));
  if ((v18 & 0x100000) == 0) {
    goto LABEL_65;
  }
LABEL_63:
  uint64_t v20 = *(void *)(a1 + 400);
  char v21 = *(unsigned char *)(v20 + 8);
  uint64_t result = v20 + 8;
  *(_DWORD *)(result + 16) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v21) {
    uint64_t result = sub_188B4AC((uint64_t *)result);
  }
LABEL_65:
  if ((v18 & 0xE00000) != 0)
  {
    *(_WORD *)(a1 + 412) = 0;
    *(_DWORD *)(a1 + 408) = 0;
  }
  if (HIBYTE(v18))
  {
    *(_WORD *)(a1 + 430) = 0;
    *(void *)(a1 + 422) = 0;
    *(void *)(a1 + 414) = 0;
    *(_DWORD *)(a1 + 432) = 800000;
  }
  char v23 = *(unsigned char *)(a1 + 8);
  uint64_t v22 = a1 + 8;
  *(_DWORD *)(v22 + 32) = 0;
  if (v23)
  {
    return sub_188B4AC((uint64_t *)v22);
  }
  return result;
}

uint64_t sub_13EA248(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 16) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

unsigned __int8 *sub_13EA260(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)v163 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v163, a3[11].i32[1]))
  {
LABEL_2:
    uint64_t v6 = *(unsigned __int8 **)v163;
    goto LABEL_3;
  }
  v161 = (uint64_t **)(a1 + 192);
  v162 = (uint64_t **)(a1 + 216);
  v160 = (uint64_t *)(a1 + 8);
  uint64_t v8 = (uint64_t **)(a1 + 96);
  while (2)
  {
    uint64_t v6 = (unsigned __int8 *)(*(void *)v163 + 1);
    unsigned int v9 = **(unsigned char **)v163;
    if ((char)**(unsigned char **)v163 < 0)
    {
      unsigned int v10 = v9 + (*v6 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v6 < 0)
      {
        uint64_t v6 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v163, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v6 = (unsigned __int8 *)(*(void *)v163 + 2);
      }
    }
    *(void *)v163 = v6;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_270;
        }
        uint64_t v12 = (char *)(v6 + 1);
        unint64_t v13 = *v6;
        if (((char)*v6 & 0x80000000) == 0) {
          goto LABEL_14;
        }
        int v14 = *v12;
        int v15 = v13 + (v14 << 7);
        unint64_t v13 = (v15 - 128);
        if (v14 < 0)
        {
          *(void *)v163 = sub_188C138((uint64_t)v6, (v15 - 128));
          if (!*(void *)v163) {
            goto LABEL_307;
          }
          unint64_t v13 = v140;
        }
        else
        {
          uint64_t v12 = (char *)(v6 + 2);
LABEL_14:
          *(void *)v163 = v12;
        }
        if (v13 > 6)
        {
          if (*v160) {
            v159 = (std::string *)((*v160 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            v159 = (std::string *)sub_188DBD8(v160);
          }
          sub_188C020(1, v13, v159);
        }
        else
        {
          *(_DWORD *)(a1 + 40) |= 0x200000u;
          *(_DWORD *)(a1 + 408) = v13;
        }
        goto LABEL_280;
      case 2u:
        if (v9 != 18) {
          goto LABEL_270;
        }
        *(_DWORD *)(a1 + 40) |= 0x10u;
        uint64_t v22 = *(void *)(a1 + 272);
        if (!v22)
        {
          char v23 = (void *)(*v160 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v160) {
            char v23 = (void *)*v23;
          }
          uint64_t v22 = sub_13D8EE0((uint64_t)v23);
          *(void *)(a1 + 272) = v22;
          uint64_t v6 = *(unsigned __int8 **)v163;
        }
        uint64_t v24 = (uint64_t)sub_1354710(a3, v22, v6);
        goto LABEL_279;
      case 3u:
        if (v9 != 26) {
          goto LABEL_270;
        }
        *(_DWORD *)(a1 + 40) |= 0x20u;
        uint64_t v25 = *(void *)(a1 + 280);
        if (!v25)
        {
          unint64_t v26 = (void *)(*v160 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v160) {
            unint64_t v26 = (void *)*v26;
          }
          uint64_t v25 = sub_1479450((uint64_t)v26);
          *(void *)(a1 + 280) = v25;
          uint64_t v6 = *(unsigned __int8 **)v163;
        }
        uint64_t v24 = (uint64_t)sub_12BD720(a3, v25, v6);
        goto LABEL_279;
      case 4u:
        if (v9 != 34) {
          goto LABEL_270;
        }
        uint64_t v27 = (char *)(v6 - 1);
        while (1)
        {
          int v28 = (unsigned __int8 *)(v27 + 1);
          *(void *)v163 = v27 + 1;
          uint64_t v29 = *(_DWORD **)(a1 + 64);
          if (v29 && (uint64_t v30 = *(int *)(a1 + 56), (int)v30 < *v29))
          {
            *(_DWORD *)(a1 + 56) = v30 + 1;
            uint64_t v31 = *(void *)&v29[2 * v30 + 2];
          }
          else
          {
            uint64_t v32 = sub_1479450(*(void *)(a1 + 48));
            uint64_t v31 = sub_188CDC8(a1 + 48, v32);
            int v28 = *(unsigned __int8 **)v163;
          }
          uint64_t v27 = sub_12BD720(a3, v31, v28);
          *(void *)v163 = v27;
          if (!v27) {
            goto LABEL_307;
          }
          if (*(void *)a3 <= (unint64_t)v27 || *v27 != 34) {
            goto LABEL_280;
          }
        }
      case 5u:
        if (v9 != 40) {
          goto LABEL_270;
        }
        v5 |= 0x400000u;
        int v33 = (char *)(v6 + 1);
        uint64_t v34 = *v6;
        if (((char)*v6 & 0x80000000) == 0) {
          goto LABEL_54;
        }
        int v35 = *v33;
        uint64_t v34 = v34 + (v35 << 7) - 128;
        if (v35 < 0)
        {
          uint64_t v141 = sub_188C138((uint64_t)v6, v34);
          *(void *)v163 = v141;
          *(unsigned char *)(a1 + 412) = v142 != 0;
          if (!v141) {
            goto LABEL_307;
          }
        }
        else
        {
          int v33 = (char *)(v6 + 2);
LABEL_54:
          *(void *)v163 = v33;
          *(unsigned char *)(a1 + 412) = v34 != 0;
        }
        goto LABEL_280;
      case 6u:
        if (v9 != 48) {
          goto LABEL_270;
        }
        v5 |= 0x800000u;
        uint64_t v36 = (char *)(v6 + 1);
        uint64_t v37 = *v6;
        if (((char)*v6 & 0x80000000) == 0) {
          goto LABEL_59;
        }
        int v38 = *v36;
        uint64_t v37 = v37 + (v38 << 7) - 128;
        if (v38 < 0)
        {
          uint64_t v143 = sub_188C138((uint64_t)v6, v37);
          *(void *)v163 = v143;
          *(unsigned char *)(a1 + 413) = v144 != 0;
          if (!v143) {
            goto LABEL_307;
          }
        }
        else
        {
          uint64_t v36 = (char *)(v6 + 2);
LABEL_59:
          *(void *)v163 = v36;
          *(unsigned char *)(a1 + 413) = v37 != 0;
        }
        goto LABEL_280;
      case 7u:
        if (v9 != 56) {
          goto LABEL_270;
        }
        v5 |= 0x1000000u;
        uint64_t v39 = (char *)(v6 + 1);
        uint64_t v40 = *v6;
        if (((char)*v6 & 0x80000000) == 0) {
          goto LABEL_64;
        }
        int v41 = *v39;
        uint64_t v40 = v40 + (v41 << 7) - 128;
        if (v41 < 0)
        {
          uint64_t v145 = sub_188C138((uint64_t)v6, v40);
          *(void *)v163 = v145;
          *(unsigned char *)(a1 + 414) = v146 != 0;
          if (!v145) {
            goto LABEL_307;
          }
        }
        else
        {
          uint64_t v39 = (char *)(v6 + 2);
LABEL_64:
          *(void *)v163 = v39;
          *(unsigned char *)(a1 + 414) = v40 != 0;
        }
        goto LABEL_280;
      case 8u:
        if (v9 != 66) {
          goto LABEL_270;
        }
        *(_DWORD *)(a1 + 40) |= 0x40u;
        uint64_t v42 = *(void **)(a1 + 288);
        if (!v42)
        {
          int v43 = (void *)(*v160 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v160) {
            int v43 = (void *)*v43;
          }
          uint64_t v42 = sub_15C2014((uint64_t)v43);
          *(void *)(a1 + 288) = v42;
          uint64_t v6 = *(unsigned __int8 **)v163;
        }
        uint64_t v24 = (uint64_t)sub_11EAA5C(a3, (uint64_t)v42, v6);
        goto LABEL_279;
      case 9u:
        if (v9 != 72) {
          goto LABEL_270;
        }
        v5 |= 0x80000000;
        uint64_t v44 = (char *)(v6 + 1);
        int v45 = *v6;
        if (((char)*v6 & 0x80000000) == 0) {
          goto LABEL_75;
        }
        int v46 = *v44;
        int v45 = v45 + (v46 << 7) - 128;
        if (v46 < 0)
        {
          uint64_t v147 = sub_188C0D0((uint64_t)v6, v45);
          *(void *)v163 = v147;
          *(_DWORD *)(a1 + 432) = v148;
          if (!v147) {
            goto LABEL_307;
          }
        }
        else
        {
          uint64_t v44 = (char *)(v6 + 2);
LABEL_75:
          *(void *)v163 = v44;
          *(_DWORD *)(a1 + 432) = v45;
        }
        goto LABEL_280;
      case 0xAu:
        if (v9 != 82) {
          goto LABEL_270;
        }
        *(_DWORD *)(a1 + 40) |= 0x80u;
        uint64_t v47 = *(void *)(a1 + 296);
        if (!v47)
        {
          uint64_t v48 = (void *)(*v160 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v160) {
            uint64_t v48 = (void *)*v48;
          }
          uint64_t v47 = sub_1479978((uint64_t)v48);
          *(void *)(a1 + 296) = v47;
          uint64_t v6 = *(unsigned __int8 **)v163;
        }
        uint64_t v24 = sub_1352B04(a3, v47, v6);
        goto LABEL_279;
      case 0xBu:
        if (v9 != 90) {
          goto LABEL_270;
        }
        *(_DWORD *)(a1 + 40) |= 0x100u;
        uint64_t v49 = *(void *)(a1 + 304);
        if (!v49)
        {
          uint64_t v50 = (void *)(*v160 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v160) {
            uint64_t v50 = (void *)*v50;
          }
          sub_1479774((uint64_t)v50);
          uint64_t v49 = v51;
          *(void *)(a1 + 304) = v51;
          uint64_t v6 = *(unsigned __int8 **)v163;
        }
        uint64_t v24 = (uint64_t)sub_13529E4(a3, v49, v6);
        goto LABEL_279;
      case 0xCu:
        if (v9 != 98) {
          goto LABEL_270;
        }
        uint64_t v52 = (char *)(v6 - 1);
        while (1)
        {
          uint64_t v53 = (unsigned __int8 *)(v52 + 1);
          *(void *)v163 = v52 + 1;
          uint64_t v54 = *(_DWORD **)(a1 + 88);
          if (v54 && (uint64_t v55 = *(int *)(a1 + 80), (int)v55 < *v54))
          {
            *(_DWORD *)(a1 + 80) = v55 + 1;
            uint64_t v56 = *(void *)&v54[2 * v55 + 2];
          }
          else
          {
            sub_1479774(*(void *)(a1 + 72));
            uint64_t v56 = sub_188CDC8(a1 + 72, v57);
            uint64_t v53 = *(unsigned __int8 **)v163;
          }
          uint64_t v52 = sub_13529E4(a3, v56, v53);
          *(void *)v163 = v52;
          if (!v52) {
            goto LABEL_307;
          }
          if (*(void *)a3 <= (unint64_t)v52 || *v52 != 98) {
            goto LABEL_280;
          }
        }
      case 0xDu:
        if (v9 != 106) {
          goto LABEL_270;
        }
        *(_DWORD *)(a1 + 40) |= 0x200u;
        uint64_t v58 = *(void *)(a1 + 312);
        if (!v58)
        {
          uint64_t v59 = (void *)(*v160 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v160) {
            uint64_t v59 = (void *)*v59;
          }
          uint64_t v58 = sub_13DA01C((uint64_t)v59);
          *(void *)(a1 + 312) = v58;
          uint64_t v6 = *(unsigned __int8 **)v163;
        }
        uint64_t v24 = (uint64_t)sub_13AFAA0(a3, v58, v6);
        goto LABEL_279;
      case 0xEu:
        if (v9 != 114) {
          goto LABEL_270;
        }
        *(_DWORD *)(a1 + 40) |= 0x400u;
        uint64_t v60 = *(void *)(a1 + 320);
        if (!v60)
        {
          unint64_t v61 = (void *)(*v160 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v160) {
            unint64_t v61 = (void *)*v61;
          }
          uint64_t v60 = sub_13DA3AC((uint64_t)v61);
          *(void *)(a1 + 320) = v60;
          uint64_t v6 = *(unsigned __int8 **)v163;
        }
        uint64_t v24 = (uint64_t)sub_13AFB30(a3, v60, v6);
        goto LABEL_279;
      case 0xFu:
        if (v9 != 122) {
          goto LABEL_270;
        }
        *(_DWORD *)(a1 + 40) |= 0x800u;
        uint64_t v62 = *(void **)(a1 + 328);
        if (!v62)
        {
          unint64_t v63 = (void *)(*v160 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v160) {
            unint64_t v63 = (void *)*v63;
          }
          uint64_t v62 = sub_13DA484((uint64_t)v63);
          *(void *)(a1 + 328) = v62;
          uint64_t v6 = *(unsigned __int8 **)v163;
        }
        uint64_t v24 = (uint64_t)sub_13AFBC0(a3, (uint64_t)v62, v6);
        goto LABEL_279;
      case 0x10u:
        if (v9 != 128) {
          goto LABEL_270;
        }
        v5 |= 0x2000000u;
        uint64_t v64 = (char *)(v6 + 1);
        uint64_t v65 = *v6;
        if (((char)*v6 & 0x80000000) == 0) {
          goto LABEL_120;
        }
        int v66 = *v64;
        uint64_t v65 = v65 + (v66 << 7) - 128;
        if (v66 < 0)
        {
          uint64_t v149 = sub_188C138((uint64_t)v6, v65);
          *(void *)v163 = v149;
          *(unsigned char *)(a1 + 415) = v150 != 0;
          if (!v149) {
            goto LABEL_307;
          }
        }
        else
        {
          uint64_t v64 = (char *)(v6 + 2);
LABEL_120:
          *(void *)v163 = v64;
          *(unsigned char *)(a1 + 415) = v65 != 0;
        }
        goto LABEL_280;
      case 0x11u:
        goto LABEL_270;
      case 0x12u:
        if (v9 != 146) {
          goto LABEL_270;
        }
        *(_DWORD *)(a1 + 40) |= 0x1000u;
        uint64_t v67 = *(void *)(a1 + 336);
        if (!v67)
        {
          uint64_t v68 = (void *)(*v160 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v160) {
            uint64_t v68 = (void *)*v68;
          }
          uint64_t v67 = sub_13D9048((uint64_t)v68);
          *(void *)(a1 + 336) = v67;
          uint64_t v6 = *(unsigned __int8 **)v163;
        }
        uint64_t v24 = (uint64_t)sub_13E34EC(a3, v67, v6);
        goto LABEL_279;
      case 0x13u:
        if (v9 != 154) {
          goto LABEL_270;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        uint64_t v69 = *(void *)(a1 + 8);
        unint64_t v70 = (uint64_t *)(v69 & 0xFFFFFFFFFFFFFFFCLL);
        if (v69) {
          unint64_t v70 = (uint64_t *)*v70;
        }
        uint64_t v71 = (void *)(a1 + 240);
        goto LABEL_193;
      case 0x14u:
        if (v9 != 162) {
          goto LABEL_270;
        }
        *(_DWORD *)(a1 + 40) |= 2u;
        uint64_t v72 = *(void *)(a1 + 8);
        unint64_t v70 = (uint64_t *)(v72 & 0xFFFFFFFFFFFFFFFCLL);
        if (v72) {
          unint64_t v70 = (uint64_t *)*v70;
        }
        uint64_t v71 = (void *)(a1 + 248);
        goto LABEL_193;
      case 0x15u:
        if (v9 != 170) {
          goto LABEL_270;
        }
        BOOL v73 = (const std::string::value_type *)(v6 - 2);
        while (1)
        {
          uint64_t v74 = (char *)(v73 + 2);
          *(void *)v163 = v73 + 2;
          unint64_t v75 = *(_DWORD **)(a1 + 112);
          if (v75 && (uint64_t v76 = *(int *)(a1 + 104), (int)v76 < *v75))
          {
            *(_DWORD *)(a1 + 104) = v76 + 1;
            int v77 = *(std::string **)&v75[2 * v76 + 2];
          }
          else
          {
            if (!*v8) {
              operator new();
            }
            void *v79 = v78;
            v79[1] = sub_3A6EDC;
            *uint64_t v78 = 0;
            v78[1] = 0;
            v78[2] = 0;
            int v77 = (std::string *)sub_188CDC8(a1 + 96, (uint64_t)v78);
            uint64_t v74 = *(char **)v163;
          }
          BOOL v73 = sub_188C244(v77, v74, (uint64_t)a3);
          *(void *)v163 = v73;
          if (!v73) {
            goto LABEL_307;
          }
          if (*(void *)a3 <= (unint64_t)v73 || *(_WORD *)v73 != 426) {
            goto LABEL_280;
          }
        }
      case 0x16u:
        if (v9 != 178) {
          goto LABEL_270;
        }
        uint64_t v80 = (char *)(v6 - 2);
        while (1)
        {
          uint64_t v81 = (unsigned __int8 *)(v80 + 2);
          *(void *)v163 = v80 + 2;
          uint64_t v82 = *(_DWORD **)(a1 + 136);
          if (v82 && (uint64_t v83 = *(int *)(a1 + 128), (int)v83 < *v82))
          {
            *(_DWORD *)(a1 + 128) = v83 + 1;
            uint64_t v84 = *(void *)&v82[2 * v83 + 2];
          }
          else
          {
            uint64_t v85 = sub_15C1CB4(*(void *)(a1 + 120));
            uint64_t v84 = sub_188CDC8(a1 + 120, v85);
            uint64_t v81 = *(unsigned __int8 **)v163;
          }
          uint64_t v80 = sub_11B3E48(a3, v84, v81);
          *(void *)v163 = v80;
          if (!v80) {
            goto LABEL_307;
          }
          if (*(void *)a3 <= (unint64_t)v80 || *(_WORD *)v80 != 434) {
            goto LABEL_280;
          }
        }
      case 0x17u:
        if (v9 != 186) {
          goto LABEL_270;
        }
        *(_DWORD *)(a1 + 40) |= 0x2000u;
        uint64_t v86 = *(void *)(a1 + 344);
        if (!v86)
        {
          uint64_t v87 = (void *)(*v160 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v160) {
            uint64_t v87 = (void *)*v87;
          }
          sub_1478B2C((uint64_t)v87);
          uint64_t v86 = v88;
          *(void *)(a1 + 344) = v88;
          uint64_t v6 = *(unsigned __int8 **)v163;
        }
        uint64_t v24 = sub_1281B58(a3, v86, v6);
        goto LABEL_279;
      case 0x18u:
        if (v9 != 194) {
          goto LABEL_270;
        }
        *(_DWORD *)(a1 + 40) |= 0x4000u;
        uint64_t v89 = *(void *)(a1 + 352);
        if (!v89)
        {
          uint64_t v90 = (void *)(*v160 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v160) {
            uint64_t v90 = (void *)*v90;
          }
          uint64_t v89 = sub_15C1CB4((uint64_t)v90);
          *(void *)(a1 + 352) = v89;
          uint64_t v6 = *(unsigned __int8 **)v163;
        }
        uint64_t v24 = (uint64_t)sub_11B3E48(a3, v89, v6);
        goto LABEL_279;
      case 0x19u:
        if (v9 != 202) {
          goto LABEL_270;
        }
        *(_DWORD *)(a1 + 40) |= 0x8000u;
        uint64_t v91 = *(void **)(a1 + 360);
        if (!v91)
        {
          uint64_t v92 = (void *)(*v160 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v160) {
            uint64_t v92 = (void *)*v92;
          }
          uint64_t v91 = sub_130645C((uint64_t)v92);
          *(void *)(a1 + 360) = v91;
          uint64_t v6 = *(unsigned __int8 **)v163;
        }
        uint64_t v24 = (uint64_t)sub_1192188(a3, (uint64_t)v91, v6);
        goto LABEL_279;
      case 0x1Au:
        if (v9 != 208) {
          goto LABEL_270;
        }
        v5 |= 0x8000000u;
        uint64_t v93 = (char *)(v6 + 1);
        uint64_t v94 = *v6;
        if (((char)*v6 & 0x80000000) == 0) {
          goto LABEL_179;
        }
        int v95 = *v93;
        uint64_t v94 = v94 + (v95 << 7) - 128;
        if (v95 < 0)
        {
          uint64_t v151 = sub_188C138((uint64_t)v6, v94);
          *(void *)v163 = v151;
          *(unsigned char *)(a1 + 424) = v152 != 0;
          if (!v151) {
            goto LABEL_307;
          }
        }
        else
        {
          uint64_t v93 = (char *)(v6 + 2);
LABEL_179:
          *(void *)v163 = v93;
          *(unsigned char *)(a1 + 424) = v94 != 0;
        }
        goto LABEL_280;
      case 0x1Bu:
        if (v9 != 216) {
          goto LABEL_270;
        }
        v5 |= 0x10000000u;
        uint64_t v96 = (char *)(v6 + 1);
        uint64_t v97 = *v6;
        if (((char)*v6 & 0x80000000) == 0) {
          goto LABEL_184;
        }
        int v98 = *v96;
        uint64_t v97 = v97 + (v98 << 7) - 128;
        if (v98 < 0)
        {
          uint64_t v153 = sub_188C138((uint64_t)v6, v97);
          *(void *)v163 = v153;
          *(unsigned char *)(a1 + 425) = v154 != 0;
          if (!v153) {
            goto LABEL_307;
          }
        }
        else
        {
          uint64_t v96 = (char *)(v6 + 2);
LABEL_184:
          *(void *)v163 = v96;
          *(unsigned char *)(a1 + 425) = v97 != 0;
        }
        goto LABEL_280;
      case 0x1Cu:
        if (v9 != 226) {
          goto LABEL_270;
        }
        *(_DWORD *)(a1 + 40) |= 4u;
        uint64_t v99 = *(void *)(a1 + 8);
        unint64_t v70 = (uint64_t *)(v99 & 0xFFFFFFFFFFFFFFFCLL);
        if (v99) {
          unint64_t v70 = (uint64_t *)*v70;
        }
        uint64_t v71 = (void *)(a1 + 256);
        goto LABEL_193;
      case 0x1Du:
        if (v9 != 234) {
          goto LABEL_270;
        }
        *(_DWORD *)(a1 + 40) |= 8u;
        uint64_t v100 = *(void *)(a1 + 8);
        unint64_t v70 = (uint64_t *)(v100 & 0xFFFFFFFFFFFFFFFCLL);
        if (v100) {
          unint64_t v70 = (uint64_t *)*v70;
        }
        uint64_t v71 = (void *)(a1 + 264);
LABEL_193:
        uint64_t v101 = (std::string *)sub_1880F84(v71, v70);
        uint64_t v24 = (uint64_t)sub_188C244(v101, *(char **)v163, (uint64_t)a3);
        goto LABEL_279;
      case 0x1Eu:
        if (v9 != 241) {
          goto LABEL_270;
        }
        v5 |= 0x4000000u;
        *(void *)(a1 + 416) = *(void *)v6;
        *(void *)v163 = v6 + 8;
        goto LABEL_280;
      case 0x1Fu:
        if (v9 != 250) {
          goto LABEL_270;
        }
        *(_DWORD *)(a1 + 40) |= 0x10000u;
        int v102 = *(void **)(a1 + 368);
        if (!v102)
        {
          unsigned int v103 = (void *)(*v160 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v160) {
            unsigned int v103 = (void *)*v103;
          }
          int v102 = sub_13DA2B8((uint64_t)v103);
          *(void *)(a1 + 368) = v102;
          uint64_t v6 = *(unsigned __int8 **)v163;
        }
        uint64_t v24 = (uint64_t)sub_13AFCE0(a3, (uint64_t)v102, v6);
        goto LABEL_279;
      case 0x20u:
        if (v9 != 2) {
          goto LABEL_270;
        }
        *(_DWORD *)(a1 + 40) |= 0x20000u;
        uint64_t v104 = *(void *)(a1 + 376);
        if (!v104)
        {
          unsigned int v105 = (void *)(*v160 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v160) {
            unsigned int v105 = (void *)*v105;
          }
          uint64_t v104 = sub_13D80BC((uint64_t)v105);
          *(void *)(a1 + 376) = v104;
          uint64_t v6 = *(unsigned __int8 **)v163;
        }
        uint64_t v24 = (uint64_t)sub_13EB538(a3, v104, v6);
        goto LABEL_279;
      case 0x21u:
        if (v9 != 8) {
          goto LABEL_270;
        }
        v5 |= 0x20000000u;
        uint64_t v106 = (char *)(v6 + 1);
        uint64_t v107 = *v6;
        if (((char)*v6 & 0x80000000) == 0) {
          goto LABEL_212;
        }
        int v108 = *v106;
        uint64_t v107 = v107 + (v108 << 7) - 128;
        if (v108 < 0)
        {
          uint64_t v155 = sub_188C138((uint64_t)v6, v107);
          *(void *)v163 = v155;
          *(unsigned char *)(a1 + 426) = v156 != 0;
          if (!v155) {
            goto LABEL_307;
          }
        }
        else
        {
          uint64_t v106 = (char *)(v6 + 2);
LABEL_212:
          *(void *)v163 = v106;
          *(unsigned char *)(a1 + 426) = v107 != 0;
        }
        goto LABEL_280;
      case 0x22u:
        if (v9 != 18) {
          goto LABEL_270;
        }
        uint64_t v109 = (char *)(v6 - 2);
        while (1)
        {
          uint64_t v110 = (unsigned __int8 *)(v109 + 2);
          *(void *)v163 = v109 + 2;
          uint64_t v111 = *(_DWORD **)(a1 + 160);
          if (v111 && (uint64_t v112 = *(int *)(a1 + 152), (int)v112 < *v111))
          {
            *(_DWORD *)(a1 + 152) = v112 + 1;
            uint64_t v113 = *(void *)&v111[2 * v112 + 2];
          }
          else
          {
            sub_1479774(*(void *)(a1 + 144));
            uint64_t v113 = sub_188CDC8(a1 + 144, v114);
            uint64_t v110 = *(unsigned __int8 **)v163;
          }
          uint64_t v109 = sub_13529E4(a3, v113, v110);
          *(void *)v163 = v109;
          if (!v109) {
            goto LABEL_307;
          }
          if (*(void *)a3 <= (unint64_t)v109 || *(_WORD *)v109 != 658) {
            goto LABEL_280;
          }
        }
      case 0x23u:
        if (v9 != 26) {
          goto LABEL_270;
        }
        *(_DWORD *)(a1 + 40) |= 0x40000u;
        uint64_t v115 = *(void *)(a1 + 384);
        if (!v115)
        {
          int v116 = (void *)(*v160 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v160) {
            int v116 = (void *)*v116;
          }
          uint64_t v115 = sub_13DAA4C((uint64_t)v116);
          *(void *)(a1 + 384) = v115;
          uint64_t v6 = *(unsigned __int8 **)v163;
        }
        uint64_t v24 = sub_13E360C(a3, v115, v6);
        goto LABEL_279;
      case 0x24u:
        if (v9 != 34) {
          goto LABEL_270;
        }
        *(_DWORD *)(a1 + 40) |= 0x80000u;
        uint64_t v117 = *(void *)(a1 + 392);
        if (!v117)
        {
          uint64_t v118 = (void *)(*v160 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v160) {
            uint64_t v118 = (void *)*v118;
          }
          uint64_t v117 = sub_15C26A4((uint64_t)v118);
          *(void *)(a1 + 392) = v117;
          uint64_t v6 = *(unsigned __int8 **)v163;
        }
        uint64_t v24 = (uint64_t)sub_1352B94(a3, v117, v6);
        goto LABEL_279;
      case 0x25u:
        if (v9 == 42)
        {
          *(_DWORD *)(a1 + 40) |= 0x100000u;
          uint64_t v119 = *(void *)(a1 + 400);
          if (!v119)
          {
            int v120 = (void *)(*v160 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v160) {
              int v120 = (void *)*v120;
            }
            uint64_t v119 = sub_13F3A0C((uint64_t)v120);
            *(void *)(a1 + 400) = v119;
            uint64_t v6 = *(unsigned __int8 **)v163;
          }
          uint64_t v24 = (uint64_t)sub_13EB5C8(a3, v119, v6);
LABEL_279:
          *(void *)v163 = v24;
          if (!v24) {
            goto LABEL_307;
          }
LABEL_280:
          if (sub_11947B8((uint64_t)a3, (char **)v163, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
LABEL_270:
        if (v9) {
          BOOL v138 = (v9 & 7) == 4;
        }
        else {
          BOOL v138 = 1;
        }
        if (!v138)
        {
          if (v9 - 8000 > 0x647)
          {
            if (*v160)
            {
              int v139 = (std::string *)((*v160 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              int v139 = (std::string *)sub_188DBD8(v160);
              uint64_t v6 = *(unsigned __int8 **)v163;
            }
            uint64_t v24 = (uint64_t)sub_1885AC0(v9, v139, (char *)v6, a3);
          }
          else
          {
            uint64_t v24 = (uint64_t)sub_18859DC((uint64_t **)(a1 + 16), v9, (char *)v6, (uint64_t)&off_2536FB0, v160, a3);
          }
          goto LABEL_279;
        }
        if (v6) {
          a3[10].i32[0] = v9 - 1;
        }
LABEL_3:
        *(_DWORD *)(a1 + 40) |= v5;
        return v6;
      default:
        switch(v9 >> 3)
        {
          case 'd':
            if (v9 != 34) {
              goto LABEL_270;
            }
            uint64_t v16 = v6 - 2;
            while (1)
            {
              uint64_t v17 = v16 + 2;
              *(void *)v163 = v16 + 2;
              unsigned int v18 = *(_DWORD **)(a1 + 184);
              if (v18 && (uint64_t v19 = *(int *)(a1 + 176), (int)v19 < *v18))
              {
                *(_DWORD *)(a1 + 176) = v19 + 1;
                uint64_t v20 = *(void *)&v18[2 * v19 + 2];
              }
              else
              {
                uint64_t v21 = sub_15C2114(*(void *)(a1 + 168));
                uint64_t v20 = sub_188CDC8(a1 + 168, v21);
                uint64_t v17 = *(unsigned __int8 **)v163;
              }
              uint64_t v16 = (unsigned __int8 *)sub_11A058C(a3, v20, v17);
              *(void *)v163 = v16;
              if (!v16) {
                goto LABEL_307;
              }
              if (*(void *)a3 <= (unint64_t)v16 || *(_WORD *)v16 != 1698) {
                goto LABEL_280;
              }
            }
          case 'e':
            if (v9 != 42) {
              goto LABEL_270;
            }
            BOOL v121 = (const std::string::value_type *)(v6 - 2);
            while (1)
            {
              uint64_t v122 = (char *)(v121 + 2);
              *(void *)v163 = v121 + 2;
              uint64_t v123 = *(_DWORD **)(a1 + 208);
              if (v123 && (uint64_t v124 = *(int *)(a1 + 200), (int)v124 < *v123))
              {
                *(_DWORD *)(a1 + 200) = v124 + 1;
                uint64_t v125 = *(std::string **)&v123[2 * v124 + 2];
              }
              else
              {
                if (!*v161) {
                  operator new();
                }
                void *v127 = v126;
                v127[1] = sub_3A6EDC;
                *int v126 = 0;
                v126[1] = 0;
                v126[2] = 0;
                uint64_t v125 = (std::string *)sub_188CDC8((uint64_t)v161, (uint64_t)v126);
                uint64_t v122 = *(char **)v163;
              }
              BOOL v121 = sub_188C244(v125, v122, (uint64_t)a3);
              *(void *)v163 = v121;
              if (!v121) {
                goto LABEL_307;
              }
              if (*(void *)a3 <= (unint64_t)v121 || *(_WORD *)v121 != 1706) {
                goto LABEL_280;
              }
            }
          case 'f':
            if (v9 != 50) {
              goto LABEL_270;
            }
            uint64_t v128 = (const std::string::value_type *)(v6 - 2);
            while (1)
            {
              int v129 = (char *)(v128 + 2);
              *(void *)v163 = v128 + 2;
              uint64_t v130 = *(_DWORD **)(a1 + 232);
              if (v130 && (uint64_t v131 = *(int *)(a1 + 224), (int)v131 < *v130))
              {
                *(_DWORD *)(a1 + 224) = v131 + 1;
                unint64_t v132 = *(std::string **)&v130[2 * v131 + 2];
              }
              else
              {
                if (!*v162) {
                  operator new();
                }
                *int v134 = v133;
                v134[1] = sub_3A6EDC;
                void *v133 = 0;
                v133[1] = 0;
                v133[2] = 0;
                unint64_t v132 = (std::string *)sub_188CDC8((uint64_t)v162, (uint64_t)v133);
                int v129 = *(char **)v163;
              }
              uint64_t v128 = sub_188C244(v132, v129, (uint64_t)a3);
              *(void *)v163 = v128;
              if (!v128) {
                goto LABEL_307;
              }
              if (*(void *)a3 <= (unint64_t)v128 || *(_WORD *)v128 != 1714) {
                goto LABEL_280;
              }
            }
          case 'g':
            if (v9 != 56) {
              goto LABEL_270;
            }
            v5 |= 0x40000000u;
            unsigned int v135 = (char *)(v6 + 1);
            int v136 = *v6;
            if (((char)*v6 & 0x80000000) == 0) {
              goto LABEL_269;
            }
            int v137 = *v135;
            int v136 = v136 + (v137 << 7) - 128;
            if (v137 < 0)
            {
              uint64_t v157 = sub_188C0D0((uint64_t)v6, v136);
              *(void *)v163 = v157;
              *(_DWORD *)(a1 + 428) = v158;
              if (!v157)
              {
LABEL_307:
                uint64_t v6 = 0;
                goto LABEL_3;
              }
            }
            else
            {
              unsigned int v135 = (char *)(v6 + 2);
LABEL_269:
              *(void *)v163 = v135;
              *(_DWORD *)(a1 + 428) = v136;
            }
            break;
          default:
            goto LABEL_270;
        }
        goto LABEL_280;
    }
  }
}

char *sub_13EB538(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1392E98(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_13EB5C8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_13EE358(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_13EB658(uint64_t a1, char *a2, unint64_t *a3)
{
  uint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if ((v6 & 0x200000) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unint64_t v7 = *(int *)(a1 + 408);
    char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 272);
    char *v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 20);
    v4[1] = v11;
    if (v11 > 0x7F) {
      uint64_t v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      uint64_t v12 = v4 + 2;
    }
    uint64_t v4 = (char *)sub_13ADDAC(v10, (unint64_t)v12, a3);
  }
  if ((v6 & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v13 = *(void *)(a1 + 280);
    char *v4 = 26;
    unsigned int v14 = *(_DWORD *)(v13 + 44);
    v4[1] = v14;
    if (v14 > 0x7F) {
      int v15 = sub_188A9CC(v14, v4 + 1);
    }
    else {
      int v15 = v4 + 2;
    }
    uint64_t v4 = sub_146FD9C(v13, v15, a3);
  }
  int v16 = *(_DWORD *)(a1 + 56);
  if (v16)
  {
    for (int i = 0; i != v16; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v18 = *(void *)(*(void *)(a1 + 64) + 8 * i + 8);
      char *v4 = 34;
      unsigned int v19 = *(_DWORD *)(v18 + 44);
      v4[1] = v19;
      if (v19 > 0x7F) {
        uint64_t v20 = sub_188A9CC(v19, v4 + 1);
      }
      else {
        uint64_t v20 = v4 + 2;
      }
      uint64_t v4 = sub_146FD9C(v18, v20, a3);
    }
  }
  if ((v6 & 0x400000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v21 = *(unsigned char *)(a1 + 412);
    char *v4 = 40;
    v4[1] = v21;
    v4 += 2;
    if ((v6 & 0x800000) == 0)
    {
LABEL_32:
      if ((v6 & 0x1000000) == 0) {
        goto LABEL_33;
      }
      goto LABEL_42;
    }
  }
  else if ((v6 & 0x800000) == 0)
  {
    goto LABEL_32;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v22 = *(unsigned char *)(a1 + 413);
  char *v4 = 48;
  v4[1] = v22;
  v4 += 2;
  if ((v6 & 0x1000000) == 0)
  {
LABEL_33:
    if ((v6 & 0x40) == 0) {
      goto LABEL_34;
    }
    goto LABEL_45;
  }
LABEL_42:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v23 = *(unsigned char *)(a1 + 414);
  char *v4 = 56;
  v4[1] = v23;
  v4 += 2;
  if ((v6 & 0x40) == 0)
  {
LABEL_34:
    if ((v6 & 0x80000000) == 0) {
      goto LABEL_57;
    }
    goto LABEL_51;
  }
LABEL_45:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v24 = *(void *)(a1 + 288);
  char *v4 = 66;
  unsigned int v25 = *(_DWORD *)(v24 + 20);
  v4[1] = v25;
  if (v25 > 0x7F) {
    unint64_t v26 = sub_188A9CC(v25, v4 + 1);
  }
  else {
    unint64_t v26 = v4 + 2;
  }
  uint64_t v4 = sub_15BA180(v24, (unint64_t)v26, a3);
  if (v6 < 0)
  {
LABEL_51:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v27 = *(_DWORD *)(a1 + 432);
    char *v4 = 72;
    v4[1] = v27;
    if (v27 > 0x7F)
    {
      v4[1] = v27 | 0x80;
      unsigned int v28 = v27 >> 7;
      v4[2] = v27 >> 7;
      v4 += 3;
      if (v27 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v29 = v28 >> 14;
          v28 >>= 7;
          *v4++ = v28;
        }
        while (v29);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_57:
  if ((v6 & 0x80) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v30 = *(void *)(a1 + 296);
    char *v4 = 82;
    unsigned int v31 = *(_DWORD *)(v30 + 64);
    v4[1] = v31;
    if (v31 > 0x7F) {
      uint64_t v32 = sub_188A9CC(v31, v4 + 1);
    }
    else {
      uint64_t v32 = v4 + 2;
    }
    uint64_t v4 = sub_14778CC(v30, v32, a3);
  }
  if ((v6 & 0x100) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v33 = *(void *)(a1 + 304);
    char *v4 = 90;
    unsigned int v34 = *(_DWORD *)(v33 + 20);
    v4[1] = v34;
    if (v34 > 0x7F) {
      int v35 = sub_188A9CC(v34, v4 + 1);
    }
    else {
      int v35 = v4 + 2;
    }
    uint64_t v4 = sub_1474538(v33, (unint64_t)v35, a3);
  }
  int v36 = *(_DWORD *)(a1 + 80);
  if (v36)
  {
    for (int j = 0; j != v36; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v38 = *(void *)(*(void *)(a1 + 88) + 8 * j + 8);
      char *v4 = 98;
      unsigned int v39 = *(_DWORD *)(v38 + 20);
      v4[1] = v39;
      if (v39 > 0x7F) {
        uint64_t v40 = sub_188A9CC(v39, v4 + 1);
      }
      else {
        uint64_t v40 = v4 + 2;
      }
      uint64_t v4 = sub_1474538(v38, (unint64_t)v40, a3);
    }
  }
  if ((v6 & 0x200) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v49 = *(void *)(a1 + 312);
    char *v4 = 106;
    unsigned int v50 = *(_DWORD *)(v49 + 20);
    v4[1] = v50;
    if (v50 > 0x7F) {
      uint64_t v51 = sub_188A9CC(v50, v4 + 1);
    }
    else {
      uint64_t v51 = v4 + 2;
    }
    uint64_t v4 = sub_13C736C(v49, (unint64_t)v51, a3);
    if ((v6 & 0x400) == 0)
    {
LABEL_81:
      if ((v6 & 0x800) == 0) {
        goto LABEL_82;
      }
      goto LABEL_132;
    }
  }
  else if ((v6 & 0x400) == 0)
  {
    goto LABEL_81;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v55 = *(void *)(a1 + 320);
  char *v4 = 114;
  unsigned int v56 = *(_DWORD *)(v55 + 44);
  v4[1] = v56;
  if (v56 > 0x7F) {
    uint64_t v57 = sub_188A9CC(v56, v4 + 1);
  }
  else {
    uint64_t v57 = v4 + 2;
  }
  uint64_t v4 = sub_13CA708(v55, v57, a3);
  if ((v6 & 0x800) == 0)
  {
LABEL_82:
    if ((v6 & 0x2000000) == 0) {
      goto LABEL_83;
    }
    goto LABEL_144;
  }
LABEL_132:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v61 = *(void *)(a1 + 328);
  char *v4 = 122;
  unsigned int v62 = *(_DWORD *)(v61 + 20);
  v4[1] = v62;
  if (v62 > 0x7F) {
    unint64_t v63 = sub_188A9CC(v62, v4 + 1);
  }
  else {
    unint64_t v63 = v4 + 2;
  }
  uint64_t v4 = sub_13CB748(v61, (unint64_t)v63, a3);
  if ((v6 & 0x2000000) == 0)
  {
LABEL_83:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_84;
    }
    goto LABEL_147;
  }
LABEL_144:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v67 = *(unsigned char *)(a1 + 415);
  *(_WORD *)uint64_t v4 = 384;
  v4[2] = v67;
  v4 += 3;
  if ((v6 & 0x1000) == 0)
  {
LABEL_84:
    if ((v6 & 1) == 0) {
      goto LABEL_85;
    }
    goto LABEL_170;
  }
LABEL_147:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v68 = *(void *)(a1 + 336);
  *(_WORD *)uint64_t v4 = 402;
  unsigned int v69 = *(_DWORD *)(v68 + 20);
  v4[2] = v69;
  if (v69 > 0x7F) {
    unint64_t v70 = sub_188A9CC(v69, v4 + 2);
  }
  else {
    unint64_t v70 = v4 + 3;
  }
  uint64_t v4 = sub_13B1DC8(v68, (unint64_t)v70, a3);
  if ((v6 & 1) == 0)
  {
LABEL_85:
    if ((v6 & 2) == 0) {
      goto LABEL_87;
    }
    goto LABEL_86;
  }
LABEL_170:
  uint64_t v4 = sub_117A0AC(a3, 19, (const void **)(*(void *)(a1 + 240) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 2) != 0) {
LABEL_86:
  }
    uint64_t v4 = sub_117A0AC(a3, 20, (const void **)(*(void *)(a1 + 248) & 0xFFFFFFFFFFFFFFFELL), v4);
LABEL_87:
  uint64_t v41 = *(unsigned int *)(a1 + 104);
  if ((int)v41 >= 1)
  {
    uint64_t v42 = 0;
    uint64_t v43 = 8 * v41;
    do
    {
      uint64_t v4 = (char *)sub_125CE58(a3, 21, *(void *)(*(void *)(a1 + 112) + v42 + 8), v4);
      v42 += 8;
    }
    while (v43 != v42);
  }
  int v44 = *(_DWORD *)(a1 + 128);
  if (v44)
  {
    for (int k = 0; k != v44; ++k)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v46 = *(void *)(*(void *)(a1 + 136) + 8 * k + 8);
      *(_WORD *)uint64_t v4 = 434;
      unsigned int v47 = *(_DWORD *)(v46 + 44);
      v4[2] = v47;
      if (v47 > 0x7F) {
        uint64_t v48 = sub_188A9CC(v47, v4 + 2);
      }
      else {
        uint64_t v48 = v4 + 3;
      }
      uint64_t v4 = sub_15B43E4(v46, v48, a3);
    }
  }
  if ((v6 & 0x2000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v52 = *(void *)(a1 + 344);
    *(_WORD *)uint64_t v4 = 442;
    unsigned int v53 = *(_DWORD *)(v52 + 24);
    v4[2] = v53;
    if (v53 > 0x7F) {
      uint64_t v54 = sub_188A9CC(v53, v4 + 2);
    }
    else {
      uint64_t v54 = v4 + 3;
    }
    uint64_t v4 = sub_145CBCC(v52, v54, a3);
    if ((v6 & 0x4000) == 0)
    {
LABEL_100:
      if ((v6 & 0x8000) == 0) {
        goto LABEL_101;
      }
      goto LABEL_138;
    }
  }
  else if ((v6 & 0x4000) == 0)
  {
    goto LABEL_100;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v58 = *(void *)(a1 + 352);
  *(_WORD *)uint64_t v4 = 450;
  unsigned int v59 = *(_DWORD *)(v58 + 44);
  v4[2] = v59;
  if (v59 > 0x7F) {
    uint64_t v60 = sub_188A9CC(v59, v4 + 2);
  }
  else {
    uint64_t v60 = v4 + 3;
  }
  uint64_t v4 = sub_15B43E4(v58, v60, a3);
  if ((v6 & 0x8000) == 0)
  {
LABEL_101:
    if ((v6 & 0x8000000) == 0) {
      goto LABEL_102;
    }
    goto LABEL_153;
  }
LABEL_138:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v64 = *(void *)(a1 + 360);
  *(_WORD *)uint64_t v4 = 458;
  unsigned int v65 = *(_DWORD *)(v64 + 44);
  v4[2] = v65;
  if (v65 > 0x7F) {
    int v66 = sub_188A9CC(v65, v4 + 2);
  }
  else {
    int v66 = v4 + 3;
  }
  uint64_t v4 = sub_1305C9C(v64, v66, a3);
  if ((v6 & 0x8000000) == 0)
  {
LABEL_102:
    if ((v6 & 0x10000000) == 0) {
      goto LABEL_103;
    }
    goto LABEL_156;
  }
LABEL_153:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v71 = *(unsigned char *)(a1 + 424);
  *(_WORD *)uint64_t v4 = 464;
  v4[2] = v71;
  v4 += 3;
  if ((v6 & 0x10000000) == 0)
  {
LABEL_103:
    if ((v6 & 4) == 0) {
      goto LABEL_104;
    }
    goto LABEL_159;
  }
LABEL_156:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v72 = *(unsigned char *)(a1 + 425);
  *(_WORD *)uint64_t v4 = 472;
  v4[2] = v72;
  v4 += 3;
  if ((v6 & 4) == 0)
  {
LABEL_104:
    if ((v6 & 8) == 0) {
      goto LABEL_105;
    }
    goto LABEL_160;
  }
LABEL_159:
  uint64_t v4 = sub_117A0AC(a3, 28, (const void **)(*(void *)(a1 + 256) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 8) == 0)
  {
LABEL_105:
    if ((v6 & 0x4000000) == 0) {
      goto LABEL_106;
    }
    goto LABEL_161;
  }
LABEL_160:
  uint64_t v4 = sub_117A0AC(a3, 29, (const void **)(*(void *)(a1 + 264) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x4000000) == 0)
  {
LABEL_106:
    if ((v6 & 0x10000) == 0) {
      goto LABEL_107;
    }
    goto LABEL_164;
  }
LABEL_161:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v73 = *(void *)(a1 + 416);
  *(_WORD *)uint64_t v4 = 497;
  *(void *)(v4 + 2) = v73;
  v4 += 10;
  if ((v6 & 0x10000) == 0)
  {
LABEL_107:
    if ((v6 & 0x20000) == 0) {
      goto LABEL_108;
    }
    goto LABEL_174;
  }
LABEL_164:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v74 = *(void *)(a1 + 368);
  *(_WORD *)uint64_t v4 = 506;
  unsigned int v75 = *(_DWORD *)(v74 + 20);
  v4[2] = v75;
  if (v75 > 0x7F) {
    uint64_t v76 = sub_188A9CC(v75, v4 + 2);
  }
  else {
    uint64_t v76 = v4 + 3;
  }
  uint64_t v4 = sub_13C9554(v74, (unint64_t)v76, a3);
  if ((v6 & 0x20000) == 0)
  {
LABEL_108:
    if ((v6 & 0x20000000) == 0) {
      goto LABEL_183;
    }
    goto LABEL_180;
  }
LABEL_174:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v77 = *(void *)(a1 + 376);
  *(_WORD *)uint64_t v4 = 642;
  unsigned int v78 = *(_DWORD *)(v77 + 20);
  v4[2] = v78;
  if (v78 > 0x7F) {
    unint64_t v79 = sub_188A9CC(v78, v4 + 2);
  }
  else {
    unint64_t v79 = v4 + 3;
  }
  uint64_t v4 = sub_13933B0(v77, (unint64_t)v79, a3);
  if ((v6 & 0x20000000) != 0)
  {
LABEL_180:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v80 = *(unsigned char *)(a1 + 426);
    *(_WORD *)uint64_t v4 = 648;
    v4[2] = v80;
    v4 += 3;
  }
LABEL_183:
  int v81 = *(_DWORD *)(a1 + 152);
  if (v81)
  {
    for (int m = 0; m != v81; ++m)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v83 = *(void *)(*(void *)(a1 + 160) + 8 * m + 8);
      *(_WORD *)uint64_t v4 = 658;
      unsigned int v84 = *(_DWORD *)(v83 + 20);
      v4[2] = v84;
      if (v84 > 0x7F) {
        uint64_t v85 = sub_188A9CC(v84, v4 + 2);
      }
      else {
        uint64_t v85 = v4 + 3;
      }
      uint64_t v4 = sub_1474538(v83, (unint64_t)v85, a3);
    }
  }
  if ((v6 & 0x40000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v86 = *(void *)(a1 + 384);
    *(_WORD *)uint64_t v4 = 666;
    unsigned int v87 = *(_DWORD *)(v86 + 20);
    v4[2] = v87;
    if (v87 > 0x7F) {
      uint64_t v88 = sub_188A9CC(v87, v4 + 2);
    }
    else {
      uint64_t v88 = v4 + 3;
    }
    uint64_t v4 = sub_13D1AC4(v86, (unint64_t)v88, a3);
    if ((v6 & 0x80000) == 0)
    {
LABEL_193:
      if ((v6 & 0x100000) == 0) {
        goto LABEL_213;
      }
      goto LABEL_207;
    }
  }
  else if ((v6 & 0x80000) == 0)
  {
    goto LABEL_193;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v89 = *(void *)(a1 + 392);
  *(_WORD *)uint64_t v4 = 674;
  unsigned int v90 = *(_DWORD *)(v89 + 20);
  v4[2] = v90;
  if (v90 > 0x7F) {
    uint64_t v91 = sub_188A9CC(v90, v4 + 2);
  }
  else {
    uint64_t v91 = v4 + 3;
  }
  uint64_t v4 = sub_15C1084(v89, (unint64_t)v91, a3);
  if ((v6 & 0x100000) != 0)
  {
LABEL_207:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v92 = *(void *)(a1 + 400);
    *(_WORD *)uint64_t v4 = 682;
    unsigned int v93 = *(_DWORD *)(v92 + 20);
    v4[2] = v93;
    if (v93 > 0x7F) {
      uint64_t v94 = sub_188A9CC(v93, v4 + 2);
    }
    else {
      uint64_t v94 = v4 + 3;
    }
    uint64_t v4 = sub_13EE500(v92, (unint64_t)v94, a3);
  }
LABEL_213:
  int v95 = *(_DWORD *)(a1 + 176);
  if (v95)
  {
    for (int n = 0; n != v95; ++n)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v97 = *(void *)(*(void *)(a1 + 184) + 8 * n + 8);
      *(_WORD *)uint64_t v4 = 1698;
      unsigned int v98 = *(_DWORD *)(v97 + 20);
      v4[2] = v98;
      if (v98 > 0x7F) {
        uint64_t v99 = sub_188A9CC(v98, v4 + 2);
      }
      else {
        uint64_t v99 = v4 + 3;
      }
      uint64_t v4 = sub_15BAD4C(v97, (unint64_t)v99, a3);
    }
  }
  uint64_t v100 = *(unsigned int *)(a1 + 200);
  if ((int)v100 >= 1)
  {
    uint64_t v101 = 0;
    uint64_t v102 = 8 * v100;
    do
    {
      uint64_t v4 = (char *)sub_125CE58(a3, 101, *(void *)(*(void *)(a1 + 208) + v101 + 8), v4);
      v101 += 8;
    }
    while (v102 != v101);
  }
  uint64_t v103 = *(unsigned int *)(a1 + 224);
  if ((int)v103 >= 1)
  {
    uint64_t v104 = 0;
    uint64_t v105 = 8 * v103;
    do
    {
      uint64_t v106 = *(void **)(*(void *)(a1 + 232) + v104 + 8);
      if (*((char *)v106 + 23) < 0)
      {
        int64_t v107 = v106[1];
        if (v107 > 127) {
          goto LABEL_235;
        }
      }
      else
      {
        int64_t v107 = *((unsigned __int8 *)v106 + 23);
      }
      if ((uint64_t)(*a3 - (void)v4 + 13) >= v107)
      {
        *(_WORD *)uint64_t v4 = 1714;
        v4[2] = v107;
        if (*((char *)v106 + 23) < 0) {
          uint64_t v106 = (void *)*v106;
        }
        int v108 = v4 + 3;
        memcpy(v108, v106, v107);
        uint64_t v4 = &v108[v107];
        goto LABEL_233;
      }
LABEL_235:
      uint64_t v4 = (char *)sub_188A868(a3, 102, (uint64_t)v106, v4);
LABEL_233:
      v104 += 8;
    }
    while (v105 != v104);
  }
  if ((v6 & 0x40000000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v109 = *(_DWORD *)(a1 + 428);
    *(_WORD *)uint64_t v4 = 1720;
    v4[2] = v109;
    if (v109 > 0x7F)
    {
      v4[2] = v109 | 0x80;
      unsigned int v110 = v109 >> 7;
      v4[3] = v109 >> 7;
      v4 += 4;
      if (v109 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v111 = v110 >> 14;
          v110 >>= 7;
          *v4++ = v110;
        }
        while (v111);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if (*(_WORD *)(a1 + 26)) {
    uint64_t v4 = sub_1886844(a1 + 16, 1000, 1201, v4, a3);
  }
  uint64_t v112 = *(void *)(a1 + 8);
  if ((v112 & 1) == 0) {
    return v4;
  }
  unint64_t v114 = v112 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v114 + 31) < 0)
  {
    uint64_t v115 = *(void **)(v114 + 8);
    uint64_t v116 = *(void *)(v114 + 16);
  }
  else
  {
    uint64_t v115 = (void *)(v114 + 8);
    LODWORD(v116) = *(unsigned __int8 *)(v114 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v116)
  {
    uint64_t v117 = (int)v116;
    memcpy(v4, v115, (int)v116);
    v4 += v117;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v115, v116, v4);
}

uint64_t sub_13EC5BC(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(int *)(a1 + 56);
  uint64_t v4 = v2 + v3;
  uint64_t v5 = *(void *)(a1 + 64);
  if (v5) {
    int v6 = (uint64_t *)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = sub_146FFD0(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  uint64_t v10 = *(int *)(a1 + 80);
  uint64_t v11 = v4 + v10;
  uint64_t v12 = *(void *)(a1 + 88);
  if (v12) {
    uint64_t v13 = (uint64_t *)(v12 + 8);
  }
  else {
    uint64_t v13 = 0;
  }
  if (v10)
  {
    uint64_t v14 = 8 * v10;
    do
    {
      uint64_t v15 = *v13++;
      uint64_t v16 = sub_1474A68(v15);
      v11 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6);
      v14 -= 8;
    }
    while (v14);
  }
  uint64_t v17 = *(unsigned int *)(a1 + 104);
  uint64_t v18 = v11 + 2 * v17;
  if ((int)v17 >= 1)
  {
    unsigned int v19 = (uint64_t *)(*(void *)(a1 + 112) + 8);
    do
    {
      uint64_t v20 = *v19++;
      uint64_t v21 = *(unsigned __int8 *)(v20 + 23);
      uint64_t v22 = *(void *)(v20 + 8);
      if ((v21 & 0x80u) == 0) {
        uint64_t v22 = v21;
      }
      v18 += v22 + ((9 * (__clz(v22 | 1) ^ 0x1F) + 73) >> 6);
      --v17;
    }
    while (v17);
  }
  uint64_t v23 = *(int *)(a1 + 128);
  uint64_t v24 = v18 + 2 * v23;
  uint64_t v25 = *(void *)(a1 + 136);
  if (v25) {
    unint64_t v26 = (uint64_t *)(v25 + 8);
  }
  else {
    unint64_t v26 = 0;
  }
  if (v23)
  {
    uint64_t v27 = 8 * v23;
    do
    {
      uint64_t v28 = *v26++;
      uint64_t v29 = sub_15B4924(v28);
      v24 += v29 + ((9 * (__clz(v29 | 1) ^ 0x1F) + 73) >> 6);
      v27 -= 8;
    }
    while (v27);
  }
  uint64_t v30 = *(int *)(a1 + 152);
  uint64_t v31 = v24 + 2 * v30;
  uint64_t v32 = *(void *)(a1 + 160);
  if (v32) {
    uint64_t v33 = (uint64_t *)(v32 + 8);
  }
  else {
    uint64_t v33 = 0;
  }
  if (v30)
  {
    uint64_t v34 = 8 * v30;
    do
    {
      uint64_t v35 = *v33++;
      uint64_t v36 = sub_1474A68(v35);
      v31 += v36 + ((9 * (__clz(v36 | 1) ^ 0x1F) + 73) >> 6);
      v34 -= 8;
    }
    while (v34);
  }
  uint64_t v37 = *(int *)(a1 + 176);
  uint64_t v38 = v31 + 2 * v37;
  uint64_t v39 = *(void *)(a1 + 184);
  if (v39) {
    uint64_t v40 = (uint64_t *)(v39 + 8);
  }
  else {
    uint64_t v40 = 0;
  }
  if (v37)
  {
    uint64_t v41 = 8 * v37;
    do
    {
      uint64_t v42 = *v40++;
      uint64_t v43 = sub_15BAE94(v42);
      v38 += v43 + ((9 * (__clz(v43 | 1) ^ 0x1F) + 73) >> 6);
      v41 -= 8;
    }
    while (v41);
  }
  uint64_t v44 = *(unsigned int *)(a1 + 200);
  uint64_t v45 = v38 + 2 * v44;
  if ((int)v44 >= 1)
  {
    uint64_t v46 = (uint64_t *)(*(void *)(a1 + 208) + 8);
    do
    {
      uint64_t v47 = *v46++;
      uint64_t v48 = *(unsigned __int8 *)(v47 + 23);
      uint64_t v49 = *(void *)(v47 + 8);
      if ((v48 & 0x80u) == 0) {
        uint64_t v49 = v48;
      }
      v45 += v49 + ((9 * (__clz(v49 | 1) ^ 0x1F) + 73) >> 6);
      --v44;
    }
    while (v44);
  }
  uint64_t v50 = *(unsigned int *)(a1 + 224);
  uint64_t v51 = v45 + 2 * v50;
  if ((int)v50 >= 1)
  {
    uint64_t v52 = (uint64_t *)(*(void *)(a1 + 232) + 8);
    do
    {
      uint64_t v53 = *v52++;
      uint64_t v54 = *(unsigned __int8 *)(v53 + 23);
      uint64_t v55 = *(void *)(v53 + 8);
      if ((v54 & 0x80u) == 0) {
        uint64_t v55 = v54;
      }
      v51 += v55 + ((9 * (__clz(v55 | 1) ^ 0x1F) + 73) >> 6);
      --v50;
    }
    while (v50);
  }
  unsigned int v56 = *(_DWORD *)(a1 + 40);
  if (!(_BYTE)v56) {
    goto LABEL_56;
  }
  if (v56)
  {
    unint64_t v66 = *(void *)(a1 + 240) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v67 = *(unsigned __int8 *)(v66 + 23);
    uint64_t v68 = *(void *)(v66 + 8);
    if ((v67 & 0x80u) == 0) {
      uint64_t v68 = v67;
    }
    v51 += v68 + ((9 * (__clz(v68 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v56 & 2) == 0)
    {
LABEL_49:
      if ((v56 & 4) == 0) {
        goto LABEL_50;
      }
      goto LABEL_108;
    }
  }
  else if ((v56 & 2) == 0)
  {
    goto LABEL_49;
  }
  unint64_t v69 = *(void *)(a1 + 248) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v70 = *(unsigned __int8 *)(v69 + 23);
  uint64_t v71 = *(void *)(v69 + 8);
  if ((v70 & 0x80u) == 0) {
    uint64_t v71 = v70;
  }
  v51 += v71 + ((9 * (__clz(v71 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v56 & 4) == 0)
  {
LABEL_50:
    if ((v56 & 8) == 0) {
      goto LABEL_51;
    }
    goto LABEL_111;
  }
LABEL_108:
  unint64_t v72 = *(void *)(a1 + 256) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v73 = *(unsigned __int8 *)(v72 + 23);
  uint64_t v74 = *(void *)(v72 + 8);
  if ((v73 & 0x80u) == 0) {
    uint64_t v74 = v73;
  }
  v51 += v74 + ((9 * (__clz(v74 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v56 & 8) == 0)
  {
LABEL_51:
    if ((v56 & 0x10) == 0) {
      goto LABEL_52;
    }
    goto LABEL_114;
  }
LABEL_111:
  unint64_t v75 = *(void *)(a1 + 264) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v76 = *(unsigned __int8 *)(v75 + 23);
  uint64_t v77 = *(void *)(v75 + 8);
  if ((v76 & 0x80u) == 0) {
    uint64_t v77 = v76;
  }
  v51 += v77 + ((9 * (__clz(v77 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v56 & 0x10) == 0)
  {
LABEL_52:
    if ((v56 & 0x20) == 0) {
      goto LABEL_53;
    }
LABEL_115:
    uint64_t v79 = sub_146FFD0(*(void *)(a1 + 280));
    v51 += v79 + ((9 * (__clz(v79 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v56 & 0x40) == 0)
    {
LABEL_54:
      if ((v56 & 0x80) == 0) {
        goto LABEL_56;
      }
      goto LABEL_55;
    }
    goto LABEL_116;
  }
LABEL_114:
  uint64_t v78 = sub_13ADF44(*(void *)(a1 + 272));
  v51 += v78 + ((9 * (__clz(v78 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v56 & 0x20) != 0) {
    goto LABEL_115;
  }
LABEL_53:
  if ((v56 & 0x40) == 0) {
    goto LABEL_54;
  }
LABEL_116:
  unint64_t v80 = sub_15BA324(*(void *)(a1 + 288));
  v51 += v80 + ((9 * (__clz(v80 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v56 & 0x80) != 0)
  {
LABEL_55:
    uint64_t v57 = sub_1477ADC(*(void *)(a1 + 296));
    v51 += v57 + ((9 * (__clz(v57 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_56:
  if ((v56 & 0xFF00) == 0) {
    goto LABEL_66;
  }
  if ((v56 & 0x100) != 0)
  {
    uint64_t v81 = sub_1474A68(*(void *)(a1 + 304));
    v51 += v81 + ((9 * (__clz(v81 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v56 & 0x200) == 0)
    {
LABEL_59:
      if ((v56 & 0x400) == 0) {
        goto LABEL_60;
      }
      goto LABEL_120;
    }
  }
  else if ((v56 & 0x200) == 0)
  {
    goto LABEL_59;
  }
  uint64_t v82 = sub_13C75E4(*(void *)(a1 + 312));
  v51 += v82 + ((9 * (__clz(v82 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v56 & 0x400) == 0)
  {
LABEL_60:
    if ((v56 & 0x800) == 0) {
      goto LABEL_61;
    }
    goto LABEL_121;
  }
LABEL_120:
  uint64_t v83 = sub_13CAA14(*(void *)(a1 + 320));
  v51 += v83 + ((9 * (__clz(v83 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v56 & 0x800) == 0)
  {
LABEL_61:
    if ((v56 & 0x1000) == 0) {
      goto LABEL_62;
    }
    goto LABEL_122;
  }
LABEL_121:
  uint64_t v84 = sub_13CB944(*(void *)(a1 + 328));
  v51 += v84 + ((9 * (__clz(v84 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v56 & 0x1000) == 0)
  {
LABEL_62:
    if ((v56 & 0x2000) == 0) {
      goto LABEL_63;
    }
    goto LABEL_123;
  }
LABEL_122:
  uint64_t v85 = sub_13B2018(*(void *)(a1 + 336));
  v51 += v85 + ((9 * (__clz(v85 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v56 & 0x2000) == 0)
  {
LABEL_63:
    if ((v56 & 0x4000) == 0) {
      goto LABEL_64;
    }
    goto LABEL_124;
  }
LABEL_123:
  uint64_t v86 = sub_145DF38(*(void *)(a1 + 344));
  v51 += v86 + ((9 * (__clz(v86 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v56 & 0x4000) == 0)
  {
LABEL_64:
    if ((v56 & 0x8000) == 0) {
      goto LABEL_66;
    }
    goto LABEL_65;
  }
LABEL_124:
  uint64_t v87 = sub_15B4924(*(void *)(a1 + 352));
  v51 += v87 + ((9 * (__clz(v87 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v56 & 0x8000) != 0)
  {
LABEL_65:
    uint64_t v58 = sub_1305E64(*(void *)(a1 + 360));
    v51 += v58 + ((9 * (__clz(v58 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
LABEL_66:
  if ((v56 & 0xFF0000) == 0) {
    goto LABEL_82;
  }
  if ((v56 & 0x10000) != 0)
  {
    uint64_t v88 = sub_13C96D4(*(void *)(a1 + 368));
    v51 += v88 + ((9 * (__clz(v88 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v56 & 0x20000) == 0)
    {
LABEL_69:
      if ((v56 & 0x40000) == 0) {
        goto LABEL_70;
      }
      goto LABEL_128;
    }
  }
  else if ((v56 & 0x20000) == 0)
  {
    goto LABEL_69;
  }
  uint64_t v89 = sub_1393764(*(void *)(a1 + 376));
  v51 += v89 + ((9 * (__clz(v89 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v56 & 0x40000) == 0)
  {
LABEL_70:
    if ((v56 & 0x80000) == 0) {
      goto LABEL_71;
    }
    goto LABEL_129;
  }
LABEL_128:
  uint64_t v90 = sub_13D1F68(*(void *)(a1 + 384));
  v51 += v90 + ((9 * (__clz(v90 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v56 & 0x80000) == 0)
  {
LABEL_71:
    if ((v56 & 0x100000) == 0) {
      goto LABEL_72;
    }
LABEL_130:
    uint64_t v92 = sub_13EE628(*(void *)(a1 + 400));
    v51 += v92 + ((9 * (__clz(v92 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v56 & 0x200000) != 0) {
      goto LABEL_73;
    }
    goto LABEL_77;
  }
LABEL_129:
  uint64_t v91 = sub_15C1220(*(void *)(a1 + 392));
  v51 += v91 + ((9 * (__clz(v91 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v56 & 0x100000) != 0) {
    goto LABEL_130;
  }
LABEL_72:
  if ((v56 & 0x200000) != 0)
  {
LABEL_73:
    int v59 = *(_DWORD *)(a1 + 408);
    uint64_t v60 = ((9 * (__clz(v59 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if (v59 >= 0) {
      uint64_t v61 = v60;
    }
    else {
      uint64_t v61 = 11;
    }
    v51 += v61;
  }
LABEL_77:
  uint64_t v62 = v51 + 2;
  if ((v56 & 0x400000) == 0) {
    uint64_t v62 = v51;
  }
  if ((v56 & 0x800000) != 0) {
    uint64_t v51 = v62 + 2;
  }
  else {
    uint64_t v51 = v62;
  }
LABEL_82:
  if (HIBYTE(v56))
  {
    uint64_t v63 = v51 + 2;
    if ((v56 & 0x1000000) == 0) {
      uint64_t v63 = v51;
    }
    if ((v56 & 0x2000000) != 0) {
      v63 += 3;
    }
    if ((v56 & 0x4000000) != 0) {
      v63 += 10;
    }
    if ((v56 & 0x8000000) != 0) {
      v63 += 3;
    }
    if ((v56 & 0x10000000) != 0) {
      v63 += 3;
    }
    if ((v56 & 0x20000000) != 0) {
      uint64_t v51 = v63 + 3;
    }
    else {
      uint64_t v51 = v63;
    }
    if ((v56 & 0x40000000) != 0) {
      v51 += ((9 * (__clz(*(_DWORD *)(a1 + 428) | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    if ((v56 & 0x80000000) != 0) {
      v51 += ((9 * (__clz(*(_DWORD *)(a1 + 432) | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  uint64_t v64 = *(void *)(a1 + 8);
  if (v64)
  {
    unint64_t v93 = v64 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v93 + 31) < 0) {
      uint64_t v94 = *(void *)(v93 + 16);
    }
    else {
      uint64_t v94 = *(unsigned __int8 *)(v93 + 31);
    }
    v51 += v94;
  }
  *(_DWORD *)(a1 + 44) = v51;
  return v51;
}

void sub_13ECE58(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 56);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    int v6 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_12C52B4((uint64_t *)(a1 + 48), v6, v5, v4, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v7 = *(_DWORD *)(a1 + 56) + v4;
    *(_DWORD *)(a1 + 56) = v7;
    uint64_t v8 = *(int **)(a1 + 64);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 80);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 88) + 8);
    uint64_t v11 = (uint64_t *)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_1368FF8((uint64_t *)(a1 + 72), v11, v10, v9, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v12 = *(_DWORD *)(a1 + 80) + v9;
    *(_DWORD *)(a1 + 80) = v12;
    uint64_t v13 = *(int **)(a1 + 88);
    if (*v13 < v12) {
      int *v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 104);
  if (v14)
  {
    uint64_t v15 = (const std::string **)(*(void *)(a2 + 112) + 8);
    uint64_t v16 = (std::string **)sub_188CCE4(a1 + 96, *(_DWORD *)(a2 + 104));
    sub_188FB98(a1 + 96, v16, v15, v14, **(_DWORD **)(a1 + 112) - *(_DWORD *)(a1 + 104));
    int v17 = *(_DWORD *)(a1 + 104) + v14;
    *(_DWORD *)(a1 + 104) = v17;
    uint64_t v18 = *(int **)(a1 + 112);
    if (*v18 < v17) {
      *uint64_t v18 = v17;
    }
  }
  int v19 = *(_DWORD *)(a2 + 128);
  if (v19)
  {
    uint64_t v20 = (uint64_t *)(*(void *)(a2 + 136) + 8);
    uint64_t v21 = (uint64_t *)sub_188CCE4(a1 + 120, *(_DWORD *)(a2 + 128));
    sub_12C5340((uint64_t *)(a1 + 120), v21, v20, v19, **(_DWORD **)(a1 + 136) - *(_DWORD *)(a1 + 128));
    int v22 = *(_DWORD *)(a1 + 128) + v19;
    *(_DWORD *)(a1 + 128) = v22;
    uint64_t v23 = *(int **)(a1 + 136);
    if (*v23 < v22) {
      *uint64_t v23 = v22;
    }
  }
  int v24 = *(_DWORD *)(a2 + 152);
  if (v24)
  {
    uint64_t v25 = (uint64_t *)(*(void *)(a2 + 160) + 8);
    unint64_t v26 = (uint64_t *)sub_188CCE4(a1 + 144, *(_DWORD *)(a2 + 152));
    sub_1368FF8((uint64_t *)(a1 + 144), v26, v25, v24, **(_DWORD **)(a1 + 160) - *(_DWORD *)(a1 + 152));
    int v27 = *(_DWORD *)(a1 + 152) + v24;
    *(_DWORD *)(a1 + 152) = v27;
    uint64_t v28 = *(int **)(a1 + 160);
    if (*v28 < v27) {
      int *v28 = v27;
    }
  }
  int v29 = *(_DWORD *)(a2 + 176);
  if (v29)
  {
    uint64_t v30 = (uint64_t *)(*(void *)(a2 + 184) + 8);
    uint64_t v31 = (std::string **)sub_188CCE4(a1 + 168, *(_DWORD *)(a2 + 176));
    sub_11DB348((uint64_t *)(a1 + 168), v31, v30, v29, **(_DWORD **)(a1 + 184) - *(_DWORD *)(a1 + 176));
    int v32 = *(_DWORD *)(a1 + 176) + v29;
    *(_DWORD *)(a1 + 176) = v32;
    uint64_t v33 = *(int **)(a1 + 184);
    if (*v33 < v32) {
      *uint64_t v33 = v32;
    }
  }
  int v34 = *(_DWORD *)(a2 + 200);
  if (v34)
  {
    uint64_t v35 = (const std::string **)(*(void *)(a2 + 208) + 8);
    uint64_t v36 = (std::string **)sub_188CCE4(a1 + 192, *(_DWORD *)(a2 + 200));
    sub_188FB98(a1 + 192, v36, v35, v34, **(_DWORD **)(a1 + 208) - *(_DWORD *)(a1 + 200));
    int v37 = *(_DWORD *)(a1 + 200) + v34;
    *(_DWORD *)(a1 + 200) = v37;
    uint64_t v38 = *(int **)(a1 + 208);
    if (*v38 < v37) {
      *uint64_t v38 = v37;
    }
  }
  int v39 = *(_DWORD *)(a2 + 224);
  if (v39)
  {
    uint64_t v40 = (const std::string **)(*(void *)(a2 + 232) + 8);
    uint64_t v41 = (std::string **)sub_188CCE4(a1 + 216, *(_DWORD *)(a2 + 224));
    sub_188FB98(a1 + 216, v41, v40, v39, **(_DWORD **)(a1 + 232) - *(_DWORD *)(a1 + 224));
    int v42 = *(_DWORD *)(a1 + 224) + v39;
    *(_DWORD *)(a1 + 224) = v42;
    uint64_t v43 = *(int **)(a1 + 232);
    if (*v43 < v42) {
      int *v43 = v42;
    }
  }
  unsigned int v44 = *(_DWORD *)(a2 + 40);
  if (!(_BYTE)v44) {
    goto LABEL_79;
  }
  if (v44)
  {
    uint64_t v45 = (long long *)(*(void *)(a2 + 240) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 40) |= 1u;
    uint64_t v46 = *(void *)(a1 + 8);
    uint64_t v47 = (uint64_t *)(v46 & 0xFFFFFFFFFFFFFFFCLL);
    if (v46) {
      uint64_t v47 = (uint64_t *)*v47;
    }
    sub_1881DF4((std::string **)(a1 + 240), v45, v47);
    if ((v44 & 2) == 0)
    {
LABEL_28:
      if ((v44 & 4) == 0) {
        goto LABEL_29;
      }
      goto LABEL_41;
    }
  }
  else if ((v44 & 2) == 0)
  {
    goto LABEL_28;
  }
  uint64_t v48 = (long long *)(*(void *)(a2 + 248) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 40) |= 2u;
  uint64_t v49 = *(void *)(a1 + 8);
  uint64_t v50 = (uint64_t *)(v49 & 0xFFFFFFFFFFFFFFFCLL);
  if (v49) {
    uint64_t v50 = (uint64_t *)*v50;
  }
  sub_1881DF4((std::string **)(a1 + 248), v48, v50);
  if ((v44 & 4) == 0)
  {
LABEL_29:
    if ((v44 & 8) == 0) {
      goto LABEL_30;
    }
    goto LABEL_44;
  }
LABEL_41:
  uint64_t v51 = (long long *)(*(void *)(a2 + 256) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 40) |= 4u;
  uint64_t v52 = *(void *)(a1 + 8);
  uint64_t v53 = (uint64_t *)(v52 & 0xFFFFFFFFFFFFFFFCLL);
  if (v52) {
    uint64_t v53 = (uint64_t *)*v53;
  }
  sub_1881DF4((std::string **)(a1 + 256), v51, v53);
  if ((v44 & 8) == 0)
  {
LABEL_30:
    if ((v44 & 0x10) == 0) {
      goto LABEL_31;
    }
    goto LABEL_47;
  }
LABEL_44:
  uint64_t v54 = (long long *)(*(void *)(a2 + 264) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 40) |= 8u;
  uint64_t v55 = *(void *)(a1 + 8);
  unsigned int v56 = (uint64_t *)(v55 & 0xFFFFFFFFFFFFFFFCLL);
  if (v55) {
    unsigned int v56 = (uint64_t *)*v56;
  }
  sub_1881DF4((std::string **)(a1 + 264), v54, v56);
  if ((v44 & 0x10) == 0)
  {
LABEL_31:
    if ((v44 & 0x20) == 0) {
      goto LABEL_32;
    }
LABEL_55:
    *(_DWORD *)(a1 + 40) |= 0x20u;
    uint64_t v61 = *(void *)(a1 + 280);
    if (!v61)
    {
      uint64_t v62 = *(void *)(a1 + 8);
      uint64_t v63 = (void *)(v62 & 0xFFFFFFFFFFFFFFFCLL);
      if (v62) {
        uint64_t v63 = (void *)*v63;
      }
      uint64_t v61 = sub_1479450((uint64_t)v63);
      *(void *)(a1 + 280) = v61;
    }
    if (*(void *)(a2 + 280)) {
      uint64_t v64 = *(uint64_t (****)())(a2 + 280);
    }
    else {
      uint64_t v64 = &off_2539980;
    }
    sub_13ED90C(v61, (uint64_t)v64);
    if ((v44 & 0x40) == 0)
    {
LABEL_33:
      if ((v44 & 0x80) == 0) {
        goto LABEL_79;
      }
      goto LABEL_71;
    }
    goto LABEL_63;
  }
LABEL_47:
  *(_DWORD *)(a1 + 40) |= 0x10u;
  uint64_t v57 = *(std::string **)(a1 + 272);
  if (!v57)
  {
    uint64_t v58 = *(void *)(a1 + 8);
    int v59 = (void *)(v58 & 0xFFFFFFFFFFFFFFFCLL);
    if (v58) {
      int v59 = (void *)*v59;
    }
    uint64_t v57 = (std::string *)sub_13D8EE0((uint64_t)v59);
    *(void *)(a1 + 272) = v57;
  }
  if (*(void *)(a2 + 272)) {
    uint64_t v60 = *(uint64_t (****)())(a2 + 272);
  }
  else {
    uint64_t v60 = &off_2535C20;
  }
  sub_13ADFDC(v57, (uint64_t)v60);
  if ((v44 & 0x20) != 0) {
    goto LABEL_55;
  }
LABEL_32:
  if ((v44 & 0x40) == 0) {
    goto LABEL_33;
  }
LABEL_63:
  *(_DWORD *)(a1 + 40) |= 0x40u;
  unsigned int v65 = *(std::string **)(a1 + 288);
  if (!v65)
  {
    uint64_t v66 = *(void *)(a1 + 8);
    uint64_t v67 = (void *)(v66 & 0xFFFFFFFFFFFFFFFCLL);
    if (v66) {
      uint64_t v67 = (void *)*v67;
    }
    unsigned int v65 = (std::string *)sub_15C2014((uint64_t)v67);
    *(void *)(a1 + 288) = v65;
  }
  if (*(void *)(a2 + 288)) {
    uint64_t v68 = *(uint64_t (****)())(a2 + 288);
  }
  else {
    uint64_t v68 = &off_253F530;
  }
  sub_1113E40(v65, (uint64_t)v68);
  if ((v44 & 0x80) != 0)
  {
LABEL_71:
    *(_DWORD *)(a1 + 40) |= 0x80u;
    unint64_t v69 = *(std::string **)(a1 + 296);
    if (!v69)
    {
      uint64_t v70 = *(void *)(a1 + 8);
      uint64_t v71 = (void *)(v70 & 0xFFFFFFFFFFFFFFFCLL);
      if (v70) {
        uint64_t v71 = (void *)*v71;
      }
      unint64_t v69 = (std::string *)sub_1479978((uint64_t)v71);
      *(void *)(a1 + 296) = v69;
    }
    if (*(void *)(a2 + 296)) {
      unint64_t v72 = *(uint64_t (****)())(a2 + 296);
    }
    else {
      unint64_t v72 = &off_2539C48;
    }
    sub_1216B14(v69, (uint64_t)v72);
  }
LABEL_79:
  if ((v44 & 0xFF00) == 0) {
    goto LABEL_153;
  }
  if ((v44 & 0x100) != 0)
  {
    *(_DWORD *)(a1 + 40) |= 0x100u;
    uint64_t v73 = *(void *)(a1 + 304);
    if (!v73)
    {
      uint64_t v74 = *(void *)(a1 + 8);
      unint64_t v75 = (void *)(v74 & 0xFFFFFFFFFFFFFFFCLL);
      if (v74) {
        unint64_t v75 = (void *)*v75;
      }
      sub_1479774((uint64_t)v75);
      *(void *)(a1 + 304) = v73;
    }
    if (*(void *)(a2 + 304)) {
      uint64_t v76 = *(uint64_t (****)())(a2 + 304);
    }
    else {
      uint64_t v76 = &off_2539B38;
    }
    sub_13EDA8C(v73, (uint64_t)v76);
    if ((v44 & 0x200) == 0)
    {
LABEL_82:
      if ((v44 & 0x400) == 0) {
        goto LABEL_83;
      }
      goto LABEL_105;
    }
  }
  else if ((v44 & 0x200) == 0)
  {
    goto LABEL_82;
  }
  *(_DWORD *)(a1 + 40) |= 0x200u;
  uint64_t v77 = *(std::string **)(a1 + 312);
  if (!v77)
  {
    uint64_t v78 = *(void *)(a1 + 8);
    uint64_t v79 = (void *)(v78 & 0xFFFFFFFFFFFFFFFCLL);
    if (v78) {
      uint64_t v79 = (void *)*v79;
    }
    uint64_t v77 = (std::string *)sub_13DA01C((uint64_t)v79);
    *(void *)(a1 + 312) = v77;
  }
  if (*(void *)(a2 + 312)) {
    unint64_t v80 = *(uint64_t (****)())(a2 + 312);
  }
  else {
    unint64_t v80 = &off_2536408;
  }
  sub_13B122C(v77, (uint64_t)v80);
  if ((v44 & 0x400) == 0)
  {
LABEL_83:
    if ((v44 & 0x800) == 0) {
      goto LABEL_84;
    }
    goto LABEL_113;
  }
LABEL_105:
  *(_DWORD *)(a1 + 40) |= 0x400u;
  uint64_t v81 = *(void *)(a1 + 320);
  if (!v81)
  {
    uint64_t v82 = *(void *)(a1 + 8);
    uint64_t v83 = (void *)(v82 & 0xFFFFFFFFFFFFFFFCLL);
    if (v82) {
      uint64_t v83 = (void *)*v83;
    }
    uint64_t v81 = sub_13DA3AC((uint64_t)v83);
    *(void *)(a1 + 320) = v81;
  }
  if (*(void *)(a2 + 320)) {
    uint64_t v84 = *(uint64_t (****)())(a2 + 320);
  }
  else {
    uint64_t v84 = &off_2536528;
  }
  sub_13B1374(v81, (uint64_t)v84);
  if ((v44 & 0x800) == 0)
  {
LABEL_84:
    if ((v44 & 0x1000) == 0) {
      goto LABEL_85;
    }
    goto LABEL_121;
  }
LABEL_113:
  *(_DWORD *)(a1 + 40) |= 0x800u;
  uint64_t v85 = *(std::string **)(a1 + 328);
  if (!v85)
  {
    uint64_t v86 = *(void *)(a1 + 8);
    uint64_t v87 = (void *)(v86 & 0xFFFFFFFFFFFFFFFCLL);
    if (v86) {
      uint64_t v87 = (void *)*v87;
    }
    uint64_t v85 = (std::string *)sub_13DA484((uint64_t)v87);
    *(void *)(a1 + 328) = v85;
  }
  if (*(void *)(a2 + 328)) {
    uint64_t v88 = *(uint64_t (****)())(a2 + 328);
  }
  else {
    uint64_t v88 = &off_25365A0;
  }
  sub_13B14BC(v85, (uint64_t)v88);
  if ((v44 & 0x1000) == 0)
  {
LABEL_85:
    if ((v44 & 0x2000) == 0) {
      goto LABEL_86;
    }
    goto LABEL_129;
  }
LABEL_121:
  *(_DWORD *)(a1 + 40) |= 0x1000u;
  uint64_t v89 = *(std::string **)(a1 + 336);
  if (!v89)
  {
    uint64_t v90 = *(void *)(a1 + 8);
    uint64_t v91 = (void *)(v90 & 0xFFFFFFFFFFFFFFFCLL);
    if (v90) {
      uint64_t v91 = (void *)*v91;
    }
    uint64_t v89 = (std::string *)sub_13D9048((uint64_t)v91);
    *(void *)(a1 + 336) = v89;
  }
  if (*(void *)(a2 + 336)) {
    uint64_t v92 = *(uint64_t (****)())(a2 + 336);
  }
  else {
    uint64_t v92 = &off_2535CF8;
  }
  sub_13B20B4(v89, (uint64_t)v92);
  if ((v44 & 0x2000) == 0)
  {
LABEL_86:
    if ((v44 & 0x4000) == 0) {
      goto LABEL_87;
    }
    goto LABEL_137;
  }
LABEL_129:
  *(_DWORD *)(a1 + 40) |= 0x2000u;
  uint64_t v93 = *(void *)(a1 + 344);
  if (!v93)
  {
    uint64_t v94 = *(void *)(a1 + 8);
    int v95 = (void *)(v94 & 0xFFFFFFFFFFFFFFFCLL);
    if (v94) {
      int v95 = (void *)*v95;
    }
    sub_1478B2C((uint64_t)v95);
    *(void *)(a1 + 344) = v93;
  }
  if (*(void *)(a2 + 344)) {
    uint64_t v96 = *(uint64_t (****)())(a2 + 344);
  }
  else {
    uint64_t v96 = &off_2539290;
  }
  sub_13E582C(v93, (uint64_t)v96);
  if ((v44 & 0x4000) == 0)
  {
LABEL_87:
    if ((v44 & 0x8000) == 0) {
      goto LABEL_153;
    }
    goto LABEL_145;
  }
LABEL_137:
  *(_DWORD *)(a1 + 40) |= 0x4000u;
  uint64_t v97 = *(void *)(a1 + 352);
  if (!v97)
  {
    uint64_t v98 = *(void *)(a1 + 8);
    uint64_t v99 = (void *)(v98 & 0xFFFFFFFFFFFFFFFCLL);
    if (v98) {
      uint64_t v99 = (void *)*v99;
    }
    uint64_t v97 = sub_15C1CB4((uint64_t)v99);
    *(void *)(a1 + 352) = v97;
  }
  if (*(void *)(a2 + 352)) {
    uint64_t v100 = *(uint64_t (****)())(a2 + 352);
  }
  else {
    uint64_t v100 = &off_253F2E8;
  }
  sub_15B04F0(v97, (uint64_t)v100);
  if ((v44 & 0x8000) != 0)
  {
LABEL_145:
    *(_DWORD *)(a1 + 40) |= 0x8000u;
    uint64_t v101 = *(void **)(a1 + 360);
    if (!v101)
    {
      uint64_t v102 = *(void *)(a1 + 8);
      uint64_t v103 = (void *)(v102 & 0xFFFFFFFFFFFFFFFCLL);
      if (v102) {
        uint64_t v103 = (void *)*v103;
      }
      uint64_t v101 = sub_130645C((uint64_t)v103);
      *(void *)(a1 + 360) = v101;
    }
    if (*(void *)(a2 + 360)) {
      uint64_t v104 = *(uint64_t (****)())(a2 + 360);
    }
    else {
      uint64_t v104 = &off_2532480;
    }
    sub_1305F18((uint64_t)v101, (uint64_t)v104);
  }
LABEL_153:
  if ((v44 & 0xFF0000) == 0) {
    goto LABEL_164;
  }
  if ((v44 & 0x10000) != 0)
  {
    *(_DWORD *)(a1 + 40) |= 0x10000u;
    uint64_t v106 = *(std::string **)(a1 + 368);
    if (!v106)
    {
      uint64_t v107 = *(void *)(a1 + 8);
      int v108 = (void *)(v107 & 0xFFFFFFFFFFFFFFFCLL);
      if (v107) {
        int v108 = (void *)*v108;
      }
      uint64_t v106 = (std::string *)sub_13DA2B8((uint64_t)v108);
      *(void *)(a1 + 368) = v106;
    }
    if (*(void *)(a2 + 368)) {
      unsigned int v109 = *(uint64_t (****)())(a2 + 368);
    }
    else {
      unsigned int v109 = &off_25364E0;
    }
    sub_13B1644(v106, (uint64_t)v109);
    if ((v44 & 0x20000) == 0)
    {
LABEL_156:
      if ((v44 & 0x40000) == 0) {
        goto LABEL_157;
      }
      goto LABEL_194;
    }
  }
  else if ((v44 & 0x20000) == 0)
  {
    goto LABEL_156;
  }
  *(_DWORD *)(a1 + 40) |= 0x20000u;
  uint64_t v110 = *(void *)(a1 + 376);
  if (!v110)
  {
    uint64_t v111 = *(void *)(a1 + 8);
    uint64_t v112 = (void *)(v111 & 0xFFFFFFFFFFFFFFFCLL);
    if (v111) {
      uint64_t v112 = (void *)*v112;
    }
    uint64_t v110 = sub_13D80BC((uint64_t)v112);
    *(void *)(a1 + 376) = v110;
  }
  if (*(void *)(a2 + 376)) {
    uint64_t v113 = *(uint64_t (****)())(a2 + 376);
  }
  else {
    uint64_t v113 = &off_25351C0;
  }
  sub_1393920(v110, (uint64_t)v113);
  if ((v44 & 0x40000) == 0)
  {
LABEL_157:
    if ((v44 & 0x80000) == 0) {
      goto LABEL_158;
    }
    goto LABEL_202;
  }
LABEL_194:
  *(_DWORD *)(a1 + 40) |= 0x40000u;
  unint64_t v114 = *(std::string **)(a1 + 384);
  if (!v114)
  {
    uint64_t v115 = *(void *)(a1 + 8);
    uint64_t v116 = (void *)(v115 & 0xFFFFFFFFFFFFFFFCLL);
    if (v115) {
      uint64_t v116 = (void *)*v116;
    }
    unint64_t v114 = (std::string *)sub_13DAA4C((uint64_t)v116);
    *(void *)(a1 + 384) = v114;
  }
  if (*(void *)(a2 + 384)) {
    uint64_t v117 = *(uint64_t (****)())(a2 + 384);
  }
  else {
    uint64_t v117 = &off_25367D8;
  }
  sub_13D21EC(v114, (uint64_t)v117);
  if ((v44 & 0x80000) == 0)
  {
LABEL_158:
    if ((v44 & 0x100000) == 0) {
      goto LABEL_159;
    }
    goto LABEL_210;
  }
LABEL_202:
  *(_DWORD *)(a1 + 40) |= 0x80000u;
  uint64_t v118 = *(std::string **)(a1 + 392);
  if (!v118)
  {
    uint64_t v119 = *(void *)(a1 + 8);
    int v120 = (void *)(v119 & 0xFFFFFFFFFFFFFFFCLL);
    if (v119) {
      int v120 = (void *)*v120;
    }
    uint64_t v118 = (std::string *)sub_15C26A4((uint64_t)v120);
    *(void *)(a1 + 392) = v118;
  }
  if (*(void *)(a2 + 392)) {
    BOOL v121 = *(uint64_t (****)())(a2 + 392);
  }
  else {
    BOOL v121 = &off_253F780;
  }
  sub_13B15D0(v118, (uint64_t)v121);
  if ((v44 & 0x100000) == 0)
  {
LABEL_159:
    if ((v44 & 0x200000) == 0) {
      goto LABEL_160;
    }
    goto LABEL_218;
  }
LABEL_210:
  *(_DWORD *)(a1 + 40) |= 0x100000u;
  uint64_t v122 = *(std::string **)(a1 + 400);
  if (!v122)
  {
    uint64_t v123 = *(void *)(a1 + 8);
    uint64_t v124 = (void *)(v123 & 0xFFFFFFFFFFFFFFFCLL);
    if (v123) {
      uint64_t v124 = (void *)*v124;
    }
    uint64_t v122 = (std::string *)sub_13F3A0C((uint64_t)v124);
    *(void *)(a1 + 400) = v122;
  }
  if (*(void *)(a2 + 400)) {
    uint64_t v125 = *(uint64_t (****)())(a2 + 400);
  }
  else {
    uint64_t v125 = &off_2537168;
  }
  sub_11A7934(v122, (uint64_t)v125);
  if ((v44 & 0x200000) == 0)
  {
LABEL_160:
    if ((v44 & 0x400000) == 0) {
      goto LABEL_161;
    }
LABEL_219:
    *(unsigned char *)(a1 + 412) = *(unsigned char *)(a2 + 412);
    if ((v44 & 0x800000) == 0) {
      goto LABEL_163;
    }
    goto LABEL_162;
  }
LABEL_218:
  *(_DWORD *)(a1 + 408) = *(_DWORD *)(a2 + 408);
  if ((v44 & 0x400000) != 0) {
    goto LABEL_219;
  }
LABEL_161:
  if ((v44 & 0x800000) != 0) {
LABEL_162:
  }
    *(unsigned char *)(a1 + 413) = *(unsigned char *)(a2 + 413);
LABEL_163:
  *(_DWORD *)(a1 + 40) |= v44;
LABEL_164:
  if (!HIBYTE(v44)) {
    goto LABEL_174;
  }
  if ((v44 & 0x1000000) != 0)
  {
    *(unsigned char *)(a1 + 414) = *(unsigned char *)(a2 + 414);
    if ((v44 & 0x2000000) == 0)
    {
LABEL_167:
      if ((v44 & 0x4000000) == 0) {
        goto LABEL_168;
      }
      goto LABEL_223;
    }
  }
  else if ((v44 & 0x2000000) == 0)
  {
    goto LABEL_167;
  }
  *(unsigned char *)(a1 + 415) = *(unsigned char *)(a2 + 415);
  if ((v44 & 0x4000000) == 0)
  {
LABEL_168:
    if ((v44 & 0x8000000) == 0) {
      goto LABEL_169;
    }
    goto LABEL_224;
  }
LABEL_223:
  *(void *)(a1 + 416) = *(void *)(a2 + 416);
  if ((v44 & 0x8000000) == 0)
  {
LABEL_169:
    if ((v44 & 0x10000000) == 0) {
      goto LABEL_170;
    }
    goto LABEL_225;
  }
LABEL_224:
  *(unsigned char *)(a1 + 424) = *(unsigned char *)(a2 + 424);
  if ((v44 & 0x10000000) == 0)
  {
LABEL_170:
    if ((v44 & 0x20000000) == 0) {
      goto LABEL_171;
    }
    goto LABEL_226;
  }
LABEL_225:
  *(unsigned char *)(a1 + 425) = *(unsigned char *)(a2 + 425);
  if ((v44 & 0x20000000) == 0)
  {
LABEL_171:
    if ((v44 & 0x40000000) == 0) {
      goto LABEL_172;
    }
LABEL_227:
    *(_DWORD *)(a1 + 428) = *(_DWORD *)(a2 + 428);
    if ((v44 & 0x80000000) == 0) {
      goto LABEL_173;
    }
LABEL_228:
    *(_DWORD *)(a1 + 432) = *(_DWORD *)(a2 + 432);
    goto LABEL_173;
  }
LABEL_226:
  *(unsigned char *)(a1 + 426) = *(unsigned char *)(a2 + 426);
  if ((v44 & 0x40000000) != 0) {
    goto LABEL_227;
  }
LABEL_172:
  if ((v44 & 0x80000000) != 0) {
    goto LABEL_228;
  }
LABEL_173:
  *(_DWORD *)(a1 + 40) |= v44;
LABEL_174:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v105 = *(void *)(a2 + 8);
  if (v105)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v105 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_13ED90C(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 56);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    int v6 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_10E4FFC((uint64_t *)(a1 + 48), v6, v5, v4, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v7 = *(_DWORD *)(a1 + 56) + v4;
    *(_DWORD *)(a1 + 56) = v7;
    uint64_t v8 = *(int **)(a1 + 64);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 40);
  if ((v9 & 3) != 0)
  {
    if (v9)
    {
      *(_DWORD *)(a1 + 40) |= 1u;
      uint64_t v10 = *(void *)(a1 + 72);
      if (!v10)
      {
        uint64_t v11 = *(void *)(a1 + 8);
        int v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
        if (v11) {
          int v12 = (void *)*v12;
        }
        sub_1478F54((uint64_t)v12);
        *(void *)(a1 + 72) = v10;
      }
      if (*(void *)(a2 + 72)) {
        uint64_t v13 = *(uint64_t (****)())(a2 + 72);
      }
      else {
        uint64_t v13 = &off_2539528;
      }
      sub_146945C(v10, (uint64_t)v13);
    }
    if ((v9 & 2) != 0)
    {
      *(_DWORD *)(a1 + 40) |= 2u;
      uint64_t v14 = *(void *)(a1 + 80);
      if (!v14)
      {
        uint64_t v15 = *(void *)(a1 + 8);
        uint64_t v16 = (void *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          uint64_t v16 = (void *)*v16;
        }
        uint64_t v14 = sub_15C1CB4((uint64_t)v16);
        *(void *)(a1 + 80) = v14;
      }
      if (*(void *)(a2 + 80)) {
        int v17 = *(uint64_t (****)())(a2 + 80);
      }
      else {
        int v17 = &off_253F2E8;
      }
      sub_15B04F0(v14, (uint64_t)v17);
    }
  }
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v18 = *(void *)(a2 + 8);
  if (v18)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v18 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_13EDA8C(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((_BYTE)v4)
  {
    if (v4)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v6 = *(void *)(a1 + 24);
      if (!v6)
      {
        uint64_t v7 = *(void *)(a1 + 8);
        uint64_t v8 = (void *)(v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (v7) {
          uint64_t v8 = (void *)*v8;
        }
        uint64_t v6 = sub_14794AC((uint64_t)v8);
        *(void *)(a1 + 24) = v6;
      }
      if (*(void *)(a2 + 24)) {
        int v9 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        int v9 = &off_25399D8;
      }
      sub_1471220(v6, (uint64_t)v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_38;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v10 = *(void *)(a1 + 32);
    if (!v10)
    {
      uint64_t v11 = *(void *)(a1 + 8);
      int v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        int v12 = (void *)*v12;
      }
      uint64_t v10 = sub_1479508((uint64_t)v12);
      *(void *)(a1 + 32) = v10;
    }
    if (*(void *)(a2 + 32)) {
      uint64_t v13 = *(uint64_t (****)())(a2 + 32);
    }
    else {
      uint64_t v13 = &off_2539A50;
    }
    sub_1471DAC(v10, (uint64_t)v13);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_46;
    }
LABEL_38:
    *(_DWORD *)(a1 + 16) |= 4u;
    uint64_t v14 = *(void **)(a1 + 40);
    if (!v14)
    {
      uint64_t v15 = *(void *)(a1 + 8);
      uint64_t v16 = (void *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
      if (v15) {
        uint64_t v16 = (void *)*v16;
      }
      uint64_t v14 = sub_14795A4((uint64_t)v16);
      *(void *)(a1 + 40) = v14;
    }
    if (*(void *)(a2 + 40)) {
      int v17 = *(uint64_t (****)())(a2 + 40);
    }
    else {
      int v17 = &off_2539A90;
    }
    sub_1472620((uint64_t)v14, (uint64_t)v17);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0) {
        goto LABEL_7;
      }
      goto LABEL_54;
    }
LABEL_46:
    *(_DWORD *)(a1 + 16) |= 8u;
    uint64_t v18 = *(std::string **)(a1 + 48);
    if (!v18)
    {
      uint64_t v19 = *(void *)(a1 + 8);
      uint64_t v20 = (void *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
      if (v19) {
        uint64_t v20 = (void *)*v20;
      }
      uint64_t v18 = (std::string *)sub_14796F8((uint64_t)v20);
      *(void *)(a1 + 48) = v18;
    }
    if (*(void *)(a2 + 48)) {
      uint64_t v21 = *(uint64_t (****)())(a2 + 48);
    }
    else {
      uint64_t v21 = &off_2539B18;
    }
    sub_13B15D0(v18, (uint64_t)v21);
    if ((v4 & 0x10) == 0)
    {
LABEL_7:
      if ((v4 & 0x20) == 0) {
        goto LABEL_8;
      }
      goto LABEL_62;
    }
LABEL_54:
    *(_DWORD *)(a1 + 16) |= 0x10u;
    int v22 = *(std::string **)(a1 + 56);
    if (!v22)
    {
      uint64_t v23 = *(void *)(a1 + 8);
      int v24 = (void *)(v23 & 0xFFFFFFFFFFFFFFFCLL);
      if (v23) {
        int v24 = (void *)*v24;
      }
      int v22 = (std::string *)sub_1479600((uint64_t)v24);
      *(void *)(a1 + 56) = v22;
    }
    if (*(void *)(a2 + 56)) {
      uint64_t v25 = *(uint64_t (****)())(a2 + 56);
    }
    else {
      uint64_t v25 = &off_2539AC8;
    }
    sub_1113E40(v22, (uint64_t)v25);
    if ((v4 & 0x20) == 0)
    {
LABEL_8:
      if ((v4 & 0x40) == 0) {
        goto LABEL_9;
      }
      goto LABEL_63;
    }
LABEL_62:
    *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
    if ((v4 & 0x40) == 0)
    {
LABEL_9:
      if ((v4 & 0x80) == 0)
      {
LABEL_11:
        *(_DWORD *)(a1 + 16) |= v4;
        goto LABEL_12;
      }
LABEL_10:
      *(_DWORD *)(a1 + 68) = *(_DWORD *)(a2 + 68);
      goto LABEL_11;
    }
LABEL_63:
    *(unsigned char *)(a1 + 65) = *(unsigned char *)(a2 + 65);
    if ((v4 & 0x80) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
LABEL_12:
  if ((v4 & 0x700) == 0) {
    goto LABEL_18;
  }
  if ((v4 & 0x100) == 0)
  {
    if ((v4 & 0x200) == 0) {
      goto LABEL_15;
    }
LABEL_66:
    *(_DWORD *)(a1 + 76) = *(_DWORD *)(a2 + 76);
    if ((v4 & 0x400) == 0) {
      goto LABEL_17;
    }
    goto LABEL_16;
  }
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  if ((v4 & 0x200) != 0) {
    goto LABEL_66;
  }
LABEL_15:
  if ((v4 & 0x400) != 0) {
LABEL_16:
  }
    *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
LABEL_17:
  *(_DWORD *)(a1 + 16) |= v4;
LABEL_18:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_13EDD08(uint64_t a1, uint64_t a2)
{
  if (a2 != a1)
  {
    sub_13E9EC4(a1);
    sub_13ECE58(a1, a2);
  }
}

uint64_t sub_13EDD54(uint64_t a1)
{
  uint64_t result = sub_18856CC(a1 + 16);
  if (result)
  {
    uint64_t v3 = *(unsigned int *)(a1 + 56);
    while ((int)v3 >= 1)
    {
      uint64_t v4 = v3 - 1;
      char v5 = sub_13EDF40(*(void *)(*(void *)(a1 + 64) + 8 * v3));
      uint64_t v3 = v4;
      if ((v5 & 1) == 0) {
        return 0;
      }
    }
    uint64_t v6 = *(unsigned int *)(a1 + 80);
    while ((int)v6 >= 1)
    {
      uint64_t v7 = v6 - 1;
      char v8 = sub_13EDFC4(*(void *)(*(void *)(a1 + 88) + 8 * v6));
      uint64_t v6 = v7;
      if ((v8 & 1) == 0) {
        return 0;
      }
    }
    uint64_t v9 = *(unsigned int *)(a1 + 128);
    while ((int)v9 >= 1)
    {
      uint64_t v10 = v9 - 1;
      char v11 = sub_15B06D8(*(void *)(*(void *)(a1 + 136) + 8 * v9));
      uint64_t v9 = v10;
      if ((v11 & 1) == 0) {
        return 0;
      }
    }
    uint64_t v12 = *(unsigned int *)(a1 + 152);
    while ((int)v12 >= 1)
    {
      uint64_t v13 = v12 - 1;
      char v14 = sub_13EDFC4(*(void *)(*(void *)(a1 + 160) + 8 * v12));
      uint64_t v12 = v13;
      if ((v14 & 1) == 0) {
        return 0;
      }
    }
    uint64_t v15 = *(unsigned int *)(a1 + 176);
    while ((int)v15 >= 1)
    {
      uint64_t v16 = v15 - 1;
      char v17 = sub_15BAF9C(*(void *)(*(void *)(a1 + 184) + 8 * v15));
      uint64_t result = 0;
      uint64_t v15 = v16;
      if ((v17 & 1) == 0) {
        return result;
      }
    }
    int v18 = *(_DWORD *)(a1 + 40);
    if ((v18 & 0x20) != 0)
    {
      uint64_t result = sub_13EDF40(*(void *)(a1 + 280));
      if (!result) {
        return result;
      }
      int v18 = *(_DWORD *)(a1 + 40);
    }
    if ((v18 & 0x40) != 0)
    {
      uint64_t result = sub_15BA3C8(*(void *)(a1 + 288));
      if (!result) {
        return result;
      }
      int v18 = *(_DWORD *)(a1 + 40);
    }
    if ((v18 & 0x100) != 0)
    {
      uint64_t result = sub_13EDFC4(*(void *)(a1 + 304));
      if (!result) {
        return result;
      }
      int v18 = *(_DWORD *)(a1 + 40);
    }
    if ((v18 & 0x400) != 0)
    {
      uint64_t result = sub_18856CC(*(void *)(a1 + 320) + 16);
      if (!result) {
        return result;
      }
      int v18 = *(_DWORD *)(a1 + 40);
    }
    if ((v18 & 0x2000) != 0)
    {
      uint64_t result = sub_13E62E4(*(void *)(a1 + 344));
      if (!result) {
        return result;
      }
      int v18 = *(_DWORD *)(a1 + 40);
    }
    if ((v18 & 0x4000) != 0)
    {
      uint64_t result = sub_15B06D8(*(void *)(a1 + 352));
      if (!result) {
        return result;
      }
      int v18 = *(_DWORD *)(a1 + 40);
    }
    if ((v18 & 0x8000) != 0)
    {
      uint64_t result = sub_1305FA8(*(void *)(a1 + 360));
      if (!result) {
        return result;
      }
      int v18 = *(_DWORD *)(a1 + 40);
    }
    if ((v18 & 0x20000) != 0)
    {
      uint64_t v19 = *(void *)(a1 + 376);
      uint64_t v20 = *(unsigned int *)(v19 + 32);
      while ((int)v20 >= 1)
      {
        uint64_t v21 = v20 - 1;
        char v22 = sub_1392B10(*(void *)(*(void *)(v19 + 40) + 8 * v20));
        uint64_t result = 0;
        uint64_t v20 = v21;
        if ((v22 & 1) == 0) {
          return result;
        }
      }
      int v18 = *(_DWORD *)(a1 + 40);
    }
    if ((v18 & 0x40000) == 0) {
      return 1;
    }
    uint64_t result = sub_13D2450(*(void *)(a1 + 384));
    if (result) {
      return 1;
    }
  }
  return result;
}

uint64_t sub_13EDF40(uint64_t a1)
{
  uint64_t result = sub_18856CC(a1 + 16);
  if (result)
  {
    uint64_t v3 = *(unsigned int *)(a1 + 56);
    while ((int)v3 >= 1)
    {
      uint64_t v4 = v3 - 1;
      char v5 = sub_15B0F18(*(void *)(*(void *)(a1 + 64) + 8 * v3));
      uint64_t v3 = v4;
      if ((v5 & 1) == 0) {
        return 0;
      }
    }
    int v6 = *(_DWORD *)(a1 + 40);
    if (v6)
    {
      uint64_t result = sub_146A1C8(*(void *)(a1 + 72));
      if (!result) {
        return result;
      }
      int v6 = *(_DWORD *)(a1 + 40);
    }
    if ((v6 & 2) == 0) {
      return 1;
    }
    uint64_t result = sub_15B06D8(*(void *)(a1 + 80));
    if (result) {
      return 1;
    }
  }
  return result;
}

uint64_t sub_13EDFC4(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if (v2)
  {
    uint64_t result = sub_147142C(*(void *)(a1 + 24));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 2) != 0)
  {
    uint64_t result = sub_1471F20(*(void *)(a1 + 32));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 4) == 0) {
    return 1;
  }
  uint64_t result = sub_14726D4(*(void *)(a1 + 40));
  if (result) {
    return 1;
  }
  return result;
}

void sub_13EE024(uint64_t a1, uint64_t a2)
{
  sub_1885338((uint64_t *)(a1 + 16), (uint64_t *)(a2 + 16));
  uint64_t v4 = *(void *)(a1 + 8);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a2 + 8) = v4;
  LODWORD(v4) = *(_DWORD *)(a1 + 40);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a2 + 40) = v4;
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(a1 + 56);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(void *)(a2 + 48) = v5;
  *(void *)(a2 + 56) = v6;
  uint64_t v7 = *(void *)(a1 + 64);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a2 + 64) = v7;
  uint64_t v8 = *(void *)(a1 + 72);
  uint64_t v9 = *(void *)(a1 + 80);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(void *)(a2 + 72) = v8;
  *(void *)(a2 + 80) = v9;
  uint64_t v10 = *(void *)(a1 + 88);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a2 + 88) = v10;
  uint64_t v11 = *(void *)(a1 + 96);
  uint64_t v12 = *(void *)(a1 + 104);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(void *)(a2 + 96) = v11;
  *(void *)(a2 + 104) = v12;
  uint64_t v13 = *(void *)(a1 + 112);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a2 + 112) = v13;
  uint64_t v14 = *(void *)(a1 + 120);
  uint64_t v15 = *(void *)(a1 + 128);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(void *)(a2 + 120) = v14;
  *(void *)(a2 + 128) = v15;
  uint64_t v16 = *(void *)(a1 + 136);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a2 + 136) = v16;
  uint64_t v17 = *(void *)(a1 + 144);
  uint64_t v18 = *(void *)(a1 + 152);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(void *)(a2 + 144) = v17;
  *(void *)(a2 + 152) = v18;
  uint64_t v19 = *(void *)(a1 + 160);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a2 + 160) = v19;
  uint64_t v20 = *(void *)(a1 + 168);
  uint64_t v21 = *(void *)(a1 + 176);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(void *)(a2 + 168) = v20;
  *(void *)(a2 + 176) = v21;
  uint64_t v22 = *(void *)(a1 + 184);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a2 + 184) = v22;
  uint64_t v23 = *(void *)(a1 + 192);
  uint64_t v24 = *(void *)(a1 + 200);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(void *)(a2 + 192) = v23;
  *(void *)(a2 + 200) = v24;
  uint64_t v25 = *(void *)(a1 + 208);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(void *)(a2 + 208) = v25;
  uint64_t v26 = *(void *)(a1 + 216);
  uint64_t v27 = *(void *)(a1 + 224);
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(void *)(a2 + 216) = v26;
  *(void *)(a2 + 224) = v27;
  uint64_t v28 = *(void *)(a1 + 232);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  *(void *)(a2 + 232) = v28;
  uint64_t v29 = *(void *)(a2 + 240);
  *(void *)(a2 + 240) = *(void *)(a1 + 240);
  *(void *)(a1 + 240) = v29;
  uint64_t v30 = *(void *)(a2 + 248);
  *(void *)(a2 + 248) = *(void *)(a1 + 248);
  *(void *)(a1 + 248) = v30;
  uint64_t v31 = *(void *)(a2 + 256);
  *(void *)(a2 + 256) = *(void *)(a1 + 256);
  *(void *)(a1 + 256) = v31;
  uint64_t v32 = *(void *)(a2 + 264);
  *(void *)(a2 + 264) = *(void *)(a1 + 264);
  *(void *)(a1 + 264) = v32;
  uint64_t v33 = *(void *)(a1 + 272);
  uint64_t v34 = *(void *)(a1 + 280);
  *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
  *(void *)(a2 + 272) = v33;
  *(void *)(a2 + 280) = v34;
  uint64_t v35 = *(void *)(a1 + 288);
  uint64_t v36 = *(void *)(a1 + 296);
  *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
  *(void *)(a2 + 288) = v35;
  *(void *)(a2 + 296) = v36;
  sub_119508C((void *)(a1 + 304), a2 + 304);
  int v37 = *(_DWORD *)(a1 + 432);
  *(_DWORD *)(a1 + 432) = *(_DWORD *)(a2 + 432);
  *(_DWORD *)(a2 + 432) = v37;
}

void *sub_13EE1F0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.ETARequest");
}

uint64_t sub_13EE200(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_24B1208;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  return a1;
}

void sub_13EE27C(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_13EE2AC(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_13EE320(void *a1)
{
  sub_13EE2AC(a1);

  operator delete();
}

char *sub_13EE358(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v19 = a2;
  if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
    return v19;
  }
  uint64_t v5 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v6 = v19 + 1;
    unsigned int v7 = *v19;
    if (*v19 < 0)
    {
      unsigned int v8 = v7 + (*v6 << 7);
      unsigned int v7 = v8 - 128;
      if (*v6 < 0)
      {
        uint64_t v6 = (char *)sub_188C180((uint64_t)v19, v8 - 128);
        unsigned int v7 = v9;
      }
      else
      {
        uint64_t v6 = v19 + 2;
      }
    }
    uint64_t v19 = v6;
    if (v7 == 8)
    {
      uint64_t v12 = v6 + 1;
      unint64_t v13 = *v6;
      if (*v6 < 0)
      {
        int v14 = *v12;
        int v15 = v13 + (v14 << 7);
        unint64_t v13 = (v15 - 128);
        if (v14 < 0)
        {
          uint64_t v19 = (char *)sub_188C138((uint64_t)v6, (v15 - 128));
          if (!v19) {
            return 0;
          }
          unint64_t v13 = v16;
          goto LABEL_20;
        }
        uint64_t v12 = v6 + 2;
      }
      uint64_t v19 = v12;
LABEL_20:
      if (v13 > 2)
      {
        if (*v5) {
          uint64_t v17 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          uint64_t v17 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        sub_188C020(1, v13, v17);
      }
      else
      {
        *(_DWORD *)(a1 + 16) |= 1u;
        *(_DWORD *)(a1 + 24) = v13;
      }
      goto LABEL_22;
    }
    if (!v7 || (v7 & 7) == 4) {
      break;
    }
    if (*v5)
    {
      uint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v6 = v19;
    }
    uint64_t v19 = (char *)sub_1885AC0(v7, v11, v6, a3);
    if (!v19) {
      return 0;
    }
LABEL_22:
    if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
      return v19;
    }
  }
  if (v6)
  {
    a3[10].i32[0] = v7 - 1;
    return v19;
  }
  return 0;
}

unsigned char *sub_13EE500(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v6 = *(int *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v6;
    if (v6 > 0x7F)
    {
      v4[1] = v6 | 0x80;
      unint64_t v7 = v6 >> 7;
      v4[2] = v6 >> 7;
      v4 += 3;
      if (v6 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v8 = v7 >> 14;
          v7 >>= 7;
          *v4++ = v7;
        }
        while (v8);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    uint64_t v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    uint64_t v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    v4 += v14;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v12, v13, v4);
}

uint64_t sub_13EE628(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    int v2 = *(_DWORD *)(a1 + 24);
    if (v2 < 0) {
      uint64_t v1 = 11;
    }
    else {
      uint64_t v1 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  else
  {
    uint64_t v1 = 0;
  }
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v5 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    v1 += v6;
  }
  *(_DWORD *)(a1 + 20) = v1;
  return v1;
}

uint64_t sub_13EE69C()
{
  return 1;
}

void *sub_13EE6A4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.PathComputationOptions");
}

uint64_t sub_13EE6B4(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_2537188)
  {
    uint64_t v6 = *(void *)(a1 + 48);
    if (v6)
    {
      sub_1374224(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  sub_1365CFC((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_13EE778(uint64_t a1)
{
  sub_13EE6B4(a1);

  operator delete();
}

uint64_t sub_13EE7B0(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_1369E6C(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  if (*(unsigned char *)(v1 + 16)) {
    uint64_t result = sub_1369E6C(*(void *)(v1 + 48));
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = v1 + 8;
  *(_DWORD *)(v5 + 8) = 0;
  if (v6)
  {
    return sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

char *sub_13EE840(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v24 = a2;
  if (sub_11947B8((uint64_t)a3, &v24, a3[11].i32[1])) {
    return v24;
  }
  char v6 = (void *)(a1 + 8);
  while (1)
  {
    unint64_t v7 = v24 + 1;
    unsigned int v8 = *v24;
    if (*v24 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        unint64_t v7 = (char *)sub_188C180((uint64_t)v24, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        unint64_t v7 = v24 + 2;
      }
    }
    uint64_t v24 = v7;
    if (v8 >> 3 != 2) {
      break;
    }
    if (v8 != 18) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v15 = *(void *)(a1 + 48);
    if (!v15)
    {
      unint64_t v16 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        unint64_t v16 = (void *)*v16;
      }
      sub_13D6A1C((uint64_t)v16);
      uint64_t v15 = v17;
      *(void *)(a1 + 48) = v17;
      unint64_t v7 = v24;
    }
    uint64_t v14 = (char *)sub_13319DC(a3, v15, (unsigned __int8 *)v7);
LABEL_26:
    uint64_t v24 = v14;
    if (!v14) {
      return 0;
    }
LABEL_27:
    if (sub_11947B8((uint64_t)a3, &v24, a3[11].i32[1])) {
      return v24;
    }
  }
  if (v8 >> 3 == 1 && v8 == 10)
  {
    uint64_t v18 = v7 - 1;
    while (1)
    {
      uint64_t v19 = (unsigned __int8 *)(v18 + 1);
      uint64_t v24 = v18 + 1;
      uint64_t v20 = *(_DWORD **)(a1 + 40);
      if (v20 && (uint64_t v21 = *(int *)(a1 + 32), (int)v21 < *v20))
      {
        *(_DWORD *)(a1 + 32) = v21 + 1;
        uint64_t v22 = *(void *)&v20[2 * v21 + 2];
      }
      else
      {
        sub_13D6A1C(*(void *)(a1 + 24));
        uint64_t v22 = sub_188CDC8(a1 + 24, v23);
        uint64_t v19 = (unsigned __int8 *)v24;
      }
      uint64_t v18 = (char *)sub_13319DC(a3, v22, v19);
      uint64_t v24 = v18;
      if (!v18) {
        return 0;
      }
      if (*(void *)a3 <= (unint64_t)v18 || *v18 != 10) {
        goto LABEL_27;
      }
    }
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unint64_t v7 = v24;
    }
    uint64_t v14 = (char *)sub_1885AC0(v8, v13, v7, a3);
    goto LABEL_26;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v24;
  }
  return 0;
}

char *sub_13EEA48(uint64_t a1, char *__dst, unint64_t *a3)
{
  int v6 = *(_DWORD *)(a1 + 32);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unsigned int v10 = __dst + 2;
      }
      __dst = sub_1374B08(v8, v10, a3);
    }
  }
  if (*(unsigned char *)(a1 + 16))
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    uint64_t v11 = *(void *)(a1 + 48);
    *__dst = 18;
    unsigned int v12 = *(_DWORD *)(v11 + 20);
    __dst[1] = v12;
    if (v12 > 0x7F) {
      uint64_t v13 = sub_188A9CC(v12, __dst + 1);
    }
    else {
      uint64_t v13 = __dst + 2;
    }
    __dst = sub_1374B08(v11, v13, a3);
  }
  uint64_t v14 = *(void *)(a1 + 8);
  if ((v14 & 1) == 0) {
    return __dst;
  }
  unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v16 + 31) < 0)
  {
    uint64_t v17 = *(void **)(v16 + 8);
    uint64_t v18 = *(void *)(v16 + 16);
  }
  else
  {
    uint64_t v17 = (void *)(v16 + 8);
    LODWORD(v18) = *(unsigned __int8 *)(v16 + 31);
  }
  if ((uint64_t)(*a3 - (void)__dst) >= (int)v18)
  {
    uint64_t v19 = (int)v18;
    memcpy(__dst, v17, (int)v18);
    __dst += v19;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v17, v18, __dst);
}

uint64_t sub_13EEBF4(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_1374EEC(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  if (*(unsigned char *)(a1 + 16))
  {
    uint64_t v8 = sub_1374EEC(*(void *)(a1 + 48));
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    v2 += v12;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_13EECD8(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  while ((int)v2 >= 1)
  {
    uint64_t v3 = v2 - 1;
    char v4 = sub_136ADBC(*(void *)(*(void *)(a1 + 40) + 8 * v2));
    uint64_t v2 = v3;
    if ((v4 & 1) == 0) {
      return 0;
    }
  }
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 1;
  }
  uint64_t result = sub_136ADBC(*(void *)(a1 + 48));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_13EED3C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.ShortTrafficSummary");
}

double sub_13EED4C(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3 = a2 | 2;
  if (!a3) {
    uint64_t v3 = a2;
  }
  *(void *)a1 = off_24B1308;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = a2;
  double result = 0.0;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 92) = 0u;
  return result;
}

uint64_t sub_13EED8C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  char v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  if ((uint64_t (***)())a1 != &off_25371C0)
  {
    uint64_t v5 = *(void *)(a1 + 48);
    if (v5)
    {
      sub_13CC754(v5);
      operator delete();
    }
    uint64_t v6 = *(void *)(a1 + 56);
    if (v6)
    {
      sub_13EE6B4(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  sub_1365CFC((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_13EEE68(uint64_t a1)
{
  sub_13EED8C(a1);

  operator delete();
}

uint64_t sub_13EEEA0(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      double result = sub_1369E6C(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  int v5 = *(_DWORD *)(v1 + 16);
  if ((v5 & 3) != 0)
  {
    if (v5) {
      double result = sub_13CC858(*(void *)(v1 + 48));
    }
    if ((v5 & 2) != 0) {
      double result = sub_13EE7B0(*(void *)(v1 + 56));
    }
  }
  if ((v5 & 0xFC) != 0)
  {
    *(void *)(v1 + 64) = 0;
    *(void *)(v1 + 72) = 0;
    *(_DWORD *)(v1 + 88) = 0;
    *(void *)(v1 + 80) = 0;
  }
  if ((v5 & 0xF00) != 0)
  {
    *(void *)(v1 + 100) = 0;
    *(void *)(v1 + 92) = 0;
  }
  char v7 = *(unsigned char *)(v1 + 8);
  uint64_t v6 = v1 + 8;
  *(_DWORD *)(v6 + 8) = 0;
  if (v7)
  {
    return sub_188B4AC((uint64_t *)v6);
  }
  return result;
}

char *sub_13EEF68(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v71 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v71, a3[11].i32[1])) {
    goto LABEL_2;
  }
  char v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = v71 + 1;
    unsigned int v9 = *v71;
    if (*v71 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v71, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v71 + 2;
      }
    }
    uint64_t v71 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_87;
        }
        uint64_t v12 = v8 + 1;
        unint64_t v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        int v15 = v13 + (v14 << 7);
        unint64_t v13 = (v15 - 128);
        if (v14 < 0)
        {
          uint64_t v71 = (char *)sub_188C138((uint64_t)v8, (v15 - 128));
          if (!v71) {
            goto LABEL_131;
          }
          unint64_t v13 = v54;
        }
        else
        {
          uint64_t v12 = v8 + 2;
LABEL_13:
          uint64_t v71 = v12;
        }
        if (v13 <= 6)
        {
          *(_DWORD *)(a1 + 16) |= 4u;
          *(_DWORD *)(a1 + 64) = v13;
          goto LABEL_95;
        }
        if (*v7) {
          unint64_t v69 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          unint64_t v69 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v70 = 1;
        goto LABEL_118;
      case 2u:
        if (v9 != 16) {
          goto LABEL_87;
        }
        unint64_t v16 = v8 + 1;
        unint64_t v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_20;
        }
        int v17 = *v16;
        int v18 = v13 + (v17 << 7);
        unint64_t v13 = (v18 - 128);
        if (v17 < 0)
        {
          uint64_t v71 = (char *)sub_188C138((uint64_t)v8, (v18 - 128));
          if (!v71) {
            goto LABEL_131;
          }
          unint64_t v13 = v55;
        }
        else
        {
          unint64_t v16 = v8 + 2;
LABEL_20:
          uint64_t v71 = v16;
        }
        if (v13 <= 0x3C && ((1 << v13) & 0x1004010040100027) != 0)
        {
          *(_DWORD *)(a1 + 16) |= 8u;
          *(_DWORD *)(a1 + 68) = v13;
          goto LABEL_95;
        }
        if (*v7) {
          unint64_t v69 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          unint64_t v69 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v70 = 2;
        goto LABEL_118;
      case 3u:
        if (v9 != 24) {
          goto LABEL_87;
        }
        v5 |= 0x10u;
        uint64_t v20 = v8 + 1;
        int v21 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_30;
        }
        int v22 = *v20;
        int v21 = v21 + (v22 << 7) - 128;
        if (v22 < 0)
        {
          unsigned int v56 = (char *)sub_188C0D0((uint64_t)v8, v21);
          uint64_t v71 = v56;
          *(_DWORD *)(a1 + 72) = v57;
          if (!v56) {
            goto LABEL_131;
          }
        }
        else
        {
          uint64_t v20 = v8 + 2;
LABEL_30:
          uint64_t v71 = v20;
          *(_DWORD *)(a1 + 72) = v21;
        }
        goto LABEL_95;
      case 4u:
        if (v9 != 32) {
          goto LABEL_87;
        }
        v5 |= 0x20u;
        uint64_t v23 = v8 + 1;
        int v24 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_35;
        }
        int v25 = *v23;
        int v24 = v24 + (v25 << 7) - 128;
        if (v25 < 0)
        {
          uint64_t v58 = (char *)sub_188C0D0((uint64_t)v8, v24);
          uint64_t v71 = v58;
          *(_DWORD *)(a1 + 76) = v59;
          if (!v58) {
            goto LABEL_131;
          }
        }
        else
        {
          uint64_t v23 = v8 + 2;
LABEL_35:
          uint64_t v71 = v23;
          *(_DWORD *)(a1 + 76) = v24;
        }
        goto LABEL_95;
      case 5u:
        if (v9 != 40) {
          goto LABEL_87;
        }
        v5 |= 0x80u;
        uint64_t v26 = v8 + 1;
        int v27 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_40;
        }
        int v28 = *v26;
        int v27 = v27 + (v28 << 7) - 128;
        if (v28 < 0)
        {
          uint64_t v60 = (char *)sub_188C0D0((uint64_t)v8, v27);
          uint64_t v71 = v60;
          *(_DWORD *)(a1 + 88) = v61;
          if (!v60) {
            goto LABEL_131;
          }
        }
        else
        {
          uint64_t v26 = v8 + 2;
LABEL_40:
          uint64_t v71 = v26;
          *(_DWORD *)(a1 + 88) = v27;
        }
        goto LABEL_95;
      case 6u:
        if (v9 != 49) {
          goto LABEL_87;
        }
        v5 |= 0x40u;
        *(void *)(a1 + 80) = *(void *)v8;
        uint64_t v71 = v8 + 8;
        goto LABEL_95;
      case 7u:
        if (v9 != 56) {
          goto LABEL_87;
        }
        v5 |= 0x100u;
        uint64_t v29 = v8 + 1;
        int v30 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_47;
        }
        int v31 = *v29;
        int v30 = v30 + (v31 << 7) - 128;
        if (v31 < 0)
        {
          uint64_t v62 = (char *)sub_188C0D0((uint64_t)v8, v30);
          uint64_t v71 = v62;
          *(_DWORD *)(a1 + 92) = v63;
          if (!v62) {
            goto LABEL_131;
          }
        }
        else
        {
          uint64_t v29 = v8 + 2;
LABEL_47:
          uint64_t v71 = v29;
          *(_DWORD *)(a1 + 92) = v30;
        }
        goto LABEL_95;
      case 8u:
        if (v9 != 64) {
          goto LABEL_87;
        }
        v5 |= 0x200u;
        uint64_t v32 = v8 + 1;
        int v33 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_52;
        }
        int v34 = *v32;
        int v33 = v33 + (v34 << 7) - 128;
        if (v34 < 0)
        {
          uint64_t v64 = (char *)sub_188C0D0((uint64_t)v8, v33);
          uint64_t v71 = v64;
          *(_DWORD *)(a1 + 96) = v65;
          if (!v64) {
            goto LABEL_131;
          }
        }
        else
        {
          uint64_t v32 = v8 + 2;
LABEL_52:
          uint64_t v71 = v32;
          *(_DWORD *)(a1 + 96) = v33;
        }
        goto LABEL_95;
      case 9u:
        if (v9 != 72) {
          goto LABEL_87;
        }
        v5 |= 0x400u;
        uint64_t v35 = v8 + 1;
        int v36 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_57;
        }
        int v37 = *v35;
        int v36 = v36 + (v37 << 7) - 128;
        if (v37 < 0)
        {
          uint64_t v66 = (char *)sub_188C0D0((uint64_t)v8, v36);
          uint64_t v71 = v66;
          *(_DWORD *)(a1 + 100) = v67;
          if (!v66) {
            goto LABEL_131;
          }
        }
        else
        {
          uint64_t v35 = v8 + 2;
LABEL_57:
          uint64_t v71 = v35;
          *(_DWORD *)(a1 + 100) = v36;
        }
        goto LABEL_95;
      case 0xAu:
        if (v9 != 82) {
          goto LABEL_87;
        }
        uint64_t v38 = v8 - 1;
        while (1)
        {
          int v39 = (unsigned __int8 *)(v38 + 1);
          uint64_t v71 = v38 + 1;
          uint64_t v40 = *(_DWORD **)(a1 + 40);
          if (v40 && (uint64_t v41 = *(int *)(a1 + 32), (int)v41 < *v40))
          {
            *(_DWORD *)(a1 + 32) = v41 + 1;
            uint64_t v42 = *(void *)&v40[2 * v41 + 2];
          }
          else
          {
            sub_13D6A1C(*(void *)(a1 + 24));
            uint64_t v42 = sub_188CDC8(a1 + 24, v43);
            int v39 = (unsigned __int8 *)v71;
          }
          uint64_t v38 = (char *)sub_13319DC(a3, v42, v39);
          uint64_t v71 = v38;
          if (!v38) {
            goto LABEL_131;
          }
          if (*(void *)a3 <= (unint64_t)v38 || *v38 != 82) {
            goto LABEL_95;
          }
        }
      case 0xBu:
        if (v9 != 90) {
          goto LABEL_87;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v44 = *(void *)(a1 + 48);
        if (!v44)
        {
          uint64_t v45 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v45 = (void *)*v45;
          }
          uint64_t v44 = sub_13DA5AC((uint64_t)v45);
          *(void *)(a1 + 48) = v44;
          uint64_t v8 = v71;
        }
        uint64_t v46 = (char *)sub_13EF668(a3, v44, (unsigned __int8 *)v8);
        goto LABEL_94;
      case 0xCu:
        if (v9 != 98) {
          goto LABEL_87;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v47 = *(void **)(a1 + 56);
        if (!v47)
        {
          uint64_t v48 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v48 = (void *)*v48;
          }
          uint64_t v47 = sub_13F3A88((uint64_t)v48);
          *(void *)(a1 + 56) = v47;
          uint64_t v8 = v71;
        }
        uint64_t v46 = sub_13EF6F8(a3, (uint64_t)v47, (unsigned __int8 *)v8);
        goto LABEL_94;
      case 0xDu:
        if (v9 != 104) {
          goto LABEL_87;
        }
        uint64_t v49 = v8 + 1;
        unint64_t v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_84;
        }
        int v50 = *v49;
        int v51 = v13 + (v50 << 7);
        unint64_t v13 = (v51 - 128);
        if (v50 < 0)
        {
          uint64_t v71 = (char *)sub_188C138((uint64_t)v8, (v51 - 128));
          if (!v71) {
            goto LABEL_131;
          }
          unint64_t v13 = v68;
        }
        else
        {
          uint64_t v49 = v8 + 2;
LABEL_84:
          uint64_t v71 = v49;
        }
        if (v13 > 7)
        {
          if (*v7) {
            unint64_t v69 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            unint64_t v69 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          int v70 = 13;
LABEL_118:
          sub_188C020(v70, v13, v69);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 0x800u;
          *(_DWORD *)(a1 + 104) = v13;
        }
        goto LABEL_95;
      default:
LABEL_87:
        if (v9) {
          BOOL v52 = (v9 & 7) == 4;
        }
        else {
          BOOL v52 = 1;
        }
        if (!v52)
        {
          if (*v7)
          {
            uint64_t v53 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v53 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = v71;
          }
          uint64_t v46 = (char *)sub_1885AC0(v9, v53, v8, a3);
LABEL_94:
          uint64_t v71 = v46;
          if (!v46) {
            goto LABEL_131;
          }
LABEL_95:
          if (sub_11947B8((uint64_t)a3, &v71, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_131:
        }
          uint64_t v71 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v71;
    }
  }
}

uint64_t sub_13EF668(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_13CC914(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_13EF6F8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_13EE840(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_13EF788(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 4) != 0)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 64);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 68);
    unsigned char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v13 = *(_DWORD *)(a1 + 72);
    unsigned char *v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unsigned int v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v16 = *(_DWORD *)(a1 + 76);
    unsigned char *v4 = 32;
    v4[1] = v16;
    if (v16 > 0x7F)
    {
      v4[1] = v16 | 0x80;
      unsigned int v17 = v16 >> 7;
      v4[2] = v16 >> 7;
      v4 += 3;
      if (v16 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v18 = v17 >> 14;
          v17 >>= 7;
          *v4++ = v17;
        }
        while (v18);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x80) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v19 = *(_DWORD *)(a1 + 88);
    unsigned char *v4 = 40;
    v4[1] = v19;
    if (v19 > 0x7F)
    {
      v4[1] = v19 | 0x80;
      unsigned int v20 = v19 >> 7;
      v4[2] = v19 >> 7;
      v4 += 3;
      if (v19 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v21 = v20 >> 14;
          v20 >>= 7;
          *v4++ = v20;
        }
        while (v21);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x40) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v22 = *(void *)(a1 + 80);
    unsigned char *v4 = 49;
    *(void *)(v4 + 1) = v22;
    v4 += 9;
  }
  if ((v6 & 0x100) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v23 = *(_DWORD *)(a1 + 92);
    unsigned char *v4 = 56;
    v4[1] = v23;
    if (v23 > 0x7F)
    {
      v4[1] = v23 | 0x80;
      unsigned int v24 = v23 >> 7;
      v4[2] = v23 >> 7;
      v4 += 3;
      if (v23 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v25 = v24 >> 14;
          v24 >>= 7;
          *v4++ = v24;
        }
        while (v25);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x200) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v26 = *(_DWORD *)(a1 + 96);
    unsigned char *v4 = 64;
    v4[1] = v26;
    if (v26 > 0x7F)
    {
      v4[1] = v26 | 0x80;
      unsigned int v27 = v26 >> 7;
      v4[2] = v26 >> 7;
      v4 += 3;
      if (v26 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v28 = v27 >> 14;
          v27 >>= 7;
          *v4++ = v27;
        }
        while (v28);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x400) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v29 = *(_DWORD *)(a1 + 100);
    unsigned char *v4 = 72;
    v4[1] = v29;
    if (v29 > 0x7F)
    {
      v4[1] = v29 | 0x80;
      unsigned int v30 = v29 >> 7;
      v4[2] = v29 >> 7;
      v4 += 3;
      if (v29 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v31 = v30 >> 14;
          v30 >>= 7;
          *v4++ = v30;
        }
        while (v31);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v32 = *(_DWORD *)(a1 + 32);
  if (v32)
  {
    for (int i = 0; i != v32; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v34 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      unsigned char *v4 = 82;
      unsigned int v35 = *(_DWORD *)(v34 + 20);
      v4[1] = v35;
      if (v35 > 0x7F) {
        int v36 = sub_188A9CC(v35, v4 + 1);
      }
      else {
        int v36 = v4 + 2;
      }
      uint64_t v4 = sub_1374B08(v34, v36, a3);
    }
  }
  if (v6)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v37 = *(void *)(a1 + 48);
    unsigned char *v4 = 90;
    unsigned int v38 = *(_DWORD *)(v37 + 20);
    v4[1] = v38;
    if (v38 > 0x7F) {
      int v39 = sub_188A9CC(v38, v4 + 1);
    }
    else {
      int v39 = v4 + 2;
    }
    uint64_t v4 = sub_13CCBCC(v37, (unint64_t)v39, a3);
    if ((v6 & 2) == 0)
    {
LABEL_71:
      if ((v6 & 0x800) == 0) {
        goto LABEL_91;
      }
      goto LABEL_85;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_71;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v40 = *(void *)(a1 + 56);
  unsigned char *v4 = 98;
  unsigned int v41 = *(_DWORD *)(v40 + 20);
  v4[1] = v41;
  if (v41 > 0x7F) {
    uint64_t v42 = sub_188A9CC(v41, v4 + 1);
  }
  else {
    uint64_t v42 = v4 + 2;
  }
  uint64_t v4 = sub_13EEA48(v40, v42, a3);
  if ((v6 & 0x800) != 0)
  {
LABEL_85:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v43 = *(int *)(a1 + 104);
    unsigned char *v4 = 104;
    v4[1] = v43;
    if (v43 > 0x7F)
    {
      v4[1] = v43 | 0x80;
      unint64_t v44 = v43 >> 7;
      v4[2] = v43 >> 7;
      v4 += 3;
      if (v43 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v45 = v44 >> 14;
          v44 >>= 7;
          *v4++ = v44;
        }
        while (v45);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_91:
  uint64_t v46 = *(void *)(a1 + 8);
  if ((v46 & 1) == 0) {
    return v4;
  }
  unint64_t v48 = v46 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v48 + 31) < 0)
  {
    uint64_t v49 = *(void **)(v48 + 8);
    uint64_t v50 = *(void *)(v48 + 16);
  }
  else
  {
    uint64_t v49 = (void *)(v48 + 8);
    LODWORD(v50) = *(unsigned __int8 *)(v48 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v50)
  {
    uint64_t v51 = (int)v50;
    memcpy(v4, v49, (int)v50);
    v4 += v51;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v49, v50, v4);
}

uint64_t sub_13EFE38(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_1374EEC(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if (!(_BYTE)v8) {
    goto LABEL_21;
  }
  if (v8)
  {
    uint64_t v9 = sub_13CCD60(*(void *)(a1 + 48));
    v2 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v8 & 2) == 0)
    {
LABEL_12:
      if ((v8 & 4) == 0) {
        goto LABEL_13;
      }
      goto LABEL_29;
    }
  }
  else if ((v8 & 2) == 0)
  {
    goto LABEL_12;
  }
  uint64_t v10 = sub_13EEBF4(*(void *)(a1 + 56));
  v2 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 4) == 0)
  {
LABEL_13:
    if ((v8 & 8) == 0) {
      goto LABEL_14;
    }
    goto LABEL_38;
  }
LABEL_29:
  int v11 = *(_DWORD *)(a1 + 64);
  if (v11 < 0) {
    uint64_t v12 = 11;
  }
  else {
    uint64_t v12 = ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v2 += v12;
  if ((v8 & 8) == 0)
  {
LABEL_14:
    if ((v8 & 0x10) == 0) {
      goto LABEL_15;
    }
LABEL_46:
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 72) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v8 & 0x20) == 0) {
      goto LABEL_17;
    }
    goto LABEL_16;
  }
LABEL_38:
  int v15 = *(_DWORD *)(a1 + 68);
  if (v15 < 0) {
    uint64_t v16 = 11;
  }
  else {
    uint64_t v16 = ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v2 += v16;
  if ((v8 & 0x10) != 0) {
    goto LABEL_46;
  }
LABEL_15:
  if ((v8 & 0x20) != 0) {
LABEL_16:
  }
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 76) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_17:
  if ((v8 & 0x40) != 0) {
    v2 += 9;
  }
  if ((v8 & 0x80) != 0) {
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 88) | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_21:
  if ((v8 & 0xF00) == 0) {
    goto LABEL_42;
  }
  if ((v8 & 0x100) != 0)
  {
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 92) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v8 & 0x200) == 0)
    {
LABEL_24:
      if ((v8 & 0x400) == 0) {
        goto LABEL_25;
      }
      goto LABEL_33;
    }
  }
  else if ((v8 & 0x200) == 0)
  {
    goto LABEL_24;
  }
  v2 += ((9 * (__clz(*(_DWORD *)(a1 + 96) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 0x400) == 0)
  {
LABEL_25:
    if ((v8 & 0x800) == 0) {
      goto LABEL_42;
    }
    goto LABEL_34;
  }
LABEL_33:
  v2 += ((9 * (__clz(*(_DWORD *)(a1 + 100) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 0x800) == 0) {
    goto LABEL_42;
  }
LABEL_34:
  int v13 = *(_DWORD *)(a1 + 104);
  if (v13 < 0) {
    uint64_t v14 = 11;
  }
  else {
    uint64_t v14 = ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v2 += v14;
LABEL_42:
  uint64_t v17 = *(void *)(a1 + 8);
  if (v17)
  {
    unint64_t v19 = v17 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v19 + 31) < 0) {
      uint64_t v20 = *(void *)(v19 + 16);
    }
    else {
      uint64_t v20 = *(unsigned __int8 *)(v19 + 31);
    }
    v2 += v20;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

void sub_13F011C(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_1365F80((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    int v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *int v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((_BYTE)v9)
  {
    if (v9)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      int v11 = *(std::string **)(a1 + 48);
      if (!v11)
      {
        uint64_t v12 = *(void *)(a1 + 8);
        int v13 = (void *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          int v13 = (void *)*v13;
        }
        int v11 = (std::string *)sub_13DA5AC((uint64_t)v13);
        *(void *)(a1 + 48) = v11;
      }
      if (*(void *)(a2 + 48)) {
        uint64_t v14 = *(uint64_t (****)())(a2 + 48);
      }
      else {
        uint64_t v14 = &off_2536610;
      }
      sub_12C8C1C(v11, (uint64_t)v14);
      if ((v9 & 2) == 0)
      {
LABEL_7:
        if ((v9 & 4) == 0) {
          goto LABEL_8;
        }
        goto LABEL_42;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_7;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    int v15 = *(void **)(a1 + 56);
    if (!v15)
    {
      uint64_t v16 = *(void *)(a1 + 8);
      uint64_t v17 = (void *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
      if (v16) {
        uint64_t v17 = (void *)*v17;
      }
      int v15 = sub_13F3A88((uint64_t)v17);
      *(void *)(a1 + 56) = v15;
    }
    if (*(void *)(a2 + 56)) {
      unsigned int v18 = *(uint64_t (****)())(a2 + 56);
    }
    else {
      unsigned int v18 = &off_2537188;
    }
    sub_13B8670((uint64_t)v15, (uint64_t)v18);
    if ((v9 & 4) == 0)
    {
LABEL_8:
      if ((v9 & 8) == 0) {
        goto LABEL_9;
      }
      goto LABEL_43;
    }
LABEL_42:
    *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
    if ((v9 & 8) == 0)
    {
LABEL_9:
      if ((v9 & 0x10) == 0) {
        goto LABEL_10;
      }
      goto LABEL_44;
    }
LABEL_43:
    *(_DWORD *)(a1 + 68) = *(_DWORD *)(a2 + 68);
    if ((v9 & 0x10) == 0)
    {
LABEL_10:
      if ((v9 & 0x20) == 0) {
        goto LABEL_11;
      }
      goto LABEL_45;
    }
LABEL_44:
    *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
    if ((v9 & 0x20) == 0)
    {
LABEL_11:
      if ((v9 & 0x40) == 0) {
        goto LABEL_12;
      }
      goto LABEL_46;
    }
LABEL_45:
    *(_DWORD *)(a1 + 76) = *(_DWORD *)(a2 + 76);
    if ((v9 & 0x40) == 0)
    {
LABEL_12:
      if ((v9 & 0x80) == 0)
      {
LABEL_14:
        *(_DWORD *)(a1 + 16) |= v9;
        goto LABEL_15;
      }
LABEL_13:
      *(_DWORD *)(a1 + 88) = *(_DWORD *)(a2 + 88);
      goto LABEL_14;
    }
LABEL_46:
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    if ((v9 & 0x80) == 0) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }
LABEL_15:
  if ((v9 & 0xF00) == 0) {
    goto LABEL_22;
  }
  if ((v9 & 0x100) != 0)
  {
    *(_DWORD *)(a1 + 92) = *(_DWORD *)(a2 + 92);
    if ((v9 & 0x200) == 0)
    {
LABEL_18:
      if ((v9 & 0x400) == 0) {
        goto LABEL_19;
      }
LABEL_50:
      *(_DWORD *)(a1 + 100) = *(_DWORD *)(a2 + 100);
      if ((v9 & 0x800) == 0) {
        goto LABEL_21;
      }
      goto LABEL_20;
    }
  }
  else if ((v9 & 0x200) == 0)
  {
    goto LABEL_18;
  }
  *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
  if ((v9 & 0x400) != 0) {
    goto LABEL_50;
  }
LABEL_19:
  if ((v9 & 0x800) != 0) {
LABEL_20:
  }
    *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
LABEL_21:
  *(_DWORD *)(a1 + 16) |= v9;
LABEL_22:
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_13F0358(uint64_t a1, uint64_t a2)
{
  if (a2 != a1)
  {
    sub_13EEEA0(a1);
    sub_13F011C(a1, a2);
  }
}

uint64_t sub_13F03A4(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  while ((int)v2 >= 1)
  {
    uint64_t v3 = v2 - 1;
    char v4 = sub_136ADBC(*(void *)(*(void *)(a1 + 40) + 8 * v2));
    uint64_t v2 = v3;
    if ((v4 & 1) == 0) {
      return 0;
    }
  }
  if ((*(unsigned char *)(a1 + 16) & 2) == 0) {
    return 1;
  }
  uint64_t result = sub_13EECD8(*(void *)(a1 + 56));
  if (result) {
    return 1;
  }
  return result;
}

__n128 sub_13F0408(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a2 + 8) = v2;
  LODWORD(v2) = *(_DWORD *)(a1 + 16);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a2 + 16) = v2;
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = v4;
  uint64_t v5 = *(void *)(a1 + 40);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = v5;
  uint64_t v6 = *(void *)(a1 + 48);
  uint64_t v7 = *(void *)(a1 + 56);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(void *)(a2 + 48) = v6;
  *(void *)(a2 + 56) = v7;
  uint64_t v8 = *(void *)(a1 + 64);
  uint64_t v9 = *(void *)(a1 + 72);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(void *)(a2 + 64) = v8;
  *(void *)(a2 + 72) = v9;
  uint64_t v10 = *(void *)(a1 + 80);
  uint64_t v11 = *(void *)(a1 + 88);
  __n128 result = *(__n128 *)(a2 + 80);
  *(__n128 *)(a1 + 80) = result;
  *(void *)(a2 + 80) = v10;
  *(void *)(a2 + 88) = v11;
  uint64_t v13 = *(void *)(a1 + 96);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a2 + 96) = v13;
  LODWORD(v13) = *(_DWORD *)(a1 + 104);
  *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
  *(_DWORD *)(a2 + 104) = v13;
  return result;
}

void *sub_13F049C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.ETAResultByType");
}

uint64_t sub_13F04AC(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(a1 + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      sub_140CD94(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(a1 + 32) = 0;
  }
  uint64_t result = sub_188CC00(a1 + 48);
  uint64_t v6 = *(unsigned int *)(a1 + 80);
  if ((int)v6 >= 1)
  {
    uint64_t v7 = (uint64_t *)(*(void *)(a1 + 88) + 8);
    do
    {
      uint64_t v8 = *v7++;
      uint64_t result = sub_14769E0(v8);
      --v6;
    }
    while (v6);
    *(_DWORD *)(a1 + 80) = 0;
  }
  uint64_t v9 = *(unsigned int *)(a1 + 104);
  if ((int)v9 >= 1)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a1 + 112) + 8);
    do
    {
      uint64_t v11 = *v10++;
      uint64_t result = sub_146A460(v11);
      --v9;
    }
    while (v9);
    *(_DWORD *)(a1 + 104) = 0;
  }
  int v12 = *(_DWORD *)(a1 + 16);
  if ((v12 & 7) == 0) {
    goto LABEL_18;
  }
  if ((v12 & 1) == 0)
  {
    if ((v12 & 2) == 0) {
      goto LABEL_16;
    }
    goto LABEL_30;
  }
  unint64_t v15 = *(void *)(a1 + 120) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v15 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v15 = 0;
    *(unsigned char *)(v15 + 23) = 0;
    if ((v12 & 2) != 0) {
      goto LABEL_30;
    }
LABEL_16:
    if ((v12 & 4) == 0) {
      goto LABEL_18;
    }
    goto LABEL_17;
  }
  **(unsigned char **)unint64_t v15 = 0;
  *(void *)(v15 + 8) = 0;
  if ((v12 & 2) == 0) {
    goto LABEL_16;
  }
LABEL_30:
  unint64_t v16 = *(void *)(a1 + 128) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v16 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v16 = 0;
    *(unsigned char *)(v16 + 23) = 0;
    if ((v12 & 4) == 0) {
      goto LABEL_18;
    }
LABEL_17:
    uint64_t result = (uint64_t)sub_15B16B4(*(unsigned char **)(a1 + 136));
    goto LABEL_18;
  }
  **(unsigned char **)unint64_t v16 = 0;
  *(void *)(v16 + 8) = 0;
  if ((v12 & 4) != 0) {
    goto LABEL_17;
  }
LABEL_18:
  if ((v12 & 0xF8) != 0)
  {
    *(void *)(a1 + 144) = 0;
    *(void *)(a1 + 152) = 0;
  }
  if ((v12 & 0x300) != 0)
  {
    *(void *)(a1 + 160) = 0;
    *(_DWORD *)(a1 + 168) = 1;
  }
  char v14 = *(unsigned char *)(a1 + 8);
  uint64_t v13 = a1 + 8;
  *(_DWORD *)(v13 + 8) = 0;
  if (v14)
  {
    return sub_188B4AC((uint64_t *)v13);
  }
  return result;
}

uint64_t sub_13F0628(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)a1 = off_24B1388;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v5 = (uint64_t *)(a1 + 24);
  *(_DWORD *)(a1 + 44) = 0;
  *(void *)(a1 + 28) = 0;
  *(void *)(a1 + 36) = 0;
  *(void *)(a1 + 20) = 0;
  int v6 = *(_DWORD *)(a2 + 32);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 40);
    uint64_t v8 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_148F1D0(v5, v8, (uint64_t *)(v7 + 8), v6, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v9 = *(_DWORD *)(a1 + 32) + v6;
    *(_DWORD *)(a1 + 32) = v9;
    uint64_t v10 = *(int **)(a1 + 40);
    if (*v10 < v9) {
      *uint64_t v10 = v9;
    }
  }
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  int v11 = *(_DWORD *)(a2 + 56);
  if (v11)
  {
    uint64_t v12 = *(void *)(a2 + 64);
    uint64_t v13 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_148F25C((uint64_t *)(a1 + 48), v13, (uint64_t *)(v12 + 8), v11, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v14 = *(_DWORD *)(a1 + 56) + v11;
    *(_DWORD *)(a1 + 56) = v14;
    unint64_t v15 = *(int **)(a1 + 64);
    if (*v15 < v14) {
      int *v15 = v14;
    }
  }
  uint64_t v16 = *(void *)(a2 + 8);
  if (v16) {
    sub_188B4F8(v4, (v16 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  if (*(unsigned char *)(a2 + 16)) {
    operator new();
  }
  *(void *)(a1 + 72) = 0;
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  return a1;
}

void sub_13F07C4()
{
}

uint64_t sub_13F083C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_2537230)
  {
    uint64_t v6 = *(void *)(a1 + 72);
    if (v6)
    {
      sub_146E298(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  sub_148EF3C((void *)(a1 + 48));
  sub_148EEBC((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_13F090C(uint64_t a1)
{
  sub_13F083C(a1);

  operator delete();
}

uint64_t sub_13F0944(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_13EEEA0(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  uint64_t v5 = *(unsigned int *)(v1 + 56);
  if ((int)v5 >= 1)
  {
    uint64_t v6 = (uint64_t *)(*(void *)(v1 + 64) + 8);
    do
    {
      uint64_t v7 = *v6++;
      uint64_t result = sub_13BB1A4(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(v1 + 56) = 0;
  }
  int v8 = *(_DWORD *)(v1 + 16);
  if (v8) {
    uint64_t result = sub_13F04AC(*(void *)(v1 + 72));
  }
  if ((v8 & 0x1E) != 0)
  {
    *(void *)(v1 + 80) = 0;
    *(void *)(v1 + 88) = 0;
  }
  char v10 = *(unsigned char *)(v1 + 8);
  uint64_t v9 = v1 + 8;
  *(_DWORD *)(v9 + 8) = 0;
  if (v10)
  {
    return sub_188B4AC((uint64_t *)v9);
  }
  return result;
}

char *sub_13F0A08(uint64_t a1, char *a2, int32x2_t *a3)
{
  BOOL v52 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v52, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    int v8 = v52 + 1;
    unsigned int v9 = *v52;
    if (*v52 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        int v8 = (char *)sub_188C180((uint64_t)v52, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        int v8 = v52 + 2;
      }
    }
    BOOL v52 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_60;
        }
        uint64_t v12 = v8 + 1;
        unint64_t v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        int v15 = v13 + (v14 << 7);
        unint64_t v13 = (v15 - 128);
        if (v14 < 0)
        {
          BOOL v52 = (char *)sub_188C138((uint64_t)v8, (v15 - 128));
          if (!v52) {
            goto LABEL_85;
          }
          unint64_t v13 = v44;
        }
        else
        {
          uint64_t v12 = v8 + 2;
LABEL_13:
          BOOL v52 = v12;
        }
        if (v13 > 0x3C || ((1 << v13) & 0x1004010040100027) == 0)
        {
          if (*v7) {
            uint64_t v51 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v51 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(1, v13, v51);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 2u;
          *(_DWORD *)(a1 + 80) = v13;
        }
        goto LABEL_68;
      case 2u:
        if (v9 != 16) {
          goto LABEL_60;
        }
        v5 |= 4u;
        uint64_t v17 = v8 + 1;
        int v18 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_23;
        }
        int v19 = *v17;
        int v18 = v18 + (v19 << 7) - 128;
        if (v19 < 0)
        {
          unint64_t v45 = (char *)sub_188C0D0((uint64_t)v8, v18);
          BOOL v52 = v45;
          *(_DWORD *)(a1 + 84) = v46;
          if (!v45) {
            goto LABEL_85;
          }
        }
        else
        {
          uint64_t v17 = v8 + 2;
LABEL_23:
          BOOL v52 = v17;
          *(_DWORD *)(a1 + 84) = v18;
        }
        goto LABEL_68;
      case 3u:
        if (v9 != 24) {
          goto LABEL_60;
        }
        v5 |= 8u;
        uint64_t v20 = v8 + 1;
        int v21 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_28;
        }
        int v22 = *v20;
        int v21 = v21 + (v22 << 7) - 128;
        if (v22 < 0)
        {
          uint64_t v47 = (char *)sub_188C0D0((uint64_t)v8, v21);
          BOOL v52 = v47;
          *(_DWORD *)(a1 + 88) = v48;
          if (!v47) {
            goto LABEL_85;
          }
        }
        else
        {
          uint64_t v20 = v8 + 2;
LABEL_28:
          BOOL v52 = v20;
          *(_DWORD *)(a1 + 88) = v21;
        }
        goto LABEL_68;
      case 4u:
        if (v9 != 34) {
          goto LABEL_60;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v23 = *(void *)(a1 + 72);
        if (!v23)
        {
          unsigned int v24 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            unsigned int v24 = (void *)*v24;
          }
          sub_147937C((uint64_t)v24);
          uint64_t v23 = v25;
          *(void *)(a1 + 72) = v25;
          int v8 = v52;
        }
        unsigned int v26 = (char *)sub_1179468(a3, v23, (unsigned __int8 *)v8);
        goto LABEL_67;
      case 5u:
        if (v9 != 40) {
          goto LABEL_60;
        }
        v5 |= 0x10u;
        unsigned int v27 = v8 + 1;
        int v28 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_39;
        }
        int v29 = *v27;
        int v28 = v28 + (v29 << 7) - 128;
        if (v29 < 0)
        {
          uint64_t v49 = (char *)sub_188C0D0((uint64_t)v8, v28);
          BOOL v52 = v49;
          *(_DWORD *)(a1 + 92) = v50;
          if (!v49) {
            goto LABEL_85;
          }
        }
        else
        {
          unsigned int v27 = v8 + 2;
LABEL_39:
          BOOL v52 = v27;
          *(_DWORD *)(a1 + 92) = v28;
        }
        goto LABEL_68;
      case 6u:
        if (v9 != 50) {
          goto LABEL_60;
        }
        unsigned int v30 = v8 - 1;
        while (1)
        {
          unsigned int v31 = (unsigned __int8 *)(v30 + 1);
          BOOL v52 = v30 + 1;
          int v32 = *(_DWORD **)(a1 + 40);
          if (v32 && (uint64_t v33 = *(int *)(a1 + 32), (int)v33 < *v32))
          {
            *(_DWORD *)(a1 + 32) = v33 + 1;
            uint64_t v34 = *(void *)&v32[2 * v33 + 2];
          }
          else
          {
            uint64_t v35 = sub_13F3B24(*(void *)(a1 + 24));
            uint64_t v34 = sub_188CDC8(a1 + 24, v35);
            unsigned int v31 = (unsigned __int8 *)v52;
          }
          unsigned int v30 = sub_13F0ED4(a3, v34, v31);
          BOOL v52 = v30;
          if (!v30) {
            goto LABEL_85;
          }
          if (*(void *)a3 <= (unint64_t)v30 || *v30 != 50) {
            goto LABEL_68;
          }
        }
      case 7u:
        if (v9 != 58) {
          goto LABEL_60;
        }
        int v36 = v8 - 1;
        while (1)
        {
          uint64_t v37 = (unsigned __int8 *)(v36 + 1);
          BOOL v52 = v36 + 1;
          unsigned int v38 = *(_DWORD **)(a1 + 64);
          if (v38 && (uint64_t v39 = *(int *)(a1 + 56), (int)v39 < *v38))
          {
            *(_DWORD *)(a1 + 56) = v39 + 1;
            uint64_t v40 = *(void *)&v38[2 * v39 + 2];
          }
          else
          {
            uint64_t v41 = sub_13D9664(*(void *)(a1 + 48));
            uint64_t v40 = sub_188CDC8(a1 + 48, v41);
            uint64_t v37 = (unsigned __int8 *)v52;
          }
          int v36 = sub_13F0F64(a3, v40, v37);
          BOOL v52 = v36;
          if (!v36) {
            goto LABEL_85;
          }
          if (*(void *)a3 <= (unint64_t)v36 || *v36 != 58) {
            goto LABEL_68;
          }
        }
      default:
LABEL_60:
        if (v9) {
          BOOL v42 = (v9 & 7) == 4;
        }
        else {
          BOOL v42 = 1;
        }
        if (!v42)
        {
          if (*v7)
          {
            unint64_t v43 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            unint64_t v43 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            int v8 = v52;
          }
          unsigned int v26 = (char *)sub_1885AC0(v9, v43, v8, a3);
LABEL_67:
          BOOL v52 = v26;
          if (!v26) {
            goto LABEL_85;
          }
LABEL_68:
          if (sub_11947B8((uint64_t)a3, &v52, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_85:
        }
          BOOL v52 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v52;
    }
  }
}

char *sub_13F0ED4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_13EEF68(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_13F0F64(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_13BB204(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_13F0FF4(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 80);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 84);
    unsigned char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v13 = *(_DWORD *)(a1 + 88);
    unsigned char *v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unsigned int v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v16 = *(void *)(a1 + 72);
    unsigned char *v4 = 34;
    unsigned int v17 = *(_DWORD *)(v16 + 20);
    v4[1] = v17;
    if (v17 > 0x7F) {
      int v18 = sub_188A9CC(v17, v4 + 1);
    }
    else {
      int v18 = v4 + 2;
    }
    uint64_t v4 = sub_146ECEC(v16, (unint64_t)v18, a3);
  }
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v19 = *(_DWORD *)(a1 + 92);
    unsigned char *v4 = 40;
    v4[1] = v19;
    if (v19 > 0x7F)
    {
      v4[1] = v19 | 0x80;
      unsigned int v20 = v19 >> 7;
      v4[2] = v19 >> 7;
      v4 += 3;
      if (v19 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v21 = v20 >> 14;
          v20 >>= 7;
          *v4++ = v20;
        }
        while (v21);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v22 = *(_DWORD *)(a1 + 32);
  if (v22)
  {
    for (int i = 0; i != v22; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v24 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      unsigned char *v4 = 50;
      unsigned int v25 = *(_DWORD *)(v24 + 20);
      v4[1] = v25;
      if (v25 > 0x7F) {
        unsigned int v26 = sub_188A9CC(v25, v4 + 1);
      }
      else {
        unsigned int v26 = v4 + 2;
      }
      uint64_t v4 = sub_13EF788(v24, (unint64_t)v26, a3);
    }
  }
  int v27 = *(_DWORD *)(a1 + 56);
  if (v27)
  {
    for (int j = 0; j != v27; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v29 = *(void *)(*(void *)(a1 + 64) + 8 * j + 8);
      unsigned char *v4 = 58;
      unsigned int v30 = *(_DWORD *)(v29 + 20);
      v4[1] = v30;
      if (v30 > 0x7F) {
        unsigned int v31 = sub_188A9CC(v30, v4 + 1);
      }
      else {
        unsigned int v31 = v4 + 2;
      }
      uint64_t v4 = sub_13BB3E8(v29, (unint64_t)v31, a3);
    }
  }
  uint64_t v32 = *(void *)(a1 + 8);
  if ((v32 & 1) == 0) {
    return v4;
  }
  unint64_t v34 = v32 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v34 + 31) < 0)
  {
    uint64_t v35 = *(void **)(v34 + 8);
    uint64_t v36 = *(void *)(v34 + 16);
  }
  else
  {
    uint64_t v35 = (void *)(v34 + 8);
    LODWORD(v36) = *(unsigned __int8 *)(v34 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v36)
  {
    uint64_t v37 = (int)v36;
    memcpy(v4, v35, (int)v36);
    v4 += v37;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v35, v36, v4);
}

uint64_t sub_13F1414(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_13EFE38(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(int *)(a1 + 56);
  uint64_t v9 = v2 + v8;
  uint64_t v10 = *(void *)(a1 + 64);
  if (v10) {
    unsigned int v11 = (uint64_t *)(v10 + 8);
  }
  else {
    unsigned int v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_13BB580(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  int v15 = *(_DWORD *)(a1 + 16);
  if ((v15 & 0x1F) == 0) {
    goto LABEL_22;
  }
  if (v15)
  {
    uint64_t v18 = sub_146F320(*(void *)(a1 + 72));
    v9 += v18 + ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v15 & 2) == 0)
    {
LABEL_18:
      if ((v15 & 4) == 0) {
        goto LABEL_19;
      }
LABEL_29:
      v9 += ((9 * (__clz(*(_DWORD *)(a1 + 84) | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v15 & 8) == 0)
      {
LABEL_20:
        if ((v15 & 0x10) == 0) {
          goto LABEL_22;
        }
        goto LABEL_21;
      }
      goto LABEL_30;
    }
  }
  else if ((v15 & 2) == 0)
  {
    goto LABEL_18;
  }
  int v19 = *(_DWORD *)(a1 + 80);
  uint64_t v20 = ((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if (v19 >= 0) {
    uint64_t v21 = v20;
  }
  else {
    uint64_t v21 = 11;
  }
  v9 += v21;
  if ((v15 & 4) != 0) {
    goto LABEL_29;
  }
LABEL_19:
  if ((v15 & 8) == 0) {
    goto LABEL_20;
  }
LABEL_30:
  v9 += ((9 * (__clz(*(_DWORD *)(a1 + 88) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v15 & 0x10) != 0) {
LABEL_21:
  }
    v9 += ((9 * (__clz(*(_DWORD *)(a1 + 92) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_22:
  uint64_t v16 = *(void *)(a1 + 8);
  if (v16)
  {
    unint64_t v22 = v16 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v22 + 31) < 0) {
      uint64_t v23 = *(void *)(v22 + 16);
    }
    else {
      uint64_t v23 = *(unsigned __int8 *)(v22 + 31);
    }
    v9 += v23;
  }
  *(_DWORD *)(a1 + 20) = v9;
  return v9;
}

void sub_13F1610(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_148F1D0((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    uint64_t v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    unsigned int v11 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_148F25C((uint64_t *)(a1 + 48), v11, v10, v9, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v12 = *(_DWORD *)(a1 + 56) + v9;
    *(_DWORD *)(a1 + 56) = v12;
    uint64_t v13 = *(int **)(a1 + 64);
    if (*v13 < v12) {
      int *v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 16);
  if ((v14 & 0x1F) != 0)
  {
    if (v14)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v16 = *(void *)(a1 + 72);
      if (!v16)
      {
        uint64_t v17 = *(void *)(a1 + 8);
        uint64_t v18 = (void *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
        if (v17) {
          uint64_t v18 = (void *)*v18;
        }
        sub_147937C((uint64_t)v18);
        *(void *)(a1 + 72) = v16;
      }
      if (*(void *)(a2 + 72)) {
        int v19 = *(uint64_t (****)())(a2 + 72);
      }
      else {
        int v19 = &off_25398D0;
      }
      sub_13F17EC(v16, (uint64_t)v19);
      if ((v14 & 2) == 0)
      {
LABEL_10:
        if ((v14 & 4) == 0) {
          goto LABEL_11;
        }
        goto LABEL_28;
      }
    }
    else if ((v14 & 2) == 0)
    {
      goto LABEL_10;
    }
    *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
    if ((v14 & 4) == 0)
    {
LABEL_11:
      if ((v14 & 8) == 0) {
        goto LABEL_12;
      }
      goto LABEL_29;
    }
LABEL_28:
    *(_DWORD *)(a1 + 84) = *(_DWORD *)(a2 + 84);
    if ((v14 & 8) == 0)
    {
LABEL_12:
      if ((v14 & 0x10) == 0)
      {
LABEL_14:
        *(_DWORD *)(a1 + 16) |= v14;
        goto LABEL_15;
      }
LABEL_13:
      *(_DWORD *)(a1 + 92) = *(_DWORD *)(a2 + 92);
      goto LABEL_14;
    }
LABEL_29:
    *(_DWORD *)(a1 + 88) = *(_DWORD *)(a2 + 88);
    if ((v14 & 0x10) == 0) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }
LABEL_15:
  uint64_t v15 = *(void *)(a2 + 8);
  if (v15)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v15 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_13F17EC(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_14944B0((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    uint64_t v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    uint64_t v10 = (const std::string **)(*(void *)(a2 + 64) + 8);
    unsigned int v11 = (std::string **)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_188FB98(a1 + 48, v11, v10, v9, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v12 = *(_DWORD *)(a1 + 56) + v9;
    *(_DWORD *)(a1 + 56) = v12;
    uint64_t v13 = *(int **)(a1 + 64);
    if (*v13 < v12) {
      int *v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 80);
  if (v14)
  {
    uint64_t v15 = (uint64_t *)(*(void *)(a2 + 88) + 8);
    uint64_t v16 = (uint64_t *)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_149453C((uint64_t *)(a1 + 72), v16, v15, v14, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v17 = *(_DWORD *)(a1 + 80) + v14;
    *(_DWORD *)(a1 + 80) = v17;
    uint64_t v18 = *(int **)(a1 + 88);
    if (*v18 < v17) {
      *uint64_t v18 = v17;
    }
  }
  int v19 = *(_DWORD *)(a2 + 104);
  if (v19)
  {
    uint64_t v20 = (uint64_t *)(*(void *)(a2 + 112) + 8);
    uint64_t v21 = (std::string **)sub_188CCE4(a1 + 96, *(_DWORD *)(a2 + 104));
    sub_122BC08((std::string *)(a1 + 96), v21, v20, v19, **(_DWORD **)(a1 + 112) - *(_DWORD *)(a1 + 104));
    int v22 = *(_DWORD *)(a1 + 104) + v19;
    *(_DWORD *)(a1 + 104) = v22;
    uint64_t v23 = *(int **)(a1 + 112);
    if (*v23 < v22) {
      *uint64_t v23 = v22;
    }
  }
  int v24 = *(_DWORD *)(a2 + 16);
  if ((_BYTE)v24)
  {
    if (v24)
    {
      unsigned int v26 = (long long *)(*(void *)(a2 + 120) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v27 = *(void *)(a1 + 8);
      int v28 = (uint64_t *)(v27 & 0xFFFFFFFFFFFFFFFCLL);
      if (v27) {
        int v28 = (uint64_t *)*v28;
      }
      sub_1881DF4((std::string **)(a1 + 120), v26, v28);
      if ((v24 & 2) == 0)
      {
LABEL_16:
        if ((v24 & 4) == 0) {
          goto LABEL_17;
        }
        goto LABEL_40;
      }
    }
    else if ((v24 & 2) == 0)
    {
      goto LABEL_16;
    }
    uint64_t v29 = (long long *)(*(void *)(a2 + 128) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v30 = *(void *)(a1 + 8);
    unsigned int v31 = (uint64_t *)(v30 & 0xFFFFFFFFFFFFFFFCLL);
    if (v30) {
      unsigned int v31 = (uint64_t *)*v31;
    }
    sub_1881DF4((std::string **)(a1 + 128), v29, v31);
    if ((v24 & 4) == 0)
    {
LABEL_17:
      if ((v24 & 8) == 0) {
        goto LABEL_18;
      }
      goto LABEL_48;
    }
LABEL_40:
    *(_DWORD *)(a1 + 16) |= 4u;
    uint64_t v32 = *(void *)(a1 + 136);
    if (!v32)
    {
      uint64_t v33 = *(void *)(a1 + 8);
      unint64_t v34 = (void *)(v33 & 0xFFFFFFFFFFFFFFFCLL);
      if (v33) {
        unint64_t v34 = (void *)*v34;
      }
      uint64_t v32 = sub_15C19EC((uint64_t)v34);
      *(void *)(a1 + 136) = v32;
    }
    if (*(void *)(a2 + 136)) {
      uint64_t v35 = *(uint64_t (****)())(a2 + 136);
    }
    else {
      uint64_t v35 = &off_253F208;
    }
    sub_15B1E3C(v32, (uint64_t)v35);
    if ((v24 & 8) == 0)
    {
LABEL_18:
      if ((v24 & 0x10) == 0) {
        goto LABEL_19;
      }
      goto LABEL_49;
    }
LABEL_48:
    *(_DWORD *)(a1 + 144) = *(_DWORD *)(a2 + 144);
    if ((v24 & 0x10) == 0)
    {
LABEL_19:
      if ((v24 & 0x20) == 0) {
        goto LABEL_20;
      }
      goto LABEL_50;
    }
LABEL_49:
    *(_DWORD *)(a1 + 148) = *(_DWORD *)(a2 + 148);
    if ((v24 & 0x20) == 0)
    {
LABEL_20:
      if ((v24 & 0x40) == 0) {
        goto LABEL_21;
      }
      goto LABEL_51;
    }
LABEL_50:
    *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
    if ((v24 & 0x40) == 0)
    {
LABEL_21:
      if ((v24 & 0x80) == 0)
      {
LABEL_23:
        *(_DWORD *)(a1 + 16) |= v24;
        goto LABEL_24;
      }
LABEL_22:
      *(_DWORD *)(a1 + 156) = *(_DWORD *)(a2 + 156);
      goto LABEL_23;
    }
LABEL_51:
    *(unsigned char *)(a1 + 153) = *(unsigned char *)(a2 + 153);
    if ((v24 & 0x80) == 0) {
      goto LABEL_23;
    }
    goto LABEL_22;
  }
LABEL_24:
  if ((v24 & 0x300) != 0)
  {
    if ((v24 & 0x100) != 0) {
      *(void *)(a1 + 160) = *(void *)(a2 + 160);
    }
    if ((v24 & 0x200) != 0) {
      *(_DWORD *)(a1 + 168) = *(_DWORD *)(a2 + 168);
    }
    *(_DWORD *)(a1 + 16) |= v24;
  }
  uint64_t v25 = *(void *)(a2 + 8);
  if (v25)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v25 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_13F1B3C(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  while ((int)v2 >= 1)
  {
    uint64_t v3 = v2 - 1;
    char v4 = sub_13F03A4(*(void *)(*(void *)(a1 + 40) + 8 * v2));
    uint64_t v2 = v3;
    if ((v4 & 1) == 0) {
      return 0;
    }
  }
  uint64_t result = sub_13F1BAC(a1 + 48);
  if (result)
  {
    if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
      return 1;
    }
    uint64_t result = sub_13F1C1C(*(void *)(a1 + 72));
    if (result) {
      return 1;
    }
  }
  return result;
}

uint64_t sub_13F1BAC(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 8);
  if ((int)v1 < 1) {
    return 1;
  }
  uint64_t v3 = v1 + 1;
  for (unsigned int i = v1 - 1; ; --i)
  {
    uint64_t v5 = *(void *)(*(void *)(a1 + 16) + 8 * i + 8);
    if (*(unsigned char *)(v5 + 16))
    {
      uint64_t result = sub_13BB038(*(void *)(v5 + 24));
      if (!result) {
        break;
      }
    }
    if (--v3 <= 1) {
      return 1;
    }
  }
  return result;
}

uint64_t sub_13F1C1C(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 8) == 0) {
    return 0;
  }
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  while ((int)v2 >= 1)
  {
    uint64_t v3 = v2 - 1;
    char v4 = sub_140DEF4(*(void *)(*(void *)(a1 + 40) + 8 * v2));
    uint64_t v2 = v3;
    if ((v4 & 1) == 0) {
      return 0;
    }
  }
  uint64_t result = sub_146F6A0(a1 + 72);
  if (result)
  {
    for (uint64_t i = *(unsigned int *)(a1 + 104); (int)i >= 1; --i)
    {
      uint64_t v7 = *(void *)(*(void *)(a1 + 112) + 8 * i);
      if ((~*(_DWORD *)(v7 + 16) & 3) != 0) {
        return 0;
      }
    }
    if ((*(unsigned char *)(a1 + 16) & 4) == 0) {
      return 1;
    }
    uint64_t result = sub_15B1FC0(*(void *)(a1 + 136));
    if (result) {
      return 1;
    }
  }
  return result;
}

void *sub_13F1CC0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.ETAResult");
}

uint64_t sub_13F1CD0(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  *(void *)(a1 + 8) = v5;
  *(void *)a1 = off_24B1408;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = a2;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = a2;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = a2;
  *(void *)(a1 + 104) = 0;
  *(void *)(a1 + 112) = 0;
  *(void *)(a1 + 120) = &qword_2550250;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_DWORD *)(a1 + 160) = 0;
  return a1;
}

void sub_13F1D60(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_13F1D94(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  char v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = a1 + 16;
  *(void *)a1 = off_24B1408;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  uint64_t v6 = (uint64_t *)(a1 + 48);
  *(_DWORD *)(a1 + 68) = 0;
  *(void *)(a1 + 52) = 0;
  *(void *)(a1 + 60) = 0;
  *(void *)(a1 + 44) = 0;
  int v7 = *(_DWORD *)(a2 + 56);
  if (v7)
  {
    uint64_t v8 = *(void *)(a2 + 64);
    int v9 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_148F2E8(v6, v9, (uint64_t *)(v8 + 8), v7, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v10 = *(_DWORD *)(a1 + 56) + v7;
    *(_DWORD *)(a1 + 56) = v10;
    unsigned int v11 = *(int **)(a1 + 64);
    if (*v11 < v10) {
      *unsigned int v11 = v10;
    }
  }
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0;
  int v12 = *(_DWORD *)(a2 + 80);
  if (v12)
  {
    uint64_t v13 = *(void *)(a2 + 88);
    int v14 = (std::string **)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_148F154((uint64_t *)(a1 + 72), v14, (uint64_t *)(v13 + 8), v12, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v15 = *(_DWORD *)(a1 + 80) + v12;
    *(_DWORD *)(a1 + 80) = v15;
    uint64_t v16 = *(int **)(a1 + 88);
    if (*v16 < v15) {
      *uint64_t v16 = v15;
    }
  }
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 104) = 0;
  *(void *)(a1 + 112) = 0;
  int v17 = *(_DWORD *)(a2 + 104);
  if (v17)
  {
    uint64_t v18 = *(void *)(a2 + 112);
    int v19 = (uint64_t *)sub_188CCE4(a1 + 96, *(_DWORD *)(a2 + 104));
    sub_148F2E8((uint64_t *)(a1 + 96), v19, (uint64_t *)(v18 + 8), v17, **(_DWORD **)(a1 + 112) - *(_DWORD *)(a1 + 104));
    int v20 = *(_DWORD *)(a1 + 104) + v17;
    *(_DWORD *)(a1 + 104) = v20;
    uint64_t v21 = *(int **)(a1 + 112);
    if (*v21 < v20) {
      int *v21 = v20;
    }
  }
  uint64_t v22 = *(void *)(a2 + 8);
  if (v22) {
    sub_188B4F8(v4, (v22 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v5, a2 + 16);
  *(void *)(a1 + 120) = &qword_2550250;
  int v23 = *(_DWORD *)(a2 + 40);
  if (v23)
  {
    int v24 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      int v24 = (uint64_t *)*v24;
    }
    sub_1881DF4((std::string **)(a1 + 120), (long long *)(*(void *)(a2 + 120) & 0xFFFFFFFFFFFFFFFELL), v24);
    int v23 = *(_DWORD *)(a2 + 40);
  }
  if ((v23 & 2) != 0) {
    operator new();
  }
  *(void *)(a1 + 128) = 0;
  if ((v23 & 4) != 0) {
    operator new();
  }
  *(void *)(a1 + 136) = 0;
  if ((v23 & 8) != 0) {
    operator new();
  }
  *(void *)(a1 + 144) = 0;
  if ((v23 & 0x10) != 0) {
    operator new();
  }
  *(void *)(a1 + 152) = 0;
  *(_DWORD *)(a1 + 160) = *(_DWORD *)(a2 + 160);
  return a1;
}

void sub_13F209C()
{
}

void *sub_13F216C(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  char v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_13F221C((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  sub_148EFBC(a1 + 12);
  sub_148EE3C(a1 + 9);
  sub_148EFBC(a1 + 6);
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void ***sub_13F221C(uint64_t a1)
{
  uint64_t v3 = *(uint64_t **)(a1 + 120);
  uint64_t result = (void ***)(a1 + 120);
  if (v3 != &qword_2550250) {
    sub_1881C6C(result);
  }
  if ((uint64_t (***)())a1 != &off_2537290)
  {
    uint64_t v4 = *(void *)(a1 + 128);
    if (v4)
    {
      sub_146E298(v4);
      operator delete();
    }
    uint64_t v5 = *(void *)(a1 + 136);
    if (v5)
    {
      sub_13F083C(v5);
      operator delete();
    }
    uint64_t v6 = *(void **)(a1 + 144);
    if (v6)
    {
      sub_13060E0(v6);
      operator delete();
    }
    uint64_t result = *(void ****)(a1 + 152);
    if (result)
    {
      sub_13D5C74(result);
      operator delete();
    }
  }
  return result;
}

void sub_13F2300(void *a1)
{
  sub_13F216C(a1);

  operator delete();
}

uint64_t sub_13F2338(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  uint64_t v3 = *(unsigned int *)(a1 + 56);
  if ((int)v3 >= 1)
  {
    uint64_t v4 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = sub_13F0944(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 56) = 0;
  }
  uint64_t v6 = *(unsigned int *)(a1 + 80);
  if ((int)v6 >= 1)
  {
    int v7 = (uint64_t *)(*(void *)(a1 + 88) + 8);
    do
    {
      uint64_t v8 = *v7++;
      uint64_t result = sub_13C09AC(v8);
      --v6;
    }
    while (v6);
    *(_DWORD *)(a1 + 80) = 0;
  }
  uint64_t v9 = *(unsigned int *)(a1 + 104);
  if ((int)v9 >= 1)
  {
    int v10 = (uint64_t *)(*(void *)(a1 + 112) + 8);
    do
    {
      uint64_t v11 = *v10++;
      uint64_t result = sub_13F0944(v11);
      --v9;
    }
    while (v9);
    *(_DWORD *)(a1 + 104) = 0;
  }
  int v12 = *(_DWORD *)(a1 + 40);
  if ((v12 & 0x1F) != 0)
  {
    if ((v12 & 1) == 0)
    {
      if ((v12 & 2) == 0) {
        goto LABEL_16;
      }
LABEL_24:
      uint64_t result = sub_13F04AC(*(void *)(a1 + 128));
      if ((v12 & 4) == 0)
      {
LABEL_17:
        if ((v12 & 8) == 0) {
          goto LABEL_18;
        }
        goto LABEL_26;
      }
LABEL_25:
      uint64_t result = sub_13F0944(*(void *)(a1 + 136));
      if ((v12 & 8) == 0)
      {
LABEL_18:
        if ((v12 & 0x10) == 0) {
          goto LABEL_29;
        }
        goto LABEL_27;
      }
LABEL_26:
      uint64_t result = sub_130611C(*(void *)(a1 + 144));
      if ((v12 & 0x10) == 0) {
        goto LABEL_29;
      }
LABEL_27:
      uint64_t v14 = *(void *)(a1 + 152);
      char v15 = *(unsigned char *)(v14 + 8);
      uint64_t result = v14 + 8;
      *(_DWORD *)(result + 16) = 0;
      *(_DWORD *)(result + 8) = 0;
      if (v15) {
        uint64_t result = sub_188B4AC((uint64_t *)result);
      }
      goto LABEL_29;
    }
    unint64_t v13 = *(void *)(a1 + 120) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v13 + 23) < 0)
    {
      **(unsigned char **)unint64_t v13 = 0;
      *(void *)(v13 + 8) = 0;
      if ((v12 & 2) != 0) {
        goto LABEL_24;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v13 = 0;
      *(unsigned char *)(v13 + 23) = 0;
      if ((v12 & 2) != 0) {
        goto LABEL_24;
      }
    }
LABEL_16:
    if ((v12 & 4) == 0) {
      goto LABEL_17;
    }
    goto LABEL_25;
  }
LABEL_29:
  char v17 = *(unsigned char *)(a1 + 8);
  uint64_t v16 = a1 + 8;
  *(_DWORD *)(v16 + 152) = 0;
  *(_DWORD *)(v16 + 32) = 0;
  if (v17)
  {
    return sub_188B4AC((uint64_t *)v16);
  }
  return result;
}

uint64_t sub_13F24A4(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)BOOL v52 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v52, a3[11].i32[1])) {
    return *(void *)v52;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    int v7 = (unsigned __int8 *)(*(void *)v52 + 1);
    unsigned int v8 = **(unsigned char **)v52;
    if ((char)**(unsigned char **)v52 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if ((char)*v7 < 0)
      {
        int v7 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v52, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        int v7 = (unsigned __int8 *)(*(void *)v52 + 2);
      }
    }
    *(void *)BOOL v52 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 8) {
          goto LABEL_77;
        }
        uint64_t v11 = (char *)(v7 + 1);
        unint64_t v12 = *v7;
        if (((char)*v7 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v13 = *v11;
        int v14 = v12 + (v13 << 7);
        unint64_t v12 = (v14 - 128);
        if (v13 < 0)
        {
          *(void *)BOOL v52 = sub_188C138((uint64_t)v7, (v14 - 128));
          if (!*(void *)v52) {
            return 0;
          }
          unint64_t v12 = v50;
        }
        else
        {
          uint64_t v11 = (char *)(v7 + 2);
LABEL_13:
          *(void *)BOOL v52 = v11;
        }
        if (v12 > 0x3C || ((1 << v12) & 0x1004010040100027) == 0)
        {
          if (*v6) {
            uint64_t v51 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v51 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(1, v12, v51);
        }
        else
        {
          *(_DWORD *)(a1 + 40) |= 0x20u;
          *(_DWORD *)(a1 + 160) = v12;
        }
        goto LABEL_87;
      case 2u:
        if (v8 != 18) {
          goto LABEL_77;
        }
        uint64_t v16 = (char *)(v7 - 1);
        while (1)
        {
          char v17 = (unsigned __int8 *)(v16 + 1);
          *(void *)BOOL v52 = v16 + 1;
          uint64_t v18 = *(_DWORD **)(a1 + 64);
          if (v18 && (uint64_t v19 = *(int *)(a1 + 56), (int)v19 < *v18))
          {
            *(_DWORD *)(a1 + 56) = v19 + 1;
            uint64_t v20 = *(void *)&v18[2 * v19 + 2];
          }
          else
          {
            sub_13F3BC8(*(void *)(a1 + 48));
            uint64_t v20 = sub_188CDC8(a1 + 48, v21);
            char v17 = *(unsigned __int8 **)v52;
          }
          uint64_t v16 = sub_13F2A50(a3, v20, v17);
          *(void *)BOOL v52 = v16;
          if (!v16) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v16 || *v16 != 18) {
            goto LABEL_87;
          }
        }
      case 3u:
        if (v8 != 26) {
          goto LABEL_77;
        }
        *(_DWORD *)(a1 + 40) |= 2u;
        uint64_t v22 = *(void *)(a1 + 128);
        if (!v22)
        {
          int v23 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            int v23 = (void *)*v23;
          }
          sub_147937C((uint64_t)v23);
          uint64_t v22 = v24;
          *(void *)(a1 + 128) = v24;
          int v7 = *(unsigned __int8 **)v52;
        }
        uint64_t v25 = sub_1179468(a3, v22, v7);
        goto LABEL_86;
      case 4u:
        if (v8 != 34) {
          goto LABEL_77;
        }
        unsigned int v26 = (char *)(v7 - 1);
        while (1)
        {
          uint64_t v27 = (unsigned __int8 *)(v26 + 1);
          *(void *)BOOL v52 = v26 + 1;
          int v28 = *(_DWORD **)(a1 + 88);
          if (v28 && (uint64_t v29 = *(int *)(a1 + 80), (int)v29 < *v28))
          {
            *(_DWORD *)(a1 + 80) = v29 + 1;
            uint64_t v30 = *(void *)&v28[2 * v29 + 2];
          }
          else
          {
            sub_13D9AD0(*(void *)(a1 + 72));
            uint64_t v30 = sub_188CDC8(a1 + 72, v31);
            uint64_t v27 = *(unsigned __int8 **)v52;
          }
          unsigned int v26 = sub_13E7908(a3, v30, v27);
          *(void *)BOOL v52 = v26;
          if (!v26) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v26 || *v26 != 34) {
            goto LABEL_87;
          }
        }
      case 5u:
        if (v8 != 42) {
          goto LABEL_77;
        }
        *(_DWORD *)(a1 + 40) |= 4u;
        uint64_t v32 = *(void *)(a1 + 136);
        if (!v32)
        {
          uint64_t v33 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v33 = (void *)*v33;
          }
          sub_13F3BC8((uint64_t)v33);
          uint64_t v32 = v34;
          *(void *)(a1 + 136) = v34;
          int v7 = *(unsigned __int8 **)v52;
        }
        uint64_t v25 = (uint64_t)sub_13F2A50(a3, v32, v7);
        goto LABEL_86;
      case 6u:
        if (v8 != 50) {
          goto LABEL_77;
        }
        uint64_t v35 = (char *)(v7 - 1);
        while (1)
        {
          uint64_t v36 = (unsigned __int8 *)(v35 + 1);
          *(void *)BOOL v52 = v35 + 1;
          uint64_t v37 = *(_DWORD **)(a1 + 112);
          if (v37 && (uint64_t v38 = *(int *)(a1 + 104), (int)v38 < *v37))
          {
            *(_DWORD *)(a1 + 104) = v38 + 1;
            uint64_t v39 = *(void *)&v37[2 * v38 + 2];
          }
          else
          {
            sub_13F3BC8(*(void *)(a1 + 96));
            uint64_t v39 = sub_188CDC8(a1 + 96, v40);
            uint64_t v36 = *(unsigned __int8 **)v52;
          }
          uint64_t v35 = sub_13F2A50(a3, v39, v36);
          *(void *)BOOL v52 = v35;
          if (!v35) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v35 || *v35 != 50) {
            goto LABEL_87;
          }
        }
      case 7u:
        if (v8 != 58) {
          goto LABEL_77;
        }
        *(_DWORD *)(a1 + 40) |= 8u;
        uint64_t v41 = *(void *)(a1 + 144);
        if (!v41)
        {
          BOOL v42 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            BOOL v42 = (void *)*v42;
          }
          uint64_t v41 = sub_13064B8((uint64_t)v42);
          *(void *)(a1 + 144) = v41;
          int v7 = *(unsigned __int8 **)v52;
        }
        uint64_t v25 = (uint64_t)sub_1354680(a3, v41, v7);
        goto LABEL_86;
      case 8u:
        if (v8 != 66) {
          goto LABEL_77;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        uint64_t v43 = *(void *)(a1 + 8);
        unint64_t v44 = (uint64_t *)(v43 & 0xFFFFFFFFFFFFFFFCLL);
        if (v43) {
          unint64_t v44 = (uint64_t *)*v44;
        }
        unint64_t v45 = (std::string *)sub_1880F84((void *)(a1 + 120), v44);
        uint64_t v25 = (uint64_t)sub_188C244(v45, *(char **)v52, (uint64_t)a3);
        goto LABEL_86;
      case 9u:
        if (v8 != 74) {
          goto LABEL_77;
        }
        *(_DWORD *)(a1 + 40) |= 0x10u;
        uint64_t v46 = *(void *)(a1 + 152);
        if (!v46)
        {
          uint64_t v47 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v47 = (void *)*v47;
          }
          uint64_t v46 = sub_13DAE28((uint64_t)v47);
          *(void *)(a1 + 152) = v46;
          int v7 = *(unsigned __int8 **)v52;
        }
        uint64_t v25 = (uint64_t)sub_13E7A28(a3, v46, v7);
        goto LABEL_86;
      default:
LABEL_77:
        if (v8) {
          BOOL v48 = (v8 & 7) == 4;
        }
        else {
          BOOL v48 = 1;
        }
        if (!v48)
        {
          if (v8 - 8000 > 0x647)
          {
            if (*v6)
            {
              uint64_t v49 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              uint64_t v49 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              int v7 = *(unsigned __int8 **)v52;
            }
            uint64_t v25 = (uint64_t)sub_1885AC0(v8, v49, (char *)v7, a3);
          }
          else
          {
            uint64_t v25 = (uint64_t)sub_18859DC((uint64_t **)(a1 + 16), v8, (char *)v7, (uint64_t)&off_2537290, (uint64_t *)(a1 + 8), a3);
          }
LABEL_86:
          *(void *)BOOL v52 = v25;
          if (!v25) {
            return 0;
          }
LABEL_87:
          if (sub_11947B8((uint64_t)a3, (char **)v52, a3[11].i32[1])) {
            return *(void *)v52;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return *(void *)v52;
    }
  }
}

char *sub_13F2A50(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_13F0A08(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_13F2AE0(uint64_t a1, char *a2, unint64_t *a3)
{
  uint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if ((v6 & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unint64_t v7 = *(int *)(a1 + 160);
    char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v10 = *(_DWORD *)(a1 + 56);
  if (v10)
  {
    for (int i = 0; i != v10; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v12 = *(void *)(*(void *)(a1 + 64) + 8 * i + 8);
      char *v4 = 18;
      unsigned int v13 = *(_DWORD *)(v12 + 20);
      v4[1] = v13;
      if (v13 > 0x7F) {
        int v14 = sub_188A9CC(v13, v4 + 1);
      }
      else {
        int v14 = v4 + 2;
      }
      uint64_t v4 = sub_13F0FF4(v12, (unint64_t)v14, a3);
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v15 = *(void *)(a1 + 128);
    char *v4 = 26;
    unsigned int v16 = *(_DWORD *)(v15 + 20);
    v4[1] = v16;
    if (v16 > 0x7F) {
      char v17 = sub_188A9CC(v16, v4 + 1);
    }
    else {
      char v17 = v4 + 2;
    }
    uint64_t v4 = sub_146ECEC(v15, (unint64_t)v17, a3);
  }
  int v18 = *(_DWORD *)(a1 + 80);
  if (v18)
  {
    for (int j = 0; j != v18; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v20 = *(void *)(*(void *)(a1 + 88) + 8 * j + 8);
      char *v4 = 34;
      unsigned int v21 = *(_DWORD *)(v20 + 20);
      v4[1] = v21;
      if (v21 > 0x7F) {
        uint64_t v22 = sub_188A9CC(v21, v4 + 1);
      }
      else {
        uint64_t v22 = v4 + 2;
      }
      uint64_t v4 = sub_13C0C18(v20, (unint64_t)v22, a3);
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v23 = *(void *)(a1 + 136);
    char *v4 = 42;
    unsigned int v24 = *(_DWORD *)(v23 + 20);
    v4[1] = v24;
    if (v24 > 0x7F) {
      uint64_t v25 = sub_188A9CC(v24, v4 + 1);
    }
    else {
      uint64_t v25 = v4 + 2;
    }
    uint64_t v4 = sub_13F0FF4(v23, (unint64_t)v25, a3);
  }
  int v26 = *(_DWORD *)(a1 + 104);
  if (v26)
  {
    for (int k = 0; k != v26; ++k)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v28 = *(void *)(*(void *)(a1 + 112) + 8 * k + 8);
      char *v4 = 50;
      unsigned int v29 = *(_DWORD *)(v28 + 20);
      v4[1] = v29;
      if (v29 > 0x7F) {
        uint64_t v30 = sub_188A9CC(v29, v4 + 1);
      }
      else {
        uint64_t v30 = v4 + 2;
      }
      uint64_t v4 = sub_13F0FF4(v28, (unint64_t)v30, a3);
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v31 = *(void *)(a1 + 144);
    char *v4 = 58;
    unsigned int v32 = *(_DWORD *)(v31 + 20);
    v4[1] = v32;
    if (v32 > 0x7F) {
      uint64_t v33 = sub_188A9CC(v32, v4 + 1);
    }
    else {
      uint64_t v33 = v4 + 2;
    }
    uint64_t v4 = sub_13062B4(v31, (unint64_t)v33, a3);
    if ((v6 & 1) == 0)
    {
LABEL_48:
      if ((v6 & 0x10) == 0) {
        goto LABEL_63;
      }
      goto LABEL_57;
    }
  }
  else if ((v6 & 1) == 0)
  {
    goto LABEL_48;
  }
  uint64_t v4 = sub_117A0AC(a3, 8, (const void **)(*(void *)(a1 + 120) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x10) == 0) {
    goto LABEL_63;
  }
LABEL_57:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v34 = *(void *)(a1 + 152);
  char *v4 = 74;
  unsigned int v35 = *(_DWORD *)(v34 + 20);
  v4[1] = v35;
  if (v35 > 0x7F) {
    uint64_t v36 = sub_188A9CC(v35, v4 + 1);
  }
  else {
    uint64_t v36 = v4 + 2;
  }
  uint64_t v4 = sub_13D5EE4(v34, (unint64_t)v36, a3);
LABEL_63:
  if (*(_WORD *)(a1 + 26)) {
    uint64_t v4 = sub_1886844(a1 + 16, 1000, 1201, v4, a3);
  }
  uint64_t v37 = *(void *)(a1 + 8);
  if ((v37 & 1) == 0) {
    return v4;
  }
  unint64_t v39 = v37 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v39 + 31) < 0)
  {
    uint64_t v40 = *(void **)(v39 + 8);
    uint64_t v41 = *(void *)(v39 + 16);
  }
  else
  {
    uint64_t v40 = (void *)(v39 + 8);
    LODWORD(v41) = *(unsigned __int8 *)(v39 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v41)
  {
    uint64_t v42 = (int)v41;
    memcpy(v4, v40, (int)v41);
    v4 += v42;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v40, v41, v4);
}

uint64_t sub_13F2F8C(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(int *)(a1 + 56);
  uint64_t v4 = v2 + v3;
  uint64_t v5 = *(void *)(a1 + 64);
  if (v5) {
    int v6 = (uint64_t *)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = sub_13F1414(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  uint64_t v10 = *(int *)(a1 + 80);
  uint64_t v11 = v4 + v10;
  uint64_t v12 = *(void *)(a1 + 88);
  if (v12) {
    unsigned int v13 = (uint64_t *)(v12 + 8);
  }
  else {
    unsigned int v13 = 0;
  }
  if (v10)
  {
    uint64_t v14 = 8 * v10;
    do
    {
      uint64_t v15 = *v13++;
      uint64_t v16 = sub_13C0DBC(v15);
      v11 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6);
      v14 -= 8;
    }
    while (v14);
  }
  uint64_t v17 = *(int *)(a1 + 104);
  uint64_t v18 = v11 + v17;
  uint64_t v19 = *(void *)(a1 + 112);
  if (v19) {
    uint64_t v20 = (uint64_t *)(v19 + 8);
  }
  else {
    uint64_t v20 = 0;
  }
  if (v17)
  {
    uint64_t v21 = 8 * v17;
    do
    {
      uint64_t v22 = *v20++;
      uint64_t v23 = sub_13F1414(v22);
      v18 += v23 + ((9 * (__clz(v23 | 1) ^ 0x1F) + 73) >> 6);
      v21 -= 8;
    }
    while (v21);
  }
  int v24 = *(_DWORD *)(a1 + 40);
  if ((v24 & 0x3F) != 0)
  {
    if (v24)
    {
      unint64_t v30 = *(void *)(a1 + 120) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v31 = *(unsigned __int8 *)(v30 + 23);
      uint64_t v32 = *(void *)(v30 + 8);
      if ((v31 & 0x80u) == 0) {
        uint64_t v32 = v31;
      }
      v18 += v32 + ((9 * (__clz(v32 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v24 & 2) == 0)
      {
LABEL_22:
        if ((v24 & 4) == 0) {
          goto LABEL_23;
        }
        goto LABEL_36;
      }
    }
    else if ((v24 & 2) == 0)
    {
      goto LABEL_22;
    }
    uint64_t v33 = sub_146F320(*(void *)(a1 + 128));
    v18 += v33 + ((9 * (__clz(v33 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v24 & 4) == 0)
    {
LABEL_23:
      if ((v24 & 8) == 0) {
        goto LABEL_24;
      }
      goto LABEL_37;
    }
LABEL_36:
    uint64_t v34 = sub_13F1414(*(void *)(a1 + 136));
    v18 += v34 + ((9 * (__clz(v34 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v24 & 8) == 0)
    {
LABEL_24:
      if ((v24 & 0x10) == 0) {
        goto LABEL_25;
      }
      goto LABEL_38;
    }
LABEL_37:
    uint64_t v35 = sub_13063DC(*(void *)(a1 + 144));
    v18 += v35 + ((9 * (__clz(v35 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v24 & 0x10) == 0)
    {
LABEL_25:
      if ((v24 & 0x20) == 0) {
        goto LABEL_30;
      }
LABEL_26:
      int v25 = *(_DWORD *)(a1 + 160);
      uint64_t v26 = ((9 * (__clz(v25 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if (v25 >= 0) {
        uint64_t v27 = v26;
      }
      else {
        uint64_t v27 = 11;
      }
      v18 += v27;
      goto LABEL_30;
    }
LABEL_38:
    uint64_t v36 = sub_13D600C(*(void *)(a1 + 152));
    v18 += v36 + ((9 * (__clz(v36 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v24 & 0x20) == 0) {
      goto LABEL_30;
    }
    goto LABEL_26;
  }
LABEL_30:
  uint64_t v28 = *(void *)(a1 + 8);
  if (v28)
  {
    unint64_t v37 = v28 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v37 + 31) < 0) {
      uint64_t v38 = *(void *)(v37 + 16);
    }
    else {
      uint64_t v38 = *(unsigned __int8 *)(v37 + 31);
    }
    v18 += v38;
  }
  *(_DWORD *)(a1 + 44) = v18;
  return v18;
}

void sub_13F323C(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 56);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    int v6 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_148F2E8((uint64_t *)(a1 + 48), v6, v5, v4, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v7 = *(_DWORD *)(a1 + 56) + v4;
    *(_DWORD *)(a1 + 56) = v7;
    uint64_t v8 = *(int **)(a1 + 64);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 80);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 88) + 8);
    uint64_t v11 = (std::string **)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_148F154((uint64_t *)(a1 + 72), v11, v10, v9, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v12 = *(_DWORD *)(a1 + 80) + v9;
    *(_DWORD *)(a1 + 80) = v12;
    unsigned int v13 = *(int **)(a1 + 88);
    if (*v13 < v12) {
      int *v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 104);
  if (v14)
  {
    uint64_t v15 = (uint64_t *)(*(void *)(a2 + 112) + 8);
    uint64_t v16 = (uint64_t *)sub_188CCE4(a1 + 96, *(_DWORD *)(a2 + 104));
    sub_148F2E8((uint64_t *)(a1 + 96), v16, v15, v14, **(_DWORD **)(a1 + 112) - *(_DWORD *)(a1 + 104));
    int v17 = *(_DWORD *)(a1 + 104) + v14;
    *(_DWORD *)(a1 + 104) = v17;
    uint64_t v18 = *(int **)(a1 + 112);
    if (*v18 < v17) {
      *uint64_t v18 = v17;
    }
  }
  int v19 = *(_DWORD *)(a2 + 40);
  if ((v19 & 0x3F) != 0)
  {
    if (v19)
    {
      uint64_t v21 = (long long *)(*(void *)(a2 + 120) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 40) |= 1u;
      uint64_t v22 = *(void *)(a1 + 8);
      uint64_t v23 = (uint64_t *)(v22 & 0xFFFFFFFFFFFFFFFCLL);
      if (v22) {
        uint64_t v23 = (uint64_t *)*v23;
      }
      sub_1881DF4((std::string **)(a1 + 120), v21, v23);
      if ((v19 & 2) == 0)
      {
LABEL_13:
        if ((v19 & 4) == 0) {
          goto LABEL_14;
        }
        goto LABEL_34;
      }
    }
    else if ((v19 & 2) == 0)
    {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 40) |= 2u;
    uint64_t v24 = *(void *)(a1 + 128);
    if (!v24)
    {
      uint64_t v25 = *(void *)(a1 + 8);
      uint64_t v26 = (void *)(v25 & 0xFFFFFFFFFFFFFFFCLL);
      if (v25) {
        uint64_t v26 = (void *)*v26;
      }
      sub_147937C((uint64_t)v26);
      *(void *)(a1 + 128) = v24;
    }
    if (*(void *)(a2 + 128)) {
      uint64_t v27 = *(uint64_t (****)())(a2 + 128);
    }
    else {
      uint64_t v27 = &off_25398D0;
    }
    sub_13F17EC(v24, (uint64_t)v27);
    if ((v19 & 4) == 0)
    {
LABEL_14:
      if ((v19 & 8) == 0) {
        goto LABEL_15;
      }
      goto LABEL_42;
    }
LABEL_34:
    *(_DWORD *)(a1 + 40) |= 4u;
    uint64_t v28 = *(void *)(a1 + 136);
    if (!v28)
    {
      uint64_t v29 = *(void *)(a1 + 8);
      unint64_t v30 = (void *)(v29 & 0xFFFFFFFFFFFFFFFCLL);
      if (v29) {
        unint64_t v30 = (void *)*v30;
      }
      sub_13F3BC8((uint64_t)v30);
      *(void *)(a1 + 136) = v28;
    }
    if (*(void *)(a2 + 136)) {
      uint64_t v31 = *(uint64_t (****)())(a2 + 136);
    }
    else {
      uint64_t v31 = &off_2537230;
    }
    sub_13F1610(v28, (uint64_t)v31);
    if ((v19 & 8) == 0)
    {
LABEL_15:
      if ((v19 & 0x10) == 0) {
        goto LABEL_16;
      }
      goto LABEL_50;
    }
LABEL_42:
    *(_DWORD *)(a1 + 40) |= 8u;
    uint64_t v32 = *(std::string **)(a1 + 144);
    if (!v32)
    {
      uint64_t v33 = *(void *)(a1 + 8);
      uint64_t v34 = (void *)(v33 & 0xFFFFFFFFFFFFFFFCLL);
      if (v33) {
        uint64_t v34 = (void *)*v34;
      }
      uint64_t v32 = (std::string *)sub_13064B8((uint64_t)v34);
      *(void *)(a1 + 144) = v32;
    }
    if (*(void *)(a2 + 144)) {
      uint64_t v35 = *(uint64_t (****)())(a2 + 144);
    }
    else {
      uint64_t v35 = &off_25324B8;
    }
    sub_11A7934(v32, (uint64_t)v35);
    if ((v19 & 0x10) == 0)
    {
LABEL_16:
      if ((v19 & 0x20) == 0)
      {
LABEL_18:
        *(_DWORD *)(a1 + 40) |= v19;
        goto LABEL_19;
      }
LABEL_17:
      *(_DWORD *)(a1 + 160) = *(_DWORD *)(a2 + 160);
      goto LABEL_18;
    }
LABEL_50:
    *(_DWORD *)(a1 + 40) |= 0x10u;
    uint64_t v36 = *(std::string **)(a1 + 152);
    if (!v36)
    {
      uint64_t v37 = *(void *)(a1 + 8);
      uint64_t v38 = (void *)(v37 & 0xFFFFFFFFFFFFFFFCLL);
      if (v37) {
        uint64_t v38 = (void *)*v38;
      }
      uint64_t v36 = (std::string *)sub_13DAE28((uint64_t)v38);
      *(void *)(a1 + 152) = v36;
    }
    if (*(void *)(a2 + 152)) {
      unint64_t v39 = *(uint64_t (****)())(a2 + 152);
    }
    else {
      unint64_t v39 = &off_25369C8;
    }
    sub_11A7934(v36, (uint64_t)v39);
    if ((v19 & 0x20) == 0) {
      goto LABEL_18;
    }
    goto LABEL_17;
  }
LABEL_19:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v20 = *(void *)(a2 + 8);
  if (v20)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v20 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_13F3580(uint64_t a1, uint64_t a2)
{
  if (a2 != a1)
  {
    sub_13F2338(a1);
    sub_13F323C(a1, a2);
  }
}

uint64_t sub_13F35CC(uint64_t a1)
{
  uint64_t result = sub_18856CC(a1 + 16);
  if (result)
  {
    uint64_t v3 = *(unsigned int *)(a1 + 56);
    while ((int)v3 >= 1)
    {
      uint64_t v4 = v3 - 1;
      char v5 = sub_13F1B3C(*(void *)(*(void *)(a1 + 64) + 8 * v3));
      uint64_t v3 = v4;
      if ((v5 & 1) == 0) {
        return 0;
      }
    }
    uint64_t v6 = *(unsigned int *)(a1 + 104);
    while ((int)v6 >= 1)
    {
      uint64_t v7 = v6 - 1;
      char v8 = sub_13F1B3C(*(void *)(*(void *)(a1 + 112) + 8 * v6));
      uint64_t v6 = v7;
      if ((v8 & 1) == 0) {
        return 0;
      }
    }
    int v9 = *(_DWORD *)(a1 + 40);
    if ((v9 & 2) != 0)
    {
      uint64_t result = sub_13F1C1C(*(void *)(a1 + 128));
      if (!result) {
        return result;
      }
      int v9 = *(_DWORD *)(a1 + 40);
    }
    if ((v9 & 4) == 0) {
      return 1;
    }
    uint64_t result = sub_13F1B3C(*(void *)(a1 + 136));
    if (result) {
      return 1;
    }
  }
  return result;
}

__n128 sub_13F3678(uint64_t a1, uint64_t a2)
{
  sub_1885338((uint64_t *)(a1 + 16), (uint64_t *)(a2 + 16));
  uint64_t v4 = *(void *)(a1 + 8);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a2 + 8) = v4;
  LODWORD(v4) = *(_DWORD *)(a1 + 40);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a2 + 40) = v4;
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(a1 + 56);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(void *)(a2 + 48) = v5;
  *(void *)(a2 + 56) = v6;
  uint64_t v7 = *(void *)(a1 + 64);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a2 + 64) = v7;
  uint64_t v8 = *(void *)(a1 + 72);
  uint64_t v9 = *(void *)(a1 + 80);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(void *)(a2 + 72) = v8;
  *(void *)(a2 + 80) = v9;
  uint64_t v10 = *(void *)(a1 + 88);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a2 + 88) = v10;
  uint64_t v11 = *(void *)(a1 + 96);
  uint64_t v12 = *(void *)(a1 + 104);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(void *)(a2 + 96) = v11;
  *(void *)(a2 + 104) = v12;
  uint64_t v13 = *(void *)(a1 + 112);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a2 + 112) = v13;
  uint64_t v14 = *(void *)(a2 + 120);
  *(void *)(a2 + 120) = *(void *)(a1 + 120);
  *(void *)(a1 + 120) = v14;
  uint64_t v15 = *(void *)(a1 + 128);
  uint64_t v16 = *(void *)(a1 + 136);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(void *)(a2 + 128) = v15;
  *(void *)(a2 + 136) = v16;
  uint64_t v17 = *(void *)(a1 + 144);
  uint64_t v18 = *(void *)(a1 + 152);
  __n128 result = *(__n128 *)(a2 + 144);
  *(__n128 *)(a1 + 144) = result;
  *(void *)(a2 + 144) = v17;
  *(void *)(a2 + 152) = v18;
  LODWORD(v17) = *(_DWORD *)(a1 + 160);
  *(_DWORD *)(a1 + 160) = *(_DWORD *)(a2 + 160);
  *(_DWORD *)(a2 + 160) = v17;
  return result;
}

void *sub_13F3768@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.ETAResponse");
}

uint64_t sub_13F3778(uint64_t a1)
{
  if (!a1)
  {
    sub_148F374();
  }

  return sub_13DAEA4(v3, a1, 0);
}

uint64_t sub_13F37D4(uint64_t a1)
{
  if (!a1)
  {
    sub_148F3E0();
  }

  return sub_13DBE70(v3, a1, 0);
}

double sub_13F3830(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t v2 = off_24B1008;
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = 0;
  *(void *)(v2 + 40) = 0;
  *(void *)(v2 + 48) = a1;
  *(void *)(v2 + 56) = 0;
  *(void *)(v2 + 64) = 0;
  *(void *)(v2 + 72) = a1;
  *(void *)(v2 + 80) = 0;
  *(void *)(v2 + 88) = 0;
  *(void *)(v2 + 96) = a1;
  double result = 0.0;
  *(_OWORD *)(v2 + 104) = 0u;
  *(_OWORD *)(v2 + 120) = 0u;
  *(_DWORD *)(v2 + 136) = 0;
  return result;
}

uint64_t sub_13F38F8(uint64_t a1)
{
  if (!a1)
  {
    sub_148F44C();
  }

  return sub_13E1294(v3, a1, 0);
}

uint64_t sub_13F3954(uint64_t a1)
{
  if (!a1)
  {
    sub_148F4B8();
  }

  return sub_13E6538(v3, a1, 0);
}

uint64_t sub_13F39B0(uint64_t a1)
{
  if (!a1)
  {
    sub_148F524();
  }

  return sub_13E8F18(v3, a1, 0);
}

uint64_t sub_13F3A0C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24B1208;
  *(void *)(result + 16) = 0;
  *(_DWORD *)(result + 24) = 0;
  return result;
}

void *sub_13F3A88(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  void *result = off_24B1288;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = 0;
  return result;
}

uint64_t sub_13F3B24(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24B1308;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(_OWORD *)(result + 32) = 0u;
  *(_OWORD *)(result + 48) = 0u;
  *(_OWORD *)(result + 64) = 0u;
  *(_OWORD *)(result + 80) = 0u;
  *(_OWORD *)(result + 92) = 0u;
  return result;
}

double sub_13F3BC8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t v2 = off_24B1388;
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = 0;
  *(void *)(v2 + 40) = 0;
  *(void *)(v2 + 48) = a1;
  double result = 0.0;
  *(_OWORD *)(v2 + 56) = 0u;
  *(_OWORD *)(v2 + 72) = 0u;
  *(void *)(v2 + 88) = 0;
  return result;
}

uint64_t sub_13F3C7C(uint64_t a1)
{
  if (!a1)
  {
    sub_148F590();
  }

  return sub_13F1CD0(v3, a1, 0);
}

uint64_t sub_13F3CD8(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  if ((uint64_t (***)())a1 != &off_2537338 && *(void *)(a1 + 24))
  {
    sub_15B9F30();
    operator delete();
  }
  if (*(void *)(a1 + 8)) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_13F3D90(uint64_t a1)
{
  sub_13F3CD8(a1);

  operator delete();
}

uint64_t sub_13F3DC8(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if (v2) {
    double result = sub_15B9F6C(*(void *)(result + 24));
  }
  if ((v2 & 0xFE) != 0)
  {
    *(_DWORD *)(v1 + 64) = 0;
    *(_OWORD *)(v1 + 32) = 0u;
    *(_OWORD *)(v1 + 48) = 0u;
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_13F3E38(uint64_t a1, char *a2, int32x2_t *a3)
{
  BOOL v48 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v48, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = v48 + 1;
    unsigned int v9 = *v48;
    if (*v48 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v48, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v48 + 2;
      }
    }
    BOOL v48 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 9) {
          goto LABEL_49;
        }
        v5 |= 2u;
        *(void *)(a1 + 32) = *(void *)v8;
        BOOL v48 = v8 + 8;
        goto LABEL_57;
      case 2u:
        if (v9 != 18) {
          goto LABEL_49;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void **)(a1 + 24);
        if (!v12)
        {
          uint64_t v13 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v13 = (void *)*v13;
          }
          uint64_t v12 = sub_15C2014((uint64_t)v13);
          *(void *)(a1 + 24) = v12;
          uint64_t v8 = v48;
        }
        uint64_t v14 = sub_11EAA5C(a3, (uint64_t)v12, (unsigned __int8 *)v8);
        goto LABEL_56;
      case 3u:
        if (v9 != 24) {
          goto LABEL_49;
        }
        v5 |= 4u;
        uint64_t v15 = v8 + 1;
        uint64_t v16 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_21;
        }
        int v17 = *v15;
        uint64_t v16 = v16 + (v17 << 7) - 128;
        if (v17 < 0)
        {
          uint64_t v36 = (char *)sub_188C138((uint64_t)v8, v16);
          BOOL v48 = v36;
          *(void *)(a1 + 40) = v37;
          if (!v36) {
            goto LABEL_78;
          }
        }
        else
        {
          uint64_t v15 = v8 + 2;
LABEL_21:
          BOOL v48 = v15;
          *(void *)(a1 + 40) = v16;
        }
        goto LABEL_57;
      case 4u:
        if (v9 != 32) {
          goto LABEL_49;
        }
        uint64_t v18 = v8 + 1;
        unint64_t v19 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_26;
        }
        int v20 = *v18;
        int v21 = v19 + (v20 << 7);
        unint64_t v19 = (v21 - 128);
        if (v20 < 0)
        {
          BOOL v48 = (char *)sub_188C138((uint64_t)v8, (v21 - 128));
          if (!v48) {
            goto LABEL_78;
          }
          unint64_t v19 = v38;
        }
        else
        {
          uint64_t v18 = v8 + 2;
LABEL_26:
          BOOL v48 = v18;
        }
        if (v19 > 3)
        {
          if (*v7) {
            uint64_t v47 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v47 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(4, v19, v47);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 8u;
          *(_DWORD *)(a1 + 48) = v19;
        }
        goto LABEL_57;
      case 5u:
        if (v9 != 40) {
          goto LABEL_49;
        }
        v5 |= 0x10u;
        uint64_t v23 = v8 + 1;
        LODWORD(v22) = *v8;
        if ((v22 & 0x80) == 0) {
          goto LABEL_33;
        }
        int v24 = *v23;
        uint64_t v22 = v22 + (v24 << 7) - 128;
        if (v24 < 0)
        {
          unint64_t v39 = (char *)sub_188C138((uint64_t)v8, v22);
          BOOL v48 = v39;
          *(_DWORD *)(a1 + 52) = v40;
          if (!v39) {
            goto LABEL_78;
          }
        }
        else
        {
          uint64_t v23 = v8 + 2;
LABEL_33:
          BOOL v48 = v23;
          *(_DWORD *)(a1 + 52) = v22;
        }
        goto LABEL_57;
      case 6u:
        if (v9 != 48) {
          goto LABEL_49;
        }
        v5 |= 0x20u;
        uint64_t v26 = v8 + 1;
        LODWORD(v25) = *v8;
        if ((v25 & 0x80) == 0) {
          goto LABEL_38;
        }
        int v27 = *v26;
        uint64_t v25 = v25 + (v27 << 7) - 128;
        if (v27 < 0)
        {
          uint64_t v41 = (char *)sub_188C138((uint64_t)v8, v25);
          BOOL v48 = v41;
          *(_DWORD *)(a1 + 56) = v42;
          if (!v41) {
            goto LABEL_78;
          }
        }
        else
        {
          uint64_t v26 = v8 + 2;
LABEL_38:
          BOOL v48 = v26;
          *(_DWORD *)(a1 + 56) = v25;
        }
        goto LABEL_57;
      case 7u:
        if (v9 != 56) {
          goto LABEL_49;
        }
        v5 |= 0x40u;
        uint64_t v29 = v8 + 1;
        LODWORD(v28) = *v8;
        if ((v28 & 0x80) == 0) {
          goto LABEL_43;
        }
        int v30 = *v29;
        uint64_t v28 = v28 + (v30 << 7) - 128;
        if (v30 < 0)
        {
          uint64_t v43 = (char *)sub_188C138((uint64_t)v8, v28);
          BOOL v48 = v43;
          *(_DWORD *)(a1 + 60) = v44;
          if (!v43) {
            goto LABEL_78;
          }
        }
        else
        {
          uint64_t v29 = v8 + 2;
LABEL_43:
          BOOL v48 = v29;
          *(_DWORD *)(a1 + 60) = v28;
        }
        goto LABEL_57;
      case 8u:
        if (v9 != 64) {
          goto LABEL_49;
        }
        v5 |= 0x80u;
        uint64_t v32 = v8 + 1;
        LODWORD(v31) = *v8;
        if ((v31 & 0x80) == 0) {
          goto LABEL_48;
        }
        int v33 = *v32;
        uint64_t v31 = v31 + (v33 << 7) - 128;
        if (v33 < 0)
        {
          unint64_t v45 = (char *)sub_188C138((uint64_t)v8, v31);
          BOOL v48 = v45;
          *(_DWORD *)(a1 + 64) = v46;
          if (!v45) {
            goto LABEL_78;
          }
        }
        else
        {
          uint64_t v32 = v8 + 2;
LABEL_48:
          BOOL v48 = v32;
          *(_DWORD *)(a1 + 64) = v31;
        }
        goto LABEL_57;
      default:
LABEL_49:
        if (v9) {
          BOOL v34 = (v9 & 7) == 4;
        }
        else {
          BOOL v34 = 1;
        }
        if (!v34)
        {
          if (*v7)
          {
            uint64_t v35 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v35 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = v48;
          }
          uint64_t v14 = (char *)sub_1885AC0(v9, v35, v8, a3);
LABEL_56:
          BOOL v48 = v14;
          if (!v14) {
            goto LABEL_78;
          }
LABEL_57:
          if (sub_11947B8((uint64_t)a3, &v48, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_78:
        }
          BOOL v48 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v48;
    }
  }
}

unsigned char *sub_13F427C(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 32);
    unsigned char *v4 = 9;
    *(void *)(v4 + 1) = v7;
    v4 += 9;
    if ((v6 & 1) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_20;
      }
      goto LABEL_14;
    }
  }
  else if ((v6 & 1) == 0)
  {
    goto LABEL_3;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v8 = *(void *)(a1 + 24);
  unsigned char *v4 = 18;
  unsigned int v9 = *(_DWORD *)(v8 + 20);
  v4[1] = v9;
  if (v9 > 0x7F) {
    unsigned int v10 = sub_188A9CC(v9, v4 + 1);
  }
  else {
    unsigned int v10 = v4 + 2;
  }
  char v4 = sub_15BA180(v8, (unint64_t)v10, a3);
  if ((v6 & 4) != 0)
  {
LABEL_14:
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v11 = *(void *)(a1 + 40);
    unsigned char *v4 = 24;
    v4[1] = v11;
    if (v11 > 0x7F)
    {
      v4[1] = v11 | 0x80;
      unint64_t v12 = v11 >> 7;
      v4[2] = v11 >> 7;
      v4 += 3;
      if (v11 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v13 = v12 >> 14;
          v12 >>= 7;
          *v4++ = v12;
        }
        while (v13);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_20:
  if ((v6 & 8) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v14 = *(int *)(a1 + 48);
    unsigned char *v4 = 32;
    v4[1] = v14;
    if (v14 > 0x7F)
    {
      v4[1] = v14 | 0x80;
      unint64_t v15 = v14 >> 7;
      v4[2] = v14 >> 7;
      v4 += 3;
      if (v14 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v16 = v15 >> 14;
          v15 >>= 7;
          *v4++ = v15;
        }
        while (v16);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v17 = *(int *)(a1 + 52);
    unsigned char *v4 = 40;
    v4[1] = v17;
    if (v17 > 0x7F)
    {
      v4[1] = v17 | 0x80;
      unint64_t v18 = v17 >> 7;
      v4[2] = v17 >> 7;
      v4 += 3;
      if (v17 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v19 = v18 >> 14;
          v18 >>= 7;
          *v4++ = v18;
        }
        while (v19);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x20) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v20 = *(int *)(a1 + 56);
    unsigned char *v4 = 48;
    v4[1] = v20;
    if (v20 > 0x7F)
    {
      v4[1] = v20 | 0x80;
      unint64_t v21 = v20 >> 7;
      v4[2] = v20 >> 7;
      v4 += 3;
      if (v20 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v22 = v21 >> 14;
          v21 >>= 7;
          *v4++ = v21;
        }
        while (v22);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x40) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v23 = *(int *)(a1 + 60);
    unsigned char *v4 = 56;
    v4[1] = v23;
    if (v23 > 0x7F)
    {
      v4[1] = v23 | 0x80;
      unint64_t v24 = v23 >> 7;
      v4[2] = v23 >> 7;
      v4 += 3;
      if (v23 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v25 = v24 >> 14;
          v24 >>= 7;
          *v4++ = v24;
        }
        while (v25);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x80) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v26 = *(int *)(a1 + 64);
    unsigned char *v4 = 64;
    v4[1] = v26;
    if (v26 > 0x7F)
    {
      v4[1] = v26 | 0x80;
      unint64_t v27 = v26 >> 7;
      v4[2] = v26 >> 7;
      v4 += 3;
      if (v26 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v28 = v27 >> 14;
          v27 >>= 7;
          *v4++ = v27;
        }
        while (v28);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v29 = *(void *)(a1 + 8);
  if ((v29 & 1) == 0) {
    return v4;
  }
  unint64_t v31 = v29 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v31 + 31) < 0)
  {
    uint64_t v32 = *(void **)(v31 + 8);
    uint64_t v33 = *(void *)(v31 + 16);
  }
  else
  {
    uint64_t v32 = (void *)(v31 + 8);
    LODWORD(v33) = *(unsigned __int8 *)(v31 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v33)
  {
    uint64_t v34 = (int)v33;
    memcpy(v4, v32, (int)v33);
    v4 += v34;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v32, v33, v4);
}

uint64_t sub_13F46C4(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 16);
  if (!v2)
  {
    uint64_t result = 0;
    goto LABEL_37;
  }
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v5 = sub_15BA324(*(void *)(a1 + 24));
    uint64_t v3 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  else
  {
    uint64_t v3 = 0;
  }
  if ((v2 & 2) != 0) {
    uint64_t result = v3 + 9;
  }
  else {
    uint64_t result = v3;
  }
  if ((v2 & 4) != 0)
  {
    result += ((9 * (__clz(*(void *)(a1 + 40) | 1) ^ 0x3F) + 73) >> 6) + 1;
    if ((v2 & 8) == 0)
    {
LABEL_11:
      if ((v2 & 0x10) == 0) {
        goto LABEL_12;
      }
      goto LABEL_21;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_11;
  }
  int v6 = *(_DWORD *)(a1 + 48);
  if (v6 < 0) {
    uint64_t v7 = 11;
  }
  else {
    uint64_t v7 = ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  result += v7;
  if ((v2 & 0x10) == 0)
  {
LABEL_12:
    if ((v2 & 0x20) == 0) {
      goto LABEL_13;
    }
    goto LABEL_25;
  }
LABEL_21:
  int v8 = *(_DWORD *)(a1 + 52);
  if (v8 < 0) {
    uint64_t v9 = 11;
  }
  else {
    uint64_t v9 = ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  result += v9;
  if ((v2 & 0x20) == 0)
  {
LABEL_13:
    if ((v2 & 0x40) == 0) {
      goto LABEL_14;
    }
    goto LABEL_29;
  }
LABEL_25:
  int v10 = *(_DWORD *)(a1 + 56);
  if (v10 < 0) {
    uint64_t v11 = 11;
  }
  else {
    uint64_t v11 = ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  result += v11;
  if ((v2 & 0x40) == 0)
  {
LABEL_14:
    if ((v2 & 0x80) == 0) {
      goto LABEL_37;
    }
    goto LABEL_33;
  }
LABEL_29:
  int v12 = *(_DWORD *)(a1 + 60);
  if (v12 < 0) {
    uint64_t v13 = 11;
  }
  else {
    uint64_t v13 = ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  result += v13;
  if (v2 < 0)
  {
LABEL_33:
    int v14 = *(_DWORD *)(a1 + 64);
    if (v14 < 0) {
      uint64_t v15 = 11;
    }
    else {
      uint64_t v15 = ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    result += v15;
  }
LABEL_37:
  uint64_t v16 = *(void *)(a1 + 8);
  if (v16)
  {
    unint64_t v17 = v16 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v17 + 31) < 0) {
      uint64_t v18 = *(void *)(v17 + 16);
    }
    else {
      uint64_t v18 = *(unsigned __int8 *)(v17 + 31);
    }
    result += v18;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

std::string *sub_13F48A4(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((_BYTE)v4)
  {
    if (v4)
    {
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      data = (std::string *)result[1].__r_.__value_.__l.__data_;
      if (!data)
      {
        std::string::size_type size = v3->__r_.__value_.__l.__size_;
        int v8 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
        if (size) {
          int v8 = (void *)*v8;
        }
        data = (std::string *)sub_15C2014((uint64_t)v8);
        v3[1].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      }
      if (*(void *)(a2 + 24)) {
        uint64_t v9 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        uint64_t v9 = &off_253F530;
      }
      uint64_t result = sub_1113E40(data, (uint64_t)v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_25;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    v3[1].__r_.__value_.__l.__size_ = *(void *)(a2 + 32);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_26;
    }
LABEL_25:
    v3[1].__r_.__value_.__r.__words[2] = *(void *)(a2 + 40);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0) {
        goto LABEL_7;
      }
      goto LABEL_27;
    }
LABEL_26:
    LODWORD(v3[2].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 48);
    if ((v4 & 0x10) == 0)
    {
LABEL_7:
      if ((v4 & 0x20) == 0) {
        goto LABEL_8;
      }
      goto LABEL_28;
    }
LABEL_27:
    HIDWORD(v3[2].__r_.__value_.__r.__words[0]) = *(_DWORD *)(a2 + 52);
    if ((v4 & 0x20) == 0)
    {
LABEL_8:
      if ((v4 & 0x40) == 0) {
        goto LABEL_9;
      }
      goto LABEL_29;
    }
LABEL_28:
    LODWORD(v3[2].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 56);
    if ((v4 & 0x40) == 0)
    {
LABEL_9:
      if ((v4 & 0x80) == 0)
      {
LABEL_11:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
        goto LABEL_12;
      }
LABEL_10:
      LODWORD(v3[2].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 64);
      goto LABEL_11;
    }
LABEL_29:
    HIDWORD(v3[2].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 60);
    if ((v4 & 0x80) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
LABEL_12:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

BOOL sub_13F49DC(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 1;
  }
  BOOL result = sub_15BA3C8(*(void *)(a1 + 24));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_13F4A08@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.PlaceSearchFeedbackRequest");
}

double sub_13F4A18(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = &off_24B1488;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_DWORD *)(v2 + 64) = 0;
  return result;
}

BOOL sub_13F4A9C(unsigned int a1)
{
  return a1 < 4;
}

BOOL sub_13F4AA8(unsigned int a1)
{
  return a1 < 3;
}

BOOL sub_13F4AB4(int a1)
{
  return (a1 - 1) < 0xC;
}

uint64_t sub_13F4AC4(unsigned int a1)
{
  return (a1 < 0x1A) & (0x3FF9FFFu >> a1);
}

BOOL sub_13F4AE0(int a1)
{
  return (a1 - 3) < 3;
}

BOOL sub_13F4AF0(unsigned int a1)
{
  return a1 < 0xD;
}

BOOL sub_13F4AFC(int a1)
{
  return ((a1 + 1) & 0xFFFFFFFD) == 0;
}

BOOL sub_13F4B0C(int a1)
{
  return (a1 - 1) < 4;
}

BOOL sub_13F4B1C(int a1)
{
  return (a1 - 1) < 2;
}

BOOL sub_13F4B2C(unsigned int a1)
{
  return a1 < 4;
}

BOOL sub_13F4B38(int a1)
{
  return (a1 + 1) < 5;
}

uint64_t sub_13F4B4C(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 3) != 0)
  {
    if ((v2 & 1) == 0) {
      goto LABEL_5;
    }
    unint64_t v3 = *(void *)(result + 24) & 0xFFFFFFFFFFFFFFFELL;
    if ((*(char *)(v3 + 23) & 0x80000000) == 0)
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
LABEL_5:
      if ((v2 & 2) == 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
    **(unsigned char **)unint64_t v3 = 0;
    *(void *)(v3 + 8) = 0;
    if ((v2 & 2) != 0) {
LABEL_6:
    }
      double result = sub_1430CB0(*(void *)(result + 32));
  }
LABEL_7:
  if ((v2 & 0xC) != 0)
  {
    *(unsigned char *)(v1 + 48) = 0;
    *(void *)(v1 + 40) = 0;
  }
  char v5 = *(unsigned char *)(v1 + 8);
  uint64_t v4 = v1 + 8;
  *(_DWORD *)(v4 + 8) = 0;
  if (v5)
  {
    return sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

uint64_t sub_13F4BF0(uint64_t a1)
{
  sub_18843A4((unsigned char *)(a1 + 16));
  *(_DWORD *)(a1 + 48) = 0;
  uint64_t v2 = *(unsigned int *)(a1 + 72);
  if ((int)v2 >= 1)
  {
    unint64_t v3 = (uint64_t *)(*(void *)(a1 + 80) + 8);
    do
    {
      uint64_t v4 = *v3++;
      sub_143D8BC(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(a1 + 72) = 0;
  }
  uint64_t v5 = *(unsigned int *)(a1 + 96);
  if ((int)v5 >= 1)
  {
    int v6 = (uint64_t *)(*(void *)(a1 + 104) + 8);
    do
    {
      uint64_t v7 = *v6++;
      sub_143D8BC(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(a1 + 96) = 0;
  }
  uint64_t v8 = *(unsigned int *)(a1 + 120);
  if ((int)v8 >= 1)
  {
    uint64_t v9 = (uint64_t *)(*(void *)(a1 + 128) + 8);
    do
    {
      uint64_t v10 = *v9++;
      sub_1417070(v10);
      --v8;
    }
    while (v8);
    *(_DWORD *)(a1 + 120) = 0;
  }
  uint64_t v11 = *(unsigned int *)(a1 + 144);
  if ((int)v11 >= 1)
  {
    int v12 = (uint64_t *)(*(void *)(a1 + 152) + 8);
    do
    {
      uint64_t v13 = *v12++;
      sub_15B2C80(v13);
      --v11;
    }
    while (v11);
    *(_DWORD *)(a1 + 144) = 0;
  }
  uint64_t v14 = *(unsigned int *)(a1 + 168);
  if ((int)v14 >= 1)
  {
    uint64_t v15 = (uint64_t *)(*(void *)(a1 + 176) + 8);
    do
    {
      uint64_t v16 = *v15++;
      sub_143D0D8(v16);
      --v14;
    }
    while (v14);
    *(_DWORD *)(a1 + 168) = 0;
  }
  uint64_t v17 = *(unsigned int *)(a1 + 192);
  if ((int)v17 >= 1)
  {
    uint64_t v18 = (uint64_t *)(*(void *)(a1 + 200) + 8);
    do
    {
      uint64_t v19 = *v18++;
      sub_13F6FC8(v19);
      --v17;
    }
    while (v17);
    *(_DWORD *)(a1 + 192) = 0;
  }
  uint64_t v20 = *(unsigned int *)(a1 + 216);
  if ((int)v20 >= 1)
  {
    unint64_t v21 = (uint64_t *)(*(void *)(a1 + 224) + 8);
    do
    {
      uint64_t v22 = *v21++;
      sub_1417070(v22);
      --v20;
    }
    while (v20);
    *(_DWORD *)(a1 + 216) = 0;
  }
  *(_DWORD *)(a1 + 232) = 0;
  uint64_t v23 = *(unsigned int *)(a1 + 256);
  if ((int)v23 >= 1)
  {
    unint64_t v24 = (uint64_t *)(*(void *)(a1 + 264) + 8);
    do
    {
      uint64_t v25 = *v24++;
      sub_143DEE0(v25);
      --v23;
    }
    while (v23);
    *(_DWORD *)(a1 + 256) = 0;
  }
  uint64_t v26 = *(unsigned int *)(a1 + 280);
  if ((int)v26 >= 1)
  {
    unint64_t v27 = (uint64_t *)(*(void *)(a1 + 288) + 8);
    do
    {
      uint64_t v28 = *v27++;
      sub_143EF88(v28);
      --v26;
    }
    while (v26);
    *(_DWORD *)(a1 + 280) = 0;
  }
  uint64_t v29 = *(unsigned int *)(a1 + 304);
  if ((int)v29 >= 1)
  {
    int v30 = (uint64_t *)(*(void *)(a1 + 312) + 8);
    do
    {
      uint64_t v31 = *v30++;
      sub_15B2C80(v31);
      --v29;
    }
    while (v29);
    *(_DWORD *)(a1 + 304) = 0;
  }
  uint64_t v32 = *(unsigned int *)(a1 + 328);
  if ((int)v32 >= 1)
  {
    uint64_t v33 = (uint64_t *)(*(void *)(a1 + 336) + 8);
    do
    {
      uint64_t v34 = *v33++;
      sub_14400BC(v34);
      --v32;
    }
    while (v32);
    *(_DWORD *)(a1 + 328) = 0;
  }
  uint64_t v35 = *(unsigned int *)(a1 + 352);
  if ((int)v35 >= 1)
  {
    uint64_t v36 = (uint64_t *)(*(void *)(a1 + 360) + 8);
    do
    {
      uint64_t v37 = *v36++;
      sub_1446B98(v37);
      --v35;
    }
    while (v35);
    *(_DWORD *)(a1 + 352) = 0;
  }
  sub_188CC00(a1 + 368);
  uint64_t result = sub_188CC00(a1 + 392);
  uint64_t v39 = *(unsigned int *)(a1 + 424);
  if ((int)v39 >= 1)
  {
    int v40 = (uint64_t *)(*(void *)(a1 + 432) + 8);
    do
    {
      uint64_t v41 = *v40++;
      uint64_t result = sub_143D8BC(v41);
      --v39;
    }
    while (v39);
    *(_DWORD *)(a1 + 424) = 0;
  }
  uint64_t v42 = *(unsigned int *)(a1 + 448);
  if ((int)v42 >= 1)
  {
    uint64_t v43 = (uint64_t *)(*(void *)(a1 + 456) + 8);
    do
    {
      uint64_t v44 = *v43++;
      uint64_t result = sub_14416D8(v44);
      --v42;
    }
    while (v42);
    *(_DWORD *)(a1 + 448) = 0;
  }
  int v45 = *(_DWORD *)(a1 + 40);
  if ((v45 & 0x3F) == 0) {
    goto LABEL_65;
  }
  if ((v45 & 1) == 0)
  {
    if ((v45 & 2) == 0) {
      goto LABEL_60;
    }
LABEL_77:
    unint64_t v49 = *(void *)(a1 + 472) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v49 + 23) < 0)
    {
      **(unsigned char **)unint64_t v49 = 0;
      *(void *)(v49 + 8) = 0;
      if ((v45 & 4) != 0) {
        goto LABEL_81;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v49 = 0;
      *(unsigned char *)(v49 + 23) = 0;
      if ((v45 & 4) != 0) {
        goto LABEL_81;
      }
    }
LABEL_61:
    if ((v45 & 8) == 0) {
      goto LABEL_62;
    }
LABEL_82:
    uint64_t result = sub_1418C04(*(void *)(a1 + 488));
    if ((v45 & 0x10) == 0)
    {
LABEL_63:
      if ((v45 & 0x20) == 0) {
        goto LABEL_65;
      }
      goto LABEL_64;
    }
    goto LABEL_83;
  }
  unint64_t v48 = *(void *)(a1 + 464) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v48 + 23) < 0)
  {
    **(unsigned char **)unint64_t v48 = 0;
    *(void *)(v48 + 8) = 0;
    if ((v45 & 2) != 0) {
      goto LABEL_77;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v48 = 0;
    *(unsigned char *)(v48 + 23) = 0;
    if ((v45 & 2) != 0) {
      goto LABEL_77;
    }
  }
LABEL_60:
  if ((v45 & 4) == 0) {
    goto LABEL_61;
  }
LABEL_81:
  uint64_t result = sub_140C788(*(void *)(a1 + 480));
  if ((v45 & 8) != 0) {
    goto LABEL_82;
  }
LABEL_62:
  if ((v45 & 0x10) == 0) {
    goto LABEL_63;
  }
LABEL_83:
  uint64_t result = sub_1440830(*(void *)(a1 + 496));
  if ((v45 & 0x20) != 0) {
LABEL_64:
  }
    uint64_t result = sub_143CA24(*(void *)(a1 + 504));
LABEL_65:
  if ((v45 & 0xC0) != 0) {
    *(_OWORD *)(a1 + 512) = 0u;
  }
  if ((v45 & 0xFF00) != 0)
  {
    *(void *)(a1 + 560) = 0;
    *(_OWORD *)(a1 + 528) = 0u;
    *(_OWORD *)(a1 + 544) = 0u;
  }
  char v47 = *(unsigned char *)(a1 + 8);
  uint64_t v46 = a1 + 8;
  *(void *)(v46 + 560) = 0;
  *(_DWORD *)(v46 + 32) = 0;
  if (v47)
  {
    return sub_188B4AC((uint64_t *)v46);
  }
  return result;
}

uint64_t sub_13F4F74(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  if ((int)v2 >= 1)
  {
    unint64_t v3 = (uint64_t *)(*(void *)(a1 + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      sub_142512C(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(a1 + 32) = 0;
  }
  uint64_t v5 = *(unsigned int *)(a1 + 56);
  if ((int)v5 >= 1)
  {
    int v6 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v7 = *v6++;
      sub_1425D24(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(a1 + 56) = 0;
  }
  uint64_t v8 = *(unsigned int *)(a1 + 80);
  if ((int)v8 >= 1)
  {
    uint64_t v9 = (uint64_t *)(*(void *)(a1 + 88) + 8);
    do
    {
      uint64_t v10 = *v9++;
      sub_1427700(v10);
      --v8;
    }
    while (v8);
    *(_DWORD *)(a1 + 80) = 0;
  }
  *(_DWORD *)(a1 + 96) = 0;
  *(_DWORD *)(a1 + 112) = 0;
  uint64_t v11 = *(unsigned int *)(a1 + 136);
  if ((int)v11 >= 1)
  {
    int v12 = (uint64_t *)(*(void *)(a1 + 144) + 8);
    do
    {
      uint64_t v13 = *v12++;
      sub_142D778(v13);
      --v11;
    }
    while (v11);
    *(_DWORD *)(a1 + 136) = 0;
  }
  sub_188CC00(a1 + 152);
  sub_188CC00(a1 + 176);
  sub_188CC00(a1 + 200);
  sub_188CC00(a1 + 224);
  uint64_t result = sub_188CC00(a1 + 248);
  uint64_t v15 = *(unsigned int *)(a1 + 280);
  if ((int)v15 >= 1)
  {
    uint64_t v16 = (uint64_t *)(*(void *)(a1 + 288) + 8);
    do
    {
      uint64_t v17 = *v16++;
      uint64_t result = sub_1428B98(v17);
      --v15;
    }
    while (v15);
    *(_DWORD *)(a1 + 280) = 0;
  }
  int v18 = *(_DWORD *)(a1 + 16);
  if (!(_BYTE)v18) {
    goto LABEL_31;
  }
  if ((v18 & 1) == 0)
  {
    if ((v18 & 2) == 0) {
      goto LABEL_24;
    }
LABEL_47:
    unint64_t v24 = *(void *)(a1 + 304) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v24 + 23) < 0)
    {
      **(unsigned char **)unint64_t v24 = 0;
      *(void *)(v24 + 8) = 0;
      if ((v18 & 4) != 0) {
        goto LABEL_51;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v24 = 0;
      *(unsigned char *)(v24 + 23) = 0;
      if ((v18 & 4) != 0) {
        goto LABEL_51;
      }
    }
LABEL_25:
    if ((v18 & 8) == 0) {
      goto LABEL_26;
    }
    goto LABEL_52;
  }
  unint64_t v23 = *(void *)(a1 + 296) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v23 + 23) < 0)
  {
    **(unsigned char **)unint64_t v23 = 0;
    *(void *)(v23 + 8) = 0;
    if ((v18 & 2) != 0) {
      goto LABEL_47;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v23 = 0;
    *(unsigned char *)(v23 + 23) = 0;
    if ((v18 & 2) != 0) {
      goto LABEL_47;
    }
  }
LABEL_24:
  if ((v18 & 4) == 0) {
    goto LABEL_25;
  }
LABEL_51:
  uint64_t result = sub_142975C(*(void *)(a1 + 312));
  if ((v18 & 8) == 0)
  {
LABEL_26:
    if ((v18 & 0x10) == 0) {
      goto LABEL_27;
    }
    goto LABEL_53;
  }
LABEL_52:
  uint64_t result = sub_1415564(*(void *)(a1 + 320));
  if ((v18 & 0x10) == 0)
  {
LABEL_27:
    if ((v18 & 0x20) == 0) {
      goto LABEL_28;
    }
LABEL_54:
    uint64_t result = sub_142A7FC(*(void *)(a1 + 336));
    if ((v18 & 0x40) == 0)
    {
LABEL_29:
      if ((v18 & 0x80) == 0) {
        goto LABEL_31;
      }
      goto LABEL_30;
    }
    goto LABEL_55;
  }
LABEL_53:
  uint64_t result = sub_14155F0(*(void *)(a1 + 328));
  if ((v18 & 0x20) != 0) {
    goto LABEL_54;
  }
LABEL_28:
  if ((v18 & 0x40) == 0) {
    goto LABEL_29;
  }
LABEL_55:
  uint64_t result = sub_142A880(*(void *)(a1 + 344));
  if ((v18 & 0x80) != 0) {
LABEL_30:
  }
    uint64_t result = sub_1415674(*(void *)(a1 + 352));
LABEL_31:
  if ((v18 & 0x300) != 0)
  {
    if ((v18 & 0x100) != 0) {
      uint64_t result = sub_142A904(*(void *)(a1 + 360));
    }
    if ((v18 & 0x200) != 0)
    {
      uint64_t v19 = *(void *)(a1 + 368);
      char v20 = *(unsigned char *)(v19 + 8);
      uint64_t result = v19 + 8;
      *(unsigned char *)(result + 16) = 0;
      *(_DWORD *)(result + 8) = 0;
      if (v20) {
        uint64_t result = sub_188B4AC((uint64_t *)result);
      }
    }
  }
  if ((v18 & 0xFC00) != 0)
  {
    *(void *)(a1 + 376) = 0;
    *(void *)(a1 + 381) = 0;
  }
  char v22 = *(unsigned char *)(a1 + 8);
  uint64_t v21 = a1 + 8;
  *(_DWORD *)(v21 + 8) = 0;
  if (v22)
  {
    return sub_188B4AC((uint64_t *)v21);
  }
  return result;
}

std::string *sub_13F51DC(std::string *result, uint64_t a2)
{
  unint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0xF) != 0)
  {
    if (v4)
    {
      int v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      uint64_t v7 = (std::string **)&result[1];
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v9 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v9 = (uint64_t *)*v9;
      }
      uint64_t result = sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_23;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    uint64_t v10 = (std::string *)v3[1].__r_.__value_.__l.__size_;
    if (!v10)
    {
      std::string::size_type v11 = v3->__r_.__value_.__l.__size_;
      int v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        int v12 = (void *)*v12;
      }
      uint64_t v10 = (std::string *)sub_144BDE0((uint64_t)v12);
      v3[1].__r_.__value_.__l.__size_ = (std::string::size_type)v10;
    }
    if (*(void *)(a2 + 32)) {
      uint64_t v13 = *(uint64_t (****)())(a2 + 32);
    }
    else {
      uint64_t v13 = &off_25385E0;
    }
    uint64_t result = sub_143145C(v10, (uint64_t)v13);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0)
      {
LABEL_7:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
        goto LABEL_8;
      }
LABEL_6:
      v3[2].__r_.__value_.__s.__data_[0] = *(unsigned char *)(a2 + 48);
      goto LABEL_7;
    }
LABEL_23:
    v3[1].__r_.__value_.__r.__words[2] = *(void *)(a2 + 40);
    if ((v4 & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_8:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

void sub_13F52FC(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 48);
  if (v4)
  {
    uint64_t v5 = (_DWORD *)(a1 + 48);
    uint64_t v6 = *(int *)(a1 + 48);
    sub_188C80C((unsigned int *)(a1 + 48), v6 + v4);
    uint64_t v7 = *(void *)(a1 + 56);
    *v5 += *(_DWORD *)(a2 + 48);
    memcpy((void *)(v7 + 4 * v6), *(const void **)(a2 + 56), 4 * *(int *)(a2 + 48));
  }
  int v8 = *(_DWORD *)(a2 + 72);
  if (v8)
  {
    uint64_t v9 = (uint64_t *)(*(void *)(a2 + 80) + 8);
    uint64_t v10 = (std::string **)sub_188CCE4(a1 + 64, *(_DWORD *)(a2 + 72));
    sub_1492A4C((std::string *)(a1 + 64), v10, v9, v8, **(_DWORD **)(a1 + 80) - *(_DWORD *)(a1 + 72));
    int v11 = *(_DWORD *)(a1 + 72) + v8;
    *(_DWORD *)(a1 + 72) = v11;
    int v12 = *(int **)(a1 + 80);
    if (*v12 < v11) {
      *int v12 = v11;
    }
  }
  int v13 = *(_DWORD *)(a2 + 96);
  if (v13)
  {
    uint64_t v14 = (uint64_t *)(*(void *)(a2 + 104) + 8);
    uint64_t v15 = (std::string **)sub_188CCE4(a1 + 88, *(_DWORD *)(a2 + 96));
    sub_1492A4C((std::string *)(a1 + 88), v15, v14, v13, **(_DWORD **)(a1 + 104) - *(_DWORD *)(a1 + 96));
    int v16 = *(_DWORD *)(a1 + 96) + v13;
    *(_DWORD *)(a1 + 96) = v16;
    uint64_t v17 = *(int **)(a1 + 104);
    if (*v17 < v16) {
      *uint64_t v17 = v16;
    }
  }
  int v18 = *(_DWORD *)(a2 + 120);
  if (v18)
  {
    uint64_t v19 = (uint64_t *)(*(void *)(a2 + 128) + 8);
    char v20 = (std::string **)sub_188CCE4(a1 + 112, *(_DWORD *)(a2 + 120));
    sub_1491C84((std::string *)(a1 + 112), v20, v19, v18, **(_DWORD **)(a1 + 128) - *(_DWORD *)(a1 + 120));
    int v21 = *(_DWORD *)(a1 + 120) + v18;
    *(_DWORD *)(a1 + 120) = v21;
    char v22 = *(int **)(a1 + 128);
    if (*v22 < v21) {
      int *v22 = v21;
    }
  }
  int v23 = *(_DWORD *)(a2 + 144);
  if (v23)
  {
    unint64_t v24 = (uint64_t *)(*(void *)(a2 + 152) + 8);
    uint64_t v25 = (std::string **)sub_188CCE4(a1 + 136, *(_DWORD *)(a2 + 144));
    sub_12C1E38((std::string *)(a1 + 136), v25, v24, v23, **(_DWORD **)(a1 + 152) - *(_DWORD *)(a1 + 144));
    int v26 = *(_DWORD *)(a1 + 144) + v23;
    *(_DWORD *)(a1 + 144) = v26;
    unint64_t v27 = *(int **)(a1 + 152);
    if (*v27 < v26) {
      int *v27 = v26;
    }
  }
  int v28 = *(_DWORD *)(a2 + 168);
  if (v28)
  {
    uint64_t v29 = (uint64_t *)(*(void *)(a2 + 176) + 8);
    int v30 = (std::string **)sub_188CCE4(a1 + 160, *(_DWORD *)(a2 + 168));
    sub_1492954((std::string *)(a1 + 160), v30, v29, v28, **(_DWORD **)(a1 + 176) - *(_DWORD *)(a1 + 168));
    int v31 = *(_DWORD *)(a1 + 168) + v28;
    *(_DWORD *)(a1 + 168) = v31;
    uint64_t v32 = *(int **)(a1 + 176);
    if (*v32 < v31) {
      int *v32 = v31;
    }
  }
  int v33 = *(_DWORD *)(a2 + 192);
  if (v33)
  {
    uint64_t v34 = (uint64_t *)(*(void *)(a2 + 200) + 8);
    uint64_t v35 = (std::string **)sub_188CCE4(a1 + 184, *(_DWORD *)(a2 + 192));
    sub_124EFB8((std::string *)(a1 + 184), v35, v34, v33, **(_DWORD **)(a1 + 200) - *(_DWORD *)(a1 + 192));
    int v36 = *(_DWORD *)(a1 + 192) + v33;
    *(_DWORD *)(a1 + 192) = v36;
    uint64_t v37 = *(int **)(a1 + 200);
    if (*v37 < v36) {
      int *v37 = v36;
    }
  }
  int v38 = *(_DWORD *)(a2 + 216);
  if (v38)
  {
    uint64_t v39 = (uint64_t *)(*(void *)(a2 + 224) + 8);
    int v40 = (std::string **)sub_188CCE4(a1 + 208, *(_DWORD *)(a2 + 216));
    sub_1491C84((std::string *)(a1 + 208), v40, v39, v38, **(_DWORD **)(a1 + 224) - *(_DWORD *)(a1 + 216));
    int v41 = *(_DWORD *)(a1 + 216) + v38;
    *(_DWORD *)(a1 + 216) = v41;
    uint64_t v42 = *(int **)(a1 + 224);
    if (*v42 < v41) {
      *uint64_t v42 = v41;
    }
  }
  int v43 = *(_DWORD *)(a2 + 232);
  if (v43)
  {
    uint64_t v44 = *(int *)(a1 + 232);
    sub_188CA54((unsigned int *)(a1 + 232), v44 + v43);
    uint64_t v45 = *(void *)(a1 + 240);
    *(_DWORD *)(a1 + 232) += *(_DWORD *)(a2 + 232);
    memcpy((void *)(v45 + 8 * v44), *(const void **)(a2 + 240), 8 * *(int *)(a2 + 232));
  }
  int v46 = *(_DWORD *)(a2 + 256);
  if (v46)
  {
    char v47 = (uint64_t *)(*(void *)(a2 + 264) + 8);
    unint64_t v48 = (std::string **)sub_188CCE4(a1 + 248, *(_DWORD *)(a2 + 256));
    sub_1492AC8((uint64_t *)(a1 + 248), v48, v47, v46, **(_DWORD **)(a1 + 264) - *(_DWORD *)(a1 + 256));
    int v49 = *(_DWORD *)(a1 + 256) + v46;
    *(_DWORD *)(a1 + 256) = v49;
    unint64_t v50 = *(int **)(a1 + 264);
    if (*v50 < v49) {
      *unint64_t v50 = v49;
    }
  }
  int v51 = *(_DWORD *)(a2 + 280);
  if (v51)
  {
    BOOL v52 = (uint64_t *)(*(void *)(a2 + 288) + 8);
    uint64_t v53 = (uint64_t *)sub_188CCE4(a1 + 272, *(_DWORD *)(a2 + 280));
    sub_1492B54((uint64_t *)(a1 + 272), v53, v52, v51, **(_DWORD **)(a1 + 288) - *(_DWORD *)(a1 + 280));
    int v54 = *(_DWORD *)(a1 + 280) + v51;
    *(_DWORD *)(a1 + 280) = v54;
    unint64_t v55 = *(int **)(a1 + 288);
    if (*v55 < v54) {
      *unint64_t v55 = v54;
    }
  }
  int v56 = *(_DWORD *)(a2 + 304);
  if (v56)
  {
    int v57 = (uint64_t *)(*(void *)(a2 + 312) + 8);
    uint64_t v58 = (std::string **)sub_188CCE4(a1 + 296, *(_DWORD *)(a2 + 304));
    sub_12C1E38((std::string *)(a1 + 296), v58, v57, v56, **(_DWORD **)(a1 + 312) - *(_DWORD *)(a1 + 304));
    int v59 = *(_DWORD *)(a1 + 304) + v56;
    *(_DWORD *)(a1 + 304) = v59;
    uint64_t v60 = *(int **)(a1 + 312);
    if (*v60 < v59) {
      *uint64_t v60 = v59;
    }
  }
  int v61 = *(_DWORD *)(a2 + 328);
  if (v61)
  {
    uint64_t v62 = (uint64_t *)(*(void *)(a2 + 336) + 8);
    int v63 = (std::string **)sub_188CCE4(a1 + 320, *(_DWORD *)(a2 + 328));
    sub_1492BE0((std::string *)(a1 + 320), v63, v62, v61, **(_DWORD **)(a1 + 336) - *(_DWORD *)(a1 + 328));
    int v64 = *(_DWORD *)(a1 + 328) + v61;
    *(_DWORD *)(a1 + 328) = v64;
    int v65 = *(int **)(a1 + 336);
    if (*v65 < v64) {
      *int v65 = v64;
    }
  }
  int v66 = *(_DWORD *)(a2 + 352);
  if (v66)
  {
    int v67 = (uint64_t *)(*(void *)(a2 + 360) + 8);
    unint64_t v68 = (uint64_t *)sub_188CCE4(a1 + 344, *(_DWORD *)(a2 + 352));
    sub_1492744((uint64_t *)(a1 + 344), v68, v67, v66, **(_DWORD **)(a1 + 360) - *(_DWORD *)(a1 + 352));
    int v69 = *(_DWORD *)(a1 + 352) + v66;
    *(_DWORD *)(a1 + 352) = v69;
    int v70 = *(int **)(a1 + 360);
    if (*v70 < v69) {
      int *v70 = v69;
    }
  }
  int v71 = *(_DWORD *)(a2 + 376);
  if (v71)
  {
    unint64_t v72 = (const std::string **)(*(void *)(a2 + 384) + 8);
    uint64_t v73 = (std::string **)sub_188CCE4(a1 + 368, *(_DWORD *)(a2 + 376));
    sub_188FB98(a1 + 368, v73, v72, v71, **(_DWORD **)(a1 + 384) - *(_DWORD *)(a1 + 376));
    int v74 = *(_DWORD *)(a1 + 376) + v71;
    *(_DWORD *)(a1 + 376) = v74;
    unint64_t v75 = *(int **)(a1 + 384);
    if (*v75 < v74) {
      *unint64_t v75 = v74;
    }
  }
  int v76 = *(_DWORD *)(a2 + 400);
  if (v76)
  {
    uint64_t v77 = (const std::string **)(*(void *)(a2 + 408) + 8);
    uint64_t v78 = (std::string **)sub_188CCE4(a1 + 392, *(_DWORD *)(a2 + 400));
    sub_188FB98(a1 + 392, v78, v77, v76, **(_DWORD **)(a1 + 408) - *(_DWORD *)(a1 + 400));
    int v79 = *(_DWORD *)(a1 + 400) + v76;
    *(_DWORD *)(a1 + 400) = v79;
    unint64_t v80 = *(int **)(a1 + 408);
    if (*v80 < v79) {
      *unint64_t v80 = v79;
    }
  }
  int v81 = *(_DWORD *)(a2 + 424);
  if (v81)
  {
    uint64_t v82 = (uint64_t *)(*(void *)(a2 + 432) + 8);
    uint64_t v83 = (std::string **)sub_188CCE4(a1 + 416, *(_DWORD *)(a2 + 424));
    sub_1492A4C((std::string *)(a1 + 416), v83, v82, v81, **(_DWORD **)(a1 + 432) - *(_DWORD *)(a1 + 424));
    int v84 = *(_DWORD *)(a1 + 424) + v81;
    *(_DWORD *)(a1 + 424) = v84;
    uint64_t v85 = *(int **)(a1 + 432);
    if (*v85 < v84) {
      *uint64_t v85 = v84;
    }
  }
  int v86 = *(_DWORD *)(a2 + 448);
  if (v86)
  {
    uint64_t v87 = (uint64_t *)(*(void *)(a2 + 456) + 8);
    uint64_t v88 = (std::string **)sub_188CCE4(a1 + 440, *(_DWORD *)(a2 + 448));
    sub_1492C6C((std::string *)(a1 + 440), v88, v87, v86, **(_DWORD **)(a1 + 456) - *(_DWORD *)(a1 + 448));
    int v89 = *(_DWORD *)(a1 + 448) + v86;
    *(_DWORD *)(a1 + 448) = v89;
    uint64_t v90 = *(int **)(a1 + 456);
    if (*v90 < v89) {
      int *v90 = v89;
    }
  }
  int v91 = *(_DWORD *)(a2 + 40);
  if ((_BYTE)v91)
  {
    if (v91)
    {
      uint64_t v94 = (long long *)(*(void *)(a2 + 464) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 40) |= 1u;
      uint64_t v95 = *(void *)(a1 + 8);
      uint64_t v96 = (uint64_t *)(v95 & 0xFFFFFFFFFFFFFFFCLL);
      if (v95) {
        uint64_t v96 = (uint64_t *)*v96;
      }
      sub_1881DF4((std::string **)(a1 + 464), v94, v96);
      if ((v91 & 2) == 0)
      {
LABEL_56:
        if ((v91 & 4) == 0) {
          goto LABEL_57;
        }
        goto LABEL_87;
      }
    }
    else if ((v91 & 2) == 0)
    {
      goto LABEL_56;
    }
    uint64_t v97 = (long long *)(*(void *)(a2 + 472) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 40) |= 2u;
    uint64_t v98 = *(void *)(a1 + 8);
    uint64_t v99 = (uint64_t *)(v98 & 0xFFFFFFFFFFFFFFFCLL);
    if (v98) {
      uint64_t v99 = (uint64_t *)*v99;
    }
    sub_1881DF4((std::string **)(a1 + 472), v97, v99);
    if ((v91 & 4) == 0)
    {
LABEL_57:
      if ((v91 & 8) == 0) {
        goto LABEL_58;
      }
      goto LABEL_95;
    }
LABEL_87:
    *(_DWORD *)(a1 + 40) |= 4u;
    uint64_t v100 = *(std::string **)(a1 + 480);
    if (!v100)
    {
      uint64_t v101 = *(void *)(a1 + 8);
      uint64_t v102 = (void *)(v101 & 0xFFFFFFFFFFFFFFFCLL);
      if (v101) {
        uint64_t v102 = (void *)*v102;
      }
      uint64_t v100 = (std::string *)sub_1449EB4((uint64_t)v102);
      *(void *)(a1 + 480) = v100;
    }
    if (*(void *)(a2 + 480)) {
      uint64_t v103 = *(uint64_t (****)(uint64_t))(a2 + 480);
    }
    else {
      uint64_t v103 = &off_2537960;
    }
    sub_1263010(v100, (uint64_t)v103);
    if ((v91 & 8) == 0)
    {
LABEL_58:
      if ((v91 & 0x10) == 0) {
        goto LABEL_59;
      }
      goto LABEL_103;
    }
LABEL_95:
    *(_DWORD *)(a1 + 40) |= 8u;
    uint64_t v104 = *(std::string **)(a1 + 488);
    if (!v104)
    {
      uint64_t v105 = *(void *)(a1 + 8);
      uint64_t v106 = (void *)(v105 & 0xFFFFFFFFFFFFFFFCLL);
      if (v105) {
        uint64_t v106 = (void *)*v106;
      }
      uint64_t v104 = (std::string *)sub_144A8B0((uint64_t)v106);
      *(void *)(a1 + 488) = v104;
    }
    if (*(void *)(a2 + 488)) {
      uint64_t v107 = *(uint64_t (****)(uint64_t))(a2 + 488);
    }
    else {
      uint64_t v107 = &off_2537D88;
    }
    sub_141930C(v104, (uint64_t)v107);
    if ((v91 & 0x10) == 0)
    {
LABEL_59:
      if ((v91 & 0x20) == 0) {
        goto LABEL_60;
      }
      goto LABEL_111;
    }
LABEL_103:
    *(_DWORD *)(a1 + 40) |= 0x10u;
    int v108 = *(std::string **)(a1 + 496);
    if (!v108)
    {
      uint64_t v109 = *(void *)(a1 + 8);
      uint64_t v110 = (void *)(v109 & 0xFFFFFFFFFFFFFFFCLL);
      if (v109) {
        uint64_t v110 = (void *)*v110;
      }
      int v108 = (std::string *)sub_144C9B0((uint64_t)v110);
      *(void *)(a1 + 496) = v108;
    }
    if (*(void *)(a2 + 496)) {
      uint64_t v111 = *(void *(****)(void *))(a2 + 496);
    }
    else {
      uint64_t v111 = &off_2538B68;
    }
    sub_1440FB8(v108, (uint64_t)v111);
    if ((v91 & 0x20) == 0)
    {
LABEL_60:
      if ((v91 & 0x40) == 0) {
        goto LABEL_61;
      }
      goto LABEL_119;
    }
LABEL_111:
    *(_DWORD *)(a1 + 40) |= 0x20u;
    uint64_t v112 = *(void *)(a1 + 504);
    if (!v112)
    {
      uint64_t v113 = *(void *)(a1 + 8);
      unint64_t v114 = (void *)(v113 & 0xFFFFFFFFFFFFFFFCLL);
      if (v113) {
        unint64_t v114 = (void *)*v114;
      }
      uint64_t v112 = sub_144C61C((uint64_t)v114);
      *(void *)(a1 + 504) = v112;
    }
    if (*(void *)(a2 + 504)) {
      uint64_t v115 = *(void *(****)(void *))(a2 + 504);
    }
    else {
      uint64_t v115 = &off_2538A28;
    }
    sub_143CEC4(v112, (uint64_t)v115);
    if ((v91 & 0x40) == 0)
    {
LABEL_61:
      if ((v91 & 0x80) == 0)
      {
LABEL_63:
        *(_DWORD *)(a1 + 40) |= v91;
        goto LABEL_64;
      }
LABEL_62:
      *(void *)(a1 + 520) = *(void *)(a2 + 520);
      goto LABEL_63;
    }
LABEL_119:
    *(void *)(a1 + 512) = *(void *)(a2 + 512);
    if ((v91 & 0x80) == 0) {
      goto LABEL_63;
    }
    goto LABEL_62;
  }
LABEL_64:
  if ((v91 & 0xFF00) == 0) {
    goto LABEL_75;
  }
  if ((v91 & 0x100) != 0)
  {
    *(void *)(a1 + 528) = *(void *)(a2 + 528);
    if ((v91 & 0x200) == 0)
    {
LABEL_67:
      if ((v91 & 0x400) == 0) {
        goto LABEL_68;
      }
      goto LABEL_123;
    }
  }
  else if ((v91 & 0x200) == 0)
  {
    goto LABEL_67;
  }
  *(void *)(a1 + 536) = *(void *)(a2 + 536);
  if ((v91 & 0x400) == 0)
  {
LABEL_68:
    if ((v91 & 0x800) == 0) {
      goto LABEL_69;
    }
    goto LABEL_124;
  }
LABEL_123:
  *(unsigned char *)(a1 + 544) = *(unsigned char *)(a2 + 544);
  if ((v91 & 0x800) == 0)
  {
LABEL_69:
    if ((v91 & 0x1000) == 0) {
      goto LABEL_70;
    }
    goto LABEL_125;
  }
LABEL_124:
  *(unsigned char *)(a1 + 545) = *(unsigned char *)(a2 + 545);
  if ((v91 & 0x1000) == 0)
  {
LABEL_70:
    if ((v91 & 0x2000) == 0) {
      goto LABEL_71;
    }
    goto LABEL_126;
  }
LABEL_125:
  *(_DWORD *)(a1 + 548) = *(_DWORD *)(a2 + 548);
  if ((v91 & 0x2000) == 0)
  {
LABEL_71:
    if ((v91 & 0x4000) == 0) {
      goto LABEL_72;
    }
LABEL_127:
    *(_DWORD *)(a1 + 556) = *(_DWORD *)(a2 + 556);
    if ((v91 & 0x8000) == 0) {
      goto LABEL_74;
    }
    goto LABEL_73;
  }
LABEL_126:
  *(_DWORD *)(a1 + 552) = *(_DWORD *)(a2 + 552);
  if ((v91 & 0x4000) != 0) {
    goto LABEL_127;
  }
LABEL_72:
  if ((v91 & 0x8000) != 0) {
LABEL_73:
  }
    *(void *)(a1 + 560) = *(void *)(a2 + 560);
LABEL_74:
  *(_DWORD *)(a1 + 40) |= v91;
LABEL_75:
  if ((v91 & 0x10000) != 0)
  {
    uint64_t v92 = *(void *)(a2 + 568);
    *(_DWORD *)(a1 + 40) |= 0x10000u;
    *(void *)(a1 + 568) = v92;
  }
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v93 = *(void *)(a2 + 8);
  if (v93)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v93 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

std::string *sub_13F5CD0(std::string *result, uint64_t a2)
{
  unint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = sub_1492380(v3 + 1, v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2] - LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    int v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *int v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    int v11 = (std::string **)sub_188CCE4((uint64_t)&v3[2], *(_DWORD *)(a2 + 56));
    uint64_t result = (std::string *)sub_14923FC((uint64_t *)&v3[2], v11, v10, v9, *(_DWORD *)v3[2].__r_.__value_.__r.__words[2]- LODWORD(v3[2].__r_.__value_.__r.__words[1]));
    int v12 = LODWORD(v3[2].__r_.__value_.__r.__words[1]) + v9;
    LODWORD(v3[2].__r_.__value_.__r.__words[1]) = v12;
    int v13 = (int *)v3[2].__r_.__value_.__r.__words[2];
    if (*v13 < v12) {
      int *v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 80);
  if (v14)
  {
    uint64_t v15 = (uint64_t *)(*(void *)(a2 + 88) + 8);
    int v16 = (std::string **)sub_188CCE4((uint64_t)&v3[3], *(_DWORD *)(a2 + 80));
    uint64_t result = sub_1492268(v3 + 3, v16, v15, v14, *(_DWORD *)v3[3].__r_.__value_.__r.__words[2] - LODWORD(v3[3].__r_.__value_.__r.__words[1]));
    int v17 = LODWORD(v3[3].__r_.__value_.__r.__words[1]) + v14;
    LODWORD(v3[3].__r_.__value_.__r.__words[1]) = v17;
    int v18 = (int *)v3[3].__r_.__value_.__r.__words[2];
    if (*v18 < v17) {
      *int v18 = v17;
    }
  }
  int v19 = *(_DWORD *)(a2 + 96);
  if (v19)
  {
    uint64_t data_low = SLODWORD(v3[4].__r_.__value_.__l.__data_);
    sub_188C80C((unsigned int *)&v3[4], data_low + v19);
    std::string::size_type size = v3[4].__r_.__value_.__l.__size_;
    LODWORD(v3[4].__r_.__value_.__l.__data_) += *(_DWORD *)(a2 + 96);
    uint64_t result = (std::string *)memcpy((void *)(size + 4 * data_low), *(const void **)(a2 + 104), 4 * *(int *)(a2 + 96));
  }
  int v22 = *(_DWORD *)(a2 + 112);
  if (v22)
  {
    uint64_t v23 = SLODWORD(v3[4].__r_.__value_.__r.__words[2]);
    sub_188C80C((unsigned int *)&v3[4].__r_.__value_.__r.__words[2], v23 + v22);
    std::string::pointer data = v3[5].__r_.__value_.__l.__data_;
    LODWORD(v3[4].__r_.__value_.__r.__words[2]) += *(_DWORD *)(a2 + 112);
    uint64_t result = (std::string *)memcpy(&data[4 * v23], *(const void **)(a2 + 120), 4 * *(int *)(a2 + 112));
  }
  int v25 = *(_DWORD *)(a2 + 136);
  if (v25)
  {
    int v26 = (uint64_t *)(*(void *)(a2 + 144) + 8);
    unint64_t v27 = (std::string **)sub_188CCE4((uint64_t)&v3[5].__r_.__value_.__l.__size_, *(_DWORD *)(a2 + 136));
    uint64_t result = sub_1492488((std::string *)((char *)v3 + 128), v27, v26, v25, *(_DWORD *)v3[6].__r_.__value_.__l.__data_ - LODWORD(v3[5].__r_.__value_.__r.__words[2]));
    int v28 = LODWORD(v3[5].__r_.__value_.__r.__words[2]) + v25;
    LODWORD(v3[5].__r_.__value_.__r.__words[2]) = v28;
    uint64_t v29 = (int *)v3[6].__r_.__value_.__l.__data_;
    if (*v29 < v28) {
      int *v29 = v28;
    }
  }
  int v30 = *(_DWORD *)(a2 + 160);
  if (v30)
  {
    int v31 = (const std::string **)(*(void *)(a2 + 168) + 8);
    uint64_t v32 = (std::string **)sub_188CCE4((uint64_t)&v3[6].__r_.__value_.__l.__size_, *(_DWORD *)(a2 + 160));
    uint64_t result = (std::string *)sub_188FB98((uint64_t)&v3[6].__r_.__value_.__l.__size_, v32, v31, v30, *(_DWORD *)v3[7].__r_.__value_.__l.__data_ - LODWORD(v3[6].__r_.__value_.__r.__words[2]));
    int v33 = LODWORD(v3[6].__r_.__value_.__r.__words[2]) + v30;
    LODWORD(v3[6].__r_.__value_.__r.__words[2]) = v33;
    uint64_t v34 = (int *)v3[7].__r_.__value_.__l.__data_;
    if (*v34 < v33) {
      *uint64_t v34 = v33;
    }
  }
  int v35 = *(_DWORD *)(a2 + 184);
  if (v35)
  {
    int v36 = (const std::string **)(*(void *)(a2 + 192) + 8);
    uint64_t v37 = (std::string **)sub_188CCE4((uint64_t)&v3[7].__r_.__value_.__l.__size_, *(_DWORD *)(a2 + 184));
    uint64_t result = (std::string *)sub_188FB98((uint64_t)&v3[7].__r_.__value_.__l.__size_, v37, v36, v35, *(_DWORD *)v3[8].__r_.__value_.__l.__data_ - LODWORD(v3[7].__r_.__value_.__r.__words[2]));
    int v38 = LODWORD(v3[7].__r_.__value_.__r.__words[2]) + v35;
    LODWORD(v3[7].__r_.__value_.__r.__words[2]) = v38;
    uint64_t v39 = (int *)v3[8].__r_.__value_.__l.__data_;
    if (*v39 < v38) {
      *uint64_t v39 = v38;
    }
  }
  int v40 = *(_DWORD *)(a2 + 208);
  if (v40)
  {
    int v41 = (const std::string **)(*(void *)(a2 + 216) + 8);
    uint64_t v42 = (std::string **)sub_188CCE4((uint64_t)&v3[8].__r_.__value_.__l.__size_, *(_DWORD *)(a2 + 208));
    uint64_t result = (std::string *)sub_188FB98((uint64_t)&v3[8].__r_.__value_.__l.__size_, v42, v41, v40, *(_DWORD *)v3[9].__r_.__value_.__l.__data_ - LODWORD(v3[8].__r_.__value_.__r.__words[2]));
    int v43 = LODWORD(v3[8].__r_.__value_.__r.__words[2]) + v40;
    LODWORD(v3[8].__r_.__value_.__r.__words[2]) = v43;
    uint64_t v44 = (int *)v3[9].__r_.__value_.__l.__data_;
    if (*v44 < v43) {
      *uint64_t v44 = v43;
    }
  }
  int v45 = *(_DWORD *)(a2 + 232);
  if (v45)
  {
    int v46 = (const std::string **)(*(void *)(a2 + 240) + 8);
    char v47 = (std::string **)sub_188CCE4((uint64_t)&v3[9].__r_.__value_.__l.__size_, *(_DWORD *)(a2 + 232));
    uint64_t result = (std::string *)sub_188FB98((uint64_t)&v3[9].__r_.__value_.__l.__size_, v47, v46, v45, *(_DWORD *)v3[10].__r_.__value_.__l.__data_ - LODWORD(v3[9].__r_.__value_.__r.__words[2]));
    int v48 = LODWORD(v3[9].__r_.__value_.__r.__words[2]) + v45;
    LODWORD(v3[9].__r_.__value_.__r.__words[2]) = v48;
    int v49 = (int *)v3[10].__r_.__value_.__l.__data_;
    if (*v49 < v48) {
      *int v49 = v48;
    }
  }
  int v50 = *(_DWORD *)(a2 + 256);
  if (v50)
  {
    int v51 = (const std::string **)(*(void *)(a2 + 264) + 8);
    BOOL v52 = (std::string **)sub_188CCE4((uint64_t)&v3[10].__r_.__value_.__l.__size_, *(_DWORD *)(a2 + 256));
    uint64_t result = (std::string *)sub_188FB98((uint64_t)&v3[10].__r_.__value_.__l.__size_, v52, v51, v50, *(_DWORD *)v3[11].__r_.__value_.__l.__data_ - LODWORD(v3[10].__r_.__value_.__r.__words[2]));
    int v53 = LODWORD(v3[10].__r_.__value_.__r.__words[2]) + v50;
    LODWORD(v3[10].__r_.__value_.__r.__words[2]) = v53;
    int v54 = (int *)v3[11].__r_.__value_.__l.__data_;
    if (*v54 < v53) {
      int *v54 = v53;
    }
  }
  int v55 = *(_DWORD *)(a2 + 280);
  if (v55)
  {
    int v56 = (uint64_t *)(*(void *)(a2 + 288) + 8);
    int v57 = (std::string **)sub_188CCE4((uint64_t)&v3[11].__r_.__value_.__l.__size_, *(_DWORD *)(a2 + 280));
    uint64_t result = (std::string *)sub_1492514((uint64_t *)&v3[11].__r_.__value_.__l.__size_, v57, v56, v55, *(_DWORD *)v3[12].__r_.__value_.__l.__data_ - LODWORD(v3[11].__r_.__value_.__r.__words[2]));
    int v58 = LODWORD(v3[11].__r_.__value_.__r.__words[2]) + v55;
    LODWORD(v3[11].__r_.__value_.__r.__words[2]) = v58;
    int v59 = (int *)v3[12].__r_.__value_.__l.__data_;
    if (*v59 < v58) {
      int *v59 = v58;
    }
  }
  int v60 = *(_DWORD *)(a2 + 16);
  if (!(_BYTE)v60) {
    goto LABEL_99;
  }
  if (v60)
  {
    int v61 = (long long *)(*(void *)(a2 + 296) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
    std::string::size_type v62 = v3->__r_.__value_.__l.__size_;
    int v63 = (uint64_t *)(v62 & 0xFFFFFFFFFFFFFFFCLL);
    if (v62) {
      int v63 = (uint64_t *)*v63;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[12].__r_.__value_.__l.__size_, v61, v63);
    if ((v60 & 2) == 0)
    {
LABEL_38:
      if ((v60 & 4) == 0) {
        goto LABEL_39;
      }
      goto LABEL_51;
    }
  }
  else if ((v60 & 2) == 0)
  {
    goto LABEL_38;
  }
  int v64 = (long long *)(*(void *)(a2 + 304) & 0xFFFFFFFFFFFFFFFELL);
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
  std::string::size_type v65 = v3->__r_.__value_.__l.__size_;
  int v66 = (uint64_t *)(v65 & 0xFFFFFFFFFFFFFFFCLL);
  if (v65) {
    int v66 = (uint64_t *)*v66;
  }
  uint64_t result = sub_1881DF4((std::string **)&v3[12].__r_.__value_.__r.__words[2], v64, v66);
  if ((v60 & 4) == 0)
  {
LABEL_39:
    if ((v60 & 8) == 0) {
      goto LABEL_40;
    }
    goto LABEL_59;
  }
LABEL_51:
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
  int v67 = (std::string *)v3[13].__r_.__value_.__l.__data_;
  if (!v67)
  {
    std::string::size_type v68 = v3->__r_.__value_.__l.__size_;
    int v69 = (void *)(v68 & 0xFFFFFFFFFFFFFFFCLL);
    if (v68) {
      int v69 = (void *)*v69;
    }
    int v67 = (std::string *)sub_144B79C((uint64_t)v69);
    v3[13].__r_.__value_.__r.__words[0] = (std::string::size_type)v67;
  }
  if (*(void *)(a2 + 312)) {
    int v70 = *(void *(****)(void *))(a2 + 312);
  }
  else {
    int v70 = &off_25382F0;
  }
  uint64_t result = sub_1381334(v67, (uint64_t)v70);
  if ((v60 & 8) == 0)
  {
LABEL_40:
    if ((v60 & 0x10) == 0) {
      goto LABEL_41;
    }
    goto LABEL_67;
  }
LABEL_59:
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= 8u;
  int v71 = (std::string *)v3[13].__r_.__value_.__l.__size_;
  if (!v71)
  {
    std::string::size_type v72 = v3->__r_.__value_.__l.__size_;
    uint64_t v73 = (void *)(v72 & 0xFFFFFFFFFFFFFFFCLL);
    if (v72) {
      uint64_t v73 = (void *)*v73;
    }
    int v71 = (std::string *)sub_144B250((uint64_t)v73);
    v3[13].__r_.__value_.__l.__size_ = (std::string::size_type)v71;
  }
  if (*(void *)(a2 + 320)) {
    int v74 = *(uint64_t (****)(uint64_t))(a2 + 320);
  }
  else {
    int v74 = &off_2538150;
  }
  uint64_t result = sub_1416234(v71, (uint64_t)v74);
  if ((v60 & 0x10) == 0)
  {
LABEL_41:
    if ((v60 & 0x20) == 0) {
      goto LABEL_42;
    }
LABEL_75:
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x20u;
    int v79 = (std::string *)v3[14].__r_.__value_.__l.__data_;
    if (!v79)
    {
      std::string::size_type v80 = v3->__r_.__value_.__l.__size_;
      int v81 = (void *)(v80 & 0xFFFFFFFFFFFFFFFCLL);
      if (v80) {
        int v81 = (void *)*v81;
      }
      int v79 = (std::string *)sub_144CDDC((uint64_t)v81);
      v3[14].__r_.__value_.__r.__words[0] = (std::string::size_type)v79;
    }
    if (*(void *)(a2 + 336)) {
      uint64_t v82 = *(uint64_t (****)(uint64_t))(a2 + 336);
    }
    else {
      uint64_t v82 = &off_2538E88;
    }
    uint64_t result = sub_1196F3C(v79, (uint64_t)v82);
    if ((v60 & 0x40) == 0)
    {
LABEL_43:
      if ((v60 & 0x80) == 0) {
        goto LABEL_99;
      }
      goto LABEL_91;
    }
    goto LABEL_83;
  }
LABEL_67:
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x10u;
  unint64_t v75 = (std::string *)v3[13].__r_.__value_.__r.__words[2];
  if (!v75)
  {
    std::string::size_type v76 = v3->__r_.__value_.__l.__size_;
    uint64_t v77 = (void *)(v76 & 0xFFFFFFFFFFFFFFFCLL);
    if (v76) {
      uint64_t v77 = (void *)*v77;
    }
    unint64_t v75 = (std::string *)sub_144B9C8((uint64_t)v77);
    v3[13].__r_.__value_.__r.__words[2] = (std::string::size_type)v75;
  }
  if (*(void *)(a2 + 328)) {
    uint64_t v78 = *(uint64_t (****)(uint64_t))(a2 + 328);
  }
  else {
    uint64_t v78 = &off_25384A8;
  }
  uint64_t result = sub_1196F3C(v75, (uint64_t)v78);
  if ((v60 & 0x20) != 0) {
    goto LABEL_75;
  }
LABEL_42:
  if ((v60 & 0x40) == 0) {
    goto LABEL_43;
  }
LABEL_83:
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x40u;
  uint64_t v83 = (std::string *)v3[14].__r_.__value_.__l.__size_;
  if (!v83)
  {
    std::string::size_type v84 = v3->__r_.__value_.__l.__size_;
    uint64_t v85 = (void *)(v84 & 0xFFFFFFFFFFFFFFFCLL);
    if (v84) {
      uint64_t v85 = (void *)*v85;
    }
    uint64_t v83 = (std::string *)sub_144BA6C((uint64_t)v85);
    v3[14].__r_.__value_.__l.__size_ = (std::string::size_type)v83;
  }
  if (*(void *)(a2 + 344)) {
    int v86 = *(uint64_t (****)(uint64_t))(a2 + 344);
  }
  else {
    int v86 = &off_25384E0;
  }
  uint64_t result = sub_1196F3C(v83, (uint64_t)v86);
  if ((v60 & 0x80) != 0)
  {
LABEL_91:
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x80u;
    uint64_t v87 = (std::string *)v3[14].__r_.__value_.__r.__words[2];
    if (!v87)
    {
      std::string::size_type v88 = v3->__r_.__value_.__l.__size_;
      int v89 = (void *)(v88 & 0xFFFFFFFFFFFFFFFCLL);
      if (v88) {
        int v89 = (void *)*v89;
      }
      uint64_t v87 = (std::string *)sub_144BB10((uint64_t)v89);
      v3[14].__r_.__value_.__r.__words[2] = (std::string::size_type)v87;
    }
    if (*(void *)(a2 + 352)) {
      uint64_t v90 = *(uint64_t (****)(uint64_t))(a2 + 352);
    }
    else {
      uint64_t v90 = &off_2538518;
    }
    uint64_t result = sub_1196F3C(v87, (uint64_t)v90);
  }
LABEL_99:
  if ((v60 & 0xFF00) == 0) {
    goto LABEL_110;
  }
  if ((v60 & 0x100) != 0)
  {
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x100u;
    uint64_t v92 = (std::string *)v3[15].__r_.__value_.__l.__data_;
    if (!v92)
    {
      std::string::size_type v93 = v3->__r_.__value_.__l.__size_;
      uint64_t v94 = (void *)(v93 & 0xFFFFFFFFFFFFFFFCLL);
      if (v93) {
        uint64_t v94 = (void *)*v94;
      }
      uint64_t v92 = (std::string *)sub_144BBB4((uint64_t)v94);
      v3[15].__r_.__value_.__r.__words[0] = (std::string::size_type)v92;
    }
    if (*(void *)(a2 + 360)) {
      uint64_t v95 = *(uint64_t (****)(uint64_t))(a2 + 360);
    }
    else {
      uint64_t v95 = &off_2538550;
    }
    uint64_t result = sub_1196F3C(v92, (uint64_t)v95);
    if ((v60 & 0x200) == 0)
    {
LABEL_102:
      if ((v60 & 0x400) == 0) {
        goto LABEL_103;
      }
      goto LABEL_130;
    }
  }
  else if ((v60 & 0x200) == 0)
  {
    goto LABEL_102;
  }
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x200u;
  uint64_t v96 = (std::string *)v3[15].__r_.__value_.__l.__size_;
  if (!v96)
  {
    std::string::size_type v97 = v3->__r_.__value_.__l.__size_;
    uint64_t v98 = (void *)(v97 & 0xFFFFFFFFFFFFFFFCLL);
    if (v97) {
      uint64_t v98 = (void *)*v98;
    }
    uint64_t v96 = (std::string *)sub_144B720((uint64_t)v98);
    v3[15].__r_.__value_.__l.__size_ = (std::string::size_type)v96;
  }
  if (*(void *)(a2 + 368)) {
    uint64_t v99 = *(void *(****)(void *))(a2 + 368);
  }
  else {
    uint64_t v99 = &off_25382D0;
  }
  uint64_t result = sub_13221BC(v96, (uint64_t)v99);
  if ((v60 & 0x400) == 0)
  {
LABEL_103:
    if ((v60 & 0x800) == 0) {
      goto LABEL_104;
    }
    goto LABEL_131;
  }
LABEL_130:
  v3[15].__r_.__value_.__r.__words[2] = *(void *)(a2 + 376);
  if ((v60 & 0x800) == 0)
  {
LABEL_104:
    if ((v60 & 0x1000) == 0) {
      goto LABEL_105;
    }
    goto LABEL_132;
  }
LABEL_131:
  v3[16].__r_.__value_.__s.__data_[0] = *(unsigned char *)(a2 + 384);
  if ((v60 & 0x1000) == 0)
  {
LABEL_105:
    if ((v60 & 0x2000) == 0) {
      goto LABEL_106;
    }
    goto LABEL_133;
  }
LABEL_132:
  v3[16].__r_.__value_.__s.__data_[1] = *(unsigned char *)(a2 + 385);
  if ((v60 & 0x2000) == 0)
  {
LABEL_106:
    if ((v60 & 0x4000) == 0) {
      goto LABEL_107;
    }
LABEL_134:
    v3[16].__r_.__value_.__s.__data_[3] = *(unsigned char *)(a2 + 387);
    if ((v60 & 0x8000) == 0) {
      goto LABEL_109;
    }
    goto LABEL_108;
  }
LABEL_133:
  v3[16].__r_.__value_.__s.__data_[2] = *(unsigned char *)(a2 + 386);
  if ((v60 & 0x4000) != 0) {
    goto LABEL_134;
  }
LABEL_107:
  if ((v60 & 0x8000) != 0) {
LABEL_108:
  }
    v3[16].__r_.__value_.__s.__data_[4] = *(unsigned char *)(a2 + 388);
LABEL_109:
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= v60;
LABEL_110:
  uint64_t v91 = *(void *)(a2 + 8);
  if (v91)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v91 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_13F651C(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 2) == 0) {
    return 1;
  }
  uint64_t result = sub_14317B4(*(void *)(a1 + 32));
  if (result) {
    return 1;
  }
  return result;
}

uint64_t sub_13F6548(uint64_t a1)
{
  uint64_t result = sub_18856CC(a1 + 16);
  if (result)
  {
    uint64_t result = sub_14458D8(a1 + 248);
    if (result)
    {
      uint64_t v3 = *(unsigned int *)(a1 + 280);
      while ((int)v3 >= 1)
      {
        uint64_t v4 = v3 - 1;
        char v5 = sub_143FF5C(*(void *)(*(void *)(a1 + 288) + 8 * v3));
        uint64_t v3 = v4;
        if ((v5 & 1) == 0) {
          return 0;
        }
      }
      uint64_t v6 = *(unsigned int *)(a1 + 352);
      while ((int)v6 >= 1)
      {
        uint64_t v7 = v6 - 1;
        char v8 = sub_1447E94(*(void *)(*(void *)(a1 + 360) + 8 * v6));
        uint64_t v6 = v7;
        if ((v8 & 1) == 0) {
          return 0;
        }
      }
      int v9 = *(_DWORD *)(a1 + 40);
      return ((v9 & 4) == 0 || (~*(_DWORD *)(*(void *)(a1 + 480) + 16) & 3) == 0)
          && ((v9 & 8) == 0 || (~*(_DWORD *)(*(void *)(a1 + 488) + 16) & 9) == 0);
    }
  }
  return result;
}

uint64_t sub_13F660C(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 0;
  }
  for (uint64_t i = *(unsigned int *)(a1 + 32); (int)i >= 1; --i)
  {
    uint64_t v2 = *(void *)(*(void *)(a1 + 40) + 8 * i);
    if ((*(unsigned char *)(v2 + 16) & 1) == 0) {
      return 0;
    }
  }
  for (uint64_t j = *(unsigned int *)(a1 + 56); (int)j >= 1; --j)
  {
    uint64_t v4 = *(void *)(*(void *)(a1 + 64) + 8 * j);
    if ((*(unsigned char *)(v4 + 16) & 0x10) == 0) {
      return 0;
    }
  }
  for (uint64_t k = *(unsigned int *)(a1 + 80); (int)k >= 1; --k)
  {
    uint64_t v6 = *(void *)(*(void *)(a1 + 88) + 8 * k);
    if ((*(unsigned char *)(v6 + 16) & 2) == 0) {
      return 0;
    }
  }
  return sub_142D47C(a1 + 128);
}

uint64_t sub_13F668C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  if ((uint64_t (***)())a1 != &off_2537380 && *(void *)(a1 + 24))
  {
    sub_15B0994();
    operator delete();
  }
  if (*(void *)(a1 + 8)) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_13F6744(uint64_t a1)
{
  sub_13F668C(a1);

  operator delete();
}

unsigned char *sub_13F677C(unsigned char *result)
{
  uint64_t v1 = result;
  int v2 = *((_DWORD *)result + 4);
  if (v2) {
    uint64_t result = sub_15B09D0(*((void *)result + 3));
  }
  if ((v2 & 0xE) != 0)
  {
    *((void *)v1 + 4) = 0;
    *((void *)v1 + 5) = 0x100000000;
  }
  char v4 = v1[8];
  uint64_t v3 = v1 + 8;
  *((_DWORD *)v3 + 2) = 0;
  if (v4)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_13F67E8(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v33 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v33, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    char v8 = v33 + 1;
    unsigned int v9 = *v33;
    if (*v33 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        char v8 = (char *)sub_188C180((uint64_t)v33, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        char v8 = v33 + 2;
      }
    }
    int v33 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_32;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 24);
        if (!v12)
        {
          int v13 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            int v13 = (void *)*v13;
          }
          uint64_t v12 = sub_15C1918((uint64_t)v13);
          *(void *)(a1 + 24) = v12;
          char v8 = v33;
        }
        int v14 = sub_1198F14(a3, v12, (unsigned __int8 *)v8);
        goto LABEL_39;
      case 2u:
        if (v9 != 16) {
          goto LABEL_32;
        }
        uint64_t v15 = v8 + 1;
        unint64_t v16 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_19;
        }
        int v17 = *v15;
        int v18 = v16 + (v17 << 7);
        unint64_t v16 = (v18 - 128);
        if (v17 < 0)
        {
          int v33 = (char *)sub_188C138((uint64_t)v8, (v18 - 128));
          if (!v33) {
            goto LABEL_55;
          }
          unint64_t v16 = v27;
        }
        else
        {
          uint64_t v15 = v8 + 2;
LABEL_19:
          int v33 = v15;
        }
        if ((v16 - 1) > 2)
        {
          if (*v7) {
            uint64_t v32 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v32 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(2, v16, v32);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 8u;
          *(_DWORD *)(a1 + 44) = v16;
        }
        goto LABEL_40;
      case 3u:
        if (v9 != 24) {
          goto LABEL_32;
        }
        v5 |= 2u;
        int v19 = v8 + 1;
        uint64_t v20 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_26;
        }
        int v21 = *v19;
        uint64_t v20 = v20 + (v21 << 7) - 128;
        if (v21 < 0)
        {
          int v28 = (char *)sub_188C138((uint64_t)v8, v20);
          int v33 = v28;
          *(void *)(a1 + 32) = v29;
          if (!v28) {
            goto LABEL_55;
          }
        }
        else
        {
          int v19 = v8 + 2;
LABEL_26:
          int v33 = v19;
          *(void *)(a1 + 32) = v20;
        }
        goto LABEL_40;
      case 5u:
        if (v9 != 40) {
          goto LABEL_32;
        }
        v5 |= 4u;
        int v22 = v8 + 1;
        int v23 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_31;
        }
        int v24 = *v22;
        int v23 = v23 + (v24 << 7) - 128;
        if (v24 < 0)
        {
          int v30 = (char *)sub_188C0D0((uint64_t)v8, v23);
          int v33 = v30;
          *(_DWORD *)(a1 + 40) = v31;
          if (!v30) {
            goto LABEL_55;
          }
        }
        else
        {
          int v22 = v8 + 2;
LABEL_31:
          int v33 = v22;
          *(_DWORD *)(a1 + 40) = v23;
        }
        goto LABEL_40;
      default:
LABEL_32:
        if (v9) {
          BOOL v25 = (v9 & 7) == 4;
        }
        else {
          BOOL v25 = 1;
        }
        if (!v25)
        {
          if (*v7)
          {
            int v26 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            int v26 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            char v8 = v33;
          }
          int v14 = (char *)sub_1885AC0(v9, v26, v8, a3);
LABEL_39:
          int v33 = v14;
          if (!v14) {
            goto LABEL_55;
          }
LABEL_40:
          if (sub_11947B8((uint64_t)a3, &v33, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_55:
        }
          int v33 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v33;
    }
  }
}

char *sub_13F6B00(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  char v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 44);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    char v4 = sub_15B0C0C(v7, v9, a3);
  }
  if ((v6 & 8) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 44);
    char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v13 = *(void *)(a1 + 32);
    char *v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unint64_t v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v16 = *(_DWORD *)(a1 + 40);
    char *v4 = 40;
    v4[1] = v16;
    if (v16 > 0x7F)
    {
      v4[1] = v16 | 0x80;
      unsigned int v17 = v16 >> 7;
      v4[2] = v16 >> 7;
      v4 += 3;
      if (v16 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v18 = v17 >> 14;
          v17 >>= 7;
          *v4++ = v17;
        }
        while (v18);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v19 = *(void *)(a1 + 8);
  if ((v19 & 1) == 0) {
    return v4;
  }
  unint64_t v21 = v19 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v21 + 31) < 0)
  {
    int v22 = *(void **)(v21 + 8);
    uint64_t v23 = *(void *)(v21 + 16);
  }
  else
  {
    int v22 = (void *)(v21 + 8);
    LODWORD(v23) = *(unsigned __int8 *)(v21 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v23)
  {
    uint64_t v24 = (int)v23;
    memcpy(v4, v22, (int)v23);
    v4 += v24;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v22, v23, v4);
}

uint64_t sub_13F6D90(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0xF) == 0)
  {
    uint64_t result = 0;
    goto LABEL_16;
  }
  if (v2)
  {
    uint64_t v4 = sub_15B0D90(*(void *)(a1 + 24));
    uint64_t result = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t result = 0;
  if ((v2 & 2) != 0) {
LABEL_7:
  }
    result += ((9 * (__clz(*(void *)(a1 + 32) | 1) ^ 0x3F) + 73) >> 6) + 1;
LABEL_8:
  if ((v2 & 4) != 0)
  {
    result += ((9 * (__clz(*(_DWORD *)(a1 + 40) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 8) == 0) {
      goto LABEL_16;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_16;
  }
  int v5 = *(_DWORD *)(a1 + 44);
  if (v5 < 0) {
    uint64_t v6 = 11;
  }
  else {
    uint64_t v6 = ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  result += v6;
LABEL_16:
  uint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    unint64_t v8 = v7 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v8 + 31) < 0) {
      uint64_t v9 = *(void *)(v8 + 16);
    }
    else {
      uint64_t v9 = *(unsigned __int8 *)(v8 + 31);
    }
    result += v9;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

uint64_t sub_13F6EB4(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 1;
  }
  uint64_t result = sub_15B0F18(*(void *)(a1 + 24));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_13F6EE0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gemini.EntryPoint");
}

uint64_t sub_13F6EF0(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  int v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_13F6F90(uint64_t a1)
{
  sub_13F6EF0(a1);

  operator delete();
}

uint64_t sub_13F6FC8(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if (v1)
  {
    unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)unint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
    }
  }
  if ((v1 & 6) != 0)
  {
    *(void *)(a1 + 32) = 0;
    *(void *)(a1 + 40) = 0;
  }
  char v4 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v4) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_13F7018(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)BOOL v25 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v25, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    unint64_t v8 = (char *)(*(void *)v25 + 1);
    unsigned int v9 = **(unsigned char **)v25;
    if ((char)**(unsigned char **)v25 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unint64_t v8 = (char *)sub_188C180(*(uint64_t *)v25, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unint64_t v8 = (char *)(*(void *)v25 + 2);
      }
    }
    *(void *)BOOL v25 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 != 3) {
      break;
    }
    if (v9 != 24) {
      goto LABEL_14;
    }
    v5 |= 4u;
    unsigned int v17 = v8 + 1;
    uint64_t v18 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_25;
    }
    int v19 = *v17;
    uint64_t v18 = v18 + (v19 << 7) - 128;
    if ((v19 & 0x80000000) == 0)
    {
      unsigned int v17 = v8 + 2;
LABEL_25:
      *(void *)BOOL v25 = v17;
      *(void *)(a1 + 40) = v18;
      goto LABEL_32;
    }
    uint64_t v23 = sub_188C138((uint64_t)v8, v18);
    *(void *)BOOL v25 = v23;
    *(void *)(a1 + 40) = v24;
    if (!v23) {
      goto LABEL_39;
    }
LABEL_32:
    if (sub_11947B8((uint64_t)a3, (char **)v25, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v12 == 2)
  {
    if (v9 == 17)
    {
      v5 |= 2u;
      *(void *)(a1 + 32) = *(void *)v8;
      *(void *)BOOL v25 = v8 + 8;
      goto LABEL_32;
    }
  }
  else if (v12 == 1 && v9 == 10)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v20 = *(void *)(a1 + 8);
    unint64_t v21 = (uint64_t *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
    if (v20) {
      unint64_t v21 = (uint64_t *)*v21;
    }
    int v22 = (std::string *)sub_1880F84((void *)(a1 + 24), v21);
    unsigned int v16 = (void *)sub_188C244(v22, *(char **)v25, (uint64_t)a3);
LABEL_31:
    *(void *)BOOL v25 = v16;
    if (!v16) {
      goto LABEL_39;
    }
    goto LABEL_32;
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (*v7)
    {
      unint64_t v15 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unint64_t v8 = *(char **)v25;
    }
    unsigned int v16 = sub_1885AC0(v9, v15, v8, a3);
    goto LABEL_31;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_39:
  *(void *)BOOL v25 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return *(void *)v25;
}

unsigned char *sub_13F721C(uint64_t a1, unsigned char *__dst, void *a3)
{
  char v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    char v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_15;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v7 = *(void *)(a1 + 32);
  unsigned char *v4 = 17;
  *(void *)(v4 + 1) = v7;
  v4 += 9;
  if ((v6 & 4) != 0)
  {
LABEL_9:
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v8 = *(void *)(a1 + 40);
    unsigned char *v4 = 24;
    v4[1] = v8;
    if (v8 > 0x7F)
    {
      v4[1] = v8 | 0x80;
      unint64_t v9 = v8 >> 7;
      v4[2] = v8 >> 7;
      v4 += 3;
      if (v8 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v10 = v9 >> 14;
          v9 >>= 7;
          *v4++ = v9;
        }
        while (v10);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_15:
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return v4;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    BOOL v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    BOOL v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*a3 - (void)v4 >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(v4, v14, (int)v15);
    v4 += v16;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v14, v15, v4);
}

uint64_t sub_13F73A8(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 7) != 0)
  {
    if (v1)
    {
      unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
      uint64_t v5 = *(void *)(v3 + 8);
      if ((v4 & 0x80u) == 0) {
        uint64_t v5 = v4;
      }
      uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    else
    {
      uint64_t v2 = 0;
    }
    if ((v1 & 2) != 0) {
      v2 += 9;
    }
    if ((v1 & 4) != 0) {
      v2 += ((9 * (__clz(*(void *)(a1 + 40) | 1) ^ 0x3F) + 73) >> 6) + 1;
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v6 = *(void *)(a1 + 8);
  if (v6)
  {
    unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v8 + 31) < 0) {
      uint64_t v9 = *(void *)(v8 + 16);
    }
    else {
      uint64_t v9 = *(unsigned __int8 *)(v8 + 31);
    }
    v2 += v9;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_13F746C(std::string *result, uint64_t a2)
{
  unint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 7) != 0)
  {
    if (v4)
    {
      uint64_t v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      uint64_t v7 = (std::string **)&result[1];
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v9 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v9 = (uint64_t *)*v9;
      }
      uint64_t result = sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0)
        {
LABEL_6:
          LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
          goto LABEL_7;
        }
LABEL_5:
        v3[1].__r_.__value_.__r.__words[2] = *(void *)(a2 + 40);
        goto LABEL_6;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    v3[1].__r_.__value_.__l.__size_ = *(void *)(a2 + 32);
    if ((v4 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_7:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_13F753C()
{
  return 1;
}

void *sub_13F7544@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gemini.Category");
}

void *sub_13F7554(void *a1)
{
  unint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_13F75C8(void *a1)
{
  sub_13F7554(a1);

  operator delete();
}

uint64_t sub_13F7600(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 3) != 0)
  {
    *(unsigned char *)(a1 + 28) = 0;
    *(_DWORD *)(a1 + 24) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_13F7628(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v27 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v27, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    unint64_t v8 = v27 + 1;
    unsigned int v9 = *v27;
    if (*v27 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unint64_t v8 = (char *)sub_188C180((uint64_t)v27, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unint64_t v8 = v27 + 2;
      }
    }
    unint64_t v27 = v8;
    if (v9 >> 3 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_13;
    }
    v5 |= 2u;
    uint64_t v15 = v8 + 1;
    uint64_t v16 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_25;
    }
    int v17 = *v15;
    uint64_t v16 = v16 + (v17 << 7) - 128;
    if ((v17 & 0x80000000) == 0)
    {
      uint64_t v15 = v8 + 2;
LABEL_25:
      unint64_t v27 = v15;
      *(unsigned char *)(a1 + 28) = v16 != 0;
      goto LABEL_36;
    }
    uint64_t v23 = (char *)sub_188C138((uint64_t)v8, v16);
    unint64_t v27 = v23;
    *(unsigned char *)(a1 + 28) = v24 != 0;
    if (!v23) {
      goto LABEL_49;
    }
LABEL_36:
    if (sub_11947B8((uint64_t)a3, &v27, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 >> 3 == 1 && v9 == 8)
  {
    uint64_t v18 = v8 + 1;
    unint64_t v19 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_29;
    }
    int v20 = *v18;
    int v21 = v19 + (v20 << 7);
    unint64_t v19 = (v21 - 128);
    if (v20 < 0)
    {
      unint64_t v27 = (char *)sub_188C138((uint64_t)v8, (v21 - 128));
      if (!v27) {
        goto LABEL_49;
      }
      unint64_t v19 = v25;
    }
    else
    {
      uint64_t v18 = v8 + 2;
LABEL_29:
      unint64_t v27 = v18;
    }
    if ((v19 - 2) < 0xE || v19 == 0)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      *(_DWORD *)(a1 + 24) = v19;
    }
    else
    {
      if (*v7) {
        int v26 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        int v26 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      sub_188C020(1, v19, v26);
    }
    goto LABEL_36;
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      BOOL v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      BOOL v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unint64_t v8 = v27;
    }
    unint64_t v27 = (char *)sub_1885AC0(v9, v14, v8, a3);
    if (!v27) {
      goto LABEL_49;
    }
    goto LABEL_36;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_49:
  unint64_t v27 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v27;
}

unsigned char *sub_13F7874(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v10 = *(unsigned char *)(a1 + 28);
    unsigned char *v4 = 16;
    v4[1] = v10;
    v4 += 2;
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return v4;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    BOOL v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    BOOL v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(v4, v14, (int)v15);
    v4 += v16;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v14, v15, v4);
}

uint64_t sub_13F79D4(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) != 0)
  {
    if (v1)
    {
      int v4 = *(_DWORD *)(a1 + 24);
      if (v4 < 0) {
        uint64_t v2 = 11;
      }
      else {
        uint64_t v2 = ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
    }
    else
    {
      uint64_t v2 = 0;
    }
    if ((v1 & 2) != 0) {
      uint64_t v3 = v2 + 2;
    }
    else {
      uint64_t v3 = v2;
    }
  }
  else
  {
    uint64_t v3 = 0;
  }
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5)
  {
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v7 + 31) < 0) {
      uint64_t v8 = *(void *)(v7 + 16);
    }
    else {
      uint64_t v8 = *(unsigned __int8 *)(v7 + 31);
    }
    v3 += v8;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

uint64_t sub_13F7A64()
{
  return 1;
}

void *sub_13F7A6C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gemini.StructuredAttributes.AllowedPaymentMethod");
}

void *sub_13F7A7C(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_13F7AF0(void *a1)
{
  sub_13F7A7C(a1);

  operator delete();
}

uint64_t sub_13F7B28(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 3) != 0)
  {
    *(unsigned char *)(a1 + 28) = 0;
    *(_DWORD *)(a1 + 24) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_13F7B50(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v26 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v26 + 1;
    unsigned int v9 = *v26;
    if (*v26 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v26, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v26 + 2;
      }
    }
    int v26 = v8;
    if (v9 >> 3 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_13;
    }
    v5 |= 2u;
    uint64_t v15 = v8 + 1;
    uint64_t v16 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_25;
    }
    int v17 = *v15;
    uint64_t v16 = v16 + (v17 << 7) - 128;
    if ((v17 & 0x80000000) == 0)
    {
      uint64_t v15 = v8 + 2;
LABEL_25:
      int v26 = v15;
      *(unsigned char *)(a1 + 28) = v16 != 0;
      goto LABEL_32;
    }
    int v22 = (char *)sub_188C138((uint64_t)v8, v16);
    int v26 = v22;
    *(unsigned char *)(a1 + 28) = v23 != 0;
    if (!v22) {
      goto LABEL_45;
    }
LABEL_32:
    if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 >> 3 == 1 && v9 == 8)
  {
    uint64_t v18 = v8 + 1;
    unint64_t v19 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_29;
    }
    int v20 = *v18;
    int v21 = v19 + (v20 << 7);
    unint64_t v19 = (v21 - 128);
    if (v20 < 0)
    {
      int v26 = (char *)sub_188C138((uint64_t)v8, (v21 - 128));
      if (!v26) {
        goto LABEL_45;
      }
      unint64_t v19 = v24;
    }
    else
    {
      uint64_t v18 = v8 + 2;
LABEL_29:
      int v26 = v18;
    }
    if (v19 > 9)
    {
      if (*v7) {
        unint64_t v25 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        unint64_t v25 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      sub_188C020(1, v19, v25);
    }
    else
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      *(_DWORD *)(a1 + 24) = v19;
    }
    goto LABEL_32;
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      BOOL v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      BOOL v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = v26;
    }
    int v26 = (char *)sub_1885AC0(v9, v14, v8, a3);
    if (!v26) {
      goto LABEL_45;
    }
    goto LABEL_32;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_45:
  int v26 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v26;
}

unsigned char *sub_13F7D94(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v10 = *(unsigned char *)(a1 + 28);
    unsigned char *v4 = 16;
    v4[1] = v10;
    v4 += 2;
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return v4;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    BOOL v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    BOOL v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(v4, v14, (int)v15);
    v4 += v16;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v14, v15, v4);
}

uint64_t sub_13F7EF4(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) != 0)
  {
    if (v1)
    {
      int v4 = *(_DWORD *)(a1 + 24);
      if (v4 < 0) {
        uint64_t v2 = 11;
      }
      else {
        uint64_t v2 = ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
    }
    else
    {
      uint64_t v2 = 0;
    }
    if ((v1 & 2) != 0) {
      uint64_t v3 = v2 + 2;
    }
    else {
      uint64_t v3 = v2;
    }
  }
  else
  {
    uint64_t v3 = 0;
  }
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5)
  {
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v7 + 31) < 0) {
      uint64_t v8 = *(void *)(v7 + 16);
    }
    else {
      uint64_t v8 = *(unsigned __int8 *)(v7 + 31);
    }
    v3 += v8;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

uint64_t sub_13F7F84()
{
  return 1;
}

void *sub_13F7F8C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gemini.StructuredAttributes.AmbianceAvailability");
}

void *sub_13F7F9C(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_13F8010(void *a1)
{
  sub_13F7F9C(a1);

  operator delete();
}

uint64_t sub_13F8048(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 3) != 0)
  {
    *(unsigned char *)(a1 + 28) = 0;
    *(_DWORD *)(a1 + 24) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_13F8070(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v26 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v26 + 1;
    unsigned int v9 = *v26;
    if (*v26 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v26, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v26 + 2;
      }
    }
    int v26 = v8;
    if (v9 >> 3 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_13;
    }
    v5 |= 2u;
    uint64_t v15 = v8 + 1;
    uint64_t v16 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_25;
    }
    int v17 = *v15;
    uint64_t v16 = v16 + (v17 << 7) - 128;
    if ((v17 & 0x80000000) == 0)
    {
      uint64_t v15 = v8 + 2;
LABEL_25:
      int v26 = v15;
      *(unsigned char *)(a1 + 28) = v16 != 0;
      goto LABEL_32;
    }
    int v22 = (char *)sub_188C138((uint64_t)v8, v16);
    int v26 = v22;
    *(unsigned char *)(a1 + 28) = v23 != 0;
    if (!v22) {
      goto LABEL_45;
    }
LABEL_32:
    if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 >> 3 == 1 && v9 == 8)
  {
    uint64_t v18 = v8 + 1;
    unint64_t v19 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_29;
    }
    int v20 = *v18;
    int v21 = v19 + (v20 << 7);
    unint64_t v19 = (v21 - 128);
    if (v20 < 0)
    {
      int v26 = (char *)sub_188C138((uint64_t)v8, (v21 - 128));
      if (!v26) {
        goto LABEL_45;
      }
      unint64_t v19 = v24;
    }
    else
    {
      uint64_t v18 = v8 + 2;
LABEL_29:
      int v26 = v18;
    }
    if (v19 > 5)
    {
      if (*v7) {
        unint64_t v25 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        unint64_t v25 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      sub_188C020(1, v19, v25);
    }
    else
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      *(_DWORD *)(a1 + 24) = v19;
    }
    goto LABEL_32;
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      BOOL v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      BOOL v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = v26;
    }
    int v26 = (char *)sub_1885AC0(v9, v14, v8, a3);
    if (!v26) {
      goto LABEL_45;
    }
    goto LABEL_32;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_45:
  int v26 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v26;
}

unsigned char *sub_13F82B4(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v10 = *(unsigned char *)(a1 + 28);
    unsigned char *v4 = 16;
    v4[1] = v10;
    v4 += 2;
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return v4;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    BOOL v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    BOOL v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(v4, v14, (int)v15);
    v4 += v16;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v14, v15, v4);
}

uint64_t sub_13F8414(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) != 0)
  {
    if (v1)
    {
      int v4 = *(_DWORD *)(a1 + 24);
      if (v4 < 0) {
        uint64_t v2 = 11;
      }
      else {
        uint64_t v2 = ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
    }
    else
    {
      uint64_t v2 = 0;
    }
    if ((v1 & 2) != 0) {
      uint64_t v3 = v2 + 2;
    }
    else {
      uint64_t v3 = v2;
    }
  }
  else
  {
    uint64_t v3 = 0;
  }
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5)
  {
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v7 + 31) < 0) {
      uint64_t v8 = *(void *)(v7 + 16);
    }
    else {
      uint64_t v8 = *(unsigned __int8 *)(v7 + 31);
    }
    v3 += v8;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

uint64_t sub_13F84A4()
{
  return 1;
}

void *sub_13F84AC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gemini.StructuredAttributes.ParkingAvailability");
}

void *sub_13F84BC(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_13F8530(void *a1)
{
  sub_13F84BC(a1);

  operator delete();
}

uint64_t sub_13F8568(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 3) != 0)
  {
    *(unsigned char *)(a1 + 28) = 0;
    *(_DWORD *)(a1 + 24) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_13F8590(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v26 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v26 + 1;
    unsigned int v9 = *v26;
    if (*v26 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v26, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v26 + 2;
      }
    }
    int v26 = v8;
    if (v9 >> 3 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_13;
    }
    v5 |= 2u;
    uint64_t v15 = v8 + 1;
    uint64_t v16 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_25;
    }
    int v17 = *v15;
    uint64_t v16 = v16 + (v17 << 7) - 128;
    if ((v17 & 0x80000000) == 0)
    {
      uint64_t v15 = v8 + 2;
LABEL_25:
      int v26 = v15;
      *(unsigned char *)(a1 + 28) = v16 != 0;
      goto LABEL_32;
    }
    int v22 = (char *)sub_188C138((uint64_t)v8, v16);
    int v26 = v22;
    *(unsigned char *)(a1 + 28) = v23 != 0;
    if (!v22) {
      goto LABEL_45;
    }
LABEL_32:
    if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 >> 3 == 1 && v9 == 8)
  {
    uint64_t v18 = v8 + 1;
    unint64_t v19 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_29;
    }
    int v20 = *v18;
    int v21 = v19 + (v20 << 7);
    unint64_t v19 = (v21 - 128);
    if (v20 < 0)
    {
      int v26 = (char *)sub_188C138((uint64_t)v8, (v21 - 128));
      if (!v26) {
        goto LABEL_45;
      }
      unint64_t v19 = v24;
    }
    else
    {
      uint64_t v18 = v8 + 2;
LABEL_29:
      int v26 = v18;
    }
    if (v19 > 6)
    {
      if (*v7) {
        unint64_t v25 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        unint64_t v25 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      sub_188C020(1, v19, v25);
    }
    else
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      *(_DWORD *)(a1 + 24) = v19;
    }
    goto LABEL_32;
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      BOOL v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      BOOL v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = v26;
    }
    int v26 = (char *)sub_1885AC0(v9, v14, v8, a3);
    if (!v26) {
      goto LABEL_45;
    }
    goto LABEL_32;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_45:
  int v26 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v26;
}

unsigned char *sub_13F87D4(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v10 = *(unsigned char *)(a1 + 28);
    unsigned char *v4 = 16;
    v4[1] = v10;
    v4 += 2;
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return v4;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    BOOL v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    BOOL v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(v4, v14, (int)v15);
    v4 += v16;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v14, v15, v4);
}

uint64_t sub_13F8934(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) != 0)
  {
    if (v1)
    {
      int v4 = *(_DWORD *)(a1 + 24);
      if (v4 < 0) {
        uint64_t v2 = 11;
      }
      else {
        uint64_t v2 = ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
    }
    else
    {
      uint64_t v2 = 0;
    }
    if ((v1 & 2) != 0) {
      uint64_t v3 = v2 + 2;
    }
    else {
      uint64_t v3 = v2;
    }
  }
  else
  {
    uint64_t v3 = 0;
  }
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5)
  {
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v7 + 31) < 0) {
      uint64_t v8 = *(void *)(v7 + 16);
    }
    else {
      uint64_t v8 = *(unsigned __int8 *)(v7 + 31);
    }
    v3 += v8;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

uint64_t sub_13F89C4()
{
  return 1;
}

void *sub_13F89CC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gemini.StructuredAttributes.MealAvailability");
}

void *sub_13F89DC(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_13F8A50(void *a1)
{
  sub_13F89DC(a1);

  operator delete();
}

uint64_t sub_13F8A88(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 3) != 0)
  {
    *(unsigned char *)(a1 + 28) = 0;
    *(_DWORD *)(a1 + 24) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_13F8AB0(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v26 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v26 + 1;
    unsigned int v9 = *v26;
    if (*v26 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v26, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v26 + 2;
      }
    }
    int v26 = v8;
    if (v9 >> 3 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_13;
    }
    v5 |= 2u;
    uint64_t v15 = v8 + 1;
    uint64_t v16 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_25;
    }
    int v17 = *v15;
    uint64_t v16 = v16 + (v17 << 7) - 128;
    if ((v17 & 0x80000000) == 0)
    {
      uint64_t v15 = v8 + 2;
LABEL_25:
      int v26 = v15;
      *(unsigned char *)(a1 + 28) = v16 != 0;
      goto LABEL_32;
    }
    int v22 = (char *)sub_188C138((uint64_t)v8, v16);
    int v26 = v22;
    *(unsigned char *)(a1 + 28) = v23 != 0;
    if (!v22) {
      goto LABEL_45;
    }
LABEL_32:
    if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 >> 3 == 1 && v9 == 8)
  {
    uint64_t v18 = v8 + 1;
    unint64_t v19 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_29;
    }
    int v20 = *v18;
    int v21 = v19 + (v20 << 7);
    unint64_t v19 = (v21 - 128);
    if (v20 < 0)
    {
      int v26 = (char *)sub_188C138((uint64_t)v8, (v21 - 128));
      if (!v26) {
        goto LABEL_45;
      }
      unint64_t v19 = v24;
    }
    else
    {
      uint64_t v18 = v8 + 2;
LABEL_29:
      int v26 = v18;
    }
    if (v19 > 8)
    {
      if (*v7) {
        unint64_t v25 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        unint64_t v25 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      sub_188C020(1, v19, v25);
    }
    else
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      *(_DWORD *)(a1 + 24) = v19;
    }
    goto LABEL_32;
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      BOOL v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      BOOL v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = v26;
    }
    int v26 = (char *)sub_1885AC0(v9, v14, v8, a3);
    if (!v26) {
      goto LABEL_45;
    }
    goto LABEL_32;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_45:
  int v26 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v26;
}

unsigned char *sub_13F8CF4(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v10 = *(unsigned char *)(a1 + 28);
    unsigned char *v4 = 16;
    v4[1] = v10;
    v4 += 2;
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return v4;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    BOOL v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    BOOL v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(v4, v14, (int)v15);
    v4 += v16;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v14, v15, v4);
}

uint64_t sub_13F8E54(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) != 0)
  {
    if (v1)
    {
      int v4 = *(_DWORD *)(a1 + 24);
      if (v4 < 0) {
        uint64_t v2 = 11;
      }
      else {
        uint64_t v2 = ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
    }
    else
    {
      uint64_t v2 = 0;
    }
    if ((v1 & 2) != 0) {
      uint64_t v3 = v2 + 2;
    }
    else {
      uint64_t v3 = v2;
    }
  }
  else
  {
    uint64_t v3 = 0;
  }
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5)
  {
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v7 + 31) < 0) {
      uint64_t v8 = *(void *)(v7 + 16);
    }
    else {
      uint64_t v8 = *(unsigned __int8 *)(v7 + 31);
    }
    v3 += v8;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

uint64_t sub_13F8EE4()
{
  return 1;
}

void *sub_13F8EEC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gemini.StructuredAttributes.HairSpecialty");
}

void *sub_13F8EFC(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_13F8F70(void *a1)
{
  sub_13F8EFC(a1);

  operator delete();
}

uint64_t sub_13F8FA8(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 3) != 0)
  {
    *(unsigned char *)(a1 + 28) = 0;
    *(_DWORD *)(a1 + 24) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_13F8FD0(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v26 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v26 + 1;
    unsigned int v9 = *v26;
    if (*v26 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v26, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v26 + 2;
      }
    }
    int v26 = v8;
    if (v9 >> 3 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_13;
    }
    v5 |= 2u;
    uint64_t v15 = v8 + 1;
    uint64_t v16 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_25;
    }
    int v17 = *v15;
    uint64_t v16 = v16 + (v17 << 7) - 128;
    if ((v17 & 0x80000000) == 0)
    {
      uint64_t v15 = v8 + 2;
LABEL_25:
      int v26 = v15;
      *(unsigned char *)(a1 + 28) = v16 != 0;
      goto LABEL_32;
    }
    int v22 = (char *)sub_188C138((uint64_t)v8, v16);
    int v26 = v22;
    *(unsigned char *)(a1 + 28) = v23 != 0;
    if (!v22) {
      goto LABEL_45;
    }
LABEL_32:
    if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 >> 3 == 1 && v9 == 8)
  {
    uint64_t v18 = v8 + 1;
    unint64_t v19 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_29;
    }
    int v20 = *v18;
    int v21 = v19 + (v20 << 7);
    unint64_t v19 = (v21 - 128);
    if (v20 < 0)
    {
      int v26 = (char *)sub_188C138((uint64_t)v8, (v21 - 128));
      if (!v26) {
        goto LABEL_45;
      }
      unint64_t v19 = v24;
    }
    else
    {
      uint64_t v18 = v8 + 2;
LABEL_29:
      int v26 = v18;
    }
    if (v19 > 4)
    {
      if (*v7) {
        unint64_t v25 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        unint64_t v25 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      sub_188C020(1, v19, v25);
    }
    else
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      *(_DWORD *)(a1 + 24) = v19;
    }
    goto LABEL_32;
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      BOOL v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      BOOL v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = v26;
    }
    int v26 = (char *)sub_1885AC0(v9, v14, v8, a3);
    if (!v26) {
      goto LABEL_45;
    }
    goto LABEL_32;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_45:
  int v26 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v26;
}

unsigned char *sub_13F9214(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v10 = *(unsigned char *)(a1 + 28);
    unsigned char *v4 = 16;
    v4[1] = v10;
    v4 += 2;
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return v4;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    BOOL v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    BOOL v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(v4, v14, (int)v15);
    v4 += v16;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v14, v15, v4);
}

uint64_t sub_13F9374(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) != 0)
  {
    if (v1)
    {
      int v4 = *(_DWORD *)(a1 + 24);
      if (v4 < 0) {
        uint64_t v2 = 11;
      }
      else {
        uint64_t v2 = ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
    }
    else
    {
      uint64_t v2 = 0;
    }
    if ((v1 & 2) != 0) {
      uint64_t v3 = v2 + 2;
    }
    else {
      uint64_t v3 = v2;
    }
  }
  else
  {
    uint64_t v3 = 0;
  }
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5)
  {
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v7 + 31) < 0) {
      uint64_t v8 = *(void *)(v7 + 16);
    }
    else {
      uint64_t v8 = *(unsigned __int8 *)(v7 + 31);
    }
    v3 += v8;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

uint64_t sub_13F9404()
{
  return 1;
}

void *sub_13F940C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gemini.StructuredAttributes.MusicAvailability");
}

void *sub_13F941C(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_13F9490(void *a1)
{
  sub_13F941C(a1);

  operator delete();
}

uint64_t sub_13F94C8(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 3) != 0)
  {
    *(unsigned char *)(a1 + 28) = 0;
    *(_DWORD *)(a1 + 24) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_13F94F0(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v26 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v26 + 1;
    unsigned int v9 = *v26;
    if (*v26 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v26, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v26 + 2;
      }
    }
    int v26 = v8;
    if (v9 >> 3 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_13;
    }
    v5 |= 2u;
    uint64_t v15 = v8 + 1;
    uint64_t v16 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_25;
    }
    int v17 = *v15;
    uint64_t v16 = v16 + (v17 << 7) - 128;
    if ((v17 & 0x80000000) == 0)
    {
      uint64_t v15 = v8 + 2;
LABEL_25:
      int v26 = v15;
      *(unsigned char *)(a1 + 28) = v16 != 0;
      goto LABEL_32;
    }
    int v22 = (char *)sub_188C138((uint64_t)v8, v16);
    int v26 = v22;
    *(unsigned char *)(a1 + 28) = v23 != 0;
    if (!v22) {
      goto LABEL_45;
    }
LABEL_32:
    if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 >> 3 == 1 && v9 == 8)
  {
    uint64_t v18 = v8 + 1;
    unint64_t v19 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_29;
    }
    int v20 = *v18;
    int v21 = v19 + (v20 << 7);
    unint64_t v19 = (v21 - 128);
    if (v20 < 0)
    {
      int v26 = (char *)sub_188C138((uint64_t)v8, (v21 - 128));
      if (!v26) {
        goto LABEL_45;
      }
      unint64_t v19 = v24;
    }
    else
    {
      uint64_t v18 = v8 + 2;
LABEL_29:
      int v26 = v18;
    }
    if (v19 > 5)
    {
      if (*v7) {
        unint64_t v25 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        unint64_t v25 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      sub_188C020(1, v19, v25);
    }
    else
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      *(_DWORD *)(a1 + 24) = v19;
    }
    goto LABEL_32;
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      BOOL v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      BOOL v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = v26;
    }
    int v26 = (char *)sub_1885AC0(v9, v14, v8, a3);
    if (!v26) {
      goto LABEL_45;
    }
    goto LABEL_32;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_45:
  int v26 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v26;
}

unsigned char *sub_13F9734(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v10 = *(unsigned char *)(a1 + 28);
    unsigned char *v4 = 16;
    v4[1] = v10;
    v4 += 2;
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return v4;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    BOOL v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    BOOL v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(v4, v14, (int)v15);
    v4 += v16;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v14, v15, v4);
}

uint64_t sub_13F9894(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) != 0)
  {
    if (v1)
    {
      int v4 = *(_DWORD *)(a1 + 24);
      if (v4 < 0) {
        uint64_t v2 = 11;
      }
      else {
        uint64_t v2 = ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
    }
    else
    {
      uint64_t v2 = 0;
    }
    if ((v1 & 2) != 0) {
      uint64_t v3 = v2 + 2;
    }
    else {
      uint64_t v3 = v2;
    }
  }
  else
  {
    uint64_t v3 = 0;
  }
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5)
  {
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v7 + 31) < 0) {
      uint64_t v8 = *(void *)(v7 + 16);
    }
    else {
      uint64_t v8 = *(unsigned __int8 *)(v7 + 31);
    }
    v3 += v8;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

uint64_t sub_13F9924()
{
  return 1;
}

void *sub_13F992C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gemini.StructuredAttributes.SeatingAvailability");
}

void *sub_13F993C(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_13F99B0(void *a1)
{
  sub_13F993C(a1);

  operator delete();
}

uint64_t sub_13F99E8(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 3) != 0)
  {
    *(unsigned char *)(a1 + 28) = 0;
    *(_DWORD *)(a1 + 24) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_13F9A10(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v26 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v26 + 1;
    unsigned int v9 = *v26;
    if (*v26 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v26, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v26 + 2;
      }
    }
    int v26 = v8;
    if (v9 >> 3 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_13;
    }
    v5 |= 2u;
    uint64_t v15 = v8 + 1;
    uint64_t v16 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_25;
    }
    int v17 = *v15;
    uint64_t v16 = v16 + (v17 << 7) - 128;
    if ((v17 & 0x80000000) == 0)
    {
      uint64_t v15 = v8 + 2;
LABEL_25:
      int v26 = v15;
      *(unsigned char *)(a1 + 28) = v16 != 0;
      goto LABEL_32;
    }
    int v22 = (char *)sub_188C138((uint64_t)v8, v16);
    int v26 = v22;
    *(unsigned char *)(a1 + 28) = v23 != 0;
    if (!v22) {
      goto LABEL_45;
    }
LABEL_32:
    if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 >> 3 == 1 && v9 == 8)
  {
    uint64_t v18 = v8 + 1;
    unint64_t v19 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_29;
    }
    int v20 = *v18;
    int v21 = v19 + (v20 << 7);
    unint64_t v19 = (v21 - 128);
    if (v20 < 0)
    {
      int v26 = (char *)sub_188C138((uint64_t)v8, (v21 - 128));
      if (!v26) {
        goto LABEL_45;
      }
      unint64_t v19 = v24;
    }
    else
    {
      uint64_t v18 = v8 + 2;
LABEL_29:
      int v26 = v18;
    }
    if (v19 > 7)
    {
      if (*v7) {
        unint64_t v25 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        unint64_t v25 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      sub_188C020(1, v19, v25);
    }
    else
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      *(_DWORD *)(a1 + 24) = v19;
    }
    goto LABEL_32;
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      BOOL v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      BOOL v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = v26;
    }
    int v26 = (char *)sub_1885AC0(v9, v14, v8, a3);
    if (!v26) {
      goto LABEL_45;
    }
    goto LABEL_32;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_45:
  int v26 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v26;
}

unsigned char *sub_13F9C54(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v10 = *(unsigned char *)(a1 + 28);
    unsigned char *v4 = 16;
    v4[1] = v10;
    v4 += 2;
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return v4;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    BOOL v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    BOOL v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(v4, v14, (int)v15);
    v4 += v16;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v14, v15, v4);
}

uint64_t sub_13F9DB4(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) != 0)
  {
    if (v1)
    {
      int v4 = *(_DWORD *)(a1 + 24);
      if (v4 < 0) {
        uint64_t v2 = 11;
      }
      else {
        uint64_t v2 = ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
    }
    else
    {
      uint64_t v2 = 0;
    }
    if ((v1 & 2) != 0) {
      uint64_t v3 = v2 + 2;
    }
    else {
      uint64_t v3 = v2;
    }
  }
  else
  {
    uint64_t v3 = 0;
  }
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5)
  {
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v7 + 31) < 0) {
      uint64_t v8 = *(void *)(v7 + 16);
    }
    else {
      uint64_t v8 = *(unsigned __int8 *)(v7 + 31);
    }
    v3 += v8;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

uint64_t sub_13F9E44()
{
  return 1;
}

void *sub_13F9E4C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gemini.StructuredAttributes.ServiceStyleAvailability");
}

void *sub_13F9E5C(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_13F9ED0(void *a1)
{
  sub_13F9E5C(a1);

  operator delete();
}

uint64_t sub_13F9F08(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 3) != 0)
  {
    *(unsigned char *)(a1 + 24) = 0;
    *(_DWORD *)(a1 + 28) = 1;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_13F9F34(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v26 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v26 + 1;
    unsigned int v9 = *v26;
    if (*v26 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v26, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v26 + 2;
      }
    }
    int v26 = v8;
    if (v9 >> 3 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_13;
    }
    uint64_t v15 = v8 + 1;
    uint64_t v16 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_25;
    }
    int v17 = *v15;
    uint64_t v16 = v16 + (v17 << 7) - 128;
    if ((v17 & 0x80000000) == 0)
    {
      uint64_t v15 = v8 + 2;
LABEL_25:
      int v26 = v15;
      *(unsigned char *)(a1 + 24) = v16 != 0;
      int v5 = 1;
      goto LABEL_32;
    }
    int v22 = (char *)sub_188C138((uint64_t)v8, v16);
    int v26 = v22;
    *(unsigned char *)(a1 + 24) = v23 != 0;
    int v5 = 1;
    if (!v22) {
      goto LABEL_45;
    }
LABEL_32:
    if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 >> 3 == 1 && v9 == 8)
  {
    uint64_t v18 = v8 + 1;
    unint64_t v19 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_29;
    }
    int v20 = *v18;
    int v21 = v19 + (v20 << 7);
    unint64_t v19 = (v21 - 128);
    if (v20 < 0)
    {
      int v26 = (char *)sub_188C138((uint64_t)v8, (v21 - 128));
      if (!v26) {
        goto LABEL_45;
      }
      unint64_t v19 = v24;
    }
    else
    {
      uint64_t v18 = v8 + 2;
LABEL_29:
      int v26 = v18;
    }
    if ((v19 - 1) > 6)
    {
      if (*v7) {
        unint64_t v25 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        unint64_t v25 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      sub_188C020(1, v19, v25);
    }
    else
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      *(_DWORD *)(a1 + 28) = v19;
    }
    goto LABEL_32;
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      BOOL v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      BOOL v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = v26;
    }
    int v26 = (char *)sub_1885AC0(v9, v14, v8, a3);
    if (!v26) {
      goto LABEL_45;
    }
    goto LABEL_32;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_45:
  int v26 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v26;
}

unsigned char *sub_13FA180(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 28);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v10 = *(unsigned char *)(a1 + 24);
    unsigned char *v4 = 16;
    v4[1] = v10;
    v4 += 2;
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return v4;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    BOOL v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    BOOL v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(v4, v14, (int)v15);
    v4 += v16;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v14, v15, v4);
}

uint64_t sub_13FA2E0(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) != 0)
  {
    uint64_t v2 = 2 * (v1 & 1);
    if ((v1 & 2) != 0)
    {
      int v3 = *(_DWORD *)(a1 + 28);
      if (v3 < 0) {
        uint64_t v4 = 11;
      }
      else {
        uint64_t v4 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
      v2 += v4;
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5)
  {
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v7 + 31) < 0) {
      uint64_t v8 = *(void *)(v7 + 16);
    }
    else {
      uint64_t v8 = *(unsigned __int8 *)(v7 + 31);
    }
    v2 += v8;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_13FA368()
{
  return 1;
}

void *sub_13FA370@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gemini.StructuredAttributes.AppleRepairAvailability");
}

uint64_t sub_13FA380(uint64_t a1)
{
  int v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_9;
    }
  }
  else if (v4)
  {
    goto LABEL_9;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_9:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_13FA438(uint64_t a1)
{
  sub_13FA380(a1);

  operator delete();
}

uint64_t sub_13FA470(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0) {
    goto LABEL_11;
  }
  if ((v1 & 1) == 0)
  {
LABEL_5:
    if ((v1 & 2) != 0) {
      goto LABEL_6;
    }
    goto LABEL_11;
  }
  unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v2 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v2 = 0;
    *(unsigned char *)(v2 + 23) = 0;
    goto LABEL_5;
  }
  **(unsigned char **)unint64_t v2 = 0;
  *(void *)(v2 + 8) = 0;
  if ((v1 & 2) != 0)
  {
LABEL_6:
    unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)unint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
LABEL_11:
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v5) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_13FA4EC(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v20 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
    return *(void *)v20;
  }
  int v6 = (void *)(a1 + 8);
  while (1)
  {
    unint64_t v7 = (char *)(*(void *)v20 + 1);
    unsigned int v8 = **(unsigned char **)v20;
    if ((char)**(unsigned char **)v20 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        unint64_t v7 = (char *)sub_188C180(*(uint64_t *)v20, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        unint64_t v7 = (char *)(*(void *)v20 + 2);
      }
    }
    *(void *)int v20 = v7;
    if (v8 >> 3 == 2)
    {
      if (v8 == 18)
      {
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v15 = *(void *)(a1 + 8);
        uint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          uint64_t v16 = (uint64_t *)*v16;
        }
        int v17 = (void *)(a1 + 32);
        goto LABEL_27;
      }
    }
    else if (v8 >> 3 == 1 && v8 == 10)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v18 = *(void *)(a1 + 8);
      uint64_t v16 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
      if (v18) {
        uint64_t v16 = (uint64_t *)*v16;
      }
      int v17 = (void *)(a1 + 24);
LABEL_27:
      unint64_t v19 = (std::string *)sub_1880F84(v17, v16);
      BOOL v14 = (void *)sub_188C244(v19, *(char **)v20, (uint64_t)a3);
      goto LABEL_28;
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      unint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unint64_t v7 = *(char **)v20;
    }
    BOOL v14 = sub_1885AC0(v8, v13, v7, a3);
LABEL_28:
    *(void *)int v20 = v14;
    if (!v14) {
      goto LABEL_34;
    }
    if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
      return *(void *)v20;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v20;
  }
LABEL_34:
  *(void *)int v20 = 0;
  return *(void *)v20;
}

char *sub_13FA694(uint64_t a1, char *__dst, void *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 2) != 0) {
    uint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v9 + 31) < 0)
  {
    unsigned int v10 = *(void **)(v9 + 8);
    uint64_t v11 = *(void *)(v9 + 16);
  }
  else
  {
    unsigned int v10 = (void *)(v9 + 8);
    LODWORD(v11) = *(unsigned __int8 *)(v9 + 31);
  }
  if (*a3 - (void)v4 >= (int)v11)
  {
    uint64_t v12 = (int)v11;
    memcpy(v4, v10, (int)v11);
    v4 += v12;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v10, v11, v4);
}

uint64_t sub_13FA780(uint64_t a1)
{
  if ((~*(_DWORD *)(a1 + 16) & 3) != 0)
  {
    uint64_t result = sub_1231798(a1);
  }
  else
  {
    unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v3 = *(unsigned __int8 *)(v2 + 23);
    uint64_t v4 = *(void *)(v2 + 8);
    if ((v3 & 0x80u) == 0) {
      uint64_t v4 = v3;
    }
    uint64_t v5 = (9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6;
    unint64_t v6 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    uint64_t result = v4 + v8 + v5 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
  uint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    unint64_t v11 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    result += v12;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

BOOL sub_13FA860(uint64_t a1)
{
  return (~*(_DWORD *)(a1 + 16) & 3) == 0;
}

void *sub_13FA874@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gemini.StructuredAttributes.GeocoderDebug");
}

void *sub_13FA884(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_13FA8F8(void *a1)
{
  sub_13FA884(a1);

  operator delete();
}

uint64_t sub_13FA930(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 3) != 0)
  {
    *(unsigned char *)(a1 + 24) = 0;
    *(_DWORD *)(a1 + 28) = 1;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_13FA95C(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v26 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v26 + 1;
    unsigned int v9 = *v26;
    if (*v26 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v26, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v26 + 2;
      }
    }
    int v26 = v8;
    if (v9 >> 3 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_13;
    }
    uint64_t v15 = v8 + 1;
    uint64_t v16 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_25;
    }
    int v17 = *v15;
    uint64_t v16 = v16 + (v17 << 7) - 128;
    if ((v17 & 0x80000000) == 0)
    {
      uint64_t v15 = v8 + 2;
LABEL_25:
      int v26 = v15;
      *(unsigned char *)(a1 + 24) = v16 != 0;
      int v5 = 1;
      goto LABEL_32;
    }
    int v22 = (char *)sub_188C138((uint64_t)v8, v16);
    int v26 = v22;
    *(unsigned char *)(a1 + 24) = v23 != 0;
    int v5 = 1;
    if (!v22) {
      goto LABEL_45;
    }
LABEL_32:
    if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 >> 3 == 1 && v9 == 8)
  {
    uint64_t v18 = v8 + 1;
    unint64_t v19 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_29;
    }
    int v20 = *v18;
    int v21 = v19 + (v20 << 7);
    unint64_t v19 = (v21 - 128);
    if (v20 < 0)
    {
      int v26 = (char *)sub_188C138((uint64_t)v8, (v21 - 128));
      if (!v26) {
        goto LABEL_45;
      }
      unint64_t v19 = v24;
    }
    else
    {
      uint64_t v18 = v8 + 2;
LABEL_29:
      int v26 = v18;
    }
    if (v19 == 1)
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      *(_DWORD *)(a1 + 28) = 1;
    }
    else
    {
      if (*v7) {
        unint64_t v25 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        unint64_t v25 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      sub_188C020(1, v19, v25);
    }
    goto LABEL_32;
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      BOOL v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      BOOL v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = v26;
    }
    int v26 = (char *)sub_1885AC0(v9, v14, v8, a3);
    if (!v26) {
      goto LABEL_45;
    }
    goto LABEL_32;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_45:
  int v26 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v26;
}

unsigned char *sub_13FABA8(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 28);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v10 = *(unsigned char *)(a1 + 24);
    unsigned char *v4 = 16;
    v4[1] = v10;
    v4 += 2;
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return v4;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    BOOL v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    BOOL v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(v4, v14, (int)v15);
    v4 += v16;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v14, v15, v4);
}

uint64_t sub_13FAD08(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) != 0)
  {
    uint64_t v2 = 2 * (v1 & 1);
    if ((v1 & 2) != 0)
    {
      int v3 = *(_DWORD *)(a1 + 28);
      if (v3 < 0) {
        uint64_t v4 = 11;
      }
      else {
        uint64_t v4 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
      v2 += v4;
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5)
  {
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v7 + 31) < 0) {
      uint64_t v8 = *(void *)(v7 + 16);
    }
    else {
      uint64_t v8 = *(unsigned __int8 *)(v7 + 31);
    }
    v2 += v8;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_13FAD90()
{
  return 1;
}

void *sub_13FAD98@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gemini.StructuredAttributes.DiscountAvailability");
}

void *sub_13FADA8(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_13FAE1C(void *a1)
{
  sub_13FADA8(a1);

  operator delete();
}

uint64_t sub_13FAE54(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 3) != 0)
  {
    *(unsigned char *)(a1 + 24) = 0;
    *(_DWORD *)(a1 + 28) = 1;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_13FAE80(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v26 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v26 + 1;
    unsigned int v9 = *v26;
    if (*v26 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v26, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v26 + 2;
      }
    }
    int v26 = v8;
    if (v9 >> 3 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_13;
    }
    uint64_t v15 = v8 + 1;
    uint64_t v16 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_25;
    }
    int v17 = *v15;
    uint64_t v16 = v16 + (v17 << 7) - 128;
    if ((v17 & 0x80000000) == 0)
    {
      uint64_t v15 = v8 + 2;
LABEL_25:
      int v26 = v15;
      *(unsigned char *)(a1 + 24) = v16 != 0;
      int v5 = 1;
      goto LABEL_32;
    }
    int v22 = (char *)sub_188C138((uint64_t)v8, v16);
    int v26 = v22;
    *(unsigned char *)(a1 + 24) = v23 != 0;
    int v5 = 1;
    if (!v22) {
      goto LABEL_45;
    }
LABEL_32:
    if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 >> 3 == 1 && v9 == 8)
  {
    uint64_t v18 = v8 + 1;
    unint64_t v19 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_29;
    }
    int v20 = *v18;
    int v21 = v19 + (v20 << 7);
    unint64_t v19 = (v21 - 128);
    if (v20 < 0)
    {
      int v26 = (char *)sub_188C138((uint64_t)v8, (v21 - 128));
      if (!v26) {
        goto LABEL_45;
      }
      unint64_t v19 = v24;
    }
    else
    {
      uint64_t v18 = v8 + 2;
LABEL_29:
      int v26 = v18;
    }
    if (v19 == 1)
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      *(_DWORD *)(a1 + 28) = 1;
    }
    else
    {
      if (*v7) {
        unint64_t v25 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        unint64_t v25 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      sub_188C020(1, v19, v25);
    }
    goto LABEL_32;
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      BOOL v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      BOOL v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = v26;
    }
    int v26 = (char *)sub_1885AC0(v9, v14, v8, a3);
    if (!v26) {
      goto LABEL_45;
    }
    goto LABEL_32;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_45:
  int v26 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v26;
}

unsigned char *sub_13FB0CC(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 28);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v10 = *(unsigned char *)(a1 + 24);
    unsigned char *v4 = 16;
    v4[1] = v10;
    v4 += 2;
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return v4;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    BOOL v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    BOOL v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(v4, v14, (int)v15);
    v4 += v16;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v14, v15, v4);
}

uint64_t sub_13FB22C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) != 0)
  {
    uint64_t v2 = 2 * (v1 & 1);
    if ((v1 & 2) != 0)
    {
      int v3 = *(_DWORD *)(a1 + 28);
      if (v3 < 0) {
        uint64_t v4 = 11;
      }
      else {
        uint64_t v4 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
      v2 += v4;
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5)
  {
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v7 + 31) < 0) {
      uint64_t v8 = *(void *)(v7 + 16);
    }
    else {
      uint64_t v8 = *(unsigned __int8 *)(v7 + 31);
    }
    v2 += v8;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_13FB2B4()
{
  return 1;
}

void *sub_13FB2BC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gemini.StructuredAttributes.RoomAvailability");
}

void *sub_13FB2CC(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_13FB340(void *a1)
{
  sub_13FB2CC(a1);

  operator delete();
}

uint64_t sub_13FB378(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 3) != 0)
  {
    *(unsigned char *)(a1 + 24) = 0;
    *(_DWORD *)(a1 + 28) = 1;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_13FB3A4(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v26 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v26 + 1;
    unsigned int v9 = *v26;
    if (*v26 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v26, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v26 + 2;
      }
    }
    int v26 = v8;
    if (v9 >> 3 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_13;
    }
    uint64_t v15 = v8 + 1;
    uint64_t v16 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_25;
    }
    int v17 = *v15;
    uint64_t v16 = v16 + (v17 << 7) - 128;
    if ((v17 & 0x80000000) == 0)
    {
      uint64_t v15 = v8 + 2;
LABEL_25:
      int v26 = v15;
      *(unsigned char *)(a1 + 24) = v16 != 0;
      int v5 = 1;
      goto LABEL_32;
    }
    int v22 = (char *)sub_188C138((uint64_t)v8, v16);
    int v26 = v22;
    *(unsigned char *)(a1 + 24) = v23 != 0;
    int v5 = 1;
    if (!v22) {
      goto LABEL_45;
    }
LABEL_32:
    if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 >> 3 == 1 && v9 == 8)
  {
    uint64_t v18 = v8 + 1;
    unint64_t v19 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_29;
    }
    int v20 = *v18;
    int v21 = v19 + (v20 << 7);
    unint64_t v19 = (v21 - 128);
    if (v20 < 0)
    {
      int v26 = (char *)sub_188C138((uint64_t)v8, (v21 - 128));
      if (!v26) {
        goto LABEL_45;
      }
      unint64_t v19 = v24;
    }
    else
    {
      uint64_t v18 = v8 + 2;
LABEL_29:
      int v26 = v18;
    }
    if ((v19 - 1) > 9)
    {
      if (*v7) {
        unint64_t v25 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        unint64_t v25 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      sub_188C020(1, v19, v25);
    }
    else
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      *(_DWORD *)(a1 + 28) = v19;
    }
    goto LABEL_32;
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      BOOL v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      BOOL v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = v26;
    }
    int v26 = (char *)sub_1885AC0(v9, v14, v8, a3);
    if (!v26) {
      goto LABEL_45;
    }
    goto LABEL_32;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_45:
  int v26 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v26;
}

unsigned char *sub_13FB5F0(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 28);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v10 = *(unsigned char *)(a1 + 24);
    unsigned char *v4 = 16;
    v4[1] = v10;
    v4 += 2;
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return v4;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    BOOL v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    BOOL v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(v4, v14, (int)v15);
    v4 += v16;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v14, v15, v4);
}

uint64_t sub_13FB750(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) != 0)
  {
    uint64_t v2 = 2 * (v1 & 1);
    if ((v1 & 2) != 0)
    {
      int v3 = *(_DWORD *)(a1 + 28);
      if (v3 < 0) {
        uint64_t v4 = 11;
      }
      else {
        uint64_t v4 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
      v2 += v4;
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5)
  {
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v7 + 31) < 0) {
      uint64_t v8 = *(void *)(v7 + 16);
    }
    else {
      uint64_t v8 = *(unsigned __int8 *)(v7 + 31);
    }
    v2 += v8;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_13FB7D8()
{
  return 1;
}

void *sub_13FB7E0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gemini.StructuredAttributes.AppleServiceAvailability");
}

void *sub_13FB7F0(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_13FB864(void *a1)
{
  sub_13FB7F0(a1);

  operator delete();
}

uint64_t sub_13FB89C(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 3) != 0)
  {
    *(unsigned char *)(a1 + 24) = 0;
    *(_DWORD *)(a1 + 28) = 1;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_13FB8C8(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v26 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v26 + 1;
    unsigned int v9 = *v26;
    if (*v26 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v26, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v26 + 2;
      }
    }
    int v26 = v8;
    if (v9 >> 3 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_13;
    }
    uint64_t v15 = v8 + 1;
    uint64_t v16 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_25;
    }
    int v17 = *v15;
    uint64_t v16 = v16 + (v17 << 7) - 128;
    if ((v17 & 0x80000000) == 0)
    {
      uint64_t v15 = v8 + 2;
LABEL_25:
      int v26 = v15;
      *(unsigned char *)(a1 + 24) = v16 != 0;
      int v5 = 1;
      goto LABEL_32;
    }
    int v22 = (char *)sub_188C138((uint64_t)v8, v16);
    int v26 = v22;
    *(unsigned char *)(a1 + 24) = v23 != 0;
    int v5 = 1;
    if (!v22) {
      goto LABEL_45;
    }
LABEL_32:
    if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 >> 3 == 1 && v9 == 8)
  {
    uint64_t v18 = v8 + 1;
    unint64_t v19 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_29;
    }
    int v20 = *v18;
    int v21 = v19 + (v20 << 7);
    unint64_t v19 = (v21 - 128);
    if (v20 < 0)
    {
      int v26 = (char *)sub_188C138((uint64_t)v8, (v21 - 128));
      if (!v26) {
        goto LABEL_45;
      }
      unint64_t v19 = v24;
    }
    else
    {
      uint64_t v18 = v8 + 2;
LABEL_29:
      int v26 = v18;
    }
    if ((v19 - 1) > 0xB)
    {
      if (*v7) {
        unint64_t v25 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        unint64_t v25 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      sub_188C020(1, v19, v25);
    }
    else
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      *(_DWORD *)(a1 + 28) = v19;
    }
    goto LABEL_32;
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      BOOL v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      BOOL v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = v26;
    }
    int v26 = (char *)sub_1885AC0(v9, v14, v8, a3);
    if (!v26) {
      goto LABEL_45;
    }
    goto LABEL_32;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_45:
  int v26 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v26;
}

unsigned char *sub_13FBB14(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 28);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v10 = *(unsigned char *)(a1 + 24);
    unsigned char *v4 = 16;
    v4[1] = v10;
    v4 += 2;
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return v4;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    BOOL v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    BOOL v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(v4, v14, (int)v15);
    v4 += v16;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v14, v15, v4);
}

uint64_t sub_13FBC74(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) != 0)
  {
    uint64_t v2 = 2 * (v1 & 1);
    if ((v1 & 2) != 0)
    {
      int v3 = *(_DWORD *)(a1 + 28);
      if (v3 < 0) {
        uint64_t v4 = 11;
      }
      else {
        uint64_t v4 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
      v2 += v4;
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5)
  {
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v7 + 31) < 0) {
      uint64_t v8 = *(void *)(v7 + 16);
    }
    else {
      uint64_t v8 = *(unsigned __int8 *)(v7 + 31);
    }
    v2 += v8;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_13FBCFC()
{
  return 1;
}

void *sub_13FBD04@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gemini.StructuredAttributes.HotelAmenityAvailability");
}

uint64_t sub_13FBD14(uint64_t a1)
{
  int v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_13FBDB4(uint64_t a1)
{
  sub_13FBD14(a1);

  operator delete();
}

uint64_t sub_13FBDEC(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v1 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v1 + 23) < 0)
    {
      **(unsigned char **)unint64_t v1 = 0;
      *(void *)(v1 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v1 = 0;
      *(unsigned char *)(v1 + 23) = 0;
    }
  }
  char v3 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 24) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v3) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_13FBE34(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unint64_t v24 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v24, a3[11].i32[1])) {
    return *(void *)v24;
  }
  int v6 = (void *)(a1 + 8);
  while (1)
  {
    unint64_t v7 = (char *)(*(void *)v24 + 1);
    unsigned int v8 = **(unsigned char **)v24;
    if ((char)**(unsigned char **)v24 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        unint64_t v7 = (char *)sub_188C180(*(uint64_t *)v24, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        unint64_t v7 = (char *)(*(void *)v24 + 2);
      }
    }
    *(void *)unint64_t v24 = v7;
    if (v8 >> 3 != 2) {
      break;
    }
    if (v8 != 18) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v15 = *(void *)(a1 + 8);
    uint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
    if (v15) {
      uint64_t v16 = (uint64_t *)*v16;
    }
    int v17 = (std::string *)sub_1880F84((void *)(a1 + 24), v16);
    BOOL v14 = (void *)sub_188C244(v17, *(char **)v24, (uint64_t)a3);
LABEL_24:
    *(void *)unint64_t v24 = v14;
    if (!v14) {
      goto LABEL_43;
    }
LABEL_32:
    if (sub_11947B8((uint64_t)a3, (char **)v24, a3[11].i32[1])) {
      return *(void *)v24;
    }
  }
  if (v8 >> 3 == 1 && v8 == 8)
  {
    uint64_t v18 = v7 + 1;
    unint64_t v19 = *v7;
    if ((*v7 & 0x80000000) == 0) {
      goto LABEL_29;
    }
    int v20 = *v18;
    int v21 = v19 + (v20 << 7);
    unint64_t v19 = (v21 - 128);
    if (v20 < 0)
    {
      *(void *)unint64_t v24 = sub_188C138((uint64_t)v7, (v21 - 128));
      if (!*(void *)v24) {
        goto LABEL_43;
      }
      unint64_t v19 = v22;
    }
    else
    {
      uint64_t v18 = v7 + 2;
LABEL_29:
      *(void *)unint64_t v24 = v18;
    }
    if (v19 > 2)
    {
      if (*v6) {
        uint64_t v23 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        uint64_t v23 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      sub_188C020(1, v19, v23);
    }
    else
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      *(_DWORD *)(a1 + 32) = v19;
    }
    goto LABEL_32;
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      unint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unint64_t v7 = *(char **)v24;
    }
    BOOL v14 = sub_1885AC0(v8, v13, v7, a3);
    goto LABEL_24;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v24;
  }
LABEL_43:
  *(void *)unint64_t v24 = 0;
  return *(void *)v24;
}

unsigned char *sub_13FC044(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 32);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v10 = *(void *)(a1 + 8);
  if ((v10 & 1) == 0) {
    return v4;
  }
  unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v12 + 31) < 0)
  {
    unint64_t v13 = *(void **)(v12 + 8);
    uint64_t v14 = *(void *)(v12 + 16);
  }
  else
  {
    unint64_t v13 = (void *)(v12 + 8);
    LODWORD(v14) = *(unsigned __int8 *)(v12 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v14)
  {
    uint64_t v15 = (int)v14;
    memcpy(v4, v13, (int)v14);
    v4 += v15;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v13, v14, v4);
}

uint64_t sub_13FC18C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_13;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_13;
    }
    goto LABEL_9;
  }
  unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
  uint64_t v5 = *(void *)(v3 + 8);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = v4;
  }
  uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    int v6 = *(_DWORD *)(a1 + 32);
    if (v6 < 0) {
      uint64_t v7 = 11;
    }
    else {
      uint64_t v7 = ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v7;
  }
LABEL_13:
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_13FC258()
{
  return 1;
}

void *sub_13FC260@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gemini.StructuredAttributes.LocationText");
}

uint64_t sub_13FC270(uint64_t a1)
{
  unint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_9;
    }
  }
  else if (v4)
  {
    goto LABEL_9;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_9:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_13FC328(uint64_t a1)
{
  sub_13FC270(a1);

  operator delete();
}

uint64_t sub_13FC360(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) != 0)
  {
    if (v1)
    {
      unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v2 + 23) < 0)
      {
        **(unsigned char **)unint64_t v2 = 0;
        *(void *)(v2 + 8) = 0;
        if ((v1 & 2) == 0) {
          goto LABEL_11;
        }
        goto LABEL_6;
      }
      *(unsigned char *)unint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
    }
    if ((v1 & 2) == 0) {
      goto LABEL_11;
    }
LABEL_6:
    unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)unint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
LABEL_11:
  if ((v1 & 0xFC) != 0)
  {
    *(void *)(a1 + 40) = 0;
    *(void *)(a1 + 48) = 0;
    *(_DWORD *)(a1 + 64) = 0;
    *(void *)(a1 + 56) = 0;
  }
  if ((v1 & 0x300) != 0) {
    *(void *)(a1 + 68) = 0;
  }
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v5) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_13FC3FC(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v59 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v59, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (char *)(*(void *)v59 + 1);
    unsigned int v9 = **(unsigned char **)v59;
    if ((char)**(unsigned char **)v59 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180(*(uint64_t *)v59, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (char *)(*(void *)v59 + 2);
      }
    }
    *(void *)int v59 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_66;
        }
        unint64_t v12 = v8 + 1;
        unint64_t v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        int v15 = v13 + (v14 << 7);
        unint64_t v13 = (v15 - 128);
        if (v14 < 0)
        {
          *(void *)int v59 = sub_188C138((uint64_t)v8, (v15 - 128));
          if (!*(void *)v59) {
            goto LABEL_112;
          }
          unint64_t v13 = v45;
        }
        else
        {
          unint64_t v12 = v8 + 2;
LABEL_13:
          *(void *)int v59 = v12;
        }
        if (v13 <= 0xA)
        {
          *(_DWORD *)(a1 + 16) |= 4u;
          *(_DWORD *)(a1 + 40) = v13;
          goto LABEL_74;
        }
        if (*v7) {
          int v57 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          int v57 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v58 = 1;
        goto LABEL_104;
      case 2u:
        if (v9 != 16) {
          goto LABEL_66;
        }
        uint64_t v16 = v8 + 1;
        unint64_t v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_20;
        }
        int v17 = *v16;
        int v18 = v13 + (v17 << 7);
        unint64_t v13 = (v18 - 128);
        if (v17 < 0)
        {
          *(void *)int v59 = sub_188C138((uint64_t)v8, (v18 - 128));
          if (!*(void *)v59) {
            goto LABEL_112;
          }
          unint64_t v13 = v46;
        }
        else
        {
          uint64_t v16 = v8 + 2;
LABEL_20:
          *(void *)int v59 = v16;
        }
        if (v13 <= 3)
        {
          *(_DWORD *)(a1 + 16) |= 8u;
          *(_DWORD *)(a1 + 44) = v13;
          goto LABEL_74;
        }
        if (*v7) {
          int v57 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          int v57 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v58 = 2;
        goto LABEL_104;
      case 3u:
        if (v9 != 24) {
          goto LABEL_66;
        }
        v5 |= 0x20u;
        unint64_t v19 = v8 + 1;
        int v20 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_27;
        }
        int v21 = *v19;
        int v20 = v20 + (v21 << 7) - 128;
        if (v21 < 0)
        {
          uint64_t v47 = sub_188C0D0((uint64_t)v8, v20);
          *(void *)int v59 = v47;
          *(_DWORD *)(a1 + 56) = v48;
          if (!v47) {
            goto LABEL_112;
          }
        }
        else
        {
          unint64_t v19 = v8 + 2;
LABEL_27:
          *(void *)int v59 = v19;
          *(_DWORD *)(a1 + 56) = v20;
        }
        goto LABEL_74;
      case 4u:
        if (v9 != 32) {
          goto LABEL_66;
        }
        v5 |= 0x10u;
        unint64_t v22 = v8 + 1;
        uint64_t v23 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_32;
        }
        int v24 = *v22;
        uint64_t v23 = v23 + (v24 << 7) - 128;
        if (v24 < 0)
        {
          uint64_t v49 = sub_188C138((uint64_t)v8, v23);
          *(void *)int v59 = v49;
          *(void *)(a1 + 48) = v50;
          if (!v49) {
            goto LABEL_112;
          }
        }
        else
        {
          unint64_t v22 = v8 + 2;
LABEL_32:
          *(void *)int v59 = v22;
          *(void *)(a1 + 48) = v23;
        }
        goto LABEL_74;
      case 5u:
        if (v9 != 40) {
          goto LABEL_66;
        }
        unint64_t v25 = v8 + 1;
        unint64_t v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_37;
        }
        int v26 = *v25;
        int v27 = v13 + (v26 << 7);
        unint64_t v13 = (v27 - 128);
        if (v26 < 0)
        {
          *(void *)int v59 = sub_188C138((uint64_t)v8, (v27 - 128));
          if (!*(void *)v59) {
            goto LABEL_112;
          }
          unint64_t v13 = v51;
        }
        else
        {
          unint64_t v25 = v8 + 2;
LABEL_37:
          *(void *)int v59 = v25;
        }
        if (v13 <= 3)
        {
          *(_DWORD *)(a1 + 16) |= 0x40u;
          *(_DWORD *)(a1 + 60) = v13;
          goto LABEL_74;
        }
        if (*v7) {
          int v57 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          int v57 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v58 = 5;
        goto LABEL_104;
      case 6u:
        if (v9 != 50) {
          goto LABEL_66;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v28 = *(void *)(a1 + 8);
        uint64_t v29 = (uint64_t *)(v28 & 0xFFFFFFFFFFFFFFFCLL);
        if (v28) {
          uint64_t v29 = (uint64_t *)*v29;
        }
        int v30 = (void *)(a1 + 24);
        goto LABEL_65;
      case 7u:
        if (v9 != 56) {
          goto LABEL_66;
        }
        v5 |= 0x80u;
        int v31 = v8 + 1;
        int v32 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_48;
        }
        int v33 = *v31;
        int v32 = v32 + (v33 << 7) - 128;
        if (v33 < 0)
        {
          uint64_t v52 = sub_188C0D0((uint64_t)v8, v32);
          *(void *)int v59 = v52;
          *(_DWORD *)(a1 + 64) = v53;
          if (!v52) {
            goto LABEL_112;
          }
        }
        else
        {
          int v31 = v8 + 2;
LABEL_48:
          *(void *)int v59 = v31;
          *(_DWORD *)(a1 + 64) = v32;
        }
        goto LABEL_74;
      case 8u:
        if (v9 != 64) {
          goto LABEL_66;
        }
        v5 |= 0x100u;
        uint64_t v34 = v8 + 1;
        int v35 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_53;
        }
        int v36 = *v34;
        int v35 = v35 + (v36 << 7) - 128;
        if (v36 < 0)
        {
          uint64_t v54 = sub_188C0D0((uint64_t)v8, v35);
          *(void *)int v59 = v54;
          *(_DWORD *)(a1 + 68) = v55;
          if (!v54) {
            goto LABEL_112;
          }
        }
        else
        {
          uint64_t v34 = v8 + 2;
LABEL_53:
          *(void *)int v59 = v34;
          *(_DWORD *)(a1 + 68) = v35;
        }
        goto LABEL_74;
      case 9u:
        if (v9 != 72) {
          goto LABEL_66;
        }
        uint64_t v37 = v8 + 1;
        unint64_t v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_58;
        }
        int v38 = *v37;
        int v39 = v13 + (v38 << 7);
        unint64_t v13 = (v39 - 128);
        if (v38 < 0)
        {
          *(void *)int v59 = sub_188C138((uint64_t)v8, (v39 - 128));
          if (!*(void *)v59) {
            goto LABEL_112;
          }
          unint64_t v13 = v56;
        }
        else
        {
          uint64_t v37 = v8 + 2;
LABEL_58:
          *(void *)int v59 = v37;
        }
        if (v13 > 2)
        {
          if (*v7) {
            int v57 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            int v57 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          int v58 = 9;
LABEL_104:
          sub_188C020(v58, v13, v57);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 0x200u;
          *(_DWORD *)(a1 + 72) = v13;
        }
        goto LABEL_74;
      case 0xAu:
        if (v9 != 82) {
          goto LABEL_66;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v40 = *(void *)(a1 + 8);
        uint64_t v29 = (uint64_t *)(v40 & 0xFFFFFFFFFFFFFFFCLL);
        if (v40) {
          uint64_t v29 = (uint64_t *)*v29;
        }
        int v30 = (void *)(a1 + 32);
LABEL_65:
        int v41 = (std::string *)sub_1880F84(v30, v29);
        uint64_t v42 = (void *)sub_188C244(v41, *(char **)v59, (uint64_t)a3);
        goto LABEL_73;
      default:
LABEL_66:
        if (v9) {
          BOOL v43 = (v9 & 7) == 4;
        }
        else {
          BOOL v43 = 1;
        }
        if (!v43)
        {
          if (*v7)
          {
            uint64_t v44 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v44 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = *(char **)v59;
          }
          uint64_t v42 = sub_1885AC0(v9, v44, v8, a3);
LABEL_73:
          *(void *)int v59 = v42;
          if (!v42) {
            goto LABEL_112;
          }
LABEL_74:
          if (sub_11947B8((uint64_t)a3, (char **)v59, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_112:
        }
          *(void *)int v59 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v59;
    }
  }
}

unsigned char *sub_13FC9DC(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 4) != 0)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 40);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 44);
    unsigned char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v13 = *(_DWORD *)(a1 + 56);
    unsigned char *v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unsigned int v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v16 = *(void *)(a1 + 48);
    unsigned char *v4 = 32;
    v4[1] = v16;
    if (v16 > 0x7F)
    {
      v4[1] = v16 | 0x80;
      unint64_t v17 = v16 >> 7;
      v4[2] = v16 >> 7;
      v4 += 3;
      if (v16 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v18 = v17 >> 14;
          v17 >>= 7;
          *v4++ = v17;
        }
        while (v18);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x40) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v19 = *(int *)(a1 + 60);
    unsigned char *v4 = 40;
    v4[1] = v19;
    if (v19 > 0x7F)
    {
      v4[1] = v19 | 0x80;
      unint64_t v20 = v19 >> 7;
      v4[2] = v19 >> 7;
      v4 += 3;
      if (v19 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v21 = v20 >> 14;
          v20 >>= 7;
          *v4++ = v20;
        }
        while (v21);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 6, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  if ((v6 & 0x80) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v22 = *(_DWORD *)(a1 + 64);
    unsigned char *v4 = 56;
    v4[1] = v22;
    if (v22 > 0x7F)
    {
      v4[1] = v22 | 0x80;
      unsigned int v23 = v22 >> 7;
      v4[2] = v22 >> 7;
      v4 += 3;
      if (v22 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v24 = v23 >> 14;
          v23 >>= 7;
          *v4++ = v23;
        }
        while (v24);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x100) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v25 = *(_DWORD *)(a1 + 68);
    unsigned char *v4 = 64;
    v4[1] = v25;
    if (v25 > 0x7F)
    {
      v4[1] = v25 | 0x80;
      unsigned int v26 = v25 >> 7;
      v4[2] = v25 >> 7;
      v4 += 3;
      if (v25 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v27 = v26 >> 14;
          v26 >>= 7;
          *v4++ = v26;
        }
        while (v27);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x200) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v28 = *(int *)(a1 + 72);
    unsigned char *v4 = 72;
    v4[1] = v28;
    if (v28 > 0x7F)
    {
      v4[1] = v28 | 0x80;
      unint64_t v29 = v28 >> 7;
      v4[2] = v28 >> 7;
      v4 += 3;
      if (v28 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v30 = v29 >> 14;
          v29 >>= 7;
          *v4++ = v29;
        }
        while (v30);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0) {
    uint64_t v4 = sub_117A0AC(a3, 10, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v31 = *(void *)(a1 + 8);
  if ((v31 & 1) == 0) {
    return v4;
  }
  unint64_t v33 = v31 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v33 + 31) < 0)
  {
    uint64_t v34 = *(void **)(v33 + 8);
    uint64_t v35 = *(void *)(v33 + 16);
  }
  else
  {
    uint64_t v34 = (void *)(v33 + 8);
    LODWORD(v35) = *(unsigned __int8 *)(v33 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v35)
  {
    uint64_t v36 = (int)v35;
    memcpy(v4, v34, (int)v35);
    v4 += v36;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v34, v35, v4);
}

uint64_t sub_13FCEA8(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if (!(_BYTE)v1)
  {
    uint64_t v2 = 0;
    goto LABEL_19;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
  uint64_t v5 = *(void *)(v3 + 8);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = v4;
  }
  uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    unint64_t v6 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v1 & 4) != 0)
  {
    int v11 = *(_DWORD *)(a1 + 40);
    if (v11 < 0) {
      uint64_t v12 = 11;
    }
    else {
      uint64_t v12 = ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v12;
    if ((v1 & 8) == 0)
    {
LABEL_14:
      if ((v1 & 0x10) == 0) {
        goto LABEL_15;
      }
      goto LABEL_37;
    }
  }
  else if ((v1 & 8) == 0)
  {
    goto LABEL_14;
  }
  int v15 = *(_DWORD *)(a1 + 44);
  if (v15 < 0) {
    uint64_t v16 = 11;
  }
  else {
    uint64_t v16 = ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v2 += v16;
  if ((v1 & 0x10) == 0)
  {
LABEL_15:
    if ((v1 & 0x20) == 0) {
      goto LABEL_16;
    }
    goto LABEL_38;
  }
LABEL_37:
  v2 += ((9 * (__clz(*(void *)(a1 + 48) | 1) ^ 0x3F) + 73) >> 6) + 1;
  if ((v1 & 0x20) == 0)
  {
LABEL_16:
    if ((v1 & 0x40) == 0) {
      goto LABEL_17;
    }
    goto LABEL_39;
  }
LABEL_38:
  v2 += ((9 * (__clz(*(_DWORD *)(a1 + 56) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 0x40) == 0)
  {
LABEL_17:
    if ((v1 & 0x80) == 0) {
      goto LABEL_19;
    }
    goto LABEL_18;
  }
LABEL_39:
  int v17 = *(_DWORD *)(a1 + 60);
  if (v17 < 0) {
    uint64_t v18 = 11;
  }
  else {
    uint64_t v18 = ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v2 += v18;
  if ((v1 & 0x80) != 0) {
LABEL_18:
  }
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 64) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_19:
  if ((v1 & 0x300) != 0)
  {
    if ((v1 & 0x100) != 0) {
      v2 += ((9 * (__clz(*(_DWORD *)(a1 + 68) | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v1 & 0x200) != 0)
    {
      int v9 = *(_DWORD *)(a1 + 72);
      if (v9 < 0) {
        uint64_t v10 = 11;
      }
      else {
        uint64_t v10 = ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
      v2 += v10;
    }
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if (v13)
  {
    unint64_t v19 = v13 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v19 + 31) < 0) {
      uint64_t v20 = *(void *)(v19 + 16);
    }
    else {
      uint64_t v20 = *(unsigned __int8 *)(v19 + 31);
    }
    v2 += v20;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_13FD110(std::string *result, uint64_t a2)
{
  unint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((_BYTE)v4)
  {
    if (v4)
    {
      unint64_t v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      uint64_t v7 = (std::string **)&result[1];
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      int v9 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        int v9 = (uint64_t *)*v9;
      }
      uint64_t result = sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_28;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    uint64_t v10 = (long long *)(*(void *)(a2 + 32) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    std::string::size_type v11 = v3->__r_.__value_.__l.__size_;
    uint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
    if (v11) {
      uint64_t v12 = (uint64_t *)*v12;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[1].__r_.__value_.__l.__size_, v10, v12);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_29;
    }
LABEL_28:
    LODWORD(v3[1].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 40);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0) {
        goto LABEL_7;
      }
      goto LABEL_30;
    }
LABEL_29:
    HIDWORD(v3[1].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 44);
    if ((v4 & 0x10) == 0)
    {
LABEL_7:
      if ((v4 & 0x20) == 0) {
        goto LABEL_8;
      }
      goto LABEL_31;
    }
LABEL_30:
    v3[2].__r_.__value_.__r.__words[0] = *(void *)(a2 + 48);
    if ((v4 & 0x20) == 0)
    {
LABEL_8:
      if ((v4 & 0x40) == 0) {
        goto LABEL_9;
      }
      goto LABEL_32;
    }
LABEL_31:
    LODWORD(v3[2].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 56);
    if ((v4 & 0x40) == 0)
    {
LABEL_9:
      if ((v4 & 0x80) == 0)
      {
LABEL_11:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
        goto LABEL_12;
      }
LABEL_10:
      LODWORD(v3[2].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 64);
      goto LABEL_11;
    }
LABEL_32:
    HIDWORD(v3[2].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 60);
    if ((v4 & 0x80) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
LABEL_12:
  if ((v4 & 0x300) != 0)
  {
    if ((v4 & 0x100) != 0) {
      HIDWORD(v3[2].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 68);
    }
    if ((v4 & 0x200) != 0) {
      LODWORD(v3[3].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 72);
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
  }
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_13FD284()
{
  return 1;
}

void *sub_13FD28C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gemini.StructuredAttributes.Port");
}

uint64_t sub_13FD29C(uint64_t a1)
{
  unint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_13FD33C(uint64_t a1)
{
  sub_13FD29C(a1);

  operator delete();
}

uint64_t sub_13FD374(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if (v1)
  {
    unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)unint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
    }
  }
  if ((v1 & 6) != 0)
  {
    *(void *)(a1 + 32) = 0;
    *(void *)(a1 + 40) = 0;
  }
  char v4 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v4) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_13FD3C4(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unsigned int v23 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v23, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = (char *)(*(void *)v23 + 1);
    unsigned int v9 = **(unsigned char **)v23;
    if ((char)**(unsigned char **)v23 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180(*(uint64_t *)v23, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (char *)(*(void *)v23 + 2);
      }
    }
    *(void *)unsigned int v23 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 == 3) {
      break;
    }
    if (v12 == 2)
    {
      if (v9 == 17)
      {
        uint64_t v19 = *(void *)v8;
        int v17 = v8 + 8;
        v5 |= 2u;
        *(void *)(a1 + 32) = v19;
        goto LABEL_25;
      }
      goto LABEL_14;
    }
    if (v12 != 1 || v9 != 10) {
      goto LABEL_14;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v20 = *(void *)(a1 + 8);
    unint64_t v21 = (uint64_t *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
    if (v20) {
      unint64_t v21 = (uint64_t *)*v21;
    }
    unsigned int v22 = (std::string *)sub_1880F84((void *)(a1 + 24), v21);
    uint64_t v16 = (void *)sub_188C244(v22, *(char **)v23, (uint64_t)a3);
LABEL_29:
    *(void *)unsigned int v23 = v16;
    if (!v16) {
      goto LABEL_35;
    }
LABEL_30:
    if (sub_11947B8((uint64_t)a3, (char **)v23, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 == 25)
  {
    uint64_t v18 = *(void *)v8;
    int v17 = v8 + 8;
    v5 |= 4u;
    *(void *)(a1 + 40) = v18;
LABEL_25:
    *(void *)unsigned int v23 = v17;
    goto LABEL_30;
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (*v7)
    {
      int v15 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      int v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = *(char **)v23;
    }
    uint64_t v16 = sub_1885AC0(v9, v15, v8, a3);
    goto LABEL_29;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_35:
  *(void *)unsigned int v23 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return *(void *)v23;
}

char *sub_13FD588(uint64_t a1, char *__dst, void *a3)
{
  char v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    char v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_12;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v7 = *(void *)(a1 + 32);
  char *v4 = 17;
  *(void *)(v4 + 1) = v7;
  v4 += 9;
  if ((v6 & 4) != 0)
  {
LABEL_9:
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v8 = *(void *)(a1 + 40);
    char *v4 = 25;
    *(void *)(v4 + 1) = v8;
    v4 += 9;
  }
LABEL_12:
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    unsigned int v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    unsigned int v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if (*a3 - (void)v4 >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    v4 += v14;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v12, v13, v4);
}

uint64_t sub_13FD6D0(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 7) != 0)
  {
    if (v1)
    {
      unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
      uint64_t v6 = *(void *)(v4 + 8);
      if ((v5 & 0x80u) == 0) {
        uint64_t v6 = v5;
      }
      uint64_t v2 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    else
    {
      uint64_t v2 = 0;
    }
    if ((v1 & 2) != 0) {
      v2 += 9;
    }
    if ((v1 & 4) != 0) {
      uint64_t v3 = v2 + 9;
    }
    else {
      uint64_t v3 = v2;
    }
  }
  else
  {
    uint64_t v3 = 0;
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v9 + 31) < 0) {
      uint64_t v10 = *(void *)(v9 + 16);
    }
    else {
      uint64_t v10 = *(unsigned __int8 *)(v9 + 31);
    }
    v3 += v10;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_13FD77C(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 7) != 0)
  {
    if (v4)
    {
      uint64_t v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      uint64_t v7 = (std::string **)&result[1];
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      unint64_t v9 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        unint64_t v9 = (uint64_t *)*v9;
      }
      uint64_t result = sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0)
        {
LABEL_6:
          LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
          goto LABEL_7;
        }
LABEL_5:
        v3[1].__r_.__value_.__r.__words[2] = *(void *)(a2 + 40);
        goto LABEL_6;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    v3[1].__r_.__value_.__l.__size_ = *(void *)(a2 + 32);
    if ((v4 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_7:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_13FD84C()
{
  return 1;
}

void *sub_13FD854@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gemini.StructuredAttributes.Pricing");
}

uint64_t sub_13FD864(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_17;
    }
  }
  else if (v4)
  {
    goto LABEL_17;
  }
  uint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 56) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 56));
  }
  if (*(uint64_t **)(a1 + 64) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 64));
  }
  if (*(uint64_t **)(a1 + 72) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 72));
  }
  if (*(uint64_t **)(a1 + 80) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 80));
  }
  if (*(uint64_t **)(a1 + 88) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 88));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_17:
  sub_12C1DB8((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_13FD978(uint64_t a1)
{
  sub_13FD864(a1);

  operator delete();
}

uint64_t sub_13FD9B0(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_15B2C80(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  int v5 = *(_DWORD *)(v1 + 16);
  if ((v5 & 0x3F) != 0)
  {
    if ((v5 & 1) == 0)
    {
      if ((v5 & 2) == 0) {
        goto LABEL_8;
      }
LABEL_17:
      unint64_t v7 = *(void *)(v1 + 56) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v7 + 23) < 0)
      {
        **(unsigned char **)unint64_t v7 = 0;
        *(void *)(v7 + 8) = 0;
        if ((v5 & 4) != 0) {
          goto LABEL_21;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v7 = 0;
        *(unsigned char *)(v7 + 23) = 0;
        if ((v5 & 4) != 0) {
          goto LABEL_21;
        }
      }
LABEL_9:
      if ((v5 & 8) == 0) {
        goto LABEL_10;
      }
LABEL_25:
      unint64_t v9 = *(void *)(v1 + 72) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v9 + 23) < 0)
      {
        **(unsigned char **)unint64_t v9 = 0;
        *(void *)(v9 + 8) = 0;
        if ((v5 & 0x10) != 0) {
          goto LABEL_29;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v9 = 0;
        *(unsigned char *)(v9 + 23) = 0;
        if ((v5 & 0x10) != 0) {
          goto LABEL_29;
        }
      }
LABEL_11:
      if ((v5 & 0x20) == 0) {
        goto LABEL_36;
      }
LABEL_33:
      unint64_t v11 = *(void *)(v1 + 88) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v11 + 23) < 0)
      {
        **(unsigned char **)unint64_t v11 = 0;
        *(void *)(v11 + 8) = 0;
      }
      else
      {
        *(unsigned char *)unint64_t v11 = 0;
        *(unsigned char *)(v11 + 23) = 0;
      }
      goto LABEL_36;
    }
    unint64_t v6 = *(void *)(v1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v6 + 23) < 0)
    {
      **(unsigned char **)unint64_t v6 = 0;
      *(void *)(v6 + 8) = 0;
      if ((v5 & 2) != 0) {
        goto LABEL_17;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v6 = 0;
      *(unsigned char *)(v6 + 23) = 0;
      if ((v5 & 2) != 0) {
        goto LABEL_17;
      }
    }
LABEL_8:
    if ((v5 & 4) == 0) {
      goto LABEL_9;
    }
LABEL_21:
    unint64_t v8 = *(void *)(v1 + 64) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v8 + 23) < 0)
    {
      **(unsigned char **)unint64_t v8 = 0;
      *(void *)(v8 + 8) = 0;
      if ((v5 & 8) != 0) {
        goto LABEL_25;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v8 = 0;
      *(unsigned char *)(v8 + 23) = 0;
      if ((v5 & 8) != 0) {
        goto LABEL_25;
      }
    }
LABEL_10:
    if ((v5 & 0x10) == 0) {
      goto LABEL_11;
    }
LABEL_29:
    unint64_t v10 = *(void *)(v1 + 80) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v10 + 23) < 0)
    {
      **(unsigned char **)unint64_t v10 = 0;
      *(void *)(v10 + 8) = 0;
      if ((v5 & 0x20) == 0) {
        goto LABEL_36;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v10 = 0;
      *(unsigned char *)(v10 + 23) = 0;
      if ((v5 & 0x20) == 0) {
        goto LABEL_36;
      }
    }
    goto LABEL_33;
  }
LABEL_36:
  char v13 = *(unsigned char *)(v1 + 8);
  uint64_t v12 = v1 + 8;
  *(_DWORD *)(v12 + 8) = 0;
  if (v13)
  {
    return sub_188B4AC((uint64_t *)v12);
  }
  return result;
}

uint64_t sub_13FDB70(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unint64_t v29 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v29, a3[11].i32[1])) {
    return *(void *)v29;
  }
  unint64_t v28 = (uint64_t *)(a1 + 8);
  while (2)
  {
    unint64_t v6 = (char *)(*(void *)v29 + 1);
    unsigned int v7 = **(unsigned char **)v29;
    if ((char)**(unsigned char **)v29 < 0)
    {
      unsigned int v8 = v7 + (*v6 << 7);
      unsigned int v7 = v8 - 128;
      if (*v6 < 0)
      {
        unint64_t v6 = (char *)sub_188C180(*(uint64_t *)v29, v8 - 128);
        unsigned int v7 = v9;
      }
      else
      {
        unint64_t v6 = (char *)(*(void *)v29 + 2);
      }
    }
    *(void *)unint64_t v29 = v6;
    switch(v7 >> 3)
    {
      case 1u:
        if (v7 != 10) {
          goto LABEL_47;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v10 = *(void *)(a1 + 8);
        unint64_t v11 = (uint64_t *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
        if (v10) {
          unint64_t v11 = (uint64_t *)*v11;
        }
        uint64_t v12 = (void *)(a1 + 48);
        goto LABEL_33;
      case 2u:
        if (v7 != 18) {
          goto LABEL_47;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v13 = *(void *)(a1 + 8);
        unint64_t v11 = (uint64_t *)(v13 & 0xFFFFFFFFFFFFFFFCLL);
        if (v13) {
          unint64_t v11 = (uint64_t *)*v11;
        }
        uint64_t v12 = (void *)(a1 + 56);
        goto LABEL_33;
      case 3u:
        if (v7 != 26) {
          goto LABEL_47;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v14 = *(void *)(a1 + 8);
        unint64_t v11 = (uint64_t *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
        if (v14) {
          unint64_t v11 = (uint64_t *)*v11;
        }
        uint64_t v12 = (void *)(a1 + 64);
        goto LABEL_33;
      case 4u:
        if (v7 != 34) {
          goto LABEL_47;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v15 = *(void *)(a1 + 8);
        unint64_t v11 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          unint64_t v11 = (uint64_t *)*v11;
        }
        uint64_t v12 = (void *)(a1 + 72);
        goto LABEL_33;
      case 5u:
        if (v7 != 42) {
          goto LABEL_47;
        }
        *(_DWORD *)(a1 + 16) |= 0x10u;
        uint64_t v16 = *(void *)(a1 + 8);
        unint64_t v11 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
        if (v16) {
          unint64_t v11 = (uint64_t *)*v11;
        }
        uint64_t v12 = (void *)(a1 + 80);
        goto LABEL_33;
      case 6u:
        if (v7 != 50) {
          goto LABEL_47;
        }
        *(_DWORD *)(a1 + 16) |= 0x20u;
        uint64_t v17 = *(void *)(a1 + 8);
        unint64_t v11 = (uint64_t *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
        if (v17) {
          unint64_t v11 = (uint64_t *)*v11;
        }
        uint64_t v12 = (void *)(a1 + 88);
LABEL_33:
        uint64_t v18 = (std::string *)sub_1880F84(v12, v11);
        uint64_t v19 = (void *)sub_188C244(v18, *(char **)v29, (uint64_t)a3);
        goto LABEL_34;
      case 7u:
        if (v7 != 58) {
          goto LABEL_47;
        }
        uint64_t v20 = v6 - 1;
        while (1)
        {
          unint64_t v21 = (unsigned __int8 *)(v20 + 1);
          *(void *)unint64_t v29 = v20 + 1;
          unsigned int v22 = *(_DWORD **)(a1 + 40);
          if (v22 && (uint64_t v23 = *(int *)(a1 + 32), (int)v23 < *v22))
          {
            *(_DWORD *)(a1 + 32) = v23 + 1;
            uint64_t v24 = *(void *)&v22[2 * v23 + 2];
          }
          else
          {
            unsigned int v25 = sub_15C1B30(*(void *)(a1 + 24));
            uint64_t v24 = sub_188CDC8(a1 + 24, (uint64_t)v25);
            unint64_t v21 = *(unsigned __int8 **)v29;
          }
          uint64_t v20 = (char *)sub_125CF74(a3, v24, v21);
          *(void *)unint64_t v29 = v20;
          if (!v20) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v20 || *v20 != 58) {
            goto LABEL_35;
          }
        }
      default:
LABEL_47:
        if (v7) {
          BOOL v26 = (v7 & 7) == 4;
        }
        else {
          BOOL v26 = 1;
        }
        if (!v26)
        {
          if (*v28)
          {
            unsigned int v27 = (std::string *)((*v28 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            unsigned int v27 = (std::string *)sub_188DBD8(v28);
            unint64_t v6 = *(char **)v29;
          }
          uint64_t v19 = sub_1885AC0(v7, v27, v6, a3);
LABEL_34:
          *(void *)unint64_t v29 = v19;
          if (!v19) {
            return 0;
          }
LABEL_35:
          if (sub_11947B8((uint64_t)a3, (char **)v29, a3[11].i32[1])) {
            return *(void *)v29;
          }
          continue;
        }
        if (!v6) {
          return 0;
        }
        a3[10].i32[0] = v7 - 1;
        return *(void *)v29;
    }
  }
}

char *sub_13FDEDC(uint64_t a1, char *__dst, void *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_20;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_21;
  }
LABEL_20:
  uint64_t v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_22;
  }
LABEL_21:
  uint64_t v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
LABEL_22:
  uint64_t v4 = sub_117A0AC(a3, 5, (const void **)(*(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x20) != 0) {
LABEL_7:
  }
    uint64_t v4 = sub_117A0AC(a3, 6, (const void **)(*(void *)(a1 + 88) & 0xFFFFFFFFFFFFFFFELL), v4);
LABEL_8:
  int v7 = *(_DWORD *)(a1 + 32);
  if (v7)
  {
    for (int i = 0; i != v7; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      char *v4 = 58;
      unsigned int v10 = *(_DWORD *)(v9 + 20);
      v4[1] = v10;
      if (v10 > 0x7F) {
        unint64_t v11 = sub_188A9CC(v10, v4 + 1);
      }
      else {
        unint64_t v11 = v4 + 2;
      }
      uint64_t v4 = sub_15B2EA4(v9, v11, a3);
    }
  }
  uint64_t v12 = *(void *)(a1 + 8);
  if ((v12 & 1) == 0) {
    return v4;
  }
  unint64_t v14 = v12 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v14 + 31) < 0)
  {
    uint64_t v15 = *(void **)(v14 + 8);
    uint64_t v16 = *(void *)(v14 + 16);
  }
  else
  {
    uint64_t v15 = (void *)(v14 + 8);
    LODWORD(v16) = *(unsigned __int8 *)(v14 + 31);
  }
  if (*a3 - (void)v4 >= (int)v16)
  {
    uint64_t v17 = (int)v16;
    memcpy(v4, v15, (int)v16);
    v4 += v17;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v15, v16, v4);
}

uint64_t sub_13FE0FC(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_15B2F90(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 0x3F) == 0) {
    goto LABEL_19;
  }
  if (v8)
  {
    unint64_t v14 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v15 = *(unsigned __int8 *)(v14 + 23);
    uint64_t v16 = *(void *)(v14 + 8);
    if ((v15 & 0x80u) == 0) {
      uint64_t v16 = v15;
    }
    v2 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v8 & 2) == 0)
    {
LABEL_12:
      if ((v8 & 4) == 0) {
        goto LABEL_13;
      }
      goto LABEL_27;
    }
  }
  else if ((v8 & 2) == 0)
  {
    goto LABEL_12;
  }
  unint64_t v17 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v18 = *(unsigned __int8 *)(v17 + 23);
  uint64_t v19 = *(void *)(v17 + 8);
  if ((v18 & 0x80u) == 0) {
    uint64_t v19 = v18;
  }
  v2 += v19 + ((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 4) == 0)
  {
LABEL_13:
    if ((v8 & 8) == 0) {
      goto LABEL_14;
    }
    goto LABEL_30;
  }
LABEL_27:
  unint64_t v20 = *(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v21 = *(unsigned __int8 *)(v20 + 23);
  uint64_t v22 = *(void *)(v20 + 8);
  if ((v21 & 0x80u) == 0) {
    uint64_t v22 = v21;
  }
  v2 += v22 + ((9 * (__clz(v22 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 8) == 0)
  {
LABEL_14:
    if ((v8 & 0x10) == 0) {
      goto LABEL_15;
    }
    goto LABEL_33;
  }
LABEL_30:
  unint64_t v23 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v24 = *(unsigned __int8 *)(v23 + 23);
  uint64_t v25 = *(void *)(v23 + 8);
  if ((v24 & 0x80u) == 0) {
    uint64_t v25 = v24;
  }
  v2 += v25 + ((9 * (__clz(v25 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 0x10) == 0)
  {
LABEL_15:
    if ((v8 & 0x20) == 0) {
      goto LABEL_19;
    }
    goto LABEL_16;
  }
LABEL_33:
  unint64_t v26 = *(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v27 = *(unsigned __int8 *)(v26 + 23);
  uint64_t v28 = *(void *)(v26 + 8);
  if ((v27 & 0x80u) == 0) {
    uint64_t v28 = v27;
  }
  v2 += v28 + ((9 * (__clz(v28 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 0x20) != 0)
  {
LABEL_16:
    unint64_t v9 = *(void *)(a1 + 88) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v10 = *(unsigned __int8 *)(v9 + 23);
    uint64_t v11 = *(void *)(v9 + 8);
    if ((v10 & 0x80u) == 0) {
      uint64_t v11 = v10;
    }
    v2 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_19:
  uint64_t v12 = *(void *)(a1 + 8);
  if (v12)
  {
    unint64_t v29 = v12 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v29 + 31) < 0) {
      uint64_t v30 = *(void *)(v29 + 16);
    }
    else {
      uint64_t v30 = *(unsigned __int8 *)(v29 + 31);
    }
    v2 += v30;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_13FE368(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = sub_12C1E38(v3 + 1, v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2] - LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    int v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *int v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 0x3F) == 0) {
    goto LABEL_30;
  }
  if (v9)
  {
    uint64_t v10 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
    std::string::size_type size = v3->__r_.__value_.__l.__size_;
    uint64_t v12 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
    if (size) {
      uint64_t v12 = (uint64_t *)*v12;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[2], v10, v12);
    if ((v9 & 2) == 0)
    {
LABEL_7:
      if ((v9 & 4) == 0) {
        goto LABEL_8;
      }
      goto LABEL_18;
    }
  }
  else if ((v9 & 2) == 0)
  {
    goto LABEL_7;
  }
  uint64_t v13 = (long long *)(*(void *)(a2 + 56) & 0xFFFFFFFFFFFFFFFELL);
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
  std::string::size_type v14 = v3->__r_.__value_.__l.__size_;
  uint64_t v15 = (uint64_t *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
  if (v14) {
    uint64_t v15 = (uint64_t *)*v15;
  }
  uint64_t result = sub_1881DF4((std::string **)&v3[2].__r_.__value_.__l.__size_, v13, v15);
  if ((v9 & 4) == 0)
  {
LABEL_8:
    if ((v9 & 8) == 0) {
      goto LABEL_9;
    }
LABEL_21:
    uint64_t v19 = (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 8u;
    std::string::size_type v20 = v3->__r_.__value_.__l.__size_;
    uint64_t v21 = (uint64_t *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
    if (v20) {
      uint64_t v21 = (uint64_t *)*v21;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[3], v19, v21);
    if ((v9 & 0x10) == 0)
    {
LABEL_10:
      if ((v9 & 0x20) == 0) {
        goto LABEL_30;
      }
      goto LABEL_27;
    }
    goto LABEL_24;
  }
LABEL_18:
  uint64_t v16 = (long long *)(*(void *)(a2 + 64) & 0xFFFFFFFFFFFFFFFELL);
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
  std::string::size_type v17 = v3->__r_.__value_.__l.__size_;
  uint64_t v18 = (uint64_t *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
  if (v17) {
    uint64_t v18 = (uint64_t *)*v18;
  }
  uint64_t result = sub_1881DF4((std::string **)&v3[2].__r_.__value_.__r.__words[2], v16, v18);
  if ((v9 & 8) != 0) {
    goto LABEL_21;
  }
LABEL_9:
  if ((v9 & 0x10) == 0) {
    goto LABEL_10;
  }
LABEL_24:
  uint64_t v22 = (long long *)(*(void *)(a2 + 80) & 0xFFFFFFFFFFFFFFFELL);
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x10u;
  std::string::size_type v23 = v3->__r_.__value_.__l.__size_;
  uint64_t v24 = (uint64_t *)(v23 & 0xFFFFFFFFFFFFFFFCLL);
  if (v23) {
    uint64_t v24 = (uint64_t *)*v24;
  }
  uint64_t result = sub_1881DF4((std::string **)&v3[3].__r_.__value_.__l.__size_, v22, v24);
  if ((v9 & 0x20) != 0)
  {
LABEL_27:
    uint64_t v25 = (long long *)(*(void *)(a2 + 88) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x20u;
    std::string::size_type v26 = v3->__r_.__value_.__l.__size_;
    uint64_t v27 = (uint64_t *)(v26 & 0xFFFFFFFFFFFFFFFCLL);
    if (v26) {
      uint64_t v27 = (uint64_t *)*v27;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[3].__r_.__value_.__r.__words[2], v25, v27);
  }
LABEL_30:
  uint64_t v28 = *(void *)(a2 + 8);
  if (v28)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v28 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_13FE594()
{
  return 1;
}

void *sub_13FE59C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gemini.StructuredAttributes.DisplayLocalizations");
}

uint64_t sub_13FE5AC(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_13FE64C(uint64_t a1)
{
  sub_13FE5AC(a1);

  operator delete();
}

uint64_t sub_13FE684(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if (v1)
  {
    unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)unint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
    }
  }
  if ((v1 & 6) != 0)
  {
    *(_DWORD *)(a1 + 40) = 0;
    *(void *)(a1 + 32) = 0;
  }
  char v4 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v4) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_13FE6D8(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v30 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v30, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (1)
  {
    int v8 = (char *)(*(void *)v30 + 1);
    unsigned int v9 = **(unsigned char **)v30;
    if ((char)**(unsigned char **)v30 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        int v8 = (char *)sub_188C180(*(uint64_t *)v30, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        int v8 = (char *)(*(void *)v30 + 2);
      }
    }
    *(void *)uint64_t v30 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 == 3)
    {
      if (v9 != 24) {
        goto LABEL_14;
      }
      v5 |= 2u;
      std::string::size_type v17 = v8 + 1;
      uint64_t v18 = *v8;
      if ((*v8 & 0x80000000) == 0) {
        goto LABEL_25;
      }
      int v19 = *v17;
      uint64_t v18 = v18 + (v19 << 7) - 128;
      if ((v19 & 0x80000000) == 0)
      {
        std::string::size_type v17 = v8 + 2;
LABEL_25:
        *(void *)uint64_t v30 = v17;
        *(void *)(a1 + 32) = v18;
        goto LABEL_36;
      }
      uint64_t v26 = sub_188C138((uint64_t)v8, v18);
      *(void *)uint64_t v30 = v26;
      *(void *)(a1 + 32) = v27;
      if (!v26) {
        goto LABEL_45;
      }
      goto LABEL_36;
    }
    if (v12 == 2) {
      break;
    }
    if (v12 != 1 || v9 != 8) {
      goto LABEL_14;
    }
    v5 |= 4u;
    std::string::size_type v23 = v8 + 1;
    int v24 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_35;
    }
    int v25 = *v23;
    int v24 = v24 + (v25 << 7) - 128;
    if ((v25 & 0x80000000) == 0)
    {
      std::string::size_type v23 = v8 + 2;
LABEL_35:
      *(void *)uint64_t v30 = v23;
      *(_DWORD *)(a1 + 40) = v24;
      goto LABEL_36;
    }
    uint64_t v28 = sub_188C0D0((uint64_t)v8, v24);
    *(void *)uint64_t v30 = v28;
    *(_DWORD *)(a1 + 40) = v29;
    if (!v28) {
      goto LABEL_45;
    }
LABEL_36:
    if (sub_11947B8((uint64_t)a3, (char **)v30, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 == 18)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v20 = *(void *)(a1 + 8);
    uint64_t v21 = (uint64_t *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
    if (v20) {
      uint64_t v21 = (uint64_t *)*v21;
    }
    uint64_t v22 = (std::string *)sub_1880F84((void *)(a1 + 24), v21);
    uint64_t v16 = (void *)sub_188C244(v22, *(char **)v30, (uint64_t)a3);
LABEL_30:
    *(void *)uint64_t v30 = v16;
    if (!v16) {
      goto LABEL_45;
    }
    goto LABEL_36;
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (*v7)
    {
      uint64_t v15 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v8 = *(char **)v30;
    }
    uint64_t v16 = sub_1885AC0(v9, v15, v8, a3);
    goto LABEL_30;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_45:
  *(void *)uint64_t v30 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return *(void *)v30;
}

unsigned char *sub_13FE918(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 4) != 0)
  {
    if (*a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 40);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6) {
    char v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(void *)(a1 + 32);
    unsigned char *v4 = 24;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    uint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    uint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_13FEADC(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 7) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_12;
  }
  if (v1)
  {
    unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
    uint64_t v5 = *(void *)(v3 + 8);
    if ((v4 & 0x80u) == 0) {
      uint64_t v5 = v4;
    }
    uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
  uint64_t v2 = 0;
  if ((v1 & 2) != 0) {
LABEL_9:
  }
    v2 += ((9 * (__clz(*(void *)(a1 + 32) | 1) ^ 0x3F) + 73) >> 6) + 1;
LABEL_10:
  if ((v1 & 4) != 0) {
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 40) | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  uint64_t v6 = *(void *)(a1 + 8);
  if (v6)
  {
    unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v8 + 31) < 0) {
      uint64_t v9 = *(void *)(v8 + 16);
    }
    else {
      uint64_t v9 = *(unsigned __int8 *)(v8 + 31);
    }
    v2 += v9;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_13FEBC0()
{
  return 1;
}

void *sub_13FEBC8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gemini.StructuredAttributes.NetworkInfo");
}

void *sub_13FEBD8(void *a1)
{
  unint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1889DE8(a1 + 5);
  sub_1889DA8((uint64_t)(a1 + 3));
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_13FEC5C(void *a1)
{
  sub_13FEBD8(a1);

  operator delete();
}

uint64_t sub_13FEC94(uint64_t a1)
{
  *(_DWORD *)(a1 + 24) = 0;
  uint64_t result = sub_188CC00(a1 + 40);
  char v4 = *(unsigned char *)(a1 + 8);
  uint64_t v3 = a1 + 8;
  *(void *)(v3 + 56) = 0;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_13FECF0(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v36 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v36, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unsigned int v7 = (uint64_t **)(a1 + 40);
  unint64_t v8 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v9 = (unsigned __int8 *)(*(void *)v36 + 1);
    unsigned int v10 = **(unsigned char **)v36;
    if ((char)**(unsigned char **)v36 < 0)
    {
      unsigned int v11 = v10 + (*v9 << 7);
      unsigned int v10 = v11 - 128;
      if ((char)*v9 < 0)
      {
        uint64_t v9 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v36, v11 - 128);
        unsigned int v10 = v12;
      }
      else
      {
        uint64_t v9 = (unsigned __int8 *)(*(void *)v36 + 2);
      }
    }
    *(void *)uint64_t v36 = v9;
    unsigned int v13 = v10 >> 3;
    if (v10 >> 3 == 3)
    {
      if (v10 == 26)
      {
        uint64_t v18 = (const std::string::value_type *)(v9 - 1);
        while (1)
        {
          int v19 = (char *)(v18 + 1);
          *(void *)uint64_t v36 = v18 + 1;
          uint64_t v20 = *(_DWORD **)(a1 + 56);
          if (v20 && (uint64_t v21 = *(int *)(a1 + 48), (int)v21 < *v20))
          {
            *(_DWORD *)(a1 + 48) = v21 + 1;
            uint64_t v22 = *(std::string **)&v20[2 * v21 + 2];
          }
          else
          {
            if (!*v7) {
              operator new();
            }
            *int v24 = v23;
            v24[1] = sub_3A6EDC;
            *std::string::size_type v23 = 0;
            v23[1] = 0;
            int v23[2] = 0;
            uint64_t v22 = (std::string *)sub_188CDC8(a1 + 40, (uint64_t)v23);
            int v19 = *(char **)v36;
          }
          uint64_t v18 = sub_188C244(v22, v19, (uint64_t)a3);
          *(void *)uint64_t v36 = v18;
          if (!v18) {
            goto LABEL_62;
          }
          if (*(void *)a3 <= (unint64_t)v18 || *v18 != 26) {
            goto LABEL_53;
          }
        }
      }
      goto LABEL_14;
    }
    if (v13 == 2) {
      break;
    }
    if (v13 != 1 || v10 != 8) {
      goto LABEL_14;
    }
    uint64_t v31 = (char *)(v9 + 1);
    uint64_t v32 = *v9;
    if (((char)*v9 & 0x80000000) == 0) {
      goto LABEL_52;
    }
    int v33 = *v31;
    uint64_t v32 = v32 + (v33 << 7) - 128;
    if ((v33 & 0x80000000) == 0)
    {
      uint64_t v31 = (char *)(v9 + 2);
LABEL_52:
      *(void *)uint64_t v36 = v31;
      *(void *)(a1 + 64) = v32;
      int v5 = 1;
      goto LABEL_53;
    }
    uint64_t v34 = sub_188C138((uint64_t)v9, v32);
    *(void *)uint64_t v36 = v34;
    *(void *)(a1 + 64) = v35;
    int v5 = 1;
    if (!v34) {
      goto LABEL_62;
    }
LABEL_53:
    if (sub_11947B8((uint64_t)a3, (char **)v36, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v10 == 16)
  {
    int v25 = v9 - 1;
    while (1)
    {
      *(void *)uint64_t v36 = v25 + 1;
      uint64_t v26 = v25[1];
      if ((char)v25[1] < 0)
      {
        int v27 = v26 + (v25[2] << 7);
        uint64_t v26 = (v27 - 128);
        if ((char)v25[2] < 0)
        {
          int v25 = (unsigned __int8 *)sub_188C138((uint64_t)(v25 + 1), (v27 - 128));
          uint64_t v26 = v28;
        }
        else
        {
          v25 += 3;
        }
      }
      else
      {
        v25 += 2;
      }
      *(void *)uint64_t v36 = v25;
      uint64_t v29 = *(unsigned int *)(a1 + 24);
      if (v29 == *(_DWORD *)(a1 + 28))
      {
        int v30 = v29 + 1;
        sub_188CA54((unsigned int *)(a1 + 24), v29 + 1);
        *(void *)(*(void *)(a1 + 32) + 8 * v29) = v26;
        int v25 = *(unsigned __int8 **)v36;
      }
      else
      {
        *(void *)(*(void *)(a1 + 32) + 8 * v29) = v26;
        int v30 = v29 + 1;
      }
      *(_DWORD *)(a1 + 24) = v30;
      if (!v25) {
        goto LABEL_62;
      }
      if (*(void *)a3 <= (unint64_t)v25 || *v25 != 16) {
        goto LABEL_53;
      }
    }
  }
  if (v10 == 18)
  {
    uint64_t v17 = sub_188C2EC((unsigned int *)(a1 + 24), v9, (uint64_t)a3);
    goto LABEL_21;
  }
LABEL_14:
  if (v10) {
    BOOL v15 = (v10 & 7) == 4;
  }
  else {
    BOOL v15 = 1;
  }
  if (!v15)
  {
    if (*v8)
    {
      uint64_t v16 = (std::string *)((*v8 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v16 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v9 = *(unsigned __int8 **)v36;
    }
    uint64_t v17 = sub_1885AC0(v10, v16, (char *)v9, a3);
LABEL_21:
    *(void *)uint64_t v36 = v17;
    if (!v17) {
      goto LABEL_62;
    }
    goto LABEL_53;
  }
  if (v9)
  {
    a3[10].i32[0] = v10 - 1;
    goto LABEL_2;
  }
LABEL_62:
  *(void *)uint64_t v36 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return *(void *)v36;
}

char *sub_13FF058(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  char v4 = (char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= __dst) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v6 = *(void *)(a1 + 64);
    char *v4 = 8;
    v4[1] = v6;
    if (v6 > 0x7F)
    {
      v4[1] = v6 | 0x80;
      unint64_t v7 = v6 >> 7;
      v4[2] = v6 >> 7;
      v4 += 3;
      if (v6 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v8 = v7 >> 14;
          v7 >>= 7;
          *v4++ = v7;
        }
        while (v8);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v9 = *(unsigned int *)(a1 + 24);
  if ((int)v9 >= 1)
  {
    for (uint64_t i = 0; i != v9; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v11 = *(void *)(*(void *)(a1 + 32) + 8 * i);
      char *v4 = 16;
      v4[1] = v11;
      if (v11 > 0x7F)
      {
        v4[1] = v11 | 0x80;
        unint64_t v12 = v11 >> 7;
        v4[2] = v11 >> 7;
        v4 += 3;
        if (v11 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v13 = v12 >> 14;
            v12 >>= 7;
            *v4++ = v12;
          }
          while (v13);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  uint64_t v14 = *(unsigned int *)(a1 + 48);
  if ((int)v14 >= 1)
  {
    uint64_t v15 = 0;
    uint64_t v16 = 8 * v14;
    do
    {
      uint64_t v17 = *(void **)(*(void *)(a1 + 56) + v15 + 8);
      if (*((char *)v17 + 23) < 0)
      {
        int64_t v18 = v17[1];
        if (v18 > 127) {
          goto LABEL_28;
        }
      }
      else
      {
        int64_t v18 = *((unsigned __int8 *)v17 + 23);
      }
      if (*(void *)a3 - (void)v4 + 14 >= v18)
      {
        char *v4 = 26;
        v4[1] = v18;
        if (*((char *)v17 + 23) < 0) {
          uint64_t v17 = (void *)*v17;
        }
        int v19 = v4 + 2;
        memcpy(v19, v17, v18);
        char v4 = &v19[v18];
        goto LABEL_26;
      }
LABEL_28:
      char v4 = (char *)sub_188A868(a3, 3, (uint64_t)v17, v4);
LABEL_26:
      v15 += 8;
    }
    while (v16 != v15);
  }
  uint64_t v20 = *(void *)(a1 + 8);
  if ((v20 & 1) == 0) {
    return v4;
  }
  unint64_t v22 = v20 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v22 + 31) < 0)
  {
    std::string::size_type v23 = *(void **)(v22 + 8);
    uint64_t v24 = *(void *)(v22 + 16);
  }
  else
  {
    std::string::size_type v23 = (void *)(v22 + 8);
    LODWORD(v24) = *(unsigned __int8 *)(v22 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v24)
  {
    uint64_t v25 = (int)v24;
    memcpy(v4, v23, (int)v24);
    v4 += v25;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v23, v24, v4);
}

uint64_t sub_13FF2DC(uint64_t a1)
{
  uint64_t v2 = sub_188D5A8((unsigned int *)(a1 + 24));
  uint64_t v3 = *(unsigned int *)(a1 + 48);
  uint64_t result = v2 + *(unsigned int *)(a1 + 24) + v3;
  if ((int)v3 >= 1)
  {
    int v5 = (uint64_t *)(*(void *)(a1 + 56) + 8);
    do
    {
      uint64_t v6 = *v5++;
      uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
      uint64_t v8 = *(void *)(v6 + 8);
      if ((v7 & 0x80u) == 0) {
        uint64_t v8 = v7;
      }
      result += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6);
      --v3;
    }
    while (v3);
  }
  if (*(unsigned char *)(a1 + 16)) {
    result += ((9 * (__clz(*(void *)(a1 + 64) | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    result += v11;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

std::string *sub_13FF3BC(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    int v5 = result + 1;
    uint64_t data_low = SLODWORD(result[1].__r_.__value_.__l.__data_);
    sub_188CA54((unsigned int *)&result[1], data_low + v4);
    std::string::size_type size = v3[1].__r_.__value_.__l.__size_;
    LODWORD(v5->__r_.__value_.__l.__data_) += *(_DWORD *)(a2 + 24);
    uint64_t result = (std::string *)memcpy((void *)(size + 8 * data_low), *(const void **)(a2 + 32), 8 * *(int *)(a2 + 24));
  }
  int v8 = *(_DWORD *)(a2 + 48);
  if (v8)
  {
    uint64_t v9 = (const std::string **)(*(void *)(a2 + 56) + 8);
    unint64_t v10 = (std::string **)sub_188CCE4((uint64_t)&v3[1].__r_.__value_.__r.__words[2], *(_DWORD *)(a2 + 48));
    uint64_t result = (std::string *)sub_188FB98((uint64_t)&v3[1].__r_.__value_.__r.__words[2], v10, v9, v8, *(_DWORD *)v3[2].__r_.__value_.__l.__size_ - LODWORD(v3[2].__r_.__value_.__l.__data_));
    int v11 = LODWORD(v3[2].__r_.__value_.__l.__data_) + v8;
    LODWORD(v3[2].__r_.__value_.__l.__data_) = v11;
    unint64_t v12 = (int *)v3[2].__r_.__value_.__l.__size_;
    if (*v12 < v11) {
      *unint64_t v12 = v11;
    }
  }
  if (*(unsigned char *)(a2 + 16))
  {
    std::string::size_type v13 = *(void *)(a2 + 64);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
    v3[2].__r_.__value_.__r.__words[2] = v13;
  }
  uint64_t v14 = *(void *)(a2 + 8);
  if (v14)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v14 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_13FF4EC()
{
  return 1;
}

void *sub_13FF4F4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gemini.StructuredAttributes.VehicleInfo");
}

void *sub_13FF504(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_148F5FC(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_13FF584(void *a1)
{
  sub_13FF504(a1);

  operator delete();
}

uint64_t sub_13FF5BC(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 24);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 32) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_13FEC94(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 24) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  int v5 = (uint64_t *)(v1 + 8);
  if (v6)
  {
    return sub_188B4AC(v5);
  }
  return result;
}

char *sub_13FF638(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v19 = a2;
  if ((sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1]) & 1) == 0)
  {
    int v5 = (void *)(a1 + 8);
    while (1)
    {
      char v6 = v19 + 1;
      unsigned int v7 = *v19;
      if (*v19 < 0)
      {
        unsigned int v8 = v7 + (*v6 << 7);
        unsigned int v7 = v8 - 128;
        if (*v6 < 0)
        {
          char v6 = (char *)sub_188C180((uint64_t)v19, v8 - 128);
          unsigned int v7 = v9;
        }
        else
        {
          char v6 = v19 + 2;
        }
      }
      int v19 = v6;
      if (v7 == 10)
      {
        unint64_t v12 = v6 - 1;
        while (1)
        {
          std::string::size_type v13 = (unsigned __int8 *)(v12 + 1);
          int v19 = v12 + 1;
          uint64_t v14 = *(_DWORD **)(a1 + 32);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 24), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 24) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            uint64_t v17 = sub_144981C(*(void *)(a1 + 16));
            uint64_t v16 = sub_188CDC8(a1 + 16, (uint64_t)v17);
            std::string::size_type v13 = (unsigned __int8 *)v19;
          }
          unint64_t v12 = (char *)sub_13FF7D8(a3, v16, v13);
          int v19 = v12;
          if (!v12) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_24;
          }
        }
      }
      if (!v7 || (v7 & 7) == 4) {
        break;
      }
      if (*v5)
      {
        int v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        int v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        char v6 = v19;
      }
      int v19 = (char *)sub_1885AC0(v7, v11, v6, a3);
      if (!v19) {
        return 0;
      }
LABEL_24:
      if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
        return v19;
      }
    }
    if (v6)
    {
      a3[10].i32[0] = v7 - 1;
      return v19;
    }
    return 0;
  }
  return v19;
}

uint64_t sub_13FF7D8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_13FECF0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_13FF868(uint64_t a1, char *__dst, _DWORD *a3)
{
  int v6 = *(_DWORD *)(a1 + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unint64_t v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unint64_t v10 = __dst + 2;
      }
      __dst = sub_13FF058(v8, (unint64_t)v10, a3);
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return __dst;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    uint64_t v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    uint64_t v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(__dst, v14, (int)v15);
    __dst += v16;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, __dst);
}

uint64_t sub_13FF9AC(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_13FF2DC(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 40) = v2;
  return v2;
}

std::string *sub_13FFA5C(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 32) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result->__r_.__value_.__r.__words[2], *(_DWORD *)(a2 + 24));
    uint64_t result = sub_149117C((std::string *)&v3->__r_.__value_.__r.__words[2], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__l.__size_ - LODWORD(v3[1].__r_.__value_.__l.__data_));
    int v7 = LODWORD(v3[1].__r_.__value_.__l.__data_) + v4;
    LODWORD(v3[1].__r_.__value_.__l.__data_) = v7;
    std::string::size_type size = (int *)v3[1].__r_.__value_.__l.__size_;
    if (*size < v7) {
      *std::string::size_type size = v7;
    }
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_13FFB2C()
{
  return 1;
}

void *sub_13FFB34@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gemini.StructuredAttributes.OEMPreference");
}

uint64_t sub_13FFB44(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_12;
    }
  }
  else if (v4)
  {
    goto LABEL_12;
  }
  if ((uint64_t (***)())a1 != &off_25374C0)
  {
    uint64_t v5 = *(void *)(a1 + 120);
    if (v5)
    {
      sub_13FD29C(v5);
      operator delete();
    }
    uint64_t v6 = *(void *)(a1 + 128);
    if (v6)
    {
      sub_13FD864(v6);
      operator delete();
    }
    int v7 = *(void **)(a1 + 136);
    if (v7)
    {
      sub_13FF504(v7);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_12:
  sub_148F77C((void *)(a1 + 96));
  sub_148F6FC((void *)(a1 + 72));
  sub_148F67C((void *)(a1 + 48));
  sub_1889DE8((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_13FFC60(uint64_t a1)
{
  sub_13FFB44(a1);

  operator delete();
}

uint64_t sub_13FFC98(uint64_t a1)
{
  uint64_t result = sub_188CC00(a1 + 24);
  uint64_t v3 = *(unsigned int *)(a1 + 56);
  if ((int)v3 >= 1)
  {
    int v4 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = sub_13FC360(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 56) = 0;
  }
  uint64_t v6 = *(unsigned int *)(a1 + 80);
  if ((int)v6 >= 1)
  {
    int v7 = (uint64_t *)(*(void *)(a1 + 88) + 8);
    do
    {
      uint64_t v8 = *v7++;
      uint64_t result = sub_13FBDEC(v8);
      --v6;
    }
    while (v6);
    *(_DWORD *)(a1 + 80) = 0;
  }
  uint64_t v9 = *(unsigned int *)(a1 + 104);
  if ((int)v9 >= 1)
  {
    unint64_t v10 = (uint64_t *)(*(void *)(a1 + 112) + 8);
    do
    {
      uint64_t v11 = *v10++;
      uint64_t result = sub_13FE684(v11);
      --v9;
    }
    while (v9);
    *(_DWORD *)(a1 + 104) = 0;
  }
  int v12 = *(_DWORD *)(a1 + 16);
  if ((v12 & 7) != 0)
  {
    if (v12)
    {
      uint64_t result = sub_13FD374(*(void *)(a1 + 120));
      if ((v12 & 2) == 0)
      {
LABEL_16:
        if ((v12 & 4) == 0) {
          goto LABEL_18;
        }
        goto LABEL_17;
      }
    }
    else if ((v12 & 2) == 0)
    {
      goto LABEL_16;
    }
    uint64_t result = sub_13FD9B0(*(void *)(a1 + 128));
    if ((v12 & 4) != 0) {
LABEL_17:
    }
      uint64_t result = sub_13FF5BC(*(void *)(a1 + 136));
  }
LABEL_18:
  if ((v12 & 0x78) != 0)
  {
    *(void *)(a1 + 144) = 0;
    *(void *)(a1 + 152) = 0;
  }
  char v14 = *(unsigned char *)(a1 + 8);
  uint64_t v13 = a1 + 8;
  *(_DWORD *)(v13 + 8) = 0;
  if (v14)
  {
    return sub_188B4AC((uint64_t *)v13);
  }
  return result;
}

uint64_t sub_13FFDB8(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)std::string::size_type v68 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v68, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  uint64_t v8 = (uint64_t **)(a1 + 24);
  while (2)
  {
    uint64_t v9 = (unsigned __int8 *)(*(void *)v68 + 1);
    unsigned int v10 = **(unsigned char **)v68;
    if ((char)**(unsigned char **)v68 < 0)
    {
      unsigned int v11 = v10 + (*v9 << 7);
      unsigned int v10 = v11 - 128;
      if ((char)*v9 < 0)
      {
        uint64_t v9 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v68, v11 - 128);
        unsigned int v10 = v12;
      }
      else
      {
        uint64_t v9 = (unsigned __int8 *)(*(void *)v68 + 2);
      }
    }
    *(void *)std::string::size_type v68 = v9;
    switch(v10 >> 3)
    {
      case 1u:
        if (v10 != 10) {
          goto LABEL_93;
        }
        uint64_t v13 = (const std::string::value_type *)(v9 - 1);
        while (1)
        {
          char v14 = (char *)(v13 + 1);
          *(void *)std::string::size_type v68 = v13 + 1;
          uint64_t v15 = *(_DWORD **)(a1 + 40);
          if (v15 && (uint64_t v16 = *(int *)(a1 + 32), (int)v16 < *v15))
          {
            *(_DWORD *)(a1 + 32) = v16 + 1;
            uint64_t v17 = *(std::string **)&v15[2 * v16 + 2];
          }
          else
          {
            if (!*v8) {
              operator new();
            }
            *int v19 = v18;
            v19[1] = sub_3A6EDC;
            *int64_t v18 = 0;
            v18[1] = 0;
            v18[2] = 0;
            uint64_t v17 = (std::string *)sub_188CDC8(a1 + 24, (uint64_t)v18);
            char v14 = *(char **)v68;
          }
          uint64_t v13 = sub_188C244(v17, v14, (uint64_t)a3);
          *(void *)std::string::size_type v68 = v13;
          if (!v13) {
            goto LABEL_123;
          }
          if (*(void *)a3 <= (unint64_t)v13 || *v13 != 10) {
            goto LABEL_101;
          }
        }
      case 2u:
        if (v10 != 18) {
          goto LABEL_93;
        }
        uint64_t v20 = v9 - 1;
        while (1)
        {
          uint64_t v21 = v20 + 1;
          *(void *)std::string::size_type v68 = v20 + 1;
          unint64_t v22 = *(_DWORD **)(a1 + 64);
          if (v22 && (uint64_t v23 = *(int *)(a1 + 56), (int)v23 < *v22))
          {
            *(_DWORD *)(a1 + 56) = v23 + 1;
            uint64_t v24 = *(void *)&v22[2 * v23 + 2];
          }
          else
          {
            sub_14495CC(*(void *)(a1 + 48));
            uint64_t v24 = sub_188CDC8(a1 + 48, v25);
            uint64_t v21 = *(unsigned __int8 **)v68;
          }
          uint64_t v20 = (unsigned __int8 *)sub_14004C8(a3, v24, v21);
          *(void *)std::string::size_type v68 = v20;
          if (!v20) {
            goto LABEL_123;
          }
          if (*(void *)a3 <= (unint64_t)v20 || *v20 != 18) {
            goto LABEL_101;
          }
        }
      case 3u:
        if (v10 != 24) {
          goto LABEL_93;
        }
        v5 |= 8u;
        uint64_t v26 = (char *)(v9 + 1);
        uint64_t v27 = *v9;
        if (((char)*v9 & 0x80000000) == 0) {
          goto LABEL_35;
        }
        int v28 = *v26;
        uint64_t v27 = v27 + (v28 << 7) - 128;
        if (v28 < 0)
        {
          uint64_t v60 = sub_188C138((uint64_t)v9, v27);
          *(void *)std::string::size_type v68 = v60;
          *(unsigned char *)(a1 + 144) = v61 != 0;
          if (!v60) {
            goto LABEL_123;
          }
        }
        else
        {
          uint64_t v26 = (char *)(v9 + 2);
LABEL_35:
          *(void *)std::string::size_type v68 = v26;
          *(unsigned char *)(a1 + 144) = v27 != 0;
        }
        goto LABEL_101;
      case 4u:
        if (v10 != 34) {
          goto LABEL_93;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v29 = *(void **)(a1 + 120);
        if (!v29)
        {
          int v30 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            int v30 = (void *)*v30;
          }
          uint64_t v29 = sub_1449660((uint64_t)v30);
          *(void *)(a1 + 120) = v29;
          uint64_t v9 = *(unsigned __int8 **)v68;
        }
        uint64_t v31 = sub_1400558(a3, (uint64_t)v29, v9);
        goto LABEL_100;
      case 5u:
        if (v10 != 40) {
          goto LABEL_93;
        }
        v5 |= 0x10u;
        uint64_t v32 = (char *)(v9 + 1);
        int v33 = *v9;
        if (((char)*v9 & 0x80000000) == 0) {
          goto LABEL_46;
        }
        int v34 = *v32;
        int v33 = v33 + (v34 << 7) - 128;
        if (v34 < 0)
        {
          uint64_t v62 = sub_188C0D0((uint64_t)v9, v33);
          *(void *)std::string::size_type v68 = v62;
          *(_DWORD *)(a1 + 148) = v63;
          if (!v62) {
            goto LABEL_123;
          }
        }
        else
        {
          uint64_t v32 = (char *)(v9 + 2);
LABEL_46:
          *(void *)std::string::size_type v68 = v32;
          *(_DWORD *)(a1 + 148) = v33;
        }
        goto LABEL_101;
      case 6u:
        if (v10 != 50) {
          goto LABEL_93;
        }
        uint64_t v35 = v9 - 1;
        while (1)
        {
          uint64_t v36 = v35 + 1;
          *(void *)std::string::size_type v68 = v35 + 1;
          uint64_t v37 = *(_DWORD **)(a1 + 88);
          if (v37 && (uint64_t v38 = *(int *)(a1 + 80), (int)v38 < *v37))
          {
            *(_DWORD *)(a1 + 80) = v38 + 1;
            uint64_t v39 = *(void *)&v37[2 * v38 + 2];
          }
          else
          {
            uint64_t v40 = sub_1449544(*(void *)(a1 + 72));
            uint64_t v39 = sub_188CDC8(a1 + 72, v40);
            uint64_t v36 = *(unsigned __int8 **)v68;
          }
          uint64_t v35 = (unsigned __int8 *)sub_14005E8(a3, v39, v36);
          *(void *)std::string::size_type v68 = v35;
          if (!v35) {
            goto LABEL_123;
          }
          if (*(void *)a3 <= (unint64_t)v35 || *v35 != 50) {
            goto LABEL_101;
          }
        }
      case 7u:
        if (v10 != 58) {
          goto LABEL_93;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        int v41 = *(void **)(a1 + 128);
        if (!v41)
        {
          uint64_t v42 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v42 = (void *)*v42;
          }
          int v41 = sub_14496E8((uint64_t)v42);
          *(void *)(a1 + 128) = v41;
          uint64_t v9 = *(unsigned __int8 **)v68;
        }
        uint64_t v31 = sub_1400678(a3, (uint64_t)v41, v9);
        goto LABEL_100;
      case 8u:
        if (v10 != 66) {
          goto LABEL_93;
        }
        BOOL v43 = v9 - 1;
        while (1)
        {
          uint64_t v44 = v43 + 1;
          *(void *)std::string::size_type v68 = v43 + 1;
          unint64_t v45 = *(_DWORD **)(a1 + 112);
          if (v45 && (uint64_t v46 = *(int *)(a1 + 104), (int)v46 < *v45))
          {
            *(_DWORD *)(a1 + 104) = v46 + 1;
            uint64_t v47 = *(void *)&v45[2 * v46 + 2];
          }
          else
          {
            uint64_t v48 = sub_1449794(*(void *)(a1 + 96));
            uint64_t v47 = sub_188CDC8(a1 + 96, v48);
            uint64_t v44 = *(unsigned __int8 **)v68;
          }
          BOOL v43 = (unsigned __int8 *)sub_1400708(a3, v47, v44);
          *(void *)std::string::size_type v68 = v43;
          if (!v43) {
            goto LABEL_123;
          }
          if (*(void *)a3 <= (unint64_t)v43 || *v43 != 66) {
            goto LABEL_101;
          }
        }
      case 9u:
        if (v10 != 72) {
          goto LABEL_93;
        }
        uint64_t v49 = (char *)(v9 + 1);
        unint64_t v50 = *v9;
        if (((char)*v9 & 0x80000000) == 0) {
          goto LABEL_77;
        }
        int v51 = *v49;
        int v52 = v50 + (v51 << 7);
        unint64_t v50 = (v52 - 128);
        if (v51 < 0)
        {
          *(void *)std::string::size_type v68 = sub_188C138((uint64_t)v9, (v52 - 128));
          if (!*(void *)v68) {
            goto LABEL_123;
          }
          unint64_t v50 = v64;
        }
        else
        {
          uint64_t v49 = (char *)(v9 + 2);
LABEL_77:
          *(void *)std::string::size_type v68 = v49;
        }
        if (v50 <= 3)
        {
          *(_DWORD *)(a1 + 16) |= 0x20u;
          *(_DWORD *)(a1 + 152) = v50;
          goto LABEL_101;
        }
        if (*v7) {
          int v66 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          int v66 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v67 = 9;
        goto LABEL_117;
      case 0xAu:
        if (v10 != 80) {
          goto LABEL_93;
        }
        int v53 = (char *)(v9 + 1);
        unint64_t v50 = *v9;
        if (((char)*v9 & 0x80000000) == 0) {
          goto LABEL_84;
        }
        int v54 = *v53;
        int v55 = v50 + (v54 << 7);
        unint64_t v50 = (v55 - 128);
        if (v54 < 0)
        {
          *(void *)std::string::size_type v68 = sub_188C138((uint64_t)v9, (v55 - 128));
          if (!*(void *)v68) {
            goto LABEL_123;
          }
          unint64_t v50 = v65;
        }
        else
        {
          int v53 = (char *)(v9 + 2);
LABEL_84:
          *(void *)std::string::size_type v68 = v53;
        }
        if (v50 > 3)
        {
          if (*v7) {
            int v66 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            int v66 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          int v67 = 10;
LABEL_117:
          sub_188C020(v67, v50, v66);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 0x40u;
          *(_DWORD *)(a1 + 156) = v50;
        }
        goto LABEL_101;
      case 0xBu:
        if (v10 != 90) {
          goto LABEL_93;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v56 = *(void *)(a1 + 136);
        if (!v56)
        {
          int v57 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            int v57 = (void *)*v57;
          }
          uint64_t v56 = sub_14498C4((uint64_t)v57);
          *(void *)(a1 + 136) = v56;
          uint64_t v9 = *(unsigned __int8 **)v68;
        }
        uint64_t v31 = (uint64_t)sub_1400798(a3, v56, v9);
        goto LABEL_100;
      default:
LABEL_93:
        if (v10) {
          BOOL v58 = (v10 & 7) == 4;
        }
        else {
          BOOL v58 = 1;
        }
        if (!v58)
        {
          if (*v7)
          {
            int v59 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            int v59 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v9 = *(unsigned __int8 **)v68;
          }
          uint64_t v31 = (uint64_t)sub_1885AC0(v10, v59, (char *)v9, a3);
LABEL_100:
          *(void *)std::string::size_type v68 = v31;
          if (!v31) {
            goto LABEL_123;
          }
LABEL_101:
          if (sub_11947B8((uint64_t)a3, (char **)v68, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v9) {
          a3[10].i32[0] = v10 - 1;
        }
        else {
LABEL_123:
        }
          *(void *)std::string::size_type v68 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v68;
    }
  }
}

uint64_t sub_14004C8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_13FC3FC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_1400558(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_13FD3C4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_14005E8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_13FBE34(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_1400678(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_13FDB70(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_1400708(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_13FE6D8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1400798(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_13FF638(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1400828(uint64_t a1, char *__dst, unint64_t *a3)
{
  uint64_t v6 = *(unsigned int *)(a1 + 32);
  if ((int)v6 >= 1)
  {
    uint64_t v7 = 0;
    uint64_t v8 = 8 * v6;
    do
    {
      uint64_t v9 = *(void **)(*(void *)(a1 + 40) + v7 + 8);
      if (*((char *)v9 + 23) < 0)
      {
        int64_t v10 = v9[1];
        if (v10 > 127) {
          goto LABEL_12;
        }
      }
      else
      {
        int64_t v10 = *((unsigned __int8 *)v9 + 23);
      }
      if ((uint64_t)(*a3 - (void)__dst + 14) >= v10)
      {
        *__dst = 10;
        __dst[1] = v10;
        if (*((char *)v9 + 23) < 0) {
          uint64_t v9 = (void *)*v9;
        }
        unsigned int v11 = __dst + 2;
        memcpy(v11, v9, v10);
        __dst = &v11[v10];
        goto LABEL_10;
      }
LABEL_12:
      __dst = (char *)sub_188A868(a3, 1, (uint64_t)v9, __dst);
LABEL_10:
      v7 += 8;
    }
    while (v8 != v7);
  }
  int v12 = *(_DWORD *)(a1 + 56);
  if (v12)
  {
    for (int i = 0; i != v12; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v14 = *(void *)(*(void *)(a1 + 64) + 8 * i + 8);
      *__dst = 18;
      unsigned int v15 = *(_DWORD *)(v14 + 20);
      __dst[1] = v15;
      if (v15 > 0x7F) {
        uint64_t v16 = sub_188A9CC(v15, __dst + 1);
      }
      else {
        uint64_t v16 = __dst + 2;
      }
      __dst = sub_13FC9DC(v14, (unint64_t)v16, a3);
    }
  }
  int v17 = *(_DWORD *)(a1 + 16);
  if ((v17 & 8) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    char v18 = *(unsigned char *)(a1 + 144);
    *__dst = 24;
    __dst[1] = v18;
    __dst += 2;
    if ((v17 & 1) == 0)
    {
LABEL_23:
      if ((v17 & 0x10) == 0) {
        goto LABEL_40;
      }
      goto LABEL_34;
    }
  }
  else if ((v17 & 1) == 0)
  {
    goto LABEL_23;
  }
  if (*a3 <= (unint64_t)__dst) {
    __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
  }
  uint64_t v19 = *(void *)(a1 + 120);
  *__dst = 34;
  unsigned int v20 = *(_DWORD *)(v19 + 20);
  __dst[1] = v20;
  if (v20 > 0x7F) {
    uint64_t v21 = sub_188A9CC(v20, __dst + 1);
  }
  else {
    uint64_t v21 = __dst + 2;
  }
  __dst = sub_13FD588(v19, v21, a3);
  if ((v17 & 0x10) != 0)
  {
LABEL_34:
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unsigned int v22 = *(_DWORD *)(a1 + 148);
    *__dst = 40;
    __dst[1] = v22;
    if (v22 > 0x7F)
    {
      __dst[1] = v22 | 0x80;
      unsigned int v23 = v22 >> 7;
      __dst[2] = v22 >> 7;
      __dst += 3;
      if (v22 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unsigned int v24 = v23 >> 14;
          v23 >>= 7;
          *__dst++ = v23;
        }
        while (v24);
      }
    }
    else
    {
      __dst += 2;
    }
  }
LABEL_40:
  int v25 = *(_DWORD *)(a1 + 80);
  if (v25)
  {
    for (int j = 0; j != v25; ++j)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v27 = *(void *)(*(void *)(a1 + 88) + 8 * j + 8);
      *__dst = 50;
      unsigned int v28 = *(_DWORD *)(v27 + 20);
      __dst[1] = v28;
      if (v28 > 0x7F) {
        uint64_t v29 = sub_188A9CC(v28, __dst + 1);
      }
      else {
        uint64_t v29 = __dst + 2;
      }
      __dst = sub_13FC044(v27, (unint64_t)v29, a3);
    }
  }
  if ((v17 & 2) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    uint64_t v30 = *(void *)(a1 + 128);
    *__dst = 58;
    unsigned int v31 = *(_DWORD *)(v30 + 20);
    __dst[1] = v31;
    if (v31 > 0x7F) {
      uint64_t v32 = sub_188A9CC(v31, __dst + 1);
    }
    else {
      uint64_t v32 = __dst + 2;
    }
    __dst = sub_13FDEDC(v30, v32, a3);
  }
  int v33 = *(_DWORD *)(a1 + 104);
  if (v33)
  {
    for (int k = 0; k != v33; ++k)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v35 = *(void *)(*(void *)(a1 + 112) + 8 * k + 8);
      *__dst = 66;
      unsigned int v36 = *(_DWORD *)(v35 + 20);
      __dst[1] = v36;
      if (v36 > 0x7F) {
        uint64_t v37 = sub_188A9CC(v36, __dst + 1);
      }
      else {
        uint64_t v37 = __dst + 2;
      }
      __dst = sub_13FE918(v35, (unint64_t)v37, a3);
    }
  }
  if ((v17 & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unint64_t v38 = *(int *)(a1 + 152);
    *__dst = 72;
    __dst[1] = v38;
    if (v38 > 0x7F)
    {
      __dst[1] = v38 | 0x80;
      unint64_t v39 = v38 >> 7;
      __dst[2] = v38 >> 7;
      __dst += 3;
      if (v38 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unint64_t v40 = v39 >> 14;
          v39 >>= 7;
          *__dst++ = v39;
        }
        while (v40);
      }
    }
    else
    {
      __dst += 2;
    }
  }
  if ((v17 & 0x40) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unint64_t v41 = *(int *)(a1 + 156);
    *__dst = 80;
    __dst[1] = v41;
    if (v41 > 0x7F)
    {
      __dst[1] = v41 | 0x80;
      unint64_t v42 = v41 >> 7;
      __dst[2] = v41 >> 7;
      __dst += 3;
      if (v41 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unint64_t v43 = v42 >> 14;
          v42 >>= 7;
          *__dst++ = v42;
        }
        while (v43);
      }
    }
    else
    {
      __dst += 2;
    }
  }
  if ((v17 & 4) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    uint64_t v44 = *(void *)(a1 + 136);
    *__dst = 90;
    unsigned int v45 = *(_DWORD *)(v44 + 40);
    __dst[1] = v45;
    if (v45 > 0x7F) {
      uint64_t v46 = sub_188A9CC(v45, __dst + 1);
    }
    else {
      uint64_t v46 = __dst + 2;
    }
    __dst = sub_13FF868(v44, v46, a3);
  }
  uint64_t v47 = *(void *)(a1 + 8);
  if ((v47 & 1) == 0) {
    return __dst;
  }
  unint64_t v49 = v47 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v49 + 31) < 0)
  {
    unint64_t v50 = *(void **)(v49 + 8);
    uint64_t v51 = *(void *)(v49 + 16);
  }
  else
  {
    unint64_t v50 = (void *)(v49 + 8);
    LODWORD(v51) = *(unsigned __int8 *)(v49 + 31);
  }
  if ((uint64_t)(*a3 - (void)__dst) >= (int)v51)
  {
    uint64_t v52 = (int)v51;
    memcpy(__dst, v50, (int)v51);
    __dst += v52;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v50, v51, __dst);
}

uint64_t sub_1400E04(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  if ((int)v2 < 1)
  {
    uint64_t v4 = *(unsigned int *)(a1 + 32);
  }
  else
  {
    uint64_t v3 = (uint64_t *)(*(void *)(a1 + 40) + 8);
    uint64_t v4 = *(unsigned int *)(a1 + 32);
    do
    {
      uint64_t v5 = *v3++;
      uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
      uint64_t v7 = *(void *)(v5 + 8);
      if ((v6 & 0x80u) == 0) {
        uint64_t v7 = v6;
      }
      v4 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      --v2;
    }
    while (v2);
  }
  uint64_t v8 = *(int *)(a1 + 56);
  uint64_t v9 = v4 + v8;
  uint64_t v10 = *(void *)(a1 + 64);
  if (v10) {
    unsigned int v11 = (uint64_t *)(v10 + 8);
  }
  else {
    unsigned int v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_13FCEA8(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  uint64_t v15 = *(int *)(a1 + 80);
  uint64_t v16 = v9 + v15;
  uint64_t v17 = *(void *)(a1 + 88);
  if (v17) {
    char v18 = (uint64_t *)(v17 + 8);
  }
  else {
    char v18 = 0;
  }
  if (v15)
  {
    uint64_t v19 = 8 * v15;
    do
    {
      uint64_t v20 = *v18++;
      uint64_t v21 = sub_13FC18C(v20);
      v16 += v21 + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6);
      v19 -= 8;
    }
    while (v19);
  }
  uint64_t v22 = *(int *)(a1 + 104);
  uint64_t v23 = v16 + v22;
  uint64_t v24 = *(void *)(a1 + 112);
  if (v24) {
    int v25 = (uint64_t *)(v24 + 8);
  }
  else {
    int v25 = 0;
  }
  if (v22)
  {
    uint64_t v26 = 8 * v22;
    do
    {
      uint64_t v27 = *v25++;
      uint64_t v28 = sub_13FEADC(v27);
      v23 += v28 + ((9 * (__clz(v28 | 1) ^ 0x1F) + 73) >> 6);
      v26 -= 8;
    }
    while (v26);
  }
  int v29 = *(_DWORD *)(a1 + 16);
  if ((v29 & 0x7F) == 0) {
    goto LABEL_40;
  }
  if ((v29 & 1) == 0)
  {
    if ((v29 & 2) == 0) {
      goto LABEL_29;
    }
LABEL_43:
    uint64_t v37 = sub_13FE0FC(*(void *)(a1 + 128));
    v23 += v37 + ((9 * (__clz(v37 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v29 & 4) == 0) {
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  uint64_t v36 = sub_13FD6D0(*(void *)(a1 + 120));
  v23 += v36 + ((9 * (__clz(v36 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v29 & 2) != 0) {
    goto LABEL_43;
  }
LABEL_29:
  if ((v29 & 4) != 0)
  {
LABEL_30:
    uint64_t v30 = sub_13FF9AC(*(void *)(a1 + 136));
    v23 += v30 + ((9 * (__clz(v30 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_31:
  if ((v29 & 8) != 0) {
    v23 += 2;
  }
  if ((v29 & 0x10) != 0)
  {
    v23 += ((9 * (__clz(*(_DWORD *)(a1 + 148) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v29 & 0x20) == 0)
    {
LABEL_35:
      if ((v29 & 0x40) == 0) {
        goto LABEL_40;
      }
      goto LABEL_36;
    }
  }
  else if ((v29 & 0x20) == 0)
  {
    goto LABEL_35;
  }
  int v38 = *(_DWORD *)(a1 + 152);
  uint64_t v39 = ((9 * (__clz(v38 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if (v38 >= 0) {
    uint64_t v40 = v39;
  }
  else {
    uint64_t v40 = 11;
  }
  v23 += v40;
  if ((v29 & 0x40) != 0)
  {
LABEL_36:
    int v31 = *(_DWORD *)(a1 + 156);
    uint64_t v32 = ((9 * (__clz(v31 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if (v31 >= 0) {
      uint64_t v33 = v32;
    }
    else {
      uint64_t v33 = 11;
    }
    v23 += v33;
  }
LABEL_40:
  uint64_t v34 = *(void *)(a1 + 8);
  if (v34)
  {
    unint64_t v41 = v34 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v41 + 31) < 0) {
      uint64_t v42 = *(void *)(v41 + 16);
    }
    else {
      uint64_t v42 = *(unsigned __int8 *)(v41 + 31);
    }
    v23 += v42;
  }
  *(_DWORD *)(a1 + 20) = v23;
  return v23;
}

void sub_1401100(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (const std::string **)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_188FB98(a1 + 24, v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    uint64_t v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    unsigned int v11 = (std::string **)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_1491208((uint64_t *)(a1 + 48), v11, v10, v9, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v12 = *(_DWORD *)(a1 + 56) + v9;
    *(_DWORD *)(a1 + 56) = v12;
    uint64_t v13 = *(int **)(a1 + 64);
    if (*v13 < v12) {
      int *v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 80);
  if (v14)
  {
    uint64_t v15 = (uint64_t *)(*(void *)(a2 + 88) + 8);
    uint64_t v16 = (std::string **)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_1491294((uint64_t *)(a1 + 72), v16, v15, v14, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v17 = *(_DWORD *)(a1 + 80) + v14;
    *(_DWORD *)(a1 + 80) = v17;
    char v18 = *(int **)(a1 + 88);
    if (*v18 < v17) {
      *char v18 = v17;
    }
  }
  int v19 = *(_DWORD *)(a2 + 104);
  if (v19)
  {
    uint64_t v20 = (uint64_t *)(*(void *)(a2 + 112) + 8);
    uint64_t v21 = (std::string **)sub_188CCE4(a1 + 96, *(_DWORD *)(a2 + 104));
    sub_1491310((uint64_t *)(a1 + 96), v21, v20, v19, **(_DWORD **)(a1 + 112) - *(_DWORD *)(a1 + 104));
    int v22 = *(_DWORD *)(a1 + 104) + v19;
    *(_DWORD *)(a1 + 104) = v22;
    uint64_t v23 = *(int **)(a1 + 112);
    if (*v23 < v22) {
      *uint64_t v23 = v22;
    }
  }
  int v24 = *(_DWORD *)(a2 + 16);
  if ((v24 & 0x7F) != 0)
  {
    if (v24)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v26 = *(std::string **)(a1 + 120);
      if (!v26)
      {
        uint64_t v27 = *(void *)(a1 + 8);
        uint64_t v28 = (void *)(v27 & 0xFFFFFFFFFFFFFFFCLL);
        if (v27) {
          uint64_t v28 = (void *)*v28;
        }
        uint64_t v26 = (std::string *)sub_1449660((uint64_t)v28);
        *(void *)(a1 + 120) = v26;
      }
      if (*(void *)(a2 + 120)) {
        int v29 = *(uint64_t (****)(uint64_t))(a2 + 120);
      }
      else {
        int v29 = &off_2537400;
      }
      sub_13FD77C(v26, (uint64_t)v29);
      if ((v24 & 2) == 0)
      {
LABEL_16:
        if ((v24 & 4) == 0) {
          goto LABEL_17;
        }
        goto LABEL_43;
      }
    }
    else if ((v24 & 2) == 0)
    {
      goto LABEL_16;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v30 = *(std::string **)(a1 + 128);
    if (!v30)
    {
      uint64_t v31 = *(void *)(a1 + 8);
      uint64_t v32 = (void *)(v31 & 0xFFFFFFFFFFFFFFFCLL);
      if (v31) {
        uint64_t v32 = (void *)*v32;
      }
      uint64_t v30 = (std::string *)sub_14496E8((uint64_t)v32);
      *(void *)(a1 + 128) = v30;
    }
    if (*(void *)(a2 + 128)) {
      uint64_t v33 = *(uint64_t (****)(uint64_t))(a2 + 128);
    }
    else {
      uint64_t v33 = &off_2537430;
    }
    sub_13FE368(v30, (uint64_t)v33);
    if ((v24 & 4) == 0)
    {
LABEL_17:
      if ((v24 & 8) == 0) {
        goto LABEL_18;
      }
      goto LABEL_51;
    }
LABEL_43:
    *(_DWORD *)(a1 + 16) |= 4u;
    uint64_t v34 = *(std::string **)(a1 + 136);
    if (!v34)
    {
      uint64_t v35 = *(void *)(a1 + 8);
      uint64_t v36 = (void *)(v35 & 0xFFFFFFFFFFFFFFFCLL);
      if (v35) {
        uint64_t v36 = (void *)*v36;
      }
      uint64_t v34 = (std::string *)sub_14498C4((uint64_t)v36);
      *(void *)(a1 + 136) = v34;
    }
    if (*(void *)(a2 + 136)) {
      uint64_t v37 = *(void *(****)(void *))(a2 + 136);
    }
    else {
      uint64_t v37 = &off_2537490;
    }
    sub_13FFA5C(v34, (uint64_t)v37);
    if ((v24 & 8) == 0)
    {
LABEL_18:
      if ((v24 & 0x10) == 0) {
        goto LABEL_19;
      }
      goto LABEL_52;
    }
LABEL_51:
    *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
    if ((v24 & 0x10) == 0)
    {
LABEL_19:
      if ((v24 & 0x20) == 0) {
        goto LABEL_20;
      }
      goto LABEL_53;
    }
LABEL_52:
    *(_DWORD *)(a1 + 148) = *(_DWORD *)(a2 + 148);
    if ((v24 & 0x20) == 0)
    {
LABEL_20:
      if ((v24 & 0x40) == 0)
      {
LABEL_22:
        *(_DWORD *)(a1 + 16) |= v24;
        goto LABEL_23;
      }
LABEL_21:
      *(_DWORD *)(a1 + 156) = *(_DWORD *)(a2 + 156);
      goto LABEL_22;
    }
LABEL_53:
    *(_DWORD *)(a1 + 152) = *(_DWORD *)(a2 + 152);
    if ((v24 & 0x40) == 0) {
      goto LABEL_22;
    }
    goto LABEL_21;
  }
LABEL_23:
  uint64_t v25 = *(void *)(a2 + 8);
  if (v25)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v25 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_1401444()
{
  return 1;
}

void *sub_140144C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gemini.StructuredAttributes.EvCharging");
}

void *sub_140145C(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_14014D0(void *a1)
{
  sub_140145C(a1);

  operator delete();
}

uint64_t sub_1401508(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 3) != 0)
  {
    *(_DWORD *)(a1 + 32) = 0;
    *(void *)(a1 + 24) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_1401530(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v26 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v26 + 1;
    unsigned int v9 = *v26;
    if (*v26 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v26, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v26 + 2;
      }
    }
    uint64_t v26 = v8;
    if (v9 >> 3 == 2) {
      break;
    }
    if (v9 >> 3 != 1 || v9 != 8) {
      goto LABEL_13;
    }
    int v19 = v8 + 1;
    uint64_t v20 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_31;
    }
    int v21 = *v19;
    uint64_t v20 = v20 + (v21 << 7) - 128;
    if ((v21 & 0x80000000) == 0)
    {
      int v19 = v8 + 2;
LABEL_31:
      uint64_t v26 = v19;
      *(void *)(a1 + 24) = v20;
      int v5 = 1;
      goto LABEL_32;
    }
    uint64_t v23 = (char *)sub_188C138((uint64_t)v8, v20);
    uint64_t v26 = v23;
    *(void *)(a1 + 24) = v24;
    int v5 = 1;
    if (!v23) {
      goto LABEL_45;
    }
LABEL_32:
    if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 == 16)
  {
    uint64_t v15 = v8 + 1;
    unint64_t v16 = *v8;
    if (*v8 < 0)
    {
      int v17 = *v15;
      int v18 = v16 + (v17 << 7);
      unint64_t v16 = (v18 - 128);
      if (v17 < 0)
      {
        uint64_t v26 = (char *)sub_188C138((uint64_t)v8, (v18 - 128));
        if (!v26) {
          goto LABEL_45;
        }
        unint64_t v16 = v22;
        goto LABEL_26;
      }
      uint64_t v15 = v8 + 2;
    }
    uint64_t v26 = v15;
LABEL_26:
    if (v16 > 4)
    {
      if (*v7) {
        uint64_t v25 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        uint64_t v25 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      sub_188C020(2, v16, v25);
    }
    else
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      *(_DWORD *)(a1 + 32) = v16;
    }
    goto LABEL_32;
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      int v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      int v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = v26;
    }
    uint64_t v26 = (char *)sub_1885AC0(v9, v14, v8, a3);
    if (!v26) {
      goto LABEL_45;
    }
    goto LABEL_32;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_45:
  uint64_t v26 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v26;
}

unsigned char *sub_1401768(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(void *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 32);
    unsigned char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    unint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    unint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

unint64_t sub_140190C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    unint64_t v2 = 0;
    goto LABEL_11;
  }
  if (v1)
  {
    unint64_t v2 = ((9 * (__clz(*(void *)(a1 + 24) | 1) ^ 0x3F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_11;
    }
  }
  else
  {
    unint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_11;
    }
  }
  int v3 = *(_DWORD *)(a1 + 32);
  if (v3 < 0) {
    uint64_t v4 = 11;
  }
  else {
    uint64_t v4 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v2 += v4;
LABEL_11:
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5)
  {
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v7 + 31) < 0) {
      uint64_t v8 = *(void *)(v7 + 16);
    }
    else {
      uint64_t v8 = *(unsigned __int8 *)(v7 + 31);
    }
    v2 += v8;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_14019BC()
{
  return 1;
}

void *sub_14019C4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gemini.StructuredAttributes.ServiceArea.Constituent");
}

uint64_t sub_14019D4(uint64_t a1)
{
  int v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_2537588)
  {
    int v6 = *(void **)(a1 + 40);
    if (v6)
    {
      sub_140145C(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  sub_1889DA8(a1 + 24);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1401A94(uint64_t a1)
{
  sub_14019D4(a1);

  operator delete();
}

uint64_t sub_1401ACC(uint64_t result)
{
  uint64_t v1 = result;
  *(_DWORD *)(result + 24) = 0;
  if (*(unsigned char *)(result + 16)) {
    uint64_t result = sub_1401508(*(void *)(result + 40));
  }
  char v3 = *(unsigned char *)(v1 + 8);
  uint64_t v2 = v1 + 8;
  *(unsigned char *)(v2 + 40) = 0;
  *(_DWORD *)(v2 + 8) = 0;
  if (v3)
  {
    return sub_188B4AC((uint64_t *)v2);
  }
  return result;
}

char *sub_1401B30(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v34 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v34, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v34 + 1;
    unsigned int v9 = *v34;
    if (*v34 < 0)
    {
      int v10 = *v8;
      unsigned int v11 = v9 + (v10 << 7);
      unsigned int v9 = v11 - 128;
      if (v10 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v34, v11 - 128);
        unsigned int v9 = v12;
      }
      else
      {
        uint64_t v8 = v34 + 2;
      }
    }
    uint64_t v34 = v8;
    unsigned int v13 = v9 >> 3;
    if (v9 >> 3 == 3)
    {
      if (v9 != 24)
      {
        if (v9 != 26) {
          goto LABEL_14;
        }
        *(void *)&long long v35 = a1 + 24;
        *((void *)&v35 + 1) = sub_13F4A9C;
        uint64_t v36 = a1 + 8;
        int v37 = 3;
        uint64_t v17 = sub_1112E88((uint64_t)a3, v8, &v35);
LABEL_51:
        uint64_t v34 = v17;
        if (!v17) {
          goto LABEL_61;
        }
        goto LABEL_52;
      }
      uint64_t v18 = v8 - 1;
      while (1)
      {
        uint64_t v34 = v18 + 1;
        unint64_t v19 = v18[1];
        uint64_t v20 = v18 + 2;
        if (v18[1] < 0)
        {
          int v21 = *v20;
          int v22 = v19 + (v21 << 7);
          unint64_t v19 = (v22 - 128);
          if (v21 < 0)
          {
            uint64_t v34 = (char *)sub_188C138((uint64_t)(v18 + 1), (v22 - 128));
            if (!v34) {
              goto LABEL_61;
            }
            unint64_t v19 = v25;
            goto LABEL_27;
          }
          uint64_t v20 = v18 + 3;
        }
        uint64_t v34 = v20;
LABEL_27:
        if (v19 > 3)
        {
          if (*v7) {
            uint64_t v26 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v26 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(3, v19, v26);
        }
        else
        {
          uint64_t v23 = *(unsigned int *)(a1 + 24);
          if (v23 == *(_DWORD *)(a1 + 28))
          {
            int v24 = v23 + 1;
            sub_188C80C((unsigned int *)(a1 + 24), v23 + 1);
            *(_DWORD *)(*(void *)(a1 + 32) + 4 * v23) = v19;
          }
          else
          {
            *(_DWORD *)(*(void *)(a1 + 32) + 4 * v23) = v19;
            int v24 = v23 + 1;
          }
          *(_DWORD *)(a1 + 24) = v24;
        }
        uint64_t v18 = v34;
        if (*(void *)a3 <= (unint64_t)v34 || *v34 != 24) {
          goto LABEL_52;
        }
      }
    }
    if (v13 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_14;
    }
    v5 |= 2u;
    uint64_t v27 = v8 + 1;
    uint64_t v28 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_45;
    }
    int v29 = *v27;
    uint64_t v28 = v28 + (v29 << 7) - 128;
    if ((v29 & 0x80000000) == 0)
    {
      uint64_t v27 = v8 + 2;
LABEL_45:
      uint64_t v34 = v27;
      *(unsigned char *)(a1 + 48) = v28 != 0;
      goto LABEL_52;
    }
    uint64_t v32 = (char *)sub_188C138((uint64_t)v8, v28);
    uint64_t v34 = v32;
    *(unsigned char *)(a1 + 48) = v33 != 0;
    if (!v32) {
      goto LABEL_61;
    }
LABEL_52:
    if (sub_11947B8((uint64_t)a3, &v34, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v13 == 1 && v9 == 10)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v30 = *(void *)(a1 + 40);
    if (!v30)
    {
      uint64_t v31 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v7) {
        uint64_t v31 = (void *)*v31;
      }
      uint64_t v30 = sub_1449A30((uint64_t)v31);
      *(void *)(a1 + 40) = v30;
      uint64_t v8 = v34;
    }
    uint64_t v17 = sub_1401E6C(a3, v30, (unsigned __int8 *)v8);
    goto LABEL_51;
  }
LABEL_14:
  if (v9) {
    BOOL v15 = (v9 & 7) == 4;
  }
  else {
    BOOL v15 = 1;
  }
  if (!v15)
  {
    if (*v7)
    {
      unint64_t v16 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v16 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = v34;
    }
    uint64_t v17 = (char *)sub_1885AC0(v9, v16, v8, a3);
    goto LABEL_51;
  }
  if (v8) {
    a3[10].i32[0] = v9 - 1;
  }
  else {
LABEL_61:
  }
    uint64_t v34 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v34;
}

char *sub_1401E6C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1401530(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_1401EFC(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 40);
    unsigned char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    uint64_t v4 = sub_1401768(v7, (unint64_t)v9, a3);
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v10 = *(unsigned char *)(a1 + 48);
    unsigned char *v4 = 16;
    v4[1] = v10;
    v4 += 2;
  }
  uint64_t v11 = *(unsigned int *)(a1 + 24);
  if ((int)v11 >= 1)
  {
    for (uint64_t i = 0; i != v11; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v13 = *(int *)(*(void *)(a1 + 32) + 4 * i);
      unsigned char *v4 = 24;
      v4[1] = v13;
      if (v13 > 0x7F)
      {
        v4[1] = v13 | 0x80;
        unint64_t v14 = v13 >> 7;
        v4[2] = v13 >> 7;
        v4 += 3;
        if (v13 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v15 = v14 >> 14;
            v14 >>= 7;
            *v4++ = v14;
          }
          while (v15);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return v4;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    unint64_t v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    unint64_t v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(v4, v19, (int)v20);
    v4 += v21;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v19, v20, v4);
}

uint64_t sub_14020EC(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 24);
  if (v2)
  {
    int v3 = 0;
    uint64_t v4 = 0;
    do
    {
      int v5 = *(_DWORD *)(*(void *)(a1 + 32) + 4 * v3);
      if (v5 < 0) {
        uint64_t v6 = 10;
      }
      else {
        uint64_t v6 = (9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6;
      }
      v4 += v6;
      ++v3;
    }
    while (v2 != v3);
  }
  else
  {
    uint64_t v4 = 0;
  }
  uint64_t v7 = v4 + v2;
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 3) != 0)
  {
    if (v8)
    {
      unint64_t v9 = sub_140190C(*(void *)(a1 + 40));
      v7 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v8 & 2) != 0) {
      v7 += 2;
    }
  }
  uint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v12 + 31) < 0) {
      uint64_t v13 = *(void *)(v12 + 16);
    }
    else {
      uint64_t v13 = *(unsigned __int8 *)(v12 + 31);
    }
    v7 += v13;
  }
  *(_DWORD *)(a1 + 20) = v7;
  return v7;
}

std::string *sub_14021E8(std::string *result, uint64_t a2)
{
  int v3 = result;
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    int v5 = result + 1;
    uint64_t data_low = SLODWORD(result[1].__r_.__value_.__l.__data_);
    sub_188C80C((unsigned int *)&result[1], data_low + v4);
    std::string::size_type size = v3[1].__r_.__value_.__l.__size_;
    LODWORD(v5->__r_.__value_.__l.__data_) += *(_DWORD *)(a2 + 24);
    uint64_t result = (std::string *)memcpy((void *)(size + 4 * data_low), *(const void **)(a2 + 32), 4 * *(int *)(a2 + 24));
  }
  int v8 = *(_DWORD *)(a2 + 16);
  if ((v8 & 3) != 0)
  {
    if (v8)
    {
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      unint64_t v9 = (std::string *)v3[1].__r_.__value_.__r.__words[2];
      if (!v9)
      {
        std::string::size_type v10 = v3->__r_.__value_.__l.__size_;
        uint64_t v11 = (void *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
        if (v10) {
          uint64_t v11 = (void *)*v11;
        }
        unint64_t v9 = (std::string *)sub_1449A30((uint64_t)v11);
        v3[1].__r_.__value_.__r.__words[2] = (std::string::size_type)v9;
      }
      if (*(void *)(a2 + 40)) {
        unint64_t v12 = *(void *(****)(void *))(a2 + 40);
      }
      else {
        unint64_t v12 = &off_2537560;
      }
      uint64_t result = sub_12D45B4(v9, (uint64_t)v12);
    }
    if ((v8 & 2) != 0) {
      v3[2].__r_.__value_.__s.__data_[0] = *(unsigned char *)(a2 + 48);
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= v8;
  }
  uint64_t v13 = *(void *)(a2 + 8);
  if (v13)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v13 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_14022FC()
{
  return 1;
}

void *sub_1402304@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gemini.StructuredAttributes.ServiceArea.ServiceAreaDescription");
}

uint64_t sub_1402314(uint64_t a1)
{
  int v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_12;
    }
  }
  else if (v4)
  {
    goto LABEL_12;
  }
  if ((uint64_t (***)())a1 != &off_25375C0)
  {
    if (*(void *)(a1 + 144))
    {
      sub_15B2C44();
      operator delete();
    }
    if (*(void *)(a1 + 152))
    {
      sub_15B2C44();
      operator delete();
    }
    uint64_t v5 = *(void *)(a1 + 160);
    if (v5)
    {
      sub_140B6A8(v5);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_12:
  sub_148F87C((void *)(a1 + 120));
  sub_148F7FC((void *)(a1 + 96));
  sub_148F7FC((void *)(a1 + 72));
  sub_124E04C((void *)(a1 + 48));
  sub_1889DE8((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_140243C(uint64_t a1)
{
  sub_1402314(a1);

  operator delete();
}

uint64_t sub_1402474(uint64_t a1)
{
  uint64_t result = sub_188CC00(a1 + 24);
  uint64_t v3 = *(unsigned int *)(a1 + 56);
  if ((int)v3 >= 1)
  {
    int v4 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = sub_1411AA0(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 56) = 0;
  }
  uint64_t v6 = *(unsigned int *)(a1 + 80);
  if ((int)v6 >= 1)
  {
    uint64_t v7 = (uint64_t *)(*(void *)(a1 + 88) + 8);
    do
    {
      uint64_t v8 = *v7++;
      uint64_t result = sub_1401508(v8);
      --v6;
    }
    while (v6);
    *(_DWORD *)(a1 + 80) = 0;
  }
  uint64_t v9 = *(unsigned int *)(a1 + 104);
  if ((int)v9 >= 1)
  {
    std::string::size_type v10 = (uint64_t *)(*(void *)(a1 + 112) + 8);
    do
    {
      uint64_t v11 = *v10++;
      uint64_t result = sub_1401508(v11);
      --v9;
    }
    while (v9);
    *(_DWORD *)(a1 + 104) = 0;
  }
  uint64_t v12 = *(unsigned int *)(a1 + 128);
  if ((int)v12 >= 1)
  {
    uint64_t v13 = (uint64_t *)(*(void *)(a1 + 136) + 8);
    do
    {
      uint64_t v14 = *v13++;
      uint64_t result = sub_1401ACC(v14);
      --v12;
    }
    while (v12);
    *(_DWORD *)(a1 + 128) = 0;
  }
  int v15 = *(_DWORD *)(a1 + 16);
  if ((v15 & 7) != 0)
  {
    if (v15)
    {
      uint64_t result = sub_15B2C80(*(void *)(a1 + 144));
      if ((v15 & 2) == 0)
      {
LABEL_20:
        if ((v15 & 4) == 0) {
          goto LABEL_22;
        }
        goto LABEL_21;
      }
    }
    else if ((v15 & 2) == 0)
    {
      goto LABEL_20;
    }
    uint64_t result = sub_15B2C80(*(void *)(a1 + 152));
    if ((v15 & 4) != 0) {
LABEL_21:
    }
      uint64_t result = sub_14025B0(*(void *)(a1 + 160));
  }
LABEL_22:
  char v17 = *(unsigned char *)(a1 + 8);
  uint64_t v16 = a1 + 8;
  *(_DWORD *)(v16 + 8) = 0;
  if (v17)
  {
    return sub_188B4AC((uint64_t *)v16);
  }
  return result;
}

uint64_t sub_14025B0(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0) {
    goto LABEL_11;
  }
  if ((v1 & 1) == 0)
  {
LABEL_5:
    if ((v1 & 2) != 0) {
      goto LABEL_6;
    }
    goto LABEL_11;
  }
  unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v2 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v2 = 0;
    *(unsigned char *)(v2 + 23) = 0;
    goto LABEL_5;
  }
  **(unsigned char **)unint64_t v2 = 0;
  *(void *)(v2 + 8) = 0;
  if ((v1 & 2) != 0)
  {
LABEL_6:
    unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)unint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
LABEL_11:
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v5) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_140262C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v51 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v51, a3[11].i32[1])) {
    return *(void *)v51;
  }
  uint64_t v6 = (void *)(a1 + 8);
  uint64_t v7 = (uint64_t **)(a1 + 24);
  while (2)
  {
    uint64_t v8 = (unsigned __int8 *)(*(void *)v51 + 1);
    unsigned int v9 = **(unsigned char **)v51;
    if ((char)**(unsigned char **)v51 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        uint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v51, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (unsigned __int8 *)(*(void *)v51 + 2);
      }
    }
    *(void *)uint64_t v51 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_79;
        }
        uint64_t v12 = (const std::string::value_type *)(v8 - 1);
        while (1)
        {
          uint64_t v13 = (char *)(v12 + 1);
          *(void *)uint64_t v51 = v12 + 1;
          uint64_t v14 = *(_DWORD **)(a1 + 40);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 32), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 32) = v15 + 1;
            uint64_t v16 = *(std::string **)&v14[2 * v15 + 2];
          }
          else
          {
            if (!*v7) {
              operator new();
            }
            *unint64_t v18 = v17;
            v18[1] = sub_3A6EDC;
            *char v17 = 0;
            v17[1] = 0;
            v17[2] = 0;
            uint64_t v16 = (std::string *)sub_188CDC8(a1 + 24, (uint64_t)v17);
            uint64_t v13 = *(char **)v51;
          }
          uint64_t v12 = sub_188C244(v16, v13, (uint64_t)a3);
          *(void *)uint64_t v51 = v12;
          if (!v12) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_87;
          }
        }
      case 2u:
        if (v9 != 18) {
          goto LABEL_79;
        }
        unint64_t v19 = (char *)(v8 - 1);
        while (1)
        {
          uint64_t v20 = (unsigned __int8 *)(v19 + 1);
          *(void *)uint64_t v51 = v19 + 1;
          uint64_t v21 = *(_DWORD **)(a1 + 64);
          if (v21 && (uint64_t v22 = *(int *)(a1 + 56), (int)v22 < *v21))
          {
            *(_DWORD *)(a1 + 56) = v22 + 1;
            uint64_t v23 = *(void *)&v21[2 * v22 + 2];
          }
          else
          {
            uint64_t v24 = sub_144A378(*(void *)(a1 + 48));
            uint64_t v23 = sub_188CDC8(a1 + 48, v24);
            uint64_t v20 = *(unsigned __int8 **)v51;
          }
          unint64_t v19 = sub_123B6C4(a3, v23, v20);
          *(void *)uint64_t v51 = v19;
          if (!v19) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v19 || *v19 != 18) {
            goto LABEL_87;
          }
        }
      case 4u:
        if (v9 != 34) {
          goto LABEL_79;
        }
        unint64_t v25 = (char *)(v8 - 1);
        while (1)
        {
          uint64_t v26 = (unsigned __int8 *)(v25 + 1);
          *(void *)uint64_t v51 = v25 + 1;
          uint64_t v27 = *(_DWORD **)(a1 + 88);
          if (v27 && (uint64_t v28 = *(int *)(a1 + 80), (int)v28 < *v27))
          {
            *(_DWORD *)(a1 + 80) = v28 + 1;
            uint64_t v29 = *(void *)&v27[2 * v28 + 2];
          }
          else
          {
            uint64_t v30 = sub_1449A30(*(void *)(a1 + 72));
            uint64_t v29 = sub_188CDC8(a1 + 72, v30);
            uint64_t v26 = *(unsigned __int8 **)v51;
          }
          unint64_t v25 = sub_1401E6C(a3, v29, v26);
          *(void *)uint64_t v51 = v25;
          if (!v25) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v25 || *v25 != 34) {
            goto LABEL_87;
          }
        }
      case 5u:
        if (v9 != 42) {
          goto LABEL_79;
        }
        uint64_t v31 = (char *)(v8 - 1);
        while (1)
        {
          uint64_t v32 = (unsigned __int8 *)(v31 + 1);
          *(void *)uint64_t v51 = v31 + 1;
          uint64_t v33 = *(_DWORD **)(a1 + 112);
          if (v33 && (uint64_t v34 = *(int *)(a1 + 104), (int)v34 < *v33))
          {
            *(_DWORD *)(a1 + 104) = v34 + 1;
            uint64_t v35 = *(void *)&v33[2 * v34 + 2];
          }
          else
          {
            uint64_t v36 = sub_1449A30(*(void *)(a1 + 96));
            uint64_t v35 = sub_188CDC8(a1 + 96, v36);
            uint64_t v32 = *(unsigned __int8 **)v51;
          }
          uint64_t v31 = sub_1401E6C(a3, v35, v32);
          *(void *)uint64_t v51 = v31;
          if (!v31) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v31 || *v31 != 42) {
            goto LABEL_87;
          }
        }
      case 6u:
        if (v9 != 50) {
          goto LABEL_79;
        }
        int v37 = (char *)(v8 - 1);
        while (1)
        {
          int v38 = (unsigned __int8 *)(v37 + 1);
          *(void *)uint64_t v51 = v37 + 1;
          uint64_t v39 = *(_DWORD **)(a1 + 136);
          if (v39 && (uint64_t v40 = *(int *)(a1 + 128), (int)v40 < *v39))
          {
            *(_DWORD *)(a1 + 128) = v40 + 1;
            uint64_t v41 = *(void *)&v39[2 * v40 + 2];
          }
          else
          {
            uint64_t v42 = sub_1449AAC(*(void *)(a1 + 120));
            uint64_t v41 = sub_188CDC8(a1 + 120, v42);
            int v38 = *(unsigned __int8 **)v51;
          }
          int v37 = sub_1402BA8(a3, v41, v38);
          *(void *)uint64_t v51 = v37;
          if (!v37) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v37 || *v37 != 50) {
            goto LABEL_87;
          }
        }
      case 7u:
        if (v9 != 58) {
          goto LABEL_79;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        unint64_t v43 = *(void **)(a1 + 144);
        if (v43) {
          goto LABEL_72;
        }
        uint64_t v44 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          uint64_t v44 = (void *)*v44;
        }
        unint64_t v43 = sub_15C1B30((uint64_t)v44);
        *(void *)(a1 + 144) = v43;
        goto LABEL_71;
      case 8u:
        if (v9 != 66) {
          goto LABEL_79;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        unint64_t v43 = *(void **)(a1 + 152);
        if (v43) {
          goto LABEL_72;
        }
        unsigned int v45 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          unsigned int v45 = (void *)*v45;
        }
        unint64_t v43 = sub_15C1B30((uint64_t)v45);
        *(void *)(a1 + 152) = v43;
LABEL_71:
        uint64_t v8 = *(unsigned __int8 **)v51;
LABEL_72:
        uint64_t v46 = sub_125CF74(a3, (uint64_t)v43, v8);
        goto LABEL_86;
      case 9u:
        if (v9 != 74) {
          goto LABEL_79;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v47 = *(void **)(a1 + 160);
        if (!v47)
        {
          uint64_t v48 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v48 = (void *)*v48;
          }
          uint64_t v47 = sub_1449DA8((uint64_t)v48);
          *(void *)(a1 + 160) = v47;
          uint64_t v8 = *(unsigned __int8 **)v51;
        }
        uint64_t v46 = sub_1402C38(a3, (uint64_t)v47, v8);
        goto LABEL_86;
      default:
LABEL_79:
        if (v9) {
          BOOL v49 = (v9 & 7) == 4;
        }
        else {
          BOOL v49 = 1;
        }
        if (!v49)
        {
          if (*v6)
          {
            unint64_t v50 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            unint64_t v50 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = *(unsigned __int8 **)v51;
          }
          uint64_t v46 = (uint64_t)sub_1885AC0(v9, v50, (char *)v8, a3);
LABEL_86:
          *(void *)uint64_t v51 = v46;
          if (!v46) {
            return 0;
          }
LABEL_87:
          if (sub_11947B8((uint64_t)a3, (char **)v51, a3[11].i32[1])) {
            return *(void *)v51;
          }
          continue;
        }
        if (!v8) {
          return 0;
        }
        a3[10].i32[0] = v9 - 1;
        return *(void *)v51;
    }
  }
}

char *sub_1402BA8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1401B30(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_1402C38(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_140B798(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1402CC8(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v6 = *(unsigned int *)(a1 + 32);
  if ((int)v6 >= 1)
  {
    uint64_t v7 = 0;
    uint64_t v8 = 8 * v6;
    do
    {
      unsigned int v9 = *(void **)(*(void *)(a1 + 40) + v7 + 8);
      if (*((char *)v9 + 23) < 0)
      {
        int64_t v10 = v9[1];
        if (v10 > 127) {
          goto LABEL_12;
        }
      }
      else
      {
        int64_t v10 = *((unsigned __int8 *)v9 + 23);
      }
      if (*(void *)a3 - (void)__dst + 14 >= v10)
      {
        *__dst = 10;
        __dst[1] = v10;
        if (*((char *)v9 + 23) < 0) {
          unsigned int v9 = (void *)*v9;
        }
        unsigned int v11 = __dst + 2;
        memcpy(v11, v9, v10);
        __dst = &v11[v10];
        goto LABEL_10;
      }
LABEL_12:
      __dst = (char *)sub_188A868(a3, 1, (uint64_t)v9, __dst);
LABEL_10:
      v7 += 8;
    }
    while (v8 != v7);
  }
  int v12 = *(_DWORD *)(a1 + 56);
  if (v12)
  {
    for (int i = 0; i != v12; ++i)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v14 = *(void *)(*(void *)(a1 + 64) + 8 * i + 8);
      *__dst = 18;
      unsigned int v15 = *(_DWORD *)(v14 + 20);
      __dst[1] = v15;
      if (v15 > 0x7F) {
        uint64_t v16 = sub_188A9CC(v15, __dst + 1);
      }
      else {
        uint64_t v16 = __dst + 2;
      }
      __dst = sub_1411F40(v14, (unint64_t)v16, a3);
    }
  }
  int v17 = *(_DWORD *)(a1 + 80);
  if (v17)
  {
    for (int j = 0; j != v17; ++j)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v19 = *(void *)(*(void *)(a1 + 88) + 8 * j + 8);
      *__dst = 34;
      unsigned int v20 = *(_DWORD *)(v19 + 20);
      __dst[1] = v20;
      if (v20 > 0x7F) {
        uint64_t v21 = sub_188A9CC(v20, __dst + 1);
      }
      else {
        uint64_t v21 = __dst + 2;
      }
      __dst = sub_1401768(v19, (unint64_t)v21, a3);
    }
  }
  int v22 = *(_DWORD *)(a1 + 104);
  if (v22)
  {
    for (int k = 0; k != v22; ++k)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v24 = *(void *)(*(void *)(a1 + 112) + 8 * k + 8);
      *__dst = 42;
      unsigned int v25 = *(_DWORD *)(v24 + 20);
      __dst[1] = v25;
      if (v25 > 0x7F) {
        uint64_t v26 = sub_188A9CC(v25, __dst + 1);
      }
      else {
        uint64_t v26 = __dst + 2;
      }
      __dst = sub_1401768(v24, (unint64_t)v26, a3);
    }
  }
  int v27 = *(_DWORD *)(a1 + 128);
  if (v27)
  {
    for (int m = 0; m != v27; ++m)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v29 = *(void *)(*(void *)(a1 + 136) + 8 * m + 8);
      *__dst = 50;
      unsigned int v30 = *(_DWORD *)(v29 + 20);
      __dst[1] = v30;
      if (v30 > 0x7F) {
        uint64_t v31 = sub_188A9CC(v30, __dst + 1);
      }
      else {
        uint64_t v31 = __dst + 2;
      }
      __dst = sub_1401EFC(v29, (unint64_t)v31, a3);
    }
  }
  int v32 = *(_DWORD *)(a1 + 16);
  if (v32)
  {
    if (*(void *)a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    uint64_t v33 = *(void *)(a1 + 144);
    *__dst = 58;
    unsigned int v34 = *(_DWORD *)(v33 + 20);
    __dst[1] = v34;
    if (v34 > 0x7F) {
      uint64_t v35 = sub_188A9CC(v34, __dst + 1);
    }
    else {
      uint64_t v35 = __dst + 2;
    }
    __dst = sub_15B2EA4(v33, v35, a3);
    if ((v32 & 2) == 0)
    {
LABEL_47:
      if ((v32 & 4) == 0) {
        goto LABEL_67;
      }
      goto LABEL_61;
    }
  }
  else if ((v32 & 2) == 0)
  {
    goto LABEL_47;
  }
  if (*(void *)a3 <= (unint64_t)__dst) {
    __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
  }
  uint64_t v36 = *(void *)(a1 + 152);
  *__dst = 66;
  unsigned int v37 = *(_DWORD *)(v36 + 20);
  __dst[1] = v37;
  if (v37 > 0x7F) {
    int v38 = sub_188A9CC(v37, __dst + 1);
  }
  else {
    int v38 = __dst + 2;
  }
  __dst = sub_15B2EA4(v36, v38, a3);
  if ((v32 & 4) != 0)
  {
LABEL_61:
    if (*(void *)a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    uint64_t v39 = *(void *)(a1 + 160);
    *__dst = 74;
    unsigned int v40 = *(_DWORD *)(v39 + 20);
    __dst[1] = v40;
    if (v40 > 0x7F) {
      uint64_t v41 = sub_188A9CC(v40, __dst + 1);
    }
    else {
      uint64_t v41 = __dst + 2;
    }
    __dst = sub_140B940(v39, v41, a3);
  }
LABEL_67:
  uint64_t v42 = *(void *)(a1 + 8);
  if ((v42 & 1) == 0) {
    return __dst;
  }
  unint64_t v44 = v42 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v44 + 31) < 0)
  {
    unsigned int v45 = *(void **)(v44 + 8);
    uint64_t v46 = *(void *)(v44 + 16);
  }
  else
  {
    unsigned int v45 = (void *)(v44 + 8);
    LODWORD(v46) = *(unsigned __int8 *)(v44 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v46)
  {
    uint64_t v47 = (int)v46;
    memcpy(__dst, v45, (int)v46);
    __dst += v47;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v45, v46, __dst);
}

uint64_t sub_140317C(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  if ((int)v2 < 1)
  {
    uint64_t v4 = *(unsigned int *)(a1 + 32);
  }
  else
  {
    unint64_t v3 = (uint64_t *)(*(void *)(a1 + 40) + 8);
    uint64_t v4 = *(unsigned int *)(a1 + 32);
    do
    {
      uint64_t v5 = *v3++;
      uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
      uint64_t v7 = *(void *)(v5 + 8);
      if ((v6 & 0x80u) == 0) {
        uint64_t v7 = v6;
      }
      v4 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      --v2;
    }
    while (v2);
  }
  uint64_t v8 = *(int *)(a1 + 56);
  uint64_t v9 = v4 + v8;
  uint64_t v10 = *(void *)(a1 + 64);
  if (v10) {
    unsigned int v11 = (uint64_t *)(v10 + 8);
  }
  else {
    unsigned int v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_14121EC(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  uint64_t v15 = *(int *)(a1 + 80);
  uint64_t v16 = v9 + v15;
  uint64_t v17 = *(void *)(a1 + 88);
  if (v17) {
    unint64_t v18 = (uint64_t *)(v17 + 8);
  }
  else {
    unint64_t v18 = 0;
  }
  if (v15)
  {
    uint64_t v19 = 8 * v15;
    do
    {
      uint64_t v20 = *v18++;
      unint64_t v21 = sub_140190C(v20);
      v16 += v21 + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6);
      v19 -= 8;
    }
    while (v19);
  }
  uint64_t v22 = *(int *)(a1 + 104);
  uint64_t v23 = v16 + v22;
  uint64_t v24 = *(void *)(a1 + 112);
  if (v24) {
    unsigned int v25 = (uint64_t *)(v24 + 8);
  }
  else {
    unsigned int v25 = 0;
  }
  if (v22)
  {
    uint64_t v26 = 8 * v22;
    do
    {
      uint64_t v27 = *v25++;
      unint64_t v28 = sub_140190C(v27);
      v23 += v28 + ((9 * (__clz(v28 | 1) ^ 0x1F) + 73) >> 6);
      v26 -= 8;
    }
    while (v26);
  }
  uint64_t v29 = *(int *)(a1 + 128);
  uint64_t v30 = v23 + v29;
  uint64_t v31 = *(void *)(a1 + 136);
  if (v31) {
    int v32 = (uint64_t *)(v31 + 8);
  }
  else {
    int v32 = 0;
  }
  if (v29)
  {
    uint64_t v33 = 8 * v29;
    do
    {
      uint64_t v34 = *v32++;
      uint64_t v35 = sub_14020EC(v34);
      v30 += v35 + ((9 * (__clz(v35 | 1) ^ 0x1F) + 73) >> 6);
      v33 -= 8;
    }
    while (v33);
  }
  int v36 = *(_DWORD *)(a1 + 16);
  if ((v36 & 7) != 0)
  {
    if (v36)
    {
      uint64_t v40 = sub_15B2F90(*(void *)(a1 + 144));
      v30 += v40 + ((9 * (__clz(v40 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v36 & 2) == 0)
      {
LABEL_35:
        if ((v36 & 4) == 0) {
          goto LABEL_37;
        }
        goto LABEL_36;
      }
    }
    else if ((v36 & 2) == 0)
    {
      goto LABEL_35;
    }
    uint64_t v41 = sub_15B2F90(*(void *)(a1 + 152));
    v30 += v41 + ((9 * (__clz(v41 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v36 & 4) != 0)
    {
LABEL_36:
      uint64_t v37 = sub_140BA2C(*(void *)(a1 + 160));
      v30 += v37 + ((9 * (__clz(v37 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
LABEL_37:
  uint64_t v38 = *(void *)(a1 + 8);
  if (v38)
  {
    unint64_t v42 = v38 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v42 + 31) < 0) {
      uint64_t v43 = *(void *)(v42 + 16);
    }
    else {
      uint64_t v43 = *(unsigned __int8 *)(v42 + 31);
    }
    v30 += v43;
  }
  *(_DWORD *)(a1 + 20) = v30;
  return v30;
}

std::string *sub_1403420(std::string *result, uint64_t a2)
{
  unint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (const std::string **)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = (std::string *)sub_188FB98((uint64_t)&v3[1], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2]- LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    uint64_t v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    unsigned int v11 = (std::string **)sub_188CCE4((uint64_t)&v3[2], *(_DWORD *)(a2 + 56));
    uint64_t result = (std::string *)sub_124EC14((uint64_t *)&v3[2], v11, v10, v9, *(_DWORD *)v3[2].__r_.__value_.__r.__words[2]- LODWORD(v3[2].__r_.__value_.__r.__words[1]));
    int v12 = LODWORD(v3[2].__r_.__value_.__r.__words[1]) + v9;
    LODWORD(v3[2].__r_.__value_.__r.__words[1]) = v12;
    uint64_t v13 = (int *)v3[2].__r_.__value_.__r.__words[2];
    if (*v13 < v12) {
      int *v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 80);
  if (v14)
  {
    uint64_t v15 = (uint64_t *)(*(void *)(a2 + 88) + 8);
    uint64_t v16 = (std::string **)sub_188CCE4((uint64_t)&v3[3], *(_DWORD *)(a2 + 80));
    uint64_t result = (std::string *)sub_149138C((uint64_t *)&v3[3], v16, v15, v14, *(_DWORD *)v3[3].__r_.__value_.__r.__words[2]- LODWORD(v3[3].__r_.__value_.__r.__words[1]));
    int v17 = LODWORD(v3[3].__r_.__value_.__r.__words[1]) + v14;
    LODWORD(v3[3].__r_.__value_.__r.__words[1]) = v17;
    unint64_t v18 = (int *)v3[3].__r_.__value_.__r.__words[2];
    if (*v18 < v17) {
      *unint64_t v18 = v17;
    }
  }
  int v19 = *(_DWORD *)(a2 + 104);
  if (v19)
  {
    uint64_t v20 = (uint64_t *)(*(void *)(a2 + 112) + 8);
    unint64_t v21 = (std::string **)sub_188CCE4((uint64_t)&v3[4], *(_DWORD *)(a2 + 104));
    uint64_t result = (std::string *)sub_149138C((uint64_t *)&v3[4], v21, v20, v19, *(_DWORD *)v3[4].__r_.__value_.__r.__words[2]- LODWORD(v3[4].__r_.__value_.__r.__words[1]));
    int v22 = LODWORD(v3[4].__r_.__value_.__r.__words[1]) + v19;
    LODWORD(v3[4].__r_.__value_.__r.__words[1]) = v22;
    uint64_t v23 = (int *)v3[4].__r_.__value_.__r.__words[2];
    if (*v23 < v22) {
      *uint64_t v23 = v22;
    }
  }
  int v24 = *(_DWORD *)(a2 + 128);
  if (v24)
  {
    unsigned int v25 = (uint64_t *)(*(void *)(a2 + 136) + 8);
    uint64_t v26 = (std::string **)sub_188CCE4((uint64_t)&v3[5], *(_DWORD *)(a2 + 128));
    uint64_t result = (std::string *)sub_1491408((uint64_t *)&v3[5], v26, v25, v24, *(_DWORD *)v3[5].__r_.__value_.__r.__words[2]- LODWORD(v3[5].__r_.__value_.__r.__words[1]));
    int v27 = LODWORD(v3[5].__r_.__value_.__r.__words[1]) + v24;
    LODWORD(v3[5].__r_.__value_.__r.__words[1]) = v27;
    unint64_t v28 = (int *)v3[5].__r_.__value_.__r.__words[2];
    if (*v28 < v27) {
      int *v28 = v27;
    }
  }
  int v29 = *(_DWORD *)(a2 + 16);
  if ((v29 & 7) != 0)
  {
    if (v29)
    {
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::pointer data = (std::string *)v3[6].__r_.__value_.__l.__data_;
      if (!data)
      {
        std::string::size_type size = v3->__r_.__value_.__l.__size_;
        int v32 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
        if (size) {
          int v32 = (void *)*v32;
        }
        std::string::pointer data = (std::string *)sub_15C1B30((uint64_t)v32);
        v3[6].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      }
      if (*(void *)(a2 + 144)) {
        uint64_t v33 = *(uint64_t (****)())(a2 + 144);
      }
      else {
        uint64_t v33 = &off_253F2A0;
      }
      uint64_t result = sub_11EC100(data, (uint64_t)v33);
      if ((v29 & 2) == 0)
      {
LABEL_19:
        if ((v29 & 4) == 0) {
          goto LABEL_45;
        }
        goto LABEL_37;
      }
    }
    else if ((v29 & 2) == 0)
    {
      goto LABEL_19;
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    uint64_t v34 = (std::string *)v3[6].__r_.__value_.__l.__size_;
    if (!v34)
    {
      std::string::size_type v35 = v3->__r_.__value_.__l.__size_;
      int v36 = (void *)(v35 & 0xFFFFFFFFFFFFFFFCLL);
      if (v35) {
        int v36 = (void *)*v36;
      }
      uint64_t v34 = (std::string *)sub_15C1B30((uint64_t)v36);
      v3[6].__r_.__value_.__l.__size_ = (std::string::size_type)v34;
    }
    if (*(void *)(a2 + 152)) {
      uint64_t v37 = *(uint64_t (****)())(a2 + 152);
    }
    else {
      uint64_t v37 = &off_253F2A0;
    }
    uint64_t result = sub_11EC100(v34, (uint64_t)v37);
    if ((v29 & 4) != 0)
    {
LABEL_37:
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
      uint64_t v38 = (std::string *)v3[6].__r_.__value_.__r.__words[2];
      if (!v38)
      {
        std::string::size_type v39 = v3->__r_.__value_.__l.__size_;
        uint64_t v40 = (void *)(v39 & 0xFFFFFFFFFFFFFFFCLL);
        if (v39) {
          uint64_t v40 = (void *)*v40;
        }
        uint64_t v38 = (std::string *)sub_1449DA8((uint64_t)v40);
        v3[6].__r_.__value_.__r.__words[2] = (std::string::size_type)v38;
      }
      if (*(void *)(a2 + 160)) {
        uint64_t v41 = *(uint64_t (****)(uint64_t))(a2 + 160);
      }
      else {
        uint64_t v41 = &off_2537908;
      }
      uint64_t result = sub_11EC100(v38, (uint64_t)v41);
    }
  }
LABEL_45:
  uint64_t v42 = *(void *)(a2 + 8);
  if (v42)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v42 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1403774()
{
  return 1;
}

void *sub_140377C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gemini.StructuredAttributes.ServiceArea");
}

uint64_t sub_140378C(uint64_t a1)
{
  unint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_140382C(uint64_t a1)
{
  sub_140378C(a1);

  operator delete();
}

uint64_t sub_1403864(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if (v1)
  {
    unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)unint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
    }
  }
  if ((v1 & 0x3E) != 0)
  {
    *(void *)(a1 + 32) = 0;
    *(void *)(a1 + 40) = 0;
    *(_WORD *)(a1 + 48) = 0;
  }
  char v4 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v4) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_14038B8(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unint64_t v44 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v44, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (char *)(*(void *)v44 + 1);
    unsigned int v9 = **(unsigned char **)v44;
    if ((char)**(unsigned char **)v44 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180(*(uint64_t *)v44, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (char *)(*(void *)v44 + 2);
      }
    }
    *(void *)unint64_t v44 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_42;
        }
        int v12 = v8 + 1;
        unint64_t v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        int v15 = v13 + (v14 << 7);
        unint64_t v13 = (v15 - 128);
        if (v14 < 0)
        {
          *(void *)unint64_t v44 = sub_188C138((uint64_t)v8, (v15 - 128));
          if (!*(void *)v44) {
            goto LABEL_74;
          }
          unint64_t v13 = v34;
        }
        else
        {
          int v12 = v8 + 2;
LABEL_13:
          *(void *)unint64_t v44 = v12;
        }
        if (v13 <= 3)
        {
          *(_DWORD *)(a1 + 16) |= 4u;
          *(_DWORD *)(a1 + 40) = v13;
          goto LABEL_50;
        }
        if (*v7) {
          uint64_t v42 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          uint64_t v42 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v43 = 1;
        goto LABEL_68;
      case 2u:
        if (v9 != 16) {
          goto LABEL_42;
        }
        v5 |= 2u;
        uint64_t v16 = v8 + 1;
        uint64_t v17 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_20;
        }
        int v18 = *v16;
        uint64_t v17 = v17 + (v18 << 7) - 128;
        if (v18 < 0)
        {
          uint64_t v35 = sub_188C138((uint64_t)v8, v17);
          *(void *)unint64_t v44 = v35;
          *(void *)(a1 + 32) = v36;
          if (!v35) {
            goto LABEL_74;
          }
        }
        else
        {
          uint64_t v16 = v8 + 2;
LABEL_20:
          *(void *)unint64_t v44 = v16;
          *(void *)(a1 + 32) = v17;
        }
        goto LABEL_50;
      case 3u:
        if (v9 != 24) {
          goto LABEL_42;
        }
        int v19 = v8 + 1;
        unint64_t v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_25;
        }
        int v20 = *v19;
        int v21 = v13 + (v20 << 7);
        unint64_t v13 = (v21 - 128);
        if (v20 < 0)
        {
          *(void *)unint64_t v44 = sub_188C138((uint64_t)v8, (v21 - 128));
          if (!*(void *)v44) {
            goto LABEL_74;
          }
          unint64_t v13 = v37;
        }
        else
        {
          int v19 = v8 + 2;
LABEL_25:
          *(void *)unint64_t v44 = v19;
        }
        if (v13 > 1)
        {
          if (*v7) {
            uint64_t v42 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v42 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          int v43 = 3;
LABEL_68:
          sub_188C020(v43, v13, v42);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 8u;
          *(_DWORD *)(a1 + 44) = v13;
        }
        goto LABEL_50;
      case 4u:
        if (v9 != 32) {
          goto LABEL_42;
        }
        v5 |= 0x10u;
        int v22 = v8 + 1;
        uint64_t v23 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_32;
        }
        int v24 = *v22;
        uint64_t v23 = v23 + (v24 << 7) - 128;
        if (v24 < 0)
        {
          uint64_t v38 = sub_188C138((uint64_t)v8, v23);
          *(void *)unint64_t v44 = v38;
          *(unsigned char *)(a1 + 48) = v39 != 0;
          if (!v38) {
            goto LABEL_74;
          }
        }
        else
        {
          int v22 = v8 + 2;
LABEL_32:
          *(void *)unint64_t v44 = v22;
          *(unsigned char *)(a1 + 48) = v23 != 0;
        }
        goto LABEL_50;
      case 5u:
        if (v9 != 40) {
          goto LABEL_42;
        }
        v5 |= 0x20u;
        unsigned int v25 = v8 + 1;
        uint64_t v26 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_37;
        }
        int v27 = *v25;
        uint64_t v26 = v26 + (v27 << 7) - 128;
        if (v27 < 0)
        {
          uint64_t v40 = sub_188C138((uint64_t)v8, v26);
          *(void *)unint64_t v44 = v40;
          *(unsigned char *)(a1 + 49) = v41 != 0;
          if (!v40) {
            goto LABEL_74;
          }
        }
        else
        {
          unsigned int v25 = v8 + 2;
LABEL_37:
          *(void *)unint64_t v44 = v25;
          *(unsigned char *)(a1 + 49) = v26 != 0;
        }
        goto LABEL_50;
      case 6u:
        if (v9 != 50) {
          goto LABEL_42;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v28 = *(void *)(a1 + 8);
        int v29 = (uint64_t *)(v28 & 0xFFFFFFFFFFFFFFFCLL);
        if (v28) {
          int v29 = (uint64_t *)*v29;
        }
        uint64_t v30 = (std::string *)sub_1880F84((void *)(a1 + 24), v29);
        uint64_t v31 = (void *)sub_188C244(v30, *(char **)v44, (uint64_t)a3);
        goto LABEL_49;
      default:
LABEL_42:
        if (v9) {
          BOOL v32 = (v9 & 7) == 4;
        }
        else {
          BOOL v32 = 1;
        }
        if (!v32)
        {
          if (*v7)
          {
            uint64_t v33 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v33 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = *(char **)v44;
          }
          uint64_t v31 = sub_1885AC0(v9, v33, v8, a3);
LABEL_49:
          *(void *)unint64_t v44 = v31;
          if (!v31) {
            goto LABEL_74;
          }
LABEL_50:
          if (sub_11947B8((uint64_t)a3, (char **)v44, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_74:
        }
          *(void *)unint64_t v44 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v44;
    }
  }
}

unsigned char *sub_1403CDC(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 4) != 0)
  {
    if (*a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 40);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(void *)(a1 + 32);
    unsigned char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v13 = *(int *)(a1 + 44);
    unsigned char *v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unint64_t v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v18 = *(unsigned char *)(a1 + 48);
    unsigned char *v4 = 32;
    v4[1] = v18;
    v4 += 2;
    if ((v6 & 0x20) == 0)
    {
LABEL_24:
      if ((v6 & 1) == 0) {
        goto LABEL_26;
      }
      goto LABEL_25;
    }
  }
  else if ((v6 & 0x20) == 0)
  {
    goto LABEL_24;
  }
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v19 = *(unsigned char *)(a1 + 49);
  unsigned char *v4 = 40;
  v4[1] = v19;
  v4 += 2;
  if (v6) {
LABEL_25:
  }
    char v4 = sub_117A0AC(a3, 6, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
LABEL_26:
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return v4;
  }
  unint64_t v20 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v20 + 31) < 0)
  {
    int v21 = *(void **)(v20 + 8);
    uint64_t v22 = *(void *)(v20 + 16);
  }
  else
  {
    int v21 = (void *)(v20 + 8);
    LODWORD(v22) = *(unsigned __int8 *)(v20 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v22)
  {
    uint64_t v23 = (int)v22;
    memcpy(v4, v21, (int)v22);
    v4 += v23;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v21, v22, v4);
}

uint64_t sub_1403F98(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 0x3F) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_26;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_10;
    }
LABEL_9:
    v2 += ((9 * (__clz(*(void *)(a1 + 32) | 1) ^ 0x3F) + 73) >> 6) + 1;
    goto LABEL_10;
  }
  unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
  uint64_t v6 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    uint64_t v6 = v5;
  }
  uint64_t v2 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0) {
    goto LABEL_9;
  }
LABEL_10:
  if ((v1 & 4) != 0)
  {
    int v7 = *(_DWORD *)(a1 + 40);
    if (v7 < 0) {
      uint64_t v8 = 11;
    }
    else {
      uint64_t v8 = ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v8;
    if ((v1 & 8) == 0) {
      goto LABEL_21;
    }
    goto LABEL_17;
  }
  if ((v1 & 8) != 0)
  {
LABEL_17:
    int v9 = *(_DWORD *)(a1 + 44);
    if (v9 < 0) {
      uint64_t v10 = 11;
    }
    else {
      uint64_t v10 = ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v10;
  }
LABEL_21:
  if ((v1 & 0x10) != 0) {
    v2 += 2;
  }
  if ((v1 & 0x20) != 0) {
    uint64_t v3 = v2 + 2;
  }
  else {
    uint64_t v3 = v2;
  }
LABEL_26:
  uint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v13 + 31) < 0) {
      uint64_t v14 = *(void *)(v13 + 16);
    }
    else {
      uint64_t v14 = *(unsigned __int8 *)(v13 + 31);
    }
    v3 += v14;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_14040DC(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0x3F) != 0)
  {
    if (v4)
    {
      uint64_t v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      int v7 = (std::string **)&result[1];
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      int v9 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        int v9 = (uint64_t *)*v9;
      }
      uint64_t result = sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_18;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    v3[1].__r_.__value_.__l.__size_ = *(void *)(a2 + 32);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_19;
    }
LABEL_18:
    LODWORD(v3[1].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 40);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0) {
        goto LABEL_7;
      }
      goto LABEL_20;
    }
LABEL_19:
    HIDWORD(v3[1].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 44);
    if ((v4 & 0x10) == 0)
    {
LABEL_7:
      if ((v4 & 0x20) == 0)
      {
LABEL_9:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
        goto LABEL_10;
      }
LABEL_8:
      v3[2].__r_.__value_.__s.__data_[1] = *(unsigned char *)(a2 + 49);
      goto LABEL_9;
    }
LABEL_20:
    v3[2].__r_.__value_.__s.__data_[0] = *(unsigned char *)(a2 + 48);
    if ((v4 & 0x20) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
LABEL_10:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_14041DC()
{
  return 1;
}

void *sub_14041E4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gemini.StructuredAttributes.BusinessLicense.Validation");
}

uint64_t sub_14041F4(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_13;
    }
  }
  else if (v4)
  {
    goto LABEL_13;
  }
  uint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 56) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 56));
  }
  if (*(uint64_t **)(a1 + 64) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 64));
  }
  if (*(uint64_t **)(a1 + 72) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 72));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_13:
  sub_148F8FC((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_14042E0(uint64_t a1)
{
  sub_14041F4(a1);

  operator delete();
}

uint64_t sub_1404318(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_1403864(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  int v5 = *(_DWORD *)(v1 + 16);
  if ((v5 & 0xF) != 0)
  {
    if ((v5 & 1) == 0)
    {
      if ((v5 & 2) == 0) {
        goto LABEL_8;
      }
LABEL_15:
      unint64_t v7 = *(void *)(v1 + 56) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v7 + 23) < 0)
      {
        **(unsigned char **)unint64_t v7 = 0;
        *(void *)(v7 + 8) = 0;
        if ((v5 & 4) != 0) {
          goto LABEL_19;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v7 = 0;
        *(unsigned char *)(v7 + 23) = 0;
        if ((v5 & 4) != 0) {
          goto LABEL_19;
        }
      }
LABEL_9:
      if ((v5 & 8) == 0) {
        goto LABEL_26;
      }
LABEL_23:
      unint64_t v9 = *(void *)(v1 + 72) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v9 + 23) < 0)
      {
        **(unsigned char **)unint64_t v9 = 0;
        *(void *)(v9 + 8) = 0;
      }
      else
      {
        *(unsigned char *)unint64_t v9 = 0;
        *(unsigned char *)(v9 + 23) = 0;
      }
      goto LABEL_26;
    }
    unint64_t v6 = *(void *)(v1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v6 + 23) < 0)
    {
      **(unsigned char **)unint64_t v6 = 0;
      *(void *)(v6 + 8) = 0;
      if ((v5 & 2) != 0) {
        goto LABEL_15;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v6 = 0;
      *(unsigned char *)(v6 + 23) = 0;
      if ((v5 & 2) != 0) {
        goto LABEL_15;
      }
    }
LABEL_8:
    if ((v5 & 4) == 0) {
      goto LABEL_9;
    }
LABEL_19:
    unint64_t v8 = *(void *)(v1 + 64) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v8 + 23) < 0)
    {
      **(unsigned char **)unint64_t v8 = 0;
      *(void *)(v8 + 8) = 0;
      if ((v5 & 8) == 0) {
        goto LABEL_26;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v8 = 0;
      *(unsigned char *)(v8 + 23) = 0;
      if ((v5 & 8) == 0) {
        goto LABEL_26;
      }
    }
    goto LABEL_23;
  }
LABEL_26:
  char v11 = *(unsigned char *)(v1 + 8);
  uint64_t v10 = v1 + 8;
  *(void *)(v10 + 72) = 0;
  *(_DWORD *)(v10 + 8) = 0;
  if (v11)
  {
    return sub_188B4AC((uint64_t *)v10);
  }
  return result;
}

uint64_t sub_1404474(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v33 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v33, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    unint64_t v8 = (char *)(*(void *)v33 + 1);
    unsigned int v9 = **(unsigned char **)v33;
    if ((char)**(unsigned char **)v33 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unint64_t v8 = (char *)sub_188C180(*(uint64_t *)v33, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unint64_t v8 = (char *)(*(void *)v33 + 2);
      }
    }
    *(void *)uint64_t v33 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_44;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 8);
        unint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          unint64_t v13 = (uint64_t *)*v13;
        }
        uint64_t v14 = (void *)(a1 + 48);
        goto LABEL_25;
      case 2u:
        if (v9 != 18) {
          goto LABEL_44;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v15 = *(void *)(a1 + 8);
        unint64_t v13 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          unint64_t v13 = (uint64_t *)*v13;
        }
        uint64_t v14 = (void *)(a1 + 56);
        goto LABEL_25;
      case 3u:
        if (v9 != 26) {
          goto LABEL_44;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v16 = *(void *)(a1 + 8);
        unint64_t v13 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
        if (v16) {
          unint64_t v13 = (uint64_t *)*v13;
        }
        uint64_t v14 = (void *)(a1 + 64);
        goto LABEL_25;
      case 4u:
        if (v9 != 34) {
          goto LABEL_44;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v17 = *(void *)(a1 + 8);
        unint64_t v13 = (uint64_t *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
        if (v17) {
          unint64_t v13 = (uint64_t *)*v13;
        }
        uint64_t v14 = (void *)(a1 + 72);
LABEL_25:
        char v18 = (std::string *)sub_1880F84(v14, v13);
        char v19 = (void *)sub_188C244(v18, *(char **)v33, (uint64_t)a3);
        goto LABEL_26;
      case 5u:
        if (v9 != 40) {
          goto LABEL_44;
        }
        v5 |= 0x10u;
        unint64_t v20 = v8 + 1;
        uint64_t v21 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_33;
        }
        int v22 = *v20;
        uint64_t v21 = v21 + (v22 << 7) - 128;
        if (v22 < 0)
        {
          uint64_t v31 = sub_188C138((uint64_t)v8, v21);
          *(void *)uint64_t v33 = v31;
          *(void *)(a1 + 80) = v32;
          if (!v31) {
            goto LABEL_56;
          }
        }
        else
        {
          unint64_t v20 = v8 + 2;
LABEL_33:
          *(void *)uint64_t v33 = v20;
          *(void *)(a1 + 80) = v21;
        }
        goto LABEL_27;
      case 6u:
        if (v9 != 50) {
          goto LABEL_44;
        }
        uint64_t v23 = v8 - 1;
        while (1)
        {
          int v24 = (unsigned __int8 *)(v23 + 1);
          *(void *)uint64_t v33 = v23 + 1;
          unsigned int v25 = *(_DWORD **)(a1 + 40);
          if (v25 && (uint64_t v26 = *(int *)(a1 + 32), (int)v26 < *v25))
          {
            *(_DWORD *)(a1 + 32) = v26 + 1;
            uint64_t v27 = *(void *)&v25[2 * v26 + 2];
          }
          else
          {
            uint64_t v28 = sub_1449C14(*(void *)(a1 + 24));
            uint64_t v27 = sub_188CDC8(a1 + 24, v28);
            int v24 = *(unsigned __int8 **)v33;
          }
          uint64_t v23 = (char *)sub_14047D0(a3, v27, v24);
          *(void *)uint64_t v33 = v23;
          if (!v23) {
            goto LABEL_56;
          }
          if (*(void *)a3 <= (unint64_t)v23 || *v23 != 50) {
            goto LABEL_27;
          }
        }
      default:
LABEL_44:
        if (v9) {
          BOOL v29 = (v9 & 7) == 4;
        }
        else {
          BOOL v29 = 1;
        }
        if (!v29)
        {
          if (*v7)
          {
            uint64_t v30 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v30 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unint64_t v8 = *(char **)v33;
          }
          char v19 = sub_1885AC0(v9, v30, v8, a3);
LABEL_26:
          *(void *)uint64_t v33 = v19;
          if (!v19) {
            goto LABEL_56;
          }
LABEL_27:
          if (sub_11947B8((uint64_t)a3, (char **)v33, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_56:
        }
          *(void *)uint64_t v33 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v33;
    }
  }
}

uint64_t sub_14047D0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_14038B8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_1404860(uint64_t a1, unsigned char *__dst, unint64_t *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_10;
  }
LABEL_9:
  uint64_t v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_17;
    }
    goto LABEL_11;
  }
LABEL_10:
  uint64_t v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x10) == 0) {
    goto LABEL_17;
  }
LABEL_11:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  unint64_t v7 = *(void *)(a1 + 80);
  unsigned char *v4 = 40;
  v4[1] = v7;
  if (v7 > 0x7F)
  {
    v4[1] = v7 | 0x80;
    unint64_t v8 = v7 >> 7;
    v4[2] = v7 >> 7;
    v4 += 3;
    if (v7 >= 0x4000)
    {
      do
      {
        *(v4 - 1) |= 0x80u;
        unint64_t v9 = v8 >> 14;
        v8 >>= 7;
        *v4++ = v8;
      }
      while (v9);
    }
  }
  else
  {
    v4 += 2;
  }
LABEL_17:
  int v10 = *(_DWORD *)(a1 + 32);
  if (v10)
  {
    for (int i = 0; i != v10; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v12 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      unsigned char *v4 = 50;
      unsigned int v13 = *(_DWORD *)(v12 + 20);
      v4[1] = v13;
      if (v13 > 0x7F) {
        uint64_t v14 = sub_188A9CC(v13, v4 + 1);
      }
      else {
        uint64_t v14 = v4 + 2;
      }
      uint64_t v4 = sub_1403CDC(v12, (unint64_t)v14, a3);
    }
  }
  uint64_t v15 = *(void *)(a1 + 8);
  if ((v15 & 1) == 0) {
    return v4;
  }
  unint64_t v17 = v15 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v17 + 31) < 0)
  {
    char v18 = *(void **)(v17 + 8);
    uint64_t v19 = *(void *)(v17 + 16);
  }
  else
  {
    char v18 = (void *)(v17 + 8);
    LODWORD(v19) = *(unsigned __int8 *)(v17 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v19)
  {
    uint64_t v20 = (int)v19;
    memcpy(v4, v18, (int)v19);
    v4 += v20;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v18, v19, v4);
}

uint64_t sub_1404AB8(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_1403F98(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 0x1F) == 0) {
    goto LABEL_16;
  }
  if (v8)
  {
    unint64_t v11 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v12 = *(unsigned __int8 *)(v11 + 23);
    uint64_t v13 = *(void *)(v11 + 8);
    if ((v12 & 0x80u) == 0) {
      uint64_t v13 = v12;
    }
    v2 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v8 & 2) == 0)
    {
LABEL_12:
      if ((v8 & 4) == 0) {
        goto LABEL_13;
      }
LABEL_24:
      unint64_t v17 = *(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v18 = *(unsigned __int8 *)(v17 + 23);
      uint64_t v19 = *(void *)(v17 + 8);
      if ((v18 & 0x80u) == 0) {
        uint64_t v19 = v18;
      }
      v2 += v19 + ((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v8 & 8) == 0)
      {
LABEL_14:
        if ((v8 & 0x10) == 0) {
          goto LABEL_16;
        }
        goto LABEL_15;
      }
      goto LABEL_27;
    }
  }
  else if ((v8 & 2) == 0)
  {
    goto LABEL_12;
  }
  unint64_t v14 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v15 = *(unsigned __int8 *)(v14 + 23);
  uint64_t v16 = *(void *)(v14 + 8);
  if ((v15 & 0x80u) == 0) {
    uint64_t v16 = v15;
  }
  v2 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 4) != 0) {
    goto LABEL_24;
  }
LABEL_13:
  if ((v8 & 8) == 0) {
    goto LABEL_14;
  }
LABEL_27:
  unint64_t v20 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v21 = *(unsigned __int8 *)(v20 + 23);
  uint64_t v22 = *(void *)(v20 + 8);
  if ((v21 & 0x80u) == 0) {
    uint64_t v22 = v21;
  }
  v2 += v22 + ((9 * (__clz(v22 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 0x10) != 0) {
LABEL_15:
  }
    v2 += ((9 * (__clz(*(void *)(a1 + 80) | 1) ^ 0x3F) + 73) >> 6) + 1;
LABEL_16:
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v23 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v23 + 31) < 0) {
      uint64_t v24 = *(void *)(v23 + 16);
    }
    else {
      uint64_t v24 = *(unsigned __int8 *)(v23 + 31);
    }
    v2 += v24;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_1404CBC(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = (std::string *)sub_1491494((uint64_t *)&v3[1], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2]- LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    int v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *int v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 0x1F) != 0)
  {
    if (v9)
    {
      unint64_t v11 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v13 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v13 = (uint64_t *)*v13;
      }
      uint64_t result = sub_1881DF4((std::string **)&v3[2], v11, v13);
      if ((v9 & 2) == 0)
      {
LABEL_7:
        if ((v9 & 4) == 0) {
          goto LABEL_8;
        }
        goto LABEL_22;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_7;
    }
    unint64_t v14 = (long long *)(*(void *)(a2 + 56) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    std::string::size_type v15 = v3->__r_.__value_.__l.__size_;
    uint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
    if (v15) {
      uint64_t v16 = (uint64_t *)*v16;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[2].__r_.__value_.__l.__size_, v14, v16);
    if ((v9 & 4) == 0)
    {
LABEL_8:
      if ((v9 & 8) == 0) {
        goto LABEL_9;
      }
      goto LABEL_25;
    }
LABEL_22:
    unint64_t v17 = (long long *)(*(void *)(a2 + 64) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
    std::string::size_type v18 = v3->__r_.__value_.__l.__size_;
    uint64_t v19 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
    if (v18) {
      uint64_t v19 = (uint64_t *)*v19;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[2].__r_.__value_.__r.__words[2], v17, v19);
    if ((v9 & 8) == 0)
    {
LABEL_9:
      if ((v9 & 0x10) == 0)
      {
LABEL_11:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v9;
        goto LABEL_12;
      }
LABEL_10:
      v3[3].__r_.__value_.__l.__size_ = *(void *)(a2 + 80);
      goto LABEL_11;
    }
LABEL_25:
    unint64_t v20 = (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 8u;
    std::string::size_type v21 = v3->__r_.__value_.__l.__size_;
    uint64_t v22 = (uint64_t *)(v21 & 0xFFFFFFFFFFFFFFFCLL);
    if (v21) {
      uint64_t v22 = (uint64_t *)*v22;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[3], v20, v22);
    if ((v9 & 0x10) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
LABEL_12:
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1404E94()
{
  return 1;
}

void *sub_1404E9C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gemini.StructuredAttributes.BusinessLicense");
}

double sub_1404EAC(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3 = a2 | 2;
  if (!a3) {
    uint64_t v3 = a2;
  }
  *(void *)a1 = off_24B2388;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = 0;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = a2;
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = a2;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = a2;
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 104) = a2;
  *(void *)(a1 + 112) = 0;
  *(void *)(a1 + 120) = 0;
  *(void *)(a1 + 128) = a2;
  *(void *)(a1 + 136) = 0;
  *(void *)(a1 + 144) = 0;
  *(void *)(a1 + 152) = a2;
  *(void *)(a1 + 160) = 0;
  *(void *)(a1 + 168) = 0;
  *(void *)(a1 + 176) = a2;
  *(void *)(a1 + 184) = 0;
  *(void *)(a1 + 192) = 0;
  *(void *)(a1 + 200) = a2;
  *(void *)(a1 + 208) = 0;
  *(void *)(a1 + 216) = 0;
  *(void *)(a1 + 224) = a2;
  *(void *)(a1 + 232) = 0;
  *(void *)(a1 + 240) = 0;
  *(void *)(a1 + 248) = a2;
  *(void *)(a1 + 256) = 0;
  *(void *)(a1 + 264) = 0;
  *(void *)(a1 + 272) = a2;
  *(void *)(a1 + 280) = 0;
  *(void *)(a1 + 288) = 0;
  *(void *)(a1 + 296) = 0;
  *(void *)(a1 + 304) = a2;
  *(void *)(a1 + 312) = a2;
  *(void *)(a1 + 320) = 0;
  *(void *)(a1 + 328) = 0;
  *(void *)(a1 + 336) = a2;
  *(void *)(a1 + 344) = 0;
  *(void *)(a1 + 352) = 0;
  *(void *)(a1 + 360) = a2;
  *(void *)(a1 + 368) = 0;
  *(void *)(a1 + 376) = 0;
  *(void *)(a1 + 384) = a2;
  *(void *)(a1 + 392) = 0;
  *(void *)(a1 + 400) = 0;
  *(void *)(a1 + 408) = a2;
  *(void *)(a1 + 416) = 0;
  *(void *)(a1 + 424) = 0;
  *(void *)(a1 + 432) = a2;
  *(void *)(a1 + 440) = 0;
  *(void *)(a1 + 448) = 0;
  *(void *)(a1 + 456) = a2;
  *(void *)(a1 + 464) = 0;
  *(void *)(a1 + 472) = 0;
  *(void *)(a1 + 480) = a2;
  *(void *)(a1 + 488) = 0;
  *(void *)(a1 + 496) = 0;
  *(void *)(a1 + 504) = a2;
  *(void *)(a1 + 520) = 0;
  *(void *)(a1 + 512) = 0;
  *(void *)(a1 + 528) = a2;
  *(void *)(a1 + 544) = 0;
  *(void *)(a1 + 536) = 0;
  *(void *)(a1 + 552) = &qword_2550250;
  *(void *)(a1 + 560) = &qword_2550250;
  double result = 0.0;
  *(_OWORD *)(a1 + 632) = 0u;
  *(_OWORD *)(a1 + 648) = 0u;
  *(_OWORD *)(a1 + 600) = 0u;
  *(_OWORD *)(a1 + 616) = 0u;
  *(_OWORD *)(a1 + 568) = 0u;
  *(_OWORD *)(a1 + 584) = 0u;
  *(_DWORD *)(a1 + 664) = 8086;
  return result;
}

uint64_t sub_1404F98(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_14;
    }
  }
  else if (v4)
  {
    goto LABEL_14;
  }
  if (*(uint64_t **)(a1 + 552) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 552));
  }
  if (*(uint64_t **)(a1 + 560) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 560));
  }
  if ((uint64_t (***)())a1 != &off_2537668)
  {
    uint64_t v5 = *(void **)(a1 + 568);
    if (v5)
    {
      sub_13F7A7C(v5);
      operator delete();
    }
    uint64_t v6 = *(void *)(a1 + 576);
    if (v6)
    {
      sub_13FFB44(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_14:
  sub_149007C((void *)(a1 + 528));
  sub_1889DE8((void *)(a1 + 504));
  sub_148FFFC((void *)(a1 + 480));
  sub_148FF7C((void *)(a1 + 456));
  sub_1889DE8((void *)(a1 + 432));
  sub_148FEFC((void *)(a1 + 408));
  sub_148FE7C((void *)(a1 + 384));
  sub_148FDFC((void *)(a1 + 360));
  sub_148FD7C((void *)(a1 + 336));
  sub_148FCFC((void *)(a1 + 312));
  sub_1889DA8(a1 + 296);
  sub_148FC7C((void *)(a1 + 272));
  sub_148FBFC((void *)(a1 + 248));
  sub_148FB7C((void *)(a1 + 224));
  sub_124DD4C((void *)(a1 + 200));
  sub_148FAFC((void *)(a1 + 176));
  sub_148FA7C((void *)(a1 + 152));
  sub_148F9FC((void *)(a1 + 128));
  sub_124DD4C((void *)(a1 + 104));
  sub_124DD4C((void *)(a1 + 80));
  sub_148F97C((void *)(a1 + 56));
  sub_1889DE8((void *)(a1 + 32));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1405198(uint64_t a1)
{
  sub_1404F98(a1);

  operator delete();
}

uint64_t sub_14051D0(uint64_t a1)
{
  sub_188CC00(a1 + 32);
  uint64_t v2 = *(unsigned int *)(a1 + 64);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(a1 + 72) + 8);
    do
    {
      uint64_t v4 = *v3++;
      sub_13F7600(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(a1 + 64) = 0;
  }
  uint64_t v5 = *(unsigned int *)(a1 + 88);
  if ((int)v5 >= 1)
  {
    uint64_t v6 = (uint64_t *)(*(void *)(a1 + 96) + 8);
    do
    {
      uint64_t v7 = *v6++;
      sub_14532E4(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(a1 + 88) = 0;
  }
  uint64_t v8 = *(unsigned int *)(a1 + 112);
  if ((int)v8 >= 1)
  {
    int v9 = (uint64_t *)(*(void *)(a1 + 120) + 8);
    do
    {
      uint64_t v10 = *v9++;
      sub_14532E4(v10);
      --v8;
    }
    while (v8);
    *(_DWORD *)(a1 + 112) = 0;
  }
  uint64_t v11 = *(unsigned int *)(a1 + 136);
  if ((int)v11 >= 1)
  {
    uint64_t v12 = (uint64_t *)(*(void *)(a1 + 144) + 8);
    do
    {
      uint64_t v13 = *v12++;
      sub_13F8048(v13);
      --v11;
    }
    while (v11);
    *(_DWORD *)(a1 + 136) = 0;
  }
  uint64_t v14 = *(unsigned int *)(a1 + 160);
  if ((int)v14 >= 1)
  {
    std::string::size_type v15 = (uint64_t *)(*(void *)(a1 + 168) + 8);
    do
    {
      uint64_t v16 = *v15++;
      sub_13F8568(v16);
      --v14;
    }
    while (v14);
    *(_DWORD *)(a1 + 160) = 0;
  }
  uint64_t v17 = *(unsigned int *)(a1 + 184);
  if ((int)v17 >= 1)
  {
    std::string::size_type v18 = (uint64_t *)(*(void *)(a1 + 192) + 8);
    do
    {
      uint64_t v19 = *v18++;
      sub_13F8A88(v19);
      --v17;
    }
    while (v17);
    *(_DWORD *)(a1 + 184) = 0;
  }
  uint64_t v20 = *(unsigned int *)(a1 + 208);
  if ((int)v20 >= 1)
  {
    std::string::size_type v21 = (uint64_t *)(*(void *)(a1 + 216) + 8);
    do
    {
      uint64_t v22 = *v21++;
      sub_14532E4(v22);
      --v20;
    }
    while (v20);
    *(_DWORD *)(a1 + 208) = 0;
  }
  uint64_t v23 = *(unsigned int *)(a1 + 232);
  if ((int)v23 >= 1)
  {
    uint64_t v24 = (uint64_t *)(*(void *)(a1 + 240) + 8);
    do
    {
      uint64_t v25 = *v24++;
      sub_13F94C8(v25);
      --v23;
    }
    while (v23);
    *(_DWORD *)(a1 + 232) = 0;
  }
  uint64_t v26 = *(unsigned int *)(a1 + 256);
  if ((int)v26 >= 1)
  {
    uint64_t v27 = (uint64_t *)(*(void *)(a1 + 264) + 8);
    do
    {
      uint64_t v28 = *v27++;
      sub_13F99E8(v28);
      --v26;
    }
    while (v26);
    *(_DWORD *)(a1 + 256) = 0;
  }
  uint64_t v29 = *(unsigned int *)(a1 + 280);
  if ((int)v29 >= 1)
  {
    uint64_t v30 = (uint64_t *)(*(void *)(a1 + 288) + 8);
    do
    {
      uint64_t v31 = *v30++;
      sub_13F8FA8(v31);
      --v29;
    }
    while (v29);
    *(_DWORD *)(a1 + 280) = 0;
  }
  *(_DWORD *)(a1 + 296) = 0;
  uint64_t v32 = *(unsigned int *)(a1 + 320);
  if ((int)v32 >= 1)
  {
    uint64_t v33 = (uint64_t *)(*(void *)(a1 + 328) + 8);
    do
    {
      uint64_t v34 = *v33++;
      sub_13F9F08(v34);
      --v32;
    }
    while (v32);
    *(_DWORD *)(a1 + 320) = 0;
  }
  uint64_t v35 = *(unsigned int *)(a1 + 344);
  if ((int)v35 >= 1)
  {
    uint64_t v36 = (uint64_t *)(*(void *)(a1 + 352) + 8);
    do
    {
      uint64_t v37 = *v36++;
      sub_13FA470(v37);
      --v35;
    }
    while (v35);
    *(_DWORD *)(a1 + 344) = 0;
  }
  uint64_t v38 = *(unsigned int *)(a1 + 368);
  if ((int)v38 >= 1)
  {
    uint64_t v39 = (uint64_t *)(*(void *)(a1 + 376) + 8);
    do
    {
      uint64_t v40 = *v39++;
      sub_13FA930(v40);
      --v38;
    }
    while (v38);
    *(_DWORD *)(a1 + 368) = 0;
  }
  uint64_t v41 = *(unsigned int *)(a1 + 392);
  if ((int)v41 >= 1)
  {
    uint64_t v42 = (uint64_t *)(*(void *)(a1 + 400) + 8);
    do
    {
      uint64_t v43 = *v42++;
      sub_13FAE54(v43);
      --v41;
    }
    while (v41);
    *(_DWORD *)(a1 + 392) = 0;
  }
  uint64_t v44 = *(unsigned int *)(a1 + 416);
  if ((int)v44 >= 1)
  {
    unsigned int v45 = (uint64_t *)(*(void *)(a1 + 424) + 8);
    do
    {
      uint64_t v46 = *v45++;
      sub_13FB378(v46);
      --v44;
    }
    while (v44);
    *(_DWORD *)(a1 + 416) = 0;
  }
  sub_188CC00(a1 + 432);
  uint64_t v47 = *(unsigned int *)(a1 + 464);
  if ((int)v47 >= 1)
  {
    uint64_t v48 = (uint64_t *)(*(void *)(a1 + 472) + 8);
    do
    {
      uint64_t v49 = *v48++;
      sub_13FB89C(v49);
      --v47;
    }
    while (v47);
    *(_DWORD *)(a1 + 464) = 0;
  }
  uint64_t v50 = *(unsigned int *)(a1 + 488);
  if ((int)v50 >= 1)
  {
    uint64_t v51 = (uint64_t *)(*(void *)(a1 + 496) + 8);
    do
    {
      uint64_t v52 = *v51++;
      sub_1402474(v52);
      --v50;
    }
    while (v50);
    *(_DWORD *)(a1 + 488) = 0;
  }
  uint64_t result = sub_188CC00(a1 + 504);
  uint64_t v54 = *(unsigned int *)(a1 + 536);
  if ((int)v54 >= 1)
  {
    int v55 = (uint64_t *)(*(void *)(a1 + 544) + 8);
    do
    {
      uint64_t v56 = *v55++;
      uint64_t result = sub_1404318(v56);
      --v54;
    }
    while (v54);
    *(_DWORD *)(a1 + 536) = 0;
  }
  unsigned int v57 = *(_DWORD *)(a1 + 16);
  if ((v57 & 0xF) == 0) {
    goto LABEL_79;
  }
  if (v57)
  {
    unint64_t v60 = *(void *)(a1 + 552) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v60 + 23) < 0)
    {
      **(unsigned char **)unint64_t v60 = 0;
      *(void *)(v60 + 8) = 0;
      if ((v57 & 2) != 0) {
        goto LABEL_97;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v60 = 0;
      *(unsigned char *)(v60 + 23) = 0;
      if ((v57 & 2) != 0) {
        goto LABEL_97;
      }
    }
LABEL_76:
    if ((v57 & 4) == 0) {
      goto LABEL_77;
    }
    goto LABEL_101;
  }
  if ((v57 & 2) == 0) {
    goto LABEL_76;
  }
LABEL_97:
  unint64_t v61 = *(void *)(a1 + 560) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v61 + 23) < 0)
  {
    **(unsigned char **)unint64_t v61 = 0;
    *(void *)(v61 + 8) = 0;
    if ((v57 & 4) != 0) {
      goto LABEL_101;
    }
LABEL_77:
    if ((v57 & 8) == 0) {
      goto LABEL_79;
    }
    goto LABEL_78;
  }
  *(unsigned char *)unint64_t v61 = 0;
  *(unsigned char *)(v61 + 23) = 0;
  if ((v57 & 4) == 0) {
    goto LABEL_77;
  }
LABEL_101:
  uint64_t result = sub_13F7B28(*(void *)(a1 + 568));
  if ((v57 & 8) != 0) {
LABEL_78:
  }
    uint64_t result = sub_13FFC98(*(void *)(a1 + 576));
LABEL_79:
  if ((v57 & 0xF0) != 0)
  {
    *(void *)(a1 + 584) = 0;
    *(void *)(a1 + 589) = 0;
  }
  if ((v57 & 0xFF00) != 0)
  {
    *(void *)(a1 + 612) = 0;
    *(_OWORD *)(a1 + 597) = 0u;
  }
  if ((v57 & 0xFF0000) != 0) {
    *(void *)(a1 + 620) = 0;
  }
  if (HIBYTE(v57))
  {
    *(_DWORD *)(a1 + 644) = 0;
    *(_OWORD *)(a1 + 628) = 0u;
  }
  if ((*(unsigned char *)(a1 + 20) & 0x7F) != 0)
  {
    *(_OWORD *)(a1 + 648) = 0u;
    *(_DWORD *)(a1 + 664) = 8086;
  }
  char v59 = *(unsigned char *)(a1 + 8);
  BOOL v58 = (uint64_t *)(a1 + 8);
  v58[1] = 0;
  if (v59)
  {
    return sub_188B4AC(v58);
  }
  return result;
}

char *sub_140561C(uint64_t a1, char *a2, int32x2_t *a3)
{
  v299[0] = a2;
  char v5 = sub_11947B8((uint64_t)a3, v299, a3[11].i32[1]);
  uint64_t result = v299[0];
  if ((v5 & 1) == 0)
  {
    v296 = (uint64_t *)(a1 + 528);
    v298 = (uint64_t **)(a1 + 504);
    v281 = (uint64_t *)(a1 + 8);
    v294 = (uint64_t *)(a1 + 456);
    v295 = (uint64_t *)(a1 + 480);
    v297 = (uint64_t **)(a1 + 432);
    v292 = (uint64_t *)(a1 + 384);
    v293 = (uint64_t *)(a1 + 408);
    v290 = (uint64_t *)(a1 + 336);
    v291 = (uint64_t *)(a1 + 360);
    uint64_t v7 = (unsigned int *)(a1 + 296);
    v288 = (uint64_t *)(a1 + 272);
    v289 = (uint64_t *)(a1 + 312);
    v286 = (uint64_t *)(a1 + 224);
    v287 = (uint64_t *)(a1 + 248);
    v284 = (uint64_t *)(a1 + 176);
    v285 = (uint64_t *)(a1 + 200);
    v282 = (uint64_t *)(a1 + 128);
    v283 = (uint64_t *)(a1 + 152);
    uint64_t v8 = (uint64_t **)(a1 + 32);
    while (1)
    {
      int v9 = result + 1;
      unsigned int v10 = *result;
      if (*result < 0)
      {
        unsigned int v11 = v10 + (*v9 << 7);
        unsigned int v10 = v11 - 128;
        if (*v9 < 0)
        {
          int v9 = (char *)sub_188C180((uint64_t)result, v11 - 128);
          unsigned int v10 = v12;
        }
        else
        {
          int v9 = result + 2;
        }
      }
      v299[0] = v9;
      switch(v10 >> 3)
      {
        case 5u:
          if (v10 != 40) {
            goto LABEL_529;
          }
          *(_DWORD *)(a1 + 16) |= 0x80u;
          uint64_t v13 = v9 + 1;
          uint64_t v14 = *v9;
          if ((*v9 & 0x80000000) == 0) {
            goto LABEL_13;
          }
          int v15 = *v13;
          uint64_t v14 = v14 + (v15 << 7) - 128;
          if ((v15 & 0x80000000) == 0)
          {
            uint64_t v13 = v9 + 2;
LABEL_13:
            v299[0] = v13;
            *(unsigned char *)(a1 + 596) = v14 != 0;
            goto LABEL_537;
          }
          uint64_t result = (char *)sub_188C138((uint64_t)v9, v14);
          v299[0] = result;
          *(unsigned char *)(a1 + 596) = v241 != 0;
          if (!result) {
            return result;
          }
          goto LABEL_537;
        case 6u:
          if (v10 != 50) {
            goto LABEL_529;
          }
          uint64_t result = v9 - 1;
          while (1)
          {
            uint64_t v16 = result + 1;
            v299[0] = result + 1;
            uint64_t v17 = *(_DWORD **)(a1 + 48);
            if (v17 && (uint64_t v18 = *(int *)(a1 + 40), (int)v18 < *v17))
            {
              *(_DWORD *)(a1 + 40) = v18 + 1;
              uint64_t v19 = *(std::string **)&v17[2 * v18 + 2];
            }
            else
            {
              if (!*v8) {
                operator new();
              }
              void *v21 = v20;
              v21[1] = sub_3A6EDC;
              *uint64_t v20 = 0;
              v20[1] = 0;
              int v20[2] = 0;
              uint64_t v19 = (std::string *)sub_188CDC8(a1 + 32, (uint64_t)v20);
              uint64_t v16 = v299[0];
            }
            uint64_t result = (char *)sub_188C244(v19, v16, (uint64_t)a3);
            v299[0] = result;
            if (!result) {
              return result;
            }
            if (*(void *)a3 <= (unint64_t)result || *result != 50) {
              goto LABEL_537;
            }
          }
        case 7u:
          if (v10 != 56) {
            goto LABEL_529;
          }
          *(_DWORD *)(a1 + 16) |= 0x100u;
          uint64_t v22 = v9 + 1;
          uint64_t v23 = *v9;
          if ((*v9 & 0x80000000) == 0) {
            goto LABEL_30;
          }
          int v24 = *v22;
          uint64_t v23 = v23 + (v24 << 7) - 128;
          if (v24 < 0)
          {
            uint64_t result = (char *)sub_188C138((uint64_t)v9, v23);
            v299[0] = result;
            *(unsigned char *)(a1 + 597) = v242 != 0;
            if (!result) {
              return result;
            }
          }
          else
          {
            uint64_t v22 = v9 + 2;
LABEL_30:
            v299[0] = v22;
            *(unsigned char *)(a1 + 597) = v23 != 0;
          }
          goto LABEL_537;
        case 8u:
          if (v10 != 64) {
            goto LABEL_529;
          }
          *(_DWORD *)(a1 + 16) |= 0x10u;
          uint64_t v26 = v9 + 1;
          LODWORD(v25) = *v9;
          if ((v25 & 0x80) == 0) {
            goto LABEL_35;
          }
          int v27 = *v26;
          uint64_t v25 = v25 + (v27 << 7) - 128;
          if (v27 < 0)
          {
            uint64_t result = (char *)sub_188C138((uint64_t)v9, v25);
            v299[0] = result;
            *(_DWORD *)(a1 + 584) = v243;
            if (!result) {
              return result;
            }
          }
          else
          {
            uint64_t v26 = v9 + 2;
LABEL_35:
            v299[0] = v26;
            *(_DWORD *)(a1 + 584) = v25;
          }
          goto LABEL_537;
        case 9u:
          if (v10 != 74) {
            goto LABEL_529;
          }
          uint64_t result = v9 - 1;
          while (1)
          {
            uint64_t v28 = (unsigned __int8 *)(result + 1);
            v299[0] = result + 1;
            uint64_t v29 = *(_DWORD **)(a1 + 72);
            if (v29 && (uint64_t v30 = *(int *)(a1 + 64), (int)v30 < *v29))
            {
              *(_DWORD *)(a1 + 64) = v30 + 1;
              uint64_t v31 = *(void *)&v29[2 * v30 + 2];
            }
            else
            {
              uint64_t v32 = sub_1448E4C(*(void *)(a1 + 56));
              uint64_t v31 = sub_188CDC8(a1 + 56, (uint64_t)v32);
              uint64_t v28 = (unsigned __int8 *)v299[0];
            }
            uint64_t result = sub_14079B4(a3, v31, v28);
            v299[0] = result;
            if (!result) {
              return result;
            }
            if (*(void *)a3 <= (unint64_t)result || *result != 74) {
              goto LABEL_537;
            }
          }
        case 0xAu:
          if (v10 != 80) {
            goto LABEL_529;
          }
          uint64_t v33 = v9 + 1;
          unint64_t v34 = *v9;
          if ((*v9 & 0x80000000) == 0) {
            goto LABEL_50;
          }
          int v35 = *v33;
          int v36 = v34 + (v35 << 7);
          unint64_t v34 = (v36 - 128);
          if (v35 < 0)
          {
            uint64_t result = (char *)sub_188C138((uint64_t)v9, (v36 - 128));
            v299[0] = result;
            if (!result) {
              return result;
            }
            unint64_t v34 = v244;
          }
          else
          {
            uint64_t v33 = v9 + 2;
LABEL_50:
            v299[0] = v33;
          }
          if (v34 <= 4)
          {
            *(_DWORD *)(a1 + 16) |= 0x20u;
            *(_DWORD *)(a1 + 588) = v34;
            goto LABEL_537;
          }
          if (*v281) {
            v279 = (std::string *)((*v281 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            v279 = (std::string *)sub_188DBD8(v281);
          }
          int v280 = 10;
          goto LABEL_581;
        case 0xBu:
          if (v10 != 88) {
            goto LABEL_529;
          }
          uint64_t v37 = v9 + 1;
          unint64_t v34 = *v9;
          if ((*v9 & 0x80000000) == 0) {
            goto LABEL_57;
          }
          int v38 = *v37;
          int v39 = v34 + (v38 << 7);
          unint64_t v34 = (v39 - 128);
          if (v38 < 0)
          {
            uint64_t result = (char *)sub_188C138((uint64_t)v9, (v39 - 128));
            v299[0] = result;
            if (!result) {
              return result;
            }
            unint64_t v34 = v245;
          }
          else
          {
            uint64_t v37 = v9 + 2;
LABEL_57:
            v299[0] = v37;
          }
          if (v34 <= 4)
          {
            *(_DWORD *)(a1 + 16) |= 0x40u;
            *(_DWORD *)(a1 + 592) = v34;
            goto LABEL_537;
          }
          if (*v281) {
            v279 = (std::string *)((*v281 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            v279 = (std::string *)sub_188DBD8(v281);
          }
          int v280 = 11;
          goto LABEL_581;
        case 0xCu:
          if (v10 != 96) {
            goto LABEL_529;
          }
          *(_DWORD *)(a1 + 16) |= 0x200u;
          uint64_t v40 = v9 + 1;
          uint64_t v41 = *v9;
          if ((*v9 & 0x80000000) == 0) {
            goto LABEL_64;
          }
          int v42 = *v40;
          uint64_t v41 = v41 + (v42 << 7) - 128;
          if (v42 < 0)
          {
            uint64_t result = (char *)sub_188C138((uint64_t)v9, v41);
            v299[0] = result;
            *(unsigned char *)(a1 + 598) = v246 != 0;
            if (!result) {
              return result;
            }
          }
          else
          {
            uint64_t v40 = v9 + 2;
LABEL_64:
            v299[0] = v40;
            *(unsigned char *)(a1 + 598) = v41 != 0;
          }
          goto LABEL_537;
        case 0xDu:
          if (v10 != 104) {
            goto LABEL_529;
          }
          uint64_t v43 = v9 + 1;
          unint64_t v34 = *v9;
          if ((*v9 & 0x80000000) == 0) {
            goto LABEL_69;
          }
          int v44 = *v43;
          int v45 = v34 + (v44 << 7);
          unint64_t v34 = (v45 - 128);
          if (v44 < 0)
          {
            uint64_t result = (char *)sub_188C138((uint64_t)v9, (v45 - 128));
            v299[0] = result;
            if (!result) {
              return result;
            }
            unint64_t v34 = v247;
          }
          else
          {
            uint64_t v43 = v9 + 2;
LABEL_69:
            v299[0] = v43;
          }
          if (v34 <= 4)
          {
            *(_DWORD *)(a1 + 16) |= 0x800u;
            *(_DWORD *)(a1 + 600) = v34;
            goto LABEL_537;
          }
          if (*v281) {
            v279 = (std::string *)((*v281 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            v279 = (std::string *)sub_188DBD8(v281);
          }
          int v280 = 13;
          goto LABEL_581;
        case 0xEu:
          if (v10 != 112) {
            goto LABEL_529;
          }
          uint64_t v46 = v9 + 1;
          unint64_t v34 = *v9;
          if ((*v9 & 0x80000000) == 0) {
            goto LABEL_76;
          }
          int v47 = *v46;
          int v48 = v34 + (v47 << 7);
          unint64_t v34 = (v48 - 128);
          if (v47 < 0)
          {
            uint64_t result = (char *)sub_188C138((uint64_t)v9, (v48 - 128));
            v299[0] = result;
            if (!result) {
              return result;
            }
            unint64_t v34 = v248;
          }
          else
          {
            uint64_t v46 = v9 + 2;
LABEL_76:
            v299[0] = v46;
          }
          if (v34 <= 4)
          {
            *(_DWORD *)(a1 + 16) |= 0x1000u;
            *(_DWORD *)(a1 + 604) = v34;
            goto LABEL_537;
          }
          if (*v281) {
            v279 = (std::string *)((*v281 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            v279 = (std::string *)sub_188DBD8(v281);
          }
          int v280 = 14;
          goto LABEL_581;
        case 0xFu:
          if (v10 != 122) {
            goto LABEL_529;
          }
          *(_DWORD *)(a1 + 16) |= 4u;
          uint64_t v49 = *(void **)(a1 + 568);
          if (!v49)
          {
            uint64_t v50 = (void *)(*v281 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v281) {
              uint64_t v50 = (void *)*v50;
            }
            uint64_t v49 = sub_1448EC8((uint64_t)v50);
            *(void *)(a1 + 568) = v49;
            int v9 = v299[0];
          }
          uint64_t result = sub_1407A44(a3, (uint64_t)v49, (unsigned __int8 *)v9);
          goto LABEL_536;
        case 0x10u:
          if (v10 != 128) {
            goto LABEL_529;
          }
          uint64_t v51 = v9 + 1;
          unint64_t v34 = *v9;
          if ((*v9 & 0x80000000) == 0) {
            goto LABEL_89;
          }
          int v52 = *v51;
          int v53 = v34 + (v52 << 7);
          unint64_t v34 = (v53 - 128);
          if (v52 < 0)
          {
            uint64_t result = (char *)sub_188C138((uint64_t)v9, (v53 - 128));
            v299[0] = result;
            if (!result) {
              return result;
            }
            unint64_t v34 = v249;
          }
          else
          {
            uint64_t v51 = v9 + 2;
LABEL_89:
            v299[0] = v51;
          }
          if (v34 <= 4)
          {
            *(_DWORD *)(a1 + 16) |= 0x2000u;
            *(_DWORD *)(a1 + 608) = v34;
            goto LABEL_537;
          }
          if (*v281) {
            v279 = (std::string *)((*v281 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            v279 = (std::string *)sub_188DBD8(v281);
          }
          int v280 = 16;
          goto LABEL_581;
        case 0x11u:
          if (v10 != 136) {
            goto LABEL_529;
          }
          uint64_t v54 = v9 + 1;
          unint64_t v34 = *v9;
          if ((*v9 & 0x80000000) == 0) {
            goto LABEL_96;
          }
          int v55 = *v54;
          int v56 = v34 + (v55 << 7);
          unint64_t v34 = (v56 - 128);
          if (v55 < 0)
          {
            uint64_t result = (char *)sub_188C138((uint64_t)v9, (v56 - 128));
            v299[0] = result;
            if (!result) {
              return result;
            }
            unint64_t v34 = v250;
          }
          else
          {
            uint64_t v54 = v9 + 2;
LABEL_96:
            v299[0] = v54;
          }
          if (v34 <= 4)
          {
            *(_DWORD *)(a1 + 16) |= 0x4000u;
            *(_DWORD *)(a1 + 612) = v34;
            goto LABEL_537;
          }
          if (*v281) {
            v279 = (std::string *)((*v281 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            v279 = (std::string *)sub_188DBD8(v281);
          }
          int v280 = 17;
          goto LABEL_581;
        case 0x12u:
          if (v10 != 146) {
            goto LABEL_529;
          }
          uint64_t result = v9 - 2;
          while (1)
          {
            unsigned int v57 = (unsigned __int8 *)(result + 2);
            v299[0] = result + 2;
            BOOL v58 = *(_DWORD **)(a1 + 96);
            if (v58 && (uint64_t v59 = *(int *)(a1 + 88), (int)v59 < *v58))
            {
              *(_DWORD *)(a1 + 88) = v59 + 1;
              uint64_t v60 = *(void *)&v58[2 * v59 + 2];
            }
            else
            {
              uint64_t v61 = sub_14785D4(*(void *)(a1 + 80));
              uint64_t v60 = sub_188CDC8(a1 + 80, v61);
              unsigned int v57 = (unsigned __int8 *)v299[0];
            }
            uint64_t result = sub_123AF74(a3, v60, v57);
            v299[0] = result;
            if (!result) {
              return result;
            }
            if (*(void *)a3 <= (unint64_t)result || *(_WORD *)result != 402) {
              goto LABEL_537;
            }
          }
        case 0x13u:
          if (v10 != 154) {
            goto LABEL_529;
          }
          uint64_t result = v9 - 2;
          while (1)
          {
            uint64_t v62 = (unsigned __int8 *)(result + 2);
            v299[0] = result + 2;
            int v63 = *(_DWORD **)(a1 + 120);
            if (v63 && (uint64_t v64 = *(int *)(a1 + 112), (int)v64 < *v63))
            {
              *(_DWORD *)(a1 + 112) = v64 + 1;
              uint64_t v65 = *(void *)&v63[2 * v64 + 2];
            }
            else
            {
              uint64_t v66 = sub_14785D4(*(void *)(a1 + 104));
              uint64_t v65 = sub_188CDC8(a1 + 104, v66);
              uint64_t v62 = (unsigned __int8 *)v299[0];
            }
            uint64_t result = sub_123AF74(a3, v65, v62);
            v299[0] = result;
            if (!result) {
              return result;
            }
            if (*(void *)a3 <= (unint64_t)result || *(_WORD *)result != 410) {
              goto LABEL_537;
            }
          }
        case 0x14u:
          if (v10 != 162) {
            goto LABEL_529;
          }
          uint64_t result = v9 - 2;
          while (1)
          {
            int v67 = (unsigned __int8 *)(result + 2);
            v299[0] = result + 2;
            std::string::size_type v68 = *(_DWORD **)(a1 + 144);
            if (v68 && (uint64_t v69 = *(int *)(a1 + 136), (int)v69 < *v68))
            {
              *(_DWORD *)(a1 + 136) = v69 + 1;
              uint64_t v70 = *(void *)&v68[2 * v69 + 2];
            }
            else
            {
              int v71 = sub_1448F44(*v282);
              uint64_t v70 = sub_188CDC8((uint64_t)v282, (uint64_t)v71);
              int v67 = (unsigned __int8 *)v299[0];
            }
            uint64_t result = sub_1407AD4(a3, v70, v67);
            v299[0] = result;
            if (!result) {
              return result;
            }
            if (*(void *)a3 <= (unint64_t)result || *(_WORD *)result != 418) {
              goto LABEL_537;
            }
          }
        case 0x15u:
          if (v10 != 168) {
            goto LABEL_529;
          }
          *(_DWORD *)(a1 + 16) |= 0x400u;
          std::string::size_type v72 = v9 + 1;
          uint64_t v73 = *v9;
          if ((*v9 & 0x80000000) == 0) {
            goto LABEL_133;
          }
          int v74 = *v72;
          uint64_t v73 = v73 + (v74 << 7) - 128;
          if (v74 < 0)
          {
            uint64_t result = (char *)sub_188C138((uint64_t)v9, v73);
            v299[0] = result;
            *(unsigned char *)(a1 + 599) = v251 != 0;
            if (!result) {
              return result;
            }
          }
          else
          {
            std::string::size_type v72 = v9 + 2;
LABEL_133:
            v299[0] = v72;
            *(unsigned char *)(a1 + 599) = v73 != 0;
          }
          goto LABEL_537;
        case 0x16u:
          if (v10 != 176) {
            goto LABEL_529;
          }
          *(_DWORD *)(a1 + 16) |= 0x10000u;
          unint64_t v75 = v9 + 1;
          uint64_t v76 = *v9;
          if ((*v9 & 0x80000000) == 0) {
            goto LABEL_138;
          }
          int v77 = *v75;
          uint64_t v76 = v76 + (v77 << 7) - 128;
          if (v77 < 0)
          {
            uint64_t result = (char *)sub_188C138((uint64_t)v9, v76);
            v299[0] = result;
            *(unsigned char *)(a1 + 620) = v252 != 0;
            if (!result) {
              return result;
            }
          }
          else
          {
            unint64_t v75 = v9 + 2;
LABEL_138:
            v299[0] = v75;
            *(unsigned char *)(a1 + 620) = v76 != 0;
          }
          goto LABEL_537;
        case 0x17u:
          if (v10 != 184) {
            goto LABEL_529;
          }
          *(_DWORD *)(a1 + 16) |= 0x20000u;
          uint64_t v78 = v9 + 1;
          uint64_t v79 = *v9;
          if ((*v9 & 0x80000000) == 0) {
            goto LABEL_143;
          }
          int v80 = *v78;
          uint64_t v79 = v79 + (v80 << 7) - 128;
          if (v80 < 0)
          {
            uint64_t result = (char *)sub_188C138((uint64_t)v9, v79);
            v299[0] = result;
            *(unsigned char *)(a1 + 621) = v253 != 0;
            if (!result) {
              return result;
            }
          }
          else
          {
            uint64_t v78 = v9 + 2;
LABEL_143:
            v299[0] = v78;
            *(unsigned char *)(a1 + 621) = v79 != 0;
          }
          goto LABEL_537;
        case 0x18u:
          if (v10 != 192) {
            goto LABEL_529;
          }
          int v81 = v9 + 1;
          unint64_t v34 = *v9;
          if ((*v9 & 0x80000000) == 0) {
            goto LABEL_148;
          }
          int v82 = *v81;
          int v83 = v34 + (v82 << 7);
          unint64_t v34 = (v83 - 128);
          if (v82 < 0)
          {
            uint64_t result = (char *)sub_188C138((uint64_t)v9, (v83 - 128));
            v299[0] = result;
            if (!result) {
              return result;
            }
            unint64_t v34 = v254;
          }
          else
          {
            int v81 = v9 + 2;
LABEL_148:
            v299[0] = v81;
          }
          if (v34 <= 4)
          {
            *(_DWORD *)(a1 + 16) |= 0x8000u;
            *(_DWORD *)(a1 + 616) = v34;
            goto LABEL_537;
          }
          if (*v281) {
            v279 = (std::string *)((*v281 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            v279 = (std::string *)sub_188DBD8(v281);
          }
          int v280 = 24;
          goto LABEL_581;
        case 0x19u:
          if (v10 != 200) {
            goto LABEL_529;
          }
          *(_DWORD *)(a1 + 16) |= 0x40000u;
          std::string::size_type v84 = v9 + 1;
          uint64_t v85 = *v9;
          if ((*v9 & 0x80000000) == 0) {
            goto LABEL_155;
          }
          int v86 = *v84;
          uint64_t v85 = v85 + (v86 << 7) - 128;
          if (v86 < 0)
          {
            uint64_t result = (char *)sub_188C138((uint64_t)v9, v85);
            v299[0] = result;
            *(unsigned char *)(a1 + 622) = v255 != 0;
            if (!result) {
              return result;
            }
          }
          else
          {
            std::string::size_type v84 = v9 + 2;
LABEL_155:
            v299[0] = v84;
            *(unsigned char *)(a1 + 622) = v85 != 0;
          }
          goto LABEL_537;
        case 0x1Au:
          if (v10 != 208) {
            goto LABEL_529;
          }
          *(_DWORD *)(a1 + 16) |= 0x80000u;
          uint64_t v87 = v9 + 1;
          uint64_t v88 = *v9;
          if ((*v9 & 0x80000000) == 0) {
            goto LABEL_160;
          }
          int v89 = *v87;
          uint64_t v88 = v88 + (v89 << 7) - 128;
          if (v89 < 0)
          {
            uint64_t result = (char *)sub_188C138((uint64_t)v9, v88);
            v299[0] = result;
            *(unsigned char *)(a1 + 623) = v256 != 0;
            if (!result) {
              return result;
            }
          }
          else
          {
            uint64_t v87 = v9 + 2;
LABEL_160:
            v299[0] = v87;
            *(unsigned char *)(a1 + 623) = v88 != 0;
          }
          goto LABEL_537;
        case 0x1Bu:
          if (v10 != 216) {
            goto LABEL_529;
          }
          *(_DWORD *)(a1 + 16) |= 0x100000u;
          uint64_t v90 = v9 + 1;
          uint64_t v91 = *v9;
          if ((*v9 & 0x80000000) == 0) {
            goto LABEL_165;
          }
          int v92 = *v90;
          uint64_t v91 = v91 + (v92 << 7) - 128;
          if (v92 < 0)
          {
            uint64_t result = (char *)sub_188C138((uint64_t)v9, v91);
            v299[0] = result;
            *(unsigned char *)(a1 + 624) = v257 != 0;
            if (!result) {
              return result;
            }
          }
          else
          {
            uint64_t v90 = v9 + 2;
LABEL_165:
            v299[0] = v90;
            *(unsigned char *)(a1 + 624) = v91 != 0;
          }
          goto LABEL_537;
        case 0x1Cu:
          if (v10 != 226) {
            goto LABEL_529;
          }
          uint64_t result = v9 - 2;
          while (1)
          {
            std::string::size_type v93 = (unsigned __int8 *)(result + 2);
            v299[0] = result + 2;
            uint64_t v94 = *(_DWORD **)(a1 + 168);
            if (v94 && (uint64_t v95 = *(int *)(a1 + 160), (int)v95 < *v94))
            {
              *(_DWORD *)(a1 + 160) = v95 + 1;
              uint64_t v96 = *(void *)&v94[2 * v95 + 2];
            }
            else
            {
              std::string::size_type v97 = sub_1448FC0(*v283);
              uint64_t v96 = sub_188CDC8((uint64_t)v283, (uint64_t)v97);
              std::string::size_type v93 = (unsigned __int8 *)v299[0];
            }
            uint64_t result = sub_1407B64(a3, v96, v93);
            v299[0] = result;
            if (!result) {
              return result;
            }
            if (*(void *)a3 <= (unint64_t)result || *(_WORD *)result != 482) {
              goto LABEL_537;
            }
          }
        case 0x1Du:
          if (v10 != 234) {
            goto LABEL_529;
          }
          uint64_t result = v9 - 2;
          while (1)
          {
            uint64_t v98 = (unsigned __int8 *)(result + 2);
            v299[0] = result + 2;
            uint64_t v99 = *(_DWORD **)(a1 + 192);
            if (v99 && (uint64_t v100 = *(int *)(a1 + 184), (int)v100 < *v99))
            {
              *(_DWORD *)(a1 + 184) = v100 + 1;
              uint64_t v101 = *(void *)&v99[2 * v100 + 2];
            }
            else
            {
              uint64_t v102 = sub_144903C(*v284);
              uint64_t v101 = sub_188CDC8((uint64_t)v284, (uint64_t)v102);
              uint64_t v98 = (unsigned __int8 *)v299[0];
            }
            uint64_t result = sub_1407BF4(a3, v101, v98);
            v299[0] = result;
            if (!result) {
              return result;
            }
            if (*(void *)a3 <= (unint64_t)result || *(_WORD *)result != 490) {
              goto LABEL_537;
            }
          }
        case 0x1Eu:
          if (v10 != 240) {
            goto LABEL_529;
          }
          *(_DWORD *)(a1 + 16) |= 0x200000u;
          uint64_t v103 = v9 + 1;
          uint64_t v104 = *v9;
          if ((*v9 & 0x80000000) == 0) {
            goto LABEL_190;
          }
          int v105 = *v103;
          uint64_t v104 = v104 + (v105 << 7) - 128;
          if (v105 < 0)
          {
            uint64_t result = (char *)sub_188C138((uint64_t)v9, v104);
            v299[0] = result;
            *(unsigned char *)(a1 + 625) = v258 != 0;
            if (!result) {
              return result;
            }
          }
          else
          {
            uint64_t v103 = v9 + 2;
LABEL_190:
            v299[0] = v103;
            *(unsigned char *)(a1 + 625) = v104 != 0;
          }
          goto LABEL_537;
        case 0x1Fu:
          if (v10 != 250) {
            goto LABEL_529;
          }
          uint64_t result = v9 - 2;
          while (1)
          {
            uint64_t v106 = (unsigned __int8 *)(result + 2);
            v299[0] = result + 2;
            uint64_t v107 = *(_DWORD **)(a1 + 216);
            if (v107 && (uint64_t v108 = *(int *)(a1 + 208), (int)v108 < *v107))
            {
              *(_DWORD *)(a1 + 208) = v108 + 1;
              uint64_t v109 = *(void *)&v107[2 * v108 + 2];
            }
            else
            {
              uint64_t v110 = sub_14785D4(*v285);
              uint64_t v109 = sub_188CDC8((uint64_t)v285, v110);
              uint64_t v106 = (unsigned __int8 *)v299[0];
            }
            uint64_t result = sub_123AF74(a3, v109, v106);
            v299[0] = result;
            if (!result) {
              return result;
            }
            if (*(void *)a3 <= (unint64_t)result || *(_WORD *)result != 506) {
              goto LABEL_537;
            }
          }
        case 0x20u:
          if ((_BYTE)v10) {
            goto LABEL_529;
          }
          *(_DWORD *)(a1 + 16) |= 0x400000u;
          uint64_t v111 = v9 + 1;
          uint64_t v112 = *v9;
          if ((*v9 & 0x80000000) == 0) {
            goto LABEL_205;
          }
          int v113 = *v111;
          uint64_t v112 = v112 + (v113 << 7) - 128;
          if (v113 < 0)
          {
            uint64_t result = (char *)sub_188C138((uint64_t)v9, v112);
            v299[0] = result;
            *(unsigned char *)(a1 + 626) = v259 != 0;
            if (!result) {
              return result;
            }
          }
          else
          {
            uint64_t v111 = v9 + 2;
LABEL_205:
            v299[0] = v111;
            *(unsigned char *)(a1 + 626) = v112 != 0;
          }
          goto LABEL_537;
        case 0x22u:
          if (v10 != 16) {
            goto LABEL_529;
          }
          unint64_t v114 = v9 + 1;
          unint64_t v34 = *v9;
          if ((*v9 & 0x80000000) == 0) {
            goto LABEL_210;
          }
          int v115 = *v114;
          int v116 = v34 + (v115 << 7);
          unint64_t v34 = (v116 - 128);
          if (v115 < 0)
          {
            uint64_t result = (char *)sub_188C138((uint64_t)v9, (v116 - 128));
            v299[0] = result;
            if (!result) {
              return result;
            }
            unint64_t v34 = v260;
          }
          else
          {
            unint64_t v114 = v9 + 2;
LABEL_210:
            v299[0] = v114;
          }
          if (v34 <= 4)
          {
            *(_DWORD *)(a1 + 16) |= 0x1000000u;
            *(_DWORD *)(a1 + 628) = v34;
            goto LABEL_537;
          }
          if (*v281) {
            v279 = (std::string *)((*v281 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            v279 = (std::string *)sub_188DBD8(v281);
          }
          int v280 = 34;
          goto LABEL_581;
        case 0x23u:
          if (v10 != 24) {
            goto LABEL_529;
          }
          *(_DWORD *)(a1 + 16) |= 0x800000u;
          uint64_t v117 = v9 + 1;
          uint64_t v118 = *v9;
          if ((*v9 & 0x80000000) == 0) {
            goto LABEL_217;
          }
          int v119 = *v117;
          uint64_t v118 = v118 + (v119 << 7) - 128;
          if (v119 < 0)
          {
            uint64_t result = (char *)sub_188C138((uint64_t)v9, v118);
            v299[0] = result;
            *(unsigned char *)(a1 + 627) = v261 != 0;
            if (!result) {
              return result;
            }
          }
          else
          {
            uint64_t v117 = v9 + 2;
LABEL_217:
            v299[0] = v117;
            *(unsigned char *)(a1 + 627) = v118 != 0;
          }
          goto LABEL_537;
        case 0x24u:
          if (v10 != 32) {
            goto LABEL_529;
          }
          int v120 = v9 + 1;
          unint64_t v34 = *v9;
          if ((*v9 & 0x80000000) == 0) {
            goto LABEL_222;
          }
          int v121 = *v120;
          int v122 = v34 + (v121 << 7);
          unint64_t v34 = (v122 - 128);
          if (v121 < 0)
          {
            uint64_t result = (char *)sub_188C138((uint64_t)v9, (v122 - 128));
            v299[0] = result;
            if (!result) {
              return result;
            }
            unint64_t v34 = v262;
          }
          else
          {
            int v120 = v9 + 2;
LABEL_222:
            v299[0] = v120;
          }
          if (v34 <= 3)
          {
            *(_DWORD *)(a1 + 16) |= 0x2000000u;
            *(_DWORD *)(a1 + 632) = v34;
            goto LABEL_537;
          }
          if (*v281) {
            v279 = (std::string *)((*v281 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            v279 = (std::string *)sub_188DBD8(v281);
          }
          int v280 = 36;
          goto LABEL_581;
        case 0x26u:
          if (v10 != 48) {
            goto LABEL_529;
          }
          *(_DWORD *)(a1 + 16) |= 0x8000000u;
          uint64_t v123 = v9 + 1;
          uint64_t v124 = *v9;
          if ((*v9 & 0x80000000) == 0) {
            goto LABEL_229;
          }
          int v125 = *v123;
          uint64_t v124 = v124 + (v125 << 7) - 128;
          if (v125 < 0)
          {
            uint64_t result = (char *)sub_188C138((uint64_t)v9, v124);
            v299[0] = result;
            *(unsigned char *)(a1 + 640) = v263 != 0;
            if (!result) {
              return result;
            }
          }
          else
          {
            uint64_t v123 = v9 + 2;
LABEL_229:
            v299[0] = v123;
            *(unsigned char *)(a1 + 640) = v124 != 0;
          }
          goto LABEL_537;
        case 0x27u:
          if (v10 != 58) {
            goto LABEL_529;
          }
          uint64_t result = v9 - 2;
          while (1)
          {
            int v126 = (unsigned __int8 *)(result + 2);
            v299[0] = result + 2;
            unint64_t v127 = *(_DWORD **)(a1 + 240);
            if (v127 && (uint64_t v128 = *(int *)(a1 + 232), (int)v128 < *v127))
            {
              *(_DWORD *)(a1 + 232) = v128 + 1;
              uint64_t v129 = *(void *)&v127[2 * v128 + 2];
            }
            else
            {
              uint64_t v130 = sub_1449134(*v286);
              uint64_t v129 = sub_188CDC8((uint64_t)v286, (uint64_t)v130);
              int v126 = (unsigned __int8 *)v299[0];
            }
            uint64_t result = sub_1407C84(a3, v129, v126);
            v299[0] = result;
            if (!result) {
              return result;
            }
            if (*(void *)a3 <= (unint64_t)result || *(_WORD *)result != 698) {
              goto LABEL_537;
            }
          }
        case 0x28u:
          if (v10 != 66) {
            goto LABEL_529;
          }
          uint64_t result = v9 - 2;
          while (1)
          {
            uint64_t v131 = (unsigned __int8 *)(result + 2);
            v299[0] = result + 2;
            unint64_t v132 = *(_DWORD **)(a1 + 264);
            if (v132 && (uint64_t v133 = *(int *)(a1 + 256), (int)v133 < *v132))
            {
              *(_DWORD *)(a1 + 256) = v133 + 1;
              uint64_t v134 = *(void *)&v132[2 * v133 + 2];
            }
            else
            {
              unsigned int v135 = sub_14491B0(*v287);
              uint64_t v134 = sub_188CDC8((uint64_t)v287, (uint64_t)v135);
              uint64_t v131 = (unsigned __int8 *)v299[0];
            }
            uint64_t result = sub_1407D14(a3, v134, v131);
            v299[0] = result;
            if (!result) {
              return result;
            }
            if (*(void *)a3 <= (unint64_t)result || *(_WORD *)result != 706) {
              goto LABEL_537;
            }
          }
        case 0x29u:
          if (v10 != 72) {
            goto LABEL_529;
          }
          int v136 = v9 + 1;
          unint64_t v34 = *v9;
          if ((*v9 & 0x80000000) == 0) {
            goto LABEL_254;
          }
          int v137 = *v136;
          int v138 = v34 + (v137 << 7);
          unint64_t v34 = (v138 - 128);
          if (v137 < 0)
          {
            uint64_t result = (char *)sub_188C138((uint64_t)v9, (v138 - 128));
            v299[0] = result;
            if (!result) {
              return result;
            }
            unint64_t v34 = v264;
          }
          else
          {
            int v136 = v9 + 2;
LABEL_254:
            v299[0] = v136;
          }
          if (v34 <= 3)
          {
            *(_DWORD *)(a1 + 16) |= 0x4000000u;
            *(_DWORD *)(a1 + 636) = v34;
            goto LABEL_537;
          }
          if (*v281) {
            v279 = (std::string *)((*v281 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            v279 = (std::string *)sub_188DBD8(v281);
          }
          int v280 = 41;
          goto LABEL_581;
        case 0x2Au:
          if (v10 != 80) {
            goto LABEL_529;
          }
          *(_DWORD *)(a1 + 16) |= 0x10000000u;
          int v139 = v9 + 1;
          uint64_t v140 = *v9;
          if ((*v9 & 0x80000000) == 0) {
            goto LABEL_261;
          }
          int v141 = *v139;
          uint64_t v140 = v140 + (v141 << 7) - 128;
          if (v141 < 0)
          {
            uint64_t result = (char *)sub_188C138((uint64_t)v9, v140);
            v299[0] = result;
            *(unsigned char *)(a1 + 641) = v265 != 0;
            if (!result) {
              return result;
            }
          }
          else
          {
            int v139 = v9 + 2;
LABEL_261:
            v299[0] = v139;
            *(unsigned char *)(a1 + 641) = v140 != 0;
          }
          goto LABEL_537;
        case 0x2Bu:
          if (v10 != 88) {
            goto LABEL_529;
          }
          uint64_t v142 = v9 + 1;
          unint64_t v34 = *v9;
          if ((*v9 & 0x80000000) == 0) {
            goto LABEL_266;
          }
          int v143 = *v142;
          int v144 = v34 + (v143 << 7);
          unint64_t v34 = (v144 - 128);
          if (v143 < 0)
          {
            uint64_t result = (char *)sub_188C138((uint64_t)v9, (v144 - 128));
            v299[0] = result;
            if (!result) {
              return result;
            }
            unint64_t v34 = v266;
          }
          else
          {
            uint64_t v142 = v9 + 2;
LABEL_266:
            v299[0] = v142;
          }
          if (v34 <= 4)
          {
            *(_DWORD *)(a1 + 16) |= 0x80000000;
            *(_DWORD *)(a1 + 644) = v34;
            goto LABEL_537;
          }
          if (*v281) {
            v279 = (std::string *)((*v281 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            v279 = (std::string *)sub_188DBD8(v281);
          }
          int v280 = 43;
          goto LABEL_581;
        case 0x2Cu:
          if (v10 != 96) {
            goto LABEL_529;
          }
          *(_DWORD *)(a1 + 16) |= 0x20000000u;
          uint64_t v145 = v9 + 1;
          uint64_t v146 = *v9;
          if ((*v9 & 0x80000000) == 0) {
            goto LABEL_273;
          }
          int v147 = *v145;
          uint64_t v146 = v146 + (v147 << 7) - 128;
          if (v147 < 0)
          {
            uint64_t result = (char *)sub_188C138((uint64_t)v9, v146);
            v299[0] = result;
            *(unsigned char *)(a1 + 642) = v267 != 0;
            if (!result) {
              return result;
            }
          }
          else
          {
            uint64_t v145 = v9 + 2;
LABEL_273:
            v299[0] = v145;
            *(unsigned char *)(a1 + 642) = v146 != 0;
          }
          goto LABEL_537;
        case 0x2Du:
          if (v10 != 106) {
            goto LABEL_529;
          }
          uint64_t result = v9 - 2;
          while (1)
          {
            int v148 = (unsigned __int8 *)(result + 2);
            v299[0] = result + 2;
            uint64_t v149 = *(_DWORD **)(a1 + 288);
            if (v149 && (uint64_t v150 = *(int *)(a1 + 280), (int)v150 < *v149))
            {
              *(_DWORD *)(a1 + 280) = v150 + 1;
              uint64_t v151 = *(void *)&v149[2 * v150 + 2];
            }
            else
            {
              uint64_t v152 = sub_14490B8(*v288);
              uint64_t v151 = sub_188CDC8((uint64_t)v288, (uint64_t)v152);
              int v148 = (unsigned __int8 *)v299[0];
            }
            uint64_t result = sub_1407DA4(a3, v151, v148);
            v299[0] = result;
            if (!result) {
              return result;
            }
            if (*(void *)a3 <= (unint64_t)result || *(_WORD *)result != 746) {
              goto LABEL_537;
            }
          }
        case 0x2Eu:
          if (v10 != 112) {
            goto LABEL_529;
          }
          *(_DWORD *)(a1 + 16) |= 0x40000000u;
          uint64_t v153 = v9 + 1;
          uint64_t v154 = *v9;
          if ((*v9 & 0x80000000) == 0) {
            goto LABEL_288;
          }
          int v155 = *v153;
          uint64_t v154 = v154 + (v155 << 7) - 128;
          if (v155 < 0)
          {
            uint64_t result = (char *)sub_188C138((uint64_t)v9, v154);
            v299[0] = result;
            *(unsigned char *)(a1 + 643) = v268 != 0;
            if (!result) {
              return result;
            }
          }
          else
          {
            uint64_t v153 = v9 + 2;
LABEL_288:
            v299[0] = v153;
            *(unsigned char *)(a1 + 643) = v154 != 0;
          }
          goto LABEL_537;
        case 0x32u:
          if (v10 != 144) {
            goto LABEL_529;
          }
          uint64_t v156 = v9 + 1;
          unint64_t v34 = *v9;
          if ((*v9 & 0x80000000) == 0) {
            goto LABEL_293;
          }
          int v157 = *v156;
          int v158 = v34 + (v157 << 7);
          unint64_t v34 = (v158 - 128);
          if (v157 < 0)
          {
            uint64_t result = (char *)sub_188C138((uint64_t)v9, (v158 - 128));
            v299[0] = result;
            if (!result) {
              return result;
            }
            unint64_t v34 = v269;
          }
          else
          {
            uint64_t v156 = v9 + 2;
LABEL_293:
            v299[0] = v156;
          }
          if (v34 >> 1 == 4043)
          {
            *(_DWORD *)(a1 + 20) |= 0x40u;
            *(_DWORD *)(a1 + 664) = v34;
            goto LABEL_537;
          }
          if (*v281) {
            v279 = (std::string *)((*v281 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            v279 = (std::string *)sub_188DBD8(v281);
          }
          int v280 = 50;
          goto LABEL_581;
        case 0x33u:
          if (v10 == 153)
          {
            v159 = v9 - 2;
            unsigned int v160 = *v7;
            do
            {
              v161 = v159 + 2;
              v299[0] = v159 + 2;
              uint64_t v162 = *(void *)(v159 + 2);
              if (v160 == *(_DWORD *)(a1 + 300))
              {
                sub_188CA54((unsigned int *)(a1 + 296), v160 + 1);
                *(void *)(*(void *)(a1 + 304) + 8 * v160) = v162;
                v161 = v299[0];
              }
              else
              {
                *(void *)(*(void *)(a1 + 304) + 8 * v160) = v162;
              }
              unsigned int *v7 = ++v160;
              v159 = v161 + 8;
              v299[0] = v161 + 8;
            }
            while (*(void *)a3 > (unint64_t)(v161 + 8) && *(_WORD *)v159 == 921);
          }
          else
          {
            if (v10 == 154)
            {
              uint64_t result = (char *)sub_188C3D4(a1 + 296, v9, a3);
            }
            else
            {
LABEL_529:
              if (v10) {
                BOOL v276 = (v10 & 7) == 4;
              }
              else {
                BOOL v276 = 1;
              }
              if (v276)
              {
                if (!v9) {
                  return 0;
                }
                a3[10].i32[0] = v10 - 1;
                return v9;
              }
              if (*v281)
              {
                v277 = (std::string *)((*v281 & 0xFFFFFFFFFFFFFFFCLL) + 8);
              }
              else
              {
                v277 = (std::string *)sub_188DBD8(v281);
                int v9 = v299[0];
              }
              uint64_t result = (char *)sub_1885AC0(v10, v277, v9, a3);
            }
LABEL_536:
            v299[0] = result;
            if (!result) {
              return result;
            }
          }
LABEL_537:
          int v278 = sub_11947B8((uint64_t)a3, v299, a3[11].i32[1]);
          uint64_t result = v299[0];
          if (v278) {
            return result;
          }
          break;
        case 0x37u:
          if (v10 != 184) {
            goto LABEL_529;
          }
          *(_DWORD *)(a1 + 20) |= 1u;
          v164 = v9 + 1;
          LODWORD(v163) = *v9;
          if ((v163 & 0x80) == 0) {
            goto LABEL_308;
          }
          int v165 = *v164;
          uint64_t v163 = v163 + (v165 << 7) - 128;
          if (v165 < 0)
          {
            uint64_t result = (char *)sub_188C138((uint64_t)v9, v163);
            v299[0] = result;
            *(_DWORD *)(a1 + 648) = v270;
            if (!result) {
              return result;
            }
          }
          else
          {
            v164 = v9 + 2;
LABEL_308:
            v299[0] = v164;
            *(_DWORD *)(a1 + 648) = v163;
          }
          goto LABEL_537;
        case 0x3Cu:
          if (v10 != 226) {
            goto LABEL_529;
          }
          *(_DWORD *)(a1 + 16) |= 1u;
          uint64_t v166 = *(void *)(a1 + 8);
          v167 = (uint64_t *)(v166 & 0xFFFFFFFFFFFFFFFCLL);
          if (v166) {
            v167 = (uint64_t *)*v167;
          }
          v168 = (void *)(a1 + 552);
          goto LABEL_317;
        case 0x41u:
          if (v10 != 10) {
            goto LABEL_529;
          }
          *(_DWORD *)(a1 + 16) |= 2u;
          uint64_t v169 = *(void *)(a1 + 8);
          v167 = (uint64_t *)(v169 & 0xFFFFFFFFFFFFFFFCLL);
          if (v169) {
            v167 = (uint64_t *)*v167;
          }
          v168 = (void *)(a1 + 560);
LABEL_317:
          v170 = (std::string *)sub_1880F84(v168, v167);
          uint64_t result = (char *)sub_188C244(v170, v299[0], (uint64_t)a3);
          goto LABEL_536;
        case 0x46u:
          if (v10 != 48) {
            goto LABEL_529;
          }
          *(_DWORD *)(a1 + 20) |= 2u;
          v171 = v9 + 1;
          uint64_t v172 = *v9;
          if ((*v9 & 0x80000000) == 0) {
            goto LABEL_322;
          }
          int v173 = *v171;
          uint64_t v172 = v172 + (v173 << 7) - 128;
          if (v173 < 0)
          {
            uint64_t result = (char *)sub_188C138((uint64_t)v9, v172);
            v299[0] = result;
            *(unsigned char *)(a1 + 652) = v271 != 0;
            if (!result) {
              return result;
            }
          }
          else
          {
            v171 = v9 + 2;
LABEL_322:
            v299[0] = v171;
            *(unsigned char *)(a1 + 652) = v172 != 0;
          }
          goto LABEL_537;
        case 0x47u:
          if (v10 != 56) {
            goto LABEL_529;
          }
          *(_DWORD *)(a1 + 20) |= 4u;
          v174 = v9 + 1;
          uint64_t v175 = *v9;
          if ((*v9 & 0x80000000) == 0) {
            goto LABEL_327;
          }
          int v176 = *v174;
          uint64_t v175 = v175 + (v176 << 7) - 128;
          if (v176 < 0)
          {
            uint64_t result = (char *)sub_188C138((uint64_t)v9, v175);
            v299[0] = result;
            *(unsigned char *)(a1 + 653) = v272 != 0;
            if (!result) {
              return result;
            }
          }
          else
          {
            v174 = v9 + 2;
LABEL_327:
            v299[0] = v174;
            *(unsigned char *)(a1 + 653) = v175 != 0;
          }
          goto LABEL_537;
        case 0x48u:
          if (v10 != 64) {
            goto LABEL_529;
          }
          *(_DWORD *)(a1 + 20) |= 8u;
          v177 = v9 + 1;
          uint64_t v178 = *v9;
          if ((*v9 & 0x80000000) == 0) {
            goto LABEL_332;
          }
          int v179 = *v177;
          uint64_t v178 = v178 + (v179 << 7) - 128;
          if (v179 < 0)
          {
            uint64_t result = (char *)sub_188C138((uint64_t)v9, v178);
            v299[0] = result;
            *(unsigned char *)(a1 + 654) = v273 != 0;
            if (!result) {
              return result;
            }
          }
          else
          {
            v177 = v9 + 2;
LABEL_332:
            v299[0] = v177;
            *(unsigned char *)(a1 + 654) = v178 != 0;
          }
          goto LABEL_537;
        case 0x4Bu:
          if (v10 != 90) {
            goto LABEL_529;
          }
          uint64_t result = v9 - 2;
          while (1)
          {
            v180 = (unsigned __int8 *)(result + 2);
            v299[0] = result + 2;
            v181 = *(_DWORD **)(a1 + 328);
            if (v181 && (uint64_t v182 = *(int *)(a1 + 320), (int)v182 < *v181))
            {
              *(_DWORD *)(a1 + 320) = v182 + 1;
              uint64_t v183 = *(void *)&v181[2 * v182 + 2];
            }
            else
            {
              uint64_t v184 = sub_144922C(*v289);
              uint64_t v183 = sub_188CDC8((uint64_t)v289, v184);
              v180 = (unsigned __int8 *)v299[0];
            }
            uint64_t result = sub_1407E34(a3, v183, v180);
            v299[0] = result;
            if (!result) {
              return result;
            }
            if (*(void *)a3 <= (unint64_t)result || *(_WORD *)result != 1242) {
              goto LABEL_537;
            }
          }
        case 0x50u:
          if (v10 != 130) {
            goto LABEL_529;
          }
          uint64_t result = v9 - 2;
          while (1)
          {
            v185 = (unsigned __int8 *)(result + 2);
            v299[0] = result + 2;
            v186 = *(_DWORD **)(a1 + 352);
            if (v186 && (uint64_t v187 = *(int *)(a1 + 344), (int)v187 < *v186))
            {
              *(_DWORD *)(a1 + 344) = v187 + 1;
              uint64_t v188 = *(void *)&v186[2 * v187 + 2];
            }
            else
            {
              v189 = sub_14492B0(*v290);
              uint64_t v188 = sub_188CDC8((uint64_t)v290, (uint64_t)v189);
              v185 = (unsigned __int8 *)v299[0];
            }
            uint64_t result = (char *)sub_1407EC4(a3, v188, v185);
            v299[0] = result;
            if (!result) {
              return result;
            }
            if (*(void *)a3 <= (unint64_t)result || *(_WORD *)result != 1410) {
              goto LABEL_537;
            }
          }
        case 0x51u:
          if (v10 != 136) {
            goto LABEL_529;
          }
          v190 = v9 + 1;
          unint64_t v34 = *v9;
          if ((*v9 & 0x80000000) == 0) {
            goto LABEL_357;
          }
          int v191 = *v190;
          int v192 = v34 + (v191 << 7);
          unint64_t v34 = (v192 - 128);
          if (v191 < 0)
          {
            uint64_t result = (char *)sub_188C138((uint64_t)v9, (v192 - 128));
            v299[0] = result;
            if (!result) {
              return result;
            }
            unint64_t v34 = v274;
          }
          else
          {
            v190 = v9 + 2;
LABEL_357:
            v299[0] = v190;
          }
          if (v34 <= 4)
          {
            *(_DWORD *)(a1 + 20) |= 0x10u;
            *(_DWORD *)(a1 + 656) = v34;
            goto LABEL_537;
          }
          if (*v281) {
            v279 = (std::string *)((*v281 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            v279 = (std::string *)sub_188DBD8(v281);
          }
          int v280 = 81;
          goto LABEL_581;
        case 0x52u:
          if (v10 != 146) {
            goto LABEL_529;
          }
          uint64_t result = v9 - 2;
          while (1)
          {
            v230 = (unsigned __int8 *)(result + 2);
            v299[0] = result + 2;
            v231 = *(_DWORD **)(a1 + 376);
            if (v231 && (uint64_t v232 = *(int *)(a1 + 368), (int)v232 < *v231))
            {
              *(_DWORD *)(a1 + 368) = v232 + 1;
              uint64_t v233 = *(void *)&v231[2 * v232 + 2];
            }
            else
            {
              uint64_t v234 = sub_1449334(*v291);
              uint64_t v233 = sub_188CDC8((uint64_t)v291, v234);
              v230 = (unsigned __int8 *)v299[0];
            }
            uint64_t result = sub_1407F54(a3, v233, v230);
            v299[0] = result;
            if (!result) {
              return result;
            }
            if (*(void *)a3 <= (unint64_t)result || *(_WORD *)result != 1426) {
              goto LABEL_537;
            }
          }
        case 0x53u:
          if (v10 != 154) {
            goto LABEL_529;
          }
          uint64_t result = v9 - 2;
          while (1)
          {
            v193 = (unsigned __int8 *)(result + 2);
            v299[0] = result + 2;
            v194 = *(_DWORD **)(a1 + 400);
            if (v194 && (uint64_t v195 = *(int *)(a1 + 392), (int)v195 < *v194))
            {
              *(_DWORD *)(a1 + 392) = v195 + 1;
              uint64_t v196 = *(void *)&v194[2 * v195 + 2];
            }
            else
            {
              uint64_t v197 = sub_14493B8(*v292);
              uint64_t v196 = sub_188CDC8((uint64_t)v292, v197);
              v193 = (unsigned __int8 *)v299[0];
            }
            uint64_t result = sub_1407FE4(a3, v196, v193);
            v299[0] = result;
            if (!result) {
              return result;
            }
            if (*(void *)a3 <= (unint64_t)result || *(_WORD *)result != 1434) {
              goto LABEL_537;
            }
          }
        case 0x54u:
          if (v10 != 162) {
            goto LABEL_529;
          }
          uint64_t result = v9 - 2;
          while (1)
          {
            v198 = (unsigned __int8 *)(result + 2);
            v299[0] = result + 2;
            v199 = *(_DWORD **)(a1 + 424);
            if (v199 && (uint64_t v200 = *(int *)(a1 + 416), (int)v200 < *v199))
            {
              *(_DWORD *)(a1 + 416) = v200 + 1;
              uint64_t v201 = *(void *)&v199[2 * v200 + 2];
            }
            else
            {
              uint64_t v202 = sub_144943C(*v293);
              uint64_t v201 = sub_188CDC8((uint64_t)v293, v202);
              v198 = (unsigned __int8 *)v299[0];
            }
            uint64_t result = sub_1408074(a3, v201, v198);
            v299[0] = result;
            if (!result) {
              return result;
            }
            if (*(void *)a3 <= (unint64_t)result || *(_WORD *)result != 1442) {
              goto LABEL_537;
            }
          }
        case 0x55u:
          if (v10 != 170) {
            goto LABEL_529;
          }
          uint64_t result = v9 - 2;
          while (1)
          {
            v203 = result + 2;
            v299[0] = result + 2;
            v204 = *(_DWORD **)(a1 + 448);
            if (v204 && (uint64_t v205 = *(int *)(a1 + 440), (int)v205 < *v204))
            {
              *(_DWORD *)(a1 + 440) = v205 + 1;
              v206 = *(std::string **)&v204[2 * v205 + 2];
            }
            else
            {
              if (!*v297) {
                operator new();
              }
              void *v208 = v207;
              v208[1] = sub_3A6EDC;
              void *v207 = 0;
              v207[1] = 0;
              v207[2] = 0;
              v206 = (std::string *)sub_188CDC8((uint64_t)v297, (uint64_t)v207);
              v203 = v299[0];
            }
            uint64_t result = (char *)sub_188C244(v206, v203, (uint64_t)a3);
            v299[0] = result;
            if (!result) {
              return result;
            }
            if (*(void *)a3 <= (unint64_t)result || *(_WORD *)result != 1450) {
              goto LABEL_537;
            }
          }
        case 0x56u:
          if (v10 != 178) {
            goto LABEL_529;
          }
          uint64_t result = v9 - 2;
          while (1)
          {
            v209 = (unsigned __int8 *)(result + 2);
            v299[0] = result + 2;
            v210 = *(_DWORD **)(a1 + 472);
            if (v210 && (uint64_t v211 = *(int *)(a1 + 464), (int)v211 < *v210))
            {
              *(_DWORD *)(a1 + 464) = v211 + 1;
              uint64_t v212 = *(void *)&v210[2 * v211 + 2];
            }
            else
            {
              uint64_t v213 = sub_14494C0(*v294);
              uint64_t v212 = sub_188CDC8((uint64_t)v294, v213);
              v209 = (unsigned __int8 *)v299[0];
            }
            uint64_t result = sub_1408104(a3, v212, v209);
            v299[0] = result;
            if (!result) {
              return result;
            }
            if (*(void *)a3 <= (unint64_t)result || *(_WORD *)result != 1458) {
              goto LABEL_537;
            }
          }
        case 0x57u:
          if (v10 != 186) {
            goto LABEL_529;
          }
          *(_DWORD *)(a1 + 16) |= 8u;
          uint64_t v214 = *(void *)(a1 + 576);
          if (!v214)
          {
            v215 = (void *)(*v281 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v281) {
              v215 = (void *)*v215;
            }
            sub_1449964((uint64_t)v215);
            uint64_t v214 = v216;
            *(void *)(a1 + 576) = v216;
            int v9 = v299[0];
          }
          uint64_t result = (char *)sub_1408194(a3, v214, (unsigned __int8 *)v9);
          goto LABEL_536;
        case 0x58u:
          if (v10 != 194) {
            goto LABEL_529;
          }
          uint64_t result = v9 - 2;
          while (1)
          {
            v217 = (unsigned __int8 *)(result + 2);
            v299[0] = result + 2;
            v218 = *(_DWORD **)(a1 + 496);
            if (v218 && (uint64_t v219 = *(int *)(a1 + 488), (int)v219 < *v218))
            {
              *(_DWORD *)(a1 + 488) = v219 + 1;
              uint64_t v220 = *(void *)&v218[2 * v219 + 2];
            }
            else
            {
              sub_1449B48(*v295);
              uint64_t v220 = sub_188CDC8((uint64_t)v295, v221);
              v217 = (unsigned __int8 *)v299[0];
            }
            uint64_t result = (char *)sub_1408224(a3, v220, v217);
            v299[0] = result;
            if (!result) {
              return result;
            }
            if (*(void *)a3 <= (unint64_t)result || *(_WORD *)result != 1474) {
              goto LABEL_537;
            }
          }
        case 0x59u:
          if (v10 != 200) {
            goto LABEL_529;
          }
          v222 = v9 + 1;
          unint64_t v34 = *v9;
          if ((*v9 & 0x80000000) == 0) {
            goto LABEL_422;
          }
          int v223 = *v222;
          int v224 = v34 + (v223 << 7);
          unint64_t v34 = (v224 - 128);
          if (v223 < 0)
          {
            uint64_t result = (char *)sub_188C138((uint64_t)v9, (v224 - 128));
            v299[0] = result;
            if (!result) {
              return result;
            }
            unint64_t v34 = v275;
          }
          else
          {
            v222 = v9 + 2;
LABEL_422:
            v299[0] = v222;
          }
          if (v34 > 2)
          {
            if (*v281) {
              v279 = (std::string *)((*v281 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else {
              v279 = (std::string *)sub_188DBD8(v281);
            }
            int v280 = 89;
LABEL_581:
            sub_188C020(v280, v34, v279);
          }
          else
          {
            *(_DWORD *)(a1 + 20) |= 0x20u;
            *(_DWORD *)(a1 + 660) = v34;
          }
          goto LABEL_537;
        case 0x5Au:
          if (v10 != 210) {
            goto LABEL_529;
          }
          uint64_t result = v9 - 2;
          while (1)
          {
            v235 = result + 2;
            v299[0] = result + 2;
            v236 = *(_DWORD **)(a1 + 520);
            if (v236 && (uint64_t v237 = *(int *)(a1 + 512), (int)v237 < *v236))
            {
              *(_DWORD *)(a1 + 512) = v237 + 1;
              v238 = *(std::string **)&v236[2 * v237 + 2];
            }
            else
            {
              if (!*v298) {
                operator new();
              }
              void *v240 = v239;
              v240[1] = sub_3A6EDC;
              void *v239 = 0;
              v239[1] = 0;
              v239[2] = 0;
              v238 = (std::string *)sub_188CDC8((uint64_t)v298, (uint64_t)v239);
              v235 = v299[0];
            }
            uint64_t result = (char *)sub_188C244(v238, v235, (uint64_t)a3);
            v299[0] = result;
            if (!result) {
              return result;
            }
            if (*(void *)a3 <= (unint64_t)result || *(_WORD *)result != 1490) {
              goto LABEL_537;
            }
          }
        case 0x5Bu:
          if (v10 != 218) {
            goto LABEL_529;
          }
          uint64_t result = v9 - 2;
          while (1)
          {
            v225 = (unsigned __int8 *)(result + 2);
            v299[0] = result + 2;
            v226 = *(_DWORD **)(a1 + 544);
            if (v226 && (uint64_t v227 = *(int *)(a1 + 536), (int)v227 < *v226))
            {
              *(_DWORD *)(a1 + 536) = v227 + 1;
              uint64_t v228 = *(void *)&v226[2 * v227 + 2];
            }
            else
            {
              v229 = sub_1449C9C(*v296);
              uint64_t v228 = sub_188CDC8((uint64_t)v296, (uint64_t)v229);
              v225 = (unsigned __int8 *)v299[0];
            }
            uint64_t result = (char *)sub_14082B4(a3, v228, v225);
            v299[0] = result;
            if (!result) {
              return result;
            }
            if (*(void *)a3 <= (unint64_t)result || *(_WORD *)result != 1498) {
              goto LABEL_537;
            }
          }
        default:
          goto LABEL_529;
      }
    }
  }
  return result;
}

char *sub_14079B4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_13F7628(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1407A44(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_13F7B50(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1407AD4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_13F8070(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1407B64(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_13F8590(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1407BF4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_13F8AB0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1407C84(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_13F94F0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1407D14(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_13F9A10(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1407DA4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_13F8FD0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1407E34(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_13F9F34(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_1407EC4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_13FA4EC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1407F54(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_13FA95C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1407FE4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_13FAE80(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1408074(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_13FB3A4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1408104(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_13FB8C8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_1408194(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_13FFDB8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_1408224(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_140262C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_14082B4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1404474(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1408344(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 0x80) != 0)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    char v7 = *(unsigned char *)(a1 + 596);
    char *v4 = 40;
    v4[1] = v7;
    v4 += 2;
  }
  uint64_t v8 = *(unsigned int *)(a1 + 40);
  if ((int)v8 >= 1)
  {
    uint64_t v9 = 0;
    uint64_t v10 = 8 * v8;
    do
    {
      unsigned int v11 = *(void **)(*(void *)(a1 + 48) + v9 + 8);
      if (*((char *)v11 + 23) < 0)
      {
        int64_t v12 = v11[1];
        if (v12 > 127) {
          goto LABEL_16;
        }
      }
      else
      {
        int64_t v12 = *((unsigned __int8 *)v11 + 23);
      }
      if ((uint64_t)(*a3 - (void)v4 + 14) >= v12)
      {
        char *v4 = 50;
        v4[1] = v12;
        if (*((char *)v11 + 23) < 0) {
          unsigned int v11 = (void *)*v11;
        }
        uint64_t v13 = v4 + 2;
        memcpy(v13, v11, v12);
        uint64_t v4 = &v13[v12];
        goto LABEL_14;
      }
LABEL_16:
      uint64_t v4 = (char *)sub_188A868(a3, 6, (uint64_t)v11, v4);
LABEL_14:
      v9 += 8;
    }
    while (v10 != v9);
  }
  if ((v6 & 0x100) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v14 = *(unsigned char *)(a1 + 597);
    char *v4 = 56;
    v4[1] = v14;
    v4 += 2;
  }
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v15 = *(int *)(a1 + 584);
    char *v4 = 64;
    v4[1] = v15;
    if (v15 > 0x7F)
    {
      v4[1] = v15 | 0x80;
      unint64_t v16 = v15 >> 7;
      v4[2] = v15 >> 7;
      v4 += 3;
      if (v15 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v17 = v16 >> 14;
          v16 >>= 7;
          *v4++ = v16;
        }
        while (v17);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v18 = *(_DWORD *)(a1 + 64);
  if (v18)
  {
    for (int i = 0; i != v18; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v20 = *(void *)(*(void *)(a1 + 72) + 8 * i + 8);
      char *v4 = 74;
      unsigned int v21 = *(_DWORD *)(v20 + 20);
      v4[1] = v21;
      if (v21 > 0x7F) {
        uint64_t v22 = sub_188A9CC(v21, v4 + 1);
      }
      else {
        uint64_t v22 = v4 + 2;
      }
      uint64_t v4 = sub_13F7874(v20, (unint64_t)v22, a3);
    }
  }
  if ((v6 & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v23 = *(int *)(a1 + 588);
    char *v4 = 80;
    v4[1] = v23;
    if (v23 > 0x7F)
    {
      v4[1] = v23 | 0x80;
      unint64_t v24 = v23 >> 7;
      v4[2] = v23 >> 7;
      v4 += 3;
      if (v23 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v25 = v24 >> 14;
          v24 >>= 7;
          *v4++ = v24;
        }
        while (v25);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x40) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v26 = *(int *)(a1 + 592);
    char *v4 = 88;
    v4[1] = v26;
    if (v26 > 0x7F)
    {
      v4[1] = v26 | 0x80;
      unint64_t v27 = v26 >> 7;
      v4[2] = v26 >> 7;
      v4 += 3;
      if (v26 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v28 = v27 >> 14;
          v27 >>= 7;
          *v4++ = v27;
        }
        while (v28);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x200) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v29 = *(unsigned char *)(a1 + 598);
    char *v4 = 96;
    v4[1] = v29;
    v4 += 2;
  }
  if ((v6 & 0x800) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v30 = *(int *)(a1 + 600);
    char *v4 = 104;
    v4[1] = v30;
    if (v30 > 0x7F)
    {
      v4[1] = v30 | 0x80;
      unint64_t v31 = v30 >> 7;
      v4[2] = v30 >> 7;
      v4 += 3;
      if (v30 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v32 = v31 >> 14;
          v31 >>= 7;
          *v4++ = v31;
        }
        while (v32);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x1000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v33 = *(int *)(a1 + 604);
    char *v4 = 112;
    v4[1] = v33;
    if (v33 > 0x7F)
    {
      v4[1] = v33 | 0x80;
      unint64_t v34 = v33 >> 7;
      v4[2] = v33 >> 7;
      v4 += 3;
      if (v33 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v35 = v34 >> 14;
          v34 >>= 7;
          *v4++ = v34;
        }
        while (v35);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v36 = *(void *)(a1 + 568);
    char *v4 = 122;
    unsigned int v37 = *(_DWORD *)(v36 + 20);
    v4[1] = v37;
    if (v37 > 0x7F) {
      int v38 = sub_188A9CC(v37, v4 + 1);
    }
    else {
      int v38 = v4 + 2;
    }
    uint64_t v4 = sub_13F7D94(v36, (unint64_t)v38, a3);
  }
  if ((v6 & 0x2000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v39 = *(int *)(a1 + 608);
    *(_WORD *)uint64_t v4 = 384;
    v4[2] = v39;
    if (v39 > 0x7F)
    {
      v4[2] = v39 | 0x80;
      unint64_t v40 = v39 >> 7;
      v4[3] = v39 >> 7;
      v4 += 4;
      if (v39 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v41 = v40 >> 14;
          v40 >>= 7;
          *v4++ = v40;
        }
        while (v41);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if ((v6 & 0x4000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v42 = *(int *)(a1 + 612);
    *(_WORD *)uint64_t v4 = 392;
    v4[2] = v42;
    if (v42 > 0x7F)
    {
      v4[2] = v42 | 0x80;
      unint64_t v43 = v42 >> 7;
      v4[3] = v42 >> 7;
      v4 += 4;
      if (v42 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v44 = v43 >> 14;
          v43 >>= 7;
          *v4++ = v43;
        }
        while (v44);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  int v45 = *(_DWORD *)(a1 + 88);
  if (v45)
  {
    for (int j = 0; j != v45; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v47 = *(void *)(*(void *)(a1 + 96) + 8 * j + 8);
      *(_WORD *)uint64_t v4 = 402;
      unsigned int v48 = *(_DWORD *)(v47 + 56);
      v4[2] = v48;
      if (v48 > 0x7F) {
        uint64_t v49 = sub_188A9CC(v48, v4 + 2);
      }
      else {
        uint64_t v49 = v4 + 3;
      }
      uint64_t v4 = sub_14536EC(v47, v49, a3);
    }
  }
  int v50 = *(_DWORD *)(a1 + 112);
  if (v50)
  {
    for (int k = 0; k != v50; ++k)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v52 = *(void *)(*(void *)(a1 + 120) + 8 * k + 8);
      *(_WORD *)uint64_t v4 = 410;
      unsigned int v53 = *(_DWORD *)(v52 + 56);
      v4[2] = v53;
      if (v53 > 0x7F) {
        uint64_t v54 = sub_188A9CC(v53, v4 + 2);
      }
      else {
        uint64_t v54 = v4 + 3;
      }
      uint64_t v4 = sub_14536EC(v52, v54, a3);
    }
  }
  int v55 = *(_DWORD *)(a1 + 136);
  if (v55)
  {
    for (int m = 0; m != v55; ++m)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v57 = *(void *)(*(void *)(a1 + 144) + 8 * m + 8);
      *(_WORD *)uint64_t v4 = 418;
      unsigned int v58 = *(_DWORD *)(v57 + 20);
      v4[2] = v58;
      if (v58 > 0x7F) {
        uint64_t v59 = sub_188A9CC(v58, v4 + 2);
      }
      else {
        uint64_t v59 = v4 + 3;
      }
      uint64_t v4 = sub_13F82B4(v57, (unint64_t)v59, a3);
    }
  }
  if ((v6 & 0x400) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v60 = *(unsigned char *)(a1 + 599);
    *(_WORD *)uint64_t v4 = 424;
    v4[2] = v60;
    v4 += 3;
    if ((v6 & 0x10000) == 0)
    {
LABEL_115:
      if ((v6 & 0x20000) == 0) {
        goto LABEL_116;
      }
      goto LABEL_124;
    }
  }
  else if ((v6 & 0x10000) == 0)
  {
    goto LABEL_115;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v61 = *(unsigned char *)(a1 + 620);
  *(_WORD *)uint64_t v4 = 432;
  v4[2] = v61;
  v4 += 3;
  if ((v6 & 0x20000) == 0)
  {
LABEL_116:
    if ((v6 & 0x8000) == 0) {
      goto LABEL_133;
    }
    goto LABEL_127;
  }
LABEL_124:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v62 = *(unsigned char *)(a1 + 621);
  *(_WORD *)uint64_t v4 = 440;
  v4[2] = v62;
  v4 += 3;
  if ((v6 & 0x8000) != 0)
  {
LABEL_127:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v63 = *(int *)(a1 + 616);
    *(_WORD *)uint64_t v4 = 448;
    v4[2] = v63;
    if (v63 > 0x7F)
    {
      v4[2] = v63 | 0x80;
      unint64_t v64 = v63 >> 7;
      v4[3] = v63 >> 7;
      v4 += 4;
      if (v63 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v65 = v64 >> 14;
          v64 >>= 7;
          *v4++ = v64;
        }
        while (v65);
      }
    }
    else
    {
      v4 += 3;
    }
  }
LABEL_133:
  if ((v6 & 0x40000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v66 = *(unsigned char *)(a1 + 622);
    *(_WORD *)uint64_t v4 = 456;
    v4[2] = v66;
    v4 += 3;
    if ((v6 & 0x80000) == 0)
    {
LABEL_135:
      if ((v6 & 0x100000) == 0) {
        goto LABEL_146;
      }
      goto LABEL_143;
    }
  }
  else if ((v6 & 0x80000) == 0)
  {
    goto LABEL_135;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v67 = *(unsigned char *)(a1 + 623);
  *(_WORD *)uint64_t v4 = 464;
  v4[2] = v67;
  v4 += 3;
  if ((v6 & 0x100000) != 0)
  {
LABEL_143:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v68 = *(unsigned char *)(a1 + 624);
    *(_WORD *)uint64_t v4 = 472;
    v4[2] = v68;
    v4 += 3;
  }
LABEL_146:
  int v69 = *(_DWORD *)(a1 + 160);
  if (v69)
  {
    for (int n = 0; n != v69; ++n)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v71 = *(void *)(*(void *)(a1 + 168) + 8 * n + 8);
      *(_WORD *)uint64_t v4 = 482;
      unsigned int v72 = *(_DWORD *)(v71 + 20);
      v4[2] = v72;
      if (v72 > 0x7F) {
        uint64_t v73 = sub_188A9CC(v72, v4 + 2);
      }
      else {
        uint64_t v73 = v4 + 3;
      }
      uint64_t v4 = sub_13F87D4(v71, (unint64_t)v73, a3);
    }
  }
  int v74 = *(_DWORD *)(a1 + 184);
  if (v74)
  {
    for (iint i = 0; ii != v74; ++ii)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v76 = *(void *)(*(void *)(a1 + 192) + 8 * ii + 8);
      *(_WORD *)uint64_t v4 = 490;
      unsigned int v77 = *(_DWORD *)(v76 + 20);
      v4[2] = v77;
      if (v77 > 0x7F) {
        uint64_t v78 = sub_188A9CC(v77, v4 + 2);
      }
      else {
        uint64_t v78 = v4 + 3;
      }
      uint64_t v4 = sub_13F8CF4(v76, (unint64_t)v78, a3);
    }
  }
  if ((v6 & 0x200000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v79 = *(unsigned char *)(a1 + 625);
    *(_WORD *)uint64_t v4 = 496;
    v4[2] = v79;
    v4 += 3;
  }
  int v80 = *(_DWORD *)(a1 + 208);
  if (v80)
  {
    for (jint j = 0; jj != v80; ++jj)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v82 = *(void *)(*(void *)(a1 + 216) + 8 * jj + 8);
      *(_WORD *)uint64_t v4 = 506;
      unsigned int v83 = *(_DWORD *)(v82 + 56);
      v4[2] = v83;
      if (v83 > 0x7F) {
        std::string::size_type v84 = sub_188A9CC(v83, v4 + 2);
      }
      else {
        std::string::size_type v84 = v4 + 3;
      }
      uint64_t v4 = sub_14536EC(v82, v84, a3);
    }
  }
  if ((v6 & 0x400000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v85 = *(unsigned char *)(a1 + 626);
    *(_WORD *)uint64_t v4 = 640;
    v4[2] = v85;
    v4 += 3;
  }
  if ((v6 & 0x1000000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v86 = *(int *)(a1 + 628);
    *(_WORD *)uint64_t v4 = 656;
    v4[2] = v86;
    if (v86 > 0x7F)
    {
      v4[2] = v86 | 0x80;
      unint64_t v87 = v86 >> 7;
      v4[3] = v86 >> 7;
      v4 += 4;
      if (v86 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v88 = v87 >> 14;
          v87 >>= 7;
          *v4++ = v87;
        }
        while (v88);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if ((v6 & 0x800000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v89 = *(unsigned char *)(a1 + 627);
    *(_WORD *)uint64_t v4 = 664;
    v4[2] = v89;
    v4 += 3;
  }
  if ((v6 & 0x2000000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v90 = *(int *)(a1 + 632);
    *(_WORD *)uint64_t v4 = 672;
    v4[2] = v90;
    if (v90 > 0x7F)
    {
      v4[2] = v90 | 0x80;
      unint64_t v91 = v90 >> 7;
      v4[3] = v90 >> 7;
      v4 += 4;
      if (v90 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v92 = v91 >> 14;
          v91 >>= 7;
          *v4++ = v91;
        }
        while (v92);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if ((v6 & 0x8000000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v93 = *(unsigned char *)(a1 + 640);
    *(_WORD *)uint64_t v4 = 688;
    v4[2] = v93;
    v4 += 3;
  }
  int v94 = *(_DWORD *)(a1 + 232);
  if (v94)
  {
    for (kint k = 0; kk != v94; ++kk)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v96 = *(void *)(*(void *)(a1 + 240) + 8 * kk + 8);
      *(_WORD *)uint64_t v4 = 698;
      unsigned int v97 = *(_DWORD *)(v96 + 20);
      v4[2] = v97;
      if (v97 > 0x7F) {
        uint64_t v98 = sub_188A9CC(v97, v4 + 2);
      }
      else {
        uint64_t v98 = v4 + 3;
      }
      uint64_t v4 = sub_13F9734(v96, (unint64_t)v98, a3);
    }
  }
  int v99 = *(_DWORD *)(a1 + 256);
  if (v99)
  {
    for (mint m = 0; mm != v99; ++mm)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v101 = *(void *)(*(void *)(a1 + 264) + 8 * mm + 8);
      *(_WORD *)uint64_t v4 = 706;
      unsigned int v102 = *(_DWORD *)(v101 + 20);
      v4[2] = v102;
      if (v102 > 0x7F) {
        uint64_t v103 = sub_188A9CC(v102, v4 + 2);
      }
      else {
        uint64_t v103 = v4 + 3;
      }
      uint64_t v4 = sub_13F9C54(v101, (unint64_t)v103, a3);
    }
  }
  if ((v6 & 0x4000000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v104 = *(int *)(a1 + 636);
    *(_WORD *)uint64_t v4 = 712;
    v4[2] = v104;
    if (v104 > 0x7F)
    {
      v4[2] = v104 | 0x80;
      unint64_t v105 = v104 >> 7;
      v4[3] = v104 >> 7;
      v4 += 4;
      if (v104 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v106 = v105 >> 14;
          v105 >>= 7;
          *v4++ = v105;
        }
        while (v106);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if ((v6 & 0x10000000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v107 = *(unsigned char *)(a1 + 641);
    *(_WORD *)uint64_t v4 = 720;
    v4[2] = v107;
    v4 += 3;
  }
  if (v6 < 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v108 = *(int *)(a1 + 644);
    *(_WORD *)uint64_t v4 = 728;
    v4[2] = v108;
    if (v108 > 0x7F)
    {
      v4[2] = v108 | 0x80;
      unint64_t v109 = v108 >> 7;
      v4[3] = v108 >> 7;
      v4 += 4;
      if (v108 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v110 = v109 >> 14;
          v109 >>= 7;
          *v4++ = v109;
        }
        while (v110);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if ((v6 & 0x20000000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v111 = *(unsigned char *)(a1 + 642);
    *(_WORD *)uint64_t v4 = 736;
    v4[2] = v111;
    v4 += 3;
  }
  int v112 = *(_DWORD *)(a1 + 280);
  if (v112)
  {
    for (nint n = 0; nn != v112; ++nn)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v114 = *(void *)(*(void *)(a1 + 288) + 8 * nn + 8);
      *(_WORD *)uint64_t v4 = 746;
      unsigned int v115 = *(_DWORD *)(v114 + 20);
      v4[2] = v115;
      if (v115 > 0x7F) {
        int v116 = sub_188A9CC(v115, v4 + 2);
      }
      else {
        int v116 = v4 + 3;
      }
      uint64_t v4 = sub_13F9214(v114, (unint64_t)v116, a3);
    }
  }
  if ((v6 & 0x40000000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v117 = *(unsigned char *)(a1 + 643);
    *(_WORD *)uint64_t v4 = 752;
    v4[2] = v117;
    v4 += 3;
  }
  int v118 = *(_DWORD *)(a1 + 20);
  if ((v118 & 0x40) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v119 = *(int *)(a1 + 664);
    *(_WORD *)uint64_t v4 = 912;
    v4[2] = v119;
    if (v119 > 0x7F)
    {
      v4[2] = v119 | 0x80;
      unint64_t v120 = v119 >> 7;
      v4[3] = v119 >> 7;
      v4 += 4;
      if (v119 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v121 = v120 >> 14;
          v120 >>= 7;
          *v4++ = v120;
        }
        while (v121);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  uint64_t v122 = *(unsigned int *)(a1 + 296);
  if ((int)v122 >= 1)
  {
    uint64_t v123 = 0;
    uint64_t v124 = 8 * v122;
    do
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v125 = *(void *)(*(void *)(a1 + 304) + v123);
      *(_WORD *)uint64_t v4 = 921;
      *(void *)(v4 + 2) = v125;
      v4 += 10;
      v123 += 8;
    }
    while (v124 != v123);
  }
  if (v118)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v126 = *(int *)(a1 + 648);
    *(_WORD *)uint64_t v4 = 952;
    v4[2] = v126;
    if (v126 > 0x7F)
    {
      v4[2] = v126 | 0x80;
      unint64_t v127 = v126 >> 7;
      v4[3] = v126 >> 7;
      v4 += 4;
      if (v126 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v128 = v127 >> 14;
          v127 >>= 7;
          *v4++ = v127;
        }
        while (v128);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  int v129 = *(_DWORD *)(a1 + 16);
  if (v129) {
    uint64_t v4 = sub_117A0AC(a3, 60, (const void **)(*(void *)(a1 + 552) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  if ((v129 & 2) != 0) {
    uint64_t v4 = sub_117A0AC(a3, 65, (const void **)(*(void *)(a1 + 560) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  int v130 = *(_DWORD *)(a1 + 20);
  if ((v130 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v131 = *(unsigned char *)(a1 + 652);
    *(_WORD *)uint64_t v4 = 1200;
    v4[2] = v131;
    v4 += 3;
    if ((v130 & 4) == 0)
    {
LABEL_275:
      if ((v130 & 8) == 0) {
        goto LABEL_286;
      }
      goto LABEL_283;
    }
  }
  else if ((v130 & 4) == 0)
  {
    goto LABEL_275;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v132 = *(unsigned char *)(a1 + 653);
  *(_WORD *)uint64_t v4 = 1208;
  v4[2] = v132;
  v4 += 3;
  if ((v130 & 8) != 0)
  {
LABEL_283:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v133 = *(unsigned char *)(a1 + 654);
    *(_WORD *)uint64_t v4 = 1216;
    v4[2] = v133;
    v4 += 3;
  }
LABEL_286:
  int v134 = *(_DWORD *)(a1 + 320);
  if (v134)
  {
    for (int i1 = 0; i1 != v134; ++i1)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v136 = *(void *)(*(void *)(a1 + 328) + 8 * i1 + 8);
      *(_WORD *)uint64_t v4 = 1242;
      unsigned int v137 = *(_DWORD *)(v136 + 20);
      v4[2] = v137;
      if (v137 > 0x7F) {
        int v138 = sub_188A9CC(v137, v4 + 2);
      }
      else {
        int v138 = v4 + 3;
      }
      uint64_t v4 = sub_13FA180(v136, (unint64_t)v138, a3);
    }
  }
  int v139 = *(_DWORD *)(a1 + 344);
  if (v139)
  {
    for (int i2 = 0; i2 != v139; ++i2)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v141 = *(void *)(*(void *)(a1 + 352) + 8 * i2 + 8);
      *(_WORD *)uint64_t v4 = 1410;
      unsigned int v142 = *(_DWORD *)(v141 + 20);
      v4[2] = v142;
      if (v142 > 0x7F) {
        int v143 = sub_188A9CC(v142, v4 + 2);
      }
      else {
        int v143 = v4 + 3;
      }
      uint64_t v4 = sub_13FA694(v141, v143, a3);
    }
  }
  if ((v130 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v144 = *(int *)(a1 + 656);
    *(_WORD *)uint64_t v4 = 1416;
    v4[2] = v144;
    if (v144 > 0x7F)
    {
      v4[2] = v144 | 0x80;
      unint64_t v145 = v144 >> 7;
      v4[3] = v144 >> 7;
      v4 += 4;
      if (v144 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v146 = v145 >> 14;
          v145 >>= 7;
          *v4++ = v145;
        }
        while (v146);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  int v147 = *(_DWORD *)(a1 + 368);
  if (v147)
  {
    for (int i3 = 0; i3 != v147; ++i3)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v149 = *(void *)(*(void *)(a1 + 376) + 8 * i3 + 8);
      *(_WORD *)uint64_t v4 = 1426;
      unsigned int v150 = *(_DWORD *)(v149 + 20);
      v4[2] = v150;
      if (v150 > 0x7F) {
        uint64_t v151 = sub_188A9CC(v150, v4 + 2);
      }
      else {
        uint64_t v151 = v4 + 3;
      }
      uint64_t v4 = sub_13FABA8(v149, (unint64_t)v151, a3);
    }
  }
  int v152 = *(_DWORD *)(a1 + 392);
  if (v152)
  {
    for (int i4 = 0; i4 != v152; ++i4)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v154 = *(void *)(*(void *)(a1 + 400) + 8 * i4 + 8);
      *(_WORD *)uint64_t v4 = 1434;
      unsigned int v155 = *(_DWORD *)(v154 + 20);
      v4[2] = v155;
      if (v155 > 0x7F) {
        uint64_t v156 = sub_188A9CC(v155, v4 + 2);
      }
      else {
        uint64_t v156 = v4 + 3;
      }
      uint64_t v4 = sub_13FB0CC(v154, (unint64_t)v156, a3);
    }
  }
  int v157 = *(_DWORD *)(a1 + 416);
  if (v157)
  {
    for (int i5 = 0; i5 != v157; ++i5)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v159 = *(void *)(*(void *)(a1 + 424) + 8 * i5 + 8);
      *(_WORD *)uint64_t v4 = 1442;
      unsigned int v160 = *(_DWORD *)(v159 + 20);
      v4[2] = v160;
      if (v160 > 0x7F) {
        v161 = sub_188A9CC(v160, v4 + 2);
      }
      else {
        v161 = v4 + 3;
      }
      uint64_t v4 = sub_13FB5F0(v159, (unint64_t)v161, a3);
    }
  }
  uint64_t v162 = *(unsigned int *)(a1 + 440);
  if ((int)v162 >= 1)
  {
    uint64_t v163 = 0;
    uint64_t v164 = 8 * v162;
    do
    {
      int v165 = *(void **)(*(void *)(a1 + 448) + v163 + 8);
      if (*((char *)v165 + 23) < 0)
      {
        int64_t v166 = v165[1];
        if (v166 > 127) {
          goto LABEL_344;
        }
      }
      else
      {
        int64_t v166 = *((unsigned __int8 *)v165 + 23);
      }
      if ((uint64_t)(*a3 - (void)v4 + 13) >= v166)
      {
        *(_WORD *)uint64_t v4 = 1450;
        v4[2] = v166;
        if (*((char *)v165 + 23) < 0) {
          int v165 = (void *)*v165;
        }
        v167 = v4 + 3;
        memcpy(v167, v165, v166);
        uint64_t v4 = &v167[v166];
        goto LABEL_342;
      }
LABEL_344:
      uint64_t v4 = (char *)sub_188A868(a3, 85, (uint64_t)v165, v4);
LABEL_342:
      v163 += 8;
    }
    while (v164 != v163);
  }
  int v168 = *(_DWORD *)(a1 + 464);
  if (v168)
  {
    for (int i6 = 0; i6 != v168; ++i6)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v170 = *(void *)(*(void *)(a1 + 472) + 8 * i6 + 8);
      *(_WORD *)uint64_t v4 = 1458;
      unsigned int v171 = *(_DWORD *)(v170 + 20);
      v4[2] = v171;
      if (v171 > 0x7F) {
        uint64_t v172 = sub_188A9CC(v171, v4 + 2);
      }
      else {
        uint64_t v172 = v4 + 3;
      }
      uint64_t v4 = sub_13FBB14(v170, (unint64_t)v172, a3);
    }
  }
  if ((*(unsigned char *)(a1 + 16) & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v173 = *(void *)(a1 + 576);
    *(_WORD *)uint64_t v4 = 1466;
    unsigned int v174 = *(_DWORD *)(v173 + 20);
    v4[2] = v174;
    if (v174 > 0x7F) {
      uint64_t v175 = sub_188A9CC(v174, v4 + 2);
    }
    else {
      uint64_t v175 = v4 + 3;
    }
    uint64_t v4 = sub_1400828(v173, v175, a3);
  }
  int v176 = *(_DWORD *)(a1 + 488);
  if (v176)
  {
    for (int i7 = 0; i7 != v176; ++i7)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v178 = *(void *)(*(void *)(a1 + 496) + 8 * i7 + 8);
      *(_WORD *)uint64_t v4 = 1474;
      unsigned int v179 = *(_DWORD *)(v178 + 20);
      v4[2] = v179;
      if (v179 > 0x7F) {
        v180 = sub_188A9CC(v179, v4 + 2);
      }
      else {
        v180 = v4 + 3;
      }
      uint64_t v4 = sub_1402CC8(v178, v180, a3);
    }
  }
  if ((*(unsigned char *)(a1 + 20) & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v181 = *(int *)(a1 + 660);
    *(_WORD *)uint64_t v4 = 1480;
    v4[2] = v181;
    if (v181 > 0x7F)
    {
      v4[2] = v181 | 0x80;
      unint64_t v182 = v181 >> 7;
      v4[3] = v181 >> 7;
      v4 += 4;
      if (v181 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v183 = v182 >> 14;
          v182 >>= 7;
          *v4++ = v182;
        }
        while (v183);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  uint64_t v184 = *(unsigned int *)(a1 + 512);
  if ((int)v184 >= 1)
  {
    uint64_t v185 = 0;
    uint64_t v186 = 8 * v184;
    do
    {
      uint64_t v187 = *(void **)(*(void *)(a1 + 520) + v185 + 8);
      if (*((char *)v187 + 23) < 0)
      {
        int64_t v188 = v187[1];
        if (v188 > 127) {
          goto LABEL_386;
        }
      }
      else
      {
        int64_t v188 = *((unsigned __int8 *)v187 + 23);
      }
      if ((uint64_t)(*a3 - (void)v4 + 13) >= v188)
      {
        *(_WORD *)uint64_t v4 = 1490;
        v4[2] = v188;
        if (*((char *)v187 + 23) < 0) {
          uint64_t v187 = (void *)*v187;
        }
        v189 = v4 + 3;
        memcpy(v189, v187, v188);
        uint64_t v4 = &v189[v188];
        goto LABEL_384;
      }
LABEL_386:
      uint64_t v4 = (char *)sub_188A868(a3, 90, (uint64_t)v187, v4);
LABEL_384:
      v185 += 8;
    }
    while (v186 != v185);
  }
  int v190 = *(_DWORD *)(a1 + 536);
  if (v190)
  {
    for (int i8 = 0; i8 != v190; ++i8)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v192 = *(void *)(*(void *)(a1 + 544) + 8 * i8 + 8);
      *(_WORD *)uint64_t v4 = 1498;
      unsigned int v193 = *(_DWORD *)(v192 + 20);
      v4[2] = v193;
      if (v193 > 0x7F) {
        v194 = sub_188A9CC(v193, v4 + 2);
      }
      else {
        v194 = v4 + 3;
      }
      uint64_t v4 = sub_1404860(v192, v194, a3);
    }
  }
  uint64_t v195 = *(void *)(a1 + 8);
  if ((v195 & 1) == 0) {
    return v4;
  }
  unint64_t v197 = v195 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v197 + 31) < 0)
  {
    v198 = *(void **)(v197 + 8);
    uint64_t v199 = *(void *)(v197 + 16);
  }
  else
  {
    v198 = (void *)(v197 + 8);
    LODWORD(v199) = *(unsigned __int8 *)(v197 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v199)
  {
    uint64_t v200 = (int)v199;
    memcpy(v4, v198, (int)v199);
    v4 += v200;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v198, v199, v4);
}

uint64_t sub_1409CD0(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 40);
  if ((int)v2 < 1)
  {
    uint64_t v4 = *(unsigned int *)(a1 + 40);
  }
  else
  {
    uint64_t v3 = (uint64_t *)(*(void *)(a1 + 48) + 8);
    uint64_t v4 = *(unsigned int *)(a1 + 40);
    do
    {
      uint64_t v5 = *v3++;
      uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
      uint64_t v7 = *(void *)(v5 + 8);
      if ((v6 & 0x80u) == 0) {
        uint64_t v7 = v6;
      }
      v4 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      --v2;
    }
    while (v2);
  }
  uint64_t v8 = *(int *)(a1 + 64);
  uint64_t v9 = v4 + v8;
  uint64_t v10 = *(void *)(a1 + 72);
  if (v10) {
    unsigned int v11 = (uint64_t *)(v10 + 8);
  }
  else {
    unsigned int v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_13F79D4(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  uint64_t v15 = *(int *)(a1 + 88);
  uint64_t v16 = v9 + 2 * v15;
  uint64_t v17 = *(void *)(a1 + 96);
  if (v17) {
    int v18 = (uint64_t *)(v17 + 8);
  }
  else {
    int v18 = 0;
  }
  if (v15)
  {
    uint64_t v19 = 8 * v15;
    do
    {
      uint64_t v20 = *v18++;
      uint64_t v21 = sub_14538CC(v20);
      v16 += v21 + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6);
      v19 -= 8;
    }
    while (v19);
  }
  uint64_t v22 = *(int *)(a1 + 112);
  uint64_t v23 = v16 + 2 * v22;
  uint64_t v24 = *(void *)(a1 + 120);
  if (v24) {
    unint64_t v25 = (uint64_t *)(v24 + 8);
  }
  else {
    unint64_t v25 = 0;
  }
  if (v22)
  {
    uint64_t v26 = 8 * v22;
    do
    {
      uint64_t v27 = *v25++;
      uint64_t v28 = sub_14538CC(v27);
      v23 += v28 + ((9 * (__clz(v28 | 1) ^ 0x1F) + 73) >> 6);
      v26 -= 8;
    }
    while (v26);
  }
  uint64_t v29 = *(int *)(a1 + 136);
  uint64_t v30 = v23 + 2 * v29;
  uint64_t v31 = *(void *)(a1 + 144);
  if (v31) {
    unint64_t v32 = (uint64_t *)(v31 + 8);
  }
  else {
    unint64_t v32 = 0;
  }
  if (v29)
  {
    uint64_t v33 = 8 * v29;
    do
    {
      uint64_t v34 = *v32++;
      uint64_t v35 = sub_13F8414(v34);
      v30 += v35 + ((9 * (__clz(v35 | 1) ^ 0x1F) + 73) >> 6);
      v33 -= 8;
    }
    while (v33);
  }
  uint64_t v36 = *(int *)(a1 + 160);
  uint64_t v37 = v30 + 2 * v36;
  uint64_t v38 = *(void *)(a1 + 168);
  if (v38) {
    unint64_t v39 = (uint64_t *)(v38 + 8);
  }
  else {
    unint64_t v39 = 0;
  }
  if (v36)
  {
    uint64_t v40 = 8 * v36;
    do
    {
      uint64_t v41 = *v39++;
      uint64_t v42 = sub_13F8934(v41);
      v37 += v42 + ((9 * (__clz(v42 | 1) ^ 0x1F) + 73) >> 6);
      v40 -= 8;
    }
    while (v40);
  }
  uint64_t v43 = *(int *)(a1 + 184);
  uint64_t v44 = v37 + 2 * v43;
  uint64_t v45 = *(void *)(a1 + 192);
  if (v45) {
    uint64_t v46 = (uint64_t *)(v45 + 8);
  }
  else {
    uint64_t v46 = 0;
  }
  if (v43)
  {
    uint64_t v47 = 8 * v43;
    do
    {
      uint64_t v48 = *v46++;
      uint64_t v49 = sub_13F8E54(v48);
      v44 += v49 + ((9 * (__clz(v49 | 1) ^ 0x1F) + 73) >> 6);
      v47 -= 8;
    }
    while (v47);
  }
  uint64_t v50 = *(int *)(a1 + 208);
  uint64_t v51 = v44 + 2 * v50;
  uint64_t v52 = *(void *)(a1 + 216);
  if (v52) {
    unsigned int v53 = (uint64_t *)(v52 + 8);
  }
  else {
    unsigned int v53 = 0;
  }
  if (v50)
  {
    uint64_t v54 = 8 * v50;
    do
    {
      uint64_t v55 = *v53++;
      uint64_t v56 = sub_14538CC(v55);
      v51 += v56 + ((9 * (__clz(v56 | 1) ^ 0x1F) + 73) >> 6);
      v54 -= 8;
    }
    while (v54);
  }
  uint64_t v57 = *(int *)(a1 + 232);
  uint64_t v58 = v51 + 2 * v57;
  uint64_t v59 = *(void *)(a1 + 240);
  if (v59) {
    char v60 = (uint64_t *)(v59 + 8);
  }
  else {
    char v60 = 0;
  }
  if (v57)
  {
    uint64_t v61 = 8 * v57;
    do
    {
      uint64_t v62 = *v60++;
      uint64_t v63 = sub_13F9894(v62);
      v58 += v63 + ((9 * (__clz(v63 | 1) ^ 0x1F) + 73) >> 6);
      v61 -= 8;
    }
    while (v61);
  }
  uint64_t v64 = *(int *)(a1 + 256);
  uint64_t v65 = v58 + 2 * v64;
  uint64_t v66 = *(void *)(a1 + 264);
  if (v66) {
    char v67 = (uint64_t *)(v66 + 8);
  }
  else {
    char v67 = 0;
  }
  if (v64)
  {
    uint64_t v68 = 8 * v64;
    do
    {
      uint64_t v69 = *v67++;
      uint64_t v70 = sub_13F9DB4(v69);
      v65 += v70 + ((9 * (__clz(v70 | 1) ^ 0x1F) + 73) >> 6);
      v68 -= 8;
    }
    while (v68);
  }
  uint64_t v71 = *(int *)(a1 + 280);
  uint64_t v72 = v65 + 2 * v71;
  uint64_t v73 = *(void *)(a1 + 288);
  if (v73) {
    int v74 = (uint64_t *)(v73 + 8);
  }
  else {
    int v74 = 0;
  }
  if (v71)
  {
    uint64_t v75 = 8 * v71;
    do
    {
      uint64_t v76 = *v74++;
      uint64_t v77 = sub_13F9374(v76);
      v72 += v77 + ((9 * (__clz(v77 | 1) ^ 0x1F) + 73) >> 6);
      v75 -= 8;
    }
    while (v75);
  }
  uint64_t v78 = *(int *)(a1 + 320);
  uint64_t v79 = v72 + 8 * *(unsigned int *)(a1 + 296) + 2 * (v78 + *(unsigned int *)(a1 + 296));
  uint64_t v80 = *(void *)(a1 + 328);
  if (v80) {
    int v81 = (uint64_t *)(v80 + 8);
  }
  else {
    int v81 = 0;
  }
  if (v78)
  {
    uint64_t v82 = 8 * v78;
    do
    {
      uint64_t v83 = *v81++;
      uint64_t v84 = sub_13FA2E0(v83);
      v79 += v84 + ((9 * (__clz(v84 | 1) ^ 0x1F) + 73) >> 6);
      v82 -= 8;
    }
    while (v82);
  }
  uint64_t v85 = *(int *)(a1 + 344);
  uint64_t v86 = v79 + 2 * v85;
  uint64_t v87 = *(void *)(a1 + 352);
  if (v87) {
    unint64_t v88 = (uint64_t *)(v87 + 8);
  }
  else {
    unint64_t v88 = 0;
  }
  if (v85)
  {
    uint64_t v89 = 8 * v85;
    do
    {
      uint64_t v90 = *v88++;
      uint64_t v91 = sub_13FA780(v90);
      v86 += v91 + ((9 * (__clz(v91 | 1) ^ 0x1F) + 73) >> 6);
      v89 -= 8;
    }
    while (v89);
  }
  uint64_t v92 = *(int *)(a1 + 368);
  uint64_t v93 = v86 + 2 * v92;
  uint64_t v94 = *(void *)(a1 + 376);
  if (v94) {
    uint64_t v95 = (uint64_t *)(v94 + 8);
  }
  else {
    uint64_t v95 = 0;
  }
  if (v92)
  {
    uint64_t v96 = 8 * v92;
    do
    {
      uint64_t v97 = *v95++;
      uint64_t v98 = sub_13FAD08(v97);
      v93 += v98 + ((9 * (__clz(v98 | 1) ^ 0x1F) + 73) >> 6);
      v96 -= 8;
    }
    while (v96);
  }
  uint64_t v99 = *(int *)(a1 + 392);
  uint64_t v100 = v93 + 2 * v99;
  uint64_t v101 = *(void *)(a1 + 400);
  if (v101) {
    unsigned int v102 = (uint64_t *)(v101 + 8);
  }
  else {
    unsigned int v102 = 0;
  }
  if (v99)
  {
    uint64_t v103 = 8 * v99;
    do
    {
      uint64_t v104 = *v102++;
      uint64_t v105 = sub_13FB22C(v104);
      v100 += v105 + ((9 * (__clz(v105 | 1) ^ 0x1F) + 73) >> 6);
      v103 -= 8;
    }
    while (v103);
  }
  uint64_t v106 = *(int *)(a1 + 416);
  uint64_t v107 = v100 + 2 * v106;
  uint64_t v108 = *(void *)(a1 + 424);
  if (v108) {
    unint64_t v109 = (uint64_t *)(v108 + 8);
  }
  else {
    unint64_t v109 = 0;
  }
  if (v106)
  {
    uint64_t v110 = 8 * v106;
    do
    {
      uint64_t v111 = *v109++;
      uint64_t v112 = sub_13FB750(v111);
      v107 += v112 + ((9 * (__clz(v112 | 1) ^ 0x1F) + 73) >> 6);
      v110 -= 8;
    }
    while (v110);
  }
  uint64_t v113 = *(unsigned int *)(a1 + 440);
  uint64_t v114 = v107 + 2 * v113;
  if ((int)v113 >= 1)
  {
    unsigned int v115 = (uint64_t *)(*(void *)(a1 + 448) + 8);
    do
    {
      uint64_t v116 = *v115++;
      uint64_t v117 = *(unsigned __int8 *)(v116 + 23);
      uint64_t v118 = *(void *)(v116 + 8);
      if ((v117 & 0x80u) == 0) {
        uint64_t v118 = v117;
      }
      v114 += v118 + ((9 * (__clz(v118 | 1) ^ 0x1F) + 73) >> 6);
      --v113;
    }
    while (v113);
  }
  uint64_t v119 = *(int *)(a1 + 464);
  uint64_t v120 = v114 + 2 * v119;
  uint64_t v121 = *(void *)(a1 + 472);
  if (v121) {
    uint64_t v122 = (uint64_t *)(v121 + 8);
  }
  else {
    uint64_t v122 = 0;
  }
  if (v119)
  {
    uint64_t v123 = 8 * v119;
    do
    {
      uint64_t v124 = *v122++;
      uint64_t v125 = sub_13FBC74(v124);
      v120 += v125 + ((9 * (__clz(v125 | 1) ^ 0x1F) + 73) >> 6);
      v123 -= 8;
    }
    while (v123);
  }
  uint64_t v126 = *(int *)(a1 + 488);
  uint64_t v127 = v120 + 2 * v126;
  uint64_t v128 = *(void *)(a1 + 496);
  if (v128) {
    int v129 = (uint64_t *)(v128 + 8);
  }
  else {
    int v129 = 0;
  }
  if (v126)
  {
    uint64_t v130 = 8 * v126;
    do
    {
      uint64_t v131 = *v129++;
      uint64_t v132 = sub_140317C(v131);
      v127 += v132 + ((9 * (__clz(v132 | 1) ^ 0x1F) + 73) >> 6);
      v130 -= 8;
    }
    while (v130);
  }
  uint64_t v133 = *(unsigned int *)(a1 + 512);
  uint64_t v134 = v127 + 2 * v133;
  if ((int)v133 >= 1)
  {
    unsigned int v135 = (uint64_t *)(*(void *)(a1 + 520) + 8);
    do
    {
      uint64_t v136 = *v135++;
      uint64_t v137 = *(unsigned __int8 *)(v136 + 23);
      uint64_t v138 = *(void *)(v136 + 8);
      if ((v137 & 0x80u) == 0) {
        uint64_t v138 = v137;
      }
      v134 += v138 + ((9 * (__clz(v138 | 1) ^ 0x1F) + 73) >> 6);
      --v133;
    }
    while (v133);
  }
  uint64_t v139 = *(int *)(a1 + 536);
  uint64_t v140 = v134 + 2 * v139;
  uint64_t v141 = *(void *)(a1 + 544);
  if (v141) {
    unsigned int v142 = (uint64_t *)(v141 + 8);
  }
  else {
    unsigned int v142 = 0;
  }
  if (v139)
  {
    uint64_t v143 = 8 * v139;
    do
    {
      uint64_t v144 = *v142++;
      uint64_t v145 = sub_1404AB8(v144);
      v140 += v145 + ((9 * (__clz(v145 | 1) ^ 0x1F) + 73) >> 6);
      v143 -= 8;
    }
    while (v143);
  }
  unsigned int v146 = *(_DWORD *)(a1 + 16);
  if ((_BYTE)v146)
  {
    if (v146)
    {
      unint64_t v172 = *(void *)(a1 + 552) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v173 = *(unsigned __int8 *)(v172 + 23);
      uint64_t v174 = *(void *)(v172 + 8);
      if ((v173 & 0x80u) == 0) {
        uint64_t v174 = v173;
      }
      v140 += v174 + ((9 * (__clz(v174 | 1) ^ 0x1F) + 73) >> 6) + 2;
      if ((v146 & 2) == 0)
      {
LABEL_129:
        if ((v146 & 4) == 0) {
          goto LABEL_130;
        }
        goto LABEL_225;
      }
    }
    else if ((v146 & 2) == 0)
    {
      goto LABEL_129;
    }
    unint64_t v175 = *(void *)(a1 + 560) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v176 = *(unsigned __int8 *)(v175 + 23);
    uint64_t v177 = *(void *)(v175 + 8);
    if ((v176 & 0x80u) == 0) {
      uint64_t v177 = v176;
    }
    v140 += v177 + ((9 * (__clz(v177 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v146 & 4) == 0)
    {
LABEL_130:
      if ((v146 & 8) == 0) {
        goto LABEL_131;
      }
      goto LABEL_226;
    }
LABEL_225:
    uint64_t v178 = sub_13F7EF4(*(void *)(a1 + 568));
    v140 += v178 + ((9 * (__clz(v178 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v146 & 8) == 0)
    {
LABEL_131:
      if ((v146 & 0x10) == 0) {
        goto LABEL_132;
      }
      goto LABEL_227;
    }
LABEL_226:
    uint64_t v179 = sub_1400E04(*(void *)(a1 + 576));
    v140 += v179 + ((9 * (__clz(v179 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v146 & 0x10) == 0)
    {
LABEL_132:
      if ((v146 & 0x20) == 0) {
        goto LABEL_133;
      }
      goto LABEL_231;
    }
LABEL_227:
    int v180 = *(_DWORD *)(a1 + 584);
    uint64_t v181 = (9 * (__clz(v180 | 1) ^ 0x1F) + 73) >> 6;
    if (v180 >= 0) {
      uint64_t v182 = v181;
    }
    else {
      uint64_t v182 = 10;
    }
    v140 += v182 + 1;
    if ((v146 & 0x20) == 0)
    {
LABEL_133:
      if ((v146 & 0x40) == 0) {
        goto LABEL_138;
      }
      goto LABEL_134;
    }
LABEL_231:
    int v183 = *(_DWORD *)(a1 + 588);
    uint64_t v184 = (9 * (__clz(v183 | 1) ^ 0x1F) + 73) >> 6;
    if (v183 >= 0) {
      uint64_t v185 = v184;
    }
    else {
      uint64_t v185 = 10;
    }
    v140 += v185 + 1;
    if ((v146 & 0x40) == 0)
    {
LABEL_138:
      if ((v146 & 0x80) != 0) {
        v140 += 2;
      }
      goto LABEL_140;
    }
LABEL_134:
    int v147 = *(_DWORD *)(a1 + 592);
    uint64_t v148 = (9 * (__clz(v147 | 1) ^ 0x1F) + 73) >> 6;
    if (v147 >= 0) {
      uint64_t v149 = v148;
    }
    else {
      uint64_t v149 = 10;
    }
    v140 += v149 + 1;
    goto LABEL_138;
  }
LABEL_140:
  if ((v146 & 0xFF00) == 0) {
    goto LABEL_157;
  }
  uint64_t v150 = v140 + 2;
  if ((v146 & 0x100) == 0) {
    uint64_t v150 = v140;
  }
  if ((v146 & 0x200) != 0) {
    v150 += 2;
  }
  if ((v146 & 0x400) != 0) {
    uint64_t v140 = v150 + 3;
  }
  else {
    uint64_t v140 = v150;
  }
  if ((v146 & 0x800) != 0)
  {
    int v186 = *(_DWORD *)(a1 + 600);
    uint64_t v187 = (9 * (__clz(v186 | 1) ^ 0x1F) + 73) >> 6;
    if (v186 >= 0) {
      uint64_t v188 = v187;
    }
    else {
      uint64_t v188 = 10;
    }
    v140 += v188 + 1;
    if ((v146 & 0x1000) == 0)
    {
LABEL_150:
      if ((v146 & 0x2000) == 0) {
        goto LABEL_151;
      }
      goto LABEL_244;
    }
  }
  else if ((v146 & 0x1000) == 0)
  {
    goto LABEL_150;
  }
  int v189 = *(_DWORD *)(a1 + 604);
  uint64_t v190 = (9 * (__clz(v189 | 1) ^ 0x1F) + 73) >> 6;
  if (v189 >= 0) {
    uint64_t v191 = v190;
  }
  else {
    uint64_t v191 = 10;
  }
  v140 += v191 + 1;
  if ((v146 & 0x2000) == 0)
  {
LABEL_151:
    if ((v146 & 0x4000) == 0) {
      goto LABEL_152;
    }
    goto LABEL_248;
  }
LABEL_244:
  int v192 = *(_DWORD *)(a1 + 608);
  uint64_t v193 = (9 * (__clz(v192 | 1) ^ 0x1F) + 73) >> 6;
  if (v192 >= 0) {
    uint64_t v194 = v193;
  }
  else {
    uint64_t v194 = 10;
  }
  v140 += v194 + 2;
  if ((v146 & 0x4000) == 0)
  {
LABEL_152:
    if ((v146 & 0x8000) == 0) {
      goto LABEL_157;
    }
    goto LABEL_153;
  }
LABEL_248:
  int v195 = *(_DWORD *)(a1 + 612);
  uint64_t v196 = (9 * (__clz(v195 | 1) ^ 0x1F) + 73) >> 6;
  if (v195 >= 0) {
    uint64_t v197 = v196;
  }
  else {
    uint64_t v197 = 10;
  }
  v140 += v197 + 2;
  if ((v146 & 0x8000) != 0)
  {
LABEL_153:
    int v151 = *(_DWORD *)(a1 + 616);
    uint64_t v152 = (9 * (__clz(v151 | 1) ^ 0x1F) + 73) >> 6;
    if (v151 >= 0) {
      uint64_t v153 = v152;
    }
    else {
      uint64_t v153 = 10;
    }
    v140 += v153 + 2;
  }
LABEL_157:
  if ((v146 & 0xFF0000) != 0)
  {
    uint64_t v154 = v140 + 3;
    if ((v146 & 0x10000) == 0) {
      uint64_t v154 = v140;
    }
    if ((v146 & 0x20000) != 0) {
      v154 += 3;
    }
    if ((v146 & 0x40000) != 0) {
      v154 += 3;
    }
    if ((v146 & 0x80000) != 0) {
      v154 += 3;
    }
    if ((v146 & 0x100000) != 0) {
      v154 += 3;
    }
    if ((v146 & 0x200000) != 0) {
      v154 += 3;
    }
    if ((v146 & 0x400000) != 0) {
      v154 += 3;
    }
    if ((v146 & 0x800000) != 0) {
      uint64_t v140 = v154 + 3;
    }
    else {
      uint64_t v140 = v154;
    }
  }
  if (HIBYTE(v146))
  {
    if ((v146 & 0x1000000) != 0)
    {
      int v204 = *(_DWORD *)(a1 + 628);
      uint64_t v205 = (9 * (__clz(v204 | 1) ^ 0x1F) + 73) >> 6;
      if (v204 >= 0) {
        uint64_t v206 = v205;
      }
      else {
        uint64_t v206 = 10;
      }
      v140 += v206 + 2;
      if ((v146 & 0x2000000) == 0)
      {
LABEL_178:
        if ((v146 & 0x4000000) == 0)
        {
LABEL_183:
          uint64_t v158 = v140 + 3;
          if ((v146 & 0x8000000) == 0) {
            uint64_t v158 = v140;
          }
          if ((v146 & 0x10000000) != 0) {
            v158 += 3;
          }
          if ((v146 & 0x20000000) != 0) {
            v158 += 3;
          }
          if ((v146 & 0x40000000) != 0) {
            uint64_t v140 = v158 + 3;
          }
          else {
            uint64_t v140 = v158;
          }
          if ((v146 & 0x80000000) != 0)
          {
            int v159 = *(_DWORD *)(a1 + 644);
            uint64_t v160 = ((9 * (__clz(v159 | 1) ^ 0x1F) + 73) >> 6) + 2;
            if (v159 >= 0) {
              uint64_t v161 = v160;
            }
            else {
              uint64_t v161 = 12;
            }
            v140 += v161;
          }
          goto LABEL_197;
        }
LABEL_179:
        int v155 = *(_DWORD *)(a1 + 636);
        uint64_t v156 = ((9 * (__clz(v155 | 1) ^ 0x1F) + 73) >> 6) + 2;
        if (v155 >= 0) {
          uint64_t v157 = v156;
        }
        else {
          uint64_t v157 = 12;
        }
        v140 += v157;
        goto LABEL_183;
      }
    }
    else if ((v146 & 0x2000000) == 0)
    {
      goto LABEL_178;
    }
    int v207 = *(_DWORD *)(a1 + 632);
    uint64_t v208 = (9 * (__clz(v207 | 1) ^ 0x1F) + 73) >> 6;
    if (v207 >= 0) {
      uint64_t v209 = v208;
    }
    else {
      uint64_t v209 = 10;
    }
    v140 += v209 + 2;
    if ((v146 & 0x4000000) == 0) {
      goto LABEL_183;
    }
    goto LABEL_179;
  }
LABEL_197:
  int v162 = *(_DWORD *)(a1 + 20);
  if ((v162 & 0x7F) == 0) {
    goto LABEL_217;
  }
  if (v162)
  {
    int v163 = *(_DWORD *)(a1 + 648);
    uint64_t v164 = ((9 * (__clz(v163 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if (v163 >= 0) {
      uint64_t v165 = v164;
    }
    else {
      uint64_t v165 = 12;
    }
    v140 += v165;
  }
  uint64_t v166 = v140 + 3;
  if ((v162 & 2) == 0) {
    uint64_t v166 = v140;
  }
  if ((v162 & 4) != 0) {
    v166 += 3;
  }
  if ((v162 & 8) != 0) {
    uint64_t v140 = v166 + 3;
  }
  else {
    uint64_t v140 = v166;
  }
  if ((v162 & 0x10) != 0)
  {
    int v198 = *(_DWORD *)(a1 + 656);
    uint64_t v199 = ((9 * (__clz(v198 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if (v198 >= 0) {
      uint64_t v200 = v199;
    }
    else {
      uint64_t v200 = 12;
    }
    v140 += v200;
    if ((v162 & 0x20) == 0)
    {
LABEL_212:
      if ((v162 & 0x40) == 0) {
        goto LABEL_217;
      }
      goto LABEL_213;
    }
  }
  else if ((v162 & 0x20) == 0)
  {
    goto LABEL_212;
  }
  int v201 = *(_DWORD *)(a1 + 660);
  uint64_t v202 = ((9 * (__clz(v201 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if (v201 >= 0) {
    uint64_t v203 = v202;
  }
  else {
    uint64_t v203 = 12;
  }
  v140 += v203;
  if ((v162 & 0x40) != 0)
  {
LABEL_213:
    int v167 = *(_DWORD *)(a1 + 664);
    uint64_t v168 = ((9 * (__clz(v167 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if (v167 >= 0) {
      uint64_t v169 = v168;
    }
    else {
      uint64_t v169 = 12;
    }
    v140 += v169;
  }
LABEL_217:
  uint64_t v170 = *(void *)(a1 + 8);
  if (v170)
  {
    unint64_t v210 = v170 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v210 + 31) < 0) {
      uint64_t v211 = *(void *)(v210 + 16);
    }
    else {
      uint64_t v211 = *(unsigned __int8 *)(v210 + 31);
    }
    v140 += v211;
  }
  *(_DWORD *)(a1 + 24) = v140;
  return v140;
}

void sub_140A96C(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 40);
  if (v4)
  {
    uint64_t v5 = (const std::string **)(*(void *)(a2 + 48) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4(a1 + 32, *(_DWORD *)(a2 + 40));
    sub_188FB98(a1 + 32, v6, v5, v4, **(_DWORD **)(a1 + 48) - *(_DWORD *)(a1 + 40));
    int v7 = *(_DWORD *)(a1 + 40) + v4;
    *(_DWORD *)(a1 + 40) = v7;
    uint64_t v8 = *(int **)(a1 + 48);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 64);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 72) + 8);
    unsigned int v11 = (std::string **)sub_188CCE4(a1 + 56, *(_DWORD *)(a2 + 64));
    sub_1491520((std::string *)(a1 + 56), v11, v10, v9, **(_DWORD **)(a1 + 72) - *(_DWORD *)(a1 + 64));
    int v12 = *(_DWORD *)(a1 + 64) + v9;
    *(_DWORD *)(a1 + 64) = v12;
    uint64_t v13 = *(int **)(a1 + 72);
    if (*v13 < v12) {
      int *v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 88);
  if (v14)
  {
    uint64_t v15 = (uint64_t *)(*(void *)(a2 + 96) + 8);
    uint64_t v16 = (std::string **)sub_188CCE4(a1 + 80, *(_DWORD *)(a2 + 88));
    sub_124E8CC((uint64_t *)(a1 + 80), v16, v15, v14, **(_DWORD **)(a1 + 96) - *(_DWORD *)(a1 + 88));
    int v17 = *(_DWORD *)(a1 + 88) + v14;
    *(_DWORD *)(a1 + 88) = v17;
    int v18 = *(int **)(a1 + 96);
    if (*v18 < v17) {
      *int v18 = v17;
    }
  }
  int v19 = *(_DWORD *)(a2 + 112);
  if (v19)
  {
    uint64_t v20 = (uint64_t *)(*(void *)(a2 + 120) + 8);
    uint64_t v21 = (std::string **)sub_188CCE4(a1 + 104, *(_DWORD *)(a2 + 112));
    sub_124E8CC((uint64_t *)(a1 + 104), v21, v20, v19, **(_DWORD **)(a1 + 120) - *(_DWORD *)(a1 + 112));
    int v22 = *(_DWORD *)(a1 + 112) + v19;
    *(_DWORD *)(a1 + 112) = v22;
    uint64_t v23 = *(int **)(a1 + 120);
    if (*v23 < v22) {
      *uint64_t v23 = v22;
    }
  }
  int v24 = *(_DWORD *)(a2 + 136);
  if (v24)
  {
    unint64_t v25 = (uint64_t *)(*(void *)(a2 + 144) + 8);
    uint64_t v26 = (std::string **)sub_188CCE4(a1 + 128, *(_DWORD *)(a2 + 136));
    sub_149159C((std::string *)(a1 + 128), v26, v25, v24, **(_DWORD **)(a1 + 144) - *(_DWORD *)(a1 + 136));
    int v27 = *(_DWORD *)(a1 + 136) + v24;
    *(_DWORD *)(a1 + 136) = v27;
    uint64_t v28 = *(int **)(a1 + 144);
    if (*v28 < v27) {
      int *v28 = v27;
    }
  }
  int v29 = *(_DWORD *)(a2 + 160);
  if (v29)
  {
    uint64_t v30 = (uint64_t *)(*(void *)(a2 + 168) + 8);
    uint64_t v31 = (std::string **)sub_188CCE4(a1 + 152, *(_DWORD *)(a2 + 160));
    sub_1491618((std::string *)(a1 + 152), v31, v30, v29, **(_DWORD **)(a1 + 168) - *(_DWORD *)(a1 + 160));
    int v32 = *(_DWORD *)(a1 + 160) + v29;
    *(_DWORD *)(a1 + 160) = v32;
    uint64_t v33 = *(int **)(a1 + 168);
    if (*v33 < v32) {
      *uint64_t v33 = v32;
    }
  }
  int v34 = *(_DWORD *)(a2 + 184);
  if (v34)
  {
    uint64_t v35 = (uint64_t *)(*(void *)(a2 + 192) + 8);
    uint64_t v36 = (std::string **)sub_188CCE4(a1 + 176, *(_DWORD *)(a2 + 184));
    sub_1491694((std::string *)(a1 + 176), v36, v35, v34, **(_DWORD **)(a1 + 192) - *(_DWORD *)(a1 + 184));
    int v37 = *(_DWORD *)(a1 + 184) + v34;
    *(_DWORD *)(a1 + 184) = v37;
    uint64_t v38 = *(int **)(a1 + 192);
    if (*v38 < v37) {
      *uint64_t v38 = v37;
    }
  }
  int v39 = *(_DWORD *)(a2 + 208);
  if (v39)
  {
    uint64_t v40 = (uint64_t *)(*(void *)(a2 + 216) + 8);
    uint64_t v41 = (std::string **)sub_188CCE4(a1 + 200, *(_DWORD *)(a2 + 208));
    sub_124E8CC((uint64_t *)(a1 + 200), v41, v40, v39, **(_DWORD **)(a1 + 216) - *(_DWORD *)(a1 + 208));
    int v42 = *(_DWORD *)(a1 + 208) + v39;
    *(_DWORD *)(a1 + 208) = v42;
    uint64_t v43 = *(int **)(a1 + 216);
    if (*v43 < v42) {
      int *v43 = v42;
    }
  }
  int v44 = *(_DWORD *)(a2 + 232);
  if (v44)
  {
    uint64_t v45 = (uint64_t *)(*(void *)(a2 + 240) + 8);
    uint64_t v46 = (std::string **)sub_188CCE4(a1 + 224, *(_DWORD *)(a2 + 232));
    sub_1491710((std::string *)(a1 + 224), v46, v45, v44, **(_DWORD **)(a1 + 240) - *(_DWORD *)(a1 + 232));
    int v47 = *(_DWORD *)(a1 + 232) + v44;
    *(_DWORD *)(a1 + 232) = v47;
    uint64_t v48 = *(int **)(a1 + 240);
    if (*v48 < v47) {
      *uint64_t v48 = v47;
    }
  }
  int v49 = *(_DWORD *)(a2 + 256);
  if (v49)
  {
    uint64_t v50 = (uint64_t *)(*(void *)(a2 + 264) + 8);
    uint64_t v51 = (std::string **)sub_188CCE4(a1 + 248, *(_DWORD *)(a2 + 256));
    sub_149178C((std::string *)(a1 + 248), v51, v50, v49, **(_DWORD **)(a1 + 264) - *(_DWORD *)(a1 + 256));
    int v52 = *(_DWORD *)(a1 + 256) + v49;
    *(_DWORD *)(a1 + 256) = v52;
    unsigned int v53 = *(int **)(a1 + 264);
    if (*v53 < v52) {
      *unsigned int v53 = v52;
    }
  }
  int v54 = *(_DWORD *)(a2 + 280);
  if (v54)
  {
    uint64_t v55 = (uint64_t *)(*(void *)(a2 + 288) + 8);
    uint64_t v56 = (std::string **)sub_188CCE4(a1 + 272, *(_DWORD *)(a2 + 280));
    sub_1491808((std::string *)(a1 + 272), v56, v55, v54, **(_DWORD **)(a1 + 288) - *(_DWORD *)(a1 + 280));
    int v57 = *(_DWORD *)(a1 + 280) + v54;
    *(_DWORD *)(a1 + 280) = v57;
    uint64_t v58 = *(int **)(a1 + 288);
    if (*v58 < v57) {
      int *v58 = v57;
    }
  }
  int v59 = *(_DWORD *)(a2 + 296);
  if (v59)
  {
    uint64_t v60 = *(int *)(a1 + 296);
    sub_188CA54((unsigned int *)(a1 + 296), v60 + v59);
    uint64_t v61 = *(void *)(a1 + 304);
    *(_DWORD *)(a1 + 296) += *(_DWORD *)(a2 + 296);
    memcpy((void *)(v61 + 8 * v60), *(const void **)(a2 + 304), 8 * *(int *)(a2 + 296));
  }
  int v62 = *(_DWORD *)(a2 + 320);
  if (v62)
  {
    uint64_t v63 = (uint64_t *)(*(void *)(a2 + 328) + 8);
    uint64_t v64 = (std::string **)sub_188CCE4(a1 + 312, *(_DWORD *)(a2 + 320));
    sub_1491884((uint64_t *)(a1 + 312), v64, v63, v62, **(_DWORD **)(a1 + 328) - *(_DWORD *)(a1 + 320));
    int v65 = *(_DWORD *)(a1 + 320) + v62;
    *(_DWORD *)(a1 + 320) = v65;
    uint64_t v66 = *(int **)(a1 + 328);
    if (*v66 < v65) {
      *uint64_t v66 = v65;
    }
  }
  int v67 = *(_DWORD *)(a2 + 344);
  if (v67)
  {
    uint64_t v68 = (uint64_t *)(*(void *)(a2 + 352) + 8);
    uint64_t v69 = (std::string **)sub_188CCE4(a1 + 336, *(_DWORD *)(a2 + 344));
    sub_1491900((std::string *)(a1 + 336), v69, v68, v67, **(_DWORD **)(a1 + 352) - *(_DWORD *)(a1 + 344));
    int v70 = *(_DWORD *)(a1 + 344) + v67;
    *(_DWORD *)(a1 + 344) = v70;
    uint64_t v71 = *(int **)(a1 + 352);
    if (*v71 < v70) {
      *uint64_t v71 = v70;
    }
  }
  int v72 = *(_DWORD *)(a2 + 368);
  if (v72)
  {
    uint64_t v73 = (uint64_t *)(*(void *)(a2 + 376) + 8);
    int v74 = (std::string **)sub_188CCE4(a1 + 360, *(_DWORD *)(a2 + 368));
    sub_149197C((uint64_t *)(a1 + 360), v74, v73, v72, **(_DWORD **)(a1 + 376) - *(_DWORD *)(a1 + 368));
    int v75 = *(_DWORD *)(a1 + 368) + v72;
    *(_DWORD *)(a1 + 368) = v75;
    uint64_t v76 = *(int **)(a1 + 376);
    if (*v76 < v75) {
      int *v76 = v75;
    }
  }
  int v77 = *(_DWORD *)(a2 + 392);
  if (v77)
  {
    uint64_t v78 = (uint64_t *)(*(void *)(a2 + 400) + 8);
    uint64_t v79 = (std::string **)sub_188CCE4(a1 + 384, *(_DWORD *)(a2 + 392));
    sub_14919F8((uint64_t *)(a1 + 384), v79, v78, v77, **(_DWORD **)(a1 + 400) - *(_DWORD *)(a1 + 392));
    int v80 = *(_DWORD *)(a1 + 392) + v77;
    *(_DWORD *)(a1 + 392) = v80;
    int v81 = *(int **)(a1 + 400);
    if (*v81 < v80) {
      *int v81 = v80;
    }
  }
  int v82 = *(_DWORD *)(a2 + 416);
  if (v82)
  {
    uint64_t v83 = (uint64_t *)(*(void *)(a2 + 424) + 8);
    uint64_t v84 = (std::string **)sub_188CCE4(a1 + 408, *(_DWORD *)(a2 + 416));
    sub_1491A74((uint64_t *)(a1 + 408), v84, v83, v82, **(_DWORD **)(a1 + 424) - *(_DWORD *)(a1 + 416));
    int v85 = *(_DWORD *)(a1 + 416) + v82;
    *(_DWORD *)(a1 + 416) = v85;
    uint64_t v86 = *(int **)(a1 + 424);
    if (*v86 < v85) {
      *uint64_t v86 = v85;
    }
  }
  int v87 = *(_DWORD *)(a2 + 440);
  if (v87)
  {
    unint64_t v88 = (const std::string **)(*(void *)(a2 + 448) + 8);
    uint64_t v89 = (std::string **)sub_188CCE4(a1 + 432, *(_DWORD *)(a2 + 440));
    sub_188FB98(a1 + 432, v89, v88, v87, **(_DWORD **)(a1 + 448) - *(_DWORD *)(a1 + 440));
    int v90 = *(_DWORD *)(a1 + 440) + v87;
    *(_DWORD *)(a1 + 440) = v90;
    uint64_t v91 = *(int **)(a1 + 448);
    if (*v91 < v90) {
      *uint64_t v91 = v90;
    }
  }
  int v92 = *(_DWORD *)(a2 + 464);
  if (v92)
  {
    uint64_t v93 = (uint64_t *)(*(void *)(a2 + 472) + 8);
    uint64_t v94 = (std::string **)sub_188CCE4(a1 + 456, *(_DWORD *)(a2 + 464));
    sub_1491AF0((uint64_t *)(a1 + 456), v94, v93, v92, **(_DWORD **)(a1 + 472) - *(_DWORD *)(a1 + 464));
    int v95 = *(_DWORD *)(a1 + 464) + v92;
    *(_DWORD *)(a1 + 464) = v95;
    uint64_t v96 = *(int **)(a1 + 472);
    if (*v96 < v95) {
      int *v96 = v95;
    }
  }
  int v97 = *(_DWORD *)(a2 + 488);
  if (v97)
  {
    uint64_t v98 = (uint64_t *)(*(void *)(a2 + 496) + 8);
    uint64_t v99 = (std::string **)sub_188CCE4(a1 + 480, *(_DWORD *)(a2 + 488));
    sub_1491B6C((uint64_t *)(a1 + 480), v99, v98, v97, **(_DWORD **)(a1 + 496) - *(_DWORD *)(a1 + 488));
    int v100 = *(_DWORD *)(a1 + 488) + v97;
    *(_DWORD *)(a1 + 488) = v100;
    uint64_t v101 = *(int **)(a1 + 496);
    if (*v101 < v100) {
      int *v101 = v100;
    }
  }
  int v102 = *(_DWORD *)(a2 + 512);
  if (v102)
  {
    uint64_t v103 = (const std::string **)(*(void *)(a2 + 520) + 8);
    uint64_t v104 = (std::string **)sub_188CCE4(a1 + 504, *(_DWORD *)(a2 + 512));
    sub_188FB98(a1 + 504, v104, v103, v102, **(_DWORD **)(a1 + 520) - *(_DWORD *)(a1 + 512));
    int v105 = *(_DWORD *)(a1 + 512) + v102;
    *(_DWORD *)(a1 + 512) = v105;
    uint64_t v106 = *(int **)(a1 + 520);
    if (*v106 < v105) {
      int *v106 = v105;
    }
  }
  int v107 = *(_DWORD *)(a2 + 536);
  if (v107)
  {
    uint64_t v108 = (uint64_t *)(*(void *)(a2 + 544) + 8);
    unint64_t v109 = (std::string **)sub_188CCE4(a1 + 528, *(_DWORD *)(a2 + 536));
    sub_1491BF8((std::string *)(a1 + 528), v109, v108, v107, **(_DWORD **)(a1 + 544) - *(_DWORD *)(a1 + 536));
    int v110 = *(_DWORD *)(a1 + 536) + v107;
    *(_DWORD *)(a1 + 536) = v110;
    uint64_t v111 = *(int **)(a1 + 544);
    if (*v111 < v110) {
      int *v111 = v110;
    }
  }
  unsigned int v112 = *(_DWORD *)(a2 + 16);
  if ((_BYTE)v112)
  {
    if (v112)
    {
      unsigned int v115 = (long long *)(*(void *)(a2 + 552) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v116 = *(void *)(a1 + 8);
      uint64_t v117 = (uint64_t *)(v116 & 0xFFFFFFFFFFFFFFFCLL);
      if (v116) {
        uint64_t v117 = (uint64_t *)*v117;
      }
      sub_1881DF4((std::string **)(a1 + 552), v115, v117);
      if ((v112 & 2) == 0)
      {
LABEL_69:
        if ((v112 & 4) == 0) {
          goto LABEL_70;
        }
        goto LABEL_129;
      }
    }
    else if ((v112 & 2) == 0)
    {
      goto LABEL_69;
    }
    uint64_t v118 = (long long *)(*(void *)(a2 + 560) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v119 = *(void *)(a1 + 8);
    uint64_t v120 = (uint64_t *)(v119 & 0xFFFFFFFFFFFFFFFCLL);
    if (v119) {
      uint64_t v120 = (uint64_t *)*v120;
    }
    sub_1881DF4((std::string **)(a1 + 560), v118, v120);
    if ((v112 & 4) == 0)
    {
LABEL_70:
      if ((v112 & 8) == 0) {
        goto LABEL_71;
      }
      goto LABEL_137;
    }
LABEL_129:
    *(_DWORD *)(a1 + 16) |= 4u;
    uint64_t v121 = *(std::string **)(a1 + 568);
    if (!v121)
    {
      uint64_t v122 = *(void *)(a1 + 8);
      uint64_t v123 = (void *)(v122 & 0xFFFFFFFFFFFFFFFCLL);
      if (v122) {
        uint64_t v123 = (void *)*v123;
      }
      uint64_t v121 = (std::string *)sub_1448EC8((uint64_t)v123);
      *(void *)(a1 + 568) = v121;
    }
    if (*(void *)(a2 + 568)) {
      uint64_t v124 = *(void *(****)(void *))(a2 + 568);
    }
    else {
      uint64_t v124 = &off_25373E0;
    }
    sub_11AD324(v121, (uint64_t)v124);
    if ((v112 & 8) == 0)
    {
LABEL_71:
      if ((v112 & 0x10) == 0) {
        goto LABEL_72;
      }
      goto LABEL_145;
    }
LABEL_137:
    *(_DWORD *)(a1 + 16) |= 8u;
    uint64_t v125 = *(void *)(a1 + 576);
    if (!v125)
    {
      uint64_t v126 = *(void *)(a1 + 8);
      uint64_t v127 = (void *)(v126 & 0xFFFFFFFFFFFFFFFCLL);
      if (v126) {
        uint64_t v127 = (void *)*v127;
      }
      sub_1449964((uint64_t)v127);
      *(void *)(a1 + 576) = v125;
    }
    if (*(void *)(a2 + 576)) {
      uint64_t v128 = *(uint64_t (****)())(a2 + 576);
    }
    else {
      uint64_t v128 = &off_25374C0;
    }
    sub_1401100(v125, (uint64_t)v128);
    if ((v112 & 0x10) == 0)
    {
LABEL_72:
      if ((v112 & 0x20) == 0) {
        goto LABEL_73;
      }
      goto LABEL_146;
    }
LABEL_145:
    *(_DWORD *)(a1 + 584) = *(_DWORD *)(a2 + 584);
    if ((v112 & 0x20) == 0)
    {
LABEL_73:
      if ((v112 & 0x40) == 0) {
        goto LABEL_74;
      }
      goto LABEL_147;
    }
LABEL_146:
    *(_DWORD *)(a1 + 588) = *(_DWORD *)(a2 + 588);
    if ((v112 & 0x40) == 0)
    {
LABEL_74:
      if ((v112 & 0x80) == 0)
      {
LABEL_76:
        *(_DWORD *)(a1 + 16) |= v112;
        goto LABEL_77;
      }
LABEL_75:
      *(unsigned char *)(a1 + 596) = *(unsigned char *)(a2 + 596);
      goto LABEL_76;
    }
LABEL_147:
    *(_DWORD *)(a1 + 592) = *(_DWORD *)(a2 + 592);
    if ((v112 & 0x80) == 0) {
      goto LABEL_76;
    }
    goto LABEL_75;
  }
LABEL_77:
  if ((v112 & 0xFF00) == 0) {
    goto LABEL_88;
  }
  if ((v112 & 0x100) != 0)
  {
    *(unsigned char *)(a1 + 597) = *(unsigned char *)(a2 + 597);
    if ((v112 & 0x200) == 0)
    {
LABEL_80:
      if ((v112 & 0x400) == 0) {
        goto LABEL_81;
      }
      goto LABEL_151;
    }
  }
  else if ((v112 & 0x200) == 0)
  {
    goto LABEL_80;
  }
  *(unsigned char *)(a1 + 598) = *(unsigned char *)(a2 + 598);
  if ((v112 & 0x400) == 0)
  {
LABEL_81:
    if ((v112 & 0x800) == 0) {
      goto LABEL_82;
    }
    goto LABEL_152;
  }
LABEL_151:
  *(unsigned char *)(a1 + 599) = *(unsigned char *)(a2 + 599);
  if ((v112 & 0x800) == 0)
  {
LABEL_82:
    if ((v112 & 0x1000) == 0) {
      goto LABEL_83;
    }
    goto LABEL_153;
  }
LABEL_152:
  *(_DWORD *)(a1 + 600) = *(_DWORD *)(a2 + 600);
  if ((v112 & 0x1000) == 0)
  {
LABEL_83:
    if ((v112 & 0x2000) == 0) {
      goto LABEL_84;
    }
    goto LABEL_154;
  }
LABEL_153:
  *(_DWORD *)(a1 + 604) = *(_DWORD *)(a2 + 604);
  if ((v112 & 0x2000) == 0)
  {
LABEL_84:
    if ((v112 & 0x4000) == 0) {
      goto LABEL_85;
    }
LABEL_155:
    *(_DWORD *)(a1 + 612) = *(_DWORD *)(a2 + 612);
    if ((v112 & 0x8000) == 0) {
      goto LABEL_87;
    }
    goto LABEL_86;
  }
LABEL_154:
  *(_DWORD *)(a1 + 608) = *(_DWORD *)(a2 + 608);
  if ((v112 & 0x4000) != 0) {
    goto LABEL_155;
  }
LABEL_85:
  if ((v112 & 0x8000) != 0) {
LABEL_86:
  }
    *(_DWORD *)(a1 + 616) = *(_DWORD *)(a2 + 616);
LABEL_87:
  *(_DWORD *)(a1 + 16) |= v112;
LABEL_88:
  if ((v112 & 0xFF0000) == 0) {
    goto LABEL_99;
  }
  if ((v112 & 0x10000) != 0)
  {
    *(unsigned char *)(a1 + 620) = *(unsigned char *)(a2 + 620);
    if ((v112 & 0x20000) == 0)
    {
LABEL_91:
      if ((v112 & 0x40000) == 0) {
        goto LABEL_92;
      }
      goto LABEL_159;
    }
  }
  else if ((v112 & 0x20000) == 0)
  {
    goto LABEL_91;
  }
  *(unsigned char *)(a1 + 621) = *(unsigned char *)(a2 + 621);
  if ((v112 & 0x40000) == 0)
  {
LABEL_92:
    if ((v112 & 0x80000) == 0) {
      goto LABEL_93;
    }
    goto LABEL_160;
  }
LABEL_159:
  *(unsigned char *)(a1 + 622) = *(unsigned char *)(a2 + 622);
  if ((v112 & 0x80000) == 0)
  {
LABEL_93:
    if ((v112 & 0x100000) == 0) {
      goto LABEL_94;
    }
    goto LABEL_161;
  }
LABEL_160:
  *(unsigned char *)(a1 + 623) = *(unsigned char *)(a2 + 623);
  if ((v112 & 0x100000) == 0)
  {
LABEL_94:
    if ((v112 & 0x200000) == 0) {
      goto LABEL_95;
    }
    goto LABEL_162;
  }
LABEL_161:
  *(unsigned char *)(a1 + 624) = *(unsigned char *)(a2 + 624);
  if ((v112 & 0x200000) == 0)
  {
LABEL_95:
    if ((v112 & 0x400000) == 0) {
      goto LABEL_96;
    }
LABEL_163:
    *(unsigned char *)(a1 + 626) = *(unsigned char *)(a2 + 626);
    if ((v112 & 0x800000) == 0) {
      goto LABEL_98;
    }
    goto LABEL_97;
  }
LABEL_162:
  *(unsigned char *)(a1 + 625) = *(unsigned char *)(a2 + 625);
  if ((v112 & 0x400000) != 0) {
    goto LABEL_163;
  }
LABEL_96:
  if ((v112 & 0x800000) != 0) {
LABEL_97:
  }
    *(unsigned char *)(a1 + 627) = *(unsigned char *)(a2 + 627);
LABEL_98:
  *(_DWORD *)(a1 + 16) |= v112;
LABEL_99:
  if (!HIBYTE(v112)) {
    goto LABEL_109;
  }
  if ((v112 & 0x1000000) != 0)
  {
    *(_DWORD *)(a1 + 628) = *(_DWORD *)(a2 + 628);
    if ((v112 & 0x2000000) == 0)
    {
LABEL_102:
      if ((v112 & 0x4000000) == 0) {
        goto LABEL_103;
      }
      goto LABEL_174;
    }
  }
  else if ((v112 & 0x2000000) == 0)
  {
    goto LABEL_102;
  }
  *(_DWORD *)(a1 + 632) = *(_DWORD *)(a2 + 632);
  if ((v112 & 0x4000000) == 0)
  {
LABEL_103:
    if ((v112 & 0x8000000) == 0) {
      goto LABEL_104;
    }
    goto LABEL_175;
  }
LABEL_174:
  *(_DWORD *)(a1 + 636) = *(_DWORD *)(a2 + 636);
  if ((v112 & 0x8000000) == 0)
  {
LABEL_104:
    if ((v112 & 0x10000000) == 0) {
      goto LABEL_105;
    }
    goto LABEL_176;
  }
LABEL_175:
  *(unsigned char *)(a1 + 640) = *(unsigned char *)(a2 + 640);
  if ((v112 & 0x10000000) == 0)
  {
LABEL_105:
    if ((v112 & 0x20000000) == 0) {
      goto LABEL_106;
    }
    goto LABEL_177;
  }
LABEL_176:
  *(unsigned char *)(a1 + 641) = *(unsigned char *)(a2 + 641);
  if ((v112 & 0x20000000) == 0)
  {
LABEL_106:
    if ((v112 & 0x40000000) == 0) {
      goto LABEL_107;
    }
LABEL_178:
    *(unsigned char *)(a1 + 643) = *(unsigned char *)(a2 + 643);
    if ((v112 & 0x80000000) == 0) {
      goto LABEL_108;
    }
LABEL_179:
    *(_DWORD *)(a1 + 644) = *(_DWORD *)(a2 + 644);
    goto LABEL_108;
  }
LABEL_177:
  *(unsigned char *)(a1 + 642) = *(unsigned char *)(a2 + 642);
  if ((v112 & 0x40000000) != 0) {
    goto LABEL_178;
  }
LABEL_107:
  if ((v112 & 0x80000000) != 0) {
    goto LABEL_179;
  }
LABEL_108:
  *(_DWORD *)(a1 + 16) |= v112;
LABEL_109:
  int v113 = *(_DWORD *)(a2 + 20);
  if ((v113 & 0x7F) == 0) {
    goto LABEL_119;
  }
  if (v113)
  {
    *(_DWORD *)(a1 + 648) = *(_DWORD *)(a2 + 648);
    if ((v113 & 2) == 0)
    {
LABEL_112:
      if ((v113 & 4) == 0) {
        goto LABEL_113;
      }
      goto LABEL_167;
    }
  }
  else if ((v113 & 2) == 0)
  {
    goto LABEL_112;
  }
  *(unsigned char *)(a1 + 652) = *(unsigned char *)(a2 + 652);
  if ((v113 & 4) == 0)
  {
LABEL_113:
    if ((v113 & 8) == 0) {
      goto LABEL_114;
    }
    goto LABEL_168;
  }
LABEL_167:
  *(unsigned char *)(a1 + 653) = *(unsigned char *)(a2 + 653);
  if ((v113 & 8) == 0)
  {
LABEL_114:
    if ((v113 & 0x10) == 0) {
      goto LABEL_115;
    }
    goto LABEL_169;
  }
LABEL_168:
  *(unsigned char *)(a1 + 654) = *(unsigned char *)(a2 + 654);
  if ((v113 & 0x10) == 0)
  {
LABEL_115:
    if ((v113 & 0x20) == 0) {
      goto LABEL_116;
    }
LABEL_170:
    *(_DWORD *)(a1 + 660) = *(_DWORD *)(a2 + 660);
    if ((v113 & 0x40) == 0) {
      goto LABEL_118;
    }
    goto LABEL_117;
  }
LABEL_169:
  *(_DWORD *)(a1 + 656) = *(_DWORD *)(a2 + 656);
  if ((v113 & 0x20) != 0) {
    goto LABEL_170;
  }
LABEL_116:
  if ((v113 & 0x40) != 0) {
LABEL_117:
  }
    *(_DWORD *)(a1 + 664) = *(_DWORD *)(a2 + 664);
LABEL_118:
  *(_DWORD *)(a1 + 20) |= v113;
LABEL_119:
  uint64_t v114 = *(void *)(a2 + 8);
  if (v114)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v114 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

BOOL sub_140B5F8(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 344);
  do
  {
    int v2 = v1;
    if ((int)v1 < 1) {
      break;
    }
    uint64_t v3 = *(void *)(*(void *)(a1 + 352) + 8 * v1--);
  }
  while ((~*(_DWORD *)(v3 + 16) & 3) == 0);
  return v2 < 1;
}

void *sub_140B630@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gemini.StructuredAttributes");
}

BOOL sub_140B640(unsigned int a1)
{
  BOOL result = 1;
  if ((a1 > 0x3D || ((1 << a1) & 0x2ACFF80800010017) == 0)
    && (a1 - 65 > 0x2A || ((1 << (a1 - 65)) & 0x7F800000001) == 0))
  {
    return a1 == 1016;
  }
  return result;
}

uint64_t sub_140B6A8(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_9;
    }
  }
  else if (v4)
  {
    goto LABEL_9;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_9:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_140B760(uint64_t a1)
{
  sub_140B6A8(a1);

  operator delete();
}

uint64_t sub_140B798(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v20 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
    return *(void *)v20;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    int v7 = (char *)(*(void *)v20 + 1);
    unsigned int v8 = **(unsigned char **)v20;
    if ((char)**(unsigned char **)v20 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        int v7 = (char *)sub_188C180(*(uint64_t *)v20, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        int v7 = (char *)(*(void *)v20 + 2);
      }
    }
    *(void *)uint64_t v20 = v7;
    if (v8 >> 3 == 2)
    {
      if (v8 == 18)
      {
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v15 = *(void *)(a1 + 8);
        uint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          uint64_t v16 = (uint64_t *)*v16;
        }
        int v17 = (void *)(a1 + 32);
        goto LABEL_27;
      }
    }
    else if (v8 >> 3 == 1 && v8 == 10)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v18 = *(void *)(a1 + 8);
      uint64_t v16 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
      if (v18) {
        uint64_t v16 = (uint64_t *)*v16;
      }
      int v17 = (void *)(a1 + 24);
LABEL_27:
      int v19 = (std::string *)sub_1880F84(v17, v16);
      int v14 = (void *)sub_188C244(v19, *(char **)v20, (uint64_t)a3);
      goto LABEL_28;
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v7 = *(char **)v20;
    }
    int v14 = sub_1885AC0(v8, v13, v7, a3);
LABEL_28:
    *(void *)uint64_t v20 = v14;
    if (!v14) {
      goto LABEL_34;
    }
    if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
      return *(void *)v20;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v20;
  }
LABEL_34:
  *(void *)uint64_t v20 = 0;
  return *(void *)v20;
}

char *sub_140B940(uint64_t a1, char *__dst, void *a3)
{
  int v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    int v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 2) != 0) {
    int v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v9 + 31) < 0)
  {
    unsigned int v10 = *(void **)(v9 + 8);
    uint64_t v11 = *(void *)(v9 + 16);
  }
  else
  {
    unsigned int v10 = (void *)(v9 + 8);
    LODWORD(v11) = *(unsigned __int8 *)(v9 + 31);
  }
  if (*a3 - (void)v4 >= (int)v11)
  {
    uint64_t v12 = (int)v11;
    memcpy(v4, v10, (int)v11);
    v4 += v12;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v10, v11, v4);
}

uint64_t sub_140BA2C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_12;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
  uint64_t v5 = *(void *)(v3 + 8);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = v4;
  }
  uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    unint64_t v6 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    v2 += v12;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_140BB08()
{
  return 1;
}

void *sub_140BB10@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gemini.GeometryDetails");
}

uint64_t sub_140BB20(uint64_t a1)
{
  unint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_12;
    }
  }
  else if (v4)
  {
    goto LABEL_12;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if ((uint64_t (***)())a1 != &off_2537930 && *(void *)(a1 + 40))
  {
    sub_15B2C44();
    operator delete();
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_12:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_140BC08(uint64_t a1)
{
  sub_140BB20(a1);

  operator delete();
}

uint64_t sub_140BC40(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 7) == 0) {
    goto LABEL_6;
  }
  if ((v2 & 1) == 0)
  {
    if ((v2 & 2) == 0) {
      goto LABEL_4;
    }
    goto LABEL_14;
  }
  unint64_t v5 = *(void *)(result + 24) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v5 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v5 = 0;
    *(unsigned char *)(v5 + 23) = 0;
    if ((v2 & 2) != 0) {
      goto LABEL_14;
    }
LABEL_4:
    if ((v2 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  **(unsigned char **)unint64_t v5 = 0;
  *(void *)(v5 + 8) = 0;
  if ((v2 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_14:
  unint64_t v6 = *(void *)(result + 32) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v6 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v6 = 0;
    *(unsigned char *)(v6 + 23) = 0;
    if ((v2 & 4) == 0) {
      goto LABEL_6;
    }
LABEL_5:
    BOOL result = sub_15B2C80(*(void *)(result + 40));
    goto LABEL_6;
  }
  **(unsigned char **)unint64_t v6 = 0;
  *(void *)(v6 + 8) = 0;
  if ((v2 & 4) != 0) {
    goto LABEL_5;
  }
LABEL_6:
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_140BD10(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v23 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v23, a3[11].i32[1])) {
    return *(void *)v23;
  }
  unint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = (unsigned __int8 *)(*(void *)v23 + 1);
    unsigned int v8 = **(unsigned char **)v23;
    if ((char)**(unsigned char **)v23 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if ((char)*v7 < 0)
      {
        uint64_t v7 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v23, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (unsigned __int8 *)(*(void *)v23 + 2);
      }
    }
    *(void *)uint64_t v23 = v7;
    unsigned int v11 = v8 >> 3;
    if (v8 >> 3 != 20) {
      break;
    }
    if (v8 != 162) {
      goto LABEL_14;
    }
    *(_DWORD *)(a1 + 16) |= 4u;
    uint64_t v16 = *(void **)(a1 + 40);
    if (!v16)
    {
      int v17 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        int v17 = (void *)*v17;
      }
      uint64_t v16 = sub_15C1B30((uint64_t)v17);
      *(void *)(a1 + 40) = v16;
      uint64_t v7 = *(unsigned __int8 **)v23;
    }
    uint64_t v15 = sub_125CF74(a3, (uint64_t)v16, v7);
LABEL_35:
    *(void *)uint64_t v23 = v15;
    if (!v15) {
      goto LABEL_41;
    }
    if (sub_11947B8((uint64_t)a3, (char **)v23, a3[11].i32[1])) {
      return *(void *)v23;
    }
  }
  if (v11 == 10)
  {
    if (v8 == 82)
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      uint64_t v18 = *(void *)(a1 + 8);
      int v19 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
      if (v18) {
        int v19 = (uint64_t *)*v19;
      }
      uint64_t v20 = (void *)(a1 + 32);
      goto LABEL_34;
    }
  }
  else if (v11 == 1 && v8 == 10)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v21 = *(void *)(a1 + 8);
    int v19 = (uint64_t *)(v21 & 0xFFFFFFFFFFFFFFFCLL);
    if (v21) {
      int v19 = (uint64_t *)*v19;
    }
    uint64_t v20 = (void *)(a1 + 24);
LABEL_34:
    int v22 = (std::string *)sub_1880F84(v20, v19);
    uint64_t v15 = (uint64_t)sub_188C244(v22, *(char **)v23, (uint64_t)a3);
    goto LABEL_35;
  }
LABEL_14:
  if (v8) {
    BOOL v13 = (v8 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v6)
    {
      int v14 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      int v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = *(unsigned __int8 **)v23;
    }
    uint64_t v15 = (uint64_t)sub_1885AC0(v8, v14, (char *)v7, a3);
    goto LABEL_35;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v23;
  }
LABEL_41:
  *(void *)uint64_t v23 = 0;
  return *(void *)v23;
}

unsigned char *sub_140BF10(uint64_t a1, unsigned char *__dst, void *a3)
{
  char v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    char v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_13;
      }
      goto LABEL_7;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  char v4 = sub_117A0AC(a3, 10, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) == 0) {
    goto LABEL_13;
  }
LABEL_7:
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v7 = *(void *)(a1 + 40);
  *(_WORD *)char v4 = 418;
  unsigned int v8 = *(_DWORD *)(v7 + 20);
  v4[2] = v8;
  if (v8 > 0x7F) {
    unsigned int v9 = sub_188A9CC(v8, v4 + 2);
  }
  else {
    unsigned int v9 = v4 + 3;
  }
  char v4 = sub_15B2EA4(v7, v9, a3);
LABEL_13:
  uint64_t v10 = *(void *)(a1 + 8);
  if ((v10 & 1) == 0) {
    return v4;
  }
  unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v12 + 31) < 0)
  {
    BOOL v13 = *(void **)(v12 + 8);
    uint64_t v14 = *(void *)(v12 + 16);
  }
  else
  {
    BOOL v13 = (void *)(v12 + 8);
    LODWORD(v14) = *(unsigned __int8 *)(v12 + 31);
  }
  if (*a3 - (void)v4 >= (int)v14)
  {
    uint64_t v15 = (int)v14;
    memcpy(v4, v13, (int)v14);
    v4 += v15;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v13, v14, v4);
}

uint64_t sub_140C06C(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 7) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_14;
  }
  if (v2)
  {
    unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
    uint64_t v6 = *(void *)(v4 + 8);
    if ((v5 & 0x80u) == 0) {
      uint64_t v6 = v5;
    }
    uint64_t v3 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_9:
    unint64_t v7 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v8 = *(unsigned __int8 *)(v7 + 23);
    uint64_t v9 = *(void *)(v7 + 8);
    if ((v8 & 0x80u) == 0) {
      uint64_t v9 = v8;
    }
    v3 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v2 & 4) != 0)
  {
    uint64_t v10 = sub_15B2F90(*(void *)(a1 + 40));
    v3 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
LABEL_14:
  uint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v13 + 31) < 0) {
      uint64_t v14 = *(void *)(v13 + 16);
    }
    else {
      uint64_t v14 = *(unsigned __int8 *)(v13 + 31);
    }
    v3 += v14;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_140C194(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 7) == 0) {
    goto LABEL_20;
  }
  if (v4)
  {
    uint64_t v5 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
    uint64_t v6 = (std::string **)&result[1];
    std::string::size_type size = v3->__r_.__value_.__l.__size_;
    uint64_t v8 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
    if (size) {
      uint64_t v8 = (uint64_t *)*v8;
    }
    BOOL result = sub_1881DF4(v6, v5, v8);
    if ((v4 & 2) == 0)
    {
LABEL_4:
      if ((v4 & 4) == 0) {
        goto LABEL_20;
      }
      goto LABEL_12;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_4;
  }
  uint64_t v9 = (long long *)(*(void *)(a2 + 32) & 0xFFFFFFFFFFFFFFFELL);
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
  std::string::size_type v10 = v3->__r_.__value_.__l.__size_;
  uint64_t v11 = (uint64_t *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
  if (v10) {
    uint64_t v11 = (uint64_t *)*v11;
  }
  BOOL result = sub_1881DF4((std::string **)&v3[1].__r_.__value_.__l.__size_, v9, v11);
  if ((v4 & 4) != 0)
  {
LABEL_12:
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
    unint64_t v12 = (std::string *)v3[1].__r_.__value_.__r.__words[2];
    if (!v12)
    {
      std::string::size_type v13 = v3->__r_.__value_.__l.__size_;
      uint64_t v14 = (void *)(v13 & 0xFFFFFFFFFFFFFFFCLL);
      if (v13) {
        uint64_t v14 = (void *)*v14;
      }
      unint64_t v12 = (std::string *)sub_15C1B30((uint64_t)v14);
      v3[1].__r_.__value_.__r.__words[2] = (std::string::size_type)v12;
    }
    if (*(void *)(a2 + 40)) {
      uint64_t v15 = *(uint64_t (****)())(a2 + 40);
    }
    else {
      uint64_t v15 = &off_253F2A0;
    }
    BOOL result = sub_11EC100(v12, (uint64_t)v15);
  }
LABEL_20:
  uint64_t v16 = *(void *)(a2 + 8);
  if (v16)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v16 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_140C2C0()
{
  return 1;
}

void *sub_140C2C8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gemini.AssociatedArtist");
}

uint64_t sub_140C2D8(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      BOOL result = sub_1450A98(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  int v5 = *(_DWORD *)(v1 + 16);
  if ((v5 & 7) != 0)
  {
    if ((v5 & 1) == 0)
    {
      if ((v5 & 2) == 0) {
        goto LABEL_8;
      }
LABEL_14:
      unint64_t v7 = *(void *)(v1 + 56) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v7 + 23) < 0)
      {
        **(unsigned char **)unint64_t v7 = 0;
        *(void *)(v7 + 8) = 0;
        if ((v5 & 4) == 0) {
          goto LABEL_21;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v7 = 0;
        *(unsigned char *)(v7 + 23) = 0;
        if ((v5 & 4) == 0) {
          goto LABEL_21;
        }
      }
      goto LABEL_18;
    }
    unint64_t v6 = *(void *)(v1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v6 + 23) < 0)
    {
      **(unsigned char **)unint64_t v6 = 0;
      *(void *)(v6 + 8) = 0;
      if ((v5 & 2) != 0) {
        goto LABEL_14;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v6 = 0;
      *(unsigned char *)(v6 + 23) = 0;
      if ((v5 & 2) != 0) {
        goto LABEL_14;
      }
    }
LABEL_8:
    if ((v5 & 4) == 0) {
      goto LABEL_21;
    }
LABEL_18:
    unint64_t v8 = *(void *)(v1 + 64) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v8 + 23) < 0)
    {
      **(unsigned char **)unint64_t v8 = 0;
      *(void *)(v8 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v8 = 0;
      *(unsigned char *)(v8 + 23) = 0;
    }
  }
LABEL_21:
  if ((v5 & 0x78) != 0)
  {
    *(void *)(v1 + 72) = 0;
    *(void *)(v1 + 80) = 0;
    *(void *)(v1 + 88) = 0x4014000000000000;
  }
  char v10 = *(unsigned char *)(v1 + 8);
  uint64_t v9 = v1 + 8;
  *(_DWORD *)(v9 + 8) = 0;
  if (v10)
  {
    return sub_188B4AC((uint64_t *)v9);
  }
  return result;
}

uint64_t sub_140C410(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_145160C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

std::string *sub_140C4A0(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    int v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    int v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = (std::string *)sub_1493B58((uint64_t *)&v3[1], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2]- LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    unint64_t v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *unint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 0x7F) != 0)
  {
    if (v9)
    {
      uint64_t v11 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      std::string::size_type v13 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        std::string::size_type v13 = (uint64_t *)*v13;
      }
      uint64_t result = sub_1881DF4((std::string **)&v3[2], v11, v13);
      if ((v9 & 2) == 0)
      {
LABEL_7:
        if ((v9 & 4) == 0) {
          goto LABEL_8;
        }
        goto LABEL_24;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_7;
    }
    uint64_t v14 = (long long *)(*(void *)(a2 + 56) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    std::string::size_type v15 = v3->__r_.__value_.__l.__size_;
    uint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
    if (v15) {
      uint64_t v16 = (uint64_t *)*v16;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[2].__r_.__value_.__l.__size_, v14, v16);
    if ((v9 & 4) == 0)
    {
LABEL_8:
      if ((v9 & 8) == 0) {
        goto LABEL_9;
      }
      goto LABEL_27;
    }
LABEL_24:
    int v17 = (long long *)(*(void *)(a2 + 64) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
    std::string::size_type v18 = v3->__r_.__value_.__l.__size_;
    int v19 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
    if (v18) {
      int v19 = (uint64_t *)*v19;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[2].__r_.__value_.__r.__words[2], v17, v19);
    if ((v9 & 8) == 0)
    {
LABEL_9:
      if ((v9 & 0x10) == 0) {
        goto LABEL_10;
      }
      goto LABEL_28;
    }
LABEL_27:
    v3[3].__r_.__value_.__r.__words[0] = *(void *)(a2 + 72);
    if ((v9 & 0x10) == 0)
    {
LABEL_10:
      if ((v9 & 0x20) == 0) {
        goto LABEL_11;
      }
      goto LABEL_29;
    }
LABEL_28:
    LODWORD(v3[3].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 80);
    if ((v9 & 0x20) == 0)
    {
LABEL_11:
      if ((v9 & 0x40) == 0)
      {
LABEL_13:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v9;
        goto LABEL_14;
      }
LABEL_12:
      v3[3].__r_.__value_.__r.__words[2] = *(void *)(a2 + 88);
      goto LABEL_13;
    }
LABEL_29:
    HIDWORD(v3[3].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 84);
    if ((v9 & 0x40) == 0) {
      goto LABEL_13;
    }
    goto LABEL_12;
  }
LABEL_14:
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_140C670(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_13;
    }
  }
  else if (v4)
  {
    goto LABEL_13;
  }
  int v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(uint64_t **)(a1 + 40) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 40));
  }
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 48));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_13:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_140C750(uint64_t a1)
{
  sub_140C670(a1);

  operator delete();
}

uint64_t sub_140C788(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 0xF) == 0) {
    goto LABEL_22;
  }
  if ((v1 & 1) == 0)
  {
    if ((v1 & 2) == 0) {
      goto LABEL_4;
    }
LABEL_11:
    unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)unint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
      if ((v1 & 4) != 0) {
        goto LABEL_15;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
      if ((v1 & 4) != 0) {
        goto LABEL_15;
      }
    }
LABEL_5:
    if ((v1 & 8) == 0) {
      goto LABEL_22;
    }
LABEL_19:
    unint64_t v5 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v5 + 23) < 0)
    {
      **(unsigned char **)unint64_t v5 = 0;
      *(void *)(v5 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v5 = 0;
      *(unsigned char *)(v5 + 23) = 0;
    }
    goto LABEL_22;
  }
  unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v2 + 23) < 0)
  {
    **(unsigned char **)unint64_t v2 = 0;
    *(void *)(v2 + 8) = 0;
    if ((v1 & 2) != 0) {
      goto LABEL_11;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v2 = 0;
    *(unsigned char *)(v2 + 23) = 0;
    if ((v1 & 2) != 0) {
      goto LABEL_11;
    }
  }
LABEL_4:
  if ((v1 & 4) == 0) {
    goto LABEL_5;
  }
LABEL_15:
  unint64_t v4 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v4 + 23) < 0)
  {
    **(unsigned char **)unint64_t v4 = 0;
    *(void *)(v4 + 8) = 0;
    if ((v1 & 8) == 0) {
      goto LABEL_22;
    }
    goto LABEL_19;
  }
  *(unsigned char *)unint64_t v4 = 0;
  *(unsigned char *)(v4 + 23) = 0;
  if ((v1 & 8) != 0) {
    goto LABEL_19;
  }
LABEL_22:
  char v7 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v7) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_140C874(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v21 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v21, a3[11].i32[1])) {
    return *(void *)v21;
  }
  int v6 = (void *)(a1 + 8);
  while (2)
  {
    char v7 = (char *)(*(void *)v21 + 1);
    unsigned int v8 = **(unsigned char **)v21;
    if ((char)**(unsigned char **)v21 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        char v7 = (char *)sub_188C180(*(uint64_t *)v21, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        char v7 = (char *)(*(void *)v21 + 2);
      }
    }
    *(void *)uint64_t v21 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 10) {
          goto LABEL_29;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v11 = *(void *)(a1 + 8);
        unint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
        if (v11) {
          unint64_t v12 = (uint64_t *)*v12;
        }
        std::string::size_type v13 = (void *)(a1 + 24);
        goto LABEL_25;
      case 2u:
        if (v8 != 18) {
          goto LABEL_29;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v14 = *(void *)(a1 + 8);
        unint64_t v12 = (uint64_t *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
        if (v14) {
          unint64_t v12 = (uint64_t *)*v12;
        }
        std::string::size_type v13 = (void *)(a1 + 32);
        goto LABEL_25;
      case 3u:
        if (v8 != 26) {
          goto LABEL_29;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v15 = *(void *)(a1 + 8);
        unint64_t v12 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          unint64_t v12 = (uint64_t *)*v12;
        }
        std::string::size_type v13 = (void *)(a1 + 40);
        goto LABEL_25;
      case 4u:
        if (v8 != 34) {
          goto LABEL_29;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v16 = *(void *)(a1 + 8);
        unint64_t v12 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
        if (v16) {
          unint64_t v12 = (uint64_t *)*v12;
        }
        std::string::size_type v13 = (void *)(a1 + 48);
LABEL_25:
        int v17 = (std::string *)sub_1880F84(v13, v12);
        std::string::size_type v18 = (void *)sub_188C244(v17, *(char **)v21, (uint64_t)a3);
        goto LABEL_26;
      default:
LABEL_29:
        if (v8) {
          BOOL v19 = (v8 & 7) == 4;
        }
        else {
          BOOL v19 = 1;
        }
        if (!v19)
        {
          if (*v6)
          {
            uint64_t v20 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v20 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            char v7 = *(char **)v21;
          }
          std::string::size_type v18 = sub_1885AC0(v8, v20, v7, a3);
LABEL_26:
          *(void *)uint64_t v21 = v18;
          if (!v18) {
            return 0;
          }
          if (sub_11947B8((uint64_t)a3, (char **)v21, a3[11].i32[1])) {
            return *(void *)v21;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return *(void *)v21;
    }
  }
}

char *sub_140CAC4(uint64_t a1, char *__dst, void *a3)
{
  unint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    unint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_10;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  unint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_10:
  unint64_t v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 8) != 0) {
LABEL_5:
  }
    unint64_t v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), v4);
LABEL_6:
  uint64_t v7 = *(void *)(a1 + 8);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v9 + 31) < 0)
  {
    unsigned int v10 = *(void **)(v9 + 8);
    uint64_t v11 = *(void *)(v9 + 16);
  }
  else
  {
    unsigned int v10 = (void *)(v9 + 8);
    LODWORD(v11) = *(unsigned __int8 *)(v9 + 31);
  }
  if (*a3 - (void)v4 >= (int)v11)
  {
    uint64_t v12 = (int)v11;
    memcpy(v4, v10, (int)v11);
    v4 += v12;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v10, v11, v4);
}

uint64_t sub_140CC00(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((~v2 & 3) != 0)
  {
    uint64_t result = sub_1231798(a1);
  }
  else
  {
    unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
    uint64_t v5 = *(void *)(v3 + 8);
    if ((v4 & 0x80u) == 0) {
      uint64_t v5 = v4;
    }
    uint64_t v6 = (9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6;
    unint64_t v7 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v8 = *(unsigned __int8 *)(v7 + 23);
    uint64_t v9 = *(void *)(v7 + 8);
    if ((v8 & 0x80u) == 0) {
      uint64_t v9 = v8;
    }
    uint64_t result = v5 + v9 + v6 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
  if ((v2 & 0xC) != 0)
  {
    if ((v2 & 4) != 0)
    {
      unint64_t v11 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v12 = *(unsigned __int8 *)(v11 + 23);
      uint64_t v13 = *(void *)(v11 + 8);
      if ((v12 & 0x80u) == 0) {
        uint64_t v13 = v12;
      }
      result += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v2 & 8) != 0)
    {
      unint64_t v14 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v15 = *(unsigned __int8 *)(v14 + 23);
      uint64_t v16 = *(void *)(v14 + 8);
      if ((v15 & 0x80u) == 0) {
        uint64_t v16 = v15;
      }
      result += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  uint64_t v17 = *(void *)(a1 + 8);
  if (v17)
  {
    unint64_t v18 = v17 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v18 + 31) < 0) {
      uint64_t v19 = *(void *)(v18 + 16);
    }
    else {
      uint64_t v19 = *(unsigned __int8 *)(v18 + 31);
    }
    result += v19;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

BOOL sub_140CD70(uint64_t a1)
{
  return (~*(_DWORD *)(a1 + 16) & 3) == 0;
}

void *sub_140CD84@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gemini.BusinessCard.Source");
}

uint64_t sub_140CD94(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  if ((int)v2 >= 1)
  {
    unint64_t v3 = (uint64_t *)(*(void *)(a1 + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      sub_144D38C(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(a1 + 32) = 0;
  }
  uint64_t result = sub_188CC00(a1 + 48);
  uint64_t v6 = *(unsigned int *)(a1 + 80);
  if ((int)v6 >= 1)
  {
    unint64_t v7 = (uint64_t *)(*(void *)(a1 + 88) + 8);
    do
    {
      uint64_t v8 = *v7++;
      uint64_t result = sub_146A460(v8);
      --v6;
    }
    while (v6);
    *(_DWORD *)(a1 + 80) = 0;
  }
  uint64_t v9 = *(unsigned int *)(a1 + 104);
  if ((int)v9 >= 1)
  {
    unsigned int v10 = (uint64_t *)(*(void *)(a1 + 112) + 8);
    do
    {
      uint64_t v11 = *v10++;
      uint64_t result = sub_146A950(v11);
      --v9;
    }
    while (v9);
    *(_DWORD *)(a1 + 104) = 0;
  }
  uint64_t v12 = *(unsigned int *)(a1 + 128);
  if ((int)v12 >= 1)
  {
    uint64_t v13 = (uint64_t *)(*(void *)(a1 + 136) + 8);
    do
    {
      uint64_t v14 = *v13++;
      uint64_t result = sub_146B148(v14);
      --v12;
    }
    while (v12);
    *(_DWORD *)(a1 + 128) = 0;
  }
  uint64_t v15 = *(unsigned int *)(a1 + 152);
  if ((int)v15 >= 1)
  {
    uint64_t v16 = (uint64_t *)(*(void *)(a1 + 160) + 8);
    do
    {
      uint64_t v17 = *v16++;
      uint64_t result = sub_146B6F4(v17);
      --v15;
    }
    while (v15);
    *(_DWORD *)(a1 + 152) = 0;
  }
  int v18 = *(_DWORD *)(a1 + 16);
  if ((v18 & 0x1F) == 0) {
    goto LABEL_28;
  }
  if (v18)
  {
    unint64_t v21 = *(void *)(a1 + 168) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v21 + 23) < 0)
    {
      **(unsigned char **)unint64_t v21 = 0;
      *(void *)(v21 + 8) = 0;
      if ((v18 & 2) != 0) {
        goto LABEL_40;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v21 = 0;
      *(unsigned char *)(v21 + 23) = 0;
      if ((v18 & 2) != 0) {
        goto LABEL_40;
      }
    }
LABEL_24:
    if ((v18 & 4) == 0) {
      goto LABEL_25;
    }
LABEL_44:
    uint64_t result = sub_144D38C(*(void *)(a1 + 184));
    if ((v18 & 8) == 0)
    {
LABEL_26:
      if ((v18 & 0x10) == 0) {
        goto LABEL_28;
      }
      goto LABEL_27;
    }
    goto LABEL_45;
  }
  if ((v18 & 2) == 0) {
    goto LABEL_24;
  }
LABEL_40:
  unint64_t v22 = *(void *)(a1 + 176) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v22 + 23) < 0)
  {
    **(unsigned char **)unint64_t v22 = 0;
    *(void *)(v22 + 8) = 0;
    if ((v18 & 4) != 0) {
      goto LABEL_44;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v22 = 0;
    *(unsigned char *)(v22 + 23) = 0;
    if ((v18 & 4) != 0) {
      goto LABEL_44;
    }
  }
LABEL_25:
  if ((v18 & 8) == 0) {
    goto LABEL_26;
  }
LABEL_45:
  uint64_t result = sub_15B8FB8(*(void *)(a1 + 192));
  if ((v18 & 0x10) != 0) {
LABEL_27:
  }
    uint64_t result = sub_1464034(*(void *)(a1 + 200));
LABEL_28:
  if ((v18 & 0xE0) != 0)
  {
    *(void *)(a1 + 208) = 0;
    *(void *)(a1 + 216) = 0;
  }
  if ((v18 & 0x300) != 0)
  {
    *(void *)(a1 + 224) = 0;
    *(void *)(a1 + 232) = 0;
  }
  char v20 = *(unsigned char *)(a1 + 8);
  uint64_t v19 = a1 + 8;
  *(_DWORD *)(v19 + 8) = 0;
  if (v20)
  {
    return sub_188B4AC((uint64_t *)v19);
  }
  return result;
}

uint64_t sub_140CF78(uint64_t a1)
{
  unint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  if ((uint64_t (***)())a1 != &off_2537998)
  {
    if (*(void *)(a1 + 24))
    {
      sub_15B0994();
      operator delete();
    }
    uint64_t v5 = *(void **)(a1 + 32);
    if (v5)
    {
      sub_146C76C(v5);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_140D048(uint64_t a1)
{
  sub_140CF78(a1);

  operator delete();
}

uint64_t sub_140D080(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 3) != 0)
  {
    if (v2) {
      uint64_t result = (uint64_t)sub_15B09D0(*(void *)(result + 24));
    }
    if ((v2 & 2) != 0) {
      uint64_t result = sub_140CD94(*(void *)(v1 + 32));
    }
  }
  if ((v2 & 0x1C) != 0)
  {
    *(unsigned char *)(v1 + 48) = 0;
    *(void *)(v1 + 40) = 0;
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_140D100(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v36 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v36, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = v36 + 1;
    unsigned int v9 = *v36;
    if (*v36 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v36, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v36 + 2;
      }
    }
    uint64_t v36 = v8;
    switch(v9 >> 3)
    {
      case 3u:
        if (v9 != 24) {
          goto LABEL_40;
        }
        uint64_t v12 = v8 + 1;
        unint64_t v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        int v15 = v13 + (v14 << 7);
        unint64_t v13 = (v15 - 128);
        if (v14 < 0)
        {
          uint64_t v36 = (char *)sub_188C138((uint64_t)v8, (v15 - 128));
          if (!v36) {
            goto LABEL_68;
          }
          unint64_t v13 = v30;
        }
        else
        {
          uint64_t v12 = v8 + 2;
LABEL_13:
          uint64_t v36 = v12;
        }
        if (sub_140B640(v13))
        {
          *(_DWORD *)(a1 + 16) |= 4u;
          *(_DWORD *)(a1 + 40) = v13;
          goto LABEL_48;
        }
        if (*v7) {
          int v34 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          int v34 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v35 = 3;
        goto LABEL_62;
      case 4u:
        if (v9 != 34) {
          goto LABEL_40;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v16 = *(void *)(a1 + 24);
        if (!v16)
        {
          uint64_t v17 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v17 = (void *)*v17;
          }
          uint64_t v16 = sub_15C1918((uint64_t)v17);
          *(void *)(a1 + 24) = v16;
          uint64_t v8 = v36;
        }
        int v18 = sub_1198F14(a3, v16, (unsigned __int8 *)v8);
        goto LABEL_47;
      case 7u:
        if (v9 != 56) {
          goto LABEL_40;
        }
        uint64_t v19 = v8 + 1;
        unint64_t v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_26;
        }
        int v20 = *v19;
        int v21 = v13 + (v20 << 7);
        unint64_t v13 = (v21 - 128);
        if (v20 < 0)
        {
          uint64_t v36 = (char *)sub_188C138((uint64_t)v8, (v21 - 128));
          if (!v36) {
            goto LABEL_68;
          }
          unint64_t v13 = v31;
        }
        else
        {
          uint64_t v19 = v8 + 2;
LABEL_26:
          uint64_t v36 = v19;
        }
        if (v13 > 5)
        {
          if (*v7) {
            int v34 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            int v34 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          int v35 = 7;
LABEL_62:
          sub_188C020(v35, v13, v34);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 8u;
          *(_DWORD *)(a1 + 44) = v13;
        }
        goto LABEL_48;
      case 8u:
        if (v9 != 66) {
          goto LABEL_40;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v22 = *(void *)(a1 + 32);
        if (!v22)
        {
          uint64_t v23 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v23 = (void *)*v23;
          }
          sub_1479294((uint64_t)v23);
          uint64_t v22 = v24;
          *(void *)(a1 + 32) = v24;
          uint64_t v8 = v36;
        }
        int v18 = (char *)sub_12C8D4C(a3, v22, (unsigned __int8 *)v8);
        goto LABEL_47;
      case 9u:
        if (v9 != 72) {
          goto LABEL_40;
        }
        v5 |= 0x10u;
        unint64_t v25 = v8 + 1;
        uint64_t v26 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_39;
        }
        int v27 = *v25;
        uint64_t v26 = v26 + (v27 << 7) - 128;
        if (v27 < 0)
        {
          int v32 = (char *)sub_188C138((uint64_t)v8, v26);
          uint64_t v36 = v32;
          *(unsigned char *)(a1 + 48) = v33 != 0;
          if (!v32) {
            goto LABEL_68;
          }
        }
        else
        {
          unint64_t v25 = v8 + 2;
LABEL_39:
          uint64_t v36 = v25;
          *(unsigned char *)(a1 + 48) = v26 != 0;
        }
        goto LABEL_48;
      default:
LABEL_40:
        if (v9) {
          BOOL v28 = (v9 & 7) == 4;
        }
        else {
          BOOL v28 = 1;
        }
        if (!v28)
        {
          if (*v7)
          {
            int v29 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            int v29 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = v36;
          }
          int v18 = (char *)sub_1885AC0(v9, v29, v8, a3);
LABEL_47:
          uint64_t v36 = v18;
          if (!v18) {
            goto LABEL_68;
          }
LABEL_48:
          if (sub_11947B8((uint64_t)a3, &v36, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_68:
        }
          uint64_t v36 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v36;
    }
  }
}

BOOL sub_140D4BC(unsigned int a1)
{
  return a1 < 6;
}

char *sub_140D4C8(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 4) != 0)
  {
    if (*a3 <= __dst) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 40);
    char *v4 = 24;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 24);
    char *v4 = 34;
    unsigned int v11 = *(_DWORD *)(v10 + 44);
    v4[1] = v11;
    if (v11 > 0x7F) {
      uint64_t v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      uint64_t v12 = v4 + 2;
    }
    char v4 = sub_15B0C0C(v10, v12, a3);
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v13 = *(int *)(a1 + 44);
    char *v4 = 56;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unint64_t v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v16 = *(void *)(a1 + 32);
    char *v4 = 66;
    unsigned int v17 = *(_DWORD *)(v16 + 20);
    v4[1] = v17;
    if (v17 > 0x7F) {
      int v18 = sub_188A9CC(v17, v4 + 1);
    }
    else {
      int v18 = v4 + 2;
    }
    char v4 = sub_146D340(v16, (unint64_t)v18, a3);
  }
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v19 = *(unsigned char *)(a1 + 48);
    char *v4 = 72;
    v4[1] = v19;
    v4 += 2;
  }
  uint64_t v20 = *(void *)(a1 + 8);
  if ((v20 & 1) == 0) {
    return v4;
  }
  unint64_t v22 = v20 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v22 + 31) < 0)
  {
    uint64_t v23 = *(void **)(v22 + 8);
    uint64_t v24 = *(void *)(v22 + 16);
  }
  else
  {
    uint64_t v23 = (void *)(v22 + 8);
    LODWORD(v24) = *(unsigned __int8 *)(v22 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v24)
  {
    uint64_t v25 = (int)v24;
    memcpy(v4, v23, (int)v24);
    v4 += v25;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v23, v24, v4);
}

uint64_t sub_140D778(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0x1F) == 0)
  {
    uint64_t result = 0;
    goto LABEL_22;
  }
  if (v2)
  {
    uint64_t v5 = sub_15B0D90(*(void *)(a1 + 24));
    uint64_t v3 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_7:
    uint64_t v6 = sub_146DAD4(*(void *)(a1 + 32));
    v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_8:
  if ((v2 & 4) != 0)
  {
    int v7 = *(_DWORD *)(a1 + 40);
    if (v7 < 0) {
      uint64_t v8 = 11;
    }
    else {
      uint64_t v8 = ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v3 += v8;
    if ((v2 & 8) == 0) {
      goto LABEL_19;
    }
    goto LABEL_15;
  }
  if ((v2 & 8) != 0)
  {
LABEL_15:
    int v9 = *(_DWORD *)(a1 + 44);
    if (v9 < 0) {
      uint64_t v10 = 11;
    }
    else {
      uint64_t v10 = ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v3 += v10;
  }
LABEL_19:
  if ((v2 & 0x10) != 0) {
    uint64_t result = v3 + 2;
  }
  else {
    uint64_t result = v3;
  }
LABEL_22:
  uint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    unint64_t v12 = v11 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v12 + 31) < 0) {
      uint64_t v13 = *(void *)(v12 + 16);
    }
    else {
      uint64_t v13 = *(unsigned __int8 *)(v12 + 31);
    }
    result += v13;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

void sub_140D8C8(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0x1F) != 0)
  {
    if (v4)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v6 = *(void *)(a1 + 24);
      if (!v6)
      {
        uint64_t v7 = *(void *)(a1 + 8);
        uint64_t v8 = (void *)(v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (v7) {
          uint64_t v8 = (void *)*v8;
        }
        uint64_t v6 = sub_15C1918((uint64_t)v8);
        *(void *)(a1 + 24) = v6;
      }
      if (*(void *)(a2 + 24)) {
        int v9 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        int v9 = &off_253F1A0;
      }
      sub_15B0E24(v6, (uint64_t)v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_29;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v10 = *(void *)(a1 + 32);
    if (!v10)
    {
      uint64_t v11 = *(void *)(a1 + 8);
      unint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        unint64_t v12 = (void *)*v12;
      }
      sub_1479294((uint64_t)v12);
      *(void *)(a1 + 32) = v10;
    }
    if (*(void *)(a2 + 32)) {
      uint64_t v13 = *(uint64_t (****)())(a2 + 32);
    }
    else {
      uint64_t v13 = &off_25397E0;
    }
    sub_140DA10(v10, (uint64_t)v13);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_30;
    }
LABEL_29:
    *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0)
      {
LABEL_8:
        *(_DWORD *)(a1 + 16) |= v4;
        goto LABEL_9;
      }
LABEL_7:
      *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
      goto LABEL_8;
    }
LABEL_30:
    *(_DWORD *)(a1 + 44) = *(_DWORD *)(a2 + 44);
    if ((v4 & 0x10) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
LABEL_9:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_140DA10(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_12C33E8((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    uint64_t v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    uint64_t v10 = (const std::string **)(*(void *)(a2 + 64) + 8);
    uint64_t v11 = (std::string **)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_188FB98(a1 + 48, v11, v10, v9, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v12 = *(_DWORD *)(a1 + 56) + v9;
    *(_DWORD *)(a1 + 56) = v12;
    uint64_t v13 = *(int **)(a1 + 64);
    if (*v13 < v12) {
      int *v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 80);
  if (v14)
  {
    unint64_t v15 = (uint64_t *)(*(void *)(a2 + 88) + 8);
    uint64_t v16 = (std::string **)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_122BC08((std::string *)(a1 + 72), v16, v15, v14, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v17 = *(_DWORD *)(a1 + 80) + v14;
    *(_DWORD *)(a1 + 80) = v17;
    int v18 = *(int **)(a1 + 88);
    if (*v18 < v17) {
      *int v18 = v17;
    }
  }
  int v19 = *(_DWORD *)(a2 + 104);
  if (v19)
  {
    uint64_t v20 = (uint64_t *)(*(void *)(a2 + 112) + 8);
    int v21 = (std::string **)sub_188CCE4(a1 + 96, *(_DWORD *)(a2 + 104));
    sub_149431C((uint64_t *)(a1 + 96), v21, v20, v19, **(_DWORD **)(a1 + 112) - *(_DWORD *)(a1 + 104));
    int v22 = *(_DWORD *)(a1 + 104) + v19;
    *(_DWORD *)(a1 + 104) = v22;
    uint64_t v23 = *(int **)(a1 + 112);
    if (*v23 < v22) {
      *uint64_t v23 = v22;
    }
  }
  int v24 = *(_DWORD *)(a2 + 128);
  if (v24)
  {
    uint64_t v25 = (uint64_t *)(*(void *)(a2 + 136) + 8);
    uint64_t v26 = (std::string **)sub_188CCE4(a1 + 120, *(_DWORD *)(a2 + 128));
    sub_14943A8((std::string *)(a1 + 120), v26, v25, v24, **(_DWORD **)(a1 + 136) - *(_DWORD *)(a1 + 128));
    int v27 = *(_DWORD *)(a1 + 128) + v24;
    *(_DWORD *)(a1 + 128) = v27;
    BOOL v28 = *(int **)(a1 + 136);
    if (*v28 < v27) {
      int *v28 = v27;
    }
  }
  int v29 = *(_DWORD *)(a2 + 152);
  if (v29)
  {
    unint64_t v30 = (uint64_t *)(*(void *)(a2 + 160) + 8);
    unint64_t v31 = (std::string **)sub_188CCE4(a1 + 144, *(_DWORD *)(a2 + 152));
    sub_1494424((std::string *)(a1 + 144), v31, v30, v29, **(_DWORD **)(a1 + 160) - *(_DWORD *)(a1 + 152));
    int v32 = *(_DWORD *)(a1 + 152) + v29;
    *(_DWORD *)(a1 + 152) = v32;
    uint64_t v33 = *(int **)(a1 + 160);
    if (*v33 < v32) {
      *uint64_t v33 = v32;
    }
  }
  int v34 = *(_DWORD *)(a2 + 16);
  if ((_BYTE)v34)
  {
    if (v34)
    {
      uint64_t v36 = (long long *)(*(void *)(a2 + 168) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v37 = *(void *)(a1 + 8);
      uint64_t v38 = (uint64_t *)(v37 & 0xFFFFFFFFFFFFFFFCLL);
      if (v37) {
        uint64_t v38 = (uint64_t *)*v38;
      }
      sub_1881DF4((std::string **)(a1 + 168), v36, v38);
      if ((v34 & 2) == 0)
      {
LABEL_22:
        if ((v34 & 4) == 0) {
          goto LABEL_23;
        }
        goto LABEL_46;
      }
    }
    else if ((v34 & 2) == 0)
    {
      goto LABEL_22;
    }
    int v39 = (long long *)(*(void *)(a2 + 176) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v40 = *(void *)(a1 + 8);
    uint64_t v41 = (uint64_t *)(v40 & 0xFFFFFFFFFFFFFFFCLL);
    if (v40) {
      uint64_t v41 = (uint64_t *)*v41;
    }
    sub_1881DF4((std::string **)(a1 + 176), v39, v41);
    if ((v34 & 4) == 0)
    {
LABEL_23:
      if ((v34 & 8) == 0) {
        goto LABEL_24;
      }
      goto LABEL_54;
    }
LABEL_46:
    *(_DWORD *)(a1 + 16) |= 4u;
    uint64_t v42 = *(void *)(a1 + 184);
    if (!v42)
    {
      uint64_t v43 = *(void *)(a1 + 8);
      int v44 = (void *)(v43 & 0xFFFFFFFFFFFFFFFCLL);
      if (v43) {
        int v44 = (void *)*v44;
      }
      uint64_t v42 = sub_147818C((uint64_t)v44);
      *(void *)(a1 + 184) = v42;
    }
    if (*(void *)(a2 + 184)) {
      uint64_t v45 = *(uint64_t (****)())(a2 + 184);
    }
    else {
      uint64_t v45 = &off_2538EE0;
    }
    sub_144F19C(v42, (uint64_t)v45);
    if ((v34 & 8) == 0)
    {
LABEL_24:
      if ((v34 & 0x10) == 0) {
        goto LABEL_25;
      }
      goto LABEL_62;
    }
LABEL_54:
    *(_DWORD *)(a1 + 16) |= 8u;
    uint64_t v46 = *(std::string **)(a1 + 192);
    if (!v46)
    {
      uint64_t v47 = *(void *)(a1 + 8);
      uint64_t v48 = (void *)(v47 & 0xFFFFFFFFFFFFFFFCLL);
      if (v47) {
        uint64_t v48 = (void *)*v48;
      }
      uint64_t v46 = (std::string *)sub_15C1EF4((uint64_t)v48);
      *(void *)(a1 + 192) = v46;
    }
    if (*(void *)(a2 + 192)) {
      int v49 = *(uint64_t (****)())(a2 + 192);
    }
    else {
      int v49 = &off_253F4C8;
    }
    sub_15B9698(v46, (uint64_t)v49);
    if ((v34 & 0x10) == 0)
    {
LABEL_25:
      if ((v34 & 0x20) == 0) {
        goto LABEL_26;
      }
      goto LABEL_70;
    }
LABEL_62:
    *(_DWORD *)(a1 + 16) |= 0x10u;
    uint64_t v50 = *(void *)(a1 + 200);
    if (!v50)
    {
      uint64_t v51 = *(void *)(a1 + 8);
      int v52 = (void *)(v51 & 0xFFFFFFFFFFFFFFFCLL);
      if (v51) {
        int v52 = (void *)*v52;
      }
      sub_1478F54((uint64_t)v52);
      *(void *)(a1 + 200) = v50;
    }
    if (*(void *)(a2 + 200)) {
      unsigned int v53 = *(uint64_t (****)())(a2 + 200);
    }
    else {
      unsigned int v53 = &off_2539528;
    }
    sub_146945C(v50, (uint64_t)v53);
    if ((v34 & 0x20) == 0)
    {
LABEL_26:
      if ((v34 & 0x40) == 0) {
        goto LABEL_27;
      }
      goto LABEL_71;
    }
LABEL_70:
    *(void *)(a1 + 208) = *(void *)(a2 + 208);
    if ((v34 & 0x40) == 0)
    {
LABEL_27:
      if ((v34 & 0x80) == 0)
      {
LABEL_29:
        *(_DWORD *)(a1 + 16) |= v34;
        goto LABEL_30;
      }
LABEL_28:
      *(_DWORD *)(a1 + 220) = *(_DWORD *)(a2 + 220);
      goto LABEL_29;
    }
LABEL_71:
    *(_DWORD *)(a1 + 216) = *(_DWORD *)(a2 + 216);
    if ((v34 & 0x80) == 0) {
      goto LABEL_29;
    }
    goto LABEL_28;
  }
LABEL_30:
  if ((v34 & 0x300) != 0)
  {
    if ((v34 & 0x100) != 0) {
      *(_DWORD *)(a1 + 224) = *(_DWORD *)(a2 + 224);
    }
    if ((v34 & 0x200) != 0) {
      *(void *)(a1 + 232) = *(void *)(a2 + 232);
    }
    *(_DWORD *)(a1 + 16) |= v34;
  }
  uint64_t v35 = *(void *)(a2 + 8);
  if (v35)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v35 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_140DEA8(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if (v2)
  {
    uint64_t result = sub_15B0F18(*(void *)(a1 + 24));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 2) == 0) {
    return 1;
  }
  uint64_t result = sub_140DEF4(*(void *)(a1 + 32));
  if (result) {
    return 1;
  }
  return result;
}

uint64_t sub_140DEF4(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 4) == 0) {
    return 0;
  }
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  while ((int)v2 >= 1)
  {
    uint64_t v3 = v2 - 1;
    char v4 = sub_144F8A4(*(void *)(*(void *)(a1 + 40) + 8 * v2));
    uint64_t v2 = v3;
    if ((v4 & 1) == 0) {
      return 0;
    }
  }
  uint64_t v5 = *(unsigned int *)(a1 + 80);
  while ((int)v5 >= 1)
  {
    uint64_t v6 = *(void *)(*(void *)(a1 + 88) + 8 * v5--);
    if ((~*(_DWORD *)(v6 + 16) & 3) != 0) {
      return 0;
    }
  }
  uint64_t v7 = *(unsigned int *)(a1 + 104);
  while ((int)v7 >= 1)
  {
    uint64_t v8 = *(void *)(*(void *)(a1 + 112) + 8 * v7--);
    if ((*(unsigned char *)(v8 + 16) & 1) == 0) {
      return 0;
    }
  }
  uint64_t v9 = *(unsigned int *)(a1 + 152);
  uint64_t v10 = *(void *)(a1 + 160);
  while ((int)v9 >= 1)
  {
    uint64_t v11 = v9 - 1;
    BOOL v12 = sub_146C118(*(void *)(v10 + 8 * v9));
    uint64_t v9 = v11;
    if (!v12) {
      return 0;
    }
  }
  int v14 = *(_DWORD *)(a1 + 16);
  if ((v14 & 4) != 0)
  {
    uint64_t result = sub_144F8A4(*(void *)(a1 + 184));
    if (!result) {
      return result;
    }
    int v14 = *(_DWORD *)(a1 + 16);
  }
  if ((v14 & 8) != 0)
  {
    uint64_t result = sub_15B9824(*(void *)(a1 + 192));
    if (!result) {
      return result;
    }
    int v14 = *(_DWORD *)(a1 + 16);
  }
  if ((v14 & 0x10) == 0) {
    return 1;
  }
  uint64_t result = sub_146A1C8(*(void *)(a1 + 200));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_140E008@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gemini.BusinessCard.Geocode");
}

void *sub_140E018(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_140E08C(void *a1)
{
  sub_140E018(a1);

  operator delete();
}

uint64_t sub_140E0C4(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 7) != 0)
  {
    *(void *)(a1 + 24) = 0x100000000;
    *(_DWORD *)(a1 + 32) = 1;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_140E0F8(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v30 = a2;
  if (sub_11947B8((uint64_t)a3, &v30, a3[11].i32[1])) {
    return v30;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v30 + 1;
    unsigned int v8 = *v30;
    if (*v30 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v30, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v30 + 2;
      }
    }
    unint64_t v30 = v7;
    unsigned int v11 = v8 >> 3;
    if (v8 >> 3 == 3)
    {
      if (v8 != 24) {
        goto LABEL_14;
      }
      unint64_t v15 = v7 + 1;
      unint64_t v16 = *v7;
      if (*v7 < 0)
      {
        int v17 = *v15;
        int v18 = v16 + (v17 << 7);
        unint64_t v16 = (v18 - 128);
        if (v17 < 0)
        {
          unint64_t v30 = (char *)sub_188C138((uint64_t)v7, (v18 - 128));
          if (!v30) {
            return 0;
          }
          unint64_t v16 = v25;
          goto LABEL_27;
        }
        unint64_t v15 = v7 + 2;
      }
      unint64_t v30 = v15;
LABEL_27:
      if ((v16 - 1) > 2)
      {
        if (*v6) {
          BOOL v28 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          BOOL v28 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v29 = 3;
        goto LABEL_59;
      }
      *(_DWORD *)(a1 + 16) |= 4u;
      *(_DWORD *)(a1 + 32) = v16;
      goto LABEL_42;
    }
    if (v11 != 2) {
      break;
    }
    if (v8 != 16) {
      goto LABEL_14;
    }
    int v19 = v7 + 1;
    unint64_t v16 = *v7;
    if (*v7 < 0)
    {
      int v20 = *v19;
      int v21 = v16 + (v20 << 7);
      unint64_t v16 = (v21 - 128);
      if (v20 < 0)
      {
        unint64_t v30 = (char *)sub_188C138((uint64_t)v7, (v21 - 128));
        if (!v30) {
          return 0;
        }
        unint64_t v16 = v26;
        goto LABEL_34;
      }
      int v19 = v7 + 2;
    }
    unint64_t v30 = v19;
LABEL_34:
    if (v16 > 7)
    {
      if (*v6) {
        BOOL v28 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        BOOL v28 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      int v29 = 2;
      goto LABEL_59;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    *(_DWORD *)(a1 + 24) = v16;
LABEL_42:
    if (sub_11947B8((uint64_t)a3, &v30, a3[11].i32[1])) {
      return v30;
    }
  }
  if (v11 == 1 && v8 == 8)
  {
    int v22 = v7 + 1;
    unint64_t v16 = *v7;
    if ((*v7 & 0x80000000) == 0) {
      goto LABEL_39;
    }
    int v23 = *v22;
    int v24 = v16 + (v23 << 7);
    unint64_t v16 = (v24 - 128);
    if (v23 < 0)
    {
      unint64_t v30 = (char *)sub_188C138((uint64_t)v7, (v24 - 128));
      if (!v30) {
        return 0;
      }
      unint64_t v16 = v27;
    }
    else
    {
      int v22 = v7 + 2;
LABEL_39:
      unint64_t v30 = v22;
    }
    if ((v16 - 1) <= 5)
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      *(_DWORD *)(a1 + 28) = v16;
      goto LABEL_42;
    }
    if (*v6) {
      BOOL v28 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else {
      BOOL v28 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
    }
    int v29 = 1;
LABEL_59:
    sub_188C020(v29, v16, v28);
    goto LABEL_42;
  }
LABEL_14:
  if (v8) {
    BOOL v13 = (v8 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v6)
    {
      int v14 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      int v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = v30;
    }
    unint64_t v30 = (char *)sub_1885AC0(v8, v14, v7, a3);
    if (!v30) {
      return 0;
    }
    goto LABEL_42;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v30;
  }
  return 0;
}

BOOL sub_140E3F8(unsigned int a1)
{
  return a1 < 8;
}

unsigned char *sub_140E404(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 28);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 24);
    unsigned char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v13 = *(int *)(a1 + 32);
    unsigned char *v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unint64_t v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return v4;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    int v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    int v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(v4, v19, (int)v20);
    v4 += v21;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v19, v20, v4);
}

uint64_t sub_140E624(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 7) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_19;
  }
  if (v1)
  {
    int v3 = *(_DWORD *)(a1 + 24);
    if (v3 < 0)
    {
      uint64_t v2 = 11;
      if ((v1 & 2) == 0) {
        goto LABEL_14;
      }
    }
    else
    {
      uint64_t v2 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v1 & 2) == 0) {
        goto LABEL_14;
      }
    }
  }
  else
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_14;
    }
  }
  int v4 = *(_DWORD *)(a1 + 28);
  if (v4 < 0) {
    uint64_t v5 = 11;
  }
  else {
    uint64_t v5 = ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v2 += v5;
LABEL_14:
  if ((v1 & 4) != 0)
  {
    int v6 = *(_DWORD *)(a1 + 32);
    if (v6 < 0) {
      uint64_t v7 = 11;
    }
    else {
      uint64_t v7 = ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v7;
  }
LABEL_19:
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_140E718()
{
  return 1;
}

void *sub_140E720@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gemini.BusinessCard.Period.FloatingDay");
}

void *sub_140E730(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_140E7A4(void *a1)
{
  sub_140E730(a1);

  operator delete();
}

uint64_t sub_140E7DC(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 16) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_140E7F4(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v19 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
    goto LABEL_27;
  }
  int v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v19 + 1;
    unsigned int v8 = *v19;
    if (*v19 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v19, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v19 + 2;
      }
    }
    int v19 = v7;
    if (v8 != 8) {
      break;
    }
    unint64_t v13 = v7 + 1;
    int v14 = *v7;
    if ((*v7 & 0x80000000) == 0) {
      goto LABEL_19;
    }
    int v15 = *v13;
    int v14 = v14 + (v15 << 7) - 128;
    if ((v15 & 0x80000000) == 0)
    {
      unint64_t v13 = v7 + 2;
LABEL_19:
      int v19 = v13;
      *(_DWORD *)(a1 + 24) = v14;
      int v5 = 1;
      goto LABEL_20;
    }
    uint64_t v16 = (char *)sub_188C0D0((uint64_t)v7, v14);
    int v19 = v16;
    *(_DWORD *)(a1 + 24) = v17;
    int v5 = 1;
    if (!v16) {
      goto LABEL_28;
    }
LABEL_20:
    if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
      goto LABEL_27;
    }
  }
  if (v8) {
    BOOL v11 = (v8 & 7) == 4;
  }
  else {
    BOOL v11 = 1;
  }
  if (!v11)
  {
    if (*v6)
    {
      unint64_t v12 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v12 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = v19;
    }
    int v19 = (char *)sub_1885AC0(v8, v12, v7, a3);
    if (!v19) {
      goto LABEL_28;
    }
    goto LABEL_20;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    goto LABEL_27;
  }
LABEL_28:
  int v19 = 0;
LABEL_27:
  *(_DWORD *)(a1 + 16) |= v5;
  return v19;
}

unsigned char *sub_140E974(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (unsigned char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v6 = *(_DWORD *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v6;
    if (v6 > 0x7F)
    {
      v4[1] = v6 | 0x80;
      unsigned int v7 = v6 >> 7;
      v4[2] = v6 >> 7;
      v4 += 3;
      if (v6 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v8 = v7 >> 14;
          v7 >>= 7;
          *v4++ = v7;
        }
        while (v8);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    unint64_t v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    unint64_t v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    v4 += v14;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v12, v13, v4);
}

uint64_t sub_140EA9C(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16)) {
    uint64_t v1 = ((9 * (__clz(*(_DWORD *)(a1 + 24) | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  else {
    uint64_t v1 = 0;
  }
  uint64_t v2 = *(void *)(a1 + 8);
  if (v2)
  {
    unint64_t v4 = v2 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v5 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v5 = *(unsigned __int8 *)(v4 + 31);
    }
    v1 += v5;
  }
  *(_DWORD *)(a1 + 20) = v1;
  return v1;
}

uint64_t sub_140EB04()
{
  return 1;
}

void *sub_140EB0C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gemini.BusinessCard.Period.DailyFrequency");
}

void *sub_140EB1C(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1889DA8((uint64_t)(a1 + 3));
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_140EB98(void *a1)
{
  sub_140EB1C(a1);

  operator delete();
}

uint64_t sub_140EBD0(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 16) = 0;
  *(_DWORD *)(result + 32) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_140EBEC(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v31 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v31, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unsigned int v7 = (void *)(a1 + 8);
  while (1)
  {
    unsigned int v8 = v31 + 1;
    unsigned int v9 = *v31;
    if (*v31 < 0)
    {
      int v10 = *v8;
      unsigned int v11 = v9 + (v10 << 7);
      unsigned int v9 = v11 - 128;
      if (v10 < 0)
      {
        unsigned int v8 = (char *)sub_188C180((uint64_t)v31, v11 - 128);
        unsigned int v9 = v12;
      }
      else
      {
        unsigned int v8 = v31 + 2;
      }
    }
    unint64_t v31 = v8;
    if (v9 >> 3 == 2) {
      break;
    }
    if (v9 >> 3 != 1 || v9 != 8) {
      goto LABEL_13;
    }
    unint64_t v26 = v8 + 1;
    int v27 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_45;
    }
    int v28 = *v26;
    int v27 = v27 + (v28 << 7) - 128;
    if ((v28 & 0x80000000) == 0)
    {
      unint64_t v26 = v8 + 2;
LABEL_45:
      unint64_t v31 = v26;
      *(_DWORD *)(a1 + 40) = v27;
      int v5 = 1;
      goto LABEL_46;
    }
    int v29 = (char *)sub_188C0D0((uint64_t)v8, v27);
    unint64_t v31 = v29;
    *(_DWORD *)(a1 + 40) = v30;
    int v5 = 1;
    if (!v29) {
      goto LABEL_55;
    }
LABEL_46:
    if (sub_11947B8((uint64_t)a3, &v31, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 == 16)
  {
    int v17 = v8 - 1;
    while (1)
    {
      unint64_t v31 = v17 + 1;
      unint64_t v18 = v17[1];
      int v19 = v17 + 2;
      if (v17[1] < 0)
      {
        int v20 = *v19;
        int v21 = v18 + (v20 << 7);
        unint64_t v18 = (v21 - 128);
        if (v20 < 0)
        {
          unint64_t v31 = (char *)sub_188C138((uint64_t)(v17 + 1), (v21 - 128));
          if (!v31) {
            goto LABEL_55;
          }
          unint64_t v18 = v24;
          goto LABEL_28;
        }
        int v19 = v17 + 3;
      }
      unint64_t v31 = v19;
LABEL_28:
      if (v18 > 7)
      {
        if (*v7) {
          unint64_t v25 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          unint64_t v25 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        sub_188C020(2, v18, v25);
      }
      else
      {
        uint64_t v22 = *(unsigned int *)(a1 + 24);
        if (v22 == *(_DWORD *)(a1 + 28))
        {
          int v23 = v22 + 1;
          sub_188C80C((unsigned int *)(a1 + 24), v22 + 1);
          *(_DWORD *)(*(void *)(a1 + 32) + 4 * v22) = v18;
        }
        else
        {
          *(_DWORD *)(*(void *)(a1 + 32) + 4 * v22) = v18;
          int v23 = v22 + 1;
        }
        *(_DWORD *)(a1 + 24) = v23;
      }
      int v17 = v31;
      if (*(void *)a3 <= (unint64_t)v31 || *v31 != 16) {
        goto LABEL_46;
      }
    }
  }
  if (v9 == 18)
  {
    *(void *)&long long v32 = a1 + 24;
    *((void *)&v32 + 1) = sub_140E3F8;
    uint64_t v33 = a1 + 8;
    int v34 = 2;
    uint64_t v16 = sub_1112E88((uint64_t)a3, v8, &v32);
    goto LABEL_20;
  }
LABEL_13:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (*v7)
    {
      int v15 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      int v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unsigned int v8 = v31;
    }
    uint64_t v16 = (char *)sub_1885AC0(v9, v15, v8, a3);
LABEL_20:
    unint64_t v31 = v16;
    if (!v16) {
      goto LABEL_55;
    }
    goto LABEL_46;
  }
  if (v8) {
    a3[10].i32[0] = v9 - 1;
  }
  else {
LABEL_55:
  }
    unint64_t v31 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v31;
}

unsigned char *sub_140EEC0(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  unint64_t v4 = (unsigned char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= __dst) {
      unint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v6 = *(_DWORD *)(a1 + 40);
    unsigned char *v4 = 8;
    v4[1] = v6;
    if (v6 > 0x7F)
    {
      v4[1] = v6 | 0x80;
      unsigned int v7 = v6 >> 7;
      v4[2] = v6 >> 7;
      v4 += 3;
      if (v6 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v8 = v7 >> 14;
          v7 >>= 7;
          *v4++ = v7;
        }
        while (v8);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v9 = *(unsigned int *)(a1 + 24);
  if ((int)v9 >= 1)
  {
    for (uint64_t i = 0; i != v9; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v11 = *(int *)(*(void *)(a1 + 32) + 4 * i);
      unsigned char *v4 = 16;
      v4[1] = v11;
      if (v11 > 0x7F)
      {
        v4[1] = v11 | 0x80;
        unint64_t v12 = v11 >> 7;
        v4[2] = v11 >> 7;
        v4 += 3;
        if (v11 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v13 = v12 >> 14;
            v12 >>= 7;
            *v4++ = v12;
          }
          while (v13);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  uint64_t v14 = *(void *)(a1 + 8);
  if ((v14 & 1) == 0) {
    return v4;
  }
  unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v16 + 31) < 0)
  {
    int v17 = *(void **)(v16 + 8);
    uint64_t v18 = *(void *)(v16 + 16);
  }
  else
  {
    int v17 = (void *)(v16 + 8);
    LODWORD(v18) = *(unsigned __int8 *)(v16 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v18)
  {
    uint64_t v19 = (int)v18;
    memcpy(v4, v17, (int)v18);
    v4 += v19;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v17, v18, v4);
}

uint64_t sub_140F090(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 24);
  if (v1)
  {
    int v2 = 0;
    uint64_t v3 = 0;
    do
    {
      int v4 = *(_DWORD *)(*(void *)(a1 + 32) + 4 * v2);
      if (v4 < 0) {
        uint64_t v5 = 10;
      }
      else {
        uint64_t v5 = (9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6;
      }
      v3 += v5;
      ++v2;
    }
    while (v1 != v2);
  }
  else
  {
    uint64_t v3 = 0;
  }
  uint64_t v6 = v3 + v1;
  if (*(unsigned char *)(a1 + 16)) {
    v6 += ((9 * (__clz(*(_DWORD *)(a1 + 40) | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v9 + 31) < 0) {
      uint64_t v10 = *(void *)(v9 + 16);
    }
    else {
      uint64_t v10 = *(unsigned __int8 *)(v9 + 31);
    }
    v6 += v10;
  }
  *(_DWORD *)(a1 + 20) = v6;
  return v6;
}

uint64_t sub_140F14C()
{
  return 1;
}

void *sub_140F154@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gemini.BusinessCard.Period.WeeklyFrequency");
}

uint64_t sub_140F164(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_2537A48)
  {
    uint64_t v6 = *(void **)(a1 + 24);
    if (v6)
    {
      sub_140E018(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_140F21C(uint64_t a1)
{
  sub_140F164(a1);

  operator delete();
}

uint64_t sub_140F254(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if (v2) {
    uint64_t result = sub_140E0C4(*(void *)(result + 24));
  }
  if ((v2 & 6) != 0) {
    *(void *)(v1 + 32) = 0;
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_140F2BC(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v30 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v30, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    unsigned int v8 = v30 + 1;
    unsigned int v9 = *v30;
    if (*v30 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unsigned int v8 = (char *)sub_188C180((uint64_t)v30, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unsigned int v8 = v30 + 2;
      }
    }
    int v30 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 == 3) {
      break;
    }
    if (v12 == 2)
    {
      if (v9 != 16) {
        goto LABEL_14;
      }
      v5 |= 4u;
      int v20 = v8 + 1;
      int v21 = *v8;
      if ((*v8 & 0x80000000) == 0) {
        goto LABEL_33;
      }
      int v22 = *v20;
      int v21 = v21 + (v22 << 7) - 128;
      if ((v22 & 0x80000000) == 0)
      {
        int v20 = v8 + 2;
LABEL_33:
        int v30 = v20;
        *(_DWORD *)(a1 + 36) = v21;
        goto LABEL_38;
      }
      unint64_t v26 = (char *)sub_188C0D0((uint64_t)v8, v21);
      int v30 = v26;
      *(_DWORD *)(a1 + 36) = v27;
      if (!v26) {
        goto LABEL_47;
      }
    }
    else
    {
      if (v12 != 1 || v9 != 8) {
        goto LABEL_14;
      }
      v5 |= 2u;
      int v23 = v8 + 1;
      int v24 = *v8;
      if ((*v8 & 0x80000000) == 0) {
        goto LABEL_37;
      }
      int v25 = *v23;
      int v24 = v24 + (v25 << 7) - 128;
      if ((v25 & 0x80000000) == 0)
      {
        int v23 = v8 + 2;
LABEL_37:
        int v30 = v23;
        *(_DWORD *)(a1 + 32) = v24;
        goto LABEL_38;
      }
      int v28 = (char *)sub_188C0D0((uint64_t)v8, v24);
      int v30 = v28;
      *(_DWORD *)(a1 + 32) = v29;
      if (!v28) {
        goto LABEL_47;
      }
    }
LABEL_38:
    if (sub_11947B8((uint64_t)a3, &v30, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 == 26)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v17 = *(void *)(a1 + 24);
    if (!v17)
    {
      uint64_t v18 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v7) {
        uint64_t v18 = (void *)*v18;
      }
      sub_1449FBC((uint64_t)v18);
      uint64_t v17 = v19;
      *(void *)(a1 + 24) = v19;
      unsigned int v8 = v30;
    }
    unint64_t v16 = sub_140F504(a3, v17, (unsigned __int8 *)v8);
LABEL_27:
    int v30 = v16;
    if (!v16) {
      goto LABEL_47;
    }
    goto LABEL_38;
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (*v7)
    {
      int v15 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      int v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unsigned int v8 = v30;
    }
    unint64_t v16 = (char *)sub_1885AC0(v9, v15, v8, a3);
    goto LABEL_27;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_47:
  int v30 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v30;
}

char *sub_140F504(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_140E0F8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_140F594(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 32);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 36);
    unsigned char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v13 = *(void *)(a1 + 24);
    unsigned char *v4 = 26;
    unsigned int v14 = *(_DWORD *)(v13 + 20);
    v4[1] = v14;
    if (v14 > 0x7F) {
      int v15 = sub_188A9CC(v14, v4 + 1);
    }
    else {
      int v15 = v4 + 2;
    }
    char v4 = sub_140E404(v13, (unint64_t)v15, a3);
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return v4;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    uint64_t v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    uint64_t v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(v4, v19, (int)v20);
    v4 += v21;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v19, v20, v4);
}

uint64_t sub_140F79C(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 7) == 0)
  {
    uint64_t result = 0;
    goto LABEL_10;
  }
  if (v2)
  {
    uint64_t v4 = sub_140E624(*(void *)(a1 + 24));
    uint64_t result = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t result = 0;
  if ((v2 & 2) != 0) {
LABEL_7:
  }
    result += ((9 * (__clz(*(_DWORD *)(a1 + 32) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_8:
  if ((v2 & 4) != 0) {
    result += ((9 * (__clz(*(_DWORD *)(a1 + 36) | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5)
  {
    unint64_t v6 = v5 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v6 + 31) < 0) {
      uint64_t v7 = *(void *)(v6 + 16);
    }
    else {
      uint64_t v7 = *(unsigned __int8 *)(v6 + 31);
    }
    result += v7;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

std::string *sub_140F888(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 7) != 0)
  {
    if (v4)
    {
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::pointer data = (std::string *)result[1].__r_.__value_.__l.__data_;
      if (!data)
      {
        std::string::size_type size = v3->__r_.__value_.__l.__size_;
        unsigned int v8 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
        if (size) {
          unsigned int v8 = (void *)*v8;
        }
        sub_1449FBC((uint64_t)v8);
        v3[1].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      }
      if (*(void *)(a2 + 24)) {
        unsigned int v9 = *(void *(****)(void *))(a2 + 24);
      }
      else {
        unsigned int v9 = &off_25379D0;
      }
      uint64_t result = sub_117EF50(data, (uint64_t)v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0)
        {
LABEL_6:
          LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
          goto LABEL_7;
        }
LABEL_5:
        HIDWORD(v3[1].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 36);
        goto LABEL_6;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 32);
    if ((v4 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_7:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_140F970()
{
  return 1;
}

void *sub_140F978@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gemini.BusinessCard.Period.MonthlyFrequency");
}

uint64_t sub_140F988(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_2537A70)
  {
    unint64_t v6 = *(void **)(a1 + 40);
    if (v6)
    {
      sub_140E018(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  sub_1889DA8(a1 + 24);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_140FA48(uint64_t a1)
{
  sub_140F988(a1);

  operator delete();
}

uint64_t sub_140FA80(uint64_t result)
{
  uint64_t v1 = result;
  *(_DWORD *)(result + 24) = 0;
  int v2 = *(_DWORD *)(result + 16);
  if (v2) {
    uint64_t result = sub_140E0C4(*(void *)(result + 40));
  }
  if ((v2 & 6) != 0) {
    *(void *)(v1 + 48) = 0;
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_140FAEC(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v38 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v38, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    unsigned int v8 = v38 + 1;
    unsigned int v9 = *v38;
    if (*v38 < 0)
    {
      int v10 = *v8;
      unsigned int v11 = v9 + (v10 << 7);
      unsigned int v9 = v11 - 128;
      if (v10 < 0)
      {
        unsigned int v8 = (char *)sub_188C180((uint64_t)v38, v11 - 128);
        unsigned int v9 = v12;
      }
      else
      {
        unsigned int v8 = v38 + 2;
      }
    }
    uint64_t v38 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_51;
        }
        v5 |= 2u;
        uint64_t v13 = v8 + 1;
        int v14 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v15 = *v13;
        int v14 = v14 + (v15 << 7) - 128;
        if ((v15 & 0x80000000) == 0)
        {
          uint64_t v13 = v8 + 2;
LABEL_13:
          uint64_t v38 = v13;
          *(_DWORD *)(a1 + 48) = v14;
          goto LABEL_59;
        }
        long long v32 = (char *)sub_188C0D0((uint64_t)v8, v14);
        uint64_t v38 = v32;
        *(_DWORD *)(a1 + 48) = v33;
        if (!v32) {
          goto LABEL_64;
        }
        goto LABEL_59;
      case 2u:
        if (v9 == 16)
        {
          uint64_t v16 = v8 - 1;
          while (1)
          {
            uint64_t v38 = v16 + 1;
            unint64_t v17 = v16[1];
            unint64_t v18 = v16 + 2;
            if (v16[1] < 0)
            {
              int v19 = *v18;
              int v20 = v17 + (v19 << 7);
              unint64_t v17 = (v20 - 128);
              if (v19 < 0)
              {
                uint64_t v38 = (char *)sub_188C138((uint64_t)(v16 + 1), (v20 - 128));
                if (!v38) {
                  goto LABEL_64;
                }
                unint64_t v17 = v23;
                goto LABEL_20;
              }
              unint64_t v18 = v16 + 3;
            }
            uint64_t v38 = v18;
LABEL_20:
            if ((v17 - 1) > 0xB)
            {
              if (*v7) {
                int v24 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
              }
              else {
                int v24 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              }
              sub_188C020(2, v17, v24);
            }
            else
            {
              uint64_t v21 = *(unsigned int *)(a1 + 24);
              if (v21 == *(_DWORD *)(a1 + 28))
              {
                int v22 = v21 + 1;
                sub_188C80C((unsigned int *)(a1 + 24), v21 + 1);
                *(_DWORD *)(*(void *)(a1 + 32) + 4 * v21) = v17;
              }
              else
              {
                *(_DWORD *)(*(void *)(a1 + 32) + 4 * v21) = v17;
                int v22 = v21 + 1;
              }
              *(_DWORD *)(a1 + 24) = v22;
            }
            uint64_t v16 = v38;
            if (*(void *)a3 <= (unint64_t)v38 || *v38 != 16) {
              goto LABEL_59;
            }
          }
        }
        if (v9 == 18)
        {
          *(void *)&long long v39 = a1 + 24;
          *((void *)&v39 + 1) = sub_13F4AB4;
          uint64_t v40 = a1 + 8;
          int v41 = 2;
          unint64_t v31 = sub_1112E88((uint64_t)a3, v8, &v39);
LABEL_58:
          uint64_t v38 = v31;
          if (!v31) {
            goto LABEL_64;
          }
LABEL_59:
          if (sub_11947B8((uint64_t)a3, &v38, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
LABEL_51:
        if (v9) {
          BOOL v36 = (v9 & 7) == 4;
        }
        else {
          BOOL v36 = 1;
        }
        if (!v36)
        {
          if (*v7)
          {
            uint64_t v37 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v37 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unsigned int v8 = v38;
          }
          unint64_t v31 = (char *)sub_1885AC0(v9, v37, v8, a3);
          goto LABEL_58;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_64:
        }
          uint64_t v38 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v38;
      case 3u:
        if (v9 != 24) {
          goto LABEL_51;
        }
        v5 |= 4u;
        int v25 = v8 + 1;
        int v26 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_38;
        }
        int v27 = *v25;
        int v26 = v26 + (v27 << 7) - 128;
        if (v27 < 0)
        {
          int v34 = (char *)sub_188C0D0((uint64_t)v8, v26);
          uint64_t v38 = v34;
          *(_DWORD *)(a1 + 52) = v35;
          if (!v34) {
            goto LABEL_64;
          }
        }
        else
        {
          int v25 = v8 + 2;
LABEL_38:
          uint64_t v38 = v25;
          *(_DWORD *)(a1 + 52) = v26;
        }
        goto LABEL_59;
      case 4u:
        if (v9 != 34) {
          goto LABEL_51;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v28 = *(void *)(a1 + 40);
        if (!v28)
        {
          int v29 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            int v29 = (void *)*v29;
          }
          sub_1449FBC((uint64_t)v29);
          uint64_t v28 = v30;
          *(void *)(a1 + 40) = v30;
          unsigned int v8 = v38;
        }
        unint64_t v31 = sub_140F504(a3, v28, (unsigned __int8 *)v8);
        goto LABEL_58;
      default:
        goto LABEL_51;
    }
  }
}

unsigned char *sub_140FEA0(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 48);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v10 = *(unsigned int *)(a1 + 24);
  if ((int)v10 >= 1)
  {
    for (uint64_t i = 0; i != v10; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v12 = *(int *)(*(void *)(a1 + 32) + 4 * i);
      unsigned char *v4 = 16;
      v4[1] = v12;
      if (v12 > 0x7F)
      {
        v4[1] = v12 | 0x80;
        unint64_t v13 = v12 >> 7;
        v4[2] = v12 >> 7;
        v4 += 3;
        if (v12 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v14 = v13 >> 14;
            v13 >>= 7;
            *v4++ = v13;
          }
          while (v14);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v15 = *(_DWORD *)(a1 + 52);
    unsigned char *v4 = 24;
    v4[1] = v15;
    if (v15 > 0x7F)
    {
      v4[1] = v15 | 0x80;
      unsigned int v16 = v15 >> 7;
      v4[2] = v15 >> 7;
      v4 += 3;
      if (v15 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v17 = v16 >> 14;
          v16 >>= 7;
          *v4++ = v16;
        }
        while (v17);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v18 = *(void *)(a1 + 40);
    unsigned char *v4 = 34;
    unsigned int v19 = *(_DWORD *)(v18 + 20);
    v4[1] = v19;
    if (v19 > 0x7F) {
      int v20 = sub_188A9CC(v19, v4 + 1);
    }
    else {
      int v20 = v4 + 2;
    }
    char v4 = sub_140E404(v18, (unint64_t)v20, a3);
  }
  uint64_t v21 = *(void *)(a1 + 8);
  if ((v21 & 1) == 0) {
    return v4;
  }
  unint64_t v23 = v21 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v23 + 31) < 0)
  {
    int v24 = *(void **)(v23 + 8);
    uint64_t v25 = *(void *)(v23 + 16);
  }
  else
  {
    int v24 = (void *)(v23 + 8);
    LODWORD(v25) = *(unsigned __int8 *)(v23 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v25)
  {
    uint64_t v26 = (int)v25;
    memcpy(v4, v24, (int)v25);
    v4 += v26;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v24, v25, v4);
}

uint64_t sub_141015C(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 24);
  if (v2)
  {
    int v3 = 0;
    uint64_t v4 = 0;
    do
    {
      int v5 = *(_DWORD *)(*(void *)(a1 + 32) + 4 * v3);
      if (v5 < 0) {
        uint64_t v6 = 10;
      }
      else {
        uint64_t v6 = (9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6;
      }
      v4 += v6;
      ++v3;
    }
    while (v2 != v3);
  }
  else
  {
    uint64_t v4 = 0;
  }
  uint64_t v7 = v4 + v2;
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 7) != 0)
  {
    if (v8)
    {
      uint64_t v11 = sub_140E624(*(void *)(a1 + 40));
      v7 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v8 & 2) == 0)
      {
LABEL_12:
        if ((v8 & 4) == 0) {
          goto LABEL_14;
        }
        goto LABEL_13;
      }
    }
    else if ((v8 & 2) == 0)
    {
      goto LABEL_12;
    }
    v7 += ((9 * (__clz(*(_DWORD *)(a1 + 48) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v8 & 4) != 0) {
LABEL_13:
    }
      v7 += ((9 * (__clz(*(_DWORD *)(a1 + 52) | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_14:
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v12 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v12 + 31) < 0) {
      uint64_t v13 = *(void *)(v12 + 16);
    }
    else {
      uint64_t v13 = *(unsigned __int8 *)(v12 + 31);
    }
    v7 += v13;
  }
  *(_DWORD *)(a1 + 20) = v7;
  return v7;
}

std::string *sub_14102A8(std::string *result, uint64_t a2)
{
  int v3 = result;
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    int v5 = result + 1;
    uint64_t data_low = SLODWORD(result[1].__r_.__value_.__l.__data_);
    sub_188C80C((unsigned int *)&result[1], data_low + v4);
    std::string::size_type size = v3[1].__r_.__value_.__l.__size_;
    LODWORD(v5->__r_.__value_.__l.__data_) += *(_DWORD *)(a2 + 24);
    uint64_t result = (std::string *)memcpy((void *)(size + 4 * data_low), *(const void **)(a2 + 32), 4 * *(int *)(a2 + 24));
  }
  int v8 = *(_DWORD *)(a2 + 16);
  if ((v8 & 7) != 0)
  {
    if (v8)
    {
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      uint64_t v10 = (std::string *)v3[1].__r_.__value_.__r.__words[2];
      if (!v10)
      {
        std::string::size_type v11 = v3->__r_.__value_.__l.__size_;
        unint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
        if (v11) {
          unint64_t v12 = (void *)*v12;
        }
        sub_1449FBC((uint64_t)v12);
        v3[1].__r_.__value_.__r.__words[2] = (std::string::size_type)v10;
      }
      if (*(void *)(a2 + 40)) {
        uint64_t v13 = *(void *(****)(void *))(a2 + 40);
      }
      else {
        uint64_t v13 = &off_25379D0;
      }
      uint64_t result = sub_117EF50(v10, (uint64_t)v13);
      if ((v8 & 2) == 0)
      {
LABEL_6:
        if ((v8 & 4) == 0)
        {
LABEL_8:
          LODWORD(v3->__r_.__value_.__r.__words[2]) |= v8;
          goto LABEL_9;
        }
LABEL_7:
        HIDWORD(v3[2].__r_.__value_.__r.__words[0]) = *(_DWORD *)(a2 + 52);
        goto LABEL_8;
      }
    }
    else if ((v8 & 2) == 0)
    {
      goto LABEL_6;
    }
    LODWORD(v3[2].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 48);
    if ((v8 & 4) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
LABEL_9:
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_14103D4()
{
  return 1;
}

void *sub_14103DC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gemini.BusinessCard.Period.YearlyFrequency");
}

void *sub_14103EC(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_1410470((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

uint64_t sub_1410470(uint64_t result)
{
  if ((uint64_t (***)())result != &off_2537AA8)
  {
    uint64_t v1 = (void *)result;
    uint64_t v2 = *(void **)(result + 24);
    if (v2)
    {
      sub_140E730(v2);
      operator delete();
    }
    int v3 = (void *)v1[4];
    if (v3)
    {
      sub_140EB1C(v3);
      operator delete();
    }
    uint64_t v4 = v1[5];
    if (v4)
    {
      sub_140F164(v4);
      operator delete();
    }
    uint64_t result = v1[6];
    if (result)
    {
      sub_140F988(result);
      operator delete();
    }
  }
  return result;
}

void sub_141053C(void *a1)
{
  sub_14103EC(a1);

  operator delete();
}

uint64_t sub_1410574(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 0xF) != 0)
  {
    if (v2)
    {
      uint64_t v3 = *(void *)(result + 24);
      char v4 = *(unsigned char *)(v3 + 8);
      uint64_t result = v3 + 8;
      *(_DWORD *)(result + 16) = 0;
      *(_DWORD *)(result + 8) = 0;
      if (v4) {
        uint64_t result = sub_188B4AC((uint64_t *)result);
      }
    }
    if ((v2 & 2) != 0)
    {
      uint64_t v5 = *(void *)(v1 + 32);
      char v6 = *(unsigned char *)(v5 + 8);
      uint64_t result = v5 + 8;
      *(_DWORD *)(result + 16) = 0;
      *(_DWORD *)(result + 32) = 0;
      *(_DWORD *)(result + 8) = 0;
      if (v6) {
        uint64_t result = sub_188B4AC((uint64_t *)result);
      }
    }
    if ((v2 & 4) != 0) {
      uint64_t result = sub_140F254(*(void *)(v1 + 40));
    }
    if ((v2 & 8) != 0) {
      uint64_t result = sub_140FA80(*(void *)(v1 + 48));
    }
  }
  char v8 = *(unsigned char *)(v1 + 8);
  uint64_t v7 = v1 + 8;
  *(_DWORD *)(v7 + 8) = 0;
  if (v8)
  {
    return sub_188B4AC((uint64_t *)v7);
  }
  return result;
}

char *sub_1410620(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v22 = a2;
  if (sub_11947B8((uint64_t)a3, &v22, a3[11].i32[1])) {
    return v22;
  }
  char v6 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v7 = v22 + 1;
    unsigned int v8 = *v22;
    if (*v22 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v22, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v22 + 2;
      }
    }
    int v22 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 10) {
          goto LABEL_33;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v11 = *(void *)(a1 + 24);
        if (!v11)
        {
          unint64_t v12 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            unint64_t v12 = (void *)*v12;
          }
          uint64_t v11 = sub_144A044((uint64_t)v12);
          *(void *)(a1 + 24) = v11;
          uint64_t v7 = v22;
        }
        uint64_t v13 = sub_14108B0(a3, v11, (unsigned __int8 *)v7);
        goto LABEL_40;
      case 2u:
        if (v8 != 18) {
          goto LABEL_33;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v14 = *(void *)(a1 + 32);
        if (!v14)
        {
          unsigned int v15 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            unsigned int v15 = (void *)*v15;
          }
          uint64_t v14 = sub_144A0C0((uint64_t)v15);
          *(void *)(a1 + 32) = v14;
          uint64_t v7 = v22;
        }
        uint64_t v13 = sub_1410940(a3, v14, (unsigned __int8 *)v7);
        goto LABEL_40;
      case 3u:
        if (v8 != 26) {
          goto LABEL_33;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        unsigned int v16 = *(void **)(a1 + 40);
        if (!v16)
        {
          unsigned int v17 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            unsigned int v17 = (void *)*v17;
          }
          unsigned int v16 = sub_144A15C((uint64_t)v17);
          *(void *)(a1 + 40) = v16;
          uint64_t v7 = v22;
        }
        uint64_t v13 = sub_14109D0(a3, (uint64_t)v16, (unsigned __int8 *)v7);
        goto LABEL_40;
      case 4u:
        if (v8 != 34) {
          goto LABEL_33;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v18 = *(void **)(a1 + 48);
        if (!v18)
        {
          unsigned int v19 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            unsigned int v19 = (void *)*v19;
          }
          uint64_t v18 = sub_144A1D8((uint64_t)v19);
          *(void *)(a1 + 48) = v18;
          uint64_t v7 = v22;
        }
        uint64_t v13 = sub_1410A60(a3, (uint64_t)v18, (unsigned __int8 *)v7);
        goto LABEL_40;
      default:
LABEL_33:
        if (v8) {
          BOOL v20 = (v8 & 7) == 4;
        }
        else {
          BOOL v20 = 1;
        }
        if (!v20)
        {
          if (*v6)
          {
            uint64_t v21 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v21 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v7 = v22;
          }
          uint64_t v13 = (char *)sub_1885AC0(v8, v21, v7, a3);
LABEL_40:
          int v22 = v13;
          if (!v13) {
            return 0;
          }
          if (sub_11947B8((uint64_t)a3, &v22, a3[11].i32[1])) {
            return v22;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return v22;
    }
  }
}

char *sub_14108B0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_140E7F4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1410940(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_140EBEC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_14109D0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_140F2BC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1410A60(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_140FAEC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_1410AF0(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    unsigned char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    char v4 = sub_140E974(v7, (unint64_t)v9, a3);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_18;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v10 = *(void *)(a1 + 32);
  unsigned char *v4 = 18;
  unsigned int v11 = *(_DWORD *)(v10 + 20);
  v4[1] = v11;
  if (v11 > 0x7F) {
    unint64_t v12 = sub_188A9CC(v11, v4 + 1);
  }
  else {
    unint64_t v12 = v4 + 2;
  }
  char v4 = sub_140EEC0(v10, (unint64_t)v12, a3);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_30;
    }
    goto LABEL_24;
  }
LABEL_18:
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v13 = *(void *)(a1 + 40);
  unsigned char *v4 = 26;
  unsigned int v14 = *(_DWORD *)(v13 + 20);
  v4[1] = v14;
  if (v14 > 0x7F) {
    unsigned int v15 = sub_188A9CC(v14, v4 + 1);
  }
  else {
    unsigned int v15 = v4 + 2;
  }
  char v4 = sub_140F594(v13, (unint64_t)v15, a3);
  if ((v6 & 8) != 0)
  {
LABEL_24:
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v16 = *(void *)(a1 + 48);
    unsigned char *v4 = 34;
    unsigned int v17 = *(_DWORD *)(v16 + 20);
    v4[1] = v17;
    if (v17 > 0x7F) {
      uint64_t v18 = sub_188A9CC(v17, v4 + 1);
    }
    else {
      uint64_t v18 = v4 + 2;
    }
    char v4 = sub_140FEA0(v16, (unint64_t)v18, a3);
  }
LABEL_30:
  uint64_t v19 = *(void *)(a1 + 8);
  if ((v19 & 1) == 0) {
    return v4;
  }
  unint64_t v21 = v19 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v21 + 31) < 0)
  {
    int v22 = *(void **)(v21 + 8);
    uint64_t v23 = *(void *)(v21 + 16);
  }
  else
  {
    int v22 = (void *)(v21 + 8);
    LODWORD(v23) = *(unsigned __int8 *)(v21 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v23)
  {
    uint64_t v24 = (int)v23;
    memcpy(v4, v22, (int)v23);
    v4 += v24;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v22, v23, v4);
}

uint64_t sub_1410D48(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0xF) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_11;
  }
  if (v2)
  {
    uint64_t v4 = sub_140EA9C(*(void *)(a1 + 24));
    uint64_t v3 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_7:
    uint64_t v5 = sub_140F090(*(void *)(a1 + 32));
    v3 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_8:
  if ((v2 & 4) == 0)
  {
    if ((v2 & 8) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  uint64_t v9 = sub_140F79C(*(void *)(a1 + 40));
  v3 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 8) != 0)
  {
LABEL_10:
    uint64_t v6 = sub_141015C(*(void *)(a1 + 48));
    v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_11:
  uint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    unint64_t v10 = v7 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v3 += v11;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_1410E88(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0xF) == 0) {
    goto LABEL_39;
  }
  if (v4)
  {
    LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
    std::string::pointer data = (std::string *)result[1].__r_.__value_.__l.__data_;
    if (!data)
    {
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v7 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v7 = (void *)*v7;
      }
      std::string::pointer data = (std::string *)sub_144A044((uint64_t)v7);
      v3[1].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
    }
    if (*(void *)(a2 + 24)) {
      unsigned int v8 = *(void *(****)(void *))(a2 + 24);
    }
    else {
      unsigned int v8 = &off_25379F8;
    }
    uint64_t result = sub_11A7934(data, (uint64_t)v8);
    if ((v4 & 2) == 0)
    {
LABEL_4:
      if ((v4 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_23;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_4;
  }
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
  uint64_t v9 = (std::string *)v3[1].__r_.__value_.__l.__size_;
  if (!v9)
  {
    std::string::size_type v10 = v3->__r_.__value_.__l.__size_;
    uint64_t v11 = (void *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
    if (v10) {
      uint64_t v11 = (void *)*v11;
    }
    uint64_t v9 = (std::string *)sub_144A0C0((uint64_t)v11);
    v3[1].__r_.__value_.__l.__size_ = (std::string::size_type)v9;
  }
  if (*(void *)(a2 + 32)) {
    unint64_t v12 = *(void *(****)(void *))(a2 + 32);
  }
  else {
    unint64_t v12 = &off_2537A18;
  }
  uint64_t result = sub_11E3E70(v9, (uint64_t)v12);
  if ((v4 & 4) == 0)
  {
LABEL_5:
    if ((v4 & 8) == 0) {
      goto LABEL_39;
    }
    goto LABEL_31;
  }
LABEL_23:
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
  uint64_t v13 = (std::string *)v3[1].__r_.__value_.__r.__words[2];
  if (!v13)
  {
    std::string::size_type v14 = v3->__r_.__value_.__l.__size_;
    unsigned int v15 = (void *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
    if (v14) {
      unsigned int v15 = (void *)*v15;
    }
    uint64_t v13 = (std::string *)sub_144A15C((uint64_t)v15);
    v3[1].__r_.__value_.__r.__words[2] = (std::string::size_type)v13;
  }
  if (*(void *)(a2 + 40)) {
    uint64_t v16 = *(uint64_t (****)())(a2 + 40);
  }
  else {
    uint64_t v16 = &off_2537A48;
  }
  uint64_t result = sub_140F888(v13, (uint64_t)v16);
  if ((v4 & 8) != 0)
  {
LABEL_31:
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 8u;
    unsigned int v17 = (std::string *)v3[2].__r_.__value_.__l.__data_;
    if (!v17)
    {
      std::string::size_type v18 = v3->__r_.__value_.__l.__size_;
      uint64_t v19 = (void *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
      if (v18) {
        uint64_t v19 = (void *)*v19;
      }
      unsigned int v17 = (std::string *)sub_144A1D8((uint64_t)v19);
      v3[2].__r_.__value_.__r.__words[0] = (std::string::size_type)v17;
    }
    if (*(void *)(a2 + 48)) {
      BOOL v20 = *(uint64_t (****)())(a2 + 48);
    }
    else {
      BOOL v20 = &off_2537A70;
    }
    uint64_t result = sub_14102A8(v17, (uint64_t)v20);
  }
LABEL_39:
  uint64_t v21 = *(void *)(a2 + 8);
  if (v21)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v21 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1411034()
{
  return 1;
}

void *sub_141103C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gemini.BusinessCard.Period.Frequency");
}

uint64_t sub_141104C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_2537AE0)
  {
    uint64_t v6 = *(void **)(a1 + 24);
    if (v6)
    {
      sub_14103EC(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1411104(uint64_t a1)
{
  sub_141104C(a1);

  operator delete();
}

uint64_t sub_141113C(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if (v2) {
    uint64_t result = sub_1410574(*(void *)(result + 24));
  }
  if ((v2 & 0xE) != 0)
  {
    *(void *)(v1 + 32) = 0;
    *(void *)(v1 + 40) = 0;
    *(void *)(v1 + 48) = 0;
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_14111A8(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v34 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v34, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    unsigned int v8 = v34 + 1;
    unsigned int v9 = *v34;
    if (*v34 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unsigned int v8 = (char *)sub_188C180((uint64_t)v34, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unsigned int v8 = v34 + 2;
      }
    }
    int v34 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 > 0x1D) {
      break;
    }
    if (v12 == 10)
    {
      if (v9 != 80) {
        goto LABEL_34;
      }
      v5 |= 4u;
      BOOL v20 = v8 + 1;
      uint64_t v21 = *v8;
      if ((*v8 & 0x80000000) == 0) {
        goto LABEL_28;
      }
      int v22 = *v20;
      uint64_t v21 = v21 + (v22 << 7) - 128;
      if ((v22 & 0x80000000) == 0)
      {
        BOOL v20 = v8 + 2;
LABEL_28:
        int v34 = v20;
        *(void *)(a1 + 40) = v21;
        goto LABEL_42;
      }
      uint64_t v30 = (char *)sub_188C138((uint64_t)v8, v21);
      int v34 = v30;
      *(void *)(a1 + 40) = v31;
      if (!v30) {
        goto LABEL_53;
      }
    }
    else
    {
      if (v12 != 20 || v9 != 160) {
        goto LABEL_34;
      }
      v5 |= 8u;
      uint64_t v13 = v8 + 1;
      uint64_t v14 = *v8;
      if ((*v8 & 0x80000000) == 0) {
        goto LABEL_15;
      }
      int v15 = *v13;
      uint64_t v14 = v14 + (v15 << 7) - 128;
      if ((v15 & 0x80000000) == 0)
      {
        uint64_t v13 = v8 + 2;
LABEL_15:
        int v34 = v13;
        *(void *)(a1 + 48) = v14;
        goto LABEL_42;
      }
      uint64_t v28 = (char *)sub_188C138((uint64_t)v8, v14);
      int v34 = v28;
      *(void *)(a1 + 48) = v29;
      if (!v28) {
        goto LABEL_53;
      }
    }
LABEL_42:
    if (sub_11947B8((uint64_t)a3, &v34, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v12 == 30)
  {
    if (v9 != 240) {
      goto LABEL_34;
    }
    v5 |= 2u;
    uint64_t v23 = v8 + 1;
    int v24 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_33;
    }
    int v25 = *v23;
    int v24 = v24 + (v25 << 7) - 128;
    if ((v25 & 0x80000000) == 0)
    {
      uint64_t v23 = v8 + 2;
LABEL_33:
      int v34 = v23;
      *(_DWORD *)(a1 + 32) = v24;
      goto LABEL_42;
    }
    long long v32 = (char *)sub_188C0D0((uint64_t)v8, v24);
    int v34 = v32;
    *(_DWORD *)(a1 + 32) = v33;
    if (!v32) {
      goto LABEL_53;
    }
    goto LABEL_42;
  }
  if (v12 == 40 && v9 == 66)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v16 = *(void *)(a1 + 24);
    if (!v16)
    {
      unsigned int v17 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v7) {
        unsigned int v17 = (void *)*v17;
      }
      sub_144A278((uint64_t)v17);
      uint64_t v16 = v18;
      *(void *)(a1 + 24) = v18;
      unsigned int v8 = v34;
    }
    uint64_t v19 = sub_1411460(a3, v16, (unsigned __int8 *)v8);
LABEL_41:
    int v34 = v19;
    if (!v19) {
      goto LABEL_53;
    }
    goto LABEL_42;
  }
LABEL_34:
  if (v9) {
    BOOL v26 = (v9 & 7) == 4;
  }
  else {
    BOOL v26 = 1;
  }
  if (!v26)
  {
    if (*v7)
    {
      int v27 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      int v27 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unsigned int v8 = v34;
    }
    uint64_t v19 = (char *)sub_1885AC0(v9, v27, v8, a3);
    goto LABEL_41;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_53:
  int v34 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v34;
}

char *sub_1411460(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1410620(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_14114F0(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(void *)(a1 + 40);
    unsigned char *v4 = 80;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(void *)(a1 + 48);
    *(_WORD *)char v4 = 416;
    v4[2] = v10;
    if (v10 > 0x7F)
    {
      v4[2] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[3] = v10 >> 7;
      v4 += 4;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v13 = *(_DWORD *)(a1 + 32);
    *(_WORD *)char v4 = 496;
    v4[2] = v13;
    if (v13 > 0x7F)
    {
      v4[2] = v13 | 0x80;
      unsigned int v14 = v13 >> 7;
      v4[3] = v13 >> 7;
      v4 += 4;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v16 = *(void *)(a1 + 24);
    *(_WORD *)char v4 = 706;
    unsigned int v17 = *(_DWORD *)(v16 + 20);
    v4[2] = v17;
    if (v17 > 0x7F) {
      uint64_t v18 = sub_188A9CC(v17, v4 + 2);
    }
    else {
      uint64_t v18 = v4 + 3;
    }
    char v4 = sub_1410AF0(v16, (unint64_t)v18, a3);
  }
  uint64_t v19 = *(void *)(a1 + 8);
  if ((v19 & 1) == 0) {
    return v4;
  }
  unint64_t v21 = v19 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v21 + 31) < 0)
  {
    int v22 = *(void **)(v21 + 8);
    uint64_t v23 = *(void *)(v21 + 16);
  }
  else
  {
    int v22 = (void *)(v21 + 8);
    LODWORD(v23) = *(unsigned __int8 *)(v21 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v23)
  {
    uint64_t v24 = (int)v23;
    memcpy(v4, v22, (int)v23);
    v4 += v24;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v22, v23, v4);
}

uint64_t sub_1411774(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0xF) == 0)
  {
    uint64_t result = 0;
    goto LABEL_11;
  }
  if (v2)
  {
    uint64_t v4 = sub_1410D48(*(void *)(a1 + 24));
    uint64_t result = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t result = 0;
  if ((v2 & 2) != 0) {
LABEL_7:
  }
    result += ((9 * (__clz(*(_DWORD *)(a1 + 32) | 1) ^ 0x1F) + 73) >> 6) + 2;
LABEL_8:
  if ((v2 & 4) == 0)
  {
    if ((v2 & 8) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  result += ((9 * (__clz(*(void *)(a1 + 40) | 1) ^ 0x3F) + 73) >> 6) + 1;
  if ((v2 & 8) != 0) {
LABEL_10:
  }
    result += ((9 * (__clz(*(void *)(a1 + 48) | 1) ^ 0x3F) + 73) >> 6) + 2;
LABEL_11:
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5)
  {
    unint64_t v6 = v5 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v6 + 31) < 0) {
      uint64_t v7 = *(void *)(v6 + 16);
    }
    else {
      uint64_t v7 = *(unsigned __int8 *)(v6 + 31);
    }
    result += v7;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

std::string *sub_1411888(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0xF) != 0)
  {
    if (v4)
    {
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::pointer data = (std::string *)result[1].__r_.__value_.__l.__data_;
      if (!data)
      {
        std::string::size_type size = v3->__r_.__value_.__l.__size_;
        unint64_t v8 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
        if (size) {
          unint64_t v8 = (void *)*v8;
        }
        sub_144A278((uint64_t)v8);
        v3[1].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      }
      if (*(void *)(a2 + 24)) {
        unint64_t v9 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        unint64_t v9 = &off_2537AA8;
      }
      uint64_t result = sub_1410E88(data, (uint64_t)v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_21;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 32);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0)
      {
LABEL_7:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
        goto LABEL_8;
      }
LABEL_6:
      v3[2].__r_.__value_.__r.__words[0] = *(void *)(a2 + 48);
      goto LABEL_7;
    }
LABEL_21:
    v3[1].__r_.__value_.__r.__words[2] = *(void *)(a2 + 40);
    if ((v4 & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_8:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1411980()
{
  return 1;
}

void *sub_1411988@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gemini.BusinessCard.Period");
}

uint64_t sub_1411998(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_2537B18)
  {
    uint64_t v6 = *(void *)(a1 + 72);
    if (v6)
    {
      sub_141104C(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  sub_12C1DB8((void *)(a1 + 48));
  sub_124DD4C((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1411A68(uint64_t a1)
{
  sub_1411998(a1);

  operator delete();
}

uint64_t sub_1411AA0(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_14532E4(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  uint64_t v5 = *(unsigned int *)(v1 + 56);
  if ((int)v5 >= 1)
  {
    uint64_t v6 = (uint64_t *)(*(void *)(v1 + 64) + 8);
    do
    {
      uint64_t v7 = *v6++;
      uint64_t result = sub_15B2C80(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(v1 + 56) = 0;
  }
  if (*(unsigned char *)(v1 + 16)) {
    uint64_t result = sub_141113C(*(void *)(v1 + 72));
  }
  char v9 = *(unsigned char *)(v1 + 8);
  uint64_t v8 = v1 + 8;
  *(_DWORD *)(v8 + 72) = 0;
  *(_DWORD *)(v8 + 8) = 0;
  if (v9)
  {
    return sub_188B4AC((uint64_t *)v8);
  }
  return result;
}

char *sub_1411B5C(uint64_t a1, char *a2, int32x2_t *a3)
{
  BOOL v36 = a2;
  if (sub_11947B8((uint64_t)a3, &v36, a3[11].i32[1])) {
    return v36;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v36 + 1;
    unsigned int v8 = *v36;
    if (*v36 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v36, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v36 + 2;
      }
    }
    BOOL v36 = v7;
    unsigned int v11 = v8 >> 3;
    if (v8 >> 3 > 0x1E) {
      break;
    }
    if (v11 != 10)
    {
      if (v11 == 30 && v8 == 242)
      {
        unint64_t v12 = v7 - 2;
        while (1)
        {
          unsigned int v13 = (unsigned __int8 *)(v12 + 2);
          BOOL v36 = v12 + 2;
          unsigned int v14 = *(_DWORD **)(a1 + 40);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 32), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 32) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            uint64_t v17 = sub_14785D4(*(void *)(a1 + 24));
            uint64_t v16 = sub_188CDC8(a1 + 24, v17);
            unsigned int v13 = (unsigned __int8 *)v36;
          }
          unint64_t v12 = sub_123AF74(a3, v16, v13);
          BOOL v36 = v12;
          if (!v12) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *(_WORD *)v12 != 498) {
            goto LABEL_54;
          }
        }
      }
      goto LABEL_46;
    }
    if (v8 != 82) {
      goto LABEL_46;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v24 = *(void *)(a1 + 72);
    if (!v24)
    {
      int v25 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        int v25 = (void *)*v25;
      }
      sub_144A2F8((uint64_t)v25);
      uint64_t v24 = v26;
      *(void *)(a1 + 72) = v26;
      uint64_t v7 = v36;
    }
    int v27 = sub_1411EB0(a3, v24, (unsigned __int8 *)v7);
LABEL_53:
    BOOL v36 = v27;
    if (!v27) {
      return 0;
    }
LABEL_54:
    if (sub_11947B8((uint64_t)a3, &v36, a3[11].i32[1])) {
      return v36;
    }
  }
  if (v11 == 31)
  {
    if (v8 != 248) {
      goto LABEL_46;
    }
    uint64_t v28 = v7 + 1;
    unint64_t v29 = *v7;
    if (*v7 < 0)
    {
      int v30 = *v28;
      int v31 = v29 + (v30 << 7);
      unint64_t v29 = (v31 - 128);
      if (v30 < 0)
      {
        BOOL v36 = (char *)sub_188C138((uint64_t)v7, (v31 - 128));
        if (!v36) {
          return 0;
        }
        unint64_t v29 = v34;
        goto LABEL_44;
      }
      uint64_t v28 = v7 + 2;
    }
    BOOL v36 = v28;
LABEL_44:
    if (v29 > 2)
    {
      if (*v6) {
        int v35 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        int v35 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      sub_188C020(31, v29, v35);
    }
    else
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      *(_DWORD *)(a1 + 80) = v29;
    }
    goto LABEL_54;
  }
  if (v11 == 40 && v8 == 66)
  {
    uint64_t v18 = v7 - 2;
    while (1)
    {
      uint64_t v19 = (unsigned __int8 *)(v18 + 2);
      BOOL v36 = v18 + 2;
      BOOL v20 = *(_DWORD **)(a1 + 64);
      if (v20 && (uint64_t v21 = *(int *)(a1 + 56), (int)v21 < *v20))
      {
        *(_DWORD *)(a1 + 56) = v21 + 1;
        uint64_t v22 = *(void *)&v20[2 * v21 + 2];
      }
      else
      {
        uint64_t v23 = sub_15C1B30(*(void *)(a1 + 48));
        uint64_t v22 = sub_188CDC8(a1 + 48, (uint64_t)v23);
        uint64_t v19 = (unsigned __int8 *)v36;
      }
      uint64_t v18 = (char *)sub_125CF74(a3, v22, v19);
      BOOL v36 = v18;
      if (!v18) {
        return 0;
      }
      if (*(void *)a3 <= (unint64_t)v18 || *(_WORD *)v18 != 706) {
        goto LABEL_54;
      }
    }
  }
LABEL_46:
  if (v8) {
    BOOL v32 = (v8 & 7) == 4;
  }
  else {
    BOOL v32 = 1;
  }
  if (!v32)
  {
    if (*v6)
    {
      int v33 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      int v33 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = v36;
    }
    int v27 = (char *)sub_1885AC0(v8, v33, v7, a3);
    goto LABEL_53;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v36;
  }
  return 0;
}

char *sub_1411EB0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_14111A8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_1411F40(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 72);
    unsigned char *v4 = 82;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    uint64_t v4 = sub_14114F0(v7, (unint64_t)v9, a3);
  }
  int v10 = *(_DWORD *)(a1 + 32);
  if (v10)
  {
    for (int i = 0; i != v10; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v12 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *(_WORD *)uint64_t v4 = 498;
      unsigned int v13 = *(_DWORD *)(v12 + 56);
      v4[2] = v13;
      if (v13 > 0x7F) {
        unsigned int v14 = sub_188A9CC(v13, v4 + 2);
      }
      else {
        unsigned int v14 = v4 + 3;
      }
      uint64_t v4 = sub_14536EC(v12, v14, a3);
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v15 = *(int *)(a1 + 80);
    *(_WORD *)uint64_t v4 = 504;
    v4[2] = v15;
    if (v15 > 0x7F)
    {
      v4[2] = v15 | 0x80;
      unint64_t v16 = v15 >> 7;
      v4[3] = v15 >> 7;
      v4 += 4;
      if (v15 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v17 = v16 >> 14;
          v16 >>= 7;
          *v4++ = v16;
        }
        while (v17);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  int v18 = *(_DWORD *)(a1 + 56);
  if (v18)
  {
    for (int j = 0; j != v18; ++j)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v20 = *(void *)(*(void *)(a1 + 64) + 8 * j + 8);
      *(_WORD *)uint64_t v4 = 706;
      unsigned int v21 = *(_DWORD *)(v20 + 20);
      v4[2] = v21;
      if (v21 > 0x7F) {
        uint64_t v22 = sub_188A9CC(v21, v4 + 2);
      }
      else {
        uint64_t v22 = v4 + 3;
      }
      uint64_t v4 = sub_15B2EA4(v20, v22, a3);
    }
  }
  uint64_t v23 = *(void *)(a1 + 8);
  if ((v23 & 1) == 0) {
    return v4;
  }
  unint64_t v25 = v23 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v25 + 31) < 0)
  {
    uint64_t v26 = *(void **)(v25 + 8);
    uint64_t v27 = *(void *)(v25 + 16);
  }
  else
  {
    uint64_t v26 = (void *)(v25 + 8);
    LODWORD(v27) = *(unsigned __int8 *)(v25 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v27)
  {
    uint64_t v28 = (int)v27;
    memcpy(v4, v26, (int)v27);
    v4 += v28;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v26, v27, v4);
}

uint64_t sub_14121EC(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = 2 * v2;
  uint64_t v4 = *(void *)(a1 + 40);
  if (v4) {
    uint64_t v5 = (uint64_t *)(v4 + 8);
  }
  else {
    uint64_t v5 = 0;
  }
  if (v2)
  {
    uint64_t v6 = 8 * v2;
    do
    {
      uint64_t v7 = *v5++;
      uint64_t v8 = sub_14538CC(v7);
      v3 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6);
      v6 -= 8;
    }
    while (v6);
  }
  uint64_t v9 = *(int *)(a1 + 56);
  uint64_t v10 = v3 + 2 * v9;
  uint64_t v11 = *(void *)(a1 + 64);
  if (v11) {
    uint64_t v12 = (uint64_t *)(v11 + 8);
  }
  else {
    uint64_t v12 = 0;
  }
  if (v9)
  {
    uint64_t v13 = 8 * v9;
    do
    {
      uint64_t v14 = *v12++;
      uint64_t v15 = sub_15B2F90(v14);
      v10 += v15 + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6);
      v13 -= 8;
    }
    while (v13);
  }
  int v16 = *(_DWORD *)(a1 + 16);
  if ((v16 & 3) != 0)
  {
    if (v16)
    {
      uint64_t v17 = sub_1411774(*(void *)(a1 + 72));
      v10 += v17 + ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v16 & 2) != 0)
    {
      int v18 = *(_DWORD *)(a1 + 80);
      uint64_t v19 = ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6) + 2;
      if (v18 >= 0) {
        uint64_t v20 = v19;
      }
      else {
        uint64_t v20 = 12;
      }
      v10 += v20;
    }
  }
  uint64_t v21 = *(void *)(a1 + 8);
  if (v21)
  {
    unint64_t v23 = v21 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v23 + 31) < 0) {
      uint64_t v24 = *(void *)(v23 + 16);
    }
    else {
      uint64_t v24 = *(unsigned __int8 *)(v23 + 31);
    }
    v10 += v24;
  }
  *(_DWORD *)(a1 + 20) = v10;
  return v10;
}

std::string *sub_1412358(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = (std::string *)sub_124E8CC((uint64_t *)&v3[1], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2]- LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    uint64_t v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    uint64_t v11 = (std::string **)sub_188CCE4((uint64_t)&v3[2], *(_DWORD *)(a2 + 56));
    uint64_t result = sub_12C1E38(v3 + 2, v11, v10, v9, *(_DWORD *)v3[2].__r_.__value_.__r.__words[2] - LODWORD(v3[2].__r_.__value_.__r.__words[1]));
    int v12 = LODWORD(v3[2].__r_.__value_.__r.__words[1]) + v9;
    LODWORD(v3[2].__r_.__value_.__r.__words[1]) = v12;
    uint64_t v13 = (int *)v3[2].__r_.__value_.__r.__words[2];
    if (*v13 < v12) {
      int *v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 16);
  if ((v14 & 3) != 0)
  {
    if (v14)
    {
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::pointer data = (std::string *)v3[3].__r_.__value_.__l.__data_;
      if (!data)
      {
        std::string::size_type size = v3->__r_.__value_.__l.__size_;
        uint64_t v17 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
        if (size) {
          uint64_t v17 = (void *)*v17;
        }
        sub_144A2F8((uint64_t)v17);
        v3[3].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      }
      if (*(void *)(a2 + 72)) {
        int v18 = *(uint64_t (****)())(a2 + 72);
      }
      else {
        int v18 = &off_2537AE0;
      }
      uint64_t result = sub_1411888(data, (uint64_t)v18);
    }
    if ((v14 & 2) != 0) {
      LODWORD(v3[3].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 80);
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= v14;
  }
  uint64_t v19 = *(void *)(a2 + 8);
  if (v19)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v19 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_14124FC()
{
  return 1;
}

void *sub_1412504@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gemini.BusinessCard.HoursPeriod");
}

uint64_t sub_1412514(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (uint64_t *)(a1 + 8);
  *(void *)a1 = off_24B2A08;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v5 = (std::string *)(a1 + 24);
  *(_DWORD *)(a1 + 44) = 0;
  *(void *)(a1 + 28) = 0;
  *(void *)(a1 + 36) = 0;
  *(void *)(a1 + 20) = 0;
  int v6 = *(_DWORD *)(a2 + 32);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 40);
    uint64_t v8 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_122CE78(v5, v8, (uint64_t *)(v7 + 8), v6, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v9 = *(_DWORD *)(a1 + 32) + v6;
    *(_DWORD *)(a1 + 32) = v9;
    uint64_t v10 = *(int **)(a1 + 40);
    if (*v10 < v9) {
      *uint64_t v10 = v9;
    }
  }
  uint64_t v11 = *(void *)(a2 + 8);
  if (v11) {
    sub_188B4F8(v4, (v11 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 48) = &qword_2550250;
  int v12 = *(_DWORD *)(a2 + 16);
  if (v12)
  {
    uint64_t v13 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v13 = (uint64_t *)*v13;
    }
    sub_1881DF4((std::string **)(a1 + 48), (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL), v13);
    int v12 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 56) = &qword_2550250;
  if ((v12 & 2) != 0)
  {
    int v14 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      int v14 = (uint64_t *)*v14;
    }
    sub_1881DF4((std::string **)(a1 + 56), (long long *)(*(void *)(a2 + 56) & 0xFFFFFFFFFFFFFFFELL), v14);
    int v12 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 64) = &qword_2550250;
  if ((v12 & 4) != 0)
  {
    uint64_t v15 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v15 = (uint64_t *)*v15;
    }
    sub_1881DF4((std::string **)(a1 + 64), (long long *)(*(void *)(a2 + 64) & 0xFFFFFFFFFFFFFFFELL), v15);
    int v12 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 72) = &qword_2550250;
  if ((v12 & 8) != 0)
  {
    int v16 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      int v16 = (uint64_t *)*v16;
    }
    sub_1881DF4((std::string **)(a1 + 72), (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL), v16);
    int v12 = *(_DWORD *)(a2 + 16);
  }
  if ((v12 & 0x10) != 0) {
    operator new();
  }
  *(void *)(a1 + 80) = 0;
  if ((v12 & 0x20) != 0) {
    operator new();
  }
  *(void *)(a1 + 88) = 0;
  if ((v12 & 0x40) != 0) {
    operator new();
  }
  *(void *)(a1 + 96) = 0;
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  return a1;
}

void sub_1412778()
{
}

void *sub_14127F8(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_1412888((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  sub_122C9D8(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void ***sub_1412888(uint64_t a1)
{
  uint64_t v3 = *(uint64_t **)(a1 + 48);
  uint64_t v2 = (void ***)(a1 + 48);
  if (v3 != &qword_2550250) {
    sub_1881C6C(v2);
  }
  if (*(uint64_t **)(a1 + 56) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 56));
  }
  if (*(uint64_t **)(a1 + 64) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 64));
  }
  uint64_t result = (void ***)(a1 + 72);
  if (*(uint64_t **)(a1 + 72) != &qword_2550250) {
    sub_1881C6C(result);
  }
  if ((uint64_t (***)())a1 != &off_2537B70)
  {
    if (*(void *)(a1 + 80))
    {
      sub_15B8F7C();
      operator delete();
    }
    if (*(void *)(a1 + 88))
    {
      sub_15B8F7C();
      operator delete();
    }
    uint64_t result = *(void ****)(a1 + 96);
    if (result)
    {
      sub_15B6D48();
      operator delete();
    }
  }
  return result;
}

void sub_1412988(void *a1)
{
  sub_14127F8(a1);

  operator delete();
}

uint64_t sub_14129C0(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_128E0D4(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  int v5 = *(_DWORD *)(v1 + 16);
  if ((v5 & 0x7F) == 0) {
    goto LABEL_14;
  }
  if (v5)
  {
    unint64_t v8 = *(void *)(v1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v8 + 23) < 0)
    {
      **(unsigned char **)unint64_t v8 = 0;
      *(void *)(v8 + 8) = 0;
      if ((v5 & 2) != 0) {
        goto LABEL_22;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v8 = 0;
      *(unsigned char *)(v8 + 23) = 0;
      if ((v5 & 2) != 0) {
        goto LABEL_22;
      }
    }
LABEL_8:
    if ((v5 & 4) == 0) {
      goto LABEL_9;
    }
LABEL_26:
    unint64_t v10 = *(void *)(v1 + 64) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v10 + 23) < 0)
    {
      **(unsigned char **)unint64_t v10 = 0;
      *(void *)(v10 + 8) = 0;
      if ((v5 & 8) != 0) {
        goto LABEL_30;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v10 = 0;
      *(unsigned char *)(v10 + 23) = 0;
      if ((v5 & 8) != 0) {
        goto LABEL_30;
      }
    }
LABEL_10:
    if ((v5 & 0x10) == 0) {
      goto LABEL_11;
    }
LABEL_34:
    uint64_t result = sub_15B8FB8(*(void *)(v1 + 80));
    if ((v5 & 0x20) == 0)
    {
LABEL_12:
      if ((v5 & 0x40) == 0) {
        goto LABEL_14;
      }
      goto LABEL_13;
    }
    goto LABEL_35;
  }
  if ((v5 & 2) == 0) {
    goto LABEL_8;
  }
LABEL_22:
  unint64_t v9 = *(void *)(v1 + 56) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v9 + 23) < 0)
  {
    **(unsigned char **)unint64_t v9 = 0;
    *(void *)(v9 + 8) = 0;
    if ((v5 & 4) != 0) {
      goto LABEL_26;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v9 = 0;
    *(unsigned char *)(v9 + 23) = 0;
    if ((v5 & 4) != 0) {
      goto LABEL_26;
    }
  }
LABEL_9:
  if ((v5 & 8) == 0) {
    goto LABEL_10;
  }
LABEL_30:
  unint64_t v11 = *(void *)(v1 + 72) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v11 + 23) < 0)
  {
    **(unsigned char **)unint64_t v11 = 0;
    *(void *)(v11 + 8) = 0;
    if ((v5 & 0x10) != 0) {
      goto LABEL_34;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v11 = 0;
    *(unsigned char *)(v11 + 23) = 0;
    if ((v5 & 0x10) != 0) {
      goto LABEL_34;
    }
  }
LABEL_11:
  if ((v5 & 0x20) == 0) {
    goto LABEL_12;
  }
LABEL_35:
  uint64_t result = sub_15B8FB8(*(void *)(v1 + 88));
  if ((v5 & 0x40) != 0) {
LABEL_13:
  }
    uint64_t result = sub_15B6D84(*(void *)(v1 + 96));
LABEL_14:
  char v7 = *(unsigned char *)(v1 + 8);
  uint64_t v6 = v1 + 8;
  *(unsigned char *)(v6 + 96) = 0;
  *(_DWORD *)(v6 + 8) = 0;
  if (v7)
  {
    return sub_188B4AC((uint64_t *)v6);
  }
  return result;
}

uint64_t sub_1412B50(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v38 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v38, a3[11].i32[1])) {
    goto LABEL_2;
  }
  char v7 = (void *)(a1 + 8);
  while (2)
  {
    unint64_t v8 = (unsigned __int8 *)(*(void *)v38 + 1);
    unsigned int v9 = **(unsigned char **)v38;
    if ((char)**(unsigned char **)v38 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        unint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v38, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unint64_t v8 = (unsigned __int8 *)(*(void *)v38 + 2);
      }
    }
    *(void *)uint64_t v38 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_59;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        int v14 = (void *)(a1 + 48);
        goto LABEL_37;
      case 2u:
        if (v9 != 18) {
          goto LABEL_59;
        }
        *(_DWORD *)(a1 + 16) |= 0x10u;
        uint64_t v15 = *(void *)(a1 + 80);
        if (v15) {
          goto LABEL_32;
        }
        int v16 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          int v16 = (void *)*v16;
        }
        uint64_t v15 = sub_15C1EF4((uint64_t)v16);
        *(void *)(a1 + 80) = v15;
        goto LABEL_31;
      case 3u:
        if (v9 != 26) {
          goto LABEL_59;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v17 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
        if (v17) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        int v14 = (void *)(a1 + 56);
        goto LABEL_37;
      case 4u:
        if (v9 != 34) {
          goto LABEL_59;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v18 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
        if (v18) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        int v14 = (void *)(a1 + 64);
        goto LABEL_37;
      case 5u:
        if (v9 != 42) {
          goto LABEL_59;
        }
        *(_DWORD *)(a1 + 16) |= 0x20u;
        uint64_t v15 = *(void *)(a1 + 88);
        if (v15) {
          goto LABEL_32;
        }
        uint64_t v19 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          uint64_t v19 = (void *)*v19;
        }
        uint64_t v15 = sub_15C1EF4((uint64_t)v19);
        *(void *)(a1 + 88) = v15;
LABEL_31:
        unint64_t v8 = *(unsigned __int8 **)v38;
LABEL_32:
        uint64_t v20 = sub_1198E84(a3, v15, v8);
        goto LABEL_66;
      case 6u:
        if (v9 != 50) {
          goto LABEL_59;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v21 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v21 & 0xFFFFFFFFFFFFFFFCLL);
        if (v21) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        int v14 = (void *)(a1 + 72);
LABEL_37:
        uint64_t v22 = (std::string *)sub_1880F84(v14, v13);
        uint64_t v20 = (uint64_t)sub_188C244(v22, *(char **)v38, (uint64_t)a3);
        goto LABEL_66;
      case 7u:
        if (v9 != 58) {
          goto LABEL_59;
        }
        *(_DWORD *)(a1 + 16) |= 0x40u;
        unint64_t v23 = *(void **)(a1 + 96);
        if (!v23)
        {
          uint64_t v24 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v24 = (void *)*v24;
          }
          unint64_t v23 = sub_15C1E94((uint64_t)v24);
          *(void *)(a1 + 96) = v23;
          unint64_t v8 = *(unsigned __int8 **)v38;
        }
        uint64_t v20 = (uint64_t)sub_11EA9CC(a3, (uint64_t)v23, v8);
        goto LABEL_66;
      case 8u:
        if (v9 != 64) {
          goto LABEL_59;
        }
        v5 |= 0x80u;
        unint64_t v25 = (char *)(v8 + 1);
        uint64_t v26 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_48;
        }
        int v27 = *v25;
        uint64_t v26 = v26 + (v27 << 7) - 128;
        if (v27 < 0)
        {
          uint64_t v36 = sub_188C138((uint64_t)v8, v26);
          *(void *)uint64_t v38 = v36;
          *(unsigned char *)(a1 + 104) = v37 != 0;
          if (!v36) {
            goto LABEL_74;
          }
        }
        else
        {
          unint64_t v25 = (char *)(v8 + 2);
LABEL_48:
          *(void *)uint64_t v38 = v25;
          *(unsigned char *)(a1 + 104) = v26 != 0;
        }
        goto LABEL_67;
      case 0x14u:
        if (v9 != 162) {
          goto LABEL_59;
        }
        uint64_t v28 = v8 - 2;
        while (1)
        {
          unint64_t v29 = v28 + 2;
          *(void *)uint64_t v38 = v28 + 2;
          int v30 = *(_DWORD **)(a1 + 40);
          if (v30 && (uint64_t v31 = *(int *)(a1 + 32), (int)v31 < *v30))
          {
            *(_DWORD *)(a1 + 32) = v31 + 1;
            uint64_t v32 = *(void *)&v30[2 * v31 + 2];
          }
          else
          {
            int v33 = sub_128E984(*(void *)(a1 + 24));
            uint64_t v32 = sub_188CDC8(a1 + 24, (uint64_t)v33);
            unint64_t v29 = *(unsigned __int8 **)v38;
          }
          uint64_t v28 = (unsigned __int8 *)sub_11DEED8(a3, v32, v29);
          *(void *)uint64_t v38 = v28;
          if (!v28) {
            goto LABEL_74;
          }
          if (*(void *)a3 <= (unint64_t)v28 || *(_WORD *)v28 != 418) {
            goto LABEL_67;
          }
        }
      default:
LABEL_59:
        if (v9) {
          BOOL v34 = (v9 & 7) == 4;
        }
        else {
          BOOL v34 = 1;
        }
        if (!v34)
        {
          if (*v7)
          {
            int v35 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            int v35 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unint64_t v8 = *(unsigned __int8 **)v38;
          }
          uint64_t v20 = (uint64_t)sub_1885AC0(v9, v35, (char *)v8, a3);
LABEL_66:
          *(void *)uint64_t v38 = v20;
          if (!v20) {
            goto LABEL_74;
          }
LABEL_67:
          if (sub_11947B8((uint64_t)a3, (char **)v38, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_74:
        }
          *(void *)uint64_t v38 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v38;
    }
  }
}

unsigned char *sub_1412FD8(uint64_t a1, unsigned char *__dst, unint64_t *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 0x10) == 0)
    {
LABEL_3:
      if ((v6 & 2) == 0) {
        goto LABEL_4;
      }
      goto LABEL_17;
    }
  }
  else if ((v6 & 0x10) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v7 = *(void *)(a1 + 80);
  unsigned char *v4 = 18;
  unsigned int v8 = *(_DWORD *)(v7 + 20);
  v4[1] = v8;
  if (v8 > 0x7F) {
    unsigned int v9 = sub_188A9CC(v8, v4 + 1);
  }
  else {
    unsigned int v9 = v4 + 2;
  }
  uint64_t v4 = sub_15B9320(v7, v9, a3);
  if ((v6 & 2) == 0)
  {
LABEL_4:
    if ((v6 & 4) == 0) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
LABEL_17:
  uint64_t v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) == 0)
  {
LABEL_5:
    if ((v6 & 0x20) == 0) {
      goto LABEL_6;
    }
    goto LABEL_19;
  }
LABEL_18:
  uint64_t v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x20) == 0)
  {
LABEL_6:
    if ((v6 & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_25;
  }
LABEL_19:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v10 = *(void *)(a1 + 88);
  unsigned char *v4 = 42;
  unsigned int v11 = *(_DWORD *)(v10 + 20);
  v4[1] = v11;
  if (v11 > 0x7F) {
    uint64_t v12 = sub_188A9CC(v11, v4 + 1);
  }
  else {
    uint64_t v12 = v4 + 2;
  }
  uint64_t v4 = sub_15B9320(v10, v12, a3);
  if ((v6 & 8) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_26;
  }
LABEL_25:
  uint64_t v4 = sub_117A0AC(a3, 6, (const void **)(*(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_35;
    }
    goto LABEL_32;
  }
LABEL_26:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v13 = *(void *)(a1 + 96);
  unsigned char *v4 = 58;
  unsigned int v14 = *(_DWORD *)(v13 + 20);
  v4[1] = v14;
  if (v14 > 0x7F) {
    uint64_t v15 = sub_188A9CC(v14, v4 + 1);
  }
  else {
    uint64_t v15 = v4 + 2;
  }
  uint64_t v4 = sub_15B7AE4(v13, v15, a3);
  if ((v6 & 0x80) != 0)
  {
LABEL_32:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v16 = *(unsigned char *)(a1 + 104);
    unsigned char *v4 = 64;
    v4[1] = v16;
    v4 += 2;
  }
LABEL_35:
  int v17 = *(_DWORD *)(a1 + 32);
  if (v17)
  {
    for (int i = 0; i != v17; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v19 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *(_WORD *)uint64_t v4 = 418;
      unsigned int v20 = *(_DWORD *)(v19 + 20);
      v4[2] = v20;
      if (v20 > 0x7F) {
        uint64_t v21 = sub_188A9CC(v20, v4 + 2);
      }
      else {
        uint64_t v21 = v4 + 3;
      }
      uint64_t v4 = sub_128E488(v19, v21, a3);
    }
  }
  uint64_t v22 = *(void *)(a1 + 8);
  if ((v22 & 1) == 0) {
    return v4;
  }
  unint64_t v24 = v22 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v24 + 31) < 0)
  {
    unint64_t v25 = *(void **)(v24 + 8);
    uint64_t v26 = *(void *)(v24 + 16);
  }
  else
  {
    unint64_t v25 = (void *)(v24 + 8);
    LODWORD(v26) = *(unsigned __int8 *)(v24 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v26)
  {
    uint64_t v27 = (int)v26;
    memcpy(v4, v25, (int)v26);
    v4 += v27;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v25, v26, v4);
}

uint64_t sub_1413324(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = 2 * v2;
  uint64_t v4 = *(void *)(a1 + 40);
  if (v4) {
    int v5 = (uint64_t *)(v4 + 8);
  }
  else {
    int v5 = 0;
  }
  if (v2)
  {
    uint64_t v6 = 8 * v2;
    do
    {
      uint64_t v7 = *v5++;
      uint64_t v8 = sub_128E5E8(v7);
      v3 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6);
      v6 -= 8;
    }
    while (v6);
  }
  char v9 = *(unsigned char *)(a1 + 16);
  if (v9)
  {
    if (*(unsigned char *)(a1 + 16))
    {
      unint64_t v13 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v14 = *(unsigned __int8 *)(v13 + 23);
      uint64_t v15 = *(void *)(v13 + 8);
      if ((v14 & 0x80u) == 0) {
        uint64_t v15 = v14;
      }
      v3 += v15 + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((*(unsigned char *)(a1 + 16) & 2) == 0)
      {
LABEL_10:
        if ((*(unsigned char *)(a1 + 16) & 4) == 0) {
          goto LABEL_11;
        }
        goto LABEL_26;
      }
    }
    else if ((*(unsigned char *)(a1 + 16) & 2) == 0)
    {
      goto LABEL_10;
    }
    unint64_t v16 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v17 = *(unsigned __int8 *)(v16 + 23);
    uint64_t v18 = *(void *)(v16 + 8);
    if ((v17 & 0x80u) == 0) {
      uint64_t v18 = v17;
    }
    v3 += v18 + ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((*(unsigned char *)(a1 + 16) & 4) == 0)
    {
LABEL_11:
      if ((*(unsigned char *)(a1 + 16) & 8) == 0) {
        goto LABEL_12;
      }
      goto LABEL_29;
    }
LABEL_26:
    unint64_t v19 = *(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v20 = *(unsigned __int8 *)(v19 + 23);
    uint64_t v21 = *(void *)(v19 + 8);
    if ((v20 & 0x80u) == 0) {
      uint64_t v21 = v20;
    }
    v3 += v21 + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((*(unsigned char *)(a1 + 16) & 8) == 0)
    {
LABEL_12:
      if ((*(unsigned char *)(a1 + 16) & 0x10) == 0) {
        goto LABEL_13;
      }
      goto LABEL_32;
    }
LABEL_29:
    unint64_t v22 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v23 = *(unsigned __int8 *)(v22 + 23);
    uint64_t v24 = *(void *)(v22 + 8);
    if ((v23 & 0x80u) == 0) {
      uint64_t v24 = v23;
    }
    v3 += v24 + ((9 * (__clz(v24 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((*(unsigned char *)(a1 + 16) & 0x10) == 0)
    {
LABEL_13:
      if ((*(unsigned char *)(a1 + 16) & 0x20) == 0) {
        goto LABEL_14;
      }
      goto LABEL_33;
    }
LABEL_32:
    uint64_t v25 = sub_15B956C(*(void *)(a1 + 80));
    v3 += v25 + ((9 * (__clz(v25 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v9 & 0x20) == 0)
    {
LABEL_14:
      if ((v9 & 0x40) == 0) {
        goto LABEL_16;
      }
      goto LABEL_15;
    }
LABEL_33:
    uint64_t v26 = sub_15B956C(*(void *)(a1 + 88));
    v3 += v26 + ((9 * (__clz(v26 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v9 & 0x40) == 0)
    {
LABEL_16:
      if (v9 < 0) {
        v3 += 2;
      }
      goto LABEL_18;
    }
LABEL_15:
    uint64_t v10 = sub_15B806C(*(void *)(a1 + 96));
    v3 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
    goto LABEL_16;
  }
LABEL_18:
  uint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    unint64_t v27 = v11 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v27 + 31) < 0) {
      uint64_t v28 = *(void *)(v27 + 16);
    }
    else {
      uint64_t v28 = *(unsigned __int8 *)(v27 + 31);
    }
    v3 += v28;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_14135A0(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    int v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = sub_122CE78(v3 + 1, v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2] - LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    uint64_t v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((_BYTE)v9)
  {
    if (v9)
    {
      uint64_t v10 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v12 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v12 = (uint64_t *)*v12;
      }
      uint64_t result = sub_1881DF4((std::string **)&v3[2], v10, v12);
      if ((v9 & 2) == 0)
      {
LABEL_7:
        if ((v9 & 4) == 0) {
          goto LABEL_8;
        }
        goto LABEL_16;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_7;
    }
    unint64_t v13 = (long long *)(*(void *)(a2 + 56) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    std::string::size_type v14 = v3->__r_.__value_.__l.__size_;
    uint64_t v15 = (uint64_t *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
    if (v14) {
      uint64_t v15 = (uint64_t *)*v15;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[2].__r_.__value_.__l.__size_, v13, v15);
    if ((v9 & 4) == 0)
    {
LABEL_8:
      if ((v9 & 8) == 0) {
        goto LABEL_22;
      }
      goto LABEL_19;
    }
LABEL_16:
    unint64_t v16 = (long long *)(*(void *)(a2 + 64) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
    std::string::size_type v17 = v3->__r_.__value_.__l.__size_;
    uint64_t v18 = (uint64_t *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
    if (v17) {
      uint64_t v18 = (uint64_t *)*v18;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[2].__r_.__value_.__r.__words[2], v16, v18);
    if ((v9 & 8) == 0)
    {
LABEL_22:
      if ((v9 & 0x10) != 0)
      {
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x10u;
        uint64_t v23 = (std::string *)v3[3].__r_.__value_.__l.__size_;
        if (!v23)
        {
          std::string::size_type v24 = v3->__r_.__value_.__l.__size_;
          uint64_t v25 = (void *)(v24 & 0xFFFFFFFFFFFFFFFCLL);
          if (v24) {
            uint64_t v25 = (void *)*v25;
          }
          uint64_t v23 = (std::string *)sub_15C1EF4((uint64_t)v25);
          v3[3].__r_.__value_.__l.__size_ = (std::string::size_type)v23;
        }
        if (*(void *)(a2 + 80)) {
          uint64_t v26 = *(uint64_t (****)())(a2 + 80);
        }
        else {
          uint64_t v26 = &off_253F4C8;
        }
        uint64_t result = sub_15B9698(v23, (uint64_t)v26);
        if ((v9 & 0x20) == 0)
        {
LABEL_24:
          if ((v9 & 0x40) == 0) {
            goto LABEL_25;
          }
          goto LABEL_48;
        }
      }
      else if ((v9 & 0x20) == 0)
      {
        goto LABEL_24;
      }
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x20u;
      unint64_t v27 = (std::string *)v3[3].__r_.__value_.__r.__words[2];
      if (!v27)
      {
        std::string::size_type v28 = v3->__r_.__value_.__l.__size_;
        unint64_t v29 = (void *)(v28 & 0xFFFFFFFFFFFFFFFCLL);
        if (v28) {
          unint64_t v29 = (void *)*v29;
        }
        unint64_t v27 = (std::string *)sub_15C1EF4((uint64_t)v29);
        v3[3].__r_.__value_.__r.__words[2] = (std::string::size_type)v27;
      }
      if (*(void *)(a2 + 88)) {
        int v30 = *(uint64_t (****)())(a2 + 88);
      }
      else {
        int v30 = &off_253F4C8;
      }
      uint64_t result = sub_15B9698(v27, (uint64_t)v30);
      if ((v9 & 0x40) == 0)
      {
LABEL_25:
        if ((v9 & 0x80) == 0)
        {
LABEL_27:
          LODWORD(v3->__r_.__value_.__r.__words[2]) |= v9;
          goto LABEL_28;
        }
LABEL_26:
        v3[4].__r_.__value_.__s.__data_[8] = *(unsigned char *)(a2 + 104);
        goto LABEL_27;
      }
LABEL_48:
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x40u;
      std::string::pointer data = (std::string *)v3[4].__r_.__value_.__l.__data_;
      if (!data)
      {
        std::string::size_type v32 = v3->__r_.__value_.__l.__size_;
        int v33 = (void *)(v32 & 0xFFFFFFFFFFFFFFFCLL);
        if (v32) {
          int v33 = (void *)*v33;
        }
        std::string::pointer data = (std::string *)sub_15C1E94((uint64_t)v33);
        v3[4].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      }
      if (*(void *)(a2 + 96)) {
        BOOL v34 = *(uint64_t (****)())(a2 + 96);
      }
      else {
        BOOL v34 = &off_253F3D0;
      }
      uint64_t result = sub_15B86B8(data, (uint64_t)v34);
      if ((v9 & 0x80) == 0) {
        goto LABEL_27;
      }
      goto LABEL_26;
    }
LABEL_19:
    unint64_t v19 = (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 8u;
    std::string::size_type v20 = v3->__r_.__value_.__l.__size_;
    uint64_t v21 = (uint64_t *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
    if (v20) {
      uint64_t v21 = (uint64_t *)*v21;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[3], v19, v21);
    goto LABEL_22;
  }
LABEL_28:
  uint64_t v22 = *(void *)(a2 + 8);
  if (v22)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v22 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

BOOL sub_1413860(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0x10) != 0)
  {
    BOOL result = sub_15B9824(*(void *)(a1 + 80));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 0x20) != 0)
  {
    BOOL result = sub_15B9824(*(void *)(a1 + 88));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 0x40) == 0) {
    return 1;
  }
  BOOL result = sub_15B8CAC(*(void *)(a1 + 96));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_14138C0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gemini.BusinessCard.LocalizedAddress");
}

uint64_t sub_14138D0(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  if ((uint64_t (***)())a1 != &off_2537BE0 && *(void *)(a1 + 24))
  {
    sub_15BB0B0();
    operator delete();
  }
  if (*(void *)(a1 + 8)) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1413988(uint64_t a1)
{
  sub_14138D0(a1);

  operator delete();
}

unsigned char *sub_14139C0(unsigned char *result)
{
  uint64_t v1 = result;
  if (result[16]) {
    BOOL result = sub_15BB0EC(*((unsigned char **)result + 3));
  }
  char v3 = v1[8];
  uint64_t v2 = v1 + 8;
  *((void *)v2 + 3) = 0;
  *((_DWORD *)v2 + 2) = 0;
  if (v3)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v2);
  }
  return result;
}

char *sub_1413A20(uint64_t a1, char *a2, int32x2_t *a3)
{
  std::string::size_type v24 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v24, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v24 + 1;
    unsigned int v9 = *v24;
    if (*v24 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v24, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v24 + 2;
      }
    }
    std::string::size_type v24 = v8;
    if (v9 >> 3 != 3) {
      break;
    }
    if (v9 != 24) {
      goto LABEL_13;
    }
    v5 |= 2u;
    unint64_t v16 = v8 + 1;
    uint64_t v17 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_24;
    }
    int v18 = *v16;
    uint64_t v17 = v17 + (v18 << 7) - 128;
    if ((v18 & 0x80000000) == 0)
    {
      unint64_t v16 = v8 + 2;
LABEL_24:
      std::string::size_type v24 = v16;
      *(void *)(a1 + 32) = v17;
      goto LABEL_31;
    }
    uint64_t v22 = (char *)sub_188C138((uint64_t)v8, v17);
    std::string::size_type v24 = v22;
    *(void *)(a1 + 32) = v23;
    if (!v22) {
      goto LABEL_38;
    }
LABEL_31:
    if (sub_11947B8((uint64_t)a3, &v24, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 >> 3 == 1 && v9 == 10)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v19 = *(void *)(a1 + 24);
    if (!v19)
    {
      std::string::size_type v20 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v7) {
        std::string::size_type v20 = (void *)*v20;
      }
      sub_15C219C((uint64_t)v20);
      uint64_t v19 = v21;
      *(void *)(a1 + 24) = v21;
      uint64_t v8 = v24;
    }
    uint64_t v15 = sub_11FF458(a3, v19, (unsigned __int8 *)v8);
LABEL_30:
    std::string::size_type v24 = v15;
    if (!v15) {
      goto LABEL_38;
    }
    goto LABEL_31;
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      std::string::size_type v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      std::string::size_type v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = v24;
    }
    uint64_t v15 = (char *)sub_1885AC0(v9, v14, v8, a3);
    goto LABEL_30;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_38:
  std::string::size_type v24 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v24;
}

unsigned char *sub_1413C04(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    unsigned char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    int v4 = sub_15BB7A0(v7, (unint64_t)v9, a3);
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(void *)(a1 + 32);
    unsigned char *v4 = 24;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    unint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    unint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_1413D9C(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 3) == 0)
  {
    uint64_t result = 0;
    goto LABEL_8;
  }
  if (v2)
  {
    uint64_t v4 = sub_15BBC64(*(void *)(a1 + 24));
    uint64_t result = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t result = 0;
  if ((v2 & 2) != 0) {
LABEL_7:
  }
    result += ((9 * (__clz(*(void *)(a1 + 32) | 1) ^ 0x3F) + 73) >> 6) + 1;
LABEL_8:
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5)
  {
    unint64_t v6 = v5 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v6 + 31) < 0) {
      uint64_t v7 = *(void *)(v6 + 16);
    }
    else {
      uint64_t v7 = *(unsigned __int8 *)(v6 + 31);
    }
    result += v7;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

void sub_1413E5C(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 3) != 0)
  {
    if (v4)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v5 = *(void *)(a1 + 24);
      if (!v5)
      {
        uint64_t v6 = *(void *)(a1 + 8);
        uint64_t v7 = (void *)(v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (v6) {
          uint64_t v7 = (void *)*v7;
        }
        sub_15C219C((uint64_t)v7);
        *(void *)(a1 + 24) = v5;
      }
      if (*(void *)(a2 + 24)) {
        unsigned int v8 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        unsigned int v8 = &off_253F580;
      }
      sub_15BBE88(v5, (uint64_t)v8);
    }
    if ((v4 & 2) != 0) {
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
    }
    *(_DWORD *)(a1 + 16) |= v4;
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_1413F2C(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 1;
  }
  uint64_t result = sub_15BC024(*(void *)(a1 + 24));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_1413F58@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gemini.BusinessCard.AccessPoint");
}

uint64_t sub_1413F68(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (void *)(a1 + 8);
  *(void *)a1 = off_24B2B08;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 24) = &qword_2550250;
  int v6 = *(_DWORD *)(a2 + 16);
  if (v6)
  {
    uint64_t v7 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v7 = (uint64_t *)*v7;
    }
    sub_1881DF4((std::string **)(a1 + 24), (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL), v7);
    int v6 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 32) = &qword_2550250;
  if ((v6 & 2) != 0)
  {
    unsigned int v8 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      unsigned int v8 = (uint64_t *)*v8;
    }
    sub_1881DF4((std::string **)(a1 + 32), (long long *)(*(void *)(a2 + 32) & 0xFFFFFFFFFFFFFFFELL), v8);
  }
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  return a1;
}

void sub_141404C(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_1414080(uint64_t a1)
{
  char v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_9;
    }
  }
  else if (v4)
  {
    goto LABEL_9;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_9:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1414138(uint64_t a1)
{
  sub_1414080(a1);

  operator delete();
}

uint64_t sub_1414170(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) != 0)
  {
    if (v1)
    {
      unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v2 + 23) < 0)
      {
        **(unsigned char **)unint64_t v2 = 0;
        *(void *)(v2 + 8) = 0;
        if ((v1 & 2) == 0) {
          goto LABEL_11;
        }
        goto LABEL_6;
      }
      *(unsigned char *)unint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
    }
    if ((v1 & 2) == 0) {
      goto LABEL_11;
    }
LABEL_6:
    unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)unint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
LABEL_11:
  if ((v1 & 0xC) != 0) {
    *(void *)(a1 + 40) = 0;
  }
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v5) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_14141F8(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v30 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v30, a3[11].i32[1])) {
    return *(void *)v30;
  }
  int v6 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v7 = (char *)(*(void *)v30 + 1);
    unsigned int v8 = **(unsigned char **)v30;
    if ((char)**(unsigned char **)v30 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180(*(uint64_t *)v30, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (char *)(*(void *)v30 + 2);
      }
    }
    *(void *)int v30 = v7;
    switch(v8 >> 3)
    {
      case 2u:
        if (v8 != 18) {
          goto LABEL_32;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v11 = *(void *)(a1 + 8);
        unint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
        if (v11) {
          unint64_t v12 = (uint64_t *)*v12;
        }
        uint64_t v13 = (void *)(a1 + 24);
        goto LABEL_24;
      case 3u:
        if (v8 != 24) {
          goto LABEL_32;
        }
        std::string::size_type v14 = v7 + 1;
        unint64_t v15 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_17;
        }
        int v16 = *v14;
        int v17 = v15 + (v16 << 7);
        unint64_t v15 = (v17 - 128);
        if (v16 < 0)
        {
          *(void *)int v30 = sub_188C138((uint64_t)v7, (v17 - 128));
          if (!*(void *)v30) {
            return 0;
          }
          unint64_t v15 = v26;
        }
        else
        {
          std::string::size_type v14 = v7 + 2;
LABEL_17:
          *(void *)int v30 = v14;
        }
        if (sub_16B5BAC(v15))
        {
          *(_DWORD *)(a1 + 16) |= 4u;
          *(_DWORD *)(a1 + 40) = v15;
          goto LABEL_40;
        }
        if (*v6) {
          std::string::size_type v28 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          std::string::size_type v28 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v29 = 3;
        goto LABEL_52;
      case 4u:
        if (v8 != 34) {
          goto LABEL_32;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v18 = *(void *)(a1 + 8);
        unint64_t v12 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
        if (v18) {
          unint64_t v12 = (uint64_t *)*v12;
        }
        uint64_t v13 = (void *)(a1 + 32);
LABEL_24:
        uint64_t v19 = (std::string *)sub_1880F84(v13, v12);
        std::string::size_type v20 = (void *)sub_188C244(v19, *(char **)v30, (uint64_t)a3);
        goto LABEL_39;
      case 5u:
        if (v8 != 40) {
          goto LABEL_32;
        }
        uint64_t v21 = v7 + 1;
        unint64_t v15 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_29;
        }
        int v22 = *v21;
        int v23 = v15 + (v22 << 7);
        unint64_t v15 = (v23 - 128);
        if (v22 < 0)
        {
          *(void *)int v30 = sub_188C138((uint64_t)v7, (v23 - 128));
          if (!*(void *)v30) {
            return 0;
          }
          unint64_t v15 = v27;
        }
        else
        {
          uint64_t v21 = v7 + 2;
LABEL_29:
          *(void *)int v30 = v21;
        }
        if (v15 > 2)
        {
          if (*v6) {
            std::string::size_type v28 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            std::string::size_type v28 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          int v29 = 5;
LABEL_52:
          sub_188C020(v29, v15, v28);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 8u;
          *(_DWORD *)(a1 + 44) = v15;
        }
        goto LABEL_40;
      default:
LABEL_32:
        if (v8) {
          BOOL v24 = (v8 & 7) == 4;
        }
        else {
          BOOL v24 = 1;
        }
        if (!v24)
        {
          if (*v6)
          {
            uint64_t v25 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v25 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v7 = *(char **)v30;
          }
          std::string::size_type v20 = sub_1885AC0(v8, v25, v7, a3);
LABEL_39:
          *(void *)int v30 = v20;
          if (!v20) {
            return 0;
          }
LABEL_40:
          if (sub_11947B8((uint64_t)a3, (char **)v30, a3[11].i32[1])) {
            return *(void *)v30;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return *(void *)v30;
    }
  }
}

unsigned char *sub_141450C(uint64_t a1, unsigned char *__dst, void *a3)
{
  int v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    int v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v7 = *(int *)(a1 + 40);
    unsigned char *v4 = 24;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0) {
    int v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 44);
    unsigned char *v4 = 40;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    int v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    int v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_14146F0(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 0xF) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_23;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
  uint64_t v5 = *(void *)(v3 + 8);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = v4;
  }
  uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    unint64_t v6 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v1 & 4) == 0)
  {
    if ((v1 & 8) == 0) {
      goto LABEL_23;
    }
    goto LABEL_19;
  }
  int v9 = *(_DWORD *)(a1 + 40);
  if (v9 < 0) {
    uint64_t v10 = 11;
  }
  else {
    uint64_t v10 = ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v2 += v10;
  if ((v1 & 8) != 0)
  {
LABEL_19:
    int v11 = *(_DWORD *)(a1 + 44);
    if (v11 < 0) {
      uint64_t v12 = 11;
    }
    else {
      uint64_t v12 = ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v12;
  }
LABEL_23:
  uint64_t v13 = *(void *)(a1 + 8);
  if (v13)
  {
    unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v15 + 31) < 0) {
      uint64_t v16 = *(void *)(v15 + 16);
    }
    else {
      uint64_t v16 = *(unsigned __int8 *)(v15 + 31);
    }
    v2 += v16;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_141483C()
{
  return 1;
}

void *sub_1414844@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gemini.BusinessCard.UnitFact");
}

uint64_t sub_1414854(uint64_t a1)
{
  unint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_12;
    }
  }
  else if (v4)
  {
    goto LABEL_12;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if ((uint64_t (***)())a1 != &off_2537C38)
  {
    uint64_t v6 = *(void *)(a1 + 40);
    if (v6)
    {
      sub_140C670(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_12:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_141493C(uint64_t a1)
{
  sub_1414854(a1);

  operator delete();
}

uint64_t sub_1414974(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 7) == 0) {
    goto LABEL_6;
  }
  if ((v2 & 1) == 0)
  {
    if ((v2 & 2) == 0) {
      goto LABEL_4;
    }
    goto LABEL_16;
  }
  unint64_t v5 = *(void *)(result + 24) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v5 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v5 = 0;
    *(unsigned char *)(v5 + 23) = 0;
    if ((v2 & 2) != 0) {
      goto LABEL_16;
    }
LABEL_4:
    if ((v2 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  **(unsigned char **)unint64_t v5 = 0;
  *(void *)(v5 + 8) = 0;
  if ((v2 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_16:
  unint64_t v6 = *(void *)(result + 32) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v6 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v6 = 0;
    *(unsigned char *)(v6 + 23) = 0;
    if ((v2 & 4) == 0) {
      goto LABEL_6;
    }
LABEL_5:
    uint64_t result = sub_140C788(*(void *)(result + 40));
    goto LABEL_6;
  }
  **(unsigned char **)unint64_t v6 = 0;
  *(void *)(v6 + 8) = 0;
  if ((v2 & 4) != 0) {
    goto LABEL_5;
  }
LABEL_6:
  if ((v2 & 0x18) != 0) {
    *(void *)(v1 + 48) = 0;
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_1414A50(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v33 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v33, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (unsigned __int8 *)(*(void *)v33 + 1);
    unsigned int v9 = **(unsigned char **)v33;
    if ((char)**(unsigned char **)v33 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        uint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v33, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (unsigned __int8 *)(*(void *)v33 + 2);
      }
    }
    *(void *)int v33 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_36;
        }
        v5 |= 8u;
        uint64_t v12 = (char *)(v8 + 1);
        uint64_t v13 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        uint64_t v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          uint64_t v12 = (char *)(v8 + 2);
LABEL_13:
          *(void *)int v33 = v12;
          *(unsigned char *)(a1 + 48) = v13 != 0;
          goto LABEL_44;
        }
        uint64_t v29 = sub_188C138((uint64_t)v8, v13);
        *(void *)int v33 = v29;
        *(unsigned char *)(a1 + 48) = v30 != 0;
        if (v29) {
          goto LABEL_44;
        }
        goto LABEL_57;
      case 2u:
        if (v9 != 18) {
          goto LABEL_36;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v15 = *(void *)(a1 + 8);
        uint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          uint64_t v16 = (uint64_t *)*v16;
        }
        uint64_t v17 = (void *)(a1 + 24);
        goto LABEL_35;
      case 3u:
        if (v9 != 24) {
          goto LABEL_36;
        }
        uint64_t v18 = (char *)(v8 + 1);
        unint64_t v19 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_22;
        }
        int v20 = *v18;
        int v21 = v19 + (v20 << 7);
        unint64_t v19 = (v21 - 128);
        if (v20 < 0)
        {
          *(void *)int v33 = sub_188C138((uint64_t)v8, (v21 - 128));
          if (!*(void *)v33) {
            goto LABEL_57;
          }
          unint64_t v19 = v31;
        }
        else
        {
          uint64_t v18 = (char *)(v8 + 2);
LABEL_22:
          *(void *)int v33 = v18;
        }
        if (v19 > 4)
        {
          if (*v7) {
            std::string::size_type v32 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            std::string::size_type v32 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(3, v19, v32);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 0x10u;
          *(_DWORD *)(a1 + 52) = v19;
        }
        goto LABEL_44;
      case 4u:
        if (v9 != 34) {
          goto LABEL_36;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        int v22 = *(void **)(a1 + 40);
        if (!v22)
        {
          int v23 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            int v23 = (void *)*v23;
          }
          int v22 = sub_1449EB4((uint64_t)v23);
          *(void *)(a1 + 40) = v22;
          uint64_t v8 = *(unsigned __int8 **)v33;
        }
        uint64_t v24 = sub_123257C(a3, (uint64_t)v22, v8);
        goto LABEL_43;
      case 5u:
        if (v9 != 42) {
          goto LABEL_36;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v25 = *(void *)(a1 + 8);
        uint64_t v16 = (uint64_t *)(v25 & 0xFFFFFFFFFFFFFFFCLL);
        if (v25) {
          uint64_t v16 = (uint64_t *)*v16;
        }
        uint64_t v17 = (void *)(a1 + 32);
LABEL_35:
        unint64_t v26 = (std::string *)sub_1880F84(v17, v16);
        uint64_t v24 = (uint64_t)sub_188C244(v26, *(char **)v33, (uint64_t)a3);
        goto LABEL_43;
      default:
LABEL_36:
        if (v9) {
          BOOL v27 = (v9 & 7) == 4;
        }
        else {
          BOOL v27 = 1;
        }
        if (!v27)
        {
          if (*v7)
          {
            std::string::size_type v28 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            std::string::size_type v28 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = *(unsigned __int8 **)v33;
          }
          uint64_t v24 = (uint64_t)sub_1885AC0(v9, v28, (char *)v8, a3);
LABEL_43:
          *(void *)int v33 = v24;
          if (!v24) {
            goto LABEL_57;
          }
LABEL_44:
          if (sub_11947B8((uint64_t)a3, (char **)v33, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_57:
        }
          *(void *)int v33 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v33;
    }
  }
}

char *sub_1414DA0(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 8) != 0)
  {
    if (*a3 <= __dst) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    char v7 = *(unsigned char *)(a1 + 48);
    char *v4 = 8;
    v4[1] = v7;
    v4 += 2;
    if ((v6 & 1) == 0)
    {
LABEL_3:
      if ((v6 & 0x10) == 0) {
        goto LABEL_15;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 1) == 0)
  {
    goto LABEL_3;
  }
  char v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x10) == 0) {
    goto LABEL_15;
  }
LABEL_9:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  unint64_t v8 = *(int *)(a1 + 52);
  char *v4 = 24;
  v4[1] = v8;
  if (v8 > 0x7F)
  {
    v4[1] = v8 | 0x80;
    unint64_t v9 = v8 >> 7;
    v4[2] = v8 >> 7;
    v4 += 3;
    if (v8 >= 0x4000)
    {
      do
      {
        *(v4 - 1) |= 0x80u;
        unint64_t v10 = v9 >> 14;
        v9 >>= 7;
        *v4++ = v9;
      }
      while (v10);
    }
  }
  else
  {
    v4 += 2;
  }
LABEL_15:
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v11 = *(void *)(a1 + 40);
    char *v4 = 34;
    unsigned int v12 = *(_DWORD *)(v11 + 20);
    v4[1] = v12;
    if (v12 > 0x7F) {
      uint64_t v13 = sub_188A9CC(v12, v4 + 1);
    }
    else {
      uint64_t v13 = v4 + 2;
    }
    char v4 = sub_140CAC4(v11, v13, a3);
  }
  if ((v6 & 2) != 0) {
    char v4 = sub_117A0AC(a3, 5, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v14 = *(void *)(a1 + 8);
  if ((v14 & 1) == 0) {
    return v4;
  }
  unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v16 + 31) < 0)
  {
    uint64_t v17 = *(void **)(v16 + 8);
    uint64_t v18 = *(void *)(v16 + 16);
  }
  else
  {
    uint64_t v17 = (void *)(v16 + 8);
    LODWORD(v18) = *(unsigned __int8 *)(v16 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v18)
  {
    uint64_t v19 = (int)v18;
    memcpy(v4, v17, (int)v18);
    v4 += v19;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v17, v18, v4);
}

uint64_t sub_1414FBC(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0x1F) == 0)
  {
    uint64_t result = 0;
    goto LABEL_22;
  }
  if (v2)
  {
    unint64_t v5 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
    uint64_t v7 = *(void *)(v5 + 8);
    if ((v6 & 0x80u) == 0) {
      uint64_t v7 = v6;
    }
    uint64_t v3 = v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_9:
    unint64_t v8 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v9 = *(unsigned __int8 *)(v8 + 23);
    uint64_t v10 = *(void *)(v8 + 8);
    if ((v9 & 0x80u) == 0) {
      uint64_t v10 = v9;
    }
    v3 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v2 & 4) != 0)
  {
    uint64_t v11 = sub_140CC00(*(void *)(a1 + 40));
    v3 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  if ((v2 & 8) != 0) {
    uint64_t result = v3 + 2;
  }
  else {
    uint64_t result = v3;
  }
  if ((v2 & 0x10) != 0)
  {
    int v12 = *(_DWORD *)(a1 + 52);
    uint64_t v13 = ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if (v12 >= 0) {
      uint64_t v14 = v13;
    }
    else {
      uint64_t v14 = 11;
    }
    result += v14;
  }
LABEL_22:
  uint64_t v15 = *(void *)(a1 + 8);
  if (v15)
  {
    unint64_t v16 = v15 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v16 + 31) < 0) {
      uint64_t v17 = *(void *)(v16 + 16);
    }
    else {
      uint64_t v17 = *(unsigned __int8 *)(v16 + 31);
    }
    result += v17;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

std::string *sub_1415128(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0x1F) != 0)
  {
    if (v4)
    {
      uint64_t v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      uint64_t v7 = (std::string **)&result[1];
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v9 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v9 = (uint64_t *)*v9;
      }
      uint64_t result = sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_19;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    uint64_t v10 = (long long *)(*(void *)(a2 + 32) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    std::string::size_type v11 = v3->__r_.__value_.__l.__size_;
    int v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
    if (v11) {
      int v12 = (uint64_t *)*v12;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[1].__r_.__value_.__l.__size_, v10, v12);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_27;
    }
LABEL_19:
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
    uint64_t v13 = (std::string *)v3[1].__r_.__value_.__r.__words[2];
    if (!v13)
    {
      std::string::size_type v14 = v3->__r_.__value_.__l.__size_;
      uint64_t v15 = (void *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
      if (v14) {
        uint64_t v15 = (void *)*v15;
      }
      uint64_t v13 = (std::string *)sub_1449EB4((uint64_t)v15);
      v3[1].__r_.__value_.__r.__words[2] = (std::string::size_type)v13;
    }
    if (*(void *)(a2 + 40)) {
      unint64_t v16 = *(uint64_t (****)(uint64_t))(a2 + 40);
    }
    else {
      unint64_t v16 = &off_2537960;
    }
    uint64_t result = sub_1263010(v13, (uint64_t)v16);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0)
      {
LABEL_8:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
        goto LABEL_9;
      }
LABEL_7:
      HIDWORD(v3[2].__r_.__value_.__r.__words[0]) = *(_DWORD *)(a2 + 52);
      goto LABEL_8;
    }
LABEL_27:
    v3[2].__r_.__value_.__s.__data_[0] = *(unsigned char *)(a2 + 48);
    if ((v4 & 0x10) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
LABEL_9:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

BOOL sub_1415280(uint64_t a1)
{
  return (*(unsigned char *)(a1 + 16) & 4) == 0 || (~*(_DWORD *)(*(void *)(a1 + 40) + 16) & 3) == 0;
}

void *sub_14152AC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gemini.BusinessCard.PlaceClaim");
}

uint64_t sub_14152BC(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 7) != 0)
  {
    *(void *)(a1 + 24) = 0;
    *(void *)(a1 + 32) = 0;
    *(void *)(a1 + 40) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

std::string *sub_14152E8(std::string *result)
{
  uint64_t v1 = result;
  int v2 = result->__r_.__value_.__r.__words[2];
  if ((v2 & 3) != 0)
  {
    if ((v2 & 1) == 0) {
      goto LABEL_5;
    }
    unint64_t v3 = result[1].__r_.__value_.__r.__words[0] & 0xFFFFFFFFFFFFFFFELL;
    if ((*(char *)(v3 + 23) & 0x80000000) == 0)
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
LABEL_5:
      if ((v2 & 2) == 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
    **(unsigned char **)unint64_t v3 = 0;
    *(void *)(v3 + 8) = 0;
    if ((v2 & 2) != 0) {
LABEL_6:
    }
      uint64_t result = sub_1882020((std::string *)((char *)result + 32), &off_2538EC0);
  }
LABEL_7:
  std::string::value_type v5 = v1->__r_.__value_.__s.__data_[8];
  p_std::string::size_type size = &v1->__r_.__value_.__l.__size_;
  *((_DWORD *)p_size + 2) = 0;
  if (v5)
  {
    return (std::string *)sub_188B4AC((uint64_t *)p_size);
  }
  return result;
}

uint64_t sub_1415398(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 16) = 0;
  *(void *)(result + 32) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_14153B4(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 24);
  if ((int)v2 >= 1)
  {
    unint64_t v3 = (uint64_t *)(*(void *)(result + 32) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_1419538(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 24) = 0;
  }
  uint64_t v5 = *(unsigned int *)(v1 + 48);
  if ((int)v5 >= 1)
  {
    uint64_t v6 = (uint64_t *)(*(void *)(v1 + 56) + 8);
    do
    {
      uint64_t v7 = *v6++;
      uint64_t result = sub_1419538(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(v1 + 48) = 0;
  }
  uint64_t v8 = *(unsigned int *)(v1 + 72);
  if ((int)v8 >= 1)
  {
    uint64_t v9 = (uint64_t *)(*(void *)(v1 + 80) + 8);
    do
    {
      uint64_t v10 = *v9++;
      uint64_t result = sub_1419538(v10);
      --v8;
    }
    while (v8);
    *(_DWORD *)(v1 + 72) = 0;
  }
  uint64_t v11 = *(unsigned int *)(v1 + 96);
  if ((int)v11 >= 1)
  {
    int v12 = (uint64_t *)(*(void *)(v1 + 104) + 8);
    do
    {
      uint64_t v13 = *v12++;
      uint64_t result = sub_1419538(v13);
      --v11;
    }
    while (v11);
    *(_DWORD *)(v1 + 96) = 0;
  }
  char v15 = *(unsigned char *)(v1 + 8);
  std::string::size_type v14 = (uint64_t *)(v1 + 8);
  if (v15)
  {
    return sub_188B4AC(v14);
  }
  return result;
}

uint64_t sub_14154A8(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 0x1F) == 0) {
    goto LABEL_8;
  }
  if (v2)
  {
    uint64_t result = sub_1436E3C(*(void *)(result + 24));
    if ((v2 & 2) == 0)
    {
LABEL_4:
      if ((v2 & 4) == 0) {
        goto LABEL_5;
      }
LABEL_16:
      uint64_t result = sub_1437354(*(void *)(v1 + 40));
      if ((v2 & 8) == 0)
      {
LABEL_6:
        if ((v2 & 0x10) == 0) {
          goto LABEL_8;
        }
        goto LABEL_7;
      }
      goto LABEL_17;
    }
  }
  else if ((v2 & 2) == 0)
  {
    goto LABEL_4;
  }
  uint64_t result = sub_1436E3C(*(void *)(v1 + 32));
  if ((v2 & 4) != 0) {
    goto LABEL_16;
  }
LABEL_5:
  if ((v2 & 8) == 0) {
    goto LABEL_6;
  }
LABEL_17:
  uint64_t result = sub_1436E3C(*(void *)(v1 + 48));
  if ((v2 & 0x10) != 0) {
LABEL_7:
  }
    uint64_t result = sub_1436E3C(*(void *)(v1 + 56));
LABEL_8:
  if ((v2 & 0xE0) != 0)
  {
    *(_DWORD *)(v1 + 72) = 0;
    *(void *)(v1 + 64) = 0;
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(unsigned char *)(v3 + 68) = 0;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_1415564(uint64_t a1)
{
  uint64_t result = sub_188CC00(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v3 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)unint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t v4 = a1 + 8;
  *(unsigned char *)(v4 + 50) = 0;
  *(_WORD *)(v4 + 48) = 0;
  *(_DWORD *)(v4 + 8) = 0;
  if (v5)
  {
    return sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

uint64_t sub_14155F0(uint64_t a1)
{
  uint64_t result = sub_188CC00(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v3 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)unint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t v4 = a1 + 8;
  *(_DWORD *)(v4 + 8) = 0;
  if (v5)
  {
    return sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

uint64_t sub_1415674(uint64_t a1)
{
  uint64_t result = sub_188CC00(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v3 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)unint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t v4 = a1 + 8;
  *(_DWORD *)(v4 + 8) = 0;
  if (v5)
  {
    return sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

uint64_t sub_14156F8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_141AF90(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_1415788(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_14171AC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1415818(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_147B5A0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_14158A8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_143B4B4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_1415938(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16F0CCC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_14159C8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1423ACC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1415A58(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_178331C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_1415AE8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_142E618(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_1415B78(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_142F450(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

std::string *sub_1415C08(std::string *result, uint64_t a2)
{
  unint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 3) != 0)
  {
    if (v4)
    {
      char v5 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      int v6 = (std::string **)&result[1];
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v8 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v8 = (uint64_t *)*v8;
      }
      uint64_t result = sub_1881DF4(v6, v5, v8);
    }
    if ((v4 & 2) != 0)
    {
      uint64_t v9 = (long long *)(*(void *)(a2 + 32) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
      std::string::size_type v10 = v3->__r_.__value_.__l.__size_;
      uint64_t v11 = (uint64_t *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
      if (v10) {
        uint64_t v11 = (uint64_t *)*v11;
      }
      uint64_t result = sub_1881E1C((std::string **)&v3[1].__r_.__value_.__l.__size_, v9, v11);
    }
  }
  uint64_t v12 = *(void *)(a2 + 8);
  if (v12)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v12 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

std::string *sub_1415CDC(std::string *result, uint64_t a2)
{
  unint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    char v5 = result + 1;
    uint64_t data_low = SLODWORD(result[1].__r_.__value_.__l.__data_);
    sub_188C80C((unsigned int *)&result[1], data_low + v4);
    std::string::size_type size = v3[1].__r_.__value_.__l.__size_;
    LODWORD(v5->__r_.__value_.__l.__data_) += *(_DWORD *)(a2 + 24);
    uint64_t result = (std::string *)memcpy((void *)(size + 4 * data_low), *(const void **)(a2 + 32), 4 * *(int *)(a2 + 24));
  }
  if (*(unsigned char *)(a2 + 16))
  {
    std::string::size_type v8 = *(void *)(a2 + 40);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
    v3[1].__r_.__value_.__r.__words[2] = v8;
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

std::string *sub_1415D9C(std::string *result, uint64_t a2)
{
  unint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    char v5 = (uint64_t *)(*(void *)(a2 + 32) + 8);
    int v6 = (std::string **)sub_188CCE4((uint64_t)&result->__r_.__value_.__r.__words[2], *(_DWORD *)(a2 + 24));
    uint64_t result = (std::string *)sub_1491E28((uint64_t *)&v3->__r_.__value_.__r.__words[2], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__l.__size_ - LODWORD(v3[1].__r_.__value_.__l.__data_));
    int v7 = LODWORD(v3[1].__r_.__value_.__l.__data_) + v4;
    LODWORD(v3[1].__r_.__value_.__l.__data_) = v7;
    std::string::size_type size = (int *)v3[1].__r_.__value_.__l.__size_;
    if (*size < v7) {
      *std::string::size_type size = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 48);
  if (v9)
  {
    std::string::size_type v10 = (uint64_t *)(*(void *)(a2 + 56) + 8);
    uint64_t v11 = (std::string **)sub_188CCE4((uint64_t)&v3[1].__r_.__value_.__r.__words[2], *(_DWORD *)(a2 + 48));
    uint64_t result = (std::string *)sub_1491E28((uint64_t *)&v3[1].__r_.__value_.__r.__words[2], v11, v10, v9, *(_DWORD *)v3[2].__r_.__value_.__l.__size_ - LODWORD(v3[2].__r_.__value_.__l.__data_));
    int v12 = LODWORD(v3[2].__r_.__value_.__l.__data_) + v9;
    LODWORD(v3[2].__r_.__value_.__l.__data_) = v12;
    uint64_t v13 = (int *)v3[2].__r_.__value_.__l.__size_;
    if (*v13 < v12) {
      int *v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 72);
  if (v14)
  {
    char v15 = (uint64_t *)(*(void *)(a2 + 80) + 8);
    unint64_t v16 = (std::string **)sub_188CCE4((uint64_t)&v3[2].__r_.__value_.__r.__words[2], *(_DWORD *)(a2 + 72));
    uint64_t result = (std::string *)sub_1491E28((uint64_t *)&v3[2].__r_.__value_.__r.__words[2], v16, v15, v14, *(_DWORD *)v3[3].__r_.__value_.__l.__size_ - LODWORD(v3[3].__r_.__value_.__l.__data_));
    int v17 = LODWORD(v3[3].__r_.__value_.__l.__data_) + v14;
    LODWORD(v3[3].__r_.__value_.__l.__data_) = v17;
    uint64_t v18 = (int *)v3[3].__r_.__value_.__l.__size_;
    if (*v18 < v17) {
      *uint64_t v18 = v17;
    }
  }
  int v19 = *(_DWORD *)(a2 + 96);
  if (v19)
  {
    int v20 = (uint64_t *)(*(void *)(a2 + 104) + 8);
    int v21 = (std::string **)sub_188CCE4((uint64_t)&v3[3].__r_.__value_.__r.__words[2], *(_DWORD *)(a2 + 96));
    uint64_t result = (std::string *)sub_1491E28((uint64_t *)&v3[3].__r_.__value_.__r.__words[2], v21, v20, v19, *(_DWORD *)v3[4].__r_.__value_.__l.__size_ - LODWORD(v3[4].__r_.__value_.__l.__data_));
    int v22 = LODWORD(v3[4].__r_.__value_.__l.__data_) + v19;
    LODWORD(v3[4].__r_.__value_.__l.__data_) = v22;
    int v23 = (int *)v3[4].__r_.__value_.__l.__size_;
    if (*v23 < v22) {
      *int v23 = v22;
    }
  }
  uint64_t v24 = *(void *)(a2 + 8);
  if (v24)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v24 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

std::string *sub_1415F98(std::string *result, uint64_t a2)
{
  int v2 = *(_DWORD *)(a2 + 16);
  if ((v2 & 7) == 0) {
    goto LABEL_7;
  }
  if ((v2 & 1) == 0)
  {
    if ((v2 & 2) == 0) {
      goto LABEL_4;
    }
LABEL_10:
    result[1].__r_.__value_.__l.__size_ = *(void *)(a2 + 32);
    if ((v2 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  result[1].__r_.__value_.__r.__words[0] = *(void *)(a2 + 24);
  if ((v2 & 2) != 0) {
    goto LABEL_10;
  }
LABEL_4:
  if ((v2 & 4) != 0) {
LABEL_5:
  }
    result[1].__r_.__value_.__r.__words[2] = *(void *)(a2 + 40);
LABEL_6:
  LODWORD(result->__r_.__value_.__r.__words[2]) |= v2;
LABEL_7:
  uint64_t v3 = *(void *)(a2 + 8);
  if (v3) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v3 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

std::string *sub_1415FFC(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((_BYTE)v4)
  {
    if (v4)
    {
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::pointer data = (std::string *)result[1].__r_.__value_.__l.__data_;
      if (!data)
      {
        std::string::size_type size = v3->__r_.__value_.__l.__size_;
        int v9 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
        if (size) {
          int v9 = (void *)*v9;
        }
        std::string::pointer data = (std::string *)sub_144C124((uint64_t)v9);
        v3[1].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      }
      if (*(void *)(a2 + 24)) {
        std::string::size_type v10 = *(void *(****)(void *))(a2 + 24);
      }
      else {
        std::string::size_type v10 = &off_2538828;
      }
      uint64_t result = sub_123BFCC(data, (uint64_t)v10);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_34;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    uint64_t v11 = (std::string *)v3[1].__r_.__value_.__l.__size_;
    if (!v11)
    {
      std::string::size_type v12 = v3->__r_.__value_.__l.__size_;
      uint64_t v13 = (void *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
      if (v12) {
        uint64_t v13 = (void *)*v13;
      }
      uint64_t v11 = (std::string *)sub_144C124((uint64_t)v13);
      v3[1].__r_.__value_.__l.__size_ = (std::string::size_type)v11;
    }
    if (*(void *)(a2 + 32)) {
      int v14 = *(void *(****)(void *))(a2 + 32);
    }
    else {
      int v14 = &off_2538828;
    }
    uint64_t result = sub_123BFCC(v11, (uint64_t)v14);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_42;
    }
LABEL_34:
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
    char v15 = (std::string *)v3[1].__r_.__value_.__r.__words[2];
    if (!v15)
    {
      std::string::size_type v16 = v3->__r_.__value_.__l.__size_;
      int v17 = (void *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
      if (v16) {
        int v17 = (void *)*v17;
      }
      char v15 = (std::string *)sub_144C1A0((uint64_t)v17);
      v3[1].__r_.__value_.__r.__words[2] = (std::string::size_type)v15;
    }
    if (*(void *)(a2 + 40)) {
      uint64_t v18 = *(uint64_t (****)())(a2 + 40);
    }
    else {
      uint64_t v18 = &off_2538850;
    }
    uint64_t result = sub_14377E8(v15, (uint64_t)v18);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0) {
        goto LABEL_7;
      }
      goto LABEL_50;
    }
LABEL_42:
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 8u;
    int v19 = (std::string *)v3[2].__r_.__value_.__l.__data_;
    if (!v19)
    {
      std::string::size_type v20 = v3->__r_.__value_.__l.__size_;
      int v21 = (void *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
      if (v20) {
        int v21 = (void *)*v21;
      }
      int v19 = (std::string *)sub_144C124((uint64_t)v21);
      v3[2].__r_.__value_.__r.__words[0] = (std::string::size_type)v19;
    }
    if (*(void *)(a2 + 48)) {
      int v22 = *(void *(****)(void *))(a2 + 48);
    }
    else {
      int v22 = &off_2538828;
    }
    uint64_t result = sub_123BFCC(v19, (uint64_t)v22);
    if ((v4 & 0x10) == 0)
    {
LABEL_7:
      if ((v4 & 0x20) == 0) {
        goto LABEL_8;
      }
      goto LABEL_58;
    }
LABEL_50:
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x10u;
    int v23 = (std::string *)v3[2].__r_.__value_.__l.__size_;
    if (!v23)
    {
      std::string::size_type v24 = v3->__r_.__value_.__l.__size_;
      uint64_t v25 = (void *)(v24 & 0xFFFFFFFFFFFFFFFCLL);
      if (v24) {
        uint64_t v25 = (void *)*v25;
      }
      int v23 = (std::string *)sub_144C124((uint64_t)v25);
      v3[2].__r_.__value_.__l.__size_ = (std::string::size_type)v23;
    }
    if (*(void *)(a2 + 56)) {
      unint64_t v26 = *(void *(****)(void *))(a2 + 56);
    }
    else {
      unint64_t v26 = &off_2538828;
    }
    uint64_t result = sub_123BFCC(v23, (uint64_t)v26);
    if ((v4 & 0x20) == 0)
    {
LABEL_8:
      if ((v4 & 0x40) == 0) {
        goto LABEL_9;
      }
      goto LABEL_59;
    }
LABEL_58:
    LODWORD(v3[2].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 64);
    if ((v4 & 0x40) == 0)
    {
LABEL_9:
      if ((v4 & 0x80) == 0)
      {
LABEL_11:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
        goto LABEL_12;
      }
LABEL_10:
      LODWORD(v3[3].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 72);
      goto LABEL_11;
    }
LABEL_59:
    HIDWORD(v3[2].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 68);
    if ((v4 & 0x80) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
LABEL_12:
  if ((v4 & 0x100) != 0)
  {
    std::string::value_type v5 = *(unsigned char *)(a2 + 76);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x100u;
    v3[3].__r_.__value_.__s.__data_[4] = v5;
  }
  uint64_t v6 = *(void *)(a2 + 8);
  if (v6)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

std::string *sub_1416234(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    std::string::value_type v5 = (const std::string **)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = (std::string *)sub_188FB98((uint64_t)&v3[1], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2]- LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    std::string::size_type v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *std::string::size_type v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 0xF) != 0)
  {
    if (v9)
    {
      uint64_t v11 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v13 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v13 = (uint64_t *)*v13;
      }
      uint64_t result = sub_1881DF4((std::string **)&v3[2], v11, v13);
      if ((v9 & 2) == 0)
      {
LABEL_7:
        if ((v9 & 4) == 0) {
          goto LABEL_8;
        }
        goto LABEL_19;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_7;
    }
    v3[2].__r_.__value_.__s.__data_[8] = *(unsigned char *)(a2 + 56);
    if ((v9 & 4) == 0)
    {
LABEL_8:
      if ((v9 & 8) == 0)
      {
LABEL_10:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v9;
        goto LABEL_11;
      }
LABEL_9:
      v3[2].__r_.__value_.__s.__data_[10] = *(unsigned char *)(a2 + 58);
      goto LABEL_10;
    }
LABEL_19:
    v3[2].__r_.__value_.__s.__data_[9] = *(unsigned char *)(a2 + 57);
    if ((v9 & 8) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
LABEL_11:
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1416384(uint64_t a1)
{
  return *(_DWORD *)(a1 + 16) & 1;
}

uint64_t sub_1416390(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_17;
    }
  }
  else if (v4)
  {
    goto LABEL_17;
  }
  std::string::value_type v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(uint64_t **)(a1 + 40) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 40));
  }
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 48));
  }
  if (*(uint64_t **)(a1 + 56) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 56));
  }
  if (*(uint64_t **)(a1 + 64) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 64));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_17:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1416498(uint64_t a1)
{
  sub_1416390(a1);

  operator delete();
}

uint64_t sub_14164D0(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 0x3F) == 0) {
    goto LABEL_32;
  }
  if ((v1 & 1) == 0)
  {
    if ((v1 & 2) == 0) {
      goto LABEL_4;
    }
LABEL_13:
    unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)unint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
      if ((v1 & 4) != 0) {
        goto LABEL_17;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
      if ((v1 & 4) != 0) {
        goto LABEL_17;
      }
    }
LABEL_5:
    if ((v1 & 8) == 0) {
      goto LABEL_6;
    }
LABEL_21:
    unint64_t v5 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v5 + 23) < 0)
    {
      **(unsigned char **)unint64_t v5 = 0;
      *(void *)(v5 + 8) = 0;
      if ((v1 & 0x10) != 0) {
        goto LABEL_25;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v5 = 0;
      *(unsigned char *)(v5 + 23) = 0;
      if ((v1 & 0x10) != 0) {
        goto LABEL_25;
      }
    }
LABEL_7:
    if ((v1 & 0x20) == 0) {
      goto LABEL_32;
    }
LABEL_29:
    unint64_t v7 = *(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v7 + 23) < 0)
    {
      **(unsigned char **)unint64_t v7 = 0;
      *(void *)(v7 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v7 = 0;
      *(unsigned char *)(v7 + 23) = 0;
    }
    goto LABEL_32;
  }
  unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v2 + 23) < 0)
  {
    **(unsigned char **)unint64_t v2 = 0;
    *(void *)(v2 + 8) = 0;
    if ((v1 & 2) != 0) {
      goto LABEL_13;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v2 = 0;
    *(unsigned char *)(v2 + 23) = 0;
    if ((v1 & 2) != 0) {
      goto LABEL_13;
    }
  }
LABEL_4:
  if ((v1 & 4) == 0) {
    goto LABEL_5;
  }
LABEL_17:
  unint64_t v4 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v4 + 23) < 0)
  {
    **(unsigned char **)unint64_t v4 = 0;
    *(void *)(v4 + 8) = 0;
    if ((v1 & 8) != 0) {
      goto LABEL_21;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v4 = 0;
    *(unsigned char *)(v4 + 23) = 0;
    if ((v1 & 8) != 0) {
      goto LABEL_21;
    }
  }
LABEL_6:
  if ((v1 & 0x10) == 0) {
    goto LABEL_7;
  }
LABEL_25:
  unint64_t v6 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v6 + 23) < 0)
  {
    **(unsigned char **)unint64_t v6 = 0;
    *(void *)(v6 + 8) = 0;
    if ((v1 & 0x20) == 0) {
      goto LABEL_32;
    }
    goto LABEL_29;
  }
  *(unsigned char *)unint64_t v6 = 0;
  *(unsigned char *)(v6 + 23) = 0;
  if ((v1 & 0x20) != 0) {
    goto LABEL_29;
  }
LABEL_32:
  char v9 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(unsigned char *)(result + 64) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v9) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_1416628(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v29 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v29, a3[11].i32[1])) {
    goto LABEL_2;
  }
  std::string::size_type v28 = (uint64_t *)(a1 + 8);
  while (2)
  {
    unint64_t v7 = (char *)(*(void *)v29 + 1);
    unsigned int v8 = **(unsigned char **)v29;
    if ((char)**(unsigned char **)v29 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        unint64_t v7 = (char *)sub_188C180(*(uint64_t *)v29, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        unint64_t v7 = (char *)(*(void *)v29 + 2);
      }
    }
    *(void *)uint64_t v29 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 10) {
          goto LABEL_42;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v11 = *(void *)(a1 + 8);
        std::string::size_type v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
        if (v11) {
          std::string::size_type v12 = (uint64_t *)*v12;
        }
        uint64_t v13 = (void *)(a1 + 24);
        goto LABEL_33;
      case 2u:
        if (v8 != 18) {
          goto LABEL_42;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v14 = *(void *)(a1 + 8);
        std::string::size_type v12 = (uint64_t *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
        if (v14) {
          std::string::size_type v12 = (uint64_t *)*v12;
        }
        uint64_t v13 = (void *)(a1 + 32);
        goto LABEL_33;
      case 3u:
        if (v8 != 26) {
          goto LABEL_42;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v15 = *(void *)(a1 + 8);
        std::string::size_type v12 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          std::string::size_type v12 = (uint64_t *)*v12;
        }
        uint64_t v13 = (void *)(a1 + 40);
        goto LABEL_33;
      case 4u:
        if (v8 != 34) {
          goto LABEL_42;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v16 = *(void *)(a1 + 8);
        std::string::size_type v12 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
        if (v16) {
          std::string::size_type v12 = (uint64_t *)*v12;
        }
        uint64_t v13 = (void *)(a1 + 48);
        goto LABEL_33;
      case 5u:
        if (v8 != 42) {
          goto LABEL_42;
        }
        *(_DWORD *)(a1 + 16) |= 0x10u;
        uint64_t v17 = *(void *)(a1 + 8);
        std::string::size_type v12 = (uint64_t *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
        if (v17) {
          std::string::size_type v12 = (uint64_t *)*v12;
        }
        uint64_t v13 = (void *)(a1 + 56);
        goto LABEL_33;
      case 6u:
        if (v8 != 50) {
          goto LABEL_42;
        }
        *(_DWORD *)(a1 + 16) |= 0x20u;
        uint64_t v18 = *(void *)(a1 + 8);
        std::string::size_type v12 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
        if (v18) {
          std::string::size_type v12 = (uint64_t *)*v12;
        }
        uint64_t v13 = (void *)(a1 + 64);
LABEL_33:
        int v19 = (std::string *)sub_1880F84(v13, v12);
        std::string::size_type v20 = (void *)sub_188C244(v19, *(char **)v29, (uint64_t)a3);
        goto LABEL_34;
      case 7u:
        if (v8 != 56) {
          goto LABEL_42;
        }
        v5 |= 0x40u;
        int v21 = v7 + 1;
        uint64_t v22 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_41;
        }
        int v23 = *v21;
        uint64_t v22 = v22 + (v23 << 7) - 128;
        if (v23 < 0)
        {
          uint64_t v26 = sub_188C138((uint64_t)v7, v22);
          *(void *)uint64_t v29 = v26;
          *(unsigned char *)(a1 + 72) = v27 != 0;
          if (!v26) {
            goto LABEL_54;
          }
        }
        else
        {
          int v21 = v7 + 2;
LABEL_41:
          *(void *)uint64_t v29 = v21;
          *(unsigned char *)(a1 + 72) = v22 != 0;
        }
        goto LABEL_35;
      default:
LABEL_42:
        if (v8) {
          BOOL v24 = (v8 & 7) == 4;
        }
        else {
          BOOL v24 = 1;
        }
        if (!v24)
        {
          if (*v28)
          {
            uint64_t v25 = (std::string *)((*v28 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v25 = (std::string *)sub_188DBD8(v28);
            unint64_t v7 = *(char **)v29;
          }
          std::string::size_type v20 = sub_1885AC0(v8, v25, v7, a3);
LABEL_34:
          *(void *)uint64_t v29 = v20;
          if (!v20) {
            goto LABEL_54;
          }
LABEL_35:
          if (sub_11947B8((uint64_t)a3, (char **)v29, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v7) {
          a3[10].i32[0] = v8 - 1;
        }
        else {
LABEL_54:
        }
          *(void *)uint64_t v29 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v29;
    }
  }
}

unsigned char *sub_1416980(uint64_t a1, unsigned char *__dst, void *a3)
{
  unint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    unint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  unint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_12;
  }
LABEL_11:
  unint64_t v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_13;
  }
LABEL_12:
  unint64_t v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_14;
  }
LABEL_13:
  unint64_t v4 = sub_117A0AC(a3, 5, (const void **)(*(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_18;
    }
    goto LABEL_15;
  }
LABEL_14:
  unint64_t v4 = sub_117A0AC(a3, 6, (const void **)(*(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x40) == 0) {
    goto LABEL_18;
  }
LABEL_15:
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v7 = *(unsigned char *)(a1 + 72);
  unsigned char *v4 = 56;
  v4[1] = v7;
  v4 += 2;
LABEL_18:
  uint64_t v8 = *(void *)(a1 + 8);
  if ((v8 & 1) == 0) {
    return v4;
  }
  unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v10 + 31) < 0)
  {
    uint64_t v11 = *(void **)(v10 + 8);
    uint64_t v12 = *(void *)(v10 + 16);
  }
  else
  {
    uint64_t v11 = (void *)(v10 + 8);
    LODWORD(v12) = *(unsigned __int8 *)(v10 + 31);
  }
  if (*a3 - (void)v4 >= (int)v12)
  {
    uint64_t v13 = (int)v12;
    memcpy(v4, v11, (int)v12);
    v4 += v13;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v11, v12, v4);
}

uint64_t sub_1416B40(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 0x7F) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_22;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
  uint64_t v6 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    uint64_t v6 = v5;
  }
  uint64_t v2 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    unint64_t v7 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v8 = *(unsigned __int8 *)(v7 + 23);
    uint64_t v9 = *(void *)(v7 + 8);
    if ((v8 & 0x80u) == 0) {
      uint64_t v9 = v8;
    }
    v2 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v1 & 4) != 0)
  {
    unint64_t v15 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v16 = *(unsigned __int8 *)(v15 + 23);
    uint64_t v17 = *(void *)(v15 + 8);
    if ((v16 & 0x80u) == 0) {
      uint64_t v17 = v16;
    }
    v2 += v17 + ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 8) == 0)
    {
LABEL_14:
      if ((v1 & 0x10) == 0) {
        goto LABEL_15;
      }
LABEL_30:
      unint64_t v21 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v22 = *(unsigned __int8 *)(v21 + 23);
      uint64_t v23 = *(void *)(v21 + 8);
      if ((v22 & 0x80u) == 0) {
        uint64_t v23 = v22;
      }
      v2 += v23 + ((9 * (__clz(v23 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v1 & 0x20) == 0) {
        goto LABEL_19;
      }
      goto LABEL_16;
    }
  }
  else if ((v1 & 8) == 0)
  {
    goto LABEL_14;
  }
  unint64_t v18 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v19 = *(unsigned __int8 *)(v18 + 23);
  uint64_t v20 = *(void *)(v18 + 8);
  if ((v19 & 0x80u) == 0) {
    uint64_t v20 = v19;
  }
  v2 += v20 + ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 0x10) != 0) {
    goto LABEL_30;
  }
LABEL_15:
  if ((v1 & 0x20) != 0)
  {
LABEL_16:
    unint64_t v10 = *(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v11 = *(unsigned __int8 *)(v10 + 23);
    uint64_t v12 = *(void *)(v10 + 8);
    if ((v11 & 0x80u) == 0) {
      uint64_t v12 = v11;
    }
    v2 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_19:
  if ((v1 & 0x40) != 0) {
    uint64_t v3 = v2 + 2;
  }
  else {
    uint64_t v3 = v2;
  }
LABEL_22:
  uint64_t v13 = *(void *)(a1 + 8);
  if (v13)
  {
    unint64_t v24 = v13 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v24 + 31) < 0) {
      uint64_t v25 = *(void *)(v24 + 16);
    }
    else {
      uint64_t v25 = *(unsigned __int8 *)(v24 + 31);
    }
    v3 += v25;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_1416D48(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0x7F) != 0)
  {
    if (v4)
    {
      uint64_t v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      unint64_t v7 = (std::string **)&result[1];
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v9 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v9 = (uint64_t *)*v9;
      }
      uint64_t result = sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_21;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    unint64_t v10 = (long long *)(*(void *)(a2 + 32) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    std::string::size_type v11 = v3->__r_.__value_.__l.__size_;
    uint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
    if (v11) {
      uint64_t v12 = (uint64_t *)*v12;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[1].__r_.__value_.__l.__size_, v10, v12);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_24;
    }
LABEL_21:
    uint64_t v13 = (long long *)(*(void *)(a2 + 40) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
    std::string::size_type v14 = v3->__r_.__value_.__l.__size_;
    unint64_t v15 = (uint64_t *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
    if (v14) {
      unint64_t v15 = (uint64_t *)*v15;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[1].__r_.__value_.__r.__words[2], v13, v15);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0) {
        goto LABEL_7;
      }
      goto LABEL_27;
    }
LABEL_24:
    uint64_t v16 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 8u;
    std::string::size_type v17 = v3->__r_.__value_.__l.__size_;
    unint64_t v18 = (uint64_t *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
    if (v17) {
      unint64_t v18 = (uint64_t *)*v18;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[2], v16, v18);
    if ((v4 & 0x10) == 0)
    {
LABEL_7:
      if ((v4 & 0x20) == 0) {
        goto LABEL_8;
      }
      goto LABEL_30;
    }
LABEL_27:
    uint64_t v19 = (long long *)(*(void *)(a2 + 56) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x10u;
    std::string::size_type v20 = v3->__r_.__value_.__l.__size_;
    unint64_t v21 = (uint64_t *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
    if (v20) {
      unint64_t v21 = (uint64_t *)*v21;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[2].__r_.__value_.__l.__size_, v19, v21);
    if ((v4 & 0x20) == 0)
    {
LABEL_8:
      if ((v4 & 0x40) == 0)
      {
LABEL_10:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
        goto LABEL_11;
      }
LABEL_9:
      v3[3].__r_.__value_.__s.__data_[0] = *(unsigned char *)(a2 + 72);
      goto LABEL_10;
    }
LABEL_30:
    uint64_t v22 = (long long *)(*(void *)(a2 + 64) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x20u;
    std::string::size_type v23 = v3->__r_.__value_.__l.__size_;
    unint64_t v24 = (uint64_t *)(v23 & 0xFFFFFFFFFFFFFFFCLL);
    if (v23) {
      unint64_t v24 = (uint64_t *)*v24;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[2].__r_.__value_.__r.__words[2], v22, v24);
    if ((v4 & 0x40) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
LABEL_11:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1416F20()
{
  return 1;
}

void *sub_1416F28@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gemini.Image.ImageMetadata");
}

uint64_t sub_1416F38(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_12;
    }
  }
  else if (v4)
  {
    goto LABEL_12;
  }
  uint64_t v5 = (void ***)(a1 + 72);
  if (*(uint64_t **)(a1 + 72) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 80) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 80));
  }
  if ((uint64_t (***)())a1 != &off_2537CC0)
  {
    uint64_t v6 = *(void *)(a1 + 88);
    if (v6)
    {
      sub_1416390(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_12:
  sub_12C1DB8((void *)(a1 + 48));
  sub_12C1DB8((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1417038(uint64_t a1)
{
  sub_1416F38(a1);

  operator delete();
}

uint64_t sub_1417070(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_15B2C80(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  uint64_t v5 = *(unsigned int *)(v1 + 56);
  if ((int)v5 >= 1)
  {
    uint64_t v6 = (uint64_t *)(*(void *)(v1 + 64) + 8);
    do
    {
      uint64_t v7 = *v6++;
      uint64_t result = sub_15B2C80(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(v1 + 56) = 0;
  }
  int v8 = *(_DWORD *)(v1 + 16);
  if ((v8 & 7) == 0) {
    goto LABEL_14;
  }
  if ((v8 & 1) == 0)
  {
    if ((v8 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_24;
  }
  unint64_t v11 = *(void *)(v1 + 72) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v11 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v11 = 0;
    *(unsigned char *)(v11 + 23) = 0;
    if ((v8 & 2) != 0) {
      goto LABEL_24;
    }
LABEL_12:
    if ((v8 & 4) == 0) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  **(unsigned char **)unint64_t v11 = 0;
  *(void *)(v11 + 8) = 0;
  if ((v8 & 2) == 0) {
    goto LABEL_12;
  }
LABEL_24:
  unint64_t v12 = *(void *)(v1 + 80) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v12 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v12 = 0;
    *(unsigned char *)(v12 + 23) = 0;
    if ((v8 & 4) == 0) {
      goto LABEL_14;
    }
LABEL_13:
    uint64_t result = sub_14164D0(*(void *)(v1 + 88));
    goto LABEL_14;
  }
  **(unsigned char **)unint64_t v12 = 0;
  *(void *)(v12 + 8) = 0;
  if ((v8 & 4) != 0) {
    goto LABEL_13;
  }
LABEL_14:
  if ((v8 & 0x78) != 0)
  {
    *(void *)(v1 + 101) = 0;
    *(void *)(v1 + 96) = 0;
  }
  char v10 = *(unsigned char *)(v1 + 8);
  uint64_t v9 = v1 + 8;
  *(_DWORD *)(v9 + 8) = 0;
  if (v10)
  {
    return sub_188B4AC((uint64_t *)v9);
  }
  return result;
}

uint64_t sub_14171AC(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v55 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v55, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    int v8 = (unsigned __int8 *)(*(void *)v55 + 1);
    unsigned int v9 = **(unsigned char **)v55;
    if ((char)**(unsigned char **)v55 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        int v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v55, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        int v8 = (unsigned __int8 *)(*(void *)v55 + 2);
      }
    }
    *(void *)uint64_t v55 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_66;
        }
        unint64_t v12 = (char *)(v8 + 1);
        unint64_t v13 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        int v15 = v13 + (v14 << 7);
        unint64_t v13 = (v15 - 128);
        if (v14 < 0)
        {
          *(void *)uint64_t v55 = sub_188C138((uint64_t)v8, (v15 - 128));
          if (!*(void *)v55) {
            goto LABEL_91;
          }
          unint64_t v13 = v47;
        }
        else
        {
          unint64_t v12 = (char *)(v8 + 2);
LABEL_13:
          *(void *)uint64_t v55 = v12;
        }
        if (v13 > 4)
        {
          if (*v7) {
            int v54 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            int v54 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(1, v13, v54);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 8u;
          *(_DWORD *)(a1 + 96) = v13;
        }
        goto LABEL_74;
      case 2u:
        if (v9 != 18) {
          goto LABEL_66;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v16 = *(void *)(a1 + 8);
        std::string::size_type v17 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
        if (v16) {
          std::string::size_type v17 = (uint64_t *)*v17;
        }
        unint64_t v18 = (void *)(a1 + 72);
        goto LABEL_30;
      case 3u:
        if (v9 != 26) {
          goto LABEL_66;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v19 = *(void *)(a1 + 88);
        if (!v19)
        {
          std::string::size_type v20 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            std::string::size_type v20 = (void *)*v20;
          }
          uint64_t v19 = sub_144A660((uint64_t)v20);
          *(void *)(a1 + 88) = v19;
          int v8 = *(unsigned __int8 **)v55;
        }
        uint64_t v21 = sub_14176F0(a3, v19, v8);
        goto LABEL_73;
      case 4u:
        if (v9 != 34) {
          goto LABEL_66;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v22 = *(void *)(a1 + 8);
        std::string::size_type v17 = (uint64_t *)(v22 & 0xFFFFFFFFFFFFFFFCLL);
        if (v22) {
          std::string::size_type v17 = (uint64_t *)*v17;
        }
        unint64_t v18 = (void *)(a1 + 80);
LABEL_30:
        std::string::size_type v23 = (std::string *)sub_1880F84(v18, v17);
        uint64_t v21 = (uint64_t)sub_188C244(v23, *(char **)v55, (uint64_t)a3);
        goto LABEL_73;
      case 5u:
        if (v9 != 40) {
          goto LABEL_66;
        }
        v5 |= 0x10u;
        unint64_t v24 = (char *)(v8 + 1);
        int v25 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_35;
        }
        int v26 = *v24;
        int v25 = v25 + (v26 << 7) - 128;
        if (v26 < 0)
        {
          uint64_t v48 = sub_188C0D0((uint64_t)v8, v25);
          *(void *)uint64_t v55 = v48;
          *(_DWORD *)(a1 + 100) = v49;
          if (!v48) {
            goto LABEL_91;
          }
        }
        else
        {
          unint64_t v24 = (char *)(v8 + 2);
LABEL_35:
          *(void *)uint64_t v55 = v24;
          *(_DWORD *)(a1 + 100) = v25;
        }
        goto LABEL_74;
      case 6u:
        if (v9 != 48) {
          goto LABEL_66;
        }
        v5 |= 0x20u;
        uint64_t v27 = (char *)(v8 + 1);
        int v28 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_40;
        }
        int v29 = *v27;
        int v28 = v28 + (v29 << 7) - 128;
        if (v29 < 0)
        {
          uint64_t v50 = sub_188C0D0((uint64_t)v8, v28);
          *(void *)uint64_t v55 = v50;
          *(_DWORD *)(a1 + 104) = v51;
          if (!v50) {
            goto LABEL_91;
          }
        }
        else
        {
          uint64_t v27 = (char *)(v8 + 2);
LABEL_40:
          *(void *)uint64_t v55 = v27;
          *(_DWORD *)(a1 + 104) = v28;
        }
        goto LABEL_74;
      case 7u:
        if (v9 != 58) {
          goto LABEL_66;
        }
        uint64_t v30 = v8 - 1;
        while (1)
        {
          unint64_t v31 = v30 + 1;
          *(void *)uint64_t v55 = v30 + 1;
          std::string::size_type v32 = *(_DWORD **)(a1 + 40);
          if (v32 && (uint64_t v33 = *(int *)(a1 + 32), (int)v33 < *v32))
          {
            *(_DWORD *)(a1 + 32) = v33 + 1;
            uint64_t v34 = *(void *)&v32[2 * v33 + 2];
          }
          else
          {
            int v35 = sub_15C1B30(*(void *)(a1 + 24));
            uint64_t v34 = sub_188CDC8(a1 + 24, (uint64_t)v35);
            unint64_t v31 = *(unsigned __int8 **)v55;
          }
          uint64_t v30 = (unsigned __int8 *)sub_125CF74(a3, v34, v31);
          *(void *)uint64_t v55 = v30;
          if (!v30) {
            goto LABEL_91;
          }
          if (*(void *)a3 <= (unint64_t)v30 || *v30 != 58) {
            goto LABEL_74;
          }
        }
      case 8u:
        if (v9 != 66) {
          goto LABEL_66;
        }
        uint64_t v36 = v8 - 1;
        while (1)
        {
          uint64_t v37 = v36 + 1;
          *(void *)uint64_t v55 = v36 + 1;
          uint64_t v38 = *(_DWORD **)(a1 + 64);
          if (v38 && (uint64_t v39 = *(int *)(a1 + 56), (int)v39 < *v38))
          {
            *(_DWORD *)(a1 + 56) = v39 + 1;
            uint64_t v40 = *(void *)&v38[2 * v39 + 2];
          }
          else
          {
            int v41 = sub_15C1B30(*(void *)(a1 + 48));
            uint64_t v40 = sub_188CDC8(a1 + 48, (uint64_t)v41);
            uint64_t v37 = *(unsigned __int8 **)v55;
          }
          uint64_t v36 = (unsigned __int8 *)sub_125CF74(a3, v40, v37);
          *(void *)uint64_t v55 = v36;
          if (!v36) {
            goto LABEL_91;
          }
          if (*(void *)a3 <= (unint64_t)v36 || *v36 != 66) {
            goto LABEL_74;
          }
        }
      case 0xAu:
        if (v9 != 80) {
          goto LABEL_66;
        }
        v5 |= 0x40u;
        uint64_t v42 = (char *)(v8 + 1);
        uint64_t v43 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_65;
        }
        int v44 = *v42;
        uint64_t v43 = v43 + (v44 << 7) - 128;
        if (v44 < 0)
        {
          uint64_t v52 = sub_188C138((uint64_t)v8, v43);
          *(void *)uint64_t v55 = v52;
          *(unsigned char *)(a1 + 108) = v53 != 0;
          if (!v52) {
            goto LABEL_91;
          }
        }
        else
        {
          uint64_t v42 = (char *)(v8 + 2);
LABEL_65:
          *(void *)uint64_t v55 = v42;
          *(unsigned char *)(a1 + 108) = v43 != 0;
        }
        goto LABEL_74;
      default:
LABEL_66:
        if (v9) {
          BOOL v45 = (v9 & 7) == 4;
        }
        else {
          BOOL v45 = 1;
        }
        if (!v45)
        {
          if (*v7)
          {
            uint64_t v46 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v46 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            int v8 = *(unsigned __int8 **)v55;
          }
          uint64_t v21 = (uint64_t)sub_1885AC0(v9, v46, (char *)v8, a3);
LABEL_73:
          *(void *)uint64_t v55 = v21;
          if (!v21) {
            goto LABEL_91;
          }
LABEL_74:
          if (sub_11947B8((uint64_t)a3, (char **)v55, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_91:
        }
          *(void *)uint64_t v55 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v55;
    }
  }
}

uint64_t sub_14176F0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1416628(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_1417780(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 8) != 0)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 96);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    uint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL), v4);
    if ((v6 & 4) == 0)
    {
LABEL_10:
      if ((v6 & 2) == 0) {
        goto LABEL_11;
      }
      goto LABEL_20;
    }
  }
  else if ((v6 & 4) == 0)
  {
    goto LABEL_10;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v10 = *(void *)(a1 + 88);
  unsigned char *v4 = 26;
  unsigned int v11 = *(_DWORD *)(v10 + 20);
  v4[1] = v11;
  if (v11 > 0x7F) {
    unint64_t v12 = sub_188A9CC(v11, v4 + 1);
  }
  else {
    unint64_t v12 = v4 + 2;
  }
  uint64_t v4 = sub_1416980(v10, v12, a3);
  if ((v6 & 2) == 0)
  {
LABEL_11:
    if ((v6 & 0x10) == 0) {
      goto LABEL_27;
    }
    goto LABEL_21;
  }
LABEL_20:
  uint64_t v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x10) == 0) {
    goto LABEL_27;
  }
LABEL_21:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  unsigned int v13 = *(_DWORD *)(a1 + 100);
  unsigned char *v4 = 40;
  v4[1] = v13;
  if (v13 > 0x7F)
  {
    v4[1] = v13 | 0x80;
    unsigned int v14 = v13 >> 7;
    v4[2] = v13 >> 7;
    v4 += 3;
    if (v13 >= 0x4000)
    {
      do
      {
        *(v4 - 1) |= 0x80u;
        unsigned int v15 = v14 >> 14;
        v14 >>= 7;
        *v4++ = v14;
      }
      while (v15);
    }
  }
  else
  {
    v4 += 2;
  }
LABEL_27:
  if ((v6 & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v16 = *(_DWORD *)(a1 + 104);
    unsigned char *v4 = 48;
    v4[1] = v16;
    if (v16 > 0x7F)
    {
      v4[1] = v16 | 0x80;
      unsigned int v17 = v16 >> 7;
      v4[2] = v16 >> 7;
      v4 += 3;
      if (v16 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v18 = v17 >> 14;
          v17 >>= 7;
          *v4++ = v17;
        }
        while (v18);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v19 = *(_DWORD *)(a1 + 32);
  if (v19)
  {
    for (int i = 0; i != v19; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v21 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      unsigned char *v4 = 58;
      unsigned int v22 = *(_DWORD *)(v21 + 20);
      v4[1] = v22;
      if (v22 > 0x7F) {
        std::string::size_type v23 = sub_188A9CC(v22, v4 + 1);
      }
      else {
        std::string::size_type v23 = v4 + 2;
      }
      uint64_t v4 = sub_15B2EA4(v21, v23, a3);
    }
  }
  int v24 = *(_DWORD *)(a1 + 56);
  if (v24)
  {
    for (int j = 0; j != v24; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v26 = *(void *)(*(void *)(a1 + 64) + 8 * j + 8);
      unsigned char *v4 = 66;
      unsigned int v27 = *(_DWORD *)(v26 + 20);
      v4[1] = v27;
      if (v27 > 0x7F) {
        int v28 = sub_188A9CC(v27, v4 + 1);
      }
      else {
        int v28 = v4 + 2;
      }
      uint64_t v4 = sub_15B2EA4(v26, v28, a3);
    }
  }
  if ((v6 & 0x40) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v29 = *(unsigned char *)(a1 + 108);
    unsigned char *v4 = 80;
    v4[1] = v29;
    v4 += 2;
  }
  uint64_t v30 = *(void *)(a1 + 8);
  if ((v30 & 1) == 0) {
    return v4;
  }
  unint64_t v32 = v30 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v32 + 31) < 0)
  {
    uint64_t v33 = *(void **)(v32 + 8);
    uint64_t v34 = *(void *)(v32 + 16);
  }
  else
  {
    uint64_t v33 = (void *)(v32 + 8);
    LODWORD(v34) = *(unsigned __int8 *)(v32 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v34)
  {
    uint64_t v35 = (int)v34;
    memcpy(v4, v33, (int)v34);
    v4 += v35;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v33, v34, v4);
}

uint64_t sub_1417BAC(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_15B2F90(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(int *)(a1 + 56);
  uint64_t v9 = v2 + v8;
  uint64_t v10 = *(void *)(a1 + 64);
  if (v10) {
    unsigned int v11 = (uint64_t *)(v10 + 8);
  }
  else {
    unsigned int v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_15B2F90(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  int v15 = *(_DWORD *)(a1 + 16);
  if ((v15 & 0x7F) != 0)
  {
    if (v15)
    {
      unint64_t v18 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v19 = *(unsigned __int8 *)(v18 + 23);
      uint64_t v20 = *(void *)(v18 + 8);
      if ((v19 & 0x80u) == 0) {
        uint64_t v20 = v19;
      }
      v9 += v20 + ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v15 & 2) == 0)
      {
LABEL_18:
        if ((v15 & 4) == 0) {
          goto LABEL_19;
        }
        goto LABEL_33;
      }
    }
    else if ((v15 & 2) == 0)
    {
      goto LABEL_18;
    }
    unint64_t v21 = *(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v22 = *(unsigned __int8 *)(v21 + 23);
    uint64_t v23 = *(void *)(v21 + 8);
    if ((v22 & 0x80u) == 0) {
      uint64_t v23 = v22;
    }
    v9 += v23 + ((9 * (__clz(v23 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v15 & 4) == 0)
    {
LABEL_19:
      if ((v15 & 8) == 0) {
        goto LABEL_20;
      }
      goto LABEL_34;
    }
LABEL_33:
    uint64_t v24 = sub_1416B40(*(void *)(a1 + 88));
    v9 += v24 + ((9 * (__clz(v24 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v15 & 8) == 0)
    {
LABEL_20:
      if ((v15 & 0x10) == 0) {
        goto LABEL_21;
      }
      goto LABEL_38;
    }
LABEL_34:
    int v25 = *(_DWORD *)(a1 + 96);
    uint64_t v26 = ((9 * (__clz(v25 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if (v25 >= 0) {
      uint64_t v27 = v26;
    }
    else {
      uint64_t v27 = 11;
    }
    v9 += v27;
    if ((v15 & 0x10) == 0)
    {
LABEL_21:
      if ((v15 & 0x20) == 0) {
        goto LABEL_23;
      }
      goto LABEL_22;
    }
LABEL_38:
    v9 += ((9 * (__clz(*(_DWORD *)(a1 + 100) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v15 & 0x20) == 0)
    {
LABEL_23:
      if ((v15 & 0x40) != 0) {
        v9 += 2;
      }
      goto LABEL_25;
    }
LABEL_22:
    v9 += ((9 * (__clz(*(_DWORD *)(a1 + 104) | 1) ^ 0x1F) + 73) >> 6) + 1;
    goto LABEL_23;
  }
LABEL_25:
  uint64_t v16 = *(void *)(a1 + 8);
  if (v16)
  {
    unint64_t v28 = v16 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v28 + 31) < 0) {
      uint64_t v29 = *(void *)(v28 + 16);
    }
    else {
      uint64_t v29 = *(unsigned __int8 *)(v28 + 31);
    }
    v9 += v29;
  }
  *(_DWORD *)(a1 + 20) = v9;
  return v9;
}

std::string *sub_1417E18(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = sub_12C1E38(v3 + 1, v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2] - LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    uint64_t v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    unsigned int v11 = (std::string **)sub_188CCE4((uint64_t)&v3[2], *(_DWORD *)(a2 + 56));
    uint64_t result = sub_12C1E38(v3 + 2, v11, v10, v9, *(_DWORD *)v3[2].__r_.__value_.__r.__words[2] - LODWORD(v3[2].__r_.__value_.__r.__words[1]));
    int v12 = LODWORD(v3[2].__r_.__value_.__r.__words[1]) + v9;
    LODWORD(v3[2].__r_.__value_.__r.__words[1]) = v12;
    uint64_t v13 = (int *)v3[2].__r_.__value_.__r.__words[2];
    if (*v13 < v12) {
      int *v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 16);
  if ((v14 & 0x7F) != 0)
  {
    if (v14)
    {
      uint64_t v16 = (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      unint64_t v18 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        unint64_t v18 = (uint64_t *)*v18;
      }
      uint64_t result = sub_1881DF4((std::string **)&v3[3], v16, v18);
      if ((v14 & 2) == 0)
      {
LABEL_10:
        if ((v14 & 4) == 0) {
          goto LABEL_11;
        }
        goto LABEL_27;
      }
    }
    else if ((v14 & 2) == 0)
    {
      goto LABEL_10;
    }
    uint64_t v19 = (long long *)(*(void *)(a2 + 80) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    std::string::size_type v20 = v3->__r_.__value_.__l.__size_;
    unint64_t v21 = (uint64_t *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
    if (v20) {
      unint64_t v21 = (uint64_t *)*v21;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[3].__r_.__value_.__l.__size_, v19, v21);
    if ((v14 & 4) == 0)
    {
LABEL_11:
      if ((v14 & 8) == 0) {
        goto LABEL_12;
      }
      goto LABEL_35;
    }
LABEL_27:
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
    uint64_t v22 = (std::string *)v3[3].__r_.__value_.__r.__words[2];
    if (!v22)
    {
      std::string::size_type v23 = v3->__r_.__value_.__l.__size_;
      uint64_t v24 = (void *)(v23 & 0xFFFFFFFFFFFFFFFCLL);
      if (v23) {
        uint64_t v24 = (void *)*v24;
      }
      uint64_t v22 = (std::string *)sub_144A660((uint64_t)v24);
      v3[3].__r_.__value_.__r.__words[2] = (std::string::size_type)v22;
    }
    if (*(void *)(a2 + 88)) {
      int v25 = *(uint64_t (****)(uint64_t))(a2 + 88);
    }
    else {
      int v25 = &off_2537C70;
    }
    uint64_t result = sub_1416D48(v22, (uint64_t)v25);
    if ((v14 & 8) == 0)
    {
LABEL_12:
      if ((v14 & 0x10) == 0) {
        goto LABEL_13;
      }
      goto LABEL_36;
    }
LABEL_35:
    LODWORD(v3[4].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 96);
    if ((v14 & 0x10) == 0)
    {
LABEL_13:
      if ((v14 & 0x20) == 0) {
        goto LABEL_14;
      }
      goto LABEL_37;
    }
LABEL_36:
    HIDWORD(v3[4].__r_.__value_.__r.__words[0]) = *(_DWORD *)(a2 + 100);
    if ((v14 & 0x20) == 0)
    {
LABEL_14:
      if ((v14 & 0x40) == 0)
      {
LABEL_16:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v14;
        goto LABEL_17;
      }
LABEL_15:
      v3[4].__r_.__value_.__s.__data_[12] = *(unsigned char *)(a2 + 108);
      goto LABEL_16;
    }
LABEL_37:
    LODWORD(v3[4].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 104);
    if ((v14 & 0x40) == 0) {
      goto LABEL_16;
    }
    goto LABEL_15;
  }
LABEL_17:
  uint64_t v15 = *(void *)(a2 + 8);
  if (v15)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v15 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1418064()
{
  return 1;
}

void *sub_141806C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gemini.Image");
}

void *sub_141807C(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1889DA8((uint64_t)(a1 + 3));
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_14180F8(void *a1)
{
  sub_141807C(a1);

  operator delete();
}

char *sub_1418130(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v31 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v31, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v31 + 1;
    unsigned int v9 = *v31;
    if (*v31 < 0)
    {
      int v10 = *v8;
      unsigned int v11 = v9 + (v10 << 7);
      unsigned int v9 = v11 - 128;
      if (v10 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v31, v11 - 128);
        unsigned int v9 = v12;
      }
      else
      {
        uint64_t v8 = v31 + 2;
      }
    }
    unint64_t v31 = v8;
    if (v9 >> 3 == 2) {
      break;
    }
    if (v9 >> 3 != 1 || v9 != 8) {
      goto LABEL_13;
    }
    uint64_t v26 = v8 + 1;
    uint64_t v27 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_45;
    }
    int v28 = *v26;
    uint64_t v27 = v27 + (v28 << 7) - 128;
    if ((v28 & 0x80000000) == 0)
    {
      uint64_t v26 = v8 + 2;
LABEL_45:
      unint64_t v31 = v26;
      *(void *)(a1 + 40) = v27;
      int v5 = 1;
      goto LABEL_46;
    }
    uint64_t v29 = (char *)sub_188C138((uint64_t)v8, v27);
    unint64_t v31 = v29;
    *(void *)(a1 + 40) = v30;
    int v5 = 1;
    if (!v29) {
      goto LABEL_55;
    }
LABEL_46:
    if (sub_11947B8((uint64_t)a3, &v31, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 == 16)
  {
    unsigned int v17 = v8 - 1;
    while (1)
    {
      unint64_t v31 = v17 + 1;
      unint64_t v18 = v17[1];
      uint64_t v19 = v17 + 2;
      if (v17[1] < 0)
      {
        int v20 = *v19;
        int v21 = v18 + (v20 << 7);
        unint64_t v18 = (v21 - 128);
        if (v20 < 0)
        {
          unint64_t v31 = (char *)sub_188C138((uint64_t)(v17 + 1), (v21 - 128));
          if (!v31) {
            goto LABEL_55;
          }
          unint64_t v18 = v24;
          goto LABEL_28;
        }
        uint64_t v19 = v17 + 3;
      }
      unint64_t v31 = v19;
LABEL_28:
      if ((v18 - 3) > 2)
      {
        if (*v7) {
          int v25 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          int v25 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        sub_188C020(2, v18, v25);
      }
      else
      {
        uint64_t v22 = *(unsigned int *)(a1 + 24);
        if (v22 == *(_DWORD *)(a1 + 28))
        {
          int v23 = v22 + 1;
          sub_188C80C((unsigned int *)(a1 + 24), v22 + 1);
          *(_DWORD *)(*(void *)(a1 + 32) + 4 * v22) = v18;
        }
        else
        {
          *(_DWORD *)(*(void *)(a1 + 32) + 4 * v22) = v18;
          int v23 = v22 + 1;
        }
        *(_DWORD *)(a1 + 24) = v23;
      }
      unsigned int v17 = v31;
      if (*(void *)a3 <= (unint64_t)v31 || *v31 != 16) {
        goto LABEL_46;
      }
    }
  }
  if (v9 == 18)
  {
    *(void *)&long long v32 = a1 + 24;
    *((void *)&v32 + 1) = sub_13F4AE0;
    uint64_t v33 = a1 + 8;
    int v34 = 2;
    uint64_t v16 = sub_1112E88((uint64_t)a3, v8, &v32);
    goto LABEL_20;
  }
LABEL_13:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (*v7)
    {
      uint64_t v15 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = v31;
    }
    uint64_t v16 = (char *)sub_1885AC0(v9, v15, v8, a3);
LABEL_20:
    unint64_t v31 = v16;
    if (!v16) {
      goto LABEL_55;
    }
    goto LABEL_46;
  }
  if (v8) {
    a3[10].i32[0] = v9 - 1;
  }
  else {
LABEL_55:
  }
    unint64_t v31 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v31;
}

unsigned char *sub_1418408(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (unsigned char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v6 = *(void *)(a1 + 40);
    unsigned char *v4 = 8;
    v4[1] = v6;
    if (v6 > 0x7F)
    {
      v4[1] = v6 | 0x80;
      unint64_t v7 = v6 >> 7;
      v4[2] = v6 >> 7;
      v4 += 3;
      if (v6 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v8 = v7 >> 14;
          v7 >>= 7;
          *v4++ = v7;
        }
        while (v8);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v9 = *(unsigned int *)(a1 + 24);
  if ((int)v9 >= 1)
  {
    for (uint64_t i = 0; i != v9; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v11 = *(int *)(*(void *)(a1 + 32) + 4 * i);
      unsigned char *v4 = 16;
      v4[1] = v11;
      if (v11 > 0x7F)
      {
        v4[1] = v11 | 0x80;
        unint64_t v12 = v11 >> 7;
        v4[2] = v11 >> 7;
        v4 += 3;
        if (v11 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v13 = v12 >> 14;
            v12 >>= 7;
            *v4++ = v12;
          }
          while (v13);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  uint64_t v14 = *(void *)(a1 + 8);
  if ((v14 & 1) == 0) {
    return v4;
  }
  unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v16 + 31) < 0)
  {
    unsigned int v17 = *(void **)(v16 + 8);
    uint64_t v18 = *(void *)(v16 + 16);
  }
  else
  {
    unsigned int v17 = (void *)(v16 + 8);
    LODWORD(v18) = *(unsigned __int8 *)(v16 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v18)
  {
    uint64_t v19 = (int)v18;
    memcpy(v4, v17, (int)v18);
    v4 += v19;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v17, v18, v4);
}

uint64_t sub_14185D8(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 24);
  if (v1)
  {
    int v2 = 0;
    uint64_t v3 = 0;
    do
    {
      int v4 = *(_DWORD *)(*(void *)(a1 + 32) + 4 * v2);
      if (v4 < 0) {
        uint64_t v5 = 10;
      }
      else {
        uint64_t v5 = (9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6;
      }
      v3 += v5;
      ++v2;
    }
    while (v1 != v2);
  }
  else
  {
    uint64_t v3 = 0;
  }
  uint64_t v6 = v3 + v1;
  if (*(unsigned char *)(a1 + 16)) {
    v6 += ((9 * (__clz(*(void *)(a1 + 40) | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v9 + 31) < 0) {
      uint64_t v10 = *(void *)(v9 + 16);
    }
    else {
      uint64_t v10 = *(unsigned __int8 *)(v9 + 31);
    }
    v6 += v10;
  }
  *(_DWORD *)(a1 + 20) = v6;
  return v6;
}

uint64_t sub_1418690()
{
  return 1;
}

void *sub_1418698@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gemini.BrandReference");
}

uint64_t sub_14186A8(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_9;
    }
  }
  else if (v4)
  {
    goto LABEL_9;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(void *)(a1 + 32)) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_9:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1418754(uint64_t a1)
{
  sub_14186A8(a1);

  operator delete();
}

uint64_t sub_141878C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v20 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
    return *(void *)v20;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = (char *)(*(void *)v20 + 1);
    unsigned int v8 = **(unsigned char **)v20;
    if ((char)**(unsigned char **)v20 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180(*(uint64_t *)v20, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (char *)(*(void *)v20 + 2);
      }
    }
    *(void *)int v20 = v7;
    if (v8 >> 3 == 2)
    {
      if (v8 == 18)
      {
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v15 = *(void *)(a1 + 8);
        unint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          unint64_t v16 = (uint64_t *)*v16;
        }
        unsigned int v17 = (std::string *)sub_1881EAC((uint64_t *)(a1 + 32), &off_2538EC0, v16);
        goto LABEL_27;
      }
    }
    else if (v8 >> 3 == 1 && v8 == 10)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v18 = *(void *)(a1 + 8);
      uint64_t v19 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
      if (v18) {
        uint64_t v19 = (uint64_t *)*v19;
      }
      unsigned int v17 = (std::string *)sub_1880F84((void *)(a1 + 24), v19);
LABEL_27:
      uint64_t v14 = (void *)sub_188C244(v17, *(char **)v20, (uint64_t)a3);
      goto LABEL_28;
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      unint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = *(char **)v20;
    }
    uint64_t v14 = sub_1885AC0(v8, v13, v7, a3);
LABEL_28:
    *(void *)int v20 = v14;
    if (!v14) {
      goto LABEL_34;
    }
    if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
      return *(void *)v20;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v20;
  }
LABEL_34:
  *(void *)int v20 = 0;
  return *(void *)v20;
}

char *sub_141894C(uint64_t a1, char *__dst, void *a3)
{
  int v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    int v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 2) != 0) {
    int v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v9 + 31) < 0)
  {
    unsigned int v10 = *(void **)(v9 + 8);
    uint64_t v11 = *(void *)(v9 + 16);
  }
  else
  {
    unsigned int v10 = (void *)(v9 + 8);
    LODWORD(v11) = *(unsigned __int8 *)(v9 + 31);
  }
  if (*a3 - (void)v4 >= (int)v11)
  {
    uint64_t v12 = (int)v11;
    memcpy(v4, v10, (int)v11);
    v4 += v12;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v10, v11, v4);
}

uint64_t sub_1418A38(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_10;
    }
    goto LABEL_7;
  }
  unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
  uint64_t v5 = *(void *)(v3 + 8);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = v4;
  }
  uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0)
  {
LABEL_7:
    unint64_t v6 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    v2 += v12;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

void *sub_1418B04@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gemini.BrandKey");
}

uint64_t sub_1418B14(uint64_t a1)
{
  unint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_9;
    }
  }
  else if (v4)
  {
    goto LABEL_9;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_9:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1418BCC(uint64_t a1)
{
  sub_1418B14(a1);

  operator delete();
}

uint64_t sub_1418C04(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) != 0)
  {
    if (v1)
    {
      unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v2 + 23) < 0)
      {
        **(unsigned char **)unint64_t v2 = 0;
        *(void *)(v2 + 8) = 0;
        if ((v1 & 2) == 0) {
          goto LABEL_11;
        }
        goto LABEL_6;
      }
      *(unsigned char *)unint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
    }
    if ((v1 & 2) == 0) {
      goto LABEL_11;
    }
LABEL_6:
    unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)unint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
LABEL_11:
  if ((v1 & 0xC) != 0)
  {
    *(unsigned char *)(a1 + 40) = 0;
    *(_DWORD *)(a1 + 44) = 1;
  }
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v5) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_1418C94(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unint64_t v31 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v31, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (char *)(*(void *)v31 + 1);
    unsigned int v9 = **(unsigned char **)v31;
    if ((char)**(unsigned char **)v31 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180(*(uint64_t *)v31, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (char *)(*(void *)v31 + 2);
      }
    }
    *(void *)unint64_t v31 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_31;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 8);
        unint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          unint64_t v13 = (uint64_t *)*v13;
        }
        uint64_t v14 = (void *)(a1 + 24);
        goto LABEL_25;
      case 2u:
        if (v9 != 16) {
          goto LABEL_31;
        }
        uint64_t v15 = v8 + 1;
        unint64_t v16 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_17;
        }
        int v17 = *v15;
        int v18 = v16 + (v17 << 7);
        unint64_t v16 = (v18 - 128);
        if (v17 < 0)
        {
          *(void *)unint64_t v31 = sub_188C138((uint64_t)v8, (v18 - 128));
          if (!*(void *)v31) {
            goto LABEL_52;
          }
          unint64_t v16 = v28;
        }
        else
        {
          uint64_t v15 = v8 + 2;
LABEL_17:
          *(void *)unint64_t v31 = v15;
        }
        if ((v16 - 1) < 4 || v16 == 100)
        {
          *(_DWORD *)(a1 + 16) |= 8u;
          *(_DWORD *)(a1 + 44) = v16;
        }
        else
        {
          if (*v7) {
            uint64_t v27 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v27 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(2, v16, v27);
        }
        goto LABEL_39;
      case 3u:
        if (v9 != 26) {
          goto LABEL_31;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v19 = *(void *)(a1 + 8);
        unint64_t v13 = (uint64_t *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
        if (v19) {
          unint64_t v13 = (uint64_t *)*v13;
        }
        uint64_t v14 = (void *)(a1 + 32);
LABEL_25:
        int v20 = (std::string *)sub_1880F84(v14, v13);
        int v21 = (void *)sub_188C244(v20, *(char **)v31, (uint64_t)a3);
        goto LABEL_38;
      case 0xAu:
        if (v9 != 80) {
          goto LABEL_31;
        }
        v5 |= 4u;
        uint64_t v22 = v8 + 1;
        uint64_t v23 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_30;
        }
        int v24 = *v22;
        uint64_t v23 = v23 + (v24 << 7) - 128;
        if (v24 < 0)
        {
          uint64_t v29 = sub_188C138((uint64_t)v8, v23);
          *(void *)unint64_t v31 = v29;
          *(unsigned char *)(a1 + 40) = v30 != 0;
          if (!v29) {
            goto LABEL_52;
          }
        }
        else
        {
          uint64_t v22 = v8 + 2;
LABEL_30:
          *(void *)unint64_t v31 = v22;
          *(unsigned char *)(a1 + 40) = v23 != 0;
        }
        goto LABEL_39;
      default:
LABEL_31:
        if (v9) {
          BOOL v25 = (v9 & 7) == 4;
        }
        else {
          BOOL v25 = 1;
        }
        if (!v25)
        {
          if (*v7)
          {
            uint64_t v26 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v26 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = *(char **)v31;
          }
          int v21 = sub_1885AC0(v9, v26, v8, a3);
LABEL_38:
          *(void *)unint64_t v31 = v21;
          if (!v21) {
            goto LABEL_52;
          }
LABEL_39:
          if (sub_11947B8((uint64_t)a3, (char **)v31, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_52:
        }
          *(void *)unint64_t v31 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v31;
    }
  }
}

unsigned char *sub_1418FB4(uint64_t a1, unsigned char *__dst, void *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v7 = *(int *)(a1 + 44);
    unsigned char *v4 = 16;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0) {
    uint64_t v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v10 = *(unsigned char *)(a1 + 40);
    unsigned char *v4 = 80;
    v4[1] = v10;
    v4 += 2;
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return v4;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    uint64_t v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    uint64_t v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*a3 - (void)v4 >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(v4, v14, (int)v15);
    v4 += v16;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v14, v15, v4);
}

uint64_t sub_1419154(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 1) == 0)
  {
    uint64_t result = 0;
    if ((v2 & 8) == 0) {
      return result;
    }
    goto LABEL_7;
  }
  unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
  uint64_t v6 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    uint64_t v6 = v5;
  }
  uint64_t result = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 8) != 0)
  {
LABEL_7:
    int v7 = *(_DWORD *)(a1 + 44);
    if (v7 < 0) {
      uint64_t v8 = 11;
    }
    else {
      uint64_t v8 = ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    result += v8;
  }
  return result;
}

uint64_t sub_14191E0(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((~v2 & 9) != 0)
  {
    uint64_t result = sub_1419154(a1);
  }
  else
  {
    unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
    uint64_t v5 = *(void *)(v3 + 8);
    if ((v4 & 0x80u) == 0) {
      uint64_t v5 = v4;
    }
    uint64_t v6 = (9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6;
    int v7 = *(_DWORD *)(a1 + 44);
    uint64_t v8 = (9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6;
    if (v7 >= 0) {
      uint64_t v9 = v8;
    }
    else {
      uint64_t v9 = 10;
    }
    uint64_t result = v5 + v6 + v9 + 2;
  }
  if ((v2 & 6) != 0)
  {
    if ((v2 & 2) != 0)
    {
      unint64_t v11 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v12 = *(unsigned __int8 *)(v11 + 23);
      uint64_t v13 = *(void *)(v11 + 8);
      if ((v12 & 0x80u) == 0) {
        uint64_t v13 = v12;
      }
      result += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v2 & 4) != 0) {
      result += 2;
    }
  }
  uint64_t v14 = *(void *)(a1 + 8);
  if (v14)
  {
    unint64_t v15 = v14 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v15 + 31) < 0) {
      uint64_t v16 = *(void *)(v15 + 16);
    }
    else {
      uint64_t v16 = *(unsigned __int8 *)(v15 + 31);
    }
    result += v16;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

std::string *sub_141930C(std::string *result, uint64_t a2)
{
  unint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0xF) != 0)
  {
    if (v4)
    {
      uint64_t v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      int v7 = (std::string **)&result[1];
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v9 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v9 = (uint64_t *)*v9;
      }
      uint64_t result = sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_18;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    char v10 = (long long *)(*(void *)(a2 + 32) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    std::string::size_type v11 = v3->__r_.__value_.__l.__size_;
    uint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
    if (v11) {
      uint64_t v12 = (uint64_t *)*v12;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[1].__r_.__value_.__l.__size_, v10, v12);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0)
      {
LABEL_7:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
        goto LABEL_8;
      }
LABEL_6:
      HIDWORD(v3[1].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 44);
      goto LABEL_7;
    }
LABEL_18:
    v3[1].__r_.__value_.__s.__data_[16] = *(unsigned char *)(a2 + 40);
    if ((v4 & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_8:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

BOOL sub_1419414(uint64_t a1)
{
  return (~*(_DWORD *)(a1 + 16) & 9) == 0;
}

void *sub_1419428@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gemini.Url");
}

uint64_t sub_1419438(uint64_t a1)
{
  unint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_9;
    }
  }
  else if (v4)
  {
    goto LABEL_9;
  }
  uint64_t v5 = (void ***)(a1 + 64);
  if (*(uint64_t **)(a1 + 64) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 72) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 72));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_9:
  sub_1889DE8((void *)(a1 + 40));
  sub_1889DA8(a1 + 24);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1419500(uint64_t a1)
{
  sub_1419438(a1);

  operator delete();
}

uint64_t sub_1419538(uint64_t a1)
{
  *(_DWORD *)(a1 + 24) = 0;
  uint64_t result = sub_188CC00(a1 + 40);
  int v3 = *(_DWORD *)(a1 + 16);
  if ((v3 & 3) != 0)
  {
    if (v3)
    {
      unint64_t v4 = *(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v4 + 23) < 0)
      {
        **(unsigned char **)unint64_t v4 = 0;
        *(void *)(v4 + 8) = 0;
        if ((v3 & 2) == 0) {
          goto LABEL_11;
        }
        goto LABEL_6;
      }
      *(unsigned char *)unint64_t v4 = 0;
      *(unsigned char *)(v4 + 23) = 0;
    }
    if ((v3 & 2) == 0) {
      goto LABEL_11;
    }
LABEL_6:
    unint64_t v5 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v5 + 23) < 0)
    {
      **(unsigned char **)unint64_t v5 = 0;
      *(void *)(v5 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v5 = 0;
      *(unsigned char *)(v5 + 23) = 0;
    }
  }
LABEL_11:
  if ((v3 & 0x3C) != 0)
  {
    *(void *)(a1 + 80) = 0;
    *(void *)(a1 + 88) = 0;
    *(_DWORD *)(a1 + 104) = 0;
    *(void *)(a1 + 96) = 0;
  }
  char v7 = *(unsigned char *)(a1 + 8);
  uint64_t v6 = a1 + 8;
  *(_DWORD *)(v6 + 8) = 0;
  if (v7)
  {
    return sub_188B4AC((uint64_t *)v6);
  }
  return result;
}

uint64_t sub_141960C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v53 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v53, a3[11].i32[1])) {
    goto LABEL_2;
  }
  char v7 = (uint64_t **)(a1 + 40);
  uint64_t v52 = (uint64_t *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (char *)(*(void *)v53 + 1);
    unsigned int v9 = **(unsigned char **)v53;
    if ((char)**(unsigned char **)v53 < 0)
    {
      int v10 = *v8;
      unsigned int v11 = v9 + (v10 << 7);
      unsigned int v9 = v11 - 128;
      if (v10 < 0)
      {
        uint64_t v8 = (char *)sub_188C180(*(uint64_t *)v53, v11 - 128);
        unsigned int v9 = v12;
      }
      else
      {
        uint64_t v8 = (char *)(*(void *)v53 + 2);
      }
    }
    *(void *)uint64_t v53 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_75;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v13 = *(void *)(a1 + 8);
        uint64_t v14 = (uint64_t *)(v13 & 0xFFFFFFFFFFFFFFFCLL);
        if (v13) {
          uint64_t v14 = (uint64_t *)*v14;
        }
        unint64_t v15 = (void *)(a1 + 64);
        goto LABEL_17;
      case 2u:
        if (v9 != 18) {
          goto LABEL_75;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v16 = *(void *)(a1 + 8);
        uint64_t v14 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
        if (v16) {
          uint64_t v14 = (uint64_t *)*v14;
        }
        unint64_t v15 = (void *)(a1 + 72);
LABEL_17:
        int v17 = (std::string *)sub_1880F84(v15, v14);
        int v18 = (void *)sub_188C244(v17, *(char **)v53, (uint64_t)a3);
        goto LABEL_82;
      case 3u:
        if (v9 != 24) {
          goto LABEL_75;
        }
        v5 |= 4u;
        uint64_t v19 = v8 + 1;
        uint64_t v20 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_22;
        }
        int v21 = *v19;
        uint64_t v20 = v20 + (v21 << 7) - 128;
        if (v21 < 0)
        {
          uint64_t v44 = sub_188C138((uint64_t)v8, v20);
          *(void *)uint64_t v53 = v44;
          *(void *)(a1 + 80) = v45;
          if (!v44) {
            goto LABEL_88;
          }
        }
        else
        {
          uint64_t v19 = v8 + 2;
LABEL_22:
          *(void *)uint64_t v53 = v19;
          *(void *)(a1 + 80) = v20;
        }
        goto LABEL_83;
      case 4u:
        if (v9 != 37) {
          goto LABEL_75;
        }
        v5 |= 0x20u;
        *(_DWORD *)(a1 + 104) = *(_DWORD *)v8;
        *(void *)uint64_t v53 = v8 + 4;
        goto LABEL_83;
      case 5u:
        if (v9 == 40)
        {
          uint64_t v22 = (uint64_t)(v8 - 1);
          while (1)
          {
            *(void *)uint64_t v53 = v22 + 1;
            unint64_t v23 = *(unsigned __int8 *)(v22 + 1);
            int v24 = (char *)(v22 + 2);
            if (*(char *)(v22 + 1) < 0)
            {
              int v25 = *v24;
              int v26 = v23 + (v25 << 7);
              unint64_t v23 = (v26 - 128);
              if (v25 < 0)
              {
                *(void *)uint64_t v53 = sub_188C138(v22 + 1, (v26 - 128));
                if (!*(void *)v53) {
                  goto LABEL_88;
                }
                unint64_t v23 = v29;
                goto LABEL_31;
              }
              int v24 = (char *)(v22 + 3);
            }
            *(void *)uint64_t v53 = v24;
LABEL_31:
            if (v23 > 0xC)
            {
              if (*v52) {
                uint64_t v30 = (std::string *)((*v52 & 0xFFFFFFFFFFFFFFFCLL) + 8);
              }
              else {
                uint64_t v30 = (std::string *)sub_188DBD8(v52);
              }
              sub_188C020(5, v23, v30);
            }
            else
            {
              uint64_t v27 = *(unsigned int *)(a1 + 24);
              if (v27 == *(_DWORD *)(a1 + 28))
              {
                int v28 = v27 + 1;
                sub_188C80C((unsigned int *)(a1 + 24), v27 + 1);
                *(_DWORD *)(*(void *)(a1 + 32) + 4 * v27) = v23;
              }
              else
              {
                *(_DWORD *)(*(void *)(a1 + 32) + 4 * v27) = v23;
                int v28 = v27 + 1;
              }
              *(_DWORD *)(a1 + 24) = v28;
            }
            uint64_t v22 = *(void *)v53;
            if (*(void *)a3 <= *(void *)v53 || **(unsigned char **)v53 != 40) {
              goto LABEL_83;
            }
          }
        }
        if (v9 == 42)
        {
          *(void *)&long long v54 = a1 + 24;
          *((void *)&v54 + 1) = sub_13F4AF0;
          uint64_t v55 = a1 + 8;
          int v56 = 5;
          int v18 = sub_1112E88((uint64_t)a3, v8, &v54);
LABEL_82:
          *(void *)uint64_t v53 = v18;
          if (!v18) {
            goto LABEL_88;
          }
LABEL_83:
          if (sub_11947B8((uint64_t)a3, (char **)v53, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
LABEL_75:
        if (v9) {
          BOOL v50 = (v9 & 7) == 4;
        }
        else {
          BOOL v50 = 1;
        }
        if (!v50)
        {
          if (*v52)
          {
            int v51 = (std::string *)((*v52 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            int v51 = (std::string *)sub_188DBD8(v52);
            uint64_t v8 = *(char **)v53;
          }
          int v18 = sub_1885AC0(v9, v51, v8, a3);
          goto LABEL_82;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_88:
        }
          *(void *)uint64_t v53 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v53;
      case 6u:
        if (v9 != 48) {
          goto LABEL_75;
        }
        v5 |= 8u;
        unint64_t v31 = v8 + 1;
        uint64_t v32 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_49;
        }
        int v33 = *v31;
        uint64_t v32 = v32 + (v33 << 7) - 128;
        if (v33 < 0)
        {
          uint64_t v46 = sub_188C138((uint64_t)v8, v32);
          *(void *)uint64_t v53 = v46;
          *(void *)(a1 + 88) = v47;
          if (!v46) {
            goto LABEL_88;
          }
        }
        else
        {
          unint64_t v31 = v8 + 2;
LABEL_49:
          *(void *)uint64_t v53 = v31;
          *(void *)(a1 + 88) = v32;
        }
        goto LABEL_83;
      case 7u:
        if (v9 != 58) {
          goto LABEL_75;
        }
        int v34 = v8 - 1;
        while (1)
        {
          uint64_t v35 = (char *)(v34 + 1);
          *(void *)uint64_t v53 = v34 + 1;
          uint64_t v36 = *(_DWORD **)(a1 + 56);
          if (v36 && (uint64_t v37 = *(int *)(a1 + 48), (int)v37 < *v36))
          {
            *(_DWORD *)(a1 + 48) = v37 + 1;
            uint64_t v38 = *(std::string **)&v36[2 * v37 + 2];
          }
          else
          {
            if (!*v7) {
              operator new();
            }
            void *v40 = v39;
            v40[1] = sub_3A6EDC;
            *uint64_t v39 = 0;
            v39[1] = 0;
            v39[2] = 0;
            uint64_t v38 = (std::string *)sub_188CDC8(a1 + 40, (uint64_t)v39);
            uint64_t v35 = *(char **)v53;
          }
          int v34 = sub_188C244(v38, v35, (uint64_t)a3);
          *(void *)uint64_t v53 = v34;
          if (!v34) {
            goto LABEL_88;
          }
          if (*(void *)a3 <= (unint64_t)v34 || *v34 != 58) {
            goto LABEL_83;
          }
        }
      case 8u:
        if (v9 != 64) {
          goto LABEL_75;
        }
        v5 |= 0x10u;
        int v41 = v8 + 1;
        uint64_t v42 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_66;
        }
        int v43 = *v41;
        uint64_t v42 = v42 + (v43 << 7) - 128;
        if (v43 < 0)
        {
          uint64_t v48 = sub_188C138((uint64_t)v8, v42);
          *(void *)uint64_t v53 = v48;
          *(void *)(a1 + 96) = v49;
          if (!v48) {
            goto LABEL_88;
          }
        }
        else
        {
          int v41 = v8 + 2;
LABEL_66:
          *(void *)uint64_t v53 = v41;
          *(void *)(a1 + 96) = v42;
        }
        goto LABEL_83;
      default:
        goto LABEL_75;
    }
  }
}

char *sub_1419B60(uint64_t a1, char *__dst, void *a3)
{
  unint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    unint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_13;
      }
      goto LABEL_7;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  unint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) == 0) {
    goto LABEL_13;
  }
LABEL_7:
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  unint64_t v7 = *(void *)(a1 + 80);
  char *v4 = 24;
  v4[1] = v7;
  if (v7 > 0x7F)
  {
    v4[1] = v7 | 0x80;
    unint64_t v8 = v7 >> 7;
    v4[2] = v7 >> 7;
    v4 += 3;
    if (v7 >= 0x4000)
    {
      do
      {
        *(v4 - 1) |= 0x80u;
        unint64_t v9 = v8 >> 14;
        v8 >>= 7;
        *v4++ = v8;
      }
      while (v9);
    }
  }
  else
  {
    v4 += 2;
  }
LABEL_13:
  if ((v6 & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    int v10 = *(_DWORD *)(a1 + 104);
    char *v4 = 37;
    *(_DWORD *)(v4 + 1) = v10;
    v4 += 5;
  }
  uint64_t v11 = *(unsigned int *)(a1 + 24);
  if ((int)v11 >= 1)
  {
    for (uint64_t i = 0; i != v11; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v13 = *(int *)(*(void *)(a1 + 32) + 4 * i);
      char *v4 = 40;
      v4[1] = v13;
      if (v13 > 0x7F)
      {
        v4[1] = v13 | 0x80;
        unint64_t v14 = v13 >> 7;
        v4[2] = v13 >> 7;
        v4 += 3;
        if (v13 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v15 = v14 >> 14;
            v14 >>= 7;
            *v4++ = v14;
          }
          while (v15);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v16 = *(void *)(a1 + 88);
    char *v4 = 48;
    v4[1] = v16;
    if (v16 > 0x7F)
    {
      v4[1] = v16 | 0x80;
      unint64_t v17 = v16 >> 7;
      v4[2] = v16 >> 7;
      v4 += 3;
      if (v16 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v18 = v17 >> 14;
          v17 >>= 7;
          *v4++ = v17;
        }
        while (v18);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v19 = *(unsigned int *)(a1 + 48);
  if ((int)v19 >= 1)
  {
    uint64_t v20 = 0;
    uint64_t v21 = 8 * v19;
    do
    {
      uint64_t v22 = *(void **)(*(void *)(a1 + 56) + v20 + 8);
      if (*((char *)v22 + 23) < 0)
      {
        int64_t v23 = v22[1];
        if (v23 > 127) {
          goto LABEL_44;
        }
      }
      else
      {
        int64_t v23 = *((unsigned __int8 *)v22 + 23);
      }
      if (*a3 - (void)v4 + 14 >= v23)
      {
        char *v4 = 58;
        v4[1] = v23;
        if (*((char *)v22 + 23) < 0) {
          uint64_t v22 = (void *)*v22;
        }
        int v24 = v4 + 2;
        memcpy(v24, v22, v23);
        unint64_t v4 = &v24[v23];
        goto LABEL_42;
      }
LABEL_44:
      unint64_t v4 = (char *)sub_188A868(a3, 7, (uint64_t)v22, v4);
LABEL_42:
      v20 += 8;
    }
    while (v21 != v20);
  }
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v25 = *(void *)(a1 + 96);
    char *v4 = 64;
    v4[1] = v25;
    if (v25 > 0x7F)
    {
      v4[1] = v25 | 0x80;
      unint64_t v26 = v25 >> 7;
      v4[2] = v25 >> 7;
      v4 += 3;
      if (v25 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v27 = v26 >> 14;
          v26 >>= 7;
          *v4++ = v26;
        }
        while (v27);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v28 = *(void *)(a1 + 8);
  if ((v28 & 1) == 0) {
    return v4;
  }
  unint64_t v30 = v28 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v30 + 31) < 0)
  {
    unint64_t v31 = *(void **)(v30 + 8);
    uint64_t v32 = *(void *)(v30 + 16);
  }
  else
  {
    unint64_t v31 = (void *)(v30 + 8);
    LODWORD(v32) = *(unsigned __int8 *)(v30 + 31);
  }
  if (*a3 - (void)v4 >= (int)v32)
  {
    uint64_t v33 = (int)v32;
    memcpy(v4, v31, (int)v32);
    v4 += v33;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v31, v32, v4);
}

uint64_t sub_1419F60(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 24);
  if (v1)
  {
    int v2 = 0;
    uint64_t v3 = 0;
    do
    {
      int v4 = *(_DWORD *)(*(void *)(a1 + 32) + 4 * v2);
      if (v4 < 0) {
        uint64_t v5 = 10;
      }
      else {
        uint64_t v5 = (9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6;
      }
      v3 += v5;
      ++v2;
    }
    while (v1 != v2);
  }
  else
  {
    uint64_t v3 = 0;
  }
  uint64_t v6 = v3 + v1;
  uint64_t v7 = *(unsigned int *)(a1 + 48);
  uint64_t v8 = v6 + v7;
  if ((int)v7 >= 1)
  {
    unint64_t v9 = (uint64_t *)(*(void *)(a1 + 56) + 8);
    do
    {
      uint64_t v10 = *v9++;
      uint64_t v11 = *(unsigned __int8 *)(v10 + 23);
      uint64_t v12 = *(void *)(v10 + 8);
      if ((v11 & 0x80u) == 0) {
        uint64_t v12 = v11;
      }
      v8 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6);
      --v7;
    }
    while (v7);
  }
  int v13 = *(_DWORD *)(a1 + 16);
  if ((v13 & 0x3F) != 0)
  {
    if (v13)
    {
      unint64_t v16 = *(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v17 = *(unsigned __int8 *)(v16 + 23);
      uint64_t v18 = *(void *)(v16 + 8);
      if ((v17 & 0x80u) == 0) {
        uint64_t v18 = v17;
      }
      v8 += v18 + ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v13 & 2) == 0)
      {
LABEL_17:
        if ((v13 & 4) == 0) {
          goto LABEL_18;
        }
        goto LABEL_31;
      }
    }
    else if ((v13 & 2) == 0)
    {
      goto LABEL_17;
    }
    unint64_t v19 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v20 = *(unsigned __int8 *)(v19 + 23);
    uint64_t v21 = *(void *)(v19 + 8);
    if ((v20 & 0x80u) == 0) {
      uint64_t v21 = v20;
    }
    v8 += v21 + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v13 & 4) == 0)
    {
LABEL_18:
      if ((v13 & 8) == 0) {
        goto LABEL_19;
      }
      goto LABEL_32;
    }
LABEL_31:
    v8 += ((9 * (__clz(*(void *)(a1 + 80) | 1) ^ 0x3F) + 73) >> 6) + 1;
    if ((v13 & 8) == 0)
    {
LABEL_19:
      if ((v13 & 0x10) == 0) {
        goto LABEL_21;
      }
      goto LABEL_20;
    }
LABEL_32:
    v8 += ((9 * (__clz(*(void *)(a1 + 88) | 1) ^ 0x3F) + 73) >> 6) + 1;
    if ((v13 & 0x10) == 0)
    {
LABEL_21:
      if ((v13 & 0x20) != 0) {
        v8 += 5;
      }
      goto LABEL_23;
    }
LABEL_20:
    v8 += ((9 * (__clz(*(void *)(a1 + 96) | 1) ^ 0x3F) + 73) >> 6) + 1;
    goto LABEL_21;
  }
LABEL_23:
  uint64_t v14 = *(void *)(a1 + 8);
  if (v14)
  {
    unint64_t v22 = v14 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v22 + 31) < 0) {
      uint64_t v23 = *(void *)(v22 + 16);
    }
    else {
      uint64_t v23 = *(unsigned __int8 *)(v22 + 31);
    }
    v8 += v23;
  }
  *(_DWORD *)(a1 + 20) = v8;
  return v8;
}

std::string *sub_141A168(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = result + 1;
    uint64_t data_low = SLODWORD(result[1].__r_.__value_.__l.__data_);
    sub_188C80C((unsigned int *)&result[1], data_low + v4);
    std::string::size_type size = v3[1].__r_.__value_.__l.__size_;
    LODWORD(v5->__r_.__value_.__l.__data_) += *(_DWORD *)(a2 + 24);
    uint64_t result = (std::string *)memcpy((void *)(size + 4 * data_low), *(const void **)(a2 + 32), 4 * *(int *)(a2 + 24));
  }
  int v8 = *(_DWORD *)(a2 + 48);
  if (v8)
  {
    unint64_t v9 = (const std::string **)(*(void *)(a2 + 56) + 8);
    uint64_t v10 = (std::string **)sub_188CCE4((uint64_t)&v3[1].__r_.__value_.__r.__words[2], *(_DWORD *)(a2 + 48));
    uint64_t result = (std::string *)sub_188FB98((uint64_t)&v3[1].__r_.__value_.__r.__words[2], v10, v9, v8, *(_DWORD *)v3[2].__r_.__value_.__l.__size_ - LODWORD(v3[2].__r_.__value_.__l.__data_));
    int v11 = LODWORD(v3[2].__r_.__value_.__l.__data_) + v8;
    LODWORD(v3[2].__r_.__value_.__l.__data_) = v11;
    uint64_t v12 = (int *)v3[2].__r_.__value_.__l.__size_;
    if (*v12 < v11) {
      *uint64_t v12 = v11;
    }
  }
  int v13 = *(_DWORD *)(a2 + 16);
  if ((v13 & 0x3F) != 0)
  {
    if (v13)
    {
      unint64_t v15 = (long long *)(*(void *)(a2 + 64) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::size_type v16 = v3->__r_.__value_.__l.__size_;
      uint64_t v17 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
      if (v16) {
        uint64_t v17 = (uint64_t *)*v17;
      }
      uint64_t result = sub_1881DF4((std::string **)&v3[2].__r_.__value_.__r.__words[2], v15, v17);
      if ((v13 & 2) == 0)
      {
LABEL_9:
        if ((v13 & 4) == 0) {
          goto LABEL_10;
        }
        goto LABEL_25;
      }
    }
    else if ((v13 & 2) == 0)
    {
      goto LABEL_9;
    }
    uint64_t v18 = (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    std::string::size_type v19 = v3->__r_.__value_.__l.__size_;
    uint64_t v20 = (uint64_t *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
    if (v19) {
      uint64_t v20 = (uint64_t *)*v20;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[3], v18, v20);
    if ((v13 & 4) == 0)
    {
LABEL_10:
      if ((v13 & 8) == 0) {
        goto LABEL_11;
      }
      goto LABEL_26;
    }
LABEL_25:
    v3[3].__r_.__value_.__l.__size_ = *(void *)(a2 + 80);
    if ((v13 & 8) == 0)
    {
LABEL_11:
      if ((v13 & 0x10) == 0) {
        goto LABEL_12;
      }
      goto LABEL_27;
    }
LABEL_26:
    v3[3].__r_.__value_.__r.__words[2] = *(void *)(a2 + 88);
    if ((v13 & 0x10) == 0)
    {
LABEL_12:
      if ((v13 & 0x20) == 0)
      {
LABEL_14:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v13;
        goto LABEL_15;
      }
LABEL_13:
      LODWORD(v3[4].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 104);
      goto LABEL_14;
    }
LABEL_27:
    v3[4].__r_.__value_.__r.__words[0] = *(void *)(a2 + 96);
    if ((v13 & 0x20) == 0) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }
LABEL_15:
  uint64_t v14 = *(void *)(a2 + 8);
  if (v14)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v14 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_141A344()
{
  return 1;
}

void *sub_141A34C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gemini.KeywordData.Keyword");
}

void *sub_141A35C(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_149027C(a1 + 11);
  sub_149027C(a1 + 8);
  sub_149027C(a1 + 5);
  sub_149027C(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_141A400(void *a1)
{
  sub_141A35C(a1);

  operator delete();
}

char *sub_141A438(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v37 = a2;
  if (sub_11947B8((uint64_t)a3, &v37, a3[11].i32[1])) {
    return v37;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v7 = v37 + 1;
    unsigned int v8 = *v37;
    if (*v37 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v37, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v37 + 2;
      }
    }
    uint64_t v37 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 10) {
          goto LABEL_49;
        }
        int v11 = v7 - 1;
        while (1)
        {
          uint64_t v12 = (unsigned __int8 *)(v11 + 1);
          uint64_t v37 = v11 + 1;
          int v13 = *(_DWORD **)(a1 + 32);
          if (v13 && (uint64_t v14 = *(int *)(a1 + 24), (int)v14 < *v13))
          {
            *(_DWORD *)(a1 + 24) = v14 + 1;
            uint64_t v15 = *(void *)&v13[2 * v14 + 2];
          }
          else
          {
            uint64_t v16 = sub_144A940(*(void *)(a1 + 16));
            uint64_t v15 = sub_188CDC8(a1 + 16, v16);
            uint64_t v12 = (unsigned __int8 *)v37;
          }
          int v11 = (char *)sub_141A7D8(a3, v15, v12);
          uint64_t v37 = v11;
          if (!v11) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v11 || *v11 != 10) {
            goto LABEL_56;
          }
        }
      case 2u:
        if (v8 != 18) {
          goto LABEL_49;
        }
        uint64_t v17 = v7 - 1;
        while (1)
        {
          uint64_t v18 = (unsigned __int8 *)(v17 + 1);
          uint64_t v37 = v17 + 1;
          std::string::size_type v19 = *(_DWORD **)(a1 + 56);
          if (v19 && (uint64_t v20 = *(int *)(a1 + 48), (int)v20 < *v19))
          {
            *(_DWORD *)(a1 + 48) = v20 + 1;
            uint64_t v21 = *(void *)&v19[2 * v20 + 2];
          }
          else
          {
            uint64_t v22 = sub_144A940(*(void *)(a1 + 40));
            uint64_t v21 = sub_188CDC8(a1 + 40, v22);
            uint64_t v18 = (unsigned __int8 *)v37;
          }
          uint64_t v17 = (char *)sub_141A7D8(a3, v21, v18);
          uint64_t v37 = v17;
          if (!v17) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v17 || *v17 != 18) {
            goto LABEL_56;
          }
        }
      case 3u:
        if (v8 != 26) {
          goto LABEL_49;
        }
        uint64_t v23 = v7 - 1;
        while (1)
        {
          int v24 = (unsigned __int8 *)(v23 + 1);
          uint64_t v37 = v23 + 1;
          unint64_t v25 = *(_DWORD **)(a1 + 80);
          if (v25 && (uint64_t v26 = *(int *)(a1 + 72), (int)v26 < *v25))
          {
            *(_DWORD *)(a1 + 72) = v26 + 1;
            uint64_t v27 = *(void *)&v25[2 * v26 + 2];
          }
          else
          {
            uint64_t v28 = sub_144A940(*(void *)(a1 + 64));
            uint64_t v27 = sub_188CDC8(a1 + 64, v28);
            int v24 = (unsigned __int8 *)v37;
          }
          uint64_t v23 = (char *)sub_141A7D8(a3, v27, v24);
          uint64_t v37 = v23;
          if (!v23) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v23 || *v23 != 26) {
            goto LABEL_56;
          }
        }
      case 4u:
        if (v8 != 34) {
          goto LABEL_49;
        }
        unint64_t v29 = v7 - 1;
        while (1)
        {
          unint64_t v30 = (unsigned __int8 *)(v29 + 1);
          uint64_t v37 = v29 + 1;
          unint64_t v31 = *(_DWORD **)(a1 + 104);
          if (v31 && (uint64_t v32 = *(int *)(a1 + 96), (int)v32 < *v31))
          {
            *(_DWORD *)(a1 + 96) = v32 + 1;
            uint64_t v33 = *(void *)&v31[2 * v32 + 2];
          }
          else
          {
            uint64_t v34 = sub_144A940(*(void *)(a1 + 88));
            uint64_t v33 = sub_188CDC8(a1 + 88, v34);
            unint64_t v30 = (unsigned __int8 *)v37;
          }
          unint64_t v29 = (char *)sub_141A7D8(a3, v33, v30);
          uint64_t v37 = v29;
          if (!v29) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v29 || *v29 != 34) {
            goto LABEL_56;
          }
        }
      default:
LABEL_49:
        if (v8) {
          BOOL v35 = (v8 & 7) == 4;
        }
        else {
          BOOL v35 = 1;
        }
        if (!v35)
        {
          if (*v6)
          {
            uint64_t v36 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v36 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v7 = v37;
          }
          uint64_t v37 = (char *)sub_1885AC0(v8, v36, v7, a3);
          if (!v37) {
            return 0;
          }
LABEL_56:
          if (sub_11947B8((uint64_t)a3, &v37, a3[11].i32[1])) {
            return v37;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return v37;
    }
  }
}

uint64_t sub_141A7D8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_141960C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_141A868(uint64_t a1, char *__dst, void *a3)
{
  int v6 = *(_DWORD *)(a1 + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unsigned int v10 = __dst + 2;
      }
      __dst = sub_1419B60(v8, v10, a3);
    }
  }
  int v11 = *(_DWORD *)(a1 + 48);
  if (v11)
  {
    for (int j = 0; j != v11; ++j)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v13 = *(void *)(*(void *)(a1 + 56) + 8 * j + 8);
      *__dst = 18;
      unsigned int v14 = *(_DWORD *)(v13 + 20);
      __dst[1] = v14;
      if (v14 > 0x7F) {
        uint64_t v15 = sub_188A9CC(v14, __dst + 1);
      }
      else {
        uint64_t v15 = __dst + 2;
      }
      __dst = sub_1419B60(v13, v15, a3);
    }
  }
  int v16 = *(_DWORD *)(a1 + 72);
  if (v16)
  {
    for (int k = 0; k != v16; ++k)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v18 = *(void *)(*(void *)(a1 + 80) + 8 * k + 8);
      *__dst = 26;
      unsigned int v19 = *(_DWORD *)(v18 + 20);
      __dst[1] = v19;
      if (v19 > 0x7F) {
        uint64_t v20 = sub_188A9CC(v19, __dst + 1);
      }
      else {
        uint64_t v20 = __dst + 2;
      }
      __dst = sub_1419B60(v18, v20, a3);
    }
  }
  int v21 = *(_DWORD *)(a1 + 96);
  if (v21)
  {
    for (int m = 0; m != v21; ++m)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v23 = *(void *)(*(void *)(a1 + 104) + 8 * m + 8);
      *__dst = 34;
      unsigned int v24 = *(_DWORD *)(v23 + 20);
      __dst[1] = v24;
      if (v24 > 0x7F) {
        unint64_t v25 = sub_188A9CC(v24, __dst + 1);
      }
      else {
        unint64_t v25 = __dst + 2;
      }
      __dst = sub_1419B60(v23, v25, a3);
    }
  }
  uint64_t v26 = *(void *)(a1 + 8);
  if ((v26 & 1) == 0) {
    return __dst;
  }
  unint64_t v28 = v26 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v28 + 31) < 0)
  {
    unint64_t v29 = *(void **)(v28 + 8);
    uint64_t v30 = *(void *)(v28 + 16);
  }
  else
  {
    unint64_t v29 = (void *)(v28 + 8);
    LODWORD(v30) = *(unsigned __int8 *)(v28 + 31);
  }
  if (*a3 - (void)__dst >= (int)v30)
  {
    uint64_t v31 = (int)v30;
    memcpy(__dst, v29, (int)v30);
    __dst += v31;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v29, v30, __dst);
}

uint64_t sub_141AB38(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    int v4 = (uint64_t *)(v3 + 8);
  }
  else {
    int v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_1419F60(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(int *)(a1 + 48);
  uint64_t v9 = v2 + v8;
  uint64_t v10 = *(void *)(a1 + 56);
  if (v10) {
    int v11 = (uint64_t *)(v10 + 8);
  }
  else {
    int v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_1419F60(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  uint64_t v15 = *(int *)(a1 + 72);
  uint64_t v16 = v9 + v15;
  uint64_t v17 = *(void *)(a1 + 80);
  if (v17) {
    uint64_t v18 = (uint64_t *)(v17 + 8);
  }
  else {
    uint64_t v18 = 0;
  }
  if (v15)
  {
    uint64_t v19 = 8 * v15;
    do
    {
      uint64_t v20 = *v18++;
      uint64_t v21 = sub_1419F60(v20);
      v16 += v21 + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6);
      v19 -= 8;
    }
    while (v19);
  }
  uint64_t v22 = *(int *)(a1 + 96);
  uint64_t v23 = v16 + v22;
  uint64_t v24 = *(void *)(a1 + 104);
  if (v24) {
    unint64_t v25 = (uint64_t *)(v24 + 8);
  }
  else {
    unint64_t v25 = 0;
  }
  if (v22)
  {
    uint64_t v26 = 8 * v22;
    do
    {
      uint64_t v27 = *v25++;
      uint64_t v28 = sub_1419F60(v27);
      v23 += v28 + ((9 * (__clz(v28 | 1) ^ 0x1F) + 73) >> 6);
      v26 -= 8;
    }
    while (v26);
  }
  uint64_t v29 = *(void *)(a1 + 8);
  if (v29)
  {
    unint64_t v31 = v29 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v31 + 31) < 0) {
      uint64_t v32 = *(void *)(v31 + 16);
    }
    else {
      uint64_t v32 = *(unsigned __int8 *)(v31 + 31);
    }
    v23 += v32;
  }
  *(_DWORD *)(a1 + 112) = v23;
  return v23;
}

uint64_t sub_141ACD8()
{
  return 1;
}

void *sub_141ACE0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gemini.KeywordData");
}

uint64_t sub_141ACF0(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_16;
    }
  }
  else if (v4)
  {
    goto LABEL_16;
  }
  uint64_t v5 = (void ***)(a1 + 40);
  if (*(uint64_t **)(a1 + 40) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 48));
  }
  if (*(uint64_t **)(a1 + 56) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 56));
  }
  if (*(uint64_t **)(a1 + 64) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 64));
  }
  if ((uint64_t (***)())a1 != &off_2537E30)
  {
    uint64_t v6 = *(void *)(a1 + 72);
    if (v6)
    {
      sub_13F6EF0(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_16:
  sub_1889DA8(a1 + 24);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_141AE08(uint64_t a1)
{
  sub_141ACF0(a1);

  operator delete();
}

uint64_t sub_141AE40(uint64_t result)
{
  uint64_t v1 = result;
  *(_DWORD *)(result + 24) = 0;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 0x1F) == 0) {
    goto LABEL_8;
  }
  if ((v2 & 1) == 0)
  {
    if ((v2 & 2) == 0) {
      goto LABEL_4;
    }
LABEL_18:
    unint64_t v6 = *(void *)(result + 48) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v6 + 23) < 0)
    {
      **(unsigned char **)unint64_t v6 = 0;
      *(void *)(v6 + 8) = 0;
      if ((v2 & 4) != 0) {
        goto LABEL_22;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v6 = 0;
      *(unsigned char *)(v6 + 23) = 0;
      if ((v2 & 4) != 0) {
        goto LABEL_22;
      }
    }
LABEL_5:
    if ((v2 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_26;
  }
  unint64_t v5 = *(void *)(result + 40) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v5 + 23) < 0)
  {
    **(unsigned char **)unint64_t v5 = 0;
    *(void *)(v5 + 8) = 0;
    if ((v2 & 2) != 0) {
      goto LABEL_18;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v5 = 0;
    *(unsigned char *)(v5 + 23) = 0;
    if ((v2 & 2) != 0) {
      goto LABEL_18;
    }
  }
LABEL_4:
  if ((v2 & 4) == 0) {
    goto LABEL_5;
  }
LABEL_22:
  unint64_t v7 = *(void *)(result + 56) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v7 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v7 = 0;
    *(unsigned char *)(v7 + 23) = 0;
    if ((v2 & 8) != 0) {
      goto LABEL_26;
    }
LABEL_6:
    if ((v2 & 0x10) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  **(unsigned char **)unint64_t v7 = 0;
  *(void *)(v7 + 8) = 0;
  if ((v2 & 8) == 0) {
    goto LABEL_6;
  }
LABEL_26:
  unint64_t v8 = *(void *)(result + 64) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v8 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v8 = 0;
    *(unsigned char *)(v8 + 23) = 0;
    if ((v2 & 0x10) == 0) {
      goto LABEL_8;
    }
LABEL_7:
    uint64_t result = sub_13F6FC8(*(void *)(result + 72));
    goto LABEL_8;
  }
  **(unsigned char **)unint64_t v8 = 0;
  *(void *)(v8 + 8) = 0;
  if ((v2 & 0x10) != 0) {
    goto LABEL_7;
  }
LABEL_8:
  if ((v2 & 0xE0) != 0)
  {
    *(void *)(v1 + 80) = 0;
    *(_DWORD *)(v1 + 88) = 1;
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_141AF90(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)BOOL v50 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v50, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    unint64_t v8 = (unsigned __int8 *)(*(void *)v50 + 1);
    unsigned int v9 = **(unsigned char **)v50;
    if ((char)**(unsigned char **)v50 < 0)
    {
      int v10 = (char)*v8;
      unsigned int v11 = v9 + (v10 << 7);
      unsigned int v9 = v11 - 128;
      if (v10 < 0)
      {
        unint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v50, v11 - 128);
        unsigned int v9 = v12;
      }
      else
      {
        unint64_t v8 = (unsigned __int8 *)(*(void *)v50 + 2);
      }
    }
    *(void *)BOOL v50 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_80;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v13 = *(void *)(a1 + 8);
        uint64_t v14 = (uint64_t *)(v13 & 0xFFFFFFFFFFFFFFFCLL);
        if (v13) {
          uint64_t v14 = (uint64_t *)*v14;
        }
        uint64_t v15 = (void *)(a1 + 40);
        goto LABEL_51;
      case 2u:
        if (v9 != 18) {
          goto LABEL_80;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v16 = *(void *)(a1 + 8);
        uint64_t v14 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
        if (v16) {
          uint64_t v14 = (uint64_t *)*v14;
        }
        uint64_t v15 = (void *)(a1 + 48);
        goto LABEL_51;
      case 3u:
        if (v9 != 26) {
          goto LABEL_80;
        }
        *(_DWORD *)(a1 + 16) |= 0x10u;
        uint64_t v17 = *(void **)(a1 + 72);
        if (!v17)
        {
          uint64_t v18 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v18 = (void *)*v18;
          }
          uint64_t v17 = sub_1448DC4((uint64_t)v18);
          *(void *)(a1 + 72) = v17;
          unint64_t v8 = *(unsigned __int8 **)v50;
        }
        uint64_t v19 = sub_123B5A4(a3, (uint64_t)v17, v8);
        goto LABEL_52;
      case 4u:
        if (v9 != 34) {
          goto LABEL_80;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v20 = *(void *)(a1 + 8);
        uint64_t v14 = (uint64_t *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
        if (v20) {
          uint64_t v14 = (uint64_t *)*v14;
        }
        uint64_t v15 = (void *)(a1 + 56);
        goto LABEL_51;
      case 5u:
        if (v9 == 40)
        {
          uint64_t v21 = (uint64_t)(v8 - 1);
          while (1)
          {
            *(void *)BOOL v50 = v21 + 1;
            unint64_t v22 = *(unsigned __int8 *)(v21 + 1);
            uint64_t v23 = (char *)(v21 + 2);
            if (*(char *)(v21 + 1) < 0)
            {
              int v24 = *v23;
              int v25 = v22 + (v24 << 7);
              unint64_t v22 = (v25 - 128);
              if (v24 < 0)
              {
                *(void *)BOOL v50 = sub_188C138(v21 + 1, (v25 - 128));
                if (!*(void *)v50) {
                  goto LABEL_94;
                }
                unint64_t v22 = v28;
                goto LABEL_33;
              }
              uint64_t v23 = (char *)(v21 + 3);
            }
            *(void *)BOOL v50 = v23;
LABEL_33:
            if ((v22 - 1) > 1)
            {
              if (*v7) {
                uint64_t v29 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
              }
              else {
                uint64_t v29 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              }
              sub_188C020(5, v22, v29);
            }
            else
            {
              uint64_t v26 = *(unsigned int *)(a1 + 24);
              if (v26 == *(_DWORD *)(a1 + 28))
              {
                int v27 = v26 + 1;
                sub_188C80C((unsigned int *)(a1 + 24), v26 + 1);
                *(_DWORD *)(*(void *)(a1 + 32) + 4 * v26) = v22;
              }
              else
              {
                *(_DWORD *)(*(void *)(a1 + 32) + 4 * v26) = v22;
                int v27 = v26 + 1;
              }
              *(_DWORD *)(a1 + 24) = v27;
            }
            uint64_t v21 = *(void *)v50;
            if (*(void *)a3 <= *(void *)v50 || **(unsigned char **)v50 != 40) {
              goto LABEL_53;
            }
          }
        }
        if (v9 == 42)
        {
          *(void *)&long long v51 = a1 + 24;
          *((void *)&v51 + 1) = sub_13F4B1C;
          uint64_t v52 = a1 + 8;
          int v53 = 5;
          uint64_t v19 = (uint64_t)sub_1112E88((uint64_t)a3, (char *)v8, &v51);
          goto LABEL_52;
        }
LABEL_80:
        if (v9) {
          BOOL v47 = (v9 & 7) == 4;
        }
        else {
          BOOL v47 = 1;
        }
        if (!v47)
        {
          if (*v7)
          {
            uint64_t v48 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v48 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unint64_t v8 = *(unsigned __int8 **)v50;
          }
          uint64_t v19 = (uint64_t)sub_1885AC0(v9, v48, (char *)v8, a3);
LABEL_52:
          *(void *)BOOL v50 = v19;
          if (!v19) {
            goto LABEL_94;
          }
LABEL_53:
          if (sub_11947B8((uint64_t)a3, (char **)v50, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_94:
        }
          *(void *)BOOL v50 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v50;
      case 6u:
        if (v9 != 50) {
          goto LABEL_80;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v30 = *(void *)(a1 + 8);
        uint64_t v14 = (uint64_t *)(v30 & 0xFFFFFFFFFFFFFFFCLL);
        if (v30) {
          uint64_t v14 = (uint64_t *)*v14;
        }
        uint64_t v15 = (void *)(a1 + 64);
LABEL_51:
        unint64_t v31 = (std::string *)sub_1880F84(v15, v14);
        uint64_t v19 = (uint64_t)sub_188C244(v31, *(char **)v50, (uint64_t)a3);
        goto LABEL_52;
      case 7u:
        if (v9 != 56) {
          goto LABEL_80;
        }
        uint64_t v32 = (char *)(v8 + 1);
        unint64_t v33 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_59;
        }
        int v34 = *v32;
        int v35 = v33 + (v34 << 7);
        unint64_t v33 = (v35 - 128);
        if (v34 < 0)
        {
          *(void *)BOOL v50 = sub_188C138((uint64_t)v8, (v35 - 128));
          if (!*(void *)v50) {
            goto LABEL_94;
          }
          unint64_t v33 = v42;
        }
        else
        {
          uint64_t v32 = (char *)(v8 + 2);
LABEL_59:
          *(void *)BOOL v50 = v32;
        }
        if (sub_1369B04(v33))
        {
          *(_DWORD *)(a1 + 16) |= 0x80u;
          *(_DWORD *)(a1 + 88) = v33;
        }
        else
        {
          if (*v7) {
            uint64_t v49 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v49 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(7, v33, v49);
        }
        goto LABEL_53;
      case 8u:
        if (v9 != 64) {
          goto LABEL_80;
        }
        v5 |= 0x20u;
        uint64_t v36 = (char *)(v8 + 1);
        uint64_t v37 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_66;
        }
        int v38 = *v36;
        uint64_t v37 = v37 + (v38 << 7) - 128;
        if (v38 < 0)
        {
          uint64_t v43 = sub_188C138((uint64_t)v8, v37);
          *(void *)BOOL v50 = v43;
          *(unsigned char *)(a1 + 80) = v44 != 0;
          if (!v43) {
            goto LABEL_94;
          }
        }
        else
        {
          uint64_t v36 = (char *)(v8 + 2);
LABEL_66:
          *(void *)BOOL v50 = v36;
          *(unsigned char *)(a1 + 80) = v37 != 0;
        }
        goto LABEL_53;
      case 9u:
        if (v9 != 72) {
          goto LABEL_80;
        }
        v5 |= 0x40u;
        uint64_t v39 = (char *)(v8 + 1);
        int v40 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_71;
        }
        int v41 = *v39;
        int v40 = v40 + (v41 << 7) - 128;
        if (v41 < 0)
        {
          uint64_t v45 = sub_188C0D0((uint64_t)v8, v40);
          *(void *)BOOL v50 = v45;
          *(_DWORD *)(a1 + 84) = v46;
          if (!v45) {
            goto LABEL_94;
          }
        }
        else
        {
          uint64_t v39 = (char *)(v8 + 2);
LABEL_71:
          *(void *)BOOL v50 = v39;
          *(_DWORD *)(a1 + 84) = v40;
        }
        goto LABEL_53;
      default:
        goto LABEL_80;
    }
  }
}

unsigned char *sub_141B500(uint64_t a1, unsigned char *__dst, void *a3)
{
  char v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    char v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 0x10) == 0) {
        goto LABEL_4;
      }
      goto LABEL_24;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  char v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x10) == 0)
  {
LABEL_4:
    if ((v6 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_24:
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v13 = *(void *)(a1 + 72);
  unsigned char *v4 = 26;
  unsigned int v14 = *(_DWORD *)(v13 + 20);
  v4[1] = v14;
  if (v14 > 0x7F) {
    uint64_t v15 = sub_188A9CC(v14, v4 + 1);
  }
  else {
    uint64_t v15 = v4 + 2;
  }
  char v4 = sub_13F721C(v13, v15, a3);
  if ((v6 & 4) != 0) {
LABEL_5:
  }
    char v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL), v4);
LABEL_6:
  uint64_t v7 = *(unsigned int *)(a1 + 24);
  if ((int)v7 >= 1)
  {
    for (uint64_t i = 0; i != v7; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v9 = *(int *)(*(void *)(a1 + 32) + 4 * i);
      unsigned char *v4 = 40;
      v4[1] = v9;
      if (v9 > 0x7F)
      {
        v4[1] = v9 | 0x80;
        unint64_t v10 = v9 >> 7;
        v4[2] = v9 >> 7;
        v4 += 3;
        if (v9 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v11 = v10 >> 14;
            v10 >>= 7;
            *v4++ = v10;
          }
          while (v11);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  if ((v6 & 8) != 0) {
    char v4 = sub_117A0AC(a3, 6, (const void **)(*(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  if ((v6 & 0x80) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v12 = *(int *)(a1 + 88);
    unsigned char *v4 = 56;
    v4[1] = v12;
    if (v12 > 0x7F)
    {
      v4[1] = v12 | 0x80;
      unint64_t v16 = v12 >> 7;
      v4[2] = v12 >> 7;
      v4 += 3;
      if (v12 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v17 = v16 >> 14;
          v16 >>= 7;
          *v4++ = v16;
        }
        while (v17);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v18 = *(unsigned char *)(a1 + 80);
    unsigned char *v4 = 64;
    v4[1] = v18;
    v4 += 2;
  }
  if ((v6 & 0x40) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v19 = *(_DWORD *)(a1 + 84);
    unsigned char *v4 = 72;
    v4[1] = v19;
    if (v19 > 0x7F)
    {
      v4[1] = v19 | 0x80;
      unsigned int v20 = v19 >> 7;
      v4[2] = v19 >> 7;
      v4 += 3;
      if (v19 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v21 = v20 >> 14;
          v20 >>= 7;
          *v4++ = v20;
        }
        while (v21);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v22 = *(void *)(a1 + 8);
  if ((v22 & 1) == 0) {
    return v4;
  }
  unint64_t v24 = v22 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v24 + 31) < 0)
  {
    int v25 = *(void **)(v24 + 8);
    uint64_t v26 = *(void *)(v24 + 16);
  }
  else
  {
    int v25 = (void *)(v24 + 8);
    LODWORD(v26) = *(unsigned __int8 *)(v24 + 31);
  }
  if (*a3 - (void)v4 >= (int)v26)
  {
    uint64_t v27 = (int)v26;
    memcpy(v4, v25, (int)v26);
    v4 += v27;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v25, v26, v4);
}

uint64_t sub_141B884(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 24);
  if (v2)
  {
    int v3 = 0;
    uint64_t v4 = 0;
    do
    {
      int v5 = *(_DWORD *)(*(void *)(a1 + 32) + 4 * v3);
      if (v5 < 0) {
        uint64_t v6 = 10;
      }
      else {
        uint64_t v6 = (9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6;
      }
      v4 += v6;
      ++v3;
    }
    while (v2 != v3);
  }
  else
  {
    uint64_t v4 = 0;
  }
  uint64_t v7 = v4 + v2;
  char v8 = *(unsigned char *)(a1 + 16);
  if (!v8) {
    goto LABEL_25;
  }
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v15 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v16 = *(unsigned __int8 *)(v15 + 23);
    uint64_t v17 = *(void *)(v15 + 8);
    if ((v16 & 0x80u) == 0) {
      uint64_t v17 = v16;
    }
    v7 += v17 + ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((*(unsigned char *)(a1 + 16) & 2) == 0)
    {
LABEL_12:
      if ((*(unsigned char *)(a1 + 16) & 4) == 0) {
        goto LABEL_13;
      }
      goto LABEL_33;
    }
  }
  else if ((*(unsigned char *)(a1 + 16) & 2) == 0)
  {
    goto LABEL_12;
  }
  unint64_t v18 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v19 = *(unsigned __int8 *)(v18 + 23);
  uint64_t v20 = *(void *)(v18 + 8);
  if ((v19 & 0x80u) == 0) {
    uint64_t v20 = v19;
  }
  v7 += v20 + ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((*(unsigned char *)(a1 + 16) & 4) == 0)
  {
LABEL_13:
    if ((*(unsigned char *)(a1 + 16) & 8) == 0) {
      goto LABEL_14;
    }
LABEL_36:
    unint64_t v24 = *(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v25 = *(unsigned __int8 *)(v24 + 23);
    uint64_t v26 = *(void *)(v24 + 8);
    if ((v25 & 0x80u) == 0) {
      uint64_t v26 = v25;
    }
    v7 += v26 + ((9 * (__clz(v26 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((*(unsigned char *)(a1 + 16) & 0x10) == 0) {
      goto LABEL_16;
    }
    goto LABEL_15;
  }
LABEL_33:
  unint64_t v21 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v22 = *(unsigned __int8 *)(v21 + 23);
  uint64_t v23 = *(void *)(v21 + 8);
  if ((v22 & 0x80u) == 0) {
    uint64_t v23 = v22;
  }
  v7 += v23 + ((9 * (__clz(v23 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((*(unsigned char *)(a1 + 16) & 8) != 0) {
    goto LABEL_36;
  }
LABEL_14:
  if ((*(unsigned char *)(a1 + 16) & 0x10) != 0)
  {
LABEL_15:
    uint64_t v9 = sub_13F73A8(*(void *)(a1 + 72));
    v7 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_16:
  if ((v8 & 0x20) != 0) {
    v7 += 2;
  }
  if ((v8 & 0x40) != 0) {
    v7 += ((9 * (__clz(*(_DWORD *)(a1 + 84) | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  if (v8 < 0)
  {
    int v10 = *(_DWORD *)(a1 + 88);
    uint64_t v11 = ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if (v10 >= 0) {
      uint64_t v12 = v11;
    }
    else {
      uint64_t v12 = 11;
    }
    v7 += v12;
  }
LABEL_25:
  uint64_t v13 = *(void *)(a1 + 8);
  if (v13)
  {
    unint64_t v27 = v13 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v27 + 31) < 0) {
      uint64_t v28 = *(void *)(v27 + 16);
    }
    else {
      uint64_t v28 = *(unsigned __int8 *)(v27 + 31);
    }
    v7 += v28;
  }
  *(_DWORD *)(a1 + 20) = v7;
  return v7;
}

std::string *sub_141BAFC(std::string *result, uint64_t a2)
{
  int v3 = result;
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    int v5 = result + 1;
    uint64_t data_low = SLODWORD(result[1].__r_.__value_.__l.__data_);
    sub_188C80C((unsigned int *)&result[1], data_low + v4);
    std::string::size_type size = v3[1].__r_.__value_.__l.__size_;
    LODWORD(v5->__r_.__value_.__l.__data_) += *(_DWORD *)(a2 + 24);
    uint64_t result = (std::string *)memcpy((void *)(size + 4 * data_low), *(const void **)(a2 + 32), 4 * *(int *)(a2 + 24));
  }
  int v8 = *(_DWORD *)(a2 + 16);
  if ((_BYTE)v8)
  {
    if (v8)
    {
      int v10 = (long long *)(*(void *)(a2 + 40) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::size_type v11 = v3->__r_.__value_.__l.__size_;
      uint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        uint64_t v12 = (uint64_t *)*v12;
      }
      uint64_t result = sub_1881DF4((std::string **)&v3[1].__r_.__value_.__r.__words[2], v10, v12);
      if ((v8 & 2) == 0)
      {
LABEL_6:
        if ((v8 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_24;
      }
    }
    else if ((v8 & 2) == 0)
    {
      goto LABEL_6;
    }
    uint64_t v13 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    std::string::size_type v14 = v3->__r_.__value_.__l.__size_;
    unint64_t v15 = (uint64_t *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
    if (v14) {
      unint64_t v15 = (uint64_t *)*v15;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[2], v13, v15);
    if ((v8 & 4) == 0)
    {
LABEL_7:
      if ((v8 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_27;
    }
LABEL_24:
    uint64_t v16 = (long long *)(*(void *)(a2 + 56) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
    std::string::size_type v17 = v3->__r_.__value_.__l.__size_;
    unint64_t v18 = (uint64_t *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
    if (v17) {
      unint64_t v18 = (uint64_t *)*v18;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[2].__r_.__value_.__l.__size_, v16, v18);
    if ((v8 & 8) == 0)
    {
LABEL_8:
      if ((v8 & 0x10) == 0) {
        goto LABEL_9;
      }
      goto LABEL_30;
    }
LABEL_27:
    uint64_t v19 = (long long *)(*(void *)(a2 + 64) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 8u;
    std::string::size_type v20 = v3->__r_.__value_.__l.__size_;
    unint64_t v21 = (uint64_t *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
    if (v20) {
      unint64_t v21 = (uint64_t *)*v21;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[2].__r_.__value_.__r.__words[2], v19, v21);
    if ((v8 & 0x10) == 0)
    {
LABEL_9:
      if ((v8 & 0x20) == 0) {
        goto LABEL_10;
      }
      goto LABEL_38;
    }
LABEL_30:
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x10u;
    std::string::pointer data = (std::string *)v3[3].__r_.__value_.__l.__data_;
    if (!data)
    {
      std::string::size_type v23 = v3->__r_.__value_.__l.__size_;
      unint64_t v24 = (void *)(v23 & 0xFFFFFFFFFFFFFFFCLL);
      if (v23) {
        unint64_t v24 = (void *)*v24;
      }
      std::string::pointer data = (std::string *)sub_1448DC4((uint64_t)v24);
      v3[3].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
    }
    if (*(void *)(a2 + 72)) {
      uint64_t v25 = *(uint64_t (****)(uint64_t))(a2 + 72);
    }
    else {
      uint64_t v25 = &off_25373B0;
    }
    uint64_t result = sub_13F746C(data, (uint64_t)v25);
    if ((v8 & 0x20) == 0)
    {
LABEL_10:
      if ((v8 & 0x40) == 0) {
        goto LABEL_11;
      }
      goto LABEL_39;
    }
LABEL_38:
    v3[3].__r_.__value_.__s.__data_[8] = *(unsigned char *)(a2 + 80);
    if ((v8 & 0x40) == 0)
    {
LABEL_11:
      if ((v8 & 0x80) == 0)
      {
LABEL_13:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v8;
        goto LABEL_14;
      }
LABEL_12:
      LODWORD(v3[3].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 88);
      goto LABEL_13;
    }
LABEL_39:
    HIDWORD(v3[3].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 84);
    if ((v8 & 0x80) == 0) {
      goto LABEL_13;
    }
    goto LABEL_12;
  }
LABEL_14:
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_141BD18()
{
  return 1;
}

void *sub_141BD20@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gemini.AppClipLink");
}

uint64_t sub_141BD30(uint64_t a1)
{
  int v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_9;
    }
  }
  else if (v4)
  {
    goto LABEL_9;
  }
  int v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_9:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_141BDE8(uint64_t a1)
{
  sub_141BD30(a1);

  operator delete();
}

uint64_t sub_141BE20(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0) {
    goto LABEL_11;
  }
  if ((v1 & 1) == 0)
  {
LABEL_5:
    if ((v1 & 2) != 0) {
      goto LABEL_6;
    }
    goto LABEL_11;
  }
  unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v2 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v2 = 0;
    *(unsigned char *)(v2 + 23) = 0;
    goto LABEL_5;
  }
  **(unsigned char **)unint64_t v2 = 0;
  *(void *)(v2 + 8) = 0;
  if ((v1 & 2) != 0)
  {
LABEL_6:
    unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)unint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
LABEL_11:
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v5) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_141BE9C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)std::string::size_type v20 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
    return *(void *)v20;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = (char *)(*(void *)v20 + 1);
    unsigned int v8 = **(unsigned char **)v20;
    if ((char)**(unsigned char **)v20 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180(*(uint64_t *)v20, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (char *)(*(void *)v20 + 2);
      }
    }
    *(void *)std::string::size_type v20 = v7;
    if (v8 >> 3 == 2)
    {
      if (v8 == 18)
      {
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v15 = *(void *)(a1 + 8);
        uint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          uint64_t v16 = (uint64_t *)*v16;
        }
        std::string::size_type v17 = (void *)(a1 + 32);
        goto LABEL_27;
      }
    }
    else if (v8 >> 3 == 1 && v8 == 10)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v18 = *(void *)(a1 + 8);
      uint64_t v16 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
      if (v18) {
        uint64_t v16 = (uint64_t *)*v16;
      }
      std::string::size_type v17 = (void *)(a1 + 24);
LABEL_27:
      uint64_t v19 = (std::string *)sub_1880F84(v17, v16);
      std::string::size_type v14 = (void *)sub_188C244(v19, *(char **)v20, (uint64_t)a3);
      goto LABEL_28;
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = *(char **)v20;
    }
    std::string::size_type v14 = sub_1885AC0(v8, v13, v7, a3);
LABEL_28:
    *(void *)std::string::size_type v20 = v14;
    if (!v14) {
      goto LABEL_34;
    }
    if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
      return *(void *)v20;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v20;
  }
LABEL_34:
  *(void *)std::string::size_type v20 = 0;
  return *(void *)v20;
}

char *sub_141C044(uint64_t a1, char *__dst, void *a3)
{
  int v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    int v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 2) != 0) {
    int v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v9 + 31) < 0)
  {
    unsigned int v10 = *(void **)(v9 + 8);
    uint64_t v11 = *(void *)(v9 + 16);
  }
  else
  {
    unsigned int v10 = (void *)(v9 + 8);
    LODWORD(v11) = *(unsigned __int8 *)(v9 + 31);
  }
  if (*a3 - (void)v4 >= (int)v11)
  {
    uint64_t v12 = (int)v11;
    memcpy(v4, v10, (int)v11);
    v4 += v12;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v10, v11, v4);
}

uint64_t sub_141C130(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_12;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
  uint64_t v5 = *(void *)(v3 + 8);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = v4;
  }
  uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    unint64_t v6 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    v2 += v12;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_141C20C()
{
  return 1;
}

void *sub_141C214@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gemini.DynamicModule");
}

void *sub_141C224(void *a1)
{
  unint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_141C298(void *a1)
{
  sub_141C224(a1);

  operator delete();
}

uint64_t sub_141C2D0(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 0xF) != 0)
  {
    *(void *)(a1 + 24) = 0;
    *(void *)(a1 + 32) = 0;
    *(void *)(a1 + 40) = 0;
    *(_DWORD *)(a1 + 48) = 1;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_141C300(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v30 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v30, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = v30 + 1;
    unsigned int v9 = *v30;
    if (*v30 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v30, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v30 + 2;
      }
    }
    uint64_t v30 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_28;
        }
        v5 |= 1u;
        uint64_t v12 = v8 + 1;
        uint64_t v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        uint64_t v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          uint64_t v12 = v8 + 2;
LABEL_13:
          uint64_t v30 = v12;
          *(void *)(a1 + 24) = v13;
          goto LABEL_35;
        }
        unint64_t v24 = (char *)sub_188C138((uint64_t)v8, v13);
        uint64_t v30 = v24;
        *(void *)(a1 + 24) = v25;
        if (v24) {
          goto LABEL_35;
        }
        goto LABEL_50;
      case 2u:
        if (v9 != 16) {
          goto LABEL_28;
        }
        uint64_t v15 = v8 + 1;
        unint64_t v16 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_18;
        }
        int v17 = *v15;
        int v18 = v16 + (v17 << 7);
        unint64_t v16 = (v18 - 128);
        if (v17 < 0)
        {
          uint64_t v30 = (char *)sub_188C138((uint64_t)v8, (v18 - 128));
          if (!v30) {
            goto LABEL_50;
          }
          unint64_t v16 = v26;
        }
        else
        {
          uint64_t v15 = v8 + 2;
LABEL_18:
          uint64_t v30 = v15;
        }
        if ((v16 - 1) > 0xD)
        {
          if (*v7) {
            uint64_t v29 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v29 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(2, v16, v29);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 8u;
          *(_DWORD *)(a1 + 48) = v16;
        }
        goto LABEL_35;
      case 3u:
        if (v9 != 25) {
          goto LABEL_28;
        }
        v5 |= 2u;
        *(void *)(a1 + 32) = *(void *)v8;
        uint64_t v30 = v8 + 8;
        goto LABEL_35;
      case 4u:
        if (v9 != 32) {
          goto LABEL_28;
        }
        v5 |= 4u;
        uint64_t v19 = v8 + 1;
        uint64_t v20 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_27;
        }
        int v21 = *v19;
        uint64_t v20 = v20 + (v21 << 7) - 128;
        if (v21 < 0)
        {
          unint64_t v27 = (char *)sub_188C138((uint64_t)v8, v20);
          uint64_t v30 = v27;
          *(void *)(a1 + 40) = v28;
          if (!v27) {
            goto LABEL_50;
          }
        }
        else
        {
          uint64_t v19 = v8 + 2;
LABEL_27:
          uint64_t v30 = v19;
          *(void *)(a1 + 40) = v20;
        }
        goto LABEL_35;
      default:
LABEL_28:
        if (v9) {
          BOOL v22 = (v9 & 7) == 4;
        }
        else {
          BOOL v22 = 1;
        }
        if (!v22)
        {
          if (*v7)
          {
            std::string::size_type v23 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            std::string::size_type v23 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = v30;
          }
          uint64_t v30 = (char *)sub_1885AC0(v9, v23, v8, a3);
          if (!v30) {
            goto LABEL_50;
          }
LABEL_35:
          if (sub_11947B8((uint64_t)a3, &v30, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_50:
        }
          uint64_t v30 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v30;
    }
  }
}

unsigned char *sub_141C5E4(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(void *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 48);
    unsigned char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v13 = *(void *)(a1 + 32);
    unsigned char *v4 = 25;
    *(void *)(v4 + 1) = v13;
    v4 += 9;
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v14 = *(void *)(a1 + 40);
    unsigned char *v4 = 32;
    v4[1] = v14;
    if (v14 > 0x7F)
    {
      v4[1] = v14 | 0x80;
      unint64_t v15 = v14 >> 7;
      v4[2] = v14 >> 7;
      v4 += 3;
      if (v14 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v16 = v15 >> 14;
          v15 >>= 7;
          *v4++ = v15;
        }
        while (v16);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v17 = *(void *)(a1 + 8);
  if ((v17 & 1) == 0) {
    return v4;
  }
  unint64_t v19 = v17 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v19 + 31) < 0)
  {
    uint64_t v20 = *(void **)(v19 + 8);
    uint64_t v21 = *(void *)(v19 + 16);
  }
  else
  {
    uint64_t v20 = (void *)(v19 + 8);
    LODWORD(v21) = *(unsigned __int8 *)(v19 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v21)
  {
    uint64_t v22 = (int)v21;
    memcpy(v4, v20, (int)v21);
    v4 += v22;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v20, v21, v4);
}

unint64_t sub_141C83C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 0xF) != 0)
  {
    if (v1) {
      unint64_t v2 = ((9 * (__clz(*(void *)(a1 + 24) | 1) ^ 0x3F) + 73) >> 6) + 1;
    }
    else {
      unint64_t v2 = 0;
    }
    if ((v1 & 2) != 0) {
      v2 += 9;
    }
    if ((v1 & 4) != 0) {
      v2 += ((9 * (__clz(*(void *)(a1 + 40) | 1) ^ 0x3F) + 73) >> 6) + 1;
    }
    if ((v1 & 8) != 0)
    {
      int v3 = *(_DWORD *)(a1 + 48);
      uint64_t v4 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if (v3 >= 0) {
        uint64_t v5 = v4;
      }
      else {
        uint64_t v5 = 11;
      }
      v2 += v5;
    }
  }
  else
  {
    unint64_t v2 = 0;
  }
  uint64_t v6 = *(void *)(a1 + 8);
  if (v6)
  {
    unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v8 + 31) < 0) {
      uint64_t v9 = *(void *)(v8 + 16);
    }
    else {
      uint64_t v9 = *(unsigned __int8 *)(v8 + 31);
    }
    v2 += v9;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_141C918(std::string *result, uint64_t a2)
{
  int v2 = *(_DWORD *)(a2 + 16);
  if ((v2 & 0xF) == 0) {
    goto LABEL_8;
  }
  if (v2)
  {
    result[1].__r_.__value_.__r.__words[0] = *(void *)(a2 + 24);
    if ((v2 & 2) == 0)
    {
LABEL_4:
      if ((v2 & 4) == 0) {
        goto LABEL_5;
      }
LABEL_12:
      result[1].__r_.__value_.__r.__words[2] = *(void *)(a2 + 40);
      if ((v2 & 8) == 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
  }
  else if ((v2 & 2) == 0)
  {
    goto LABEL_4;
  }
  result[1].__r_.__value_.__l.__size_ = *(void *)(a2 + 32);
  if ((v2 & 4) != 0) {
    goto LABEL_12;
  }
LABEL_5:
  if ((v2 & 8) != 0) {
LABEL_6:
  }
    LODWORD(result[2].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 48);
LABEL_7:
  LODWORD(result->__r_.__value_.__r.__words[2]) |= v2;
LABEL_8:
  uint64_t v3 = *(void *)(a2 + 8);
  if (v3) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v3 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_141C98C()
{
  return 1;
}

void *sub_141C994@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gemini.Indoor.IndoorFeature");
}

uint64_t sub_141C9A4(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_9;
    }
  }
  else if (v4)
  {
    goto LABEL_9;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_9:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_141CA5C(uint64_t a1)
{
  sub_141C9A4(a1);

  operator delete();
}

uint64_t sub_141CA94(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0) {
    goto LABEL_11;
  }
  if ((v1 & 1) == 0)
  {
LABEL_5:
    if ((v1 & 2) != 0) {
      goto LABEL_6;
    }
    goto LABEL_11;
  }
  unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v2 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v2 = 0;
    *(unsigned char *)(v2 + 23) = 0;
    goto LABEL_5;
  }
  **(unsigned char **)unint64_t v2 = 0;
  *(void *)(v2 + 8) = 0;
  if ((v1 & 2) != 0)
  {
LABEL_6:
    unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)unint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
LABEL_11:
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v5) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_141CB10(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v20 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
    return *(void *)v20;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    unint64_t v7 = (char *)(*(void *)v20 + 1);
    unsigned int v8 = **(unsigned char **)v20;
    if ((char)**(unsigned char **)v20 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        unint64_t v7 = (char *)sub_188C180(*(uint64_t *)v20, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        unint64_t v7 = (char *)(*(void *)v20 + 2);
      }
    }
    *(void *)uint64_t v20 = v7;
    if (v8 >> 3 == 2)
    {
      if (v8 == 18)
      {
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v15 = *(void *)(a1 + 8);
        unint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          unint64_t v16 = (uint64_t *)*v16;
        }
        uint64_t v17 = (void *)(a1 + 32);
        goto LABEL_27;
      }
    }
    else if (v8 >> 3 == 1 && v8 == 10)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v18 = *(void *)(a1 + 8);
      unint64_t v16 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
      if (v18) {
        unint64_t v16 = (uint64_t *)*v16;
      }
      uint64_t v17 = (void *)(a1 + 24);
LABEL_27:
      unint64_t v19 = (std::string *)sub_1880F84(v17, v16);
      unint64_t v14 = (void *)sub_188C244(v19, *(char **)v20, (uint64_t)a3);
      goto LABEL_28;
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unint64_t v7 = *(char **)v20;
    }
    unint64_t v14 = sub_1885AC0(v8, v13, v7, a3);
LABEL_28:
    *(void *)uint64_t v20 = v14;
    if (!v14) {
      goto LABEL_34;
    }
    if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
      return *(void *)v20;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v20;
  }
LABEL_34:
  *(void *)uint64_t v20 = 0;
  return *(void *)v20;
}

char *sub_141CCB8(uint64_t a1, char *__dst, void *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 2) != 0) {
    uint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v9 + 31) < 0)
  {
    unsigned int v10 = *(void **)(v9 + 8);
    uint64_t v11 = *(void *)(v9 + 16);
  }
  else
  {
    unsigned int v10 = (void *)(v9 + 8);
    LODWORD(v11) = *(unsigned __int8 *)(v9 + 31);
  }
  if (*a3 - (void)v4 >= (int)v11)
  {
    uint64_t v12 = (int)v11;
    memcpy(v4, v10, (int)v11);
    v4 += v12;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v10, v11, v4);
}

uint64_t sub_141CDA4(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_12;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
  uint64_t v5 = *(void *)(v3 + 8);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = v4;
  }
  uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    unint64_t v6 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    v2 += v12;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_141CE80()
{
  return 1;
}

void *sub_141CE88@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gemini.Indoor.IndoorVersion");
}

uint64_t sub_141CE98(uint64_t a1)
{
  unint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_141CF60((uint64_t (***)())a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  sub_14902FC((void *)(a1 + 136));
  sub_14902FC((void *)(a1 + 112));
  sub_14902FC((void *)(a1 + 88));
  sub_12C1DB8((void *)(a1 + 64));
  sub_12C1DB8((void *)(a1 + 40));
  sub_1889DA8(a1 + 24);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

uint64_t (***sub_141CF60(uint64_t (***result)()))()
{
  if (result != &off_2537F18)
  {
    int v1 = result;
    if (result[20])
    {
      sub_15B0994();
      operator delete();
    }
    uint64_t v2 = result[21];
    if (v2)
    {
      sub_141C224(v2);
      operator delete();
    }
    unint64_t v3 = v1[22];
    if (v3)
    {
      sub_141C224(v3);
      operator delete();
    }
    uint64_t v4 = (uint64_t)v1[23];
    if (v4)
    {
      sub_141C9A4(v4);
      operator delete();
    }
    uint64_t result = (uint64_t (***)())v1[24];
    if (result)
    {
      sub_14307A4(result);
      operator delete();
    }
  }
  return result;
}

void sub_141D04C(uint64_t a1)
{
  sub_141CE98(a1);

  operator delete();
}

uint64_t sub_141D084(uint64_t result)
{
  uint64_t v1 = result;
  *(_DWORD *)(result + 24) = 0;
  uint64_t v2 = *(unsigned int *)(result + 48);
  if ((int)v2 >= 1)
  {
    unint64_t v3 = (uint64_t *)(*(void *)(result + 56) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_15B2C80(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 48) = 0;
  }
  uint64_t v5 = *(unsigned int *)(v1 + 72);
  if ((int)v5 >= 1)
  {
    unint64_t v6 = (uint64_t *)(*(void *)(v1 + 80) + 8);
    do
    {
      uint64_t v7 = *v6++;
      uint64_t result = sub_15B2C80(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(v1 + 72) = 0;
  }
  uint64_t v8 = *(unsigned int *)(v1 + 96);
  if ((int)v8 >= 1)
  {
    uint64_t v9 = (uint64_t *)(*(void *)(v1 + 104) + 8);
    do
    {
      uint64_t v10 = *v9++;
      uint64_t result = sub_141C2D0(v10);
      --v8;
    }
    while (v8);
    *(_DWORD *)(v1 + 96) = 0;
  }
  uint64_t v11 = *(unsigned int *)(v1 + 120);
  if ((int)v11 >= 1)
  {
    uint64_t v12 = (uint64_t *)(*(void *)(v1 + 128) + 8);
    do
    {
      uint64_t v13 = *v12++;
      uint64_t result = sub_141C2D0(v13);
      --v11;
    }
    while (v11);
    *(_DWORD *)(v1 + 120) = 0;
  }
  uint64_t v14 = *(unsigned int *)(v1 + 144);
  if ((int)v14 >= 1)
  {
    uint64_t v15 = (uint64_t *)(*(void *)(v1 + 152) + 8);
    do
    {
      uint64_t v16 = *v15++;
      uint64_t result = sub_141C2D0(v16);
      --v14;
    }
    while (v14);
    *(_DWORD *)(v1 + 144) = 0;
  }
  int v17 = *(_DWORD *)(v1 + 16);
  if ((v17 & 0x1F) != 0)
  {
    if (v17)
    {
      uint64_t result = (uint64_t)sub_15B09D0(*(void *)(v1 + 160));
      if ((v17 & 2) == 0)
      {
LABEL_24:
        if ((v17 & 4) == 0) {
          goto LABEL_25;
        }
        goto LABEL_30;
      }
    }
    else if ((v17 & 2) == 0)
    {
      goto LABEL_24;
    }
    uint64_t result = sub_141C2D0(*(void *)(v1 + 168));
    if ((v17 & 4) == 0)
    {
LABEL_25:
      if ((v17 & 8) == 0) {
        goto LABEL_26;
      }
      goto LABEL_31;
    }
LABEL_30:
    uint64_t result = sub_141C2D0(*(void *)(v1 + 176));
    if ((v17 & 8) == 0)
    {
LABEL_26:
      if ((v17 & 0x10) == 0) {
        goto LABEL_34;
      }
      goto LABEL_32;
    }
LABEL_31:
    uint64_t result = sub_141CA94(*(void *)(v1 + 184));
    if ((v17 & 0x10) == 0) {
      goto LABEL_34;
    }
LABEL_32:
    uint64_t v18 = *(void *)(v1 + 192);
    char v19 = *(unsigned char *)(v18 + 8);
    uint64_t result = v18 + 8;
    *(_DWORD *)(result + 16) = 0;
    *(_DWORD *)(result + 8) = 0;
    if (v19) {
      uint64_t result = sub_188B4AC((uint64_t *)result);
    }
  }
LABEL_34:
  if ((v17 & 0xE0) != 0)
  {
    *(void *)(v1 + 200) = 0;
    *(void *)(v1 + 208) = 0;
    *(void *)(v1 + 216) = 0;
  }
  if ((v17 & 0xFF00) != 0)
  {
    *(void *)(v1 + 256) = 0;
    *(_OWORD *)(v1 + 224) = 0u;
    *(_OWORD *)(v1 + 240) = 0u;
  }
  if ((v17 & 0x30000) != 0)
  {
    *(void *)(v1 + 264) = 0;
    *(_DWORD *)(v1 + 272) = 1;
  }
  char v21 = *(unsigned char *)(v1 + 8);
  uint64_t v20 = v1 + 8;
  *(_DWORD *)(v20 + 8) = 0;
  if (v21)
  {
    return sub_188B4AC((uint64_t *)v20);
  }
  return result;
}

uint64_t sub_141D24C(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 16) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_141D264(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v130 = a2;
  int v5 = 0;
  if ((sub_11947B8((uint64_t)a3, &v130, a3[11].i32[1]) & 1) == 0)
  {
    int v129 = (uint64_t *)(a1 + 136);
    uint64_t v127 = (uint64_t *)(a1 + 8);
    uint64_t v128 = (uint64_t *)(a1 + 112);
    while (1)
    {
      uint64_t v7 = v130 + 1;
      unsigned int v8 = *v130;
      if (*v130 < 0)
      {
        unsigned int v9 = v8 + (*v7 << 7);
        unsigned int v8 = v9 - 128;
        if (*v7 < 0)
        {
          uint64_t v7 = (char *)sub_188C180((uint64_t)v130, v9 - 128);
          unsigned int v8 = v10;
        }
        else
        {
          uint64_t v7 = v130 + 2;
        }
      }
      uint64_t v130 = v7;
      switch(v8 >> 3)
      {
        case 1u:
          if (v8 != 8) {
            goto LABEL_198;
          }
          v5 |= 0x20u;
          uint64_t v11 = v7 + 1;
          uint64_t v12 = *v7;
          if ((*v7 & 0x80000000) == 0) {
            goto LABEL_13;
          }
          int v13 = *v11;
          uint64_t v12 = v12 + (v13 << 7) - 128;
          if ((v13 & 0x80000000) == 0)
          {
            uint64_t v11 = v7 + 2;
LABEL_13:
            uint64_t v130 = v11;
            *(void *)(a1 + 200) = v12;
            goto LABEL_206;
          }
          uint64_t v99 = (char *)sub_188C138((uint64_t)v7, v12);
          uint64_t v130 = v99;
          *(void *)(a1 + 200) = v100;
          if (!v99) {
            goto LABEL_215;
          }
          goto LABEL_206;
        case 2u:
          if (v8 != 16) {
            goto LABEL_198;
          }
          v5 |= 0x40u;
          uint64_t v14 = v7 + 1;
          uint64_t v15 = *v7;
          if ((*v7 & 0x80000000) == 0) {
            goto LABEL_18;
          }
          int v16 = *v14;
          uint64_t v15 = v15 + (v16 << 7) - 128;
          if (v16 < 0)
          {
            uint64_t v101 = (char *)sub_188C138((uint64_t)v7, v15);
            uint64_t v130 = v101;
            *(void *)(a1 + 208) = v102;
            if (!v101) {
              goto LABEL_215;
            }
          }
          else
          {
            uint64_t v14 = v7 + 2;
LABEL_18:
            uint64_t v130 = v14;
            *(void *)(a1 + 208) = v15;
          }
          goto LABEL_206;
        case 3u:
          if (v8 == 24)
          {
            int v17 = v7 - 1;
            while (1)
            {
              uint64_t v130 = v17 + 1;
              uint64_t v18 = v17[1];
              if (v17[1] < 0)
              {
                int v19 = v18 + (v17[2] << 7);
                uint64_t v18 = (v19 - 128);
                if (v17[2] < 0)
                {
                  int v17 = (char *)sub_188C138((uint64_t)(v17 + 1), (v19 - 128));
                  uint64_t v18 = v20;
                }
                else
                {
                  v17 += 3;
                }
              }
              else
              {
                v17 += 2;
              }
              uint64_t v130 = v17;
              uint64_t v21 = *(unsigned int *)(a1 + 24);
              if (v21 == *(_DWORD *)(a1 + 28))
              {
                int v22 = v21 + 1;
                sub_188CA54((unsigned int *)(a1 + 24), v21 + 1);
                *(void *)(*(void *)(a1 + 32) + 8 * v21) = v18;
                int v17 = v130;
              }
              else
              {
                *(void *)(*(void *)(a1 + 32) + 8 * v21) = v18;
                int v22 = v21 + 1;
              }
              *(_DWORD *)(a1 + 24) = v22;
              if (!v17) {
                goto LABEL_215;
              }
              if (*(void *)a3 <= (unint64_t)v17 || *v17 != 24) {
                goto LABEL_206;
              }
            }
          }
          if (v8 == 26)
          {
            uint64_t v52 = (char *)sub_188C2EC((unsigned int *)(a1 + 24), (unsigned __int8 *)v7, (uint64_t)a3);
          }
          else
          {
LABEL_198:
            if (v8) {
              BOOL v124 = (v8 & 7) == 4;
            }
            else {
              BOOL v124 = 1;
            }
            if (v124)
            {
              if (v7)
              {
                a3[10].i32[0] = v8 - 1;
                goto LABEL_2;
              }
LABEL_215:
              uint64_t v130 = 0;
              goto LABEL_2;
            }
            if (*v127)
            {
              uint64_t v125 = (std::string *)((*v127 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              uint64_t v125 = (std::string *)sub_188DBD8(v127);
              uint64_t v7 = v130;
            }
            uint64_t v52 = (char *)sub_1885AC0(v8, v125, v7, a3);
          }
LABEL_205:
          uint64_t v130 = v52;
          if (!v52) {
            goto LABEL_215;
          }
LABEL_206:
          if (sub_11947B8((uint64_t)a3, &v130, a3[11].i32[1])) {
            goto LABEL_2;
          }
          break;
        case 4u:
          if (v8 != 32) {
            goto LABEL_198;
          }
          v5 |= 0x80u;
          std::string::size_type v23 = v7 + 1;
          uint64_t v24 = *v7;
          if ((*v7 & 0x80000000) == 0) {
            goto LABEL_37;
          }
          int v25 = *v23;
          uint64_t v24 = v24 + (v25 << 7) - 128;
          if (v25 < 0)
          {
            uint64_t v103 = (char *)sub_188C138((uint64_t)v7, v24);
            uint64_t v130 = v103;
            *(void *)(a1 + 216) = v104;
            if (!v103) {
              goto LABEL_215;
            }
          }
          else
          {
            std::string::size_type v23 = v7 + 2;
LABEL_37:
            uint64_t v130 = v23;
            *(void *)(a1 + 216) = v24;
          }
          goto LABEL_206;
        case 5u:
          if (v8 != 40) {
            goto LABEL_198;
          }
          v5 |= 0x400u;
          unint64_t v27 = v7 + 1;
          LODWORD(v26) = *v7;
          if ((v26 & 0x80) == 0) {
            goto LABEL_42;
          }
          int v28 = *v27;
          uint64_t v26 = v26 + (v28 << 7) - 128;
          if (v28 < 0)
          {
            int v105 = (char *)sub_188C138((uint64_t)v7, v26);
            uint64_t v130 = v105;
            *(_DWORD *)(a1 + 240) = v106;
            if (!v105) {
              goto LABEL_215;
            }
          }
          else
          {
            unint64_t v27 = v7 + 2;
LABEL_42:
            uint64_t v130 = v27;
            *(_DWORD *)(a1 + 240) = v26;
          }
          goto LABEL_206;
        case 6u:
          if (v8 != 48) {
            goto LABEL_198;
          }
          v5 |= 0x100u;
          uint64_t v29 = v7 + 1;
          uint64_t v30 = *v7;
          if ((*v7 & 0x80000000) == 0) {
            goto LABEL_47;
          }
          int v31 = *v29;
          uint64_t v30 = v30 + (v31 << 7) - 128;
          if (v31 < 0)
          {
            int v107 = (char *)sub_188C138((uint64_t)v7, v30);
            uint64_t v130 = v107;
            *(void *)(a1 + 224) = v108;
            if (!v107) {
              goto LABEL_215;
            }
          }
          else
          {
            uint64_t v29 = v7 + 2;
LABEL_47:
            uint64_t v130 = v29;
            *(void *)(a1 + 224) = v30;
          }
          goto LABEL_206;
        case 7u:
          if (v8 != 56) {
            goto LABEL_198;
          }
          v5 |= 0x200u;
          uint64_t v32 = v7 + 1;
          uint64_t v33 = *v7;
          if ((*v7 & 0x80000000) == 0) {
            goto LABEL_52;
          }
          int v34 = *v32;
          uint64_t v33 = v33 + (v34 << 7) - 128;
          if (v34 < 0)
          {
            unint64_t v109 = (char *)sub_188C138((uint64_t)v7, v33);
            uint64_t v130 = v109;
            *(void *)(a1 + 232) = v110;
            if (!v109) {
              goto LABEL_215;
            }
          }
          else
          {
            uint64_t v32 = v7 + 2;
LABEL_52:
            uint64_t v130 = v32;
            *(void *)(a1 + 232) = v33;
          }
          goto LABEL_206;
        case 0x15u:
          if (v8 != 168) {
            goto LABEL_198;
          }
          v5 |= 0x800u;
          int v35 = v7 + 1;
          uint64_t v36 = *v7;
          if ((*v7 & 0x80000000) == 0) {
            goto LABEL_57;
          }
          int v37 = *v35;
          uint64_t v36 = v36 + (v37 << 7) - 128;
          if (v37 < 0)
          {
            uint64_t v111 = (char *)sub_188C138((uint64_t)v7, v36);
            uint64_t v130 = v111;
            *(unsigned char *)(a1 + 244) = v112 != 0;
            if (!v111) {
              goto LABEL_215;
            }
          }
          else
          {
            int v35 = v7 + 2;
LABEL_57:
            uint64_t v130 = v35;
            *(unsigned char *)(a1 + 244) = v36 != 0;
          }
          goto LABEL_206;
        case 0x16u:
          if (v8 != 178) {
            goto LABEL_198;
          }
          int v38 = v7 - 2;
          while (1)
          {
            uint64_t v39 = (unsigned __int8 *)(v38 + 2);
            uint64_t v130 = v38 + 2;
            int v40 = *(_DWORD **)(a1 + 56);
            if (v40 && (uint64_t v41 = *(int *)(a1 + 48), (int)v41 < *v40))
            {
              *(_DWORD *)(a1 + 48) = v41 + 1;
              uint64_t v42 = *(void *)&v40[2 * v41 + 2];
            }
            else
            {
              uint64_t v43 = sub_15C1B30(*(void *)(a1 + 40));
              uint64_t v42 = sub_188CDC8(a1 + 40, (uint64_t)v43);
              uint64_t v39 = (unsigned __int8 *)v130;
            }
            int v38 = (char *)sub_125CF74(a3, v42, v39);
            uint64_t v130 = v38;
            if (!v38) {
              goto LABEL_215;
            }
            if (*(void *)a3 <= (unint64_t)v38 || *(_WORD *)v38 != 434) {
              goto LABEL_206;
            }
          }
        case 0x17u:
          if (v8 != 186) {
            goto LABEL_198;
          }
          uint64_t v44 = v7 - 2;
          while (1)
          {
            uint64_t v45 = (unsigned __int8 *)(v44 + 2);
            uint64_t v130 = v44 + 2;
            int v46 = *(_DWORD **)(a1 + 80);
            if (v46 && (uint64_t v47 = *(int *)(a1 + 72), (int)v47 < *v46))
            {
              *(_DWORD *)(a1 + 72) = v47 + 1;
              uint64_t v48 = *(void *)&v46[2 * v47 + 2];
            }
            else
            {
              uint64_t v49 = sub_15C1B30(*(void *)(a1 + 64));
              uint64_t v48 = sub_188CDC8(a1 + 64, (uint64_t)v49);
              uint64_t v45 = (unsigned __int8 *)v130;
            }
            uint64_t v44 = (char *)sub_125CF74(a3, v48, v45);
            uint64_t v130 = v44;
            if (!v44) {
              goto LABEL_215;
            }
            if (*(void *)a3 <= (unint64_t)v44 || *(_WORD *)v44 != 442) {
              goto LABEL_206;
            }
          }
        case 0x18u:
          if (v8 != 194) {
            goto LABEL_198;
          }
          *(_DWORD *)(a1 + 16) |= 1u;
          uint64_t v50 = *(void *)(a1 + 160);
          if (!v50)
          {
            long long v51 = (void *)(*v127 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v127) {
              long long v51 = (void *)*v51;
            }
            uint64_t v50 = sub_15C1918((uint64_t)v51);
            *(void *)(a1 + 160) = v50;
            uint64_t v7 = v130;
          }
          uint64_t v52 = sub_1198F14(a3, v50, (unsigned __int8 *)v7);
          goto LABEL_205;
        case 0x19u:
          if (v8 != 200) {
            goto LABEL_198;
          }
          v5 |= 0x1000u;
          int v53 = v7 + 1;
          uint64_t v54 = *v7;
          if ((*v7 & 0x80000000) == 0) {
            goto LABEL_88;
          }
          int v55 = *v53;
          uint64_t v54 = v54 + (v55 << 7) - 128;
          if (v55 < 0)
          {
            int v113 = (char *)sub_188C138((uint64_t)v7, v54);
            uint64_t v130 = v113;
            *(unsigned char *)(a1 + 245) = v114 != 0;
            if (!v113) {
              goto LABEL_215;
            }
          }
          else
          {
            int v53 = v7 + 2;
LABEL_88:
            uint64_t v130 = v53;
            *(unsigned char *)(a1 + 245) = v54 != 0;
          }
          goto LABEL_206;
        case 0x1Au:
          if (v8 != 208) {
            goto LABEL_198;
          }
          v5 |= 0x2000u;
          int v56 = v7 + 1;
          uint64_t v57 = *v7;
          if ((*v7 & 0x80000000) == 0) {
            goto LABEL_93;
          }
          int v58 = *v56;
          uint64_t v57 = v57 + (v58 << 7) - 128;
          if (v58 < 0)
          {
            unsigned int v115 = (char *)sub_188C138((uint64_t)v7, v57);
            uint64_t v130 = v115;
            *(unsigned char *)(a1 + 246) = v116 != 0;
            if (!v115) {
              goto LABEL_215;
            }
          }
          else
          {
            int v56 = v7 + 2;
LABEL_93:
            uint64_t v130 = v56;
            *(unsigned char *)(a1 + 246) = v57 != 0;
          }
          goto LABEL_206;
        case 0x1Cu:
          if (v8 != 224) {
            goto LABEL_198;
          }
          v5 |= 0x8000u;
          int v59 = v7 + 1;
          uint64_t v60 = *v7;
          if ((*v7 & 0x80000000) == 0) {
            goto LABEL_98;
          }
          int v61 = *v59;
          uint64_t v60 = v60 + (v61 << 7) - 128;
          if (v61 < 0)
          {
            uint64_t v117 = (char *)sub_188C138((uint64_t)v7, v60);
            uint64_t v130 = v117;
            *(void *)(a1 + 256) = v118;
            if (!v117) {
              goto LABEL_215;
            }
          }
          else
          {
            int v59 = v7 + 2;
LABEL_98:
            uint64_t v130 = v59;
            *(void *)(a1 + 256) = v60;
          }
          goto LABEL_206;
        case 0x1Du:
          if (v8 != 232) {
            goto LABEL_198;
          }
          v5 |= 0x10000u;
          int v62 = v7 + 1;
          uint64_t v63 = *v7;
          if ((*v7 & 0x80000000) == 0) {
            goto LABEL_103;
          }
          int v64 = *v62;
          uint64_t v63 = v63 + (v64 << 7) - 128;
          if (v64 < 0)
          {
            uint64_t v119 = (char *)sub_188C138((uint64_t)v7, v63);
            uint64_t v130 = v119;
            *(void *)(a1 + 264) = v120;
            if (!v119) {
              goto LABEL_215;
            }
          }
          else
          {
            int v62 = v7 + 2;
LABEL_103:
            uint64_t v130 = v62;
            *(void *)(a1 + 264) = v63;
          }
          goto LABEL_206;
        case 0x1Eu:
          if (v8 != 240) {
            goto LABEL_198;
          }
          int v65 = v7 + 1;
          unint64_t v66 = *v7;
          if ((*v7 & 0x80000000) == 0) {
            goto LABEL_108;
          }
          int v67 = *v65;
          int v68 = v66 + (v67 << 7);
          unint64_t v66 = (v68 - 128);
          if (v67 < 0)
          {
            uint64_t v130 = (char *)sub_188C138((uint64_t)v7, (v68 - 128));
            if (!v130) {
              goto LABEL_215;
            }
            unint64_t v66 = v121;
          }
          else
          {
            int v65 = v7 + 2;
LABEL_108:
            uint64_t v130 = v65;
          }
          if ((v66 - 1) > 0xD)
          {
            if (*v127) {
              uint64_t v126 = (std::string *)((*v127 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else {
              uint64_t v126 = (std::string *)sub_188DBD8(v127);
            }
            sub_188C020(30, v66, v126);
          }
          else
          {
            *(_DWORD *)(a1 + 16) |= 0x20000u;
            *(_DWORD *)(a1 + 272) = v66;
          }
          goto LABEL_206;
        case 0x1Fu:
          if (v8 != 250) {
            goto LABEL_198;
          }
          *(_DWORD *)(a1 + 16) |= 2u;
          uint64_t v69 = *(void *)(a1 + 168);
          if (v69) {
            goto LABEL_132;
          }
          int v70 = (void *)(*v127 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v127) {
            int v70 = (void *)*v70;
          }
          sub_144ABE4((uint64_t)v70);
          uint64_t v69 = v71;
          *(void *)(a1 + 168) = v71;
          goto LABEL_131;
        case 0x20u:
          if (v8 != 2) {
            goto LABEL_198;
          }
          int v72 = v7 - 2;
          while (1)
          {
            uint64_t v73 = (unsigned __int8 *)(v72 + 2);
            uint64_t v130 = v72 + 2;
            int v74 = *(_DWORD **)(a1 + 104);
            if (v74 && (uint64_t v75 = *(int *)(a1 + 96), (int)v75 < *v74))
            {
              *(_DWORD *)(a1 + 96) = v75 + 1;
              uint64_t v76 = *(void *)&v74[2 * v75 + 2];
            }
            else
            {
              sub_144ABE4(*(void *)(a1 + 88));
              uint64_t v76 = sub_188CDC8(a1 + 88, v77);
              uint64_t v73 = (unsigned __int8 *)v130;
            }
            int v72 = sub_141DEDC(a3, v76, v73);
            uint64_t v130 = v72;
            if (!v72) {
              goto LABEL_215;
            }
            if (*(void *)a3 <= (unint64_t)v72 || *(_WORD *)v72 != 642) {
              goto LABEL_206;
            }
          }
        case 0x21u:
          if (v8 != 10) {
            goto LABEL_198;
          }
          *(_DWORD *)(a1 + 16) |= 4u;
          uint64_t v69 = *(void *)(a1 + 176);
          if (v69) {
            goto LABEL_132;
          }
          uint64_t v78 = (void *)(*v127 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v127) {
            uint64_t v78 = (void *)*v78;
          }
          sub_144ABE4((uint64_t)v78);
          uint64_t v69 = v79;
          *(void *)(a1 + 176) = v79;
LABEL_131:
          uint64_t v7 = v130;
LABEL_132:
          uint64_t v52 = sub_141DEDC(a3, v69, (unsigned __int8 *)v7);
          goto LABEL_205;
        case 0x22u:
          if (v8 != 18) {
            goto LABEL_198;
          }
          int v80 = v7 - 2;
          while (1)
          {
            int v81 = (unsigned __int8 *)(v80 + 2);
            uint64_t v130 = v80 + 2;
            int v82 = *(_DWORD **)(a1 + 128);
            if (v82 && (uint64_t v83 = *(int *)(a1 + 120), (int)v83 < *v82))
            {
              *(_DWORD *)(a1 + 120) = v83 + 1;
              uint64_t v84 = *(void *)&v82[2 * v83 + 2];
            }
            else
            {
              sub_144ABE4(*v128);
              uint64_t v84 = sub_188CDC8((uint64_t)v128, v85);
              int v81 = (unsigned __int8 *)v130;
            }
            int v80 = sub_141DEDC(a3, v84, v81);
            uint64_t v130 = v80;
            if (!v80) {
              goto LABEL_215;
            }
            if (*(void *)a3 <= (unint64_t)v80 || *(_WORD *)v80 != 658) {
              goto LABEL_206;
            }
          }
        case 0x23u:
          if (v8 != 26) {
            goto LABEL_198;
          }
          uint64_t v86 = v7 - 2;
          while (1)
          {
            int v87 = (unsigned __int8 *)(v86 + 2);
            uint64_t v130 = v86 + 2;
            unint64_t v88 = *(_DWORD **)(a1 + 152);
            if (v88 && (uint64_t v89 = *(int *)(a1 + 144), (int)v89 < *v88))
            {
              *(_DWORD *)(a1 + 144) = v89 + 1;
              uint64_t v90 = *(void *)&v88[2 * v89 + 2];
            }
            else
            {
              sub_144ABE4(*v129);
              uint64_t v90 = sub_188CDC8((uint64_t)v129, v91);
              int v87 = (unsigned __int8 *)v130;
            }
            uint64_t v86 = sub_141DEDC(a3, v90, v87);
            uint64_t v130 = v86;
            if (!v86) {
              goto LABEL_215;
            }
            if (*(void *)a3 <= (unint64_t)v86 || *(_WORD *)v86 != 666) {
              goto LABEL_206;
            }
          }
        case 0x24u:
          if (v8 != 34) {
            goto LABEL_198;
          }
          *(_DWORD *)(a1 + 16) |= 8u;
          int v92 = *(void **)(a1 + 184);
          if (!v92)
          {
            uint64_t v93 = (void *)(*v127 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v127) {
              uint64_t v93 = (void *)*v93;
            }
            int v92 = sub_144AC68((uint64_t)v93);
            *(void *)(a1 + 184) = v92;
            uint64_t v7 = v130;
          }
          uint64_t v52 = (char *)sub_141DF6C(a3, (uint64_t)v92, (unsigned __int8 *)v7);
          goto LABEL_205;
        case 0x25u:
          if (v8 != 42) {
            goto LABEL_198;
          }
          *(_DWORD *)(a1 + 16) |= 0x10u;
          uint64_t v94 = *(void *)(a1 + 192);
          if (!v94)
          {
            int v95 = (void *)(*v127 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v127) {
              int v95 = (void *)*v95;
            }
            uint64_t v94 = sub_144BCDC((uint64_t)v95);
            *(void *)(a1 + 192) = v94;
            uint64_t v7 = v130;
          }
          uint64_t v52 = sub_141DFFC(a3, v94, (unsigned __int8 *)v7);
          goto LABEL_205;
        case 0x26u:
          if (v8 != 48) {
            goto LABEL_198;
          }
          v5 |= 0x4000u;
          int v97 = v7 + 1;
          LODWORD(v96) = *v7;
          if ((v96 & 0x80) == 0) {
            goto LABEL_169;
          }
          int v98 = *v97;
          uint64_t v96 = v96 + (v98 << 7) - 128;
          if (v98 < 0)
          {
            uint64_t v122 = (char *)sub_188C138((uint64_t)v7, v96);
            uint64_t v130 = v122;
            *(_DWORD *)(a1 + 248) = v123;
            if (!v122) {
              goto LABEL_215;
            }
          }
          else
          {
            int v97 = v7 + 2;
LABEL_169:
            uint64_t v130 = v97;
            *(_DWORD *)(a1 + 248) = v96;
          }
          goto LABEL_206;
        default:
          goto LABEL_198;
      }
    }
  }
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v130;
}

char *sub_141DEDC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_141C300(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_141DF6C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_141CB10(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_141DFFC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1430850(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_141E08C(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 0x20) != 0)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(void *)(a1 + 200);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x40) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(void *)(a1 + 208);
    unsigned char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v13 = *(unsigned int *)(a1 + 24);
  if ((int)v13 >= 1)
  {
    for (uint64_t i = 0; i != v13; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v15 = *(void *)(*(void *)(a1 + 32) + 8 * i);
      unsigned char *v4 = 24;
      v4[1] = v15;
      if (v15 > 0x7F)
      {
        v4[1] = v15 | 0x80;
        unint64_t v16 = v15 >> 7;
        v4[2] = v15 >> 7;
        v4 += 3;
        if (v15 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v17 = v16 >> 14;
            v16 >>= 7;
            *v4++ = v16;
          }
          while (v17);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  if ((v6 & 0x80) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v18 = *(void *)(a1 + 216);
    unsigned char *v4 = 32;
    v4[1] = v18;
    if (v18 > 0x7F)
    {
      v4[1] = v18 | 0x80;
      unint64_t v19 = v18 >> 7;
      v4[2] = v18 >> 7;
      v4 += 3;
      if (v18 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v20 = v19 >> 14;
          v19 >>= 7;
          *v4++ = v19;
        }
        while (v20);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x400) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v21 = *(int *)(a1 + 240);
    unsigned char *v4 = 40;
    v4[1] = v21;
    if (v21 > 0x7F)
    {
      v4[1] = v21 | 0x80;
      unint64_t v22 = v21 >> 7;
      v4[2] = v21 >> 7;
      v4 += 3;
      if (v21 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v23 = v22 >> 14;
          v22 >>= 7;
          *v4++ = v22;
        }
        while (v23);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x100) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v24 = *(void *)(a1 + 224);
    unsigned char *v4 = 48;
    v4[1] = v24;
    if (v24 > 0x7F)
    {
      v4[1] = v24 | 0x80;
      unint64_t v25 = v24 >> 7;
      v4[2] = v24 >> 7;
      v4 += 3;
      if (v24 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v26 = v25 >> 14;
          v25 >>= 7;
          *v4++ = v25;
        }
        while (v26);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x200) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v27 = *(void *)(a1 + 232);
    unsigned char *v4 = 56;
    v4[1] = v27;
    if (v27 > 0x7F)
    {
      v4[1] = v27 | 0x80;
      unint64_t v28 = v27 >> 7;
      v4[2] = v27 >> 7;
      v4 += 3;
      if (v27 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v29 = v28 >> 14;
          v28 >>= 7;
          *v4++ = v28;
        }
        while (v29);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x800) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v30 = *(unsigned char *)(a1 + 244);
    *(_WORD *)uint64_t v4 = 424;
    v4[2] = v30;
    v4 += 3;
  }
  int v31 = *(_DWORD *)(a1 + 48);
  if (v31)
  {
    for (int j = 0; j != v31; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v33 = *(void *)(*(void *)(a1 + 56) + 8 * j + 8);
      *(_WORD *)uint64_t v4 = 434;
      unsigned int v34 = *(_DWORD *)(v33 + 20);
      v4[2] = v34;
      if (v34 > 0x7F) {
        int v35 = sub_188A9CC(v34, v4 + 2);
      }
      else {
        int v35 = v4 + 3;
      }
      uint64_t v4 = sub_15B2EA4(v33, v35, a3);
    }
  }
  int v36 = *(_DWORD *)(a1 + 72);
  if (v36)
  {
    for (int k = 0; k != v36; ++k)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v38 = *(void *)(*(void *)(a1 + 80) + 8 * k + 8);
      *(_WORD *)uint64_t v4 = 442;
      unsigned int v39 = *(_DWORD *)(v38 + 20);
      v4[2] = v39;
      if (v39 > 0x7F) {
        int v40 = sub_188A9CC(v39, v4 + 2);
      }
      else {
        int v40 = v4 + 3;
      }
      uint64_t v4 = sub_15B2EA4(v38, v40, a3);
    }
  }
  if (v6)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v41 = *(void *)(a1 + 160);
    *(_WORD *)uint64_t v4 = 450;
    unsigned int v42 = *(_DWORD *)(v41 + 44);
    v4[2] = v42;
    if (v42 > 0x7F) {
      uint64_t v43 = sub_188A9CC(v42, v4 + 2);
    }
    else {
      uint64_t v43 = v4 + 3;
    }
    uint64_t v4 = sub_15B0C0C(v41, v43, a3);
    if ((v6 & 0x1000) == 0)
    {
LABEL_74:
      if ((v6 & 0x2000) == 0) {
        goto LABEL_75;
      }
      goto LABEL_86;
    }
  }
  else if ((v6 & 0x1000) == 0)
  {
    goto LABEL_74;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v44 = *(unsigned char *)(a1 + 245);
  *(_WORD *)uint64_t v4 = 456;
  v4[2] = v44;
  v4 += 3;
  if ((v6 & 0x2000) == 0)
  {
LABEL_75:
    if ((v6 & 0x8000) == 0) {
      goto LABEL_95;
    }
    goto LABEL_89;
  }
LABEL_86:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v45 = *(unsigned char *)(a1 + 246);
  *(_WORD *)uint64_t v4 = 464;
  v4[2] = v45;
  v4 += 3;
  if ((v6 & 0x8000) != 0)
  {
LABEL_89:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v46 = *(void *)(a1 + 256);
    *(_WORD *)uint64_t v4 = 480;
    v4[2] = v46;
    if (v46 > 0x7F)
    {
      v4[2] = v46 | 0x80;
      unint64_t v47 = v46 >> 7;
      v4[3] = v46 >> 7;
      v4 += 4;
      if (v46 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v48 = v47 >> 14;
          v47 >>= 7;
          *v4++ = v47;
        }
        while (v48);
      }
    }
    else
    {
      v4 += 3;
    }
  }
LABEL_95:
  if ((v6 & 0x10000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v49 = *(void *)(a1 + 264);
    *(_WORD *)uint64_t v4 = 488;
    v4[2] = v49;
    if (v49 > 0x7F)
    {
      v4[2] = v49 | 0x80;
      unint64_t v50 = v49 >> 7;
      v4[3] = v49 >> 7;
      v4 += 4;
      if (v49 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v51 = v50 >> 14;
          v50 >>= 7;
          *v4++ = v50;
        }
        while (v51);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if ((v6 & 0x20000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v52 = *(int *)(a1 + 272);
    *(_WORD *)uint64_t v4 = 496;
    v4[2] = v52;
    if (v52 > 0x7F)
    {
      v4[2] = v52 | 0x80;
      unint64_t v53 = v52 >> 7;
      v4[3] = v52 >> 7;
      v4 += 4;
      if (v52 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v54 = v53 >> 14;
          v53 >>= 7;
          *v4++ = v53;
        }
        while (v54);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v55 = *(void *)(a1 + 168);
    *(_WORD *)uint64_t v4 = 506;
    unsigned int v56 = *(_DWORD *)(v55 + 20);
    v4[2] = v56;
    if (v56 > 0x7F) {
      uint64_t v57 = sub_188A9CC(v56, v4 + 2);
    }
    else {
      uint64_t v57 = v4 + 3;
    }
    uint64_t v4 = sub_141C5E4(v55, (unint64_t)v57, a3);
  }
  int v58 = *(_DWORD *)(a1 + 96);
  if (v58)
  {
    for (int m = 0; m != v58; ++m)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v60 = *(void *)(*(void *)(a1 + 104) + 8 * m + 8);
      *(_WORD *)uint64_t v4 = 642;
      unsigned int v61 = *(_DWORD *)(v60 + 20);
      v4[2] = v61;
      if (v61 > 0x7F) {
        int v62 = sub_188A9CC(v61, v4 + 2);
      }
      else {
        int v62 = v4 + 3;
      }
      uint64_t v4 = sub_141C5E4(v60, (unint64_t)v62, a3);
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v63 = *(void *)(a1 + 176);
    *(_WORD *)uint64_t v4 = 650;
    unsigned int v64 = *(_DWORD *)(v63 + 20);
    v4[2] = v64;
    if (v64 > 0x7F) {
      int v65 = sub_188A9CC(v64, v4 + 2);
    }
    else {
      int v65 = v4 + 3;
    }
    uint64_t v4 = sub_141C5E4(v63, (unint64_t)v65, a3);
  }
  int v66 = *(_DWORD *)(a1 + 120);
  if (v66)
  {
    for (int n = 0; n != v66; ++n)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v68 = *(void *)(*(void *)(a1 + 128) + 8 * n + 8);
      *(_WORD *)uint64_t v4 = 658;
      unsigned int v69 = *(_DWORD *)(v68 + 20);
      v4[2] = v69;
      if (v69 > 0x7F) {
        int v70 = sub_188A9CC(v69, v4 + 2);
      }
      else {
        int v70 = v4 + 3;
      }
      uint64_t v4 = sub_141C5E4(v68, (unint64_t)v70, a3);
    }
  }
  int v71 = *(_DWORD *)(a1 + 144);
  if (v71)
  {
    for (iuint64_t i = 0; ii != v71; ++ii)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v73 = *(void *)(*(void *)(a1 + 152) + 8 * ii + 8);
      *(_WORD *)uint64_t v4 = 666;
      unsigned int v74 = *(_DWORD *)(v73 + 20);
      v4[2] = v74;
      if (v74 > 0x7F) {
        uint64_t v75 = sub_188A9CC(v74, v4 + 2);
      }
      else {
        uint64_t v75 = v4 + 3;
      }
      uint64_t v4 = sub_141C5E4(v73, (unint64_t)v75, a3);
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v76 = *(void *)(a1 + 184);
    *(_WORD *)uint64_t v4 = 674;
    unsigned int v77 = *(_DWORD *)(v76 + 20);
    v4[2] = v77;
    if (v77 > 0x7F) {
      uint64_t v78 = sub_188A9CC(v77, v4 + 2);
    }
    else {
      uint64_t v78 = v4 + 3;
    }
    uint64_t v4 = sub_141CCB8(v76, v78, a3);
    if ((v6 & 0x10) == 0)
    {
LABEL_149:
      if ((v6 & 0x4000) == 0) {
        goto LABEL_169;
      }
      goto LABEL_163;
    }
  }
  else if ((v6 & 0x10) == 0)
  {
    goto LABEL_149;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v79 = *(void *)(a1 + 192);
  *(_WORD *)uint64_t v4 = 682;
  unsigned int v80 = *(_DWORD *)(v79 + 20);
  v4[2] = v80;
  if (v80 > 0x7F) {
    int v81 = sub_188A9CC(v80, v4 + 2);
  }
  else {
    int v81 = v4 + 3;
  }
  uint64_t v4 = sub_14309F8(v79, (unint64_t)v81, a3);
  if ((v6 & 0x4000) != 0)
  {
LABEL_163:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v82 = *(int *)(a1 + 248);
    *(_WORD *)uint64_t v4 = 688;
    v4[2] = v82;
    if (v82 > 0x7F)
    {
      v4[2] = v82 | 0x80;
      unint64_t v83 = v82 >> 7;
      v4[3] = v82 >> 7;
      v4 += 4;
      if (v82 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v84 = v83 >> 14;
          v83 >>= 7;
          *v4++ = v83;
        }
        while (v84);
      }
    }
    else
    {
      v4 += 3;
    }
  }
LABEL_169:
  uint64_t v85 = *(void *)(a1 + 8);
  if ((v85 & 1) == 0) {
    return v4;
  }
  unint64_t v87 = v85 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v87 + 31) < 0)
  {
    unint64_t v88 = *(void **)(v87 + 8);
    uint64_t v89 = *(void *)(v87 + 16);
  }
  else
  {
    unint64_t v88 = (void *)(v87 + 8);
    LODWORD(v89) = *(unsigned __int8 *)(v87 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v89)
  {
    uint64_t v90 = (int)v89;
    memcpy(v4, v88, (int)v89);
    v4 += v90;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v88, v89, v4);
}

uint64_t sub_141EC10(uint64_t a1)
{
  uint64_t v2 = sub_188D5A8((unsigned int *)(a1 + 24));
  uint64_t v3 = *(int *)(a1 + 48);
  uint64_t v4 = v2 + *(unsigned int *)(a1 + 24) + 2 * v3;
  uint64_t v5 = *(void *)(a1 + 56);
  if (v5) {
    int v6 = (uint64_t *)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = sub_15B2F90(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  uint64_t v10 = *(int *)(a1 + 72);
  uint64_t v11 = v4 + 2 * v10;
  uint64_t v12 = *(void *)(a1 + 80);
  if (v12) {
    uint64_t v13 = (uint64_t *)(v12 + 8);
  }
  else {
    uint64_t v13 = 0;
  }
  if (v10)
  {
    uint64_t v14 = 8 * v10;
    do
    {
      uint64_t v15 = *v13++;
      uint64_t v16 = sub_15B2F90(v15);
      v11 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6);
      v14 -= 8;
    }
    while (v14);
  }
  uint64_t v17 = *(int *)(a1 + 96);
  uint64_t v18 = v11 + 2 * v17;
  uint64_t v19 = *(void *)(a1 + 104);
  if (v19) {
    unint64_t v20 = (uint64_t *)(v19 + 8);
  }
  else {
    unint64_t v20 = 0;
  }
  if (v17)
  {
    uint64_t v21 = 8 * v17;
    do
    {
      uint64_t v22 = *v20++;
      unint64_t v23 = sub_141C83C(v22);
      v18 += v23 + ((9 * (__clz(v23 | 1) ^ 0x1F) + 73) >> 6);
      v21 -= 8;
    }
    while (v21);
  }
  uint64_t v24 = *(int *)(a1 + 120);
  uint64_t v25 = v18 + 2 * v24;
  uint64_t v26 = *(void *)(a1 + 128);
  if (v26) {
    unint64_t v27 = (uint64_t *)(v26 + 8);
  }
  else {
    unint64_t v27 = 0;
  }
  if (v24)
  {
    uint64_t v28 = 8 * v24;
    do
    {
      uint64_t v29 = *v27++;
      unint64_t v30 = sub_141C83C(v29);
      v25 += v30 + ((9 * (__clz(v30 | 1) ^ 0x1F) + 73) >> 6);
      v28 -= 8;
    }
    while (v28);
  }
  uint64_t v31 = *(int *)(a1 + 144);
  uint64_t v32 = v25 + 2 * v31;
  uint64_t v33 = *(void *)(a1 + 152);
  if (v33) {
    unsigned int v34 = (uint64_t *)(v33 + 8);
  }
  else {
    unsigned int v34 = 0;
  }
  if (v31)
  {
    uint64_t v35 = 8 * v31;
    do
    {
      uint64_t v36 = *v34++;
      unint64_t v37 = sub_141C83C(v36);
      v32 += v37 + ((9 * (__clz(v37 | 1) ^ 0x1F) + 73) >> 6);
      v35 -= 8;
    }
    while (v35);
  }
  int v38 = *(_DWORD *)(a1 + 16);
  if (!(_BYTE)v38) {
    goto LABEL_41;
  }
  if (v38)
  {
    uint64_t v51 = sub_15B0D90(*(void *)(a1 + 160));
    v32 += v51 + ((9 * (__clz(v51 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v38 & 2) == 0)
    {
LABEL_34:
      if ((v38 & 4) == 0) {
        goto LABEL_35;
      }
      goto LABEL_75;
    }
  }
  else if ((v38 & 2) == 0)
  {
    goto LABEL_34;
  }
  unint64_t v52 = sub_141C83C(*(void *)(a1 + 168));
  v32 += v52 + ((9 * (__clz(v52 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v38 & 4) == 0)
  {
LABEL_35:
    if ((v38 & 8) == 0) {
      goto LABEL_36;
    }
    goto LABEL_76;
  }
LABEL_75:
  unint64_t v53 = sub_141C83C(*(void *)(a1 + 176));
  v32 += v53 + ((9 * (__clz(v53 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v38 & 8) == 0)
  {
LABEL_36:
    if ((v38 & 0x10) == 0) {
      goto LABEL_37;
    }
    goto LABEL_77;
  }
LABEL_76:
  uint64_t v54 = sub_141CDA4(*(void *)(a1 + 184));
  v32 += v54 + ((9 * (__clz(v54 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v38 & 0x10) == 0)
  {
LABEL_37:
    if ((v38 & 0x20) == 0) {
      goto LABEL_38;
    }
LABEL_78:
    v32 += ((9 * (__clz(*(void *)(a1 + 200) | 1) ^ 0x3F) + 73) >> 6) + 1;
    if ((v38 & 0x40) == 0)
    {
LABEL_39:
      if ((v38 & 0x80) == 0) {
        goto LABEL_41;
      }
      goto LABEL_40;
    }
    goto LABEL_79;
  }
LABEL_77:
  uint64_t v55 = sub_1430B20(*(void *)(a1 + 192));
  v32 += v55 + ((9 * (__clz(v55 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v38 & 0x20) != 0) {
    goto LABEL_78;
  }
LABEL_38:
  if ((v38 & 0x40) == 0) {
    goto LABEL_39;
  }
LABEL_79:
  v32 += ((9 * (__clz(*(void *)(a1 + 208) | 1) ^ 0x3F) + 73) >> 6) + 1;
  if ((v38 & 0x80) != 0) {
LABEL_40:
  }
    v32 += ((9 * (__clz(*(void *)(a1 + 216) | 1) ^ 0x3F) + 73) >> 6) + 1;
LABEL_41:
  if ((v38 & 0xFF00) == 0) {
    goto LABEL_63;
  }
  if ((v38 & 0x100) == 0)
  {
    if ((v38 & 0x200) == 0) {
      goto LABEL_44;
    }
LABEL_82:
    v32 += ((9 * (__clz(*(void *)(a1 + 232) | 1) ^ 0x3F) + 73) >> 6) + 1;
    if ((v38 & 0x400) != 0) {
      goto LABEL_45;
    }
    goto LABEL_49;
  }
  v32 += ((9 * (__clz(*(void *)(a1 + 224) | 1) ^ 0x3F) + 73) >> 6) + 1;
  if ((v38 & 0x200) != 0) {
    goto LABEL_82;
  }
LABEL_44:
  if ((v38 & 0x400) != 0)
  {
LABEL_45:
    int v39 = *(_DWORD *)(a1 + 240);
    uint64_t v40 = ((9 * (__clz(v39 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if (v39 >= 0) {
      uint64_t v41 = v40;
    }
    else {
      uint64_t v41 = 11;
    }
    v32 += v41;
  }
LABEL_49:
  uint64_t v42 = v32 + 3;
  if ((v38 & 0x800) == 0) {
    uint64_t v42 = v32;
  }
  if ((v38 & 0x1000) != 0) {
    v42 += 3;
  }
  if ((v38 & 0x2000) != 0) {
    uint64_t v32 = v42 + 3;
  }
  else {
    uint64_t v32 = v42;
  }
  if ((v38 & 0x4000) != 0)
  {
    int v43 = *(_DWORD *)(a1 + 248);
    uint64_t v44 = ((9 * (__clz(v43 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if (v43 >= 0) {
      uint64_t v45 = v44;
    }
    else {
      uint64_t v45 = 12;
    }
    v32 += v45;
  }
  if ((v38 & 0x8000) != 0) {
    v32 += ((9 * (__clz(*(void *)(a1 + 256) | 1) ^ 0x3F) + 73) >> 6) + 2;
  }
LABEL_63:
  if ((v38 & 0x30000) != 0)
  {
    if ((v38 & 0x10000) != 0) {
      v32 += ((9 * (__clz(*(void *)(a1 + 264) | 1) ^ 0x3F) + 73) >> 6) + 2;
    }
    if ((v38 & 0x20000) != 0)
    {
      int v46 = *(_DWORD *)(a1 + 272);
      uint64_t v47 = ((9 * (__clz(v46 | 1) ^ 0x1F) + 73) >> 6) + 2;
      if (v46 >= 0) {
        uint64_t v48 = v47;
      }
      else {
        uint64_t v48 = 12;
      }
      v32 += v48;
    }
  }
  uint64_t v49 = *(void *)(a1 + 8);
  if (v49)
  {
    unint64_t v56 = v49 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v56 + 31) < 0) {
      uint64_t v57 = *(void *)(v56 + 16);
    }
    else {
      uint64_t v57 = *(unsigned __int8 *)(v56 + 31);
    }
    v32 += v57;
  }
  *(_DWORD *)(a1 + 20) = v32;
  return v32;
}

void sub_141F100(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (_DWORD *)(a1 + 24);
    uint64_t v6 = *(int *)(a1 + 24);
    sub_188CA54((unsigned int *)(a1 + 24), v6 + v4);
    uint64_t v7 = *(void *)(a1 + 32);
    *v5 += *(_DWORD *)(a2 + 24);
    memcpy((void *)(v7 + 8 * v6), *(const void **)(a2 + 32), 8 * *(int *)(a2 + 24));
  }
  int v8 = *(_DWORD *)(a2 + 48);
  if (v8)
  {
    uint64_t v9 = (uint64_t *)(*(void *)(a2 + 56) + 8);
    uint64_t v10 = (std::string **)sub_188CCE4(a1 + 40, *(_DWORD *)(a2 + 48));
    sub_12C1E38((std::string *)(a1 + 40), v10, v9, v8, **(_DWORD **)(a1 + 56) - *(_DWORD *)(a1 + 48));
    int v11 = *(_DWORD *)(a1 + 48) + v8;
    *(_DWORD *)(a1 + 48) = v11;
    uint64_t v12 = *(int **)(a1 + 56);
    if (*v12 < v11) {
      *uint64_t v12 = v11;
    }
  }
  int v13 = *(_DWORD *)(a2 + 72);
  if (v13)
  {
    uint64_t v14 = (uint64_t *)(*(void *)(a2 + 80) + 8);
    uint64_t v15 = (std::string **)sub_188CCE4(a1 + 64, *(_DWORD *)(a2 + 72));
    sub_12C1E38((std::string *)(a1 + 64), v15, v14, v13, **(_DWORD **)(a1 + 80) - *(_DWORD *)(a1 + 72));
    int v16 = *(_DWORD *)(a1 + 72) + v13;
    *(_DWORD *)(a1 + 72) = v16;
    uint64_t v17 = *(int **)(a1 + 80);
    if (*v17 < v16) {
      *uint64_t v17 = v16;
    }
  }
  int v18 = *(_DWORD *)(a2 + 96);
  if (v18)
  {
    uint64_t v19 = (uint64_t *)(*(void *)(a2 + 104) + 8);
    unint64_t v20 = (std::string **)sub_188CCE4(a1 + 88, *(_DWORD *)(a2 + 96));
    sub_1491EB4((uint64_t *)(a1 + 88), v20, v19, v18, **(_DWORD **)(a1 + 104) - *(_DWORD *)(a1 + 96));
    int v21 = *(_DWORD *)(a1 + 96) + v18;
    *(_DWORD *)(a1 + 96) = v21;
    uint64_t v22 = *(int **)(a1 + 104);
    if (*v22 < v21) {
      int *v22 = v21;
    }
  }
  int v23 = *(_DWORD *)(a2 + 120);
  if (v23)
  {
    uint64_t v24 = (uint64_t *)(*(void *)(a2 + 128) + 8);
    uint64_t v25 = (std::string **)sub_188CCE4(a1 + 112, *(_DWORD *)(a2 + 120));
    sub_1491EB4((uint64_t *)(a1 + 112), v25, v24, v23, **(_DWORD **)(a1 + 128) - *(_DWORD *)(a1 + 120));
    int v26 = *(_DWORD *)(a1 + 120) + v23;
    *(_DWORD *)(a1 + 120) = v26;
    unint64_t v27 = *(int **)(a1 + 128);
    if (*v27 < v26) {
      int *v27 = v26;
    }
  }
  int v28 = *(_DWORD *)(a2 + 144);
  if (v28)
  {
    uint64_t v29 = (uint64_t *)(*(void *)(a2 + 152) + 8);
    unint64_t v30 = (std::string **)sub_188CCE4(a1 + 136, *(_DWORD *)(a2 + 144));
    sub_1491EB4((uint64_t *)(a1 + 136), v30, v29, v28, **(_DWORD **)(a1 + 152) - *(_DWORD *)(a1 + 144));
    int v31 = *(_DWORD *)(a1 + 144) + v28;
    *(_DWORD *)(a1 + 144) = v31;
    uint64_t v32 = *(int **)(a1 + 152);
    if (*v32 < v31) {
      int *v32 = v31;
    }
  }
  int v33 = *(_DWORD *)(a2 + 16);
  if ((_BYTE)v33)
  {
    if (v33)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v34 = *(void *)(a1 + 160);
      if (!v34)
      {
        uint64_t v35 = *(void *)(a1 + 8);
        uint64_t v36 = (void *)(v35 & 0xFFFFFFFFFFFFFFFCLL);
        if (v35) {
          uint64_t v36 = (void *)*v36;
        }
        uint64_t v34 = sub_15C1918((uint64_t)v36);
        *(void *)(a1 + 160) = v34;
      }
      if (*(void *)(a2 + 160)) {
        unint64_t v37 = *(uint64_t (****)())(a2 + 160);
      }
      else {
        unint64_t v37 = &off_253F1A0;
      }
      sub_15B0E24(v34, (uint64_t)v37);
    }
    if ((v33 & 2) != 0)
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      int v39 = *(std::string **)(a1 + 168);
      if (!v39)
      {
        uint64_t v40 = *(void *)(a1 + 8);
        uint64_t v41 = (void *)(v40 & 0xFFFFFFFFFFFFFFFCLL);
        if (v40) {
          uint64_t v41 = (void *)*v41;
        }
        sub_144ABE4((uint64_t)v41);
        *(void *)(a1 + 168) = v39;
      }
      if (*(void *)(a2 + 168)) {
        uint64_t v42 = *(void *(****)(void *))(a2 + 168);
      }
      else {
        uint64_t v42 = &off_2537EB8;
      }
      sub_141C918(v39, (uint64_t)v42);
      if ((v33 & 4) == 0)
      {
LABEL_30:
        if ((v33 & 8) == 0) {
          goto LABEL_31;
        }
        goto LABEL_74;
      }
    }
    else if ((v33 & 4) == 0)
    {
      goto LABEL_30;
    }
    *(_DWORD *)(a1 + 16) |= 4u;
    int v43 = *(std::string **)(a1 + 176);
    if (!v43)
    {
      uint64_t v44 = *(void *)(a1 + 8);
      uint64_t v45 = (void *)(v44 & 0xFFFFFFFFFFFFFFFCLL);
      if (v44) {
        uint64_t v45 = (void *)*v45;
      }
      sub_144ABE4((uint64_t)v45);
      *(void *)(a1 + 176) = v43;
    }
    if (*(void *)(a2 + 176)) {
      int v46 = *(void *(****)(void *))(a2 + 176);
    }
    else {
      int v46 = &off_2537EB8;
    }
    sub_141C918(v43, (uint64_t)v46);
    if ((v33 & 8) == 0)
    {
LABEL_31:
      if ((v33 & 0x10) == 0) {
        goto LABEL_32;
      }
      goto LABEL_82;
    }
LABEL_74:
    *(_DWORD *)(a1 + 16) |= 8u;
    uint64_t v47 = *(std::string **)(a1 + 184);
    if (!v47)
    {
      uint64_t v48 = *(void *)(a1 + 8);
      uint64_t v49 = (void *)(v48 & 0xFFFFFFFFFFFFFFFCLL);
      if (v48) {
        uint64_t v49 = (void *)*v49;
      }
      uint64_t v47 = (std::string *)sub_144AC68((uint64_t)v49);
      *(void *)(a1 + 184) = v47;
    }
    if (*(void *)(a2 + 184)) {
      unint64_t v50 = *(uint64_t (****)(uint64_t))(a2 + 184);
    }
    else {
      unint64_t v50 = &off_2537EF0;
    }
    sub_11EC100(v47, (uint64_t)v50);
    if ((v33 & 0x10) == 0)
    {
LABEL_32:
      if ((v33 & 0x20) == 0) {
        goto LABEL_33;
      }
      goto LABEL_90;
    }
LABEL_82:
    *(_DWORD *)(a1 + 16) |= 0x10u;
    uint64_t v51 = *(std::string **)(a1 + 192);
    if (!v51)
    {
      uint64_t v52 = *(void *)(a1 + 8);
      unint64_t v53 = (void *)(v52 & 0xFFFFFFFFFFFFFFFCLL);
      if (v52) {
        unint64_t v53 = (void *)*v53;
      }
      uint64_t v51 = (std::string *)sub_144BCDC((uint64_t)v53);
      *(void *)(a1 + 192) = v51;
    }
    if (*(void *)(a2 + 192)) {
      uint64_t v54 = *(void *(****)(void *))(a2 + 192);
    }
    else {
      uint64_t v54 = &off_2538588;
    }
    sub_11A7934(v51, (uint64_t)v54);
    if ((v33 & 0x20) == 0)
    {
LABEL_33:
      if ((v33 & 0x40) == 0) {
        goto LABEL_34;
      }
      goto LABEL_91;
    }
LABEL_90:
    *(void *)(a1 + 200) = *(void *)(a2 + 200);
    if ((v33 & 0x40) == 0)
    {
LABEL_34:
      if ((v33 & 0x80) == 0)
      {
LABEL_36:
        *(_DWORD *)(a1 + 16) |= v33;
        goto LABEL_37;
      }
LABEL_35:
      *(void *)(a1 + 216) = *(void *)(a2 + 216);
      goto LABEL_36;
    }
LABEL_91:
    *(void *)(a1 + 208) = *(void *)(a2 + 208);
    if ((v33 & 0x80) == 0) {
      goto LABEL_36;
    }
    goto LABEL_35;
  }
LABEL_37:
  if ((v33 & 0xFF00) == 0) {
    goto LABEL_48;
  }
  if ((v33 & 0x100) != 0)
  {
    *(void *)(a1 + 224) = *(void *)(a2 + 224);
    if ((v33 & 0x200) == 0)
    {
LABEL_40:
      if ((v33 & 0x400) == 0) {
        goto LABEL_41;
      }
      goto LABEL_95;
    }
  }
  else if ((v33 & 0x200) == 0)
  {
    goto LABEL_40;
  }
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  if ((v33 & 0x400) == 0)
  {
LABEL_41:
    if ((v33 & 0x800) == 0) {
      goto LABEL_42;
    }
    goto LABEL_96;
  }
LABEL_95:
  *(_DWORD *)(a1 + 240) = *(_DWORD *)(a2 + 240);
  if ((v33 & 0x800) == 0)
  {
LABEL_42:
    if ((v33 & 0x1000) == 0) {
      goto LABEL_43;
    }
    goto LABEL_97;
  }
LABEL_96:
  *(unsigned char *)(a1 + 244) = *(unsigned char *)(a2 + 244);
  if ((v33 & 0x1000) == 0)
  {
LABEL_43:
    if ((v33 & 0x2000) == 0) {
      goto LABEL_44;
    }
    goto LABEL_98;
  }
LABEL_97:
  *(unsigned char *)(a1 + 245) = *(unsigned char *)(a2 + 245);
  if ((v33 & 0x2000) == 0)
  {
LABEL_44:
    if ((v33 & 0x4000) == 0) {
      goto LABEL_45;
    }
LABEL_99:
    *(_DWORD *)(a1 + 248) = *(_DWORD *)(a2 + 248);
    if ((v33 & 0x8000) == 0) {
      goto LABEL_47;
    }
    goto LABEL_46;
  }
LABEL_98:
  *(unsigned char *)(a1 + 246) = *(unsigned char *)(a2 + 246);
  if ((v33 & 0x4000) != 0) {
    goto LABEL_99;
  }
LABEL_45:
  if ((v33 & 0x8000) != 0) {
LABEL_46:
  }
    *(void *)(a1 + 256) = *(void *)(a2 + 256);
LABEL_47:
  *(_DWORD *)(a1 + 16) |= v33;
LABEL_48:
  if ((v33 & 0x30000) != 0)
  {
    if ((v33 & 0x10000) != 0) {
      *(void *)(a1 + 264) = *(void *)(a2 + 264);
    }
    if ((v33 & 0x20000) != 0) {
      *(_DWORD *)(a1 + 272) = *(_DWORD *)(a2 + 272);
    }
    *(_DWORD *)(a1 + 16) |= v33;
  }
  uint64_t v38 = *(void *)(a2 + 8);
  if (v38)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v38 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_141F630(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 1;
  }
  uint64_t result = sub_15B0F18(*(void *)(a1 + 160));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_141F65C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gemini.Indoor");
}

uint64_t sub_141F66C(uint64_t a1)
{
  uint64_t result = sub_188CC00(a1 + 24);
  uint64_t v3 = *(unsigned int *)(a1 + 56);
  if ((int)v3 >= 1)
  {
    int v4 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = sub_1420ED0(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 56) = 0;
  }
  char v7 = *(unsigned char *)(a1 + 8);
  uint64_t v6 = a1 + 8;
  *(_DWORD *)(v6 + 64) = 0;
  *(_DWORD *)(v6 + 8) = 0;
  if (v7)
  {
    return sub_188B4AC((uint64_t *)v6);
  }
  return result;
}

uint64_t sub_141F6F8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_142042C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_141F788(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1422A24(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

std::string *sub_141F818(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (const std::string **)(*(void *)(a2 + 40) + 8);
    int v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = (std::string *)sub_188FB98((uint64_t)&v3[1], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2]- LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    int v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *int v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    int v11 = (std::string **)sub_188CCE4((uint64_t)&v3[2], *(_DWORD *)(a2 + 56));
    uint64_t result = (std::string *)sub_14921DC((uint64_t *)&v3[2], v11, v10, v9, *(_DWORD *)v3[2].__r_.__value_.__r.__words[2]- LODWORD(v3[2].__r_.__value_.__r.__words[1]));
    int v12 = LODWORD(v3[2].__r_.__value_.__r.__words[1]) + v9;
    LODWORD(v3[2].__r_.__value_.__r.__words[1]) = v12;
    int v13 = (int *)v3[2].__r_.__value_.__r.__words[2];
    if (*v13 < v12) {
      int *v13 = v12;
    }
  }
  if (*(unsigned char *)(a2 + 16))
  {
    int v14 = *(_DWORD *)(a2 + 72);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
    LODWORD(v3[3].__r_.__value_.__l.__data_) = v14;
  }
  uint64_t v15 = *(void *)(a2 + 8);
  if (v15)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v15 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_141F968(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_141FA08(uint64_t a1)
{
  sub_141F968(a1);

  operator delete();
}

uint64_t sub_141FA40(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v1 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v1 + 23) < 0)
    {
      **(unsigned char **)unint64_t v1 = 0;
      *(void *)(v1 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v1 = 0;
      *(unsigned char *)(v1 + 23) = 0;
    }
  }
  char v3 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 24) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v3) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_141FA88(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v19 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v19, a3[11].i32[1])) {
    goto LABEL_30;
  }
  int v6 = (void *)(a1 + 8);
  while (1)
  {
    int v7 = (char *)(*(void *)v19 + 1);
    unsigned int v8 = **(unsigned char **)v19;
    if ((char)**(unsigned char **)v19 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        int v7 = (char *)sub_188C180(*(uint64_t *)v19, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        int v7 = (char *)(*(void *)v19 + 2);
      }
    }
    *(void *)uint64_t v19 = v7;
    if (v8 >> 3 == 2) {
      break;
    }
    if (v8 >> 3 != 1 || v8 != 10) {
      goto LABEL_12;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v15 = *(void *)(a1 + 8);
    int v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
    if (v15) {
      int v16 = (uint64_t *)*v16;
    }
    uint64_t v17 = (std::string *)sub_1880F84((void *)(a1 + 24), v16);
    int v14 = (void *)sub_188C244(v17, *(char **)v19, (uint64_t)a3);
LABEL_24:
    *(void *)uint64_t v19 = v14;
    if (!v14) {
      goto LABEL_31;
    }
LABEL_25:
    if (sub_11947B8((uint64_t)a3, (char **)v19, a3[11].i32[1])) {
      goto LABEL_30;
    }
  }
  if (v8 == 21)
  {
    v5 |= 2u;
    *(_DWORD *)(a1 + 32) = *(_DWORD *)v7;
    *(void *)uint64_t v19 = v7 + 4;
    goto LABEL_25;
  }
LABEL_12:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      int v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      int v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v7 = *(char **)v19;
    }
    int v14 = sub_1885AC0(v8, v13, v7, a3);
    goto LABEL_24;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    goto LABEL_30;
  }
LABEL_31:
  *(void *)uint64_t v19 = 0;
LABEL_30:
  *(_DWORD *)(a1 + 16) |= v5;
  return *(void *)v19;
}

char *sub_141FC24(uint64_t a1, char *__dst, void *a3)
{
  int v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    int v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    int v7 = *(_DWORD *)(a1 + 32);
    char *v4 = 21;
    *(_DWORD *)(v4 + 1) = v7;
    v4 += 5;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if ((v8 & 1) == 0) {
    return v4;
  }
  unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v10 + 31) < 0)
  {
    int v11 = *(void **)(v10 + 8);
    uint64_t v12 = *(void *)(v10 + 16);
  }
  else
  {
    int v11 = (void *)(v10 + 8);
    LODWORD(v12) = *(unsigned __int8 *)(v10 + 31);
  }
  if (*a3 - (void)v4 >= (int)v12)
  {
    uint64_t v13 = (int)v12;
    memcpy(v4, v11, (int)v12);
    v4 += v13;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v11, v12, v4);
}

uint64_t sub_141FD28(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) != 0)
  {
    if (v1)
    {
      unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
      uint64_t v6 = *(void *)(v4 + 8);
      if ((v5 & 0x80u) == 0) {
        uint64_t v6 = v5;
      }
      uint64_t v2 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    else
    {
      uint64_t v2 = 0;
    }
    if ((v1 & 2) != 0) {
      uint64_t v3 = v2 + 5;
    }
    else {
      uint64_t v3 = v2;
    }
  }
  else
  {
    uint64_t v3 = 0;
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v9 + 31) < 0) {
      uint64_t v10 = *(void *)(v9 + 16);
    }
    else {
      uint64_t v10 = *(unsigned __int8 *)(v9 + 31);
    }
    v3 += v10;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

uint64_t sub_141FDC8()
{
  return 1;
}

void *sub_141FDD0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gemini.ProviderTypedScore.ProviderLanguageScore");
}

uint64_t sub_141FDE0(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  unint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_141FE80(uint64_t a1)
{
  sub_141FDE0(a1);

  operator delete();
}

uint64_t sub_141FEB8(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v1 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v1 + 23) < 0)
    {
      **(unsigned char **)unint64_t v1 = 0;
      *(void *)(v1 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v1 = 0;
      *(unsigned char *)(v1 + 23) = 0;
    }
  }
  char v3 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 24) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v3) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_141FF00(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v19 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v19, a3[11].i32[1])) {
    goto LABEL_30;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = (char *)(*(void *)v19 + 1);
    unsigned int v8 = **(unsigned char **)v19;
    if ((char)**(unsigned char **)v19 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180(*(uint64_t *)v19, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (char *)(*(void *)v19 + 2);
      }
    }
    *(void *)uint64_t v19 = v7;
    if (v8 >> 3 == 2) {
      break;
    }
    if (v8 >> 3 != 1 || v8 != 10) {
      goto LABEL_12;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v15 = *(void *)(a1 + 8);
    int v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
    if (v15) {
      int v16 = (uint64_t *)*v16;
    }
    uint64_t v17 = (std::string *)sub_1880F84((void *)(a1 + 24), v16);
    int v14 = (void *)sub_188C244(v17, *(char **)v19, (uint64_t)a3);
LABEL_24:
    *(void *)uint64_t v19 = v14;
    if (!v14) {
      goto LABEL_31;
    }
LABEL_25:
    if (sub_11947B8((uint64_t)a3, (char **)v19, a3[11].i32[1])) {
      goto LABEL_30;
    }
  }
  if (v8 == 21)
  {
    v5 |= 2u;
    *(_DWORD *)(a1 + 32) = *(_DWORD *)v7;
    *(void *)uint64_t v19 = v7 + 4;
    goto LABEL_25;
  }
LABEL_12:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = *(char **)v19;
    }
    int v14 = sub_1885AC0(v8, v13, v7, a3);
    goto LABEL_24;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    goto LABEL_30;
  }
LABEL_31:
  *(void *)uint64_t v19 = 0;
LABEL_30:
  *(_DWORD *)(a1 + 16) |= v5;
  return *(void *)v19;
}

char *sub_142009C(uint64_t a1, char *__dst, void *a3)
{
  unint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    unint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    int v7 = *(_DWORD *)(a1 + 32);
    char *v4 = 21;
    *(_DWORD *)(v4 + 1) = v7;
    v4 += 5;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if ((v8 & 1) == 0) {
    return v4;
  }
  unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v10 + 31) < 0)
  {
    int v11 = *(void **)(v10 + 8);
    uint64_t v12 = *(void *)(v10 + 16);
  }
  else
  {
    int v11 = (void *)(v10 + 8);
    LODWORD(v12) = *(unsigned __int8 *)(v10 + 31);
  }
  if (*a3 - (void)v4 >= (int)v12)
  {
    uint64_t v13 = (int)v12;
    memcpy(v4, v11, (int)v12);
    v4 += v13;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v11, v12, v4);
}

uint64_t sub_14201A0(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) != 0)
  {
    if (v1)
    {
      unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
      uint64_t v6 = *(void *)(v4 + 8);
      if ((v5 & 0x80u) == 0) {
        uint64_t v6 = v5;
      }
      uint64_t v2 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    else
    {
      uint64_t v2 = 0;
    }
    if ((v1 & 2) != 0) {
      uint64_t v3 = v2 + 5;
    }
    else {
      uint64_t v3 = v2;
    }
  }
  else
  {
    uint64_t v3 = 0;
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v9 + 31) < 0) {
      uint64_t v10 = *(void *)(v9 + 16);
    }
    else {
      uint64_t v10 = *(unsigned __int8 *)(v9 + 31);
    }
    v3 += v10;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

uint64_t sub_1420240()
{
  return 1;
}

void *sub_1420248@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gemini.ProviderTypedScore.ProviderLanguageWeight");
}

uint64_t sub_1420258(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  unint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 72);
  if (*(uint64_t **)(a1 + 72) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  sub_149057C((void *)(a1 + 48));
  sub_14904FC((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1420310(uint64_t a1)
{
  sub_1420258(a1);

  operator delete();
}

uint64_t sub_1420348(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_141FA40(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  uint64_t v5 = *(unsigned int *)(v1 + 56);
  if ((int)v5 >= 1)
  {
    uint64_t v6 = (uint64_t *)(*(void *)(v1 + 64) + 8);
    do
    {
      uint64_t v7 = *v6++;
      uint64_t result = sub_141FEB8(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(v1 + 56) = 0;
  }
  int v8 = *(_DWORD *)(v1 + 16);
  if (v8)
  {
    unint64_t v9 = *(void *)(v1 + 72) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v9 + 23) < 0)
    {
      **(unsigned char **)unint64_t v9 = 0;
      *(void *)(v9 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v9 = 0;
      *(unsigned char *)(v9 + 23) = 0;
    }
  }
  if ((v8 & 6) != 0) {
    *(void *)(v1 + 80) = 0;
  }
  char v11 = *(unsigned char *)(v1 + 8);
  uint64_t v10 = v1 + 8;
  *(_DWORD *)(v10 + 8) = 0;
  if (v11)
  {
    return sub_188B4AC((uint64_t *)v10);
  }
  return result;
}

uint64_t sub_142042C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v33 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v33, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    int v8 = (char *)(*(void *)v33 + 1);
    unsigned int v9 = **(unsigned char **)v33;
    if ((char)**(unsigned char **)v33 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        int v8 = (char *)sub_188C180(*(uint64_t *)v33, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        int v8 = (char *)(*(void *)v33 + 2);
      }
    }
    *(void *)int v33 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_38;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        int v14 = (std::string *)sub_1880F84((void *)(a1 + 72), v13);
        uint64_t v15 = (void *)sub_188C244(v14, *(char **)v33, (uint64_t)a3);
        goto LABEL_45;
      case 2u:
        if (v9 != 21) {
          goto LABEL_38;
        }
        int v17 = *(_DWORD *)v8;
        int v16 = v8 + 4;
        v5 |= 2u;
        *(_DWORD *)(a1 + 80) = v17;
        goto LABEL_17;
      case 3u:
        if (v9 != 29) {
          goto LABEL_38;
        }
        int v18 = *(_DWORD *)v8;
        int v16 = v8 + 4;
        v5 |= 4u;
        *(_DWORD *)(a1 + 84) = v18;
LABEL_17:
        *(void *)int v33 = v16;
        goto LABEL_46;
      case 4u:
        if (v9 != 34) {
          goto LABEL_38;
        }
        uint64_t v19 = v8 - 1;
        while (1)
        {
          unint64_t v20 = (unsigned __int8 *)(v19 + 1);
          *(void *)int v33 = v19 + 1;
          int v21 = *(_DWORD **)(a1 + 40);
          if (v21 && (uint64_t v22 = *(int *)(a1 + 32), (int)v22 < *v21))
          {
            *(_DWORD *)(a1 + 32) = v22 + 1;
            uint64_t v23 = *(void *)&v21[2 * v22 + 2];
          }
          else
          {
            uint64_t v24 = sub_144ADD4(*(void *)(a1 + 24));
            uint64_t v23 = sub_188CDC8(a1 + 24, v24);
            unint64_t v20 = *(unsigned __int8 **)v33;
          }
          uint64_t v19 = (char *)sub_1420744(a3, v23, v20);
          *(void *)int v33 = v19;
          if (!v19) {
            goto LABEL_51;
          }
          if (*(void *)a3 <= (unint64_t)v19 || *v19 != 34) {
            goto LABEL_46;
          }
        }
      case 5u:
        if (v9 != 42) {
          goto LABEL_38;
        }
        uint64_t v25 = v8 - 1;
        while (1)
        {
          int v26 = (unsigned __int8 *)(v25 + 1);
          *(void *)int v33 = v25 + 1;
          unint64_t v27 = *(_DWORD **)(a1 + 64);
          if (v27 && (uint64_t v28 = *(int *)(a1 + 56), (int)v28 < *v27))
          {
            *(_DWORD *)(a1 + 56) = v28 + 1;
            uint64_t v29 = *(void *)&v27[2 * v28 + 2];
          }
          else
          {
            uint64_t v30 = sub_144AE5C(*(void *)(a1 + 48));
            uint64_t v29 = sub_188CDC8(a1 + 48, v30);
            int v26 = *(unsigned __int8 **)v33;
          }
          uint64_t v25 = (char *)sub_14207D4(a3, v29, v26);
          *(void *)int v33 = v25;
          if (!v25) {
            goto LABEL_51;
          }
          if (*(void *)a3 <= (unint64_t)v25 || *v25 != 42) {
            goto LABEL_46;
          }
        }
      default:
LABEL_38:
        if (v9) {
          BOOL v31 = (v9 & 7) == 4;
        }
        else {
          BOOL v31 = 1;
        }
        if (!v31)
        {
          if (*v7)
          {
            uint64_t v32 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v32 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            int v8 = *(char **)v33;
          }
          uint64_t v15 = sub_1885AC0(v9, v32, v8, a3);
LABEL_45:
          *(void *)int v33 = v15;
          if (!v15) {
            goto LABEL_51;
          }
LABEL_46:
          if (sub_11947B8((uint64_t)a3, (char **)v33, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_51:
        }
          *(void *)int v33 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v33;
    }
  }
}

uint64_t sub_1420744(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_141FA88(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_14207D4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_141FF00(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_1420864(uint64_t a1, unsigned char *__dst, void *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_12;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  int v7 = *(_DWORD *)(a1 + 80);
  unsigned char *v4 = 21;
  *(_DWORD *)(v4 + 1) = v7;
  v4 += 5;
  if ((v6 & 4) != 0)
  {
LABEL_9:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    int v8 = *(_DWORD *)(a1 + 84);
    unsigned char *v4 = 29;
    *(_DWORD *)(v4 + 1) = v8;
    v4 += 5;
  }
LABEL_12:
  int v9 = *(_DWORD *)(a1 + 32);
  if (v9)
  {
    for (int i = 0; i != v9; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v11 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      unsigned char *v4 = 34;
      unsigned int v12 = *(_DWORD *)(v11 + 20);
      v4[1] = v12;
      if (v12 > 0x7F) {
        uint64_t v13 = sub_188A9CC(v12, v4 + 1);
      }
      else {
        uint64_t v13 = v4 + 2;
      }
      uint64_t v4 = sub_141FC24(v11, v13, a3);
    }
  }
  int v14 = *(_DWORD *)(a1 + 56);
  if (v14)
  {
    for (int j = 0; j != v14; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v16 = *(void *)(*(void *)(a1 + 64) + 8 * j + 8);
      unsigned char *v4 = 42;
      unsigned int v17 = *(_DWORD *)(v16 + 20);
      v4[1] = v17;
      if (v17 > 0x7F) {
        int v18 = sub_188A9CC(v17, v4 + 1);
      }
      else {
        int v18 = v4 + 2;
      }
      uint64_t v4 = sub_142009C(v16, v18, a3);
    }
  }
  uint64_t v19 = *(void *)(a1 + 8);
  if ((v19 & 1) == 0) {
    return v4;
  }
  unint64_t v21 = v19 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v21 + 31) < 0)
  {
    uint64_t v22 = *(void **)(v21 + 8);
    uint64_t v23 = *(void *)(v21 + 16);
  }
  else
  {
    uint64_t v22 = (void *)(v21 + 8);
    LODWORD(v23) = *(unsigned __int8 *)(v21 + 31);
  }
  if (*a3 - (void)v4 >= (int)v23)
  {
    uint64_t v24 = (int)v23;
    memcpy(v4, v22, (int)v23);
    v4 += v24;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v22, v23, v4);
}

uint64_t sub_1420ACC(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_141FD28(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(int *)(a1 + 56);
  uint64_t v9 = v2 + v8;
  uint64_t v10 = *(void *)(a1 + 64);
  if (v10) {
    uint64_t v11 = (uint64_t *)(v10 + 8);
  }
  else {
    uint64_t v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_14201A0(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  int v15 = *(_DWORD *)(a1 + 16);
  if ((v15 & 7) != 0)
  {
    if (v15)
    {
      unint64_t v16 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v17 = *(unsigned __int8 *)(v16 + 23);
      uint64_t v18 = *(void *)(v16 + 8);
      if ((v17 & 0x80u) == 0) {
        uint64_t v18 = v17;
      }
      v9 += v18 + ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    uint64_t v19 = v9 + 5;
    if ((v15 & 2) == 0) {
      uint64_t v19 = v9;
    }
    if ((v15 & 4) != 0) {
      uint64_t v9 = v19 + 5;
    }
    else {
      uint64_t v9 = v19;
    }
  }
  uint64_t v20 = *(void *)(a1 + 8);
  if (v20)
  {
    unint64_t v22 = v20 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v22 + 31) < 0) {
      uint64_t v23 = *(void *)(v22 + 16);
    }
    else {
      uint64_t v23 = *(unsigned __int8 *)(v22 + 31);
    }
    v9 += v23;
  }
  *(_DWORD *)(a1 + 20) = v9;
  return v9;
}

std::string *sub_1420C34(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = (std::string *)sub_14920E4((uint64_t *)&v3[1], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2]- LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    uint64_t v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    uint64_t v11 = (std::string **)sub_188CCE4((uint64_t)&v3[2], *(_DWORD *)(a2 + 56));
    uint64_t result = (std::string *)sub_1492160((uint64_t *)&v3[2], v11, v10, v9, *(_DWORD *)v3[2].__r_.__value_.__r.__words[2]- LODWORD(v3[2].__r_.__value_.__r.__words[1]));
    int v12 = LODWORD(v3[2].__r_.__value_.__r.__words[1]) + v9;
    LODWORD(v3[2].__r_.__value_.__r.__words[1]) = v12;
    uint64_t v13 = (int *)v3[2].__r_.__value_.__r.__words[2];
    if (*v13 < v12) {
      int *v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 16);
  if ((v14 & 7) != 0)
  {
    if (v14)
    {
      unint64_t v16 = (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v18 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v18 = (uint64_t *)*v18;
      }
      uint64_t result = sub_1881DF4((std::string **)&v3[3], v16, v18);
      if ((v14 & 2) == 0)
      {
LABEL_10:
        if ((v14 & 4) == 0)
        {
LABEL_12:
          LODWORD(v3->__r_.__value_.__r.__words[2]) |= v14;
          goto LABEL_13;
        }
LABEL_11:
        HIDWORD(v3[3].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 84);
        goto LABEL_12;
      }
    }
    else if ((v14 & 2) == 0)
    {
      goto LABEL_10;
    }
    LODWORD(v3[3].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 80);
    if ((v14 & 4) == 0) {
      goto LABEL_12;
    }
    goto LABEL_11;
  }
LABEL_13:
  uint64_t v15 = *(void *)(a2 + 8);
  if (v15)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v15 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1420DD8()
{
  return 1;
}

void *sub_1420DE0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gemini.ProviderTypedScore");
}

uint64_t sub_1420DF0(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  sub_1889DE8((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1420E98(uint64_t a1)
{
  sub_1420DF0(a1);

  operator delete();
}

uint64_t sub_1420ED0(uint64_t a1)
{
  uint64_t result = sub_188CC00(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v3 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)unint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t v4 = a1 + 8;
  *(_DWORD *)(v4 + 48) = 0;
  *(_DWORD *)(v4 + 8) = 0;
  if (v5)
  {
    return sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

uint64_t sub_1420F58(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v28 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v28, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  uint64_t v8 = (uint64_t **)(a1 + 24);
  while (1)
  {
    int v9 = (char *)(*(void *)v28 + 1);
    unsigned int v10 = **(unsigned char **)v28;
    if ((char)**(unsigned char **)v28 < 0)
    {
      unsigned int v11 = v10 + (*v9 << 7);
      unsigned int v10 = v11 - 128;
      if (*v9 < 0)
      {
        int v9 = (char *)sub_188C180(*(uint64_t *)v28, v11 - 128);
        unsigned int v10 = v12;
      }
      else
      {
        int v9 = (char *)(*(void *)v28 + 2);
      }
    }
    *(void *)uint64_t v28 = v9;
    unsigned int v13 = v10 >> 3;
    if (v10 >> 3 != 3) {
      break;
    }
    if (v10 != 26) {
      goto LABEL_14;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v18 = *(void *)(a1 + 8);
    uint64_t v19 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
    if (v18) {
      uint64_t v19 = (uint64_t *)*v19;
    }
    uint64_t v20 = (std::string *)sub_1880F84((void *)(a1 + 48), v19);
    uint64_t v17 = (void *)sub_188C244(v20, *(char **)v28, (uint64_t)a3);
LABEL_25:
    *(void *)uint64_t v28 = v17;
    if (!v17) {
      goto LABEL_45;
    }
LABEL_40:
    if (sub_11947B8((uint64_t)a3, (char **)v28, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v13 == 2)
  {
    if (v10 == 18)
    {
      unint64_t v21 = v9 - 1;
      while (1)
      {
        unint64_t v22 = (char *)(v21 + 1);
        *(void *)uint64_t v28 = v21 + 1;
        uint64_t v23 = *(_DWORD **)(a1 + 40);
        if (v23 && (uint64_t v24 = *(int *)(a1 + 32), (int)v24 < *v23))
        {
          *(_DWORD *)(a1 + 32) = v24 + 1;
          uint64_t v25 = *(std::string **)&v23[2 * v24 + 2];
        }
        else
        {
          if (!*v8) {
            operator new();
          }
          void *v27 = v26;
          v27[1] = sub_3A6EDC;
          void *v26 = 0;
          v26[1] = 0;
          int v26[2] = 0;
          uint64_t v25 = (std::string *)sub_188CDC8(a1 + 24, (uint64_t)v26);
          unint64_t v22 = *(char **)v28;
        }
        unint64_t v21 = sub_188C244(v25, v22, (uint64_t)a3);
        *(void *)uint64_t v28 = v21;
        if (!v21) {
          goto LABEL_45;
        }
        if (*(void *)a3 <= (unint64_t)v21 || *v21 != 18) {
          goto LABEL_40;
        }
      }
    }
  }
  else if (v13 == 1 && v10 == 13)
  {
    v5 |= 2u;
    *(_DWORD *)(a1 + 56) = *(_DWORD *)v9;
    *(void *)uint64_t v28 = v9 + 4;
    goto LABEL_40;
  }
LABEL_14:
  if (v10) {
    BOOL v15 = (v10 & 7) == 4;
  }
  else {
    BOOL v15 = 1;
  }
  if (!v15)
  {
    if (*v7)
    {
      unint64_t v16 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v16 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v9 = *(char **)v28;
    }
    uint64_t v17 = sub_1885AC0(v10, v16, v9, a3);
    goto LABEL_25;
  }
  if (v9)
  {
    a3[10].i32[0] = v10 - 1;
    goto LABEL_2;
  }
LABEL_45:
  *(void *)uint64_t v28 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return *(void *)v28;
}

char *sub_14211E4(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    int v7 = *(_DWORD *)(a1 + 56);
    char *v4 = 13;
    *(_DWORD *)(v4 + 1) = v7;
    v4 += 5;
  }
  uint64_t v8 = *(unsigned int *)(a1 + 32);
  if ((int)v8 >= 1)
  {
    uint64_t v9 = 0;
    uint64_t v10 = 8 * v8;
    do
    {
      unsigned int v11 = *(void **)(*(void *)(a1 + 40) + v9 + 8);
      if (*((char *)v11 + 23) < 0)
      {
        int64_t v12 = v11[1];
        if (v12 > 127) {
          goto LABEL_16;
        }
      }
      else
      {
        int64_t v12 = *((unsigned __int8 *)v11 + 23);
      }
      if (*(void *)a3 - (void)v4 + 14 >= v12)
      {
        char *v4 = 18;
        v4[1] = v12;
        if (*((char *)v11 + 23) < 0) {
          unsigned int v11 = (void *)*v11;
        }
        unsigned int v13 = v4 + 2;
        memcpy(v13, v11, v12);
        uint64_t v4 = &v13[v12];
        goto LABEL_14;
      }
LABEL_16:
      uint64_t v4 = (char *)sub_188A868(a3, 2, (uint64_t)v11, v4);
LABEL_14:
      v9 += 8;
    }
    while (v10 != v9);
  }
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v14 = *(void *)(a1 + 8);
  if ((v14 & 1) == 0) {
    return v4;
  }
  unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v16 + 31) < 0)
  {
    uint64_t v17 = *(void **)(v16 + 8);
    uint64_t v18 = *(void *)(v16 + 16);
  }
  else
  {
    uint64_t v17 = (void *)(v16 + 8);
    LODWORD(v18) = *(unsigned __int8 *)(v16 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v18)
  {
    uint64_t v19 = (int)v18;
    memcpy(v4, v17, (int)v18);
    v4 += v19;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v17, v18, v4);
}

uint64_t sub_14213A8(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 32);
  if ((int)v1 < 1)
  {
    uint64_t v3 = *(unsigned int *)(a1 + 32);
  }
  else
  {
    uint64_t v2 = (uint64_t *)(*(void *)(a1 + 40) + 8);
    uint64_t v3 = *(unsigned int *)(a1 + 32);
    do
    {
      uint64_t v4 = *v2++;
      uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
      uint64_t v6 = *(void *)(v4 + 8);
      if ((v5 & 0x80u) == 0) {
        uint64_t v6 = v5;
      }
      v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6);
      --v1;
    }
    while (v1);
  }
  int v7 = *(_DWORD *)(a1 + 16);
  if ((v7 & 3) != 0)
  {
    if (v7)
    {
      unint64_t v8 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v9 = *(unsigned __int8 *)(v8 + 23);
      uint64_t v10 = *(void *)(v8 + 8);
      if ((v9 & 0x80u) == 0) {
        uint64_t v10 = v9;
      }
      v3 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v7 & 2) != 0) {
      v3 += 5;
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v13 + 31) < 0) {
      uint64_t v14 = *(void *)(v13 + 16);
    }
    else {
      uint64_t v14 = *(unsigned __int8 *)(v13 + 31);
    }
    v3 += v14;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_142149C(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (const std::string **)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = (std::string *)sub_188FB98((uint64_t)&v3[1], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2]- LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    unint64_t v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *unint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 3) != 0)
  {
    if (v9)
    {
      uint64_t v10 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      int64_t v12 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        int64_t v12 = (uint64_t *)*v12;
      }
      uint64_t result = sub_1881DF4((std::string **)&v3[2], v10, v12);
    }
    if ((v9 & 2) != 0) {
      LODWORD(v3[2].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 56);
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= v9;
  }
  uint64_t v13 = *(void *)(a2 + 8);
  if (v13)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v13 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_14215C4()
{
  return 1;
}

void *sub_14215CC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gemini.UniversalScore.ExperimentalData");
}

void *sub_14215DC(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_14905FC(a1 + 6);
  sub_1889DE8(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1421664(void *a1)
{
  sub_14215DC(a1);

  operator delete();
}

uint64_t sub_142169C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v30 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v30, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (uint64_t **)(a1 + 24);
  unint64_t v8 = (void *)(a1 + 8);
  while (1)
  {
    int v9 = (char *)(*(void *)v30 + 1);
    unsigned int v10 = **(unsigned char **)v30;
    if ((char)**(unsigned char **)v30 < 0)
    {
      unsigned int v11 = v10 + (*v9 << 7);
      unsigned int v10 = v11 - 128;
      if (*v9 < 0)
      {
        int v9 = (char *)sub_188C180(*(uint64_t *)v30, v11 - 128);
        unsigned int v10 = v12;
      }
      else
      {
        int v9 = (char *)(*(void *)v30 + 2);
      }
    }
    *(void *)uint64_t v30 = v9;
    unsigned int v13 = v10 >> 3;
    if (v10 >> 3 == 3)
    {
      if (v10 == 26)
      {
        uint64_t v17 = v9 - 1;
        while (1)
        {
          uint64_t v18 = (unsigned __int8 *)(v17 + 1);
          *(void *)uint64_t v30 = v17 + 1;
          uint64_t v19 = *(_DWORD **)(a1 + 64);
          if (v19 && (uint64_t v20 = *(int *)(a1 + 56), (int)v20 < *v19))
          {
            *(_DWORD *)(a1 + 56) = v20 + 1;
            uint64_t v21 = *(void *)&v19[2 * v20 + 2];
          }
          else
          {
            uint64_t v22 = sub_144AF94(*(void *)(a1 + 48));
            uint64_t v21 = sub_188CDC8(a1 + 48, v22);
            uint64_t v18 = *(unsigned __int8 **)v30;
          }
          uint64_t v17 = (char *)sub_1421970(a3, v21, v18);
          *(void *)uint64_t v30 = v17;
          if (!v17) {
            goto LABEL_50;
          }
          if (*(void *)a3 <= (unint64_t)v17 || *v17 != 26) {
            goto LABEL_45;
          }
        }
      }
    }
    else if (v13 == 2)
    {
      if (v10 == 18)
      {
        uint64_t v23 = v9 - 1;
        while (1)
        {
          uint64_t v24 = (char *)(v23 + 1);
          *(void *)uint64_t v30 = v23 + 1;
          uint64_t v25 = *(_DWORD **)(a1 + 40);
          if (v25 && (uint64_t v26 = *(int *)(a1 + 32), (int)v26 < *v25))
          {
            *(_DWORD *)(a1 + 32) = v26 + 1;
            unint64_t v27 = *(std::string **)&v25[2 * v26 + 2];
          }
          else
          {
            if (!*v7) {
              operator new();
            }
            void *v29 = v28;
            v29[1] = sub_3A6EDC;
            void *v28 = 0;
            v28[1] = 0;
            int v28[2] = 0;
            unint64_t v27 = (std::string *)sub_188CDC8(a1 + 24, (uint64_t)v28);
            uint64_t v24 = *(char **)v30;
          }
          uint64_t v23 = sub_188C244(v27, v24, (uint64_t)a3);
          *(void *)uint64_t v30 = v23;
          if (!v23) {
            goto LABEL_50;
          }
          if (*(void *)a3 <= (unint64_t)v23 || *v23 != 18) {
            goto LABEL_45;
          }
        }
      }
    }
    else if (v13 == 1 && v10 == 13)
    {
      *(_DWORD *)(a1 + 72) = *(_DWORD *)v9;
      *(void *)uint64_t v30 = v9 + 4;
      int v5 = 1;
      goto LABEL_45;
    }
    if (!v10 || (v10 & 7) == 4) {
      break;
    }
    if (*v8)
    {
      unint64_t v16 = (std::string *)((*v8 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v16 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v9 = *(char **)v30;
    }
    *(void *)uint64_t v30 = sub_1885AC0(v10, v16, v9, a3);
    if (!*(void *)v30) {
      goto LABEL_50;
    }
LABEL_45:
    if (sub_11947B8((uint64_t)a3, (char **)v30, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9)
  {
    a3[10].i32[0] = v10 - 1;
    goto LABEL_2;
  }
LABEL_50:
  *(void *)uint64_t v30 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return *(void *)v30;
}

uint64_t sub_1421970(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1420F58(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1421A00(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= __dst) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    int v6 = *(_DWORD *)(a1 + 72);
    char *v4 = 13;
    *(_DWORD *)(v4 + 1) = v6;
    v4 += 5;
  }
  uint64_t v7 = *(unsigned int *)(a1 + 32);
  if ((int)v7 >= 1)
  {
    uint64_t v8 = 0;
    uint64_t v9 = 8 * v7;
    do
    {
      unsigned int v10 = *(void **)(*(void *)(a1 + 40) + v8 + 8);
      if (*((char *)v10 + 23) < 0)
      {
        int64_t v11 = v10[1];
        if (v11 > 127) {
          goto LABEL_16;
        }
      }
      else
      {
        int64_t v11 = *((unsigned __int8 *)v10 + 23);
      }
      if (*(void *)a3 - (void)v4 + 14 >= v11)
      {
        char *v4 = 18;
        v4[1] = v11;
        if (*((char *)v10 + 23) < 0) {
          unsigned int v10 = (void *)*v10;
        }
        unsigned int v12 = v4 + 2;
        memcpy(v12, v10, v11);
        int v4 = &v12[v11];
        goto LABEL_14;
      }
LABEL_16:
      int v4 = (char *)sub_188A868(a3, 2, (uint64_t)v10, v4);
LABEL_14:
      v8 += 8;
    }
    while (v9 != v8);
  }
  int v13 = *(_DWORD *)(a1 + 56);
  if (v13)
  {
    for (int i = 0; i != v13; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v15 = *(void *)(*(void *)(a1 + 64) + 8 * i + 8);
      char *v4 = 26;
      unsigned int v16 = *(_DWORD *)(v15 + 20);
      v4[1] = v16;
      if (v16 > 0x7F) {
        uint64_t v17 = sub_188A9CC(v16, v4 + 1);
      }
      else {
        uint64_t v17 = v4 + 2;
      }
      int v4 = sub_14211E4(v15, (unint64_t)v17, a3);
    }
  }
  uint64_t v18 = *(void *)(a1 + 8);
  if ((v18 & 1) == 0) {
    return v4;
  }
  unint64_t v20 = v18 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v20 + 31) < 0)
  {
    uint64_t v21 = *(void **)(v20 + 8);
    uint64_t v22 = *(void *)(v20 + 16);
  }
  else
  {
    uint64_t v21 = (void *)(v20 + 8);
    LODWORD(v22) = *(unsigned __int8 *)(v20 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v22)
  {
    uint64_t v23 = (int)v22;
    memcpy(v4, v21, (int)v22);
    v4 += v23;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v21, v22, v4);
}

uint64_t sub_1421C28(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  if ((int)v2 < 1)
  {
    uint64_t v4 = *(unsigned int *)(a1 + 32);
  }
  else
  {
    uint64_t v3 = (uint64_t *)(*(void *)(a1 + 40) + 8);
    uint64_t v4 = *(unsigned int *)(a1 + 32);
    do
    {
      uint64_t v5 = *v3++;
      uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
      uint64_t v7 = *(void *)(v5 + 8);
      if ((v6 & 0x80u) == 0) {
        uint64_t v7 = v6;
      }
      v4 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      --v2;
    }
    while (v2);
  }
  uint64_t v8 = *(int *)(a1 + 56);
  uint64_t v9 = v4 + v8;
  uint64_t v10 = *(void *)(a1 + 64);
  if (v10) {
    int64_t v11 = (uint64_t *)(v10 + 8);
  }
  else {
    int64_t v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_14213A8(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  if (*(unsigned char *)(a1 + 16)) {
    uint64_t result = v9 + 5;
  }
  else {
    uint64_t result = v9;
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if (v16)
  {
    unint64_t v17 = v16 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v17 + 31) < 0) {
      uint64_t v18 = *(void *)(v17 + 16);
    }
    else {
      uint64_t v18 = *(unsigned __int8 *)(v17 + 31);
    }
    result += v18;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

uint64_t sub_1421D40()
{
  return 1;
}

void *sub_1421D48@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gemini.UniversalScore");
}

uint64_t sub_1421D58(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_9;
    }
  }
  else if (v4)
  {
    goto LABEL_9;
  }
  uint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 56) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 56));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_9:
  sub_1889DE8((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1421E18(uint64_t a1)
{
  sub_1421D58(a1);

  operator delete();
}

uint64_t sub_1421E50(uint64_t a1)
{
  uint64_t result = sub_188CC00(a1 + 24);
  int v3 = *(_DWORD *)(a1 + 16);
  if ((v3 & 3) != 0)
  {
    if (v3)
    {
      unint64_t v4 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v4 + 23) < 0)
      {
        **(unsigned char **)unint64_t v4 = 0;
        *(void *)(v4 + 8) = 0;
        if ((v3 & 2) == 0) {
          goto LABEL_11;
        }
        goto LABEL_6;
      }
      *(unsigned char *)unint64_t v4 = 0;
      *(unsigned char *)(v4 + 23) = 0;
    }
    if ((v3 & 2) == 0) {
      goto LABEL_11;
    }
LABEL_6:
    unint64_t v5 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v5 + 23) < 0)
    {
      **(unsigned char **)unint64_t v5 = 0;
      *(void *)(v5 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v5 = 0;
      *(unsigned char *)(v5 + 23) = 0;
    }
  }
LABEL_11:
  char v7 = *(unsigned char *)(a1 + 8);
  uint64_t v6 = a1 + 8;
  *(_DWORD *)(v6 + 56) = 0;
  *(_DWORD *)(v6 + 8) = 0;
  if (v7)
  {
    return sub_188B4AC((uint64_t *)v6);
  }
  return result;
}

uint64_t sub_1421F10(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v33 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v33, a3[11].i32[1])) {
    return *(void *)v33;
  }
  uint64_t v6 = (void *)(a1 + 8);
  char v7 = (uint64_t **)(a1 + 24);
  while (2)
  {
    uint64_t v8 = (char *)(*(void *)v33 + 1);
    unsigned int v9 = **(unsigned char **)v33;
    if ((char)**(unsigned char **)v33 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180(*(uint64_t *)v33, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (char *)(*(void *)v33 + 2);
      }
    }
    *(void *)int v33 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_37;
        }
        uint64_t v12 = v8 + 1;
        unint64_t v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        int v15 = v13 + (v14 << 7);
        unint64_t v13 = (v15 - 128);
        if (v14 < 0)
        {
          *(void *)int v33 = sub_188C138((uint64_t)v8, (v15 - 128));
          if (!*(void *)v33) {
            return 0;
          }
          unint64_t v13 = v31;
        }
        else
        {
          uint64_t v12 = v8 + 2;
LABEL_13:
          *(void *)int v33 = v12;
        }
        if (v13 > 0xB)
        {
          if (*v6) {
            uint64_t v32 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v32 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(1, v13, v32);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 4u;
          *(_DWORD *)(a1 + 64) = v13;
        }
        goto LABEL_45;
      case 2u:
        if (v9 != 18) {
          goto LABEL_37;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v16 = *(void *)(a1 + 8);
        unint64_t v17 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
        if (v16) {
          unint64_t v17 = (uint64_t *)*v17;
        }
        uint64_t v18 = (void *)(a1 + 48);
        goto LABEL_36;
      case 3u:
        if (v9 != 26) {
          goto LABEL_37;
        }
        uint64_t v19 = v8 - 1;
        while (1)
        {
          unint64_t v20 = (char *)(v19 + 1);
          *(void *)int v33 = v19 + 1;
          uint64_t v21 = *(_DWORD **)(a1 + 40);
          if (v21 && (uint64_t v22 = *(int *)(a1 + 32), (int)v22 < *v21))
          {
            *(_DWORD *)(a1 + 32) = v22 + 1;
            uint64_t v23 = *(std::string **)&v21[2 * v22 + 2];
          }
          else
          {
            if (!*v7) {
              operator new();
            }
            *uint64_t v25 = v24;
            v25[1] = sub_3A6EDC;
            *uint64_t v24 = 0;
            v24[1] = 0;
            int v24[2] = 0;
            uint64_t v23 = (std::string *)sub_188CDC8(a1 + 24, (uint64_t)v24);
            unint64_t v20 = *(char **)v33;
          }
          uint64_t v19 = sub_188C244(v23, v20, (uint64_t)a3);
          *(void *)int v33 = v19;
          if (!v19) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v19 || *v19 != 26) {
            goto LABEL_45;
          }
        }
      case 4u:
        if (v9 != 34) {
          goto LABEL_37;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v26 = *(void *)(a1 + 8);
        unint64_t v17 = (uint64_t *)(v26 & 0xFFFFFFFFFFFFFFFCLL);
        if (v26) {
          unint64_t v17 = (uint64_t *)*v17;
        }
        uint64_t v18 = (void *)(a1 + 56);
LABEL_36:
        unint64_t v27 = (std::string *)sub_1880F84(v18, v17);
        uint64_t v28 = (void *)sub_188C244(v27, *(char **)v33, (uint64_t)a3);
        goto LABEL_44;
      default:
LABEL_37:
        if (v9) {
          BOOL v29 = (v9 & 7) == 4;
        }
        else {
          BOOL v29 = 1;
        }
        if (!v29)
        {
          if (*v6)
          {
            uint64_t v30 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v30 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = *(char **)v33;
          }
          uint64_t v28 = sub_1885AC0(v9, v30, v8, a3);
LABEL_44:
          *(void *)int v33 = v28;
          if (!v28) {
            return 0;
          }
LABEL_45:
          if (sub_11947B8((uint64_t)a3, (char **)v33, a3[11].i32[1])) {
            return *(void *)v33;
          }
          continue;
        }
        if (!v8) {
          return 0;
        }
        a3[10].i32[0] = v9 - 1;
        return *(void *)v33;
    }
  }
}

char *sub_142226C(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  unint64_t v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 4) != 0)
  {
    if (*a3 <= __dst) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 64);
    char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6) {
    unint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v10 = *(unsigned int *)(a1 + 32);
  if ((int)v10 >= 1)
  {
    uint64_t v11 = 0;
    uint64_t v12 = 8 * v10;
    do
    {
      unint64_t v13 = *(void **)(*(void *)(a1 + 40) + v11 + 8);
      if (*((char *)v13 + 23) < 0)
      {
        int64_t v14 = v13[1];
        if (v14 > 127) {
          goto LABEL_21;
        }
      }
      else
      {
        int64_t v14 = *((unsigned __int8 *)v13 + 23);
      }
      if ((uint64_t)(*a3 - (void)v4 + 14) >= v14)
      {
        char *v4 = 26;
        v4[1] = v14;
        if (*((char *)v13 + 23) < 0) {
          unint64_t v13 = (void *)*v13;
        }
        int v15 = v4 + 2;
        memcpy(v15, v13, v14);
        unint64_t v4 = &v15[v14];
        goto LABEL_19;
      }
LABEL_21:
      unint64_t v4 = (char *)sub_188A868(a3, 3, (uint64_t)v13, v4);
LABEL_19:
      v11 += 8;
    }
    while (v12 != v11);
  }
  if ((v6 & 2) != 0) {
    unint64_t v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return v4;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    uint64_t v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    uint64_t v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(v4, v19, (int)v20);
    v4 += v21;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v19, v20, v4);
}

uint64_t sub_1422494(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 32);
  if ((int)v1 < 1)
  {
    uint64_t v3 = *(unsigned int *)(a1 + 32);
  }
  else
  {
    uint64_t v2 = (uint64_t *)(*(void *)(a1 + 40) + 8);
    uint64_t v3 = *(unsigned int *)(a1 + 32);
    do
    {
      uint64_t v4 = *v2++;
      uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
      uint64_t v6 = *(void *)(v4 + 8);
      if ((v5 & 0x80u) == 0) {
        uint64_t v6 = v5;
      }
      v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6);
      --v1;
    }
    while (v1);
  }
  int v7 = *(_DWORD *)(a1 + 16);
  if ((v7 & 7) != 0)
  {
    if (v7)
    {
      unint64_t v8 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v9 = *(unsigned __int8 *)(v8 + 23);
      uint64_t v10 = *(void *)(v8 + 8);
      if ((v9 & 0x80u) == 0) {
        uint64_t v10 = v9;
      }
      v3 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v7 & 2) == 0)
      {
LABEL_11:
        if ((v7 & 4) == 0) {
          goto LABEL_23;
        }
        goto LABEL_19;
      }
    }
    else if ((v7 & 2) == 0)
    {
      goto LABEL_11;
    }
    unint64_t v11 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v12 = *(unsigned __int8 *)(v11 + 23);
    uint64_t v13 = *(void *)(v11 + 8);
    if ((v12 & 0x80u) == 0) {
      uint64_t v13 = v12;
    }
    v3 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v7 & 4) != 0)
    {
LABEL_19:
      int v14 = *(_DWORD *)(a1 + 64);
      if (v14 < 0) {
        uint64_t v15 = 11;
      }
      else {
        uint64_t v15 = ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
      v3 += v15;
    }
  }
LABEL_23:
  uint64_t v16 = *(void *)(a1 + 8);
  if (v16)
  {
    unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v18 + 31) < 0) {
      uint64_t v19 = *(void *)(v18 + 16);
    }
    else {
      uint64_t v19 = *(unsigned __int8 *)(v18 + 31);
    }
    v3 += v19;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_1422600(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (const std::string **)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = (std::string *)sub_188FB98((uint64_t)&v3[1], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2]- LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    unint64_t v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *unint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 7) != 0)
  {
    if (v9)
    {
      unint64_t v11 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v13 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v13 = (uint64_t *)*v13;
      }
      uint64_t result = sub_1881DF4((std::string **)&v3[2], v11, v13);
      if ((v9 & 2) == 0)
      {
LABEL_7:
        if ((v9 & 4) == 0)
        {
LABEL_9:
          LODWORD(v3->__r_.__value_.__r.__words[2]) |= v9;
          goto LABEL_10;
        }
LABEL_8:
        LODWORD(v3[2].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 64);
        goto LABEL_9;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_7;
    }
    int v14 = (long long *)(*(void *)(a2 + 56) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    std::string::size_type v15 = v3->__r_.__value_.__l.__size_;
    uint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
    if (v15) {
      uint64_t v16 = (uint64_t *)*v16;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[2].__r_.__value_.__l.__size_, v14, v16);
    if ((v9 & 4) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
LABEL_10:
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1422768()
{
  return 1;
}

void *sub_1422770@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gemini.Showcase.ShowcaseAction");
}

uint64_t sub_1422780(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_12;
    }
  }
  else if (v4)
  {
    goto LABEL_12;
  }
  uint64_t v5 = (void ***)(a1 + 96);
  if (*(uint64_t **)(a1 + 96) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 104) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 104));
  }
  if ((uint64_t (***)())a1 != &off_25380C8)
  {
    uint64_t v6 = *(void *)(a1 + 112);
    if (v6)
    {
      sub_1421D58(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_12:
  sub_14900FC((void *)(a1 + 72));
  sub_12C1DB8((void *)(a1 + 48));
  sub_12C1DB8((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_142288C(uint64_t a1)
{
  sub_1422780(a1);

  operator delete();
}

uint64_t sub_14228C4(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_15B2C80(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  uint64_t v5 = *(unsigned int *)(v1 + 56);
  if ((int)v5 >= 1)
  {
    uint64_t v6 = (uint64_t *)(*(void *)(v1 + 64) + 8);
    do
    {
      uint64_t v7 = *v6++;
      uint64_t result = sub_15B2C80(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(v1 + 56) = 0;
  }
  uint64_t v8 = *(unsigned int *)(v1 + 80);
  if ((int)v8 >= 1)
  {
    int v9 = (uint64_t *)(*(void *)(v1 + 88) + 8);
    do
    {
      uint64_t v10 = *v9++;
      uint64_t result = sub_1417070(v10);
      --v8;
    }
    while (v8);
    *(_DWORD *)(v1 + 80) = 0;
  }
  int v11 = *(_DWORD *)(v1 + 16);
  if ((v11 & 7) == 0) {
    goto LABEL_18;
  }
  if ((v11 & 1) == 0)
  {
    if ((v11 & 2) == 0) {
      goto LABEL_16;
    }
    goto LABEL_28;
  }
  unint64_t v14 = *(void *)(v1 + 96) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v14 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v14 = 0;
    *(unsigned char *)(v14 + 23) = 0;
    if ((v11 & 2) != 0) {
      goto LABEL_28;
    }
LABEL_16:
    if ((v11 & 4) == 0) {
      goto LABEL_18;
    }
    goto LABEL_17;
  }
  **(unsigned char **)unint64_t v14 = 0;
  *(void *)(v14 + 8) = 0;
  if ((v11 & 2) == 0) {
    goto LABEL_16;
  }
LABEL_28:
  unint64_t v15 = *(void *)(v1 + 104) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v15 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v15 = 0;
    *(unsigned char *)(v15 + 23) = 0;
    if ((v11 & 4) == 0) {
      goto LABEL_18;
    }
LABEL_17:
    uint64_t result = sub_1421E50(*(void *)(v1 + 112));
    goto LABEL_18;
  }
  **(unsigned char **)unint64_t v15 = 0;
  *(void *)(v15 + 8) = 0;
  if ((v11 & 4) != 0) {
    goto LABEL_17;
  }
LABEL_18:
  if ((v11 & 0x18) != 0)
  {
    *(void *)(v1 + 120) = 0;
    *(void *)(v1 + 128) = 0;
  }
  char v13 = *(unsigned char *)(v1 + 8);
  uint64_t v12 = v1 + 8;
  *(_DWORD *)(v12 + 8) = 0;
  if (v13)
  {
    return sub_188B4AC((uint64_t *)v12);
  }
  return result;
}

uint64_t sub_1422A24(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unint64_t v50 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v50, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (unsigned __int8 *)(*(void *)v50 + 1);
    unsigned int v9 = **(unsigned char **)v50;
    if ((char)**(unsigned char **)v50 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        uint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v50, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (unsigned __int8 *)(*(void *)v50 + 2);
      }
    }
    *(void *)unint64_t v50 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_64;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 8);
        char v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          char v13 = (uint64_t *)*v13;
        }
        unint64_t v14 = (void *)(a1 + 96);
        goto LABEL_17;
      case 2u:
        if (v9 != 18) {
          goto LABEL_64;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v15 = *(void *)(a1 + 8);
        char v13 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          char v13 = (uint64_t *)*v13;
        }
        unint64_t v14 = (void *)(a1 + 104);
LABEL_17:
        uint64_t v16 = (std::string *)sub_1880F84(v14, v13);
        uint64_t v17 = (uint64_t)sub_188C244(v16, *(char **)v50, (uint64_t)a3);
        goto LABEL_71;
      case 3u:
        if (v9 != 26) {
          goto LABEL_64;
        }
        unint64_t v18 = v8 - 1;
        while (1)
        {
          uint64_t v19 = v18 + 1;
          *(void *)unint64_t v50 = v18 + 1;
          uint64_t v20 = *(_DWORD **)(a1 + 40);
          if (v20 && (uint64_t v21 = *(int *)(a1 + 32), (int)v21 < *v20))
          {
            *(_DWORD *)(a1 + 32) = v21 + 1;
            uint64_t v22 = *(void *)&v20[2 * v21 + 2];
          }
          else
          {
            uint64_t v23 = sub_15C1B30(*(void *)(a1 + 24));
            uint64_t v22 = sub_188CDC8(a1 + 24, (uint64_t)v23);
            uint64_t v19 = *(unsigned __int8 **)v50;
          }
          unint64_t v18 = (unsigned __int8 *)sub_125CF74(a3, v22, v19);
          *(void *)unint64_t v50 = v18;
          if (!v18) {
            goto LABEL_81;
          }
          if (*(void *)a3 <= (unint64_t)v18 || *v18 != 26) {
            goto LABEL_72;
          }
        }
      case 4u:
        if (v9 != 34) {
          goto LABEL_64;
        }
        uint64_t v24 = v8 - 1;
        while (1)
        {
          uint64_t v25 = v24 + 1;
          *(void *)unint64_t v50 = v24 + 1;
          uint64_t v26 = *(_DWORD **)(a1 + 64);
          if (v26 && (uint64_t v27 = *(int *)(a1 + 56), (int)v27 < *v26))
          {
            *(_DWORD *)(a1 + 56) = v27 + 1;
            uint64_t v28 = *(void *)&v26[2 * v27 + 2];
          }
          else
          {
            BOOL v29 = sub_15C1B30(*(void *)(a1 + 48));
            uint64_t v28 = sub_188CDC8(a1 + 48, (uint64_t)v29);
            uint64_t v25 = *(unsigned __int8 **)v50;
          }
          uint64_t v24 = (unsigned __int8 *)sub_125CF74(a3, v28, v25);
          *(void *)unint64_t v50 = v24;
          if (!v24) {
            goto LABEL_81;
          }
          if (*(void *)a3 <= (unint64_t)v24 || *v24 != 34) {
            goto LABEL_72;
          }
        }
      case 5u:
        if (v9 != 42) {
          goto LABEL_64;
        }
        uint64_t v30 = v8 - 1;
        while (1)
        {
          unint64_t v31 = v30 + 1;
          *(void *)unint64_t v50 = v30 + 1;
          uint64_t v32 = *(_DWORD **)(a1 + 88);
          if (v32 && (uint64_t v33 = *(int *)(a1 + 80), (int)v33 < *v32))
          {
            *(_DWORD *)(a1 + 80) = v33 + 1;
            uint64_t v34 = *(void *)&v32[2 * v33 + 2];
          }
          else
          {
            uint64_t v35 = sub_144A6DC(*(void *)(a1 + 72));
            uint64_t v34 = sub_188CDC8(a1 + 72, (uint64_t)v35);
            unint64_t v31 = *(unsigned __int8 **)v50;
          }
          uint64_t v30 = (unsigned __int8 *)sub_1415788(a3, v34, v31);
          *(void *)unint64_t v50 = v30;
          if (!v30) {
            goto LABEL_81;
          }
          if (*(void *)a3 <= (unint64_t)v30 || *v30 != 42) {
            goto LABEL_72;
          }
        }
      case 6u:
        if (v9 != 48) {
          goto LABEL_64;
        }
        v5 |= 8u;
        uint64_t v36 = (char *)(v8 + 1);
        uint64_t v37 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_52;
        }
        int v38 = *v36;
        uint64_t v37 = v37 + (v38 << 7) - 128;
        if (v38 < 0)
        {
          uint64_t v46 = sub_188C138((uint64_t)v8, v37);
          *(void *)unint64_t v50 = v46;
          *(void *)(a1 + 120) = v47;
          if (!v46) {
            goto LABEL_81;
          }
        }
        else
        {
          uint64_t v36 = (char *)(v8 + 2);
LABEL_52:
          *(void *)unint64_t v50 = v36;
          *(void *)(a1 + 120) = v37;
        }
        goto LABEL_72;
      case 7u:
        if (v9 != 56) {
          goto LABEL_64;
        }
        v5 |= 0x10u;
        int v39 = (char *)(v8 + 1);
        uint64_t v40 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_57;
        }
        int v41 = *v39;
        uint64_t v40 = v40 + (v41 << 7) - 128;
        if (v41 < 0)
        {
          uint64_t v48 = sub_188C138((uint64_t)v8, v40);
          *(void *)unint64_t v50 = v48;
          *(void *)(a1 + 128) = v49;
          if (!v48) {
            goto LABEL_81;
          }
        }
        else
        {
          int v39 = (char *)(v8 + 2);
LABEL_57:
          *(void *)unint64_t v50 = v39;
          *(void *)(a1 + 128) = v40;
        }
        goto LABEL_72;
      case 8u:
        if (v9 != 66) {
          goto LABEL_64;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v42 = *(void *)(a1 + 112);
        if (!v42)
        {
          int v43 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            int v43 = (void *)*v43;
          }
          uint64_t v42 = sub_144B0E8((uint64_t)v43);
          *(void *)(a1 + 112) = v42;
          uint64_t v8 = *(unsigned __int8 **)v50;
        }
        uint64_t v17 = sub_1422EE4(a3, v42, v8);
        goto LABEL_71;
      default:
LABEL_64:
        if (v9) {
          BOOL v44 = (v9 & 7) == 4;
        }
        else {
          BOOL v44 = 1;
        }
        if (!v44)
        {
          if (*v7)
          {
            uint64_t v45 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v45 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = *(unsigned __int8 **)v50;
          }
          uint64_t v17 = (uint64_t)sub_1885AC0(v9, v45, (char *)v8, a3);
LABEL_71:
          *(void *)unint64_t v50 = v17;
          if (!v17) {
            goto LABEL_81;
          }
LABEL_72:
          if (sub_11947B8((uint64_t)a3, (char **)v50, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_81:
        }
          *(void *)unint64_t v50 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v50;
    }
  }
}

uint64_t sub_1422EE4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1421F10(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1422F74(uint64_t a1, char *__dst, unint64_t *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 96) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 2) != 0) {
    uint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 104) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  int v7 = *(_DWORD *)(a1 + 32);
  if (v7)
  {
    for (int i = 0; i != v7; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      char *v4 = 26;
      unsigned int v10 = *(_DWORD *)(v9 + 20);
      v4[1] = v10;
      if (v10 > 0x7F) {
        unsigned int v11 = sub_188A9CC(v10, v4 + 1);
      }
      else {
        unsigned int v11 = v4 + 2;
      }
      uint64_t v4 = sub_15B2EA4(v9, v11, a3);
    }
  }
  int v12 = *(_DWORD *)(a1 + 56);
  if (v12)
  {
    for (int j = 0; j != v12; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v14 = *(void *)(*(void *)(a1 + 64) + 8 * j + 8);
      char *v4 = 34;
      unsigned int v15 = *(_DWORD *)(v14 + 20);
      v4[1] = v15;
      if (v15 > 0x7F) {
        uint64_t v16 = sub_188A9CC(v15, v4 + 1);
      }
      else {
        uint64_t v16 = v4 + 2;
      }
      uint64_t v4 = sub_15B2EA4(v14, v16, a3);
    }
  }
  int v17 = *(_DWORD *)(a1 + 80);
  if (v17)
  {
    for (int k = 0; k != v17; ++k)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v19 = *(void *)(*(void *)(a1 + 88) + 8 * k + 8);
      char *v4 = 42;
      unsigned int v20 = *(_DWORD *)(v19 + 20);
      v4[1] = v20;
      if (v20 > 0x7F) {
        uint64_t v21 = sub_188A9CC(v20, v4 + 1);
      }
      else {
        uint64_t v21 = v4 + 2;
      }
      uint64_t v4 = sub_1417780(v19, (unint64_t)v21, a3);
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v22 = *(void *)(a1 + 120);
    char *v4 = 48;
    v4[1] = v22;
    if (v22 > 0x7F)
    {
      v4[1] = v22 | 0x80;
      unint64_t v23 = v22 >> 7;
      v4[2] = v22 >> 7;
      v4 += 3;
      if (v22 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v24 = v23 >> 14;
          v23 >>= 7;
          *v4++ = v23;
        }
        while (v24);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v25 = *(void *)(a1 + 128);
    char *v4 = 56;
    v4[1] = v25;
    if (v25 > 0x7F)
    {
      v4[1] = v25 | 0x80;
      unint64_t v26 = v25 >> 7;
      v4[2] = v25 >> 7;
      v4 += 3;
      if (v25 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v27 = v26 >> 14;
          v26 >>= 7;
          *v4++ = v26;
        }
        while (v27);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v28 = *(void *)(a1 + 112);
    char *v4 = 66;
    unsigned int v29 = *(_DWORD *)(v28 + 20);
    v4[1] = v29;
    if (v29 > 0x7F) {
      uint64_t v30 = sub_188A9CC(v29, v4 + 1);
    }
    else {
      uint64_t v30 = v4 + 2;
    }
    uint64_t v4 = sub_142226C(v28, (unint64_t)v30, a3);
  }
  uint64_t v31 = *(void *)(a1 + 8);
  if ((v31 & 1) == 0) {
    return v4;
  }
  unint64_t v33 = v31 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v33 + 31) < 0)
  {
    uint64_t v34 = *(void **)(v33 + 8);
    uint64_t v35 = *(void *)(v33 + 16);
  }
  else
  {
    uint64_t v34 = (void *)(v33 + 8);
    LODWORD(v35) = *(unsigned __int8 *)(v33 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v35)
  {
    uint64_t v36 = (int)v35;
    memcpy(v4, v34, (int)v35);
    v4 += v36;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v34, v35, v4);
}

uint64_t sub_1423360(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_15B2F90(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(int *)(a1 + 56);
  uint64_t v9 = v2 + v8;
  uint64_t v10 = *(void *)(a1 + 64);
  if (v10) {
    unsigned int v11 = (uint64_t *)(v10 + 8);
  }
  else {
    unsigned int v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_15B2F90(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  uint64_t v15 = *(int *)(a1 + 80);
  uint64_t v16 = v9 + v15;
  uint64_t v17 = *(void *)(a1 + 88);
  if (v17) {
    unint64_t v18 = (uint64_t *)(v17 + 8);
  }
  else {
    unint64_t v18 = 0;
  }
  if (v15)
  {
    uint64_t v19 = 8 * v15;
    do
    {
      uint64_t v20 = *v18++;
      uint64_t v21 = sub_1417BAC(v20);
      v16 += v21 + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6);
      v19 -= 8;
    }
    while (v19);
  }
  int v22 = *(_DWORD *)(a1 + 16);
  if ((v22 & 0x1F) == 0) {
    goto LABEL_28;
  }
  if (v22)
  {
    unint64_t v25 = *(void *)(a1 + 96) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v26 = *(unsigned __int8 *)(v25 + 23);
    uint64_t v27 = *(void *)(v25 + 8);
    if ((v26 & 0x80u) == 0) {
      uint64_t v27 = v26;
    }
    v16 += v27 + ((9 * (__clz(v27 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v22 & 2) == 0)
    {
LABEL_24:
      if ((v22 & 4) == 0) {
        goto LABEL_25;
      }
LABEL_36:
      uint64_t v31 = sub_1422494(*(void *)(a1 + 112));
      v16 += v31 + ((9 * (__clz(v31 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v22 & 8) == 0)
      {
LABEL_26:
        if ((v22 & 0x10) == 0) {
          goto LABEL_28;
        }
        goto LABEL_27;
      }
      goto LABEL_37;
    }
  }
  else if ((v22 & 2) == 0)
  {
    goto LABEL_24;
  }
  unint64_t v28 = *(void *)(a1 + 104) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v29 = *(unsigned __int8 *)(v28 + 23);
  uint64_t v30 = *(void *)(v28 + 8);
  if ((v29 & 0x80u) == 0) {
    uint64_t v30 = v29;
  }
  v16 += v30 + ((9 * (__clz(v30 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v22 & 4) != 0) {
    goto LABEL_36;
  }
LABEL_25:
  if ((v22 & 8) == 0) {
    goto LABEL_26;
  }
LABEL_37:
  v16 += ((9 * (__clz(*(void *)(a1 + 120) | 1) ^ 0x3F) + 73) >> 6) + 1;
  if ((v22 & 0x10) != 0) {
LABEL_27:
  }
    v16 += ((9 * (__clz(*(void *)(a1 + 128) | 1) ^ 0x3F) + 73) >> 6) + 1;
LABEL_28:
  uint64_t v23 = *(void *)(a1 + 8);
  if (v23)
  {
    unint64_t v32 = v23 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v32 + 31) < 0) {
      uint64_t v33 = *(void *)(v32 + 16);
    }
    else {
      uint64_t v33 = *(unsigned __int8 *)(v32 + 31);
    }
    v16 += v33;
  }
  *(_DWORD *)(a1 + 20) = v16;
  return v16;
}

std::string *sub_14235D0(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = sub_12C1E38(v3 + 1, v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2] - LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    uint64_t v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    unsigned int v11 = (std::string **)sub_188CCE4((uint64_t)&v3[2], *(_DWORD *)(a2 + 56));
    uint64_t result = sub_12C1E38(v3 + 2, v11, v10, v9, *(_DWORD *)v3[2].__r_.__value_.__r.__words[2] - LODWORD(v3[2].__r_.__value_.__r.__words[1]));
    int v12 = LODWORD(v3[2].__r_.__value_.__r.__words[1]) + v9;
    LODWORD(v3[2].__r_.__value_.__r.__words[1]) = v12;
    uint64_t v13 = (int *)v3[2].__r_.__value_.__r.__words[2];
    if (*v13 < v12) {
      int *v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 80);
  if (v14)
  {
    uint64_t v15 = (uint64_t *)(*(void *)(a2 + 88) + 8);
    uint64_t v16 = (std::string **)sub_188CCE4((uint64_t)&v3[3], *(_DWORD *)(a2 + 80));
    uint64_t result = sub_1491C84(v3 + 3, v16, v15, v14, *(_DWORD *)v3[3].__r_.__value_.__r.__words[2] - LODWORD(v3[3].__r_.__value_.__r.__words[1]));
    int v17 = LODWORD(v3[3].__r_.__value_.__r.__words[1]) + v14;
    LODWORD(v3[3].__r_.__value_.__r.__words[1]) = v17;
    unint64_t v18 = (int *)v3[3].__r_.__value_.__r.__words[2];
    if (*v18 < v17) {
      *unint64_t v18 = v17;
    }
  }
  int v19 = *(_DWORD *)(a2 + 16);
  if ((v19 & 0x1F) != 0)
  {
    if (v19)
    {
      uint64_t v21 = (long long *)(*(void *)(a2 + 96) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v23 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v23 = (uint64_t *)*v23;
      }
      uint64_t result = sub_1881DF4((std::string **)&v3[4], v21, v23);
      if ((v19 & 2) == 0)
      {
LABEL_13:
        if ((v19 & 4) == 0) {
          goto LABEL_14;
        }
        goto LABEL_28;
      }
    }
    else if ((v19 & 2) == 0)
    {
      goto LABEL_13;
    }
    unint64_t v24 = (long long *)(*(void *)(a2 + 104) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    std::string::size_type v25 = v3->__r_.__value_.__l.__size_;
    uint64_t v26 = (uint64_t *)(v25 & 0xFFFFFFFFFFFFFFFCLL);
    if (v25) {
      uint64_t v26 = (uint64_t *)*v26;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[4].__r_.__value_.__l.__size_, v24, v26);
    if ((v19 & 4) == 0)
    {
LABEL_14:
      if ((v19 & 8) == 0) {
        goto LABEL_15;
      }
      goto LABEL_36;
    }
LABEL_28:
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
    uint64_t v27 = (std::string *)v3[4].__r_.__value_.__r.__words[2];
    if (!v27)
    {
      std::string::size_type v28 = v3->__r_.__value_.__l.__size_;
      uint64_t v29 = (void *)(v28 & 0xFFFFFFFFFFFFFFFCLL);
      if (v28) {
        uint64_t v29 = (void *)*v29;
      }
      uint64_t v27 = (std::string *)sub_144B0E8((uint64_t)v29);
      v3[4].__r_.__value_.__r.__words[2] = (std::string::size_type)v27;
    }
    if (*(void *)(a2 + 112)) {
      uint64_t v30 = *(uint64_t (****)(uint64_t))(a2 + 112);
    }
    else {
      uint64_t v30 = &off_2538080;
    }
    uint64_t result = sub_1422600(v27, (uint64_t)v30);
    if ((v19 & 8) == 0)
    {
LABEL_15:
      if ((v19 & 0x10) == 0)
      {
LABEL_17:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v19;
        goto LABEL_18;
      }
LABEL_16:
      v3[5].__r_.__value_.__l.__size_ = *(void *)(a2 + 128);
      goto LABEL_17;
    }
LABEL_36:
    v3[5].__r_.__value_.__r.__words[0] = *(void *)(a2 + 120);
    if ((v19 & 0x10) == 0) {
      goto LABEL_17;
    }
    goto LABEL_16;
  }
LABEL_18:
  uint64_t v20 = *(void *)(a2 + 8);
  if (v20)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v20 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1423860()
{
  return 1;
}

void *sub_1423868@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gemini.Showcase");
}

uint64_t sub_1423878(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (uint64_t *)(a1 + 8);
  *(void *)a1 = &off_24B3588;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v5 = a1 + 24;
  *(_DWORD *)(a1 + 44) = 0;
  *(void *)(a1 + 28) = 0;
  *(void *)(a1 + 36) = 0;
  *(void *)(a1 + 20) = 0;
  int v6 = *(_DWORD *)(a2 + 32);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 40);
    uint64_t v8 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_188FB98(v5, v8, (const std::string **)(v7 + 8), v6, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v9 = *(_DWORD *)(a1 + 32) + v6;
    *(_DWORD *)(a1 + 32) = v9;
    uint64_t v10 = *(int **)(a1 + 40);
    if (*v10 < v9) {
      *uint64_t v10 = v9;
    }
  }
  uint64_t v11 = *(void *)(a2 + 8);
  if (v11) {
    sub_188B4F8(v4, (v11 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 48) = &qword_2550250;
  if (*(unsigned char *)(a2 + 16))
  {
    int v12 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      int v12 = (uint64_t *)*v12;
    }
    sub_1881DF4((std::string **)(a1 + 48), (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL), v12);
  }
  __int16 v13 = *(_WORD *)(a2 + 56);
  *(unsigned char *)(a1 + 58) = *(unsigned char *)(a2 + 58);
  *(_WORD *)(a1 + 56) = v13;
  return a1;
}

void sub_14239AC(_Unwind_Exception *a1)
{
  sub_1889DE8(v3);
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_14239EC(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  sub_1889DE8((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1423A94(uint64_t a1)
{
  sub_14239EC(a1);

  operator delete();
}

uint64_t sub_1423ACC(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v41 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v41, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (uint64_t **)(a1 + 24);
  uint64_t v8 = (void *)(a1 + 8);
  while (2)
  {
    int v9 = (char *)(*(void *)v41 + 1);
    unsigned int v10 = **(unsigned char **)v41;
    if ((char)**(unsigned char **)v41 < 0)
    {
      unsigned int v11 = v10 + (*v9 << 7);
      unsigned int v10 = v11 - 128;
      if (*v9 < 0)
      {
        int v9 = (char *)sub_188C180(*(uint64_t *)v41, v11 - 128);
        unsigned int v10 = v12;
      }
      else
      {
        int v9 = (char *)(*(void *)v41 + 2);
      }
    }
    *(void *)int v41 = v9;
    switch(v10 >> 3)
    {
      case 1u:
        if (v10 != 10) {
          goto LABEL_40;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v13 = *(void *)(a1 + 8);
        int v14 = (uint64_t *)(v13 & 0xFFFFFFFFFFFFFFFCLL);
        if (v13) {
          int v14 = (uint64_t *)*v14;
        }
        uint64_t v15 = (std::string *)sub_1880F84((void *)(a1 + 48), v14);
        uint64_t v16 = (void *)sub_188C244(v15, *(char **)v41, (uint64_t)a3);
        goto LABEL_47;
      case 2u:
        if (v10 != 18) {
          goto LABEL_40;
        }
        int v17 = v9 - 1;
        while (1)
        {
          unint64_t v18 = (char *)(v17 + 1);
          *(void *)int v41 = v17 + 1;
          int v19 = *(_DWORD **)(a1 + 40);
          if (v19 && (uint64_t v20 = *(int *)(a1 + 32), (int)v20 < *v19))
          {
            *(_DWORD *)(a1 + 32) = v20 + 1;
            uint64_t v21 = *(std::string **)&v19[2 * v20 + 2];
          }
          else
          {
            if (!*v7) {
              operator new();
            }
            *uint64_t v23 = v22;
            v23[1] = sub_3A6EDC;
            void *v22 = 0;
            v22[1] = 0;
            v22[2] = 0;
            uint64_t v21 = (std::string *)sub_188CDC8(a1 + 24, (uint64_t)v22);
            unint64_t v18 = *(char **)v41;
          }
          int v17 = sub_188C244(v21, v18, (uint64_t)a3);
          *(void *)int v41 = v17;
          if (!v17) {
            goto LABEL_59;
          }
          if (*(void *)a3 <= (unint64_t)v17 || *v17 != 18) {
            goto LABEL_48;
          }
        }
      case 3u:
        if (v10 != 24) {
          goto LABEL_40;
        }
        v5 |= 2u;
        unint64_t v24 = v9 + 1;
        uint64_t v25 = *v9;
        if ((*v9 & 0x80000000) == 0) {
          goto LABEL_29;
        }
        int v26 = *v24;
        uint64_t v25 = v25 + (v26 << 7) - 128;
        if (v26 < 0)
        {
          uint64_t v35 = sub_188C138((uint64_t)v9, v25);
          *(void *)int v41 = v35;
          *(unsigned char *)(a1 + 56) = v36 != 0;
          if (!v35) {
            goto LABEL_59;
          }
        }
        else
        {
          unint64_t v24 = v9 + 2;
LABEL_29:
          *(void *)int v41 = v24;
          *(unsigned char *)(a1 + 56) = v25 != 0;
        }
        goto LABEL_48;
      case 4u:
        if (v10 != 32) {
          goto LABEL_40;
        }
        v5 |= 4u;
        uint64_t v27 = v9 + 1;
        uint64_t v28 = *v9;
        if ((*v9 & 0x80000000) == 0) {
          goto LABEL_34;
        }
        int v29 = *v27;
        uint64_t v28 = v28 + (v29 << 7) - 128;
        if (v29 < 0)
        {
          uint64_t v37 = sub_188C138((uint64_t)v9, v28);
          *(void *)int v41 = v37;
          *(unsigned char *)(a1 + 57) = v38 != 0;
          if (!v37) {
            goto LABEL_59;
          }
        }
        else
        {
          uint64_t v27 = v9 + 2;
LABEL_34:
          *(void *)int v41 = v27;
          *(unsigned char *)(a1 + 57) = v28 != 0;
        }
        goto LABEL_48;
      case 5u:
        if (v10 != 40) {
          goto LABEL_40;
        }
        v5 |= 8u;
        uint64_t v30 = v9 + 1;
        uint64_t v31 = *v9;
        if ((*v9 & 0x80000000) == 0) {
          goto LABEL_39;
        }
        int v32 = *v30;
        uint64_t v31 = v31 + (v32 << 7) - 128;
        if (v32 < 0)
        {
          uint64_t v39 = sub_188C138((uint64_t)v9, v31);
          *(void *)int v41 = v39;
          *(unsigned char *)(a1 + 58) = v40 != 0;
          if (!v39) {
            goto LABEL_59;
          }
        }
        else
        {
          uint64_t v30 = v9 + 2;
LABEL_39:
          *(void *)int v41 = v30;
          *(unsigned char *)(a1 + 58) = v31 != 0;
        }
        goto LABEL_48;
      default:
LABEL_40:
        if (v10) {
          BOOL v33 = (v10 & 7) == 4;
        }
        else {
          BOOL v33 = 1;
        }
        if (!v33)
        {
          if (*v8)
          {
            uint64_t v34 = (std::string *)((*v8 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v34 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            int v9 = *(char **)v41;
          }
          uint64_t v16 = sub_1885AC0(v10, v34, v9, a3);
LABEL_47:
          *(void *)int v41 = v16;
          if (!v16) {
            goto LABEL_59;
          }
LABEL_48:
          if (sub_11947B8((uint64_t)a3, (char **)v41, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v9) {
          a3[10].i32[0] = v10 - 1;
        }
        else {
LABEL_59:
        }
          *(void *)int v41 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v41;
    }
  }
}

char *sub_1423EA8(uint64_t a1, char *__dst, void *a3)
{
  int v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    int v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  uint64_t v7 = *(unsigned int *)(a1 + 32);
  if ((int)v7 >= 1)
  {
    uint64_t v8 = 0;
    uint64_t v9 = 8 * v7;
    do
    {
      unsigned int v10 = *(void **)(*(void *)(a1 + 40) + v8 + 8);
      if (*((char *)v10 + 23) < 0)
      {
        int64_t v11 = v10[1];
        if (v11 > 127) {
          goto LABEL_14;
        }
      }
      else
      {
        int64_t v11 = *((unsigned __int8 *)v10 + 23);
      }
      if (*a3 - (void)v4 + 14 >= v11)
      {
        char *v4 = 18;
        v4[1] = v11;
        if (*((char *)v10 + 23) < 0) {
          unsigned int v10 = (void *)*v10;
        }
        unsigned int v12 = v4 + 2;
        memcpy(v12, v10, v11);
        int v4 = &v12[v11];
        goto LABEL_12;
      }
LABEL_14:
      int v4 = (char *)sub_188A868(a3, 2, (uint64_t)v10, v4);
LABEL_12:
      v8 += 8;
    }
    while (v9 != v8);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v13 = *(unsigned char *)(a1 + 56);
    char *v4 = 24;
    v4[1] = v13;
    v4 += 2;
    if ((v6 & 4) == 0)
    {
LABEL_17:
      if ((v6 & 8) == 0) {
        goto LABEL_28;
      }
      goto LABEL_25;
    }
  }
  else if ((v6 & 4) == 0)
  {
    goto LABEL_17;
  }
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v14 = *(unsigned char *)(a1 + 57);
  char *v4 = 32;
  v4[1] = v14;
  v4 += 2;
  if ((v6 & 8) != 0)
  {
LABEL_25:
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v15 = *(unsigned char *)(a1 + 58);
    char *v4 = 40;
    v4[1] = v15;
    v4 += 2;
  }
LABEL_28:
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return v4;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    int v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    int v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if (*a3 - (void)v4 >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(v4, v19, (int)v20);
    v4 += v21;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v19, v20, v4);
}

uint64_t sub_14240E8(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 32);
  if ((int)v1 < 1)
  {
    uint64_t v3 = *(unsigned int *)(a1 + 32);
  }
  else
  {
    uint64_t v2 = (uint64_t *)(*(void *)(a1 + 40) + 8);
    uint64_t v3 = *(unsigned int *)(a1 + 32);
    do
    {
      uint64_t v4 = *v2++;
      uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
      uint64_t v6 = *(void *)(v4 + 8);
      if ((v5 & 0x80u) == 0) {
        uint64_t v6 = v5;
      }
      v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6);
      --v1;
    }
    while (v1);
  }
  int v7 = *(_DWORD *)(a1 + 16);
  if ((v7 & 0xF) != 0)
  {
    if (v7)
    {
      unint64_t v8 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v9 = *(unsigned __int8 *)(v8 + 23);
      uint64_t v10 = *(void *)(v8 + 8);
      if ((v9 & 0x80u) == 0) {
        uint64_t v10 = v9;
      }
      v3 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v7 & 2) != 0) {
      v3 += 2;
    }
    if ((v7 & 4) != 0) {
      v3 += 2;
    }
    if ((v7 & 8) != 0) {
      v3 += 2;
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v13 + 31) < 0) {
      uint64_t v14 = *(void *)(v13 + 16);
    }
    else {
      uint64_t v14 = *(unsigned __int8 *)(v13 + 31);
    }
    v3 += v14;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

uint64_t sub_14241F4()
{
  return 1;
}

void *sub_14241FC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gemini.Questionnaire");
}

void *sub_142420C(void *result, uint64_t a2, int a3)
{
  uint64_t v3 = a2 | 2;
  if (!a3) {
    uint64_t v3 = a2;
  }
  char *result = off_24B3608;
  result[1] = v3;
  result[2] = 0;
  result[3] = a2;
  result[4] = 0;
  result[5] = 0;
  result[6] = a2;
  result[7] = 0;
  result[8] = 0;
  result[9] = &qword_2550250;
  return result;
}

uint64_t sub_1424254(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)a1 = off_24B3608;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v5 = (std::string *)(a1 + 24);
  *(_DWORD *)(a1 + 44) = 0;
  *(void *)(a1 + 28) = 0;
  *(void *)(a1 + 36) = 0;
  *(void *)(a1 + 20) = 0;
  int v6 = *(_DWORD *)(a2 + 32);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 40);
    unint64_t v8 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_12C1E38(v5, v8, (uint64_t *)(v7 + 8), v6, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v9 = *(_DWORD *)(a1 + 32) + v6;
    *(_DWORD *)(a1 + 32) = v9;
    uint64_t v10 = *(int **)(a1 + 40);
    if (*v10 < v9) {
      *uint64_t v10 = v9;
    }
  }
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  int v11 = *(_DWORD *)(a2 + 56);
  if (v11)
  {
    uint64_t v12 = *(void *)(a2 + 64);
    unint64_t v13 = (std::string **)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_1492268((std::string *)(a1 + 48), v13, (uint64_t *)(v12 + 8), v11, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v14 = *(_DWORD *)(a1 + 56) + v11;
    *(_DWORD *)(a1 + 56) = v14;
    char v15 = *(int **)(a1 + 64);
    if (*v15 < v14) {
      int *v15 = v14;
    }
  }
  uint64_t v16 = *(void *)(a2 + 8);
  if (v16) {
    sub_188B4F8(v4, (v16 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 72) = &qword_2550250;
  if (*(unsigned char *)(a2 + 16))
  {
    int v17 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      int v17 = (uint64_t *)*v17;
    }
    sub_1881DF4((std::string **)(a1 + 72), (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL), v17);
  }
  return a1;
}

void sub_14243E8(_Unwind_Exception *a1)
{
  sub_149067C(v4);
  sub_12C1DB8(v3);
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_1424444(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 72);
  if (*(uint64_t **)(a1 + 72) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  sub_149067C((void *)(a1 + 48));
  sub_12C1DB8((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_14244FC(uint64_t a1)
{
  sub_1424444(a1);

  operator delete();
}

uint64_t sub_1424534(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_15B2C80(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  uint64_t v5 = *(unsigned int *)(v1 + 56);
  if ((int)v5 >= 1)
  {
    int v6 = (uint64_t *)(*(void *)(v1 + 64) + 8);
    do
    {
      uint64_t v7 = *v6++;
      uint64_t result = sub_1427700(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(v1 + 56) = 0;
  }
  if (*(unsigned char *)(v1 + 16))
  {
    unint64_t v8 = *(void *)(v1 + 72) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v8 + 23) < 0)
    {
      **(unsigned char **)unint64_t v8 = 0;
      *(void *)(v8 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v8 = 0;
      *(unsigned char *)(v8 + 23) = 0;
    }
  }
  char v10 = *(unsigned char *)(v1 + 8);
  uint64_t v9 = v1 + 8;
  *(_DWORD *)(v9 + 8) = 0;
  if (v10)
  {
    return sub_188B4AC((uint64_t *)v9);
  }
  return result;
}

uint64_t sub_142460C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v31 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v31, a3[11].i32[1])) {
    return *(void *)v31;
  }
  int v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = (char *)(*(void *)v31 + 1);
    unsigned int v8 = **(unsigned char **)v31;
    if ((char)**(unsigned char **)v31 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180(*(uint64_t *)v31, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (char *)(*(void *)v31 + 2);
      }
    }
    *(void *)uint64_t v31 = v7;
    unsigned int v11 = v8 >> 3;
    if (v8 >> 3 == 3) {
      break;
    }
    if (v11 == 2)
    {
      if (v8 == 18)
      {
        int v22 = v7 - 1;
        while (1)
        {
          uint64_t v23 = (unsigned __int8 *)(v22 + 1);
          *(void *)uint64_t v31 = v22 + 1;
          unint64_t v24 = *(_DWORD **)(a1 + 40);
          if (v24 && (uint64_t v25 = *(int *)(a1 + 32), (int)v25 < *v24))
          {
            *(_DWORD *)(a1 + 32) = v25 + 1;
            uint64_t v26 = *(void *)&v24[2 * v25 + 2];
          }
          else
          {
            uint64_t v27 = sub_15C1B30(*(void *)(a1 + 24));
            uint64_t v26 = sub_188CDC8(a1 + 24, (uint64_t)v27);
            uint64_t v23 = *(unsigned __int8 **)v31;
          }
          int v22 = (char *)sub_125CF74(a3, v26, v23);
          *(void *)uint64_t v31 = v22;
          if (!v22) {
            goto LABEL_50;
          }
          if (*(void *)a3 <= (unint64_t)v22 || *v22 != 18) {
            goto LABEL_45;
          }
        }
      }
      goto LABEL_14;
    }
    if (v11 != 1 || v8 != 10) {
      goto LABEL_14;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v28 = *(void *)(a1 + 8);
    int v29 = (uint64_t *)(v28 & 0xFFFFFFFFFFFFFFFCLL);
    if (v28) {
      int v29 = (uint64_t *)*v29;
    }
    uint64_t v30 = (std::string *)sub_1880F84((void *)(a1 + 72), v29);
    char v15 = (void *)sub_188C244(v30, *(char **)v31, (uint64_t)a3);
LABEL_44:
    *(void *)uint64_t v31 = v15;
    if (!v15) {
      goto LABEL_50;
    }
LABEL_45:
    if (sub_11947B8((uint64_t)a3, (char **)v31, a3[11].i32[1])) {
      return *(void *)v31;
    }
  }
  if (v8 == 26)
  {
    uint64_t v16 = v7 - 1;
    while (1)
    {
      int v17 = (unsigned __int8 *)(v16 + 1);
      *(void *)uint64_t v31 = v16 + 1;
      unint64_t v18 = *(_DWORD **)(a1 + 64);
      if (v18 && (uint64_t v19 = *(int *)(a1 + 56), (int)v19 < *v18))
      {
        *(_DWORD *)(a1 + 56) = v19 + 1;
        uint64_t v20 = *(void *)&v18[2 * v19 + 2];
      }
      else
      {
        uint64_t v21 = sub_144B574(*(void *)(a1 + 48));
        uint64_t v20 = sub_188CDC8(a1 + 48, (uint64_t)v21);
        int v17 = *(unsigned __int8 **)v31;
      }
      uint64_t v16 = (char *)sub_14248AC(a3, v20, v17);
      *(void *)uint64_t v31 = v16;
      if (!v16) {
        goto LABEL_50;
      }
      if (*(void *)a3 <= (unint64_t)v16 || *v16 != 26) {
        goto LABEL_45;
      }
    }
  }
LABEL_14:
  if (v8) {
    BOOL v13 = (v8 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v6)
    {
      int v14 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      int v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = *(char **)v31;
    }
    char v15 = sub_1885AC0(v8, v14, v7, a3);
    goto LABEL_44;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v31;
  }
LABEL_50:
  *(void *)uint64_t v31 = 0;
  return *(void *)v31;
}

uint64_t sub_14248AC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1427814(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_142493C(uint64_t a1, char *__dst, void *a3)
{
  uint64_t v4 = __dst;
  if (*(unsigned char *)(a1 + 16)) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  int v6 = *(_DWORD *)(a1 + 32);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      char *v4 = 18;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      v4[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, v4 + 1);
      }
      else {
        unsigned int v10 = v4 + 2;
      }
      uint64_t v4 = sub_15B2EA4(v8, v10, a3);
    }
  }
  int v11 = *(_DWORD *)(a1 + 56);
  if (v11)
  {
    for (int j = 0; j != v11; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v13 = *(void *)(*(void *)(a1 + 64) + 8 * j + 8);
      char *v4 = 26;
      unsigned int v14 = *(_DWORD *)(v13 + 20);
      v4[1] = v14;
      if (v14 > 0x7F) {
        char v15 = sub_188A9CC(v14, v4 + 1);
      }
      else {
        char v15 = v4 + 2;
      }
      uint64_t v4 = sub_1427B0C(v13, v15, a3);
    }
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return v4;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    uint64_t v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    uint64_t v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if (*a3 - (void)v4 >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(v4, v19, (int)v20);
    v4 += v21;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v19, v20, v4);
}

uint64_t sub_1424B28(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_15B2F90(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(int *)(a1 + 56);
  uint64_t v9 = v2 + v8;
  uint64_t v10 = *(void *)(a1 + 64);
  if (v10) {
    int v11 = (uint64_t *)(v10 + 8);
  }
  else {
    int v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_1427C8C(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v15 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v16 = *(unsigned __int8 *)(v15 + 23);
    uint64_t v17 = *(void *)(v15 + 8);
    if ((v16 & 0x80u) == 0) {
      uint64_t v17 = v16;
    }
    v9 += v17 + ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v18 = *(void *)(a1 + 8);
  if (v18)
  {
    unint64_t v20 = v18 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v20 + 31) < 0) {
      uint64_t v21 = *(void *)(v20 + 16);
    }
    else {
      uint64_t v21 = *(unsigned __int8 *)(v20 + 31);
    }
    v9 += v21;
  }
  *(_DWORD *)(a1 + 20) = v9;
  return v9;
}

std::string *sub_1424C70(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = sub_12C1E38(v3 + 1, v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2] - LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    uint64_t v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    int v11 = (std::string **)sub_188CCE4((uint64_t)&v3[2], *(_DWORD *)(a2 + 56));
    uint64_t result = sub_1492268(v3 + 2, v11, v10, v9, *(_DWORD *)v3[2].__r_.__value_.__r.__words[2] - LODWORD(v3[2].__r_.__value_.__r.__words[1]));
    int v12 = LODWORD(v3[2].__r_.__value_.__r.__words[1]) + v9;
    LODWORD(v3[2].__r_.__value_.__r.__words[1]) = v12;
    uint64_t v13 = (int *)v3[2].__r_.__value_.__r.__words[2];
    if (*v13 < v12) {
      int *v13 = v12;
    }
  }
  if (*(unsigned char *)(a2 + 16))
  {
    uint64_t v14 = (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
    std::string::size_type size = v3->__r_.__value_.__l.__size_;
    uint64_t v16 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
    if (size) {
      uint64_t v16 = (uint64_t *)*v16;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[3], v14, v16);
  }
  uint64_t v17 = *(void *)(a2 + 8);
  if (v17)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v17 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

BOOL sub_1424DDC(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 56);
  do
  {
    int v2 = v1;
    if ((int)v1 < 1) {
      break;
    }
    uint64_t v3 = *(void *)(*(void *)(a1 + 64) + 8 * v1--);
  }
  while ((*(unsigned char *)(v3 + 16) & 2) != 0);
  return v2 < 1;
}

void *sub_1424E0C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gemini.Localization");
}

void *sub_1424E1C(void *result, uint64_t a2, int a3)
{
  uint64_t v3 = a2 | 2;
  if (!a3) {
    uint64_t v3 = a2;
  }
  char *result = off_24B3688;
  result[1] = v3;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = &qword_2550250;
  result[5] = &qword_2550250;
  result[6] = &qword_2550250;
  result[7] = &qword_2550250;
  return result;
}

uint64_t sub_1424E60(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (void *)(a1 + 8);
  *(void *)a1 = off_24B3688;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 24) = &qword_2550250;
  int v6 = *(_DWORD *)(a2 + 16);
  if (v6)
  {
    int v7 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      int v7 = (uint64_t *)*v7;
    }
    sub_1881DF4((std::string **)(a1 + 24), (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL), v7);
    int v6 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 32) = &qword_2550250;
  if ((v6 & 2) != 0)
  {
    uint64_t v8 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v8 = (uint64_t *)*v8;
    }
    sub_1881DF4((std::string **)(a1 + 32), (long long *)(*(void *)(a2 + 32) & 0xFFFFFFFFFFFFFFFELL), v8);
    int v6 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 40) = &qword_2550250;
  if ((v6 & 4) != 0)
  {
    int v9 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      int v9 = (uint64_t *)*v9;
    }
    sub_1881DF4((std::string **)(a1 + 40), (long long *)(*(void *)(a2 + 40) & 0xFFFFFFFFFFFFFFFELL), v9);
    int v6 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 48) = &qword_2550250;
  if ((v6 & 8) != 0)
  {
    uint64_t v10 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v10 = (uint64_t *)*v10;
    }
    sub_1881DF4((std::string **)(a1 + 48), (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL), v10);
    int v6 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 56) = &qword_2550250;
  if ((v6 & 0x10) != 0)
  {
    int v11 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      int v11 = (uint64_t *)*v11;
    }
    sub_1881DF4((std::string **)(a1 + 56), (long long *)(*(void *)(a2 + 56) & 0xFFFFFFFFFFFFFFFELL), v11);
  }
  return a1;
}

void sub_1424FCC(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_1425000(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_15;
    }
  }
  else if (v4)
  {
    goto LABEL_15;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(uint64_t **)(a1 + 40) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 40));
  }
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 48));
  }
  if (*(uint64_t **)(a1 + 56) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 56));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_15:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_14250F4(uint64_t a1)
{
  sub_1425000(a1);

  operator delete();
}

uint64_t sub_142512C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 0x1F) == 0) {
    goto LABEL_27;
  }
  if (v1)
  {
    unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)unint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
      if ((v1 & 2) != 0) {
        goto LABEL_12;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
      if ((v1 & 2) != 0) {
        goto LABEL_12;
      }
    }
LABEL_4:
    if ((v1 & 4) == 0) {
      goto LABEL_5;
    }
LABEL_16:
    unint64_t v4 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v4 + 23) < 0)
    {
      **(unsigned char **)unint64_t v4 = 0;
      *(void *)(v4 + 8) = 0;
      if ((v1 & 8) != 0) {
        goto LABEL_20;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v4 = 0;
      *(unsigned char *)(v4 + 23) = 0;
      if ((v1 & 8) != 0) {
        goto LABEL_20;
      }
    }
LABEL_6:
    if ((v1 & 0x10) == 0) {
      goto LABEL_27;
    }
LABEL_24:
    unint64_t v6 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v6 + 23) < 0)
    {
      **(unsigned char **)unint64_t v6 = 0;
      *(void *)(v6 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v6 = 0;
      *(unsigned char *)(v6 + 23) = 0;
    }
    goto LABEL_27;
  }
  if ((v1 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_12:
  unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v3 + 23) < 0)
  {
    **(unsigned char **)unint64_t v3 = 0;
    *(void *)(v3 + 8) = 0;
    if ((v1 & 4) != 0) {
      goto LABEL_16;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v3 = 0;
    *(unsigned char *)(v3 + 23) = 0;
    if ((v1 & 4) != 0) {
      goto LABEL_16;
    }
  }
LABEL_5:
  if ((v1 & 8) == 0) {
    goto LABEL_6;
  }
LABEL_20:
  unint64_t v5 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v5 + 23) < 0)
  {
    **(unsigned char **)unint64_t v5 = 0;
    *(void *)(v5 + 8) = 0;
    if ((v1 & 0x10) == 0) {
      goto LABEL_27;
    }
    goto LABEL_24;
  }
  *(unsigned char *)unint64_t v5 = 0;
  *(unsigned char *)(v5 + 23) = 0;
  if ((v1 & 0x10) != 0) {
    goto LABEL_24;
  }
LABEL_27:
  char v8 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v8) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_142524C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v22 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v22, a3[11].i32[1])) {
    return *(void *)v22;
  }
  unint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    int v7 = (char *)(*(void *)v22 + 1);
    unsigned int v8 = **(unsigned char **)v22;
    if ((char)**(unsigned char **)v22 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        int v7 = (char *)sub_188C180(*(uint64_t *)v22, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        int v7 = (char *)(*(void *)v22 + 2);
      }
    }
    *(void *)int v22 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 10) {
          goto LABEL_33;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v11 = *(void *)(a1 + 8);
        int v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
        if (v11) {
          int v12 = (uint64_t *)*v12;
        }
        uint64_t v13 = (void *)(a1 + 24);
        goto LABEL_29;
      case 2u:
        if (v8 != 18) {
          goto LABEL_33;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v14 = *(void *)(a1 + 8);
        int v12 = (uint64_t *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
        if (v14) {
          int v12 = (uint64_t *)*v12;
        }
        uint64_t v13 = (void *)(a1 + 32);
        goto LABEL_29;
      case 3u:
        if (v8 != 26) {
          goto LABEL_33;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v15 = *(void *)(a1 + 8);
        int v12 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          int v12 = (uint64_t *)*v12;
        }
        uint64_t v13 = (void *)(a1 + 40);
        goto LABEL_29;
      case 4u:
        if (v8 != 34) {
          goto LABEL_33;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v16 = *(void *)(a1 + 8);
        int v12 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
        if (v16) {
          int v12 = (uint64_t *)*v12;
        }
        uint64_t v13 = (void *)(a1 + 48);
        goto LABEL_29;
      case 5u:
        if (v8 != 42) {
          goto LABEL_33;
        }
        *(_DWORD *)(a1 + 16) |= 0x10u;
        uint64_t v17 = *(void *)(a1 + 8);
        int v12 = (uint64_t *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
        if (v17) {
          int v12 = (uint64_t *)*v12;
        }
        uint64_t v13 = (void *)(a1 + 56);
LABEL_29:
        uint64_t v18 = (std::string *)sub_1880F84(v13, v12);
        uint64_t v19 = (void *)sub_188C244(v18, *(char **)v22, (uint64_t)a3);
        goto LABEL_30;
      default:
LABEL_33:
        if (v8) {
          BOOL v20 = (v8 & 7) == 4;
        }
        else {
          BOOL v20 = 1;
        }
        if (!v20)
        {
          if (*v6)
          {
            uint64_t v21 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v21 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            int v7 = *(char **)v22;
          }
          uint64_t v19 = sub_1885AC0(v8, v21, v7, a3);
LABEL_30:
          *(void *)int v22 = v19;
          if (!v19) {
            return 0;
          }
          if (sub_11947B8((uint64_t)a3, (char **)v22, a3[11].i32[1])) {
            return *(void *)v22;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return *(void *)v22;
    }
  }
}

char *sub_14254E0(uint64_t a1, char *__dst, void *a3)
{
  unint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    unint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  unint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_12;
  }
LABEL_11:
  unint64_t v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_12:
  unint64_t v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x10) != 0) {
LABEL_6:
  }
    unint64_t v4 = sub_117A0AC(a3, 5, (const void **)(*(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL), v4);
LABEL_7:
  uint64_t v7 = *(void *)(a1 + 8);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v9 + 31) < 0)
  {
    unsigned int v10 = *(void **)(v9 + 8);
    uint64_t v11 = *(void *)(v9 + 16);
  }
  else
  {
    unsigned int v10 = (void *)(v9 + 8);
    LODWORD(v11) = *(unsigned __int8 *)(v9 + 31);
  }
  if (*a3 - (void)v4 >= (int)v11)
  {
    uint64_t v12 = (int)v11;
    memcpy(v4, v10, (int)v11);
    v4 += v12;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v10, v11, v4);
}

uint64_t sub_1425640(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if (v1)
  {
    unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
    uint64_t v5 = *(void *)(v3 + 8);
    if ((v4 & 0x80u) == 0) {
      uint64_t v5 = v4;
    }
    uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  else
  {
    uint64_t v2 = 0;
  }
  if ((v1 & 0x1E) == 0) {
    goto LABEL_14;
  }
  if ((v1 & 2) == 0)
  {
    if ((v1 & 4) == 0) {
      goto LABEL_9;
    }
LABEL_19:
    unint64_t v14 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v15 = *(unsigned __int8 *)(v14 + 23);
    uint64_t v16 = *(void *)(v14 + 8);
    if ((v15 & 0x80u) == 0) {
      uint64_t v16 = v15;
    }
    v2 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 8) == 0)
    {
LABEL_10:
      if ((v1 & 0x10) == 0) {
        goto LABEL_14;
      }
      goto LABEL_11;
    }
    goto LABEL_22;
  }
  unint64_t v11 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v12 = *(unsigned __int8 *)(v11 + 23);
  uint64_t v13 = *(void *)(v11 + 8);
  if ((v12 & 0x80u) == 0) {
    uint64_t v13 = v12;
  }
  v2 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 4) != 0) {
    goto LABEL_19;
  }
LABEL_9:
  if ((v1 & 8) == 0) {
    goto LABEL_10;
  }
LABEL_22:
  unint64_t v17 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v18 = *(unsigned __int8 *)(v17 + 23);
  uint64_t v19 = *(void *)(v17 + 8);
  if ((v18 & 0x80u) == 0) {
    uint64_t v19 = v18;
  }
  v2 += v19 + ((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 0x10) != 0)
  {
LABEL_11:
    unint64_t v6 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_14:
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v20 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v20 + 31) < 0) {
      uint64_t v21 = *(void *)(v20 + 16);
    }
    else {
      uint64_t v21 = *(unsigned __int8 *)(v20 + 31);
    }
    v2 += v21;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_14257EC(std::string *result, uint64_t a2)
{
  if ((std::string *)a2 != result)
  {
    uint64_t v4 = result;
    sub_142512C((uint64_t)result);
    return sub_128E79C(v4, a2);
  }
  return result;
}

uint64_t sub_1425838(uint64_t a1)
{
  return *(_DWORD *)(a1 + 16) & 1;
}

uint64_t sub_1425844(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *(void *)(result + 8) = *(void *)(a2 + 8);
  *(void *)(a2 + 8) = v2;
  LODWORD(v2) = *(_DWORD *)(result + 16);
  *(_DWORD *)(result + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a2 + 16) = v2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a2 + 24) = *(void *)(result + 24);
  *(void *)(result + 24) = v3;
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a2 + 32) = *(void *)(result + 32);
  *(void *)(result + 32) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = *(void *)(result + 40);
  *(void *)(result + 40) = v5;
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a2 + 48) = *(void *)(result + 48);
  *(void *)(result + 48) = v6;
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a2 + 56) = *(void *)(result + 56);
  *(void *)(result + 56) = v7;
  return result;
}

void *sub_14258B8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gemini.Taxonomy.LocalizedCategory");
}

uint64_t sub_14258C8(uint64_t result, uint64_t a2, int a3)
{
  uint64_t v3 = a2 | 2;
  if (!a3) {
    uint64_t v3 = a2;
  }
  *(void *)uint64_t result = off_24B3708;
  *(void *)(result + 8) = v3;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a2;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = a2;
  *(void *)(result + 56) = 0;
  *(void *)(result + 64) = 0;
  *(void *)(result + 72) = &qword_2550250;
  *(void *)(result + 80) = &qword_2550250;
  *(void *)(result + 88) = &qword_2550250;
  *(void *)(result + 96) = 0;
  *(void *)(result + 102) = 0;
  *(_DWORD *)(result + 112) = -9;
  return result;
}

uint64_t sub_1425920(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)a1 = off_24B3708;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v5 = (std::string *)(a1 + 24);
  *(_DWORD *)(a1 + 44) = 0;
  *(void *)(a1 + 28) = 0;
  *(void *)(a1 + 36) = 0;
  *(void *)(a1 + 20) = 0;
  int v6 = *(_DWORD *)(a2 + 32);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 40);
    uint64_t v8 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_14922F4(v5, v8, (uint64_t *)(v7 + 8), v6, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v9 = *(_DWORD *)(a1 + 32) + v6;
    *(_DWORD *)(a1 + 32) = v9;
    unsigned int v10 = *(int **)(a1 + 40);
    if (*v10 < v9) {
      *unsigned int v10 = v9;
    }
  }
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  int v11 = *(_DWORD *)(a2 + 56);
  if (v11)
  {
    uint64_t v12 = *(void *)(a2 + 64);
    uint64_t v13 = (std::string **)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_14922F4((std::string *)(a1 + 48), v13, (uint64_t *)(v12 + 8), v11, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v14 = *(_DWORD *)(a1 + 56) + v11;
    *(_DWORD *)(a1 + 56) = v14;
    uint64_t v15 = *(int **)(a1 + 64);
    if (*v15 < v14) {
      int *v15 = v14;
    }
  }
  uint64_t v16 = *(void *)(a2 + 8);
  if (v16) {
    sub_188B4F8(v4, (v16 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 72) = &qword_2550250;
  int v17 = *(_DWORD *)(a2 + 16);
  if (v17)
  {
    uint64_t v18 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v18 = (uint64_t *)*v18;
    }
    sub_1881DF4((std::string **)(a1 + 72), (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL), v18);
    int v17 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 80) = &qword_2550250;
  if ((v17 & 2) != 0)
  {
    uint64_t v19 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v19 = (uint64_t *)*v19;
    }
    sub_1881DF4((std::string **)(a1 + 80), (long long *)(*(void *)(a2 + 80) & 0xFFFFFFFFFFFFFFFELL), v19);
    int v17 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 88) = &qword_2550250;
  if ((v17 & 4) != 0)
  {
    unint64_t v20 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      unint64_t v20 = (uint64_t *)*v20;
    }
    sub_1881DF4((std::string **)(a1 + 88), (long long *)(*(void *)(a2 + 88) & 0xFFFFFFFFFFFFFFFELL), v20);
    int v17 = *(_DWORD *)(a2 + 16);
  }
  if ((v17 & 8) != 0) {
    operator new();
  }
  *(void *)(a1 + 96) = 0;
  uint64_t v21 = *(void *)(a2 + 104);
  *(_DWORD *)(a1 + 112) = *(_DWORD *)(a2 + 112);
  *(void *)(a1 + 104) = v21;
  return a1;
}

void sub_1425B5C()
{
}

uint64_t sub_1425BD8(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_14;
    }
  }
  else if (v4)
  {
    goto LABEL_14;
  }
  uint64_t v5 = (void ***)(a1 + 72);
  if (*(uint64_t **)(a1 + 72) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 80) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 80));
  }
  if (*(uint64_t **)(a1 + 88) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 88));
  }
  if ((uint64_t (***)())a1 != &off_2538190)
  {
    uint64_t v6 = *(void *)(a1 + 96);
    if (v6)
    {
      sub_1437AE4(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_14:
  sub_14906FC((void *)(a1 + 48));
  sub_14906FC((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1425CEC(uint64_t a1)
{
  sub_1425BD8(a1);

  operator delete();
}

uint64_t sub_1425D24(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_14300F0(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  uint64_t v5 = *(unsigned int *)(v1 + 56);
  if ((int)v5 >= 1)
  {
    uint64_t v6 = (uint64_t *)(*(void *)(v1 + 64) + 8);
    do
    {
      uint64_t v7 = *v6++;
      uint64_t result = sub_14300F0(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(v1 + 56) = 0;
  }
  int v8 = *(_DWORD *)(v1 + 16);
  if ((v8 & 0xF) == 0) {
    goto LABEL_15;
  }
  if (v8)
  {
    unint64_t v11 = *(void *)(v1 + 72) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v11 + 23) < 0)
    {
      **(unsigned char **)unint64_t v11 = 0;
      *(void *)(v11 + 8) = 0;
      if ((v8 & 2) != 0) {
        goto LABEL_25;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v11 = 0;
      *(unsigned char *)(v11 + 23) = 0;
      if ((v8 & 2) != 0) {
        goto LABEL_25;
      }
    }
LABEL_12:
    if ((v8 & 4) == 0) {
      goto LABEL_13;
    }
    goto LABEL_29;
  }
  if ((v8 & 2) == 0) {
    goto LABEL_12;
  }
LABEL_25:
  unint64_t v12 = *(void *)(v1 + 80) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v12 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v12 = 0;
    *(unsigned char *)(v12 + 23) = 0;
    if ((v8 & 4) != 0) {
      goto LABEL_29;
    }
LABEL_13:
    if ((v8 & 8) == 0) {
      goto LABEL_15;
    }
    goto LABEL_14;
  }
  **(unsigned char **)unint64_t v12 = 0;
  *(void *)(v12 + 8) = 0;
  if ((v8 & 4) == 0) {
    goto LABEL_13;
  }
LABEL_29:
  unint64_t v13 = *(void *)(v1 + 88) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v13 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v13 = 0;
    *(unsigned char *)(v13 + 23) = 0;
    if ((v8 & 8) == 0) {
      goto LABEL_15;
    }
LABEL_14:
    uint64_t result = sub_14154A8(*(void *)(v1 + 96));
    goto LABEL_15;
  }
  **(unsigned char **)unint64_t v13 = 0;
  *(void *)(v13 + 8) = 0;
  if ((v8 & 8) != 0) {
    goto LABEL_14;
  }
LABEL_15:
  if ((v8 & 0xF0) != 0)
  {
    *(_WORD *)(v1 + 108) = 0;
    *(_DWORD *)(v1 + 104) = 0;
    *(_DWORD *)(v1 + 112) = -9;
  }
  char v10 = *(unsigned char *)(v1 + 8);
  uint64_t v9 = v1 + 8;
  *(_DWORD *)(v9 + 8) = 0;
  if (v10)
  {
    return sub_188B4AC((uint64_t *)v9);
  }
  return result;
}

uint64_t sub_1425E9C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v58 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v58, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    int v8 = (unsigned __int8 *)(*(void *)v58 + 1);
    unsigned int v9 = **(unsigned char **)v58;
    if ((char)**(unsigned char **)v58 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        int v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v58, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        int v8 = (unsigned __int8 *)(*(void *)v58 + 2);
      }
    }
    *(void *)int v58 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_74;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 8);
        unint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          unint64_t v13 = (uint64_t *)*v13;
        }
        int v14 = (void *)(a1 + 72);
        goto LABEL_62;
      case 2u:
        if (v9 != 16) {
          goto LABEL_74;
        }
        v5 |= 0x10u;
        uint64_t v15 = (char *)(v8 + 1);
        int v16 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_17;
        }
        int v17 = *v15;
        int v16 = v16 + (v17 << 7) - 128;
        if (v17 < 0)
        {
          uint64_t v50 = sub_188C0D0((uint64_t)v8, v16);
          *(void *)int v58 = v50;
          *(_DWORD *)(a1 + 104) = v51;
          if (!v50) {
            goto LABEL_99;
          }
        }
        else
        {
          uint64_t v15 = (char *)(v8 + 2);
LABEL_17:
          *(void *)int v58 = v15;
          *(_DWORD *)(a1 + 104) = v16;
        }
        goto LABEL_82;
      case 3u:
        if (v9 != 24) {
          goto LABEL_74;
        }
        v5 |= 0x20u;
        uint64_t v18 = (char *)(v8 + 1);
        uint64_t v19 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_22;
        }
        int v20 = *v18;
        uint64_t v19 = v19 + (v20 << 7) - 128;
        if (v20 < 0)
        {
          uint64_t v52 = sub_188C138((uint64_t)v8, v19);
          *(void *)int v58 = v52;
          *(unsigned char *)(a1 + 108) = v53 != 0;
          if (!v52) {
            goto LABEL_99;
          }
        }
        else
        {
          uint64_t v18 = (char *)(v8 + 2);
LABEL_22:
          *(void *)int v58 = v18;
          *(unsigned char *)(a1 + 108) = v19 != 0;
        }
        goto LABEL_82;
      case 4u:
        if (v9 != 34) {
          goto LABEL_74;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v21 = *(void *)(a1 + 8);
        unint64_t v13 = (uint64_t *)(v21 & 0xFFFFFFFFFFFFFFFCLL);
        if (v21) {
          unint64_t v13 = (uint64_t *)*v13;
        }
        int v14 = (void *)(a1 + 80);
        goto LABEL_62;
      case 5u:
        if (v9 != 40) {
          goto LABEL_74;
        }
        int v22 = (char *)(v8 + 1);
        unint64_t v23 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_31;
        }
        int v24 = *v22;
        int v25 = v23 + (v24 << 7);
        unint64_t v23 = (v25 - 128);
        if (v24 < 0)
        {
          *(void *)int v58 = sub_188C138((uint64_t)v8, (v25 - 128));
          if (!*(void *)v58) {
            goto LABEL_99;
          }
          unint64_t v23 = v54;
        }
        else
        {
          int v22 = (char *)(v8 + 2);
LABEL_31:
          *(void *)int v58 = v22;
        }
        if ((v23 + 3) < 7 || v23 == -9)
        {
          *(_DWORD *)(a1 + 16) |= 0x80u;
          *(_DWORD *)(a1 + 112) = v23;
        }
        else
        {
          if (*v7) {
            uint64_t v57 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v57 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(5, v23, v57);
        }
        goto LABEL_82;
      case 6u:
        if (v9 != 50) {
          goto LABEL_74;
        }
        uint64_t v27 = (char *)(v8 - 1);
        while (1)
        {
          uint64_t v28 = (unsigned __int8 *)(v27 + 1);
          *(void *)int v58 = v27 + 1;
          int v29 = *(_DWORD **)(a1 + 40);
          if (v29 && (uint64_t v30 = *(int *)(a1 + 32), (int)v30 < *v29))
          {
            *(_DWORD *)(a1 + 32) = v30 + 1;
            uint64_t v31 = *(void *)&v29[2 * v30 + 2];
          }
          else
          {
            int v32 = sub_144BC58(*(void *)(a1 + 24));
            uint64_t v31 = sub_188CDC8(a1 + 24, (uint64_t)v32);
            uint64_t v28 = *(unsigned __int8 **)v58;
          }
          uint64_t v27 = sub_1426430(a3, v31, v28);
          *(void *)int v58 = v27;
          if (!v27) {
            goto LABEL_99;
          }
          if (*(void *)a3 <= (unint64_t)v27 || *v27 != 50) {
            goto LABEL_82;
          }
        }
      case 7u:
        if (v9 != 58) {
          goto LABEL_74;
        }
        BOOL v33 = (char *)(v8 - 1);
        while (1)
        {
          uint64_t v34 = (unsigned __int8 *)(v33 + 1);
          *(void *)int v58 = v33 + 1;
          uint64_t v35 = *(_DWORD **)(a1 + 64);
          if (v35 && (uint64_t v36 = *(int *)(a1 + 56), (int)v36 < *v35))
          {
            *(_DWORD *)(a1 + 56) = v36 + 1;
            uint64_t v37 = *(void *)&v35[2 * v36 + 2];
          }
          else
          {
            uint64_t v38 = sub_144BC58(*(void *)(a1 + 48));
            uint64_t v37 = sub_188CDC8(a1 + 48, (uint64_t)v38);
            uint64_t v34 = *(unsigned __int8 **)v58;
          }
          BOOL v33 = sub_1426430(a3, v37, v34);
          *(void *)int v58 = v33;
          if (!v33) {
            goto LABEL_99;
          }
          if (*(void *)a3 <= (unint64_t)v33 || *v33 != 58) {
            goto LABEL_82;
          }
        }
      case 8u:
        if (v9 != 66) {
          goto LABEL_74;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v39 = *(void *)(a1 + 8);
        unint64_t v13 = (uint64_t *)(v39 & 0xFFFFFFFFFFFFFFFCLL);
        if (v39) {
          unint64_t v13 = (uint64_t *)*v13;
        }
        int v14 = (void *)(a1 + 88);
LABEL_62:
        uint64_t v40 = (std::string *)sub_1880F84(v14, v13);
        int v41 = (void *)sub_188C244(v40, *(char **)v58, (uint64_t)a3);
        goto LABEL_81;
      case 9u:
        if (v9 != 74) {
          goto LABEL_74;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v42 = *(void *)(a1 + 96);
        if (!v42)
        {
          int v43 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            int v43 = (void *)*v43;
          }
          sub_144C21C((uint64_t)v43);
          uint64_t v42 = v44;
          *(void *)(a1 + 96) = v44;
          int v8 = *(unsigned __int8 **)v58;
        }
        int v41 = sub_123BA24(a3, v42, v8);
        goto LABEL_81;
      case 0xAu:
        if (v9 != 80) {
          goto LABEL_74;
        }
        v5 |= 0x40u;
        uint64_t v45 = (char *)(v8 + 1);
        uint64_t v46 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_73;
        }
        int v47 = *v45;
        uint64_t v46 = v46 + (v47 << 7) - 128;
        if (v47 < 0)
        {
          uint64_t v55 = sub_188C138((uint64_t)v8, v46);
          *(void *)int v58 = v55;
          *(unsigned char *)(a1 + 109) = v56 != 0;
          if (!v55) {
            goto LABEL_99;
          }
        }
        else
        {
          uint64_t v45 = (char *)(v8 + 2);
LABEL_73:
          *(void *)int v58 = v45;
          *(unsigned char *)(a1 + 109) = v46 != 0;
        }
        goto LABEL_82;
      default:
LABEL_74:
        if (v9) {
          BOOL v48 = (v9 & 7) == 4;
        }
        else {
          BOOL v48 = 1;
        }
        if (!v48)
        {
          if (*v7)
          {
            uint64_t v49 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v49 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            int v8 = *(unsigned __int8 **)v58;
          }
          int v41 = sub_1885AC0(v9, v49, (char *)v8, a3);
LABEL_81:
          *(void *)int v58 = v41;
          if (!v41) {
            goto LABEL_99;
          }
LABEL_82:
          if (sub_11947B8((uint64_t)a3, (char **)v58, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_99:
        }
          *(void *)int v58 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v58;
    }
  }
}