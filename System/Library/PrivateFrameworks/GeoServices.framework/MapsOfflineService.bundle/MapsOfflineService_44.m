uint64_t sub_12B3820(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  uint64_t result;
  int v6;
  int v7;

  v7 = 0;
  result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    result = sub_12ACA40(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_12B38B0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12AE6E8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_12B3940(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12AFF74(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_12B39D0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12B0DA0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_12B3A60(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12B27A4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_12B3AF0(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 0x40) != 0)
  {
    if (*a3 <= __dst) {
      v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 72);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*a3 <= (unint64_t)v4) {
      v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 24);
    unsigned char *v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 20);
    v4[1] = v11;
    if (v11 > 0x7F) {
      v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      v12 = v4 + 2;
    }
    v4 = sub_12AA168(v10, v12, a3);
    if ((v6 & 2) == 0)
    {
LABEL_10:
      if ((v6 & 4) == 0) {
        goto LABEL_11;
      }
      goto LABEL_27;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_10;
  }
  if (*a3 <= (unint64_t)v4) {
    v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v13 = *(void *)(a1 + 32);
  unsigned char *v4 = 26;
  unsigned int v14 = *(_DWORD *)(v13 + 20);
  v4[1] = v14;
  if (v14 > 0x7F) {
    v15 = sub_188A9CC(v14, v4 + 1);
  }
  else {
    v15 = v4 + 2;
  }
  v4 = sub_12ACE40(v13, (unint64_t)v15, a3);
  if ((v6 & 4) == 0)
  {
LABEL_11:
    if ((v6 & 8) == 0) {
      goto LABEL_12;
    }
    goto LABEL_33;
  }
LABEL_27:
  if (*a3 <= (unint64_t)v4) {
    v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v16 = *(void *)(a1 + 40);
  unsigned char *v4 = 34;
  unsigned int v17 = *(_DWORD *)(v16 + 20);
  v4[1] = v17;
  if (v17 > 0x7F) {
    v18 = sub_188A9CC(v17, v4 + 1);
  }
  else {
    v18 = v4 + 2;
  }
  v4 = sub_12AEBAC(v16, v18, a3);
  if ((v6 & 8) == 0)
  {
LABEL_12:
    if ((v6 & 0x10) == 0) {
      goto LABEL_13;
    }
    goto LABEL_39;
  }
LABEL_33:
  if (*a3 <= (unint64_t)v4) {
    v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v19 = *(void *)(a1 + 48);
  unsigned char *v4 = 42;
  unsigned int v20 = *(_DWORD *)(v19 + 20);
  v4[1] = v20;
  if (v20 > 0x7F) {
    v21 = sub_188A9CC(v20, v4 + 1);
  }
  else {
    v21 = v4 + 2;
  }
  v4 = sub_12B0304(v19, v21, a3);
  if ((v6 & 0x10) == 0)
  {
LABEL_13:
    if ((v6 & 0x20) == 0) {
      goto LABEL_51;
    }
    goto LABEL_45;
  }
LABEL_39:
  if (*a3 <= (unint64_t)v4) {
    v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v22 = *(void *)(a1 + 56);
  unsigned char *v4 = 50;
  unsigned int v23 = *(_DWORD *)(v22 + 20);
  v4[1] = v23;
  if (v23 > 0x7F) {
    v24 = sub_188A9CC(v23, v4 + 1);
  }
  else {
    v24 = v4 + 2;
  }
  v4 = sub_12B120C(v22, (unint64_t)v24, a3);
  if ((v6 & 0x20) != 0)
  {
LABEL_45:
    if (*a3 <= (unint64_t)v4) {
      v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v25 = *(void *)(a1 + 64);
    unsigned char *v4 = 58;
    unsigned int v26 = *(_DWORD *)(v25 + 20);
    v4[1] = v26;
    if (v26 > 0x7F) {
      v27 = sub_188A9CC(v26, v4 + 1);
    }
    else {
      v27 = v4 + 2;
    }
    v4 = sub_12B2ADC(v25, v27, a3);
  }
LABEL_51:
  uint64_t v28 = *(void *)(a1 + 8);
  if ((v28 & 1) == 0) {
    return v4;
  }
  unint64_t v30 = v28 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v30 + 31) < 0)
  {
    v31 = *(void **)(v30 + 8);
    uint64_t v32 = *(void *)(v30 + 16);
  }
  else
  {
    v31 = (void *)(v30 + 8);
    LODWORD(v32) = *(unsigned __int8 *)(v30 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v32)
  {
    uint64_t v33 = (int)v32;
    memcpy(v4, v31, (int)v32);
    v4 += v33;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v31, v32, v4);
}

uint64_t sub_12B3E94(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0x7F) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_22;
  }
  if (v2)
  {
    uint64_t v4 = sub_12AA4D0(*(void *)(a1 + 24));
    uint64_t v3 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_7:
    uint64_t v5 = sub_12AD068(*(void *)(a1 + 32));
    v3 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_8:
  if ((v2 & 4) != 0)
  {
    uint64_t v6 = sub_12AEE90(*(void *)(a1 + 40));
    v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 8) == 0)
    {
LABEL_10:
      if ((v2 & 0x10) == 0) {
        goto LABEL_11;
      }
      goto LABEL_16;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_10;
  }
  uint64_t v7 = sub_12B0564(*(void *)(a1 + 48));
  v3 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x10) == 0)
  {
LABEL_11:
    if ((v2 & 0x20) == 0) {
      goto LABEL_12;
    }
    goto LABEL_17;
  }
LABEL_16:
  uint64_t v8 = sub_12B156C(*(void *)(a1 + 56));
  v3 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x20) == 0)
  {
LABEL_12:
    if ((v2 & 0x40) == 0) {
      goto LABEL_22;
    }
    goto LABEL_18;
  }
LABEL_17:
  uint64_t v9 = sub_12B2C88(*(void *)(a1 + 64));
  v3 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x40) == 0) {
    goto LABEL_22;
  }
LABEL_18:
  int v10 = *(_DWORD *)(a1 + 72);
  if (v10 < 0) {
    uint64_t v11 = 11;
  }
  else {
    uint64_t v11 = ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v3 += v11;
LABEL_22:
  uint64_t v12 = *(void *)(a1 + 8);
  if (v12)
  {
    unint64_t v14 = v12 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v14 + 31) < 0) {
      uint64_t v15 = *(void *)(v14 + 16);
    }
    else {
      uint64_t v15 = *(unsigned __int8 *)(v14 + 31);
    }
    v3 += v15;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

void sub_12B4074(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0x7F) != 0)
  {
    if (v4)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v6 = *(std::string **)(a1 + 24);
      if (!v6)
      {
        uint64_t v7 = *(void *)(a1 + 8);
        uint64_t v8 = (void *)(v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (v7) {
          uint64_t v8 = (void *)*v8;
        }
        uint64_t v6 = (std::string *)sub_12BC3E0((uint64_t)v8);
        *(void *)(a1 + 24) = v6;
      }
      if (*(void *)(a2 + 24)) {
        uint64_t v9 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        uint64_t v9 = &off_2530B88;
      }
      sub_12AA670(v6, (uint64_t)v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_31;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    int v10 = *(std::string **)(a1 + 32);
    if (!v10)
    {
      uint64_t v11 = *(void *)(a1 + 8);
      uint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        uint64_t v12 = (void *)*v12;
      }
      int v10 = (std::string *)sub_12BC610((uint64_t)v12);
      *(void *)(a1 + 32) = v10;
    }
    if (*(void *)(a2 + 32)) {
      uint64_t v13 = *(uint64_t (****)())(a2 + 32);
    }
    else {
      uint64_t v13 = &off_2530C78;
    }
    sub_12AD1C0(v10, (uint64_t)v13);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_39;
    }
LABEL_31:
    *(_DWORD *)(a1 + 16) |= 4u;
    uint64_t v14 = *(void *)(a1 + 40);
    if (!v14)
    {
      uint64_t v15 = *(void *)(a1 + 8);
      uint64_t v16 = (void *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
      if (v15) {
        uint64_t v16 = (void *)*v16;
      }
      uint64_t v14 = sub_12BC720((uint64_t)v16);
      *(void *)(a1 + 40) = v14;
    }
    if (*(void *)(a2 + 40)) {
      unsigned int v17 = *(uint64_t (****)())(a2 + 40);
    }
    else {
      unsigned int v17 = &off_2530CF0;
    }
    sub_12AF094(v14, (uint64_t)v17);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0) {
        goto LABEL_7;
      }
      goto LABEL_47;
    }
LABEL_39:
    *(_DWORD *)(a1 + 16) |= 8u;
    v18 = *(void **)(a1 + 48);
    if (!v18)
    {
      uint64_t v19 = *(void *)(a1 + 8);
      unsigned int v20 = (void *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
      if (v19) {
        unsigned int v20 = (void *)*v20;
      }
      v18 = sub_12BC854((uint64_t)v20);
      *(void *)(a1 + 48) = v18;
    }
    if (*(void *)(a2 + 48)) {
      v21 = *(uint64_t (****)())(a2 + 48);
    }
    else {
      v21 = &off_2530D80;
    }
    sub_12B06C0((uint64_t)v18, (uint64_t)v21);
    if ((v4 & 0x10) == 0)
    {
LABEL_7:
      if ((v4 & 0x20) == 0) {
        goto LABEL_8;
      }
      goto LABEL_55;
    }
LABEL_47:
    *(_DWORD *)(a1 + 16) |= 0x10u;
    uint64_t v22 = *(void *)(a1 + 56);
    if (!v22)
    {
      uint64_t v23 = *(void *)(a1 + 8);
      v24 = (void *)(v23 & 0xFFFFFFFFFFFFFFFCLL);
      if (v23) {
        v24 = (void *)*v24;
      }
      sub_12BC8F8((uint64_t)v24);
      *(void *)(a1 + 56) = v22;
    }
    if (*(void *)(a2 + 56)) {
      uint64_t v25 = *(uint64_t (****)())(a2 + 56);
    }
    else {
      uint64_t v25 = &off_2530DC0;
    }
    sub_12B1760(v22, (uint64_t)v25);
    if ((v4 & 0x20) == 0)
    {
LABEL_8:
      if ((v4 & 0x40) == 0)
      {
LABEL_10:
        *(_DWORD *)(a1 + 16) |= v4;
        goto LABEL_11;
      }
LABEL_9:
      *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
      goto LABEL_10;
    }
LABEL_55:
    *(_DWORD *)(a1 + 16) |= 0x20u;
    unsigned int v26 = *(std::string **)(a1 + 64);
    if (!v26)
    {
      uint64_t v27 = *(void *)(a1 + 8);
      uint64_t v28 = (void *)(v27 & 0xFFFFFFFFFFFFFFFCLL);
      if (v27) {
        uint64_t v28 = (void *)*v28;
      }
      unsigned int v26 = (std::string *)sub_12BCA10((uint64_t)v28);
      *(void *)(a1 + 64) = v26;
    }
    if (*(void *)(a2 + 64)) {
      v29 = *(uint64_t (****)())(a2 + 64);
    }
    else {
      v29 = &off_2530E48;
    }
    sub_12B2DA4(v26, (uint64_t)v29);
    if ((v4 & 0x40) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
LABEL_11:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_12B42DC(uint64_t a1, uint64_t a2)
{
  if (a2 != a1)
  {
    sub_12B3388(a1);
    sub_12B4074(a1, a2);
  }
}

uint64_t sub_12B4328(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 4) != 0)
  {
    uint64_t result = sub_12AF25C(*(void *)(a1 + 40) + 24);
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 8) != 0)
  {
    uint64_t result = sub_12B0808(*(void *)(a1 + 48) + 24);
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 0x10) == 0) {
    return 1;
  }
  uint64_t result = sub_12B19B0(*(void *)(a1 + 56));
  if (result) {
    return 1;
  }
  return result;
}

__n128 sub_12B4390(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a2 + 8) = v2;
  LODWORD(v2) = *(_DWORD *)(a1 + 16);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a2 + 16) = v2;
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = v4;
  uint64_t v5 = *(void *)(a1 + 40);
  uint64_t v6 = *(void *)(a1 + 48);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a2 + 40) = v5;
  *(void *)(a2 + 48) = v6;
  uint64_t v7 = *(void *)(a1 + 56);
  uint64_t v8 = *(void *)(a1 + 64);
  __n128 result = *(__n128 *)(a2 + 56);
  *(__n128 *)(a1 + 56) = result;
  *(void *)(a2 + 56) = v7;
  *(void *)(a2 + 64) = v8;
  LODWORD(v7) = *(_DWORD *)(a1 + 72);
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  *(_DWORD *)(a2 + 72) = v7;
  return result;
}

void *sub_12B43F4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.ResultRefinement");
}

uint64_t sub_12B4404(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_9;
    }
  }
  else if (v4)
  {
    goto LABEL_9;
  }
  uint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 56) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 56));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_9:
  sub_122D1B4((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12B44C8(uint64_t a1)
{
  sub_12B4404(a1);

  operator delete();
}

uint64_t sub_12B4500(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      __n128 result = sub_12B3388(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  int v5 = *(_DWORD *)(v1 + 16);
  if ((v5 & 3) != 0)
  {
    if (v5)
    {
      unint64_t v6 = *(void *)(v1 + 48) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v6 + 23) < 0)
      {
        **(unsigned char **)unint64_t v6 = 0;
        *(void *)(v6 + 8) = 0;
        if ((v5 & 2) == 0) {
          goto LABEL_15;
        }
        goto LABEL_10;
      }
      *(unsigned char *)unint64_t v6 = 0;
      *(unsigned char *)(v6 + 23) = 0;
    }
    if ((v5 & 2) == 0) {
      goto LABEL_15;
    }
LABEL_10:
    unint64_t v7 = *(void *)(v1 + 56) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v7 + 23) < 0)
    {
      **(unsigned char **)unint64_t v7 = 0;
      *(void *)(v7 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v7 = 0;
      *(unsigned char *)(v7 + 23) = 0;
    }
  }
LABEL_15:
  char v9 = *(unsigned char *)(v1 + 8);
  uint64_t v8 = v1 + 8;
  *(_DWORD *)(v8 + 8) = 0;
  if (v9)
  {
    return sub_188B4AC((uint64_t *)v8);
  }
  return result;
}

uint64_t sub_12B45E8(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v27 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v27, a3[11].i32[1])) {
    return *(void *)v27;
  }
  unint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    unint64_t v7 = (char *)(*(void *)v27 + 1);
    unsigned int v8 = **(unsigned char **)v27;
    if ((char)**(unsigned char **)v27 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        unint64_t v7 = (char *)sub_188C180(*(uint64_t *)v27, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        unint64_t v7 = (char *)(*(void *)v27 + 2);
      }
    }
    *(void *)uint64_t v27 = v7;
    unsigned int v11 = v8 >> 3;
    if (v8 >> 3 == 3)
    {
      if (v8 == 26)
      {
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v16 = *(void *)(a1 + 8);
        unsigned int v17 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
        if (v16) {
          unsigned int v17 = (uint64_t *)*v17;
        }
        v18 = (void *)(a1 + 56);
        goto LABEL_38;
      }
    }
    else if (v11 == 2)
    {
      if (v8 == 18)
      {
        uint64_t v19 = v7 - 1;
        while (1)
        {
          unsigned int v20 = (unsigned __int8 *)(v19 + 1);
          *(void *)uint64_t v27 = v19 + 1;
          v21 = *(_DWORD **)(a1 + 40);
          if (v21 && (uint64_t v22 = *(int *)(a1 + 32), (int)v22 < *v21))
          {
            *(_DWORD *)(a1 + 32) = v22 + 1;
            uint64_t v23 = *(void *)&v21[2 * v22 + 2];
          }
          else
          {
            sub_12BCA98(*(void *)(a1 + 24));
            uint64_t v23 = sub_188CDC8(a1 + 24, v24);
            unsigned int v20 = *(unsigned __int8 **)v27;
          }
          uint64_t v19 = sub_120D444(a3, v23, v20);
          *(void *)uint64_t v27 = v19;
          if (!v19) {
            goto LABEL_45;
          }
          if (*(void *)a3 <= (unint64_t)v19 || *v19 != 18) {
            goto LABEL_40;
          }
        }
      }
    }
    else if (v11 == 1 && v8 == 10)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v25 = *(void *)(a1 + 8);
      unsigned int v17 = (uint64_t *)(v25 & 0xFFFFFFFFFFFFFFFCLL);
      if (v25) {
        unsigned int v17 = (uint64_t *)*v17;
      }
      v18 = (void *)(a1 + 48);
LABEL_38:
      unsigned int v26 = (std::string *)sub_1880F84(v18, v17);
      uint64_t v15 = (void *)sub_188C244(v26, *(char **)v27, (uint64_t)a3);
      goto LABEL_39;
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      uint64_t v14 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unint64_t v7 = *(char **)v27;
    }
    uint64_t v15 = sub_1885AC0(v8, v14, v7, a3);
LABEL_39:
    *(void *)uint64_t v27 = v15;
    if (!v15) {
      goto LABEL_45;
    }
LABEL_40:
    if (sub_11947B8((uint64_t)a3, (char **)v27, a3[11].i32[1])) {
      return *(void *)v27;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v27;
  }
LABEL_45:
  *(void *)uint64_t v27 = 0;
  return *(void *)v27;
}

unsigned char *sub_12B4830(uint64_t a1, unsigned char *__dst, unint64_t *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  int v7 = *(_DWORD *)(a1 + 32);
  if (v7)
  {
    for (int i = 0; i != v7; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      unsigned char *v4 = 18;
      unsigned int v10 = *(_DWORD *)(v9 + 20);
      v4[1] = v10;
      if (v10 > 0x7F) {
        unsigned int v11 = sub_188A9CC(v10, v4 + 1);
      }
      else {
        unsigned int v11 = v4 + 2;
      }
      uint64_t v4 = sub_12B3AF0(v9, (unint64_t)v11, a3);
    }
  }
  if ((v6 & 2) != 0) {
    uint64_t v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v12 = *(void *)(a1 + 8);
  if ((v12 & 1) == 0) {
    return v4;
  }
  unint64_t v14 = v12 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v14 + 31) < 0)
  {
    uint64_t v15 = *(void **)(v14 + 8);
    uint64_t v16 = *(void *)(v14 + 16);
  }
  else
  {
    uint64_t v15 = (void *)(v14 + 8);
    LODWORD(v16) = *(unsigned __int8 *)(v14 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v16)
  {
    uint64_t v17 = (int)v16;
    memcpy(v4, v15, (int)v16);
    v4 += v17;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v15, v16, v4);
}

uint64_t sub_12B49B8(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_12B3E94(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 3) != 0)
  {
    if (v8)
    {
      unint64_t v9 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v10 = *(unsigned __int8 *)(v9 + 23);
      uint64_t v11 = *(void *)(v9 + 8);
      if ((v10 & 0x80u) == 0) {
        uint64_t v11 = v10;
      }
      v2 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v8 & 2) != 0)
    {
      unint64_t v12 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v13 = *(unsigned __int8 *)(v12 + 23);
      uint64_t v14 = *(void *)(v12 + 8);
      if ((v13 & 0x80u) == 0) {
        uint64_t v14 = v13;
      }
      v2 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  uint64_t v15 = *(void *)(a1 + 8);
  if (v15)
  {
    unint64_t v17 = v15 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v17 + 31) < 0) {
      uint64_t v18 = *(void *)(v17 + 16);
    }
    else {
      uint64_t v18 = *(unsigned __int8 *)(v17 + 31);
    }
    v2 += v18;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

void sub_12B4AFC(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_122D3C0((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    int v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *int v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 3) != 0)
  {
    if (v9)
    {
      uint64_t v10 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v11 = *(void *)(a1 + 8);
      unint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        unint64_t v12 = (uint64_t *)*v12;
      }
      sub_1881DF4((std::string **)(a1 + 48), v10, v12);
    }
    if ((v9 & 2) != 0)
    {
      uint64_t v13 = (long long *)(*(void *)(a2 + 56) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 2u;
      uint64_t v14 = *(void *)(a1 + 8);
      uint64_t v15 = (uint64_t *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
      if (v14) {
        uint64_t v15 = (uint64_t *)*v15;
      }
      sub_1881DF4((std::string **)(a1 + 56), v13, v15);
    }
  }
  uint64_t v16 = *(void *)(a2 + 8);
  if (v16)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v16 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

BOOL sub_12B4C40(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  do
  {
    int v3 = v2;
    if ((int)v2 < 1) {
      break;
    }
    uint64_t v4 = v2 - 1;
    char v5 = sub_12B4328(*(void *)(*(void *)(a1 + 40) + 8 * v2));
    uint64_t v2 = v4;
  }
  while ((v5 & 1) != 0);
  return v3 < 1;
}

void *sub_12B4C98@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.ResultRefinementSection");
}

uint64_t sub_12B4CA8(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  char v5 = (uint64_t *)(a1 + 16);
  *(void *)a1 = off_24A41A8;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  int v6 = *(_DWORD *)(a2 + 24);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 32);
    int v8 = (uint64_t *)sub_188CCE4(a1 + 16, *(_DWORD *)(a2 + 24));
    sub_12C4E30(v5, v8, (uint64_t *)(v7 + 8), v6, **(_DWORD **)(a1 + 32) - *(_DWORD *)(a1 + 24));
    int v9 = *(_DWORD *)(a1 + 24) + v6;
    *(_DWORD *)(a1 + 24) = v9;
    uint64_t v10 = *(int **)(a1 + 32);
    if (*v10 < v9) {
      *uint64_t v10 = v9;
    }
  }
  *(_DWORD *)(a1 + 40) = 0;
  uint64_t v11 = *(void *)(a2 + 8);
  if (v11) {
    sub_188B4F8(v4, (v11 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return a1;
}

void sub_12B4D88(_Unwind_Exception *a1)
{
  sub_12C4868(v3);
  *uint64_t v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_12B4DCC(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_12C4868(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12B4E4C(void *a1)
{
  sub_12B4DCC(a1);

  operator delete();
}

uint64_t sub_12B4E84(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 24);
  if ((int)v2 >= 1)
  {
    int v3 = (uint64_t *)(*(void *)(result + 32) + 8);
    do
    {
      uint64_t v4 = *v3++;
      __n128 result = sub_12B4500(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 24) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  char v5 = (uint64_t *)(v1 + 8);
  if (v6)
  {
    return sub_188B4AC(v5);
  }
  return result;
}

char *sub_12B4F00(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v19 = a2;
  if ((sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1]) & 1) == 0)
  {
    char v5 = (void *)(a1 + 8);
    while (1)
    {
      char v6 = v19 + 1;
      unsigned int v7 = *v19;
      if (*v19 < 0)
      {
        unsigned int v8 = v7 + (*v6 << 7);
        unsigned int v7 = v8 - 128;
        if (*v6 < 0)
        {
          char v6 = (char *)sub_188C180((uint64_t)v19, v8 - 128);
          unsigned int v7 = v9;
        }
        else
        {
          char v6 = v19 + 2;
        }
      }
      uint64_t v19 = v6;
      if (v7 == 10)
      {
        unint64_t v12 = v6 - 1;
        while (1)
        {
          uint64_t v13 = (unsigned __int8 *)(v12 + 1);
          uint64_t v19 = v12 + 1;
          uint64_t v14 = *(_DWORD **)(a1 + 32);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 24), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 24) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            unint64_t v17 = sub_12BCB1C(*(void *)(a1 + 16));
            uint64_t v16 = sub_188CDC8(a1 + 16, (uint64_t)v17);
            uint64_t v13 = (unsigned __int8 *)v19;
          }
          unint64_t v12 = (char *)sub_12B50A0(a3, v16, v13);
          uint64_t v19 = v12;
          if (!v12) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_24;
          }
        }
      }
      if (!v7 || (v7 & 7) == 4) {
        break;
      }
      if (*v5)
      {
        uint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        uint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        char v6 = v19;
      }
      uint64_t v19 = (char *)sub_1885AC0(v7, v11, v6, a3);
      if (!v19) {
        return 0;
      }
LABEL_24:
      if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
        return v19;
      }
    }
    if (v6)
    {
      a3[10].i32[0] = v7 - 1;
      return v19;
    }
    return 0;
  }
  return v19;
}

uint64_t sub_12B50A0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12B45E8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_12B5130(uint64_t a1, char *__dst, unint64_t *a3)
{
  int v6 = *(_DWORD *)(a1 + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        uint64_t v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        uint64_t v10 = __dst + 2;
      }
      __dst = sub_12B4830(v8, v10, a3);
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return __dst;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    uint64_t v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    uint64_t v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if ((uint64_t)(*a3 - (void)__dst) >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(__dst, v14, (int)v15);
    __dst += v16;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, __dst);
}

uint64_t sub_12B5274(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_12B49B8(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 40) = v2;
  return v2;
}

void sub_12B5324(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 32) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 16, *(_DWORD *)(a2 + 24));
    sub_12C4E30((uint64_t *)(a1 + 16), v6, v5, v4, **(_DWORD **)(a1 + 32) - *(_DWORD *)(a1 + 24));
    int v7 = *(_DWORD *)(a1 + 24) + v4;
    *(_DWORD *)(a1 + 24) = v7;
    uint64_t v8 = *(int **)(a1 + 32);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_12B53F4(uint64_t a1)
{
  return sub_12B53FC(a1 + 16);
}

uint64_t sub_12B53FC(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 8);
  if ((int)v1 >= 1)
  {
    do
    {
      uint64_t v3 = v1--;
      uint64_t v4 = *(void *)(*(void *)(a1 + 16) + 8 * v1 + 8);
      uint64_t v5 = *(unsigned int *)(v4 + 32);
      while ((int)v5 >= 1)
      {
        uint64_t v6 = v5 - 1;
        char v7 = sub_12B4328(*(void *)(*(void *)(v4 + 40) + 8 * v5));
        uint64_t v5 = v6;
        if ((v7 & 1) == 0) {
          return 0;
        }
      }
    }
    while (v3 >= 2);
  }
  return 1;
}

void *sub_12B5488@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.ResultRefinementView");
}

uint64_t sub_12B5498(uint64_t result, uint64_t a2, int a3)
{
  uint64_t v3 = a2 | 2;
  if (!a3) {
    uint64_t v3 = a2;
  }
  *(void *)uint64_t result = off_24A4228;
  *(void *)(result + 8) = v3;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = a2;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

uint64_t sub_12B54D0(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = (uint64_t *)(a1 + 16);
  *(void *)a1 = off_24A4228;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  int v6 = *(_DWORD *)(a2 + 24);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 32);
    uint64_t v8 = (uint64_t *)sub_188CCE4(a1 + 16, *(_DWORD *)(a2 + 24));
    sub_122D3C0(v5, v8, (uint64_t *)(v7 + 8), v6, **(_DWORD **)(a1 + 32) - *(_DWORD *)(a1 + 24));
    int v9 = *(_DWORD *)(a1 + 24) + v6;
    *(_DWORD *)(a1 + 24) = v9;
    unint64_t v10 = *(int **)(a1 + 32);
    if (*v10 < v9) {
      *unint64_t v10 = v9;
    }
  }
  *(_DWORD *)(a1 + 40) = 0;
  uint64_t v11 = *(void *)(a2 + 8);
  if (v11) {
    sub_188B4F8(v4, (v11 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return a1;
}

void sub_12B55B0(_Unwind_Exception *a1)
{
  sub_122D1B4(v3);
  *uint64_t v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_12B55F4(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_122D1B4(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12B5674(void *a1)
{
  sub_12B55F4(a1);

  operator delete();
}

uint64_t sub_12B56AC(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 24);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 32) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_12B3388(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 24) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = (uint64_t *)(v1 + 8);
  if (v6)
  {
    return sub_188B4AC(v5);
  }
  return result;
}

char *sub_12B5728(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v19 = a2;
  if ((sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v5 = (void *)(a1 + 8);
    while (1)
    {
      char v6 = v19 + 1;
      unsigned int v7 = *v19;
      if (*v19 < 0)
      {
        unsigned int v8 = v7 + (*v6 << 7);
        unsigned int v7 = v8 - 128;
        if (*v6 < 0)
        {
          char v6 = (char *)sub_188C180((uint64_t)v19, v8 - 128);
          unsigned int v7 = v9;
        }
        else
        {
          char v6 = v19 + 2;
        }
      }
      uint64_t v19 = v6;
      if (v7 == 10)
      {
        unint64_t v12 = v6 - 1;
        while (1)
        {
          unint64_t v13 = (unsigned __int8 *)(v12 + 1);
          uint64_t v19 = v12 + 1;
          uint64_t v14 = *(_DWORD **)(a1 + 32);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 24), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 24) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            sub_12BCA98(*(void *)(a1 + 16));
            uint64_t v16 = sub_188CDC8(a1 + 16, v17);
            unint64_t v13 = (unsigned __int8 *)v19;
          }
          unint64_t v12 = sub_120D444(a3, v16, v13);
          uint64_t v19 = v12;
          if (!v12) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_24;
          }
        }
      }
      if (!v7 || (v7 & 7) == 4) {
        break;
      }
      if (*v5)
      {
        uint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        uint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        char v6 = v19;
      }
      uint64_t v19 = (char *)sub_1885AC0(v7, v11, v6, a3);
      if (!v19) {
        return 0;
      }
LABEL_24:
      if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
        return v19;
      }
    }
    if (v6)
    {
      a3[10].i32[0] = v7 - 1;
      return v19;
    }
    return 0;
  }
  return v19;
}

char *sub_12B58C8(uint64_t a1, char *__dst, unint64_t *a3)
{
  int v6 = *(_DWORD *)(a1 + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unint64_t v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unint64_t v10 = __dst + 2;
      }
      __dst = sub_12B3AF0(v8, (unint64_t)v10, a3);
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return __dst;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    uint64_t v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    uint64_t v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if ((uint64_t)(*a3 - (void)__dst) >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(__dst, v14, (int)v15);
    __dst += v16;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, __dst);
}

uint64_t sub_12B5A0C(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_12B3E94(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 40) = v2;
  return v2;
}

void sub_12B5ABC(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 32) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 16, *(_DWORD *)(a2 + 24));
    sub_122D3C0((uint64_t *)(a1 + 16), v6, v5, v4, **(_DWORD **)(a1 + 32) - *(_DWORD *)(a1 + 24));
    int v7 = *(_DWORD *)(a1 + 24) + v4;
    *(_DWORD *)(a1 + 24) = v7;
    uint64_t v8 = *(int **)(a1 + 32);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_12B5B8C(uint64_t a1, uint64_t a2)
{
  if (a2 != a1)
  {
    sub_12B56AC(a1);
    sub_12B5ABC(a1, a2);
  }
}

BOOL sub_12B5BD8(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 24);
  do
  {
    int v3 = v2;
    if ((int)v2 < 1) {
      break;
    }
    uint64_t v4 = v2 - 1;
    char v5 = sub_12B4328(*(void *)(*(void *)(a1 + 32) + 8 * v2));
    uint64_t v2 = v4;
  }
  while ((v5 & 1) != 0);
  return v3 < 1;
}

void *sub_12B5C30@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.ResultRefinementBar");
}

uint64_t sub_12B5C40(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_24A42A8;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  int v5 = *(_DWORD *)(a2 + 16);
  if (v5) {
    operator new();
  }
  *(void *)(a1 + 24) = 0;
  if ((v5 & 2) != 0) {
    operator new();
  }
  *(void *)(a1 + 32) = 0;
  if ((v5 & 4) != 0) {
    operator new();
  }
  *(void *)(a1 + 40) = 0;
  return a1;
}

void sub_12B5D5C()
{
}

uint64_t sub_12B5DC8(uint64_t a1)
{
  int v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_12;
    }
  }
  else if (v4)
  {
    goto LABEL_12;
  }
  if ((uint64_t (***)())a1 != &off_2530F28)
  {
    int v5 = *(void **)(a1 + 24);
    if (v5)
    {
      sub_12B55F4(v5);
      operator delete();
    }
    uint64_t v6 = *(void **)(a1 + 32);
    if (v6)
    {
      sub_12B4DCC(v6);
      operator delete();
    }
    uint64_t v7 = *(void *)(a1 + 40);
    if (v7)
    {
      sub_12B6BC0(v7);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_12:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12B5EB8(uint64_t a1)
{
  sub_12B5DC8(a1);

  operator delete();
}

uint64_t sub_12B5EF0(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 7) != 0)
  {
    if (v2)
    {
      uint64_t result = sub_12B56AC(*(void *)(result + 24));
      if ((v2 & 2) == 0)
      {
LABEL_4:
        if ((v2 & 4) == 0) {
          goto LABEL_6;
        }
        goto LABEL_5;
      }
    }
    else if ((v2 & 2) == 0)
    {
      goto LABEL_4;
    }
    uint64_t result = sub_12B4E84(*(void *)(v1 + 32));
    if ((v2 & 4) != 0) {
LABEL_5:
    }
      uint64_t result = (uint64_t)sub_12B5F78(*(unsigned char **)(v1 + 40));
  }
LABEL_6:
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

unsigned char *sub_12B5F78(unsigned char *result)
{
  uint64_t v1 = result;
  uint64_t v2 = *((unsigned int *)result + 8);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (unsigned char **)(*((void *)result + 5) + 8);
    do
    {
      char v4 = *v3++;
      uint64_t result = sub_12A2DEC(v4);
      --v2;
    }
    while (v2);
    *((_DWORD *)v1 + 8) = 0;
  }
  if (v1[16]) {
    uint64_t result = sub_12A7154(*((unsigned char **)v1 + 6));
  }
  char v6 = v1[8];
  int v5 = v1 + 8;
  *((_DWORD *)v5 + 2) = 0;
  if (v6)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

char *sub_12B6008(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v22 = a2;
  if (sub_11947B8((uint64_t)a3, &v22, a3[11].i32[1])) {
    return v22;
  }
  char v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v22 + 1;
    unsigned int v8 = *v22;
    if (*v22 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v22, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v22 + 2;
      }
    }
    uint64_t v22 = v7;
    unsigned int v11 = v8 >> 3;
    if (v8 >> 3 == 3)
    {
      if (v8 != 26) {
        goto LABEL_14;
      }
      *(_DWORD *)(a1 + 16) |= 4u;
      uint64_t v16 = *(void **)(a1 + 40);
      if (!v16)
      {
        uint64_t v17 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          uint64_t v17 = (void *)*v17;
        }
        uint64_t v16 = sub_12BCD7C((uint64_t)v17);
        *(void *)(a1 + 40) = v16;
        uint64_t v7 = v22;
      }
      uint64_t v15 = sub_12B62B0(a3, (uint64_t)v16, (unsigned __int8 *)v7);
      goto LABEL_38;
    }
    if (v11 != 2) {
      break;
    }
    if (v8 != 18) {
      goto LABEL_14;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v18 = *(void *)(a1 + 32);
    if (!v18)
    {
      uint64_t v19 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        uint64_t v19 = (void *)*v19;
      }
      uint64_t v18 = sub_12BCBC0((uint64_t)v19);
      *(void *)(a1 + 32) = v18;
      uint64_t v7 = v22;
    }
    uint64_t v15 = sub_12B6220(a3, v18, (unsigned __int8 *)v7);
LABEL_38:
    uint64_t v22 = v15;
    if (!v15) {
      return 0;
    }
    if (sub_11947B8((uint64_t)a3, &v22, a3[11].i32[1])) {
      return v22;
    }
  }
  if (v11 == 1 && v8 == 10)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v20 = *(void *)(a1 + 24);
    if (!v20)
    {
      v21 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        v21 = (void *)*v21;
      }
      uint64_t v20 = sub_12BCC60((uint64_t)v21);
      *(void *)(a1 + 24) = v20;
      uint64_t v7 = v22;
    }
    uint64_t v15 = sub_120C4FC(a3, v20, (unsigned __int8 *)v7);
    goto LABEL_38;
  }
LABEL_14:
  if (v8) {
    BOOL v13 = (v8 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v6)
    {
      uint64_t v14 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = v22;
    }
    uint64_t v15 = (char *)sub_1885AC0(v8, v14, v7, a3);
    goto LABEL_38;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v22;
  }
  return 0;
}

char *sub_12B6220(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12B4F00(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_12B62B0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12B6CBC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_12B6340(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*a3 <= __dst) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 40);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    char v4 = sub_12B58C8(v7, v9, a3);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_23;
      }
      goto LABEL_17;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v10 = *(void *)(a1 + 32);
  char *v4 = 18;
  unsigned int v11 = *(_DWORD *)(v10 + 40);
  v4[1] = v11;
  if (v11 > 0x7F) {
    unint64_t v12 = sub_188A9CC(v11, v4 + 1);
  }
  else {
    unint64_t v12 = v4 + 2;
  }
  char v4 = sub_12B5130(v10, v12, a3);
  if ((v6 & 4) != 0)
  {
LABEL_17:
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v13 = *(void *)(a1 + 40);
    char *v4 = 26;
    unsigned int v14 = *(_DWORD *)(v13 + 20);
    v4[1] = v14;
    if (v14 > 0x7F) {
      uint64_t v15 = sub_188A9CC(v14, v4 + 1);
    }
    else {
      uint64_t v15 = v4 + 2;
    }
    char v4 = sub_12B6FE4(v13, v15, a3);
  }
LABEL_23:
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return v4;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    uint64_t v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    uint64_t v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(v4, v19, (int)v20);
    v4 += v21;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v19, v20, v4);
}

uint64_t sub_12B6530(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 7) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_10;
  }
  if (v2)
  {
    uint64_t v4 = sub_12B5A0C(*(void *)(a1 + 24));
    uint64_t v3 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_7:
    uint64_t v5 = sub_12B5274(*(void *)(a1 + 32));
    v3 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_8:
  if ((v2 & 4) != 0)
  {
    uint64_t v6 = sub_12B7190(*(void *)(a1 + 40));
    v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  uint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v9 + 31) < 0) {
      uint64_t v10 = *(void *)(v9 + 16);
    }
    else {
      uint64_t v10 = *(unsigned __int8 *)(v9 + 31);
    }
    v3 += v10;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

void sub_12B6638(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 7) == 0) {
    goto LABEL_30;
  }
  if (v4)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v5 = *(void *)(a1 + 24);
    if (!v5)
    {
      uint64_t v6 = *(void *)(a1 + 8);
      uint64_t v7 = (void *)(v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (v6) {
        uint64_t v7 = (void *)*v7;
      }
      uint64_t v5 = sub_12BCC60((uint64_t)v7);
      *(void *)(a1 + 24) = v5;
    }
    if (*(void *)(a2 + 24)) {
      unsigned int v8 = *(uint64_t (****)())(a2 + 24);
    }
    else {
      unsigned int v8 = &off_2530EF8;
    }
    sub_12B5ABC(v5, (uint64_t)v8);
    if ((v4 & 2) == 0)
    {
LABEL_4:
      if ((v4 & 4) == 0) {
        goto LABEL_30;
      }
      goto LABEL_22;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_4;
  }
  *(_DWORD *)(a1 + 16) |= 2u;
  uint64_t v9 = *(void *)(a1 + 32);
  if (!v9)
  {
    uint64_t v10 = *(void *)(a1 + 8);
    unsigned int v11 = (void *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
    if (v10) {
      unsigned int v11 = (void *)*v11;
    }
    uint64_t v9 = sub_12BCBC0((uint64_t)v11);
    *(void *)(a1 + 32) = v9;
  }
  if (*(void *)(a2 + 32)) {
    unint64_t v12 = *(uint64_t (****)())(a2 + 32);
  }
  else {
    unint64_t v12 = &off_2530EC8;
  }
  sub_12B5324(v9, (uint64_t)v12);
  if ((v4 & 4) != 0)
  {
LABEL_22:
    *(_DWORD *)(a1 + 16) |= 4u;
    uint64_t v13 = *(void **)(a1 + 40);
    if (!v13)
    {
      uint64_t v14 = *(void *)(a1 + 8);
      uint64_t v15 = (void *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
      if (v14) {
        uint64_t v15 = (void *)*v15;
      }
      uint64_t v13 = sub_12BCD7C((uint64_t)v15);
      *(void *)(a1 + 40) = v13;
    }
    if (*(void *)(a2 + 40)) {
      uint64_t v16 = *(uint64_t (****)())(a2 + 40);
    }
    else {
      uint64_t v16 = &off_2530F58;
    }
    sub_12B6794((uint64_t)v13, (uint64_t)v16);
  }
LABEL_30:
  uint64_t v17 = *(void *)(a2 + 8);
  if (v17)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v17 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_12B6794(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_12C4EBC((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    unsigned int v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *unsigned int v8 = v7;
    }
  }
  if (*(unsigned char *)(a2 + 16))
  {
    uint64_t v9 = *(uint64_t (****)())(a2 + 48);
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v10 = *(void *)(a1 + 48);
    if (!v10)
    {
      uint64_t v11 = *(void *)(a1 + 8);
      unint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        unint64_t v12 = (void *)*v12;
      }
      uint64_t v10 = sub_12BC1AC((uint64_t)v12);
      *(void *)(a1 + 48) = v10;
      uint64_t v9 = *(uint64_t (****)())(a2 + 48);
    }
    if (v9) {
      uint64_t v13 = v9;
    }
    else {
      uint64_t v13 = &off_2530AB8;
    }
    sub_12A75F4(v10, (uint64_t)v13);
  }
  uint64_t v14 = *(void *)(a2 + 8);
  if (v14)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v14 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_12B68B8(uint64_t a1, uint64_t a2)
{
  if (a2 != a1)
  {
    sub_12B5EF0(a1);
    sub_12B6638(a1, a2);
  }
}

uint64_t sub_12B6904(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if (v2)
  {
    uint64_t v3 = *(void *)(a1 + 24);
    uint64_t v4 = *(unsigned int *)(v3 + 24);
    while ((int)v4 >= 1)
    {
      uint64_t v5 = v4 - 1;
      char v6 = sub_12B4328(*(void *)(*(void *)(v3 + 32) + 8 * v4));
      uint64_t v4 = v5;
      if ((v6 & 1) == 0) {
        return 0;
      }
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 2) != 0)
  {
    uint64_t result = sub_12B53FC(*(void *)(a1 + 32) + 16);
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 4) == 0) {
    return 1;
  }
  uint64_t result = sub_12B6994(*(void *)(a1 + 40));
  if (result) {
    return 1;
  }
  return result;
}

uint64_t sub_12B6994(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  while ((int)v2 >= 1)
  {
    uint64_t v3 = v2 - 1;
    char v4 = sub_12A37FC(*(void *)(*(void *)(a1 + 40) + 8 * v2));
    uint64_t v2 = v3;
    if ((v4 & 1) == 0) {
      return 0;
    }
  }
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 1;
  }
  uint64_t v6 = *(void *)(a1 + 48);
  uint64_t v7 = *(unsigned int *)(v6 + 24);
  do
  {
    BOOL v5 = (int)v7 < 1;
    if ((int)v7 < 1) {
      break;
    }
    uint64_t v8 = v7 - 1;
    char v9 = sub_12A6EC4(*(void *)(*(void *)(v6 + 32) + 8 * v7));
    uint64_t v7 = v8;
  }
  while ((v9 & 1) != 0);
  return v5;
}

void *sub_12B6A28@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.ResultRefinementGroup");
}

uint64_t sub_12B6A38(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  char v4 = (uint64_t *)(a1 + 8);
  *(void *)a1 = off_24A4328;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  BOOL v5 = (uint64_t *)(a1 + 24);
  *(_DWORD *)(a1 + 44) = 0;
  *(void *)(a1 + 28) = 0;
  *(void *)(a1 + 36) = 0;
  *(void *)(a1 + 20) = 0;
  int v6 = *(_DWORD *)(a2 + 32);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 40);
    uint64_t v8 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_12C4EBC(v5, v8, (uint64_t *)(v7 + 8), v6, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v9 = *(_DWORD *)(a1 + 32) + v6;
    *(_DWORD *)(a1 + 32) = v9;
    uint64_t v10 = *(int **)(a1 + 40);
    if (*v10 < v9) {
      *uint64_t v10 = v9;
    }
  }
  uint64_t v11 = *(void *)(a2 + 8);
  if (v11) {
    sub_188B4F8(v4, (v11 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  if (*(unsigned char *)(a2 + 16)) {
    operator new();
  }
  *(void *)(a1 + 48) = 0;
  return a1;
}

void sub_12B6B5C()
{
}

uint64_t sub_12B6BC0(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  char v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_2530F58)
  {
    int v6 = *(void **)(a1 + 48);
    if (v6)
    {
      sub_12A709C(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  sub_12C48E8((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12B6C84(uint64_t a1)
{
  sub_12B6BC0(a1);

  operator delete();
}

char *sub_12B6CBC(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v23 = a2;
  if (sub_11947B8((uint64_t)a3, &v23, a3[11].i32[1])) {
    return v23;
  }
  int v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v23 + 1;
    unsigned int v8 = *v23;
    if (*v23 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v23, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v23 + 2;
      }
    }
    uint64_t v23 = v7;
    if (v8 >> 3 != 2) {
      break;
    }
    if (v8 != 18) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v15 = *(void *)(a1 + 48);
    if (!v15)
    {
      uint64_t v16 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        uint64_t v16 = (void *)*v16;
      }
      uint64_t v15 = sub_12BC1AC((uint64_t)v16);
      *(void *)(a1 + 48) = v15;
      uint64_t v7 = v23;
    }
    uint64_t v14 = sub_12B6F54(a3, v15, (unsigned __int8 *)v7);
LABEL_26:
    uint64_t v23 = v14;
    if (!v14) {
      return 0;
    }
LABEL_27:
    if (sub_11947B8((uint64_t)a3, &v23, a3[11].i32[1])) {
      return v23;
    }
  }
  if (v8 >> 3 == 1 && v8 == 10)
  {
    uint64_t v17 = v7 - 1;
    while (1)
    {
      unint64_t v18 = (unsigned __int8 *)(v17 + 1);
      uint64_t v23 = v17 + 1;
      uint64_t v19 = *(_DWORD **)(a1 + 40);
      if (v19 && (uint64_t v20 = *(int *)(a1 + 32), (int)v20 < *v19))
      {
        *(_DWORD *)(a1 + 32) = v20 + 1;
        uint64_t v21 = *(void *)&v19[2 * v20 + 2];
      }
      else
      {
        uint64_t v22 = sub_12BBDA0(*(void *)(a1 + 24));
        uint64_t v21 = sub_188CDC8(a1 + 24, (uint64_t)v22);
        unint64_t v18 = (unsigned __int8 *)v23;
      }
      uint64_t v17 = (char *)sub_12B6EC4(a3, v21, v18);
      uint64_t v23 = v17;
      if (!v17) {
        return 0;
      }
      if (*(void *)a3 <= (unint64_t)v17 || *v17 != 10) {
        goto LABEL_27;
      }
    }
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = v23;
    }
    uint64_t v14 = (char *)sub_1885AC0(v8, v13, v7, a3);
    goto LABEL_26;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v23;
  }
  return 0;
}

uint64_t sub_12B6EC4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12A2F08(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_12B6F54(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12A71D0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_12B6FE4(uint64_t a1, char *__dst, void *a3)
{
  int v6 = *(_DWORD *)(a1 + 32);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unsigned int v10 = __dst + 2;
      }
      __dst = sub_12A3294(v8, v10, a3);
    }
  }
  if (*(unsigned char *)(a1 + 16))
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    uint64_t v11 = *(void *)(a1 + 48);
    *__dst = 18;
    unsigned int v12 = *(_DWORD *)(v11 + 40);
    __dst[1] = v12;
    if (v12 > 0x7F) {
      uint64_t v13 = sub_188A9CC(v12, __dst + 1);
    }
    else {
      uint64_t v13 = __dst + 2;
    }
    __dst = sub_12A7400(v11, v13, a3);
  }
  uint64_t v14 = *(void *)(a1 + 8);
  if ((v14 & 1) == 0) {
    return __dst;
  }
  unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v16 + 31) < 0)
  {
    uint64_t v17 = *(void **)(v16 + 8);
    uint64_t v18 = *(void *)(v16 + 16);
  }
  else
  {
    uint64_t v17 = (void *)(v16 + 8);
    LODWORD(v18) = *(unsigned __int8 *)(v16 + 31);
  }
  if (*a3 - (void)__dst >= (int)v18)
  {
    uint64_t v19 = (int)v18;
    memcpy(__dst, v17, (int)v18);
    __dst += v19;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v17, v18, __dst);
}

uint64_t sub_12B7190(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    char v4 = (uint64_t *)(v3 + 8);
  }
  else {
    char v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_12A34BC(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  if (*(unsigned char *)(a1 + 16))
  {
    uint64_t v8 = sub_12A7544(*(void *)(a1 + 48));
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    v2 += v12;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

void sub_12B7274(unsigned char *a1, uint64_t a2)
{
  if ((unsigned char *)a2 != a1)
  {
    sub_12B5F78(a1);
    sub_12B6794((uint64_t)a1, a2);
  }
}

void *sub_12B72C0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.RefinementSessionState");
}

uint64_t sub_12B72D0(uint64_t result, uint64_t a2, int a3)
{
  uint64_t v3 = a2 | 2;
  if (!a3) {
    uint64_t v3 = a2;
  }
  *(void *)uint64_t result = off_24A43A8;
  *(void *)(result + 8) = v3;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a2;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = a2;
  *(void *)(result + 56) = 0;
  *(void *)(result + 64) = 0;
  *(void *)(result + 72) = 0;
  *(_DWORD *)(result + 80) = 0;
  return result;
}

uint64_t sub_12B7310(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  char v4 = (uint64_t *)(a1 + 8);
  *(void *)a1 = off_24A43A8;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v5 = (uint64_t *)(a1 + 24);
  *(_DWORD *)(a1 + 44) = 0;
  *(void *)(a1 + 28) = 0;
  *(void *)(a1 + 36) = 0;
  *(void *)(a1 + 20) = 0;
  int v6 = *(_DWORD *)(a2 + 32);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 40);
    uint64_t v8 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_122D3C0(v5, v8, (uint64_t *)(v7 + 8), v6, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v9 = *(_DWORD *)(a1 + 32) + v6;
    *(_DWORD *)(a1 + 32) = v9;
    unsigned int v10 = *(int **)(a1 + 40);
    if (*v10 < v9) {
      *unsigned int v10 = v9;
    }
  }
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  int v11 = *(_DWORD *)(a2 + 56);
  if (v11)
  {
    uint64_t v12 = *(void *)(a2 + 64);
    uint64_t v13 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_12C4E30((uint64_t *)(a1 + 48), v13, (uint64_t *)(v12 + 8), v11, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v14 = *(_DWORD *)(a1 + 56) + v11;
    *(_DWORD *)(a1 + 56) = v14;
    uint64_t v15 = *(int **)(a1 + 64);
    if (*v15 < v14) {
      int *v15 = v14;
    }
  }
  uint64_t v16 = *(void *)(a2 + 8);
  if (v16) {
    sub_188B4F8(v4, (v16 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  if (*(unsigned char *)(a2 + 16)) {
    operator new();
  }
  *(void *)(a1 + 72) = 0;
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  return a1;
}

void sub_12B74AC()
{
}

uint64_t sub_12B7528(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  char v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_2530F90)
  {
    uint64_t v6 = *(void *)(a1 + 72);
    if (v6)
    {
      sub_12B6BC0(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  sub_12C4868((void *)(a1 + 48));
  sub_122D1B4((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12B75F8(uint64_t a1)
{
  sub_12B7528(a1);

  operator delete();
}

uint64_t sub_12B7630(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_12B3388(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  uint64_t v5 = *(unsigned int *)(v1 + 56);
  if ((int)v5 >= 1)
  {
    uint64_t v6 = (uint64_t *)(*(void *)(v1 + 64) + 8);
    do
    {
      uint64_t v7 = *v6++;
      uint64_t result = sub_12B4500(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(v1 + 56) = 0;
  }
  if (*(unsigned char *)(v1 + 16)) {
    uint64_t result = (uint64_t)sub_12B5F78(*(unsigned char **)(v1 + 72));
  }
  char v9 = *(unsigned char *)(v1 + 8);
  uint64_t v8 = v1 + 8;
  *(_DWORD *)(v8 + 72) = 0;
  *(_DWORD *)(v8 + 8) = 0;
  if (v9)
  {
    return sub_188B4AC((uint64_t *)v8);
  }
  return result;
}

char *sub_12B76EC(uint64_t a1, char *a2, int32x2_t *a3)
{
  v34 = a2;
  if (sub_11947B8((uint64_t)a3, &v34, a3[11].i32[1])) {
    return v34;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v7 = v34 + 1;
    unsigned int v8 = *v34;
    if (*v34 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v34, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v34 + 2;
      }
    }
    v34 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 10) {
          goto LABEL_42;
        }
        int v11 = v7 - 1;
        while (1)
        {
          uint64_t v12 = (unsigned __int8 *)(v11 + 1);
          v34 = v11 + 1;
          uint64_t v13 = *(_DWORD **)(a1 + 40);
          if (v13 && (uint64_t v14 = *(int *)(a1 + 32), (int)v14 < *v13))
          {
            *(_DWORD *)(a1 + 32) = v14 + 1;
            uint64_t v15 = *(void *)&v13[2 * v14 + 2];
          }
          else
          {
            sub_12BCA98(*(void *)(a1 + 24));
            uint64_t v15 = sub_188CDC8(a1 + 24, v16);
            uint64_t v12 = (unsigned __int8 *)v34;
          }
          int v11 = sub_120D444(a3, v15, v12);
          v34 = v11;
          if (!v11) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v11 || *v11 != 10) {
            goto LABEL_50;
          }
        }
      case 2u:
        if (v8 != 18) {
          goto LABEL_42;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v17 = *(void **)(a1 + 72);
        if (!v17)
        {
          uint64_t v18 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v18 = (void *)*v18;
          }
          uint64_t v17 = sub_12BCD7C((uint64_t)v18);
          *(void *)(a1 + 72) = v17;
          uint64_t v7 = v34;
        }
        uint64_t v19 = sub_12B62B0(a3, (uint64_t)v17, (unsigned __int8 *)v7);
        goto LABEL_49;
      case 3u:
        if (v8 != 26) {
          goto LABEL_42;
        }
        uint64_t v20 = v7 - 1;
        while (1)
        {
          uint64_t v21 = (unsigned __int8 *)(v20 + 1);
          v34 = v20 + 1;
          uint64_t v22 = *(_DWORD **)(a1 + 64);
          if (v22 && (uint64_t v23 = *(int *)(a1 + 56), (int)v23 < *v22))
          {
            *(_DWORD *)(a1 + 56) = v23 + 1;
            uint64_t v24 = *(void *)&v22[2 * v23 + 2];
          }
          else
          {
            uint64_t v25 = sub_12BCB1C(*(void *)(a1 + 48));
            uint64_t v24 = sub_188CDC8(a1 + 48, (uint64_t)v25);
            uint64_t v21 = (unsigned __int8 *)v34;
          }
          uint64_t v20 = (char *)sub_12B50A0(a3, v24, v21);
          v34 = v20;
          if (!v20) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v20 || *v20 != 26) {
            goto LABEL_50;
          }
        }
      case 4u:
        if (v8 != 32) {
          goto LABEL_42;
        }
        unsigned int v26 = v7 + 1;
        unint64_t v27 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_39;
        }
        int v28 = *v26;
        int v29 = v27 + (v28 << 7);
        unint64_t v27 = (v29 - 128);
        if (v28 < 0)
        {
          v34 = (char *)sub_188C138((uint64_t)v7, (v29 - 128));
          if (!v34) {
            return 0;
          }
          unint64_t v27 = v32;
        }
        else
        {
          unsigned int v26 = v7 + 2;
LABEL_39:
          v34 = v26;
        }
        if (v27 > 3)
        {
          if (*v6) {
            uint64_t v33 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v33 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(4, v27, v33);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 2u;
          *(_DWORD *)(a1 + 80) = v27;
        }
        goto LABEL_50;
      default:
LABEL_42:
        if (v8) {
          BOOL v30 = (v8 & 7) == 4;
        }
        else {
          BOOL v30 = 1;
        }
        if (!v30)
        {
          if (*v6)
          {
            v31 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            v31 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v7 = v34;
          }
          uint64_t v19 = (char *)sub_1885AC0(v8, v31, v7, a3);
LABEL_49:
          v34 = v19;
          if (!v19) {
            return 0;
          }
LABEL_50:
          if (sub_11947B8((uint64_t)a3, &v34, a3[11].i32[1])) {
            return v34;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return v34;
    }
  }
}

char *sub_12B7A54(uint64_t a1, char *__dst, unint64_t *a3)
{
  int v6 = *(_DWORD *)(a1 + 32);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unsigned int v10 = __dst + 2;
      }
      __dst = sub_12B3AF0(v8, (unint64_t)v10, a3);
    }
  }
  int v11 = *(_DWORD *)(a1 + 16);
  if (v11)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    uint64_t v12 = *(void *)(a1 + 72);
    *__dst = 18;
    unsigned int v13 = *(_DWORD *)(v12 + 20);
    __dst[1] = v13;
    if (v13 > 0x7F) {
      uint64_t v14 = sub_188A9CC(v13, __dst + 1);
    }
    else {
      uint64_t v14 = __dst + 2;
    }
    __dst = sub_12B6FE4(v12, v14, a3);
  }
  int v15 = *(_DWORD *)(a1 + 56);
  if (v15)
  {
    for (int j = 0; j != v15; ++j)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v17 = *(void *)(*(void *)(a1 + 64) + 8 * j + 8);
      *__dst = 26;
      unsigned int v18 = *(_DWORD *)(v17 + 20);
      __dst[1] = v18;
      if (v18 > 0x7F) {
        uint64_t v19 = sub_188A9CC(v18, __dst + 1);
      }
      else {
        uint64_t v19 = __dst + 2;
      }
      __dst = sub_12B4830(v17, v19, a3);
    }
  }
  if ((v11 & 2) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unint64_t v20 = *(int *)(a1 + 80);
    *__dst = 32;
    __dst[1] = v20;
    if (v20 > 0x7F)
    {
      __dst[1] = v20 | 0x80;
      unint64_t v21 = v20 >> 7;
      __dst[2] = v20 >> 7;
      __dst += 3;
      if (v20 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unint64_t v22 = v21 >> 14;
          v21 >>= 7;
          *__dst++ = v21;
        }
        while (v22);
      }
    }
    else
    {
      __dst += 2;
    }
  }
  uint64_t v23 = *(void *)(a1 + 8);
  if ((v23 & 1) == 0) {
    return __dst;
  }
  unint64_t v25 = v23 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v25 + 31) < 0)
  {
    unsigned int v26 = *(void **)(v25 + 8);
    uint64_t v27 = *(void *)(v25 + 16);
  }
  else
  {
    unsigned int v26 = (void *)(v25 + 8);
    LODWORD(v27) = *(unsigned __int8 *)(v25 + 31);
  }
  if ((uint64_t)(*a3 - (void)__dst) >= (int)v27)
  {
    uint64_t v28 = (int)v27;
    memcpy(__dst, v26, (int)v27);
    __dst += v28;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v26, v27, __dst);
}

uint64_t sub_12B7D00(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_12B3E94(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(int *)(a1 + 56);
  uint64_t v9 = v2 + v8;
  uint64_t v10 = *(void *)(a1 + 64);
  if (v10) {
    int v11 = (uint64_t *)(v10 + 8);
  }
  else {
    int v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_12B49B8(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  int v15 = *(_DWORD *)(a1 + 16);
  if ((v15 & 3) != 0)
  {
    if (v15)
    {
      uint64_t v16 = sub_12B7190(*(void *)(a1 + 72));
      v9 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v15 & 2) != 0)
    {
      int v17 = *(_DWORD *)(a1 + 80);
      uint64_t v18 = ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if (v17 >= 0) {
        uint64_t v19 = v18;
      }
      else {
        uint64_t v19 = 11;
      }
      v9 += v19;
    }
  }
  uint64_t v20 = *(void *)(a1 + 8);
  if (v20)
  {
    unint64_t v22 = v20 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v22 + 31) < 0) {
      uint64_t v23 = *(void *)(v22 + 16);
    }
    else {
      uint64_t v23 = *(unsigned __int8 *)(v22 + 31);
    }
    v9 += v23;
  }
  *(_DWORD *)(a1 + 20) = v9;
  return v9;
}

void sub_12B7E70(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_122D3C0((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    uint64_t v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    int v11 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_12C4E30((uint64_t *)(a1 + 48), v11, v10, v9, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v12 = *(_DWORD *)(a1 + 56) + v9;
    *(_DWORD *)(a1 + 56) = v12;
    uint64_t v13 = *(int **)(a1 + 64);
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 16);
  if ((v14 & 3) != 0)
  {
    if (v14)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      int v15 = *(void **)(a1 + 72);
      if (!v15)
      {
        uint64_t v16 = *(void *)(a1 + 8);
        int v17 = (void *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
        if (v16) {
          int v17 = (void *)*v17;
        }
        int v15 = sub_12BCD7C((uint64_t)v17);
        *(void *)(a1 + 72) = v15;
      }
      if (*(void *)(a2 + 72)) {
        uint64_t v18 = *(uint64_t (****)())(a2 + 72);
      }
      else {
        uint64_t v18 = &off_2530F58;
      }
      sub_12B6794((uint64_t)v15, (uint64_t)v18);
    }
    if ((v14 & 2) != 0) {
      *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
    }
    *(_DWORD *)(a1 + 16) |= v14;
  }
  uint64_t v19 = *(void *)(a2 + 8);
  if (v19)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v19 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_12B8014(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  while ((int)v2 >= 1)
  {
    uint64_t v3 = v2 - 1;
    char v4 = sub_12B4328(*(void *)(*(void *)(a1 + 40) + 8 * v2));
    uint64_t v2 = v3;
    if ((v4 & 1) == 0) {
      return 0;
    }
  }
  uint64_t result = sub_12B53FC(a1 + 48);
  if (result)
  {
    if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
      return 1;
    }
    uint64_t result = sub_12B6994(*(void *)(a1 + 72));
    if (result) {
      return 1;
    }
  }
  return result;
}

void *sub_12B8084@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.ResultRefinementQuery");
}

uint64_t sub_12B8094(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  char v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12B8134(uint64_t a1)
{
  sub_12B8094(a1);

  operator delete();
}

uint64_t sub_12B816C(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v1 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v1 + 23) < 0)
    {
      **(unsigned char **)unint64_t v1 = 0;
      *(void *)(v1 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v1 = 0;
      *(unsigned char *)(v1 + 23) = 0;
    }
  }
  char v3 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v3) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_12B81B0(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v17 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v17, a3[11].i32[1])) {
    return *(void *)v17;
  }
  uint64_t v5 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v6 = (char *)(*(void *)v17 + 1);
    unsigned int v7 = **(unsigned char **)v17;
    if ((char)**(unsigned char **)v17 < 0)
    {
      unsigned int v8 = v7 + (*v6 << 7);
      unsigned int v7 = v8 - 128;
      if (*v6 < 0)
      {
        uint64_t v6 = (char *)sub_188C180(*(uint64_t *)v17, v8 - 128);
        unsigned int v7 = v9;
      }
      else
      {
        uint64_t v6 = (char *)(*(void *)v17 + 2);
      }
    }
    *(void *)int v17 = v6;
    if (v7 != 10) {
      break;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v13 = *(void *)(a1 + 8);
    int v14 = (uint64_t *)(v13 & 0xFFFFFFFFFFFFFFFCLL);
    if (v13) {
      int v14 = (uint64_t *)*v14;
    }
    int v15 = (std::string *)sub_1880F84((void *)(a1 + 24), v14);
    int v12 = (void *)sub_188C244(v15, *(char **)v17, (uint64_t)a3);
LABEL_18:
    *(void *)int v17 = v12;
    if (!v12) {
      goto LABEL_25;
    }
    if (sub_11947B8((uint64_t)a3, (char **)v17, a3[11].i32[1])) {
      return *(void *)v17;
    }
  }
  if (v7) {
    BOOL v10 = (v7 & 7) == 4;
  }
  else {
    BOOL v10 = 1;
  }
  if (!v10)
  {
    if (*v5)
    {
      int v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      int v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v6 = *(char **)v17;
    }
    int v12 = sub_1885AC0(v7, v11, v6, a3);
    goto LABEL_18;
  }
  if (v6)
  {
    a3[10].i32[0] = v7 - 1;
    return *(void *)v17;
  }
LABEL_25:
  *(void *)int v17 = 0;
  return *(void *)v17;
}

char *sub_12B8308(uint64_t a1, char *__dst, void *a3)
{
  char v4 = __dst;
  if (*(unsigned char *)(a1 + 16)) {
    char v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  uint64_t v6 = *(void *)(a1 + 8);
  if ((v6 & 1) == 0) {
    return v4;
  }
  unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v8 + 31) < 0)
  {
    unsigned int v9 = *(void **)(v8 + 8);
    uint64_t v10 = *(void *)(v8 + 16);
  }
  else
  {
    unsigned int v9 = (void *)(v8 + 8);
    LODWORD(v10) = *(unsigned __int8 *)(v8 + 31);
  }
  if (*a3 - (void)v4 >= (int)v10)
  {
    uint64_t v11 = (int)v10;
    memcpy(v4, v9, (int)v10);
    v4 += v11;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v9, v10, v4);
}

uint64_t sub_12B83D4(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v3 = *(unsigned __int8 *)(v2 + 23);
    uint64_t v4 = *(void *)(v2 + 8);
    if ((v3 & 0x80u) == 0) {
      uint64_t v4 = v3;
    }
    uint64_t v1 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  else
  {
    uint64_t v1 = 0;
  }
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5)
  {
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v7 + 31) < 0) {
      uint64_t v8 = *(void *)(v7 + 16);
    }
    else {
      uint64_t v8 = *(unsigned __int8 *)(v7 + 31);
    }
    v1 += v8;
  }
  *(_DWORD *)(a1 + 20) = v1;
  return v1;
}

uint64_t sub_12B8458()
{
  return 1;
}

void *sub_12B8460@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.SearchEnrichmentCandidateMetadata");
}

void *sub_12B8470(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12B84E4(void *a1)
{
  sub_12B8470(a1);

  operator delete();
}

uint64_t sub_12B851C(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 16) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_12B8534(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v19 = a2;
  if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
    return v19;
  }
  uint64_t v5 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v6 = v19 + 1;
    unsigned int v7 = *v19;
    if (*v19 < 0)
    {
      unsigned int v8 = v7 + (*v6 << 7);
      unsigned int v7 = v8 - 128;
      if (*v6 < 0)
      {
        uint64_t v6 = (char *)sub_188C180((uint64_t)v19, v8 - 128);
        unsigned int v7 = v9;
      }
      else
      {
        uint64_t v6 = v19 + 2;
      }
    }
    uint64_t v19 = v6;
    if (v7 == 8)
    {
      int v12 = v6 + 1;
      unint64_t v13 = *v6;
      if (*v6 < 0)
      {
        int v14 = *v12;
        int v15 = v13 + (v14 << 7);
        unint64_t v13 = (v15 - 128);
        if (v14 < 0)
        {
          uint64_t v19 = (char *)sub_188C138((uint64_t)v6, (v15 - 128));
          if (!v19) {
            return 0;
          }
          unint64_t v13 = v16;
          goto LABEL_20;
        }
        int v12 = v6 + 2;
      }
      uint64_t v19 = v12;
LABEL_20:
      if (v13 > 1)
      {
        if (*v5) {
          int v17 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          int v17 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        sub_188C020(1, v13, v17);
      }
      else
      {
        *(_DWORD *)(a1 + 16) |= 1u;
        *(_DWORD *)(a1 + 24) = v13;
      }
      goto LABEL_22;
    }
    if (!v7 || (v7 & 7) == 4) {
      break;
    }
    if (*v5)
    {
      uint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v6 = v19;
    }
    uint64_t v19 = (char *)sub_1885AC0(v7, v11, v6, a3);
    if (!v19) {
      return 0;
    }
LABEL_22:
    if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
      return v19;
    }
  }
  if (v6)
  {
    a3[10].i32[0] = v7 - 1;
    return v19;
  }
  return 0;
}

unsigned char *sub_12B86DC(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v6 = *(int *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v6;
    if (v6 > 0x7F)
    {
      v4[1] = v6 | 0x80;
      unint64_t v7 = v6 >> 7;
      v4[2] = v6 >> 7;
      v4 += 3;
      if (v6 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v8 = v7 >> 14;
          v7 >>= 7;
          *v4++ = v7;
        }
        while (v8);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    int v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    int v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    v4 += v14;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v12, v13, v4);
}

uint64_t sub_12B8804(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    int v2 = *(_DWORD *)(a1 + 24);
    if (v2 < 0) {
      uint64_t v1 = 11;
    }
    else {
      uint64_t v1 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  else
  {
    uint64_t v1 = 0;
  }
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v5 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    v1 += v6;
  }
  *(_DWORD *)(a1 + 20) = v1;
  return v1;
}

uint64_t sub_12B8878()
{
  return 1;
}

void *sub_12B8880@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.SearchEnrichmentRevisionMetadata");
}

uint64_t sub_12B8890(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_2531008)
  {
    uint64_t v6 = *(void *)(a1 + 24);
    if (v6)
    {
      sub_12A8F74(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12B8948(uint64_t a1)
{
  sub_12B8890(a1);

  operator delete();
}

uint64_t sub_12B8980(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if (v2) {
    uint64_t result = sub_12A907C(*(void *)(result + 24));
  }
  if ((v2 & 6) != 0) {
    *(void *)(v1 + 32) = 0x3BC400000000;
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_12B89EC(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v25 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    unint64_t v8 = v25 + 1;
    unsigned int v9 = *v25;
    if (*v25 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unint64_t v8 = (char *)sub_188C180((uint64_t)v25, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unint64_t v8 = v25 + 2;
      }
    }
    unint64_t v25 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 != 3) {
      break;
    }
    if (v9 != 26) {
      goto LABEL_14;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v17 = *(void *)(a1 + 24);
    if (!v17)
    {
      uint64_t v18 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v7) {
        uint64_t v18 = (void *)*v18;
      }
      uint64_t v17 = sub_12BC360((uint64_t)v18);
      *(void *)(a1 + 24) = v17;
      unint64_t v8 = v25;
    }
    unint64_t v16 = sub_12AA0D8(a3, v17, (unsigned __int8 *)v8);
LABEL_27:
    unint64_t v25 = v16;
    if (!v16) {
      goto LABEL_48;
    }
LABEL_37:
    if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v12 == 2)
  {
    if (v9 == 21)
    {
      v5 |= 2u;
      *(_DWORD *)(a1 + 32) = *(_DWORD *)v8;
      unint64_t v25 = v8 + 4;
      goto LABEL_37;
    }
  }
  else if (v12 == 1 && v9 == 8)
  {
    uint64_t v19 = v8 + 1;
    unint64_t v20 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_34;
    }
    int v21 = *v19;
    int v22 = v20 + (v21 << 7);
    unint64_t v20 = (v22 - 128);
    if (v21 < 0)
    {
      unint64_t v25 = (char *)sub_188C138((uint64_t)v8, (v22 - 128));
      if (!v25) {
        goto LABEL_48;
      }
      unint64_t v20 = v23;
    }
    else
    {
      uint64_t v19 = v8 + 2;
LABEL_34:
      unint64_t v25 = v19;
    }
    if ((v20 - 15300) > 5)
    {
      if (*v7) {
        uint64_t v24 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        uint64_t v24 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      sub_188C020(1, v20, v24);
    }
    else
    {
      *(_DWORD *)(a1 + 16) |= 4u;
      *(_DWORD *)(a1 + 36) = v20;
    }
    goto LABEL_37;
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (*v7)
    {
      int v15 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      int v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unint64_t v8 = v25;
    }
    unint64_t v16 = (char *)sub_1885AC0(v9, v15, v8, a3);
    goto LABEL_27;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_48:
  unint64_t v25 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v25;
}

unsigned char *sub_12B8C44(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 4) != 0)
  {
    if (*a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 36);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    int v10 = *(_DWORD *)(a1 + 32);
    unsigned char *v4 = 21;
    *(_DWORD *)(v4 + 1) = v10;
    v4 += 5;
  }
  if (v6)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v11 = *(void *)(a1 + 24);
    unsigned char *v4 = 26;
    unsigned int v12 = *(_DWORD *)(v11 + 20);
    v4[1] = v12;
    if (v12 > 0x7F) {
      uint64_t v13 = sub_188A9CC(v12, v4 + 1);
    }
    else {
      uint64_t v13 = v4 + 2;
    }
    char v4 = sub_12A9478(v11, (unint64_t)v13, a3);
  }
  uint64_t v14 = *(void *)(a1 + 8);
  if ((v14 & 1) == 0) {
    return v4;
  }
  unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v16 + 31) < 0)
  {
    uint64_t v17 = *(void **)(v16 + 8);
    uint64_t v18 = *(void *)(v16 + 16);
  }
  else
  {
    uint64_t v17 = (void *)(v16 + 8);
    LODWORD(v18) = *(unsigned __int8 *)(v16 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v18)
  {
    uint64_t v19 = (int)v18;
    memcpy(v4, v17, (int)v18);
    v4 += v19;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v17, v18, v4);
}

uint64_t sub_12B8E08(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 7) != 0)
  {
    if (v2)
    {
      uint64_t v5 = sub_12A9674(*(void *)(a1 + 24));
      uint64_t v3 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    else
    {
      uint64_t v3 = 0;
    }
    if ((v2 & 2) != 0) {
      uint64_t result = v3 + 5;
    }
    else {
      uint64_t result = v3;
    }
    if ((v2 & 4) != 0)
    {
      int v6 = *(_DWORD *)(a1 + 36);
      uint64_t v7 = ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if (v6 >= 0) {
        uint64_t v8 = v7;
      }
      else {
        uint64_t v8 = 11;
      }
      result += v8;
    }
  }
  else
  {
    uint64_t result = 0;
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    result += v11;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

std::string *sub_12B8EE0(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 7) != 0)
  {
    if (v4)
    {
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      data = (std::string *)result[1].__r_.__value_.__l.__data_;
      if (!data)
      {
        std::string::size_type size = v3->__r_.__value_.__l.__size_;
        uint64_t v8 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
        if (size) {
          uint64_t v8 = (void *)*v8;
        }
        data = (std::string *)sub_12BC360((uint64_t)v8);
        v3[1].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      }
      if (*(void *)(a2 + 24)) {
        uint64_t v9 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        uint64_t v9 = &off_2530B58;
      }
      uint64_t result = sub_12A9780(data, (uint64_t)v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0)
        {
LABEL_6:
          LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
          goto LABEL_7;
        }
LABEL_5:
        HIDWORD(v3[1].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 36);
        goto LABEL_6;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 32);
    if ((v4 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_7:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_12B8FC8()
{
  return 1;
}

void *sub_12B8FD0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.SearchEnrichmentCandidate.CandidateFilterReason");
}

uint64_t sub_12B8FE0(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_14;
    }
  }
  else if (v4)
  {
    goto LABEL_14;
  }
  uint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_2531030)
  {
    if (*(void *)(a1 + 56))
    {
      sub_184B078();
      operator delete();
    }
    uint64_t v6 = *(void *)(a1 + 64);
    if (v6)
    {
      sub_15B1678(v6);
      operator delete();
    }
    uint64_t v7 = *(void *)(a1 + 72);
    if (v7)
    {
      sub_12B8094(v7);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_14:
  sub_12C4968((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12B90F8(uint64_t a1)
{
  sub_12B8FE0(a1);

  operator delete();
}

uint64_t sub_12B9130(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_12B8980(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  int v5 = *(_DWORD *)(v1 + 16);
  if ((v5 & 0xF) == 0) {
    goto LABEL_11;
  }
  if ((v5 & 1) == 0)
  {
    if ((v5 & 2) == 0) {
      goto LABEL_8;
    }
LABEL_21:
    uint64_t result = (uint64_t)sub_16CD894(*(void *)(v1 + 56));
    if ((v5 & 4) == 0)
    {
LABEL_9:
      if ((v5 & 8) == 0) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
    goto LABEL_22;
  }
  unint64_t v8 = *(void *)(v1 + 48) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v8 + 23) < 0)
  {
    **(unsigned char **)unint64_t v8 = 0;
    *(void *)(v8 + 8) = 0;
    if ((v5 & 2) != 0) {
      goto LABEL_21;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v8 = 0;
    *(unsigned char *)(v8 + 23) = 0;
    if ((v5 & 2) != 0) {
      goto LABEL_21;
    }
  }
LABEL_8:
  if ((v5 & 4) == 0) {
    goto LABEL_9;
  }
LABEL_22:
  uint64_t result = (uint64_t)sub_15B16B4(*(unsigned char **)(v1 + 64));
  if ((v5 & 8) != 0) {
LABEL_10:
  }
    uint64_t result = sub_12B816C(*(void *)(v1 + 72));
LABEL_11:
  if ((v5 & 0x30) != 0)
  {
    *(unsigned char *)(v1 + 84) = 0;
    *(_DWORD *)(v1 + 80) = 0;
  }
  char v7 = *(unsigned char *)(v1 + 8);
  uint64_t v6 = v1 + 8;
  *(_DWORD *)(v6 + 8) = 0;
  if (v7)
  {
    return sub_188B4AC((uint64_t *)v6);
  }
  return result;
}

uint64_t sub_12B9230(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)v41 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v41, a3[11].i32[1])) {
    goto LABEL_2;
  }
  char v7 = (void *)(a1 + 8);
  while (2)
  {
    unint64_t v8 = (unsigned __int8 *)(*(void *)v41 + 1);
    unsigned int v9 = **(unsigned char **)v41;
    if ((char)**(unsigned char **)v41 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        unint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v41, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unint64_t v8 = (unsigned __int8 *)(*(void *)v41 + 2);
      }
    }
    *(void *)v41 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_53;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v12 = *(void *)(a1 + 56);
        if (!v12)
        {
          uint64_t v13 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v13 = (void *)*v13;
          }
          uint64_t v12 = sub_185089C((uint64_t)v13);
          *(void *)(a1 + 56) = v12;
          unint64_t v8 = *(unsigned __int8 **)v41;
        }
        uint64_t v14 = (uint64_t)sub_12688D0(a3, v12, v8);
        goto LABEL_60;
      case 2u:
        if (v9 != 18) {
          goto LABEL_53;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v15 = *(void *)(a1 + 64);
        if (!v15)
        {
          unint64_t v16 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            unint64_t v16 = (void *)*v16;
          }
          uint64_t v15 = sub_15C19EC((uint64_t)v16);
          *(void *)(a1 + 64) = v15;
          unint64_t v8 = *(unsigned __int8 **)v41;
        }
        uint64_t v14 = (uint64_t)sub_11E1C60(a3, v15, v8);
        goto LABEL_60;
      case 3u:
        if (v9 != 24) {
          goto LABEL_53;
        }
        uint64_t v17 = (char *)(v8 + 1);
        unint64_t v18 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_25;
        }
        int v19 = *v17;
        int v20 = v18 + (v19 << 7);
        unint64_t v18 = (v20 - 128);
        if (v19 < 0)
        {
          *(void *)v41 = sub_188C138((uint64_t)v8, (v20 - 128));
          if (!*(void *)v41) {
            goto LABEL_74;
          }
          unint64_t v18 = v37;
        }
        else
        {
          uint64_t v17 = (char *)(v8 + 2);
LABEL_25:
          *(void *)v41 = v17;
        }
        if (v18 > 2)
        {
          if (*v7) {
            v40 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            v40 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(3, v18, v40);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 0x10u;
          *(_DWORD *)(a1 + 80) = v18;
        }
        goto LABEL_61;
      case 4u:
        if (v9 != 34) {
          goto LABEL_53;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v21 = *(void *)(a1 + 8);
        int v22 = (uint64_t *)(v21 & 0xFFFFFFFFFFFFFFFCLL);
        if (v21) {
          int v22 = (uint64_t *)*v22;
        }
        unint64_t v23 = (std::string *)sub_1880F84((void *)(a1 + 48), v22);
        uint64_t v14 = (uint64_t)sub_188C244(v23, *(char **)v41, (uint64_t)a3);
        goto LABEL_60;
      case 5u:
        if (v9 != 42) {
          goto LABEL_53;
        }
        uint64_t v24 = (char *)(v8 - 1);
        while (1)
        {
          unint64_t v25 = (unsigned __int8 *)(v24 + 1);
          *(void *)v41 = v24 + 1;
          unsigned int v26 = *(_DWORD **)(a1 + 40);
          if (v26 && (uint64_t v27 = *(int *)(a1 + 32), (int)v27 < *v26))
          {
            *(_DWORD *)(a1 + 32) = v27 + 1;
            uint64_t v28 = *(void *)&v26[2 * v27 + 2];
          }
          else
          {
            int v29 = sub_12BCFC0(*(void *)(a1 + 24));
            uint64_t v28 = sub_188CDC8(a1 + 24, (uint64_t)v29);
            unint64_t v25 = *(unsigned __int8 **)v41;
          }
          uint64_t v24 = sub_12B9680(a3, v28, v25);
          *(void *)v41 = v24;
          if (!v24) {
            goto LABEL_74;
          }
          if (*(void *)a3 <= (unint64_t)v24 || *v24 != 42) {
            goto LABEL_61;
          }
        }
      case 6u:
        if (v9 != 48) {
          goto LABEL_53;
        }
        v5 |= 0x20u;
        BOOL v30 = (char *)(v8 + 1);
        uint64_t v31 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_46;
        }
        int v32 = *v30;
        uint64_t v31 = v31 + (v32 << 7) - 128;
        if (v32 < 0)
        {
          uint64_t v38 = sub_188C138((uint64_t)v8, v31);
          *(void *)v41 = v38;
          *(unsigned char *)(a1 + 84) = v39 != 0;
          if (!v38) {
            goto LABEL_74;
          }
        }
        else
        {
          BOOL v30 = (char *)(v8 + 2);
LABEL_46:
          *(void *)v41 = v30;
          *(unsigned char *)(a1 + 84) = v31 != 0;
        }
        goto LABEL_61;
      case 7u:
        if (v9 != 58) {
          goto LABEL_53;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v33 = *(void **)(a1 + 72);
        if (!v33)
        {
          v34 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            v34 = (void *)*v34;
          }
          uint64_t v33 = sub_12BCEC0((uint64_t)v34);
          *(void *)(a1 + 72) = v33;
          unint64_t v8 = *(unsigned __int8 **)v41;
        }
        uint64_t v14 = sub_12B9710(a3, (uint64_t)v33, v8);
        goto LABEL_60;
      default:
LABEL_53:
        if (v9) {
          BOOL v35 = (v9 & 7) == 4;
        }
        else {
          BOOL v35 = 1;
        }
        if (!v35)
        {
          if (*v7)
          {
            v36 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            v36 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unint64_t v8 = *(unsigned __int8 **)v41;
          }
          uint64_t v14 = (uint64_t)sub_1885AC0(v9, v36, (char *)v8, a3);
LABEL_60:
          *(void *)v41 = v14;
          if (!v14) {
            goto LABEL_74;
          }
LABEL_61:
          if (sub_11947B8((uint64_t)a3, (char **)v41, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_74:
        }
          *(void *)v41 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v41;
    }
  }
}

char *sub_12B9680(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12B89EC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_12B9710(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12B81B0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_12B97A0(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 56);
    char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 44);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    uint64_t v4 = sub_184B3AC(v7, v9, a3);
    if ((v6 & 4) == 0)
    {
LABEL_3:
      if ((v6 & 0x10) == 0) {
        goto LABEL_23;
      }
      goto LABEL_17;
    }
  }
  else if ((v6 & 4) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v10 = *(void *)(a1 + 64);
  char *v4 = 18;
  unsigned int v11 = *(_DWORD *)(v10 + 20);
  v4[1] = v11;
  if (v11 > 0x7F) {
    uint64_t v12 = sub_188A9CC(v11, v4 + 1);
  }
  else {
    uint64_t v12 = v4 + 2;
  }
  uint64_t v4 = sub_15B1A68(v10, (unint64_t)v12, a3);
  if ((v6 & 0x10) != 0)
  {
LABEL_17:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v13 = *(int *)(a1 + 80);
    char *v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unint64_t v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_23:
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  int v16 = *(_DWORD *)(a1 + 32);
  if (v16)
  {
    for (int i = 0; i != v16; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v18 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      char *v4 = 42;
      unsigned int v19 = *(_DWORD *)(v18 + 20);
      v4[1] = v19;
      if (v19 > 0x7F) {
        int v20 = sub_188A9CC(v19, v4 + 1);
      }
      else {
        int v20 = v4 + 2;
      }
      uint64_t v4 = sub_12B8C44(v18, (unint64_t)v20, a3);
    }
  }
  if ((v6 & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v21 = *(unsigned char *)(a1 + 84);
    char *v4 = 48;
    v4[1] = v21;
    v4 += 2;
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v22 = *(void *)(a1 + 72);
    char *v4 = 58;
    unsigned int v23 = *(_DWORD *)(v22 + 20);
    v4[1] = v23;
    if (v23 > 0x7F) {
      uint64_t v24 = sub_188A9CC(v23, v4 + 1);
    }
    else {
      uint64_t v24 = v4 + 2;
    }
    uint64_t v4 = sub_12B8308(v22, v24, a3);
  }
  uint64_t v25 = *(void *)(a1 + 8);
  if ((v25 & 1) == 0) {
    return v4;
  }
  unint64_t v27 = v25 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v27 + 31) < 0)
  {
    uint64_t v28 = *(void **)(v27 + 8);
    uint64_t v29 = *(void *)(v27 + 16);
  }
  else
  {
    uint64_t v28 = (void *)(v27 + 8);
    LODWORD(v29) = *(unsigned __int8 *)(v27 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v29)
  {
    uint64_t v30 = (int)v29;
    memcpy(v4, v28, (int)v29);
    v4 += v30;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v28, v29, v4);
}

uint64_t sub_12B9AF4(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_12B8E08(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 0x3F) == 0) {
    goto LABEL_28;
  }
  if (v8)
  {
    unint64_t v9 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v10 = *(unsigned __int8 *)(v9 + 23);
    uint64_t v11 = *(void *)(v9 + 8);
    if ((v10 & 0x80u) == 0) {
      uint64_t v11 = v10;
    }
    v2 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v8 & 2) == 0)
    {
LABEL_12:
      if ((v8 & 4) == 0) {
        goto LABEL_13;
      }
      goto LABEL_20;
    }
  }
  else if ((v8 & 2) == 0)
  {
    goto LABEL_12;
  }
  uint64_t v12 = sub_184B568(*(void *)(a1 + 56));
  v2 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 4) == 0)
  {
LABEL_13:
    if ((v8 & 8) == 0) {
      goto LABEL_14;
    }
    goto LABEL_21;
  }
LABEL_20:
  uint64_t v13 = sub_15B1D1C(*(void *)(a1 + 64));
  v2 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 8) == 0)
  {
LABEL_14:
    if ((v8 & 0x10) == 0) {
      goto LABEL_26;
    }
    goto LABEL_22;
  }
LABEL_21:
  uint64_t v14 = sub_12B83D4(*(void *)(a1 + 72));
  v2 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 0x10) == 0) {
    goto LABEL_26;
  }
LABEL_22:
  int v15 = *(_DWORD *)(a1 + 80);
  if (v15 < 0) {
    uint64_t v16 = 11;
  }
  else {
    uint64_t v16 = ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v2 += v16;
LABEL_26:
  if ((v8 & 0x20) != 0) {
    v2 += 2;
  }
LABEL_28:
  uint64_t v17 = *(void *)(a1 + 8);
  if (v17)
  {
    unint64_t v19 = v17 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v19 + 31) < 0) {
      uint64_t v20 = *(void *)(v19 + 16);
    }
    else {
      uint64_t v20 = *(unsigned __int8 *)(v19 + 31);
    }
    v2 += v20;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

void sub_12B9CD8(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_12C4F48((std::string *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    int v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *int v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 0x3F) != 0)
  {
    if (v9)
    {
      uint64_t v11 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v12 = *(void *)(a1 + 8);
      uint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
      if (v12) {
        uint64_t v13 = (uint64_t *)*v13;
      }
      sub_1881DF4((std::string **)(a1 + 48), v11, v13);
      if ((v9 & 2) == 0)
      {
LABEL_7:
        if ((v9 & 4) == 0) {
          goto LABEL_8;
        }
        goto LABEL_28;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_7;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v14 = *(void *)(a1 + 56);
    if (!v14)
    {
      uint64_t v15 = *(void *)(a1 + 8);
      uint64_t v16 = (void *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
      if (v15) {
        uint64_t v16 = (void *)*v16;
      }
      uint64_t v14 = sub_185089C((uint64_t)v16);
      *(void *)(a1 + 56) = v14;
    }
    if (*(void *)(a2 + 56)) {
      uint64_t v17 = *(uint64_t (****)())(a2 + 56);
    }
    else {
      uint64_t v17 = &off_254D2B0;
    }
    sub_16CE3CC(v14, (uint64_t)v17);
    if ((v9 & 4) == 0)
    {
LABEL_8:
      if ((v9 & 8) == 0) {
        goto LABEL_9;
      }
      goto LABEL_36;
    }
LABEL_28:
    *(_DWORD *)(a1 + 16) |= 4u;
    uint64_t v18 = *(void *)(a1 + 64);
    if (!v18)
    {
      uint64_t v19 = *(void *)(a1 + 8);
      uint64_t v20 = (void *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
      if (v19) {
        uint64_t v20 = (void *)*v20;
      }
      uint64_t v18 = sub_15C19EC((uint64_t)v20);
      *(void *)(a1 + 64) = v18;
    }
    if (*(void *)(a2 + 64)) {
      char v21 = *(uint64_t (****)())(a2 + 64);
    }
    else {
      char v21 = &off_253F208;
    }
    sub_15B1E3C(v18, (uint64_t)v21);
    if ((v9 & 8) == 0)
    {
LABEL_9:
      if ((v9 & 0x10) == 0) {
        goto LABEL_10;
      }
      goto LABEL_44;
    }
LABEL_36:
    *(_DWORD *)(a1 + 16) |= 8u;
    uint64_t v22 = *(std::string **)(a1 + 72);
    if (!v22)
    {
      uint64_t v23 = *(void *)(a1 + 8);
      uint64_t v24 = (void *)(v23 & 0xFFFFFFFFFFFFFFFCLL);
      if (v23) {
        uint64_t v24 = (void *)*v24;
      }
      uint64_t v22 = (std::string *)sub_12BCEC0((uint64_t)v24);
      *(void *)(a1 + 72) = v22;
    }
    if (*(void *)(a2 + 72)) {
      uint64_t v25 = *(uint64_t (****)())(a2 + 72);
    }
    else {
      uint64_t v25 = &off_2530FE8;
    }
    sub_12329D0(v22, (uint64_t)v25);
    if ((v9 & 0x10) == 0)
    {
LABEL_10:
      if ((v9 & 0x20) == 0)
      {
LABEL_12:
        *(_DWORD *)(a1 + 16) |= v9;
        goto LABEL_13;
      }
LABEL_11:
      *(unsigned char *)(a1 + 84) = *(unsigned char *)(a2 + 84);
      goto LABEL_12;
    }
LABEL_44:
    *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
    if ((v9 & 0x20) == 0) {
      goto LABEL_12;
    }
    goto LABEL_11;
  }
LABEL_13:
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_12B9F08(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 2) != 0)
  {
    uint64_t result = sub_16CE508(*(void *)(a1 + 56));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 4) == 0) {
    return 1;
  }
  uint64_t result = sub_15B1FC0(*(void *)(a1 + 64));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_12B9F54@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.SearchEnrichmentCandidate");
}

void *sub_12B9F64(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12B9FD8(void *a1)
{
  sub_12B9F64(a1);

  operator delete();
}

uint64_t sub_12BA010(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 3) != 0) {
    *(void *)(a1 + 24) = 0x3C2800000000;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_12BA03C(uint64_t a1, char *a2, int32x2_t *a3)
{
  unsigned int v26 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (1)
  {
    int v8 = v26 + 1;
    unsigned int v9 = *v26;
    if (*v26 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        int v8 = (char *)sub_188C180((uint64_t)v26, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        int v8 = v26 + 2;
      }
    }
    unsigned int v26 = v8;
    if (v9 >> 3 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_13;
    }
    uint64_t v15 = v8 + 1;
    int v16 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_25;
    }
    int v17 = *v15;
    int v16 = v16 + (v17 << 7) - 128;
    if ((v17 & 0x80000000) == 0)
    {
      uint64_t v15 = v8 + 2;
LABEL_25:
      unsigned int v26 = v15;
      *(_DWORD *)(a1 + 24) = v16;
      int v5 = 1;
      goto LABEL_32;
    }
    uint64_t v22 = (char *)sub_188C0D0((uint64_t)v8, v16);
    unsigned int v26 = v22;
    *(_DWORD *)(a1 + 24) = v23;
    int v5 = 1;
    if (!v22) {
      goto LABEL_45;
    }
LABEL_32:
    if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 >> 3 == 1 && v9 == 8)
  {
    uint64_t v18 = v8 + 1;
    unint64_t v19 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_29;
    }
    int v20 = *v18;
    int v21 = v19 + (v20 << 7);
    unint64_t v19 = (v21 - 128);
    if (v20 < 0)
    {
      unsigned int v26 = (char *)sub_188C138((uint64_t)v8, (v21 - 128));
      if (!v26) {
        goto LABEL_45;
      }
      unint64_t v19 = v24;
    }
    else
    {
      uint64_t v18 = v8 + 2;
LABEL_29:
      unsigned int v26 = v18;
    }
    if ((v19 - 15400) > 8)
    {
      if (*v7) {
        uint64_t v25 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        uint64_t v25 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      sub_188C020(1, v19, v25);
    }
    else
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      *(_DWORD *)(a1 + 28) = v19;
    }
    goto LABEL_32;
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      uint64_t v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v8 = v26;
    }
    unsigned int v26 = (char *)sub_1885AC0(v9, v14, v8, a3);
    if (!v26) {
      goto LABEL_45;
    }
    goto LABEL_32;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_45:
  unsigned int v26 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v26;
}

unsigned char *sub_12BA27C(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 28);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 24);
    unsigned char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    int v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    int v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_12BA420(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_11;
  }
  if (v1)
  {
    uint64_t v2 = ((9 * (__clz(*(_DWORD *)(a1 + 24) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_11;
    }
  }
  else
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_11;
    }
  }
  int v3 = *(_DWORD *)(a1 + 28);
  if (v3 < 0) {
    uint64_t v4 = 11;
  }
  else {
    uint64_t v4 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v2 += v4;
LABEL_11:
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5)
  {
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v7 + 31) < 0) {
      uint64_t v8 = *(void *)(v7 + 16);
    }
    else {
      uint64_t v8 = *(unsigned __int8 *)(v7 + 31);
    }
    v2 += v8;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_12BA4D0()
{
  return 1;
}

void *sub_12BA4D8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.SearchEnrichmentMetadata.OverallFilterReason");
}

uint64_t sub_12BA4E8(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)a1 = off_24A46A8;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v5 = (uint64_t *)(a1 + 24);
  *(_DWORD *)(a1 + 44) = 0;
  *(void *)(a1 + 28) = 0;
  *(void *)(a1 + 36) = 0;
  *(void *)(a1 + 20) = 0;
  int v6 = *(_DWORD *)(a2 + 32);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 40);
    uint64_t v8 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_12C4FD4(v5, v8, (uint64_t *)(v7 + 8), v6, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v9 = *(_DWORD *)(a1 + 32) + v6;
    *(_DWORD *)(a1 + 32) = v9;
    unsigned int v10 = *(int **)(a1 + 40);
    if (*v10 < v9) {
      *unsigned int v10 = v9;
    }
  }
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  int v11 = *(_DWORD *)(a2 + 56);
  if (v11)
  {
    uint64_t v12 = *(void *)(a2 + 64);
    uint64_t v13 = (std::string **)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_12C5060((uint64_t *)(a1 + 48), v13, (uint64_t *)(v12 + 8), v11, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v14 = *(_DWORD *)(a1 + 56) + v11;
    *(_DWORD *)(a1 + 56) = v14;
    unint64_t v15 = *(int **)(a1 + 64);
    if (*v15 < v14) {
      int *v15 = v14;
    }
  }
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0;
  int v16 = *(_DWORD *)(a2 + 72);
  if (v16)
  {
    sub_188C80C((unsigned int *)(a1 + 72), v16);
    uint64_t v17 = *(void **)(a1 + 80);
    *(_DWORD *)(a1 + 72) += *(_DWORD *)(a2 + 72);
    memcpy(v17, *(const void **)(a2 + 80), 4 * *(int *)(a2 + 72));
  }
  uint64_t v18 = *(void *)(a2 + 8);
  if (v18) {
    sub_188B4F8(v4, (v18 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 88) = &qword_2550250;
  int v19 = *(_DWORD *)(a2 + 16);
  if (v19)
  {
    int v20 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      int v20 = (uint64_t *)*v20;
    }
    sub_1881DF4((std::string **)(a1 + 88), (long long *)(*(void *)(a2 + 88) & 0xFFFFFFFFFFFFFFFELL), v20);
    int v19 = *(_DWORD *)(a2 + 16);
  }
  if ((v19 & 2) != 0) {
    operator new();
  }
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  return a1;
}

void sub_12BA6F8()
{
}

uint64_t sub_12BA784(uint64_t a1)
{
  int v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  uint64_t v5 = (void ***)(a1 + 88);
  if (*(uint64_t **)(a1 + 88) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_2531088 && *(void *)(a1 + 96))
  {
    sub_184828C();
    operator delete();
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  sub_1889DA8(a1 + 72);
  sub_12C4A68((void *)(a1 + 48));
  sub_12C49E8((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12BA870(uint64_t a1)
{
  sub_12BA784(a1);

  operator delete();
}

uint64_t sub_12BA8A8(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    int v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_12B9130(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  uint64_t v5 = *(unsigned int *)(v1 + 56);
  if ((int)v5 >= 1)
  {
    int v6 = (uint64_t *)(*(void *)(v1 + 64) + 8);
    do
    {
      uint64_t v7 = *v6++;
      uint64_t result = sub_12BA010(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(v1 + 56) = 0;
  }
  *(_DWORD *)(v1 + 72) = 0;
  int v8 = *(_DWORD *)(v1 + 16);
  if ((v8 & 3) != 0)
  {
    if ((v8 & 1) == 0) {
      goto LABEL_13;
    }
    unint64_t v9 = *(void *)(v1 + 88) & 0xFFFFFFFFFFFFFFFELL;
    if ((*(char *)(v9 + 23) & 0x80000000) == 0)
    {
      *(unsigned char *)unint64_t v9 = 0;
      *(unsigned char *)(v9 + 23) = 0;
LABEL_13:
      if ((v8 & 2) == 0) {
        goto LABEL_15;
      }
      goto LABEL_14;
    }
    **(unsigned char **)unint64_t v9 = 0;
    *(void *)(v9 + 8) = 0;
    if ((v8 & 2) != 0) {
LABEL_14:
    }
      uint64_t result = sub_179ACBC(*(void *)(v1 + 96));
  }
LABEL_15:
  if ((v8 & 0xC) != 0) {
    *(void *)(v1 + 104) = 0;
  }
  char v11 = *(unsigned char *)(v1 + 8);
  uint64_t v10 = v1 + 8;
  *(_DWORD *)(v10 + 8) = 0;
  if (v11)
  {
    return sub_188B4AC((uint64_t *)v10);
  }
  return result;
}

uint64_t sub_12BA9A8(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)v52 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v52, a3[11].i32[1])) {
    return *(void *)v52;
  }
  int v6 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v7 = (unsigned __int8 *)(*(void *)v52 + 1);
    unsigned int v8 = **(unsigned char **)v52;
    if ((char)**(unsigned char **)v52 < 0)
    {
      int v9 = (char)*v7;
      unsigned int v10 = v8 + (v9 << 7);
      unsigned int v8 = v10 - 128;
      if (v9 < 0)
      {
        uint64_t v7 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v52, v10 - 128);
        unsigned int v8 = v11;
      }
      else
      {
        uint64_t v7 = (unsigned __int8 *)(*(void *)v52 + 2);
      }
    }
    *(void *)v52 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 10) {
          goto LABEL_79;
        }
        uint64_t v12 = v7 - 1;
        while (1)
        {
          uint64_t v13 = v12 + 1;
          *(void *)v52 = v12 + 1;
          int v14 = *(_DWORD **)(a1 + 40);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 32), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 32) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            uint64_t v17 = sub_12BD040(*(void *)(a1 + 24));
            uint64_t v16 = sub_188CDC8(a1 + 24, (uint64_t)v17);
            uint64_t v13 = *(unsigned __int8 **)v52;
          }
          uint64_t v12 = (unsigned __int8 *)sub_12BAF54(a3, v16, v13);
          *(void *)v52 = v12;
          if (!v12) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_87;
          }
        }
      case 2u:
        if (v8 != 18) {
          goto LABEL_79;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v18 = *(void *)(a1 + 96);
        if (!v18)
        {
          int v19 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            int v19 = (void *)*v19;
          }
          uint64_t v18 = sub_1849FB4((uint64_t)v19);
          *(void *)(a1 + 96) = v18;
          uint64_t v7 = *(unsigned __int8 **)v52;
        }
        int v20 = sub_12BAFE4(a3, v18, v7);
        goto LABEL_86;
      case 3u:
        if (v8 != 26) {
          goto LABEL_79;
        }
        int v21 = (char *)(v7 - 1);
        while (1)
        {
          uint64_t v22 = (unsigned __int8 *)(v21 + 1);
          *(void *)v52 = v21 + 1;
          int v23 = *(_DWORD **)(a1 + 64);
          if (v23 && (uint64_t v24 = *(int *)(a1 + 56), (int)v24 < *v23))
          {
            *(_DWORD *)(a1 + 56) = v24 + 1;
            uint64_t v25 = *(void *)&v23[2 * v24 + 2];
          }
          else
          {
            sub_12BD0EC(*(void *)(a1 + 48));
            uint64_t v25 = sub_188CDC8(a1 + 48, v26);
            uint64_t v22 = *(unsigned __int8 **)v52;
          }
          int v21 = sub_12BB074(a3, v25, v22);
          *(void *)v52 = v21;
          if (!v21) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v21 || *v21 != 26) {
            goto LABEL_87;
          }
        }
      case 0xAu:
        if (v8 != 80) {
          goto LABEL_79;
        }
        unint64_t v27 = (char *)(v7 + 1);
        unint64_t v28 = *v7;
        if (((char)*v7 & 0x80000000) == 0) {
          goto LABEL_39;
        }
        int v29 = *v27;
        int v30 = v28 + (v29 << 7);
        unint64_t v28 = (v30 - 128);
        if (v29 < 0)
        {
          *(void *)v52 = sub_188C138((uint64_t)v7, (v30 - 128));
          if (!*(void *)v52) {
            return 0;
          }
          unint64_t v28 = v46;
        }
        else
        {
          unint64_t v27 = (char *)(v7 + 2);
LABEL_39:
          *(void *)v52 = v27;
        }
        if (v28 <= 4)
        {
          *(_DWORD *)(a1 + 16) |= 4u;
          *(_DWORD *)(a1 + 104) = v28;
          goto LABEL_87;
        }
        if (*v6) {
          v50 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          v50 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v51 = 10;
        goto LABEL_95;
      case 0xBu:
        if (v8 == 88)
        {
          uint64_t v31 = (uint64_t)(v7 - 1);
          while (1)
          {
            *(void *)v52 = v31 + 1;
            unint64_t v32 = *(unsigned __int8 *)(v31 + 1);
            uint64_t v33 = (char *)(v31 + 2);
            if (*(char *)(v31 + 1) < 0)
            {
              int v34 = *v33;
              int v35 = v32 + (v34 << 7);
              unint64_t v32 = (v35 - 128);
              if (v34 < 0)
              {
                *(void *)v52 = sub_188C138(v31 + 1, (v35 - 128));
                if (!*(void *)v52) {
                  return 0;
                }
                unint64_t v32 = v38;
                goto LABEL_48;
              }
              uint64_t v33 = (char *)(v31 + 3);
            }
            *(void *)v52 = v33;
LABEL_48:
            if (v32 > 4)
            {
              if (*v6) {
                uint64_t v39 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
              }
              else {
                uint64_t v39 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              }
              sub_188C020(11, v32, v39);
            }
            else
            {
              uint64_t v36 = *(unsigned int *)(a1 + 72);
              if (v36 == *(_DWORD *)(a1 + 76))
              {
                int v37 = v36 + 1;
                sub_188C80C((unsigned int *)(a1 + 72), v36 + 1);
                *(_DWORD *)(*(void *)(a1 + 80) + 4 * v36) = v32;
              }
              else
              {
                *(_DWORD *)(*(void *)(a1 + 80) + 4 * v36) = v32;
                int v37 = v36 + 1;
              }
              *(_DWORD *)(a1 + 72) = v37;
            }
            uint64_t v31 = *(void *)v52;
            if (*(void *)a3 <= *(void *)v52 || **(unsigned char **)v52 != 88) {
              goto LABEL_87;
            }
          }
        }
        if (v8 == 90)
        {
          *(void *)&long long v53 = a1 + 72;
          *((void *)&v53 + 1) = sub_129EB6C;
          uint64_t v54 = a1 + 8;
          int v55 = 11;
          int v20 = sub_1112E88((uint64_t)a3, (char *)v7, &v53);
LABEL_86:
          *(void *)v52 = v20;
          if (!v20) {
            return 0;
          }
LABEL_87:
          if (sub_11947B8((uint64_t)a3, (char **)v52, a3[11].i32[1])) {
            return *(void *)v52;
          }
          continue;
        }
LABEL_79:
        if (v8) {
          BOOL v48 = (v8 & 7) == 4;
        }
        else {
          BOOL v48 = 1;
        }
        if (!v48)
        {
          if (*v6)
          {
            v49 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            v49 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v7 = *(unsigned __int8 **)v52;
          }
          int v20 = sub_1885AC0(v8, v49, (char *)v7, a3);
          goto LABEL_86;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return *(void *)v52;
      case 0xCu:
        if (v8 != 96) {
          goto LABEL_79;
        }
        v40 = (char *)(v7 + 1);
        unint64_t v28 = *v7;
        if (((char)*v7 & 0x80000000) == 0) {
          goto LABEL_66;
        }
        int v41 = *v40;
        int v42 = v28 + (v41 << 7);
        unint64_t v28 = (v42 - 128);
        if (v41 < 0)
        {
          *(void *)v52 = sub_188C138((uint64_t)v7, (v42 - 128));
          if (!*(void *)v52) {
            return 0;
          }
          unint64_t v28 = v47;
        }
        else
        {
          v40 = (char *)(v7 + 2);
LABEL_66:
          *(void *)v52 = v40;
        }
        if (v28 > 4)
        {
          if (*v6) {
            v50 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            v50 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          int v51 = 12;
LABEL_95:
          sub_188C020(v51, v28, v50);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 8u;
          *(_DWORD *)(a1 + 108) = v28;
        }
        goto LABEL_87;
      case 0xDu:
        if (v8 != 106) {
          goto LABEL_79;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v43 = *(void *)(a1 + 8);
        v44 = (uint64_t *)(v43 & 0xFFFFFFFFFFFFFFFCLL);
        if (v43) {
          v44 = (uint64_t *)*v44;
        }
        v45 = (std::string *)sub_1880F84((void *)(a1 + 88), v44);
        int v20 = (void *)sub_188C244(v45, *(char **)v52, (uint64_t)a3);
        goto LABEL_86;
      default:
        goto LABEL_79;
    }
  }
}

uint64_t sub_12BAF54(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12B9230(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_12BAFE4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_18482C8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_12BB074(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12BA03C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_12BB104(uint64_t a1, char *__dst, unint64_t *a3)
{
  int v6 = *(_DWORD *)(a1 + 32);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unsigned int v10 = __dst + 2;
      }
      __dst = sub_12B97A0(v8, (unint64_t)v10, a3);
    }
  }
  int v11 = *(_DWORD *)(a1 + 16);
  if ((v11 & 2) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    uint64_t v12 = *(void *)(a1 + 96);
    *__dst = 18;
    unsigned int v13 = *(_DWORD *)(v12 + 20);
    __dst[1] = v13;
    if (v13 > 0x7F) {
      int v14 = sub_188A9CC(v13, __dst + 1);
    }
    else {
      int v14 = __dst + 2;
    }
    __dst = sub_18486D8(v12, (unint64_t)v14, a3);
  }
  int v15 = *(_DWORD *)(a1 + 56);
  if (v15)
  {
    for (int j = 0; j != v15; ++j)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v17 = *(void *)(*(void *)(a1 + 64) + 8 * j + 8);
      *__dst = 26;
      unsigned int v18 = *(_DWORD *)(v17 + 20);
      __dst[1] = v18;
      if (v18 > 0x7F) {
        int v19 = sub_188A9CC(v18, __dst + 1);
      }
      else {
        int v19 = __dst + 2;
      }
      __dst = sub_12BA27C(v17, (unint64_t)v19, a3);
    }
  }
  if ((v11 & 4) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unint64_t v20 = *(int *)(a1 + 104);
    *__dst = 80;
    __dst[1] = v20;
    if (v20 > 0x7F)
    {
      __dst[1] = v20 | 0x80;
      unint64_t v21 = v20 >> 7;
      __dst[2] = v20 >> 7;
      __dst += 3;
      if (v20 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unint64_t v22 = v21 >> 14;
          v21 >>= 7;
          *__dst++ = v21;
        }
        while (v22);
      }
    }
    else
    {
      __dst += 2;
    }
  }
  uint64_t v23 = *(unsigned int *)(a1 + 72);
  if ((int)v23 >= 1)
  {
    for (uint64_t k = 0; k != v23; ++k)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      unint64_t v25 = *(int *)(*(void *)(a1 + 80) + 4 * k);
      *__dst = 88;
      __dst[1] = v25;
      if (v25 > 0x7F)
      {
        __dst[1] = v25 | 0x80;
        unint64_t v26 = v25 >> 7;
        __dst[2] = v25 >> 7;
        __dst += 3;
        if (v25 >= 0x4000)
        {
          do
          {
            *(__dst - 1) |= 0x80u;
            unint64_t v27 = v26 >> 14;
            v26 >>= 7;
            *__dst++ = v26;
          }
          while (v27);
        }
      }
      else
      {
        __dst += 2;
      }
    }
  }
  if ((v11 & 8) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unint64_t v28 = *(int *)(a1 + 108);
    *__dst = 96;
    __dst[1] = v28;
    if (v28 > 0x7F)
    {
      __dst[1] = v28 | 0x80;
      unint64_t v29 = v28 >> 7;
      __dst[2] = v28 >> 7;
      __dst += 3;
      if (v28 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unint64_t v30 = v29 >> 14;
          v29 >>= 7;
          *__dst++ = v29;
        }
        while (v30);
      }
    }
    else
    {
      __dst += 2;
    }
  }
  if (v11) {
    __dst = sub_117A0AC(a3, 13, (const void **)(*(void *)(a1 + 88) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  uint64_t v31 = *(void *)(a1 + 8);
  if ((v31 & 1) == 0) {
    return __dst;
  }
  unint64_t v33 = v31 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v33 + 31) < 0)
  {
    int v34 = *(void **)(v33 + 8);
    uint64_t v35 = *(void *)(v33 + 16);
  }
  else
  {
    int v34 = (void *)(v33 + 8);
    LODWORD(v35) = *(unsigned __int8 *)(v33 + 31);
  }
  if ((uint64_t)(*a3 - (void)__dst) >= (int)v35)
  {
    uint64_t v36 = (int)v35;
    memcpy(__dst, v34, (int)v35);
    __dst += v36;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v34, v35, __dst);
}

uint64_t sub_12BB4E8(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_12B9AF4(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(int *)(a1 + 56);
  uint64_t v9 = v2 + v8;
  uint64_t v10 = *(void *)(a1 + 64);
  if (v10) {
    int v11 = (uint64_t *)(v10 + 8);
  }
  else {
    int v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_12BA420(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  uint64_t v15 = *(unsigned int *)(a1 + 72);
  if (v15)
  {
    int v16 = 0;
    uint64_t v17 = 0;
    do
    {
      int v18 = *(_DWORD *)(*(void *)(a1 + 80) + 4 * v16);
      if (v18 < 0) {
        uint64_t v19 = 10;
      }
      else {
        uint64_t v19 = (9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6;
      }
      v17 += v19;
      ++v16;
    }
    while (v15 != v16);
  }
  else
  {
    uint64_t v17 = 0;
  }
  uint64_t v20 = v9 + v15 + v17;
  int v21 = *(_DWORD *)(a1 + 16);
  if ((v21 & 0xF) == 0) {
    goto LABEL_41;
  }
  if ((v21 & 1) == 0)
  {
    if ((v21 & 2) == 0) {
      goto LABEL_26;
    }
LABEL_32:
    uint64_t v25 = sub_1848920(*(void *)(a1 + 96));
    v20 += v25 + ((9 * (__clz(v25 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v21 & 4) == 0)
    {
LABEL_27:
      if ((v21 & 8) == 0) {
        goto LABEL_41;
      }
      goto LABEL_37;
    }
    goto LABEL_33;
  }
  unint64_t v22 = *(void *)(a1 + 88) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v23 = *(unsigned __int8 *)(v22 + 23);
  uint64_t v24 = *(void *)(v22 + 8);
  if ((v23 & 0x80u) == 0) {
    uint64_t v24 = v23;
  }
  v20 += v24 + ((9 * (__clz(v24 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v21 & 2) != 0) {
    goto LABEL_32;
  }
LABEL_26:
  if ((v21 & 4) == 0) {
    goto LABEL_27;
  }
LABEL_33:
  int v26 = *(_DWORD *)(a1 + 104);
  if (v26 < 0) {
    uint64_t v27 = 11;
  }
  else {
    uint64_t v27 = ((9 * (__clz(v26 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v20 += v27;
  if ((v21 & 8) != 0)
  {
LABEL_37:
    int v28 = *(_DWORD *)(a1 + 108);
    if (v28 < 0) {
      uint64_t v29 = 11;
    }
    else {
      uint64_t v29 = ((9 * (__clz(v28 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v20 += v29;
  }
LABEL_41:
  uint64_t v30 = *(void *)(a1 + 8);
  if (v30)
  {
    unint64_t v32 = v30 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v32 + 31) < 0) {
      uint64_t v33 = *(void *)(v32 + 16);
    }
    else {
      uint64_t v33 = *(unsigned __int8 *)(v32 + 31);
    }
    v20 += v33;
  }
  *(_DWORD *)(a1 + 20) = v20;
  return v20;
}

void sub_12BB73C(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_12C4FD4((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    uint64_t v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    int v11 = (std::string **)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_12C5060((uint64_t *)(a1 + 48), v11, v10, v9, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v12 = *(_DWORD *)(a1 + 56) + v9;
    *(_DWORD *)(a1 + 56) = v12;
    uint64_t v13 = *(int **)(a1 + 64);
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 72);
  if (v14)
  {
    uint64_t v15 = *(int *)(a1 + 72);
    sub_188C80C((unsigned int *)(a1 + 72), v15 + v14);
    uint64_t v16 = *(void *)(a1 + 80);
    *(_DWORD *)(a1 + 72) += *(_DWORD *)(a2 + 72);
    memcpy((void *)(v16 + 4 * v15), *(const void **)(a2 + 80), 4 * *(int *)(a2 + 72));
  }
  int v17 = *(_DWORD *)(a2 + 16);
  if ((v17 & 0xF) != 0)
  {
    if (v17)
    {
      uint64_t v19 = (long long *)(*(void *)(a2 + 88) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v20 = *(void *)(a1 + 8);
      int v21 = (uint64_t *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
      if (v20) {
        int v21 = (uint64_t *)*v21;
      }
      sub_1881DF4((std::string **)(a1 + 88), v19, v21);
      if ((v17 & 2) == 0)
      {
LABEL_12:
        if ((v17 & 4) == 0) {
          goto LABEL_13;
        }
        goto LABEL_31;
      }
    }
    else if ((v17 & 2) == 0)
    {
      goto LABEL_12;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v22 = *(void *)(a1 + 96);
    if (!v22)
    {
      uint64_t v23 = *(void *)(a1 + 8);
      uint64_t v24 = (void *)(v23 & 0xFFFFFFFFFFFFFFFCLL);
      if (v23) {
        uint64_t v24 = (void *)*v24;
      }
      uint64_t v22 = sub_1849FB4((uint64_t)v24);
      *(void *)(a1 + 96) = v22;
    }
    if (*(void *)(a2 + 96)) {
      uint64_t v25 = *(uint64_t (****)())(a2 + 96);
    }
    else {
      uint64_t v25 = &off_254D220;
    }
    sub_179F4B0(v22, (uint64_t)v25);
    if ((v17 & 4) == 0)
    {
LABEL_13:
      if ((v17 & 8) == 0)
      {
LABEL_15:
        *(_DWORD *)(a1 + 16) |= v17;
        goto LABEL_16;
      }
LABEL_14:
      *(_DWORD *)(a1 + 108) = *(_DWORD *)(a2 + 108);
      goto LABEL_15;
    }
LABEL_31:
    *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
    if ((v17 & 8) == 0) {
      goto LABEL_15;
    }
    goto LABEL_14;
  }
LABEL_16:
  uint64_t v18 = *(void *)(a2 + 8);
  if (v18)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v18 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

BOOL sub_12BB974(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  while ((int)v2 >= 1)
  {
    uint64_t v3 = v2 - 1;
    char v4 = sub_12B9F08(*(void *)(*(void *)(a1 + 40) + 8 * v2));
    uint64_t v2 = v3;
    if ((v4 & 1) == 0) {
      return 0;
    }
  }
  if ((*(unsigned char *)(a1 + 16) & 2) == 0) {
    return 1;
  }
  BOOL result = sub_179F73C(*(void *)(a1 + 96));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_12BB9D8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.SearchEnrichmentMetadata");
}

uint64_t sub_12BB9E8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24A31A8;
  *(void *)(result + 8) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

uint64_t sub_12BBA88(uint64_t a1)
{
  if (!a1)
  {
    sub_12C50DC();
  }

  return sub_129F3DC(v3, a1, 0);
}

void *sub_12BBAE4(uint64_t a1)
{
  if (!a1)
  {
    sub_12C5148();
  }

  return sub_129F958(v3, a1, 0);
}

uint64_t sub_12BBB40(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24A3328;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = &qword_2550250;
  *(void *)(result + 32) = &qword_2550250;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

void *sub_12BBBC8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24A33A8;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = &qword_2550250;
  result[5] = &qword_2550250;
  return result;
}

uint64_t sub_12BBC50(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24A3428;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = a1;
  *(_DWORD *)(result + 48) = 0;
  return result;
}

uint64_t sub_12BBCF8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24A34A8;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = a1;
  *(_DWORD *)(result + 48) = 0;
  return result;
}

void *sub_12BBDA0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24A3528;
  result[2] = 0;
  result[4] = 0;
  result[5] = 0;
  result[3] = &qword_2550250;
  return result;
}

uint64_t sub_12BBE28(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24A35A8;
  *(void *)(result + 8) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

uint64_t sub_12BBEC8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24A3628;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(unsigned char *)(result + 32) = 0;
  return result;
}

void *sub_12BBF44(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = off_24A36A8;
  result[1] = a1;
  result[2] = 0;
  result[3] = 0;
  result[5] = 0;
  result[6] = 0;
  result[4] = a1;
  return result;
}

uint64_t sub_12BBFE4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24A3728;
  *(void *)(result + 8) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

uint64_t sub_12BC084(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24A37A8;
  *(void *)(result + 8) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

double sub_12BC124(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = off_24A3828;
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = &qword_2550250;
  double result = 0.0;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  return result;
}

uint64_t sub_12BC1AC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24A38A8;
  *(void *)(result + 8) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

uint64_t sub_12BC24C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24A3928;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = &qword_2550250;
  *(void *)(result + 32) = &qword_2550250;
  *(void *)(result + 40) = &qword_2550250;
  *(void *)(result + 48) = 0;
  *(unsigned char *)(result + 56) = 0;
  return result;
}

void *sub_12BC2D8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24A39A8;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = 0;
  *(void *)((char *)result + 38) = 0;
  return result;
}

uint64_t sub_12BC360(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24A3A28;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

void *sub_12BC3E0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24A3AA8;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = 0;
  result[5] = 0;
  result[6] = 0;
  return result;
}

void *sub_12BC468(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24A3B28;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = &qword_2550250;
  result[6] = 0;
  result[7] = 0;
  result[5] = &qword_2550250;
  return result;
}

double sub_12BC4F4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = off_24A3BA8;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  return result;
}

void *sub_12BC574(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *double result = off_24A3C28;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = 0;
  return result;
}

uint64_t sub_12BC610(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24A3CA8;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = &qword_2550250;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(_DWORD *)(result + 48) = 0;
  return result;
}

double sub_12BC698(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = off_24A3D28;
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = &qword_2550250;
  double result = 0.0;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  return result;
}

uint64_t sub_12BC720(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24A3DA8;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = &qword_2550250;
  *(void *)(result + 56) = &qword_2550250;
  *(void *)(result + 64) = &qword_2550250;
  *(void *)(result + 72) = 0;
  *(unsigned char *)(result + 80) = 0;
  return result;
}

void *sub_12BC7CC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24A3E28;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = &qword_2550250;
  result[5] = 0;
  result[6] = 0;
  return result;
}

void *sub_12BC854(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = off_24A3EA8;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = &qword_2550250;
  result[7] = 0;
  return result;
}

double sub_12BC8F8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = off_24A3F28;
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = &qword_2550250;
  double result = 0.0;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 60) = 0u;
  return result;
}

uint64_t sub_12BC988(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24A3FA8;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = &qword_2550250;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(_WORD *)(result + 48) = 0;
  return result;
}

void *sub_12BCA10(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24A4028;
  result[2] = 0;
  result[4] = 0;
  result[5] = 0;
  result[3] = &qword_2550250;
  return result;
}

double sub_12BCA98(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = off_24A40A8;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 60) = 0u;
  return result;
}

void *sub_12BCB1C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *double result = off_24A4128;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = &qword_2550250;
  result[7] = &qword_2550250;
  return result;
}

uint64_t sub_12BCBC0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24A41A8;
  *(void *)(result + 8) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

uint64_t sub_12BCC60(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24A4228;
  *(void *)(result + 8) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

double sub_12BCD00(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = off_24A42A8;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  return result;
}

void *sub_12BCD7C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *double result = off_24A4328;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = 0;
  return result;
}

uint64_t sub_12BCE18(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24A43A8;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = a1;
  *(void *)(result + 56) = 0;
  *(void *)(result + 64) = 0;
  *(void *)(result + 72) = 0;
  *(_DWORD *)(result + 80) = 0;
  return result;
}

void *sub_12BCEC0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24A4428;
  result[2] = 0;
  result[3] = &qword_2550250;
  return result;
}

uint64_t sub_12BCF44(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24A44A8;
  *(void *)(result + 16) = 0;
  *(_DWORD *)(result + 24) = 0;
  return result;
}

void *sub_12BCFC0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24A4528;
  result[2] = 0;
  result[3] = 0;
  result[4] = 0x3BC400000000;
  return result;
}

void *sub_12BD040(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = off_24A45A8;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = &qword_2550250;
  result[7] = 0;
  result[8] = 0;
  result[9] = 0;
  *(void *)((char *)result + 77) = 0;
  return result;
}

double sub_12BD0EC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = off_24A4628;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = xmmword_213B3F0;
  return result;
}

void *sub_12BD16C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *double result = off_24A46A8;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = a1;
  result[7] = 0;
  result[8] = 0;
  result[9] = 0;
  result[10] = a1;
  result[12] = 0;
  result[13] = 0;
  result[11] = &qword_2550250;
  return result;
}

BOOL sub_12BD228(unsigned int a1)
{
  return a1 < 0xF;
}

void *sub_12BD234(void *a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  a1[1] = v5;
  *a1 = &off_24A4728;
  sub_1882BC4((uint64_t)(a1 + 2), a2);
  a1[5] = 0;
  a1[6] = a2;
  a1[7] = 0;
  a1[8] = 0;
  a1[9] = a2;
  a1[10] = 0;
  a1[11] = 0;
  a1[12] = 0;
  return a1;
}

void sub_12BD2A8(_Unwind_Exception *a1)
{
  *uint64_t v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_12BD2D8(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_12C5234(a1 + 9);
  sub_12C51B4(a1 + 6);
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12BD36C(void *a1)
{
  sub_12BD2D8(a1);

  operator delete();
}

uint64_t sub_12BD3A4(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  uint64_t v3 = *(unsigned int *)(a1 + 56);
  if ((int)v3 >= 1)
  {
    char v4 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = sub_13E8D98(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 56) = 0;
  }
  uint64_t v6 = *(unsigned int *)(a1 + 80);
  if ((int)v6 >= 1)
  {
    int v7 = (uint64_t *)(*(void *)(a1 + 88) + 8);
    do
    {
      uint64_t v8 = *v7++;
      uint64_t result = sub_15B043C(v8);
      --v6;
    }
    while (v6);
    *(_DWORD *)(a1 + 80) = 0;
  }
  char v10 = *(unsigned char *)(a1 + 8);
  uint64_t v9 = a1 + 8;
  *(void *)(v9 + 88) = 0;
  *(_DWORD *)(v9 + 32) = 0;
  if (v10)
  {
    return sub_188B4AC((uint64_t *)v9);
  }
  return result;
}

char *sub_12BD458(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v29 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v29, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v29 + 1;
    unsigned int v9 = *v29;
    if (*v29 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v29, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v29 + 2;
      }
    }
    uint64_t v29 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 == 3)
    {
      if (v9 == 25)
      {
        *(void *)(a1 + 96) = *(void *)v8;
        uint64_t v29 = v8 + 8;
        int v5 = 1;
        goto LABEL_45;
      }
    }
    else if (v12 == 2)
    {
      if (v9 == 18)
      {
        uint64_t v16 = v8 - 1;
        while (1)
        {
          int v17 = (unsigned __int8 *)(v16 + 1);
          uint64_t v29 = v16 + 1;
          uint64_t v18 = *(_DWORD **)(a1 + 88);
          if (v18 && (uint64_t v19 = *(int *)(a1 + 80), (int)v19 < *v18))
          {
            *(_DWORD *)(a1 + 80) = v19 + 1;
            uint64_t v20 = *(void *)&v18[2 * v19 + 2];
          }
          else
          {
            uint64_t v21 = sub_15C1CB4(*(void *)(a1 + 72));
            uint64_t v20 = sub_188CDC8(a1 + 72, v21);
            int v17 = (unsigned __int8 *)v29;
          }
          uint64_t v16 = sub_11B3E48(a3, v20, v17);
          uint64_t v29 = v16;
          if (!v16) {
            goto LABEL_50;
          }
          if (*(void *)a3 <= (unint64_t)v16 || *v16 != 18) {
            goto LABEL_45;
          }
        }
      }
    }
    else if (v12 == 1 && v9 == 10)
    {
      uint64_t v22 = v8 - 1;
      while (1)
      {
        uint64_t v23 = (unsigned __int8 *)(v22 + 1);
        uint64_t v29 = v22 + 1;
        uint64_t v24 = *(_DWORD **)(a1 + 64);
        if (v24 && (uint64_t v25 = *(int *)(a1 + 56), (int)v25 < *v24))
        {
          *(_DWORD *)(a1 + 56) = v25 + 1;
          uint64_t v26 = *(void *)&v24[2 * v25 + 2];
        }
        else
        {
          uint64_t v27 = sub_1479450(*(void *)(a1 + 48));
          uint64_t v26 = sub_188CDC8(a1 + 48, v27);
          uint64_t v23 = (unsigned __int8 *)v29;
        }
        uint64_t v22 = sub_12BD720(a3, v26, v23);
        uint64_t v29 = v22;
        if (!v22) {
          goto LABEL_50;
        }
        if (*(void *)a3 <= (unint64_t)v22 || *v22 != 10) {
          goto LABEL_45;
        }
      }
    }
    if (!v9 || (v9 & 7) == 4) {
      break;
    }
    if (v9 - 8000 > 0x31F)
    {
      if (*v7)
      {
        int v28 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        int v28 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        uint64_t v8 = v29;
      }
      uint64_t v15 = sub_1885AC0(v9, v28, v8, a3);
    }
    else
    {
      uint64_t v15 = sub_18859DC((uint64_t **)(a1 + 16), v9, v8, (uint64_t)&off_25310F8, (uint64_t *)(a1 + 8), a3);
    }
    uint64_t v29 = (char *)v15;
    if (!v15) {
      goto LABEL_50;
    }
LABEL_45:
    if (sub_11947B8((uint64_t)a3, &v29, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_50:
  uint64_t v29 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 40) |= v5;
  return v29;
}

char *sub_12BD720(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_146FB00(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_12BD7B0(uint64_t a1, char *a2, unint64_t *a3)
{
  int v6 = *(_DWORD *)(a1 + 56);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 64) + 8 * i + 8);
      *a2 = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 44);
      a2[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, a2 + 1);
      }
      else {
        unsigned int v10 = a2 + 2;
      }
      a2 = sub_146FD9C(v8, v10, a3);
    }
  }
  int v11 = *(_DWORD *)(a1 + 80);
  if (v11)
  {
    for (int j = 0; j != v11; ++j)
    {
      if (*a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v13 = *(void *)(*(void *)(a1 + 88) + 8 * j + 8);
      *a2 = 18;
      unsigned int v14 = *(_DWORD *)(v13 + 44);
      a2[1] = v14;
      if (v14 > 0x7F) {
        uint64_t v15 = sub_188A9CC(v14, a2 + 1);
      }
      else {
        uint64_t v15 = a2 + 2;
      }
      a2 = sub_15B43E4(v13, v15, a3);
    }
  }
  if (*(unsigned char *)(a1 + 40))
  {
    if (*a3 <= (unint64_t)a2) {
      a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    uint64_t v16 = *(void *)(a1 + 96);
    *a2 = 25;
    *(void *)(a2 + 1) = v16;
    a2 += 9;
  }
  if (*(_WORD *)(a1 + 26)) {
    a2 = sub_1886844(a1 + 16, 1000, 1100, a2, a3);
  }
  uint64_t v17 = *(void *)(a1 + 8);
  if ((v17 & 1) == 0) {
    return a2;
  }
  unint64_t v19 = v17 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v19 + 31) < 0)
  {
    uint64_t v20 = *(void **)(v19 + 8);
    uint64_t v21 = *(void *)(v19 + 16);
  }
  else
  {
    uint64_t v20 = (void *)(v19 + 8);
    LODWORD(v21) = *(unsigned __int8 *)(v19 + 31);
  }
  if ((uint64_t)(*a3 - (void)a2) >= (int)v21)
  {
    uint64_t v22 = (int)v21;
    memcpy(a2, v20, (int)v21);
    a2 += v22;
    return a2;
  }

  return (char *)sub_188A528(a3, (char *)v20, v21, a2);
}

uint64_t sub_12BD9D8(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(int *)(a1 + 56);
  uint64_t v4 = v2 + v3;
  uint64_t v5 = *(void *)(a1 + 64);
  if (v5) {
    int v6 = (uint64_t *)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = sub_146FFD0(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  uint64_t v10 = *(int *)(a1 + 80);
  uint64_t v11 = v4 + v10;
  uint64_t v12 = *(void *)(a1 + 88);
  if (v12) {
    uint64_t v13 = (uint64_t *)(v12 + 8);
  }
  else {
    uint64_t v13 = 0;
  }
  if (v10)
  {
    uint64_t v14 = 8 * v10;
    do
    {
      uint64_t v15 = *v13++;
      uint64_t v16 = sub_15B4924(v15);
      v11 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6);
      v14 -= 8;
    }
    while (v14);
  }
  if (*(unsigned char *)(a1 + 40)) {
    uint64_t result = v11 + 9;
  }
  else {
    uint64_t result = v11;
  }
  uint64_t v18 = *(void *)(a1 + 8);
  if (v18)
  {
    unint64_t v19 = v18 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v19 + 31) < 0) {
      uint64_t v20 = *(void *)(v19 + 16);
    }
    else {
      uint64_t v20 = *(unsigned __int8 *)(v19 + 31);
    }
    result += v20;
  }
  *(_DWORD *)(a1 + 44) = result;
  return result;
}

void sub_12BDAE8(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 56);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    int v6 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_12C52B4((uint64_t *)(a1 + 48), v6, v5, v4, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v7 = *(_DWORD *)(a1 + 56) + v4;
    *(_DWORD *)(a1 + 56) = v7;
    uint64_t v8 = *(int **)(a1 + 64);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 80);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 88) + 8);
    uint64_t v11 = (uint64_t *)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_12C5340((uint64_t *)(a1 + 72), v11, v10, v9, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v12 = *(_DWORD *)(a1 + 80) + v9;
    *(_DWORD *)(a1 + 80) = v12;
    uint64_t v13 = *(int **)(a1 + 88);
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  if (*(unsigned char *)(a2 + 40))
  {
    uint64_t v14 = *(void *)(a2 + 96);
    *(_DWORD *)(a1 + 40) |= 1u;
    *(void *)(a1 + 96) = v14;
  }
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v15 = *(void *)(a2 + 8);
  if (v15)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v15 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

BOOL sub_12BDC44(uint64_t a1)
{
  if (!sub_18856CC(a1 + 16)) {
    return 0;
  }
  uint64_t v2 = *(unsigned int *)(a1 + 56);
  while ((int)v2 >= 1)
  {
    uint64_t v3 = v2 - 1;
    char v4 = sub_13EDF40(*(void *)(*(void *)(a1 + 64) + 8 * v2));
    uint64_t v2 = v3;
    if ((v4 & 1) == 0) {
      return 0;
    }
  }
  uint64_t v7 = *(unsigned int *)(a1 + 80);
  do
  {
    BOOL v5 = (int)v7 < 1;
    if ((int)v7 < 1) {
      break;
    }
    uint64_t v8 = v7 - 1;
    char v9 = sub_15B06D8(*(void *)(*(void *)(a1 + 88) + 8 * v7));
    uint64_t v7 = v8;
  }
  while ((v9 & 1) != 0);
  return v5;
}

void *sub_12BDCD0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "traffic.MapMatchRequest");
}

void *sub_12BDCE0(void *a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  a1[1] = v4;
  *a1 = &off_24A47A8;
  sub_1882BC4((uint64_t)(a1 + 2), a2);
  a1[5] = 0;
  a1[6] = &qword_2550250;
  a1[7] = 0;
  return a1;
}

void sub_12BDD50(_Unwind_Exception *a1)
{
  *uint64_t v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_12BDD80(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  BOOL v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12BDE28(uint64_t a1)
{
  sub_12BDD80(a1);

  operator delete();
}

unsigned char *sub_12BDE60(uint64_t a1)
{
  uint64_t result = sub_18843A4((unsigned char *)(a1 + 16));
  int v3 = *(_DWORD *)(a1 + 40);
  if (v3)
  {
    unint64_t v4 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v4 + 23) < 0)
    {
      **(unsigned char **)unint64_t v4 = 0;
      *(void *)(v4 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v4 = 0;
      *(unsigned char *)(v4 + 23) = 0;
    }
  }
  if ((v3 & 6) != 0) {
    *(void *)(a1 + 56) = 0;
  }
  char v6 = *(unsigned char *)(a1 + 8);
  uint64_t v5 = a1 + 8;
  *(_DWORD *)(v5 + 32) = 0;
  if (v6)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

uint64_t sub_12BDEF0(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v30 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v30, a3[11].i32[1])) {
    return *(void *)v30;
  }
  char v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = (char *)(*(void *)v30 + 1);
    unsigned int v8 = **(unsigned char **)v30;
    if ((char)**(unsigned char **)v30 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180(*(uint64_t *)v30, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (char *)(*(void *)v30 + 2);
      }
    }
    *(void *)uint64_t v30 = v7;
    unsigned int v11 = v8 >> 3;
    if (v8 >> 3 == 3)
    {
      if (v8 != 26) {
        goto LABEL_14;
      }
      *(_DWORD *)(a1 + 40) |= 1u;
      uint64_t v15 = *(void *)(a1 + 8);
      uint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
      if (v15) {
        uint64_t v16 = (uint64_t *)*v16;
      }
      uint64_t v17 = (std::string *)sub_1880F84((void *)(a1 + 48), v16);
      uint64_t v14 = (void *)sub_188C244(v17, *(char **)v30, (uint64_t)a3);
LABEL_40:
      *(void *)uint64_t v30 = v14;
      if (!v14) {
        goto LABEL_59;
      }
      goto LABEL_41;
    }
    if (v11 != 2) {
      break;
    }
    if (v8 != 16) {
      goto LABEL_14;
    }
    uint64_t v18 = v7 + 1;
    unint64_t v19 = *v7;
    if (*v7 < 0)
    {
      int v20 = *v18;
      int v21 = v19 + (v20 << 7);
      unint64_t v19 = (v21 - 128);
      if (v20 < 0)
      {
        *(void *)uint64_t v30 = sub_188C138((uint64_t)v7, (v21 - 128));
        if (!*(void *)v30) {
          goto LABEL_59;
        }
        unint64_t v19 = v26;
        goto LABEL_29;
      }
      uint64_t v18 = v7 + 2;
    }
    *(void *)uint64_t v30 = v18;
LABEL_29:
    if (v19 > 1)
    {
      if (*v6) {
        int v28 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        int v28 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      int v29 = 2;
      goto LABEL_53;
    }
    *(_DWORD *)(a1 + 40) |= 4u;
    *(_DWORD *)(a1 + 60) = v19;
LABEL_41:
    if (sub_11947B8((uint64_t)a3, (char **)v30, a3[11].i32[1])) {
      return *(void *)v30;
    }
  }
  if (v11 == 1 && v8 == 8)
  {
    uint64_t v22 = v7 + 1;
    unint64_t v19 = *v7;
    if ((*v7 & 0x80000000) == 0) {
      goto LABEL_34;
    }
    int v23 = *v22;
    int v24 = v19 + (v23 << 7);
    unint64_t v19 = (v24 - 128);
    if (v23 < 0)
    {
      *(void *)uint64_t v30 = sub_188C138((uint64_t)v7, (v24 - 128));
      if (!*(void *)v30) {
        goto LABEL_59;
      }
      unint64_t v19 = v27;
    }
    else
    {
      uint64_t v22 = v7 + 2;
LABEL_34:
      *(void *)uint64_t v30 = v22;
    }
    if (sub_13E78E4(v19))
    {
      *(_DWORD *)(a1 + 40) |= 2u;
      *(_DWORD *)(a1 + 56) = v19;
      goto LABEL_41;
    }
    if (*v6) {
      int v28 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else {
      int v28 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
    }
    int v29 = 1;
LABEL_53:
    sub_188C020(v29, v19, v28);
    goto LABEL_41;
  }
LABEL_14:
  if (v8) {
    BOOL v13 = (v8 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if ((v8 - 8000) >> 6 > 0x7C)
    {
      if (*v6)
      {
        uint64_t v25 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        uint64_t v25 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        uint64_t v7 = *(char **)v30;
      }
      uint64_t v14 = sub_1885AC0(v8, v25, v7, a3);
    }
    else
    {
      uint64_t v14 = sub_18859DC((uint64_t **)(a1 + 16), v8, v7, (uint64_t)&off_2531160, (uint64_t *)(a1 + 8), a3);
    }
    goto LABEL_40;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v30;
  }
LABEL_59:
  *(void *)uint64_t v30 = 0;
  return *(void *)v30;
}

char *sub_12BE1E8(uint64_t a1, char *a2, void *a3)
{
  unint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unint64_t v7 = *(int *)(a1 + 56);
    char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 60);
    char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6) {
    unint64_t v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  if (*(_WORD *)(a1 + 26)) {
    unint64_t v4 = sub_1886844(a1 + 16, 1000, 2000, v4, a3);
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    uint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    uint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_12BE3D0(uint64_t a1)
{
  uint64_t result = sub_1889280(a1 + 16);
  int v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 7) == 0) {
    goto LABEL_17;
  }
  if (v3)
  {
    unint64_t v4 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
    uint64_t v6 = *(void *)(v4 + 8);
    if ((v5 & 0x80u) == 0) {
      uint64_t v6 = v5;
    }
    result += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v3 & 2) == 0)
    {
LABEL_4:
      if ((v3 & 4) == 0) {
        goto LABEL_17;
      }
      goto LABEL_13;
    }
  }
  else if ((v3 & 2) == 0)
  {
    goto LABEL_4;
  }
  int v7 = *(_DWORD *)(a1 + 56);
  if (v7 < 0) {
    uint64_t v8 = 11;
  }
  else {
    uint64_t v8 = ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  result += v8;
  if ((v3 & 4) != 0)
  {
LABEL_13:
    int v9 = *(_DWORD *)(a1 + 60);
    if (v9 < 0) {
      uint64_t v10 = 11;
    }
    else {
      uint64_t v10 = ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    result += v10;
  }
LABEL_17:
  uint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    unint64_t v12 = v11 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v12 + 31) < 0) {
      uint64_t v13 = *(void *)(v12 + 16);
    }
    else {
      uint64_t v13 = *(unsigned __int8 *)(v12 + 31);
    }
    result += v13;
  }
  *(_DWORD *)(a1 + 44) = result;
  return result;
}

void sub_12BE4EC(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 40);
  if ((v4 & 7) != 0)
  {
    if (v4)
    {
      uint64_t v6 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 40) |= 1u;
      int v7 = (std::string **)(a1 + 48);
      uint64_t v8 = *(void *)(a1 + 8);
      int v9 = (uint64_t *)(v8 & 0xFFFFFFFFFFFFFFFCLL);
      if (v8) {
        int v9 = (uint64_t *)*v9;
      }
      sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0)
        {
LABEL_6:
          *(_DWORD *)(a1 + 40) |= v4;
          goto LABEL_7;
        }
LABEL_5:
        *(_DWORD *)(a1 + 60) = *(_DWORD *)(a2 + 60);
        goto LABEL_6;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
    if ((v4 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_7:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_12BE5C8(uint64_t a1)
{
  return sub_18856CC(a1 + 16);
}

void *sub_12BE5D0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "traffic.MapMatchResponse");
}

void *sub_12BE5E0(uint64_t a1)
{
  if (!a1)
  {
    sub_12C53CC();
  }

  return sub_12BD234(v3, a1, 0);
}

void *sub_12BE63C(uint64_t a1)
{
  if (!a1)
  {
    sub_12C5438();
  }

  return sub_12BDCE0(v3, a1, 0);
}

void sub_12BE698()
{
}

uint64_t sub_12BE6EC(uint64_t a1, uint64_t a2)
{
  return sub_12BB9E8(a2);
}

uint64_t sub_12BE6F4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_12BE6FC()
{
}

void sub_12BE744()
{
}

uint64_t sub_12BE768(uint64_t a1, uint64_t a2)
{
  return sub_12BBA88(a2);
}

uint64_t sub_12BE770(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_12BE778()
{
}

void sub_12BE7C0()
{
}

void *sub_12BE7E4(uint64_t a1, uint64_t a2)
{
  return sub_12BBAE4(a2);
}

uint64_t sub_12BE7EC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_12BE7F4()
{
}

uint64_t sub_12BE850(uint64_t a1, uint64_t a2)
{
  return sub_12BBB40(a2);
}

uint64_t sub_12BE858(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12BE860()
{
}

void *sub_12BE8BC(uint64_t a1, uint64_t a2)
{
  return sub_12BBBC8(a2);
}

uint64_t sub_12BE8C4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12BE8CC()
{
}

uint64_t sub_12BE920(uint64_t a1, uint64_t a2)
{
  return sub_12BBC50(a2);
}

uint64_t sub_12BE928(uint64_t a1)
{
  return *(unsigned int *)(a1 + 48);
}

void sub_12BE930()
{
}

uint64_t sub_12BE984(uint64_t a1, uint64_t a2)
{
  return sub_12BBCF8(a2);
}

uint64_t sub_12BE98C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 48);
}

void sub_12BE994()
{
}

void *sub_12BE9F0(uint64_t a1, uint64_t a2)
{
  return sub_12BBDA0(a2);
}

uint64_t sub_12BE9F8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12BEA00()
{
}

uint64_t sub_12BEA54(uint64_t a1, uint64_t a2)
{
  return sub_12BBE28(a2);
}

uint64_t sub_12BEA5C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_12BEA64()
{
}

uint64_t sub_12BEAB4(uint64_t a1, uint64_t a2)
{
  return sub_12BBEC8(a2);
}

uint64_t sub_12BEABC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12BEAC4()
{
}

void *sub_12BEB18(uint64_t a1, uint64_t a2)
{
  return sub_12BBF44(a2);
}

uint64_t sub_12BEB20(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12BEB28()
{
}

uint64_t sub_12BEB7C(uint64_t a1, uint64_t a2)
{
  return sub_12BBFE4(a2);
}

uint64_t sub_12BEB84(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_12BEB8C()
{
}

uint64_t sub_12BEBE0(uint64_t a1, uint64_t a2)
{
  return sub_12BC084(a2);
}

uint64_t sub_12BEBE8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_12BEBF0()
{
}

double sub_12BEC4C(uint64_t a1, uint64_t a2)
{
  return sub_12BC124(a2);
}

uint64_t sub_12BEC54(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12BEC5C()
{
}

uint64_t sub_12BECB0(uint64_t a1, uint64_t a2)
{
  return sub_12BC1AC(a2);
}

uint64_t sub_12BECB8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_12BECC0()
{
}

uint64_t sub_12BED20(uint64_t a1, uint64_t a2)
{
  return sub_12BC24C(a2);
}

uint64_t sub_12BED28(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12BED30()
{
}

void *sub_12BED8C(uint64_t a1, uint64_t a2)
{
  return sub_12BC2D8(a2);
}

uint64_t sub_12BED94(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12BED9C()
{
}

uint64_t sub_12BEDF0(uint64_t a1, uint64_t a2)
{
  return sub_12BC360(a2);
}

uint64_t sub_12BEDF8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12BEE00()
{
}

void *sub_12BEE5C(uint64_t a1, uint64_t a2)
{
  return sub_12BC3E0(a2);
}

uint64_t sub_12BEE64(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12BEE6C()
{
}

void *sub_12BEECC(uint64_t a1, uint64_t a2)
{
  return sub_12BC468(a2);
}

uint64_t sub_12BEED4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12BEEDC()
{
}

double sub_12BEF30(uint64_t a1, uint64_t a2)
{
  return sub_12BC4F4(a2);
}

uint64_t sub_12BEF38(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12BEF40()
{
}

void *sub_12BEF94(uint64_t a1, uint64_t a2)
{
  return sub_12BC574(a2);
}

uint64_t sub_12BEF9C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12BEFA4()
{
}

uint64_t sub_12BF000(uint64_t a1, uint64_t a2)
{
  return sub_12BC610(a2);
}

uint64_t sub_12BF008(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12BF010()
{
}

double sub_12BF06C(uint64_t a1, uint64_t a2)
{
  return sub_12BC698(a2);
}

uint64_t sub_12BF074(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12BF07C()
{
}

uint64_t sub_12BF0E0(uint64_t a1, uint64_t a2)
{
  return sub_12BC720(a2);
}

uint64_t sub_12BF0E8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12BF0F0()
{
}

void *sub_12BF14C(uint64_t a1, uint64_t a2)
{
  return sub_12BC7CC(a2);
}

uint64_t sub_12BF154(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12BF15C()
{
}

void *sub_12BF1B8(uint64_t a1, uint64_t a2)
{
  return sub_12BC854(a2);
}

uint64_t sub_12BF1C0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12BF1C8()
{
}

double sub_12BF22C(uint64_t a1, uint64_t a2)
{
  return sub_12BC8F8(a2);
}

uint64_t sub_12BF234(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12BF23C()
{
}

uint64_t sub_12BF298(uint64_t a1, uint64_t a2)
{
  return sub_12BC988(a2);
}

uint64_t sub_12BF2A0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12BF2A8()
{
}

void *sub_12BF304(uint64_t a1, uint64_t a2)
{
  return sub_12BCA10(a2);
}

uint64_t sub_12BF30C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12BF314()
{
}

double sub_12BF36C(uint64_t a1, uint64_t a2)
{
  return sub_12BCA98(a2);
}

uint64_t sub_12BF374(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12BF37C()
{
}

void *sub_12BF3D8(uint64_t a1, uint64_t a2)
{
  return sub_12BCB1C(a2);
}

uint64_t sub_12BF3E0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12BF3E8()
{
}

uint64_t sub_12BF43C(uint64_t a1, uint64_t a2)
{
  return sub_12BCBC0(a2);
}

uint64_t sub_12BF444(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_12BF44C()
{
}

uint64_t sub_12BF4A0(uint64_t a1, uint64_t a2)
{
  return sub_12BCC60(a2);
}

uint64_t sub_12BF4A8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_12BF4B0()
{
}

double sub_12BF500(uint64_t a1, uint64_t a2)
{
  return sub_12BCD00(a2);
}

uint64_t sub_12BF508(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12BF510()
{
}

void *sub_12BF564(uint64_t a1, uint64_t a2)
{
  return sub_12BCD7C(a2);
}

uint64_t sub_12BF56C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12BF574()
{
}

uint64_t sub_12BF5CC(uint64_t a1, uint64_t a2)
{
  return sub_12BCE18(a2);
}

uint64_t sub_12BF5D4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12BF5DC()
{
}

void *sub_12BF634(uint64_t a1, uint64_t a2)
{
  return sub_12BCEC0(a2);
}

uint64_t sub_12BF63C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12BF644()
{
}

uint64_t sub_12BF694(uint64_t a1, uint64_t a2)
{
  return sub_12BCF44(a2);
}

uint64_t sub_12BF69C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12BF6A4()
{
}

void *sub_12BF6F8(uint64_t a1, uint64_t a2)
{
  return sub_12BCFC0(a2);
}

uint64_t sub_12BF700(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12BF708()
{
}

void *sub_12BF76C(uint64_t a1, uint64_t a2)
{
  return sub_12BD040(a2);
}

uint64_t sub_12BF774(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12BF77C()
{
}

double sub_12BF7D0(uint64_t a1, uint64_t a2)
{
  return sub_12BD0EC(a2);
}

uint64_t sub_12BF7D8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12BF7E0()
{
}

void *sub_12BF844(uint64_t a1, uint64_t a2)
{
  return sub_12BD16C(a2);
}

uint64_t sub_12BF84C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12BF854()
{
}

void *sub_12BF8A0(uint64_t a1, uint64_t a2)
{
  return sub_129DD40(a2);
}

uint64_t sub_12BF8A8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12BF8B0()
{
}

uint64_t sub_12BF900(uint64_t a1, uint64_t a2)
{
  return sub_129DDB8(a2);
}

uint64_t sub_12BF908(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12BF910()
{
}

uint64_t sub_12BF960(uint64_t a1, uint64_t a2)
{
  return sub_129DE34(a2);
}

uint64_t sub_12BF968(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12BF970()
{
}

void *sub_12BF9BC(uint64_t a1, uint64_t a2)
{
  return sub_129DEB0(a2);
}

uint64_t sub_12BF9C4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12BF9CC()
{
}

uint64_t sub_12BFA20(uint64_t a1, uint64_t a2)
{
  return sub_129DF28(a2);
}

uint64_t sub_12BFA28(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12BFA30()
{
}

uint64_t sub_12BFA84(uint64_t a1, uint64_t a2)
{
  return sub_129DFA8(a2);
}

uint64_t sub_12BFA8C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12BFA94()
{
}

void *sub_12BFAE0(uint64_t a1, uint64_t a2)
{
  return sub_129E044(a2);
}

uint64_t sub_12BFAE8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12BFAF0()
{
}

double sub_12BFB48(uint64_t a1, uint64_t a2)
{
  return sub_129E0BC(a2);
}

uint64_t sub_12BFB50(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12BFB58()
{
}

uint64_t sub_12BFBA8(uint64_t a1, uint64_t a2)
{
  return sub_129E170(a2);
}

uint64_t sub_12BFBB0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12BFBB8()
{
}

void *sub_12BFC10(uint64_t a1, uint64_t a2)
{
  return sub_129E1EC(a2);
}

uint64_t sub_12BFC18(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12BFC20()
{
}

void *sub_12BFC6C(uint64_t a1, uint64_t a2)
{
  return sub_129E270(a2);
}

uint64_t sub_12BFC74(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12BFC7C()
{
}

double sub_12BFCD0(uint64_t a1, uint64_t a2)
{
  return sub_129E2E8(a2);
}

uint64_t sub_12BFCD8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12BFCE0()
{
}

void *sub_12BFD3C(uint64_t a1, uint64_t a2)
{
  return sub_129E368(a2);
}

uint64_t sub_12BFD44(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12BFD4C()
{
}

void *sub_12BFD9C(uint64_t a1, uint64_t a2)
{
  return sub_129E3F0(a2);
}

uint64_t sub_12BFDA4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12BFDAC()
{
}

void *sub_12BFDF8(uint64_t a1, uint64_t a2)
{
  return sub_129E46C(a2);
}

uint64_t sub_12BFE00(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12BFE08()
{
}

void *sub_12BFE6C(uint64_t a1, uint64_t a2)
{
  return sub_129E4E4(a2);
}

uint64_t sub_12BFE74(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12BFE7C()
{
}

uint64_t sub_12BFEDC(uint64_t a1, uint64_t a2)
{
  return sub_129E590(a2);
}

uint64_t sub_12BFEE4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12BFEEC()
{
}

uint64_t sub_12BFF44(uint64_t a1, uint64_t a2)
{
  return sub_129E61C(a2);
}

uint64_t sub_12BFF4C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 80);
}

void sub_12BFF54()
{
}

uint64_t sub_12BFFA4(uint64_t a1, uint64_t a2)
{
  return sub_129E6C4(a2);
}

uint64_t sub_12BFFAC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12BFFB4()
{
}

double sub_12C0008(uint64_t a1, uint64_t a2)
{
  return sub_129E740(a2);
}

uint64_t sub_12C0010(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12C0018()
{
}

double sub_12C006C(uint64_t a1, uint64_t a2)
{
  return sub_129E7C0(a2);
}

uint64_t sub_12C0074(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12C007C()
{
}

void sub_12C00C4()
{
}

uint64_t sub_12C00E8(uint64_t a1, uint64_t a2)
{
  return sub_129E840(a2);
}

uint64_t sub_12C00F0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_12C00F8()
{
}

void *sub_12C0158(uint64_t a1, uint64_t a2)
{
  return sub_129E89C(a2);
}

uint64_t sub_12C0160(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12C0168()
{
}

uint64_t sub_12C01C8(uint64_t a1, uint64_t a2)
{
  return sub_129E944(a2);
}

uint64_t sub_12C01D0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12C01D8()
{
}

void *sub_12C0230(uint64_t a1, uint64_t a2)
{
  return sub_129E9D0(a2);
}

uint64_t sub_12C0238(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12C0240()
{
}

void *sub_12C028C(uint64_t a1, uint64_t a2)
{
  return sub_129EA54(a2);
}

uint64_t sub_12C0294(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12C029C()
{
}

uint64_t sub_12C02F0(uint64_t a1, uint64_t a2)
{
  return sub_129EACC(a2);
}

uint64_t sub_12C02F8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_12C0300()
{
}

void *sub_12C0358(uint64_t a1, uint64_t a2)
{
  return sub_12834B0(a2);
}

uint64_t sub_12C0360(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12C0368()
{
}

uint64_t sub_12C03C4(uint64_t a1, uint64_t a2)
{
  return sub_1283534(a2);
}

uint64_t sub_12C03CC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12C03D4()
{
}

double sub_12C0430(uint64_t a1, uint64_t a2)
{
  return sub_12835E0(a2);
}

uint64_t sub_12C0438(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12C0440()
{
}

double sub_12C04B0(uint64_t a1, uint64_t a2)
{
  return sub_1283668(a2);
}

uint64_t sub_12C04B8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12C04C0()
{
}

void *sub_12C051C(uint64_t a1, uint64_t a2)
{
  return sub_1283738(a2);
}

uint64_t sub_12C0524(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12C052C()
{
}

void *sub_12C0588(uint64_t a1, uint64_t a2)
{
  return sub_12837C0(a2);
}

uint64_t sub_12C0590(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12C0598()
{
}

void *sub_12C05E4(uint64_t a1, uint64_t a2)
{
  return sub_1283848(a2);
}

uint64_t sub_12C05EC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12C05F4()
{
}

double sub_12C0688(uint64_t a1, uint64_t a2)
{
  return sub_12838C0(a2);
}

uint64_t sub_12C0690(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12C0698()
{
}

double sub_12C070C(uint64_t a1, uint64_t a2)
{
  return sub_1283984(a2);
}

uint64_t sub_12C0714(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12C071C()
{
}

uint64_t sub_12C076C(uint64_t a1, uint64_t a2)
{
  return sub_1283A10(a2);
}

uint64_t sub_12C0774(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12C077C()
{
}

double sub_12C07E0(uint64_t a1, uint64_t a2)
{
  return sub_1283A8C(a2);
}

uint64_t sub_12C07E8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12C07F0()
{
}

void *sub_12C0848(uint64_t a1, uint64_t a2)
{
  return sub_1283B1C(a2);
}

uint64_t sub_12C0850(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12C0858()
{
}

void *sub_12C08B4(uint64_t a1, uint64_t a2)
{
  return sub_1283BA0(a2);
}

uint64_t sub_12C08BC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12C08C4()
{
}

uint64_t sub_12C0918(uint64_t a1, uint64_t a2)
{
  return sub_1283C44(a2);
}

uint64_t sub_12C0920(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12C0928()
{
}

void *sub_12C0988(uint64_t a1, uint64_t a2)
{
  return sub_1283CE8(a2);
}

uint64_t sub_12C0990(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12C0998()
{
}

void *sub_12C09F4(uint64_t a1, uint64_t a2)
{
  return sub_1283D90(a2);
}

uint64_t sub_12C09FC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12C0A04()
{
}

void *sub_12C0A54(uint64_t a1, uint64_t a2)
{
  return sub_1283E18(a2);
}

uint64_t sub_12C0A5C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12C0A64()
{
}

void *sub_12C0AC0(uint64_t a1, uint64_t a2)
{
  return sub_1283E94(a2);
}

uint64_t sub_12C0AC8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12C0AD0()
{
}

void *sub_12C0B1C(uint64_t a1, uint64_t a2)
{
  return sub_1283F1C(a2);
}

uint64_t sub_12C0B24(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12C0B2C()
{
}

void sub_12C0B74()
{
}

uint64_t sub_12C0B98(uint64_t a1, uint64_t a2)
{
  return sub_1283F94(a2);
}

uint64_t sub_12C0BA0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_12C0BA8()
{
}

uint64_t sub_12C0C0C(uint64_t a1, uint64_t a2)
{
  return sub_1283FF0(a2);
}

uint64_t sub_12C0C14(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12C0C1C()
{
}

void *sub_12C0C6C(uint64_t a1, uint64_t a2)
{
  return sub_1284080(a2);
}

uint64_t sub_12C0C74(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12C0C7C()
{
}

void *sub_12C0CCC(uint64_t a1, uint64_t a2)
{
  return sub_12840FC(a2);
}

uint64_t sub_12C0CD4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12C0CDC()
{
}

uint64_t sub_12C0D44(uint64_t a1, uint64_t a2)
{
  return sub_1284178(a2);
}

uint64_t sub_12C0D4C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12C0D54()
{
}

double sub_12C0DB8(uint64_t a1, uint64_t a2)
{
  return sub_1284228(a2);
}

uint64_t sub_12C0DC0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12C0DC8()
{
}

uint64_t sub_12C0E18(uint64_t a1, uint64_t a2)
{
  return sub_12842B8(a2);
}

uint64_t sub_12C0E20(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12C0E28()
{
}

void *sub_12C0E7C(uint64_t a1, uint64_t a2)
{
  return sub_1284334(a2);
}

uint64_t sub_12C0E84(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12C0E8C()
{
}

void *sub_12C0ED8(uint64_t a1, uint64_t a2)
{
  return sub_12843D0(a2);
}

uint64_t sub_12C0EE0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12C0EE8()
{
}

uint64_t sub_12C0F40(uint64_t a1, uint64_t a2)
{
  return sub_1284448(a2);
}

uint64_t sub_12C0F48(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12C0F50()
{
}

double sub_12C0FC0(uint64_t a1, uint64_t a2)
{
  return sub_12844E8(a2);
}

uint64_t sub_12C0FC8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12C0FD0()
{
}

double sub_12C1048(uint64_t a1, uint64_t a2)
{
  return sub_1284584(a2);
}

uint64_t sub_12C1050(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12C1058()
{
}

void *sub_12C10B8(uint64_t a1, uint64_t a2)
{
  return sub_1284668(a2);
}

uint64_t sub_12C10C0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12C10C8()
{
}

uint64_t sub_12C112C(uint64_t a1, uint64_t a2)
{
  return sub_12846F4(a2);
}

uint64_t sub_12C1134(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12C113C()
{
}

void *sub_12C118C(uint64_t a1, uint64_t a2)
{
  return sub_1284784(a2);
}

uint64_t sub_12C1194(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12C119C()
{
}

uint64_t sub_12C11EC(uint64_t a1, uint64_t a2)
{
  return sub_128481C(a2);
}

uint64_t sub_12C11F4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12C11FC()
{
}

double sub_12C1250(uint64_t a1, uint64_t a2)
{
  return sub_1284898(a2);
}

uint64_t sub_12C1258(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12C1260()
{
}

void sub_12C12A8()
{
}

uint64_t sub_12C12CC(uint64_t a1, uint64_t a2)
{
  return sub_1284918(a2);
}

uint64_t sub_12C12D4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_12C12DC()
{
}

uint64_t sub_12C133C(uint64_t a1, uint64_t a2)
{
  return sub_1284974(a2);
}

uint64_t sub_12C1344(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12C134C()
{
}

double sub_12C13B4(uint64_t a1, uint64_t a2)
{
  return sub_1284A00(a2);
}

uint64_t sub_12C13BC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12C13C4()
{
}

uint64_t sub_12C1418(uint64_t a1, uint64_t a2)
{
  return sub_1284AB4(a2);
}

uint64_t sub_12C1420(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12C1428()
{
}

uint64_t sub_12C1498(uint64_t a1, uint64_t a2)
{
  return sub_1284B50(a2);
}

uint64_t sub_12C14A0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12C14A8()
{
}

void *sub_12C1500(uint64_t a1, uint64_t a2)
{
  return sub_1284C14(a2);
}

uint64_t sub_12C1508(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12C1510()
{
}

void *sub_12C1568(uint64_t a1, uint64_t a2)
{
  return sub_1284C98(a2);
}

uint64_t sub_12C1570(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12C1578()
{
}

uint64_t sub_12C15D4(uint64_t a1, uint64_t a2)
{
  return sub_1284D1C(a2);
}

uint64_t sub_12C15DC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12C15E4()
{
}

double sub_12C1650(uint64_t a1, uint64_t a2)
{
  return sub_1284DA4(a2);
}

uint64_t sub_12C1658(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12C1660()
{
}

double sub_12C16C8(uint64_t a1, uint64_t a2)
{
  return sub_1284E5C(a2);
}

uint64_t sub_12C16D0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12C16D8()
{
}

void *sub_12C1734(uint64_t a1, uint64_t a2)
{
  return sub_1284EF0(a2);
}

uint64_t sub_12C173C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12C1744()
{
}

void *sub_12C1794(uint64_t a1, uint64_t a2)
{
  return sub_1284F78(a2);
}

uint64_t sub_12C179C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12C17A4()
{
}

void sub_12C17EC()
{
}

void *sub_12C1810(uint64_t a1, uint64_t a2)
{
  return sub_1284FF4(a2);
}

uint64_t sub_12C1818(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_12C1820()
{
}

uint64_t sub_12C187C(uint64_t a1, uint64_t a2)
{
  return sub_1285050(a2);
}

uint64_t sub_12C1884(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12C188C()
{
}

uint64_t sub_12C18DC(uint64_t a1, uint64_t a2)
{
  return sub_128DAF0(a2);
}

uint64_t sub_12C18E4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12C18EC()
{
}

void *sub_12C1940(uint64_t a1, uint64_t a2)
{
  return sub_128DB6C(a2);
}

uint64_t sub_12C1948(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12C1950()
{
}

uint64_t sub_12C19AC(uint64_t a1, uint64_t a2)
{
  return sub_128DC08(a2);
}

uint64_t sub_12C19B4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12C19BC()
{
}

void *sub_12C1A0C(uint64_t a1, uint64_t a2)
{
  return sub_128DC90(a2);
}

uint64_t sub_12C1A14(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12C1A1C()
{
}

double sub_12C1A8C(uint64_t a1, uint64_t a2)
{
  return sub_128DD0C(a2);
}

uint64_t sub_12C1A94(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12C1A9C()
{
}

void *sub_12C1B04(uint64_t a1, uint64_t a2)
{
  return sub_128DDA8(a2);
}

uint64_t sub_12C1B0C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12C1B14()
{
}

double sub_12C1B58(uint64_t a1, uint64_t a2)
{
  return sub_128DE64(a2);
}

uint64_t sub_12C1B60(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12C1B68()
{
}

void sub_12C1BB0()
{
}

void *sub_12C1BD4(uint64_t a1, uint64_t a2)
{
  return sub_128DEC4(a2);
}

uint64_t sub_12C1BDC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_12C1BE4()
{
}

uint64_t sub_12C1C40(uint64_t a1, uint64_t a2)
{
  return sub_128DF20(a2);
}

uint64_t sub_12C1C48(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12C1C50()
{
}

void *sub_12C1CB0(uint64_t a1, uint64_t a2)
{
  return sub_128E984(a2);
}

uint64_t sub_12C1CB8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12C1CC0()
{
}

void sub_12C1D08()
{
}

void *sub_12C1D2C(uint64_t a1, uint64_t a2)
{
  return sub_12BE5E0(a2);
}

uint64_t sub_12C1D34(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_12C1D3C()
{
}

void sub_12C1D84()
{
}

void *sub_12C1DA8(uint64_t a1, uint64_t a2)
{
  return sub_12BE63C(a2);
}

uint64_t sub_12C1DB0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_12C1DB8(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    int v3 = v2 + 2;
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_15B2C44();
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

std::string *sub_12C1E38(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      uint64_t result = (std::string *)sub_15C1B30(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = sub_122B1A4(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

void sub_12C1EB4(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    int v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_126E5BC(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_12C1F34(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    int v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_125F860(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_12C1FB4(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    int v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_126F474(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_12C2034(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    int v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_12716D4(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_12C20B4(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    int v3 = v2 + 2;
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1627DB4(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_12C2134(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    int v3 = v2 + 2;
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_162D64C(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_12C21B4(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    int v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_126C888(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_12C2234(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    int v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_126B7D8(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_12C22B4(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    int v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_126356C(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_12C2334(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    int v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_126A228(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_12C23B4(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    int v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_126ADD4(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_12C2434(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    int v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_12725C8(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_12C24B4(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    int v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_12710A8(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_12C2534(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    int v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1272004(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_12C25B4(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    int v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_127350C(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_12C2634(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    int v3 = v2 + 2;
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_13380DC();
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_12C26B4(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    int v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1277940(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_12C2734(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    int v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1276230(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_12C27B4(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    int v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_127FE10(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_12C2834(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    int v3 = v2 + 2;
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_144D350();
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_12C28B4(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    int v3 = v2 + 2;
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1762C7C();
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_12C2934(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    int v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_125D680(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

uint64_t *sub_12C29B4(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    uint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      uint64_t result = (uint64_t *)sub_1283FF0(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = (uint64_t *)sub_12C2A30(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_12C2A30(uint64_t a1, std::string *a2)
{
  return sub_126EDF8(a2, a1);
}

void sub_12C2A40(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      sub_12835E0(v9);
      *v10++ = v11;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v13 = *a3++;
      uint64_t v12 = v13;
      uint64_t v14 = *v7++;
      sub_12C2ABC(v12, v14);
      --v5;
    }
    while (v5);
  }
}

void sub_12C2ABC(uint64_t a1, uint64_t a2)
{
}

std::string *sub_12C2ACC(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      uint64_t result = (std::string *)sub_12840FC(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = sub_12C2B48(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_12C2B48(uint64_t a1, std::string *a2)
{
  return sub_126FA34(a2, a1);
}

std::string *sub_12C2B58(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      uint64_t result = (std::string *)sub_1284334(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = sub_12C2BD4(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_12C2BD4(uint64_t a1, std::string *a2)
{
  return sub_1271EEC(a2, a1);
}

void sub_12C2BE4(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = sub_16332DC(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_12C2C60(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_12C2C60(uint64_t a1, uint64_t a2)
{
}

void sub_12C2C70(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = sub_1633394(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_12C2CEC(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_12C2CEC(uint64_t a1, uint64_t a2)
{
}

std::string *sub_12C2CFC(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      uint64_t result = (std::string *)sub_1283E18(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = sub_12C2D78(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_12C2D78(uint64_t a1, std::string *a2)
{
  return sub_126D04C(a2, a1);
}

void sub_12C2D88(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = (uint64_t)sub_1283CE8(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_12C2E04(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_12C2E04(uint64_t a1, uint64_t a2)
{
}

void sub_12C2E14(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = (uint64_t)sub_1283738(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_12C2E90(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_12C2E90(uint64_t a1, uint64_t a2)
{
}

std::string *sub_12C2EA0(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      uint64_t result = (std::string *)sub_1283B1C(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = sub_122B1A4(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

uint64_t *sub_12C2F1C(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    uint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      uint64_t result = (uint64_t *)sub_1283C44(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = (uint64_t *)sub_12C2F98(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_12C2F98(uint64_t a1, std::string *a2)
{
  return sub_126B6A8(a2, a1);
}

uint64_t *sub_12C2FA8(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    uint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      uint64_t result = (uint64_t *)sub_1284448(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = (uint64_t *)sub_12C3024(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_12C3024(uint64_t a1, std::string *a2)
{
  return sub_127336C(a2, a1);
}

uint64_t *sub_12C3034(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    uint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      uint64_t result = (uint64_t *)sub_12842B8(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = (uint64_t *)sub_122C7C8(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_12C30B0(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      uint64_t result = (std::string *)sub_12843D0(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = sub_11DC498(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

void sub_12C312C(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      sub_12844E8(v9);
      *v10++ = v11;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v13 = *a3++;
      uint64_t v12 = v13;
      uint64_t v14 = *v7++;
      sub_12C31A8(v12, v14);
      --v5;
    }
    while (v5);
  }
}

void sub_12C31A8(uint64_t a1, uint64_t a2)
{
}

void sub_12C31B8(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = sub_134E188(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_12C3234(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_12C3234(uint64_t a1, uint64_t a2)
{
}

std::string *sub_12C3244(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      uint64_t result = (std::string *)sub_1284784(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = sub_12C32C0(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_12C32C0(uint64_t a1, std::string *a2)
{
  return sub_1278000(a2, a1);
}

void sub_12C32D0(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = (uint64_t)sub_1284668(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_12C334C(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_12C334C(uint64_t a1, uint64_t a2)
{
}

void sub_12C335C(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      sub_1284E5C(v9);
      *v10++ = v11;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v13 = *a3++;
      uint64_t v12 = v13;
      uint64_t v14 = *v7++;
      sub_12C33D8(v12, v14);
      --v5;
    }
    while (v5);
  }
}

void sub_12C33D8(uint64_t a1, uint64_t a2)
{
}

void sub_12C33E8(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = sub_147818C(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_12C3464(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_12C3464(uint64_t a1, uint64_t a2)
{
}

void sub_12C3474(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = sub_178CDA8(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_12C34F0(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_12C34F0(uint64_t a1, uint64_t a2)
{
}

void sub_12C3500(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = sub_1283534(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_12C357C(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_12C357C(uint64_t a1, uint64_t a2)
{
}

void sub_12C358C()
{
}

void sub_12C3600()
{
}

void sub_12C3648()
{
}

void sub_12C366C()
{
}

void sub_12C36B4()
{
}

void sub_12C36D8()
{
}

void sub_12C3720()
{
}

void sub_12C3744(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    int v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1285108(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_12C37C4(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    int v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_12870F0(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_12C3844(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    int v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_12857C0(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_12C38C4(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    int v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1286184(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_12C3944(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    int v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1286998(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_12C39C4(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    int v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_12880D0(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_12C3A44(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    int v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1289270(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

uint64_t *sub_12C3AC4(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    uint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      uint64_t result = (uint64_t *)sub_128DAF0(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = (uint64_t *)sub_122C7C8(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

void sub_12C3B40(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      sub_128DD0C(v9);
      *v10++ = v11;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v13 = *a3++;
      uint64_t v12 = v13;
      uint64_t v14 = *v7++;
      sub_12C31A8(v12, v14);
      --v5;
    }
    while (v5);
  }
}

std::string *sub_12C3BBC(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      uint64_t result = (std::string *)sub_128DB6C(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = sub_12C3C38(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_12C3C38(uint64_t a1, std::string *a2)
{
  return sub_128602C(a2, a1);
}

uint64_t *sub_12C3C48(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    uint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      uint64_t result = (uint64_t *)sub_128DC08(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = (uint64_t *)sub_12C3CC4(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_12C3CC4(uint64_t a1, std::string *a2)
{
  return sub_128684C(a2, a1);
}

std::string *sub_12C3CD4(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      uint64_t result = (std::string *)sub_128DC90(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = sub_122D098(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

void sub_12C3D50(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = (uint64_t)sub_128DDA8(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_12C3DCC(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_12C3DCC(uint64_t a1, uint64_t a2)
{
}

void sub_12C3DDC(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      sub_128DE64(v9);
      *v10++ = v11;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v13 = *a3++;
      uint64_t v12 = v13;
      uint64_t v14 = *v7++;
      sub_12C3E58(v12, v14);
      --v5;
    }
    while (v5);
  }
}

void sub_12C3E58(uint64_t a1, uint64_t a2)
{
}

void sub_12C3E68()
{
}

void sub_12C3EB0()
{
}

void sub_12C3ED4(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    int v3 = v2 + 2;
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_15B1678(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_12C3F54(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = sub_15C19EC(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_12C3FD0(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_12C3FD0(uint64_t a1, uint64_t a2)
{
}

void sub_12C3FE0(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    int v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1290FA8(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_12C4060(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    int v3 = v2 + 2;
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1764D2C();
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_12C40E0(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    int v3 = v2 + 2;
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1765338();
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_12C4160(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    int v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_129C23C(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_12C41E0(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    int v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_129D02C(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

uint64_t *sub_12C4260(uint64_t *result, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    uint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      uint64_t result = (uint64_t *)sub_129DFA8(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = (uint64_t *)sub_12C42DC(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

uint64_t sub_12C42DC(uint64_t a1, uint64_t a2)
{
  return sub_12919D4(a2, a1);
}

std::string *sub_12C42EC(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      uint64_t result = (std::string *)sub_178CE84(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = sub_122BD90(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

uint64_t *sub_12C4368(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    uint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      uint64_t result = (uint64_t *)sub_178CF08(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = (uint64_t *)sub_12C43E4(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_12C43E4(uint64_t a1, std::string *a2)
{
  return sub_118D9C0(a2, a1);
}

void sub_12C43F4(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = sub_129E944(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_12C4470(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_12C4470(uint64_t a1, uint64_t a2)
{
}

std::string *sub_12C4480(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      uint64_t result = (std::string *)sub_129EA54(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = sub_11DC498(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

void sub_12C44FC()
{
}

void sub_12C4544()
{
}

void sub_12C4568(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    int v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_129FA10(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_12C45E8(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    int v3 = v2 + 2;
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_184B078();
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_12C4668(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    int v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_12A601C(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_12C46E8(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    int v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_12AA92C(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_12C4768(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    int v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_12AD504(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_12C47E8(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    int v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_12AF2DC(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_12C4868(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    int v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_12B4404(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_12C48E8(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    int v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_12A2CE8(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_12C4968(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    int v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_12B8890(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_12C49E8(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    int v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_12B8FE0(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_12C4A68(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    int v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_12B9F64(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_12C4AE8(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = (uint64_t)sub_12BBAE4(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_12C4B64(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_12C4B64(uint64_t a1, uint64_t a2)
{
}

void sub_12C4B74(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = sub_185089C(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_12C4BF0(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_12C4BF0(uint64_t a1, uint64_t a2)
{
}

void sub_12C4C00(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      sub_12BC124(v9);
      *v10++ = v11;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v13 = *a3++;
      uint64_t v12 = v13;
      uint64_t v14 = *v7++;
      sub_12C4C7C(v12, v14);
      --v5;
    }
    while (v5);
  }
}

void sub_12C4C7C(uint64_t a1, uint64_t a2)
{
}

std::string *sub_12C4C8C(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      uint64_t result = (std::string *)sub_12BC468(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = sub_12C4D08(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_12C4D08(uint64_t a1, std::string *a2)
{
  return sub_12AB1CC(a2, a1);
}

void sub_12C4D18(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      sub_12BC698(v9);
      *v10++ = v11;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v13 = *a3++;
      uint64_t v12 = v13;
      uint64_t v14 = *v7++;
      sub_12C4D94(v12, v14);
      --v5;
    }
    while (v5);
  }
}

void sub_12C4D94(uint64_t a1, uint64_t a2)
{
}

void sub_12C4DA4(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = (uint64_t)sub_12BC7CC(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_12C4E20(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_12C4E20(uint64_t a1, uint64_t a2)
{
}

void sub_12C4E30(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = (uint64_t)sub_12BCB1C(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_12C4EAC(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_12C4EAC(uint64_t a1, uint64_t a2)
{
}

void sub_12C4EBC(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = (uint64_t)sub_12BBDA0(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_12C4F38(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_12C4F38(uint64_t a1, uint64_t a2)
{
}

std::string *sub_12C4F48(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      uint64_t result = (std::string *)sub_12BCFC0(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = sub_12C4FC4(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_12C4FC4(uint64_t a1, std::string *a2)
{
  return sub_12B8EE0(a2, a1);
}

void sub_12C4FD4(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = (uint64_t)sub_12BD040(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_12C5050(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_12C5050(uint64_t a1, uint64_t a2)
{
}

void sub_12C5060(uint64_t *a1, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      sub_12BD0EC(v9);
      *v10++ = v11;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v13 = *a3++;
      uint64_t v12 = v13;
      uint64_t v14 = *v7++;
      sub_11DC498(v12, v14);
      --v5;
    }
    while (v5);
  }
}

void sub_12C50DC()
{
}

void sub_12C5124()
{
}

void sub_12C5148()
{
}

void sub_12C5190()
{
}

void sub_12C51B4(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    int v3 = v2 + 2;
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_146FAC4();
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_12C5234(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    int v3 = v2 + 2;
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_15B3DFC(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_12C52B4(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = sub_1479450(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_12C5330(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_12C5330(uint64_t a1, uint64_t a2)
{
}

void sub_12C5340(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = sub_15C1CB4(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_12C53BC(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_12C53BC(uint64_t a1, uint64_t a2)
{
}

void sub_12C53CC()
{
}

void sub_12C5414()
{
}

void sub_12C5438()
{
}

void sub_12C5480()
{
}

uint64_t sub_12C54A4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_150C884(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

void *sub_12C5534(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1889DA8((uint64_t)(a1 + 11));
  sub_1889DA8((uint64_t)(a1 + 8));
  sub_1889DA8((uint64_t)(a1 + 5));
  sub_1889DE8(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12C55C8(void *a1)
{
  sub_12C5534(a1);

  operator delete();
}

uint64_t sub_12C5600(uint64_t a1)
{
  uint64_t result = sub_188CC00(a1 + 16);
  char v4 = *(unsigned char *)(a1 + 8);
  uint64_t v3 = a1 + 8;
  *(_DWORD *)(v3 + 32) = 0;
  *(_DWORD *)(v3 + 56) = 0;
  *(_DWORD *)(v3 + 80) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_12C565C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v25 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v25, a3[11].i32[1])) {
    return *(void *)v25;
  }
  int v6 = (uint64_t **)(a1 + 16);
  int v7 = (void *)(a1 + 8);
  while (2)
  {
    int v8 = (unsigned __int8 *)(*(void *)v25 + 1);
    unsigned int v9 = **(unsigned char **)v25;
    if ((char)**(unsigned char **)v25 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        int v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v25, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        int v8 = (unsigned __int8 *)(*(void *)v25 + 2);
      }
    }
    *(void *)uint64_t v25 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_36;
        }
        uint64_t v12 = (const std::string::value_type *)(v8 - 1);
        while (1)
        {
          uint64_t v13 = (char *)(v12 + 1);
          *(void *)uint64_t v25 = v12 + 1;
          uint64_t v14 = *(_DWORD **)(a1 + 32);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 24), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 24) = v15 + 1;
            uint64_t v16 = *(std::string **)&v14[2 * v15 + 2];
          }
          else
          {
            if (!*v6) {
              operator new();
            }
            void *v18 = v17;
            v18[1] = sub_3A6EDC;
            *uint64_t v17 = 0;
            v17[1] = 0;
            int v17[2] = 0;
            uint64_t v16 = (std::string *)sub_188CDC8(a1 + 16, (uint64_t)v17);
            uint64_t v13 = *(char **)v25;
          }
          uint64_t v12 = sub_188C244(v16, v13, (uint64_t)a3);
          *(void *)uint64_t v25 = v12;
          if (!v12) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_44;
          }
        }
      case 2u:
        if (v9 == 18)
        {
          unint64_t v19 = (unsigned int *)(a1 + 40);
LABEL_25:
          int v20 = sub_188C2CC(v19, v8, (uint64_t)a3);
          goto LABEL_43;
        }
        if (v9 != 16) {
          goto LABEL_36;
        }
        int v21 = sub_110DAD8((uint64_t *)v25);
        sub_11CD448(a1, v21);
        goto LABEL_32;
      case 3u:
        if (v9 == 26)
        {
          unint64_t v19 = (unsigned int *)(a1 + 64);
          goto LABEL_25;
        }
        if (v9 != 24) {
          goto LABEL_36;
        }
        int v22 = sub_110DAD8((uint64_t *)v25);
        sub_11CD4B8(a1, v22);
LABEL_32:
        if (!*(void *)v25) {
          return 0;
        }
        goto LABEL_44;
      case 4u:
        if (v9 == 34)
        {
          int v20 = (unsigned __int8 *)sub_188C3D4(a1 + 88, v8, a3);
          goto LABEL_43;
        }
        if (v9 == 33)
        {
          sub_12C596C(a1, *(double *)v8);
          *(void *)v25 += 8;
LABEL_44:
          if (sub_11947B8((uint64_t)a3, (char **)v25, a3[11].i32[1])) {
            return *(void *)v25;
          }
          continue;
        }
LABEL_36:
        if (v9) {
          BOOL v23 = (v9 & 7) == 4;
        }
        else {
          BOOL v23 = 1;
        }
        if (!v23)
        {
          if (*v7)
          {
            int v24 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            int v24 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            int v8 = *(unsigned __int8 **)v25;
          }
          int v20 = sub_1885AC0(v9, v24, (char *)v8, a3);
LABEL_43:
          *(void *)uint64_t v25 = v20;
          if (!v20) {
            return 0;
          }
          goto LABEL_44;
        }
        if (!v8) {
          return 0;
        }
        a3[10].i32[0] = v9 - 1;
        return *(void *)v25;
      default:
        goto LABEL_36;
    }
  }
}

void sub_12C596C(uint64_t a1, double a2)
{
  uint64_t v5 = *(unsigned int *)(a1 + 88);
  char v4 = (_DWORD *)(a1 + 88);
  if (v5 == *(_DWORD *)(a1 + 92))
  {
    int v6 = v5 + 1;
    sub_188CA54((unsigned int *)(a1 + 88), v5 + 1);
    *(double *)(*(void *)(a1 + 96) + 8 * v5) = a2;
  }
  else
  {
    *(double *)(*(void *)(a1 + 96) + 8 * v5) = a2;
    int v6 = v5 + 1;
  }
  _DWORD *v4 = v6;
}

char *sub_12C59DC(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v6 = *(unsigned int *)(a1 + 24);
  if ((int)v6 >= 1)
  {
    uint64_t v7 = 0;
    uint64_t v8 = 8 * v6;
    do
    {
      unsigned int v9 = *(void **)(*(void *)(a1 + 32) + v7 + 8);
      if (*((char *)v9 + 23) < 0)
      {
        int64_t v10 = v9[1];
        if (v10 > 127) {
          goto LABEL_12;
        }
      }
      else
      {
        int64_t v10 = *((unsigned __int8 *)v9 + 23);
      }
      if (*(void *)a3 - (void)__dst + 14 >= v10)
      {
        *__dst = 10;
        __dst[1] = v10;
        if (*((char *)v9 + 23) < 0) {
          unsigned int v9 = (void *)*v9;
        }
        unsigned int v11 = __dst + 2;
        memcpy(v11, v9, v10);
        __dst = &v11[v10];
        goto LABEL_10;
      }
LABEL_12:
      __dst = (char *)sub_188A868(a3, 1, (uint64_t)v9, __dst);
LABEL_10:
      v7 += 8;
    }
    while (v8 != v7);
  }
  unsigned int v12 = *(_DWORD *)(a1 + 56);
  if ((int)v12 > 0)
  {
    if (*(void *)a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    *__dst = 18;
    uint64_t v13 = __dst + 1;
    if (v12 >= 0x80)
    {
      do
      {
        *v13++ = v12 | 0x80;
        unsigned int v40 = v12 >> 14;
        v12 >>= 7;
      }
      while (v40);
      __dst = v13 - 1;
    }
    __dst += 2;
    *uint64_t v13 = v12;
    uint64_t v14 = *(unsigned int **)(a1 + 48);
    uint64_t v15 = &v14[*(int *)(a1 + 40)];
    do
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      unsigned int v17 = *v14++;
      unsigned int v16 = v17;
      *__dst = v17;
      if (v17 > 0x7F)
      {
        *__dst = v16 | 0x80;
        unsigned int v18 = v16 >> 7;
        __dst[1] = v16 >> 7;
        __dst += 2;
        if (v16 >= 0x4000)
        {
          do
          {
            *(__dst - 1) |= 0x80u;
            unsigned int v19 = v18 >> 14;
            v18 >>= 7;
            *__dst++ = v18;
          }
          while (v19);
        }
      }
      else
      {
        ++__dst;
      }
    }
    while (v14 < v15);
  }
  unsigned int v20 = *(_DWORD *)(a1 + 80);
  if ((int)v20 >= 1)
  {
    if (*(void *)a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    *__dst = 26;
    int v21 = __dst + 1;
    if (v20 >= 0x80)
    {
      do
      {
        *v21++ = v20 | 0x80;
        unsigned int v41 = v20 >> 14;
        v20 >>= 7;
      }
      while (v41);
      __dst = v21 - 1;
    }
    __dst += 2;
    unsigned char *v21 = v20;
    int v22 = *(unsigned int **)(a1 + 72);
    BOOL v23 = &v22[*(int *)(a1 + 64)];
    do
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      unsigned int v25 = *v22++;
      unsigned int v24 = v25;
      *__dst = v25;
      if (v25 > 0x7F)
      {
        *__dst = v24 | 0x80;
        unsigned int v26 = v24 >> 7;
        __dst[1] = v24 >> 7;
        __dst += 2;
        if (v24 >= 0x4000)
        {
          do
          {
            *(__dst - 1) |= 0x80u;
            unsigned int v27 = v26 >> 14;
            v26 >>= 7;
            *__dst++ = v26;
          }
          while (v27);
        }
      }
      else
      {
        ++__dst;
      }
    }
    while (v22 < v23);
  }
  int v28 = *(_DWORD *)(a1 + 88);
  if (v28 >= 1)
  {
    if (*(void *)a3 <= (unint64_t)__dst)
    {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      int v28 = *(_DWORD *)(a1 + 88);
    }
    int v29 = 8 * v28;
    *__dst = 34;
    uint64_t v30 = __dst + 1;
    unsigned int v31 = v29;
    if (v29 >= 0x80)
    {
      do
      {
        *v30++ = v31 | 0x80;
        unsigned int v42 = v31 >> 14;
        v31 >>= 7;
      }
      while (v42);
      __dst = v30 - 1;
    }
    unint64_t v32 = __dst + 2;
    *uint64_t v30 = v31;
    uint64_t v33 = *(char **)(a1 + 96);
    if (*(void *)a3 - (void)v32 < v29)
    {
      __dst = (char *)sub_188A528(a3, v33, v29, v32);
    }
    else
    {
      uint64_t v34 = v29;
      memcpy(v32, v33, v29);
      __dst = (char *)v32 + v34;
    }
  }
  uint64_t v35 = *(void *)(a1 + 8);
  if ((v35 & 1) == 0) {
    return __dst;
  }
  unint64_t v37 = v35 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v37 + 31) < 0)
  {
    unint64_t v38 = *(void **)(v37 + 8);
    uint64_t v39 = *(void *)(v37 + 16);
  }
  else
  {
    unint64_t v38 = (void *)(v37 + 8);
    LODWORD(v39) = *(unsigned __int8 *)(v37 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v39)
  {
    uint64_t v43 = (int)v39;
    memcpy(__dst, v38, (int)v39);
    __dst += v43;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v38, v39, __dst);
}

uint64_t sub_12C5DC8(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 24);
  if ((int)v2 < 1)
  {
    uint64_t v4 = *(unsigned int *)(a1 + 24);
  }
  else
  {
    uint64_t v3 = (uint64_t *)(*(void *)(a1 + 32) + 8);
    uint64_t v4 = *(unsigned int *)(a1 + 24);
    do
    {
      uint64_t v5 = *v3++;
      uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
      uint64_t v7 = *(void *)(v5 + 8);
      if ((v6 & 0x80u) == 0) {
        uint64_t v7 = v6;
      }
      v4 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      --v2;
    }
    while (v2);
  }
  uint64_t v8 = sub_188D4F0((unsigned int *)(a1 + 40));
  if (v8)
  {
    int v9 = v8;
    if ((v8 & 0x80000000) != 0) {
      uint64_t v10 = 11;
    }
    else {
      uint64_t v10 = ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v4 += v10;
  }
  else
  {
    int v9 = 0;
  }
  *(_DWORD *)(a1 + 56) = v9;
  uint64_t v11 = v4 + v8;
  uint64_t v12 = sub_188D4F0((unsigned int *)(a1 + 64));
  if (v12)
  {
    uint64_t v13 = 11;
    uint64_t v14 = ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((int)v12 >= 0) {
      uint64_t v13 = v14;
    }
    v11 += v13;
    int v15 = v12;
  }
  else
  {
    int v15 = 0;
  }
  *(_DWORD *)(a1 + 80) = v15;
  uint64_t v16 = v11 + v12;
  uint64_t v17 = *(unsigned int *)(a1 + 88);
  uint64_t v18 = 8 * v17;
  if (v17)
  {
    if ((v18 & 0x80000000) != 0) {
      uint64_t v19 = 11;
    }
    else {
      uint64_t v19 = ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v16 += v19;
  }
  uint64_t result = v16 + v18;
  uint64_t v21 = *(void *)(a1 + 8);
  if (v21)
  {
    unint64_t v22 = v21 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v22 + 31) < 0) {
      uint64_t v23 = *(void *)(v22 + 16);
    }
    else {
      uint64_t v23 = *(unsigned __int8 *)(v22 + 31);
    }
    result += v23;
  }
  *(_DWORD *)(a1 + 104) = result;
  return result;
}

std::string *sub_12C5F4C(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (const std::string **)(*(void *)(a2 + 32) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result->__r_.__value_.__r.__words[2], *(_DWORD *)(a2 + 24));
    uint64_t result = (std::string *)sub_188FB98((uint64_t)&v3->__r_.__value_.__r.__words[2], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__l.__size_ - LODWORD(v3[1].__r_.__value_.__l.__data_));
    int v7 = LODWORD(v3[1].__r_.__value_.__l.__data_) + v4;
    LODWORD(v3[1].__r_.__value_.__l.__data_) = v7;
    std::string::size_type size = (int *)v3[1].__r_.__value_.__l.__size_;
    if (*size < v7) {
      *std::string::size_type size = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 40);
  if (v9)
  {
    uint64_t v10 = SLODWORD(v3[1].__r_.__value_.__r.__words[2]);
    sub_188C80C((unsigned int *)&v3[1].__r_.__value_.__r.__words[2], v10 + v9);
    std::string::pointer data = v3[2].__r_.__value_.__l.__data_;
    LODWORD(v3[1].__r_.__value_.__r.__words[2]) += *(_DWORD *)(a2 + 40);
    uint64_t result = (std::string *)memcpy(&data[4 * v10], *(const void **)(a2 + 48), 4 * *(int *)(a2 + 40));
  }
  int v12 = *(_DWORD *)(a2 + 64);
  if (v12)
  {
    uint64_t v13 = SLODWORD(v3[2].__r_.__value_.__r.__words[2]);
    sub_188C80C((unsigned int *)&v3[2].__r_.__value_.__r.__words[2], v13 + v12);
    std::string::pointer v14 = v3[3].__r_.__value_.__l.__data_;
    LODWORD(v3[2].__r_.__value_.__r.__words[2]) += *(_DWORD *)(a2 + 64);
    uint64_t result = (std::string *)memcpy(&v14[4 * v13], *(const void **)(a2 + 72), 4 * *(int *)(a2 + 64));
  }
  int v15 = *(_DWORD *)(a2 + 88);
  if (v15)
  {
    uint64_t v16 = SLODWORD(v3[3].__r_.__value_.__r.__words[2]);
    sub_188CA54((unsigned int *)&v3[3].__r_.__value_.__r.__words[2], v16 + v15);
    std::string::pointer v17 = v3[4].__r_.__value_.__l.__data_;
    LODWORD(v3[3].__r_.__value_.__r.__words[2]) += *(_DWORD *)(a2 + 88);
    uint64_t result = (std::string *)memcpy(&v17[8 * v16], *(const void **)(a2 + 96), 8 * *(int *)(a2 + 88));
  }
  uint64_t v18 = *(void *)(a2 + 8);
  if (v18)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v18 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_12C60E8()
{
  return 1;
}

void *sub_12C60F0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "Matrix");
}

uint64_t sub_12C6100(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = &off_24A5488;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = a1;
  *(_DWORD *)(result + 56) = 0;
  *(void *)(result + 64) = 0;
  *(void *)(result + 72) = a1;
  *(_DWORD *)(result + 80) = 0;
  *(void *)(result + 88) = 0;
  *(void *)(result + 96) = a1;
  *(_DWORD *)(result + 104) = 0;
  return result;
}

uint64_t sub_12C61CC(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  if ((uint64_t (***)())a1 != &off_2531210 && *(void *)(a1 + 24))
  {
    sub_149FF5C();
    operator delete();
  }
  if (*(void *)(a1 + 8)) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12C6284(uint64_t a1)
{
  sub_12C61CC(a1);

  operator delete();
}

uint64_t sub_12C62BC(uint64_t result)
{
  uint64_t v1 = result;
  if (*(unsigned char *)(result + 16)) {
    uint64_t result = sub_149FF98(*(void *)(result + 24));
  }
  char v3 = *(unsigned char *)(v1 + 8);
  uint64_t v2 = v1 + 8;
  *(_DWORD *)(v2 + 24) = 0;
  *(_DWORD *)(v2 + 8) = 0;
  if (v3)
  {
    return sub_188B4AC((uint64_t *)v2);
  }
  return result;
}

char *sub_12C631C(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v23 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v23, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v23 + 1;
    unsigned int v9 = *v23;
    if (*v23 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v23, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v23 + 2;
      }
    }
    uint64_t v23 = v8;
    if (v9 >> 3 == 2) {
      break;
    }
    if (v9 >> 3 != 1 || v9 != 8) {
      goto LABEL_13;
    }
    v5 |= 2u;
    uint64_t v18 = v8 + 1;
    int v19 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_31;
    }
    int v20 = *v18;
    int v19 = v19 + (v20 << 7) - 128;
    if ((v20 & 0x80000000) == 0)
    {
      uint64_t v18 = v8 + 2;
LABEL_31:
      uint64_t v23 = v18;
      *(_DWORD *)(a1 + 32) = v19;
      goto LABEL_32;
    }
    uint64_t v21 = (char *)sub_188C0D0((uint64_t)v8, v19);
    uint64_t v23 = v21;
    *(_DWORD *)(a1 + 32) = v22;
    if (!v21) {
      goto LABEL_39;
    }
LABEL_32:
    if (sub_11947B8((uint64_t)a3, &v23, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 == 18)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v16 = *(void *)(a1 + 24);
    if (!v16)
    {
      std::string::pointer v17 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v7) {
        std::string::pointer v17 = (void *)*v17;
      }
      uint64_t v16 = sub_14A243C((uint64_t)v17);
      *(void *)(a1 + 24) = v16;
      uint64_t v8 = v23;
    }
    int v15 = sub_12C6500(a3, v16, (unsigned __int8 *)v8);
LABEL_26:
    uint64_t v23 = v15;
    if (!v15) {
      goto LABEL_39;
    }
    goto LABEL_32;
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      std::string::pointer v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      std::string::pointer v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = v23;
    }
    int v15 = (char *)sub_1885AC0(v9, v14, v8, a3);
    goto LABEL_26;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_39:
  uint64_t v23 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v23;
}

char *sub_12C6500(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_14A0014(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_12C6590(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  int v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*a3 <= __dst) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 32);
    char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 24);
    char *v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 40);
    v4[1] = v11;
    if (v11 > 0x7F) {
      int v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      int v12 = v4 + 2;
    }
    int v4 = sub_14A01B4(v10, v12, a3);
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    uint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    uint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_12C671C(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 3) == 0)
  {
    uint64_t result = 0;
    goto LABEL_8;
  }
  if (v2)
  {
    uint64_t v4 = sub_14A02F8(*(void *)(a1 + 24));
    uint64_t result = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t result = 0;
  if ((v2 & 2) != 0) {
LABEL_7:
  }
    result += ((9 * (__clz(*(_DWORD *)(a1 + 32) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_8:
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5)
  {
    unint64_t v6 = v5 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v6 + 31) < 0) {
      uint64_t v7 = *(void *)(v6 + 16);
    }
    else {
      uint64_t v7 = *(unsigned __int8 *)(v6 + 31);
    }
    result += v7;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

std::string *sub_12C67E0(std::string *result, uint64_t a2)
{
  char v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 3) != 0)
  {
    if (v4)
    {
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::pointer data = (std::string *)result[1].__r_.__value_.__l.__data_;
      if (!data)
      {
        std::string::size_type size = v3->__r_.__value_.__l.__size_;
        uint64_t v7 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
        if (size) {
          uint64_t v7 = (void *)*v7;
        }
        std::string::pointer data = (std::string *)sub_14A243C((uint64_t)v7);
        v3[1].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      }
      if (*(void *)(a2 + 24)) {
        unsigned int v8 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        unsigned int v8 = &off_253A320;
      }
      uint64_t result = sub_14A03A8(data, (uint64_t)v8);
    }
    if ((v4 & 2) != 0) {
      LODWORD(v3[1].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 32);
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_12C68B0()
{
  return 1;
}

void *sub_12C68B8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.DebugParameters");
}

uint64_t sub_12C68C8(uint64_t a1)
{
  char v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_9;
    }
  }
  else if (v4)
  {
    goto LABEL_9;
  }
  uint64_t v5 = (void ***)(a1 + 72);
  if (*(uint64_t **)(a1 + 72) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 80) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 80));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_9:
  sub_12D33C4((void *)(a1 + 48));
  sub_12D3344((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12C6998(uint64_t a1)
{
  sub_12C68C8(a1);

  operator delete();
}

uint64_t sub_12C69D0(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    char v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_12C69D0(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  uint64_t v5 = *(unsigned int *)(v1 + 56);
  if ((int)v5 >= 1)
  {
    unint64_t v6 = (uint64_t *)(*(void *)(v1 + 64) + 8);
    do
    {
      uint64_t v7 = *v6++;
      uint64_t result = sub_12C7550(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(v1 + 56) = 0;
  }
  int v8 = *(_DWORD *)(v1 + 16);
  if ((v8 & 3) != 0)
  {
    if (v8)
    {
      unint64_t v9 = *(void *)(v1 + 72) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v9 + 23) < 0)
      {
        **(unsigned char **)unint64_t v9 = 0;
        *(void *)(v9 + 8) = 0;
        if ((v8 & 2) == 0) {
          goto LABEL_19;
        }
        goto LABEL_14;
      }
      *(unsigned char *)unint64_t v9 = 0;
      *(unsigned char *)(v9 + 23) = 0;
    }
    if ((v8 & 2) == 0) {
      goto LABEL_19;
    }
LABEL_14:
    unint64_t v10 = *(void *)(v1 + 80) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v10 + 23) < 0)
    {
      **(unsigned char **)unint64_t v10 = 0;
      *(void *)(v10 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v10 = 0;
      *(unsigned char *)(v10 + 23) = 0;
    }
  }
LABEL_19:
  char v12 = *(unsigned char *)(v1 + 8);
  uint64_t v11 = v1 + 8;
  *(_DWORD *)(v11 + 8) = 0;
  if (v12)
  {
    return sub_188B4AC((uint64_t *)v11);
  }
  return result;
}

uint64_t sub_12C6AE0(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unsigned int v31 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v31, a3[11].i32[1])) {
    return *(void *)v31;
  }
  unint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v7 = (char *)(*(void *)v31 + 1);
    unsigned int v8 = **(unsigned char **)v31;
    if ((char)**(unsigned char **)v31 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180(*(uint64_t *)v31, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (char *)(*(void *)v31 + 2);
      }
    }
    *(void *)unsigned int v31 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 10) {
          goto LABEL_38;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v11 = *(void *)(a1 + 8);
        char v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
        if (v11) {
          char v12 = (uint64_t *)*v12;
        }
        uint64_t v13 = (void *)(a1 + 72);
        goto LABEL_17;
      case 2u:
        if (v8 != 18) {
          goto LABEL_38;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v14 = *(void *)(a1 + 8);
        char v12 = (uint64_t *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
        if (v14) {
          char v12 = (uint64_t *)*v12;
        }
        uint64_t v13 = (void *)(a1 + 80);
LABEL_17:
        unint64_t v15 = (std::string *)sub_1880F84(v13, v12);
        uint64_t v16 = (void *)sub_188C244(v15, *(char **)v31, (uint64_t)a3);
        goto LABEL_45;
      case 3u:
        if (v8 != 26) {
          goto LABEL_38;
        }
        uint64_t v17 = v7 - 1;
        while (1)
        {
          uint64_t v18 = (unsigned __int8 *)(v17 + 1);
          *(void *)unsigned int v31 = v17 + 1;
          int v19 = *(_DWORD **)(a1 + 40);
          if (v19 && (uint64_t v20 = *(int *)(a1 + 32), (int)v20 < *v19))
          {
            *(_DWORD *)(a1 + 32) = v20 + 1;
            uint64_t v21 = *(void *)&v19[2 * v20 + 2];
          }
          else
          {
            int v22 = sub_12C8858(*(void *)(a1 + 24));
            uint64_t v21 = sub_188CDC8(a1 + 24, (uint64_t)v22);
            uint64_t v18 = *(unsigned __int8 **)v31;
          }
          uint64_t v17 = (char *)sub_12C6DE0((uint64_t)a3, v21, v18);
          *(void *)unsigned int v31 = v17;
          if (!v17) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v17 || *v17 != 26) {
            goto LABEL_46;
          }
        }
      case 4u:
        if (v8 != 34) {
          goto LABEL_38;
        }
        uint64_t v23 = v7 - 1;
        while (1)
        {
          unsigned int v24 = (unsigned __int8 *)(v23 + 1);
          *(void *)unsigned int v31 = v23 + 1;
          unsigned int v25 = *(_DWORD **)(a1 + 64);
          if (v25 && (uint64_t v26 = *(int *)(a1 + 56), (int)v26 < *v25))
          {
            *(_DWORD *)(a1 + 56) = v26 + 1;
            uint64_t v27 = *(void *)&v25[2 * v26 + 2];
          }
          else
          {
            int v28 = sub_12C8908(*(void *)(a1 + 48));
            uint64_t v27 = sub_188CDC8(a1 + 48, (uint64_t)v28);
            unsigned int v24 = *(unsigned __int8 **)v31;
          }
          uint64_t v23 = (char *)sub_12C6E70(a3, v27, v24);
          *(void *)unsigned int v31 = v23;
          if (!v23) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v23 || *v23 != 34) {
            goto LABEL_46;
          }
        }
      default:
LABEL_38:
        if (v8) {
          BOOL v29 = (v8 & 7) == 4;
        }
        else {
          BOOL v29 = 1;
        }
        if (!v29)
        {
          if (*v6)
          {
            uint64_t v30 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v30 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v7 = *(char **)v31;
          }
          uint64_t v16 = sub_1885AC0(v8, v30, v7, a3);
LABEL_45:
          *(void *)unsigned int v31 = v16;
          if (!v16) {
            return 0;
          }
LABEL_46:
          if (sub_11947B8((uint64_t)a3, (char **)v31, a3[11].i32[1])) {
            return *(void *)v31;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return *(void *)v31;
    }
  }
}

uint64_t sub_12C6DE0(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0(a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12C6AE0(a2, result, a1);
  }
  ++*(_DWORD *)(a1 + 88);
  if (*(_DWORD *)(a1 + 80)) {
    return 0;
  }
  int v6 = *(_DWORD *)(a1 + 28) + v7;
  *(_DWORD *)(a1 + 28) = v6;
  *(void *)a1 = *(void *)(a1 + 8) + (v6 & (v6 >> 31));
  return result;
}

uint64_t sub_12C6E70(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12C762C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_12C6F00(uint64_t a1, unsigned char *a2, unint64_t *a3)
{
  uint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL), a2);
  }
  if ((v6 & 2) != 0) {
    uint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  int v7 = *(_DWORD *)(a1 + 32);
  if (v7)
  {
    for (int i = 0; i != v7; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      unsigned char *v4 = 26;
      unsigned int v10 = *(_DWORD *)(v9 + 20);
      v4[1] = v10;
      if (v10 > 0x7F) {
        uint64_t v11 = sub_188A9CC(v10, v4 + 1);
      }
      else {
        uint64_t v11 = v4 + 2;
      }
      uint64_t v4 = (unsigned char *)sub_12C6F00(v9, v11, a3);
    }
  }
  int v12 = *(_DWORD *)(a1 + 56);
  if (v12)
  {
    for (int j = 0; j != v12; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v14 = *(void *)(*(void *)(a1 + 64) + 8 * j + 8);
      unsigned char *v4 = 34;
      unsigned int v15 = *(_DWORD *)(v14 + 20);
      v4[1] = v15;
      if (v15 > 0x7F) {
        uint64_t v16 = sub_188A9CC(v15, v4 + 1);
      }
      else {
        uint64_t v16 = v4 + 2;
      }
      uint64_t v4 = (unsigned char *)sub_12C79F0(v14, v16, a3);
    }
  }
  uint64_t v17 = *(void *)(a1 + 8);
  if ((v17 & 1) == 0) {
    return (uint64_t)v4;
  }
  unint64_t v19 = v17 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v19 + 31) < 0)
  {
    uint64_t v20 = *(void **)(v19 + 8);
    uint64_t v21 = *(void *)(v19 + 16);
  }
  else
  {
    uint64_t v20 = (void *)(v19 + 8);
    LODWORD(v21) = *(unsigned __int8 *)(v19 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v21)
  {
    uint64_t v22 = (int)v21;
    memcpy(v4, v20, (int)v21);
    v4 += v22;
    return (uint64_t)v4;
  }

  return sub_188A528(a3, (char *)v20, v21, v4);
}

uint64_t sub_12C710C(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_12C710C(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(int *)(a1 + 56);
  uint64_t v9 = v2 + v8;
  uint64_t v10 = *(void *)(a1 + 64);
  if (v10) {
    uint64_t v11 = (uint64_t *)(v10 + 8);
  }
  else {
    uint64_t v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_12C7C58(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  int v15 = *(_DWORD *)(a1 + 16);
  if ((v15 & 3) != 0)
  {
    if (v15)
    {
      unint64_t v16 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v17 = *(unsigned __int8 *)(v16 + 23);
      uint64_t v18 = *(void *)(v16 + 8);
      if ((v17 & 0x80u) == 0) {
        uint64_t v18 = v17;
      }
      v9 += v18 + ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v15 & 2) != 0)
    {
      unint64_t v19 = *(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v20 = *(unsigned __int8 *)(v19 + 23);
      uint64_t v21 = *(void *)(v19 + 8);
      if ((v20 & 0x80u) == 0) {
        uint64_t v21 = v20;
      }
      v9 += v21 + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  uint64_t v22 = *(void *)(a1 + 8);
  if (v22)
  {
    unint64_t v24 = v22 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v24 + 31) < 0) {
      uint64_t v25 = *(void *)(v24 + 16);
    }
    else {
      uint64_t v25 = *(unsigned __int8 *)(v24 + 31);
    }
    v9 += v25;
  }
  *(_DWORD *)(a1 + 20) = v9;
  return v9;
}

std::string *sub_12C72A0(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = (std::string *)sub_12D34C4((uint64_t *)&v3[1], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2]- LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    uint64_t v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    uint64_t v11 = (std::string **)sub_188CCE4((uint64_t)&v3[2], *(_DWORD *)(a2 + 56));
    uint64_t result = sub_12D3550(v3 + 2, v11, v10, v9, *(_DWORD *)v3[2].__r_.__value_.__r.__words[2] - LODWORD(v3[2].__r_.__value_.__r.__words[1]));
    int v12 = LODWORD(v3[2].__r_.__value_.__r.__words[1]) + v9;
    LODWORD(v3[2].__r_.__value_.__r.__words[1]) = v12;
    uint64_t v13 = (int *)v3[2].__r_.__value_.__r.__words[2];
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 16);
  if ((v14 & 3) != 0)
  {
    if (v14)
    {
      int v15 = (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v17 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v17 = (uint64_t *)*v17;
      }
      uint64_t result = sub_1881DF4((std::string **)&v3[3], v15, v17);
    }
    if ((v14 & 2) != 0)
    {
      uint64_t v18 = (long long *)(*(void *)(a2 + 80) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
      std::string::size_type v19 = v3->__r_.__value_.__l.__size_;
      uint64_t v20 = (uint64_t *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
      if (v19) {
        uint64_t v20 = (uint64_t *)*v20;
      }
      uint64_t result = sub_1881DF4((std::string **)&v3[3].__r_.__value_.__l.__size_, v18, v20);
    }
  }
  uint64_t v21 = *(void *)(a2 + 8);
  if (v21)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v21 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_12C7448()
{
  return 1;
}

void *sub_12C7450@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.DebugResult");
}

uint64_t sub_12C7460(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 72);
  if (*(uint64_t **)(a1 + 72) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  sub_12D33C4(a1 + 48);
  sub_12D3444((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12C7518(uint64_t a1)
{
  sub_12C7460(a1);

  operator delete();
}

uint64_t sub_12C7550(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_12C8074(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  uint64_t v5 = *(unsigned int *)(v1 + 56);
  if ((int)v5 >= 1)
  {
    uint64_t v6 = (uint64_t *)(*(void *)(v1 + 64) + 8);
    do
    {
      uint64_t v7 = *v6++;
      uint64_t result = sub_12C7550(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(v1 + 56) = 0;
  }
  if (*(unsigned char *)(v1 + 16))
  {
    unint64_t v8 = *(void *)(v1 + 72) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v8 + 23) < 0)
    {
      **(unsigned char **)unint64_t v8 = 0;
      *(void *)(v8 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v8 = 0;
      *(unsigned char *)(v8 + 23) = 0;
    }
  }
  char v10 = *(unsigned char *)(v1 + 8);
  uint64_t v9 = v1 + 8;
  *(void *)(v9 + 72) = 0;
  *(_DWORD *)(v9 + 8) = 0;
  if (v10)
  {
    return sub_188B4AC((uint64_t *)v9);
  }
  return result;
}

uint64_t sub_12C762C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v34 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v34, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    unint64_t v8 = (char *)(*(void *)v34 + 1);
    unsigned int v9 = **(unsigned char **)v34;
    if ((char)**(unsigned char **)v34 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unint64_t v8 = (char *)sub_188C180(*(uint64_t *)v34, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unint64_t v8 = (char *)(*(void *)v34 + 2);
      }
    }
    *(void *)uint64_t v34 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_38;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        int v14 = (std::string *)sub_1880F84((void *)(a1 + 72), v13);
        int v15 = (void *)sub_188C244(v14, *(char **)v34, (uint64_t)a3);
        goto LABEL_45;
      case 2u:
        if (v9 != 16) {
          goto LABEL_38;
        }
        v5 |= 2u;
        unint64_t v16 = v8 + 1;
        uint64_t v17 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_17;
        }
        int v18 = *v16;
        uint64_t v17 = v17 + (v18 << 7) - 128;
        if (v18 < 0)
        {
          uint64_t v32 = sub_188C138((uint64_t)v8, v17);
          *(void *)uint64_t v34 = v32;
          *(void *)(a1 + 80) = v33;
          if (!v32) {
            goto LABEL_53;
          }
        }
        else
        {
          unint64_t v16 = v8 + 2;
LABEL_17:
          *(void *)uint64_t v34 = v16;
          *(void *)(a1 + 80) = v17;
        }
        goto LABEL_46;
      case 3u:
        if (v9 != 26) {
          goto LABEL_38;
        }
        std::string::size_type v19 = v8 - 1;
        while (1)
        {
          uint64_t v20 = (unsigned __int8 *)(v19 + 1);
          *(void *)uint64_t v34 = v19 + 1;
          uint64_t v21 = *(_DWORD **)(a1 + 40);
          if (v21 && (uint64_t v22 = *(int *)(a1 + 32), (int)v22 < *v21))
          {
            *(_DWORD *)(a1 + 32) = v22 + 1;
            uint64_t v23 = *(void *)&v21[2 * v22 + 2];
          }
          else
          {
            unint64_t v24 = sub_12C89B8(*(void *)(a1 + 24));
            uint64_t v23 = sub_188CDC8(a1 + 24, (uint64_t)v24);
            uint64_t v20 = *(unsigned __int8 **)v34;
          }
          std::string::size_type v19 = (char *)sub_12C7960(a3, v23, v20);
          *(void *)uint64_t v34 = v19;
          if (!v19) {
            goto LABEL_53;
          }
          if (*(void *)a3 <= (unint64_t)v19 || *v19 != 26) {
            goto LABEL_46;
          }
        }
      case 4u:
        if (v9 != 34) {
          goto LABEL_38;
        }
        uint64_t v25 = v8 - 1;
        while (1)
        {
          *(void *)uint64_t v34 = v25 + 1;
          uint64_t v26 = *(_DWORD **)(a1 + 64);
          if (v26 && (uint64_t v27 = *(int *)(a1 + 56), (int)v27 < *v26))
          {
            *(_DWORD *)(a1 + 56) = v27 + 1;
            uint64_t v28 = *(void *)&v26[2 * v27 + 2];
          }
          else
          {
            BOOL v29 = sub_12C8908(*(void *)(a1 + 48));
            uint64_t v28 = sub_188CDC8(a1 + 48, (uint64_t)v29);
          }
          uint64_t v25 = (char *)sub_12C6E70(a3, v28);
          *(void *)uint64_t v34 = v25;
          if (!v25) {
            goto LABEL_53;
          }
          if (*(void *)a3 <= (unint64_t)v25 || *v25 != 34) {
            goto LABEL_46;
          }
        }
      default:
LABEL_38:
        if (v9) {
          BOOL v30 = (v9 & 7) == 4;
        }
        else {
          BOOL v30 = 1;
        }
        if (!v30)
        {
          if (*v7)
          {
            unsigned int v31 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            unsigned int v31 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unint64_t v8 = *(char **)v34;
          }
          int v15 = sub_1885AC0(v9, v31, v8, a3);
LABEL_45:
          *(void *)uint64_t v34 = v15;
          if (!v15) {
            goto LABEL_53;
          }
LABEL_46:
          if (sub_11947B8((uint64_t)a3, (char **)v34, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_53:
        }
          *(void *)uint64_t v34 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v34;
    }
  }
}

uint64_t sub_12C7960(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12C8130(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_12C79F0(uint64_t a1, unsigned char *a2, unint64_t *a3)
{
  uint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL), a2);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v7 = *(void *)(a1 + 80);
    unsigned char *v4 = 16;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v10 = *(_DWORD *)(a1 + 32);
  if (v10)
  {
    for (int i = 0; i != v10; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v12 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      unsigned char *v4 = 26;
      unsigned int v13 = *(_DWORD *)(v12 + 20);
      v4[1] = v13;
      if (v13 > 0x7F) {
        int v14 = sub_188A9CC(v13, v4 + 1);
      }
      else {
        int v14 = v4 + 2;
      }
      uint64_t v4 = sub_12C83B4(v12, (unint64_t)v14, a3);
    }
  }
  int v15 = *(_DWORD *)(a1 + 56);
  if (v15)
  {
    for (int j = 0; j != v15; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v17 = *(void *)(*(void *)(a1 + 64) + 8 * j + 8);
      unsigned char *v4 = 34;
      unsigned int v18 = *(_DWORD *)(v17 + 20);
      v4[1] = v18;
      if (v18 > 0x7F) {
        std::string::size_type v19 = sub_188A9CC(v18, v4 + 1);
      }
      else {
        std::string::size_type v19 = v4 + 2;
      }
      uint64_t v4 = (unsigned char *)sub_12C79F0(v17, v19, a3);
    }
  }
  uint64_t v20 = *(void *)(a1 + 8);
  if ((v20 & 1) == 0) {
    return (uint64_t)v4;
  }
  unint64_t v22 = v20 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v22 + 31) < 0)
  {
    uint64_t v23 = *(void **)(v22 + 8);
    uint64_t v24 = *(void *)(v22 + 16);
  }
  else
  {
    uint64_t v23 = (void *)(v22 + 8);
    LODWORD(v24) = *(unsigned __int8 *)(v22 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v24)
  {
    uint64_t v25 = (int)v24;
    memcpy(v4, v23, (int)v24);
    v4 += v25;
    return (uint64_t)v4;
  }

  return sub_188A528(a3, (char *)v23, v24, v4);
}

uint64_t sub_12C7C58(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_12C8548(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(int *)(a1 + 56);
  uint64_t v9 = v2 + v8;
  uint64_t v10 = *(void *)(a1 + 64);
  if (v10) {
    unsigned int v11 = (uint64_t *)(v10 + 8);
  }
  else {
    unsigned int v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_12C7C58(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  int v15 = *(_DWORD *)(a1 + 16);
  if ((v15 & 3) != 0)
  {
    if (v15)
    {
      unint64_t v16 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v17 = *(unsigned __int8 *)(v16 + 23);
      uint64_t v18 = *(void *)(v16 + 8);
      if ((v17 & 0x80u) == 0) {
        uint64_t v18 = v17;
      }
      v9 += v18 + ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v15 & 2) != 0) {
      v9 += ((9 * (__clz(*(void *)(a1 + 80) | 1) ^ 0x3F) + 73) >> 6) + 1;
    }
  }
  uint64_t v19 = *(void *)(a1 + 8);
  if (v19)
  {
    unint64_t v21 = v19 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v21 + 31) < 0) {
      uint64_t v22 = *(void *)(v21 + 16);
    }
    else {
      uint64_t v22 = *(unsigned __int8 *)(v21 + 31);
    }
    v9 += v22;
  }
  *(_DWORD *)(a1 + 20) = v9;
  return v9;
}

std::string *sub_12C7DCC(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = sub_12D35DC(v3 + 1, v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2] - LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    uint64_t v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  uint64_t v9 = *(unsigned int *)(a2 + 56);
  if (v9)
  {
    uint64_t v10 = *(void *)(a2 + 64) + 8;
    uint64_t v11 = sub_188CCE4((uint64_t)&v3[2], *(_DWORD *)(a2 + 56));
    uint64_t result = (std::string *)sub_12D3550(&v3[2], v11, v10, v9, (*(_DWORD *)v3[2].__r_.__value_.__r.__words[2]- LODWORD(v3[2].__r_.__value_.__r.__words[1])));
    int v12 = LODWORD(v3[2].__r_.__value_.__r.__words[1]) + v9;
    LODWORD(v3[2].__r_.__value_.__r.__words[1]) = v12;
    uint64_t v13 = (_DWORD *)v3[2].__r_.__value_.__r.__words[2];
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 16);
  if ((v14 & 3) != 0)
  {
    if (v14)
    {
      int v15 = (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v17 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v17 = (uint64_t *)*v17;
      }
      uint64_t result = sub_1881DF4((std::string **)&v3[3], v15, v17);
    }
    if ((v14 & 2) != 0) {
      v3[3].__r_.__value_.__l.__size_ = *(void *)(a2 + 80);
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= v14;
  }
  uint64_t v18 = *(void *)(a2 + 8);
  if (v18)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v18 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_12C7F58()
{
  return 1;
}

void *sub_12C7F60@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.LogGroup");
}

uint64_t sub_12C7F70(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_11;
    }
  }
  else if (v4)
  {
    goto LABEL_11;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(uint64_t **)(a1 + 40) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 40));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_11:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12C803C(uint64_t a1)
{
  sub_12C7F70(a1);

  operator delete();
}

uint64_t sub_12C8074(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 7) == 0) {
    goto LABEL_17;
  }
  if (v1)
  {
    unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)unint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
      if ((v1 & 2) != 0) {
        goto LABEL_10;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
      if ((v1 & 2) != 0) {
        goto LABEL_10;
      }
    }
LABEL_4:
    if ((v1 & 4) == 0) {
      goto LABEL_17;
    }
LABEL_14:
    unint64_t v4 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v4 + 23) < 0)
    {
      **(unsigned char **)unint64_t v4 = 0;
      *(void *)(v4 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v4 = 0;
      *(unsigned char *)(v4 + 23) = 0;
    }
    goto LABEL_17;
  }
  if ((v1 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_10:
  unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v3 + 23) < 0)
  {
    **(unsigned char **)unint64_t v3 = 0;
    *(void *)(v3 + 8) = 0;
    if ((v1 & 4) == 0) {
      goto LABEL_17;
    }
    goto LABEL_14;
  }
  *(unsigned char *)unint64_t v3 = 0;
  *(unsigned char *)(v3 + 23) = 0;
  if ((v1 & 4) != 0) {
    goto LABEL_14;
  }
LABEL_17:
  char v6 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(void *)(result + 40) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v6) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_12C8130(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v26 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v26, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (char *)(*(void *)v26 + 1);
    unsigned int v9 = **(unsigned char **)v26;
    if ((char)**(unsigned char **)v26 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180(*(uint64_t *)v26, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (char *)(*(void *)v26 + 2);
      }
    }
    *(void *)uint64_t v26 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_27;
        }
        v5 |= 8u;
        int v12 = v8 + 1;
        uint64_t v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        uint64_t v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          int v12 = v8 + 2;
LABEL_13:
          *(void *)uint64_t v26 = v12;
          *(void *)(a1 + 48) = v13;
          goto LABEL_35;
        }
        uint64_t v24 = sub_188C138((uint64_t)v8, v13);
        *(void *)uint64_t v26 = v24;
        *(void *)(a1 + 48) = v25;
        if (v24) {
          goto LABEL_35;
        }
        goto LABEL_42;
      case 2u:
        if (v9 != 18) {
          goto LABEL_27;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v15 = *(void *)(a1 + 8);
        unint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          unint64_t v16 = (uint64_t *)*v16;
        }
        uint64_t v17 = (void *)(a1 + 24);
        goto LABEL_26;
      case 3u:
        if (v9 != 26) {
          goto LABEL_27;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v18 = *(void *)(a1 + 8);
        unint64_t v16 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
        if (v18) {
          unint64_t v16 = (uint64_t *)*v16;
        }
        uint64_t v17 = (void *)(a1 + 32);
        goto LABEL_26;
      case 4u:
        if (v9 != 34) {
          goto LABEL_27;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v19 = *(void *)(a1 + 8);
        unint64_t v16 = (uint64_t *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
        if (v19) {
          unint64_t v16 = (uint64_t *)*v16;
        }
        uint64_t v17 = (void *)(a1 + 40);
LABEL_26:
        uint64_t v20 = (std::string *)sub_1880F84(v17, v16);
        unint64_t v21 = (void *)sub_188C244(v20, *(char **)v26, (uint64_t)a3);
        goto LABEL_34;
      default:
LABEL_27:
        if (v9) {
          BOOL v22 = (v9 & 7) == 4;
        }
        else {
          BOOL v22 = 1;
        }
        if (!v22)
        {
          if (*v7)
          {
            uint64_t v23 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v23 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = *(char **)v26;
          }
          unint64_t v21 = sub_1885AC0(v9, v23, v8, a3);
LABEL_34:
          *(void *)uint64_t v26 = v21;
          if (!v21) {
            goto LABEL_42;
          }
LABEL_35:
          if (sub_11947B8((uint64_t)a3, (char **)v26, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_42:
        }
          *(void *)uint64_t v26 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v26;
    }
  }
}

unsigned char *sub_12C83B4(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  unint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 8) != 0)
  {
    if (*a3 <= __dst) {
      unint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(void *)(a1 + 48);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    unint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
    if ((v6 & 2) == 0)
    {
LABEL_10:
      if ((v6 & 4) == 0) {
        goto LABEL_12;
      }
      goto LABEL_11;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_10;
  }
  unint64_t v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) != 0) {
LABEL_11:
  }
    unint64_t v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL), v4);
LABEL_12:
  uint64_t v10 = *(void *)(a1 + 8);
  if ((v10 & 1) == 0) {
    return v4;
  }
  unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v12 + 31) < 0)
  {
    uint64_t v13 = *(void **)(v12 + 8);
    uint64_t v14 = *(void *)(v12 + 16);
  }
  else
  {
    uint64_t v13 = (void *)(v12 + 8);
    LODWORD(v14) = *(unsigned __int8 *)(v12 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v14)
  {
    uint64_t v15 = (int)v14;
    memcpy(v4, v13, (int)v14);
    v4 += v15;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v13, v14, v4);
}

uint64_t sub_12C8548(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 0xF) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_15;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
  uint64_t v5 = *(void *)(v3 + 8);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = v4;
  }
  uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    unint64_t v6 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v1 & 4) == 0)
  {
    if ((v1 & 8) == 0) {
      goto LABEL_15;
    }
    goto LABEL_14;
  }
  unint64_t v11 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v12 = *(unsigned __int8 *)(v11 + 23);
  uint64_t v13 = *(void *)(v11 + 8);
  if ((v12 & 0x80u) == 0) {
    uint64_t v13 = v12;
  }
  v2 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 8) != 0) {
LABEL_14:
  }
    v2 += ((9 * (__clz(*(void *)(a1 + 48) | 1) ^ 0x3F) + 73) >> 6) + 1;
LABEL_15:
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v14 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v14 + 31) < 0) {
      uint64_t v15 = *(void *)(v14 + 16);
    }
    else {
      uint64_t v15 = *(unsigned __int8 *)(v14 + 31);
    }
    v2 += v15;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_12C8694(std::string *result, uint64_t a2)
{
  unint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0xF) != 0)
  {
    if (v4)
    {
      unint64_t v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      uint64_t v7 = (std::string **)&result[1];
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v9 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v9 = (uint64_t *)*v9;
      }
      uint64_t result = sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_18;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    uint64_t v10 = (long long *)(*(void *)(a2 + 32) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    std::string::size_type v11 = v3->__r_.__value_.__l.__size_;
    uint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
    if (v11) {
      uint64_t v12 = (uint64_t *)*v12;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[1].__r_.__value_.__l.__size_, v10, v12);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0)
      {
LABEL_7:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
        goto LABEL_8;
      }
LABEL_6:
      v3[2].__r_.__value_.__r.__words[0] = *(void *)(a2 + 48);
      goto LABEL_7;
    }
LABEL_18:
    uint64_t v13 = (long long *)(*(void *)(a2 + 40) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
    std::string::size_type v14 = v3->__r_.__value_.__l.__size_;
    uint64_t v15 = (uint64_t *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
    if (v14) {
      uint64_t v15 = (uint64_t *)*v15;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[1].__r_.__value_.__r.__words[2], v13, v15);
    if ((v4 & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_8:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_12C87C4()
{
  return 1;
}

void *sub_12C87CC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.LogEntry");
}

uint64_t sub_12C87DC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = &off_24A5508;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

void *sub_12C8858(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = &off_24A5588;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = a1;
  result[7] = 0;
  result[8] = 0;
  result[9] = &qword_2550250;
  result[10] = &qword_2550250;
  return result;
}

void *sub_12C8908(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = &off_24A5608;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = a1;
  result[7] = 0;
  result[8] = 0;
  result[9] = &qword_2550250;
  result[10] = 0;
  return result;
}

void *sub_12C89B8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = &off_24A5688;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = &qword_2550250;
  result[5] = &qword_2550250;
  result[6] = 0;
  return result;
}

uint64_t sub_12C8A40(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_15103AC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_12C8AD0(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 7) == 0) {
    goto LABEL_17;
  }
  if (v1)
  {
    unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)unint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
      if ((v1 & 2) != 0) {
        goto LABEL_10;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
      if ((v1 & 2) != 0) {
        goto LABEL_10;
      }
    }
LABEL_4:
    if ((v1 & 4) == 0) {
      goto LABEL_17;
    }
LABEL_14:
    unint64_t v4 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v4 + 23) < 0)
    {
      **(unsigned char **)unint64_t v4 = 0;
      *(void *)(v4 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v4 = 0;
      *(unsigned char *)(v4 + 23) = 0;
    }
    goto LABEL_17;
  }
  if ((v1 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_10:
  unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v3 + 23) < 0)
  {
    **(unsigned char **)unint64_t v3 = 0;
    *(void *)(v3 + 8) = 0;
    if ((v1 & 4) == 0) {
      goto LABEL_17;
    }
    goto LABEL_14;
  }
  *(unsigned char *)unint64_t v3 = 0;
  *(unsigned char *)(v3 + 23) = 0;
  if ((v1 & 4) != 0) {
    goto LABEL_14;
  }
LABEL_17:
  char v6 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 40) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v6) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_12C8B8C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12CCE88(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

std::string *sub_12C8C1C(std::string *result, uint64_t a2)
{
  unint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0xF) != 0)
  {
    if (v4)
    {
      int v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      int v7 = (std::string **)&result[1];
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v9 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v9 = (uint64_t *)*v9;
      }
      uint64_t result = sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_18;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    uint64_t v10 = (long long *)(*(void *)(a2 + 32) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    std::string::size_type v11 = v3->__r_.__value_.__l.__size_;
    uint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
    if (v11) {
      uint64_t v12 = (uint64_t *)*v12;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[1].__r_.__value_.__l.__size_, v10, v12);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0)
      {
LABEL_7:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
        goto LABEL_8;
      }
LABEL_6:
      LODWORD(v3[2].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 48);
      goto LABEL_7;
    }
LABEL_18:
    uint64_t v13 = (long long *)(*(void *)(a2 + 40) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
    std::string::size_type v14 = v3->__r_.__value_.__l.__size_;
    uint64_t v15 = (uint64_t *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
    if (v14) {
      uint64_t v15 = (uint64_t *)*v15;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[1].__r_.__value_.__r.__words[2], v13, v15);
    if ((v4 & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_8:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_12C8D4C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_146C944(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_12C8DDC(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 3) != 0) {
    *(void *)(a1 + 24) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_12C8E00(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12C8F50(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

BOOL sub_12C8E90(uint64_t a1)
{
  return (~*(_DWORD *)(a1 + 16) & 3) == 0;
}

void *sub_12C8EA4(void *a1)
{
  unint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12C8F18(void *a1)
{
  sub_12C8EA4(a1);

  operator delete();
}

char *sub_12C8F50(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v25 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v25 + 1;
    unsigned int v9 = *v25;
    if (*v25 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v25, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v25 + 2;
      }
    }
    uint64_t v25 = v8;
    if (v9 >> 3 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_13;
    }
    v5 |= 2u;
    uint64_t v15 = v8 + 1;
    int v16 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_25;
    }
    int v17 = *v15;
    int v16 = v16 + (v17 << 7) - 128;
    if ((v17 & 0x80000000) == 0)
    {
      uint64_t v15 = v8 + 2;
LABEL_25:
      uint64_t v25 = v15;
      *(_DWORD *)(a1 + 28) = v16;
      goto LABEL_30;
    }
    unint64_t v21 = (char *)sub_188C0D0((uint64_t)v8, v16);
    uint64_t v25 = v21;
    *(_DWORD *)(a1 + 28) = v22;
    if (!v21) {
      goto LABEL_39;
    }
LABEL_30:
    if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 >> 3 == 1 && v9 == 8)
  {
    v5 |= 1u;
    uint64_t v18 = v8 + 1;
    int v19 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_29;
    }
    int v20 = *v18;
    int v19 = v19 + (v20 << 7) - 128;
    if ((v20 & 0x80000000) == 0)
    {
      uint64_t v18 = v8 + 2;
LABEL_29:
      uint64_t v25 = v18;
      *(_DWORD *)(a1 + 24) = v19;
      goto LABEL_30;
    }
    uint64_t v23 = (char *)sub_188C0D0((uint64_t)v8, v19);
    uint64_t v25 = v23;
    *(_DWORD *)(a1 + 24) = v24;
    if (!v23) {
      goto LABEL_39;
    }
    goto LABEL_30;
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      std::string::size_type v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      std::string::size_type v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = v25;
    }
    uint64_t v25 = (char *)sub_1885AC0(v9, v14, v8, a3);
    if (!v25) {
      goto LABEL_39;
    }
    goto LABEL_30;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_39:
  uint64_t v25 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v25;
}

unsigned char *sub_12C9140(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 28);
    unsigned char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    int v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    int v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_12C92E4(_DWORD *a1)
{
  int v2 = a1[4];
  if (v2)
  {
    uint64_t result = ((9 * (__clz(a1[6] | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      return result;
    }
    goto LABEL_5;
  }
  uint64_t result = 0;
  if ((v2 & 2) != 0) {
LABEL_5:
  }
    result += ((9 * (__clz(a1[7] | 1) ^ 0x1F) + 73) >> 6) + 1;
  return result;
}

uint64_t sub_12C9348(uint64_t a1)
{
  if ((~*(_DWORD *)(a1 + 16) & 3) != 0) {
    uint64_t result = sub_12C92E4((_DWORD *)a1);
  }
  else {
    uint64_t result = ((9 * (__clz(*(_DWORD *)(a1 + 24) | 1) ^ 0x1F) + 73) >> 6)
  }
           + ((9 * (__clz(*(_DWORD *)(a1 + 28) | 1) ^ 0x1F) + 73) >> 6)
           + 2;
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v4 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v5 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v5 = *(unsigned __int8 *)(v4 + 31);
    }
    result += v5;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

void *sub_12C93EC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "ag_geo.proto.FractionMapPoint");
}

uint64_t sub_12C93FC(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  unint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  if ((uint64_t (***)())a1 != &off_25312B0)
  {
    uint64_t v5 = *(void **)(a1 + 24);
    if (v5)
    {
      sub_12C8EA4(v5);
      operator delete();
    }
    int v6 = *(void **)(a1 + 32);
    if (v6)
    {
      sub_12C8EA4(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12C94CC(uint64_t a1)
{
  sub_12C93FC(a1);

  operator delete();
}

uint64_t sub_12C9504(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 3) != 0)
  {
    if (v2) {
      uint64_t result = sub_12C8DDC(*(void *)(result + 24));
    }
    if ((v2 & 2) != 0) {
      uint64_t result = sub_12C8DDC(*(void *)(v1 + 32));
    }
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_12C9574(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v18 = a2;
  if (sub_11947B8((uint64_t)a3, &v18, a3[11].i32[1])) {
    return v18;
  }
  int v6 = (void *)(a1 + 8);
  while (1)
  {
    unsigned int v7 = v18 + 1;
    unsigned int v8 = *v18;
    if (*v18 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        unsigned int v7 = (char *)sub_188C180((uint64_t)v18, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        unsigned int v7 = v18 + 2;
      }
    }
    uint64_t v18 = v7;
    if (v8 >> 3 == 2)
    {
      if (v8 == 18)
      {
        *(_DWORD *)(a1 + 16) |= 2u;
        unint64_t v15 = *(void **)(a1 + 32);
        if (!v15)
        {
          int v16 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            int v16 = (void *)*v16;
          }
          unint64_t v15 = sub_12CCA5C((uint64_t)v16);
          *(void *)(a1 + 32) = v15;
LABEL_29:
          unsigned int v7 = v18;
        }
LABEL_30:
        std::string::size_type v14 = sub_12C8E00(a3, (uint64_t)v15, (unsigned __int8 *)v7);
        goto LABEL_31;
      }
    }
    else if (v8 >> 3 == 1 && v8 == 10)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      unint64_t v15 = *(void **)(a1 + 24);
      if (!v15)
      {
        uint64_t v17 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          uint64_t v17 = (void *)*v17;
        }
        unint64_t v15 = sub_12CCA5C((uint64_t)v17);
        *(void *)(a1 + 24) = v15;
        goto LABEL_29;
      }
      goto LABEL_30;
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unsigned int v7 = v18;
    }
    std::string::size_type v14 = (char *)sub_1885AC0(v8, v13, v7, a3);
LABEL_31:
    uint64_t v18 = v14;
    if (!v14) {
      return 0;
    }
    if (sub_11947B8((uint64_t)a3, &v18, a3[11].i32[1])) {
      return v18;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v18;
  }
  return 0;
}

unsigned char *sub_12C9728(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    unsigned char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    char v4 = sub_12C9140(v7, (unint64_t)v9, a3);
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 32);
    unsigned char *v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 20);
    v4[1] = v11;
    if (v11 > 0x7F) {
      unsigned int v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      unsigned int v12 = v4 + 2;
    }
    char v4 = sub_12C9140(v10, (unint64_t)v12, a3);
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    int v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    int v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_12C98A8(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      return v3;
    }
    goto LABEL_5;
  }
  uint64_t v4 = sub_12C9348(*(void *)(a1 + 24));
  uint64_t v3 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((*(_DWORD *)(a1 + 16) & 2) != 0)
  {
LABEL_5:
    uint64_t v5 = sub_12C9348(*(void *)(a1 + 32));
    v3 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  return v3;
}

uint64_t sub_12C993C(uint64_t a1)
{
  if ((~*(_DWORD *)(a1 + 16) & 3) != 0)
  {
    uint64_t result = sub_12C98A8(a1);
  }
  else
  {
    uint64_t v2 = sub_12C9348(*(void *)(a1 + 24));
    uint64_t v3 = sub_12C9348(*(void *)(a1 + 32));
    uint64_t result = v2 + v3 + ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5)
  {
    unint64_t v6 = v5 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v6 + 31) < 0) {
      uint64_t v7 = *(void *)(v6 + 16);
    }
    else {
      uint64_t v7 = *(unsigned __int8 *)(v6 + 31);
    }
    result += v7;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

std::string *sub_12C9A04(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 3) != 0)
  {
    if (v4)
    {
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::pointer data = (std::string *)result[1].__r_.__value_.__l.__data_;
      if (!data)
      {
        std::string::size_type size = v3->__r_.__value_.__l.__size_;
        uint64_t v7 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
        if (size) {
          uint64_t v7 = (void *)*v7;
        }
        std::string::pointer data = (std::string *)sub_12CCA5C((uint64_t)v7);
        v3[1].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      }
      if (*(void *)(a2 + 24)) {
        unsigned int v8 = *(void *(****)(void *))(a2 + 24);
      }
      else {
        unsigned int v8 = &off_2531290;
      }
      uint64_t result = sub_117EF04(data, (uint64_t)v8);
    }
    if ((v4 & 2) != 0)
    {
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
      unsigned int v9 = (std::string *)v3[1].__r_.__value_.__l.__size_;
      if (!v9)
      {
        std::string::size_type v10 = v3->__r_.__value_.__l.__size_;
        unsigned int v11 = (void *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
        if (v10) {
          unsigned int v11 = (void *)*v11;
        }
        unsigned int v9 = (std::string *)sub_12CCA5C((uint64_t)v11);
        v3[1].__r_.__value_.__l.__size_ = (std::string::size_type)v9;
      }
      if (*(void *)(a2 + 32)) {
        unsigned int v12 = *(void *(****)(void *))(a2 + 32);
      }
      else {
        unsigned int v12 = &off_2531290;
      }
      uint64_t result = sub_117EF04(v9, (uint64_t)v12);
    }
  }
  uint64_t v13 = *(void *)(a2 + 8);
  if (v13)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v13 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

BOOL sub_12C9B00(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  return (~v1 & 3) == 0
      && ((v1 & 1) == 0 || (~*(_DWORD *)(*(void *)(a1 + 24) + 16) & 3) == 0)
      && ((v1 & 2) == 0 || (~*(_DWORD *)(*(void *)(a1 + 32) + 16) & 3) == 0);
}

void *sub_12C9B50@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "ag_geo.proto.FractionMapBounds");
}

void *sub_12C9B60(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_12D3668(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12C9BE0(void *a1)
{
  sub_12C9B60(a1);

  operator delete();
}

uint64_t sub_12C9C18(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 24);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 32) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_12C9504(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 24) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = (uint64_t *)(v1 + 8);
  if (v6)
  {
    return sub_188B4AC(v5);
  }
  return result;
}

char *sub_12C9C94(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v19 = a2;
  if ((sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v5 = (void *)(a1 + 8);
    while (1)
    {
      char v6 = v19 + 1;
      unsigned int v7 = *v19;
      if (*v19 < 0)
      {
        unsigned int v8 = v7 + (*v6 << 7);
        unsigned int v7 = v8 - 128;
        if (*v6 < 0)
        {
          char v6 = (char *)sub_188C180((uint64_t)v19, v8 - 128);
          unsigned int v7 = v9;
        }
        else
        {
          char v6 = v19 + 2;
        }
      }
      int v19 = v6;
      if (v7 == 10)
      {
        unsigned int v12 = v6 - 1;
        while (1)
        {
          uint64_t v13 = (unsigned __int8 *)(v12 + 1);
          int v19 = v12 + 1;
          std::string::size_type v14 = *(_DWORD **)(a1 + 32);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 24), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 24) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            uint64_t v17 = sub_12CCAD4(*(void *)(a1 + 16));
            uint64_t v16 = sub_188CDC8(a1 + 16, (uint64_t)v17);
            uint64_t v13 = (unsigned __int8 *)v19;
          }
          unsigned int v12 = sub_12C9E34(a3, v16, v13);
          int v19 = v12;
          if (!v12) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_24;
          }
        }
      }
      if (!v7 || (v7 & 7) == 4) {
        break;
      }
      if (*v5)
      {
        unsigned int v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        unsigned int v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        char v6 = v19;
      }
      int v19 = (char *)sub_1885AC0(v7, v11, v6, a3);
      if (!v19) {
        return 0;
      }
LABEL_24:
      if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
        return v19;
      }
    }
    if (v6)
    {
      a3[10].i32[0] = v7 - 1;
      return v19;
    }
    return 0;
  }
  return v19;
}

char *sub_12C9E34(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12C9574(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_12C9EC4(uint64_t a1, char *__dst, _DWORD *a3)
{
  int v6 = *(_DWORD *)(a1 + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        std::string::size_type v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        std::string::size_type v10 = __dst + 2;
      }
      __dst = sub_12C9728(v8, (unint64_t)v10, a3);
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return __dst;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    std::string::size_type v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    std::string::size_type v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(__dst, v14, (int)v15);
    __dst += v16;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, __dst);
}

uint64_t sub_12CA008(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_12C993C(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 40) = v2;
  return v2;
}

std::string *sub_12CA0B8(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 32) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result->__r_.__value_.__r.__words[2], *(_DWORD *)(a2 + 24));
    uint64_t result = sub_12D36E8((std::string *)&v3->__r_.__value_.__r.__words[2], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__l.__size_ - LODWORD(v3[1].__r_.__value_.__l.__data_));
    int v7 = LODWORD(v3[1].__r_.__value_.__l.__data_) + v4;
    LODWORD(v3[1].__r_.__value_.__l.__data_) = v7;
    std::string::size_type size = (int *)v3[1].__r_.__value_.__l.__size_;
    if (*size < v7) {
      *std::string::size_type size = v7;
    }
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

BOOL sub_12CA188(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 24);
  uint64_t v2 = *(void *)(a1 + 32);
  do
  {
    int v3 = v1;
    if ((int)v1 < 1) {
      break;
    }
    uint64_t v4 = v1 - 1;
    BOOL v5 = sub_12C9B00(*(void *)(v2 + 8 * v1));
    uint64_t v1 = v4;
  }
  while (v5);
  return v3 < 1;
}

void *sub_12CA1DC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "ag_geo.proto.FractionMapMultiBounds");
}

void *sub_12CA1EC(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12CA260(void *a1)
{
  sub_12CA1EC(a1);

  operator delete();
}

uint64_t sub_12CA298(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((_BYTE)v1)
  {
    *(_OWORD *)(a1 + 72) = 0u;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
  }
  if ((v1 & 0x1F00) != 0)
  {
    *(void *)(a1 + 120) = 0;
    *(_OWORD *)(a1 + 104) = 0u;
    *(_OWORD *)(a1 + 88) = 0u;
  }
  char v3 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v3) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_12CA2E4(uint64_t a1, char *a2, int32x2_t *a3)
{
  v79 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v79, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = v79 + 1;
    unsigned int v9 = *v79;
    if (*v79 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v79, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v79 + 2;
      }
    }
    v79 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_74;
        }
        v5 |= 1u;
        unsigned int v12 = v8 + 1;
        uint64_t v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        uint64_t v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          unsigned int v12 = v8 + 2;
LABEL_13:
          v79 = v12;
          *(void *)(a1 + 24) = v13;
          goto LABEL_81;
        }
        long long v53 = (char *)sub_188C138((uint64_t)v8, v13);
        v79 = v53;
        *(void *)(a1 + 24) = v54;
        if (v53) {
          goto LABEL_81;
        }
        goto LABEL_112;
      case 2u:
        if (v9 != 16) {
          goto LABEL_74;
        }
        v5 |= 2u;
        uint64_t v15 = v8 + 1;
        uint64_t v16 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_18;
        }
        int v17 = *v15;
        uint64_t v16 = v16 + (v17 << 7) - 128;
        if (v17 < 0)
        {
          int v55 = (char *)sub_188C138((uint64_t)v8, v16);
          v79 = v55;
          *(void *)(a1 + 32) = v56;
          if (!v55) {
            goto LABEL_112;
          }
        }
        else
        {
          uint64_t v15 = v8 + 2;
LABEL_18:
          v79 = v15;
          *(void *)(a1 + 32) = v16;
        }
        goto LABEL_81;
      case 3u:
        if (v9 != 24) {
          goto LABEL_74;
        }
        v5 |= 4u;
        uint64_t v18 = v8 + 1;
        uint64_t v19 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_23;
        }
        int v20 = *v18;
        uint64_t v19 = v19 + (v20 << 7) - 128;
        if (v20 < 0)
        {
          v57 = (char *)sub_188C138((uint64_t)v8, v19);
          v79 = v57;
          *(void *)(a1 + 40) = v58;
          if (!v57) {
            goto LABEL_112;
          }
        }
        else
        {
          uint64_t v18 = v8 + 2;
LABEL_23:
          v79 = v18;
          *(void *)(a1 + 40) = v19;
        }
        goto LABEL_81;
      case 4u:
        if (v9 != 32) {
          goto LABEL_74;
        }
        v5 |= 8u;
        unint64_t v21 = v8 + 1;
        uint64_t v22 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_28;
        }
        int v23 = *v21;
        uint64_t v22 = v22 + (v23 << 7) - 128;
        if (v23 < 0)
        {
          v59 = (char *)sub_188C138((uint64_t)v8, v22);
          v79 = v59;
          *(void *)(a1 + 48) = v60;
          if (!v59) {
            goto LABEL_112;
          }
        }
        else
        {
          unint64_t v21 = v8 + 2;
LABEL_28:
          v79 = v21;
          *(void *)(a1 + 48) = v22;
        }
        goto LABEL_81;
      case 5u:
        if (v9 != 40) {
          goto LABEL_74;
        }
        v5 |= 0x10u;
        int v24 = v8 + 1;
        uint64_t v25 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_33;
        }
        int v26 = *v24;
        uint64_t v25 = v25 + (v26 << 7) - 128;
        if (v26 < 0)
        {
          v61 = (char *)sub_188C138((uint64_t)v8, v25);
          v79 = v61;
          *(void *)(a1 + 56) = v62;
          if (!v61) {
            goto LABEL_112;
          }
        }
        else
        {
          int v24 = v8 + 2;
LABEL_33:
          v79 = v24;
          *(void *)(a1 + 56) = v25;
        }
        goto LABEL_81;
      case 6u:
        if (v9 != 48) {
          goto LABEL_74;
        }
        v5 |= 0x20u;
        uint64_t v27 = v8 + 1;
        uint64_t v28 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_38;
        }
        int v29 = *v27;
        uint64_t v28 = v28 + (v29 << 7) - 128;
        if (v29 < 0)
        {
          v63 = (char *)sub_188C138((uint64_t)v8, v28);
          v79 = v63;
          *(void *)(a1 + 64) = v64;
          if (!v63) {
            goto LABEL_112;
          }
        }
        else
        {
          uint64_t v27 = v8 + 2;
LABEL_38:
          v79 = v27;
          *(void *)(a1 + 64) = v28;
        }
        goto LABEL_81;
      case 7u:
        if (v9 != 56) {
          goto LABEL_74;
        }
        v5 |= 0x40u;
        BOOL v30 = v8 + 1;
        uint64_t v31 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_43;
        }
        int v32 = *v30;
        uint64_t v31 = v31 + (v32 << 7) - 128;
        if (v32 < 0)
        {
          v65 = (char *)sub_188C138((uint64_t)v8, v31);
          v79 = v65;
          *(void *)(a1 + 72) = v66;
          if (!v65) {
            goto LABEL_112;
          }
        }
        else
        {
          BOOL v30 = v8 + 2;
LABEL_43:
          v79 = v30;
          *(void *)(a1 + 72) = v31;
        }
        goto LABEL_81;
      case 8u:
        if (v9 != 64) {
          goto LABEL_74;
        }
        v5 |= 0x80u;
        uint64_t v33 = v8 + 1;
        uint64_t v34 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_48;
        }
        int v35 = *v33;
        uint64_t v34 = v34 + (v35 << 7) - 128;
        if (v35 < 0)
        {
          v67 = (char *)sub_188C138((uint64_t)v8, v34);
          v79 = v67;
          *(void *)(a1 + 80) = v68;
          if (!v67) {
            goto LABEL_112;
          }
        }
        else
        {
          uint64_t v33 = v8 + 2;
LABEL_48:
          v79 = v33;
          *(void *)(a1 + 80) = v34;
        }
        goto LABEL_81;
      case 9u:
        if (v9 != 72) {
          goto LABEL_74;
        }
        v5 |= 0x100u;
        uint64_t v36 = v8 + 1;
        uint64_t v37 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_53;
        }
        int v38 = *v36;
        uint64_t v37 = v37 + (v38 << 7) - 128;
        if (v38 < 0)
        {
          v69 = (char *)sub_188C138((uint64_t)v8, v37);
          v79 = v69;
          *(void *)(a1 + 88) = v70;
          if (!v69) {
            goto LABEL_112;
          }
        }
        else
        {
          uint64_t v36 = v8 + 2;
LABEL_53:
          v79 = v36;
          *(void *)(a1 + 88) = v37;
        }
        goto LABEL_81;
      case 0xAu:
        if (v9 != 80) {
          goto LABEL_74;
        }
        v5 |= 0x200u;
        uint64_t v39 = v8 + 1;
        uint64_t v40 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_58;
        }
        int v41 = *v39;
        uint64_t v40 = v40 + (v41 << 7) - 128;
        if (v41 < 0)
        {
          v71 = (char *)sub_188C138((uint64_t)v8, v40);
          v79 = v71;
          *(void *)(a1 + 96) = v72;
          if (!v71) {
            goto LABEL_112;
          }
        }
        else
        {
          uint64_t v39 = v8 + 2;
LABEL_58:
          v79 = v39;
          *(void *)(a1 + 96) = v40;
        }
        goto LABEL_81;
      case 0xBu:
        if (v9 != 88) {
          goto LABEL_74;
        }
        v5 |= 0x400u;
        unsigned int v42 = v8 + 1;
        uint64_t v43 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_63;
        }
        int v44 = *v42;
        uint64_t v43 = v43 + (v44 << 7) - 128;
        if (v44 < 0)
        {
          v73 = (char *)sub_188C138((uint64_t)v8, v43);
          v79 = v73;
          *(void *)(a1 + 104) = v74;
          if (!v73) {
            goto LABEL_112;
          }
        }
        else
        {
          unsigned int v42 = v8 + 2;
LABEL_63:
          v79 = v42;
          *(void *)(a1 + 104) = v43;
        }
        goto LABEL_81;
      case 0xFu:
        if (v9 != 120) {
          goto LABEL_74;
        }
        v5 |= 0x800u;
        v45 = v8 + 1;
        uint64_t v46 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_68;
        }
        int v47 = *v45;
        uint64_t v46 = v46 + (v47 << 7) - 128;
        if (v47 < 0)
        {
          v75 = (char *)sub_188C138((uint64_t)v8, v46);
          v79 = v75;
          *(void *)(a1 + 112) = v76;
          if (!v75) {
            goto LABEL_112;
          }
        }
        else
        {
          v45 = v8 + 2;
LABEL_68:
          v79 = v45;
          *(void *)(a1 + 112) = v46;
        }
        goto LABEL_81;
      case 0x10u:
        if (v9 != 128) {
          goto LABEL_74;
        }
        v5 |= 0x1000u;
        BOOL v48 = v8 + 1;
        uint64_t v49 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_73;
        }
        int v50 = *v48;
        uint64_t v49 = v49 + (v50 << 7) - 128;
        if (v50 < 0)
        {
          v77 = (char *)sub_188C138((uint64_t)v8, v49);
          v79 = v77;
          *(void *)(a1 + 120) = v78;
          if (!v77) {
            goto LABEL_112;
          }
        }
        else
        {
          BOOL v48 = v8 + 2;
LABEL_73:
          v79 = v48;
          *(void *)(a1 + 120) = v49;
        }
        goto LABEL_81;
      default:
LABEL_74:
        if (v9) {
          BOOL v51 = (v9 & 7) == 4;
        }
        else {
          BOOL v51 = 1;
        }
        if (!v51)
        {
          if (*v7)
          {
            v52 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            v52 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = v79;
          }
          v79 = (char *)sub_1885AC0(v9, v52, v8, a3);
          if (!v79) {
            goto LABEL_112;
          }
LABEL_81:
          if (sub_11947B8((uint64_t)a3, &v79, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_112:
        }
          v79 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v79;
    }
  }
}

unsigned char *sub_12CA928(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(void *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(void *)(a1 + 32);
    unsigned char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v13 = *(void *)(a1 + 40);
    unsigned char *v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unint64_t v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v16 = *(void *)(a1 + 48);
    unsigned char *v4 = 32;
    v4[1] = v16;
    if (v16 > 0x7F)
    {
      v4[1] = v16 | 0x80;
      unint64_t v17 = v16 >> 7;
      v4[2] = v16 >> 7;
      v4 += 3;
      if (v16 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v18 = v17 >> 14;
          v17 >>= 7;
          *v4++ = v17;
        }
        while (v18);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v19 = *(void *)(a1 + 56);
    unsigned char *v4 = 40;
    v4[1] = v19;
    if (v19 > 0x7F)
    {
      v4[1] = v19 | 0x80;
      unint64_t v20 = v19 >> 7;
      v4[2] = v19 >> 7;
      v4 += 3;
      if (v19 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v21 = v20 >> 14;
          v20 >>= 7;
          *v4++ = v20;
        }
        while (v21);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x20) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v22 = *(void *)(a1 + 64);
    unsigned char *v4 = 48;
    v4[1] = v22;
    if (v22 > 0x7F)
    {
      v4[1] = v22 | 0x80;
      unint64_t v23 = v22 >> 7;
      v4[2] = v22 >> 7;
      v4 += 3;
      if (v22 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v24 = v23 >> 14;
          v23 >>= 7;
          *v4++ = v23;
        }
        while (v24);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x40) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v25 = *(void *)(a1 + 72);
    unsigned char *v4 = 56;
    v4[1] = v25;
    if (v25 > 0x7F)
    {
      v4[1] = v25 | 0x80;
      unint64_t v26 = v25 >> 7;
      v4[2] = v25 >> 7;
      v4 += 3;
      if (v25 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v27 = v26 >> 14;
          v26 >>= 7;
          *v4++ = v26;
        }
        while (v27);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x80) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v28 = *(void *)(a1 + 80);
    unsigned char *v4 = 64;
    v4[1] = v28;
    if (v28 > 0x7F)
    {
      v4[1] = v28 | 0x80;
      unint64_t v29 = v28 >> 7;
      v4[2] = v28 >> 7;
      v4 += 3;
      if (v28 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v30 = v29 >> 14;
          v29 >>= 7;
          *v4++ = v29;
        }
        while (v30);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x100) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v31 = *(void *)(a1 + 88);
    unsigned char *v4 = 72;
    v4[1] = v31;
    if (v31 > 0x7F)
    {
      v4[1] = v31 | 0x80;
      unint64_t v32 = v31 >> 7;
      v4[2] = v31 >> 7;
      v4 += 3;
      if (v31 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v33 = v32 >> 14;
          v32 >>= 7;
          *v4++ = v32;
        }
        while (v33);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x200) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v34 = *(void *)(a1 + 96);
    unsigned char *v4 = 80;
    v4[1] = v34;
    if (v34 > 0x7F)
    {
      v4[1] = v34 | 0x80;
      unint64_t v35 = v34 >> 7;
      v4[2] = v34 >> 7;
      v4 += 3;
      if (v34 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v36 = v35 >> 14;
          v35 >>= 7;
          *v4++ = v35;
        }
        while (v36);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x400) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v37 = *(void *)(a1 + 104);
    unsigned char *v4 = 88;
    v4[1] = v37;
    if (v37 > 0x7F)
    {
      v4[1] = v37 | 0x80;
      unint64_t v38 = v37 >> 7;
      v4[2] = v37 >> 7;
      v4 += 3;
      if (v37 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v39 = v38 >> 14;
          v38 >>= 7;
          *v4++ = v38;
        }
        while (v39);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x800) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v40 = *(void *)(a1 + 112);
    unsigned char *v4 = 120;
    v4[1] = v40;
    if (v40 > 0x7F)
    {
      v4[1] = v40 | 0x80;
      unint64_t v41 = v40 >> 7;
      v4[2] = v40 >> 7;
      v4 += 3;
      if (v40 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v42 = v41 >> 14;
          v41 >>= 7;
          *v4++ = v41;
        }
        while (v42);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x1000) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v43 = *(void *)(a1 + 120);
    *(_WORD *)uint64_t v4 = 384;
    v4[2] = v43;
    if (v43 > 0x7F)
    {
      v4[2] = v43 | 0x80;
      unint64_t v44 = v43 >> 7;
      v4[3] = v43 >> 7;
      v4 += 4;
      if (v43 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v45 = v44 >> 14;
          v44 >>= 7;
          *v4++ = v44;
        }
        while (v45);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  uint64_t v46 = *(void *)(a1 + 8);
  if ((v46 & 1) == 0) {
    return v4;
  }
  unint64_t v48 = v46 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v48 + 31) < 0)
  {
    uint64_t v49 = *(void **)(v48 + 8);
    uint64_t v50 = *(void *)(v48 + 16);
  }
  else
  {
    uint64_t v49 = (void *)(v48 + 8);
    LODWORD(v50) = *(unsigned __int8 *)(v48 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v50)
  {
    uint64_t v51 = (int)v50;
    memcpy(v4, v49, (int)v50);
    v4 += v51;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v49, v50, v4);
}

unint64_t sub_12CB020(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if (!(_BYTE)v1)
  {
    unint64_t v2 = 0;
    goto LABEL_15;
  }
  if (v1)
  {
    unint64_t v2 = ((9 * (__clz(*(void *)(a1 + 24) | 1) ^ 0x3F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  unint64_t v2 = 0;
  if ((v1 & 2) != 0) {
LABEL_7:
  }
    v2 += ((9 * (__clz(*(void *)(a1 + 32) | 1) ^ 0x3F) + 73) >> 6) + 1;
LABEL_8:
  if ((v1 & 4) != 0)
  {
    v2 += ((9 * (__clz(*(void *)(a1 + 40) | 1) ^ 0x3F) + 73) >> 6) + 1;
    if ((v1 & 8) == 0)
    {
LABEL_10:
      if ((v1 & 0x10) == 0) {
        goto LABEL_11;
      }
      goto LABEL_26;
    }
  }
  else if ((v1 & 8) == 0)
  {
    goto LABEL_10;
  }
  v2 += ((9 * (__clz(*(void *)(a1 + 48) | 1) ^ 0x3F) + 73) >> 6) + 1;
  if ((v1 & 0x10) == 0)
  {
LABEL_11:
    if ((v1 & 0x20) == 0) {
      goto LABEL_12;
    }
    goto LABEL_27;
  }
LABEL_26:
  v2 += ((9 * (__clz(*(void *)(a1 + 56) | 1) ^ 0x3F) + 73) >> 6) + 1;
  if ((v1 & 0x20) == 0)
  {
LABEL_12:
    if ((v1 & 0x40) == 0) {
      goto LABEL_13;
    }
    goto LABEL_28;
  }
LABEL_27:
  v2 += ((9 * (__clz(*(void *)(a1 + 64) | 1) ^ 0x3F) + 73) >> 6) + 1;
  if ((v1 & 0x40) == 0)
  {
LABEL_13:
    if ((v1 & 0x80) == 0) {
      goto LABEL_15;
    }
    goto LABEL_14;
  }
LABEL_28:
  v2 += ((9 * (__clz(*(void *)(a1 + 72) | 1) ^ 0x3F) + 73) >> 6) + 1;
  if ((v1 & 0x80) != 0) {
LABEL_14:
  }
    v2 += ((9 * (__clz(*(void *)(a1 + 80) | 1) ^ 0x3F) + 73) >> 6) + 1;
LABEL_15:
  if ((v1 & 0x1F00) == 0) {
    goto LABEL_22;
  }
  if ((v1 & 0x100) != 0)
  {
    v2 += ((9 * (__clz(*(void *)(a1 + 88) | 1) ^ 0x3F) + 73) >> 6) + 1;
    if ((v1 & 0x200) == 0)
    {
LABEL_18:
      if ((v1 & 0x400) == 0) {
        goto LABEL_19;
      }
      goto LABEL_32;
    }
  }
  else if ((v1 & 0x200) == 0)
  {
    goto LABEL_18;
  }
  v2 += ((9 * (__clz(*(void *)(a1 + 96) | 1) ^ 0x3F) + 73) >> 6) + 1;
  if ((v1 & 0x400) == 0)
  {
LABEL_19:
    if ((v1 & 0x800) == 0) {
      goto LABEL_20;
    }
    goto LABEL_33;
  }
LABEL_32:
  v2 += ((9 * (__clz(*(void *)(a1 + 104) | 1) ^ 0x3F) + 73) >> 6) + 1;
  if ((v1 & 0x800) == 0)
  {
LABEL_20:
    if ((v1 & 0x1000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_21;
  }
LABEL_33:
  v2 += ((9 * (__clz(*(void *)(a1 + 112) | 1) ^ 0x3F) + 73) >> 6) + 1;
  if ((v1 & 0x1000) != 0) {
LABEL_21:
  }
    v2 += ((9 * (__clz(*(void *)(a1 + 120) | 1) ^ 0x3F) + 73) >> 6) + 2;
LABEL_22:
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v5 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    v2 += v6;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_12CB280(std::string *result, uint64_t a2)
{
  int v2 = *(_DWORD *)(a2 + 16);
  if ((_BYTE)v2)
  {
    if (v2)
    {
      result[1].__r_.__value_.__r.__words[0] = *(void *)(a2 + 24);
      if ((v2 & 2) == 0)
      {
LABEL_4:
        if ((v2 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_24;
      }
    }
    else if ((v2 & 2) == 0)
    {
      goto LABEL_4;
    }
    result[1].__r_.__value_.__l.__size_ = *(void *)(a2 + 32);
    if ((v2 & 4) == 0)
    {
LABEL_5:
      if ((v2 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_25;
    }
LABEL_24:
    result[1].__r_.__value_.__r.__words[2] = *(void *)(a2 + 40);
    if ((v2 & 8) == 0)
    {
LABEL_6:
      if ((v2 & 0x10) == 0) {
        goto LABEL_7;
      }
      goto LABEL_26;
    }
LABEL_25:
    result[2].__r_.__value_.__r.__words[0] = *(void *)(a2 + 48);
    if ((v2 & 0x10) == 0)
    {
LABEL_7:
      if ((v2 & 0x20) == 0) {
        goto LABEL_8;
      }
      goto LABEL_27;
    }
LABEL_26:
    result[2].__r_.__value_.__l.__size_ = *(void *)(a2 + 56);
    if ((v2 & 0x20) == 0)
    {
LABEL_8:
      if ((v2 & 0x40) == 0) {
        goto LABEL_9;
      }
      goto LABEL_28;
    }
LABEL_27:
    result[2].__r_.__value_.__r.__words[2] = *(void *)(a2 + 64);
    if ((v2 & 0x40) == 0)
    {
LABEL_9:
      if ((v2 & 0x80) == 0)
      {
LABEL_11:
        LODWORD(result->__r_.__value_.__r.__words[2]) |= v2;
        goto LABEL_12;
      }
LABEL_10:
      result[3].__r_.__value_.__l.__size_ = *(void *)(a2 + 80);
      goto LABEL_11;
    }
LABEL_28:
    result[3].__r_.__value_.__r.__words[0] = *(void *)(a2 + 72);
    if ((v2 & 0x80) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
LABEL_12:
  if ((v2 & 0x1F00) == 0) {
    goto LABEL_20;
  }
  if ((v2 & 0x100) != 0)
  {
    result[3].__r_.__value_.__r.__words[2] = *(void *)(a2 + 88);
    if ((v2 & 0x200) == 0)
    {
LABEL_15:
      if ((v2 & 0x400) == 0) {
        goto LABEL_16;
      }
      goto LABEL_32;
    }
  }
  else if ((v2 & 0x200) == 0)
  {
    goto LABEL_15;
  }
  result[4].__r_.__value_.__r.__words[0] = *(void *)(a2 + 96);
  if ((v2 & 0x400) == 0)
  {
LABEL_16:
    if ((v2 & 0x800) == 0) {
      goto LABEL_17;
    }
LABEL_33:
    result[4].__r_.__value_.__r.__words[2] = *(void *)(a2 + 112);
    if ((v2 & 0x1000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_18;
  }
LABEL_32:
  result[4].__r_.__value_.__l.__size_ = *(void *)(a2 + 104);
  if ((v2 & 0x800) != 0) {
    goto LABEL_33;
  }
LABEL_17:
  if ((v2 & 0x1000) != 0) {
LABEL_18:
  }
    result[5].__r_.__value_.__r.__words[0] = *(void *)(a2 + 120);
LABEL_19:
  LODWORD(result->__r_.__value_.__r.__words[2]) |= v2;
LABEL_20:
  uint64_t v3 = *(void *)(a2 + 8);
  if (v3) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v3 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_12CB398()
{
  return 1;
}

void *sub_12CB3A0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "ag_geo.proto.StructuredAddressGeo");
}

uint64_t sub_12CB3B0(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_11;
    }
  }
  else if (v4)
  {
    goto LABEL_11;
  }
  unint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(uint64_t **)(a1 + 40) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 40));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_11:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12CB47C(uint64_t a1)
{
  sub_12CB3B0(a1);

  operator delete();
}

uint64_t sub_12CB4B4(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 7) != 0)
  {
    if ((v1 & 1) == 0)
    {
      if ((v1 & 2) == 0) {
        goto LABEL_4;
      }
LABEL_10:
      unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v3 + 23) < 0)
      {
        **(unsigned char **)unint64_t v3 = 0;
        *(void *)(v3 + 8) = 0;
        if ((v1 & 4) == 0) {
          goto LABEL_17;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v3 = 0;
        *(unsigned char *)(v3 + 23) = 0;
        if ((v1 & 4) == 0) {
          goto LABEL_17;
        }
      }
      goto LABEL_14;
    }
    unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)unint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
      if ((v1 & 2) != 0) {
        goto LABEL_10;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
      if ((v1 & 2) != 0) {
        goto LABEL_10;
      }
    }
LABEL_4:
    if ((v1 & 4) == 0) {
      goto LABEL_17;
    }
LABEL_14:
    unint64_t v4 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v4 + 23) < 0)
    {
      **(unsigned char **)unint64_t v4 = 0;
      *(void *)(v4 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v4 = 0;
      *(unsigned char *)(v4 + 23) = 0;
    }
  }
LABEL_17:
  if ((v1 & 0x78) != 0)
  {
    *(void *)(a1 + 48) = 0;
    *(void *)(a1 + 56) = 0;
    *(void *)(a1 + 64) = 0;
  }
  char v6 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v6) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_12CB57C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unint64_t v41 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v41, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    unint64_t v8 = (char *)(*(void *)v41 + 1);
    unsigned int v9 = **(unsigned char **)v41;
    if ((char)**(unsigned char **)v41 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unint64_t v8 = (char *)sub_188C180(*(uint64_t *)v41, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unint64_t v8 = (char *)(*(void *)v41 + 2);
      }
    }
    *(void *)unint64_t v41 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_42;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 8);
        unint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          unint64_t v13 = (uint64_t *)*v13;
        }
        unint64_t v14 = (void *)(a1 + 24);
        goto LABEL_26;
      case 2u:
        if (v9 != 18) {
          goto LABEL_42;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v15 = *(void *)(a1 + 8);
        unint64_t v13 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          unint64_t v13 = (uint64_t *)*v13;
        }
        unint64_t v14 = (void *)(a1 + 32);
        goto LABEL_26;
      case 3u:
        if (v9 != 24) {
          goto LABEL_42;
        }
        v5 |= 0x10u;
        unint64_t v17 = v8 + 1;
        LODWORD(v16) = *v8;
        if ((v16 & 0x80) == 0) {
          goto LABEL_21;
        }
        int v18 = *v17;
        uint64_t v16 = v16 + (v18 << 7) - 128;
        if (v18 < 0)
        {
          uint64_t v33 = sub_188C138((uint64_t)v8, v16);
          *(void *)unint64_t v41 = v33;
          *(_DWORD *)(a1 + 56) = v34;
          if (!v33) {
            goto LABEL_63;
          }
        }
        else
        {
          unint64_t v17 = v8 + 2;
LABEL_21:
          *(void *)unint64_t v41 = v17;
          *(_DWORD *)(a1 + 56) = v16;
        }
        goto LABEL_50;
      case 4u:
        if (v9 != 34) {
          goto LABEL_42;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v19 = *(void *)(a1 + 8);
        unint64_t v13 = (uint64_t *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
        if (v19) {
          unint64_t v13 = (uint64_t *)*v13;
        }
        unint64_t v14 = (void *)(a1 + 40);
LABEL_26:
        unint64_t v20 = (std::string *)sub_1880F84(v14, v13);
        unint64_t v21 = (void *)sub_188C244(v20, *(char **)v41, (uint64_t)a3);
        goto LABEL_49;
      case 5u:
        if (v9 != 40) {
          goto LABEL_42;
        }
        v5 |= 8u;
        unint64_t v22 = v8 + 1;
        uint64_t v23 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_31;
        }
        int v24 = *v22;
        uint64_t v23 = v23 + (v24 << 7) - 128;
        if (v24 < 0)
        {
          uint64_t v35 = sub_188C138((uint64_t)v8, v23);
          *(void *)unint64_t v41 = v35;
          *(void *)(a1 + 48) = v36;
          if (!v35) {
            goto LABEL_63;
          }
        }
        else
        {
          unint64_t v22 = v8 + 2;
LABEL_31:
          *(void *)unint64_t v41 = v22;
          *(void *)(a1 + 48) = v23;
        }
        goto LABEL_50;
      case 6u:
        if (v9 != 48) {
          goto LABEL_42;
        }
        v5 |= 0x40u;
        unint64_t v25 = v8 + 1;
        uint64_t v26 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_36;
        }
        int v27 = *v25;
        uint64_t v26 = v26 + (v27 << 7) - 128;
        if (v27 < 0)
        {
          uint64_t v37 = sub_188C138((uint64_t)v8, v26);
          *(void *)unint64_t v41 = v37;
          *(void *)(a1 + 64) = v38;
          if (!v37) {
            goto LABEL_63;
          }
        }
        else
        {
          unint64_t v25 = v8 + 2;
LABEL_36:
          *(void *)unint64_t v41 = v25;
          *(void *)(a1 + 64) = v26;
        }
        goto LABEL_50;
      case 7u:
        if (v9 != 56) {
          goto LABEL_42;
        }
        v5 |= 0x20u;
        unint64_t v29 = v8 + 1;
        LODWORD(v28) = *v8;
        if ((v28 & 0x80) == 0) {
          goto LABEL_41;
        }
        int v30 = *v29;
        uint64_t v28 = v28 + (v30 << 7) - 128;
        if (v30 < 0)
        {
          uint64_t v39 = sub_188C138((uint64_t)v8, v28);
          *(void *)unint64_t v41 = v39;
          *(_DWORD *)(a1 + 60) = v40;
          if (!v39) {
            goto LABEL_63;
          }
        }
        else
        {
          unint64_t v29 = v8 + 2;
LABEL_41:
          *(void *)unint64_t v41 = v29;
          *(_DWORD *)(a1 + 60) = v28;
        }
        goto LABEL_50;
      default:
LABEL_42:
        if (v9) {
          BOOL v31 = (v9 & 7) == 4;
        }
        else {
          BOOL v31 = 1;
        }
        if (!v31)
        {
          if (*v7)
          {
            unint64_t v32 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            unint64_t v32 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unint64_t v8 = *(char **)v41;
          }
          unint64_t v21 = sub_1885AC0(v9, v32, v8, a3);
LABEL_49:
          *(void *)unint64_t v41 = v21;
          if (!v21) {
            goto LABEL_63;
          }
LABEL_50:
          if (sub_11947B8((uint64_t)a3, (char **)v41, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_63:
        }
          *(void *)unint64_t v41 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v41;
    }
  }
}

unsigned char *sub_12CB918(uint64_t a1, unsigned char *__dst, void *a3)
{
  unint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    unint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 0x10) == 0) {
        goto LABEL_13;
      }
      goto LABEL_7;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  unint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x10) == 0) {
    goto LABEL_13;
  }
LABEL_7:
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  unint64_t v7 = *(int *)(a1 + 56);
  unsigned char *v4 = 24;
  v4[1] = v7;
  if (v7 > 0x7F)
  {
    v4[1] = v7 | 0x80;
    unint64_t v8 = v7 >> 7;
    v4[2] = v7 >> 7;
    v4 += 3;
    if (v7 >= 0x4000)
    {
      do
      {
        *(v4 - 1) |= 0x80u;
        unint64_t v9 = v8 >> 14;
        v8 >>= 7;
        *v4++ = v8;
      }
      while (v9);
    }
  }
  else
  {
    v4 += 2;
  }
LABEL_13:
  if ((v6 & 4) != 0) {
    unint64_t v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(void *)(a1 + 48);
    unsigned char *v4 = 40;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x40) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v13 = *(void *)(a1 + 64);
    unsigned char *v4 = 48;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unint64_t v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v16 = *(int *)(a1 + 60);
    unsigned char *v4 = 56;
    v4[1] = v16;
    if (v16 > 0x7F)
    {
      v4[1] = v16 | 0x80;
      unint64_t v17 = v16 >> 7;
      v4[2] = v16 >> 7;
      v4 += 3;
      if (v16 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v18 = v17 >> 14;
          v17 >>= 7;
          *v4++ = v17;
        }
        while (v18);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v19 = *(void *)(a1 + 8);
  if ((v19 & 1) == 0) {
    return v4;
  }
  unint64_t v21 = v19 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v21 + 31) < 0)
  {
    unint64_t v22 = *(void **)(v21 + 8);
    uint64_t v23 = *(void *)(v21 + 16);
  }
  else
  {
    unint64_t v22 = (void *)(v21 + 8);
    LODWORD(v23) = *(unsigned __int8 *)(v21 + 31);
  }
  if (*a3 - (void)v4 >= (int)v23)
  {
    uint64_t v24 = (int)v23;
    memcpy(v4, v22, (int)v23);
    v4 += v24;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v22, v23, v4);
}

uint64_t sub_12CBC20(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 0x7F) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_18;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
  uint64_t v5 = *(void *)(v3 + 8);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = v4;
  }
  uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    unint64_t v6 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v1 & 4) != 0)
  {
    unint64_t v11 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v12 = *(unsigned __int8 *)(v11 + 23);
    uint64_t v13 = *(void *)(v11 + 8);
    if ((v12 & 0x80u) == 0) {
      uint64_t v13 = v12;
    }
    v2 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 8) == 0)
    {
LABEL_14:
      if ((v1 & 0x10) == 0) {
        goto LABEL_15;
      }
      goto LABEL_24;
    }
  }
  else if ((v1 & 8) == 0)
  {
    goto LABEL_14;
  }
  v2 += ((9 * (__clz(*(void *)(a1 + 48) | 1) ^ 0x3F) + 73) >> 6) + 1;
  if ((v1 & 0x10) == 0)
  {
LABEL_15:
    if ((v1 & 0x20) == 0) {
      goto LABEL_16;
    }
    goto LABEL_28;
  }
LABEL_24:
  int v14 = *(_DWORD *)(a1 + 56);
  if (v14 < 0) {
    uint64_t v15 = 11;
  }
  else {
    uint64_t v15 = ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v2 += v15;
  if ((v1 & 0x20) == 0)
  {
LABEL_16:
    if ((v1 & 0x40) == 0) {
      goto LABEL_18;
    }
    goto LABEL_17;
  }
LABEL_28:
  int v16 = *(_DWORD *)(a1 + 60);
  if (v16 < 0) {
    uint64_t v17 = 11;
  }
  else {
    uint64_t v17 = ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v2 += v17;
  if ((v1 & 0x40) != 0) {
LABEL_17:
  }
    v2 += ((9 * (__clz(*(void *)(a1 + 64) | 1) ^ 0x3F) + 73) >> 6) + 1;
LABEL_18:
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v18 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v18 + 31) < 0) {
      uint64_t v19 = *(void *)(v18 + 16);
    }
    else {
      uint64_t v19 = *(unsigned __int8 *)(v18 + 31);
    }
    v2 += v19;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_12CBE04(std::string *result, uint64_t a2)
{
  unint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0x7F) != 0)
  {
    if (v4)
    {
      unint64_t v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      uint64_t v7 = (std::string **)&result[1];
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v9 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v9 = (uint64_t *)*v9;
      }
      uint64_t result = sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_21;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    unint64_t v10 = (long long *)(*(void *)(a2 + 32) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    std::string::size_type v11 = v3->__r_.__value_.__l.__size_;
    uint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
    if (v11) {
      uint64_t v12 = (uint64_t *)*v12;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[1].__r_.__value_.__l.__size_, v10, v12);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_24;
    }
LABEL_21:
    uint64_t v13 = (long long *)(*(void *)(a2 + 40) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
    std::string::size_type v14 = v3->__r_.__value_.__l.__size_;
    uint64_t v15 = (uint64_t *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
    if (v14) {
      uint64_t v15 = (uint64_t *)*v15;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[1].__r_.__value_.__r.__words[2], v13, v15);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0) {
        goto LABEL_7;
      }
      goto LABEL_25;
    }
LABEL_24:
    v3[2].__r_.__value_.__r.__words[0] = *(void *)(a2 + 48);
    if ((v4 & 0x10) == 0)
    {
LABEL_7:
      if ((v4 & 0x20) == 0) {
        goto LABEL_8;
      }
      goto LABEL_26;
    }
LABEL_25:
    LODWORD(v3[2].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 56);
    if ((v4 & 0x20) == 0)
    {
LABEL_8:
      if ((v4 & 0x40) == 0)
      {
LABEL_10:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
        goto LABEL_11;
      }
LABEL_9:
      v3[2].__r_.__value_.__r.__words[2] = *(void *)(a2 + 64);
      goto LABEL_10;
    }
LABEL_26:
    HIDWORD(v3[2].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 60);
    if ((v4 & 0x40) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
LABEL_11:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_12CBF64()
{
  return 1;
}

void *sub_12CBF6C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "ag_geo.proto.CountryCodeInfo");
}

uint64_t sub_12CBF7C(uint64_t a1)
{
  unint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_12CC000((uint64_t (***)())a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

uint64_t (***sub_12CC000(uint64_t (***result)()))()
{
  if (result != &off_25313D0)
  {
    int v1 = result;
    uint64_t v2 = result[3];
    if (v2)
    {
      sub_12C8EA4(v2);
      operator delete();
    }
    uint64_t v3 = (uint64_t)v1[4];
    if (v3)
    {
      sub_12CB3B0(v3);
      operator delete();
    }
    int v4 = v1[5];
    if (v4)
    {
      sub_12CA1EC(v4);
      operator delete();
    }
    uint64_t result = (uint64_t (***)())v1[6];
    if (result)
    {
      sub_146C908();
      operator delete();
    }
  }
  return result;
}

void sub_12CC0CC(uint64_t a1)
{
  sub_12CBF7C(a1);

  operator delete();
}

uint64_t sub_12CC104(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 0xF) == 0) {
    goto LABEL_7;
  }
  if ((v2 & 1) == 0)
  {
    if ((v2 & 2) == 0) {
      goto LABEL_4;
    }
LABEL_12:
    uint64_t result = sub_12CB4B4(*(void *)(v1 + 32));
    if ((v2 & 4) == 0)
    {
LABEL_5:
      if ((v2 & 8) == 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
    goto LABEL_13;
  }
  uint64_t result = sub_12C8DDC(*(void *)(result + 24));
  if ((v2 & 2) != 0) {
    goto LABEL_12;
  }
LABEL_4:
  if ((v2 & 4) == 0) {
    goto LABEL_5;
  }
LABEL_13:
  uint64_t result = sub_12CA298(*(void *)(v1 + 40));
  if ((v2 & 8) != 0) {
LABEL_6:
  }
    uint64_t result = sub_140CD94(*(void *)(v1 + 48));
LABEL_7:
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_12CC19C(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v24 = a2;
  if (sub_11947B8((uint64_t)a3, &v24, a3[11].i32[1])) {
    return v24;
  }
  unint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v7 = v24 + 1;
    unsigned int v8 = *v24;
    if (*v24 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v24, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v24 + 2;
      }
    }
    uint64_t v24 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 10) {
          goto LABEL_33;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        std::string::size_type v11 = *(void **)(a1 + 24);
        if (!v11)
        {
          uint64_t v12 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v12 = (void *)*v12;
          }
          std::string::size_type v11 = sub_12CCA5C((uint64_t)v12);
          *(void *)(a1 + 24) = v11;
          uint64_t v7 = v24;
        }
        uint64_t v13 = sub_12C8E00(a3, (uint64_t)v11, (unsigned __int8 *)v7);
        goto LABEL_40;
      case 2u:
        if (v8 != 18) {
          goto LABEL_33;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        std::string::size_type v14 = *(void **)(a1 + 32);
        if (!v14)
        {
          uint64_t v15 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v15 = (void *)*v15;
          }
          std::string::size_type v14 = sub_12CCC78((uint64_t)v15);
          *(void *)(a1 + 32) = v14;
          uint64_t v7 = v24;
        }
        uint64_t v13 = (char *)sub_12CC42C(a3, (uint64_t)v14, (unsigned __int8 *)v7);
        goto LABEL_40;
      case 3u:
        if (v8 != 26) {
          goto LABEL_33;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v16 = *(void *)(a1 + 40);
        if (!v16)
        {
          uint64_t v17 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v17 = (void *)*v17;
          }
          sub_12CCBF0((uint64_t)v17);
          uint64_t v16 = v18;
          *(void *)(a1 + 40) = v18;
          uint64_t v7 = v24;
        }
        uint64_t v13 = sub_123AEE4(a3, v16, (unsigned __int8 *)v7);
        goto LABEL_40;
      case 4u:
        if (v8 != 34) {
          goto LABEL_33;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v19 = *(void *)(a1 + 48);
        if (!v19)
        {
          unint64_t v20 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            unint64_t v20 = (void *)*v20;
          }
          sub_1479294((uint64_t)v20);
          uint64_t v19 = v21;
          *(void *)(a1 + 48) = v21;
          uint64_t v7 = v24;
        }
        uint64_t v13 = (char *)sub_12C8D4C(a3, v19, (unsigned __int8 *)v7);
        goto LABEL_40;
      default:
LABEL_33:
        if (v8) {
          BOOL v22 = (v8 & 7) == 4;
        }
        else {
          BOOL v22 = 1;
        }
        if (!v22)
        {
          if (*v6)
          {
            uint64_t v23 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v23 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v7 = v24;
          }
          uint64_t v13 = (char *)sub_1885AC0(v8, v23, v7, a3);
LABEL_40:
          uint64_t v24 = v13;
          if (!v13) {
            return 0;
          }
          if (sub_11947B8((uint64_t)a3, &v24, a3[11].i32[1])) {
            return v24;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return v24;
    }
  }
}

uint64_t sub_12CC42C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12CB57C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_12CC4BC(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    unsigned char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    char v4 = sub_12C9140(v7, (unint64_t)v9, a3);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_18;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v10 = *(void *)(a1 + 32);
  unsigned char *v4 = 18;
  unsigned int v11 = *(_DWORD *)(v10 + 20);
  v4[1] = v11;
  if (v11 > 0x7F) {
    uint64_t v12 = sub_188A9CC(v11, v4 + 1);
  }
  else {
    uint64_t v12 = v4 + 2;
  }
  char v4 = sub_12CB918(v10, v12, a3);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_30;
    }
    goto LABEL_24;
  }
LABEL_18:
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v13 = *(void *)(a1 + 40);
  unsigned char *v4 = 26;
  unsigned int v14 = *(_DWORD *)(v13 + 20);
  v4[1] = v14;
  if (v14 > 0x7F) {
    uint64_t v15 = sub_188A9CC(v14, v4 + 1);
  }
  else {
    uint64_t v15 = v4 + 2;
  }
  char v4 = sub_12CA928(v13, (unint64_t)v15, a3);
  if ((v6 & 8) != 0)
  {
LABEL_24:
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v16 = *(void *)(a1 + 48);
    unsigned char *v4 = 34;
    unsigned int v17 = *(_DWORD *)(v16 + 20);
    v4[1] = v17;
    if (v17 > 0x7F) {
      uint64_t v18 = sub_188A9CC(v17, v4 + 1);
    }
    else {
      uint64_t v18 = v4 + 2;
    }
    char v4 = sub_146D340(v16, (unint64_t)v18, a3);
  }
LABEL_30:
  uint64_t v19 = *(void *)(a1 + 8);
  if ((v19 & 1) == 0) {
    return v4;
  }
  unint64_t v21 = v19 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v21 + 31) < 0)
  {
    BOOL v22 = *(void **)(v21 + 8);
    uint64_t v23 = *(void *)(v21 + 16);
  }
  else
  {
    BOOL v22 = (void *)(v21 + 8);
    LODWORD(v23) = *(unsigned __int8 *)(v21 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v23)
  {
    uint64_t v24 = (int)v23;
    memcpy(v4, v22, (int)v23);
    v4 += v24;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v22, v23, v4);
}

uint64_t sub_12CC714(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0xF) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_11;
  }
  if (v2)
  {
    uint64_t v4 = sub_12C9348(*(void *)(a1 + 24));
    uint64_t v3 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_7:
    uint64_t v5 = sub_12CBC20(*(void *)(a1 + 32));
    v3 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_8:
  if ((v2 & 4) == 0)
  {
    if ((v2 & 8) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  unint64_t v9 = sub_12CB020(*(void *)(a1 + 40));
  v3 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 8) != 0)
  {
LABEL_10:
    uint64_t v6 = sub_146DAD4(*(void *)(a1 + 48));
    v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_11:
  uint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    unint64_t v10 = v7 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v3 += v11;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

void sub_12CC854(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0xF) == 0) {
    goto LABEL_39;
  }
  if (v4)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v5 = *(std::string **)(a1 + 24);
    if (!v5)
    {
      uint64_t v6 = *(void *)(a1 + 8);
      uint64_t v7 = (void *)(v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (v6) {
        uint64_t v7 = (void *)*v7;
      }
      uint64_t v5 = (std::string *)sub_12CCA5C((uint64_t)v7);
      *(void *)(a1 + 24) = v5;
    }
    if (*(void *)(a2 + 24)) {
      unsigned int v8 = *(void *(****)(void *))(a2 + 24);
    }
    else {
      unsigned int v8 = &off_2531290;
    }
    sub_117EF04(v5, (uint64_t)v8);
    if ((v4 & 2) == 0)
    {
LABEL_4:
      if ((v4 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_23;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_4;
  }
  *(_DWORD *)(a1 + 16) |= 2u;
  unint64_t v9 = *(std::string **)(a1 + 32);
  if (!v9)
  {
    uint64_t v10 = *(void *)(a1 + 8);
    uint64_t v11 = (void *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
    if (v10) {
      uint64_t v11 = (void *)*v11;
    }
    unint64_t v9 = (std::string *)sub_12CCC78((uint64_t)v11);
    *(void *)(a1 + 32) = v9;
  }
  if (*(void *)(a2 + 32)) {
    uint64_t v12 = *(uint64_t (****)(uint64_t))(a2 + 32);
  }
  else {
    uint64_t v12 = &off_2531388;
  }
  sub_12CBE04(v9, (uint64_t)v12);
  if ((v4 & 4) == 0)
  {
LABEL_5:
    if ((v4 & 8) == 0) {
      goto LABEL_39;
    }
    goto LABEL_31;
  }
LABEL_23:
  *(_DWORD *)(a1 + 16) |= 4u;
  uint64_t v13 = *(std::string **)(a1 + 40);
  if (!v13)
  {
    uint64_t v14 = *(void *)(a1 + 8);
    uint64_t v15 = (void *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
    if (v14) {
      uint64_t v15 = (void *)*v15;
    }
    sub_12CCBF0((uint64_t)v15);
    *(void *)(a1 + 40) = v13;
  }
  if (*(void *)(a2 + 40)) {
    uint64_t v16 = *(void *(****)(void *))(a2 + 40);
  }
  else {
    uint64_t v16 = &off_2531308;
  }
  sub_12CB280(v13, (uint64_t)v16);
  if ((v4 & 8) != 0)
  {
LABEL_31:
    *(_DWORD *)(a1 + 16) |= 8u;
    uint64_t v17 = *(void *)(a1 + 48);
    if (!v17)
    {
      uint64_t v18 = *(void *)(a1 + 8);
      uint64_t v19 = (void *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
      if (v18) {
        uint64_t v19 = (void *)*v19;
      }
      sub_1479294((uint64_t)v19);
      *(void *)(a1 + 48) = v17;
    }
    if (*(void *)(a2 + 48)) {
      unint64_t v20 = *(uint64_t (****)())(a2 + 48);
    }
    else {
      unint64_t v20 = &off_25397E0;
    }
    sub_140DA10(v17, (uint64_t)v20);
  }
LABEL_39:
  uint64_t v21 = *(void *)(a2 + 8);
  if (v21)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v21 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_12CCA00(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 1) != 0 && (~*(_DWORD *)(*(void *)(a1 + 24) + 16) & 3) != 0) {
    return 0;
  }
  if ((v1 & 8) == 0) {
    return 1;
  }
  uint64_t result = sub_140DEF4(*(void *)(a1 + 48));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_12CCA4C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "ag_geo.proto.LocationInfo");
}

void *sub_12CCA5C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = &off_24A5708;
  result[2] = 0;
  result[3] = 0;
  return result;
}

void *sub_12CCAD4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = &off_24A5788;
  result[3] = 0;
  result[4] = 0;
  result[2] = 0;
  return result;
}

uint64_t sub_12CCB50(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = &off_24A5808;
  *(void *)(result + 8) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

double sub_12CCBF0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = &off_24A5888;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 80) = 0u;
  *(_OWORD *)(v2 + 96) = 0u;
  *(_OWORD *)(v2 + 112) = 0u;
  return result;
}

void *sub_12CCC78(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *double result = &off_24A5908;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = &qword_2550250;
  result[5] = &qword_2550250;
  result[6] = 0;
  result[7] = 0;
  result[8] = 0;
  return result;
}

double sub_12CCD04(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = &off_24A5988;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(void *)(v2 + 48) = 0;
  return result;
}

uint64_t sub_12CCD84(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_11;
    }
  }
  else if (v4)
  {
    goto LABEL_11;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(uint64_t **)(a1 + 40) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 40));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_11:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12CCE50(uint64_t a1)
{
  sub_12CCD84(a1);

  operator delete();
}

uint64_t sub_12CCE88(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v26 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v26, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    unsigned int v8 = (char *)(*(void *)v26 + 1);
    unsigned int v9 = **(unsigned char **)v26;
    if ((char)**(unsigned char **)v26 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unsigned int v8 = (char *)sub_188C180(*(uint64_t *)v26, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unsigned int v8 = (char *)(*(void *)v26 + 2);
      }
    }
    *(void *)uint64_t v26 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_27;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        uint64_t v14 = (void *)(a1 + 24);
        goto LABEL_21;
      case 2u:
        if (v9 != 18) {
          goto LABEL_27;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v15 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        uint64_t v14 = (void *)(a1 + 32);
        goto LABEL_21;
      case 3u:
        if (v9 != 26) {
          goto LABEL_27;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v16 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
        if (v16) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        uint64_t v14 = (void *)(a1 + 40);
LABEL_21:
        uint64_t v17 = (std::string *)sub_1880F84(v14, v13);
        uint64_t v18 = (void *)sub_188C244(v17, *(char **)v26, (uint64_t)a3);
        goto LABEL_34;
      case 4u:
        if (v9 != 32) {
          goto LABEL_27;
        }
        v5 |= 8u;
        uint64_t v19 = v8 + 1;
        int v20 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_26;
        }
        int v21 = *v19;
        int v20 = v20 + (v21 << 7) - 128;
        if (v21 < 0)
        {
          uint64_t v24 = sub_188C0D0((uint64_t)v8, v20);
          *(void *)uint64_t v26 = v24;
          *(_DWORD *)(a1 + 48) = v25;
          if (!v24) {
            goto LABEL_42;
          }
        }
        else
        {
          uint64_t v19 = v8 + 2;
LABEL_26:
          *(void *)uint64_t v26 = v19;
          *(_DWORD *)(a1 + 48) = v20;
        }
        goto LABEL_35;
      default:
LABEL_27:
        if (v9) {
          BOOL v22 = (v9 & 7) == 4;
        }
        else {
          BOOL v22 = 1;
        }
        if (!v22)
        {
          if (*v7)
          {
            uint64_t v23 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v23 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unsigned int v8 = *(char **)v26;
          }
          uint64_t v18 = sub_1885AC0(v9, v23, v8, a3);
LABEL_34:
          *(void *)uint64_t v26 = v18;
          if (!v18) {
            goto LABEL_42;
          }
LABEL_35:
          if (sub_11947B8((uint64_t)a3, (char **)v26, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_42:
        }
          *(void *)uint64_t v26 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v26;
    }
  }
}

unsigned char *sub_12CD10C(uint64_t a1, unsigned char *__dst, void *a3)
{
  int v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    int v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_8;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  int v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_15;
    }
    goto LABEL_9;
  }
LABEL_8:
  int v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 8) == 0) {
    goto LABEL_15;
  }
LABEL_9:
  if (*a3 <= (unint64_t)v4) {
    int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  unsigned int v7 = *(_DWORD *)(a1 + 48);
  unsigned char *v4 = 32;
  v4[1] = v7;
  if (v7 > 0x7F)
  {
    v4[1] = v7 | 0x80;
    unsigned int v8 = v7 >> 7;
    v4[2] = v7 >> 7;
    v4 += 3;
    if (v7 >= 0x4000)
    {
      do
      {
        *(v4 - 1) |= 0x80u;
        unsigned int v9 = v8 >> 14;
        v8 >>= 7;
        *v4++ = v8;
      }
      while (v9);
    }
  }
  else
  {
    v4 += 2;
  }
LABEL_15:
  uint64_t v10 = *(void *)(a1 + 8);
  if ((v10 & 1) == 0) {
    return v4;
  }
  unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v12 + 31) < 0)
  {
    uint64_t v13 = *(void **)(v12 + 8);
    uint64_t v14 = *(void *)(v12 + 16);
  }
  else
  {
    uint64_t v13 = (void *)(v12 + 8);
    LODWORD(v14) = *(unsigned __int8 *)(v12 + 31);
  }
  if (*a3 - (void)v4 >= (int)v14)
  {
    uint64_t v15 = (int)v14;
    memcpy(v4, v13, (int)v14);
    v4 += v15;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v13, v14, v4);
}

uint64_t sub_12CD2A4(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 0xF) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_15;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
  uint64_t v5 = *(void *)(v3 + 8);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = v4;
  }
  uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    unint64_t v6 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v1 & 4) == 0)
  {
    if ((v1 & 8) == 0) {
      goto LABEL_15;
    }
    goto LABEL_14;
  }
  unint64_t v11 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v12 = *(unsigned __int8 *)(v11 + 23);
  uint64_t v13 = *(void *)(v11 + 8);
  if ((v12 & 0x80u) == 0) {
    uint64_t v13 = v12;
  }
  v2 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 8) != 0) {
LABEL_14:
  }
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 48) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_15:
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v14 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v14 + 31) < 0) {
      uint64_t v15 = *(void *)(v14 + 16);
    }
    else {
      uint64_t v15 = *(unsigned __int8 *)(v14 + 31);
    }
    v2 += v15;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_12CD3F4()
{
  return 1;
}

void *sub_12CD3FC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "ag_rpc.proto.RequestHeader");
}

uint64_t sub_12CD40C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = &off_24A5A08;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = &qword_2550250;
  *(void *)(result + 32) = &qword_2550250;
  *(void *)(result + 40) = &qword_2550250;
  *(_DWORD *)(result + 48) = 0;
  return result;
}

uint64_t sub_12CD494(uint64_t a1)
{
  unint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_11;
    }
  }
  else if (v4)
  {
    goto LABEL_11;
  }
  uint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 56) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 56));
  }
  if (*(uint64_t **)(a1 + 64) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 64));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_11:
  sub_12D3774((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12CD56C(uint64_t a1)
{
  sub_12CD494(a1);

  operator delete();
}

uint64_t sub_12CD5A4(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    unint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_12CD5A4(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  int v5 = *(_DWORD *)(v1 + 16);
  if ((v5 & 7) != 0)
  {
    if ((v5 & 1) == 0)
    {
      if ((v5 & 2) == 0) {
        goto LABEL_8;
      }
LABEL_14:
      unint64_t v7 = *(void *)(v1 + 56) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v7 + 23) < 0)
      {
        **(unsigned char **)unint64_t v7 = 0;
        *(void *)(v7 + 8) = 0;
        if ((v5 & 4) == 0) {
          goto LABEL_21;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v7 = 0;
        *(unsigned char *)(v7 + 23) = 0;
        if ((v5 & 4) == 0) {
          goto LABEL_21;
        }
      }
      goto LABEL_18;
    }
    unint64_t v6 = *(void *)(v1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v6 + 23) < 0)
    {
      **(unsigned char **)unint64_t v6 = 0;
      *(void *)(v6 + 8) = 0;
      if ((v5 & 2) != 0) {
        goto LABEL_14;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v6 = 0;
      *(unsigned char *)(v6 + 23) = 0;
      if ((v5 & 2) != 0) {
        goto LABEL_14;
      }
    }
LABEL_8:
    if ((v5 & 4) == 0) {
      goto LABEL_21;
    }
LABEL_18:
    unint64_t v8 = *(void *)(v1 + 64) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v8 + 23) < 0)
    {
      **(unsigned char **)unint64_t v8 = 0;
      *(void *)(v8 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v8 = 0;
      *(unsigned char *)(v8 + 23) = 0;
    }
  }
LABEL_21:
  char v10 = *(unsigned char *)(v1 + 8);
  uint64_t v9 = v1 + 8;
  *(_DWORD *)(v9 + 64) = 0;
  *(_DWORD *)(v9 + 8) = 0;
  if (v10)
  {
    return sub_188B4AC((uint64_t *)v9);
  }
  return result;
}

uint64_t sub_12CD6CC(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)BOOL v31 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v31, a3[11].i32[1])) {
    return *(void *)v31;
  }
  unint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    unint64_t v7 = (char *)(*(void *)v31 + 1);
    unsigned int v8 = **(unsigned char **)v31;
    if ((char)**(unsigned char **)v31 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        unint64_t v7 = (char *)sub_188C180(*(uint64_t *)v31, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        unint64_t v7 = (char *)(*(void *)v31 + 2);
      }
    }
    *(void *)BOOL v31 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 8) {
          goto LABEL_39;
        }
        unint64_t v11 = v7 + 1;
        unint64_t v12 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v13 = *v11;
        int v14 = v12 + (v13 << 7);
        unint64_t v12 = (v14 - 128);
        if (v13 < 0)
        {
          *(void *)BOOL v31 = sub_188C138((uint64_t)v7, (v14 - 128));
          if (!*(void *)v31) {
            return 0;
          }
          unint64_t v12 = v29;
        }
        else
        {
          unint64_t v11 = v7 + 2;
LABEL_13:
          *(void *)BOOL v31 = v11;
        }
        if (v12 > 4)
        {
          if (*v6) {
            int v30 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            int v30 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(1, v12, v30);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 8u;
          *(_DWORD *)(a1 + 72) = v12;
        }
        goto LABEL_47;
      case 4u:
        if (v8 != 34) {
          goto LABEL_39;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v15 = *(void *)(a1 + 8);
        uint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          uint64_t v16 = (uint64_t *)*v16;
        }
        uint64_t v17 = (void *)(a1 + 48);
        goto LABEL_38;
      case 5u:
        if (v8 != 42) {
          goto LABEL_39;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v18 = *(void *)(a1 + 8);
        uint64_t v16 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
        if (v18) {
          uint64_t v16 = (uint64_t *)*v16;
        }
        uint64_t v17 = (void *)(a1 + 56);
        goto LABEL_38;
      case 6u:
        if (v8 != 50) {
          goto LABEL_39;
        }
        uint64_t v19 = v7 - 1;
        while (1)
        {
          *(void *)BOOL v31 = v19 + 1;
          int v20 = *(_DWORD **)(a1 + 40);
          if (v20 && (uint64_t v21 = *(int *)(a1 + 32), (int)v21 < *v20))
          {
            *(_DWORD *)(a1 + 32) = v21 + 1;
            uint64_t v22 = *(void *)&v20[2 * v21 + 2];
          }
          else
          {
            uint64_t v23 = sub_12CE0C8(*(void *)(a1 + 24));
            uint64_t v22 = sub_188CDC8(a1 + 24, v23);
          }
          uint64_t v19 = (char *)sub_12CDA20(a3, v22);
          *(void *)BOOL v31 = v19;
          if (!v19) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v19 || *v19 != 50) {
            goto LABEL_47;
          }
        }
      case 7u:
        if (v8 != 58) {
          goto LABEL_39;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v24 = *(void *)(a1 + 8);
        uint64_t v16 = (uint64_t *)(v24 & 0xFFFFFFFFFFFFFFFCLL);
        if (v24) {
          uint64_t v16 = (uint64_t *)*v16;
        }
        uint64_t v17 = (void *)(a1 + 64);
LABEL_38:
        int v25 = (std::string *)sub_1880F84(v17, v16);
        uint64_t v26 = (void *)sub_188C244(v25, *(char **)v31, (uint64_t)a3);
        goto LABEL_46;
      default:
LABEL_39:
        if (v8) {
          BOOL v27 = (v8 & 7) == 4;
        }
        else {
          BOOL v27 = 1;
        }
        if (!v27)
        {
          if (*v6)
          {
            uint64_t v28 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v28 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unint64_t v7 = *(char **)v31;
          }
          uint64_t v26 = sub_1885AC0(v8, v28, v7, a3);
LABEL_46:
          *(void *)BOOL v31 = v26;
          if (!v26) {
            return 0;
          }
LABEL_47:
          if (sub_11947B8((uint64_t)a3, (char **)v31, a3[11].i32[1])) {
            return *(void *)v31;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return *(void *)v31;
    }
  }
}

uint64_t sub_12CDA20(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12CD6CC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_12CDAB0(uint64_t a1, unsigned char *a2, void *a3)
{
  uint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unint64_t v7 = *(int *)(a1 + 72);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  if ((v6 & 2) != 0) {
    uint64_t v4 = sub_117A0AC(a3, 5, (const void **)(*(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  int v10 = *(_DWORD *)(a1 + 32);
  if (v10)
  {
    for (int i = 0; i != v10; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v12 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      unsigned char *v4 = 50;
      unsigned int v13 = *(_DWORD *)(v12 + 20);
      v4[1] = v13;
      if (v13 > 0x7F) {
        int v14 = sub_188A9CC(v13, v4 + 1);
      }
      else {
        int v14 = v4 + 2;
      }
      uint64_t v4 = (unsigned char *)sub_12CDAB0(v12, v14, a3);
    }
  }
  if ((v6 & 4) != 0) {
    uint64_t v4 = sub_117A0AC(a3, 7, (const void **)(*(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v15 = *(void *)(a1 + 8);
  if ((v15 & 1) == 0) {
    return (uint64_t)v4;
  }
  unint64_t v17 = v15 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v17 + 31) < 0)
  {
    uint64_t v18 = *(void **)(v17 + 8);
    uint64_t v19 = *(void *)(v17 + 16);
  }
  else
  {
    uint64_t v18 = (void *)(v17 + 8);
    LODWORD(v19) = *(unsigned __int8 *)(v17 + 31);
  }
  if (*a3 - (void)v4 >= (int)v19)
  {
    uint64_t v20 = (int)v19;
    memcpy(v4, v18, (int)v19);
    v4 += v20;
    return (uint64_t)v4;
  }

  return sub_188A528(a3, (char *)v18, v19, v4);
}

uint64_t sub_12CDCD4(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 8) != 0)
  {
    int v4 = *(_DWORD *)(a1 + 72);
    if (v4 < 0) {
      uint64_t v3 = 11;
    }
    else {
      uint64_t v3 = ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  else
  {
    uint64_t v3 = 0;
  }
  uint64_t v5 = *(int *)(a1 + 32);
  uint64_t v6 = v3 + v5;
  uint64_t v7 = *(void *)(a1 + 40);
  if (v7) {
    unint64_t v8 = (uint64_t *)(v7 + 8);
  }
  else {
    unint64_t v8 = 0;
  }
  if (v5)
  {
    uint64_t v9 = 8 * v5;
    do
    {
      uint64_t v10 = *v8++;
      uint64_t v11 = sub_12CDCD4(v10);
      v6 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6);
      v9 -= 8;
    }
    while (v9);
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 7) != 0)
  {
    if (v2)
    {
      unint64_t v17 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v18 = *(unsigned __int8 *)(v17 + 23);
      uint64_t v19 = *(void *)(v17 + 8);
      if ((v18 & 0x80u) == 0) {
        uint64_t v19 = v18;
      }
      v6 += v19 + ((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v2 & 2) == 0)
      {
LABEL_16:
        if ((v2 & 4) == 0) {
          goto LABEL_20;
        }
        goto LABEL_17;
      }
    }
    else if ((v2 & 2) == 0)
    {
      goto LABEL_16;
    }
    unint64_t v20 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v21 = *(unsigned __int8 *)(v20 + 23);
    uint64_t v22 = *(void *)(v20 + 8);
    if ((v21 & 0x80u) == 0) {
      uint64_t v22 = v21;
    }
    v6 += v22 + ((9 * (__clz(v22 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 4) != 0)
    {
LABEL_17:
      unint64_t v12 = *(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v13 = *(unsigned __int8 *)(v12 + 23);
      uint64_t v14 = *(void *)(v12 + 8);
      if ((v13 & 0x80u) == 0) {
        uint64_t v14 = v13;
      }
      v6 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
LABEL_20:
  uint64_t v15 = *(void *)(a1 + 8);
  if (v15)
  {
    unint64_t v23 = v15 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v23 + 31) < 0) {
      uint64_t v24 = *(void *)(v23 + 16);
    }
    else {
      uint64_t v24 = *(unsigned __int8 *)(v23 + 31);
    }
    v6 += v24;
  }
  *(_DWORD *)(a1 + 20) = v6;
  return v6;
}

std::string *sub_12CDEA0(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  uint64_t v4 = *(unsigned int *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = *(void *)(a2 + 40) + 8;
    uint64_t v6 = sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = (std::string *)sub_12D37F4(&v3[1], v6, v5, v4, (*(_DWORD *)v3[1].__r_.__value_.__r.__words[2]- LODWORD(v3[1].__r_.__value_.__r.__words[1])));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    unint64_t v8 = (_DWORD *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *unint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 0xF) != 0)
  {
    if (v9)
    {
      uint64_t v11 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v13 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v13 = (uint64_t *)*v13;
      }
      uint64_t result = sub_1881DF4((std::string **)&v3[2], v11, v13);
      if ((v9 & 2) == 0)
      {
LABEL_7:
        if ((v9 & 4) == 0) {
          goto LABEL_8;
        }
        goto LABEL_21;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_7;
    }
    uint64_t v14 = (long long *)(*(void *)(a2 + 56) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    std::string::size_type v15 = v3->__r_.__value_.__l.__size_;
    uint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
    if (v15) {
      uint64_t v16 = (uint64_t *)*v16;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[2].__r_.__value_.__l.__size_, v14, v16);
    if ((v9 & 4) == 0)
    {
LABEL_8:
      if ((v9 & 8) == 0)
      {
LABEL_10:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v9;
        goto LABEL_11;
      }
LABEL_9:
      LODWORD(v3[3].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 72);
      goto LABEL_10;
    }
LABEL_21:
    unint64_t v17 = (long long *)(*(void *)(a2 + 64) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
    std::string::size_type v18 = v3->__r_.__value_.__l.__size_;
    uint64_t v19 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
    if (v18) {
      uint64_t v19 = (uint64_t *)*v19;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[2].__r_.__value_.__r.__words[2], v17, v19);
    if ((v9 & 8) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
LABEL_11:
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

BOOL sub_12CE040(uint64_t a1)
{
  return (*(unsigned char *)(a1 + 16) & 8) != 0 && sub_12CE058(a1 + 24);
}

BOOL sub_12CE058(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 8);
  do
  {
    int v3 = v2;
    if ((int)v2 < 1) {
      break;
    }
    uint64_t v4 = *(void *)(*(void *)(a1 + 16) + 8 * v2);
    if ((*(unsigned char *)(v4 + 16) & 8) == 0) {
      break;
    }
    --v2;
  }
  while ((sub_12CE058(v4 + 24) & 1) != 0);
  return v3 < 1;
}

void *sub_12CE0B8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "ag_index.proto.IndexQueryNode");
}

uint64_t sub_12CE0C8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = &off_24A5A88;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = &qword_2550250;
  *(void *)(result + 56) = &qword_2550250;
  *(void *)(result + 64) = &qword_2550250;
  *(_DWORD *)(result + 72) = 0;
  return result;
}

void *sub_12CE174(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1889DA8((uint64_t)(a1 + 2));
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12CE1F0(void *a1)
{
  sub_12CE174(a1);

  operator delete();
}

uint64_t sub_12CE228(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_12CE23C(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v20 = a2;
  if (sub_11947B8((uint64_t)a3, &v20, a3[11].i32[1])) {
    return v20;
  }
  uint64_t v5 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v6 = v20 + 1;
    unsigned int v7 = *v20;
    if (*v20 < 0)
    {
      unsigned int v8 = v7 + (*v6 << 7);
      unsigned int v7 = v8 - 128;
      if (*v6 < 0)
      {
        uint64_t v6 = (char *)sub_188C180((uint64_t)v20, v8 - 128);
        unsigned int v7 = v9;
      }
      else
      {
        uint64_t v6 = v20 + 2;
      }
    }
    unint64_t v20 = v6;
    if ((v7 & 0xFFFFFFF8) == 0x10)
    {
      if (v7 == 16)
      {
        uint64_t v10 = v6 - 1;
        while (1)
        {
          unint64_t v20 = v10 + 1;
          int v11 = v10[1];
          if (v10[1] < 0)
          {
            int v12 = v11 + (v10[2] << 7);
            int v11 = v12 - 128;
            if (v10[2] < 0)
            {
              uint64_t v10 = (char *)sub_188C0D0((uint64_t)(v10 + 1), v12 - 128);
              int v11 = v13;
            }
            else
            {
              v10 += 3;
            }
          }
          else
          {
            v10 += 2;
          }
          unint64_t v20 = v10;
          uint64_t v14 = *(unsigned int *)(a1 + 16);
          if (v14 == *(_DWORD *)(a1 + 20))
          {
            int v15 = v14 + 1;
            sub_188C80C((unsigned int *)(a1 + 16), v14 + 1);
            *(_DWORD *)(*(void *)(a1 + 24) + 4 * v14) = v11;
            uint64_t v10 = v20;
          }
          else
          {
            *(_DWORD *)(*(void *)(a1 + 24) + 4 * v14) = v11;
            int v15 = v14 + 1;
          }
          *(_DWORD *)(a1 + 16) = v15;
          if (!v10) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v10 || *v10 != 16) {
            goto LABEL_32;
          }
        }
      }
      if (v7 == 18)
      {
        uint64_t v16 = sub_188C2CC((unsigned int *)(a1 + 16), (unsigned __int8 *)v6, (uint64_t)a3);
        goto LABEL_31;
      }
    }
    if (!v7 || (v7 & 7) == 4) {
      break;
    }
    if (*v5)
    {
      std::string::size_type v18 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      std::string::size_type v18 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v6 = v20;
    }
    uint64_t v16 = sub_1885AC0(v7, v18, v6, a3);
LABEL_31:
    unint64_t v20 = (char *)v16;
    if (!v16) {
      return 0;
    }
LABEL_32:
    if (sub_11947B8((uint64_t)a3, &v20, a3[11].i32[1])) {
      return v20;
    }
  }
  if (v6)
  {
    a3[10].i32[0] = v7 - 1;
    return v20;
  }
  return 0;
}

char *sub_12CE43C(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v6 = *(unsigned int *)(a1 + 16);
  if ((int)v6 >= 1)
  {
    for (uint64_t i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      unsigned int v8 = *(_DWORD *)(*(void *)(a1 + 24) + 4 * i);
      *__dst = 16;
      __dst[1] = v8;
      if (v8 > 0x7F)
      {
        __dst[1] = v8 | 0x80;
        unsigned int v9 = v8 >> 7;
        __dst[2] = v8 >> 7;
        __dst += 3;
        if (v8 >= 0x4000)
        {
          do
          {
            *(__dst - 1) |= 0x80u;
            unsigned int v10 = v9 >> 14;
            v9 >>= 7;
            *__dst++ = v9;
          }
          while (v10);
        }
      }
      else
      {
        __dst += 2;
      }
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return __dst;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    uint64_t v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    uint64_t v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(__dst, v14, (int)v15);
    __dst += v16;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, __dst);
}

uint64_t sub_12CE58C(uint64_t a1)
{
  uint64_t result = sub_188D4F0((unsigned int *)(a1 + 16)) + *(unsigned int *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v4 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v5 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v5 = *(unsigned __int8 *)(v4 + 31);
    }
    result += v5;
  }
  *(_DWORD *)(a1 + 32) = result;
  return result;
}

uint64_t sub_12CE5EC()
{
  return 1;
}

void *sub_12CE5F4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "ag_base.proto.InternalizedName");
}

uint64_t sub_12CE604(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  unint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12CE6A4(uint64_t a1)
{
  sub_12CE604(a1);

  operator delete();
}

uint64_t sub_12CE6DC(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if (v1)
  {
    unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)unint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
    }
  }
  if ((v1 & 6) != 0) {
    *(void *)(a1 + 32) = 0;
  }
  char v4 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v4) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_12CE72C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v30 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v30, a3[11].i32[1])) {
    return *(void *)v30;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    unsigned int v7 = (char *)(*(void *)v30 + 1);
    unsigned int v8 = **(unsigned char **)v30;
    if ((char)**(unsigned char **)v30 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        unsigned int v7 = (char *)sub_188C180(*(uint64_t *)v30, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        unsigned int v7 = (char *)(*(void *)v30 + 2);
      }
    }
    *(void *)int v30 = v7;
    unsigned int v11 = v8 >> 3;
    if (v8 >> 3 == 3)
    {
      if (v8 != 24) {
        goto LABEL_14;
      }
      uint64_t v16 = v7 + 1;
      unint64_t v17 = *v7;
      if (*v7 < 0)
      {
        int v18 = *v16;
        int v19 = v17 + (v18 << 7);
        unint64_t v17 = (v19 - 128);
        if (v18 < 0)
        {
          *(void *)int v30 = sub_188C138((uint64_t)v7, (v19 - 128));
          if (!*(void *)v30) {
            goto LABEL_57;
          }
          unint64_t v17 = v26;
          goto LABEL_26;
        }
        uint64_t v16 = v7 + 2;
      }
      *(void *)int v30 = v16;
LABEL_26:
      if (v17 <= 3)
      {
        *(_DWORD *)(a1 + 16) |= 4u;
        *(_DWORD *)(a1 + 36) = v17;
        goto LABEL_39;
      }
      if (*v6) {
        uint64_t v28 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        uint64_t v28 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      int v29 = 3;
      goto LABEL_51;
    }
    if (v11 == 2) {
      break;
    }
    if (v11 != 1 || v8 != 10) {
      goto LABEL_14;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v23 = *(void *)(a1 + 8);
    uint64_t v24 = (uint64_t *)(v23 & 0xFFFFFFFFFFFFFFFCLL);
    if (v23) {
      uint64_t v24 = (uint64_t *)*v24;
    }
    int v25 = (std::string *)sub_1880F84((void *)(a1 + 24), v24);
    uint64_t v15 = (void *)sub_188C244(v25, *(char **)v30, (uint64_t)a3);
LABEL_38:
    *(void *)int v30 = v15;
    if (!v15) {
      goto LABEL_57;
    }
LABEL_39:
    if (sub_11947B8((uint64_t)a3, (char **)v30, a3[11].i32[1])) {
      return *(void *)v30;
    }
  }
  if (v8 == 16)
  {
    unint64_t v20 = v7 + 1;
    unint64_t v17 = *v7;
    if ((*v7 & 0x80000000) == 0) {
      goto LABEL_32;
    }
    int v21 = *v20;
    int v22 = v17 + (v21 << 7);
    unint64_t v17 = (v22 - 128);
    if (v21 < 0)
    {
      *(void *)int v30 = sub_188C138((uint64_t)v7, (v22 - 128));
      if (!*(void *)v30) {
        goto LABEL_57;
      }
      unint64_t v17 = v27;
    }
    else
    {
      unint64_t v20 = v7 + 2;
LABEL_32:
      *(void *)int v30 = v20;
    }
    if (v17 <= 3)
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      *(_DWORD *)(a1 + 32) = v17;
      goto LABEL_39;
    }
    if (*v6) {
      uint64_t v28 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else {
      uint64_t v28 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
    }
    int v29 = 2;
LABEL_51:
    sub_188C020(v29, v17, v28);
    goto LABEL_39;
  }
LABEL_14:
  if (v8) {
    BOOL v13 = (v8 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v6)
    {
      uint64_t v14 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unsigned int v7 = *(char **)v30;
    }
    uint64_t v15 = sub_1885AC0(v8, v14, v7, a3);
    goto LABEL_38;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v30;
  }
LABEL_57:
  *(void *)int v30 = 0;
  return *(void *)v30;
}

unsigned char *sub_12CE9DC(uint64_t a1, unsigned char *__dst, void *a3)
{
  char v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    char v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v7 = *(int *)(a1 + 32);
    unsigned char *v4 = 16;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 36);
    unsigned char *v4 = 24;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    uint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    uint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_12CEBA0(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if (v1)
  {
    unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
    uint64_t v5 = *(void *)(v3 + 8);
    if ((v4 & 0x80u) == 0) {
      uint64_t v5 = v4;
    }
    uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  else
  {
    uint64_t v2 = 0;
  }
  if ((v1 & 6) != 0)
  {
    if ((v1 & 2) != 0)
    {
      int v6 = *(_DWORD *)(a1 + 32);
      if (v6 < 0) {
        uint64_t v7 = 11;
      }
      else {
        uint64_t v7 = ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
      v2 += v7;
    }
    if ((v1 & 4) != 0)
    {
      int v8 = *(_DWORD *)(a1 + 36);
      if (v8 < 0) {
        uint64_t v9 = 11;
      }
      else {
        uint64_t v9 = ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
      v2 += v9;
    }
  }
  uint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v12 + 31) < 0) {
      uint64_t v13 = *(void *)(v12 + 16);
    }
    else {
      uint64_t v13 = *(unsigned __int8 *)(v12 + 31);
    }
    v2 += v13;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_12CEC94(uint64_t a1)
{
  return *(_DWORD *)(a1 + 16) & 1;
}

void *sub_12CECA0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "ag_base.proto.ConditionalReplacement");
}

uint64_t sub_12CECB0(uint64_t a1)
{
  unint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_13;
    }
  }
  else if (v4)
  {
    goto LABEL_13;
  }
  uint64_t v5 = (void ***)(a1 + 72);
  if (*(uint64_t **)(a1 + 72) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 80) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 80));
  }
  if (*(uint64_t **)(a1 + 88) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 88));
  }
  if (*(uint64_t **)(a1 + 96) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 96));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_13:
  sub_12D3880((void *)(a1 + 48));
  sub_1889DE8((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12CEDA4(uint64_t a1)
{
  sub_12CECB0(a1);

  operator delete();
}

uint64_t sub_12CEDDC(uint64_t a1)
{
  uint64_t result = sub_188CC00(a1 + 24);
  uint64_t v3 = *(unsigned int *)(a1 + 56);
  if ((int)v3 >= 1)
  {
    uint64_t v4 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = sub_12CE6DC(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 56) = 0;
  }
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 0xF) != 0)
  {
    if ((v6 & 1) == 0)
    {
      if ((v6 & 2) == 0) {
        goto LABEL_8;
      }
LABEL_15:
      unint64_t v8 = *(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v8 + 23) < 0)
      {
        **(unsigned char **)unint64_t v8 = 0;
        *(void *)(v8 + 8) = 0;
        if ((v6 & 4) != 0) {
          goto LABEL_19;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v8 = 0;
        *(unsigned char *)(v8 + 23) = 0;
        if ((v6 & 4) != 0) {
          goto LABEL_19;
        }
      }
LABEL_9:
      if ((v6 & 8) == 0) {
        goto LABEL_26;
      }
LABEL_23:
      unint64_t v10 = *(void *)(a1 + 96) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v10 + 23) < 0)
      {
        **(unsigned char **)unint64_t v10 = 0;
        *(void *)(v10 + 8) = 0;
      }
      else
      {
        *(unsigned char *)unint64_t v10 = 0;
        *(unsigned char *)(v10 + 23) = 0;
      }
      goto LABEL_26;
    }
    unint64_t v7 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v7 + 23) < 0)
    {
      **(unsigned char **)unint64_t v7 = 0;
      *(void *)(v7 + 8) = 0;
      if ((v6 & 2) != 0) {
        goto LABEL_15;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v7 = 0;
      *(unsigned char *)(v7 + 23) = 0;
      if ((v6 & 2) != 0) {
        goto LABEL_15;
      }
    }
LABEL_8:
    if ((v6 & 4) == 0) {
      goto LABEL_9;
    }
LABEL_19:
    unint64_t v9 = *(void *)(a1 + 88) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v9 + 23) < 0)
    {
      **(unsigned char **)unint64_t v9 = 0;
      *(void *)(v9 + 8) = 0;
      if ((v6 & 8) == 0) {
        goto LABEL_26;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v9 = 0;
      *(unsigned char *)(v9 + 23) = 0;
      if ((v6 & 8) == 0) {
        goto LABEL_26;
      }
    }
    goto LABEL_23;
  }
LABEL_26:
  if ((v6 & 0xF0) != 0)
  {
    *(_DWORD *)(a1 + 107) = 0;
    *(_DWORD *)(a1 + 104) = 0;
  }
  if ((v6 & 0xF00) != 0)
  {
    *(void *)(a1 + 119) = 0;
    *(void *)(a1 + 111) = 0;
    *(unsigned char *)(a1 + 127) = 0;
  }
  char v12 = *(unsigned char *)(a1 + 8);
  uint64_t v11 = a1 + 8;
  *(_DWORD *)(v11 + 8) = 0;
  if (v12)
  {
    return sub_188B4AC((uint64_t *)v11);
  }
  return result;
}

uint64_t sub_12CEF60(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)v71 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v71, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (uint64_t **)(a1 + 24);
  uint64_t v70 = (uint64_t *)(a1 + 8);
  while (2)
  {
    unint64_t v8 = (char *)(*(void *)v71 + 1);
    unsigned int v9 = **(unsigned char **)v71;
    if ((char)**(unsigned char **)v71 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unint64_t v8 = (char *)sub_188C180(*(uint64_t *)v71, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unint64_t v8 = (char *)(*(void *)v71 + 2);
      }
    }
    *(void *)v71 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_88;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        uint64_t v14 = (void *)(a1 + 72);
        goto LABEL_40;
      case 2u:
        if (v9 != 16) {
          goto LABEL_88;
        }
        v5 |= 0x10u;
        uint64_t v16 = v8 + 1;
        LODWORD(v15) = *v8;
        if ((v15 & 0x80) == 0) {
          goto LABEL_17;
        }
        int v17 = *v16;
        uint64_t v15 = v15 + (v17 << 7) - 128;
        if (v17 < 0)
        {
          uint64_t v56 = sub_188C138((uint64_t)v8, v15);
          *(void *)v71 = v56;
          *(_DWORD *)(a1 + 104) = v57;
          if (!v56) {
            goto LABEL_112;
          }
        }
        else
        {
          uint64_t v16 = v8 + 2;
LABEL_17:
          *(void *)v71 = v16;
          *(_DWORD *)(a1 + 104) = v15;
        }
        goto LABEL_42;
      case 3u:
        if (v9 != 26) {
          goto LABEL_88;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v18 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
        if (v18) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        uint64_t v14 = (void *)(a1 + 80);
        goto LABEL_40;
      case 4u:
        if (v9 != 32) {
          goto LABEL_88;
        }
        v5 |= 0x20u;
        int v19 = v8 + 1;
        uint64_t v20 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_26;
        }
        int v21 = *v19;
        uint64_t v20 = v20 + (v21 << 7) - 128;
        if (v21 < 0)
        {
          uint64_t v58 = sub_188C138((uint64_t)v8, v20);
          *(void *)v71 = v58;
          *(unsigned char *)(a1 + 108) = v59 != 0;
          if (!v58) {
            goto LABEL_112;
          }
        }
        else
        {
          int v19 = v8 + 2;
LABEL_26:
          *(void *)v71 = v19;
          *(unsigned char *)(a1 + 108) = v20 != 0;
        }
        goto LABEL_42;
      case 5u:
        if (v9 != 40) {
          goto LABEL_88;
        }
        v5 |= 0x40u;
        int v22 = v8 + 1;
        uint64_t v23 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_31;
        }
        int v24 = *v22;
        uint64_t v23 = v23 + (v24 << 7) - 128;
        if (v24 < 0)
        {
          uint64_t v60 = sub_188C138((uint64_t)v8, v23);
          *(void *)v71 = v60;
          *(unsigned char *)(a1 + 109) = v61 != 0;
          if (!v60) {
            goto LABEL_112;
          }
        }
        else
        {
          int v22 = v8 + 2;
LABEL_31:
          *(void *)v71 = v22;
          *(unsigned char *)(a1 + 109) = v23 != 0;
        }
        goto LABEL_42;
      case 6u:
        if (v9 != 50) {
          goto LABEL_88;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v25 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v25 & 0xFFFFFFFFFFFFFFFCLL);
        if (v25) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        uint64_t v14 = (void *)(a1 + 88);
        goto LABEL_40;
      case 7u:
        if (v9 != 58) {
          goto LABEL_88;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v26 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v26 & 0xFFFFFFFFFFFFFFFCLL);
        if (v26) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        uint64_t v14 = (void *)(a1 + 96);
LABEL_40:
        unint64_t v27 = (std::string *)sub_1880F84(v14, v13);
        uint64_t v28 = (void *)sub_188C244(v27, *(char **)v71, (uint64_t)a3);
        goto LABEL_41;
      case 8u:
        if (v9 != 64) {
          goto LABEL_88;
        }
        v5 |= 0x80u;
        int v29 = v8 + 1;
        uint64_t v30 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_48;
        }
        int v31 = *v29;
        uint64_t v30 = v30 + (v31 << 7) - 128;
        if (v31 < 0)
        {
          uint64_t v62 = sub_188C138((uint64_t)v8, v30);
          *(void *)v71 = v62;
          *(unsigned char *)(a1 + 110) = v63 != 0;
          if (!v62) {
            goto LABEL_112;
          }
        }
        else
        {
          int v29 = v8 + 2;
LABEL_48:
          *(void *)v71 = v29;
          *(unsigned char *)(a1 + 110) = v30 != 0;
        }
        goto LABEL_42;
      case 9u:
        if (v9 != 72) {
          goto LABEL_88;
        }
        v5 |= 0x100u;
        unint64_t v32 = v8 + 1;
        uint64_t v33 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_53;
        }
        int v34 = *v32;
        uint64_t v33 = v33 + (v34 << 7) - 128;
        if (v34 < 0)
        {
          uint64_t v64 = sub_188C138((uint64_t)v8, v33);
          *(void *)v71 = v64;
          *(unsigned char *)(a1 + 111) = v65 != 0;
          if (!v64) {
            goto LABEL_112;
          }
        }
        else
        {
          unint64_t v32 = v8 + 2;
LABEL_53:
          *(void *)v71 = v32;
          *(unsigned char *)(a1 + 111) = v33 != 0;
        }
        goto LABEL_42;
      case 0xAu:
        if (v9 != 82) {
          goto LABEL_88;
        }
        uint64_t v35 = v8 - 1;
        while (1)
        {
          uint64_t v36 = (char *)(v35 + 1);
          *(void *)v71 = v35 + 1;
          uint64_t v37 = *(_DWORD **)(a1 + 40);
          if (v37 && (uint64_t v38 = *(int *)(a1 + 32), (int)v38 < *v37))
          {
            *(_DWORD *)(a1 + 32) = v38 + 1;
            uint64_t v39 = *(std::string **)&v37[2 * v38 + 2];
          }
          else
          {
            if (!*v7) {
              operator new();
            }
            *unint64_t v41 = v40;
            v41[1] = sub_3A6EDC;
            void *v40 = 0;
            v40[1] = 0;
            v40[2] = 0;
            uint64_t v39 = (std::string *)sub_188CDC8(a1 + 24, (uint64_t)v40);
            uint64_t v36 = *(char **)v71;
          }
          uint64_t v35 = sub_188C244(v39, v36, (uint64_t)a3);
          *(void *)v71 = v35;
          if (!v35) {
            goto LABEL_112;
          }
          if (*(void *)a3 <= (unint64_t)v35 || *v35 != 82) {
            goto LABEL_42;
          }
        }
      case 0xBu:
        if (v9 != 89) {
          goto LABEL_88;
        }
        v5 |= 0x200u;
        *(void *)(a1 + 112) = *(void *)v8;
        *(void *)v71 = v8 + 8;
        goto LABEL_42;
      case 0xCu:
        if (v9 != 98) {
          goto LABEL_88;
        }
        unint64_t v42 = v8 - 1;
        while (1)
        {
          unint64_t v43 = (unsigned __int8 *)(v42 + 1);
          *(void *)v71 = v42 + 1;
          unint64_t v44 = *(_DWORD **)(a1 + 64);
          if (v44 && (uint64_t v45 = *(int *)(a1 + 56), (int)v45 < *v44))
          {
            *(_DWORD *)(a1 + 56) = v45 + 1;
            uint64_t v46 = *(void *)&v44[2 * v45 + 2];
          }
          else
          {
            int v47 = sub_12D0A3C(*(void *)(a1 + 48));
            uint64_t v46 = sub_188CDC8(a1 + 48, (uint64_t)v47);
            unint64_t v43 = *(unsigned __int8 **)v71;
          }
          unint64_t v42 = (char *)sub_12CF650(a3, v46, v43);
          *(void *)v71 = v42;
          if (!v42) {
            goto LABEL_112;
          }
          if (*(void *)a3 <= (unint64_t)v42 || *v42 != 98) {
            goto LABEL_42;
          }
        }
      case 0xDu:
        if (v9 != 104) {
          goto LABEL_88;
        }
        v5 |= 0x400u;
        unint64_t v48 = v8 + 1;
        uint64_t v49 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_82;
        }
        int v50 = *v48;
        uint64_t v49 = v49 + (v50 << 7) - 128;
        if (v50 < 0)
        {
          uint64_t v66 = sub_188C138((uint64_t)v8, v49);
          *(void *)v71 = v66;
          *(unsigned char *)(a1 + 120) = v67 != 0;
          if (!v66) {
            goto LABEL_112;
          }
        }
        else
        {
          unint64_t v48 = v8 + 2;
LABEL_82:
          *(void *)v71 = v48;
          *(unsigned char *)(a1 + 120) = v49 != 0;
        }
        goto LABEL_42;
      case 0xEu:
        if (v9 != 112) {
          goto LABEL_88;
        }
        v5 |= 0x800u;
        v52 = v8 + 1;
        LODWORD(v51) = *v8;
        if ((v51 & 0x80) == 0) {
          goto LABEL_87;
        }
        int v53 = *v52;
        uint64_t v51 = v51 + (v53 << 7) - 128;
        if (v53 < 0)
        {
          uint64_t v68 = sub_188C138((uint64_t)v8, v51);
          *(void *)v71 = v68;
          *(_DWORD *)(a1 + 124) = v69;
          if (!v68) {
            goto LABEL_112;
          }
        }
        else
        {
          v52 = v8 + 2;
LABEL_87:
          *(void *)v71 = v52;
          *(_DWORD *)(a1 + 124) = v51;
        }
        goto LABEL_42;
      default:
LABEL_88:
        if (v9) {
          BOOL v54 = (v9 & 7) == 4;
        }
        else {
          BOOL v54 = 1;
        }
        if (!v54)
        {
          if (*v70)
          {
            int v55 = (std::string *)((*v70 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            int v55 = (std::string *)sub_188DBD8(v70);
            unint64_t v8 = *(char **)v71;
          }
          uint64_t v28 = sub_1885AC0(v9, v55, v8, a3);
LABEL_41:
          *(void *)v71 = v28;
          if (!v28) {
            goto LABEL_112;
          }
LABEL_42:
          if (sub_11947B8((uint64_t)a3, (char **)v71, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_112:
        }
          *(void *)v71 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v71;
    }
  }
}

uint64_t sub_12CF650(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12CE72C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_12CF6E0(uint64_t a1, char *__dst, void *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v7 = *(int *)(a1 + 104);
    char *v4 = 16;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    uint64_t v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL), v4);
    if ((v6 & 0x20) == 0)
    {
LABEL_12:
      if ((v6 & 0x40) == 0) {
        goto LABEL_13;
      }
      goto LABEL_22;
    }
  }
  else if ((v6 & 0x20) == 0)
  {
    goto LABEL_12;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v10 = *(unsigned char *)(a1 + 108);
  char *v4 = 32;
  v4[1] = v10;
  v4 += 2;
  if ((v6 & 0x40) == 0)
  {
LABEL_13:
    if ((v6 & 4) == 0) {
      goto LABEL_14;
    }
    goto LABEL_25;
  }
LABEL_22:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v11 = *(unsigned char *)(a1 + 109);
  char *v4 = 40;
  v4[1] = v11;
  v4 += 2;
  if ((v6 & 4) == 0)
  {
LABEL_14:
    if ((v6 & 8) == 0) {
      goto LABEL_15;
    }
    goto LABEL_26;
  }
LABEL_25:
  uint64_t v4 = sub_117A0AC(a3, 6, (const void **)(*(void *)(a1 + 88) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 8) == 0)
  {
LABEL_15:
    if ((v6 & 0x80) == 0) {
      goto LABEL_16;
    }
    goto LABEL_27;
  }
LABEL_26:
  uint64_t v4 = sub_117A0AC(a3, 7, (const void **)(*(void *)(a1 + 96) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x80) == 0)
  {
LABEL_16:
    if ((v6 & 0x100) == 0) {
      goto LABEL_33;
    }
    goto LABEL_30;
  }
LABEL_27:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v12 = *(unsigned char *)(a1 + 110);
  char *v4 = 64;
  v4[1] = v12;
  v4 += 2;
  if ((v6 & 0x100) != 0)
  {
LABEL_30:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v13 = *(unsigned char *)(a1 + 111);
    char *v4 = 72;
    v4[1] = v13;
    v4 += 2;
  }
LABEL_33:
  uint64_t v14 = *(unsigned int *)(a1 + 32);
  if ((int)v14 >= 1)
  {
    uint64_t v15 = 0;
    uint64_t v16 = 8 * v14;
    do
    {
      int v17 = *(void **)(*(void *)(a1 + 40) + v15 + 8);
      if (*((char *)v17 + 23) < 0)
      {
        int64_t v18 = v17[1];
        if (v18 > 127) {
          goto LABEL_44;
        }
      }
      else
      {
        int64_t v18 = *((unsigned __int8 *)v17 + 23);
      }
      if (*a3 - (void)v4 + 14 >= v18)
      {
        char *v4 = 82;
        v4[1] = v18;
        if (*((char *)v17 + 23) < 0) {
          int v17 = (void *)*v17;
        }
        int v19 = v4 + 2;
        memcpy(v19, v17, v18);
        uint64_t v4 = &v19[v18];
        goto LABEL_42;
      }
LABEL_44:
      uint64_t v4 = (char *)sub_188A868(a3, 10, (uint64_t)v17, v4);
LABEL_42:
      v15 += 8;
    }
    while (v16 != v15);
  }
  if ((v6 & 0x200) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v20 = *(void *)(a1 + 112);
    char *v4 = 89;
    *(void *)(v4 + 1) = v20;
    v4 += 9;
  }
  int v21 = *(_DWORD *)(a1 + 56);
  if (v21)
  {
    for (int i = 0; i != v21; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v23 = *(void *)(*(void *)(a1 + 64) + 8 * i + 8);
      char *v4 = 98;
      unsigned int v24 = *(_DWORD *)(v23 + 20);
      v4[1] = v24;
      if (v24 > 0x7F) {
        uint64_t v25 = sub_188A9CC(v24, v4 + 1);
      }
      else {
        uint64_t v25 = v4 + 2;
      }
      uint64_t v4 = sub_12CE9DC(v23, v25, a3);
    }
  }
  if ((v6 & 0x400) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v26 = *(unsigned char *)(a1 + 120);
    char *v4 = 104;
    v4[1] = v26;
    v4 += 2;
  }
  if ((v6 & 0x800) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v27 = *(int *)(a1 + 124);
    char *v4 = 112;
    v4[1] = v27;
    if (v27 > 0x7F)
    {
      v4[1] = v27 | 0x80;
      unint64_t v28 = v27 >> 7;
      v4[2] = v27 >> 7;
      v4 += 3;
      if (v27 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v29 = v28 >> 14;
          v28 >>= 7;
          *v4++ = v28;
        }
        while (v29);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v30 = *(void *)(a1 + 8);
  if ((v30 & 1) == 0) {
    return v4;
  }
  unint64_t v32 = v30 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v32 + 31) < 0)
  {
    uint64_t v33 = *(void **)(v32 + 8);
    uint64_t v34 = *(void *)(v32 + 16);
  }
  else
  {
    uint64_t v33 = (void *)(v32 + 8);
    LODWORD(v34) = *(unsigned __int8 *)(v32 + 31);
  }
  if (*a3 - (void)v4 >= (int)v34)
  {
    uint64_t v35 = (int)v34;
    memcpy(v4, v33, (int)v34);
    v4 += v35;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v33, v34, v4);
}

uint64_t sub_12CFBB4(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  if ((int)v2 < 1)
  {
    uint64_t v4 = *(unsigned int *)(a1 + 32);
  }
  else
  {
    uint64_t v3 = (uint64_t *)(*(void *)(a1 + 40) + 8);
    uint64_t v4 = *(unsigned int *)(a1 + 32);
    do
    {
      uint64_t v5 = *v3++;
      uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
      uint64_t v7 = *(void *)(v5 + 8);
      if ((v6 & 0x80u) == 0) {
        uint64_t v7 = v6;
      }
      v4 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      --v2;
    }
    while (v2);
  }
  uint64_t v8 = *(int *)(a1 + 56);
  uint64_t v9 = v4 + v8;
  uint64_t v10 = *(void *)(a1 + 64);
  if (v10) {
    char v11 = (uint64_t *)(v10 + 8);
  }
  else {
    char v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_12CEBA0(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  int v15 = *(_DWORD *)(a1 + 16);
  if ((_BYTE)v15)
  {
    if (v15)
    {
      unint64_t v26 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v27 = *(unsigned __int8 *)(v26 + 23);
      uint64_t v28 = *(void *)(v26 + 8);
      if ((v27 & 0x80u) == 0) {
        uint64_t v28 = v27;
      }
      v9 += v28 + ((9 * (__clz(v28 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v15 & 2) == 0)
      {
LABEL_17:
        if ((v15 & 4) == 0) {
          goto LABEL_18;
        }
        goto LABEL_52;
      }
    }
    else if ((v15 & 2) == 0)
    {
      goto LABEL_17;
    }
    unint64_t v29 = *(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v30 = *(unsigned __int8 *)(v29 + 23);
    uint64_t v31 = *(void *)(v29 + 8);
    if ((v30 & 0x80u) == 0) {
      uint64_t v31 = v30;
    }
    v9 += v31 + ((9 * (__clz(v31 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v15 & 4) == 0)
    {
LABEL_18:
      if ((v15 & 8) == 0) {
        goto LABEL_19;
      }
      goto LABEL_55;
    }
LABEL_52:
    unint64_t v32 = *(void *)(a1 + 88) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v33 = *(unsigned __int8 *)(v32 + 23);
    uint64_t v34 = *(void *)(v32 + 8);
    if ((v33 & 0x80u) == 0) {
      uint64_t v34 = v33;
    }
    v9 += v34 + ((9 * (__clz(v34 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v15 & 8) == 0)
    {
LABEL_19:
      if ((v15 & 0x10) == 0)
      {
LABEL_24:
        uint64_t v19 = v9 + 2;
        if ((v15 & 0x20) == 0) {
          uint64_t v19 = v9;
        }
        if ((v15 & 0x40) != 0) {
          v19 += 2;
        }
        if ((v15 & 0x80) != 0) {
          uint64_t v9 = v19 + 2;
        }
        else {
          uint64_t v9 = v19;
        }
        goto LABEL_31;
      }
LABEL_20:
      int v16 = *(_DWORD *)(a1 + 104);
      uint64_t v17 = ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if (v16 >= 0) {
        uint64_t v18 = v17;
      }
      else {
        uint64_t v18 = 11;
      }
      v9 += v18;
      goto LABEL_24;
    }
LABEL_55:
    unint64_t v35 = *(void *)(a1 + 96) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v36 = *(unsigned __int8 *)(v35 + 23);
    uint64_t v37 = *(void *)(v35 + 8);
    if ((v36 & 0x80u) == 0) {
      uint64_t v37 = v36;
    }
    v9 += v37 + ((9 * (__clz(v37 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v15 & 0x10) == 0) {
      goto LABEL_24;
    }
    goto LABEL_20;
  }
LABEL_31:
  if ((v15 & 0xF00) != 0)
  {
    uint64_t v20 = v9 + 2;
    if ((v15 & 0x100) == 0) {
      uint64_t v20 = v9;
    }
    if ((v15 & 0x200) != 0) {
      v20 += 9;
    }
    if ((v15 & 0x400) != 0) {
      uint64_t v9 = v20 + 2;
    }
    else {
      uint64_t v9 = v20;
    }
    if ((v15 & 0x800) != 0)
    {
      int v21 = *(_DWORD *)(a1 + 124);
      uint64_t v22 = ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if (v21 >= 0) {
        uint64_t v23 = v22;
      }
      else {
        uint64_t v23 = 11;
      }
      v9 += v23;
    }
  }
  uint64_t v24 = *(void *)(a1 + 8);
  if (v24)
  {
    unint64_t v38 = v24 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v38 + 31) < 0) {
      uint64_t v39 = *(void *)(v38 + 16);
    }
    else {
      uint64_t v39 = *(unsigned __int8 *)(v38 + 31);
    }
    v9 += v39;
  }
  *(_DWORD *)(a1 + 20) = v9;
  return v9;
}

std::string *sub_12CFEA8(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (const std::string **)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = (std::string *)sub_188FB98((uint64_t)&v3[1], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2]- LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    uint64_t v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    char v11 = (std::string **)sub_188CCE4((uint64_t)&v3[2], *(_DWORD *)(a2 + 56));
    uint64_t result = sub_12D3980(v3 + 2, v11, v10, v9, *(_DWORD *)v3[2].__r_.__value_.__r.__words[2] - LODWORD(v3[2].__r_.__value_.__r.__words[1]));
    int v12 = LODWORD(v3[2].__r_.__value_.__r.__words[1]) + v9;
    LODWORD(v3[2].__r_.__value_.__r.__words[1]) = v12;
    uint64_t v13 = (int *)v3[2].__r_.__value_.__r.__words[2];
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 16);
  if ((_BYTE)v14)
  {
    if (v14)
    {
      int v16 = (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v18 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v18 = (uint64_t *)*v18;
      }
      uint64_t result = sub_1881DF4((std::string **)&v3[3], v16, v18);
      if ((v14 & 2) == 0)
      {
LABEL_10:
        if ((v14 & 4) == 0) {
          goto LABEL_11;
        }
        goto LABEL_35;
      }
    }
    else if ((v14 & 2) == 0)
    {
      goto LABEL_10;
    }
    uint64_t v19 = (long long *)(*(void *)(a2 + 80) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    std::string::size_type v20 = v3->__r_.__value_.__l.__size_;
    int v21 = (uint64_t *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
    if (v20) {
      int v21 = (uint64_t *)*v21;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[3].__r_.__value_.__l.__size_, v19, v21);
    if ((v14 & 4) == 0)
    {
LABEL_11:
      if ((v14 & 8) == 0) {
        goto LABEL_12;
      }
      goto LABEL_38;
    }
LABEL_35:
    uint64_t v22 = (long long *)(*(void *)(a2 + 88) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
    std::string::size_type v23 = v3->__r_.__value_.__l.__size_;
    uint64_t v24 = (uint64_t *)(v23 & 0xFFFFFFFFFFFFFFFCLL);
    if (v23) {
      uint64_t v24 = (uint64_t *)*v24;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[3].__r_.__value_.__r.__words[2], v22, v24);
    if ((v14 & 8) == 0)
    {
LABEL_12:
      if ((v14 & 0x10) == 0) {
        goto LABEL_13;
      }
      goto LABEL_41;
    }
LABEL_38:
    uint64_t v25 = (long long *)(*(void *)(a2 + 96) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 8u;
    std::string::size_type v26 = v3->__r_.__value_.__l.__size_;
    uint64_t v27 = (uint64_t *)(v26 & 0xFFFFFFFFFFFFFFFCLL);
    if (v26) {
      uint64_t v27 = (uint64_t *)*v27;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[4], v25, v27);
    if ((v14 & 0x10) == 0)
    {
LABEL_13:
      if ((v14 & 0x20) == 0) {
        goto LABEL_14;
      }
      goto LABEL_42;
    }
LABEL_41:
    LODWORD(v3[4].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 104);
    if ((v14 & 0x20) == 0)
    {
LABEL_14:
      if ((v14 & 0x40) == 0) {
        goto LABEL_15;
      }
      goto LABEL_43;
    }
LABEL_42:
    v3[4].__r_.__value_.__s.__data_[12] = *(unsigned char *)(a2 + 108);
    if ((v14 & 0x40) == 0)
    {
LABEL_15:
      if ((v14 & 0x80) == 0)
      {
LABEL_17:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v14;
        goto LABEL_18;
      }
LABEL_16:
      v3[4].__r_.__value_.__s.__data_[14] = *(unsigned char *)(a2 + 110);
      goto LABEL_17;
    }
LABEL_43:
    v3[4].__r_.__value_.__s.__data_[13] = *(unsigned char *)(a2 + 109);
    if ((v14 & 0x80) == 0) {
      goto LABEL_17;
    }
    goto LABEL_16;
  }
LABEL_18:
  if ((v14 & 0xF00) == 0) {
    goto LABEL_25;
  }
  if ((v14 & 0x100) != 0)
  {
    v3[4].__r_.__value_.__s.__data_[15] = *(unsigned char *)(a2 + 111);
    if ((v14 & 0x200) == 0)
    {
LABEL_21:
      if ((v14 & 0x400) == 0) {
        goto LABEL_22;
      }
LABEL_47:
      v3[5].__r_.__value_.__s.__data_[0] = *(unsigned char *)(a2 + 120);
      if ((v14 & 0x800) == 0) {
        goto LABEL_24;
      }
      goto LABEL_23;
    }
  }
  else if ((v14 & 0x200) == 0)
  {
    goto LABEL_21;
  }
  v3[4].__r_.__value_.__r.__words[2] = *(void *)(a2 + 112);
  if ((v14 & 0x400) != 0) {
    goto LABEL_47;
  }
LABEL_22:
  if ((v14 & 0x800) != 0) {
LABEL_23:
  }
    HIDWORD(v3[5].__r_.__value_.__r.__words[0]) = *(_DWORD *)(a2 + 124);
LABEL_24:
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= v14;
LABEL_25:
  uint64_t v15 = *(void *)(a2 + 8);
  if (v15)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v15 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

BOOL sub_12D0168(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 56);
  do
  {
    int v2 = v1;
    if ((int)v1 < 1) {
      break;
    }
    uint64_t v3 = *(void *)(*(void *)(a1 + 64) + 8 * v1--);
  }
  while ((*(unsigned char *)(v3 + 16) & 1) != 0);
  return v2 < 1;
}

void *sub_12D0198@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "ag_base.proto.LexToken");
}

uint64_t sub_12D01A8(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  sub_12D3900((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12D0254(uint64_t a1)
{
  sub_12D01A8(a1);

  operator delete();
}

uint64_t sub_12D028C(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_12CEDDC(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  if (*(unsigned char *)(v1 + 16))
  {
    unint64_t v5 = *(void *)(v1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v5 + 23) < 0)
    {
      **(unsigned char **)unint64_t v5 = 0;
      *(void *)(v5 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v5 = 0;
      *(unsigned char *)(v5 + 23) = 0;
    }
  }
  char v7 = *(unsigned char *)(v1 + 8);
  uint64_t v6 = v1 + 8;
  *(_DWORD *)(v6 + 8) = 0;
  if (v7)
  {
    return sub_188B4AC((uint64_t *)v6);
  }
  return result;
}

uint64_t sub_12D033C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v24 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v24, a3[11].i32[1])) {
    return *(void *)v24;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    char v7 = (char *)(*(void *)v24 + 1);
    unsigned int v8 = **(unsigned char **)v24;
    if ((char)**(unsigned char **)v24 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        char v7 = (char *)sub_188C180(*(uint64_t *)v24, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        char v7 = (char *)(*(void *)v24 + 2);
      }
    }
    *(void *)uint64_t v24 = v7;
    if (v8 >> 3 != 2) {
      break;
    }
    if (v8 != 18) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v15 = *(void *)(a1 + 8);
    int v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
    if (v15) {
      int v16 = (uint64_t *)*v16;
    }
    uint64_t v17 = (std::string *)sub_1880F84((void *)(a1 + 48), v16);
    int v14 = (void *)sub_188C244(v17, *(char **)v24, (uint64_t)a3);
LABEL_24:
    *(void *)uint64_t v24 = v14;
    if (!v14) {
      goto LABEL_39;
    }
LABEL_25:
    if (sub_11947B8((uint64_t)a3, (char **)v24, a3[11].i32[1])) {
      return *(void *)v24;
    }
  }
  if (v8 >> 3 == 1 && v8 == 10)
  {
    uint64_t v18 = v7 - 1;
    while (1)
    {
      uint64_t v19 = (unsigned __int8 *)(v18 + 1);
      *(void *)uint64_t v24 = v18 + 1;
      std::string::size_type v20 = *(_DWORD **)(a1 + 40);
      if (v20 && (uint64_t v21 = *(int *)(a1 + 32), (int)v21 < *v20))
      {
        *(_DWORD *)(a1 + 32) = v21 + 1;
        uint64_t v22 = *(void *)&v20[2 * v21 + 2];
      }
      else
      {
        std::string::size_type v23 = sub_12D0AC0(*(void *)(a1 + 24));
        uint64_t v22 = sub_188CDC8(a1 + 24, (uint64_t)v23);
        uint64_t v19 = *(unsigned __int8 **)v24;
      }
      uint64_t v18 = (char *)sub_12D053C(a3, v22, v19);
      *(void *)uint64_t v24 = v18;
      if (!v18) {
        goto LABEL_39;
      }
      if (*(void *)a3 <= (unint64_t)v18 || *v18 != 10) {
        goto LABEL_25;
      }
    }
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      char v7 = *(char **)v24;
    }
    int v14 = sub_1885AC0(v8, v13, v7, a3);
    goto LABEL_24;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v24;
  }
LABEL_39:
  *(void *)uint64_t v24 = 0;
  return *(void *)v24;
}

uint64_t sub_12D053C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12CEF60(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_12D05CC(uint64_t a1, char *__dst, void *a3)
{
  int v6 = *(_DWORD *)(a1 + 32);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unsigned int v10 = __dst + 2;
      }
      __dst = sub_12CF6E0(v8, v10, a3);
    }
  }
  if (*(unsigned char *)(a1 + 16)) {
    __dst = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return __dst;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    int v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    int v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*a3 - (void)__dst >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(__dst, v14, (int)v15);
    __dst += v16;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, __dst);
}

uint64_t sub_12D0734(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_12CFBB4(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v8 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v9 = *(unsigned __int8 *)(v8 + 23);
    uint64_t v10 = *(void *)(v8 + 8);
    if ((v9 & 0x80u) == 0) {
      uint64_t v10 = v9;
    }
    v2 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v13 + 31) < 0) {
      uint64_t v14 = *(void *)(v13 + 16);
    }
    else {
      uint64_t v14 = *(unsigned __int8 *)(v13 + 31);
    }
    v2 += v14;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_12D082C(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = sub_12D39FC(v3 + 1, v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2] - LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    unint64_t v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *unint64_t v8 = v7;
    }
  }
  if (*(unsigned char *)(a2 + 16))
  {
    uint64_t v9 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
    std::string::size_type size = v3->__r_.__value_.__l.__size_;
    uint64_t v11 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
    if (size) {
      uint64_t v11 = (uint64_t *)*v11;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[2], v9, v11);
  }
  uint64_t v12 = *(void *)(a2 + 8);
  if (v12)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v12 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_12D0934(uint64_t a1)
{
  return sub_12D093C(a1 + 24);
}

uint64_t sub_12D093C(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 8);
  if ((int)v1 >= 1)
  {
    do
    {
      uint64_t v2 = v1--;
      uint64_t v3 = *(void *)(*(void *)(a1 + 16) + 8 * v1 + 8);
      uint64_t v4 = *(unsigned int *)(v3 + 56);
      uint64_t v5 = *(void *)(v3 + 64);
      while ((int)v4 >= 1)
      {
        uint64_t v6 = *(void *)(v5 + 8 * v4--);
        if ((*(unsigned char *)(v6 + 16) & 1) == 0) {
          return 0;
        }
      }
    }
    while (v2 >= 2);
  }
  return 1;
}

void *sub_12D0998@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "ag_base.proto.LexTokenSet");
}

uint64_t sub_12D09A8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = &off_24A5B08;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

void *sub_12D0A3C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = &off_24A5B88;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = 0;
  return result;
}

void *sub_12D0AC0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = &off_24A5C08;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = a1;
  result[7] = 0;
  result[8] = 0;
  result[9] = &qword_2550250;
  result[10] = &qword_2550250;
  result[11] = &qword_2550250;
  result[12] = &qword_2550250;
  result[14] = 0;
  result[15] = 0;
  result[13] = 0;
  return result;
}

void *sub_12D0B7C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = &off_24A5C88;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = &qword_2550250;
  return result;
}

void *sub_12D0C20(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_12D0CA4((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void ***sub_12D0CA4(uint64_t a1)
{
  uint64_t v3 = *(uint64_t **)(a1 + 24);
  uint64_t v2 = (void ***)(a1 + 24);
  if (v3 != &qword_2550250) {
    sub_1881C6C(v2);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(uint64_t **)(a1 + 40) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 40));
  }
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 48));
  }
  uint64_t result = (void ***)(a1 + 56);
  if (*(uint64_t **)(a1 + 56) != &qword_2550250) {
    sub_1881C6C(result);
  }
  if ((uint64_t (***)())a1 != &off_2531570)
  {
    uint64_t v5 = *(void *)(a1 + 64);
    if (v5)
    {
      sub_12D01A8(v5);
      operator delete();
    }
    uint64_t result = *(void ****)(a1 + 72);
    if (result)
    {
      sub_12CE174(result);
      operator delete();
    }
  }
  return result;
}

void sub_12D0D98(void *a1)
{
  sub_12D0C20(a1);

  operator delete();
}

uint64_t sub_12D0DD0(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 0x7F) == 0) {
    goto LABEL_33;
  }
  if (v2)
  {
    unint64_t v3 = *(void *)(result + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)unint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
      if ((v2 & 2) != 0) {
        goto LABEL_14;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
      if ((v2 & 2) != 0) {
        goto LABEL_14;
      }
    }
LABEL_4:
    if ((v2 & 4) == 0) {
      goto LABEL_5;
    }
LABEL_18:
    unint64_t v5 = *(void *)(result + 40) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v5 + 23) < 0)
    {
      **(unsigned char **)unint64_t v5 = 0;
      *(void *)(v5 + 8) = 0;
      if ((v2 & 8) != 0) {
        goto LABEL_22;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v5 = 0;
      *(unsigned char *)(v5 + 23) = 0;
      if ((v2 & 8) != 0) {
        goto LABEL_22;
      }
    }
LABEL_6:
    if ((v2 & 0x10) == 0) {
      goto LABEL_7;
    }
LABEL_26:
    unint64_t v7 = *(void *)(result + 56) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v7 + 23) < 0)
    {
      **(unsigned char **)unint64_t v7 = 0;
      *(void *)(v7 + 8) = 0;
      if ((v2 & 0x20) != 0) {
        goto LABEL_30;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v7 = 0;
      *(unsigned char *)(v7 + 23) = 0;
      if ((v2 & 0x20) != 0) {
        goto LABEL_30;
      }
    }
LABEL_8:
    if ((v2 & 0x40) == 0) {
      goto LABEL_33;
    }
    goto LABEL_31;
  }
  if ((v2 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_14:
  unint64_t v4 = *(void *)(result + 32) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v4 + 23) < 0)
  {
    **(unsigned char **)unint64_t v4 = 0;
    *(void *)(v4 + 8) = 0;
    if ((v2 & 4) != 0) {
      goto LABEL_18;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v4 = 0;
    *(unsigned char *)(v4 + 23) = 0;
    if ((v2 & 4) != 0) {
      goto LABEL_18;
    }
  }
LABEL_5:
  if ((v2 & 8) == 0) {
    goto LABEL_6;
  }
LABEL_22:
  unint64_t v6 = *(void *)(result + 48) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v6 + 23) < 0)
  {
    **(unsigned char **)unint64_t v6 = 0;
    *(void *)(v6 + 8) = 0;
    if ((v2 & 0x10) != 0) {
      goto LABEL_26;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v6 = 0;
    *(unsigned char *)(v6 + 23) = 0;
    if ((v2 & 0x10) != 0) {
      goto LABEL_26;
    }
  }
LABEL_7:
  if ((v2 & 0x20) == 0) {
    goto LABEL_8;
  }
LABEL_30:
  uint64_t result = sub_12D028C(*(void *)(result + 64));
  if ((v2 & 0x40) == 0) {
    goto LABEL_33;
  }
LABEL_31:
  uint64_t v8 = *(void *)(v1 + 72);
  char v9 = *(unsigned char *)(v8 + 8);
  uint64_t result = v8 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v9) {
    uint64_t result = sub_188B4AC((uint64_t *)result);
  }
LABEL_33:
  *(_DWORD *)(v1 + 80) = 0;
  if ((v2 & 0x700) != 0)
  {
    *(unsigned char *)(v1 + 86) = 0;
    *(_WORD *)(v1 + 84) = 0;
  }
  char v11 = *(unsigned char *)(v1 + 8);
  uint64_t v10 = v1 + 8;
  *(_DWORD *)(v10 + 8) = 0;
  if (v11)
  {
    return sub_188B4AC((uint64_t *)v10);
  }
  return result;
}

uint64_t sub_12D0F6C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v47 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v47, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (unsigned __int8 *)(*(void *)v47 + 1);
    unsigned int v9 = **(unsigned char **)v47;
    if ((char)**(unsigned char **)v47 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        uint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v47, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (unsigned __int8 *)(*(void *)v47 + 2);
      }
    }
    *(void *)int v47 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_65;
        }
        v5 |= 0x100u;
        uint64_t v12 = (char *)(v8 + 1);
        uint64_t v13 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        uint64_t v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          uint64_t v12 = (char *)(v8 + 2);
LABEL_13:
          *(void *)int v47 = v12;
          *(unsigned char *)(a1 + 84) = v13 != 0;
          goto LABEL_63;
        }
        uint64_t v39 = sub_188C138((uint64_t)v8, v13);
        *(void *)int v47 = v39;
        *(unsigned char *)(a1 + 84) = v40 != 0;
        if (v39) {
          goto LABEL_63;
        }
        goto LABEL_83;
      case 2u:
        if (v9 != 18) {
          goto LABEL_65;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v15 = *(void *)(a1 + 8);
        uint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          uint64_t v16 = (uint64_t *)*v16;
        }
        uint64_t v17 = (void *)(a1 + 24);
        goto LABEL_61;
      case 3u:
        if (v9 != 26) {
          goto LABEL_65;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v18 = *(void *)(a1 + 8);
        uint64_t v16 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
        if (v18) {
          uint64_t v16 = (uint64_t *)*v16;
        }
        uint64_t v17 = (void *)(a1 + 32);
        goto LABEL_61;
      case 4u:
        if (v9 != 34) {
          goto LABEL_65;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v19 = *(void *)(a1 + 8);
        uint64_t v16 = (uint64_t *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
        if (v19) {
          uint64_t v16 = (uint64_t *)*v16;
        }
        uint64_t v17 = (void *)(a1 + 40);
        goto LABEL_61;
      case 5u:
        if (v9 != 40) {
          goto LABEL_65;
        }
        v5 |= 0x80u;
        std::string::size_type v20 = (char *)(v8 + 1);
        int v21 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_30;
        }
        int v22 = *v20;
        int v21 = v21 + (v22 << 7) - 128;
        if (v22 < 0)
        {
          uint64_t v41 = sub_188C0D0((uint64_t)v8, v21);
          *(void *)int v47 = v41;
          *(_DWORD *)(a1 + 80) = v42;
          if (!v41) {
            goto LABEL_83;
          }
        }
        else
        {
          std::string::size_type v20 = (char *)(v8 + 2);
LABEL_30:
          *(void *)int v47 = v20;
          *(_DWORD *)(a1 + 80) = v21;
        }
        goto LABEL_63;
      case 6u:
        if (v9 != 50) {
          goto LABEL_65;
        }
        *(_DWORD *)(a1 + 16) |= 0x20u;
        std::string::size_type v23 = *(void **)(a1 + 64);
        if (!v23)
        {
          uint64_t v24 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v24 = (void *)*v24;
          }
          std::string::size_type v23 = sub_12D0B7C((uint64_t)v24);
          *(void *)(a1 + 64) = v23;
          uint64_t v8 = *(unsigned __int8 **)v47;
        }
        uint64_t v25 = sub_12D1468(a3, (uint64_t)v23, v8);
        goto LABEL_62;
      case 7u:
        if (v9 != 58) {
          goto LABEL_65;
        }
        *(_DWORD *)(a1 + 16) |= 0x40u;
        uint64_t v26 = *(void *)(a1 + 72);
        if (!v26)
        {
          uint64_t v27 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v27 = (void *)*v27;
          }
          uint64_t v26 = sub_12D09A8((uint64_t)v27);
          *(void *)(a1 + 72) = v26;
          uint64_t v8 = *(unsigned __int8 **)v47;
        }
        uint64_t v25 = (uint64_t)sub_1245848(a3, v26, v8);
        goto LABEL_62;
      case 8u:
        if (v9 != 64) {
          goto LABEL_65;
        }
        v5 |= 0x200u;
        uint64_t v28 = (char *)(v8 + 1);
        uint64_t v29 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_47;
        }
        int v30 = *v28;
        uint64_t v29 = v29 + (v30 << 7) - 128;
        if (v30 < 0)
        {
          uint64_t v43 = sub_188C138((uint64_t)v8, v29);
          *(void *)int v47 = v43;
          *(unsigned char *)(a1 + 85) = v44 != 0;
          if (!v43) {
            goto LABEL_83;
          }
        }
        else
        {
          uint64_t v28 = (char *)(v8 + 2);
LABEL_47:
          *(void *)int v47 = v28;
          *(unsigned char *)(a1 + 85) = v29 != 0;
        }
        goto LABEL_63;
      case 9u:
        if (v9 != 74) {
          goto LABEL_65;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v31 = *(void *)(a1 + 8);
        uint64_t v16 = (uint64_t *)(v31 & 0xFFFFFFFFFFFFFFFCLL);
        if (v31) {
          uint64_t v16 = (uint64_t *)*v16;
        }
        uint64_t v17 = (void *)(a1 + 48);
        goto LABEL_61;
      case 0xAu:
        if (v9 != 80) {
          goto LABEL_65;
        }
        v5 |= 0x400u;
        unint64_t v32 = (char *)(v8 + 1);
        uint64_t v33 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_56;
        }
        int v34 = *v32;
        uint64_t v33 = v33 + (v34 << 7) - 128;
        if (v34 < 0)
        {
          uint64_t v45 = sub_188C138((uint64_t)v8, v33);
          *(void *)int v47 = v45;
          *(unsigned char *)(a1 + 86) = v46 != 0;
          if (!v45) {
            goto LABEL_83;
          }
        }
        else
        {
          unint64_t v32 = (char *)(v8 + 2);
LABEL_56:
          *(void *)int v47 = v32;
          *(unsigned char *)(a1 + 86) = v33 != 0;
        }
        goto LABEL_63;
      case 0xBu:
        if (v9 != 90) {
          goto LABEL_65;
        }
        *(_DWORD *)(a1 + 16) |= 0x10u;
        uint64_t v35 = *(void *)(a1 + 8);
        uint64_t v16 = (uint64_t *)(v35 & 0xFFFFFFFFFFFFFFFCLL);
        if (v35) {
          uint64_t v16 = (uint64_t *)*v16;
        }
        uint64_t v17 = (void *)(a1 + 56);
LABEL_61:
        uint64_t v36 = (std::string *)sub_1880F84(v17, v16);
        uint64_t v25 = (uint64_t)sub_188C244(v36, *(char **)v47, (uint64_t)a3);
        goto LABEL_62;
      default:
LABEL_65:
        if (v9) {
          BOOL v37 = (v9 & 7) == 4;
        }
        else {
          BOOL v37 = 1;
        }
        if (!v37)
        {
          if (*v7)
          {
            unint64_t v38 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            unint64_t v38 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = *(unsigned __int8 **)v47;
          }
          uint64_t v25 = (uint64_t)sub_1885AC0(v9, v38, (char *)v8, a3);
LABEL_62:
          *(void *)int v47 = v25;
          if (!v25) {
            goto LABEL_83;
          }
LABEL_63:
          if (sub_11947B8((uint64_t)a3, (char **)v47, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_83:
        }
          *(void *)int v47 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v47;
    }
  }
}

uint64_t sub_12D1468(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12D033C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_12D14F8(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  unint64_t v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 0x100) != 0)
  {
    if (*a3 <= __dst) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    char v7 = *(unsigned char *)(a1 + 84);
    char *v4 = 8;
    v4[1] = v7;
    v4 += 2;
    if ((v6 & 1) == 0)
    {
LABEL_3:
      if ((v6 & 2) == 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  else if ((v6 & 1) == 0)
  {
    goto LABEL_3;
  }
  unint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 2) == 0)
  {
LABEL_4:
    if ((v6 & 4) == 0) {
      goto LABEL_5;
    }
    goto LABEL_12;
  }
LABEL_11:
  unint64_t v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) == 0)
  {
LABEL_5:
    if ((v6 & 0x80) == 0) {
      goto LABEL_19;
    }
    goto LABEL_13;
  }
LABEL_12:
  unint64_t v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x80) == 0) {
    goto LABEL_19;
  }
LABEL_13:
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  unsigned int v8 = *(_DWORD *)(a1 + 80);
  char *v4 = 40;
  v4[1] = v8;
  if (v8 > 0x7F)
  {
    v4[1] = v8 | 0x80;
    unsigned int v9 = v8 >> 7;
    v4[2] = v8 >> 7;
    v4 += 3;
    if (v8 >= 0x4000)
    {
      do
      {
        *(v4 - 1) |= 0x80u;
        unsigned int v10 = v9 >> 14;
        v9 >>= 7;
        *v4++ = v9;
      }
      while (v10);
    }
  }
  else
  {
    v4 += 2;
  }
LABEL_19:
  if ((v6 & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v13 = *(void *)(a1 + 64);
    char *v4 = 50;
    unsigned int v14 = *(_DWORD *)(v13 + 20);
    v4[1] = v14;
    if (v14 > 0x7F) {
      uint64_t v15 = sub_188A9CC(v14, v4 + 1);
    }
    else {
      uint64_t v15 = v4 + 2;
    }
    unint64_t v4 = sub_12D05CC(v13, v15, a3);
    if ((v6 & 0x40) == 0)
    {
LABEL_21:
      if ((v6 & 0x200) == 0) {
        goto LABEL_22;
      }
      goto LABEL_40;
    }
  }
  else if ((v6 & 0x40) == 0)
  {
    goto LABEL_21;
  }
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v16 = *(void *)(a1 + 72);
  char *v4 = 58;
  unsigned int v17 = *(_DWORD *)(v16 + 32);
  v4[1] = v17;
  if (v17 > 0x7F) {
    uint64_t v18 = sub_188A9CC(v17, v4 + 1);
  }
  else {
    uint64_t v18 = v4 + 2;
  }
  unint64_t v4 = sub_12CE43C(v16, v18, a3);
  if ((v6 & 0x200) == 0)
  {
LABEL_22:
    if ((v6 & 8) == 0) {
      goto LABEL_23;
    }
    goto LABEL_43;
  }
LABEL_40:
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v19 = *(unsigned char *)(a1 + 85);
  char *v4 = 64;
  v4[1] = v19;
  v4 += 2;
  if ((v6 & 8) == 0)
  {
LABEL_23:
    if ((v6 & 0x400) == 0) {
      goto LABEL_24;
    }
    goto LABEL_44;
  }
LABEL_43:
  unint64_t v4 = sub_117A0AC(a3, 9, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x400) == 0)
  {
LABEL_24:
    if ((v6 & 0x10) == 0) {
      goto LABEL_26;
    }
    goto LABEL_25;
  }
LABEL_44:
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v20 = *(unsigned char *)(a1 + 86);
  char *v4 = 80;
  v4[1] = v20;
  v4 += 2;
  if ((v6 & 0x10) != 0) {
LABEL_25:
  }
    unint64_t v4 = sub_117A0AC(a3, 11, (const void **)(*(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL), v4);
LABEL_26:
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return v4;
  }
  unint64_t v21 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v21 + 31) < 0)
  {
    int v22 = *(void **)(v21 + 8);
    uint64_t v23 = *(void *)(v21 + 16);
  }
  else
  {
    int v22 = (void *)(v21 + 8);
    LODWORD(v23) = *(unsigned __int8 *)(v21 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v23)
  {
    uint64_t v24 = (int)v23;
    memcpy(v4, v22, (int)v23);
    v4 += v24;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v22, v23, v4);
}

uint64_t sub_12D1868(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if (!(_BYTE)v2)
  {
    uint64_t v3 = 0;
    goto LABEL_19;
  }
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
  uint64_t v6 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    uint64_t v6 = v5;
  }
  uint64_t v3 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 2) != 0)
  {
LABEL_9:
    unint64_t v7 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v8 = *(unsigned __int8 *)(v7 + 23);
    uint64_t v9 = *(void *)(v7 + 8);
    if ((v8 & 0x80u) == 0) {
      uint64_t v9 = v8;
    }
    v3 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v2 & 4) != 0)
  {
    unint64_t v13 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v14 = *(unsigned __int8 *)(v13 + 23);
    uint64_t v15 = *(void *)(v13 + 8);
    if ((v14 & 0x80u) == 0) {
      uint64_t v15 = v14;
    }
    v3 += v15 + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 8) == 0)
    {
LABEL_14:
      if ((v2 & 0x10) == 0) {
        goto LABEL_15;
      }
      goto LABEL_36;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_14;
  }
  unint64_t v16 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v17 = *(unsigned __int8 *)(v16 + 23);
  uint64_t v18 = *(void *)(v16 + 8);
  if ((v17 & 0x80u) == 0) {
    uint64_t v18 = v17;
  }
  v3 += v18 + ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x10) == 0)
  {
LABEL_15:
    if ((v2 & 0x20) == 0) {
      goto LABEL_16;
    }
    goto LABEL_39;
  }
LABEL_36:
  unint64_t v19 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v20 = *(unsigned __int8 *)(v19 + 23);
  uint64_t v21 = *(void *)(v19 + 8);
  if ((v20 & 0x80u) == 0) {
    uint64_t v21 = v20;
  }
  v3 += v21 + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x20) == 0)
  {
LABEL_16:
    if ((v2 & 0x40) == 0) {
      goto LABEL_17;
    }
    goto LABEL_40;
  }
LABEL_39:
  uint64_t v22 = sub_12D0734(*(void *)(a1 + 64));
  v3 += v22 + ((9 * (__clz(v22 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x40) == 0)
  {
LABEL_17:
    if ((v2 & 0x80) == 0) {
      goto LABEL_19;
    }
    goto LABEL_18;
  }
LABEL_40:
  uint64_t v23 = sub_12CE58C(*(void *)(a1 + 72));
  v3 += v23 + ((9 * (__clz(v23 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x80) != 0) {
LABEL_18:
  }
    v3 += ((9 * (__clz(*(_DWORD *)(a1 + 80) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_19:
  uint64_t v10 = v3 + 2;
  if ((v2 & 0x100) == 0) {
    uint64_t v10 = v3;
  }
  if ((v2 & 0x200) != 0) {
    v10 += 2;
  }
  if ((v2 & 0x400) != 0) {
    v10 += 2;
  }
  if ((v2 & 0x700) != 0) {
    uint64_t result = v10;
  }
  else {
    uint64_t result = v3;
  }
  uint64_t v12 = *(void *)(a1 + 8);
  if (v12)
  {
    unint64_t v24 = v12 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v24 + 31) < 0) {
      uint64_t v25 = *(void *)(v24 + 16);
    }
    else {
      uint64_t v25 = *(unsigned __int8 *)(v24 + 31);
    }
    result += v25;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

std::string *sub_12D1AFC(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((_BYTE)v4)
  {
    if (v4)
    {
      uint64_t v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      unint64_t v7 = (std::string **)&result[1];
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v9 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v9 = (uint64_t *)*v9;
      }
      uint64_t result = sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_28;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    uint64_t v10 = (long long *)(*(void *)(a2 + 32) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    std::string::size_type v11 = v3->__r_.__value_.__l.__size_;
    uint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
    if (v11) {
      uint64_t v12 = (uint64_t *)*v12;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[1].__r_.__value_.__l.__size_, v10, v12);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_31;
    }
LABEL_28:
    unint64_t v13 = (long long *)(*(void *)(a2 + 40) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
    std::string::size_type v14 = v3->__r_.__value_.__l.__size_;
    uint64_t v15 = (uint64_t *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
    if (v14) {
      uint64_t v15 = (uint64_t *)*v15;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[1].__r_.__value_.__r.__words[2], v13, v15);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0) {
        goto LABEL_7;
      }
      goto LABEL_34;
    }
LABEL_31:
    unint64_t v16 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 8u;
    std::string::size_type v17 = v3->__r_.__value_.__l.__size_;
    uint64_t v18 = (uint64_t *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
    if (v17) {
      uint64_t v18 = (uint64_t *)*v18;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[2], v16, v18);
    if ((v4 & 0x10) == 0)
    {
LABEL_7:
      if ((v4 & 0x20) == 0) {
        goto LABEL_8;
      }
      goto LABEL_37;
    }
LABEL_34:
    unint64_t v19 = (long long *)(*(void *)(a2 + 56) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x10u;
    std::string::size_type v20 = v3->__r_.__value_.__l.__size_;
    uint64_t v21 = (uint64_t *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
    if (v20) {
      uint64_t v21 = (uint64_t *)*v21;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[2].__r_.__value_.__l.__size_, v19, v21);
    if ((v4 & 0x20) == 0)
    {
LABEL_8:
      if ((v4 & 0x40) == 0) {
        goto LABEL_9;
      }
      goto LABEL_45;
    }
LABEL_37:
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x20u;
    uint64_t v22 = (std::string *)v3[2].__r_.__value_.__r.__words[2];
    if (!v22)
    {
      std::string::size_type v23 = v3->__r_.__value_.__l.__size_;
      unint64_t v24 = (void *)(v23 & 0xFFFFFFFFFFFFFFFCLL);
      if (v23) {
        unint64_t v24 = (void *)*v24;
      }
      uint64_t v22 = (std::string *)sub_12D0B7C((uint64_t)v24);
      v3[2].__r_.__value_.__r.__words[2] = (std::string::size_type)v22;
    }
    if (*(void *)(a2 + 64)) {
      uint64_t v25 = *(uint64_t (****)(uint64_t))(a2 + 64);
    }
    else {
      uint64_t v25 = &off_2531538;
    }
    uint64_t result = sub_12D082C(v22, (uint64_t)v25);
    if ((v4 & 0x40) == 0)
    {
LABEL_9:
      if ((v4 & 0x80) == 0)
      {
LABEL_11:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
        goto LABEL_12;
      }
LABEL_10:
      LODWORD(v3[3].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 80);
      goto LABEL_11;
    }
LABEL_45:
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x40u;
    std::string::pointer data = (std::string *)v3[3].__r_.__value_.__l.__data_;
    if (!data)
    {
      std::string::size_type v27 = v3->__r_.__value_.__l.__size_;
      uint64_t v28 = (void *)(v27 & 0xFFFFFFFFFFFFFFFCLL);
      if (v27) {
        uint64_t v28 = (void *)*v28;
      }
      std::string::pointer data = (std::string *)sub_12D09A8((uint64_t)v28);
      v3[3].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
    }
    if (*(void *)(a2 + 72)) {
      uint64_t v29 = *(void *(****)(void *))(a2 + 72);
    }
    else {
      uint64_t v29 = &off_2531490;
    }
    uint64_t result = sub_11E43C0(data, (uint64_t)v29);
    if ((v4 & 0x80) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
LABEL_12:
  if ((v4 & 0x700) == 0) {
    goto LABEL_18;
  }
  if ((v4 & 0x100) == 0)
  {
    if ((v4 & 0x200) == 0) {
      goto LABEL_15;
    }
LABEL_55:
    v3[3].__r_.__value_.__s.__data_[13] = *(unsigned char *)(a2 + 85);
    if ((v4 & 0x400) == 0) {
      goto LABEL_17;
    }
    goto LABEL_16;
  }
  v3[3].__r_.__value_.__s.__data_[12] = *(unsigned char *)(a2 + 84);
  if ((v4 & 0x200) != 0) {
    goto LABEL_55;
  }
LABEL_15:
  if ((v4 & 0x400) != 0) {
LABEL_16:
  }
    v3[3].__r_.__value_.__s.__data_[14] = *(unsigned char *)(a2 + 86);
LABEL_17:
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
LABEL_18:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_12D1D80(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 0x20) == 0) {
    return 1;
  }
  uint64_t result = sub_12D093C(*(void *)(a1 + 64) + 24);
  if (result) {
    return 1;
  }
  return result;
}

void *sub_12D1DB0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "ag_spell.proto.LocalizedName");
}

uint64_t sub_12D1DC0(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12D1E60(uint64_t a1)
{
  sub_12D1DC0(a1);

  operator delete();
}

uint64_t sub_12D1E98(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v1 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v1 + 23) < 0)
    {
      **(unsigned char **)unint64_t v1 = 0;
      *(void *)(v1 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v1 = 0;
      *(unsigned char *)(v1 + 23) = 0;
    }
  }
  char v3 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v3) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_12D1EE0(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unint64_t v19 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v19, a3[11].i32[1])) {
    goto LABEL_30;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    unint64_t v7 = (char *)(*(void *)v19 + 1);
    unsigned int v8 = **(unsigned char **)v19;
    if ((char)**(unsigned char **)v19 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        unint64_t v7 = (char *)sub_188C180(*(uint64_t *)v19, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        unint64_t v7 = (char *)(*(void *)v19 + 2);
      }
    }
    *(void *)unint64_t v19 = v7;
    if (v8 >> 3 == 2) {
      break;
    }
    if (v8 >> 3 != 1 || v8 != 10) {
      goto LABEL_12;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v15 = *(void *)(a1 + 8);
    unint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
    if (v15) {
      unint64_t v16 = (uint64_t *)*v16;
    }
    std::string::size_type v17 = (std::string *)sub_1880F84((void *)(a1 + 24), v16);
    std::string::size_type v14 = (void *)sub_188C244(v17, *(char **)v19, (uint64_t)a3);
LABEL_24:
    *(void *)unint64_t v19 = v14;
    if (!v14) {
      goto LABEL_31;
    }
LABEL_25:
    if (sub_11947B8((uint64_t)a3, (char **)v19, a3[11].i32[1])) {
      goto LABEL_30;
    }
  }
  if (v8 == 17)
  {
    v5 |= 2u;
    *(void *)(a1 + 32) = *(void *)v7;
    *(void *)unint64_t v19 = v7 + 8;
    goto LABEL_25;
  }
LABEL_12:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      unint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unint64_t v7 = *(char **)v19;
    }
    std::string::size_type v14 = sub_1885AC0(v8, v13, v7, a3);
    goto LABEL_24;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    goto LABEL_30;
  }
LABEL_31:
  *(void *)unint64_t v19 = 0;
LABEL_30:
  *(_DWORD *)(a1 + 16) |= v5;
  return *(void *)v19;
}

char *sub_12D207C(uint64_t a1, char *__dst, void *a3)
{
  int v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    int v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v7 = *(void *)(a1 + 32);
    char *v4 = 17;
    *(void *)(v4 + 1) = v7;
    v4 += 9;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if ((v8 & 1) == 0) {
    return v4;
  }
  unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v10 + 31) < 0)
  {
    std::string::size_type v11 = *(void **)(v10 + 8);
    uint64_t v12 = *(void *)(v10 + 16);
  }
  else
  {
    std::string::size_type v11 = (void *)(v10 + 8);
    LODWORD(v12) = *(unsigned __int8 *)(v10 + 31);
  }
  if (*a3 - (void)v4 >= (int)v12)
  {
    uint64_t v13 = (int)v12;
    memcpy(v4, v11, (int)v12);
    v4 += v13;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v11, v12, v4);
}

uint64_t sub_12D2180(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) != 0)
  {
    if (v1)
    {
      unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
      uint64_t v6 = *(void *)(v4 + 8);
      if ((v5 & 0x80u) == 0) {
        uint64_t v6 = v5;
      }
      uint64_t v2 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    else
    {
      uint64_t v2 = 0;
    }
    if ((v1 & 2) != 0) {
      uint64_t v3 = v2 + 9;
    }
    else {
      uint64_t v3 = v2;
    }
  }
  else
  {
    uint64_t v3 = 0;
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v9 + 31) < 0) {
      uint64_t v10 = *(void *)(v9 + 16);
    }
    else {
      uint64_t v10 = *(unsigned __int8 *)(v9 + 31);
    }
    v3 += v10;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

uint64_t sub_12D2220()
{
  return 1;
}

void *sub_12D2228@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "ag_spell.proto.LanguageCodeWithWeight");
}

uint64_t sub_12D2238(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  unint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_11;
    }
  }
  else if (v4)
  {
    goto LABEL_11;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(uint64_t **)(a1 + 40) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 40));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_11:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12D2304(uint64_t a1)
{
  sub_12D2238(a1);

  operator delete();
}

uint64_t sub_12D233C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 7) == 0) {
    goto LABEL_17;
  }
  if (v1)
  {
    unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)unint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
      if ((v1 & 2) != 0) {
        goto LABEL_10;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
      if ((v1 & 2) != 0) {
        goto LABEL_10;
      }
    }
LABEL_4:
    if ((v1 & 4) == 0) {
      goto LABEL_17;
    }
LABEL_14:
    unint64_t v4 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v4 + 23) < 0)
    {
      **(unsigned char **)unint64_t v4 = 0;
      *(void *)(v4 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v4 = 0;
      *(unsigned char *)(v4 + 23) = 0;
    }
    goto LABEL_17;
  }
  if ((v1 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_10:
  unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v3 + 23) < 0)
  {
    **(unsigned char **)unint64_t v3 = 0;
    *(void *)(v3 + 8) = 0;
    if ((v1 & 4) == 0) {
      goto LABEL_17;
    }
    goto LABEL_14;
  }
  *(unsigned char *)unint64_t v3 = 0;
  *(unsigned char *)(v3 + 23) = 0;
  if ((v1 & 4) != 0) {
    goto LABEL_14;
  }
LABEL_17:
  char v6 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v6) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_12D23F4(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v22 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v22, a3[11].i32[1])) {
    return *(void *)v22;
  }
  char v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = (char *)(*(void *)v22 + 1);
    unsigned int v8 = **(unsigned char **)v22;
    if ((char)**(unsigned char **)v22 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180(*(uint64_t *)v22, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (char *)(*(void *)v22 + 2);
      }
    }
    *(void *)uint64_t v22 = v7;
    unsigned int v11 = v8 >> 3;
    if (v8 >> 3 == 3)
    {
      if (v8 == 26)
      {
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v16 = *(void *)(a1 + 8);
        std::string::size_type v17 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
        if (v16) {
          std::string::size_type v17 = (uint64_t *)*v17;
        }
        uint64_t v18 = (void *)(a1 + 40);
        goto LABEL_32;
      }
    }
    else if (v11 == 2)
    {
      if (v8 == 18)
      {
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v19 = *(void *)(a1 + 8);
        std::string::size_type v17 = (uint64_t *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
        if (v19) {
          std::string::size_type v17 = (uint64_t *)*v17;
        }
        uint64_t v18 = (void *)(a1 + 32);
        goto LABEL_32;
      }
    }
    else if (v11 == 1 && v8 == 10)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v20 = *(void *)(a1 + 8);
      std::string::size_type v17 = (uint64_t *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
      if (v20) {
        std::string::size_type v17 = (uint64_t *)*v17;
      }
      uint64_t v18 = (void *)(a1 + 24);
LABEL_32:
      uint64_t v21 = (std::string *)sub_1880F84(v18, v17);
      uint64_t v15 = (void *)sub_188C244(v21, *(char **)v22, (uint64_t)a3);
      goto LABEL_33;
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      std::string::size_type v14 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      std::string::size_type v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = *(char **)v22;
    }
    uint64_t v15 = sub_1885AC0(v8, v14, v7, a3);
LABEL_33:
    *(void *)uint64_t v22 = v15;
    if (!v15) {
      goto LABEL_39;
    }
    if (sub_11947B8((uint64_t)a3, (char **)v22, a3[11].i32[1])) {
      return *(void *)v22;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v22;
  }
LABEL_39:
  *(void *)uint64_t v22 = 0;
  return *(void *)v22;
}

char *sub_12D25E4(uint64_t a1, char *__dst, void *a3)
{
  unint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    unint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_4;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  unint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) != 0) {
LABEL_4:
  }
    unint64_t v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL), v4);
LABEL_5:
  uint64_t v7 = *(void *)(a1 + 8);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v9 + 31) < 0)
  {
    unsigned int v10 = *(void **)(v9 + 8);
    uint64_t v11 = *(void *)(v9 + 16);
  }
  else
  {
    unsigned int v10 = (void *)(v9 + 8);
    LODWORD(v11) = *(unsigned __int8 *)(v9 + 31);
  }
  if (*a3 - (void)v4 >= (int)v11)
  {
    uint64_t v12 = (int)v11;
    memcpy(v4, v10, (int)v11);
    v4 += v12;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v10, v11, v4);
}

uint64_t sub_12D26FC(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 7) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_16;
  }
  if (v1)
  {
    unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
    uint64_t v5 = *(void *)(v3 + 8);
    if ((v4 & 0x80u) == 0) {
      uint64_t v5 = v4;
    }
    uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  uint64_t v2 = 0;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    unint64_t v6 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v1 & 4) != 0)
  {
    unint64_t v9 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v10 = *(unsigned __int8 *)(v9 + 23);
    uint64_t v11 = *(void *)(v9 + 8);
    if ((v10 & 0x80u) == 0) {
      uint64_t v11 = v10;
    }
    v2 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_16:
  uint64_t v12 = *(void *)(a1 + 8);
  if (v12)
  {
    unint64_t v14 = v12 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v14 + 31) < 0) {
      uint64_t v15 = *(void *)(v14 + 16);
    }
    else {
      uint64_t v15 = *(unsigned __int8 *)(v14 + 31);
    }
    v2 += v15;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_12D281C()
{
  return 1;
}

void *sub_12D2824@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "ag_spell.proto.Locale");
}

void *sub_12D2834(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = &off_24A5D08;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = &qword_2550250;
  result[5] = &qword_2550250;
  result[6] = &qword_2550250;
  result[8] = 0;
  result[9] = 0;
  result[7] = &qword_2550250;
  *(void *)((char *)result + 79) = 0;
  return result;
}

void *sub_12D28C8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = &off_24A5D88;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = 0;
  return result;
}

void *sub_12D294C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = &off_24A5E08;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = &qword_2550250;
  result[5] = &qword_2550250;
  return result;
}

void sub_12D29D4()
{
}

uint64_t sub_12D2A24(uint64_t a1, uint64_t a2)
{
  return sub_12D09A8(a2);
}

uint64_t sub_12D2A2C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

void sub_12D2A34()
{
}

void *sub_12D2A8C(uint64_t a1, uint64_t a2)
{
  return sub_12D0A3C(a2);
}

uint64_t sub_12D2A94(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12D2A9C()
{
}

void *sub_12D2B08(uint64_t a1, uint64_t a2)
{
  return sub_12D0AC0(a2);
}

uint64_t sub_12D2B10(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12D2B18()
{
}

void *sub_12D2B74(uint64_t a1, uint64_t a2)
{
  return sub_12D0B7C(a2);
}

uint64_t sub_12D2B7C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12D2B84()
{
}

void *sub_12D2BEC(uint64_t a1, uint64_t a2)
{
  return sub_12D2834(a2);
}

uint64_t sub_12D2BF4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12D2BFC()
{
}

void *sub_12D2C54(uint64_t a1, uint64_t a2)
{
  return sub_12D28C8(a2);
}

uint64_t sub_12D2C5C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12D2C64()
{
}

void *sub_12D2CC0(uint64_t a1, uint64_t a2)
{
  return sub_12D294C(a2);
}

uint64_t sub_12D2CC8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12D2CD0()
{
}

void *sub_12D2D1C(uint64_t a1, uint64_t a2)
{
  return sub_12CCA5C(a2);
}

uint64_t sub_12D2D24(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12D2D2C()
{
}

void *sub_12D2D7C(uint64_t a1, uint64_t a2)
{
  return sub_12CCAD4(a2);
}

uint64_t sub_12D2D84(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12D2D8C()
{
}

uint64_t sub_12D2DE0(uint64_t a1, uint64_t a2)
{
  return sub_12CCB50(a2);
}

uint64_t sub_12D2DE8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_12D2DF0()
{
}

double sub_12D2E4C(uint64_t a1, uint64_t a2)
{
  return sub_12CCBF0(a2);
}

uint64_t sub_12D2E54(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12D2E5C()
{
}

void *sub_12D2EBC(uint64_t a1, uint64_t a2)
{
  return sub_12CCC78(a2);
}

uint64_t sub_12D2EC4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12D2ECC()
{
}

double sub_12D2F20(uint64_t a1, uint64_t a2)
{
  return sub_12CCD04(a2);
}

uint64_t sub_12D2F28(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12D2F30()
{
}

uint64_t sub_12D2F94(uint64_t a1, uint64_t a2)
{
  return sub_12CE0C8(a2);
}

uint64_t sub_12D2F9C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12D2FA4()
{
}

uint64_t sub_12D3000(uint64_t a1, uint64_t a2)
{
  return sub_12CD40C(a2);
}

uint64_t sub_12D3008(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12D3010()
{
}

uint64_t sub_12D3074(uint64_t a1, uint64_t a2)
{
  return sub_12C6100(a2);
}

uint64_t sub_12D307C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 104);
}

void sub_12D3084()
{
}

uint64_t sub_12D30D4(uint64_t a1, uint64_t a2)
{
  return sub_12C87DC(a2);
}

uint64_t sub_12D30DC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12D30E4()
{
}

void *sub_12D3148(uint64_t a1, uint64_t a2)
{
  return sub_12C8858(a2);
}

uint64_t sub_12D3150(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12D3158()
{
}

void *sub_12D31BC(uint64_t a1, uint64_t a2)
{
  return sub_12C8908(a2);
}

uint64_t sub_12D31C4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12D31CC()
{
}

void *sub_12D3228(uint64_t a1, uint64_t a2)
{
  return sub_12C89B8(a2);
}

uint64_t sub_12D3230(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12D3238(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    unint64_t v3 = v2 + 2;
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_150C6F8();
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

uint64_t *sub_12D32B8(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    uint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      uint64_t result = (uint64_t *)sub_150EF04(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = (uint64_t *)sub_12D3334(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_12D3334(uint64_t a1, std::string *a2)
{
  return sub_150D70C(a2, a1);
}

void sub_12D3344(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    unint64_t v3 = v2 + 2;
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_12C68C8();
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_12D33C4(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    unint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_12C7460(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_12D3444(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    unint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_12C7F70(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

uint64_t *sub_12D34C4(uint64_t *result, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    uint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      uint64_t result = sub_12C8858(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = (uint64_t *)sub_12D3540(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

uint64_t sub_12D3540(uint64_t a1, uint64_t a2)
{
  return sub_12C72A0(a2, a1);
}

std::string *sub_12D3550(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      uint64_t result = (std::string *)sub_12C8908(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = sub_12D35CC(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_12D35CC(uint64_t a1, std::string *a2)
{
  return sub_12C7DCC(a2, a1);
}

std::string *sub_12D35DC(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      uint64_t result = (std::string *)sub_12C89B8(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = sub_12D3658(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_12D3658(uint64_t a1, std::string *a2)
{
  return sub_12C8694(a2, a1);
}

void sub_12D3668(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    unint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_12C93FC(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

std::string *sub_12D36E8(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      uint64_t result = (std::string *)sub_12CCAD4(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = sub_12D3764(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_12D3764(uint64_t a1, std::string *a2)
{
  return sub_12C9A04(a2, a1);
}

void sub_12D3774(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    unint64_t v3 = v2 + 2;
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_12CD494();
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

uint64_t *sub_12D37F4(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    uint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      uint64_t result = (uint64_t *)sub_12CE0C8(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = (uint64_t *)sub_12D3870(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_12D3870(uint64_t a1, std::string *a2)
{
  return sub_12CDEA0(a2, a1);
}

void sub_12D3880(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    unint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_12CE604(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_12D3900(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    unint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_12CECB0(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

std::string *sub_12D3980(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      uint64_t result = (std::string *)sub_12D0A3C(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = sub_122BD90(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_12D39FC(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      uint64_t result = (std::string *)sub_12D0AC0(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = sub_12D3A78(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_12D3A78(uint64_t a1, std::string *a2)
{
  return sub_12CFEA8(a2, a1);
}

uint64_t sub_12D3A88(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 3) != 0)
  {
    *(_DWORD *)(a1 + 32) = 0;
    *(void *)(a1 + 24) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_12D3AB0(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 3) != 0)
  {
    *(_DWORD *)(a1 + 32) = 0;
    *(void *)(a1 + 24) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_12D3AD8(uint64_t a1)
{
  unint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_12D3B5C((uint64_t (***)())a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

uint64_t (***sub_12D3B5C(uint64_t (***result)()))()
{
  if (result != &off_25315F8)
  {
    int v1 = result;
    uint64_t v2 = result[3];
    if (v2)
    {
      sub_12EE48C(v2);
      operator delete();
    }
    unint64_t v3 = v1[4];
    if (v3)
    {
      sub_12EE48C(v3);
      operator delete();
    }
    uint64_t v4 = v1[5];
    if (v4)
    {
      sub_12EDF88(v4);
      operator delete();
    }
    uint64_t result = (uint64_t (***)())v1[6];
    if (result)
    {
      sub_12EDF88(result);
      operator delete();
    }
  }
  return result;
}

void sub_12D3C28(uint64_t a1)
{
  sub_12D3AD8(a1);

  operator delete();
}

uint64_t sub_12D3C60(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 0xF) == 0) {
    goto LABEL_7;
  }
  if ((v2 & 1) == 0)
  {
    if ((v2 & 2) == 0) {
      goto LABEL_4;
    }
LABEL_12:
    uint64_t result = sub_12D3A88(*(void *)(v1 + 32));
    if ((v2 & 4) == 0)
    {
LABEL_5:
      if ((v2 & 8) == 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
    goto LABEL_13;
  }
  uint64_t result = sub_12D3A88(*(void *)(result + 24));
  if ((v2 & 2) != 0) {
    goto LABEL_12;
  }
LABEL_4:
  if ((v2 & 4) == 0) {
    goto LABEL_5;
  }
LABEL_13:
  uint64_t result = sub_12D3AB0(*(void *)(v1 + 40));
  if ((v2 & 8) != 0) {
LABEL_6:
  }
    uint64_t result = sub_12D3AB0(*(void *)(v1 + 48));
LABEL_7:
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_12D3CF8(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v20 = a2;
  if (sub_11947B8((uint64_t)a3, &v20, a3[11].i32[1])) {
    return v20;
  }
  unint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v7 = v20 + 1;
    unsigned int v8 = *v20;
    if (*v20 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v20, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v20 + 2;
      }
    }
    uint64_t v20 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 10) {
          goto LABEL_33;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v11 = *(void *)(a1 + 24);
        if (v11) {
          goto LABEL_20;
        }
        uint64_t v12 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          uint64_t v12 = (void *)*v12;
        }
        uint64_t v11 = sub_12F816C((uint64_t)v12);
        *(void *)(a1 + 24) = v11;
        goto LABEL_19;
      case 2u:
        if (v8 != 18) {
          goto LABEL_33;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v11 = *(void *)(a1 + 32);
        if (!v11)
        {
          uint64_t v13 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v13 = (void *)*v13;
          }
          uint64_t v11 = sub_12F816C((uint64_t)v13);
          *(void *)(a1 + 32) = v11;
LABEL_19:
          uint64_t v7 = v20;
        }
LABEL_20:
        unint64_t v14 = sub_12D3F70(a3, v11, (unsigned __int8 *)v7);
        goto LABEL_40;
      case 3u:
        if (v8 != 26) {
          goto LABEL_33;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v15 = *(void *)(a1 + 40);
        if (v15) {
          goto LABEL_32;
        }
        uint64_t v16 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          uint64_t v16 = (void *)*v16;
        }
        uint64_t v15 = sub_12F80F0((uint64_t)v16);
        *(void *)(a1 + 40) = v15;
        goto LABEL_31;
      case 4u:
        if (v8 != 34) {
          goto LABEL_33;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v15 = *(void *)(a1 + 48);
        if (v15) {
          goto LABEL_32;
        }
        std::string::size_type v17 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          std::string::size_type v17 = (void *)*v17;
        }
        uint64_t v15 = sub_12F80F0((uint64_t)v17);
        *(void *)(a1 + 48) = v15;
LABEL_31:
        uint64_t v7 = v20;
LABEL_32:
        unint64_t v14 = sub_12D4000(a3, v15, (unsigned __int8 *)v7);
        goto LABEL_40;
      default:
LABEL_33:
        if (v8) {
          BOOL v18 = (v8 & 7) == 4;
        }
        else {
          BOOL v18 = 1;
        }
        if (!v18)
        {
          if (*v6)
          {
            uint64_t v19 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v19 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v7 = v20;
          }
          unint64_t v14 = (char *)sub_1885AC0(v8, v19, v7, a3);
LABEL_40:
          uint64_t v20 = v14;
          if (!v14) {
            return 0;
          }
          if (sub_11947B8((uint64_t)a3, &v20, a3[11].i32[1])) {
            return v20;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return v20;
    }
  }
}

char *sub_12D3F70(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12EE538(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_12D4000(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12EE034(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_12D4090(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    unsigned char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    char v4 = sub_12EE724(v7, (unint64_t)v9, a3);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_18;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v10 = *(void *)(a1 + 32);
  unsigned char *v4 = 18;
  unsigned int v11 = *(_DWORD *)(v10 + 20);
  v4[1] = v11;
  if (v11 > 0x7F) {
    uint64_t v12 = sub_188A9CC(v11, v4 + 1);
  }
  else {
    uint64_t v12 = v4 + 2;
  }
  char v4 = sub_12EE724(v10, (unint64_t)v12, a3);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_30;
    }
    goto LABEL_24;
  }
LABEL_18:
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v13 = *(void *)(a1 + 40);
  unsigned char *v4 = 26;
  unsigned int v14 = *(_DWORD *)(v13 + 20);
  v4[1] = v14;
  if (v14 > 0x7F) {
    uint64_t v15 = sub_188A9CC(v14, v4 + 1);
  }
  else {
    uint64_t v15 = v4 + 2;
  }
  char v4 = sub_12EE220(v13, (unint64_t)v15, a3);
  if ((v6 & 8) != 0)
  {
LABEL_24:
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v16 = *(void *)(a1 + 48);
    unsigned char *v4 = 34;
    unsigned int v17 = *(_DWORD *)(v16 + 20);
    v4[1] = v17;
    if (v17 > 0x7F) {
      BOOL v18 = sub_188A9CC(v17, v4 + 1);
    }
    else {
      BOOL v18 = v4 + 2;
    }
    char v4 = sub_12EE220(v16, (unint64_t)v18, a3);
  }
LABEL_30:
  uint64_t v19 = *(void *)(a1 + 8);
  if ((v19 & 1) == 0) {
    return v4;
  }
  unint64_t v21 = v19 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v21 + 31) < 0)
  {
    uint64_t v22 = *(void **)(v21 + 8);
    uint64_t v23 = *(void *)(v21 + 16);
  }
  else
  {
    uint64_t v22 = (void *)(v21 + 8);
    LODWORD(v23) = *(unsigned __int8 *)(v21 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v23)
  {
    uint64_t v24 = (int)v23;
    memcpy(v4, v22, (int)v23);
    v4 += v24;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v22, v23, v4);
}

uint64_t sub_12D42E8(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0xF) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_11;
  }
  if (v2)
  {
    unint64_t v4 = sub_12EE8C8(*(void *)(a1 + 24));
    uint64_t v3 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_7:
    unint64_t v5 = sub_12EE8C8(*(void *)(a1 + 32));
    v3 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_8:
  if ((v2 & 4) == 0)
  {
    if ((v2 & 8) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  unint64_t v9 = sub_12EE3C4(*(void *)(a1 + 40));
  v3 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 8) != 0)
  {
LABEL_10:
    unint64_t v6 = sub_12EE3C4(*(void *)(a1 + 48));
    v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_11:
  uint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    unint64_t v10 = v7 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v3 += v11;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_12D4428(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0xF) != 0)
  {
    if (v4)
    {
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::pointer data = (std::string *)result[1].__r_.__value_.__l.__data_;
      if (!data)
      {
        std::string::size_type size = v3->__r_.__value_.__l.__size_;
        uint64_t v7 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
        if (size) {
          uint64_t v7 = (void *)*v7;
        }
        std::string::pointer data = (std::string *)sub_12F816C((uint64_t)v7);
        v3[1].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      }
      if (*(void *)(a2 + 24)) {
        unsigned int v8 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        unsigned int v8 = &off_2531E00;
      }
      uint64_t result = sub_12D45B4(data, (uint64_t)v8);
    }
    if ((v4 & 2) != 0)
    {
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
      unint64_t v9 = (std::string *)v3[1].__r_.__value_.__l.__size_;
      if (!v9)
      {
        std::string::size_type v10 = v3->__r_.__value_.__l.__size_;
        uint64_t v11 = (void *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
        if (v10) {
          uint64_t v11 = (void *)*v11;
        }
        unint64_t v9 = (std::string *)sub_12F816C((uint64_t)v11);
        v3[1].__r_.__value_.__l.__size_ = (std::string::size_type)v9;
      }
      if (*(void *)(a2 + 32)) {
        uint64_t v12 = *(uint64_t (****)())(a2 + 32);
      }
      else {
        uint64_t v12 = &off_2531E00;
      }
      uint64_t result = sub_12D45B4(v9, (uint64_t)v12);
    }
    if ((v4 & 4) != 0)
    {
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
      uint64_t v13 = (std::string *)v3[1].__r_.__value_.__r.__words[2];
      if (!v13)
      {
        std::string::size_type v14 = v3->__r_.__value_.__l.__size_;
        uint64_t v15 = (void *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
        if (v14) {
          uint64_t v15 = (void *)*v15;
        }
        uint64_t v13 = (std::string *)sub_12F80F0((uint64_t)v15);
        v3[1].__r_.__value_.__r.__words[2] = (std::string::size_type)v13;
      }
      if (*(void *)(a2 + 40)) {
        uint64_t v16 = *(uint64_t (****)())(a2 + 40);
      }
      else {
        uint64_t v16 = &off_2531DD8;
      }
      uint64_t result = sub_12D45B4(v13, (uint64_t)v16);
    }
    if ((v4 & 8) != 0)
    {
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 8u;
      unsigned int v17 = (std::string *)v3[2].__r_.__value_.__l.__data_;
      if (!v17)
      {
        std::string::size_type v18 = v3->__r_.__value_.__l.__size_;
        uint64_t v19 = (void *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
        if (v18) {
          uint64_t v19 = (void *)*v19;
        }
        unsigned int v17 = (std::string *)sub_12F80F0((uint64_t)v19);
        v3[2].__r_.__value_.__r.__words[0] = (std::string::size_type)v17;
      }
      if (*(void *)(a2 + 48)) {
        uint64_t v20 = *(uint64_t (****)())(a2 + 48);
      }
      else {
        uint64_t v20 = &off_2531DD8;
      }
      uint64_t result = sub_12D45B4(v17, (uint64_t)v20);
    }
  }
  uint64_t v21 = *(void *)(a2 + 8);
  if (v21)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v21 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

std::string *sub_12D45B4(std::string *result, uint64_t a2)
{
  int v2 = *(_DWORD *)(a2 + 16);
  if ((v2 & 3) != 0)
  {
    if (v2) {
      result[1].__r_.__value_.__r.__words[0] = *(void *)(a2 + 24);
    }
    if ((v2 & 2) != 0) {
      LODWORD(result[1].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 32);
    }
    LODWORD(result->__r_.__value_.__r.__words[2]) |= v2;
  }
  uint64_t v3 = *(void *)(a2 + 8);
  if (v3) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v3 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_12D4600()
{
  return 1;
}

void *sub_12D4608@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap.fields.Timings");
}

void *sub_12D4618(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_12D469C((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void ***sub_12D469C(uint64_t a1)
{
  uint64_t v3 = *(uint64_t **)(a1 + 24);
  uint64_t v2 = (void ***)(a1 + 24);
  if (v3 != &qword_2550250) {
    sub_1881C6C(v2);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(uint64_t **)(a1 + 40) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 40));
  }
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 48));
  }
  if (*(uint64_t **)(a1 + 56) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 56));
  }
  uint64_t result = (void ***)(a1 + 64);
  if (*(uint64_t **)(a1 + 64) != &qword_2550250) {
    sub_1881C6C(result);
  }
  if ((uint64_t (***)())a1 != &off_2531630)
  {
    uint64_t result = *(void ****)(a1 + 72);
    if (result)
    {
      sub_12D3AD8((uint64_t)result);
      operator delete();
    }
  }
  return result;
}

void sub_12D4784(void *a1)
{
  sub_12D4618(a1);

  operator delete();
}

uint64_t sub_12D47BC(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 0x7F) == 0) {
    goto LABEL_10;
  }
  if ((v2 & 1) == 0)
  {
    if ((v2 & 2) == 0) {
      goto LABEL_4;
    }
LABEL_20:
    unint64_t v6 = *(void *)(result + 32) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v6 + 23) < 0)
    {
      **(unsigned char **)unint64_t v6 = 0;
      *(void *)(v6 + 8) = 0;
      if ((v2 & 4) != 0) {
        goto LABEL_24;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v6 = 0;
      *(unsigned char *)(v6 + 23) = 0;
      if ((v2 & 4) != 0) {
        goto LABEL_24;
      }
    }
LABEL_5:
    if ((v2 & 8) == 0) {
      goto LABEL_6;
    }
LABEL_28:
    unint64_t v8 = *(void *)(result + 48) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v8 + 23) < 0)
    {
      **(unsigned char **)unint64_t v8 = 0;
      *(void *)(v8 + 8) = 0;
      if ((v2 & 0x10) != 0) {
        goto LABEL_32;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v8 = 0;
      *(unsigned char *)(v8 + 23) = 0;
      if ((v2 & 0x10) != 0) {
        goto LABEL_32;
      }
    }
LABEL_7:
    if ((v2 & 0x20) == 0) {
      goto LABEL_8;
    }
    goto LABEL_36;
  }
  unint64_t v5 = *(void *)(result + 24) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v5 + 23) < 0)
  {
    **(unsigned char **)unint64_t v5 = 0;
    *(void *)(v5 + 8) = 0;
    if ((v2 & 2) != 0) {
      goto LABEL_20;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v5 = 0;
    *(unsigned char *)(v5 + 23) = 0;
    if ((v2 & 2) != 0) {
      goto LABEL_20;
    }
  }
LABEL_4:
  if ((v2 & 4) == 0) {
    goto LABEL_5;
  }
LABEL_24:
  unint64_t v7 = *(void *)(result + 40) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v7 + 23) < 0)
  {
    **(unsigned char **)unint64_t v7 = 0;
    *(void *)(v7 + 8) = 0;
    if ((v2 & 8) != 0) {
      goto LABEL_28;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v7 = 0;
    *(unsigned char *)(v7 + 23) = 0;
    if ((v2 & 8) != 0) {
      goto LABEL_28;
    }
  }
LABEL_6:
  if ((v2 & 0x10) == 0) {
    goto LABEL_7;
  }
LABEL_32:
  unint64_t v9 = *(void *)(result + 56) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v9 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v9 = 0;
    *(unsigned char *)(v9 + 23) = 0;
    if ((v2 & 0x20) != 0) {
      goto LABEL_36;
    }
LABEL_8:
    if ((v2 & 0x40) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
  **(unsigned char **)unint64_t v9 = 0;
  *(void *)(v9 + 8) = 0;
  if ((v2 & 0x20) == 0) {
    goto LABEL_8;
  }
LABEL_36:
  unint64_t v10 = *(void *)(result + 64) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v10 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v10 = 0;
    *(unsigned char *)(v10 + 23) = 0;
    if ((v2 & 0x40) == 0) {
      goto LABEL_10;
    }
LABEL_9:
    uint64_t result = sub_12D3C60(*(void *)(result + 72));
    goto LABEL_10;
  }
  **(unsigned char **)unint64_t v10 = 0;
  *(void *)(v10 + 8) = 0;
  if ((v2 & 0x40) != 0) {
    goto LABEL_9;
  }
LABEL_10:
  *(_DWORD *)(v1 + 80) = 0;
  if ((v2 & 0x700) != 0)
  {
    *(unsigned char *)(v1 + 92) = 0;
    *(void *)(v1 + 84) = 0;
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_12D4970(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v47 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v47, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    unint64_t v8 = (unsigned __int8 *)(*(void *)v47 + 1);
    unsigned int v9 = **(unsigned char **)v47;
    if ((char)**(unsigned char **)v47 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        unint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v47, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unint64_t v8 = (unsigned __int8 *)(*(void *)v47 + 2);
      }
    }
    *(void *)int v47 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_69;
        }
        uint64_t v12 = (char *)(v8 + 1);
        unint64_t v13 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        int v15 = v13 + (v14 << 7);
        unint64_t v13 = (v15 - 128);
        if (v14 < 0)
        {
          *(void *)int v47 = sub_188C138((uint64_t)v8, (v15 - 128));
          if (!*(void *)v47) {
            goto LABEL_100;
          }
          unint64_t v13 = v40;
        }
        else
        {
          uint64_t v12 = (char *)(v8 + 2);
LABEL_13:
          *(void *)int v47 = v12;
        }
        if (v13 <= 0x17)
        {
          *(_DWORD *)(a1 + 16) |= 0x80u;
          *(_DWORD *)(a1 + 80) = v13;
          goto LABEL_67;
        }
        if (*v7) {
          uint64_t v45 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          uint64_t v45 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v46 = 1;
        goto LABEL_93;
      case 2u:
        if (v9 != 16) {
          goto LABEL_69;
        }
        uint64_t v16 = (char *)(v8 + 1);
        unint64_t v13 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_20;
        }
        int v17 = *v16;
        int v18 = v13 + (v17 << 7);
        unint64_t v13 = (v18 - 128);
        if (v17 < 0)
        {
          *(void *)int v47 = sub_188C138((uint64_t)v8, (v18 - 128));
          if (!*(void *)v47) {
            goto LABEL_100;
          }
          unint64_t v13 = v41;
        }
        else
        {
          uint64_t v16 = (char *)(v8 + 2);
LABEL_20:
          *(void *)int v47 = v16;
        }
        if (v13 <= 4)
        {
          *(_DWORD *)(a1 + 16) |= 0x100u;
          *(_DWORD *)(a1 + 84) = v13;
          goto LABEL_67;
        }
        if (*v7) {
          uint64_t v45 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          uint64_t v45 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v46 = 2;
        goto LABEL_93;
      case 3u:
        if (v9 != 26) {
          goto LABEL_69;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v19 = *(void *)(a1 + 8);
        uint64_t v20 = (uint64_t *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
        if (v19) {
          uint64_t v20 = (uint64_t *)*v20;
        }
        uint64_t v21 = (void *)(a1 + 24);
        goto LABEL_65;
      case 4u:
        if (v9 != 34) {
          goto LABEL_69;
        }
        *(_DWORD *)(a1 + 16) |= 0x40u;
        uint64_t v22 = *(void *)(a1 + 72);
        if (!v22)
        {
          uint64_t v23 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v23 = (void *)*v23;
          }
          sub_12D5DBC((uint64_t)v23);
          uint64_t v22 = v24;
          *(void *)(a1 + 72) = v24;
          unint64_t v8 = *(unsigned __int8 **)v47;
        }
        uint64_t v25 = sub_12D4EF4(a3, v22, v8);
        goto LABEL_66;
      case 5u:
        if (v9 != 42) {
          goto LABEL_69;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v26 = *(void *)(a1 + 8);
        uint64_t v20 = (uint64_t *)(v26 & 0xFFFFFFFFFFFFFFFCLL);
        if (v26) {
          uint64_t v20 = (uint64_t *)*v20;
        }
        uint64_t v21 = (void *)(a1 + 32);
        goto LABEL_65;
      case 6u:
        if (v9 != 50) {
          goto LABEL_69;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v27 = *(void *)(a1 + 8);
        uint64_t v20 = (uint64_t *)(v27 & 0xFFFFFFFFFFFFFFFCLL);
        if (v27) {
          uint64_t v20 = (uint64_t *)*v20;
        }
        uint64_t v21 = (void *)(a1 + 40);
        goto LABEL_65;
      case 7u:
        if (v9 != 58) {
          goto LABEL_69;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v28 = *(void *)(a1 + 8);
        uint64_t v20 = (uint64_t *)(v28 & 0xFFFFFFFFFFFFFFFCLL);
        if (v28) {
          uint64_t v20 = (uint64_t *)*v20;
        }
        uint64_t v21 = (void *)(a1 + 48);
        goto LABEL_65;
      case 8u:
        if (v9 != 64) {
          goto LABEL_69;
        }
        uint64_t v29 = (char *)(v8 + 1);
        unint64_t v13 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_49;
        }
        int v30 = *v29;
        int v31 = v13 + (v30 << 7);
        unint64_t v13 = (v31 - 128);
        if (v30 < 0)
        {
          *(void *)int v47 = sub_188C138((uint64_t)v8, (v31 - 128));
          if (!*(void *)v47) {
            goto LABEL_100;
          }
          unint64_t v13 = v42;
        }
        else
        {
          uint64_t v29 = (char *)(v8 + 2);
LABEL_49:
          *(void *)int v47 = v29;
        }
        if (v13 > 7)
        {
          if (*v7) {
            uint64_t v45 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v45 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          int v46 = 8;
LABEL_93:
          sub_188C020(v46, v13, v45);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 0x200u;
          *(_DWORD *)(a1 + 88) = v13;
        }
        goto LABEL_67;
      case 9u:
        if (v9 != 72) {
          goto LABEL_69;
        }
        v5 |= 0x400u;
        unint64_t v32 = (char *)(v8 + 1);
        uint64_t v33 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_56;
        }
        int v34 = *v32;
        uint64_t v33 = v33 + (v34 << 7) - 128;
        if (v34 < 0)
        {
          uint64_t v43 = sub_188C138((uint64_t)v8, v33);
          *(void *)int v47 = v43;
          *(unsigned char *)(a1 + 92) = v44 != 0;
          if (!v43) {
            goto LABEL_100;
          }
        }
        else
        {
          unint64_t v32 = (char *)(v8 + 2);
LABEL_56:
          *(void *)int v47 = v32;
          *(unsigned char *)(a1 + 92) = v33 != 0;
        }
        goto LABEL_67;
      case 0xAu:
        if (v9 != 82) {
          goto LABEL_69;
        }
        *(_DWORD *)(a1 + 16) |= 0x10u;
        uint64_t v35 = *(void *)(a1 + 8);
        uint64_t v20 = (uint64_t *)(v35 & 0xFFFFFFFFFFFFFFFCLL);
        if (v35) {
          uint64_t v20 = (uint64_t *)*v20;
        }
        uint64_t v21 = (void *)(a1 + 56);
        goto LABEL_65;
      case 0xBu:
        if (v9 != 90) {
          goto LABEL_69;
        }
        *(_DWORD *)(a1 + 16) |= 0x20u;
        uint64_t v36 = *(void *)(a1 + 8);
        uint64_t v20 = (uint64_t *)(v36 & 0xFFFFFFFFFFFFFFFCLL);
        if (v36) {
          uint64_t v20 = (uint64_t *)*v20;
        }
        uint64_t v21 = (void *)(a1 + 64);
LABEL_65:
        BOOL v37 = (std::string *)sub_1880F84(v21, v20);
        uint64_t v25 = (void *)sub_188C244(v37, *(char **)v47, (uint64_t)a3);
        goto LABEL_66;
      default:
LABEL_69:
        if (v9) {
          BOOL v38 = (v9 & 7) == 4;
        }
        else {
          BOOL v38 = 1;
        }
        if (!v38)
        {
          if (*v7)
          {
            uint64_t v39 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v39 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unint64_t v8 = *(unsigned __int8 **)v47;
          }
          uint64_t v25 = sub_1885AC0(v9, v39, (char *)v8, a3);
LABEL_66:
          *(void *)int v47 = v25;
          if (!v25) {
            goto LABEL_100;
          }
LABEL_67:
          if (sub_11947B8((uint64_t)a3, (char **)v47, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_100:
        }
          *(void *)int v47 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v47;
    }
  }
}

char *sub_12D4EF4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12D3CF8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_12D4F84(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 0x80) != 0)
  {
    if (*a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 80);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x100) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 84);
    unsigned char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    char v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
    if ((v6 & 0x40) == 0)
    {
LABEL_17:
      if ((v6 & 2) == 0) {
        goto LABEL_18;
      }
      goto LABEL_29;
    }
  }
  else if ((v6 & 0x40) == 0)
  {
    goto LABEL_17;
  }
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v13 = *(void *)(a1 + 72);
  unsigned char *v4 = 34;
  unsigned int v14 = *(_DWORD *)(v13 + 20);
  v4[1] = v14;
  if (v14 > 0x7F) {
    int v15 = sub_188A9CC(v14, v4 + 1);
  }
  else {
    int v15 = v4 + 2;
  }
  char v4 = sub_12D4090(v13, (unint64_t)v15, a3);
  if ((v6 & 2) == 0)
  {
LABEL_18:
    if ((v6 & 4) == 0) {
      goto LABEL_19;
    }
    goto LABEL_30;
  }
LABEL_29:
  char v4 = sub_117A0AC(a3, 5, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) == 0)
  {
LABEL_19:
    if ((v6 & 8) == 0) {
      goto LABEL_20;
    }
    goto LABEL_31;
  }
LABEL_30:
  char v4 = sub_117A0AC(a3, 6, (const void **)(*(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 8) == 0)
  {
LABEL_20:
    if ((v6 & 0x200) == 0) {
      goto LABEL_38;
    }
    goto LABEL_32;
  }
LABEL_31:
  char v4 = sub_117A0AC(a3, 7, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x200) == 0) {
    goto LABEL_38;
  }
LABEL_32:
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  unint64_t v16 = *(int *)(a1 + 88);
  unsigned char *v4 = 64;
  v4[1] = v16;
  if (v16 > 0x7F)
  {
    v4[1] = v16 | 0x80;
    unint64_t v17 = v16 >> 7;
    v4[2] = v16 >> 7;
    v4 += 3;
    if (v16 >= 0x4000)
    {
      do
      {
        *(v4 - 1) |= 0x80u;
        unint64_t v18 = v17 >> 14;
        v17 >>= 7;
        *v4++ = v17;
      }
      while (v18);
    }
  }
  else
  {
    v4 += 2;
  }
LABEL_38:
  if ((v6 & 0x400) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v21 = *(unsigned char *)(a1 + 92);
    unsigned char *v4 = 72;
    v4[1] = v21;
    v4 += 2;
    if ((v6 & 0x10) == 0)
    {
LABEL_40:
      if ((v6 & 0x20) == 0) {
        goto LABEL_42;
      }
      goto LABEL_41;
    }
  }
  else if ((v6 & 0x10) == 0)
  {
    goto LABEL_40;
  }
  char v4 = sub_117A0AC(a3, 10, (const void **)(*(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x20) != 0) {
LABEL_41:
  }
    char v4 = sub_117A0AC(a3, 11, (const void **)(*(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL), v4);
LABEL_42:
  uint64_t v19 = *(void *)(a1 + 8);
  if ((v19 & 1) == 0) {
    return v4;
  }
  unint64_t v22 = v19 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v22 + 31) < 0)
  {
    uint64_t v23 = *(void **)(v22 + 8);
    uint64_t v24 = *(void *)(v22 + 16);
  }
  else
  {
    uint64_t v23 = (void *)(v22 + 8);
    LODWORD(v24) = *(unsigned __int8 *)(v22 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v24)
  {
    uint64_t v25 = (int)v24;
    memcpy(v4, v23, (int)v24);
    v4 += v25;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v23, v24, v4);
}

uint64_t sub_12D5330(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if (!(_BYTE)v2)
  {
    uint64_t v3 = 0;
    goto LABEL_36;
  }
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
  uint64_t v6 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    uint64_t v6 = v5;
  }
  uint64_t v3 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 2) != 0)
  {
LABEL_9:
    unint64_t v7 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v8 = *(unsigned __int8 *)(v7 + 23);
    uint64_t v9 = *(void *)(v7 + 8);
    if ((v8 & 0x80u) == 0) {
      uint64_t v9 = v8;
    }
    v3 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v2 & 4) != 0)
  {
    unint64_t v10 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v11 = *(unsigned __int8 *)(v10 + 23);
    uint64_t v12 = *(void *)(v10 + 8);
    if ((v11 & 0x80u) == 0) {
      uint64_t v12 = v11;
    }
    v3 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 8) == 0)
    {
LABEL_14:
      if ((v2 & 0x10) == 0) {
        goto LABEL_15;
      }
      goto LABEL_25;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_14;
  }
  unint64_t v13 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v14 = *(unsigned __int8 *)(v13 + 23);
  uint64_t v15 = *(void *)(v13 + 8);
  if ((v14 & 0x80u) == 0) {
    uint64_t v15 = v14;
  }
  v3 += v15 + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x10) == 0)
  {
LABEL_15:
    if ((v2 & 0x20) == 0) {
      goto LABEL_16;
    }
    goto LABEL_28;
  }
LABEL_25:
  unint64_t v16 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v17 = *(unsigned __int8 *)(v16 + 23);
  uint64_t v18 = *(void *)(v16 + 8);
  if ((v17 & 0x80u) == 0) {
    uint64_t v18 = v17;
  }
  v3 += v18 + ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x20) == 0)
  {
LABEL_16:
    if ((v2 & 0x40) == 0) {
      goto LABEL_17;
    }
    goto LABEL_31;
  }
LABEL_28:
  unint64_t v19 = *(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v20 = *(unsigned __int8 *)(v19 + 23);
  uint64_t v21 = *(void *)(v19 + 8);
  if ((v20 & 0x80u) == 0) {
    uint64_t v21 = v20;
  }
  v3 += v21 + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x40) == 0)
  {
LABEL_17:
    if ((v2 & 0x80) == 0) {
      goto LABEL_36;
    }
    goto LABEL_32;
  }
LABEL_31:
  uint64_t v22 = sub_12D42E8(*(void *)(a1 + 72));
  v3 += v22 + ((9 * (__clz(v22 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x80) == 0) {
    goto LABEL_36;
  }
LABEL_32:
  int v23 = *(_DWORD *)(a1 + 80);
  if (v23 < 0) {
    uint64_t v24 = 11;
  }
  else {
    uint64_t v24 = ((9 * (__clz(v23 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v3 += v24;
LABEL_36:
  if ((v2 & 0x700) != 0)
  {
    if ((v2 & 0x100) != 0)
    {
      int v25 = *(_DWORD *)(a1 + 84);
      if (v25 < 0) {
        uint64_t v26 = 11;
      }
      else {
        uint64_t v26 = ((9 * (__clz(v25 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
      v3 += v26;
    }
    if ((v2 & 0x200) != 0)
    {
      int v27 = *(_DWORD *)(a1 + 88);
      if (v27 < 0) {
        uint64_t v28 = 11;
      }
      else {
        uint64_t v28 = ((9 * (__clz(v27 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
      v3 += v28;
    }
    if ((v2 & 0x400) != 0) {
      v3 += 2;
    }
  }
  uint64_t v29 = *(void *)(a1 + 8);
  if (v29)
  {
    unint64_t v31 = v29 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v31 + 31) < 0) {
      uint64_t v32 = *(void *)(v31 + 16);
    }
    else {
      uint64_t v32 = *(unsigned __int8 *)(v31 + 31);
    }
    v3 += v32;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_12D5638(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((_BYTE)v4)
  {
    if (v4)
    {
      uint64_t v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      unint64_t v7 = (std::string **)&result[1];
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v9 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v9 = (uint64_t *)*v9;
      }
      uint64_t result = sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_28;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    unint64_t v10 = (long long *)(*(void *)(a2 + 32) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    std::string::size_type v11 = v3->__r_.__value_.__l.__size_;
    uint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
    if (v11) {
      uint64_t v12 = (uint64_t *)*v12;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[1].__r_.__value_.__l.__size_, v10, v12);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_31;
    }
LABEL_28:
    unint64_t v13 = (long long *)(*(void *)(a2 + 40) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
    std::string::size_type v14 = v3->__r_.__value_.__l.__size_;
    uint64_t v15 = (uint64_t *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
    if (v14) {
      uint64_t v15 = (uint64_t *)*v15;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[1].__r_.__value_.__r.__words[2], v13, v15);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0) {
        goto LABEL_7;
      }
      goto LABEL_34;
    }
LABEL_31:
    unint64_t v16 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 8u;
    std::string::size_type v17 = v3->__r_.__value_.__l.__size_;
    uint64_t v18 = (uint64_t *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
    if (v17) {
      uint64_t v18 = (uint64_t *)*v18;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[2], v16, v18);
    if ((v4 & 0x10) == 0)
    {
LABEL_7:
      if ((v4 & 0x20) == 0) {
        goto LABEL_8;
      }
      goto LABEL_37;
    }
LABEL_34:
    unint64_t v19 = (long long *)(*(void *)(a2 + 56) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x10u;
    std::string::size_type v20 = v3->__r_.__value_.__l.__size_;
    uint64_t v21 = (uint64_t *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
    if (v20) {
      uint64_t v21 = (uint64_t *)*v21;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[2].__r_.__value_.__l.__size_, v19, v21);
    if ((v4 & 0x20) == 0)
    {
LABEL_8:
      if ((v4 & 0x40) == 0) {
        goto LABEL_9;
      }
      goto LABEL_40;
    }
LABEL_37:
    uint64_t v22 = (long long *)(*(void *)(a2 + 64) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x20u;
    std::string::size_type v23 = v3->__r_.__value_.__l.__size_;
    uint64_t v24 = (uint64_t *)(v23 & 0xFFFFFFFFFFFFFFFCLL);
    if (v23) {
      uint64_t v24 = (uint64_t *)*v24;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[2].__r_.__value_.__r.__words[2], v22, v24);
    if ((v4 & 0x40) == 0)
    {
LABEL_9:
      if ((v4 & 0x80) == 0)
      {
LABEL_11:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
        goto LABEL_12;
      }
LABEL_10:
      LODWORD(v3[3].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 80);
      goto LABEL_11;
    }
LABEL_40:
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x40u;
    std::string::pointer data = (std::string *)v3[3].__r_.__value_.__l.__data_;
    if (!data)
    {
      std::string::size_type v26 = v3->__r_.__value_.__l.__size_;
      int v27 = (void *)(v26 & 0xFFFFFFFFFFFFFFFCLL);
      if (v26) {
        int v27 = (void *)*v27;
      }
      sub_12D5DBC((uint64_t)v27);
      v3[3].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
    }
    if (*(void *)(a2 + 72)) {
      uint64_t v28 = *(uint64_t (****)())(a2 + 72);
    }
    else {
      uint64_t v28 = &off_25315F8;
    }
    uint64_t result = sub_12D4428(data, (uint64_t)v28);
    if ((v4 & 0x80) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
LABEL_12:
  if ((v4 & 0x700) == 0) {
    goto LABEL_18;
  }
  if ((v4 & 0x100) == 0)
  {
    if ((v4 & 0x200) == 0) {
      goto LABEL_15;
    }
LABEL_50:
    LODWORD(v3[3].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 88);
    if ((v4 & 0x400) == 0) {
      goto LABEL_17;
    }
    goto LABEL_16;
  }
  HIDWORD(v3[3].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 84);
  if ((v4 & 0x200) != 0) {
    goto LABEL_50;
  }
LABEL_15:
  if ((v4 & 0x400) != 0) {
LABEL_16:
  }
    v3[3].__r_.__value_.__s.__data_[20] = *(unsigned char *)(a2 + 92);
LABEL_17:
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
LABEL_18:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_12D58A4()
{
  return 1;
}

void *sub_12D58AC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap.fields.TaskInfo");
}

uint64_t sub_12D58BC(int a1)
{
  uint64_t result = 1;
  if (a1 > 299)
  {
    if (a1 <= 599)
    {
      if ((a1 - 500) >= 0xB && (a1 - 400) >= 7 && (a1 - 300) >= 3) {
        return 0;
      }
      return result;
    }
    if (a1 > 699)
    {
      if (a1 > 799)
      {
        if ((a1 - 800) >= 2 && a1 != 901 && a1 != 1001) {
          return 0;
        }
        return result;
      }
      if ((a1 - 700) < 5) {
        return result;
      }
    }
    else if ((a1 - 600) < 0xF)
    {
      return result;
    }
    return 0;
  }
  if ((a1 - 100) >= 0x1C
    && (a1 - 200) >= 0xC
    && (a1 > 0xA || ((1 << a1) & 0x47F) == 0))
  {
    return 0;
  }
  return result;
}

uint64_t sub_12D598C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_15DCBE8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_12D5A1C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 0x3F) == 0) {
    goto LABEL_32;
  }
  if ((v1 & 1) == 0)
  {
    if ((v1 & 2) == 0) {
      goto LABEL_4;
    }
LABEL_13:
    unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)unint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
      if ((v1 & 4) != 0) {
        goto LABEL_17;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
      if ((v1 & 4) != 0) {
        goto LABEL_17;
      }
    }
LABEL_5:
    if ((v1 & 8) == 0) {
      goto LABEL_6;
    }
LABEL_21:
    unint64_t v5 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v5 + 23) < 0)
    {
      **(unsigned char **)unint64_t v5 = 0;
      *(void *)(v5 + 8) = 0;
      if ((v1 & 0x10) != 0) {
        goto LABEL_25;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v5 = 0;
      *(unsigned char *)(v5 + 23) = 0;
      if ((v1 & 0x10) != 0) {
        goto LABEL_25;
      }
    }
LABEL_7:
    if ((v1 & 0x20) == 0) {
      goto LABEL_32;
    }
LABEL_29:
    unint64_t v7 = *(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v7 + 23) < 0)
    {
      **(unsigned char **)unint64_t v7 = 0;
      *(void *)(v7 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v7 = 0;
      *(unsigned char *)(v7 + 23) = 0;
    }
    goto LABEL_32;
  }
  unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v2 + 23) < 0)
  {
    **(unsigned char **)unint64_t v2 = 0;
    *(void *)(v2 + 8) = 0;
    if ((v1 & 2) != 0) {
      goto LABEL_13;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v2 = 0;
    *(unsigned char *)(v2 + 23) = 0;
    if ((v1 & 2) != 0) {
      goto LABEL_13;
    }
  }
LABEL_4:
  if ((v1 & 4) == 0) {
    goto LABEL_5;
  }
LABEL_17:
  unint64_t v4 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v4 + 23) < 0)
  {
    **(unsigned char **)unint64_t v4 = 0;
    *(void *)(v4 + 8) = 0;
    if ((v1 & 8) != 0) {
      goto LABEL_21;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v4 = 0;
    *(unsigned char *)(v4 + 23) = 0;
    if ((v1 & 8) != 0) {
      goto LABEL_21;
    }
  }
LABEL_6:
  if ((v1 & 0x10) == 0) {
    goto LABEL_7;
  }
LABEL_25:
  unint64_t v6 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v6 + 23) < 0)
  {
    **(unsigned char **)unint64_t v6 = 0;
    *(void *)(v6 + 8) = 0;
    if ((v1 & 0x20) == 0) {
      goto LABEL_32;
    }
    goto LABEL_29;
  }
  *(unsigned char *)unint64_t v6 = 0;
  *(unsigned char *)(v6 + 23) = 0;
  if ((v1 & 0x20) != 0) {
    goto LABEL_29;
  }
LABEL_32:
  char v9 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v9) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_12D5B70(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12F65A8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

std::string *sub_12D5C00(std::string *result, uint64_t a2)
{
  unint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0x3F) == 0) {
    goto LABEL_27;
  }
  if (v4)
  {
    unint64_t v5 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
    int v6 = (std::string **)&result[1];
    std::string::size_type size = v3->__r_.__value_.__l.__size_;
    uint64_t v8 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
    if (size) {
      uint64_t v8 = (uint64_t *)*v8;
    }
    uint64_t result = sub_1881DF4(v6, v5, v8);
    if ((v4 & 2) == 0)
    {
LABEL_4:
      if ((v4 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_15;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_4;
  }
  char v9 = (long long *)(*(void *)(a2 + 32) & 0xFFFFFFFFFFFFFFFELL);
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
  std::string::size_type v10 = v3->__r_.__value_.__l.__size_;
  std::string::size_type v11 = (uint64_t *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
  if (v10) {
    std::string::size_type v11 = (uint64_t *)*v11;
  }
  uint64_t result = sub_1881DF4((std::string **)&v3[1].__r_.__value_.__l.__size_, v9, v11);
  if ((v4 & 4) == 0)
  {
LABEL_5:
    if ((v4 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_18;
  }
LABEL_15:
  uint64_t v12 = (long long *)(*(void *)(a2 + 40) & 0xFFFFFFFFFFFFFFFELL);
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
  std::string::size_type v13 = v3->__r_.__value_.__l.__size_;
  std::string::size_type v14 = (uint64_t *)(v13 & 0xFFFFFFFFFFFFFFFCLL);
  if (v13) {
    std::string::size_type v14 = (uint64_t *)*v14;
  }
  uint64_t result = sub_1881DF4((std::string **)&v3[1].__r_.__value_.__r.__words[2], v12, v14);
  if ((v4 & 8) == 0)
  {
LABEL_6:
    if ((v4 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_21;
  }
LABEL_18:
  uint64_t v15 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= 8u;
  std::string::size_type v16 = v3->__r_.__value_.__l.__size_;
  std::string::size_type v17 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
  if (v16) {
    std::string::size_type v17 = (uint64_t *)*v17;
  }
  uint64_t result = sub_1881DF4((std::string **)&v3[2], v15, v17);
  if ((v4 & 0x10) == 0)
  {
LABEL_7:
    if ((v4 & 0x20) == 0) {
      goto LABEL_27;
    }
    goto LABEL_24;
  }
LABEL_21:
  uint64_t v18 = (long long *)(*(void *)(a2 + 56) & 0xFFFFFFFFFFFFFFFELL);
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x10u;
  std::string::size_type v19 = v3->__r_.__value_.__l.__size_;
  std::string::size_type v20 = (uint64_t *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
  if (v19) {
    std::string::size_type v20 = (uint64_t *)*v20;
  }
  uint64_t result = sub_1881DF4((std::string **)&v3[2].__r_.__value_.__l.__size_, v18, v20);
  if ((v4 & 0x20) != 0)
  {
LABEL_24:
    uint64_t v21 = (long long *)(*(void *)(a2 + 64) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x20u;
    std::string::size_type v22 = v3->__r_.__value_.__l.__size_;
    std::string::size_type v23 = (uint64_t *)(v22 & 0xFFFFFFFFFFFFFFFCLL);
    if (v22) {
      std::string::size_type v23 = (uint64_t *)*v23;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[2].__r_.__value_.__r.__words[2], v21, v23);
  }
LABEL_27:
  uint64_t v24 = *(void *)(a2 + 8);
  if (v24)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v24 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

double sub_12D5DBC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = off_24A6068;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(void *)(v2 + 48) = 0;
  return result;
}

void *sub_12D5E3C(uint64_t a1)
{
  if (!a1)
  {
    sub_130121C();
  }
  *double result = off_24A60E8;
  result[1] = a1;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = &qword_2550250;
  result[5] = &qword_2550250;
  result[6] = &qword_2550250;
  result[7] = &qword_2550250;
  result[8] = &qword_2550250;
  result[9] = 0;
  result[10] = 0;
  *(void *)((char *)result + 85) = 0;
  return result;
}

uint64_t sub_12D5EBC(uint64_t a1)
{
  unint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  unint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  sub_1301284((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12D5F68(uint64_t a1)
{
  sub_12D5EBC(a1);

  operator delete();
}

uint64_t sub_12D5FA0(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    unint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      double result = sub_12D8C3C(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  if (*(unsigned char *)(v1 + 16))
  {
    unint64_t v5 = *(void *)(v1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v5 + 23) < 0)
    {
      **(unsigned char **)unint64_t v5 = 0;
      *(void *)(v5 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v5 = 0;
      *(unsigned char *)(v5 + 23) = 0;
    }
  }
  char v7 = *(unsigned char *)(v1 + 8);
  uint64_t v6 = v1 + 8;
  *(_DWORD *)(v6 + 8) = 0;
  if (v7)
  {
    return sub_188B4AC((uint64_t *)v6);
  }
  return result;
}

uint64_t sub_12D6050(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v24 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v24, a3[11].i32[1])) {
    return *(void *)v24;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    char v7 = (char *)(*(void *)v24 + 1);
    unsigned int v8 = **(unsigned char **)v24;
    if ((char)**(unsigned char **)v24 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        char v7 = (char *)sub_188C180(*(uint64_t *)v24, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        char v7 = (char *)(*(void *)v24 + 2);
      }
    }
    *(void *)uint64_t v24 = v7;
    if (v8 >> 3 != 2) {
      break;
    }
    if (v8 != 18) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v15 = *(void *)(a1 + 8);
    std::string::size_type v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
    if (v15) {
      std::string::size_type v16 = (uint64_t *)*v16;
    }
    std::string::size_type v17 = (std::string *)sub_1880F84((void *)(a1 + 48), v16);
    std::string::size_type v14 = (void *)sub_188C244(v17, *(char **)v24, (uint64_t)a3);
LABEL_24:
    *(void *)uint64_t v24 = v14;
    if (!v14) {
      goto LABEL_39;
    }
LABEL_25:
    if (sub_11947B8((uint64_t)a3, (char **)v24, a3[11].i32[1])) {
      return *(void *)v24;
    }
  }
  if (v8 >> 3 == 1 && v8 == 10)
  {
    uint64_t v18 = v7 - 1;
    while (1)
    {
      std::string::size_type v19 = (unsigned __int8 *)(v18 + 1);
      *(void *)uint64_t v24 = v18 + 1;
      std::string::size_type v20 = *(_DWORD **)(a1 + 40);
      if (v20 && (uint64_t v21 = *(int *)(a1 + 32), (int)v21 < *v20))
      {
        *(_DWORD *)(a1 + 32) = v21 + 1;
        uint64_t v22 = *(void *)&v20[2 * v21 + 2];
      }
      else
      {
        std::string::size_type v23 = sub_12D9B98(*(void *)(a1 + 24));
        uint64_t v22 = sub_188CDC8(a1 + 24, (uint64_t)v23);
        std::string::size_type v19 = *(unsigned __int8 **)v24;
      }
      uint64_t v18 = (char *)sub_12D6250(a3, v22, v19);
      *(void *)uint64_t v24 = v18;
      if (!v18) {
        goto LABEL_39;
      }
      if (*(void *)a3 <= (unint64_t)v18 || *v18 != 10) {
        goto LABEL_25;
      }
    }
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      std::string::size_type v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      std::string::size_type v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      char v7 = *(char **)v24;
    }
    std::string::size_type v14 = sub_1885AC0(v8, v13, v7, a3);
    goto LABEL_24;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v24;
  }
LABEL_39:
  *(void *)uint64_t v24 = 0;
  return *(void *)v24;
}

uint64_t sub_12D6250(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12D8D60(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_12D62E0(uint64_t a1, char *__dst, unint64_t *a3)
{
  int v6 = *(_DWORD *)(a1 + 32);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unsigned int v10 = __dst + 2;
      }
      __dst = sub_12D919C(v8, v10, a3);
    }
  }
  if (*(unsigned char *)(a1 + 16)) {
    __dst = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return __dst;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    std::string::size_type v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    std::string::size_type v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if ((uint64_t)(*a3 - (void)__dst) >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(__dst, v14, (int)v15);
    __dst += v16;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, __dst);
}

uint64_t sub_12D6448(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_12D93F8(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v8 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v9 = *(unsigned __int8 *)(v8 + 23);
    uint64_t v10 = *(void *)(v8 + 8);
    if ((v9 & 0x80u) == 0) {
      uint64_t v10 = v9;
    }
    v2 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v13 + 31) < 0) {
      uint64_t v14 = *(void *)(v13 + 16);
    }
    else {
      uint64_t v14 = *(unsigned __int8 *)(v13 + 31);
    }
    v2 += v14;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

void sub_12D6540(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_1301404((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    unint64_t v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *unint64_t v8 = v7;
    }
  }
  if (*(unsigned char *)(a2 + 16))
  {
    uint64_t v9 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v10 = *(void *)(a1 + 8);
    uint64_t v11 = (uint64_t *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
    if (v10) {
      uint64_t v11 = (uint64_t *)*v11;
    }
    sub_1881DF4((std::string **)(a1 + 48), v9, v11);
  }
  uint64_t v12 = *(void *)(a2 + 8);
  if (v12)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v12 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

BOOL sub_12D6648(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  do
  {
    int v3 = v2;
    if ((int)v2 < 1) {
      break;
    }
    uint64_t v4 = v2 - 1;
    char v5 = sub_12D98F0(*(void *)(*(void *)(a1 + 40) + 8 * v2));
    uint64_t v2 = v4;
  }
  while ((v5 & 1) != 0);
  return v3 < 1;
}

void *sub_12D66A0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap.RapConversation");
}

uint64_t sub_12D66B0(uint64_t a1)
{
  int v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  if ((uint64_t (***)())a1 != &off_25316C8 && *(void *)(a1 + 48))
  {
    sub_152DA14();
    operator delete();
  }
  if (*(void *)(a1 + 8)) {
    sub_10E4F74(v3);
  }
LABEL_8:
  sub_1301304((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12D6774(uint64_t a1)
{
  sub_12D66B0(a1);

  operator delete();
}

uint64_t sub_12D67AC(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    int v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_12DA0CC(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  if (*(unsigned char *)(v1 + 16)) {
    uint64_t result = sub_152DA50(*(void *)(v1 + 48));
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = v1 + 8;
  *(_DWORD *)(v5 + 8) = 0;
  if (v6)
  {
    return sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

char *sub_12D683C(uint64_t a1, char *a2, int32x2_t *a3)
{
  std::string::size_type v23 = a2;
  if (sub_11947B8((uint64_t)a3, &v23, a3[11].i32[1])) {
    return v23;
  }
  char v6 = (void *)(a1 + 8);
  while (1)
  {
    int v7 = v23 + 1;
    unsigned int v8 = *v23;
    if (*v23 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        int v7 = (char *)sub_188C180((uint64_t)v23, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        int v7 = v23 + 2;
      }
    }
    std::string::size_type v23 = v7;
    if (v8 >> 3 == 2) {
      break;
    }
    if (v8 >> 3 != 1 || v8 != 10) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v21 = *(void **)(a1 + 48);
    if (!v21)
    {
      uint64_t v22 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        uint64_t v22 = (void *)*v22;
      }
      uint64_t v21 = sub_152DF48((uint64_t)v22);
      *(void *)(a1 + 48) = v21;
      int v7 = v23;
    }
    uint64_t v14 = (char *)sub_12D6A44(a3, (uint64_t)v21, (unsigned __int8 *)v7);
LABEL_35:
    std::string::size_type v23 = v14;
    if (!v14) {
      return 0;
    }
LABEL_36:
    if (sub_11947B8((uint64_t)a3, &v23, a3[11].i32[1])) {
      return v23;
    }
  }
  if (v8 == 18)
  {
    uint64_t v15 = v7 - 1;
    while (1)
    {
      uint64_t v16 = (unsigned __int8 *)(v15 + 1);
      std::string::size_type v23 = v15 + 1;
      std::string::size_type v17 = *(_DWORD **)(a1 + 40);
      if (v17 && (uint64_t v18 = *(int *)(a1 + 32), (int)v18 < *v17))
      {
        *(_DWORD *)(a1 + 32) = v18 + 1;
        uint64_t v19 = *(void *)&v17[2 * v18 + 2];
      }
      else
      {
        std::string::size_type v20 = sub_12F849C(*(void *)(a1 + 24));
        uint64_t v19 = sub_188CDC8(a1 + 24, (uint64_t)v20);
        uint64_t v16 = (unsigned __int8 *)v23;
      }
      uint64_t v15 = (char *)sub_12D6AD4(a3, v19, v16);
      std::string::size_type v23 = v15;
      if (!v15) {
        return 0;
      }
      if (*(void *)a3 <= (unint64_t)v15 || *v15 != 18) {
        goto LABEL_36;
      }
    }
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      unint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v7 = v23;
    }
    uint64_t v14 = (char *)sub_1885AC0(v8, v13, v7, a3);
    goto LABEL_35;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v23;
  }
  return 0;
}

uint64_t sub_12D6A44(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_152DB08(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_12D6AD4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12F13FC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_12D6B64(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v6 = *(void *)(a1 + 48);
    char *v4 = 10;
    unsigned int v7 = *(_DWORD *)(v6 + 20);
    v4[1] = v7;
    if (v7 > 0x7F) {
      unsigned int v8 = sub_188A9CC(v7, v4 + 1);
    }
    else {
      unsigned int v8 = v4 + 2;
    }
    uint64_t v4 = sub_152DCF8(v6, v8, a3);
  }
  int v9 = *(_DWORD *)(a1 + 32);
  if (v9)
  {
    for (int i = 0; i != v9; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v11 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      char *v4 = 18;
      unsigned int v12 = *(_DWORD *)(v11 + 20);
      v4[1] = v12;
      if (v12 > 0x7F) {
        unint64_t v13 = sub_188A9CC(v12, v4 + 1);
      }
      else {
        unint64_t v13 = v4 + 2;
      }
      uint64_t v4 = sub_12F16E4(v11, v13, a3);
    }
  }
  uint64_t v14 = *(void *)(a1 + 8);
  if ((v14 & 1) == 0) {
    return v4;
  }
  unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v16 + 31) < 0)
  {
    std::string::size_type v17 = *(void **)(v16 + 8);
    uint64_t v18 = *(void *)(v16 + 16);
  }
  else
  {
    std::string::size_type v17 = (void *)(v16 + 8);
    LODWORD(v18) = *(unsigned __int8 *)(v16 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v18)
  {
    uint64_t v19 = (int)v18;
    memcpy(v4, v17, (int)v18);
    v4 += v19;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v17, v18, v4);
}

uint64_t sub_12D6D10(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_12F18AC(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  if (*(unsigned char *)(a1 + 16))
  {
    uint64_t v8 = sub_152DE10(*(void *)(a1 + 48));
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    v2 += v12;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

void sub_12D6DF4(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_1301490((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    uint64_t v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  if (*(unsigned char *)(a2 + 16))
  {
    uint64_t v9 = *(uint64_t (****)())(a2 + 48);
    *(_DWORD *)(a1 + 16) |= 1u;
    unsigned int v10 = *(std::string **)(a1 + 48);
    if (!v10)
    {
      uint64_t v11 = *(void *)(a1 + 8);
      uint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        uint64_t v12 = (void *)*v12;
      }
      unsigned int v10 = (std::string *)sub_152DF48((uint64_t)v12);
      *(void *)(a1 + 48) = v10;
      uint64_t v9 = *(uint64_t (****)())(a2 + 48);
    }
    if (v9) {
      unint64_t v13 = v9;
    }
    else {
      unint64_t v13 = &off_253CDD8;
    }
    sub_11D2930(v10, (uint64_t)v13);
  }
  uint64_t v14 = *(void *)(a2 + 8);
  if (v14)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v14 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_12D6F18(uint64_t a1)
{
  return sub_12D6F20(a1 + 24);
}

uint64_t sub_12D6F20(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 8);
  if ((int)v1 < 1) {
    return 1;
  }
  uint64_t v3 = v1 + 1;
  for (unsigned int i = v1 - 1; ; --i)
  {
    uint64_t v5 = *(void *)(*(void *)(a1 + 16) + 8 * i + 8);
    if ((*(unsigned char *)(v5 + 16) & 0x20) != 0)
    {
      uint64_t result = sub_15B06D8(*(void *)(v5 + 64));
      if (!result) {
        break;
      }
    }
    if (--v3 <= 1) {
      return 1;
    }
  }
  return result;
}

void *sub_12D6F90@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap.RapConversationMessage.UserResponse");
}

uint64_t sub_12D6FA0(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 0xF) == 0) {
    goto LABEL_7;
  }
  if (v2)
  {
    unint64_t v5 = *(void *)(result + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v5 + 23) < 0)
    {
      **(unsigned char **)unint64_t v5 = 0;
      *(void *)(v5 + 8) = 0;
      if ((v2 & 2) != 0) {
        goto LABEL_15;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v5 = 0;
      *(unsigned char *)(v5 + 23) = 0;
      if ((v2 & 2) != 0) {
        goto LABEL_15;
      }
    }
LABEL_4:
    if ((v2 & 4) == 0) {
      goto LABEL_5;
    }
    goto LABEL_19;
  }
  if ((v2 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_15:
  unint64_t v6 = *(void *)(result + 32) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v6 + 23) < 0)
  {
    **(unsigned char **)unint64_t v6 = 0;
    *(void *)(v6 + 8) = 0;
    if ((v2 & 4) != 0) {
      goto LABEL_19;
    }
LABEL_5:
    if ((v2 & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  *(unsigned char *)unint64_t v6 = 0;
  *(unsigned char *)(v6 + 23) = 0;
  if ((v2 & 4) == 0) {
    goto LABEL_5;
  }
LABEL_19:
  uint64_t result = sub_12EC748(*(void *)(result + 40));
  if ((v2 & 8) != 0) {
LABEL_6:
  }
    uint64_t result = sub_12ECE00(*(void *)(v1 + 48));
LABEL_7:
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_12D7080(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 0x7F) == 0) {
    goto LABEL_37;
  }
  if (v1)
  {
    unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)unint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
      if ((v1 & 2) != 0) {
        goto LABEL_14;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
      if ((v1 & 2) != 0) {
        goto LABEL_14;
      }
    }
LABEL_4:
    if ((v1 & 4) == 0) {
      goto LABEL_5;
    }
LABEL_18:
    unint64_t v4 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v4 + 23) < 0)
    {
      **(unsigned char **)unint64_t v4 = 0;
      *(void *)(v4 + 8) = 0;
      if ((v1 & 8) != 0) {
        goto LABEL_22;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v4 = 0;
      *(unsigned char *)(v4 + 23) = 0;
      if ((v1 & 8) != 0) {
        goto LABEL_22;
      }
    }
LABEL_6:
    if ((v1 & 0x10) == 0) {
      goto LABEL_7;
    }
LABEL_26:
    unint64_t v6 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v6 + 23) < 0)
    {
      **(unsigned char **)unint64_t v6 = 0;
      *(void *)(v6 + 8) = 0;
      if ((v1 & 0x20) != 0) {
        goto LABEL_30;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v6 = 0;
      *(unsigned char *)(v6 + 23) = 0;
      if ((v1 & 0x20) != 0) {
        goto LABEL_30;
      }
    }
LABEL_8:
    if ((v1 & 0x40) == 0) {
      goto LABEL_37;
    }
LABEL_34:
    unint64_t v8 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v8 + 23) < 0)
    {
      **(unsigned char **)unint64_t v8 = 0;
      *(void *)(v8 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v8 = 0;
      *(unsigned char *)(v8 + 23) = 0;
    }
    goto LABEL_37;
  }
  if ((v1 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_14:
  unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v3 + 23) < 0)
  {
    **(unsigned char **)unint64_t v3 = 0;
    *(void *)(v3 + 8) = 0;
    if ((v1 & 4) != 0) {
      goto LABEL_18;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v3 = 0;
    *(unsigned char *)(v3 + 23) = 0;
    if ((v1 & 4) != 0) {
      goto LABEL_18;
    }
  }
LABEL_5:
  if ((v1 & 8) == 0) {
    goto LABEL_6;
  }
LABEL_22:
  unint64_t v5 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v5 + 23) < 0)
  {
    **(unsigned char **)unint64_t v5 = 0;
    *(void *)(v5 + 8) = 0;
    if ((v1 & 0x10) != 0) {
      goto LABEL_26;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v5 = 0;
    *(unsigned char *)(v5 + 23) = 0;
    if ((v1 & 0x10) != 0) {
      goto LABEL_26;
    }
  }
LABEL_7:
  if ((v1 & 0x20) == 0) {
    goto LABEL_8;
  }
LABEL_30:
  unint64_t v7 = *(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v7 + 23) < 0)
  {
    **(unsigned char **)unint64_t v7 = 0;
    *(void *)(v7 + 8) = 0;
    if ((v1 & 0x40) == 0) {
      goto LABEL_37;
    }
    goto LABEL_34;
  }
  *(unsigned char *)unint64_t v7 = 0;
  *(unsigned char *)(v7 + 23) = 0;
  if ((v1 & 0x40) != 0) {
    goto LABEL_34;
  }
LABEL_37:
  char v10 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v10) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_12D7208(uint64_t a1)
{
  unint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  unint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_12;
    }
  }
  else if (v4)
  {
    goto LABEL_12;
  }
  if ((uint64_t (***)())a1 != &off_2531700)
  {
    uint64_t v5 = *(void *)(a1 + 48);
    if (v5)
    {
      sub_12ED588(v5);
      operator delete();
    }
    unint64_t v6 = *(void **)(a1 + 56);
    if (v6)
    {
      sub_12EE48C(v6);
      operator delete();
    }
    uint64_t v7 = *(void *)(a1 + 64);
    if (v7)
    {
      sub_12F9380(v7);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_12:
  sub_1301384((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12D7304(uint64_t a1)
{
  sub_12D7208(a1);

  operator delete();
}

uint64_t sub_12D733C(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    unint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_12D3A88(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  int v5 = *(_DWORD *)(v1 + 16);
  if ((v5 & 7) != 0)
  {
    if (v5)
    {
      uint64_t result = sub_12D6FA0(*(void *)(v1 + 48));
      if ((v5 & 2) == 0)
      {
LABEL_8:
        if ((v5 & 4) == 0) {
          goto LABEL_10;
        }
        goto LABEL_9;
      }
    }
    else if ((v5 & 2) == 0)
    {
      goto LABEL_8;
    }
    uint64_t result = sub_12D3A88(*(void *)(v1 + 56));
    if ((v5 & 4) != 0) {
LABEL_9:
    }
      uint64_t result = sub_12D7080(*(void *)(v1 + 64));
  }
LABEL_10:
  char v7 = *(unsigned char *)(v1 + 8);
  uint64_t v6 = v1 + 8;
  *(unsigned char *)(v6 + 64) = 0;
  *(_DWORD *)(v6 + 8) = 0;
  if (v7)
  {
    return sub_188B4AC((uint64_t *)v6);
  }
  return result;
}

char *sub_12D73FC(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v32 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v32, a3[11].i32[1])) {
    goto LABEL_2;
  }
  char v7 = (void *)(a1 + 8);
  while (2)
  {
    unint64_t v8 = v32 + 1;
    unsigned int v9 = *v32;
    if (*v32 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unint64_t v8 = (char *)sub_188C180((uint64_t)v32, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unint64_t v8 = v32 + 2;
      }
    }
    uint64_t v32 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_42;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void **)(a1 + 48);
        if (!v12)
        {
          unint64_t v13 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            unint64_t v13 = (void *)*v13;
          }
          uint64_t v12 = sub_12EDEA8((uint64_t)v13);
          *(void *)(a1 + 48) = v12;
          unint64_t v8 = v32;
        }
        uint64_t v14 = (char *)sub_12D7768(a3, (uint64_t)v12, (unsigned __int8 *)v8);
        goto LABEL_49;
      case 2u:
        if (v9 != 16) {
          goto LABEL_42;
        }
        v5 |= 8u;
        uint64_t v15 = v8 + 1;
        uint64_t v16 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_19;
        }
        int v17 = *v15;
        uint64_t v16 = v16 + (v17 << 7) - 128;
        if (v17 < 0)
        {
          int v30 = (char *)sub_188C138((uint64_t)v8, v16);
          uint64_t v32 = v30;
          *(unsigned char *)(a1 + 72) = v31 != 0;
          if (!v30) {
            goto LABEL_57;
          }
        }
        else
        {
          uint64_t v15 = v8 + 2;
LABEL_19:
          uint64_t v32 = v15;
          *(unsigned char *)(a1 + 72) = v16 != 0;
        }
        goto LABEL_50;
      case 3u:
        if (v9 != 26) {
          goto LABEL_42;
        }
        uint64_t v18 = v8 - 1;
        while (1)
        {
          uint64_t v19 = (unsigned __int8 *)(v18 + 1);
          uint64_t v32 = v18 + 1;
          std::string::size_type v20 = *(_DWORD **)(a1 + 40);
          if (v20 && (uint64_t v21 = *(int *)(a1 + 32), (int)v21 < *v20))
          {
            *(_DWORD *)(a1 + 32) = v21 + 1;
            uint64_t v22 = *(void *)&v20[2 * v21 + 2];
          }
          else
          {
            uint64_t v23 = sub_12F816C(*(void *)(a1 + 24));
            uint64_t v22 = sub_188CDC8(a1 + 24, v23);
            uint64_t v19 = (unsigned __int8 *)v32;
          }
          uint64_t v18 = sub_12D3F70(a3, v22, v19);
          uint64_t v32 = v18;
          if (!v18) {
            goto LABEL_57;
          }
          if (*(void *)a3 <= (unint64_t)v18 || *v18 != 26) {
            goto LABEL_50;
          }
        }
      case 4u:
        if (v9 != 34) {
          goto LABEL_42;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v24 = *(void *)(a1 + 56);
        if (!v24)
        {
          int v25 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            int v25 = (void *)*v25;
          }
          uint64_t v24 = sub_12F816C((uint64_t)v25);
          *(void *)(a1 + 56) = v24;
          unint64_t v8 = v32;
        }
        uint64_t v14 = sub_12D3F70(a3, v24, (unsigned __int8 *)v8);
        goto LABEL_49;
      case 0xAu:
        if (v9 != 82) {
          goto LABEL_42;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        std::string::size_type v26 = *(void **)(a1 + 64);
        if (!v26)
        {
          int v27 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            int v27 = (void *)*v27;
          }
          std::string::size_type v26 = sub_12FE080((uint64_t)v27);
          *(void *)(a1 + 64) = v26;
          unint64_t v8 = v32;
        }
        uint64_t v14 = (char *)sub_12D77F8(a3, (uint64_t)v26, (unsigned __int8 *)v8);
        goto LABEL_49;
      default:
LABEL_42:
        if (v9) {
          BOOL v28 = (v9 & 7) == 4;
        }
        else {
          BOOL v28 = 1;
        }
        if (!v28)
        {
          if (*v7)
          {
            uint64_t v29 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v29 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unint64_t v8 = v32;
          }
          uint64_t v14 = (char *)sub_1885AC0(v9, v29, v8, a3);
LABEL_49:
          uint64_t v32 = v14;
          if (!v14) {
            goto LABEL_57;
          }
LABEL_50:
          if (sub_11947B8((uint64_t)a3, &v32, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_57:
        }
          uint64_t v32 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v32;
    }
  }
}

uint64_t sub_12D7768(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12ED6C8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_12D77F8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12F94D4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_12D7888(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 48);
    unsigned char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    uint64_t v4 = sub_12EDA60(v7, v9, a3);
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v10 = *(unsigned char *)(a1 + 72);
    unsigned char *v4 = 16;
    v4[1] = v10;
    v4 += 2;
  }
  int v11 = *(_DWORD *)(a1 + 32);
  if (v11)
  {
    for (int i = 0; i != v11; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v13 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      unsigned char *v4 = 26;
      unsigned int v14 = *(_DWORD *)(v13 + 20);
      v4[1] = v14;
      if (v14 > 0x7F) {
        uint64_t v15 = sub_188A9CC(v14, v4 + 1);
      }
      else {
        uint64_t v15 = v4 + 2;
      }
      uint64_t v4 = sub_12EE724(v13, (unint64_t)v15, a3);
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v16 = *(void *)(a1 + 56);
    unsigned char *v4 = 34;
    unsigned int v17 = *(_DWORD *)(v16 + 20);
    v4[1] = v17;
    if (v17 > 0x7F) {
      uint64_t v18 = sub_188A9CC(v17, v4 + 1);
    }
    else {
      uint64_t v18 = v4 + 2;
    }
    uint64_t v4 = sub_12EE724(v16, (unint64_t)v18, a3);
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v19 = *(void *)(a1 + 64);
    unsigned char *v4 = 82;
    unsigned int v20 = *(_DWORD *)(v19 + 20);
    v4[1] = v20;
    if (v20 > 0x7F) {
      uint64_t v21 = sub_188A9CC(v20, v4 + 1);
    }
    else {
      uint64_t v21 = v4 + 2;
    }
    uint64_t v4 = sub_12F97E8(v19, v21, a3);
  }
  uint64_t v22 = *(void *)(a1 + 8);
  if ((v22 & 1) == 0) {
    return v4;
  }
  unint64_t v24 = v22 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v24 + 31) < 0)
  {
    int v25 = *(void **)(v24 + 8);
    uint64_t v26 = *(void *)(v24 + 16);
  }
  else
  {
    int v25 = (void *)(v24 + 8);
    LODWORD(v26) = *(unsigned __int8 *)(v24 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v26)
  {
    uint64_t v27 = (int)v26;
    memcpy(v4, v25, (int)v26);
    v4 += v27;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v25, v26, v4);
}

uint64_t sub_12D7B34(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      unint64_t v7 = sub_12EE8C8(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 0xF) == 0) {
    goto LABEL_16;
  }
  if (v8)
  {
    uint64_t v12 = sub_12EDC30(*(void *)(a1 + 48));
    v2 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v8 & 2) == 0)
    {
LABEL_12:
      if ((v8 & 4) == 0) {
        goto LABEL_14;
      }
      goto LABEL_13;
    }
  }
  else if ((v8 & 2) == 0)
  {
    goto LABEL_12;
  }
  unint64_t v13 = sub_12EE8C8(*(void *)(a1 + 56));
  v2 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 4) != 0)
  {
LABEL_13:
    uint64_t v9 = sub_12F9990(*(void *)(a1 + 64));
    v2 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_14:
  if ((v8 & 8) != 0) {
    v2 += 2;
  }
LABEL_16:
  uint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    unint64_t v14 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v14 + 31) < 0) {
      uint64_t v15 = *(void *)(v14 + 16);
    }
    else {
      uint64_t v15 = *(unsigned __int8 *)(v14 + 31);
    }
    v2 += v15;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_12D7C98(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = (std::string *)sub_130151C((uint64_t *)&v3[1], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2]- LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    int v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *int v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 0xF) != 0)
  {
    if (v9)
    {
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::pointer data = (std::string *)v3[2].__r_.__value_.__l.__data_;
      if (!data)
      {
        std::string::size_type size = v3->__r_.__value_.__l.__size_;
        unint64_t v13 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
        if (size) {
          unint64_t v13 = (void *)*v13;
        }
        std::string::pointer data = (std::string *)sub_12EDEA8((uint64_t)v13);
        v3[2].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      }
      if (*(void *)(a2 + 48)) {
        unint64_t v14 = *(uint64_t (****)())(a2 + 48);
      }
      else {
        unint64_t v14 = &off_2531DA0;
      }
      uint64_t result = sub_12D7E80(data, (uint64_t)v14);
      if ((v9 & 2) == 0)
      {
LABEL_7:
        if ((v9 & 4) == 0) {
          goto LABEL_8;
        }
        goto LABEL_31;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_7;
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    uint64_t v15 = (std::string *)v3[2].__r_.__value_.__l.__size_;
    if (!v15)
    {
      std::string::size_type v16 = v3->__r_.__value_.__l.__size_;
      unsigned int v17 = (void *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
      if (v16) {
        unsigned int v17 = (void *)*v17;
      }
      uint64_t v15 = (std::string *)sub_12F816C((uint64_t)v17);
      v3[2].__r_.__value_.__l.__size_ = (std::string::size_type)v15;
    }
    if (*(void *)(a2 + 56)) {
      uint64_t v18 = *(uint64_t (****)())(a2 + 56);
    }
    else {
      uint64_t v18 = &off_2531E00;
    }
    uint64_t result = sub_12D45B4(v15, (uint64_t)v18);
    if ((v9 & 4) == 0)
    {
LABEL_8:
      if ((v9 & 8) == 0)
      {
LABEL_10:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v9;
        goto LABEL_11;
      }
LABEL_9:
      v3[3].__r_.__value_.__s.__data_[0] = *(unsigned char *)(a2 + 72);
      goto LABEL_10;
    }
LABEL_31:
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
    uint64_t v19 = (std::string *)v3[2].__r_.__value_.__r.__words[2];
    if (!v19)
    {
      std::string::size_type v20 = v3->__r_.__value_.__l.__size_;
      uint64_t v21 = (void *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
      if (v20) {
        uint64_t v21 = (void *)*v21;
      }
      uint64_t v19 = (std::string *)sub_12FE080((uint64_t)v21);
      v3[2].__r_.__value_.__r.__words[2] = (std::string::size_type)v19;
    }
    if (*(void *)(a2 + 64)) {
      uint64_t v22 = *(uint64_t (****)())(a2 + 64);
    }
    else {
      uint64_t v22 = &off_25321F0;
    }
    uint64_t result = sub_12D7FFC(v19, (uint64_t)v22);
    if ((v9 & 8) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
LABEL_11:
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

std::string *sub_12D7E80(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0xF) == 0) {
    goto LABEL_29;
  }
  if (v4)
  {
    uint64_t v5 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
    uint64_t v6 = (std::string **)&result[1];
    std::string::size_type size = v3->__r_.__value_.__l.__size_;
    int v8 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
    if (size) {
      int v8 = (uint64_t *)*v8;
    }
    uint64_t result = sub_1881DF4(v6, v5, v8);
    if ((v4 & 2) == 0)
    {
LABEL_4:
      if ((v4 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_13;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_4;
  }
  int v9 = (long long *)(*(void *)(a2 + 32) & 0xFFFFFFFFFFFFFFFELL);
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
  std::string::size_type v10 = v3->__r_.__value_.__l.__size_;
  int v11 = (uint64_t *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
  if (v10) {
    int v11 = (uint64_t *)*v11;
  }
  uint64_t result = sub_1881DF4((std::string **)&v3[1].__r_.__value_.__l.__size_, v9, v11);
  if ((v4 & 4) == 0)
  {
LABEL_5:
    if ((v4 & 8) == 0) {
      goto LABEL_29;
    }
    goto LABEL_21;
  }
LABEL_13:
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
  uint64_t v12 = (std::string *)v3[1].__r_.__value_.__r.__words[2];
  if (!v12)
  {
    std::string::size_type v13 = v3->__r_.__value_.__l.__size_;
    unint64_t v14 = (void *)(v13 & 0xFFFFFFFFFFFFFFFCLL);
    if (v13) {
      unint64_t v14 = (void *)*v14;
    }
    uint64_t v12 = (std::string *)sub_12EDDB0((uint64_t)v14);
    v3[1].__r_.__value_.__r.__words[2] = (std::string::size_type)v12;
  }
  if (*(void *)(a2 + 40)) {
    uint64_t v15 = *(uint64_t (****)())(a2 + 40);
  }
  else {
    uint64_t v15 = &off_2531D48;
  }
  uint64_t result = sub_12ECBC4(v12, (uint64_t)v15);
  if ((v4 & 8) != 0)
  {
LABEL_21:
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 8u;
    std::string::pointer data = (std::string *)v3[2].__r_.__value_.__l.__data_;
    if (!data)
    {
      std::string::size_type v17 = v3->__r_.__value_.__l.__size_;
      uint64_t v18 = (void *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
      if (v17) {
        uint64_t v18 = (void *)*v18;
      }
      sub_12EDE2C((uint64_t)v18);
      v3[2].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
    }
    if (*(void *)(a2 + 48)) {
      uint64_t v19 = *(uint64_t (****)())(a2 + 48);
    }
    else {
      uint64_t v19 = &off_2531D70;
    }
    uint64_t result = sub_12ED41C(data, (uint64_t)v19);
  }
LABEL_29:
  uint64_t v20 = *(void *)(a2 + 8);
  if (v20)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v20 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

std::string *sub_12D7FFC(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0x7F) == 0) {
    goto LABEL_31;
  }
  if (v4)
  {
    uint64_t v5 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
    uint64_t v6 = (std::string **)&result[1];
    std::string::size_type size = v3->__r_.__value_.__l.__size_;
    int v8 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
    if (size) {
      int v8 = (uint64_t *)*v8;
    }
    uint64_t result = sub_1881DF4(v6, v5, v8);
    if ((v4 & 2) == 0)
    {
LABEL_4:
      if ((v4 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_16;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_4;
  }
  int v9 = (long long *)(*(void *)(a2 + 32) & 0xFFFFFFFFFFFFFFFELL);
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
  std::string::size_type v10 = v3->__r_.__value_.__l.__size_;
  int v11 = (uint64_t *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
  if (v10) {
    int v11 = (uint64_t *)*v11;
  }
  uint64_t result = sub_1881DF4((std::string **)&v3[1].__r_.__value_.__l.__size_, v9, v11);
  if ((v4 & 4) == 0)
  {
LABEL_5:
    if ((v4 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_19;
  }
LABEL_16:
  uint64_t v12 = (long long *)(*(void *)(a2 + 40) & 0xFFFFFFFFFFFFFFFELL);
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
  std::string::size_type v13 = v3->__r_.__value_.__l.__size_;
  unint64_t v14 = (uint64_t *)(v13 & 0xFFFFFFFFFFFFFFFCLL);
  if (v13) {
    unint64_t v14 = (uint64_t *)*v14;
  }
  uint64_t result = sub_1881DF4((std::string **)&v3[1].__r_.__value_.__r.__words[2], v12, v14);
  if ((v4 & 8) == 0)
  {
LABEL_6:
    if ((v4 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_22;
  }
LABEL_19:
  uint64_t v15 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= 8u;
  std::string::size_type v16 = v3->__r_.__value_.__l.__size_;
  std::string::size_type v17 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
  if (v16) {
    std::string::size_type v17 = (uint64_t *)*v17;
  }
  uint64_t result = sub_1881DF4((std::string **)&v3[2], v15, v17);
  if ((v4 & 0x10) == 0)
  {
LABEL_7:
    if ((v4 & 0x20) == 0) {
      goto LABEL_8;
    }
    goto LABEL_25;
  }
LABEL_22:
  uint64_t v18 = (long long *)(*(void *)(a2 + 56) & 0xFFFFFFFFFFFFFFFELL);
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x10u;
  std::string::size_type v19 = v3->__r_.__value_.__l.__size_;
  uint64_t v20 = (uint64_t *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
  if (v19) {
    uint64_t v20 = (uint64_t *)*v20;
  }
  uint64_t result = sub_1881DF4((std::string **)&v3[2].__r_.__value_.__l.__size_, v18, v20);
  if ((v4 & 0x20) == 0)
  {
LABEL_8:
    if ((v4 & 0x40) == 0) {
      goto LABEL_31;
    }
    goto LABEL_28;
  }
LABEL_25:
  uint64_t v21 = (long long *)(*(void *)(a2 + 64) & 0xFFFFFFFFFFFFFFFELL);
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x20u;
  std::string::size_type v22 = v3->__r_.__value_.__l.__size_;
  uint64_t v23 = (uint64_t *)(v22 & 0xFFFFFFFFFFFFFFFCLL);
  if (v22) {
    uint64_t v23 = (uint64_t *)*v23;
  }
  uint64_t result = sub_1881DF4((std::string **)&v3[2].__r_.__value_.__r.__words[2], v21, v23);
  if ((v4 & 0x40) != 0)
  {
LABEL_28:
    unint64_t v24 = (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x40u;
    std::string::size_type v25 = v3->__r_.__value_.__l.__size_;
    uint64_t v26 = (uint64_t *)(v25 & 0xFFFFFFFFFFFFFFFCLL);
    if (v25) {
      uint64_t v26 = (uint64_t *)*v26;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[3], v24, v26);
  }
LABEL_31:
  uint64_t v27 = *(void *)(a2 + 8);
  if (v27)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v27 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_12D81F0()
{
  return 1;
}

void *sub_12D81F8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap.RapConversationMessage.Outreach");
}

uint64_t sub_12D8208(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  if ((uint64_t (***)())a1 != &off_2531750)
  {
    uint64_t v5 = *(void *)(a1 + 24);
    if (v5)
    {
      sub_12D66B0(v5);
      operator delete();
    }
    uint64_t v6 = *(void *)(a1 + 32);
    if (v6)
    {
      sub_12D7208(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12D82D8(uint64_t a1)
{
  sub_12D8208(a1);

  operator delete();
}

uint64_t sub_12D8310(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 3) != 0)
  {
    if (v2) {
      uint64_t result = sub_12D67AC(*(void *)(result + 24));
    }
    if ((v2 & 2) != 0) {
      uint64_t result = sub_12D733C(*(void *)(v1 + 32));
    }
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_12D8380(uint64_t a1, char *a2, int32x2_t *a3)
{
  std::string::size_type v19 = a2;
  if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
    return v19;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    int v7 = v19 + 1;
    unsigned int v8 = *v19;
    if (*v19 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        int v7 = (char *)sub_188C180((uint64_t)v19, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        int v7 = v19 + 2;
      }
    }
    std::string::size_type v19 = v7;
    if (v8 >> 3 != 2) {
      break;
    }
    if (v8 != 18) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v15 = *(void *)(a1 + 32);
    if (!v15)
    {
      std::string::size_type v16 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        std::string::size_type v16 = (void *)*v16;
      }
      uint64_t v15 = sub_12D9A7C((uint64_t)v16);
      *(void *)(a1 + 32) = v15;
      int v7 = v19;
    }
    unint64_t v14 = sub_12D85D0(a3, v15, (unsigned __int8 *)v7);
LABEL_31:
    std::string::size_type v19 = v14;
    if (!v14) {
      return 0;
    }
    if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
      return v19;
    }
  }
  if (v8 >> 3 == 1 && v8 == 10)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    std::string::size_type v17 = *(void **)(a1 + 24);
    if (!v17)
    {
      uint64_t v18 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        uint64_t v18 = (void *)*v18;
      }
      std::string::size_type v17 = sub_12D99E0((uint64_t)v18);
      *(void *)(a1 + 24) = v17;
      int v7 = v19;
    }
    unint64_t v14 = sub_12D8540(a3, (uint64_t)v17, (unsigned __int8 *)v7);
    goto LABEL_31;
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      std::string::size_type v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      std::string::size_type v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v7 = v19;
    }
    unint64_t v14 = (char *)sub_1885AC0(v8, v13, v7, a3);
    goto LABEL_31;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v19;
  }
  return 0;
}

char *sub_12D8540(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12D683C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_12D85D0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12D73FC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_12D8660(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    unsigned char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    char v4 = sub_12D6B64(v7, (unint64_t)v9, a3);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 32);
    unsigned char *v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 20);
    v4[1] = v11;
    if (v11 > 0x7F) {
      BOOL v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      BOOL v12 = v4 + 2;
    }
    char v4 = sub_12D7888(v10, (unint64_t)v12, a3);
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    std::string::size_type v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    std::string::size_type v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_12D87E0(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 3) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_8;
  }
  if (v2)
  {
    uint64_t v4 = sub_12D6D10(*(void *)(a1 + 24));
    uint64_t v3 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_7:
    uint64_t v5 = sub_12D7B34(*(void *)(a1 + 32));
    v3 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_8:
  uint64_t v6 = *(void *)(a1 + 8);
  if (v6)
  {
    unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v8 + 31) < 0) {
      uint64_t v9 = *(void *)(v8 + 16);
    }
    else {
      uint64_t v9 = *(unsigned __int8 *)(v8 + 31);
    }
    v3 += v9;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

void sub_12D88B8(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 3) != 0)
  {
    if (v4)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v5 = *(void **)(a1 + 24);
      if (!v5)
      {
        uint64_t v6 = *(void *)(a1 + 8);
        uint64_t v7 = (void *)(v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (v6) {
          uint64_t v7 = (void *)*v7;
        }
        uint64_t v5 = sub_12D99E0((uint64_t)v7);
        *(void *)(a1 + 24) = v5;
      }
      if (*(void *)(a2 + 24)) {
        unint64_t v8 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        unint64_t v8 = &off_25316C8;
      }
      sub_12D6DF4((uint64_t)v5, (uint64_t)v8);
    }
    if ((v4 & 2) != 0)
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      uint64_t v9 = *(std::string **)(a1 + 32);
      if (!v9)
      {
        uint64_t v10 = *(void *)(a1 + 8);
        unsigned int v11 = (void *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
        if (v10) {
          unsigned int v11 = (void *)*v11;
        }
        uint64_t v9 = (std::string *)sub_12D9A7C((uint64_t)v11);
        *(void *)(a1 + 32) = v9;
      }
      if (*(void *)(a2 + 32)) {
        BOOL v12 = *(uint64_t (****)())(a2 + 32);
      }
      else {
        BOOL v12 = &off_2531700;
      }
      sub_12D7C98(v9, (uint64_t)v12);
    }
  }
  uint64_t v13 = *(void *)(a2 + 8);
  if (v13)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v13 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_12D89BC(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 1;
  }
  uint64_t result = sub_12D6F20(*(void *)(a1 + 24) + 24);
  if (result) {
    return 1;
  }
  return result;
}

void *sub_12D89EC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap.RapConversationMessage.Content");
}

uint64_t sub_12D89FC(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 3) != 0)
  {
    if ((v2 & 1) == 0) {
      goto LABEL_5;
    }
    unint64_t v3 = *(void *)(result + 24) & 0xFFFFFFFFFFFFFFFELL;
    if ((*(char *)(v3 + 23) & 0x80000000) == 0)
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
LABEL_5:
      if ((v2 & 2) == 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
    **(unsigned char **)unint64_t v3 = 0;
    *(void *)(v3 + 8) = 0;
    if ((v2 & 2) != 0) {
LABEL_6:
    }
      uint64_t result = sub_12F6CE8(*(void *)(result + 32));
  }
LABEL_7:
  char v5 = *(unsigned char *)(v1 + 8);
  uint64_t v4 = v1 + 8;
  *(_DWORD *)(v4 + 32) = 0;
  *(_DWORD *)(v4 + 8) = 0;
  if (v5)
  {
    return sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

void *sub_12D8A94(void *a1)
{
  unint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_12D8B18((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void ***sub_12D8B18(uint64_t a1)
{
  unint64_t v3 = *(uint64_t **)(a1 + 24);
  uint64_t v2 = (void ***)(a1 + 24);
  if (v3 != &qword_2550250) {
    sub_1881C6C(v2);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  uint64_t result = (void ***)(a1 + 40);
  if (*(uint64_t **)(a1 + 40) != &qword_2550250) {
    sub_1881C6C(result);
  }
  if ((uint64_t (***)())a1 != &off_2531778)
  {
    uint64_t v5 = *(void *)(a1 + 48);
    if (v5)
    {
      sub_12F716C(v5);
      operator delete();
    }
    uint64_t v6 = *(void **)(a1 + 56);
    if (v6)
    {
      sub_12EE48C(v6);
      operator delete();
    }
    uint64_t result = *(void ****)(a1 + 64);
    if (result)
    {
      sub_12D8208((uint64_t)result);
      operator delete();
    }
  }
  return result;
}

void sub_12D8C04(void *a1)
{
  sub_12D8A94(a1);

  operator delete();
}

uint64_t sub_12D8C3C(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 0x3F) == 0) {
    goto LABEL_9;
  }
  if ((v2 & 1) == 0)
  {
    if ((v2 & 2) == 0) {
      goto LABEL_4;
    }
LABEL_17:
    unint64_t v6 = *(void *)(result + 32) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v6 + 23) < 0)
    {
      **(unsigned char **)unint64_t v6 = 0;
      *(void *)(v6 + 8) = 0;
      if ((v2 & 4) != 0) {
        goto LABEL_21;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v6 = 0;
      *(unsigned char *)(v6 + 23) = 0;
      if ((v2 & 4) != 0) {
        goto LABEL_21;
      }
    }
LABEL_5:
    if ((v2 & 8) == 0) {
      goto LABEL_6;
    }
LABEL_25:
    uint64_t result = sub_12D89FC(*(void *)(result + 48));
    if ((v2 & 0x10) == 0)
    {
LABEL_7:
      if ((v2 & 0x20) == 0) {
        goto LABEL_9;
      }
      goto LABEL_8;
    }
    goto LABEL_26;
  }
  unint64_t v5 = *(void *)(result + 24) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v5 + 23) < 0)
  {
    **(unsigned char **)unint64_t v5 = 0;
    *(void *)(v5 + 8) = 0;
    if ((v2 & 2) != 0) {
      goto LABEL_17;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v5 = 0;
    *(unsigned char *)(v5 + 23) = 0;
    if ((v2 & 2) != 0) {
      goto LABEL_17;
    }
  }
LABEL_4:
  if ((v2 & 4) == 0) {
    goto LABEL_5;
  }
LABEL_21:
  unint64_t v7 = *(void *)(result + 40) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v7 + 23) < 0)
  {
    **(unsigned char **)unint64_t v7 = 0;
    *(void *)(v7 + 8) = 0;
    if ((v2 & 8) != 0) {
      goto LABEL_25;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v7 = 0;
    *(unsigned char *)(v7 + 23) = 0;
    if ((v2 & 8) != 0) {
      goto LABEL_25;
    }
  }
LABEL_6:
  if ((v2 & 0x10) == 0) {
    goto LABEL_7;
  }
LABEL_26:
  uint64_t result = sub_12D3A88(*(void *)(v1 + 56));
  if ((v2 & 0x20) != 0) {
LABEL_8:
  }
    uint64_t result = sub_12D8310(*(void *)(v1 + 64));
LABEL_9:
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_12D8D60(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v26 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v26, a3[11].i32[1])) {
    return *(void *)v26;
  }
  unint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    unint64_t v7 = (unsigned __int8 *)(*(void *)v26 + 1);
    unsigned int v8 = **(unsigned char **)v26;
    if ((char)**(unsigned char **)v26 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if ((char)*v7 < 0)
      {
        unint64_t v7 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v26, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        unint64_t v7 = (unsigned __int8 *)(*(void *)v26 + 2);
      }
    }
    *(void *)uint64_t v26 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 10) {
          goto LABEL_40;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v11 = *(void *)(a1 + 8);
        BOOL v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
        if (v11) {
          BOOL v12 = (uint64_t *)*v12;
        }
        uint64_t v13 = (void *)(a1 + 24);
        goto LABEL_39;
      case 2u:
        if (v8 != 18) {
          goto LABEL_40;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v14 = *(void *)(a1 + 48);
        if (!v14)
        {
          unint64_t v15 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            unint64_t v15 = (void *)*v15;
          }
          uint64_t v14 = sub_12F8B98((uint64_t)v15);
          *(void *)(a1 + 48) = v14;
          unint64_t v7 = *(unsigned __int8 **)v26;
        }
        uint64_t v16 = sub_12D907C(a3, v14, v7);
        goto LABEL_47;
      case 3u:
        if (v8 != 26) {
          goto LABEL_40;
        }
        *(_DWORD *)(a1 + 16) |= 0x10u;
        uint64_t v17 = *(void *)(a1 + 56);
        if (!v17)
        {
          uint64_t v18 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v18 = (void *)*v18;
          }
          uint64_t v17 = sub_12F816C((uint64_t)v18);
          *(void *)(a1 + 56) = v17;
          unint64_t v7 = *(unsigned __int8 **)v26;
        }
        uint64_t v16 = (uint64_t)sub_12D3F70(a3, v17, v7);
        goto LABEL_47;
      case 4u:
        if (v8 != 34) {
          goto LABEL_40;
        }
        *(_DWORD *)(a1 + 16) |= 0x20u;
        std::string::size_type v19 = *(void **)(a1 + 64);
        if (!v19)
        {
          uint64_t v20 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v20 = (void *)*v20;
          }
          std::string::size_type v19 = sub_12D9B1C((uint64_t)v20);
          *(void *)(a1 + 64) = v19;
          unint64_t v7 = *(unsigned __int8 **)v26;
        }
        uint64_t v16 = (uint64_t)sub_12D910C(a3, (uint64_t)v19, v7);
        goto LABEL_47;
      case 6u:
        if (v8 != 50) {
          goto LABEL_40;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v21 = *(void *)(a1 + 8);
        BOOL v12 = (uint64_t *)(v21 & 0xFFFFFFFFFFFFFFFCLL);
        if (v21) {
          BOOL v12 = (uint64_t *)*v12;
        }
        uint64_t v13 = (void *)(a1 + 32);
        goto LABEL_39;
      case 9u:
        if (v8 != 74) {
          goto LABEL_40;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v22 = *(void *)(a1 + 8);
        BOOL v12 = (uint64_t *)(v22 & 0xFFFFFFFFFFFFFFFCLL);
        if (v22) {
          BOOL v12 = (uint64_t *)*v12;
        }
        uint64_t v13 = (void *)(a1 + 40);
LABEL_39:
        uint64_t v23 = (std::string *)sub_1880F84(v13, v12);
        uint64_t v16 = (uint64_t)sub_188C244(v23, *(char **)v26, (uint64_t)a3);
        goto LABEL_47;
      default:
LABEL_40:
        if (v8) {
          BOOL v24 = (v8 & 7) == 4;
        }
        else {
          BOOL v24 = 1;
        }
        if (!v24)
        {
          if (*v6)
          {
            std::string::size_type v25 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            std::string::size_type v25 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unint64_t v7 = *(unsigned __int8 **)v26;
          }
          uint64_t v16 = (uint64_t)sub_1885AC0(v8, v25, (char *)v7, a3);
LABEL_47:
          *(void *)uint64_t v26 = v16;
          if (!v16) {
            return 0;
          }
          if (sub_11947B8((uint64_t)a3, (char **)v26, a3[11].i32[1])) {
            return *(void *)v26;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return *(void *)v26;
    }
  }
}

uint64_t sub_12D907C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12F7270(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_12D910C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12D8380(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_12D919C(uint64_t a1, unsigned char *__dst, unint64_t *a3)
{
  char v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    char v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 8) == 0)
    {
LABEL_3:
      if ((v6 & 0x10) == 0) {
        goto LABEL_4;
      }
      goto LABEL_17;
    }
  }
  else if ((v6 & 8) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v9 = *(void *)(a1 + 48);
  unsigned char *v4 = 18;
  unsigned int v10 = *(_DWORD *)(v9 + 20);
  v4[1] = v10;
  if (v10 > 0x7F) {
    uint64_t v11 = sub_188A9CC(v10, v4 + 1);
  }
  else {
    uint64_t v11 = v4 + 2;
  }
  char v4 = sub_12F7568(v9, (unint64_t)v11, a3);
  if ((v6 & 0x10) == 0)
  {
LABEL_4:
    if ((v6 & 0x20) == 0) {
      goto LABEL_5;
    }
    goto LABEL_23;
  }
LABEL_17:
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v12 = *(void *)(a1 + 56);
  unsigned char *v4 = 26;
  unsigned int v13 = *(_DWORD *)(v12 + 20);
  v4[1] = v13;
  if (v13 > 0x7F) {
    uint64_t v14 = sub_188A9CC(v13, v4 + 1);
  }
  else {
    uint64_t v14 = v4 + 2;
  }
  char v4 = sub_12EE724(v12, (unint64_t)v14, a3);
  if ((v6 & 0x20) == 0)
  {
LABEL_5:
    if ((v6 & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_29;
  }
LABEL_23:
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v15 = *(void *)(a1 + 64);
  unsigned char *v4 = 34;
  unsigned int v16 = *(_DWORD *)(v15 + 20);
  v4[1] = v16;
  if (v16 > 0x7F) {
    uint64_t v17 = sub_188A9CC(v16, v4 + 1);
  }
  else {
    uint64_t v17 = v4 + 2;
  }
  char v4 = sub_12D8660(v15, (unint64_t)v17, a3);
  if ((v6 & 2) == 0)
  {
LABEL_6:
    if ((v6 & 4) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
LABEL_29:
  char v4 = sub_117A0AC(a3, 6, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) != 0) {
LABEL_7:
  }
    char v4 = sub_117A0AC(a3, 9, (const void **)(*(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL), v4);
LABEL_8:
  uint64_t v7 = *(void *)(a1 + 8);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v18 = v7 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    std::string::size_type v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    std::string::size_type v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(v4, v19, (int)v20);
    v4 += v21;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v19, v20, v4);
}

uint64_t sub_12D93F8(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0x3F) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_17;
  }
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
  uint64_t v6 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    uint64_t v6 = v5;
  }
  uint64_t v3 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 2) != 0)
  {
LABEL_9:
    unint64_t v7 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v8 = *(unsigned __int8 *)(v7 + 23);
    uint64_t v9 = *(void *)(v7 + 8);
    if ((v8 & 0x80u) == 0) {
      uint64_t v9 = v8;
    }
    v3 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v2 & 4) != 0)
  {
    unint64_t v13 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v14 = *(unsigned __int8 *)(v13 + 23);
    uint64_t v15 = *(void *)(v13 + 8);
    if ((v14 & 0x80u) == 0) {
      uint64_t v15 = v14;
    }
    v3 += v15 + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 8) == 0)
    {
LABEL_14:
      if ((v2 & 0x10) == 0) {
        goto LABEL_15;
      }
      goto LABEL_23;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_14;
  }
  uint64_t v16 = sub_12F7720(*(void *)(a1 + 48));
  v3 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x10) == 0)
  {
LABEL_15:
    if ((v2 & 0x20) == 0) {
      goto LABEL_17;
    }
    goto LABEL_16;
  }
LABEL_23:
  unint64_t v17 = sub_12EE8C8(*(void *)(a1 + 56));
  v3 += v17 + ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x20) != 0)
  {
LABEL_16:
    uint64_t v10 = sub_12D87E0(*(void *)(a1 + 64));
    v3 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_17:
  uint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    unint64_t v18 = v11 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v18 + 31) < 0) {
      uint64_t v19 = *(void *)(v18 + 16);
    }
    else {
      uint64_t v19 = *(unsigned __int8 *)(v18 + 31);
    }
    v3 += v19;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

void sub_12D95DC(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0x3F) == 0) {
    goto LABEL_42;
  }
  if (v4)
  {
    uint64_t v5 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v6 = (std::string **)(a1 + 24);
    uint64_t v7 = *(void *)(a1 + 8);
    uint64_t v8 = (uint64_t *)(v7 & 0xFFFFFFFFFFFFFFFCLL);
    if (v7) {
      uint64_t v8 = (uint64_t *)*v8;
    }
    sub_1881DF4(v6, v5, v8);
    if ((v4 & 2) == 0)
    {
LABEL_4:
      if ((v4 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_15;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_4;
  }
  uint64_t v9 = (long long *)(*(void *)(a2 + 32) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 16) |= 2u;
  uint64_t v10 = *(void *)(a1 + 8);
  uint64_t v11 = (uint64_t *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
  if (v10) {
    uint64_t v11 = (uint64_t *)*v11;
  }
  sub_1881DF4((std::string **)(a1 + 32), v9, v11);
  if ((v4 & 4) == 0)
  {
LABEL_5:
    if ((v4 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_18;
  }
LABEL_15:
  uint64_t v12 = (long long *)(*(void *)(a2 + 40) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 16) |= 4u;
  uint64_t v13 = *(void *)(a1 + 8);
  uint64_t v14 = (uint64_t *)(v13 & 0xFFFFFFFFFFFFFFFCLL);
  if (v13) {
    uint64_t v14 = (uint64_t *)*v14;
  }
  sub_1881DF4((std::string **)(a1 + 40), v12, v14);
  if ((v4 & 8) == 0)
  {
LABEL_6:
    if ((v4 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_26;
  }
LABEL_18:
  *(_DWORD *)(a1 + 16) |= 8u;
  uint64_t v15 = *(std::string **)(a1 + 48);
  if (!v15)
  {
    uint64_t v16 = *(void *)(a1 + 8);
    unint64_t v17 = (void *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
    if (v16) {
      unint64_t v17 = (void *)*v17;
    }
    uint64_t v15 = (std::string *)sub_12F8B98((uint64_t)v17);
    *(void *)(a1 + 48) = v15;
  }
  if (*(void *)(a2 + 48)) {
    unint64_t v18 = *(uint64_t (****)())(a2 + 48);
  }
  else {
    unint64_t v18 = &off_2532180;
  }
  sub_12D97E0(v15, (uint64_t)v18);
  if ((v4 & 0x10) == 0)
  {
LABEL_7:
    if ((v4 & 0x20) == 0) {
      goto LABEL_42;
    }
    goto LABEL_34;
  }
LABEL_26:
  *(_DWORD *)(a1 + 16) |= 0x10u;
  uint64_t v19 = *(std::string **)(a1 + 56);
  if (!v19)
  {
    uint64_t v20 = *(void *)(a1 + 8);
    uint64_t v21 = (void *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
    if (v20) {
      uint64_t v21 = (void *)*v21;
    }
    uint64_t v19 = (std::string *)sub_12F816C((uint64_t)v21);
    *(void *)(a1 + 56) = v19;
  }
  if (*(void *)(a2 + 56)) {
    uint64_t v22 = *(uint64_t (****)())(a2 + 56);
  }
  else {
    uint64_t v22 = &off_2531E00;
  }
  sub_12D45B4(v19, (uint64_t)v22);
  if ((v4 & 0x20) != 0)
  {
LABEL_34:
    *(_DWORD *)(a1 + 16) |= 0x20u;
    uint64_t v23 = *(void **)(a1 + 64);
    if (!v23)
    {
      uint64_t v24 = *(void *)(a1 + 8);
      std::string::size_type v25 = (void *)(v24 & 0xFFFFFFFFFFFFFFFCLL);
      if (v24) {
        std::string::size_type v25 = (void *)*v25;
      }
      uint64_t v23 = sub_12D9B1C((uint64_t)v25);
      *(void *)(a1 + 64) = v23;
    }
    if (*(void *)(a2 + 64)) {
      uint64_t v26 = *(uint64_t (****)())(a2 + 64);
    }
    else {
      uint64_t v26 = &off_2531750;
    }
    sub_12D88B8((uint64_t)v23, (uint64_t)v26);
  }
LABEL_42:
  uint64_t v27 = *(void *)(a2 + 8);
  if (v27)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v27 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

std::string *sub_12D97E0(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 7) != 0)
  {
    if (v4)
    {
      uint64_t v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      uint64_t v7 = (std::string **)&result[1];
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v9 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v9 = (uint64_t *)*v9;
      }
      uint64_t result = sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0)
        {
LABEL_6:
          LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
          goto LABEL_7;
        }
LABEL_5:
        LODWORD(v3[1].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 40);
        goto LABEL_6;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    uint64_t v10 = (std::string *)v3[1].__r_.__value_.__l.__size_;
    if (!v10)
    {
      std::string::size_type v11 = v3->__r_.__value_.__l.__size_;
      uint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        uint64_t v12 = (void *)*v12;
      }
      uint64_t v10 = (std::string *)sub_12F8B10((uint64_t)v12);
      v3[1].__r_.__value_.__l.__size_ = (std::string::size_type)v10;
    }
    if (*(void *)(a2 + 32)) {
      uint64_t v13 = *(uint64_t (****)())(a2 + 32);
    }
    else {
      uint64_t v13 = &off_2532158;
    }
    uint64_t result = sub_119E644(v10, (uint64_t)v13);
    if ((v4 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_7:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_12D98F0(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 0x20) == 0) {
    return 1;
  }
  uint64_t v1 = *(void *)(a1 + 64);
  if ((*(unsigned char *)(v1 + 16) & 1) == 0) {
    return 1;
  }
  uint64_t result = sub_12D6F20(*(void *)(v1 + 24) + 24);
  if (result) {
    return 1;
  }
  return result;
}

void *sub_12D992C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap.RapConversationMessage");
}

void *sub_12D993C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = off_24A6168;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = &qword_2550250;
  return result;
}

void *sub_12D99E0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = off_24A61E8;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = 0;
  return result;
}

uint64_t sub_12D9A7C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24A6268;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(_OWORD *)(result + 32) = 0u;
  *(_OWORD *)(result + 48) = 0u;
  *(_OWORD *)(result + 57) = 0u;
  return result;
}

void *sub_12D9B1C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24A62E8;
  result[3] = 0;
  result[4] = 0;
  result[2] = 0;
  return result;
}

void *sub_12D9B98(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24A6368;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = &qword_2550250;
  result[5] = &qword_2550250;
  result[6] = 0;
  result[7] = 0;
  result[8] = 0;
  return result;
}

uint64_t sub_12D9C24(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 0x7F) == 0) {
    goto LABEL_10;
  }
  if (v2)
  {
    uint64_t result = sub_12DA4A4(*(void *)(result + 24));
    if ((v2 & 2) == 0)
    {
LABEL_4:
      if ((v2 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_16;
    }
  }
  else if ((v2 & 2) == 0)
  {
    goto LABEL_4;
  }
  uint64_t result = sub_12DC8DC(*(void *)(v1 + 32));
  if ((v2 & 4) == 0)
  {
LABEL_5:
    if ((v2 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_17;
  }
LABEL_16:
  uint64_t result = sub_12E5340(*(void *)(v1 + 40));
  if ((v2 & 8) == 0)
  {
LABEL_6:
    if ((v2 & 0x10) == 0) {
      goto LABEL_7;
    }
LABEL_18:
    uint64_t result = sub_12E0A7C(*(void *)(v1 + 56));
    if ((v2 & 0x20) == 0)
    {
LABEL_8:
      if ((v2 & 0x40) == 0) {
        goto LABEL_10;
      }
      goto LABEL_9;
    }
    goto LABEL_19;
  }
LABEL_17:
  uint64_t result = sub_12E7EA8(*(void *)(v1 + 48));
  if ((v2 & 0x10) != 0) {
    goto LABEL_18;
  }
LABEL_7:
  if ((v2 & 0x20) == 0) {
    goto LABEL_8;
  }
LABEL_19:
  uint64_t result = sub_12E41C8(*(void *)(v1 + 64));
  if ((v2 & 0x40) != 0) {
LABEL_9:
  }
    uint64_t result = sub_12DD924(*(void *)(v1 + 72));
LABEL_10:
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_12D9CEC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12EB4D8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

void sub_12D9D7C(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0x7F) == 0) {
    goto LABEL_66;
  }
  if (v4)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v5 = *(void *)(a1 + 24);
    if (!v5)
    {
      uint64_t v6 = *(void *)(a1 + 8);
      int v7 = (void *)(v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (v6) {
        int v7 = (void *)*v7;
      }
      sub_12EBDE0((uint64_t)v7);
      *(void *)(a1 + 24) = v5;
    }
    if (*(void *)(a2 + 24)) {
      uint64_t v8 = *(uint64_t (****)())(a2 + 24);
    }
    else {
      uint64_t v8 = &off_25317C0;
    }
    sub_12DC014(v5, (uint64_t)v8);
    if ((v4 & 2) == 0)
    {
LABEL_4:
      if ((v4 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_26;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_4;
  }
  *(_DWORD *)(a1 + 16) |= 2u;
  uint64_t v9 = *(void **)(a1 + 32);
  if (!v9)
  {
    uint64_t v10 = *(void *)(a1 + 8);
    std::string::size_type v11 = (void *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
    if (v10) {
      std::string::size_type v11 = (void *)*v11;
    }
    uint64_t v9 = sub_12EBEA4((uint64_t)v11);
    *(void *)(a1 + 32) = v9;
  }
  if (*(void *)(a2 + 32)) {
    uint64_t v12 = *(uint64_t (****)())(a2 + 32);
  }
  else {
    uint64_t v12 = &off_2531878;
  }
  sub_12DCFE4((uint64_t)v9, (uint64_t)v12);
  if ((v4 & 4) == 0)
  {
LABEL_5:
    if ((v4 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_34;
  }
LABEL_26:
  *(_DWORD *)(a1 + 16) |= 4u;
  uint64_t v13 = *(void *)(a1 + 40);
  if (!v13)
  {
    uint64_t v14 = *(void *)(a1 + 8);
    uint64_t v15 = (void *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
    if (v14) {
      uint64_t v15 = (void *)*v15;
    }
    sub_12EC3E0((uint64_t)v15);
    *(void *)(a1 + 40) = v13;
  }
  if (*(void *)(a2 + 40)) {
    uint64_t v16 = *(uint64_t (****)())(a2 + 40);
  }
  else {
    uint64_t v16 = &off_2531B40;
  }
  sub_12E6F60(v13, (uint64_t)v16);
  if ((v4 & 8) == 0)
  {
LABEL_6:
    if ((v4 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_42;
  }
LABEL_34:
  *(_DWORD *)(a1 + 16) |= 8u;
  uint64_t v17 = *(void *)(a1 + 48);
  if (!v17)
  {
    uint64_t v18 = *(void *)(a1 + 8);
    uint64_t v19 = (void *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
    if (v18) {
      uint64_t v19 = (void *)*v19;
    }
    sub_12EC474((uint64_t)v19);
    *(void *)(a1 + 48) = v17;
  }
  if (*(void *)(a2 + 48)) {
    uint64_t v20 = *(uint64_t (****)())(a2 + 48);
  }
  else {
    uint64_t v20 = &off_2531C08;
  }
  sub_12E9BC4(v17, (uint64_t)v20);
  if ((v4 & 0x10) == 0)
  {
LABEL_7:
    if ((v4 & 0x20) == 0) {
      goto LABEL_8;
    }
    goto LABEL_50;
  }
LABEL_42:
  *(_DWORD *)(a1 + 16) |= 0x10u;
  uint64_t v21 = *(void *)(a1 + 56);
  if (!v21)
  {
    uint64_t v22 = *(void *)(a1 + 8);
    uint64_t v23 = (void *)(v22 & 0xFFFFFFFFFFFFFFFCLL);
    if (v22) {
      uint64_t v23 = (void *)*v23;
    }
    sub_12EC1D8((uint64_t)v23);
    *(void *)(a1 + 56) = v21;
  }
  if (*(void *)(a2 + 56)) {
    uint64_t v24 = *(uint64_t (****)())(a2 + 56);
  }
  else {
    uint64_t v24 = &off_25319D8;
  }
  sub_12E25AC(v21, (uint64_t)v24);
  if ((v4 & 0x20) == 0)
  {
LABEL_8:
    if ((v4 & 0x40) == 0) {
      goto LABEL_66;
    }
    goto LABEL_58;
  }
LABEL_50:
  *(_DWORD *)(a1 + 16) |= 0x20u;
  uint64_t v25 = *(void *)(a1 + 64);
  if (!v25)
  {
    uint64_t v26 = *(void *)(a1 + 8);
    uint64_t v27 = (void *)(v26 & 0xFFFFFFFFFFFFFFFCLL);
    if (v26) {
      uint64_t v27 = (void *)*v27;
    }
    uint64_t v25 = sub_12EC340((uint64_t)v27);
    *(void *)(a1 + 64) = v25;
  }
  if (*(void *)(a2 + 64)) {
    BOOL v28 = *(uint64_t (****)())(a2 + 64);
  }
  else {
    BOOL v28 = &off_2531AF8;
  }
  sub_12E4A14(v25, (uint64_t)v28);
  if ((v4 & 0x40) != 0)
  {
LABEL_58:
    *(_DWORD *)(a1 + 16) |= 0x40u;
    uint64_t v29 = *(void **)(a1 + 72);
    if (!v29)
    {
      uint64_t v30 = *(void *)(a1 + 8);
      uint64_t v31 = (void *)(v30 & 0xFFFFFFFFFFFFFFFCLL);
      if (v30) {
        uint64_t v31 = (void *)*v31;
      }
      uint64_t v29 = sub_12EBFD4((uint64_t)v31);
      *(void *)(a1 + 72) = v29;
    }
    if (*(void *)(a2 + 72)) {
      uint64_t v32 = *(uint64_t (****)())(a2 + 72);
    }
    else {
      uint64_t v32 = &off_25318C0;
    }
    sub_12DE298((uint64_t)v29, (uint64_t)v32);
  }
LABEL_66:
  uint64_t v33 = *(void *)(a2 + 8);
  if (v33)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v33 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_12DA018(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if (v2)
  {
    uint64_t result = sub_12DC710(*(void *)(a1 + 24));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 2) != 0)
  {
    uint64_t result = sub_12D6F20(*(void *)(a1 + 32) + 24);
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 4) != 0)
  {
    uint64_t result = sub_12E77F4(*(void *)(a1 + 40));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 8) != 0)
  {
    uint64_t result = sub_12EA7B4(*(void *)(a1 + 48));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 0x10) != 0)
  {
    uint64_t result = sub_12E2B84(*(void *)(a1 + 56));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 0x20) != 0)
  {
    uint64_t result = sub_12E4BAC(*(void *)(a1 + 64));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 0x40) == 0) {
    return 1;
  }
  uint64_t result = sub_12DE49C(*(void *)(a1 + 72));
  if (result) {
    return 1;
  }
  return result;
}

uint64_t sub_12DA0CC(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 0x3F) == 0) {
    goto LABEL_9;
  }
  if (v2)
  {
    unint64_t v5 = *(void *)(result + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v5 + 23) < 0)
    {
      **(unsigned char **)unint64_t v5 = 0;
      *(void *)(v5 + 8) = 0;
      if ((v2 & 2) != 0) {
        goto LABEL_17;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v5 = 0;
      *(unsigned char *)(v5 + 23) = 0;
      if ((v2 & 2) != 0) {
        goto LABEL_17;
      }
    }
LABEL_4:
    if ((v2 & 4) == 0) {
      goto LABEL_5;
    }
LABEL_21:
    unint64_t v7 = *(void *)(result + 40) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v7 + 23) < 0)
    {
      **(unsigned char **)unint64_t v7 = 0;
      *(void *)(v7 + 8) = 0;
      if ((v2 & 8) != 0) {
        goto LABEL_25;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v7 = 0;
      *(unsigned char *)(v7 + 23) = 0;
      if ((v2 & 8) != 0) {
        goto LABEL_25;
      }
    }
LABEL_6:
    if ((v2 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_29;
  }
  if ((v2 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_17:
  unint64_t v6 = *(void *)(result + 32) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v6 + 23) < 0)
  {
    **(unsigned char **)unint64_t v6 = 0;
    *(void *)(v6 + 8) = 0;
    if ((v2 & 4) != 0) {
      goto LABEL_21;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v6 = 0;
    *(unsigned char *)(v6 + 23) = 0;
    if ((v2 & 4) != 0) {
      goto LABEL_21;
    }
  }
LABEL_5:
  if ((v2 & 8) == 0) {
    goto LABEL_6;
  }
LABEL_25:
  unint64_t v8 = *(void *)(result + 48) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v8 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v8 = 0;
    *(unsigned char *)(v8 + 23) = 0;
    if ((v2 & 0x10) != 0) {
      goto LABEL_29;
    }
LABEL_7:
    if ((v2 & 0x20) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
  **(unsigned char **)unint64_t v8 = 0;
  *(void *)(v8 + 8) = 0;
  if ((v2 & 0x10) == 0) {
    goto LABEL_7;
  }
LABEL_29:
  unint64_t v9 = *(void *)(result + 56) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v9 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v9 = 0;
    *(unsigned char *)(v9 + 23) = 0;
    if ((v2 & 0x20) == 0) {
      goto LABEL_9;
    }
LABEL_8:
    uint64_t result = sub_15B043C(*(void *)(result + 64));
    goto LABEL_9;
  }
  **(unsigned char **)unint64_t v9 = 0;
  *(void *)(v9 + 8) = 0;
  if ((v2 & 0x20) != 0) {
    goto LABEL_8;
  }
LABEL_9:
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

void *sub_12DA238(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  char v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_12DA2CC((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  sub_1889DE8(a1 + 5);
  sub_1889DA8((uint64_t)(a1 + 3));
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void ***sub_12DA2CC(uint64_t a1)
{
  uint64_t v3 = *(uint64_t **)(a1 + 64);
  uint64_t v2 = (void ***)(a1 + 64);
  if (v3 != &qword_2550250) {
    sub_1881C6C(v2);
  }
  if (*(uint64_t **)(a1 + 72) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 72));
  }
  if (*(uint64_t **)(a1 + 80) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 80));
  }
  uint64_t result = (void ***)(a1 + 88);
  if (*(uint64_t **)(a1 + 88) != &qword_2550250) {
    sub_1881C6C(result);
  }
  if ((uint64_t (***)())a1 != &off_25317C0)
  {
    unint64_t v5 = *(void **)(a1 + 96);
    if (v5)
    {
      sub_12EE48C(v5);
      operator delete();
    }
    unint64_t v6 = *(void **)(a1 + 104);
    if (v6)
    {
      sub_12EDF88(v6);
      operator delete();
    }
    if (*(void *)(a1 + 112))
    {
      sub_15B0994();
      operator delete();
    }
    if (*(void *)(a1 + 120))
    {
      sub_15B0994();
      operator delete();
    }
    uint64_t v7 = *(void *)(a1 + 128);
    if (v7)
    {
      sub_15B1678(v7);
      operator delete();
    }
    uint64_t v8 = *(void *)(a1 + 136);
    if (v8)
    {
      sub_12F12A0(v8);
      operator delete();
    }
    if (*(void *)(a1 + 144))
    {
      sub_15C4DB0();
      operator delete();
    }
    uint64_t result = *(void ****)(a1 + 152);
    if (result)
    {
      sub_15DCB58();
      operator delete();
    }
  }
  return result;
}

void sub_12DA46C(void *a1)
{
  sub_12DA238(a1);

  operator delete();
}

uint64_t sub_12DA4A4(uint64_t a1)
{
  *(_DWORD *)(a1 + 24) = 0;
  uint64_t result = sub_188CC00(a1 + 40);
  int v3 = *(_DWORD *)(a1 + 16);
  if (!(_BYTE)v3) {
    goto LABEL_11;
  }
  if ((v3 & 1) == 0)
  {
    if ((v3 & 2) == 0) {
      goto LABEL_4;
    }
LABEL_33:
    unint64_t v7 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v7 + 23) < 0)
    {
      **(unsigned char **)unint64_t v7 = 0;
      *(void *)(v7 + 8) = 0;
      if ((v3 & 4) != 0) {
        goto LABEL_37;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v7 = 0;
      *(unsigned char *)(v7 + 23) = 0;
      if ((v3 & 4) != 0) {
        goto LABEL_37;
      }
    }
LABEL_5:
    if ((v3 & 8) == 0) {
      goto LABEL_6;
    }
LABEL_41:
    unint64_t v9 = *(void *)(a1 + 88) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v9 + 23) < 0)
    {
      **(unsigned char **)unint64_t v9 = 0;
      *(void *)(v9 + 8) = 0;
      if ((v3 & 0x10) != 0) {
        goto LABEL_45;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v9 = 0;
      *(unsigned char *)(v9 + 23) = 0;
      if ((v3 & 0x10) != 0) {
        goto LABEL_45;
      }
    }
LABEL_7:
    if ((v3 & 0x20) == 0) {
      goto LABEL_8;
    }
LABEL_46:
    uint64_t result = sub_12D3AB0(*(void *)(a1 + 104));
    if ((v3 & 0x40) == 0)
    {
LABEL_9:
      if ((v3 & 0x80) == 0) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
    goto LABEL_47;
  }
  unint64_t v6 = *(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v6 + 23) < 0)
  {
    **(unsigned char **)unint64_t v6 = 0;
    *(void *)(v6 + 8) = 0;
    if ((v3 & 2) != 0) {
      goto LABEL_33;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v6 = 0;
    *(unsigned char *)(v6 + 23) = 0;
    if ((v3 & 2) != 0) {
      goto LABEL_33;
    }
  }
LABEL_4:
  if ((v3 & 4) == 0) {
    goto LABEL_5;
  }
LABEL_37:
  unint64_t v8 = *(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v8 + 23) < 0)
  {
    **(unsigned char **)unint64_t v8 = 0;
    *(void *)(v8 + 8) = 0;
    if ((v3 & 8) != 0) {
      goto LABEL_41;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v8 = 0;
    *(unsigned char *)(v8 + 23) = 0;
    if ((v3 & 8) != 0) {
      goto LABEL_41;
    }
  }
LABEL_6:
  if ((v3 & 0x10) == 0) {
    goto LABEL_7;
  }
LABEL_45:
  uint64_t result = sub_12D3A88(*(void *)(a1 + 96));
  if ((v3 & 0x20) != 0) {
    goto LABEL_46;
  }
LABEL_8:
  if ((v3 & 0x40) == 0) {
    goto LABEL_9;
  }
LABEL_47:
  uint64_t result = (uint64_t)sub_15B09D0(*(void *)(a1 + 112));
  if ((v3 & 0x80) != 0) {
LABEL_10:
  }
    uint64_t result = (uint64_t)sub_15B09D0(*(void *)(a1 + 120));
LABEL_11:
  if ((v3 & 0xF00) == 0) {
    goto LABEL_17;
  }
  if ((v3 & 0x100) != 0)
  {
    uint64_t result = (uint64_t)sub_15B16B4(*(unsigned char **)(a1 + 128));
    if ((v3 & 0x200) == 0)
    {
LABEL_14:
      if ((v3 & 0x400) == 0) {
        goto LABEL_15;
      }
      goto LABEL_30;
    }
  }
  else if ((v3 & 0x200) == 0)
  {
    goto LABEL_14;
  }
  uint64_t result = sub_12DA0CC(*(void *)(a1 + 136));
  if ((v3 & 0x400) == 0)
  {
LABEL_15:
    if ((v3 & 0x800) == 0) {
      goto LABEL_17;
    }
    goto LABEL_16;
  }
LABEL_30:
  uint64_t result = sub_15C4DEC(*(void *)(a1 + 144));
  if ((v3 & 0x800) != 0) {
LABEL_16:
  }
    uint64_t result = sub_15DCB94(*(void *)(a1 + 152));
LABEL_17:
  if ((v3 & 0xF000) != 0)
  {
    *(void *)(a1 + 165) = 0;
    *(void *)(a1 + 160) = 0;
  }
  if ((v3 & 0x1F0000) != 0) {
    *(void *)(a1 + 173) = 0;
  }
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t v4 = a1 + 8;
  *(_DWORD *)(v4 + 8) = 0;
  if (v5)
  {
    return sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

uint64_t sub_12DA67C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)v100 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v100, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (void *)(a1 + 8);
  unint64_t v8 = (uint64_t **)(a1 + 40);
  while (2)
  {
    unint64_t v9 = (unsigned __int8 *)(*(void *)v100 + 1);
    unsigned int v10 = **(unsigned char **)v100;
    if ((char)**(unsigned char **)v100 < 0)
    {
      int v11 = (char)*v9;
      unsigned int v12 = v10 + (v11 << 7);
      unsigned int v10 = v12 - 128;
      if (v11 < 0)
      {
        unint64_t v9 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v100, v12 - 128);
        unsigned int v10 = v13;
      }
      else
      {
        unint64_t v9 = (unsigned __int8 *)(*(void *)v100 + 2);
      }
    }
    *(void *)v100 = v9;
    switch(v10 >> 3)
    {
      case 1u:
        if (v10 != 10) {
          goto LABEL_180;
        }
        *(_DWORD *)(a1 + 16) |= 0x10u;
        uint64_t v14 = *(void *)(a1 + 96);
        if (!v14)
        {
          uint64_t v15 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v15 = (void *)*v15;
          }
          uint64_t v14 = sub_12F816C((uint64_t)v15);
          *(void *)(a1 + 96) = v14;
          unint64_t v9 = *(unsigned __int8 **)v100;
        }
        uint64_t v16 = (uint64_t)sub_12D3F70(a3, v14, v9);
        goto LABEL_152;
      case 2u:
        if (v10 != 18) {
          goto LABEL_180;
        }
        *(_DWORD *)(a1 + 16) |= 0x20u;
        uint64_t v17 = *(void *)(a1 + 104);
        if (!v17)
        {
          uint64_t v18 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v18 = (void *)*v18;
          }
          uint64_t v17 = sub_12F80F0((uint64_t)v18);
          *(void *)(a1 + 104) = v17;
          unint64_t v9 = *(unsigned __int8 **)v100;
        }
        uint64_t v16 = (uint64_t)sub_12D4000(a3, v17, v9);
        goto LABEL_152;
      case 3u:
        if (v10 != 24) {
          goto LABEL_180;
        }
        uint64_t v19 = (char *)(v9 + 1);
        unint64_t v20 = *v9;
        if (((char)*v9 & 0x80000000) == 0) {
          goto LABEL_25;
        }
        int v21 = *v19;
        int v22 = v20 + (v21 << 7);
        unint64_t v20 = (v22 - 128);
        if (v21 < 0)
        {
          *(void *)v100 = sub_188C138((uint64_t)v9, (v22 - 128));
          if (!*(void *)v100) {
            goto LABEL_203;
          }
          unint64_t v20 = v81;
        }
        else
        {
          uint64_t v19 = (char *)(v9 + 2);
LABEL_25:
          *(void *)v100 = v19;
        }
        if (v20 <= 5)
        {
          *(_DWORD *)(a1 + 16) |= 0x1000u;
          *(_DWORD *)(a1 + 160) = v20;
          goto LABEL_153;
        }
        if (*v7) {
          v98 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          v98 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v99 = 3;
        goto LABEL_196;
      case 4u:
        if (v10 != 34) {
          goto LABEL_180;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v23 = *(void *)(a1 + 8);
        uint64_t v24 = (uint64_t *)(v23 & 0xFFFFFFFFFFFFFFFCLL);
        if (v23) {
          uint64_t v24 = (uint64_t *)*v24;
        }
        uint64_t v25 = (void *)(a1 + 64);
        goto LABEL_151;
      case 5u:
        if (v10 != 42) {
          goto LABEL_180;
        }
        *(_DWORD *)(a1 + 16) |= 0x40u;
        uint64_t v26 = *(void *)(a1 + 112);
        if (v26) {
          goto LABEL_50;
        }
        uint64_t v27 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          uint64_t v27 = (void *)*v27;
        }
        uint64_t v26 = sub_15C1918((uint64_t)v27);
        *(void *)(a1 + 112) = v26;
        goto LABEL_49;
      case 6u:
        if (v10 != 48) {
          goto LABEL_180;
        }
        BOOL v28 = (char *)(v9 + 1);
        unint64_t v20 = *v9;
        if (((char)*v9 & 0x80000000) == 0) {
          goto LABEL_41;
        }
        int v29 = *v28;
        int v30 = v20 + (v29 << 7);
        unint64_t v20 = (v30 - 128);
        if (v29 < 0)
        {
          *(void *)v100 = sub_188C138((uint64_t)v9, (v30 - 128));
          if (!*(void *)v100) {
            goto LABEL_203;
          }
          unint64_t v20 = v82;
        }
        else
        {
          BOOL v28 = (char *)(v9 + 2);
LABEL_41:
          *(void *)v100 = v28;
        }
        if (sub_1369B8C(v20))
        {
          *(_DWORD *)(a1 + 16) |= 0x2000u;
          *(_DWORD *)(a1 + 164) = v20;
          goto LABEL_153;
        }
        if (*v7) {
          v98 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          v98 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v99 = 6;
        goto LABEL_196;
      case 7u:
        if (v10 != 58) {
          goto LABEL_180;
        }
        *(_DWORD *)(a1 + 16) |= 0x80u;
        uint64_t v26 = *(void *)(a1 + 120);
        if (v26) {
          goto LABEL_50;
        }
        uint64_t v31 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          uint64_t v31 = (void *)*v31;
        }
        uint64_t v26 = sub_15C1918((uint64_t)v31);
        *(void *)(a1 + 120) = v26;
LABEL_49:
        unint64_t v9 = *(unsigned __int8 **)v100;
LABEL_50:
        uint64_t v16 = (uint64_t)sub_1198F14(a3, v26, v9);
        goto LABEL_152;
      case 8u:
        if (v10 != 66) {
          goto LABEL_180;
        }
        *(_DWORD *)(a1 + 16) |= 0x100u;
        uint64_t v32 = *(void *)(a1 + 128);
        if (!v32)
        {
          uint64_t v33 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v33 = (void *)*v33;
          }
          uint64_t v32 = sub_15C19EC((uint64_t)v33);
          *(void *)(a1 + 128) = v32;
          unint64_t v9 = *(unsigned __int8 **)v100;
        }
        uint64_t v16 = (uint64_t)sub_11E1C60(a3, v32, v9);
        goto LABEL_152;
      case 9u:
        if (v10 == 72)
        {
          uint64_t v34 = (uint64_t)(v9 - 1);
          while (1)
          {
            *(void *)v100 = v34 + 1;
            unint64_t v35 = *(unsigned __int8 *)(v34 + 1);
            uint64_t v36 = (char *)(v34 + 2);
            if (*(char *)(v34 + 1) < 0)
            {
              int v37 = *v36;
              int v38 = v35 + (v37 << 7);
              unint64_t v35 = (v38 - 128);
              if (v37 < 0)
              {
                *(void *)v100 = sub_188C138(v34 + 1, (v38 - 128));
                if (!*(void *)v100) {
                  goto LABEL_203;
                }
                unint64_t v35 = v41;
                goto LABEL_63;
              }
              uint64_t v36 = (char *)(v34 + 3);
            }
            *(void *)v100 = v36;
LABEL_63:
            if (sub_125D168(v35))
            {
              uint64_t v39 = *(unsigned int *)(a1 + 24);
              if (v39 == *(_DWORD *)(a1 + 28))
              {
                int v40 = v39 + 1;
                sub_188C80C((unsigned int *)(a1 + 24), v39 + 1);
                *(_DWORD *)(*(void *)(a1 + 32) + 4 * v39) = v35;
              }
              else
              {
                *(_DWORD *)(*(void *)(a1 + 32) + 4 * v39) = v35;
                int v40 = v39 + 1;
              }
              *(_DWORD *)(a1 + 24) = v40;
            }
            else
            {
              if (*v7) {
                unint64_t v42 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
              }
              else {
                unint64_t v42 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              }
              sub_188C020(9, v35, v42);
            }
            uint64_t v34 = *(void *)v100;
            if (*(void *)a3 <= *(void *)v100 || **(unsigned char **)v100 != 72) {
              goto LABEL_153;
            }
          }
        }
        if (v10 == 74)
        {
          *(void *)&long long v101 = a1 + 24;
          *((void *)&v101 + 1) = sub_125D168;
          uint64_t v102 = a1 + 8;
          int v103 = 9;
          uint64_t v16 = (uint64_t)sub_1112E88((uint64_t)a3, (char *)v9, &v101);
          goto LABEL_152;
        }
LABEL_180:
        if (v10) {
          BOOL v96 = (v10 & 7) == 4;
        }
        else {
          BOOL v96 = 1;
        }
        if (!v96)
        {
          if (*v7)
          {
            v97 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            v97 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unint64_t v9 = *(unsigned __int8 **)v100;
          }
          uint64_t v16 = (uint64_t)sub_1885AC0(v10, v97, (char *)v9, a3);
LABEL_152:
          *(void *)v100 = v16;
          if (!v16) {
            goto LABEL_203;
          }
LABEL_153:
          if (sub_11947B8((uint64_t)a3, (char **)v100, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v9) {
          a3[10].i32[0] = v10 - 1;
        }
        else {
LABEL_203:
        }
          *(void *)v100 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v100;
      case 0xAu:
        if (v10 != 82) {
          goto LABEL_180;
        }
        *(_DWORD *)(a1 + 16) |= 0x200u;
        uint64_t v43 = *(void **)(a1 + 136);
        if (!v43)
        {
          uint64_t v44 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v44 = (void *)*v44;
          }
          uint64_t v43 = sub_12F849C((uint64_t)v44);
          *(void *)(a1 + 136) = v43;
          unint64_t v9 = *(unsigned __int8 **)v100;
        }
        uint64_t v16 = sub_12D6AD4(a3, (uint64_t)v43, v9);
        goto LABEL_152;
      case 0xBu:
        if (v10 != 88) {
          goto LABEL_180;
        }
        uint64_t v45 = (char *)(v9 + 1);
        unint64_t v20 = *v9;
        if (((char)*v9 & 0x80000000) == 0) {
          goto LABEL_87;
        }
        int v46 = *v45;
        int v47 = v20 + (v46 << 7);
        unint64_t v20 = (v47 - 128);
        if (v46 < 0)
        {
          *(void *)v100 = sub_188C138((uint64_t)v9, (v47 - 128));
          if (!*(void *)v100) {
            goto LABEL_203;
          }
          unint64_t v20 = v83;
        }
        else
        {
          uint64_t v45 = (char *)(v9 + 2);
LABEL_87:
          *(void *)v100 = v45;
        }
        if (sub_15B077C(v20))
        {
          *(_DWORD *)(a1 + 16) |= 0x4000u;
          *(_DWORD *)(a1 + 168) = v20;
        }
        else
        {
          if (*v7) {
            v98 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            v98 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          int v99 = 11;
LABEL_196:
          sub_188C020(v99, v20, v98);
        }
        goto LABEL_153;
      case 0xCu:
        if (v10 != 98) {
          goto LABEL_180;
        }
        unint64_t v48 = (const std::string::value_type *)(v9 - 1);
        while (1)
        {
          uint64_t v49 = (char *)(v48 + 1);
          *(void *)v100 = v48 + 1;
          int v50 = *(_DWORD **)(a1 + 56);
          if (v50 && (uint64_t v51 = *(int *)(a1 + 48), (int)v51 < *v50))
          {
            *(_DWORD *)(a1 + 48) = v51 + 1;
            v52 = *(std::string **)&v50[2 * v51 + 2];
          }
          else
          {
            if (!*v8) {
              operator new();
            }
            *BOOL v54 = v53;
            v54[1] = sub_3A6EDC;
            *int v53 = 0;
            v53[1] = 0;
            v53[2] = 0;
            v52 = (std::string *)sub_188CDC8(a1 + 40, (uint64_t)v53);
            uint64_t v49 = *(char **)v100;
          }
          unint64_t v48 = sub_188C244(v52, v49, (uint64_t)a3);
          *(void *)v100 = v48;
          if (!v48) {
            goto LABEL_203;
          }
          if (*(void *)a3 <= (unint64_t)v48 || *v48 != 98) {
            goto LABEL_153;
          }
        }
      case 0xDu:
        if (v10 != 106) {
          goto LABEL_180;
        }
        *(_DWORD *)(a1 + 16) |= 0x400u;
        uint64_t v55 = *(void *)(a1 + 144);
        if (!v55)
        {
          uint64_t v56 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v56 = (void *)*v56;
          }
          uint64_t v55 = sub_15C6344((uint64_t)v56);
          *(void *)(a1 + 144) = v55;
          unint64_t v9 = *(unsigned __int8 **)v100;
        }
        uint64_t v16 = sub_1279B7C(a3, v55, v9);
        goto LABEL_152;
      case 0xEu:
        if (v10 != 114) {
          goto LABEL_180;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v57 = *(void *)(a1 + 8);
        uint64_t v24 = (uint64_t *)(v57 & 0xFFFFFFFFFFFFFFFCLL);
        if (v57) {
          uint64_t v24 = (uint64_t *)*v24;
        }
        uint64_t v25 = (void *)(a1 + 72);
        goto LABEL_151;
      case 0xFu:
        if (v10 != 120) {
          goto LABEL_180;
        }
        v5 |= 0x8000u;
        uint64_t v58 = (char *)(v9 + 1);
        uint64_t v59 = *v9;
        if (((char)*v9 & 0x80000000) == 0) {
          goto LABEL_116;
        }
        int v60 = *v58;
        uint64_t v59 = v59 + (v60 << 7) - 128;
        if (v60 < 0)
        {
          uint64_t v84 = sub_188C138((uint64_t)v9, v59);
          *(void *)v100 = v84;
          *(unsigned char *)(a1 + 172) = v85 != 0;
          if (!v84) {
            goto LABEL_203;
          }
        }
        else
        {
          uint64_t v58 = (char *)(v9 + 2);
LABEL_116:
          *(void *)v100 = v58;
          *(unsigned char *)(a1 + 172) = v59 != 0;
        }
        goto LABEL_153;
      case 0x10u:
        if (v10 != 128) {
          goto LABEL_180;
        }
        v5 |= 0x10000u;
        uint64_t v61 = (char *)(v9 + 1);
        uint64_t v62 = *v9;
        if (((char)*v9 & 0x80000000) == 0) {
          goto LABEL_121;
        }
        int v63 = *v61;
        uint64_t v62 = v62 + (v63 << 7) - 128;
        if (v63 < 0)
        {
          uint64_t v86 = sub_188C138((uint64_t)v9, v62);
          *(void *)v100 = v86;
          *(unsigned char *)(a1 + 173) = v87 != 0;
          if (!v86) {
            goto LABEL_203;
          }
        }
        else
        {
          uint64_t v61 = (char *)(v9 + 2);
LABEL_121:
          *(void *)v100 = v61;
          *(unsigned char *)(a1 + 173) = v62 != 0;
        }
        goto LABEL_153;
      case 0x11u:
        if (v10 != 136) {
          goto LABEL_180;
        }
        v5 |= 0x20000u;
        uint64_t v64 = (char *)(v9 + 1);
        uint64_t v65 = *v9;
        if (((char)*v9 & 0x80000000) == 0) {
          goto LABEL_126;
        }
        int v66 = *v64;
        uint64_t v65 = v65 + (v66 << 7) - 128;
        if (v66 < 0)
        {
          uint64_t v88 = sub_188C138((uint64_t)v9, v65);
          *(void *)v100 = v88;
          *(unsigned char *)(a1 + 174) = v89 != 0;
          if (!v88) {
            goto LABEL_203;
          }
        }
        else
        {
          uint64_t v64 = (char *)(v9 + 2);
LABEL_126:
          *(void *)v100 = v64;
          *(unsigned char *)(a1 + 174) = v65 != 0;
        }
        goto LABEL_153;
      case 0x12u:
        if (v10 != 144) {
          goto LABEL_180;
        }
        v5 |= 0x80000u;
        uint64_t v68 = (char *)(v9 + 1);
        LODWORD(v67) = *v9;
        if ((v67 & 0x80) == 0) {
          goto LABEL_131;
        }
        int v69 = *v68;
        uint64_t v67 = v67 + (v69 << 7) - 128;
        if (v69 < 0)
        {
          uint64_t v90 = sub_188C138((uint64_t)v9, v67);
          *(void *)v100 = v90;
          *(_DWORD *)(a1 + 176) = v91;
          if (!v90) {
            goto LABEL_203;
          }
        }
        else
        {
          uint64_t v68 = (char *)(v9 + 2);
LABEL_131:
          *(void *)v100 = v68;
          *(_DWORD *)(a1 + 176) = v67;
        }
        goto LABEL_153;
      case 0x13u:
        if (v10 != 154) {
          goto LABEL_180;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v70 = *(void *)(a1 + 8);
        uint64_t v24 = (uint64_t *)(v70 & 0xFFFFFFFFFFFFFFFCLL);
        if (v70) {
          uint64_t v24 = (uint64_t *)*v24;
        }
        uint64_t v25 = (void *)(a1 + 80);
        goto LABEL_151;
      case 0x14u:
        if (v10 != 160) {
          goto LABEL_180;
        }
        v5 |= 0x40000u;
        v71 = (char *)(v9 + 1);
        uint64_t v72 = *v9;
        if (((char)*v9 & 0x80000000) == 0) {
          goto LABEL_140;
        }
        int v73 = *v71;
        uint64_t v72 = v72 + (v73 << 7) - 128;
        if (v73 < 0)
        {
          uint64_t v92 = sub_188C138((uint64_t)v9, v72);
          *(void *)v100 = v92;
          *(unsigned char *)(a1 + 175) = v93 != 0;
          if (!v92) {
            goto LABEL_203;
          }
        }
        else
        {
          v71 = (char *)(v9 + 2);
LABEL_140:
          *(void *)v100 = v71;
          *(unsigned char *)(a1 + 175) = v72 != 0;
        }
        goto LABEL_153;
      case 0x15u:
        if (v10 != 170) {
          goto LABEL_180;
        }
        *(_DWORD *)(a1 + 16) |= 0x800u;
        uint64_t v74 = *(void *)(a1 + 152);
        if (!v74)
        {
          v75 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            v75 = (void *)*v75;
          }
          uint64_t v74 = sub_15F9158((uint64_t)v75);
          *(void *)(a1 + 152) = v74;
          unint64_t v9 = *(unsigned __int8 **)v100;
        }
        uint64_t v16 = sub_12D598C(a3, v74, v9);
        goto LABEL_152;
      case 0x16u:
        if (v10 != 178) {
          goto LABEL_180;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v76 = *(void *)(a1 + 8);
        uint64_t v24 = (uint64_t *)(v76 & 0xFFFFFFFFFFFFFFFCLL);
        if (v76) {
          uint64_t v24 = (uint64_t *)*v24;
        }
        uint64_t v25 = (void *)(a1 + 88);
LABEL_151:
        v77 = (std::string *)sub_1880F84(v25, v24);
        uint64_t v16 = (uint64_t)sub_188C244(v77, *(char **)v100, (uint64_t)a3);
        goto LABEL_152;
      case 0x17u:
        if (v10 != 184) {
          goto LABEL_180;
        }
        v5 |= 0x100000u;
        uint64_t v78 = (char *)(v9 + 1);
        uint64_t v79 = *v9;
        if (((char)*v9 & 0x80000000) == 0) {
          goto LABEL_159;
        }
        int v80 = *v78;
        uint64_t v79 = v79 + (v80 << 7) - 128;
        if (v80 < 0)
        {
          uint64_t v94 = sub_188C138((uint64_t)v9, v79);
          *(void *)v100 = v94;
          *(unsigned char *)(a1 + 180) = v95 != 0;
          if (!v94) {
            goto LABEL_203;
          }
        }
        else
        {
          uint64_t v78 = (char *)(v9 + 2);
LABEL_159:
          *(void *)v100 = v78;
          *(unsigned char *)(a1 + 180) = v79 != 0;
        }
        goto LABEL_153;
      default:
        goto LABEL_180;
    }
  }
}

char *sub_12DB220(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 0x10) != 0)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 96);
    char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unint64_t v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unint64_t v9 = v4 + 2;
    }
    uint64_t v4 = sub_12EE724(v7, (unint64_t)v9, a3);
    if ((v6 & 0x20) == 0)
    {
LABEL_3:
      if ((v6 & 0x1000) == 0) {
        goto LABEL_23;
      }
      goto LABEL_17;
    }
  }
  else if ((v6 & 0x20) == 0)
  {
    goto LABEL_3;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v10 = *(void *)(a1 + 104);
  char *v4 = 18;
  unsigned int v11 = *(_DWORD *)(v10 + 20);
  v4[1] = v11;
  if (v11 > 0x7F) {
    unsigned int v12 = sub_188A9CC(v11, v4 + 1);
  }
  else {
    unsigned int v12 = v4 + 2;
  }
  uint64_t v4 = sub_12EE220(v10, (unint64_t)v12, a3);
  if ((v6 & 0x1000) != 0)
  {
LABEL_17:
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v13 = *(int *)(a1 + 160);
    char *v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unint64_t v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_23:
  if (v6)
  {
    uint64_t v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL), v4);
    if ((v6 & 0x40) == 0)
    {
LABEL_25:
      if ((v6 & 0x2000) == 0) {
        goto LABEL_40;
      }
      goto LABEL_34;
    }
  }
  else if ((v6 & 0x40) == 0)
  {
    goto LABEL_25;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v16 = *(void *)(a1 + 112);
  char *v4 = 42;
  unsigned int v17 = *(_DWORD *)(v16 + 44);
  v4[1] = v17;
  if (v17 > 0x7F) {
    uint64_t v18 = sub_188A9CC(v17, v4 + 1);
  }
  else {
    uint64_t v18 = v4 + 2;
  }
  uint64_t v4 = sub_15B0C0C(v16, v18, a3);
  if ((v6 & 0x2000) != 0)
  {
LABEL_34:
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v19 = *(int *)(a1 + 164);
    char *v4 = 48;
    v4[1] = v19;
    if (v19 > 0x7F)
    {
      v4[1] = v19 | 0x80;
      unint64_t v20 = v19 >> 7;
      v4[2] = v19 >> 7;
      v4 += 3;
      if (v19 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v21 = v20 >> 14;
          v20 >>= 7;
          *v4++ = v20;
        }
        while (v21);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_40:
  if ((v6 & 0x80) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v22 = *(void *)(a1 + 120);
    char *v4 = 58;
    unsigned int v23 = *(_DWORD *)(v22 + 44);
    v4[1] = v23;
    if (v23 > 0x7F) {
      uint64_t v24 = sub_188A9CC(v23, v4 + 1);
    }
    else {
      uint64_t v24 = v4 + 2;
    }
    uint64_t v4 = sub_15B0C0C(v22, v24, a3);
  }
  if ((v6 & 0x100) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v25 = *(void *)(a1 + 128);
    char *v4 = 66;
    unsigned int v26 = *(_DWORD *)(v25 + 20);
    v4[1] = v26;
    if (v26 > 0x7F) {
      uint64_t v27 = sub_188A9CC(v26, v4 + 1);
    }
    else {
      uint64_t v27 = v4 + 2;
    }
    uint64_t v4 = sub_15B1A68(v25, (unint64_t)v27, a3);
  }
  uint64_t v28 = *(unsigned int *)(a1 + 24);
  if ((int)v28 >= 1)
  {
    for (uint64_t i = 0; i != v28; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v30 = *(int *)(*(void *)(a1 + 32) + 4 * i);
      char *v4 = 72;
      v4[1] = v30;
      if (v30 > 0x7F)
      {
        v4[1] = v30 | 0x80;
        unint64_t v31 = v30 >> 7;
        v4[2] = v30 >> 7;
        v4 += 3;
        if (v30 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v32 = v31 >> 14;
            v31 >>= 7;
            *v4++ = v31;
          }
          while (v32);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  if ((v6 & 0x200) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v33 = *(void *)(a1 + 136);
    char *v4 = 82;
    unsigned int v34 = *(_DWORD *)(v33 + 20);
    v4[1] = v34;
    if (v34 > 0x7F) {
      unint64_t v35 = sub_188A9CC(v34, v4 + 1);
    }
    else {
      unint64_t v35 = v4 + 2;
    }
    uint64_t v4 = sub_12F16E4(v33, v35, a3);
  }
  if ((v6 & 0x4000) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v36 = *(int *)(a1 + 168);
    char *v4 = 88;
    v4[1] = v36;
    if (v36 > 0x7F)
    {
      v4[1] = v36 | 0x80;
      unint64_t v37 = v36 >> 7;
      v4[2] = v36 >> 7;
      v4 += 3;
      if (v36 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v38 = v37 >> 14;
          v37 >>= 7;
          *v4++ = v37;
        }
        while (v38);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v39 = *(unsigned int *)(a1 + 48);
  if ((int)v39 >= 1)
  {
    uint64_t v40 = 0;
    uint64_t v41 = 8 * v39;
    do
    {
      unint64_t v42 = *(void **)(*(void *)(a1 + 56) + v40 + 8);
      if (*((char *)v42 + 23) < 0)
      {
        int64_t v43 = v42[1];
        if (v43 > 127) {
          goto LABEL_88;
        }
      }
      else
      {
        int64_t v43 = *((unsigned __int8 *)v42 + 23);
      }
      if (*(void *)a3 - (void)v4 + 14 >= v43)
      {
        char *v4 = 98;
        v4[1] = v43;
        if (*((char *)v42 + 23) < 0) {
          unint64_t v42 = (void *)*v42;
        }
        uint64_t v44 = v4 + 2;
        memcpy(v44, v42, v43);
        uint64_t v4 = &v44[v43];
        goto LABEL_86;
      }
LABEL_88:
      uint64_t v4 = (char *)sub_188A868(a3, 12, (uint64_t)v42, v4);
LABEL_86:
      v40 += 8;
    }
    while (v41 != v40);
  }
  if ((v6 & 0x400) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v45 = *(void *)(a1 + 144);
    char *v4 = 106;
    unsigned int v46 = *(_DWORD *)(v45 + 20);
    v4[1] = v46;
    if (v46 > 0x7F) {
      int v47 = sub_188A9CC(v46, v4 + 1);
    }
    else {
      int v47 = v4 + 2;
    }
    uint64_t v4 = sub_15C50E8(v45, (unint64_t)v47, a3);
    if ((v6 & 2) == 0)
    {
LABEL_91:
      if ((v6 & 0x8000) == 0) {
        goto LABEL_92;
      }
      goto LABEL_103;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_91;
  }
  uint64_t v4 = sub_117A0AC(a3, 14, (const void **)(*(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x8000) == 0)
  {
LABEL_92:
    if ((v6 & 0x10000) == 0) {
      goto LABEL_93;
    }
    goto LABEL_106;
  }
LABEL_103:
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v48 = *(unsigned char *)(a1 + 172);
  char *v4 = 120;
  v4[1] = v48;
  v4 += 2;
  if ((v6 & 0x10000) == 0)
  {
LABEL_93:
    if ((v6 & 0x20000) == 0) {
      goto LABEL_94;
    }
    goto LABEL_109;
  }
LABEL_106:
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v49 = *(unsigned char *)(a1 + 173);
  *(_WORD *)uint64_t v4 = 384;
  v4[2] = v49;
  v4 += 3;
  if ((v6 & 0x20000) == 0)
  {
LABEL_94:
    if ((v6 & 0x80000) == 0) {
      goto LABEL_118;
    }
    goto LABEL_112;
  }
LABEL_109:
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v50 = *(unsigned char *)(a1 + 174);
  *(_WORD *)uint64_t v4 = 392;
  v4[2] = v50;
  v4 += 3;
  if ((v6 & 0x80000) != 0)
  {
LABEL_112:
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v51 = *(int *)(a1 + 176);
    *(_WORD *)uint64_t v4 = 400;
    v4[2] = v51;
    if (v51 > 0x7F)
    {
      v4[2] = v51 | 0x80;
      unint64_t v52 = v51 >> 7;
      v4[3] = v51 >> 7;
      v4 += 4;
      if (v51 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v53 = v52 >> 14;
          v52 >>= 7;
          *v4++ = v52;
        }
        while (v53);
      }
    }
    else
    {
      v4 += 3;
    }
  }
LABEL_118:
  if ((v6 & 4) != 0)
  {
    uint64_t v4 = sub_117A0AC(a3, 19, (const void **)(*(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL), v4);
    if ((v6 & 0x40000) == 0)
    {
LABEL_120:
      if ((v6 & 0x800) == 0) {
        goto LABEL_121;
      }
      goto LABEL_128;
    }
  }
  else if ((v6 & 0x40000) == 0)
  {
    goto LABEL_120;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v54 = *(unsigned char *)(a1 + 175);
  *(_WORD *)uint64_t v4 = 416;
  v4[2] = v54;
  v4 += 3;
  if ((v6 & 0x800) == 0)
  {
LABEL_121:
    if ((v6 & 8) == 0) {
      goto LABEL_122;
    }
    goto LABEL_134;
  }
LABEL_128:
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v55 = *(void *)(a1 + 152);
  *(_WORD *)uint64_t v4 = 426;
  unsigned int v56 = *(_DWORD *)(v55 + 56);
  v4[2] = v56;
  if (v56 > 0x7F) {
    uint64_t v57 = sub_188A9CC(v56, v4 + 2);
  }
  else {
    uint64_t v57 = v4 + 3;
  }
  uint64_t v4 = sub_15DCF30(v55, v57, a3);
  if ((v6 & 8) == 0)
  {
LABEL_122:
    if ((v6 & 0x100000) == 0) {
      goto LABEL_138;
    }
    goto LABEL_135;
  }
LABEL_134:
  uint64_t v4 = sub_117A0AC(a3, 22, (const void **)(*(void *)(a1 + 88) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x100000) == 0) {
    goto LABEL_138;
  }
LABEL_135:
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v58 = *(unsigned char *)(a1 + 180);
  *(_WORD *)uint64_t v4 = 440;
  v4[2] = v58;
  v4 += 3;
LABEL_138:
  uint64_t v59 = *(void *)(a1 + 8);
  if ((v59 & 1) == 0) {
    return v4;
  }
  unint64_t v61 = v59 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v61 + 31) < 0)
  {
    uint64_t v62 = *(void **)(v61 + 8);
    uint64_t v63 = *(void *)(v61 + 16);
  }
  else
  {
    uint64_t v62 = (void *)(v61 + 8);
    LODWORD(v63) = *(unsigned __int8 *)(v61 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v63)
  {
    uint64_t v64 = (int)v63;
    memcpy(v4, v62, (int)v63);
    v4 += v64;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v62, v63, v4);
}

uint64_t sub_12DBB14(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 24);
  if (v2)
  {
    int v3 = 0;
    uint64_t v4 = 0;
    do
    {
      int v5 = *(_DWORD *)(*(void *)(a1 + 32) + 4 * v3);
      if (v5 < 0) {
        uint64_t v6 = 10;
      }
      else {
        uint64_t v6 = (9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6;
      }
      v4 += v6;
      ++v3;
    }
    while (v2 != v3);
  }
  else
  {
    uint64_t v4 = 0;
  }
  uint64_t v7 = v4 + v2;
  uint64_t v8 = *(unsigned int *)(a1 + 48);
  uint64_t v9 = v7 + v8;
  if ((int)v8 >= 1)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a1 + 56) + 8);
    do
    {
      uint64_t v11 = *v10++;
      uint64_t v12 = *(unsigned __int8 *)(v11 + 23);
      uint64_t v13 = *(void *)(v11 + 8);
      if ((v12 & 0x80u) == 0) {
        uint64_t v13 = v12;
      }
      v9 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6);
      --v8;
    }
    while (v8);
  }
  int v14 = *(_DWORD *)(a1 + 16);
  if (!(_BYTE)v14) {
    goto LABEL_24;
  }
  if (v14)
  {
    unint64_t v25 = *(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v26 = *(unsigned __int8 *)(v25 + 23);
    uint64_t v27 = *(void *)(v25 + 8);
    if ((v26 & 0x80u) == 0) {
      uint64_t v27 = v26;
    }
    v9 += v27 + ((9 * (__clz(v27 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v14 & 2) == 0)
    {
LABEL_17:
      if ((v14 & 4) == 0) {
        goto LABEL_18;
      }
      goto LABEL_61;
    }
  }
  else if ((v14 & 2) == 0)
  {
    goto LABEL_17;
  }
  unint64_t v28 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v29 = *(unsigned __int8 *)(v28 + 23);
  uint64_t v30 = *(void *)(v28 + 8);
  if ((v29 & 0x80u) == 0) {
    uint64_t v30 = v29;
  }
  v9 += v30 + ((9 * (__clz(v30 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v14 & 4) == 0)
  {
LABEL_18:
    if ((v14 & 8) == 0) {
      goto LABEL_19;
    }
    goto LABEL_64;
  }
LABEL_61:
  unint64_t v31 = *(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v32 = *(unsigned __int8 *)(v31 + 23);
  uint64_t v33 = *(void *)(v31 + 8);
  if ((v32 & 0x80u) == 0) {
    uint64_t v33 = v32;
  }
  v9 += v33 + ((9 * (__clz(v33 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v14 & 8) == 0)
  {
LABEL_19:
    if ((v14 & 0x10) == 0) {
      goto LABEL_20;
    }
    goto LABEL_67;
  }
LABEL_64:
  unint64_t v34 = *(void *)(a1 + 88) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v35 = *(unsigned __int8 *)(v34 + 23);
  uint64_t v36 = *(void *)(v34 + 8);
  if ((v35 & 0x80u) == 0) {
    uint64_t v36 = v35;
  }
  v9 += v36 + ((9 * (__clz(v36 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v14 & 0x10) == 0)
  {
LABEL_20:
    if ((v14 & 0x20) == 0) {
      goto LABEL_21;
    }
LABEL_68:
    unint64_t v38 = sub_12EE3C4(*(void *)(a1 + 104));
    v9 += v38 + ((9 * (__clz(v38 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v14 & 0x40) == 0)
    {
LABEL_22:
      if ((v14 & 0x80) == 0) {
        goto LABEL_24;
      }
      goto LABEL_23;
    }
    goto LABEL_69;
  }
LABEL_67:
  unint64_t v37 = sub_12EE8C8(*(void *)(a1 + 96));
  v9 += v37 + ((9 * (__clz(v37 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v14 & 0x20) != 0) {
    goto LABEL_68;
  }
LABEL_21:
  if ((v14 & 0x40) == 0) {
    goto LABEL_22;
  }
LABEL_69:
  uint64_t v39 = sub_15B0D90(*(void *)(a1 + 112));
  v9 += v39 + ((9 * (__clz(v39 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v14 & 0x80) != 0)
  {
LABEL_23:
    uint64_t v15 = sub_15B0D90(*(void *)(a1 + 120));
    v9 += v15 + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_24:
  if ((v14 & 0xFF00) == 0) {
    goto LABEL_38;
  }
  if ((v14 & 0x100) != 0)
  {
    uint64_t v40 = sub_15B1D1C(*(void *)(a1 + 128));
    v9 += v40 + ((9 * (__clz(v40 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v14 & 0x200) == 0)
    {
LABEL_27:
      if ((v14 & 0x400) == 0) {
        goto LABEL_28;
      }
      goto LABEL_73;
    }
  }
  else if ((v14 & 0x200) == 0)
  {
    goto LABEL_27;
  }
  uint64_t v41 = sub_12F18AC(*(void *)(a1 + 136));
  v9 += v41 + ((9 * (__clz(v41 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v14 & 0x400) == 0)
  {
LABEL_28:
    if ((v14 & 0x800) == 0) {
      goto LABEL_29;
    }
    goto LABEL_74;
  }
LABEL_73:
  uint64_t v42 = sub_15C52D0(*(void *)(a1 + 144));
  v9 += v42 + ((9 * (__clz(v42 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v14 & 0x800) == 0)
  {
LABEL_29:
    if ((v14 & 0x1000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_75;
  }
LABEL_74:
  uint64_t v43 = sub_15DD134(*(void *)(a1 + 152));
  v9 += v43 + ((9 * (__clz(v43 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v14 & 0x1000) == 0)
  {
LABEL_30:
    if ((v14 & 0x2000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_79;
  }
LABEL_75:
  int v44 = *(_DWORD *)(a1 + 160);
  uint64_t v45 = ((9 * (__clz(v44 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if (v44 >= 0) {
    uint64_t v46 = v45;
  }
  else {
    uint64_t v46 = 11;
  }
  v9 += v46;
  if ((v14 & 0x2000) == 0)
  {
LABEL_31:
    if ((v14 & 0x4000) == 0) {
      goto LABEL_36;
    }
    goto LABEL_32;
  }
LABEL_79:
  int v47 = *(_DWORD *)(a1 + 164);
  uint64_t v48 = ((9 * (__clz(v47 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if (v47 >= 0) {
    uint64_t v49 = v48;
  }
  else {
    uint64_t v49 = 11;
  }
  v9 += v49;
  if ((v14 & 0x4000) != 0)
  {
LABEL_32:
    int v16 = *(_DWORD *)(a1 + 168);
    uint64_t v17 = ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if (v16 >= 0) {
      uint64_t v18 = v17;
    }
    else {
      uint64_t v18 = 11;
    }
    v9 += v18;
  }
LABEL_36:
  if ((v14 & 0x8000) != 0) {
    v9 += 2;
  }
LABEL_38:
  if ((v14 & 0x1F0000) != 0)
  {
    uint64_t v19 = v9 + 3;
    if ((v14 & 0x10000) == 0) {
      uint64_t v19 = v9;
    }
    if ((v14 & 0x20000) != 0) {
      v19 += 3;
    }
    if ((v14 & 0x40000) != 0) {
      v19 += 3;
    }
    if ((v14 & 0x80000) != 0)
    {
      int v20 = *(_DWORD *)(a1 + 176);
      uint64_t v21 = ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6) + 2;
      if (v20 >= 0) {
        uint64_t v22 = v21;
      }
      else {
        uint64_t v22 = 12;
      }
      v19 += v22;
    }
    if ((v14 & 0x100000) != 0) {
      uint64_t v9 = v19 + 3;
    }
    else {
      uint64_t v9 = v19;
    }
  }
  uint64_t v23 = *(void *)(a1 + 8);
  if (v23)
  {
    unint64_t v50 = v23 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v50 + 31) < 0) {
      uint64_t v51 = *(void *)(v50 + 16);
    }
    else {
      uint64_t v51 = *(unsigned __int8 *)(v50 + 31);
    }
    v9 += v51;
  }
  *(_DWORD *)(a1 + 20) = v9;
  return v9;
}

void sub_12DC014(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    int v5 = (_DWORD *)(a1 + 24);
    uint64_t v6 = *(int *)(a1 + 24);
    sub_188C80C((unsigned int *)(a1 + 24), v6 + v4);
    uint64_t v7 = *(void *)(a1 + 32);
    *v5 += *(_DWORD *)(a2 + 24);
    memcpy((void *)(v7 + 4 * v6), *(const void **)(a2 + 32), 4 * *(int *)(a2 + 24));
  }
  int v8 = *(_DWORD *)(a2 + 48);
  if (v8)
  {
    uint64_t v9 = (const std::string **)(*(void *)(a2 + 56) + 8);
    uint64_t v10 = (std::string **)sub_188CCE4(a1 + 40, *(_DWORD *)(a2 + 48));
    sub_188FB98(a1 + 40, v10, v9, v8, **(_DWORD **)(a1 + 56) - *(_DWORD *)(a1 + 48));
    int v11 = *(_DWORD *)(a1 + 48) + v8;
    *(_DWORD *)(a1 + 48) = v11;
    uint64_t v12 = *(int **)(a1 + 56);
    if (*v12 < v11) {
      int *v12 = v11;
    }
  }
  int v13 = *(_DWORD *)(a2 + 16);
  if ((_BYTE)v13)
  {
    if (v13)
    {
      int v14 = (long long *)(*(void *)(a2 + 64) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v15 = *(void *)(a1 + 8);
      int v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
      if (v15) {
        int v16 = (uint64_t *)*v16;
      }
      sub_1881DF4((std::string **)(a1 + 64), v14, v16);
      if ((v13 & 2) == 0)
      {
LABEL_9:
        if ((v13 & 4) == 0) {
          goto LABEL_10;
        }
        goto LABEL_20;
      }
    }
    else if ((v13 & 2) == 0)
    {
      goto LABEL_9;
    }
    uint64_t v17 = (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v18 = *(void *)(a1 + 8);
    uint64_t v19 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
    if (v18) {
      uint64_t v19 = (uint64_t *)*v19;
    }
    sub_1881DF4((std::string **)(a1 + 72), v17, v19);
    if ((v13 & 4) == 0)
    {
LABEL_10:
      if ((v13 & 8) == 0) {
        goto LABEL_11;
      }
      goto LABEL_23;
    }
LABEL_20:
    int v20 = (long long *)(*(void *)(a2 + 80) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 4u;
    uint64_t v21 = *(void *)(a1 + 8);
    uint64_t v22 = (uint64_t *)(v21 & 0xFFFFFFFFFFFFFFFCLL);
    if (v21) {
      uint64_t v22 = (uint64_t *)*v22;
    }
    sub_1881DF4((std::string **)(a1 + 80), v20, v22);
    if ((v13 & 8) == 0)
    {
LABEL_11:
      if ((v13 & 0x10) == 0) {
        goto LABEL_12;
      }
      goto LABEL_26;
    }
LABEL_23:
    uint64_t v23 = (long long *)(*(void *)(a2 + 88) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 8u;
    uint64_t v24 = *(void *)(a1 + 8);
    unint64_t v25 = (uint64_t *)(v24 & 0xFFFFFFFFFFFFFFFCLL);
    if (v24) {
      unint64_t v25 = (uint64_t *)*v25;
    }
    sub_1881DF4((std::string **)(a1 + 88), v23, v25);
    if ((v13 & 0x10) == 0)
    {
LABEL_12:
      if ((v13 & 0x20) == 0)
      {
LABEL_42:
        if ((v13 & 0x40) != 0)
        {
          *(_DWORD *)(a1 + 16) |= 0x40u;
          uint64_t v34 = *(void *)(a1 + 112);
          if (!v34)
          {
            uint64_t v35 = *(void *)(a1 + 8);
            uint64_t v36 = (void *)(v35 & 0xFFFFFFFFFFFFFFFCLL);
            if (v35) {
              uint64_t v36 = (void *)*v36;
            }
            uint64_t v34 = sub_15C1918((uint64_t)v36);
            *(void *)(a1 + 112) = v34;
          }
          if (*(void *)(a2 + 112)) {
            unint64_t v37 = *(uint64_t (****)())(a2 + 112);
          }
          else {
            unint64_t v37 = &off_253F1A0;
          }
          sub_15B0E24(v34, (uint64_t)v37);
        }
        if ((v13 & 0x80) != 0)
        {
          *(_DWORD *)(a1 + 16) |= 0x80u;
          uint64_t v38 = *(void *)(a1 + 120);
          if (!v38)
          {
            uint64_t v39 = *(void *)(a1 + 8);
            uint64_t v40 = (void *)(v39 & 0xFFFFFFFFFFFFFFFCLL);
            if (v39) {
              uint64_t v40 = (void *)*v40;
            }
            uint64_t v38 = sub_15C1918((uint64_t)v40);
            *(void *)(a1 + 120) = v38;
          }
          if (*(void *)(a2 + 120)) {
            uint64_t v41 = *(uint64_t (****)())(a2 + 120);
          }
          else {
            uint64_t v41 = &off_253F1A0;
          }
          sub_15B0E24(v38, (uint64_t)v41);
        }
        goto LABEL_60;
      }
LABEL_34:
      *(_DWORD *)(a1 + 16) |= 0x20u;
      uint64_t v30 = *(std::string **)(a1 + 104);
      if (!v30)
      {
        uint64_t v31 = *(void *)(a1 + 8);
        uint64_t v32 = (void *)(v31 & 0xFFFFFFFFFFFFFFFCLL);
        if (v31) {
          uint64_t v32 = (void *)*v32;
        }
        uint64_t v30 = (std::string *)sub_12F80F0((uint64_t)v32);
        *(void *)(a1 + 104) = v30;
      }
      if (*(void *)(a2 + 104)) {
        uint64_t v33 = *(uint64_t (****)())(a2 + 104);
      }
      else {
        uint64_t v33 = &off_2531DD8;
      }
      sub_12D45B4(v30, (uint64_t)v33);
      goto LABEL_42;
    }
LABEL_26:
    *(_DWORD *)(a1 + 16) |= 0x10u;
    uint64_t v26 = *(std::string **)(a1 + 96);
    if (!v26)
    {
      uint64_t v27 = *(void *)(a1 + 8);
      unint64_t v28 = (void *)(v27 & 0xFFFFFFFFFFFFFFFCLL);
      if (v27) {
        unint64_t v28 = (void *)*v28;
      }
      uint64_t v26 = (std::string *)sub_12F816C((uint64_t)v28);
      *(void *)(a1 + 96) = v26;
    }
    if (*(void *)(a2 + 96)) {
      uint64_t v29 = *(uint64_t (****)())(a2 + 96);
    }
    else {
      uint64_t v29 = &off_2531E00;
    }
    sub_12D45B4(v26, (uint64_t)v29);
    if ((v13 & 0x20) == 0) {
      goto LABEL_42;
    }
    goto LABEL_34;
  }
LABEL_60:
  if ((v13 & 0xFF00) == 0) {
    goto LABEL_71;
  }
  if ((v13 & 0x100) != 0)
  {
    *(_DWORD *)(a1 + 16) |= 0x100u;
    uint64_t v43 = *(void *)(a1 + 128);
    if (!v43)
    {
      uint64_t v44 = *(void *)(a1 + 8);
      uint64_t v45 = (void *)(v44 & 0xFFFFFFFFFFFFFFFCLL);
      if (v44) {
        uint64_t v45 = (void *)*v45;
      }
      uint64_t v43 = sub_15C19EC((uint64_t)v45);
      *(void *)(a1 + 128) = v43;
    }
    if (*(void *)(a2 + 128)) {
      uint64_t v46 = *(uint64_t (****)())(a2 + 128);
    }
    else {
      uint64_t v46 = &off_253F208;
    }
    sub_15B1E3C(v43, (uint64_t)v46);
    if ((v13 & 0x200) == 0)
    {
LABEL_63:
      if ((v13 & 0x400) == 0) {
        goto LABEL_64;
      }
      goto LABEL_99;
    }
  }
  else if ((v13 & 0x200) == 0)
  {
    goto LABEL_63;
  }
  *(_DWORD *)(a1 + 16) |= 0x200u;
  int v47 = *(void **)(a1 + 136);
  if (!v47)
  {
    uint64_t v48 = *(void *)(a1 + 8);
    uint64_t v49 = (void *)(v48 & 0xFFFFFFFFFFFFFFFCLL);
    if (v48) {
      uint64_t v49 = (void *)*v49;
    }
    int v47 = sub_12F849C((uint64_t)v49);
    *(void *)(a1 + 136) = v47;
  }
  if (*(void *)(a2 + 136)) {
    unint64_t v50 = *(uint64_t (****)())(a2 + 136);
  }
  else {
    unint64_t v50 = &off_2531F48;
  }
  sub_12DC53C((uint64_t)v47, (uint64_t)v50);
  if ((v13 & 0x400) == 0)
  {
LABEL_64:
    if ((v13 & 0x800) == 0) {
      goto LABEL_65;
    }
    goto LABEL_107;
  }
LABEL_99:
  *(_DWORD *)(a1 + 16) |= 0x400u;
  uint64_t v51 = *(std::string **)(a1 + 144);
  if (!v51)
  {
    uint64_t v52 = *(void *)(a1 + 8);
    unint64_t v53 = (void *)(v52 & 0xFFFFFFFFFFFFFFFCLL);
    if (v52) {
      unint64_t v53 = (void *)*v53;
    }
    uint64_t v51 = (std::string *)sub_15C6344((uint64_t)v53);
    *(void *)(a1 + 144) = v51;
  }
  if (*(void *)(a2 + 144)) {
    char v54 = *(uint64_t (****)())(a2 + 144);
  }
  else {
    char v54 = &off_253F8C0;
  }
  sub_121627C(v51, (uint64_t)v54);
  if ((v13 & 0x800) == 0)
  {
LABEL_65:
    if ((v13 & 0x1000) == 0) {
      goto LABEL_66;
    }
    goto LABEL_115;
  }
LABEL_107:
  *(_DWORD *)(a1 + 16) |= 0x800u;
  uint64_t v55 = *(std::string **)(a1 + 152);
  if (!v55)
  {
    uint64_t v56 = *(void *)(a1 + 8);
    uint64_t v57 = (void *)(v56 & 0xFFFFFFFFFFFFFFFCLL);
    if (v56) {
      uint64_t v57 = (void *)*v57;
    }
    uint64_t v55 = (std::string *)sub_15F9158((uint64_t)v57);
    *(void *)(a1 + 152) = v55;
  }
  if (*(void *)(a2 + 152)) {
    char v58 = *(uint64_t (****)())(a2 + 152);
  }
  else {
    char v58 = &off_25400A8;
  }
  sub_15DD21C(v55, (uint64_t)v58);
  if ((v13 & 0x1000) == 0)
  {
LABEL_66:
    if ((v13 & 0x2000) == 0) {
      goto LABEL_67;
    }
    goto LABEL_116;
  }
LABEL_115:
  *(_DWORD *)(a1 + 160) = *(_DWORD *)(a2 + 160);
  if ((v13 & 0x2000) == 0)
  {
LABEL_67:
    if ((v13 & 0x4000) == 0) {
      goto LABEL_68;
    }
LABEL_117:
    *(_DWORD *)(a1 + 168) = *(_DWORD *)(a2 + 168);
    if ((v13 & 0x8000) == 0) {
      goto LABEL_70;
    }
    goto LABEL_69;
  }
LABEL_116:
  *(_DWORD *)(a1 + 164) = *(_DWORD *)(a2 + 164);
  if ((v13 & 0x4000) != 0) {
    goto LABEL_117;
  }
LABEL_68:
  if ((v13 & 0x8000) != 0) {
LABEL_69:
  }
    *(unsigned char *)(a1 + 172) = *(unsigned char *)(a2 + 172);
LABEL_70:
  *(_DWORD *)(a1 + 16) |= v13;
LABEL_71:
  if ((v13 & 0x1F0000) == 0) {
    goto LABEL_79;
  }
  if ((v13 & 0x10000) != 0)
  {
    *(unsigned char *)(a1 + 173) = *(unsigned char *)(a2 + 173);
    if ((v13 & 0x20000) == 0)
    {
LABEL_74:
      if ((v13 & 0x40000) == 0) {
        goto LABEL_75;
      }
      goto LABEL_121;
    }
  }
  else if ((v13 & 0x20000) == 0)
  {
    goto LABEL_74;
  }
  *(unsigned char *)(a1 + 174) = *(unsigned char *)(a2 + 174);
  if ((v13 & 0x40000) == 0)
  {
LABEL_75:
    if ((v13 & 0x80000) == 0) {
      goto LABEL_76;
    }
LABEL_122:
    *(_DWORD *)(a1 + 176) = *(_DWORD *)(a2 + 176);
    if ((v13 & 0x100000) == 0) {
      goto LABEL_78;
    }
    goto LABEL_77;
  }
LABEL_121:
  *(unsigned char *)(a1 + 175) = *(unsigned char *)(a2 + 175);
  if ((v13 & 0x80000) != 0) {
    goto LABEL_122;
  }
LABEL_76:
  if ((v13 & 0x100000) != 0) {
LABEL_77:
  }
    *(unsigned char *)(a1 + 180) = *(unsigned char *)(a2 + 180);
LABEL_78:
  *(_DWORD *)(a1 + 16) |= v13;
LABEL_79:
  uint64_t v42 = *(void *)(a2 + 8);
  if (v42)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v42 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_12DC53C(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0x3F) == 0) {
    goto LABEL_32;
  }
  if (v4)
  {
    int v5 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v6 = (std::string **)(a1 + 24);
    uint64_t v7 = *(void *)(a1 + 8);
    int v8 = (uint64_t *)(v7 & 0xFFFFFFFFFFFFFFFCLL);
    if (v7) {
      int v8 = (uint64_t *)*v8;
    }
    sub_1881DF4(v6, v5, v8);
    if ((v4 & 2) == 0)
    {
LABEL_4:
      if ((v4 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_15;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_4;
  }
  uint64_t v9 = (long long *)(*(void *)(a2 + 32) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 16) |= 2u;
  uint64_t v10 = *(void *)(a1 + 8);
  int v11 = (uint64_t *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
  if (v10) {
    int v11 = (uint64_t *)*v11;
  }
  sub_1881DF4((std::string **)(a1 + 32), v9, v11);
  if ((v4 & 4) == 0)
  {
LABEL_5:
    if ((v4 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_18;
  }
LABEL_15:
  uint64_t v12 = (long long *)(*(void *)(a2 + 40) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 16) |= 4u;
  uint64_t v13 = *(void *)(a1 + 8);
  int v14 = (uint64_t *)(v13 & 0xFFFFFFFFFFFFFFFCLL);
  if (v13) {
    int v14 = (uint64_t *)*v14;
  }
  sub_1881DF4((std::string **)(a1 + 40), v12, v14);
  if ((v4 & 8) == 0)
  {
LABEL_6:
    if ((v4 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_21;
  }
LABEL_18:
  uint64_t v15 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 16) |= 8u;
  uint64_t v16 = *(void *)(a1 + 8);
  uint64_t v17 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
  if (v16) {
    uint64_t v17 = (uint64_t *)*v17;
  }
  sub_1881DF4((std::string **)(a1 + 48), v15, v17);
  if ((v4 & 0x10) == 0)
  {
LABEL_7:
    if ((v4 & 0x20) == 0) {
      goto LABEL_32;
    }
    goto LABEL_24;
  }
LABEL_21:
  uint64_t v18 = (long long *)(*(void *)(a2 + 56) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 16) |= 0x10u;
  uint64_t v19 = *(void *)(a1 + 8);
  int v20 = (uint64_t *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
  if (v19) {
    int v20 = (uint64_t *)*v20;
  }
  sub_1881DF4((std::string **)(a1 + 56), v18, v20);
  if ((v4 & 0x20) != 0)
  {
LABEL_24:
    *(_DWORD *)(a1 + 16) |= 0x20u;
    uint64_t v21 = *(void *)(a1 + 64);
    if (!v21)
    {
      uint64_t v22 = *(void *)(a1 + 8);
      uint64_t v23 = (void *)(v22 & 0xFFFFFFFFFFFFFFFCLL);
      if (v22) {
        uint64_t v23 = (void *)*v23;
      }
      uint64_t v21 = sub_15C1CB4((uint64_t)v23);
      *(void *)(a1 + 64) = v21;
    }
    if (*(void *)(a2 + 64)) {
      uint64_t v24 = *(uint64_t (****)())(a2 + 64);
    }
    else {
      uint64_t v24 = &off_253F2E8;
    }
    sub_15B04F0(v21, (uint64_t)v24);
  }
LABEL_32:
  uint64_t v25 = *(void *)(a2 + 8);
  if (v25)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v25 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_12DC710(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0x40) != 0)
  {
    uint64_t result = sub_15B0F18(*(void *)(a1 + 112));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 0x80) != 0)
  {
    uint64_t result = sub_15B0F18(*(void *)(a1 + 120));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 0x100) != 0)
  {
    uint64_t result = sub_15B1FC0(*(void *)(a1 + 128));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 0x200) == 0) {
    return 1;
  }
  uint64_t v4 = *(void *)(a1 + 136);
  if ((*(unsigned char *)(v4 + 16) & 0x20) == 0) {
    return 1;
  }
  uint64_t result = sub_15B06D8(*(void *)(v4 + 64));
  if (result) {
    return 1;
  }
  return result;
}

uint64_t sub_12DC790(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 0x20) == 0) {
    return 1;
  }
  uint64_t result = sub_15B06D8(*(void *)(a1 + 64));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_12DC7BC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap.fields.RapCommonContext");
}

uint64_t sub_12DC7CC(uint64_t a1)
{
  int v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_11;
    }
  }
  else if (v4)
  {
    goto LABEL_11;
  }
  int v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 56) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 56));
  }
  if (*(uint64_t **)(a1 + 64) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 64));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_11:
  sub_1301304((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12DC8A4(uint64_t a1)
{
  sub_12DC7CC(a1);

  operator delete();
}

uint64_t sub_12DC8DC(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    int v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_12DA0CC(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  int v5 = *(_DWORD *)(v1 + 16);
  if ((v5 & 7) != 0)
  {
    if ((v5 & 1) == 0)
    {
      if ((v5 & 2) == 0) {
        goto LABEL_8;
      }
LABEL_14:
      unint64_t v7 = *(void *)(v1 + 56) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v7 + 23) < 0)
      {
        **(unsigned char **)unint64_t v7 = 0;
        *(void *)(v7 + 8) = 0;
        if ((v5 & 4) == 0) {
          goto LABEL_21;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v7 = 0;
        *(unsigned char *)(v7 + 23) = 0;
        if ((v5 & 4) == 0) {
          goto LABEL_21;
        }
      }
      goto LABEL_18;
    }
    unint64_t v6 = *(void *)(v1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v6 + 23) < 0)
    {
      **(unsigned char **)unint64_t v6 = 0;
      *(void *)(v6 + 8) = 0;
      if ((v5 & 2) != 0) {
        goto LABEL_14;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v6 = 0;
      *(unsigned char *)(v6 + 23) = 0;
      if ((v5 & 2) != 0) {
        goto LABEL_14;
      }
    }
LABEL_8:
    if ((v5 & 4) == 0) {
      goto LABEL_21;
    }
LABEL_18:
    unint64_t v8 = *(void *)(v1 + 64) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v8 + 23) < 0)
    {
      **(unsigned char **)unint64_t v8 = 0;
      *(void *)(v8 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v8 = 0;
      *(unsigned char *)(v8 + 23) = 0;
    }
  }
LABEL_21:
  char v10 = *(unsigned char *)(v1 + 8);
  uint64_t v9 = v1 + 8;
  *(_DWORD *)(v9 + 8) = 0;
  if (v10)
  {
    return sub_188B4AC((uint64_t *)v9);
  }
  return result;
}

uint64_t sub_12DCA00(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v26 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v26, a3[11].i32[1])) {
    return *(void *)v26;
  }
  unint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    unint64_t v7 = (char *)(*(void *)v26 + 1);
    unsigned int v8 = **(unsigned char **)v26;
    if ((char)**(unsigned char **)v26 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        unint64_t v7 = (char *)sub_188C180(*(uint64_t *)v26, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        unint64_t v7 = (char *)(*(void *)v26 + 2);
      }
    }
    *(void *)uint64_t v26 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 10) {
          goto LABEL_32;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v11 = *(void *)(a1 + 8);
        uint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
        if (v11) {
          uint64_t v12 = (uint64_t *)*v12;
        }
        uint64_t v13 = (void *)(a1 + 48);
        goto LABEL_31;
      case 2u:
        if (v8 != 18) {
          goto LABEL_32;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v14 = *(void *)(a1 + 8);
        uint64_t v12 = (uint64_t *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
        if (v14) {
          uint64_t v12 = (uint64_t *)*v12;
        }
        uint64_t v13 = (void *)(a1 + 56);
        goto LABEL_31;
      case 3u:
        if (v8 != 26) {
          goto LABEL_32;
        }
        uint64_t v15 = v7 - 1;
        while (1)
        {
          uint64_t v16 = (unsigned __int8 *)(v15 + 1);
          *(void *)uint64_t v26 = v15 + 1;
          uint64_t v17 = *(_DWORD **)(a1 + 40);
          if (v17 && (uint64_t v18 = *(int *)(a1 + 32), (int)v18 < *v17))
          {
            *(_DWORD *)(a1 + 32) = v18 + 1;
            uint64_t v19 = *(void *)&v17[2 * v18 + 2];
          }
          else
          {
            int v20 = sub_12F849C(*(void *)(a1 + 24));
            uint64_t v19 = sub_188CDC8(a1 + 24, (uint64_t)v20);
            uint64_t v16 = *(unsigned __int8 **)v26;
          }
          uint64_t v15 = (char *)sub_12D6AD4(a3, v19, v16);
          *(void *)uint64_t v26 = v15;
          if (!v15) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v15 || *v15 != 26) {
            goto LABEL_40;
          }
        }
      case 4u:
        if (v8 != 34) {
          goto LABEL_32;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v21 = *(void *)(a1 + 8);
        uint64_t v12 = (uint64_t *)(v21 & 0xFFFFFFFFFFFFFFFCLL);
        if (v21) {
          uint64_t v12 = (uint64_t *)*v12;
        }
        uint64_t v13 = (void *)(a1 + 64);
LABEL_31:
        uint64_t v22 = (std::string *)sub_1880F84(v13, v12);
        uint64_t v23 = (void *)sub_188C244(v22, *(char **)v26, (uint64_t)a3);
        goto LABEL_39;
      default:
LABEL_32:
        if (v8) {
          BOOL v24 = (v8 & 7) == 4;
        }
        else {
          BOOL v24 = 1;
        }
        if (!v24)
        {
          if (*v6)
          {
            uint64_t v25 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v25 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unint64_t v7 = *(char **)v26;
          }
          uint64_t v23 = sub_1885AC0(v8, v25, v7, a3);
LABEL_39:
          *(void *)uint64_t v26 = v23;
          if (!v23) {
            return 0;
          }
LABEL_40:
          if (sub_11947B8((uint64_t)a3, (char **)v26, a3[11].i32[1])) {
            return *(void *)v26;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return *(void *)v26;
    }
  }
}

char *sub_12DCCA8(uint64_t a1, char *__dst, void *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 2) != 0) {
    uint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  int v7 = *(_DWORD *)(a1 + 32);
  if (v7)
  {
    for (int i = 0; i != v7; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      char *v4 = 26;
      unsigned int v10 = *(_DWORD *)(v9 + 20);
      v4[1] = v10;
      if (v10 > 0x7F) {
        uint64_t v11 = sub_188A9CC(v10, v4 + 1);
      }
      else {
        uint64_t v11 = v4 + 2;
      }
      uint64_t v4 = sub_12F16E4(v9, v11, a3);
    }
  }
  if ((v6 & 4) != 0) {
    uint64_t v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v12 = *(void *)(a1 + 8);
  if ((v12 & 1) == 0) {
    return v4;
  }
  unint64_t v14 = v12 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v14 + 31) < 0)
  {
    uint64_t v15 = *(void **)(v14 + 8);
    uint64_t v16 = *(void *)(v14 + 16);
  }
  else
  {
    uint64_t v15 = (void *)(v14 + 8);
    LODWORD(v16) = *(unsigned __int8 *)(v14 + 31);
  }
  if (*a3 - (void)v4 >= (int)v16)
  {
    uint64_t v17 = (int)v16;
    memcpy(v4, v15, (int)v16);
    v4 += v17;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v15, v16, v4);
}

uint64_t sub_12DCE50(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_12F18AC(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 7) == 0) {
    goto LABEL_16;
  }
  if (v8)
  {
    unint64_t v14 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v15 = *(unsigned __int8 *)(v14 + 23);
    uint64_t v16 = *(void *)(v14 + 8);
    if ((v15 & 0x80u) == 0) {
      uint64_t v16 = v15;
    }
    v2 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v8 & 2) == 0)
    {
LABEL_12:
      if ((v8 & 4) == 0) {
        goto LABEL_16;
      }
      goto LABEL_13;
    }
  }
  else if ((v8 & 2) == 0)
  {
    goto LABEL_12;
  }
  unint64_t v17 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v18 = *(unsigned __int8 *)(v17 + 23);
  uint64_t v19 = *(void *)(v17 + 8);
  if ((v18 & 0x80u) == 0) {
    uint64_t v19 = v18;
  }
  v2 += v19 + ((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 4) != 0)
  {
LABEL_13:
    unint64_t v9 = *(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v10 = *(unsigned __int8 *)(v9 + 23);
    uint64_t v11 = *(void *)(v9 + 8);
    if ((v10 & 0x80u) == 0) {
      uint64_t v11 = v10;
    }
    v2 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_16:
  uint64_t v12 = *(void *)(a1 + 8);
  if (v12)
  {
    unint64_t v20 = v12 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v20 + 31) < 0) {
      uint64_t v21 = *(void *)(v20 + 16);
    }
    else {
      uint64_t v21 = *(unsigned __int8 *)(v20 + 31);
    }
    v2 += v21;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

void sub_12DCFE4(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_1301490((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    int v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *int v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 7) != 0)
  {
    if (v9)
    {
      uint64_t v10 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v11 = *(void *)(a1 + 8);
      uint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        uint64_t v12 = (uint64_t *)*v12;
      }
      sub_1881DF4((std::string **)(a1 + 48), v10, v12);
      if ((v9 & 2) == 0)
      {
LABEL_7:
        if ((v9 & 4) == 0) {
          goto LABEL_18;
        }
        goto LABEL_15;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_7;
    }
    uint64_t v13 = (long long *)(*(void *)(a2 + 56) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v14 = *(void *)(a1 + 8);
    uint64_t v15 = (uint64_t *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
    if (v14) {
      uint64_t v15 = (uint64_t *)*v15;
    }
    sub_1881DF4((std::string **)(a1 + 56), v13, v15);
    if ((v9 & 4) != 0)
    {
LABEL_15:
      uint64_t v16 = (long long *)(*(void *)(a2 + 64) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 4u;
      uint64_t v17 = *(void *)(a1 + 8);
      uint64_t v18 = (uint64_t *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
      if (v17) {
        uint64_t v18 = (uint64_t *)*v18;
      }
      sub_1881DF4((std::string **)(a1 + 64), v16, v18);
    }
  }
LABEL_18:
  uint64_t v19 = *(void *)(a2 + 8);
  if (v19)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v19 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_12DD168(uint64_t a1)
{
  return sub_12D6F20(a1 + 24);
}

void *sub_12DD170@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap.fields.RapCommonCorrections");
}

uint64_t sub_12DD180(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_9;
    }
  }
  else if (v4)
  {
    goto LABEL_9;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_9:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12DD238(uint64_t a1)
{
  sub_12DD180(a1);

  operator delete();
}

uint64_t sub_12DD270(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0) {
    goto LABEL_11;
  }
  if ((v1 & 1) == 0)
  {
LABEL_5:
    if ((v1 & 2) != 0) {
      goto LABEL_6;
    }
    goto LABEL_11;
  }
  unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v2 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v2 = 0;
    *(unsigned char *)(v2 + 23) = 0;
    goto LABEL_5;
  }
  **(unsigned char **)unint64_t v2 = 0;
  *(void *)(v2 + 8) = 0;
  if ((v1 & 2) != 0)
  {
LABEL_6:
    unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)unint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
LABEL_11:
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 32) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v5) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_12DD2F0(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v27 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v27, a3[11].i32[1])) {
    return *(void *)v27;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    int v7 = (char *)(*(void *)v27 + 1);
    unsigned int v8 = **(unsigned char **)v27;
    if ((char)**(unsigned char **)v27 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        int v7 = (char *)sub_188C180(*(uint64_t *)v27, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        int v7 = (char *)(*(void *)v27 + 2);
      }
    }
    *(void *)uint64_t v27 = v7;
    unsigned int v11 = v8 >> 3;
    if (v8 >> 3 == 3)
    {
      if (v8 != 26) {
        goto LABEL_14;
      }
      *(_DWORD *)(a1 + 16) |= 2u;
      uint64_t v16 = *(void *)(a1 + 8);
      uint64_t v17 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
      if (v16) {
        uint64_t v17 = (uint64_t *)*v17;
      }
      uint64_t v18 = (void *)(a1 + 32);
      goto LABEL_29;
    }
    if (v11 == 2)
    {
      if (v8 != 18) {
        goto LABEL_14;
      }
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v19 = *(void *)(a1 + 8);
      uint64_t v17 = (uint64_t *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
      if (v19) {
        uint64_t v17 = (uint64_t *)*v17;
      }
      uint64_t v18 = (void *)(a1 + 24);
LABEL_29:
      unint64_t v20 = (std::string *)sub_1880F84(v18, v17);
      uint64_t v15 = (void *)sub_188C244(v20, *(char **)v27, (uint64_t)a3);
      goto LABEL_30;
    }
    if (v11 == 1 && v8 == 8)
    {
      uint64_t v21 = v7 + 1;
      unint64_t v22 = *v7;
      if ((*v7 & 0x80000000) == 0) {
        goto LABEL_35;
      }
      int v23 = *v21;
      int v24 = v22 + (v23 << 7);
      unint64_t v22 = (v24 - 128);
      if (v23 < 0)
      {
        *(void *)uint64_t v27 = sub_188C138((uint64_t)v7, (v24 - 128));
        if (!*(void *)v27) {
          goto LABEL_49;
        }
        unint64_t v22 = v25;
      }
      else
      {
        uint64_t v21 = v7 + 2;
LABEL_35:
        *(void *)uint64_t v27 = v21;
      }
      if (sub_160EB40(v22))
      {
        *(_DWORD *)(a1 + 16) |= 4u;
        *(_DWORD *)(a1 + 40) = v22;
      }
      else
      {
        if (*v6) {
          uint64_t v26 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          uint64_t v26 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        sub_188C020(1, v22, v26);
      }
      goto LABEL_38;
    }
LABEL_14:
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      uint64_t v14 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v7 = *(char **)v27;
    }
    uint64_t v15 = sub_1885AC0(v8, v14, v7, a3);
LABEL_30:
    *(void *)uint64_t v27 = v15;
    if (!v15) {
      goto LABEL_49;
    }
LABEL_38:
    if (sub_11947B8((uint64_t)a3, (char **)v27, a3[11].i32[1])) {
      return *(void *)v27;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v27;
  }
LABEL_49:
  *(void *)uint64_t v27 = 0;
  return *(void *)v27;
}

unsigned char *sub_12DD544(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  int v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 4) != 0)
  {
    if (*a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 40);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6) {
    int v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  if ((v6 & 2) != 0) {
    int v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v10 = *(void *)(a1 + 8);
  if ((v10 & 1) == 0) {
    return v4;
  }
  unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v12 + 31) < 0)
  {
    uint64_t v13 = *(void **)(v12 + 8);
    uint64_t v14 = *(void *)(v12 + 16);
  }
  else
  {
    uint64_t v13 = (void *)(v12 + 8);
    LODWORD(v14) = *(unsigned __int8 *)(v12 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v14)
  {
    uint64_t v15 = (int)v14;
    memcpy(v4, v13, (int)v14);
    v4 += v15;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v13, v14, v4);
}

uint64_t sub_12DD6AC(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 7) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_17;
  }
  if (v1)
  {
    unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
    uint64_t v5 = *(void *)(v3 + 8);
    if ((v4 & 0x80u) == 0) {
      uint64_t v5 = v4;
    }
    uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  uint64_t v2 = 0;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    unint64_t v6 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v1 & 4) != 0)
  {
    int v9 = *(_DWORD *)(a1 + 40);
    if (v9 < 0) {
      uint64_t v10 = 11;
    }
    else {
      uint64_t v10 = ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v10;
  }
LABEL_17:
  uint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v13 + 31) < 0) {
      uint64_t v14 = *(void *)(v13 + 16);
    }
    else {
      uint64_t v14 = *(unsigned __int8 *)(v13 + 31);
    }
    v2 += v14;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_12DD7BC()
{
  return 1;
}

void *sub_12DD7C4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap.fields.TranslatedFormTextInput");
}

uint64_t sub_12DD7D4(uint64_t a1)
{
  unint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_14;
    }
  }
  else if (v4)
  {
    goto LABEL_14;
  }
  uint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_25318C0)
  {
    if (*(void *)(a1 + 56))
    {
      sub_161BCA8();
      operator delete();
    }
    if (*(void *)(a1 + 64))
    {
      sub_15B0994();
      operator delete();
    }
    unint64_t v6 = *(void **)(a1 + 72);
    if (v6)
    {
      sub_12EE48C(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_14:
  sub_13015A8((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12DD8EC(uint64_t a1)
{
  sub_12DD7D4(a1);

  operator delete();
}

uint64_t sub_12DD924(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    unint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_12DD270(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  int v5 = *(_DWORD *)(v1 + 16);
  if ((v5 & 0xF) == 0) {
    goto LABEL_11;
  }
  if ((v5 & 1) == 0)
  {
    if ((v5 & 2) == 0) {
      goto LABEL_8;
    }
LABEL_19:
    uint64_t result = sub_15D72A4(*(void *)(v1 + 56));
    if ((v5 & 4) == 0)
    {
LABEL_9:
      if ((v5 & 8) == 0) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
    goto LABEL_20;
  }
  unint64_t v8 = *(void *)(v1 + 48) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v8 + 23) < 0)
  {
    **(unsigned char **)unint64_t v8 = 0;
    *(void *)(v8 + 8) = 0;
    if ((v5 & 2) != 0) {
      goto LABEL_19;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v8 = 0;
    *(unsigned char *)(v8 + 23) = 0;
    if ((v5 & 2) != 0) {
      goto LABEL_19;
    }
  }
LABEL_8:
  if ((v5 & 4) == 0) {
    goto LABEL_9;
  }
LABEL_20:
  uint64_t result = (uint64_t)sub_15B09D0(*(void *)(v1 + 64));
  if ((v5 & 8) != 0) {
LABEL_10:
  }
    uint64_t result = sub_12D3A88(*(void *)(v1 + 72));
LABEL_11:
  char v7 = *(unsigned char *)(v1 + 8);
  uint64_t v6 = v1 + 8;
  *(_DWORD *)(v6 + 8) = 0;
  if (v7)
  {
    return sub_188B4AC((uint64_t *)v6);
  }
  return result;
}

uint64_t sub_12DDA14(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v29 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v29, a3[11].i32[1])) {
    return *(void *)v29;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    char v7 = (unsigned __int8 *)(*(void *)v29 + 1);
    unsigned int v8 = **(unsigned char **)v29;
    if ((char)**(unsigned char **)v29 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if ((char)*v7 < 0)
      {
        char v7 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v29, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        char v7 = (unsigned __int8 *)(*(void *)v29 + 2);
      }
    }
    *(void *)uint64_t v29 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 10) {
          goto LABEL_41;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v11 = *(void **)(a1 + 56);
        if (!v11)
        {
          unint64_t v12 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            unint64_t v12 = (void *)*v12;
          }
          uint64_t v11 = sub_161D340((uint64_t)v12);
          *(void *)(a1 + 56) = v11;
          char v7 = *(unsigned __int8 **)v29;
        }
        uint64_t v13 = sub_12DDD38(a3, (uint64_t)v11, v7);
        goto LABEL_48;
      case 2u:
        if (v8 != 18) {
          goto LABEL_41;
        }
        uint64_t v14 = v7 - 1;
        while (1)
        {
          uint64_t v15 = v14 + 1;
          *(void *)uint64_t v29 = v14 + 1;
          uint64_t v16 = *(_DWORD **)(a1 + 40);
          if (v16 && (uint64_t v17 = *(int *)(a1 + 32), (int)v17 < *v16))
          {
            *(_DWORD *)(a1 + 32) = v17 + 1;
            uint64_t v18 = *(void *)&v16[2 * v17 + 2];
          }
          else
          {
            uint64_t v19 = sub_12EBF4C(*(void *)(a1 + 24));
            uint64_t v18 = sub_188CDC8(a1 + 24, v19);
            uint64_t v15 = *(unsigned __int8 **)v29;
          }
          uint64_t v14 = (unsigned __int8 *)sub_12DDDC8(a3, v18, v15);
          *(void *)uint64_t v29 = v14;
          if (!v14) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v14 || *v14 != 18) {
            goto LABEL_49;
          }
        }
      case 3u:
        if (v8 != 26) {
          goto LABEL_41;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v20 = *(void *)(a1 + 64);
        if (!v20)
        {
          uint64_t v21 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v21 = (void *)*v21;
          }
          uint64_t v20 = sub_15C1918((uint64_t)v21);
          *(void *)(a1 + 64) = v20;
          char v7 = *(unsigned __int8 **)v29;
        }
        uint64_t v13 = (uint64_t)sub_1198F14(a3, v20, v7);
        goto LABEL_48;
      case 4u:
        if (v8 != 34) {
          goto LABEL_41;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v22 = *(void *)(a1 + 8);
        int v23 = (uint64_t *)(v22 & 0xFFFFFFFFFFFFFFFCLL);
        if (v22) {
          int v23 = (uint64_t *)*v23;
        }
        int v24 = (std::string *)sub_1880F84((void *)(a1 + 48), v23);
        uint64_t v13 = (uint64_t)sub_188C244(v24, *(char **)v29, (uint64_t)a3);
        goto LABEL_48;
      case 5u:
        if (v8 != 42) {
          goto LABEL_41;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v25 = *(void *)(a1 + 72);
        if (!v25)
        {
          uint64_t v26 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v26 = (void *)*v26;
          }
          uint64_t v25 = sub_12F816C((uint64_t)v26);
          *(void *)(a1 + 72) = v25;
          char v7 = *(unsigned __int8 **)v29;
        }
        uint64_t v13 = (uint64_t)sub_12D3F70(a3, v25, v7);
        goto LABEL_48;
      default:
LABEL_41:
        if (v8) {
          BOOL v27 = (v8 & 7) == 4;
        }
        else {
          BOOL v27 = 1;
        }
        if (!v27)
        {
          if (*v6)
          {
            unint64_t v28 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            unint64_t v28 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            char v7 = *(unsigned __int8 **)v29;
          }
          uint64_t v13 = (uint64_t)sub_1885AC0(v8, v28, (char *)v7, a3);
LABEL_48:
          *(void *)uint64_t v29 = v13;
          if (!v13) {
            return 0;
          }
LABEL_49:
          if (sub_11947B8((uint64_t)a3, (char **)v29, a3[11].i32[1])) {
            return *(void *)v29;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return *(void *)v29;
    }
  }
}

uint64_t sub_12DDD38(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_161BCE4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_12DDDC8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12DD2F0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_12DDE58(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 56);
    char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    uint64_t v4 = sub_161C104(v7, v9, a3);
  }
  int v10 = *(_DWORD *)(a1 + 32);
  if (v10)
  {
    for (int i = 0; i != v10; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v12 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      char *v4 = 18;
      unsigned int v13 = *(_DWORD *)(v12 + 20);
      v4[1] = v13;
      if (v13 > 0x7F) {
        uint64_t v14 = sub_188A9CC(v13, v4 + 1);
      }
      else {
        uint64_t v14 = v4 + 2;
      }
      uint64_t v4 = sub_12DD544(v12, (unint64_t)v14, a3);
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v15 = *(void *)(a1 + 64);
    char *v4 = 26;
    unsigned int v16 = *(_DWORD *)(v15 + 44);
    v4[1] = v16;
    if (v16 > 0x7F) {
      uint64_t v17 = sub_188A9CC(v16, v4 + 1);
    }
    else {
      uint64_t v17 = v4 + 2;
    }
    uint64_t v4 = sub_15B0C0C(v15, v17, a3);
    if ((v6 & 1) == 0)
    {
LABEL_18:
      if ((v6 & 8) == 0) {
        goto LABEL_33;
      }
      goto LABEL_27;
    }
  }
  else if ((v6 & 1) == 0)
  {
    goto LABEL_18;
  }
  uint64_t v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 8) == 0) {
    goto LABEL_33;
  }
LABEL_27:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v18 = *(void *)(a1 + 72);
  char *v4 = 42;
  unsigned int v19 = *(_DWORD *)(v18 + 20);
  v4[1] = v19;
  if (v19 > 0x7F) {
    uint64_t v20 = sub_188A9CC(v19, v4 + 1);
  }
  else {
    uint64_t v20 = v4 + 2;
  }
  uint64_t v4 = sub_12EE724(v18, (unint64_t)v20, a3);
LABEL_33:
  uint64_t v21 = *(void *)(a1 + 8);
  if ((v21 & 1) == 0) {
    return v4;
  }
  unint64_t v23 = v21 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v23 + 31) < 0)
  {
    int v24 = *(void **)(v23 + 8);
    uint64_t v25 = *(void *)(v23 + 16);
  }
  else
  {
    int v24 = (void *)(v23 + 8);
    LODWORD(v25) = *(unsigned __int8 *)(v23 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v25)
  {
    uint64_t v26 = (int)v25;
    memcpy(v4, v24, (int)v25);
    v4 += v26;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v24, v25, v4);
}

uint64_t sub_12DE0F8(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_12DD6AC(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 0xF) == 0) {
    goto LABEL_15;
  }
  if ((v8 & 1) == 0)
  {
    if ((v8 & 2) == 0) {
      goto LABEL_12;
    }
LABEL_20:
    uint64_t v15 = sub_161C354(*(void *)(a1 + 56));
    v2 += v15 + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v8 & 4) == 0)
    {
LABEL_13:
      if ((v8 & 8) == 0) {
        goto LABEL_15;
      }
      goto LABEL_14;
    }
    goto LABEL_21;
  }
  unint64_t v12 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v13 = *(unsigned __int8 *)(v12 + 23);
  uint64_t v14 = *(void *)(v12 + 8);
  if ((v13 & 0x80u) == 0) {
    uint64_t v14 = v13;
  }
  v2 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 2) != 0) {
    goto LABEL_20;
  }
LABEL_12:
  if ((v8 & 4) == 0) {
    goto LABEL_13;
  }
LABEL_21:
  uint64_t v16 = sub_15B0D90(*(void *)(a1 + 64));
  v2 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 8) != 0)
  {
LABEL_14:
    unint64_t v9 = sub_12EE8C8(*(void *)(a1 + 72));
    v2 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_15:
  uint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    unint64_t v17 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v17 + 31) < 0) {
      uint64_t v18 = *(void *)(v17 + 16);
    }
    else {
      uint64_t v18 = *(unsigned __int8 *)(v17 + 31);
    }
    v2 += v18;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

void sub_12DE298(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_1301AA8((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    int v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *int v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 0xF) == 0) {
    goto LABEL_37;
  }
  if ((v9 & 1) == 0)
  {
    if ((v9 & 2) == 0) {
      goto LABEL_7;
    }
LABEL_13:
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v13 = *(void **)(a1 + 56);
    if (!v13)
    {
      uint64_t v14 = *(void *)(a1 + 8);
      uint64_t v15 = (void *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
      if (v14) {
        uint64_t v15 = (void *)*v15;
      }
      uint64_t v13 = sub_161D340((uint64_t)v15);
      *(void *)(a1 + 56) = v13;
    }
    if (*(void *)(a2 + 56)) {
      uint64_t v16 = *(uint64_t (****)())(a2 + 56);
    }
    else {
      uint64_t v16 = &off_2541768;
    }
    sub_15D8E8C((uint64_t)v13, (uint64_t)v16);
    if ((v9 & 4) == 0)
    {
LABEL_8:
      if ((v9 & 8) == 0) {
        goto LABEL_37;
      }
      goto LABEL_29;
    }
    goto LABEL_21;
  }
  uint64_t v10 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 16) |= 1u;
  uint64_t v11 = *(void *)(a1 + 8);
  unint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
  if (v11) {
    unint64_t v12 = (uint64_t *)*v12;
  }
  sub_1881DF4((std::string **)(a1 + 48), v10, v12);
  if ((v9 & 2) != 0) {
    goto LABEL_13;
  }
LABEL_7:
  if ((v9 & 4) == 0) {
    goto LABEL_8;
  }
LABEL_21:
  *(_DWORD *)(a1 + 16) |= 4u;
  uint64_t v17 = *(void *)(a1 + 64);
  if (!v17)
  {
    uint64_t v18 = *(void *)(a1 + 8);
    unsigned int v19 = (void *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
    if (v18) {
      unsigned int v19 = (void *)*v19;
    }
    uint64_t v17 = sub_15C1918((uint64_t)v19);
    *(void *)(a1 + 64) = v17;
  }
  if (*(void *)(a2 + 64)) {
    uint64_t v20 = *(uint64_t (****)())(a2 + 64);
  }
  else {
    uint64_t v20 = &off_253F1A0;
  }
  sub_15B0E24(v17, (uint64_t)v20);
  if ((v9 & 8) != 0)
  {
LABEL_29:
    *(_DWORD *)(a1 + 16) |= 8u;
    uint64_t v21 = *(std::string **)(a1 + 72);
    if (!v21)
    {
      uint64_t v22 = *(void *)(a1 + 8);
      unint64_t v23 = (void *)(v22 & 0xFFFFFFFFFFFFFFFCLL);
      if (v22) {
        unint64_t v23 = (void *)*v23;
      }
      uint64_t v21 = (std::string *)sub_12F816C((uint64_t)v23);
      *(void *)(a1 + 72) = v21;
    }
    if (*(void *)(a2 + 72)) {
      int v24 = *(uint64_t (****)())(a2 + 72);
    }
    else {
      int v24 = &off_2531E00;
    }
    sub_12D45B4(v21, (uint64_t)v24);
  }
LABEL_37:
  uint64_t v25 = *(void *)(a2 + 8);
  if (v25)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v25 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_12DE49C(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 2) != 0)
  {
    uint64_t result = sub_15D9218(*(void *)(a1 + 56));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 4) == 0) {
    return 1;
  }
  uint64_t result = sub_15B0F18(*(void *)(a1 + 64));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_12DE4E8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap.fields.RapServerDrivenCorrections");
}

uint64_t sub_12DE4F8(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 3) != 0)
  {
    *(_DWORD *)(a1 + 32) = 0;
    *(void *)(a1 + 24) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_12DE520(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12EEA3C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_12DE5B0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_15E7AF4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_12DE640(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12DDA14(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_12DE6D0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16E99C0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_12DE760(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_15C3610(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_12DE7F0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_15E874C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_12DE880(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_15C54E4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

void *sub_12DE910(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_12DE9A8((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  sub_1301628(a1 + 6);
  sub_1889DE8(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void ***sub_12DE9A8(uint64_t a1)
{
  uint64_t v3 = *(uint64_t **)(a1 + 72);
  uint64_t v2 = (void ***)(a1 + 72);
  if (v3 != &qword_2550250) {
    sub_1881C6C(v2);
  }
  if (*(uint64_t **)(a1 + 80) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 80));
  }
  if (*(uint64_t **)(a1 + 88) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 88));
  }
  uint64_t result = (void ***)(a1 + 96);
  if (*(uint64_t **)(a1 + 96) != &qword_2550250) {
    sub_1881C6C(result);
  }
  if ((uint64_t (***)())a1 != &off_2531910)
  {
    uint64_t v5 = *(void **)(a1 + 104);
    if (v5)
    {
      sub_12EE990(v5);
      operator delete();
    }
    if (*(void *)(a1 + 112))
    {
      sub_15B0994();
      operator delete();
    }
    uint64_t result = *(void ****)(a1 + 120);
    if (result)
    {
      sub_15B6D48();
      operator delete();
    }
  }
  return result;
}

void sub_12DEAA8(void *a1)
{
  sub_12DE910(a1);

  operator delete();
}

uint64_t sub_12DEAE0(uint64_t a1)
{
  uint64_t result = sub_188CC00(a1 + 24);
  uint64_t v3 = *(unsigned int *)(a1 + 56);
  if ((int)v3 >= 1)
  {
    int v4 = (unsigned char **)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = (uint64_t)sub_15BB0EC(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 56) = 0;
  }
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 0x7F) == 0) {
    goto LABEL_14;
  }
  if (v6)
  {
    unint64_t v9 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v9 + 23) < 0)
    {
      **(unsigned char **)unint64_t v9 = 0;
      *(void *)(v9 + 8) = 0;
      if ((v6 & 2) != 0) {
        goto LABEL_22;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v9 = 0;
      *(unsigned char *)(v9 + 23) = 0;
      if ((v6 & 2) != 0) {
        goto LABEL_22;
      }
    }
LABEL_8:
    if ((v6 & 4) == 0) {
      goto LABEL_9;
    }
LABEL_26:
    unint64_t v11 = *(void *)(a1 + 88) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v11 + 23) < 0)
    {
      **(unsigned char **)unint64_t v11 = 0;
      *(void *)(v11 + 8) = 0;
      if ((v6 & 8) != 0) {
        goto LABEL_30;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v11 = 0;
      *(unsigned char *)(v11 + 23) = 0;
      if ((v6 & 8) != 0) {
        goto LABEL_30;
      }
    }
LABEL_10:
    if ((v6 & 0x10) == 0) {
      goto LABEL_11;
    }
LABEL_34:
    uint64_t result = sub_12DE4F8(*(void *)(a1 + 104));
    if ((v6 & 0x20) == 0)
    {
LABEL_12:
      if ((v6 & 0x40) == 0) {
        goto LABEL_14;
      }
      goto LABEL_13;
    }
    goto LABEL_35;
  }
  if ((v6 & 2) == 0) {
    goto LABEL_8;
  }
LABEL_22:
  unint64_t v10 = *(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v10 + 23) < 0)
  {
    **(unsigned char **)unint64_t v10 = 0;
    *(void *)(v10 + 8) = 0;
    if ((v6 & 4) != 0) {
      goto LABEL_26;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v10 = 0;
    *(unsigned char *)(v10 + 23) = 0;
    if ((v6 & 4) != 0) {
      goto LABEL_26;
    }
  }
LABEL_9:
  if ((v6 & 8) == 0) {
    goto LABEL_10;
  }
LABEL_30:
  unint64_t v12 = *(void *)(a1 + 96) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v12 + 23) < 0)
  {
    **(unsigned char **)unint64_t v12 = 0;
    *(void *)(v12 + 8) = 0;
    if ((v6 & 0x10) != 0) {
      goto LABEL_34;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v12 = 0;
    *(unsigned char *)(v12 + 23) = 0;
    if ((v6 & 0x10) != 0) {
      goto LABEL_34;
    }
  }
LABEL_11:
  if ((v6 & 0x20) == 0) {
    goto LABEL_12;
  }
LABEL_35:
  uint64_t result = (uint64_t)sub_15B09D0(*(void *)(a1 + 112));
  if ((v6 & 0x40) != 0) {
LABEL_13:
  }
    uint64_t result = sub_15B6D84(*(void *)(a1 + 120));
LABEL_14:
  char v8 = *(unsigned char *)(a1 + 8);
  uint64_t v7 = a1 + 8;
  *(_DWORD *)(v7 + 120) = 0;
  *(_DWORD *)(v7 + 8) = 0;
  if (v8)
  {
    return sub_188B4AC((uint64_t *)v7);
  }
  return result;
}

uint64_t sub_12DEC78(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v47 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v47, a3[11].i32[1])) {
    return *(void *)v47;
  }
  int v6 = (void *)(a1 + 8);
  uint64_t v7 = (uint64_t **)(a1 + 24);
  while (2)
  {
    char v8 = (unsigned __int8 *)(*(void *)v47 + 1);
    unsigned int v9 = **(unsigned char **)v47;
    if ((char)**(unsigned char **)v47 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        char v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v47, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        char v8 = (unsigned __int8 *)(*(void *)v47 + 2);
      }
    }
    *(void *)int v47 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_76;
        }
        *(_DWORD *)(a1 + 16) |= 0x10u;
        uint64_t v12 = *(void *)(a1 + 104);
        if (!v12)
        {
          uint64_t v13 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v13 = (void *)*v13;
          }
          uint64_t v12 = sub_12F81E8((uint64_t)v13);
          *(void *)(a1 + 104) = v12;
          char v8 = *(unsigned __int8 **)v47;
        }
        uint64_t v14 = sub_12DE520(a3, v12, v8);
        goto LABEL_73;
      case 2u:
        if (v9 != 18) {
          goto LABEL_76;
        }
        *(_DWORD *)(a1 + 16) |= 0x20u;
        uint64_t v15 = *(void *)(a1 + 112);
        if (!v15)
        {
          uint64_t v16 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v16 = (void *)*v16;
          }
          uint64_t v15 = sub_15C1918((uint64_t)v16);
          *(void *)(a1 + 112) = v15;
          char v8 = *(unsigned __int8 **)v47;
        }
        uint64_t v14 = sub_1198F14(a3, v15, v8);
        goto LABEL_73;
      case 3u:
        if (v9 != 26) {
          goto LABEL_76;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v17 = *(void *)(a1 + 8);
        uint64_t v18 = (uint64_t *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
        if (v17) {
          uint64_t v18 = (uint64_t *)*v18;
        }
        unsigned int v19 = (void *)(a1 + 72);
        goto LABEL_72;
      case 4u:
        if (v9 != 32) {
          goto LABEL_76;
        }
        uint64_t v20 = (char *)(v8 + 1);
        unint64_t v21 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_29;
        }
        int v22 = *v20;
        int v23 = v21 + (v22 << 7);
        unint64_t v21 = (v23 - 128);
        if (v22 < 0)
        {
          *(void *)int v47 = sub_188C138((uint64_t)v8, (v23 - 128));
          if (!*(void *)v47) {
            return 0;
          }
          unint64_t v21 = v45;
        }
        else
        {
          uint64_t v20 = (char *)(v8 + 2);
LABEL_29:
          *(void *)int v47 = v20;
        }
        if (sub_16BAF04(v21))
        {
          *(_DWORD *)(a1 + 16) |= 0x80u;
          *(_DWORD *)(a1 + 128) = v21;
        }
        else
        {
          if (*v6) {
            uint64_t v46 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v46 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(4, v21, v46);
        }
        goto LABEL_74;
      case 5u:
        if (v9 != 42) {
          goto LABEL_76;
        }
        *(_DWORD *)(a1 + 16) |= 0x40u;
        int v24 = *(void **)(a1 + 120);
        if (!v24)
        {
          uint64_t v25 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v25 = (void *)*v25;
          }
          int v24 = sub_15C1E94((uint64_t)v25);
          *(void *)(a1 + 120) = v24;
          char v8 = *(unsigned __int8 **)v47;
        }
        uint64_t v14 = sub_11EA9CC(a3, (uint64_t)v24, v8);
        goto LABEL_73;
      case 6u:
        if (v9 != 50) {
          goto LABEL_76;
        }
        uint64_t v26 = (const std::string::value_type *)(v8 - 1);
        while (1)
        {
          BOOL v27 = (char *)(v26 + 1);
          *(void *)int v47 = v26 + 1;
          unint64_t v28 = *(_DWORD **)(a1 + 40);
          if (v28 && (uint64_t v29 = *(int *)(a1 + 32), (int)v29 < *v28))
          {
            *(_DWORD *)(a1 + 32) = v29 + 1;
            uint64_t v30 = *(std::string **)&v28[2 * v29 + 2];
          }
          else
          {
            if (!*v7) {
              operator new();
            }
            *uint64_t v32 = v31;
            v32[1] = sub_3A6EDC;
            void *v31 = 0;
            v31[1] = 0;
            int v31[2] = 0;
            uint64_t v30 = (std::string *)sub_188CDC8(a1 + 24, (uint64_t)v31);
            BOOL v27 = *(char **)v47;
          }
          uint64_t v26 = sub_188C244(v30, v27, (uint64_t)a3);
          *(void *)int v47 = v26;
          if (!v26) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v26 || *v26 != 50) {
            goto LABEL_74;
          }
        }
      case 7u:
        if (v9 != 58) {
          goto LABEL_76;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v33 = *(void *)(a1 + 8);
        uint64_t v18 = (uint64_t *)(v33 & 0xFFFFFFFFFFFFFFFCLL);
        if (v33) {
          uint64_t v18 = (uint64_t *)*v18;
        }
        unsigned int v19 = (void *)(a1 + 80);
        goto LABEL_72;
      case 8u:
        if (v9 != 66) {
          goto LABEL_76;
        }
        uint64_t v34 = (char *)(v8 - 1);
        while (1)
        {
          uint64_t v35 = (unsigned __int8 *)(v34 + 1);
          *(void *)int v47 = v34 + 1;
          uint64_t v36 = *(_DWORD **)(a1 + 64);
          if (v36 && (uint64_t v37 = *(int *)(a1 + 56), (int)v37 < *v36))
          {
            *(_DWORD *)(a1 + 56) = v37 + 1;
            uint64_t v38 = *(void *)&v36[2 * v37 + 2];
          }
          else
          {
            sub_15C219C(*(void *)(a1 + 48));
            uint64_t v38 = sub_188CDC8(a1 + 48, v39);
            uint64_t v35 = *(unsigned __int8 **)v47;
          }
          uint64_t v34 = sub_11FF458(a3, v38, v35);
          *(void *)int v47 = v34;
          if (!v34) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v34 || *v34 != 66) {
            goto LABEL_74;
          }
        }
      case 9u:
        if (v9 != 74) {
          goto LABEL_76;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v40 = *(void *)(a1 + 8);
        uint64_t v18 = (uint64_t *)(v40 & 0xFFFFFFFFFFFFFFFCLL);
        if (v40) {
          uint64_t v18 = (uint64_t *)*v18;
        }
        unsigned int v19 = (void *)(a1 + 88);
        goto LABEL_72;
      case 0xAu:
        if (v9 != 82) {
          goto LABEL_76;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v41 = *(void *)(a1 + 8);
        uint64_t v18 = (uint64_t *)(v41 & 0xFFFFFFFFFFFFFFFCLL);
        if (v41) {
          uint64_t v18 = (uint64_t *)*v18;
        }
        unsigned int v19 = (void *)(a1 + 96);
LABEL_72:
        uint64_t v42 = (std::string *)sub_1880F84(v19, v18);
        uint64_t v14 = (void *)sub_188C244(v42, *(char **)v47, (uint64_t)a3);
        goto LABEL_73;
      default:
LABEL_76:
        if (v9) {
          BOOL v43 = (v9 & 7) == 4;
        }
        else {
          BOOL v43 = 1;
        }
        if (!v43)
        {
          if (*v6)
          {
            uint64_t v44 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v44 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            char v8 = *(unsigned __int8 **)v47;
          }
          uint64_t v14 = sub_1885AC0(v9, v44, (char *)v8, a3);
LABEL_73:
          *(void *)int v47 = v14;
          if (!v14) {
            return 0;
          }
LABEL_74:
          if (sub_11947B8((uint64_t)a3, (char **)v47, a3[11].i32[1])) {
            return *(void *)v47;
          }
          continue;
        }
        if (!v8) {
          return 0;
        }
        a3[10].i32[0] = v9 - 1;
        return *(void *)v47;
    }
  }
}

char *sub_12DF1EC(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  int v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= __dst) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 104);
    char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    int v4 = sub_12EEC78(v7, (unint64_t)v9, a3);
    if ((v6 & 0x20) == 0)
    {
LABEL_3:
      if ((v6 & 1) == 0) {
        goto LABEL_4;
      }
      goto LABEL_18;
    }
  }
  else if ((v6 & 0x20) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v10 = *(void *)(a1 + 112);
  char *v4 = 18;
  unsigned int v11 = *(_DWORD *)(v10 + 44);
  v4[1] = v11;
  if (v11 > 0x7F) {
    uint64_t v12 = sub_188A9CC(v11, v4 + 1);
  }
  else {
    uint64_t v12 = v4 + 2;
  }
  int v4 = sub_15B0C0C(v10, v12, a3);
  if ((v6 & 1) == 0)
  {
LABEL_4:
    if ((v6 & 0x80) == 0) {
      goto LABEL_25;
    }
    goto LABEL_19;
  }
LABEL_18:
  int v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x80) == 0) {
    goto LABEL_25;
  }
LABEL_19:
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  unint64_t v13 = *(int *)(a1 + 128);
  char *v4 = 32;
  v4[1] = v13;
  if (v13 > 0x7F)
  {
    v4[1] = v13 | 0x80;
    unint64_t v14 = v13 >> 7;
    v4[2] = v13 >> 7;
    v4 += 3;
    if (v13 >= 0x4000)
    {
      do
      {
        *(v4 - 1) |= 0x80u;
        unint64_t v15 = v14 >> 14;
        v14 >>= 7;
        *v4++ = v14;
      }
      while (v15);
    }
  }
  else
  {
    v4 += 2;
  }
LABEL_25:
  if ((v6 & 0x40) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v16 = *(void *)(a1 + 120);
    char *v4 = 42;
    unsigned int v17 = *(_DWORD *)(v16 + 20);
    v4[1] = v17;
    if (v17 > 0x7F) {
      uint64_t v18 = sub_188A9CC(v17, v4 + 1);
    }
    else {
      uint64_t v18 = v4 + 2;
    }
    int v4 = sub_15B7AE4(v16, v18, a3);
  }
  uint64_t v19 = *(unsigned int *)(a1 + 32);
  if ((int)v19 >= 1)
  {
    uint64_t v20 = 0;
    uint64_t v21 = 8 * v19;
    do
    {
      int v22 = *(void **)(*(void *)(a1 + 40) + v20 + 8);
      if (*((char *)v22 + 23) < 0)
      {
        int64_t v23 = v22[1];
        if (v23 > 127) {
          goto LABEL_43;
        }
      }
      else
      {
        int64_t v23 = *((unsigned __int8 *)v22 + 23);
      }
      if ((uint64_t)(*a3 - (void)v4 + 14) >= v23)
      {
        char *v4 = 50;
        v4[1] = v23;
        if (*((char *)v22 + 23) < 0) {
          int v22 = (void *)*v22;
        }
        int v24 = v4 + 2;
        memcpy(v24, v22, v23);
        int v4 = &v24[v23];
        goto LABEL_41;
      }
LABEL_43:
      int v4 = (char *)sub_188A868(a3, 6, (uint64_t)v22, v4);
LABEL_41:
      v20 += 8;
    }
    while (v21 != v20);
  }
  if ((v6 & 2) != 0) {
    int v4 = sub_117A0AC(a3, 7, (const void **)(*(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  int v25 = *(_DWORD *)(a1 + 56);
  if (v25)
  {
    for (int i = 0; i != v25; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v27 = *(void *)(*(void *)(a1 + 64) + 8 * i + 8);
      char *v4 = 66;
      unsigned int v28 = *(_DWORD *)(v27 + 20);
      v4[1] = v28;
      if (v28 > 0x7F) {
        uint64_t v29 = sub_188A9CC(v28, v4 + 1);
      }
      else {
        uint64_t v29 = v4 + 2;
      }
      int v4 = sub_15BB7A0(v27, (unint64_t)v29, a3);
    }
  }
  if ((v6 & 4) != 0) {
    int v4 = sub_117A0AC(a3, 9, (const void **)(*(void *)(a1 + 88) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  if ((v6 & 8) != 0) {
    int v4 = sub_117A0AC(a3, 10, (const void **)(*(void *)(a1 + 96) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v30 = *(void *)(a1 + 8);
  if ((v30 & 1) == 0) {
    return v4;
  }
  unint64_t v32 = v30 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v32 + 31) < 0)
  {
    uint64_t v33 = *(void **)(v32 + 8);
    uint64_t v34 = *(void *)(v32 + 16);
  }
  else
  {
    uint64_t v33 = (void *)(v32 + 8);
    LODWORD(v34) = *(unsigned __int8 *)(v32 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v34)
  {
    uint64_t v35 = (int)v34;
    memcpy(v4, v33, (int)v34);
    v4 += v35;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v33, v34, v4);
}

uint64_t sub_12DF614(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  if ((int)v2 < 1)
  {
    uint64_t v4 = *(unsigned int *)(a1 + 32);
  }
  else
  {
    uint64_t v3 = (uint64_t *)(*(void *)(a1 + 40) + 8);
    uint64_t v4 = *(unsigned int *)(a1 + 32);
    do
    {
      uint64_t v5 = *v3++;
      uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
      uint64_t v7 = *(void *)(v5 + 8);
      if ((v6 & 0x80u) == 0) {
        uint64_t v7 = v6;
      }
      v4 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      --v2;
    }
    while (v2);
  }
  uint64_t v8 = *(int *)(a1 + 56);
  uint64_t v9 = v4 + v8;
  uint64_t v10 = *(void *)(a1 + 64);
  if (v10) {
    unsigned int v11 = (uint64_t *)(v10 + 8);
  }
  else {
    unsigned int v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_15BBC64(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  char v15 = *(unsigned char *)(a1 + 16);
  if (v15)
  {
    if (*(unsigned char *)(a1 + 16))
    {
      unint64_t v21 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v22 = *(unsigned __int8 *)(v21 + 23);
      uint64_t v23 = *(void *)(v21 + 8);
      if ((v22 & 0x80u) == 0) {
        uint64_t v23 = v22;
      }
      v9 += v23 + ((9 * (__clz(v23 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((*(unsigned char *)(a1 + 16) & 2) == 0)
      {
LABEL_17:
        if ((*(unsigned char *)(a1 + 16) & 4) == 0) {
          goto LABEL_18;
        }
        goto LABEL_35;
      }
    }
    else if ((*(unsigned char *)(a1 + 16) & 2) == 0)
    {
      goto LABEL_17;
    }
    unint64_t v24 = *(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v25 = *(unsigned __int8 *)(v24 + 23);
    uint64_t v26 = *(void *)(v24 + 8);
    if ((v25 & 0x80u) == 0) {
      uint64_t v26 = v25;
    }
    v9 += v26 + ((9 * (__clz(v26 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((*(unsigned char *)(a1 + 16) & 4) == 0)
    {
LABEL_18:
      if ((*(unsigned char *)(a1 + 16) & 8) == 0) {
        goto LABEL_19;
      }
      goto LABEL_38;
    }
LABEL_35:
    unint64_t v27 = *(void *)(a1 + 88) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v28 = *(unsigned __int8 *)(v27 + 23);
    uint64_t v29 = *(void *)(v27 + 8);
    if ((v28 & 0x80u) == 0) {
      uint64_t v29 = v28;
    }
    v9 += v29 + ((9 * (__clz(v29 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((*(unsigned char *)(a1 + 16) & 8) == 0)
    {
LABEL_19:
      if ((*(unsigned char *)(a1 + 16) & 0x10) == 0) {
        goto LABEL_20;
      }
      goto LABEL_41;
    }
LABEL_38:
    unint64_t v30 = *(void *)(a1 + 96) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v31 = *(unsigned __int8 *)(v30 + 23);
    uint64_t v32 = *(void *)(v30 + 8);
    if ((v31 & 0x80u) == 0) {
      uint64_t v32 = v31;
    }
    v9 += v32 + ((9 * (__clz(v32 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((*(unsigned char *)(a1 + 16) & 0x10) == 0)
    {
LABEL_20:
      if ((*(unsigned char *)(a1 + 16) & 0x20) == 0) {
        goto LABEL_21;
      }
      goto LABEL_42;
    }
LABEL_41:
    unint64_t v33 = sub_12EEE1C(*(void *)(a1 + 104));
    v9 += v33 + ((9 * (__clz(v33 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v15 & 0x20) == 0)
    {
LABEL_21:
      if ((v15 & 0x40) == 0) {
        goto LABEL_22;
      }
      goto LABEL_43;
    }
LABEL_42:
    uint64_t v34 = sub_15B0D90(*(void *)(a1 + 112));
    v9 += v34 + ((9 * (__clz(v34 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v15 & 0x40) == 0)
    {
LABEL_22:
      if ((v15 & 0x80) == 0) {
        goto LABEL_27;
      }
LABEL_23:
      int v16 = *(_DWORD *)(a1 + 128);
      uint64_t v17 = ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if (v16 >= 0) {
        uint64_t v18 = v17;
      }
      else {
        uint64_t v18 = 11;
      }
      v9 += v18;
      goto LABEL_27;
    }
LABEL_43:
    uint64_t v35 = sub_15B806C(*(void *)(a1 + 120));
    v9 += v35 + ((9 * (__clz(v35 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v15 & 0x80) == 0) {
      goto LABEL_27;
    }
    goto LABEL_23;
  }
LABEL_27:
  uint64_t v19 = *(void *)(a1 + 8);
  if (v19)
  {
    unint64_t v36 = v19 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v36 + 31) < 0) {
      uint64_t v37 = *(void *)(v36 + 16);
    }
    else {
      uint64_t v37 = *(unsigned __int8 *)(v36 + 31);
    }
    v9 += v37;
  }
  *(_DWORD *)(a1 + 20) = v9;
  return v9;
}

void sub_12DF91C(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (const std::string **)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_188FB98(a1 + 24, v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    uint64_t v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    unsigned int v11 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_1301B24((uint64_t *)(a1 + 48), v11, v10, v9, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v12 = *(_DWORD *)(a1 + 56) + v9;
    *(_DWORD *)(a1 + 56) = v12;
    uint64_t v13 = *(int **)(a1 + 64);
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 16);
  if ((_BYTE)v14)
  {
    if (v14)
    {
      int v16 = (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v17 = *(void *)(a1 + 8);
      uint64_t v18 = (uint64_t *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
      if (v17) {
        uint64_t v18 = (uint64_t *)*v18;
      }
      sub_1881DF4((std::string **)(a1 + 72), v16, v18);
      if ((v14 & 2) == 0)
      {
LABEL_10:
        if ((v14 & 4) == 0) {
          goto LABEL_11;
        }
        goto LABEL_28;
      }
    }
    else if ((v14 & 2) == 0)
    {
      goto LABEL_10;
    }
    uint64_t v19 = (long long *)(*(void *)(a2 + 80) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v20 = *(void *)(a1 + 8);
    unint64_t v21 = (uint64_t *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
    if (v20) {
      unint64_t v21 = (uint64_t *)*v21;
    }
    sub_1881DF4((std::string **)(a1 + 80), v19, v21);
    if ((v14 & 4) == 0)
    {
LABEL_11:
      if ((v14 & 8) == 0) {
        goto LABEL_12;
      }
      goto LABEL_31;
    }
LABEL_28:
    uint64_t v22 = (long long *)(*(void *)(a2 + 88) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 4u;
    uint64_t v23 = *(void *)(a1 + 8);
    unint64_t v24 = (uint64_t *)(v23 & 0xFFFFFFFFFFFFFFFCLL);
    if (v23) {
      unint64_t v24 = (uint64_t *)*v24;
    }
    sub_1881DF4((std::string **)(a1 + 88), v22, v24);
    if ((v14 & 8) == 0)
    {
LABEL_12:
      if ((v14 & 0x10) == 0) {
        goto LABEL_13;
      }
      goto LABEL_34;
    }
LABEL_31:
    uint64_t v25 = (long long *)(*(void *)(a2 + 96) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 8u;
    uint64_t v26 = *(void *)(a1 + 8);
    unint64_t v27 = (uint64_t *)(v26 & 0xFFFFFFFFFFFFFFFCLL);
    if (v26) {
      unint64_t v27 = (uint64_t *)*v27;
    }
    sub_1881DF4((std::string **)(a1 + 96), v25, v27);
    if ((v14 & 0x10) == 0)
    {
LABEL_13:
      if ((v14 & 0x20) == 0) {
        goto LABEL_14;
      }
      goto LABEL_42;
    }
LABEL_34:
    *(_DWORD *)(a1 + 16) |= 0x10u;
    uint64_t v28 = *(std::string **)(a1 + 104);
    if (!v28)
    {
      uint64_t v29 = *(void *)(a1 + 8);
      unint64_t v30 = (void *)(v29 & 0xFFFFFFFFFFFFFFFCLL);
      if (v29) {
        unint64_t v30 = (void *)*v30;
      }
      uint64_t v28 = (std::string *)sub_12F81E8((uint64_t)v30);
      *(void *)(a1 + 104) = v28;
    }
    if (*(void *)(a2 + 104)) {
      uint64_t v31 = *(uint64_t (****)())(a2 + 104);
    }
    else {
      uint64_t v31 = &off_2531E28;
    }
    sub_12D45B4(v28, (uint64_t)v31);
    if ((v14 & 0x20) == 0)
    {
LABEL_14:
      if ((v14 & 0x40) == 0) {
        goto LABEL_15;
      }
      goto LABEL_50;
    }
LABEL_42:
    *(_DWORD *)(a1 + 16) |= 0x20u;
    uint64_t v32 = *(void *)(a1 + 112);
    if (!v32)
    {
      uint64_t v33 = *(void *)(a1 + 8);
      uint64_t v34 = (void *)(v33 & 0xFFFFFFFFFFFFFFFCLL);
      if (v33) {
        uint64_t v34 = (void *)*v34;
      }
      uint64_t v32 = sub_15C1918((uint64_t)v34);
      *(void *)(a1 + 112) = v32;
    }
    if (*(void *)(a2 + 112)) {
      uint64_t v35 = *(uint64_t (****)())(a2 + 112);
    }
    else {
      uint64_t v35 = &off_253F1A0;
    }
    sub_15B0E24(v32, (uint64_t)v35);
    if ((v14 & 0x40) == 0)
    {
LABEL_15:
      if ((v14 & 0x80) == 0)
      {
LABEL_17:
        *(_DWORD *)(a1 + 16) |= v14;
        goto LABEL_18;
      }
LABEL_16:
      *(_DWORD *)(a1 + 128) = *(_DWORD *)(a2 + 128);
      goto LABEL_17;
    }
LABEL_50:
    *(_DWORD *)(a1 + 16) |= 0x40u;
    unint64_t v36 = *(std::string **)(a1 + 120);
    if (!v36)
    {
      uint64_t v37 = *(void *)(a1 + 8);
      uint64_t v38 = (void *)(v37 & 0xFFFFFFFFFFFFFFFCLL);
      if (v37) {
        uint64_t v38 = (void *)*v38;
      }
      unint64_t v36 = (std::string *)sub_15C1E94((uint64_t)v38);
      *(void *)(a1 + 120) = v36;
    }
    if (*(void *)(a2 + 120)) {
      uint64_t v39 = *(uint64_t (****)())(a2 + 120);
    }
    else {
      uint64_t v39 = &off_253F3D0;
    }
    sub_15B86B8(v36, (uint64_t)v39);
    if ((v14 & 0x80) == 0) {
      goto LABEL_17;
    }
    goto LABEL_16;
  }
LABEL_18:
  uint64_t v15 = *(void *)(a2 + 8);
  if (v15)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v15 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_12DFC48(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 56);
  while ((int)v2 >= 1)
  {
    uint64_t v3 = v2 - 1;
    char v4 = sub_15BC024(*(void *)(*(void *)(a1 + 64) + 8 * v2));
    uint64_t v2 = v3;
    if ((v4 & 1) == 0) {
      return 0;
    }
  }
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 0x20) != 0)
  {
    uint64_t result = sub_15B0F18(*(void *)(a1 + 112));
    if (!result) {
      return result;
    }
    int v6 = *(_DWORD *)(a1 + 16);
  }
  if ((v6 & 0x40) == 0) {
    return 1;
  }
  uint64_t result = sub_15B8CAC(*(void *)(a1 + 120));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_12DFCC0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap.fields.DirectionsContext.SimplifiedWaypoint");
}

uint64_t sub_12DFCD0(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  char v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  if ((uint64_t (***)())a1 != &off_2531998)
  {
    if (*(void *)(a1 + 48))
    {
      sub_1851318();
      operator delete();
    }
    if (*(void *)(a1 + 56))
    {
      sub_1852598();
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  sub_13017A8((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12DFDAC(uint64_t a1)
{
  sub_12DFCD0(a1);

  operator delete();
}

uint64_t sub_12DFDE4(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_1395B8C(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  int v5 = *(_DWORD *)(v1 + 16);
  if ((v5 & 3) != 0)
  {
    if (v5) {
      uint64_t result = sub_171D104(*(void *)(v1 + 48));
    }
    if ((v5 & 2) != 0) {
      uint64_t result = sub_171D1B4(*(void *)(v1 + 56));
    }
  }
  char v7 = *(unsigned char *)(v1 + 8);
  uint64_t v6 = v1 + 8;
  *(_DWORD *)(v6 + 8) = 0;
  if (v7)
  {
    return sub_188B4AC((uint64_t *)v6);
  }
  return result;
}

char *sub_12DFE88(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v26 = a2;
  if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
    return v26;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    char v7 = v26 + 1;
    unsigned int v8 = *v26;
    if (*v26 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        char v7 = (char *)sub_188C180((uint64_t)v26, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        char v7 = v26 + 2;
      }
    }
    uint64_t v26 = v7;
    unsigned int v11 = v8 >> 3;
    if (v8 >> 3 == 3)
    {
      if (v8 != 26) {
        goto LABEL_14;
      }
      *(_DWORD *)(a1 + 16) |= 2u;
      int v16 = *(void **)(a1 + 56);
      if (!v16)
      {
        uint64_t v17 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          uint64_t v17 = (void *)*v17;
        }
        int v16 = sub_1854E88((uint64_t)v17);
        *(void *)(a1 + 56) = v16;
        char v7 = v26;
      }
      uint64_t v15 = (char *)sub_12E0208(a3, (uint64_t)v16, (unsigned __int8 *)v7);
      goto LABEL_42;
    }
    if (v11 == 2) {
      break;
    }
    if (v11 != 1 || v8 != 10) {
      goto LABEL_14;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v24 = *(void *)(a1 + 48);
    if (!v24)
    {
      uint64_t v25 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        uint64_t v25 = (void *)*v25;
      }
      uint64_t v24 = sub_1854CC4((uint64_t)v25);
      *(void *)(a1 + 48) = v24;
      char v7 = v26;
    }
    uint64_t v15 = sub_12E00E8(a3, v24, (unsigned __int8 *)v7);
LABEL_42:
    uint64_t v26 = v15;
    if (!v15) {
      return 0;
    }
LABEL_43:
    if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
      return v26;
    }
  }
  if (v8 == 18)
  {
    uint64_t v18 = v7 - 1;
    while (1)
    {
      uint64_t v19 = (unsigned __int8 *)(v18 + 1);
      uint64_t v26 = v18 + 1;
      uint64_t v20 = *(_DWORD **)(a1 + 40);
      if (v20 && (uint64_t v21 = *(int *)(a1 + 32), (int)v21 < *v20))
      {
        *(_DWORD *)(a1 + 32) = v21 + 1;
        uint64_t v22 = *(void *)&v20[2 * v21 + 2];
      }
      else
      {
        uint64_t v23 = sub_13D8374(*(void *)(a1 + 24));
        uint64_t v22 = sub_188CDC8(a1 + 24, v23);
        uint64_t v19 = (unsigned __int8 *)v26;
      }
      uint64_t v18 = sub_12E0178(a3, v22, v19);
      uint64_t v26 = v18;
      if (!v18) {
        return 0;
      }
      if (*(void *)a3 <= (unint64_t)v18 || *v18 != 18) {
        goto LABEL_43;
      }
    }
  }
LABEL_14:
  if (v8) {
    BOOL v13 = (v8 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v6)
    {
      int v14 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      int v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      char v7 = v26;
    }
    uint64_t v15 = (char *)sub_1885AC0(v8, v14, v7, a3);
    goto LABEL_42;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v26;
  }
  return 0;
}

char *sub_12E00E8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1851354(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_12E0178(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1395C08(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_12E0208(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1852688(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_12E0298(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 48);
    char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 44);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    uint64_t v4 = sub_1851710(v7, v9, a3);
  }
  int v10 = *(_DWORD *)(a1 + 32);
  if (v10)
  {
    for (int i = 0; i != v10; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v12 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      char *v4 = 18;
      unsigned int v13 = *(_DWORD *)(v12 + 40);
      v4[1] = v13;
      if (v13 > 0x7F) {
        int v14 = sub_188A9CC(v13, v4 + 1);
      }
      else {
        int v14 = v4 + 2;
      }
      uint64_t v4 = sub_1395E38(v12, v14, a3);
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v15 = *(void *)(a1 + 56);
    char *v4 = 26;
    unsigned int v16 = *(_DWORD *)(v15 + 20);
    v4[1] = v16;
    if (v16 > 0x7F) {
      uint64_t v17 = sub_188A9CC(v16, v4 + 1);
    }
    else {
      uint64_t v17 = v4 + 2;
    }
    uint64_t v4 = sub_1852928(v15, (unint64_t)v17, a3);
  }
  uint64_t v18 = *(void *)(a1 + 8);
  if ((v18 & 1) == 0) {
    return v4;
  }
  unint64_t v20 = v18 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v20 + 31) < 0)
  {
    uint64_t v21 = *(void **)(v20 + 8);
    uint64_t v22 = *(void *)(v20 + 16);
  }
  else
  {
    uint64_t v21 = (void *)(v20 + 8);
    LODWORD(v22) = *(unsigned __int8 *)(v20 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v22)
  {
    uint64_t v23 = (int)v22;
    memcpy(v4, v21, (int)v22);
    v4 += v23;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v21, v22, v4);
}

uint64_t sub_12E04A8(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_1395F7C(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 3) != 0)
  {
    if (v8)
    {
      uint64_t v9 = sub_18519CC(*(void *)(a1 + 48));
      v2 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v8 & 2) != 0)
    {
      uint64_t v10 = sub_1852AD4(*(void *)(a1 + 56));
      v2 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v13 + 31) < 0) {
      uint64_t v14 = *(void *)(v13 + 16);
    }
    else {
      uint64_t v14 = *(unsigned __int8 *)(v13 + 31);
    }
    v2 += v14;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

void sub_12E05C4(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_1301CC8((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    int v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *int v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 3) != 0)
  {
    if (v9)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v10 = *(void *)(a1 + 48);
      if (!v10)
      {
        uint64_t v11 = *(void *)(a1 + 8);
        uint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
        if (v11) {
          uint64_t v12 = (void *)*v12;
        }
        uint64_t v10 = sub_1854CC4((uint64_t)v12);
        *(void *)(a1 + 48) = v10;
      }
      if (*(void *)(a2 + 48)) {
        unint64_t v13 = *(uint64_t (****)())(a2 + 48);
      }
      else {
        unint64_t v13 = &off_254D510;
      }
      sub_172CB9C(v10, (uint64_t)v13);
    }
    if ((v9 & 2) != 0)
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      uint64_t v14 = *(void **)(a1 + 56);
      if (!v14)
      {
        uint64_t v15 = *(void *)(a1 + 8);
        unsigned int v16 = (void *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          unsigned int v16 = (void *)*v16;
        }
        uint64_t v14 = sub_1854E88((uint64_t)v16);
        *(void *)(a1 + 56) = v14;
      }
      if (*(void *)(a2 + 56)) {
        uint64_t v17 = *(uint64_t (****)())(a2 + 56);
      }
      else {
        uint64_t v17 = &off_254D5B8;
      }
      sub_172CD40((uint64_t)v14, (uint64_t)v17);
    }
  }
  uint64_t v18 = *(void *)(a2 + 8);
  if (v18)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v18 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_12E0738(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if (v2)
  {
    uint64_t result = sub_1730564(*(void *)(a1 + 48));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 2) == 0) {
    return 1;
  }
  uint64_t result = sub_173056C(*(void *)(a1 + 56));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_12E0784@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap.fields.DirectionsContext.StoreFrontInfo");
}

unsigned char *sub_12E0794(unsigned char *result)
{
  uint64_t v1 = result;
  uint64_t v2 = *((unsigned int *)result + 6);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (unsigned char **)(*((void *)result + 4) + 8);
    do
    {
      int v4 = *v3++;
      uint64_t result = sub_12EEFD4(v4);
      --v2;
    }
    while (v2);
    *((_DWORD *)v1 + 6) = 0;
  }
  char v6 = v1[8];
  uint64_t v5 = (uint64_t *)(v1 + 8);
  if (v6)
  {
    return (unsigned char *)sub_188B4AC(v5);
  }
  return result;
}

void *sub_12E0810(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_12E08AC((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  sub_11DB7D4(a1 + 6);
  sub_1301828(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void ***sub_12E08AC(uint64_t a1)
{
  uint64_t v3 = *(uint64_t **)(a1 + 72);
  uint64_t v2 = (void ***)(a1 + 72);
  if (v3 != &qword_2550250) {
    sub_1881C6C(v2);
  }
  uint64_t result = (void ***)(a1 + 80);
  if (*(uint64_t **)(a1 + 80) != &qword_2550250) {
    sub_1881C6C(result);
  }
  if ((uint64_t (***)())a1 != &off_25319D8)
  {
    uint64_t v5 = *(void **)(a1 + 88);
    if (v5)
    {
      sub_12EFA08(v5);
      operator delete();
    }
    char v6 = *(void **)(a1 + 96);
    if (v6)
    {
      sub_1277068(v6);
      operator delete();
    }
    int v7 = *(void **)(a1 + 104);
    if (v7)
    {
      sub_1277068(v7);
      operator delete();
    }
    if (*(void *)(a1 + 112))
    {
      sub_15B0994();
      operator delete();
    }
    if (*(void *)(a1 + 120))
    {
      sub_15B0994();
      operator delete();
    }
    uint64_t v8 = *(void *)(a1 + 128);
    if (v8)
    {
      sub_12F12A0(v8);
      operator delete();
    }
    int v9 = *(void **)(a1 + 136);
    if (v9)
    {
      sub_12DE910(v9);
      operator delete();
    }
    uint64_t v10 = *(void **)(a1 + 144);
    if (v10)
    {
      sub_12DE910(v10);
      operator delete();
    }
    uint64_t result = *(void ****)(a1 + 152);
    if (result)
    {
      sub_12DFCD0((uint64_t)result);
      operator delete();
    }
  }
  return result;
}

void sub_12E0A44(void *a1)
{
  sub_12E0810(a1);

  operator delete();
}

uint64_t sub_12E0A7C(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_12F3CC8(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  uint64_t v5 = *(unsigned int *)(v1 + 56);
  if ((int)v5 >= 1)
  {
    char v6 = (uint64_t *)(*(void *)(v1 + 64) + 8);
    do
    {
      uint64_t v7 = *v6++;
      uint64_t result = (uint64_t)sub_15B09D0(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(v1 + 56) = 0;
  }
  int v8 = *(_DWORD *)(v1 + 16);
  if (!(_BYTE)v8) {
    goto LABEL_19;
  }
  if ((v8 & 1) == 0)
  {
    if ((v8 & 2) == 0) {
      goto LABEL_12;
    }
LABEL_39:
    unint64_t v12 = *(void *)(v1 + 80) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v12 + 23) < 0)
    {
      **(unsigned char **)unint64_t v12 = 0;
      *(void *)(v12 + 8) = 0;
      if ((v8 & 4) != 0) {
        goto LABEL_43;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v12 = 0;
      *(unsigned char *)(v12 + 23) = 0;
      if ((v8 & 4) != 0) {
        goto LABEL_43;
      }
    }
LABEL_13:
    if ((v8 & 8) == 0) {
      goto LABEL_14;
    }
    goto LABEL_44;
  }
  unint64_t v11 = *(void *)(v1 + 72) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v11 + 23) < 0)
  {
    **(unsigned char **)unint64_t v11 = 0;
    *(void *)(v11 + 8) = 0;
    if ((v8 & 2) != 0) {
      goto LABEL_39;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v11 = 0;
    *(unsigned char *)(v11 + 23) = 0;
    if ((v8 & 2) != 0) {
      goto LABEL_39;
    }
  }
LABEL_12:
  if ((v8 & 4) == 0) {
    goto LABEL_13;
  }
LABEL_43:
  uint64_t result = (uint64_t)sub_12E0794(*(unsigned char **)(v1 + 88));
  if ((v8 & 8) == 0)
  {
LABEL_14:
    if ((v8 & 0x10) == 0) {
      goto LABEL_15;
    }
    goto LABEL_45;
  }
LABEL_44:
  uint64_t result = sub_12748A4(*(void *)(v1 + 96));
  if ((v8 & 0x10) == 0)
  {
LABEL_15:
    if ((v8 & 0x20) == 0) {
      goto LABEL_16;
    }
LABEL_46:
    uint64_t result = (uint64_t)sub_15B09D0(*(void *)(v1 + 112));
    if ((v8 & 0x40) == 0)
    {
LABEL_17:
      if ((v8 & 0x80) == 0) {
        goto LABEL_19;
      }
      goto LABEL_18;
    }
    goto LABEL_47;
  }
LABEL_45:
  uint64_t result = sub_12748A4(*(void *)(v1 + 104));
  if ((v8 & 0x20) != 0) {
    goto LABEL_46;
  }
LABEL_16:
  if ((v8 & 0x40) == 0) {
    goto LABEL_17;
  }
LABEL_47:
  uint64_t result = (uint64_t)sub_15B09D0(*(void *)(v1 + 120));
  if ((v8 & 0x80) != 0) {
LABEL_18:
  }
    uint64_t result = sub_12DA0CC(*(void *)(v1 + 128));
LABEL_19:
  if ((v8 & 0x700) == 0) {
    goto LABEL_24;
  }
  if ((v8 & 0x100) != 0)
  {
    uint64_t result = sub_12DEAE0(*(void *)(v1 + 136));
    if ((v8 & 0x200) == 0)
    {
LABEL_22:
      if ((v8 & 0x400) == 0) {
        goto LABEL_24;
      }
      goto LABEL_23;
    }
  }
  else if ((v8 & 0x200) == 0)
  {
    goto LABEL_22;
  }
  uint64_t result = sub_12DEAE0(*(void *)(v1 + 144));
  if ((v8 & 0x400) != 0) {
LABEL_23:
  }
    uint64_t result = sub_12DFDE4(*(void *)(v1 + 152));
LABEL_24:
  if ((v8 & 0xF800) != 0)
  {
    *(void *)(v1 + 160) = 0;
    *(void *)(v1 + 168) = 0;
    *(void *)(v1 + 176) = 0;
  }
  if ((v8 & 0x70000) != 0)
  {
    *(unsigned char *)(v1 + 186) = 0;
    *(_WORD *)(v1 + 184) = 0;
  }
  char v10 = *(unsigned char *)(v1 + 8);
  uint64_t v9 = v1 + 8;
  *(_DWORD *)(v9 + 8) = 0;
  if (v10)
  {
    return sub_188B4AC((uint64_t *)v9);
  }
  return result;
}

uint64_t sub_12E0C50(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v88 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v88, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    int v8 = (unsigned __int8 *)(*(void *)v88 + 1);
    unsigned int v9 = **(unsigned char **)v88;
    if ((char)**(unsigned char **)v88 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        int v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v88, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        int v8 = (unsigned __int8 *)(*(void *)v88 + 2);
      }
    }
    *(void *)uint64_t v88 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_136;
        }
        unint64_t v12 = (char *)(v8 + 1);
        unint64_t v13 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        int v15 = v13 + (v14 << 7);
        unint64_t v13 = (v15 - 128);
        if (v14 < 0)
        {
          *(void *)uint64_t v88 = sub_188C138((uint64_t)v8, (v15 - 128));
          if (!*(void *)v88) {
            goto LABEL_174;
          }
          unint64_t v13 = v72;
        }
        else
        {
          unint64_t v12 = (char *)(v8 + 2);
LABEL_13:
          *(void *)uint64_t v88 = v12;
        }
        if (sub_138DE04(v13))
        {
          *(_DWORD *)(a1 + 16) |= 0x1000u;
          *(_DWORD *)(a1 + 168) = v13;
          goto LABEL_144;
        }
        if (*v7) {
          uint64_t v86 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          uint64_t v86 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v87 = 1;
        goto LABEL_168;
      case 2u:
        if (v9 != 18) {
          goto LABEL_136;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v16 = *(void *)(a1 + 88);
        if (!v16)
        {
          uint64_t v17 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v17 = (void *)*v17;
          }
          uint64_t v16 = sub_12F82E4((uint64_t)v17);
          *(void *)(a1 + 88) = v16;
          int v8 = *(unsigned __int8 **)v88;
        }
        uint64_t v18 = (uint64_t)sub_12E15E4(a3, v16, v8);
        goto LABEL_143;
      case 3u:
        if (v9 != 26) {
          goto LABEL_136;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v19 = *(void *)(a1 + 96);
        if (v19) {
          goto LABEL_33;
        }
        unint64_t v20 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          unint64_t v20 = (void *)*v20;
        }
        uint64_t v19 = sub_12846F4((uint64_t)v20);
        *(void *)(a1 + 96) = v19;
        goto LABEL_32;
      case 4u:
        if (v9 != 34) {
          goto LABEL_136;
        }
        *(_DWORD *)(a1 + 16) |= 0x10u;
        uint64_t v19 = *(void *)(a1 + 104);
        if (v19) {
          goto LABEL_33;
        }
        uint64_t v21 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          uint64_t v21 = (void *)*v21;
        }
        uint64_t v19 = sub_12846F4((uint64_t)v21);
        *(void *)(a1 + 104) = v19;
LABEL_32:
        int v8 = *(unsigned __int8 **)v88;
LABEL_33:
        uint64_t v18 = sub_1275320(a3, v19, v8);
        goto LABEL_143;
      case 5u:
        if (v9 != 40) {
          goto LABEL_136;
        }
        v5 |= 0x800u;
        uint64_t v22 = (char *)(v8 + 1);
        uint64_t v23 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_38;
        }
        int v24 = *v22;
        uint64_t v23 = v23 + (v24 << 7) - 128;
        if (v24 < 0)
        {
          uint64_t v73 = sub_188C138((uint64_t)v8, v23);
          *(void *)uint64_t v88 = v73;
          *(void *)(a1 + 160) = v74;
          if (!v73) {
            goto LABEL_174;
          }
        }
        else
        {
          uint64_t v22 = (char *)(v8 + 2);
LABEL_38:
          *(void *)uint64_t v88 = v22;
          *(void *)(a1 + 160) = v23;
        }
        goto LABEL_144;
      case 6u:
        if (v9 != 50) {
          goto LABEL_136;
        }
        *(_DWORD *)(a1 + 16) |= 0x20u;
        uint64_t v25 = *(void *)(a1 + 112);
        if (v25) {
          goto LABEL_50;
        }
        uint64_t v26 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          uint64_t v26 = (void *)*v26;
        }
        uint64_t v25 = sub_15C1918((uint64_t)v26);
        *(void *)(a1 + 112) = v25;
        goto LABEL_49;
      case 7u:
        if (v9 != 58) {
          goto LABEL_136;
        }
        *(_DWORD *)(a1 + 16) |= 0x40u;
        uint64_t v25 = *(void *)(a1 + 120);
        if (v25) {
          goto LABEL_50;
        }
        unint64_t v27 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          unint64_t v27 = (void *)*v27;
        }
        uint64_t v25 = sub_15C1918((uint64_t)v27);
        *(void *)(a1 + 120) = v25;
LABEL_49:
        int v8 = *(unsigned __int8 **)v88;
LABEL_50:
        uint64_t v18 = (uint64_t)sub_1198F14(a3, v25, v8);
        goto LABEL_143;
      case 8u:
        if (v9 != 64) {
          goto LABEL_136;
        }
        v5 |= 0x10000u;
        uint64_t v28 = (char *)(v8 + 1);
        uint64_t v29 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_55;
        }
        int v30 = *v28;
        uint64_t v29 = v29 + (v30 << 7) - 128;
        if (v30 < 0)
        {
          uint64_t v75 = sub_188C138((uint64_t)v8, v29);
          *(void *)uint64_t v88 = v75;
          *(unsigned char *)(a1 + 184) = v76 != 0;
          if (!v75) {
            goto LABEL_174;
          }
        }
        else
        {
          uint64_t v28 = (char *)(v8 + 2);
LABEL_55:
          *(void *)uint64_t v88 = v28;
          *(unsigned char *)(a1 + 184) = v29 != 0;
        }
        goto LABEL_144;
      case 9u:
        if (v9 != 74) {
          goto LABEL_136;
        }
        *(_DWORD *)(a1 + 16) |= 0x80u;
        uint64_t v31 = *(void **)(a1 + 128);
        if (!v31)
        {
          uint64_t v32 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v32 = (void *)*v32;
          }
          uint64_t v31 = sub_12F849C((uint64_t)v32);
          *(void *)(a1 + 128) = v31;
          int v8 = *(unsigned __int8 **)v88;
        }
        uint64_t v18 = sub_12D6AD4(a3, (uint64_t)v31, v8);
        goto LABEL_143;
      case 0xAu:
        if (v9 != 82) {
          goto LABEL_136;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v33 = *(void *)(a1 + 8);
        uint64_t v34 = (uint64_t *)(v33 & 0xFFFFFFFFFFFFFFFCLL);
        if (v33) {
          uint64_t v34 = (uint64_t *)*v34;
        }
        uint64_t v35 = (void *)(a1 + 72);
        goto LABEL_120;
      case 0xBu:
        if (v9 != 88) {
          goto LABEL_136;
        }
        v5 |= 0x2000u;
        uint64_t v37 = (char *)(v8 + 1);
        LODWORD(v36) = *v8;
        if ((v36 & 0x80) == 0) {
          goto LABEL_70;
        }
        int v38 = *v37;
        uint64_t v36 = v36 + (v38 << 7) - 128;
        if (v38 < 0)
        {
          uint64_t v77 = sub_188C138((uint64_t)v8, v36);
          *(void *)uint64_t v88 = v77;
          *(_DWORD *)(a1 + 172) = v78;
          if (!v77) {
            goto LABEL_174;
          }
        }
        else
        {
          uint64_t v37 = (char *)(v8 + 2);
LABEL_70:
          *(void *)uint64_t v88 = v37;
          *(_DWORD *)(a1 + 172) = v36;
        }
        goto LABEL_144;
      case 0xCu:
        if (v9 != 96) {
          goto LABEL_136;
        }
        v5 |= 0x4000u;
        uint64_t v40 = (char *)(v8 + 1);
        LODWORD(v39) = *v8;
        if ((v39 & 0x80) == 0) {
          goto LABEL_75;
        }
        int v41 = *v40;
        uint64_t v39 = v39 + (v41 << 7) - 128;
        if (v41 < 0)
        {
          uint64_t v79 = sub_188C138((uint64_t)v8, v39);
          *(void *)uint64_t v88 = v79;
          *(_DWORD *)(a1 + 176) = v80;
          if (!v79) {
            goto LABEL_174;
          }
        }
        else
        {
          uint64_t v40 = (char *)(v8 + 2);
LABEL_75:
          *(void *)uint64_t v88 = v40;
          *(_DWORD *)(a1 + 176) = v39;
        }
        goto LABEL_144;
      case 0xDu:
        if (v9 != 106) {
          goto LABEL_136;
        }
        *(_DWORD *)(a1 + 16) |= 0x100u;
        uint64_t v42 = *(void *)(a1 + 136);
        if (v42) {
          goto LABEL_87;
        }
        BOOL v43 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          BOOL v43 = (void *)*v43;
        }
        uint64_t v42 = sub_12EC07C((uint64_t)v43);
        *(void *)(a1 + 136) = v42;
        goto LABEL_86;
      case 0xEu:
        if (v9 != 114) {
          goto LABEL_136;
        }
        *(_DWORD *)(a1 + 16) |= 0x200u;
        uint64_t v42 = *(void *)(a1 + 144);
        if (v42) {
          goto LABEL_87;
        }
        uint64_t v44 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          uint64_t v44 = (void *)*v44;
        }
        uint64_t v42 = sub_12EC07C((uint64_t)v44);
        *(void *)(a1 + 144) = v42;
LABEL_86:
        int v8 = *(unsigned __int8 **)v88;
LABEL_87:
        uint64_t v18 = sub_12E1674(a3, v42, v8);
        goto LABEL_143;
      case 0xFu:
        if (v9 != 120) {
          goto LABEL_136;
        }
        unint64_t v45 = (char *)(v8 + 1);
        unint64_t v13 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_92;
        }
        int v46 = *v45;
        int v47 = v13 + (v46 << 7);
        unint64_t v13 = (v47 - 128);
        if (v46 < 0)
        {
          *(void *)uint64_t v88 = sub_188C138((uint64_t)v8, (v47 - 128));
          if (!*(void *)v88) {
            goto LABEL_174;
          }
          unint64_t v13 = v81;
        }
        else
        {
          unint64_t v45 = (char *)(v8 + 2);
LABEL_92:
          *(void *)uint64_t v88 = v45;
        }
        if (v13 > 3)
        {
          if (*v7) {
            uint64_t v86 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v86 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          int v87 = 15;
LABEL_168:
          sub_188C020(v87, v13, v86);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 0x8000u;
          *(_DWORD *)(a1 + 180) = v13;
        }
        goto LABEL_144;
      case 0x10u:
        if (v9 != 130) {
          goto LABEL_136;
        }
        uint64_t v48 = (char *)(v8 - 2);
        while (1)
        {
          uint64_t v49 = (unsigned __int8 *)(v48 + 2);
          *(void *)uint64_t v88 = v48 + 2;
          unint64_t v50 = *(_DWORD **)(a1 + 40);
          if (v50 && (uint64_t v51 = *(int *)(a1 + 32), (int)v51 < *v50))
          {
            *(_DWORD *)(a1 + 32) = v51 + 1;
            uint64_t v52 = *(void *)&v50[2 * v51 + 2];
          }
          else
          {
            uint64_t v53 = sub_12F8794(*(void *)(a1 + 24));
            uint64_t v52 = sub_188CDC8(a1 + 24, v53);
            uint64_t v49 = *(unsigned __int8 **)v88;
          }
          uint64_t v48 = sub_12E1704(a3, v52, v49);
          *(void *)uint64_t v88 = v48;
          if (!v48) {
            goto LABEL_174;
          }
          if (*(void *)a3 <= (unint64_t)v48 || *(_WORD *)v48 != 386) {
            goto LABEL_144;
          }
        }
      case 0x11u:
        if (v9 != 136) {
          goto LABEL_136;
        }
        v5 |= 0x20000u;
        char v54 = (char *)(v8 + 1);
        uint64_t v55 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_109;
        }
        int v56 = *v54;
        uint64_t v55 = v55 + (v56 << 7) - 128;
        if (v56 < 0)
        {
          uint64_t v82 = sub_188C138((uint64_t)v8, v55);
          *(void *)uint64_t v88 = v82;
          *(unsigned char *)(a1 + 185) = v83 != 0;
          if (!v82) {
            goto LABEL_174;
          }
        }
        else
        {
          char v54 = (char *)(v8 + 2);
LABEL_109:
          *(void *)uint64_t v88 = v54;
          *(unsigned char *)(a1 + 185) = v55 != 0;
        }
        goto LABEL_144;
      case 0x12u:
        if (v9 != 146) {
          goto LABEL_136;
        }
        *(_DWORD *)(a1 + 16) |= 0x400u;
        uint64_t v57 = *(void *)(a1 + 152);
        if (!v57)
        {
          char v58 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            char v58 = (void *)*v58;
          }
          uint64_t v57 = sub_12EC13C((uint64_t)v58);
          *(void *)(a1 + 152) = v57;
          int v8 = *(unsigned __int8 **)v88;
        }
        uint64_t v18 = (uint64_t)sub_12E1794(a3, v57, v8);
        goto LABEL_143;
      case 0x13u:
        if (v9 != 154) {
          goto LABEL_136;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v59 = *(void *)(a1 + 8);
        uint64_t v34 = (uint64_t *)(v59 & 0xFFFFFFFFFFFFFFFCLL);
        if (v59) {
          uint64_t v34 = (uint64_t *)*v34;
        }
        uint64_t v35 = (void *)(a1 + 80);
LABEL_120:
        int v60 = (std::string *)sub_1880F84(v35, v34);
        uint64_t v18 = (uint64_t)sub_188C244(v60, *(char **)v88, (uint64_t)a3);
        goto LABEL_143;
      case 0x14u:
        if (v9 != 162) {
          goto LABEL_136;
        }
        unint64_t v61 = (char *)(v8 - 2);
        while (1)
        {
          uint64_t v62 = (unsigned __int8 *)(v61 + 2);
          *(void *)uint64_t v88 = v61 + 2;
          uint64_t v63 = *(_DWORD **)(a1 + 64);
          if (v63 && (uint64_t v64 = *(int *)(a1 + 56), (int)v64 < *v63))
          {
            *(_DWORD *)(a1 + 56) = v64 + 1;
            uint64_t v65 = *(void *)&v63[2 * v64 + 2];
          }
          else
          {
            uint64_t v66 = sub_15C1918(*(void *)(a1 + 48));
            uint64_t v65 = sub_188CDC8(a1 + 48, v66);
            uint64_t v62 = *(unsigned __int8 **)v88;
          }
          unint64_t v61 = sub_1198F14(a3, v65, v62);
          *(void *)uint64_t v88 = v61;
          if (!v61) {
            goto LABEL_174;
          }
          if (*(void *)a3 <= (unint64_t)v61 || *(_WORD *)v61 != 418) {
            goto LABEL_144;
          }
        }
      case 0x15u:
        if (v9 != 168) {
          goto LABEL_136;
        }
        v5 |= 0x40000u;
        uint64_t v67 = (char *)(v8 + 1);
        uint64_t v68 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_135;
        }
        int v69 = *v67;
        uint64_t v68 = v68 + (v69 << 7) - 128;
        if (v69 < 0)
        {
          uint64_t v84 = sub_188C138((uint64_t)v8, v68);
          *(void *)uint64_t v88 = v84;
          *(unsigned char *)(a1 + 186) = v85 != 0;
          if (!v84) {
            goto LABEL_174;
          }
        }
        else
        {
          uint64_t v67 = (char *)(v8 + 2);
LABEL_135:
          *(void *)uint64_t v88 = v67;
          *(unsigned char *)(a1 + 186) = v68 != 0;
        }
        goto LABEL_144;
      default:
LABEL_136:
        if (v9) {
          BOOL v70 = (v9 & 7) == 4;
        }
        else {
          BOOL v70 = 1;
        }
        if (!v70)
        {
          if (*v7)
          {
            v71 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            v71 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            int v8 = *(unsigned __int8 **)v88;
          }
          uint64_t v18 = (uint64_t)sub_1885AC0(v9, v71, (char *)v8, a3);
LABEL_143:
          *(void *)uint64_t v88 = v18;
          if (!v18) {
            goto LABEL_174;
          }
LABEL_144:
          if (sub_11947B8((uint64_t)a3, (char **)v88, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_174:
        }
          *(void *)uint64_t v88 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v88;
    }
  }
}

char *sub_12E15E4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12EFAC0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_12E1674(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12DEC78(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_12E1704(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12F3D4C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_12E1794(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12DFE88(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_12E1824(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 0x1000) != 0)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 168);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 88);
    unsigned char *v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 40);
    v4[1] = v11;
    if (v11 > 0x7F) {
      unint64_t v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      unint64_t v12 = v4 + 2;
    }
    uint64_t v4 = sub_12EFCF0(v10, v12, a3);
    if ((v6 & 8) == 0)
    {
LABEL_10:
      if ((v6 & 0x10) == 0) {
        goto LABEL_11;
      }
      goto LABEL_25;
    }
  }
  else if ((v6 & 8) == 0)
  {
    goto LABEL_10;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v13 = *(void *)(a1 + 96);
  unsigned char *v4 = 26;
  unsigned int v14 = *(_DWORD *)(v13 + 20);
  v4[1] = v14;
  if (v14 > 0x7F) {
    int v15 = sub_188A9CC(v14, v4 + 1);
  }
  else {
    int v15 = v4 + 2;
  }
  uint64_t v4 = sub_12774A4(v13, v15, a3);
  if ((v6 & 0x10) == 0)
  {
LABEL_11:
    if ((v6 & 0x800) == 0) {
      goto LABEL_37;
    }
    goto LABEL_31;
  }
LABEL_25:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v16 = *(void *)(a1 + 104);
  unsigned char *v4 = 34;
  unsigned int v17 = *(_DWORD *)(v16 + 20);
  v4[1] = v17;
  if (v17 > 0x7F) {
    uint64_t v18 = sub_188A9CC(v17, v4 + 1);
  }
  else {
    uint64_t v18 = v4 + 2;
  }
  uint64_t v4 = sub_12774A4(v16, v18, a3);
  if ((v6 & 0x800) != 0)
  {
LABEL_31:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v19 = *(void *)(a1 + 160);
    unsigned char *v4 = 40;
    v4[1] = v19;
    if (v19 > 0x7F)
    {
      v4[1] = v19 | 0x80;
      unint64_t v20 = v19 >> 7;
      v4[2] = v19 >> 7;
      v4 += 3;
      if (v19 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v21 = v20 >> 14;
          v20 >>= 7;
          *v4++ = v20;
        }
        while (v21);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_37:
  if ((v6 & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v22 = *(void *)(a1 + 112);
    unsigned char *v4 = 50;
    unsigned int v23 = *(_DWORD *)(v22 + 44);
    v4[1] = v23;
    if (v23 > 0x7F) {
      int v24 = sub_188A9CC(v23, v4 + 1);
    }
    else {
      int v24 = v4 + 2;
    }
    uint64_t v4 = sub_15B0C0C(v22, v24, a3);
    if ((v6 & 0x40) == 0)
    {
LABEL_39:
      if ((v6 & 0x10000) == 0) {
        goto LABEL_40;
      }
      goto LABEL_56;
    }
  }
  else if ((v6 & 0x40) == 0)
  {
    goto LABEL_39;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v25 = *(void *)(a1 + 120);
  unsigned char *v4 = 58;
  unsigned int v26 = *(_DWORD *)(v25 + 44);
  v4[1] = v26;
  if (v26 > 0x7F) {
    unint64_t v27 = sub_188A9CC(v26, v4 + 1);
  }
  else {
    unint64_t v27 = v4 + 2;
  }
  uint64_t v4 = sub_15B0C0C(v25, v27, a3);
  if ((v6 & 0x10000) == 0)
  {
LABEL_40:
    if ((v6 & 0x80) == 0) {
      goto LABEL_41;
    }
    goto LABEL_59;
  }
LABEL_56:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v28 = *(unsigned char *)(a1 + 184);
  unsigned char *v4 = 64;
  v4[1] = v28;
  v4 += 2;
  if ((v6 & 0x80) == 0)
  {
LABEL_41:
    if ((v6 & 1) == 0) {
      goto LABEL_42;
    }
    goto LABEL_65;
  }
LABEL_59:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v29 = *(void *)(a1 + 128);
  unsigned char *v4 = 74;
  unsigned int v30 = *(_DWORD *)(v29 + 20);
  v4[1] = v30;
  if (v30 > 0x7F) {
    uint64_t v31 = sub_188A9CC(v30, v4 + 1);
  }
  else {
    uint64_t v31 = v4 + 2;
  }
  uint64_t v4 = sub_12F16E4(v29, v31, a3);
  if ((v6 & 1) == 0)
  {
LABEL_42:
    if ((v6 & 0x2000) == 0) {
      goto LABEL_72;
    }
    goto LABEL_66;
  }
LABEL_65:
  uint64_t v4 = sub_117A0AC(a3, 10, (const void **)(*(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x2000) == 0) {
    goto LABEL_72;
  }
LABEL_66:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  unint64_t v32 = *(int *)(a1 + 172);
  unsigned char *v4 = 88;
  v4[1] = v32;
  if (v32 > 0x7F)
  {
    v4[1] = v32 | 0x80;
    unint64_t v33 = v32 >> 7;
    v4[2] = v32 >> 7;
    v4 += 3;
    if (v32 >= 0x4000)
    {
      do
      {
        *(v4 - 1) |= 0x80u;
        unint64_t v34 = v33 >> 14;
        v33 >>= 7;
        *v4++ = v33;
      }
      while (v34);
    }
  }
  else
  {
    v4 += 2;
  }
LABEL_72:
  if ((v6 & 0x4000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v35 = *(int *)(a1 + 176);
    unsigned char *v4 = 96;
    v4[1] = v35;
    if (v35 > 0x7F)
    {
      v4[1] = v35 | 0x80;
      unint64_t v36 = v35 >> 7;
      v4[2] = v35 >> 7;
      v4 += 3;
      if (v35 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v37 = v36 >> 14;
          v36 >>= 7;
          *v4++ = v36;
        }
        while (v37);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x100) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v38 = *(void *)(a1 + 136);
    unsigned char *v4 = 106;
    unsigned int v39 = *(_DWORD *)(v38 + 20);
    v4[1] = v39;
    if (v39 > 0x7F) {
      uint64_t v40 = sub_188A9CC(v39, v4 + 1);
    }
    else {
      uint64_t v40 = v4 + 2;
    }
    uint64_t v4 = sub_12DF1EC(v38, (unint64_t)v40, a3);
    if ((v6 & 0x200) == 0)
    {
LABEL_81:
      if ((v6 & 0x8000) == 0) {
        goto LABEL_101;
      }
      goto LABEL_95;
    }
  }
  else if ((v6 & 0x200) == 0)
  {
    goto LABEL_81;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v41 = *(void *)(a1 + 144);
  unsigned char *v4 = 114;
  unsigned int v42 = *(_DWORD *)(v41 + 20);
  v4[1] = v42;
  if (v42 > 0x7F) {
    BOOL v43 = sub_188A9CC(v42, v4 + 1);
  }
  else {
    BOOL v43 = v4 + 2;
  }
  uint64_t v4 = sub_12DF1EC(v41, (unint64_t)v43, a3);
  if ((v6 & 0x8000) != 0)
  {
LABEL_95:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v44 = *(int *)(a1 + 180);
    unsigned char *v4 = 120;
    v4[1] = v44;
    if (v44 > 0x7F)
    {
      v4[1] = v44 | 0x80;
      unint64_t v45 = v44 >> 7;
      v4[2] = v44 >> 7;
      v4 += 3;
      if (v44 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v46 = v45 >> 14;
          v45 >>= 7;
          *v4++ = v45;
        }
        while (v46);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_101:
  int v47 = *(_DWORD *)(a1 + 32);
  if (v47)
  {
    for (int i = 0; i != v47; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v49 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *(_WORD *)uint64_t v4 = 386;
      unsigned int v50 = *(_DWORD *)(v49 + 20);
      v4[2] = v50;
      if (v50 > 0x7F) {
        uint64_t v51 = sub_188A9CC(v50, v4 + 2);
      }
      else {
        uint64_t v51 = v4 + 3;
      }
      uint64_t v4 = sub_12F4034(v49, (unint64_t)v51, a3);
    }
  }
  if ((v6 & 0x20000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v60 = *(unsigned char *)(a1 + 185);
    *(_WORD *)uint64_t v4 = 392;
    v4[2] = v60;
    v4 += 3;
    if ((v6 & 0x400) == 0)
    {
LABEL_111:
      if ((v6 & 2) == 0) {
        goto LABEL_113;
      }
      goto LABEL_112;
    }
  }
  else if ((v6 & 0x400) == 0)
  {
    goto LABEL_111;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v61 = *(void *)(a1 + 152);
  *(_WORD *)uint64_t v4 = 402;
  unsigned int v62 = *(_DWORD *)(v61 + 20);
  v4[2] = v62;
  if (v62 > 0x7F) {
    uint64_t v63 = sub_188A9CC(v62, v4 + 2);
  }
  else {
    uint64_t v63 = v4 + 3;
  }
  uint64_t v4 = sub_12E0298(v61, (unint64_t)v63, a3);
  if ((v6 & 2) != 0) {
LABEL_112:
  }
    uint64_t v4 = sub_117A0AC(a3, 19, (const void **)(*(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL), v4);
LABEL_113:
  int v52 = *(_DWORD *)(a1 + 56);
  if (v52)
  {
    for (int j = 0; j != v52; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v54 = *(void *)(*(void *)(a1 + 64) + 8 * j + 8);
      *(_WORD *)uint64_t v4 = 418;
      unsigned int v55 = *(_DWORD *)(v54 + 44);
      v4[2] = v55;
      if (v55 > 0x7F) {
        int v56 = sub_188A9CC(v55, v4 + 2);
      }
      else {
        int v56 = v4 + 3;
      }
      uint64_t v4 = sub_15B0C0C(v54, v56, a3);
    }
  }
  if ((v6 & 0x40000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v57 = *(unsigned char *)(a1 + 186);
    *(_WORD *)uint64_t v4 = 424;
    v4[2] = v57;
    v4 += 3;
  }
  uint64_t v58 = *(void *)(a1 + 8);
  if ((v58 & 1) == 0) {
    return v4;
  }
  unint64_t v64 = v58 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v64 + 31) < 0)
  {
    uint64_t v65 = *(void **)(v64 + 8);
    uint64_t v66 = *(void *)(v64 + 16);
  }
  else
  {
    uint64_t v65 = (void *)(v64 + 8);
    LODWORD(v66) = *(unsigned __int8 *)(v64 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v66)
  {
    uint64_t v67 = (int)v66;
    memcpy(v4, v65, (int)v66);
    v4 += v67;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v65, v66, v4);
}

uint64_t sub_12E2108(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = 2 * v2;
  uint64_t v4 = *(void *)(a1 + 40);
  if (v4) {
    int v5 = (uint64_t *)(v4 + 8);
  }
  else {
    int v5 = 0;
  }
  if (v2)
  {
    uint64_t v6 = 8 * v2;
    do
    {
      uint64_t v7 = *v5++;
      uint64_t v8 = sub_12F41F8(v7);
      v3 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6);
      v6 -= 8;
    }
    while (v6);
  }
  uint64_t v9 = *(int *)(a1 + 56);
  uint64_t v10 = v3 + 2 * v9;
  uint64_t v11 = *(void *)(a1 + 64);
  if (v11) {
    unint64_t v12 = (uint64_t *)(v11 + 8);
  }
  else {
    unint64_t v12 = 0;
  }
  if (v9)
  {
    uint64_t v13 = 8 * v9;
    do
    {
      uint64_t v14 = *v12++;
      uint64_t v15 = sub_15B0D90(v14);
      v10 += v15 + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6);
      v13 -= 8;
    }
    while (v13);
  }
  int v16 = *(_DWORD *)(a1 + 16);
  if (!(_BYTE)v16) {
    goto LABEL_23;
  }
  if (v16)
  {
    unint64_t v24 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v25 = *(unsigned __int8 *)(v24 + 23);
    uint64_t v26 = *(void *)(v24 + 8);
    if ((v25 & 0x80u) == 0) {
      uint64_t v26 = v25;
    }
    v10 += v26 + ((9 * (__clz(v26 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v16 & 2) == 0)
    {
LABEL_16:
      if ((v16 & 4) == 0) {
        goto LABEL_17;
      }
      goto LABEL_53;
    }
  }
  else if ((v16 & 2) == 0)
  {
    goto LABEL_16;
  }
  unint64_t v27 = *(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v28 = *(unsigned __int8 *)(v27 + 23);
  uint64_t v29 = *(void *)(v27 + 8);
  if ((v28 & 0x80u) == 0) {
    uint64_t v29 = v28;
  }
  v10 += v29 + ((9 * (__clz(v29 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v16 & 4) == 0)
  {
LABEL_17:
    if ((v16 & 8) == 0) {
      goto LABEL_18;
    }
    goto LABEL_54;
  }
LABEL_53:
  uint64_t v30 = sub_12EFE34(*(void *)(a1 + 88));
  v10 += v30 + ((9 * (__clz(v30 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v16 & 8) == 0)
  {
LABEL_18:
    if ((v16 & 0x10) == 0) {
      goto LABEL_19;
    }
    goto LABEL_55;
  }
LABEL_54:
  uint64_t v31 = sub_127775C(*(void *)(a1 + 96));
  v10 += v31 + ((9 * (__clz(v31 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v16 & 0x10) == 0)
  {
LABEL_19:
    if ((v16 & 0x20) == 0) {
      goto LABEL_20;
    }
LABEL_56:
    uint64_t v33 = sub_15B0D90(*(void *)(a1 + 112));
    v10 += v33 + ((9 * (__clz(v33 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v16 & 0x40) == 0)
    {
LABEL_21:
      if ((v16 & 0x80) == 0) {
        goto LABEL_23;
      }
      goto LABEL_22;
    }
    goto LABEL_57;
  }
LABEL_55:
  uint64_t v32 = sub_127775C(*(void *)(a1 + 104));
  v10 += v32 + ((9 * (__clz(v32 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v16 & 0x20) != 0) {
    goto LABEL_56;
  }
LABEL_20:
  if ((v16 & 0x40) == 0) {
    goto LABEL_21;
  }
LABEL_57:
  uint64_t v34 = sub_15B0D90(*(void *)(a1 + 120));
  v10 += v34 + ((9 * (__clz(v34 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v16 & 0x80) != 0)
  {
LABEL_22:
    uint64_t v17 = sub_12F18AC(*(void *)(a1 + 128));
    v10 += v17 + ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_23:
  if ((v16 & 0xFF00) == 0) {
    goto LABEL_36;
  }
  if ((v16 & 0x100) != 0)
  {
    uint64_t v35 = sub_12DF614(*(void *)(a1 + 136));
    v10 += v35 + ((9 * (__clz(v35 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v16 & 0x200) == 0)
    {
LABEL_26:
      if ((v16 & 0x400) == 0) {
        goto LABEL_27;
      }
      goto LABEL_61;
    }
  }
  else if ((v16 & 0x200) == 0)
  {
    goto LABEL_26;
  }
  uint64_t v36 = sub_12DF614(*(void *)(a1 + 144));
  v10 += v36 + ((9 * (__clz(v36 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v16 & 0x400) == 0)
  {
LABEL_27:
    if ((v16 & 0x800) == 0) {
      goto LABEL_28;
    }
    goto LABEL_62;
  }
LABEL_61:
  uint64_t v37 = sub_12E04A8(*(void *)(a1 + 152));
  v10 += v37 + ((9 * (__clz(v37 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v16 & 0x800) == 0)
  {
LABEL_28:
    if ((v16 & 0x1000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_63;
  }
LABEL_62:
  v10 += ((9 * (__clz(*(void *)(a1 + 160) | 1) ^ 0x3F) + 73) >> 6) + 1;
  if ((v16 & 0x1000) == 0)
  {
LABEL_29:
    if ((v16 & 0x2000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_67;
  }
LABEL_63:
  int v38 = *(_DWORD *)(a1 + 168);
  uint64_t v39 = ((9 * (__clz(v38 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if (v38 >= 0) {
    uint64_t v40 = v39;
  }
  else {
    uint64_t v40 = 11;
  }
  v10 += v40;
  if ((v16 & 0x2000) == 0)
  {
LABEL_30:
    if ((v16 & 0x4000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_71;
  }
LABEL_67:
  int v41 = *(_DWORD *)(a1 + 172);
  uint64_t v42 = ((9 * (__clz(v41 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if (v41 >= 0) {
    uint64_t v43 = v42;
  }
  else {
    uint64_t v43 = 11;
  }
  v10 += v43;
  if ((v16 & 0x4000) == 0)
  {
LABEL_31:
    if ((v16 & 0x8000) == 0) {
      goto LABEL_36;
    }
    goto LABEL_32;
  }
LABEL_71:
  int v44 = *(_DWORD *)(a1 + 176);
  uint64_t v45 = ((9 * (__clz(v44 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if (v44 >= 0) {
    uint64_t v46 = v45;
  }
  else {
    uint64_t v46 = 11;
  }
  v10 += v46;
  if ((v16 & 0x8000) != 0)
  {
LABEL_32:
    int v18 = *(_DWORD *)(a1 + 180);
    uint64_t v19 = ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if (v18 >= 0) {
      uint64_t v20 = v19;
    }
    else {
      uint64_t v20 = 11;
    }
    v10 += v20;
  }
LABEL_36:
  uint64_t v21 = v10 + 2;
  if ((v16 & 0x10000) == 0) {
    uint64_t v21 = v10;
  }
  if ((v16 & 0x20000) != 0) {
    v21 += 3;
  }
  if ((v16 & 0x40000) != 0) {
    v21 += 3;
  }
  if ((v16 & 0x70000) != 0) {
    uint64_t result = v21;
  }
  else {
    uint64_t result = v10;
  }
  uint64_t v23 = *(void *)(a1 + 8);
  if (v23)
  {
    unint64_t v47 = v23 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v47 + 31) < 0) {
      uint64_t v48 = *(void *)(v47 + 16);
    }
    else {
      uint64_t v48 = *(unsigned __int8 *)(v47 + 31);
    }
    result += v48;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

void sub_12E25AC(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    int v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_1301D54((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    uint64_t v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    uint64_t v11 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_10E4FFC((uint64_t *)(a1 + 48), v11, v10, v9, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v12 = *(_DWORD *)(a1 + 56) + v9;
    *(_DWORD *)(a1 + 56) = v12;
    uint64_t v13 = *(int **)(a1 + 64);
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 16);
  if (!(_BYTE)v14) {
    goto LABEL_72;
  }
  if ((v14 & 1) == 0)
  {
    if ((v14 & 2) == 0) {
      goto LABEL_10;
    }
LABEL_15:
    int v18 = (long long *)(*(void *)(a2 + 80) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v19 = *(void *)(a1 + 8);
    uint64_t v20 = (uint64_t *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
    if (v19) {
      uint64_t v20 = (uint64_t *)*v20;
    }
    sub_1881DF4((std::string **)(a1 + 80), v18, v20);
    if ((v14 & 4) == 0) {
      goto LABEL_26;
    }
    goto LABEL_18;
  }
  uint64_t v15 = (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 16) |= 1u;
  uint64_t v16 = *(void *)(a1 + 8);
  uint64_t v17 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
  if (v16) {
    uint64_t v17 = (uint64_t *)*v17;
  }
  sub_1881DF4((std::string **)(a1 + 72), v15, v17);
  if ((v14 & 2) != 0) {
    goto LABEL_15;
  }
LABEL_10:
  if ((v14 & 4) != 0)
  {
LABEL_18:
    *(_DWORD *)(a1 + 16) |= 4u;
    uint64_t v21 = *(void *)(a1 + 88);
    if (!v21)
    {
      uint64_t v22 = *(void *)(a1 + 8);
      uint64_t v23 = (void *)(v22 & 0xFFFFFFFFFFFFFFFCLL);
      if (v22) {
        uint64_t v23 = (void *)*v23;
      }
      uint64_t v21 = sub_12F82E4((uint64_t)v23);
      *(void *)(a1 + 88) = v21;
    }
    if (*(void *)(a2 + 88)) {
      unint64_t v24 = *(uint64_t (****)())(a2 + 88);
    }
    else {
      unint64_t v24 = &off_2531E90;
    }
    sub_12E2AB4(v21, (uint64_t)v24);
  }
LABEL_26:
  if ((v14 & 8) != 0)
  {
    *(_DWORD *)(a1 + 16) |= 8u;
    uint64_t v25 = *(void *)(a1 + 96);
    if (!v25)
    {
      uint64_t v26 = *(void *)(a1 + 8);
      unint64_t v27 = (void *)(v26 & 0xFFFFFFFFFFFFFFFCLL);
      if (v26) {
        unint64_t v27 = (void *)*v27;
      }
      uint64_t v25 = sub_12846F4((uint64_t)v27);
      *(void *)(a1 + 96) = v25;
    }
    if (*(void *)(a2 + 96)) {
      uint64_t v28 = *(uint64_t (****)())(a2 + 96);
    }
    else {
      uint64_t v28 = &off_252FB60;
    }
    sub_1275F68(v25, (uint64_t)v28);
  }
  if ((v14 & 0x10) != 0)
  {
    *(_DWORD *)(a1 + 16) |= 0x10u;
    uint64_t v29 = *(void *)(a1 + 104);
    if (!v29)
    {
      uint64_t v30 = *(void *)(a1 + 8);
      uint64_t v31 = (void *)(v30 & 0xFFFFFFFFFFFFFFFCLL);
      if (v30) {
        uint64_t v31 = (void *)*v31;
      }
      uint64_t v29 = sub_12846F4((uint64_t)v31);
      *(void *)(a1 + 104) = v29;
    }
    if (*(void *)(a2 + 104)) {
      uint64_t v32 = *(uint64_t (****)())(a2 + 104);
    }
    else {
      uint64_t v32 = &off_252FB60;
    }
    sub_1275F68(v29, (uint64_t)v32);
  }
  if ((v14 & 0x20) != 0)
  {
    *(_DWORD *)(a1 + 16) |= 0x20u;
    uint64_t v33 = *(void *)(a1 + 112);
    if (!v33)
    {
      uint64_t v34 = *(void *)(a1 + 8);
      uint64_t v35 = (void *)(v34 & 0xFFFFFFFFFFFFFFFCLL);
      if (v34) {
        uint64_t v35 = (void *)*v35;
      }
      uint64_t v33 = sub_15C1918((uint64_t)v35);
      *(void *)(a1 + 112) = v33;
    }
    if (*(void *)(a2 + 112)) {
      uint64_t v36 = *(uint64_t (****)())(a2 + 112);
    }
    else {
      uint64_t v36 = &off_253F1A0;
    }
    sub_15B0E24(v33, (uint64_t)v36);
    if ((v14 & 0x40) == 0)
    {
LABEL_46:
      if ((v14 & 0x80) == 0) {
        goto LABEL_72;
      }
      goto LABEL_64;
    }
  }
  else if ((v14 & 0x40) == 0)
  {
    goto LABEL_46;
  }
  *(_DWORD *)(a1 + 16) |= 0x40u;
  uint64_t v37 = *(void *)(a1 + 120);
  if (!v37)
  {
    uint64_t v38 = *(void *)(a1 + 8);
    uint64_t v39 = (void *)(v38 & 0xFFFFFFFFFFFFFFFCLL);
    if (v38) {
      uint64_t v39 = (void *)*v39;
    }
    uint64_t v37 = sub_15C1918((uint64_t)v39);
    *(void *)(a1 + 120) = v37;
  }
  if (*(void *)(a2 + 120)) {
    uint64_t v40 = *(uint64_t (****)())(a2 + 120);
  }
  else {
    uint64_t v40 = &off_253F1A0;
  }
  sub_15B0E24(v37, (uint64_t)v40);
  if ((v14 & 0x80) != 0)
  {
LABEL_64:
    *(_DWORD *)(a1 + 16) |= 0x80u;
    int v41 = *(void **)(a1 + 128);
    if (!v41)
    {
      uint64_t v42 = *(void *)(a1 + 8);
      uint64_t v43 = (void *)(v42 & 0xFFFFFFFFFFFFFFFCLL);
      if (v42) {
        uint64_t v43 = (void *)*v43;
      }
      int v41 = sub_12F849C((uint64_t)v43);
      *(void *)(a1 + 128) = v41;
    }
    if (*(void *)(a2 + 128)) {
      int v44 = *(uint64_t (****)())(a2 + 128);
    }
    else {
      int v44 = &off_2531F48;
    }
    sub_12DC53C((uint64_t)v41, (uint64_t)v44);
  }
LABEL_72:
  if ((v14 & 0xFF00) == 0) {
    goto LABEL_83;
  }
  if ((v14 & 0x100) != 0)
  {
    *(_DWORD *)(a1 + 16) |= 0x100u;
    uint64_t v46 = *(void *)(a1 + 136);
    if (!v46)
    {
      uint64_t v47 = *(void *)(a1 + 8);
      uint64_t v48 = (void *)(v47 & 0xFFFFFFFFFFFFFFFCLL);
      if (v47) {
        uint64_t v48 = (void *)*v48;
      }
      uint64_t v46 = sub_12EC07C((uint64_t)v48);
      *(void *)(a1 + 136) = v46;
    }
    if (*(void *)(a2 + 136)) {
      uint64_t v49 = *(uint64_t (****)())(a2 + 136);
    }
    else {
      uint64_t v49 = &off_2531910;
    }
    sub_12DF91C(v46, (uint64_t)v49);
    if ((v14 & 0x200) == 0)
    {
LABEL_75:
      if ((v14 & 0x400) == 0) {
        goto LABEL_76;
      }
      goto LABEL_109;
    }
  }
  else if ((v14 & 0x200) == 0)
  {
    goto LABEL_75;
  }
  *(_DWORD *)(a1 + 16) |= 0x200u;
  uint64_t v50 = *(void *)(a1 + 144);
  if (!v50)
  {
    uint64_t v51 = *(void *)(a1 + 8);
    int v52 = (void *)(v51 & 0xFFFFFFFFFFFFFFFCLL);
    if (v51) {
      int v52 = (void *)*v52;
    }
    uint64_t v50 = sub_12EC07C((uint64_t)v52);
    *(void *)(a1 + 144) = v50;
  }
  if (*(void *)(a2 + 144)) {
    uint64_t v53 = *(uint64_t (****)())(a2 + 144);
  }
  else {
    uint64_t v53 = &off_2531910;
  }
  sub_12DF91C(v50, (uint64_t)v53);
  if ((v14 & 0x400) == 0)
  {
LABEL_76:
    if ((v14 & 0x800) == 0) {
      goto LABEL_77;
    }
    goto LABEL_117;
  }
LABEL_109:
  *(_DWORD *)(a1 + 16) |= 0x400u;
  uint64_t v54 = *(void *)(a1 + 152);
  if (!v54)
  {
    uint64_t v55 = *(void *)(a1 + 8);
    int v56 = (void *)(v55 & 0xFFFFFFFFFFFFFFFCLL);
    if (v55) {
      int v56 = (void *)*v56;
    }
    uint64_t v54 = sub_12EC13C((uint64_t)v56);
    *(void *)(a1 + 152) = v54;
  }
  if (*(void *)(a2 + 152)) {
    char v57 = *(uint64_t (****)())(a2 + 152);
  }
  else {
    char v57 = &off_2531998;
  }
  sub_12E05C4(v54, (uint64_t)v57);
  if ((v14 & 0x800) == 0)
  {
LABEL_77:
    if ((v14 & 0x1000) == 0) {
      goto LABEL_78;
    }
    goto LABEL_118;
  }
LABEL_117:
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  if ((v14 & 0x1000) == 0)
  {
LABEL_78:
    if ((v14 & 0x2000) == 0) {
      goto LABEL_79;
    }
    goto LABEL_119;
  }
LABEL_118:
  *(_DWORD *)(a1 + 168) = *(_DWORD *)(a2 + 168);
  if ((v14 & 0x2000) == 0)
  {
LABEL_79:
    if ((v14 & 0x4000) == 0) {
      goto LABEL_80;
    }
LABEL_120:
    *(_DWORD *)(a1 + 176) = *(_DWORD *)(a2 + 176);
    if ((v14 & 0x8000) == 0) {
      goto LABEL_82;
    }
    goto LABEL_81;
  }
LABEL_119:
  *(_DWORD *)(a1 + 172) = *(_DWORD *)(a2 + 172);
  if ((v14 & 0x4000) != 0) {
    goto LABEL_120;
  }
LABEL_80:
  if ((v14 & 0x8000) != 0) {
LABEL_81:
  }
    *(_DWORD *)(a1 + 180) = *(_DWORD *)(a2 + 180);
LABEL_82:
  *(_DWORD *)(a1 + 16) |= v14;
LABEL_83:
  if ((v14 & 0x70000) == 0) {
    goto LABEL_89;
  }
  if ((v14 & 0x10000) == 0)
  {
    if ((v14 & 0x20000) == 0) {
      goto LABEL_86;
    }
LABEL_123:
    *(unsigned char *)(a1 + 185) = *(unsigned char *)(a2 + 185);
    if ((v14 & 0x40000) == 0) {
      goto LABEL_88;
    }
    goto LABEL_87;
  }
  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
  if ((v14 & 0x20000) != 0) {
    goto LABEL_123;
  }
LABEL_86:
  if ((v14 & 0x40000) != 0) {
LABEL_87:
  }
    *(unsigned char *)(a1 + 186) = *(unsigned char *)(a2 + 186);
LABEL_88:
  *(_DWORD *)(a1 + 16) |= v14;
LABEL_89:
  uint64_t v45 = *(void *)(a2 + 8);
  if (v45)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v45 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_12E2AB4(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    int v5 = (uint64_t *)(*(void *)(a2 + 32) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 16, *(_DWORD *)(a2 + 24));
    sub_1302278((uint64_t *)(a1 + 16), v6, v5, v4, **(_DWORD **)(a1 + 32) - *(_DWORD *)(a1 + 24));
    int v7 = *(_DWORD *)(a1 + 24) + v4;
    *(_DWORD *)(a1 + 24) = v7;
    uint64_t v8 = *(int **)(a1 + 32);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_12E2B84(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 56);
  while ((int)v2 >= 1)
  {
    uint64_t v3 = v2 - 1;
    char v4 = sub_15B0F18(*(void *)(*(void *)(a1 + 64) + 8 * v2));
    uint64_t v2 = v3;
    if ((v4 & 1) == 0) {
      return 0;
    }
  }
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 4) != 0)
  {
    uint64_t result = sub_11A0A80(*(void *)(a1 + 88) + 16);
    if (!result) {
      return result;
    }
    int v6 = *(_DWORD *)(a1 + 16);
  }
  if ((v6 & 8) != 0)
  {
    uint64_t result = sub_12761C0(*(void *)(a1 + 96));
    if (!result) {
      return result;
    }
    int v6 = *(_DWORD *)(a1 + 16);
  }
  if ((v6 & 0x10) != 0)
  {
    uint64_t result = sub_12761C0(*(void *)(a1 + 104));
    if (!result) {
      return result;
    }
    int v6 = *(_DWORD *)(a1 + 16);
  }
  if ((v6 & 0x20) != 0)
  {
    uint64_t result = sub_15B0F18(*(void *)(a1 + 112));
    if (!result) {
      return result;
    }
    int v6 = *(_DWORD *)(a1 + 16);
  }
  if ((v6 & 0x40) != 0)
  {
    uint64_t result = sub_15B0F18(*(void *)(a1 + 120));
    if (!result) {
      return result;
    }
    int v6 = *(_DWORD *)(a1 + 16);
  }
  if ((v6 & 0x80) != 0)
  {
    uint64_t v7 = *(void *)(a1 + 128);
    if ((*(unsigned char *)(v7 + 16) & 0x20) != 0)
    {
      uint64_t result = sub_15B06D8(*(void *)(v7 + 64));
      if (!result) {
        return result;
      }
      int v6 = *(_DWORD *)(a1 + 16);
    }
  }
  if ((v6 & 0x100) != 0)
  {
    uint64_t result = sub_12DFC48(*(void *)(a1 + 136));
    if (!result) {
      return result;
    }
    int v6 = *(_DWORD *)(a1 + 16);
  }
  if ((v6 & 0x200) != 0)
  {
    uint64_t result = sub_12DFC48(*(void *)(a1 + 144));
    if (!result) {
      return result;
    }
    int v6 = *(_DWORD *)(a1 + 16);
  }
  if ((v6 & 0x400) == 0) {
    return 1;
  }
  uint64_t result = sub_12E0738(*(void *)(a1 + 152));
  if (result) {
    return 1;
  }
  return result;
}

uint64_t sub_12E2C98(uint64_t a1)
{
  return sub_11A0A80(a1 + 16);
}

void *sub_12E2CA0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap.fields.DirectionsContext");
}

void *sub_12E2CB0(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  char v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_12E2D34((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void ***sub_12E2D34(uint64_t a1)
{
  uint64_t v3 = *(uint64_t **)(a1 + 24);
  uint64_t v2 = (void ***)(a1 + 24);
  if (v3 != &qword_2550250) {
    sub_1881C6C(v2);
  }
  uint64_t result = (void ***)(a1 + 32);
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C(result);
  }
  if ((uint64_t (***)())a1 != &off_2531A98)
  {
    uint64_t v5 = *(void *)(a1 + 40);
    if (v5)
    {
      sub_12F12A0(v5);
      operator delete();
    }
    uint64_t v6 = *(void *)(a1 + 48);
    if (v6)
    {
      sub_12F12A0(v6);
      operator delete();
    }
    uint64_t result = *(void ****)(a1 + 56);
    if (result)
    {
      sub_15B0994();
      operator delete();
    }
  }
  return result;
}

void sub_12E2E0C(void *a1)
{
  sub_12E2CB0(a1);

  operator delete();
}

uint64_t sub_12E2E44(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 0x1F) == 0) {
    goto LABEL_8;
  }
  if (v2)
  {
    unint64_t v5 = *(void *)(result + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v5 + 23) < 0)
    {
      **(unsigned char **)unint64_t v5 = 0;
      *(void *)(v5 + 8) = 0;
      if ((v2 & 2) != 0) {
        goto LABEL_20;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v5 = 0;
      *(unsigned char *)(v5 + 23) = 0;
      if ((v2 & 2) != 0) {
        goto LABEL_20;
      }
    }
LABEL_4:
    if ((v2 & 4) == 0) {
      goto LABEL_5;
    }
LABEL_24:
    uint64_t result = sub_12DA0CC(*(void *)(result + 40));
    if ((v2 & 8) == 0)
    {
LABEL_6:
      if ((v2 & 0x10) == 0) {
        goto LABEL_8;
      }
      goto LABEL_7;
    }
    goto LABEL_25;
  }
  if ((v2 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_20:
  unint64_t v6 = *(void *)(result + 32) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v6 + 23) < 0)
  {
    **(unsigned char **)unint64_t v6 = 0;
    *(void *)(v6 + 8) = 0;
    if ((v2 & 4) != 0) {
      goto LABEL_24;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v6 = 0;
    *(unsigned char *)(v6 + 23) = 0;
    if ((v2 & 4) != 0) {
      goto LABEL_24;
    }
  }
LABEL_5:
  if ((v2 & 8) == 0) {
    goto LABEL_6;
  }
LABEL_25:
  uint64_t result = sub_12DA0CC(*(void *)(v1 + 48));
  if ((v2 & 0x10) != 0) {
LABEL_7:
  }
    uint64_t result = (uint64_t)sub_15B09D0(*(void *)(v1 + 56));
LABEL_8:
  if ((v2 & 0xE0) != 0)
  {
    *(_DWORD *)(v1 + 72) = 0;
    *(void *)(v1 + 64) = 0;
  }
  if ((v2 & 0xF00) != 0)
  {
    *(void *)(v1 + 84) = 0;
    *(void *)(v1 + 76) = 0;
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_12E2F54(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v61 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v61, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (unsigned __int8 *)(*(void *)v61 + 1);
    unsigned int v9 = **(unsigned char **)v61;
    if ((char)**(unsigned char **)v61 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        uint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v61, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (unsigned __int8 *)(*(void *)v61 + 2);
      }
    }
    *(void *)uint64_t v61 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_75;
        }
        v5 |= 0x20u;
        int v12 = (char *)(v8 + 1);
        int v13 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        int v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          int v12 = (char *)(v8 + 2);
LABEL_13:
          *(void *)uint64_t v61 = v12;
          *(_DWORD *)(a1 + 64) = v13;
          goto LABEL_83;
        }
        uint64_t v47 = sub_188C0D0((uint64_t)v8, v13);
        *(void *)uint64_t v61 = v47;
        *(_DWORD *)(a1 + 64) = v48;
        if (v47) {
          goto LABEL_83;
        }
        goto LABEL_111;
      case 2u:
        if (v9 != 16) {
          goto LABEL_75;
        }
        uint64_t v15 = (char *)(v8 + 1);
        unint64_t v16 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_18;
        }
        int v17 = *v15;
        int v18 = v16 + (v17 << 7);
        unint64_t v16 = (v18 - 128);
        if (v17 < 0)
        {
          *(void *)uint64_t v61 = sub_188C138((uint64_t)v8, (v18 - 128));
          if (!*(void *)v61) {
            goto LABEL_111;
          }
          unint64_t v16 = v49;
        }
        else
        {
          uint64_t v15 = (char *)(v8 + 2);
LABEL_18:
          *(void *)uint64_t v61 = v15;
        }
        if (sub_136FC18())
        {
          *(_DWORD *)(a1 + 16) |= 0x40u;
          *(_DWORD *)(a1 + 68) = v16;
          goto LABEL_83;
        }
        if (*v7) {
          uint64_t v59 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          uint64_t v59 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v60 = 2;
        goto LABEL_105;
      case 3u:
        if (v9 != 24) {
          goto LABEL_75;
        }
        uint64_t v19 = (char *)(v8 + 1);
        unint64_t v16 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_25;
        }
        int v20 = *v19;
        int v21 = v16 + (v20 << 7);
        unint64_t v16 = (v21 - 128);
        if (v20 < 0)
        {
          *(void *)uint64_t v61 = sub_188C138((uint64_t)v8, (v21 - 128));
          if (!*(void *)v61) {
            goto LABEL_111;
          }
          unint64_t v16 = v50;
        }
        else
        {
          uint64_t v19 = (char *)(v8 + 2);
LABEL_25:
          *(void *)uint64_t v61 = v19;
        }
        if (sub_1321814(v16))
        {
          *(_DWORD *)(a1 + 16) |= 0x80u;
          *(_DWORD *)(a1 + 72) = v16;
        }
        else
        {
          if (*v7) {
            uint64_t v59 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v59 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          int v60 = 3;
LABEL_105:
          sub_188C020(v60, v16, v59);
        }
        goto LABEL_83;
      case 4u:
        if (v9 != 34) {
          goto LABEL_75;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v22 = *(void *)(a1 + 8);
        uint64_t v23 = (uint64_t *)(v22 & 0xFFFFFFFFFFFFFFFCLL);
        if (v22) {
          uint64_t v23 = (uint64_t *)*v23;
        }
        unint64_t v24 = (void *)(a1 + 24);
        goto LABEL_48;
      case 5u:
        if (v9 != 42) {
          goto LABEL_75;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v25 = *(void **)(a1 + 40);
        if (v25) {
          goto LABEL_43;
        }
        uint64_t v26 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          uint64_t v26 = (void *)*v26;
        }
        uint64_t v25 = sub_12F849C((uint64_t)v26);
        *(void *)(a1 + 40) = v25;
        goto LABEL_42;
      case 6u:
        if (v9 != 50) {
          goto LABEL_75;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v25 = *(void **)(a1 + 48);
        if (v25) {
          goto LABEL_43;
        }
        unint64_t v27 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          unint64_t v27 = (void *)*v27;
        }
        uint64_t v25 = sub_12F849C((uint64_t)v27);
        *(void *)(a1 + 48) = v25;
LABEL_42:
        uint64_t v8 = *(unsigned __int8 **)v61;
LABEL_43:
        uint64_t v28 = sub_12D6AD4(a3, (uint64_t)v25, v8);
        goto LABEL_82;
      case 7u:
        if (v9 != 58) {
          goto LABEL_75;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v29 = *(void *)(a1 + 8);
        uint64_t v23 = (uint64_t *)(v29 & 0xFFFFFFFFFFFFFFFCLL);
        if (v29) {
          uint64_t v23 = (uint64_t *)*v23;
        }
        unint64_t v24 = (void *)(a1 + 32);
LABEL_48:
        uint64_t v30 = (std::string *)sub_1880F84(v24, v23);
        uint64_t v28 = (uint64_t)sub_188C244(v30, *(char **)v61, (uint64_t)a3);
        goto LABEL_82;
      case 8u:
        if (v9 != 64) {
          goto LABEL_75;
        }
        v5 |= 0x100u;
        uint64_t v31 = (char *)(v8 + 1);
        int v32 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_53;
        }
        int v33 = *v31;
        int v32 = v32 + (v33 << 7) - 128;
        if (v33 < 0)
        {
          uint64_t v51 = sub_188C0D0((uint64_t)v8, v32);
          *(void *)uint64_t v61 = v51;
          *(_DWORD *)(a1 + 76) = v52;
          if (!v51) {
            goto LABEL_111;
          }
        }
        else
        {
          uint64_t v31 = (char *)(v8 + 2);
LABEL_53:
          *(void *)uint64_t v61 = v31;
          *(_DWORD *)(a1 + 76) = v32;
        }
        goto LABEL_83;
      case 9u:
        if (v9 != 72) {
          goto LABEL_75;
        }
        v5 |= 0x200u;
        uint64_t v34 = (char *)(v8 + 1);
        int v35 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_58;
        }
        int v36 = *v34;
        int v35 = v35 + (v36 << 7) - 128;
        if (v36 < 0)
        {
          uint64_t v53 = sub_188C0D0((uint64_t)v8, v35);
          *(void *)uint64_t v61 = v53;
          *(_DWORD *)(a1 + 80) = v54;
          if (!v53) {
            goto LABEL_111;
          }
        }
        else
        {
          uint64_t v34 = (char *)(v8 + 2);
LABEL_58:
          *(void *)uint64_t v61 = v34;
          *(_DWORD *)(a1 + 80) = v35;
        }
        goto LABEL_83;
      case 0xAu:
        if (v9 != 80) {
          goto LABEL_75;
        }
        v5 |= 0x400u;
        uint64_t v37 = (char *)(v8 + 1);
        int v38 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_63;
        }
        int v39 = *v37;
        int v38 = v38 + (v39 << 7) - 128;
        if (v39 < 0)
        {
          uint64_t v55 = sub_188C0D0((uint64_t)v8, v38);
          *(void *)uint64_t v61 = v55;
          *(_DWORD *)(a1 + 84) = v56;
          if (!v55) {
            goto LABEL_111;
          }
        }
        else
        {
          uint64_t v37 = (char *)(v8 + 2);
LABEL_63:
          *(void *)uint64_t v61 = v37;
          *(_DWORD *)(a1 + 84) = v38;
        }
        goto LABEL_83;
      case 0xBu:
        if (v9 != 88) {
          goto LABEL_75;
        }
        v5 |= 0x800u;
        uint64_t v40 = (char *)(v8 + 1);
        int v41 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_68;
        }
        int v42 = *v40;
        int v41 = v41 + (v42 << 7) - 128;
        if (v42 < 0)
        {
          uint64_t v57 = sub_188C0D0((uint64_t)v8, v41);
          *(void *)uint64_t v61 = v57;
          *(_DWORD *)(a1 + 88) = v58;
          if (!v57) {
            goto LABEL_111;
          }
        }
        else
        {
          uint64_t v40 = (char *)(v8 + 2);
LABEL_68:
          *(void *)uint64_t v61 = v40;
          *(_DWORD *)(a1 + 88) = v41;
        }
        goto LABEL_83;
      case 0xCu:
        if (v9 != 98) {
          goto LABEL_75;
        }
        *(_DWORD *)(a1 + 16) |= 0x10u;
        uint64_t v43 = *(void *)(a1 + 56);
        if (!v43)
        {
          int v44 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            int v44 = (void *)*v44;
          }
          uint64_t v43 = sub_15C1918((uint64_t)v44);
          *(void *)(a1 + 56) = v43;
          uint64_t v8 = *(unsigned __int8 **)v61;
        }
        uint64_t v28 = (uint64_t)sub_1198F14(a3, v43, v8);
        goto LABEL_82;
      default:
LABEL_75:
        if (v9) {
          BOOL v45 = (v9 & 7) == 4;
        }
        else {
          BOOL v45 = 1;
        }
        if (!v45)
        {
          if (*v7)
          {
            uint64_t v46 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v46 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = *(unsigned __int8 **)v61;
          }
          uint64_t v28 = (uint64_t)sub_1885AC0(v9, v46, (char *)v8, a3);
LABEL_82:
          *(void *)uint64_t v61 = v28;
          if (!v28) {
            goto LABEL_111;
          }
LABEL_83:
          if (sub_11947B8((uint64_t)a3, (char **)v61, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_111:
        }
          *(void *)uint64_t v61 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v61;
    }
  }
}

char *sub_12E3554(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 0x20) != 0)
  {
    if (*a3 <= __dst) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 64);
    char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x40) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 68);
    char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x80) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v13 = *(int *)(a1 + 72);
    char *v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unint64_t v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    char v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
    if ((v6 & 4) == 0)
    {
LABEL_24:
      if ((v6 & 8) == 0) {
        goto LABEL_25;
      }
      goto LABEL_35;
    }
  }
  else if ((v6 & 4) == 0)
  {
    goto LABEL_24;
  }
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v16 = *(void *)(a1 + 40);
  char *v4 = 42;
  unsigned int v17 = *(_DWORD *)(v16 + 20);
  v4[1] = v17;
  if (v17 > 0x7F) {
    int v18 = sub_188A9CC(v17, v4 + 1);
  }
  else {
    int v18 = v4 + 2;
  }
  char v4 = sub_12F16E4(v16, v18, a3);
  if ((v6 & 8) == 0)
  {
LABEL_25:
    if ((v6 & 2) == 0) {
      goto LABEL_26;
    }
    goto LABEL_41;
  }
LABEL_35:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v19 = *(void *)(a1 + 48);
  char *v4 = 50;
  unsigned int v20 = *(_DWORD *)(v19 + 20);
  v4[1] = v20;
  if (v20 > 0x7F) {
    int v21 = sub_188A9CC(v20, v4 + 1);
  }
  else {
    int v21 = v4 + 2;
  }
  char v4 = sub_12F16E4(v19, v21, a3);
  if ((v6 & 2) == 0)
  {
LABEL_26:
    if ((v6 & 0x100) == 0) {
      goto LABEL_48;
    }
    goto LABEL_42;
  }
LABEL_41:
  char v4 = sub_117A0AC(a3, 7, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x100) == 0) {
    goto LABEL_48;
  }
LABEL_42:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  unsigned int v22 = *(_DWORD *)(a1 + 76);
  char *v4 = 64;
  v4[1] = v22;
  if (v22 > 0x7F)
  {
    v4[1] = v22 | 0x80;
    unsigned int v23 = v22 >> 7;
    v4[2] = v22 >> 7;
    v4 += 3;
    if (v22 >= 0x4000)
    {
      do
      {
        *(v4 - 1) |= 0x80u;
        unsigned int v24 = v23 >> 14;
        v23 >>= 7;
        *v4++ = v23;
      }
      while (v24);
    }
  }
  else
  {
    v4 += 2;
  }
LABEL_48:
  if ((v6 & 0x200) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v25 = *(_DWORD *)(a1 + 80);
    char *v4 = 72;
    v4[1] = v25;
    if (v25 > 0x7F)
    {
      v4[1] = v25 | 0x80;
      unsigned int v26 = v25 >> 7;
      v4[2] = v25 >> 7;
      v4 += 3;
      if (v25 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v27 = v26 >> 14;
          v26 >>= 7;
          *v4++ = v26;
        }
        while (v27);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x400) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v28 = *(_DWORD *)(a1 + 84);
    char *v4 = 80;
    v4[1] = v28;
    if (v28 > 0x7F)
    {
      v4[1] = v28 | 0x80;
      unsigned int v29 = v28 >> 7;
      v4[2] = v28 >> 7;
      v4 += 3;
      if (v28 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v30 = v29 >> 14;
          v29 >>= 7;
          *v4++ = v29;
        }
        while (v30);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x800) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v31 = *(_DWORD *)(a1 + 88);
    char *v4 = 88;
    v4[1] = v31;
    if (v31 > 0x7F)
    {
      v4[1] = v31 | 0x80;
      unsigned int v32 = v31 >> 7;
      v4[2] = v31 >> 7;
      v4 += 3;
      if (v31 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v33 = v32 >> 14;
          v32 >>= 7;
          *v4++ = v32;
        }
        while (v33);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v34 = *(void *)(a1 + 56);
    char *v4 = 98;
    unsigned int v35 = *(_DWORD *)(v34 + 44);
    v4[1] = v35;
    if (v35 > 0x7F) {
      int v36 = sub_188A9CC(v35, v4 + 1);
    }
    else {
      int v36 = v4 + 2;
    }
    char v4 = sub_15B0C0C(v34, v36, a3);
  }
  uint64_t v37 = *(void *)(a1 + 8);
  if ((v37 & 1) == 0) {
    return v4;
  }
  unint64_t v39 = v37 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v39 + 31) < 0)
  {
    uint64_t v40 = *(void **)(v39 + 8);
    uint64_t v41 = *(void *)(v39 + 16);
  }
  else
  {
    uint64_t v40 = (void *)(v39 + 8);
    LODWORD(v41) = *(unsigned __int8 *)(v39 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v41)
  {
    uint64_t v42 = (int)v41;
    memcpy(v4, v40, (int)v41);
    v4 += v42;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v40, v41, v4);
}

uint64_t sub_12E3AF0(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if (!(_BYTE)v2)
  {
    uint64_t v3 = 0;
    goto LABEL_31;
  }
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
  uint64_t v6 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    uint64_t v6 = v5;
  }
  uint64_t v3 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 2) != 0)
  {
LABEL_9:
    unint64_t v7 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v8 = *(unsigned __int8 *)(v7 + 23);
    uint64_t v9 = *(void *)(v7 + 8);
    if ((v8 & 0x80u) == 0) {
      uint64_t v9 = v8;
    }
    v3 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v2 & 4) != 0)
  {
    uint64_t v10 = sub_12F18AC(*(void *)(a1 + 40));
    v3 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 8) == 0)
    {
LABEL_14:
      if ((v2 & 0x10) == 0) {
        goto LABEL_15;
      }
      goto LABEL_21;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_14;
  }
  uint64_t v11 = sub_12F18AC(*(void *)(a1 + 48));
  v3 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x10) == 0)
  {
LABEL_15:
    if ((v2 & 0x20) == 0) {
      goto LABEL_16;
    }
    goto LABEL_22;
  }
LABEL_21:
  uint64_t v12 = sub_15B0D90(*(void *)(a1 + 56));
  v3 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x20) == 0)
  {
LABEL_16:
    if ((v2 & 0x40) == 0) {
      goto LABEL_17;
    }
    goto LABEL_23;
  }
LABEL_22:
  v3 += ((9 * (__clz(*(_DWORD *)(a1 + 64) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x40) == 0)
  {
LABEL_17:
    if ((v2 & 0x80) == 0) {
      goto LABEL_31;
    }
    goto LABEL_27;
  }
LABEL_23:
  int v13 = *(_DWORD *)(a1 + 68);
  if (v13 < 0) {
    uint64_t v14 = 11;
  }
  else {
    uint64_t v14 = ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v3 += v14;
  if ((v2 & 0x80) != 0)
  {
LABEL_27:
    int v15 = *(_DWORD *)(a1 + 72);
    if (v15 < 0) {
      uint64_t v16 = 11;
    }
    else {
      uint64_t v16 = ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v3 += v16;
  }
LABEL_31:
  if ((v2 & 0xF00) == 0) {
    goto LABEL_37;
  }
  if ((v2 & 0x100) != 0)
  {
    v3 += ((9 * (__clz(*(_DWORD *)(a1 + 76) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 0x200) == 0)
    {
LABEL_34:
      if ((v2 & 0x400) == 0) {
        goto LABEL_35;
      }
      goto LABEL_41;
    }
  }
  else if ((v2 & 0x200) == 0)
  {
    goto LABEL_34;
  }
  v3 += ((9 * (__clz(*(_DWORD *)(a1 + 80) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x400) == 0)
  {
LABEL_35:
    if ((v2 & 0x800) == 0) {
      goto LABEL_37;
    }
    goto LABEL_36;
  }
LABEL_41:
  v3 += ((9 * (__clz(*(_DWORD *)(a1 + 84) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x800) != 0) {
LABEL_36:
  }
    v3 += ((9 * (__clz(*(_DWORD *)(a1 + 88) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_37:
  uint64_t v17 = *(void *)(a1 + 8);
  if (v17)
  {
    unint64_t v19 = v17 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v19 + 31) < 0) {
      uint64_t v20 = *(void *)(v19 + 16);
    }
    else {
      uint64_t v20 = *(unsigned __int8 *)(v19 + 31);
    }
    v3 += v20;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

void sub_12E3DE0(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((_BYTE)v4)
  {
    if (v4)
    {
      uint64_t v5 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v6 = (std::string **)(a1 + 24);
      uint64_t v7 = *(void *)(a1 + 8);
      uint64_t v8 = (uint64_t *)(v7 & 0xFFFFFFFFFFFFFFFCLL);
      if (v7) {
        uint64_t v8 = (uint64_t *)*v8;
      }
      sub_1881DF4(v6, v5, v8);
    }
    if ((v4 & 2) != 0)
    {
      uint64_t v9 = (long long *)(*(void *)(a2 + 32) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 2u;
      uint64_t v10 = *(void *)(a1 + 8);
      uint64_t v11 = (uint64_t *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
      if (v10) {
        uint64_t v11 = (uint64_t *)*v11;
      }
      sub_1881DF4((std::string **)(a1 + 32), v9, v11);
    }
    if ((v4 & 4) != 0)
    {
      *(_DWORD *)(a1 + 16) |= 4u;
      int v13 = *(void **)(a1 + 40);
      if (!v13)
      {
        uint64_t v14 = *(void *)(a1 + 8);
        int v15 = (void *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
        if (v14) {
          int v15 = (void *)*v15;
        }
        int v13 = sub_12F849C((uint64_t)v15);
        *(void *)(a1 + 40) = v13;
      }
      if (*(void *)(a2 + 40)) {
        uint64_t v16 = *(uint64_t (****)())(a2 + 40);
      }
      else {
        uint64_t v16 = &off_2531F48;
      }
      sub_12DC53C((uint64_t)v13, (uint64_t)v16);
      if ((v4 & 8) == 0)
      {
LABEL_12:
        if ((v4 & 0x10) == 0) {
          goto LABEL_13;
        }
        goto LABEL_45;
      }
    }
    else if ((v4 & 8) == 0)
    {
      goto LABEL_12;
    }
    *(_DWORD *)(a1 + 16) |= 8u;
    uint64_t v17 = *(void **)(a1 + 48);
    if (!v17)
    {
      uint64_t v18 = *(void *)(a1 + 8);
      unint64_t v19 = (void *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
      if (v18) {
        unint64_t v19 = (void *)*v19;
      }
      uint64_t v17 = sub_12F849C((uint64_t)v19);
      *(void *)(a1 + 48) = v17;
    }
    if (*(void *)(a2 + 48)) {
      uint64_t v20 = *(uint64_t (****)())(a2 + 48);
    }
    else {
      uint64_t v20 = &off_2531F48;
    }
    sub_12DC53C((uint64_t)v17, (uint64_t)v20);
    if ((v4 & 0x10) == 0)
    {
LABEL_13:
      if ((v4 & 0x20) == 0) {
        goto LABEL_14;
      }
      goto LABEL_53;
    }
LABEL_45:
    *(_DWORD *)(a1 + 16) |= 0x10u;
    uint64_t v21 = *(void *)(a1 + 56);
    if (!v21)
    {
      uint64_t v22 = *(void *)(a1 + 8);
      unsigned int v23 = (void *)(v22 & 0xFFFFFFFFFFFFFFFCLL);
      if (v22) {
        unsigned int v23 = (void *)*v23;
      }
      uint64_t v21 = sub_15C1918((uint64_t)v23);
      *(void *)(a1 + 56) = v21;
    }
    if (*(void *)(a2 + 56)) {
      unsigned int v24 = *(uint64_t (****)())(a2 + 56);
    }
    else {
      unsigned int v24 = &off_253F1A0;
    }
    sub_15B0E24(v21, (uint64_t)v24);
    if ((v4 & 0x20) == 0)
    {
LABEL_14:
      if ((v4 & 0x40) == 0) {
        goto LABEL_15;
      }
      goto LABEL_54;
    }
LABEL_53:
    *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
    if ((v4 & 0x40) == 0)
    {
LABEL_15:
      if ((v4 & 0x80) == 0)
      {
LABEL_17:
        *(_DWORD *)(a1 + 16) |= v4;
        goto LABEL_18;
      }
LABEL_16:
      *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
      goto LABEL_17;
    }
LABEL_54:
    *(_DWORD *)(a1 + 68) = *(_DWORD *)(a2 + 68);
    if ((v4 & 0x80) == 0) {
      goto LABEL_17;
    }
    goto LABEL_16;
  }
LABEL_18:
  if ((v4 & 0xF00) == 0) {
    goto LABEL_25;
  }
  if ((v4 & 0x100) != 0)
  {
    *(_DWORD *)(a1 + 76) = *(_DWORD *)(a2 + 76);
    if ((v4 & 0x200) == 0)
    {
LABEL_21:
      if ((v4 & 0x400) == 0) {
        goto LABEL_22;
      }
LABEL_58:
      *(_DWORD *)(a1 + 84) = *(_DWORD *)(a2 + 84);
      if ((v4 & 0x800) == 0) {
        goto LABEL_24;
      }
      goto LABEL_23;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_21;
  }
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  if ((v4 & 0x400) != 0) {
    goto LABEL_58;
  }
LABEL_22:
  if ((v4 & 0x800) != 0) {
LABEL_23:
  }
    *(_DWORD *)(a1 + 88) = *(_DWORD *)(a2 + 88);
LABEL_24:
  *(_DWORD *)(a1 + 16) |= v4;
LABEL_25:
  uint64_t v12 = *(void *)(a2 + 8);
  if (v12)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v12 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_12E402C(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 4) != 0)
  {
    uint64_t v3 = *(void *)(a1 + 40);
    if ((*(unsigned char *)(v3 + 16) & 0x20) != 0)
    {
      uint64_t result = sub_15B06D8(*(void *)(v3 + 64));
      if (!result) {
        return result;
      }
      int v2 = *(_DWORD *)(a1 + 16);
    }
  }
  if ((v2 & 8) != 0)
  {
    uint64_t v5 = *(void *)(a1 + 48);
    if ((*(unsigned char *)(v5 + 16) & 0x20) != 0)
    {
      uint64_t result = sub_15B06D8(*(void *)(v5 + 64));
      if (!result) {
        return result;
      }
      int v2 = *(_DWORD *)(a1 + 16);
    }
  }
  if ((v2 & 0x10) == 0) {
    return 1;
  }
  uint64_t result = sub_15B0F18(*(void *)(a1 + 56));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_12E40A4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap.fields.DirectionsCorrections.SimplifiedInstruction");
}

uint64_t sub_12E40B4(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  if ((uint64_t (***)())a1 != &off_2531AF8)
  {
    uint64_t v5 = *(void *)(a1 + 48);
    if (v5)
    {
      sub_126F01C(v5);
      operator delete();
    }
    uint64_t v6 = *(void *)(a1 + 56);
    if (v6)
    {
      sub_12DD7D4(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  sub_13018A8((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12E4190(uint64_t a1)
{
  sub_12E40B4(a1);

  operator delete();
}

uint64_t sub_12E41C8(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_12E2E44(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  int v5 = *(_DWORD *)(v1 + 16);
  if ((v5 & 3) != 0)
  {
    if (v5) {
      uint64_t result = (uint64_t)sub_1260464(*(unsigned char **)(v1 + 48));
    }
    if ((v5 & 2) != 0) {
      uint64_t result = sub_12DD924(*(void *)(v1 + 56));
    }
  }
  char v7 = *(unsigned char *)(v1 + 8);
  uint64_t v6 = v1 + 8;
  *(_DWORD *)(v6 + 56) = 0;
  *(_DWORD *)(v6 + 8) = 0;
  if (v7)
  {
    return sub_188B4AC((uint64_t *)v6);
  }
  return result;
}

char *sub_12E4270(uint64_t a1, char *a2, int32x2_t *a3)
{
  unsigned int v30 = a2;
  if (sub_11947B8((uint64_t)a3, &v30, a3[11].i32[1])) {
    return v30;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    char v7 = v30 + 1;
    unsigned int v8 = *v30;
    if (*v30 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        char v7 = (char *)sub_188C180((uint64_t)v30, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        char v7 = v30 + 2;
      }
    }
    unsigned int v30 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 8) {
          goto LABEL_38;
        }
        uint64_t v11 = v7 + 1;
        unint64_t v12 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v13 = *v11;
        int v14 = v12 + (v13 << 7);
        unint64_t v12 = (v14 - 128);
        if (v13 < 0)
        {
          unsigned int v30 = (char *)sub_188C138((uint64_t)v7, (v14 - 128));
          if (!v30) {
            return 0;
          }
          unint64_t v12 = v28;
        }
        else
        {
          uint64_t v11 = v7 + 2;
LABEL_13:
          unsigned int v30 = v11;
        }
        if (sub_129EB9C(v12))
        {
          *(_DWORD *)(a1 + 16) |= 4u;
          *(_DWORD *)(a1 + 64) = v12;
        }
        else
        {
          if (*v6) {
            unsigned int v29 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            unsigned int v29 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(1, v12, v29);
        }
        goto LABEL_46;
      case 2u:
        if (v8 != 18) {
          goto LABEL_38;
        }
        int v15 = v7 - 1;
        while (1)
        {
          uint64_t v16 = (unsigned __int8 *)(v15 + 1);
          unsigned int v30 = v15 + 1;
          uint64_t v17 = *(_DWORD **)(a1 + 40);
          if (v17 && (uint64_t v18 = *(int *)(a1 + 32), (int)v18 < *v17))
          {
            *(_DWORD *)(a1 + 32) = v18 + 1;
            uint64_t v19 = *(void *)&v17[2 * v18 + 2];
          }
          else
          {
            sub_12EC2A8(*(void *)(a1 + 24));
            uint64_t v19 = sub_188CDC8(a1 + 24, v20);
            uint64_t v16 = (unsigned __int8 *)v30;
          }
          int v15 = (char *)sub_12E459C(a3, v19, v16);
          unsigned int v30 = v15;
          if (!v15) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v15 || *v15 != 18) {
            goto LABEL_46;
          }
        }
      case 3u:
        if (v8 != 26) {
          goto LABEL_38;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v21 = *(void **)(a1 + 48);
        if (!v21)
        {
          uint64_t v22 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v22 = (void *)*v22;
          }
          uint64_t v21 = sub_1284080((uint64_t)v22);
          *(void *)(a1 + 48) = v21;
          char v7 = v30;
        }
        unsigned int v23 = sub_12613D0(a3, (uint64_t)v21, (unsigned __int8 *)v7);
        goto LABEL_45;
      case 4u:
        if (v8 != 34) {
          goto LABEL_38;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        unsigned int v24 = *(void **)(a1 + 56);
        if (!v24)
        {
          unsigned int v25 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            unsigned int v25 = (void *)*v25;
          }
          unsigned int v24 = sub_12EBFD4((uint64_t)v25);
          *(void *)(a1 + 56) = v24;
          char v7 = v30;
        }
        unsigned int v23 = (char *)sub_12DE640(a3, (uint64_t)v24, (unsigned __int8 *)v7);
        goto LABEL_45;
      default:
LABEL_38:
        if (v8) {
          BOOL v26 = (v8 & 7) == 4;
        }
        else {
          BOOL v26 = 1;
        }
        if (!v26)
        {
          if (*v6)
          {
            unsigned int v27 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            unsigned int v27 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            char v7 = v30;
          }
          unsigned int v23 = (char *)sub_1885AC0(v8, v27, v7, a3);
LABEL_45:
          unsigned int v30 = v23;
          if (!v23) {
            return 0;
          }
LABEL_46:
          if (sub_11947B8((uint64_t)a3, &v30, a3[11].i32[1])) {
            return v30;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return v30;
    }
  }
}

uint64_t sub_12E459C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12E2F54(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_12E462C(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 4) != 0)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 64);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v10 = *(_DWORD *)(a1 + 32);
  if (v10)
  {
    for (int i = 0; i != v10; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v12 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      unsigned char *v4 = 18;
      unsigned int v13 = *(_DWORD *)(v12 + 20);
      v4[1] = v13;
      if (v13 > 0x7F) {
        int v14 = sub_188A9CC(v13, v4 + 1);
      }
      else {
        int v14 = v4 + 2;
      }
      uint64_t v4 = sub_12E3554(v12, (unint64_t)v14, a3);
    }
  }
  if (v6)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v15 = *(void *)(a1 + 48);
    unsigned char *v4 = 26;
    unsigned int v16 = *(_DWORD *)(v15 + 20);
    v4[1] = v16;
    if (v16 > 0x7F) {
      uint64_t v17 = sub_188A9CC(v16, v4 + 1);
    }
    else {
      uint64_t v17 = v4 + 2;
    }
    uint64_t v4 = sub_126F20C(v15, (unint64_t)v17, a3);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v18 = *(void *)(a1 + 56);
    unsigned char *v4 = 34;
    unsigned int v19 = *(_DWORD *)(v18 + 20);
    v4[1] = v19;
    if (v19 > 0x7F) {
      uint64_t v20 = sub_188A9CC(v19, v4 + 1);
    }
    else {
      uint64_t v20 = v4 + 2;
    }
    uint64_t v4 = sub_12DDE58(v18, (unint64_t)v20, a3);
  }
  uint64_t v21 = *(void *)(a1 + 8);
  if ((v21 & 1) == 0) {
    return v4;
  }
  unint64_t v23 = v21 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v23 + 31) < 0)
  {
    unsigned int v24 = *(void **)(v23 + 8);
    uint64_t v25 = *(void *)(v23 + 16);
  }
  else
  {
    unsigned int v24 = (void *)(v23 + 8);
    LODWORD(v25) = *(unsigned __int8 *)(v23 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v25)
  {
    uint64_t v26 = (int)v25;
    memcpy(v4, v24, (int)v25);
    v4 += v26;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v24, v25, v4);
}

uint64_t sub_12E48B8(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_12E3AF0(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 7) == 0) {
    goto LABEL_20;
  }
  if (v8)
  {
    uint64_t v9 = sub_126F38C(*(void *)(a1 + 48));
    v2 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v8 & 2) == 0)
    {
LABEL_12:
      if ((v8 & 4) == 0) {
        goto LABEL_20;
      }
      goto LABEL_16;
    }
  }
  else if ((v8 & 2) == 0)
  {
    goto LABEL_12;
  }
  uint64_t v10 = sub_12DE0F8(*(void *)(a1 + 56));
  v2 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 4) == 0) {
    goto LABEL_20;
  }
LABEL_16:
  int v11 = *(_DWORD *)(a1 + 64);
  if (v11 < 0) {
    uint64_t v12 = 11;
  }
  else {
    uint64_t v12 = ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v2 += v12;
LABEL_20:
  uint64_t v13 = *(void *)(a1 + 8);
  if (v13)
  {
    unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v15 + 31) < 0) {
      uint64_t v16 = *(void *)(v15 + 16);
    }
    else {
      uint64_t v16 = *(unsigned __int8 *)(v15 + 31);
    }
    v2 += v16;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

void sub_12E4A14(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_1301DE0((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    int v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *int v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 7) != 0)
  {
    if (v9)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      int v11 = *(void **)(a1 + 48);
      if (!v11)
      {
        uint64_t v12 = *(void *)(a1 + 8);
        uint64_t v13 = (void *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          uint64_t v13 = (void *)*v13;
        }
        int v11 = sub_1284080((uint64_t)v13);
        *(void *)(a1 + 48) = v11;
      }
      if (*(void *)(a2 + 48)) {
        int v14 = *(uint64_t (****)())(a2 + 48);
      }
      else {
        int v14 = &off_252F900;
      }
      sub_12626AC((uint64_t)v11, (uint64_t)v14);
      if ((v9 & 2) == 0)
      {
LABEL_7:
        if ((v9 & 4) == 0)
        {
LABEL_9:
          *(_DWORD *)(a1 + 16) |= v9;
          goto LABEL_10;
        }
LABEL_8:
        *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
        goto LABEL_9;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_7;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    unint64_t v15 = *(void **)(a1 + 56);
    if (!v15)
    {
      uint64_t v16 = *(void *)(a1 + 8);
      uint64_t v17 = (void *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
      if (v16) {
        uint64_t v17 = (void *)*v17;
      }
      unint64_t v15 = sub_12EBFD4((uint64_t)v17);
      *(void *)(a1 + 56) = v15;
    }
    if (*(void *)(a2 + 56)) {
      uint64_t v18 = *(uint64_t (****)())(a2 + 56);
    }
    else {
      uint64_t v18 = &off_25318C0;
    }
    sub_12DE298((uint64_t)v15, (uint64_t)v18);
    if ((v9 & 4) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
LABEL_10:
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_12E4BAC(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  while ((int)v2 >= 1)
  {
    uint64_t v3 = v2 - 1;
    char v4 = sub_12E402C(*(void *)(*(void *)(a1 + 40) + 8 * v2));
    uint64_t v2 = v3;
    if ((v4 & 1) == 0) {
      return 0;
    }
  }
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    uint64_t result = sub_12632C0(*(void *)(a1 + 48));
    if (!result) {
      return result;
    }
    int v6 = *(_DWORD *)(a1 + 16);
  }
  if ((v6 & 2) == 0) {
    return 1;
  }
  uint64_t result = sub_12DE49C(*(void *)(a1 + 56));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_12E4C24@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap.fields.DirectionsCorrections");
}

char *sub_12E4C34(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_147F380(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_12E4CC4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_14815A0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_12E4D54(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_15F25AC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_12E4DE4(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 0x3F) == 0) {
    goto LABEL_32;
  }
  if ((v1 & 1) == 0)
  {
    if ((v1 & 2) == 0) {
      goto LABEL_4;
    }
LABEL_13:
    unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)unint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
      if ((v1 & 4) != 0) {
        goto LABEL_17;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
      if ((v1 & 4) != 0) {
        goto LABEL_17;
      }
    }
LABEL_5:
    if ((v1 & 8) == 0) {
      goto LABEL_6;
    }
LABEL_21:
    unint64_t v5 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v5 + 23) < 0)
    {
      **(unsigned char **)unint64_t v5 = 0;
      *(void *)(v5 + 8) = 0;
      if ((v1 & 0x10) != 0) {
        goto LABEL_25;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v5 = 0;
      *(unsigned char *)(v5 + 23) = 0;
      if ((v1 & 0x10) != 0) {
        goto LABEL_25;
      }
    }
LABEL_7:
    if ((v1 & 0x20) == 0) {
      goto LABEL_32;
    }
LABEL_29:
    unint64_t v7 = *(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v7 + 23) < 0)
    {
      **(unsigned char **)unint64_t v7 = 0;
      *(void *)(v7 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v7 = 0;
      *(unsigned char *)(v7 + 23) = 0;
    }
    goto LABEL_32;
  }
  unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v2 + 23) < 0)
  {
    **(unsigned char **)unint64_t v2 = 0;
    *(void *)(v2 + 8) = 0;
    if ((v1 & 2) != 0) {
      goto LABEL_13;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v2 = 0;
    *(unsigned char *)(v2 + 23) = 0;
    if ((v1 & 2) != 0) {
      goto LABEL_13;
    }
  }
LABEL_4:
  if ((v1 & 4) == 0) {
    goto LABEL_5;
  }
LABEL_17:
  unint64_t v4 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v4 + 23) < 0)
  {
    **(unsigned char **)unint64_t v4 = 0;
    *(void *)(v4 + 8) = 0;
    if ((v1 & 8) != 0) {
      goto LABEL_21;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v4 = 0;
    *(unsigned char *)(v4 + 23) = 0;
    if ((v1 & 8) != 0) {
      goto LABEL_21;
    }
  }
LABEL_6:
  if ((v1 & 0x10) == 0) {
    goto LABEL_7;
  }
LABEL_25:
  unint64_t v6 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v6 + 23) < 0)
  {
    **(unsigned char **)unint64_t v6 = 0;
    *(void *)(v6 + 8) = 0;
    if ((v1 & 0x20) == 0) {
      goto LABEL_32;
    }
    goto LABEL_29;
  }
  *(unsigned char *)unint64_t v6 = 0;
  *(unsigned char *)(v6 + 23) = 0;
  if ((v1 & 0x20) != 0) {
    goto LABEL_29;
  }
LABEL_32:
  char v9 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v9) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_12E4F38(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 24);
  if ((int)v2 >= 1)
  {
    unint64_t v3 = (uint64_t *)(*(void *)(result + 32) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_12F1BD8(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 24) = 0;
  }
  uint64_t v5 = *(unsigned int *)(v1 + 48);
  if ((int)v5 >= 1)
  {
    unint64_t v6 = (uint64_t *)(*(void *)(v1 + 56) + 8);
    do
    {
      uint64_t v7 = *v6++;
      uint64_t result = sub_12F1BD8(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(v1 + 48) = 0;
  }
  *(_DWORD *)(v1 + 64) = 0;
  uint64_t v8 = *(unsigned int *)(v1 + 88);
  if ((int)v8 >= 1)
  {
    char v9 = (uint64_t *)(*(void *)(v1 + 96) + 8);
    do
    {
      uint64_t v10 = *v9++;
      uint64_t result = sub_12F1BD8(v10);
      --v8;
    }
    while (v8);
    *(_DWORD *)(v1 + 88) = 0;
  }
  uint64_t v11 = *(unsigned int *)(v1 + 112);
  if ((int)v11 >= 1)
  {
    uint64_t v12 = (uint64_t *)(*(void *)(v1 + 120) + 8);
    do
    {
      uint64_t v13 = *v12++;
      uint64_t result = sub_12F1BD8(v13);
      --v11;
    }
    while (v11);
    *(_DWORD *)(v1 + 112) = 0;
  }
  uint64_t v14 = *(unsigned int *)(v1 + 136);
  if ((int)v14 >= 1)
  {
    unint64_t v15 = (uint64_t *)(*(void *)(v1 + 144) + 8);
    do
    {
      uint64_t v16 = *v15++;
      uint64_t result = sub_12F1BD8(v16);
      --v14;
    }
    while (v14);
    *(_DWORD *)(v1 + 136) = 0;
  }
  char v18 = *(unsigned char *)(v1 + 8);
  uint64_t v17 = (uint64_t *)(v1 + 8);
  if (v18)
  {
    return sub_188B4AC(v17);
  }
  return result;
}

void *sub_12E5058(void *a1)
{
  unint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_12E50EC((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  sub_1889DA8((uint64_t)(a1 + 5));
  sub_1889DA8((uint64_t)(a1 + 3));
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void ***sub_12E50EC(uint64_t a1)
{
  unint64_t v3 = *(uint64_t **)(a1 + 56);
  uint64_t v2 = (void ***)(a1 + 56);
  if (v3 != &qword_2550250) {
    sub_1881C6C(v2);
  }
  if (*(uint64_t **)(a1 + 64) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 64));
  }
  if (*(uint64_t **)(a1 + 72) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 72));
  }
  if (*(uint64_t **)(a1 + 80) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 80));
  }
  if (*(uint64_t **)(a1 + 88) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 88));
  }
  if (*(uint64_t **)(a1 + 96) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 96));
  }
  uint64_t result = (void ***)(a1 + 104);
  if (*(uint64_t **)(a1 + 104) != &qword_2550250) {
    sub_1881C6C(result);
  }
  if ((uint64_t (***)())a1 != &off_2531B40)
  {
    uint64_t v5 = *(void **)(a1 + 112);
    if (v5)
    {
      sub_12EE48C(v5);
      operator delete();
    }
    if (*(void *)(a1 + 120))
    {
      sub_15B0994();
      operator delete();
    }
    uint64_t v6 = *(void *)(a1 + 128);
    if (v6)
    {
      sub_15B1678(v6);
      operator delete();
    }
    uint64_t v7 = *(void *)(a1 + 136);
    if (v7)
    {
      sub_12F0AF8(v7);
      operator delete();
    }
    if (*(void *)(a1 + 144))
    {
      sub_16BE0FC();
      operator delete();
    }
    if (*(void *)(a1 + 152))
    {
      sub_15B6D48();
      operator delete();
    }
    uint64_t v8 = *(void **)(a1 + 160);
    if (v8)
    {
      sub_12F21D4(v8);
      operator delete();
    }
    uint64_t v9 = *(void *)(a1 + 168);
    if (v9)
    {
      sub_12F6468(v9);
      operator delete();
    }
    if (*(void *)(a1 + 176))
    {
      sub_15B0994();
      operator delete();
    }
    uint64_t result = *(void ****)(a1 + 184);
    if (result)
    {
      sub_15B0994();
      operator delete();
    }
  }
  return result;
}

void sub_12E5308(void *a1)
{
  sub_12E5058(a1);

  operator delete();
}

uint64_t sub_12E5340(uint64_t result)
{
  uint64_t v1 = result;
  *(_DWORD *)(result + 24) = 0;
  *(_DWORD *)(result + 40) = 0;
  int v2 = *(_DWORD *)(result + 16);
  if (!(_BYTE)v2) {
    goto LABEL_11;
  }
  if (v2)
  {
    unint64_t v5 = *(void *)(result + 56) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v5 + 23) < 0)
    {
      **(unsigned char **)unint64_t v5 = 0;
      *(void *)(v5 + 8) = 0;
      if ((v2 & 2) != 0) {
        goto LABEL_41;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v5 = 0;
      *(unsigned char *)(v5 + 23) = 0;
      if ((v2 & 2) != 0) {
        goto LABEL_41;
      }
    }
LABEL_4:
    if ((v2 & 4) == 0) {
      goto LABEL_5;
    }
LABEL_45:
    unint64_t v7 = *(void *)(result + 72) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v7 + 23) < 0)
    {
      **(unsigned char **)unint64_t v7 = 0;
      *(void *)(v7 + 8) = 0;
      if ((v2 & 8) != 0) {
        goto LABEL_49;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v7 = 0;
      *(unsigned char *)(v7 + 23) = 0;
      if ((v2 & 8) != 0) {
        goto LABEL_49;
      }
    }
LABEL_6:
    if ((v2 & 0x10) == 0) {
      goto LABEL_7;
    }
LABEL_53:
    unint64_t v9 = *(void *)(result + 88) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v9 + 23) < 0)
    {
      **(unsigned char **)unint64_t v9 = 0;
      *(void *)(v9 + 8) = 0;
      if ((v2 & 0x20) != 0) {
        goto LABEL_57;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v9 = 0;
      *(unsigned char *)(v9 + 23) = 0;
      if ((v2 & 0x20) != 0) {
        goto LABEL_57;
      }
    }
LABEL_8:
    if ((v2 & 0x40) == 0) {
      goto LABEL_9;
    }
    goto LABEL_61;
  }
  if ((v2 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_41:
  unint64_t v6 = *(void *)(result + 64) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v6 + 23) < 0)
  {
    **(unsigned char **)unint64_t v6 = 0;
    *(void *)(v6 + 8) = 0;
    if ((v2 & 4) != 0) {
      goto LABEL_45;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v6 = 0;
    *(unsigned char *)(v6 + 23) = 0;
    if ((v2 & 4) != 0) {
      goto LABEL_45;
    }
  }
LABEL_5:
  if ((v2 & 8) == 0) {
    goto LABEL_6;
  }
LABEL_49:
  unint64_t v8 = *(void *)(result + 80) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v8 + 23) < 0)
  {
    **(unsigned char **)unint64_t v8 = 0;
    *(void *)(v8 + 8) = 0;
    if ((v2 & 0x10) != 0) {
      goto LABEL_53;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v8 = 0;
    *(unsigned char *)(v8 + 23) = 0;
    if ((v2 & 0x10) != 0) {
      goto LABEL_53;
    }
  }
LABEL_7:
  if ((v2 & 0x20) == 0) {
    goto LABEL_8;
  }
LABEL_57:
  unint64_t v10 = *(void *)(result + 96) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v10 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v10 = 0;
    *(unsigned char *)(v10 + 23) = 0;
    if ((v2 & 0x40) != 0) {
      goto LABEL_61;
    }
LABEL_9:
    if ((v2 & 0x80) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  **(unsigned char **)unint64_t v10 = 0;
  *(void *)(v10 + 8) = 0;
  if ((v2 & 0x40) == 0) {
    goto LABEL_9;
  }
LABEL_61:
  unint64_t v11 = *(void *)(result + 104) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v11 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v11 = 0;
    *(unsigned char *)(v11 + 23) = 0;
    if ((v2 & 0x80) == 0) {
      goto LABEL_11;
    }
LABEL_10:
    uint64_t result = sub_12D3A88(*(void *)(result + 112));
    goto LABEL_11;
  }
  **(unsigned char **)unint64_t v11 = 0;
  *(void *)(v11 + 8) = 0;
  if ((v2 & 0x80) != 0) {
    goto LABEL_10;
  }
LABEL_11:
  if ((v2 & 0xFF00) == 0) {
    goto LABEL_21;
  }
  if ((v2 & 0x100) != 0)
  {
    uint64_t result = (uint64_t)sub_15B09D0(*(void *)(v1 + 120));
    if ((v2 & 0x200) == 0)
    {
LABEL_14:
      if ((v2 & 0x400) == 0) {
        goto LABEL_15;
      }
      goto LABEL_34;
    }
  }
  else if ((v2 & 0x200) == 0)
  {
    goto LABEL_14;
  }
  uint64_t result = (uint64_t)sub_15B16B4(*(unsigned char **)(v1 + 128));
  if ((v2 & 0x400) == 0)
  {
LABEL_15:
    if ((v2 & 0x800) == 0) {
      goto LABEL_16;
    }
    goto LABEL_35;
  }
LABEL_34:
  uint64_t result = sub_12E4DE4(*(void *)(v1 + 136));
  if ((v2 & 0x800) == 0)
  {
LABEL_16:
    if ((v2 & 0x1000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_36;
  }
LABEL_35:
  uint64_t result = sub_16BE138(*(void *)(v1 + 144));
  if ((v2 & 0x1000) == 0)
  {
LABEL_17:
    if ((v2 & 0x2000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_37;
  }
LABEL_36:
  uint64_t result = sub_15B6D84(*(void *)(v1 + 152));
  if ((v2 & 0x2000) == 0)
  {
LABEL_18:
    if ((v2 & 0x4000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_38;
  }
LABEL_37:
  uint64_t result = sub_12E4F38(*(void *)(v1 + 160));
  if ((v2 & 0x4000) == 0)
  {
LABEL_19:
    if ((v2 & 0x8000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_20;
  }
LABEL_38:
  uint64_t result = sub_12D5A1C(*(void *)(v1 + 168));
  if ((v2 & 0x8000) != 0) {
LABEL_20:
  }
    uint64_t result = (uint64_t)sub_15B09D0(*(void *)(v1 + 176));
LABEL_21:
  if ((v2 & 0x10000) != 0) {
    uint64_t result = (uint64_t)sub_15B09D0(*(void *)(v1 + 184));
  }
  if ((v2 & 0x1E0000) != 0) {
    *(void *)(v1 + 192) = 0;
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_12E55BC(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v84 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v84, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    unint64_t v8 = (unsigned __int8 *)(*(void *)v84 + 1);
    unsigned int v9 = **(unsigned char **)v84;
    if ((char)**(unsigned char **)v84 < 0)
    {
      int v10 = (char)*v8;
      unsigned int v11 = v9 + (v10 << 7);
      unsigned int v9 = v11 - 128;
      if (v10 < 0)
      {
        unint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v84, v11 - 128);
        unsigned int v9 = v12;
      }
      else
      {
        unint64_t v8 = (unsigned __int8 *)(*(void *)v84 + 2);
      }
    }
    *(void *)uint64_t v84 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_175;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v13 = *(void *)(a1 + 8);
        uint64_t v14 = (uint64_t *)(v13 & 0xFFFFFFFFFFFFFFFCLL);
        if (v13) {
          uint64_t v14 = (uint64_t *)*v14;
        }
        unint64_t v15 = (void *)(a1 + 56);
        goto LABEL_158;
      case 2u:
        if (v9 != 18) {
          goto LABEL_175;
        }
        *(_DWORD *)(a1 + 16) |= 0x80u;
        uint64_t v16 = *(void *)(a1 + 112);
        if (!v16)
        {
          uint64_t v17 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v17 = (void *)*v17;
          }
          uint64_t v16 = sub_12F816C((uint64_t)v17);
          *(void *)(a1 + 112) = v16;
          unint64_t v8 = *(unsigned __int8 **)v84;
        }
        uint64_t v18 = (uint64_t)sub_12D3F70(a3, v16, v8);
        goto LABEL_159;
      case 3u:
        if (v9 != 26) {
          goto LABEL_175;
        }
        *(_DWORD *)(a1 + 16) |= 0x100u;
        uint64_t v19 = *(void *)(a1 + 120);
        if (v19) {
          goto LABEL_114;
        }
        uint64_t v20 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          uint64_t v20 = (void *)*v20;
        }
        uint64_t v19 = sub_15C1918((uint64_t)v20);
        *(void *)(a1 + 120) = v19;
        goto LABEL_113;
      case 4u:
        if (v9 != 34) {
          goto LABEL_175;
        }
        *(_DWORD *)(a1 + 16) |= 0x200u;
        uint64_t v21 = *(void *)(a1 + 128);
        if (!v21)
        {
          uint64_t v22 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v22 = (void *)*v22;
          }
          uint64_t v21 = sub_15C19EC((uint64_t)v22);
          *(void *)(a1 + 128) = v21;
          unint64_t v8 = *(unsigned __int8 **)v84;
        }
        uint64_t v18 = (uint64_t)sub_11E1C60(a3, v21, v8);
        goto LABEL_159;
      case 5u:
        if (v9 != 42) {
          goto LABEL_175;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v23 = *(void *)(a1 + 8);
        uint64_t v14 = (uint64_t *)(v23 & 0xFFFFFFFFFFFFFFFCLL);
        if (v23) {
          uint64_t v14 = (uint64_t *)*v14;
        }
        unint64_t v15 = (void *)(a1 + 64);
        goto LABEL_158;
      case 6u:
        if (v9 != 50) {
          goto LABEL_175;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v24 = *(void *)(a1 + 8);
        uint64_t v14 = (uint64_t *)(v24 & 0xFFFFFFFFFFFFFFFCLL);
        if (v24) {
          uint64_t v14 = (uint64_t *)*v14;
        }
        unint64_t v15 = (void *)(a1 + 72);
        goto LABEL_158;
      case 7u:
        if (v9 != 56) {
          goto LABEL_175;
        }
        v5 |= 0x20000u;
        uint64_t v25 = (char *)(v8 + 1);
        uint64_t v26 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_42;
        }
        int v27 = *v25;
        uint64_t v26 = v26 + (v27 << 7) - 128;
        if (v27 < 0)
        {
          uint64_t v73 = sub_188C138((uint64_t)v8, v26);
          *(void *)uint64_t v84 = v73;
          *(unsigned char *)(a1 + 192) = v74 != 0;
          if (!v73) {
            goto LABEL_189;
          }
        }
        else
        {
          uint64_t v25 = (char *)(v8 + 2);
LABEL_42:
          *(void *)uint64_t v84 = v25;
          *(unsigned char *)(a1 + 192) = v26 != 0;
        }
        goto LABEL_160;
      case 8u:
        if (v9 != 66) {
          goto LABEL_175;
        }
        *(_DWORD *)(a1 + 16) |= 0x400u;
        unint64_t v28 = *(void **)(a1 + 136);
        if (!v28)
        {
          unsigned int v29 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            unsigned int v29 = (void *)*v29;
          }
          unint64_t v28 = sub_12F8410((uint64_t)v29);
          *(void *)(a1 + 136) = v28;
          unint64_t v8 = *(unsigned __int8 **)v84;
        }
        uint64_t v18 = sub_12E6070(a3, (uint64_t)v28, v8);
        goto LABEL_159;
      case 9u:
        if (v9 != 72) {
          goto LABEL_175;
        }
        v5 |= 0x40000u;
        unsigned int v30 = (char *)(v8 + 1);
        uint64_t v31 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_53;
        }
        int v32 = *v30;
        uint64_t v31 = v31 + (v32 << 7) - 128;
        if (v32 < 0)
        {
          uint64_t v75 = sub_188C138((uint64_t)v8, v31);
          *(void *)uint64_t v84 = v75;
          *(unsigned char *)(a1 + 193) = v76 != 0;
          if (!v75) {
            goto LABEL_189;
          }
        }
        else
        {
          unsigned int v30 = (char *)(v8 + 2);
LABEL_53:
          *(void *)uint64_t v84 = v30;
          *(unsigned char *)(a1 + 193) = v31 != 0;
        }
        goto LABEL_160;
      case 0xAu:
        if (v9 != 82) {
          goto LABEL_175;
        }
        *(_DWORD *)(a1 + 16) |= 0x800u;
        unsigned int v33 = *(void **)(a1 + 144);
        if (!v33)
        {
          uint64_t v34 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v34 = (void *)*v34;
          }
          unsigned int v33 = sub_1786400((uint64_t)v34);
          *(void *)(a1 + 144) = v33;
          unint64_t v8 = *(unsigned __int8 **)v84;
        }
        uint64_t v18 = sub_119BC44(a3, (uint64_t)v33, v8);
        goto LABEL_159;
      case 0xBu:
        if (v9 != 90) {
          goto LABEL_175;
        }
        *(_DWORD *)(a1 + 16) |= 0x1000u;
        unsigned int v35 = *(void **)(a1 + 152);
        if (!v35)
        {
          int v36 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            int v36 = (void *)*v36;
          }
          unsigned int v35 = sub_15C1E94((uint64_t)v36);
          *(void *)(a1 + 152) = v35;
          unint64_t v8 = *(unsigned __int8 **)v84;
        }
        uint64_t v18 = (uint64_t)sub_11EA9CC(a3, (uint64_t)v35, v8);
        goto LABEL_159;
      case 0xCu:
        if (v9 != 96) {
          goto LABEL_175;
        }
        v5 |= 0x80000u;
        uint64_t v37 = (char *)(v8 + 1);
        uint64_t v38 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_70;
        }
        int v39 = *v37;
        uint64_t v38 = v38 + (v39 << 7) - 128;
        if (v39 < 0)
        {
          uint64_t v77 = sub_188C138((uint64_t)v8, v38);
          *(void *)uint64_t v84 = v77;
          *(unsigned char *)(a1 + 194) = v78 != 0;
          if (!v77) {
            goto LABEL_189;
          }
        }
        else
        {
          uint64_t v37 = (char *)(v8 + 2);
LABEL_70:
          *(void *)uint64_t v84 = v37;
          *(unsigned char *)(a1 + 194) = v38 != 0;
        }
        goto LABEL_160;
      case 0xDu:
        if (v9 != 106) {
          goto LABEL_175;
        }
        *(_DWORD *)(a1 + 16) |= 0x2000u;
        uint64_t v40 = *(void *)(a1 + 160);
        if (!v40)
        {
          uint64_t v41 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v41 = (void *)*v41;
          }
          uint64_t v40 = sub_12F85B0((uint64_t)v41);
          *(void *)(a1 + 160) = v40;
          unint64_t v8 = *(unsigned __int8 **)v84;
        }
        uint64_t v18 = (uint64_t)sub_12E6100(a3, v40, v8);
        goto LABEL_159;
      case 0xEu:
        if (v9 != 114) {
          goto LABEL_175;
        }
        *(_DWORD *)(a1 + 16) |= 0x4000u;
        uint64_t v42 = *(void **)(a1 + 168);
        if (!v42)
        {
          uint64_t v43 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v43 = (void *)*v43;
          }
          uint64_t v42 = sub_12F8A84((uint64_t)v43);
          *(void *)(a1 + 168) = v42;
          unint64_t v8 = *(unsigned __int8 **)v84;
        }
        uint64_t v18 = sub_12D5B70(a3, (uint64_t)v42, v8);
        goto LABEL_159;
      case 0xFu:
        if (v9 == 120)
        {
          uint64_t v44 = (uint64_t)(v8 - 1);
          while (1)
          {
            *(void *)uint64_t v84 = v44 + 1;
            unint64_t v45 = *(unsigned __int8 *)(v44 + 1);
            uint64_t v46 = (char *)(v44 + 2);
            if (*(char *)(v44 + 1) < 0)
            {
              int v47 = *v46;
              int v48 = v45 + (v47 << 7);
              unint64_t v45 = (v48 - 128);
              if (v47 < 0)
              {
                *(void *)uint64_t v84 = sub_188C138(v44 + 1, (v48 - 128));
                if (!*(void *)v84) {
                  goto LABEL_189;
                }
                unint64_t v45 = v51;
                goto LABEL_89;
              }
              uint64_t v46 = (char *)(v44 + 3);
            }
            *(void *)uint64_t v84 = v46;
LABEL_89:
            if (v45 > 6)
            {
              if (*v7) {
                int v52 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
              }
              else {
                int v52 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              }
              sub_188C020(15, v45, v52);
            }
            else
            {
              uint64_t v49 = *(unsigned int *)(a1 + 24);
              if (v49 == *(_DWORD *)(a1 + 28))
              {
                int v50 = v49 + 1;
                sub_188C80C((unsigned int *)(a1 + 24), v49 + 1);
                *(_DWORD *)(*(void *)(a1 + 32) + 4 * v49) = v45;
              }
              else
              {
                *(_DWORD *)(*(void *)(a1 + 32) + 4 * v49) = v45;
                int v50 = v49 + 1;
              }
              *(_DWORD *)(a1 + 24) = v50;
            }
            uint64_t v44 = *(void *)v84;
            if (*(void *)a3 <= *(void *)v84 || **(unsigned char **)v84 != 120) {
              goto LABEL_160;
            }
          }
        }
        if (v9 != 122) {
          goto LABEL_175;
        }
        *(void *)&long long v85 = a1 + 24;
        *((void *)&v85 + 1) = sub_12E6190;
        uint64_t v86 = a1 + 8;
        int v80 = 15;
        goto LABEL_174;
      case 0x10u:
        if (v9 != 130) {
          goto LABEL_175;
        }
        *(_DWORD *)(a1 + 16) |= 0x8000u;
        uint64_t v19 = *(void *)(a1 + 176);
        if (v19) {
          goto LABEL_114;
        }
        uint64_t v53 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          uint64_t v53 = (void *)*v53;
        }
        uint64_t v19 = sub_15C1918((uint64_t)v53);
        *(void *)(a1 + 176) = v19;
        goto LABEL_113;
      case 0x11u:
        if (v9 != 138) {
          goto LABEL_175;
        }
        *(_DWORD *)(a1 + 16) |= 0x10000u;
        uint64_t v19 = *(void *)(a1 + 184);
        if (v19) {
          goto LABEL_114;
        }
        int v54 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          int v54 = (void *)*v54;
        }
        uint64_t v19 = sub_15C1918((uint64_t)v54);
        *(void *)(a1 + 184) = v19;
LABEL_113:
        unint64_t v8 = *(unsigned __int8 **)v84;
LABEL_114:
        uint64_t v18 = (uint64_t)sub_1198F14(a3, v19, v8);
        goto LABEL_159;
      case 0x12u:
        if (v9 != 144) {
          goto LABEL_175;
        }
        uint64_t v55 = (char *)(v8 + 1);
        unint64_t v56 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_119;
        }
        int v57 = *v55;
        int v58 = v56 + (v57 << 7);
        unint64_t v56 = (v58 - 128);
        if (v57 < 0)
        {
          *(void *)uint64_t v84 = sub_188C138((uint64_t)v8, (v58 - 128));
          if (!*(void *)v84) {
            goto LABEL_189;
          }
          unint64_t v56 = v79;
        }
        else
        {
          uint64_t v55 = (char *)(v8 + 2);
LABEL_119:
          *(void *)uint64_t v84 = v55;
        }
        if (v56 > 9)
        {
          if (*v7) {
            uint64_t v83 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v83 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(18, v56, v83);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 0x100000u;
          *(_DWORD *)(a1 + 196) = v56;
        }
        goto LABEL_160;
      case 0x13u:
        if (v9 != 154) {
          goto LABEL_175;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v59 = *(void *)(a1 + 8);
        uint64_t v14 = (uint64_t *)(v59 & 0xFFFFFFFFFFFFFFFCLL);
        if (v59) {
          uint64_t v14 = (uint64_t *)*v14;
        }
        unint64_t v15 = (void *)(a1 + 80);
        goto LABEL_158;
      case 0x14u:
        if (v9 == 160)
        {
          uint64_t v60 = (uint64_t)(v8 - 2);
          while (1)
          {
            *(void *)uint64_t v84 = v60 + 2;
            unint64_t v61 = *(unsigned __int8 *)(v60 + 2);
            unsigned int v62 = (char *)(v60 + 3);
            if (*(char *)(v60 + 2) < 0)
            {
              int v63 = *v62;
              int v64 = v61 + (v63 << 7);
              unint64_t v61 = (v64 - 128);
              if (v63 < 0)
              {
                *(void *)uint64_t v84 = sub_188C138(v60 + 2, (v64 - 128));
                if (!*(void *)v84) {
                  goto LABEL_189;
                }
                unint64_t v61 = v67;
                goto LABEL_132;
              }
              unsigned int v62 = (char *)(v60 + 4);
            }
            *(void *)uint64_t v84 = v62;
LABEL_132:
            if (v61 > 1)
            {
              if (*v7) {
                uint64_t v68 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
              }
              else {
                uint64_t v68 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              }
              sub_188C020(20, v61, v68);
            }
            else
            {
              uint64_t v65 = *(unsigned int *)(a1 + 40);
              if (v65 == *(_DWORD *)(a1 + 44))
              {
                int v66 = v65 + 1;
                sub_188C80C((unsigned int *)(a1 + 40), v65 + 1);
                *(_DWORD *)(*(void *)(a1 + 48) + 4 * v65) = v61;
              }
              else
              {
                *(_DWORD *)(*(void *)(a1 + 48) + 4 * v65) = v61;
                int v66 = v65 + 1;
              }
              *(_DWORD *)(a1 + 40) = v66;
            }
            uint64_t v60 = *(void *)v84;
            if (*(void *)a3 <= *(void *)v84 || **(_WORD **)v84 != 416) {
              goto LABEL_160;
            }
          }
        }
        if (v9 == 162)
        {
          *(void *)&long long v85 = a1 + 40;
          *((void *)&v85 + 1) = sub_12E619C;
          uint64_t v86 = a1 + 8;
          int v80 = 20;
LABEL_174:
          int v87 = v80;
          uint64_t v18 = (uint64_t)sub_1112E88((uint64_t)a3, (char *)v8, &v85);
LABEL_159:
          *(void *)uint64_t v84 = v18;
          if (!v18) {
            goto LABEL_189;
          }
LABEL_160:
          if (sub_11947B8((uint64_t)a3, (char **)v84, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
LABEL_175:
        if (v9) {
          BOOL v81 = (v9 & 7) == 4;
        }
        else {
          BOOL v81 = 1;
        }
        if (!v81)
        {
          if (*v7)
          {
            uint64_t v82 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v82 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unint64_t v8 = *(unsigned __int8 **)v84;
          }
          uint64_t v18 = (uint64_t)sub_1885AC0(v9, v82, (char *)v8, a3);
          goto LABEL_159;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_189:
        }
          *(void *)uint64_t v84 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v84;
      case 0x15u:
        if (v9 != 170) {
          goto LABEL_175;
        }
        *(_DWORD *)(a1 + 16) |= 0x10u;
        uint64_t v69 = *(void *)(a1 + 8);
        uint64_t v14 = (uint64_t *)(v69 & 0xFFFFFFFFFFFFFFFCLL);
        if (v69) {
          uint64_t v14 = (uint64_t *)*v14;
        }
        unint64_t v15 = (void *)(a1 + 88);
        goto LABEL_158;
      case 0x16u:
        if (v9 != 178) {
          goto LABEL_175;
        }
        *(_DWORD *)(a1 + 16) |= 0x20u;
        uint64_t v70 = *(void *)(a1 + 8);
        uint64_t v14 = (uint64_t *)(v70 & 0xFFFFFFFFFFFFFFFCLL);
        if (v70) {
          uint64_t v14 = (uint64_t *)*v14;
        }
        unint64_t v15 = (void *)(a1 + 96);
        goto LABEL_158;
      case 0x17u:
        if (v9 != 186) {
          goto LABEL_175;
        }
        *(_DWORD *)(a1 + 16) |= 0x40u;
        uint64_t v71 = *(void *)(a1 + 8);
        uint64_t v14 = (uint64_t *)(v71 & 0xFFFFFFFFFFFFFFFCLL);
        if (v71) {
          uint64_t v14 = (uint64_t *)*v14;
        }
        unint64_t v15 = (void *)(a1 + 104);
LABEL_158:
        unint64_t v72 = (std::string *)sub_1880F84(v15, v14);
        uint64_t v18 = (uint64_t)sub_188C244(v72, *(char **)v84, (uint64_t)a3);
        goto LABEL_159;
      default:
        goto LABEL_175;
    }
  }
}

uint64_t sub_12E6070(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12F0C38(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_12E6100(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12F22C4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

BOOL sub_12E6190(unsigned int a1)
{
  return a1 < 7;
}

BOOL sub_12E619C(unsigned int a1)
{
  return a1 < 2;
}

unsigned char *sub_12E61A8(uint64_t a1, unsigned char *__dst, unint64_t *a3)
{
  char v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    char v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 0x80) == 0)
    {
LABEL_3:
      if ((v6 & 0x100) == 0) {
        goto LABEL_4;
      }
      goto LABEL_23;
    }
  }
  else if ((v6 & 0x80) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v7 = *(void *)(a1 + 112);
  unsigned char *v4 = 18;
  unsigned int v8 = *(_DWORD *)(v7 + 20);
  v4[1] = v8;
  if (v8 > 0x7F) {
    unsigned int v9 = sub_188A9CC(v8, v4 + 1);
  }
  else {
    unsigned int v9 = v4 + 2;
  }
  char v4 = sub_12EE724(v7, (unint64_t)v9, a3);
  if ((v6 & 0x100) == 0)
  {
LABEL_4:
    if ((v6 & 0x200) == 0) {
      goto LABEL_5;
    }
    goto LABEL_29;
  }
LABEL_23:
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v10 = *(void *)(a1 + 120);
  unsigned char *v4 = 26;
  unsigned int v11 = *(_DWORD *)(v10 + 44);
  v4[1] = v11;
  if (v11 > 0x7F) {
    unsigned int v12 = sub_188A9CC(v11, v4 + 1);
  }
  else {
    unsigned int v12 = v4 + 2;
  }
  char v4 = sub_15B0C0C(v10, v12, a3);
  if ((v6 & 0x200) == 0)
  {
LABEL_5:
    if ((v6 & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_35;
  }
LABEL_29:
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v13 = *(void *)(a1 + 128);
  unsigned char *v4 = 34;
  unsigned int v14 = *(_DWORD *)(v13 + 20);
  v4[1] = v14;
  if (v14 > 0x7F) {
    unint64_t v15 = sub_188A9CC(v14, v4 + 1);
  }
  else {
    unint64_t v15 = v4 + 2;
  }
  char v4 = sub_15B1A68(v13, (unint64_t)v15, a3);
  if ((v6 & 2) == 0)
  {
LABEL_6:
    if ((v6 & 4) == 0) {
      goto LABEL_7;
    }
    goto LABEL_36;
  }
LABEL_35:
  char v4 = sub_117A0AC(a3, 5, (const void **)(*(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) == 0)
  {
LABEL_7:
    if ((v6 & 0x20000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_37;
  }
LABEL_36:
  char v4 = sub_117A0AC(a3, 6, (const void **)(*(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x20000) == 0)
  {
LABEL_8:
    if ((v6 & 0x400) == 0) {
      goto LABEL_9;
    }
    goto LABEL_40;
  }
LABEL_37:
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v16 = *(unsigned char *)(a1 + 192);
  unsigned char *v4 = 56;
  v4[1] = v16;
  v4 += 2;
  if ((v6 & 0x400) == 0)
  {
LABEL_9:
    if ((v6 & 0x40000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_46;
  }
LABEL_40:
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v17 = *(void *)(a1 + 136);
  unsigned char *v4 = 66;
  unsigned int v18 = *(_DWORD *)(v17 + 20);
  v4[1] = v18;
  if (v18 > 0x7F) {
    uint64_t v19 = sub_188A9CC(v18, v4 + 1);
  }
  else {
    uint64_t v19 = v4 + 2;
  }
  char v4 = sub_12F0F08(v17, v19, a3);
  if ((v6 & 0x40000) == 0)
  {
LABEL_10:
    if ((v6 & 0x800) == 0) {
      goto LABEL_11;
    }
    goto LABEL_49;
  }
LABEL_46:
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v20 = *(unsigned char *)(a1 + 193);
  unsigned char *v4 = 72;
  v4[1] = v20;
  v4 += 2;
  if ((v6 & 0x800) == 0)
  {
LABEL_11:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_55;
  }
LABEL_49:
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v21 = *(void *)(a1 + 144);
  unsigned char *v4 = 82;
  unsigned int v22 = *(_DWORD *)(v21 + 20);
  v4[1] = v22;
  if (v22 > 0x7F) {
    uint64_t v23 = sub_188A9CC(v22, v4 + 1);
  }
  else {
    uint64_t v23 = v4 + 2;
  }
  char v4 = sub_16BE2D4(v21, v23, a3);
  if ((v6 & 0x1000) == 0)
  {
LABEL_12:
    if ((v6 & 0x80000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_61;
  }
LABEL_55:
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v24 = *(void *)(a1 + 152);
  unsigned char *v4 = 90;
  unsigned int v25 = *(_DWORD *)(v24 + 20);
  v4[1] = v25;
  if (v25 > 0x7F) {
    uint64_t v26 = sub_188A9CC(v25, v4 + 1);
  }
  else {
    uint64_t v26 = v4 + 2;
  }
  char v4 = sub_15B7AE4(v24, v26, a3);
  if ((v6 & 0x80000) == 0)
  {
LABEL_13:
    if ((v6 & 0x2000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_64;
  }
LABEL_61:
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v27 = *(unsigned char *)(a1 + 194);
  unsigned char *v4 = 96;
  v4[1] = v27;
  v4 += 2;
  if ((v6 & 0x2000) == 0)
  {
LABEL_14:
    if ((v6 & 0x4000) == 0) {
      goto LABEL_76;
    }
    goto LABEL_70;
  }
LABEL_64:
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v28 = *(void *)(a1 + 160);
  unsigned char *v4 = 106;
  unsigned int v29 = *(_DWORD *)(v28 + 152);
  v4[1] = v29;
  if (v29 > 0x7F) {
    unsigned int v30 = sub_188A9CC(v29, v4 + 1);
  }
  else {
    unsigned int v30 = v4 + 2;
  }
  char v4 = sub_12F287C(v28, v30, a3);
  if ((v6 & 0x4000) != 0)
  {
LABEL_70:
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v31 = *(void *)(a1 + 168);
    unsigned char *v4 = 114;
    unsigned int v32 = *(_DWORD *)(v31 + 20);
    v4[1] = v32;
    if (v32 > 0x7F) {
      unsigned int v33 = sub_188A9CC(v32, v4 + 1);
    }
    else {
      unsigned int v33 = v4 + 2;
    }
    char v4 = sub_12F6878(v31, v33, a3);
  }
LABEL_76:
  uint64_t v34 = *(unsigned int *)(a1 + 24);
  if ((int)v34 >= 1)
  {
    for (uint64_t i = 0; i != v34; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v36 = *(int *)(*(void *)(a1 + 32) + 4 * i);
      unsigned char *v4 = 120;
      v4[1] = v36;
      if (v36 > 0x7F)
      {
        v4[1] = v36 | 0x80;
        unint64_t v37 = v36 >> 7;
        v4[2] = v36 >> 7;
        v4 += 3;
        if (v36 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v38 = v37 >> 14;
            v37 >>= 7;
            *v4++ = v37;
          }
          while (v38);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  if ((v6 & 0x8000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v39 = *(void *)(a1 + 176);
    *(_WORD *)char v4 = 386;
    unsigned int v40 = *(_DWORD *)(v39 + 44);
    v4[2] = v40;
    if (v40 > 0x7F) {
      uint64_t v41 = sub_188A9CC(v40, v4 + 2);
    }
    else {
      uint64_t v41 = v4 + 3;
    }
    char v4 = sub_15B0C0C(v39, v41, a3);
    if ((v6 & 0x10000) == 0)
    {
LABEL_87:
      if ((v6 & 0x100000) == 0) {
        goto LABEL_107;
      }
      goto LABEL_101;
    }
  }
  else if ((v6 & 0x10000) == 0)
  {
    goto LABEL_87;
  }
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v42 = *(void *)(a1 + 184);
  *(_WORD *)char v4 = 394;
  unsigned int v43 = *(_DWORD *)(v42 + 44);
  v4[2] = v43;
  if (v43 > 0x7F) {
    uint64_t v44 = sub_188A9CC(v43, v4 + 2);
  }
  else {
    uint64_t v44 = v4 + 3;
  }
  char v4 = sub_15B0C0C(v42, v44, a3);
  if ((v6 & 0x100000) != 0)
  {
LABEL_101:
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v45 = *(int *)(a1 + 196);
    *(_WORD *)char v4 = 400;
    v4[2] = v45;
    if (v45 > 0x7F)
    {
      v4[2] = v45 | 0x80;
      unint64_t v46 = v45 >> 7;
      v4[3] = v45 >> 7;
      v4 += 4;
      if (v45 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v47 = v46 >> 14;
          v46 >>= 7;
          *v4++ = v46;
        }
        while (v47);
      }
    }
    else
    {
      v4 += 3;
    }
  }
LABEL_107:
  if ((v6 & 8) != 0) {
    char v4 = sub_117A0AC(a3, 19, (const void **)(*(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v48 = *(unsigned int *)(a1 + 40);
  if ((int)v48 >= 1)
  {
    for (uint64_t j = 0; j != v48; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v50 = *(int *)(*(void *)(a1 + 48) + 4 * j);
      *(_WORD *)char v4 = 416;
      v4[2] = v50;
      if (v50 > 0x7F)
      {
        v4[2] = v50 | 0x80;
        unint64_t v51 = v50 >> 7;
        v4[3] = v50 >> 7;
        v4 += 4;
        if (v50 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v52 = v51 >> 14;
            v51 >>= 7;
            *v4++ = v51;
          }
          while (v52);
        }
      }
      else
      {
        v4 += 3;
      }
    }
  }
  if ((v6 & 0x10) != 0)
  {
    char v4 = sub_117A0AC(a3, 21, (const void **)(*(void *)(a1 + 88) & 0xFFFFFFFFFFFFFFFELL), v4);
    if ((v6 & 0x20) == 0)
    {
LABEL_120:
      if ((v6 & 0x40) == 0) {
        goto LABEL_122;
      }
      goto LABEL_121;
    }
  }
  else if ((v6 & 0x20) == 0)
  {
    goto LABEL_120;
  }
  char v4 = sub_117A0AC(a3, 22, (const void **)(*(void *)(a1 + 96) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x40) != 0) {
LABEL_121:
  }
    char v4 = sub_117A0AC(a3, 23, (const void **)(*(void *)(a1 + 104) & 0xFFFFFFFFFFFFFFFELL), v4);
LABEL_122:
  uint64_t v53 = *(void *)(a1 + 8);
  if ((v53 & 1) == 0) {
    return v4;
  }
  unint64_t v55 = v53 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v55 + 31) < 0)
  {
    unint64_t v56 = *(void **)(v55 + 8);
    uint64_t v57 = *(void *)(v55 + 16);
  }
  else
  {
    unint64_t v56 = (void *)(v55 + 8);
    LODWORD(v57) = *(unsigned __int8 *)(v55 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v57)
  {
    uint64_t v58 = (int)v57;
    memcpy(v4, v56, (int)v57);
    v4 += v58;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v56, v57, v4);
}

uint64_t sub_12E69E0(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 24);
  if (v2)
  {
    int v3 = 0;
    uint64_t v4 = 0;
    do
    {
      int v5 = *(_DWORD *)(*(void *)(a1 + 32) + 4 * v3);
      if (v5 < 0) {
        uint64_t v6 = 10;
      }
      else {
        uint64_t v6 = (9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6;
      }
      v4 += v6;
      ++v3;
    }
    while (v2 != v3);
  }
  else
  {
    uint64_t v4 = 0;
  }
  uint64_t v7 = *(unsigned int *)(a1 + 40);
  if (v7)
  {
    int v8 = 0;
    uint64_t v9 = 0;
    do
    {
      int v10 = *(_DWORD *)(*(void *)(a1 + 48) + 4 * v8);
      if (v10 < 0) {
        uint64_t v11 = 10;
      }
      else {
        uint64_t v11 = (9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6;
      }
      v9 += v11;
      ++v8;
    }
    while (v7 != v8);
  }
  else
  {
    uint64_t v9 = 0;
  }
  uint64_t v12 = v4 + v2 + 2 * v7 + v9;
  int v13 = *(_DWORD *)(a1 + 16);
  if (!(_BYTE)v13) {
    goto LABEL_27;
  }
  if (v13)
  {
    unint64_t v23 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v24 = *(unsigned __int8 *)(v23 + 23);
    uint64_t v25 = *(void *)(v23 + 8);
    if ((v24 & 0x80u) == 0) {
      uint64_t v25 = v24;
    }
    v12 += v25 + ((9 * (__clz(v25 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v13 & 2) == 0)
    {
LABEL_20:
      if ((v13 & 4) == 0) {
        goto LABEL_21;
      }
      goto LABEL_60;
    }
  }
  else if ((v13 & 2) == 0)
  {
    goto LABEL_20;
  }
  unint64_t v26 = *(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v27 = *(unsigned __int8 *)(v26 + 23);
  uint64_t v28 = *(void *)(v26 + 8);
  if ((v27 & 0x80u) == 0) {
    uint64_t v28 = v27;
  }
  v12 += v28 + ((9 * (__clz(v28 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v13 & 4) == 0)
  {
LABEL_21:
    if ((v13 & 8) == 0) {
      goto LABEL_22;
    }
    goto LABEL_63;
  }
LABEL_60:
  unint64_t v29 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v30 = *(unsigned __int8 *)(v29 + 23);
  uint64_t v31 = *(void *)(v29 + 8);
  if ((v30 & 0x80u) == 0) {
    uint64_t v31 = v30;
  }
  v12 += v31 + ((9 * (__clz(v31 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v13 & 8) == 0)
  {
LABEL_22:
    if ((v13 & 0x10) == 0) {
      goto LABEL_23;
    }
    goto LABEL_66;
  }
LABEL_63:
  unint64_t v32 = *(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v33 = *(unsigned __int8 *)(v32 + 23);
  uint64_t v34 = *(void *)(v32 + 8);
  if ((v33 & 0x80u) == 0) {
    uint64_t v34 = v33;
  }
  v12 += v34 + ((9 * (__clz(v34 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v13 & 0x10) == 0)
  {
LABEL_23:
    if ((v13 & 0x20) == 0) {
      goto LABEL_24;
    }
LABEL_69:
    unint64_t v38 = *(void *)(a1 + 96) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v39 = *(unsigned __int8 *)(v38 + 23);
    uint64_t v40 = *(void *)(v38 + 8);
    if ((v39 & 0x80u) == 0) {
      uint64_t v40 = v39;
    }
    v12 += v40 + ((9 * (__clz(v40 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v13 & 0x40) == 0)
    {
LABEL_25:
      if ((v13 & 0x80) == 0) {
        goto LABEL_27;
      }
      goto LABEL_26;
    }
    goto LABEL_72;
  }
LABEL_66:
  unint64_t v35 = *(void *)(a1 + 88) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v36 = *(unsigned __int8 *)(v35 + 23);
  uint64_t v37 = *(void *)(v35 + 8);
  if ((v36 & 0x80u) == 0) {
    uint64_t v37 = v36;
  }
  v12 += v37 + ((9 * (__clz(v37 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v13 & 0x20) != 0) {
    goto LABEL_69;
  }
LABEL_24:
  if ((v13 & 0x40) == 0) {
    goto LABEL_25;
  }
LABEL_72:
  unint64_t v41 = *(void *)(a1 + 104) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v42 = *(unsigned __int8 *)(v41 + 23);
  uint64_t v43 = *(void *)(v41 + 8);
  if ((v42 & 0x80u) == 0) {
    uint64_t v43 = v42;
  }
  v12 += v43 + ((9 * (__clz(v43 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v13 & 0x80) != 0)
  {
LABEL_26:
    unint64_t v14 = sub_12EE8C8(*(void *)(a1 + 112));
    v12 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_27:
  if ((v13 & 0xFF00) == 0) {
    goto LABEL_37;
  }
  if ((v13 & 0x100) != 0)
  {
    uint64_t v44 = sub_15B0D90(*(void *)(a1 + 120));
    v12 += v44 + ((9 * (__clz(v44 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v13 & 0x200) == 0)
    {
LABEL_30:
      if ((v13 & 0x400) == 0) {
        goto LABEL_31;
      }
      goto LABEL_78;
    }
  }
  else if ((v13 & 0x200) == 0)
  {
    goto LABEL_30;
  }
  uint64_t v45 = sub_15B1D1C(*(void *)(a1 + 128));
  v12 += v45 + ((9 * (__clz(v45 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v13 & 0x400) == 0)
  {
LABEL_31:
    if ((v13 & 0x800) == 0) {
      goto LABEL_32;
    }
    goto LABEL_79;
  }
LABEL_78:
  uint64_t v46 = sub_12F108C(*(void *)(a1 + 136));
  v12 += v46 + ((9 * (__clz(v46 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v13 & 0x800) == 0)
  {
LABEL_32:
    if ((v13 & 0x1000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_80;
  }
LABEL_79:
  uint64_t v47 = sub_16BE3A0(*(void *)(a1 + 144));
  v12 += v47 + ((9 * (__clz(v47 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v13 & 0x1000) == 0)
  {
LABEL_33:
    if ((v13 & 0x2000) == 0) {
      goto LABEL_34;
    }
    goto LABEL_81;
  }
LABEL_80:
  uint64_t v48 = sub_15B806C(*(void *)(a1 + 152));
  v12 += v48 + ((9 * (__clz(v48 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v13 & 0x2000) == 0)
  {
LABEL_34:
    if ((v13 & 0x4000) == 0) {
      goto LABEL_35;
    }
    goto LABEL_82;
  }
LABEL_81:
  uint64_t v49 = sub_12F2C6C(*(void *)(a1 + 160));
  v12 += v49 + ((9 * (__clz(v49 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v13 & 0x4000) == 0)
  {
LABEL_35:
    if ((v13 & 0x8000) == 0) {
      goto LABEL_37;
    }
    goto LABEL_36;
  }
LABEL_82:
  uint64_t v50 = sub_12F69FC(*(void *)(a1 + 168));
  v12 += v50 + ((9 * (__clz(v50 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v13 & 0x8000) != 0)
  {
LABEL_36:
    uint64_t v15 = sub_15B0D90(*(void *)(a1 + 176));
    v12 += v15 + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
LABEL_37:
  if ((v13 & 0x1F0000) != 0)
  {
    if ((v13 & 0x10000) != 0)
    {
      uint64_t v16 = sub_15B0D90(*(void *)(a1 + 184));
      v12 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    uint64_t v17 = v12 + 2;
    if ((v13 & 0x20000) == 0) {
      uint64_t v17 = v12;
    }
    if ((v13 & 0x40000) != 0) {
      v17 += 2;
    }
    if ((v13 & 0x80000) != 0) {
      uint64_t v12 = v17 + 2;
    }
    else {
      uint64_t v12 = v17;
    }
    if ((v13 & 0x100000) != 0)
    {
      int v18 = *(_DWORD *)(a1 + 196);
      uint64_t v19 = ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6) + 2;
      if (v18 >= 0) {
        uint64_t v20 = v19;
      }
      else {
        uint64_t v20 = 12;
      }
      v12 += v20;
    }
  }
  uint64_t v21 = *(void *)(a1 + 8);
  if (v21)
  {
    unint64_t v51 = v21 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v51 + 31) < 0) {
      uint64_t v52 = *(void *)(v51 + 16);
    }
    else {
      uint64_t v52 = *(unsigned __int8 *)(v51 + 31);
    }
    v12 += v52;
  }
  *(_DWORD *)(a1 + 20) = v12;
  return v12;
}

void sub_12E6F60(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    int v5 = (_DWORD *)(a1 + 24);
    uint64_t v6 = *(int *)(a1 + 24);
    sub_188C80C((unsigned int *)(a1 + 24), v6 + v4);
    uint64_t v7 = *(void *)(a1 + 32);
    *v5 += *(_DWORD *)(a2 + 24);
    memcpy((void *)(v7 + 4 * v6), *(const void **)(a2 + 32), 4 * *(int *)(a2 + 24));
  }
  int v8 = *(_DWORD *)(a2 + 40);
  if (v8)
  {
    uint64_t v9 = *(int *)(a1 + 40);
    sub_188C80C((unsigned int *)(a1 + 40), v9 + v8);
    uint64_t v10 = *(void *)(a1 + 48);
    *(_DWORD *)(a1 + 40) += *(_DWORD *)(a2 + 40);
    memcpy((void *)(v10 + 4 * v9), *(const void **)(a2 + 48), 4 * *(int *)(a2 + 40));
  }
  int v11 = *(_DWORD *)(a2 + 16);
  if (!(_BYTE)v11) {
    goto LABEL_44;
  }
  if (v11)
  {
    uint64_t v12 = (long long *)(*(void *)(a2 + 56) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v13 = *(void *)(a1 + 8);
    unint64_t v14 = (uint64_t *)(v13 & 0xFFFFFFFFFFFFFFFCLL);
    if (v13) {
      unint64_t v14 = (uint64_t *)*v14;
    }
    sub_1881DF4((std::string **)(a1 + 56), v12, v14);
    if ((v11 & 2) == 0)
    {
LABEL_8:
      if ((v11 & 4) == 0) {
        goto LABEL_9;
      }
      goto LABEL_21;
    }
  }
  else if ((v11 & 2) == 0)
  {
    goto LABEL_8;
  }
  uint64_t v15 = (long long *)(*(void *)(a2 + 64) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 16) |= 2u;
  uint64_t v16 = *(void *)(a1 + 8);
  uint64_t v17 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
  if (v16) {
    uint64_t v17 = (uint64_t *)*v17;
  }
  sub_1881DF4((std::string **)(a1 + 64), v15, v17);
  if ((v11 & 4) == 0)
  {
LABEL_9:
    if ((v11 & 8) == 0) {
      goto LABEL_10;
    }
    goto LABEL_24;
  }
LABEL_21:
  int v18 = (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 16) |= 4u;
  uint64_t v19 = *(void *)(a1 + 8);
  uint64_t v20 = (uint64_t *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
  if (v19) {
    uint64_t v20 = (uint64_t *)*v20;
  }
  sub_1881DF4((std::string **)(a1 + 72), v18, v20);
  if ((v11 & 8) == 0)
  {
LABEL_10:
    if ((v11 & 0x10) == 0) {
      goto LABEL_11;
    }
    goto LABEL_27;
  }
LABEL_24:
  uint64_t v21 = (long long *)(*(void *)(a2 + 80) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 16) |= 8u;
  uint64_t v22 = *(void *)(a1 + 8);
  unint64_t v23 = (uint64_t *)(v22 & 0xFFFFFFFFFFFFFFFCLL);
  if (v22) {
    unint64_t v23 = (uint64_t *)*v23;
  }
  sub_1881DF4((std::string **)(a1 + 80), v21, v23);
  if ((v11 & 0x10) == 0)
  {
LABEL_11:
    if ((v11 & 0x20) == 0) {
      goto LABEL_12;
    }
LABEL_30:
    uint64_t v27 = (long long *)(*(void *)(a2 + 96) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 0x20u;
    uint64_t v28 = *(void *)(a1 + 8);
    unint64_t v29 = (uint64_t *)(v28 & 0xFFFFFFFFFFFFFFFCLL);
    if (v28) {
      unint64_t v29 = (uint64_t *)*v29;
    }
    sub_1881DF4((std::string **)(a1 + 96), v27, v29);
    if ((v11 & 0x40) == 0)
    {
LABEL_13:
      if ((v11 & 0x80) == 0) {
        goto LABEL_44;
      }
      goto LABEL_36;
    }
    goto LABEL_33;
  }
LABEL_27:
  uint64_t v24 = (long long *)(*(void *)(a2 + 88) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 16) |= 0x10u;
  uint64_t v25 = *(void *)(a1 + 8);
  unint64_t v26 = (uint64_t *)(v25 & 0xFFFFFFFFFFFFFFFCLL);
  if (v25) {
    unint64_t v26 = (uint64_t *)*v26;
  }
  sub_1881DF4((std::string **)(a1 + 88), v24, v26);
  if ((v11 & 0x20) != 0) {
    goto LABEL_30;
  }
LABEL_12:
  if ((v11 & 0x40) == 0) {
    goto LABEL_13;
  }
LABEL_33:
  uint64_t v30 = (long long *)(*(void *)(a2 + 104) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 16) |= 0x40u;
  uint64_t v31 = *(void *)(a1 + 8);
  unint64_t v32 = (uint64_t *)(v31 & 0xFFFFFFFFFFFFFFFCLL);
  if (v31) {
    unint64_t v32 = (uint64_t *)*v32;
  }
  sub_1881DF4((std::string **)(a1 + 104), v30, v32);
  if ((v11 & 0x80) != 0)
  {
LABEL_36:
    *(_DWORD *)(a1 + 16) |= 0x80u;
    uint64_t v33 = *(std::string **)(a1 + 112);
    if (!v33)
    {
      uint64_t v34 = *(void *)(a1 + 8);
      unint64_t v35 = (void *)(v34 & 0xFFFFFFFFFFFFFFFCLL);
      if (v34) {
        unint64_t v35 = (void *)*v35;
      }
      uint64_t v33 = (std::string *)sub_12F816C((uint64_t)v35);
      *(void *)(a1 + 112) = v33;
    }
    if (*(void *)(a2 + 112)) {
      uint64_t v36 = *(uint64_t (****)())(a2 + 112);
    }
    else {
      uint64_t v36 = &off_2531E00;
    }
    sub_12D45B4(v33, (uint64_t)v36);
  }
LABEL_44:
  if ((v11 & 0xFF00) == 0) {
    goto LABEL_118;
  }
  if ((v11 & 0x100) != 0)
  {
    *(_DWORD *)(a1 + 16) |= 0x100u;
    uint64_t v37 = *(void *)(a1 + 120);
    if (!v37)
    {
      uint64_t v38 = *(void *)(a1 + 8);
      uint64_t v39 = (void *)(v38 & 0xFFFFFFFFFFFFFFFCLL);
      if (v38) {
        uint64_t v39 = (void *)*v39;
      }
      uint64_t v37 = sub_15C1918((uint64_t)v39);
      *(void *)(a1 + 120) = v37;
    }
    if (*(void *)(a2 + 120)) {
      uint64_t v40 = *(uint64_t (****)())(a2 + 120);
    }
    else {
      uint64_t v40 = &off_253F1A0;
    }
    sub_15B0E24(v37, (uint64_t)v40);
    if ((v11 & 0x200) == 0)
    {
LABEL_47:
      if ((v11 & 0x400) == 0) {
        goto LABEL_48;
      }
      goto LABEL_70;
    }
  }
  else if ((v11 & 0x200) == 0)
  {
    goto LABEL_47;
  }
  *(_DWORD *)(a1 + 16) |= 0x200u;
  uint64_t v41 = *(void *)(a1 + 128);
  if (!v41)
  {
    uint64_t v42 = *(void *)(a1 + 8);
    uint64_t v43 = (void *)(v42 & 0xFFFFFFFFFFFFFFFCLL);
    if (v42) {
      uint64_t v43 = (void *)*v43;
    }
    uint64_t v41 = sub_15C19EC((uint64_t)v43);
    *(void *)(a1 + 128) = v41;
  }
  if (*(void *)(a2 + 128)) {
    uint64_t v44 = *(uint64_t (****)())(a2 + 128);
  }
  else {
    uint64_t v44 = &off_253F208;
  }
  sub_15B1E3C(v41, (uint64_t)v44);
  if ((v11 & 0x400) == 0)
  {
LABEL_48:
    if ((v11 & 0x800) == 0) {
      goto LABEL_49;
    }
    goto LABEL_78;
  }
LABEL_70:
  *(_DWORD *)(a1 + 16) |= 0x400u;
  uint64_t v45 = *(std::string **)(a1 + 136);
  if (!v45)
  {
    uint64_t v46 = *(void *)(a1 + 8);
    uint64_t v47 = (void *)(v46 & 0xFFFFFFFFFFFFFFFCLL);
    if (v46) {
      uint64_t v47 = (void *)*v47;
    }
    uint64_t v45 = (std::string *)sub_12F8410((uint64_t)v47);
    *(void *)(a1 + 136) = v45;
  }
  if (*(void *)(a2 + 136)) {
    uint64_t v48 = *(uint64_t (****)())(a2 + 136);
  }
  else {
    uint64_t v48 = &off_2531F00;
  }
  sub_12D5C00(v45, (uint64_t)v48);
  if ((v11 & 0x800) == 0)
  {
LABEL_49:
    if ((v11 & 0x1000) == 0) {
      goto LABEL_50;
    }
    goto LABEL_86;
  }
LABEL_78:
  *(_DWORD *)(a1 + 16) |= 0x800u;
  uint64_t v49 = *(std::string **)(a1 + 144);
  if (!v49)
  {
    uint64_t v50 = *(void *)(a1 + 8);
    unint64_t v51 = (void *)(v50 & 0xFFFFFFFFFFFFFFFCLL);
    if (v50) {
      unint64_t v51 = (void *)*v51;
    }
    uint64_t v49 = (std::string *)sub_1786400((uint64_t)v51);
    *(void *)(a1 + 144) = v49;
  }
  if (*(void *)(a2 + 144)) {
    uint64_t v52 = *(uint64_t (****)())(a2 + 144);
  }
  else {
    uint64_t v52 = &off_25446E8;
  }
  sub_12329D0(v49, (uint64_t)v52);
  if ((v11 & 0x1000) == 0)
  {
LABEL_50:
    if ((v11 & 0x2000) == 0) {
      goto LABEL_51;
    }
    goto LABEL_94;
  }
LABEL_86:
  *(_DWORD *)(a1 + 16) |= 0x1000u;
  uint64_t v53 = *(std::string **)(a1 + 152);
  if (!v53)
  {
    uint64_t v54 = *(void *)(a1 + 8);
    unint64_t v55 = (void *)(v54 & 0xFFFFFFFFFFFFFFFCLL);
    if (v54) {
      unint64_t v55 = (void *)*v55;
    }
    uint64_t v53 = (std::string *)sub_15C1E94((uint64_t)v55);
    *(void *)(a1 + 152) = v53;
  }
  if (*(void *)(a2 + 152)) {
    unint64_t v56 = *(uint64_t (****)())(a2 + 152);
  }
  else {
    unint64_t v56 = &off_253F3D0;
  }
  sub_15B86B8(v53, (uint64_t)v56);
  if ((v11 & 0x2000) == 0)
  {
LABEL_51:
    if ((v11 & 0x4000) == 0) {
      goto LABEL_52;
    }
    goto LABEL_102;
  }
LABEL_94:
  *(_DWORD *)(a1 + 16) |= 0x2000u;
  uint64_t v57 = *(std::string **)(a1 + 160);
  if (!v57)
  {
    uint64_t v58 = *(void *)(a1 + 8);
    uint64_t v59 = (void *)(v58 & 0xFFFFFFFFFFFFFFFCLL);
    if (v58) {
      uint64_t v59 = (void *)*v59;
    }
    uint64_t v57 = (std::string *)sub_12F85B0((uint64_t)v59);
    *(void *)(a1 + 160) = v57;
  }
  if (*(void *)(a2 + 160)) {
    uint64_t v60 = *(uint64_t (****)())(a2 + 160);
  }
  else {
    uint64_t v60 = &off_2531F90;
  }
  sub_12E7550(v57, (uint64_t)v60);
  if ((v11 & 0x4000) == 0)
  {
LABEL_52:
    if ((v11 & 0x8000) == 0) {
      goto LABEL_118;
    }
    goto LABEL_110;
  }
LABEL_102:
  *(_DWORD *)(a1 + 16) |= 0x4000u;
  unint64_t v61 = *(std::string **)(a1 + 168);
  if (!v61)
  {
    uint64_t v62 = *(void *)(a1 + 8);
    int v63 = (void *)(v62 & 0xFFFFFFFFFFFFFFFCLL);
    if (v62) {
      int v63 = (void *)*v63;
    }
    unint64_t v61 = (std::string *)sub_12F8A84((uint64_t)v63);
    *(void *)(a1 + 168) = v61;
  }
  if (*(void *)(a2 + 168)) {
    int v64 = *(uint64_t (****)())(a2 + 168);
  }
  else {
    int v64 = &off_2532110;
  }
  sub_12D5C00(v61, (uint64_t)v64);
  if ((v11 & 0x8000) != 0)
  {
LABEL_110:
    *(_DWORD *)(a1 + 16) |= 0x8000u;
    uint64_t v65 = *(void *)(a1 + 176);
    if (!v65)
    {
      uint64_t v66 = *(void *)(a1 + 8);
      unint64_t v67 = (void *)(v66 & 0xFFFFFFFFFFFFFFFCLL);
      if (v66) {
        unint64_t v67 = (void *)*v67;
      }
      uint64_t v65 = sub_15C1918((uint64_t)v67);
      *(void *)(a1 + 176) = v65;
    }
    if (*(void *)(a2 + 176)) {
      uint64_t v68 = *(uint64_t (****)())(a2 + 176);
    }
    else {
      uint64_t v68 = &off_253F1A0;
    }
    sub_15B0E24(v65, (uint64_t)v68);
  }
LABEL_118:
  if ((v11 & 0x1F0000) == 0) {
    goto LABEL_126;
  }
  if ((v11 & 0x10000) != 0)
  {
    *(_DWORD *)(a1 + 16) |= 0x10000u;
    uint64_t v70 = *(void *)(a1 + 184);
    if (!v70)
    {
      uint64_t v71 = *(void *)(a1 + 8);
      unint64_t v72 = (void *)(v71 & 0xFFFFFFFFFFFFFFFCLL);
      if (v71) {
        unint64_t v72 = (void *)*v72;
      }
      uint64_t v70 = sub_15C1918((uint64_t)v72);
      *(void *)(a1 + 184) = v70;
    }
    if (*(void *)(a2 + 184)) {
      uint64_t v73 = *(uint64_t (****)())(a2 + 184);
    }
    else {
      uint64_t v73 = &off_253F1A0;
    }
    sub_15B0E24(v70, (uint64_t)v73);
    if ((v11 & 0x20000) == 0)
    {
LABEL_121:
      if ((v11 & 0x40000) == 0) {
        goto LABEL_122;
      }
      goto LABEL_139;
    }
  }
  else if ((v11 & 0x20000) == 0)
  {
    goto LABEL_121;
  }
  *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
  if ((v11 & 0x40000) == 0)
  {
LABEL_122:
    if ((v11 & 0x80000) == 0) {
      goto LABEL_123;
    }
LABEL_140:
    *(unsigned char *)(a1 + 194) = *(unsigned char *)(a2 + 194);
    if ((v11 & 0x100000) == 0) {
      goto LABEL_125;
    }
    goto LABEL_124;
  }
LABEL_139:
  *(unsigned char *)(a1 + 193) = *(unsigned char *)(a2 + 193);
  if ((v11 & 0x80000) != 0) {
    goto LABEL_140;
  }
LABEL_123:
  if ((v11 & 0x100000) != 0) {
LABEL_124:
  }
    *(_DWORD *)(a1 + 196) = *(_DWORD *)(a2 + 196);
LABEL_125:
  *(_DWORD *)(a1 + 16) |= v11;
LABEL_126:
  uint64_t v69 = *(void *)(a2 + 8);
  if (v69)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v69 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

std::string *sub_12E7550(std::string *result, uint64_t a2)
{
  int v3 = result;
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    int v5 = (uint64_t *)(*(void *)(a2 + 32) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result->__r_.__value_.__r.__words[2], *(_DWORD *)(a2 + 24));
    uint64_t result = sub_1302304((std::string *)&v3->__r_.__value_.__r.__words[2], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__l.__size_ - LODWORD(v3[1].__r_.__value_.__l.__data_));
    int v7 = LODWORD(v3[1].__r_.__value_.__l.__data_) + v4;
    LODWORD(v3[1].__r_.__value_.__l.__data_) = v7;
    std::string::size_type size = (int *)v3[1].__r_.__value_.__l.__size_;
    if (*size < v7) {
      *std::string::size_type size = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 48);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 56) + 8);
    int v11 = (std::string **)sub_188CCE4((uint64_t)&v3[1].__r_.__value_.__r.__words[2], *(_DWORD *)(a2 + 48));
    uint64_t result = sub_1302304((std::string *)((char *)v3 + 40), v11, v10, v9, *(_DWORD *)v3[2].__r_.__value_.__l.__size_ - LODWORD(v3[2].__r_.__value_.__l.__data_));
    int v12 = LODWORD(v3[2].__r_.__value_.__l.__data_) + v9;
    LODWORD(v3[2].__r_.__value_.__l.__data_) = v12;
    uint64_t v13 = (int *)v3[2].__r_.__value_.__l.__size_;
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 64);
  if (v14)
  {
    uint64_t v15 = SLODWORD(v3[2].__r_.__value_.__r.__words[2]);
    sub_188C80C((unsigned int *)&v3[2].__r_.__value_.__r.__words[2], v15 + v14);
    std::string::pointer data = v3[3].__r_.__value_.__l.__data_;
    LODWORD(v3[2].__r_.__value_.__r.__words[2]) += *(_DWORD *)(a2 + 64);
    uint64_t result = (std::string *)memcpy(&data[4 * v15], *(const void **)(a2 + 72), 4 * *(int *)(a2 + 64));
  }
  int v17 = *(_DWORD *)(a2 + 88);
  if (v17)
  {
    int v18 = (uint64_t *)(*(void *)(a2 + 96) + 8);
    uint64_t v19 = (std::string **)sub_188CCE4((uint64_t)&v3[3].__r_.__value_.__l.__size_, *(_DWORD *)(a2 + 88));
    uint64_t result = sub_1302304((std::string *)((char *)v3 + 80), v19, v18, v17, *(_DWORD *)v3[4].__r_.__value_.__l.__data_ - LODWORD(v3[3].__r_.__value_.__r.__words[2]));
    int v20 = LODWORD(v3[3].__r_.__value_.__r.__words[2]) + v17;
    LODWORD(v3[3].__r_.__value_.__r.__words[2]) = v20;
    uint64_t v21 = (int *)v3[4].__r_.__value_.__l.__data_;
    if (*v21 < v20) {
      int *v21 = v20;
    }
  }
  int v22 = *(_DWORD *)(a2 + 112);
  if (v22)
  {
    unint64_t v23 = (uint64_t *)(*(void *)(a2 + 120) + 8);
    uint64_t v24 = (std::string **)sub_188CCE4((uint64_t)&v3[4].__r_.__value_.__l.__size_, *(_DWORD *)(a2 + 112));
    uint64_t result = sub_1302304((std::string *)((char *)v3 + 104), v24, v23, v22, *(_DWORD *)v3[5].__r_.__value_.__l.__data_ - LODWORD(v3[4].__r_.__value_.__r.__words[2]));
    int v25 = LODWORD(v3[4].__r_.__value_.__r.__words[2]) + v22;
    LODWORD(v3[4].__r_.__value_.__r.__words[2]) = v25;
    unint64_t v26 = (int *)v3[5].__r_.__value_.__l.__data_;
    if (*v26 < v25) {
      *unint64_t v26 = v25;
    }
  }
  int v27 = *(_DWORD *)(a2 + 136);
  if (v27)
  {
    uint64_t v28 = (uint64_t *)(*(void *)(a2 + 144) + 8);
    unint64_t v29 = (std::string **)sub_188CCE4((uint64_t)&v3[5].__r_.__value_.__l.__size_, *(_DWORD *)(a2 + 136));
    uint64_t result = sub_1302304((std::string *)((char *)v3 + 128), v29, v28, v27, *(_DWORD *)v3[6].__r_.__value_.__l.__data_ - LODWORD(v3[5].__r_.__value_.__r.__words[2]));
    int v30 = LODWORD(v3[5].__r_.__value_.__r.__words[2]) + v27;
    LODWORD(v3[5].__r_.__value_.__r.__words[2]) = v30;
    uint64_t v31 = (int *)v3[6].__r_.__value_.__l.__data_;
    if (*v31 < v30) {
      int *v31 = v30;
    }
  }
  uint64_t v32 = *(void *)(a2 + 8);
  if (v32)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v32 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_12E77F4(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0x100) != 0)
  {
    uint64_t result = sub_15B0F18(*(void *)(a1 + 120));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 0x200) != 0)
  {
    uint64_t result = sub_15B1FC0(*(void *)(a1 + 128));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 0x1000) != 0)
  {
    uint64_t result = sub_15B8CAC(*(void *)(a1 + 152));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 0x8000) != 0)
  {
    uint64_t result = sub_15B0F18(*(void *)(a1 + 176));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 0x10000) == 0) {
    return 1;
  }
  uint64_t result = sub_15B0F18(*(void *)(a1 + 184));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_12E787C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap.fields.JanaAnnotationContext");
}

uint64_t sub_12E788C(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    int v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_12F7938(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  int v5 = *(_DWORD *)(v1 + 16);
  if ((v5 & 3) != 0)
  {
    if (v5)
    {
      unint64_t v6 = *(void *)(v1 + 48) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v6 + 23) < 0)
      {
        **(unsigned char **)unint64_t v6 = 0;
        *(void *)(v6 + 8) = 0;
        if ((v5 & 2) == 0) {
          goto LABEL_15;
        }
        goto LABEL_10;
      }
      *(unsigned char *)unint64_t v6 = 0;
      *(unsigned char *)(v6 + 23) = 0;
    }
    if ((v5 & 2) == 0) {
      goto LABEL_15;
    }
LABEL_10:
    unint64_t v7 = *(void *)(v1 + 56) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v7 + 23) < 0)
    {
      **(unsigned char **)unint64_t v7 = 0;
      *(void *)(v7 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v7 = 0;
      *(unsigned char *)(v7 + 23) = 0;
    }
  }
LABEL_15:
  char v9 = *(unsigned char *)(v1 + 8);
  uint64_t v8 = v1 + 8;
  *(_DWORD *)(v8 + 8) = 0;
  if (v9)
  {
    return sub_188B4AC((uint64_t *)v8);
  }
  return result;
}

uint64_t sub_12E7974(uint64_t a1)
{
  uint64_t result = sub_188CC00(a1 + 24);
  int v3 = *(_DWORD *)(a1 + 16);
  if (v3)
  {
    unint64_t v4 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v4 + 23) < 0)
    {
      **(unsigned char **)unint64_t v4 = 0;
      *(void *)(v4 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v4 = 0;
      *(unsigned char *)(v4 + 23) = 0;
    }
  }
  if ((v3 & 6) != 0)
  {
    *(unsigned char *)(a1 + 60) = 0;
    *(_DWORD *)(a1 + 56) = 0;
  }
  char v6 = *(unsigned char *)(a1 + 8);
  uint64_t v5 = a1 + 8;
  *(_DWORD *)(v5 + 8) = 0;
  if (v6)
  {
    return sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

uint64_t sub_12E7A08(uint64_t a1)
{
  uint64_t result = sub_188CC00(a1 + 24);
  int v3 = *(_DWORD *)(a1 + 16);
  if (v3)
  {
    unint64_t v4 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v4 + 23) < 0)
    {
      **(unsigned char **)unint64_t v4 = 0;
      *(void *)(v4 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v4 = 0;
      *(unsigned char *)(v4 + 23) = 0;
    }
  }
  if ((v3 & 6) != 0)
  {
    *(unsigned char *)(a1 + 60) = 0;
    *(_DWORD *)(a1 + 56) = 0;
  }
  char v6 = *(unsigned char *)(a1 + 8);
  uint64_t v5 = a1 + 8;
  *(_DWORD *)(v5 + 8) = 0;
  if (v6)
  {
    return sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

uint64_t sub_12E7A9C(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if (v2) {
    uint64_t result = sub_12F4490(*(void *)(result + 24));
  }
  if ((v2 & 0xE) != 0)
  {
    *(unsigned char *)(v1 + 40) = 0;
    *(void *)(v1 + 32) = 0;
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_12E7B08(uint64_t result)
{
  uint64_t v1 = result;
  char v2 = *(unsigned char *)(result + 16);
  if (!v2) {
    goto LABEL_22;
  }
  if (*(unsigned char *)(result + 16))
  {
    uint64_t result = sub_12F9DF4(*(void *)(result + 24));
    if ((v2 & 2) == 0)
    {
LABEL_4:
      if ((v2 & 4) == 0) {
        goto LABEL_10;
      }
LABEL_8:
      uint64_t v3 = *(void *)(v1 + 40);
      char v4 = *(unsigned char *)(v3 + 8);
      uint64_t result = v3 + 8;
      *(_DWORD *)(result + 16) = 0;
      *(_DWORD *)(result + 8) = 0;
      if (v4) {
        uint64_t result = sub_188B4AC((uint64_t *)result);
      }
      goto LABEL_10;
    }
  }
  else if ((*(unsigned char *)(result + 16) & 2) == 0)
  {
    goto LABEL_4;
  }
  uint64_t result = sub_12F9E5C(*(void *)(v1 + 32));
  if ((v2 & 4) != 0) {
    goto LABEL_8;
  }
LABEL_10:
  if ((v2 & 8) != 0) {
    uint64_t result = sub_12F9EDC(*(void *)(v1 + 48));
  }
  if ((v2 & 0x10) != 0)
  {
    uint64_t v5 = *(void *)(v1 + 56);
    char v6 = *(unsigned char *)(v5 + 8);
    uint64_t result = v5 + 8;
    *(_DWORD *)(result + 16) = 0;
    *(_DWORD *)(result + 8) = 0;
    if (v6) {
      uint64_t result = sub_188B4AC((uint64_t *)result);
    }
  }
  if ((v2 & 0x20) != 0) {
    uint64_t result = sub_12F9F3C(*(void *)(v1 + 64));
  }
  if ((v2 & 0x40) != 0)
  {
    uint64_t v7 = *(void *)(v1 + 72);
    char v8 = *(unsigned char *)(v7 + 8);
    uint64_t result = v7 + 8;
    if (v8) {
      uint64_t result = sub_188B4AC((uint64_t *)result);
    }
  }
  if (v2 < 0) {
    uint64_t result = sub_12F9FAC(*(void *)(v1 + 80));
  }
LABEL_22:
  char v10 = *(unsigned char *)(v1 + 8);
  uint64_t v9 = v1 + 8;
  *(_DWORD *)(v9 + 8) = 0;
  if (v10)
  {
    return sub_188B4AC((uint64_t *)v9);
  }
  return result;
}

void *sub_12E7BF0(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  char v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_12E7C8C((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  sub_1301A28(a1 + 6);
  sub_13019A8(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void ***sub_12E7C8C(uint64_t a1)
{
  uint64_t v3 = *(uint64_t **)(a1 + 72);
  uint64_t result = (void ***)(a1 + 72);
  if (v3 != &qword_2550250) {
    sub_1881C6C(result);
  }
  if ((uint64_t (***)())a1 != &off_2531C08)
  {
    char v4 = *(void **)(a1 + 80);
    if (v4)
    {
      sub_12EE48C(v4);
      operator delete();
    }
    if (*(void *)(a1 + 88))
    {
      sub_15B2C44();
      operator delete();
    }
    uint64_t v5 = *(void *)(a1 + 96);
    if (v5)
    {
      sub_12F8CC8(v5);
      operator delete();
    }
    uint64_t v6 = *(void *)(a1 + 104);
    if (v6)
    {
      sub_12F9380(v6);
      operator delete();
    }
    uint64_t v7 = *(void *)(a1 + 112);
    if (v7)
    {
      sub_12F5468(v7);
      operator delete();
    }
    uint64_t v8 = *(void *)(a1 + 120);
    if (v8)
    {
      sub_12F5C68(v8);
      operator delete();
    }
    uint64_t v9 = *(void *)(a1 + 128);
    if (v9)
    {
      sub_12F4D44(v9);
      operator delete();
    }
    char v10 = *(void **)(a1 + 136);
    if (v10)
    {
      sub_12F9BEC(v10);
      operator delete();
    }
    if (*(void *)(a1 + 144))
    {
      sub_15FF3D0();
      operator delete();
    }
    uint64_t v11 = *(void *)(a1 + 152);
    if (v11)
    {
      sub_12F4D44(v11);
      operator delete();
    }
    uint64_t v12 = *(void *)(a1 + 160);
    if (v12)
    {
      sub_12D5EBC(v12);
      operator delete();
    }
    uint64_t result = *(void ****)(a1 + 168);
    if (result)
    {
      sub_12EA848((uint64_t)result);
      operator delete();
    }
  }
  return result;
}

void sub_12E7E70(void *a1)
{
  sub_12E7BF0(a1);

  operator delete();
}

uint64_t sub_12E7EA8(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_12F0028(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  uint64_t v5 = *(unsigned int *)(v1 + 56);
  if ((int)v5 >= 1)
  {
    uint64_t v6 = (uint64_t *)(*(void *)(v1 + 64) + 8);
    do
    {
      uint64_t v7 = *v6++;
      uint64_t result = sub_12D47BC(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(v1 + 56) = 0;
  }
  int v8 = *(_DWORD *)(v1 + 16);
  if (!(_BYTE)v8) {
    goto LABEL_19;
  }
  if (v8)
  {
    unint64_t v11 = *(void *)(v1 + 72) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v11 + 23) < 0)
    {
      **(unsigned char **)unint64_t v11 = 0;
      *(void *)(v11 + 8) = 0;
      if ((v8 & 2) != 0) {
        goto LABEL_41;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v11 = 0;
      *(unsigned char *)(v11 + 23) = 0;
      if ((v8 & 2) != 0) {
        goto LABEL_41;
      }
    }
LABEL_12:
    if ((v8 & 4) == 0) {
      goto LABEL_13;
    }
    goto LABEL_42;
  }
  if ((v8 & 2) == 0) {
    goto LABEL_12;
  }
LABEL_41:
  uint64_t result = sub_12D3A88(*(void *)(v1 + 80));
  if ((v8 & 4) == 0)
  {
LABEL_13:
    if ((v8 & 8) == 0) {
      goto LABEL_14;
    }
    goto LABEL_43;
  }
LABEL_42:
  uint64_t result = sub_15B2C80(*(void *)(v1 + 88));
  if ((v8 & 8) == 0)
  {
LABEL_14:
    if ((v8 & 0x10) == 0) {
      goto LABEL_15;
    }
    goto LABEL_44;
  }
LABEL_43:
  uint64_t result = sub_12E788C(*(void *)(v1 + 96));
  if ((v8 & 0x10) == 0)
  {
LABEL_15:
    if ((v8 & 0x20) == 0) {
      goto LABEL_16;
    }
LABEL_45:
    uint64_t result = sub_12E7974(*(void *)(v1 + 112));
    if ((v8 & 0x40) == 0)
    {
LABEL_17:
      if ((v8 & 0x80) == 0) {
        goto LABEL_19;
      }
      goto LABEL_18;
    }
    goto LABEL_46;
  }
LABEL_44:
  uint64_t result = sub_12D7080(*(void *)(v1 + 104));
  if ((v8 & 0x20) != 0) {
    goto LABEL_45;
  }
LABEL_16:
  if ((v8 & 0x40) == 0) {
    goto LABEL_17;
  }
LABEL_46:
  uint64_t result = sub_12E7A08(*(void *)(v1 + 120));
  if ((v8 & 0x80) != 0) {
LABEL_18:
  }
    uint64_t result = sub_12E7A9C(*(void *)(v1 + 128));
LABEL_19:
  if ((v8 & 0x1F00) == 0) {
    goto LABEL_26;
  }
  if ((v8 & 0x100) != 0)
  {
    uint64_t result = sub_12E7B08(*(void *)(v1 + 136));
    if ((v8 & 0x200) == 0)
    {
LABEL_22:
      if ((v8 & 0x400) == 0) {
        goto LABEL_23;
      }
      goto LABEL_37;
    }
  }
  else if ((v8 & 0x200) == 0)
  {
    goto LABEL_22;
  }
  uint64_t result = sub_15FC3B4(*(void *)(v1 + 144));
  if ((v8 & 0x400) == 0)
  {
LABEL_23:
    if ((v8 & 0x800) == 0) {
      goto LABEL_24;
    }
    goto LABEL_38;
  }
LABEL_37:
  uint64_t result = sub_12E7A9C(*(void *)(v1 + 152));
  if ((v8 & 0x800) == 0)
  {
LABEL_24:
    if ((v8 & 0x1000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_25;
  }
LABEL_38:
  uint64_t result = sub_12D5FA0(*(void *)(v1 + 160));
  if ((v8 & 0x1000) != 0) {
LABEL_25:
  }
    uint64_t result = sub_12E8068(*(void *)(v1 + 168));
LABEL_26:
  if ((v8 & 0xE000) != 0)
  {
    *(_DWORD *)(v1 + 184) = 0;
    *(void *)(v1 + 176) = 0;
  }
  char v10 = *(unsigned char *)(v1 + 8);
  uint64_t v9 = v1 + 8;
  *(_DWORD *)(v9 + 8) = 0;
  if (v10)
  {
    return sub_188B4AC((uint64_t *)v9);
  }
  return result;
}

uint64_t sub_12E8068(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) != 0)
  {
    if (v1)
    {
      unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v2 + 23) < 0)
      {
        **(unsigned char **)unint64_t v2 = 0;
        *(void *)(v2 + 8) = 0;
        if ((v1 & 2) == 0) {
          goto LABEL_11;
        }
        goto LABEL_6;
      }
      *(unsigned char *)unint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
    }
    if ((v1 & 2) == 0) {
      goto LABEL_11;
    }
LABEL_6:
    unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)unint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
LABEL_11:
  if ((v1 & 0xC) != 0) {
    *(void *)(a1 + 40) = 0;
  }
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v5) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_12E80F0(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v68 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v68, a3[11].i32[1])) {
    return *(void *)v68;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v7 = (unsigned __int8 *)(*(void *)v68 + 1);
    unsigned int v8 = **(unsigned char **)v68;
    if ((char)**(unsigned char **)v68 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if ((char)*v7 < 0)
      {
        uint64_t v7 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v68, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (unsigned __int8 *)(*(void *)v68 + 2);
      }
    }
    *(void *)uint64_t v68 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 8) {
          goto LABEL_126;
        }
        unint64_t v11 = (char *)(v7 + 1);
        unint64_t v12 = *v7;
        if (((char)*v7 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v13 = *v11;
        int v14 = v12 + (v13 << 7);
        unint64_t v12 = (v14 - 128);
        if (v13 < 0)
        {
          *(void *)uint64_t v68 = sub_188C138((uint64_t)v7, (v14 - 128));
          if (!*(void *)v68) {
            return 0;
          }
          unint64_t v12 = v63;
        }
        else
        {
          unint64_t v11 = (char *)(v7 + 2);
LABEL_13:
          *(void *)uint64_t v68 = v11;
        }
        if (sub_12D58BC(v12))
        {
          *(_DWORD *)(a1 + 16) |= 0x2000u;
          *(_DWORD *)(a1 + 176) = v12;
          goto LABEL_134;
        }
        if (*v6) {
          uint64_t v66 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          uint64_t v66 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v67 = 1;
        goto LABEL_151;
      case 2u:
        if (v8 != 18) {
          goto LABEL_126;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v15 = *(void *)(a1 + 8);
        uint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          uint64_t v16 = (uint64_t *)*v16;
        }
        int v17 = (std::string *)sub_1880F84((void *)(a1 + 72), v16);
        uint64_t v18 = (uint64_t)sub_188C244(v17, *(char **)v68, (uint64_t)a3);
        goto LABEL_133;
      case 3u:
        if (v8 != 26) {
          goto LABEL_126;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v19 = *(void *)(a1 + 80);
        if (!v19)
        {
          int v20 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            int v20 = (void *)*v20;
          }
          uint64_t v19 = sub_12F816C((uint64_t)v20);
          *(void *)(a1 + 80) = v19;
          uint64_t v7 = *(unsigned __int8 **)v68;
        }
        uint64_t v18 = (uint64_t)sub_12D3F70(a3, v19, v7);
        goto LABEL_133;
      case 4u:
        if (v8 != 34) {
          goto LABEL_126;
        }
        uint64_t v21 = v7 - 1;
        while (1)
        {
          int v22 = v21 + 1;
          *(void *)uint64_t v68 = v21 + 1;
          unint64_t v23 = *(_DWORD **)(a1 + 40);
          if (v23 && (uint64_t v24 = *(int *)(a1 + 32), (int)v24 < *v23))
          {
            *(_DWORD *)(a1 + 32) = v24 + 1;
            uint64_t v25 = *(void *)&v23[2 * v24 + 2];
          }
          else
          {
            unint64_t v26 = sub_12F8384(*(void *)(a1 + 24));
            uint64_t v25 = sub_188CDC8(a1 + 24, (uint64_t)v26);
            int v22 = *(unsigned __int8 **)v68;
          }
          uint64_t v21 = (unsigned __int8 *)sub_12E8978(a3, v25, v22);
          *(void *)uint64_t v68 = v21;
          if (!v21) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v21 || *v21 != 34) {
            goto LABEL_134;
          }
        }
      case 5u:
        if (v8 != 40) {
          goto LABEL_126;
        }
        int v27 = (char *)(v7 + 1);
        unint64_t v12 = *v7;
        if (((char)*v7 & 0x80000000) == 0) {
          goto LABEL_40;
        }
        int v28 = *v27;
        int v29 = v12 + (v28 << 7);
        unint64_t v12 = (v29 - 128);
        if (v28 < 0)
        {
          *(void *)uint64_t v68 = sub_188C138((uint64_t)v7, (v29 - 128));
          if (!*(void *)v68) {
            return 0;
          }
          unint64_t v12 = v64;
        }
        else
        {
          int v27 = (char *)(v7 + 2);
LABEL_40:
          *(void *)uint64_t v68 = v27;
        }
        if (v12 <= 7)
        {
          *(_DWORD *)(a1 + 16) |= 0x4000u;
          *(_DWORD *)(a1 + 180) = v12;
          goto LABEL_134;
        }
        if (*v6) {
          uint64_t v66 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          uint64_t v66 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v67 = 5;
        goto LABEL_151;
      case 6u:
        if (v8 != 50) {
          goto LABEL_126;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        int v30 = *(void **)(a1 + 88);
        if (!v30)
        {
          uint64_t v31 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v31 = (void *)*v31;
          }
          int v30 = sub_15C1B30((uint64_t)v31);
          *(void *)(a1 + 88) = v30;
          uint64_t v7 = *(unsigned __int8 **)v68;
        }
        uint64_t v18 = sub_125CF74(a3, (uint64_t)v30, v7);
        goto LABEL_133;
      case 7u:
        if (v8 != 56) {
          goto LABEL_126;
        }
        uint64_t v32 = (char *)(v7 + 1);
        unint64_t v12 = *v7;
        if (((char)*v7 & 0x80000000) == 0) {
          goto LABEL_53;
        }
        int v33 = *v32;
        int v34 = v12 + (v33 << 7);
        unint64_t v12 = (v34 - 128);
        if (v33 < 0)
        {
          *(void *)uint64_t v68 = sub_188C138((uint64_t)v7, (v34 - 128));
          if (!*(void *)v68) {
            return 0;
          }
          unint64_t v12 = v65;
        }
        else
        {
          uint64_t v32 = (char *)(v7 + 2);
LABEL_53:
          *(void *)uint64_t v68 = v32;
        }
        if (v12 > 0x17)
        {
          if (*v6) {
            uint64_t v66 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v66 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          int v67 = 7;
LABEL_151:
          sub_188C020(v67, v12, v66);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 0x8000u;
          *(_DWORD *)(a1 + 184) = v12;
        }
        goto LABEL_134;
      case 8u:
        if (v8 != 66) {
          goto LABEL_126;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        unint64_t v35 = *(void **)(a1 + 96);
        if (!v35)
        {
          uint64_t v36 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v36 = (void *)*v36;
          }
          unint64_t v35 = sub_12FDFDC((uint64_t)v36);
          *(void *)(a1 + 96) = v35;
          uint64_t v7 = *(unsigned __int8 **)v68;
        }
        uint64_t v18 = sub_12E8A08(a3, (uint64_t)v35, v7);
        goto LABEL_133;
      case 9u:
        if (v8 != 74) {
          goto LABEL_126;
        }
        *(_DWORD *)(a1 + 16) |= 0x10u;
        uint64_t v37 = *(void **)(a1 + 104);
        if (!v37)
        {
          uint64_t v38 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v38 = (void *)*v38;
          }
          uint64_t v37 = sub_12FE080((uint64_t)v38);
          *(void *)(a1 + 104) = v37;
          uint64_t v7 = *(unsigned __int8 **)v68;
        }
        uint64_t v18 = sub_12D77F8(a3, (uint64_t)v37, v7);
        goto LABEL_133;
      case 0xAu:
        if (v8 != 82) {
          goto LABEL_126;
        }
        *(_DWORD *)(a1 + 16) |= 0x20u;
        uint64_t v39 = *(void *)(a1 + 112);
        if (!v39)
        {
          uint64_t v40 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v40 = (void *)*v40;
          }
          uint64_t v39 = sub_12F892C((uint64_t)v40);
          *(void *)(a1 + 112) = v39;
          uint64_t v7 = *(unsigned __int8 **)v68;
        }
        uint64_t v18 = sub_12E8A98(a3, v39, v7);
        goto LABEL_133;
      case 0xBu:
        if (v8 != 90) {
          goto LABEL_126;
        }
        *(_DWORD *)(a1 + 16) |= 0x40u;
        uint64_t v41 = *(void *)(a1 + 120);
        if (!v41)
        {
          uint64_t v42 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v42 = (void *)*v42;
          }
          uint64_t v41 = sub_12F89D8((uint64_t)v42);
          *(void *)(a1 + 120) = v41;
          uint64_t v7 = *(unsigned __int8 **)v68;
        }
        uint64_t v18 = sub_12E8B28(a3, v41, v7);
        goto LABEL_133;
      case 0xCu:
        if (v8 != 98) {
          goto LABEL_126;
        }
        *(_DWORD *)(a1 + 16) |= 0x80u;
        uint64_t v43 = *(void *)(a1 + 128);
        if (v43) {
          goto LABEL_103;
        }
        uint64_t v44 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          uint64_t v44 = (void *)*v44;
        }
        uint64_t v43 = sub_12F88AC((uint64_t)v44);
        *(void *)(a1 + 128) = v43;
        goto LABEL_102;
      case 0xDu:
        if (v8 != 106) {
          goto LABEL_126;
        }
        *(_DWORD *)(a1 + 16) |= 0x100u;
        uint64_t v45 = *(void *)(a1 + 136);
        if (!v45)
        {
          uint64_t v46 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v46 = (void *)*v46;
          }
          sub_12FE0FC((uint64_t)v46);
          uint64_t v45 = v47;
          *(void *)(a1 + 136) = v47;
          uint64_t v7 = *(unsigned __int8 **)v68;
        }
        uint64_t v18 = (uint64_t)sub_12E8C48(a3, v45, v7);
        goto LABEL_133;
      case 0xEu:
        if (v8 != 114) {
          goto LABEL_126;
        }
        *(_DWORD *)(a1 + 16) |= 0x200u;
        uint64_t v48 = *(void *)(a1 + 144);
        if (!v48)
        {
          uint64_t v49 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v49 = (void *)*v49;
          }
          uint64_t v48 = sub_16061BC((uint64_t)v49);
          *(void *)(a1 + 144) = v48;
          uint64_t v7 = *(unsigned __int8 **)v68;
        }
        uint64_t v18 = (uint64_t)sub_12E8CD8(a3, v48, v7);
        goto LABEL_133;
      case 0xFu:
        if (v8 != 122) {
          goto LABEL_126;
        }
        *(_DWORD *)(a1 + 16) |= 0x400u;
        uint64_t v43 = *(void *)(a1 + 152);
        if (v43) {
          goto LABEL_103;
        }
        uint64_t v50 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          uint64_t v50 = (void *)*v50;
        }
        uint64_t v43 = sub_12F88AC((uint64_t)v50);
        *(void *)(a1 + 152) = v43;
LABEL_102:
        uint64_t v7 = *(unsigned __int8 **)v68;
LABEL_103:
        uint64_t v18 = (uint64_t)sub_12E8BB8(a3, v43, v7);
        goto LABEL_133;
      case 0x10u:
        if (v8 != 130) {
          goto LABEL_126;
        }
        *(_DWORD *)(a1 + 16) |= 0x800u;
        unint64_t v51 = *(void **)(a1 + 160);
        if (!v51)
        {
          uint64_t v52 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v52 = (void *)*v52;
          }
          unint64_t v51 = sub_12D993C((uint64_t)v52);
          *(void *)(a1 + 160) = v51;
          uint64_t v7 = *(unsigned __int8 **)v68;
        }
        uint64_t v18 = sub_12E8D68(a3, (uint64_t)v51, v7);
        goto LABEL_133;
      case 0x11u:
        if (v8 != 138) {
          goto LABEL_126;
        }
        *(_DWORD *)(a1 + 16) |= 0x1000u;
        uint64_t v53 = *(void **)(a1 + 168);
        if (!v53)
        {
          uint64_t v54 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v54 = (void *)*v54;
          }
          uint64_t v53 = sub_12EC538((uint64_t)v54);
          *(void *)(a1 + 168) = v53;
          uint64_t v7 = *(unsigned __int8 **)v68;
        }
        uint64_t v18 = sub_12E8DF8(a3, (uint64_t)v53, v7);
        goto LABEL_133;
      case 0x12u:
        if (v8 != 146) {
          goto LABEL_126;
        }
        unint64_t v55 = v7 - 2;
        while (1)
        {
          unint64_t v56 = v55 + 2;
          *(void *)uint64_t v68 = v55 + 2;
          uint64_t v57 = *(_DWORD **)(a1 + 64);
          if (v57 && (uint64_t v58 = *(int *)(a1 + 56), (int)v58 < *v57))
          {
            *(_DWORD *)(a1 + 56) = v58 + 1;
            uint64_t v59 = *(void *)&v57[2 * v58 + 2];
          }
          else
          {
            uint64_t v60 = sub_12D5E3C(*(void *)(a1 + 48));
            uint64_t v59 = sub_188CDC8(a1 + 48, (uint64_t)v60);
            unint64_t v56 = *(unsigned __int8 **)v68;
          }
          unint64_t v55 = (unsigned __int8 *)sub_12E8E88(a3, v59, v56);
          *(void *)uint64_t v68 = v55;
          if (!v55) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v55 || *(_WORD *)v55 != 402) {
            goto LABEL_134;
          }
        }
      default:
LABEL_126:
        if (v8) {
          BOOL v61 = (v8 & 7) == 4;
        }
        else {
          BOOL v61 = 1;
        }
        if (!v61)
        {
          if (*v6)
          {
            uint64_t v62 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v62 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v7 = *(unsigned __int8 **)v68;
          }
          uint64_t v18 = (uint64_t)sub_1885AC0(v8, v62, (char *)v7, a3);
LABEL_133:
          *(void *)uint64_t v68 = v18;
          if (!v18) {
            return 0;
          }
LABEL_134:
          if (sub_11947B8((uint64_t)a3, (char **)v68, a3[11].i32[1])) {
            return *(void *)v68;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return *(void *)v68;
    }
  }
}

uint64_t sub_12E8978(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12F0138(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_12E8A08(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12F8DC4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_12E8A98(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12F5548(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_12E8B28(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12F5D48(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_12E8BB8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12F4E34(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_12E8C48(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12FA058(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_12E8CD8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_15FF40C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_12E8D68(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12D6050(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_12E8DF8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12EA938(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_12E8E88(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12D4970(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_12E8F18(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 0x2000) != 0)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 176);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 80);
    unsigned char *v4 = 26;
    unsigned int v11 = *(_DWORD *)(v10 + 20);
    v4[1] = v11;
    if (v11 > 0x7F) {
      unint64_t v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      unint64_t v12 = v4 + 2;
    }
    uint64_t v4 = sub_12EE724(v10, (unint64_t)v12, a3);
  }
  int v13 = *(_DWORD *)(a1 + 32);
  if (v13)
  {
    for (int i = 0; i != v13; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v15 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      unsigned char *v4 = 34;
      unsigned int v16 = *(_DWORD *)(v15 + 20);
      v4[1] = v16;
      if (v16 > 0x7F) {
        int v17 = sub_188A9CC(v16, v4 + 1);
      }
      else {
        int v17 = v4 + 2;
      }
      uint64_t v4 = sub_12F04E4(v15, (unint64_t)v17, a3);
    }
  }
  if ((v6 & 0x4000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v18 = *(int *)(a1 + 180);
    unsigned char *v4 = 40;
    v4[1] = v18;
    if (v18 > 0x7F)
    {
      v4[1] = v18 | 0x80;
      unint64_t v19 = v18 >> 7;
      v4[2] = v18 >> 7;
      v4 += 3;
      if (v18 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v20 = v19 >> 14;
          v19 >>= 7;
          *v4++ = v19;
        }
        while (v20);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v21 = *(void *)(a1 + 88);
    unsigned char *v4 = 50;
    unsigned int v22 = *(_DWORD *)(v21 + 20);
    v4[1] = v22;
    if (v22 > 0x7F) {
      unint64_t v23 = sub_188A9CC(v22, v4 + 1);
    }
    else {
      unint64_t v23 = v4 + 2;
    }
    uint64_t v4 = sub_15B2EA4(v21, v23, a3);
  }
  if ((v6 & 0x8000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v24 = *(int *)(a1 + 184);
    unsigned char *v4 = 56;
    v4[1] = v24;
    if (v24 > 0x7F)
    {
      v4[1] = v24 | 0x80;
      unint64_t v25 = v24 >> 7;
      v4[2] = v24 >> 7;
      v4 += 3;
      if (v24 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v26 = v25 >> 14;
          v25 >>= 7;
          *v4++ = v25;
        }
        while (v26);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v27 = *(void *)(a1 + 96);
    unsigned char *v4 = 66;
    unsigned int v28 = *(_DWORD *)(v27 + 20);
    v4[1] = v28;
    if (v28 > 0x7F) {
      int v29 = sub_188A9CC(v28, v4 + 1);
    }
    else {
      int v29 = v4 + 2;
    }
    uint64_t v4 = sub_12F909C(v27, v29, a3);
    if ((v6 & 0x10) == 0)
    {
LABEL_48:
      if ((v6 & 0x20) == 0) {
        goto LABEL_49;
      }
      goto LABEL_69;
    }
  }
  else if ((v6 & 0x10) == 0)
  {
    goto LABEL_48;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v30 = *(void *)(a1 + 104);
  unsigned char *v4 = 74;
  unsigned int v31 = *(_DWORD *)(v30 + 20);
  v4[1] = v31;
  if (v31 > 0x7F) {
    uint64_t v32 = sub_188A9CC(v31, v4 + 1);
  }
  else {
    uint64_t v32 = v4 + 2;
  }
  uint64_t v4 = sub_12F97E8(v30, v32, a3);
  if ((v6 & 0x20) == 0)
  {
LABEL_49:
    if ((v6 & 0x40) == 0) {
      goto LABEL_50;
    }
    goto LABEL_75;
  }
LABEL_69:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v33 = *(void *)(a1 + 112);
  unsigned char *v4 = 82;
  unsigned int v34 = *(_DWORD *)(v33 + 20);
  v4[1] = v34;
  if (v34 > 0x7F) {
    unint64_t v35 = sub_188A9CC(v34, v4 + 1);
  }
  else {
    unint64_t v35 = v4 + 2;
  }
  uint64_t v4 = sub_12F58E8(v33, (unint64_t)v35, a3);
  if ((v6 & 0x40) == 0)
  {
LABEL_50:
    if ((v6 & 0x80) == 0) {
      goto LABEL_51;
    }
    goto LABEL_81;
  }
LABEL_75:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v36 = *(void *)(a1 + 120);
  unsigned char *v4 = 90;
  unsigned int v37 = *(_DWORD *)(v36 + 20);
  v4[1] = v37;
  if (v37 > 0x7F) {
    uint64_t v38 = sub_188A9CC(v37, v4 + 1);
  }
  else {
    uint64_t v38 = v4 + 2;
  }
  uint64_t v4 = sub_12F60E8(v36, (unint64_t)v38, a3);
  if ((v6 & 0x80) == 0)
  {
LABEL_51:
    if ((v6 & 0x100) == 0) {
      goto LABEL_52;
    }
    goto LABEL_87;
  }
LABEL_81:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v39 = *(void *)(a1 + 128);
  unsigned char *v4 = 98;
  unsigned int v40 = *(_DWORD *)(v39 + 20);
  v4[1] = v40;
  if (v40 > 0x7F) {
    uint64_t v41 = sub_188A9CC(v40, v4 + 1);
  }
  else {
    uint64_t v41 = v4 + 2;
  }
  uint64_t v4 = sub_12F5164(v39, (unint64_t)v41, a3);
  if ((v6 & 0x100) == 0)
  {
LABEL_52:
    if ((v6 & 0x200) == 0) {
      goto LABEL_53;
    }
    goto LABEL_93;
  }
LABEL_87:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v42 = *(void *)(a1 + 136);
  unsigned char *v4 = 106;
  unsigned int v43 = *(_DWORD *)(v42 + 20);
  v4[1] = v43;
  if (v43 > 0x7F) {
    uint64_t v44 = sub_188A9CC(v43, v4 + 1);
  }
  else {
    uint64_t v44 = v4 + 2;
  }
  uint64_t v4 = sub_12FA8B8(v42, (unint64_t)v44, a3);
  if ((v6 & 0x200) == 0)
  {
LABEL_53:
    if ((v6 & 0x400) == 0) {
      goto LABEL_54;
    }
    goto LABEL_99;
  }
LABEL_93:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v45 = *(void *)(a1 + 144);
  unsigned char *v4 = 114;
  unsigned int v46 = *(_DWORD *)(v45 + 40);
  v4[1] = v46;
  if (v46 > 0x7F) {
    uint64_t v47 = sub_188A9CC(v46, v4 + 1);
  }
  else {
    uint64_t v47 = v4 + 2;
  }
  uint64_t v4 = sub_15FF63C(v45, v47, a3);
  if ((v6 & 0x400) == 0)
  {
LABEL_54:
    if ((v6 & 0x800) == 0) {
      goto LABEL_55;
    }
    goto LABEL_105;
  }
LABEL_99:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v48 = *(void *)(a1 + 152);
  unsigned char *v4 = 122;
  unsigned int v49 = *(_DWORD *)(v48 + 20);
  v4[1] = v49;
  if (v49 > 0x7F) {
    uint64_t v50 = sub_188A9CC(v49, v4 + 1);
  }
  else {
    uint64_t v50 = v4 + 2;
  }
  uint64_t v4 = sub_12F5164(v48, (unint64_t)v50, a3);
  if ((v6 & 0x800) == 0)
  {
LABEL_55:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_117;
    }
    goto LABEL_111;
  }
LABEL_105:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v51 = *(void *)(a1 + 160);
  *(_WORD *)uint64_t v4 = 386;
  unsigned int v52 = *(_DWORD *)(v51 + 20);
  v4[2] = v52;
  if (v52 > 0x7F) {
    uint64_t v53 = sub_188A9CC(v52, v4 + 2);
  }
  else {
    uint64_t v53 = v4 + 3;
  }
  uint64_t v4 = sub_12D62E0(v51, v53, a3);
  if ((v6 & 0x1000) != 0)
  {
LABEL_111:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v54 = *(void *)(a1 + 168);
    *(_WORD *)uint64_t v4 = 394;
    unsigned int v55 = *(_DWORD *)(v54 + 20);
    v4[2] = v55;
    if (v55 > 0x7F) {
      unint64_t v56 = sub_188A9CC(v55, v4 + 2);
    }
    else {
      unint64_t v56 = v4 + 3;
    }
    uint64_t v4 = sub_12EAC48(v54, v56, a3);
  }
LABEL_117:
  int v57 = *(_DWORD *)(a1 + 56);
  if (v57)
  {
    for (int j = 0; j != v57; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v59 = *(void *)(*(void *)(a1 + 64) + 8 * j + 8);
      *(_WORD *)uint64_t v4 = 402;
      unsigned int v60 = *(_DWORD *)(v59 + 20);
      v4[2] = v60;
      if (v60 > 0x7F) {
        BOOL v61 = sub_188A9CC(v60, v4 + 2);
      }
      else {
        BOOL v61 = v4 + 3;
      }
      uint64_t v4 = sub_12D4F84(v59, (unint64_t)v61, a3);
    }
  }
  uint64_t v62 = *(void *)(a1 + 8);
  if ((v62 & 1) == 0) {
    return v4;
  }
  unint64_t v64 = v62 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v64 + 31) < 0)
  {
    unint64_t v65 = *(void **)(v64 + 8);
    uint64_t v66 = *(void *)(v64 + 16);
  }
  else
  {
    unint64_t v65 = (void *)(v64 + 8);
    LODWORD(v66) = *(unsigned __int8 *)(v64 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v66)
  {
    uint64_t v67 = (int)v66;
    memcpy(v4, v65, (int)v66);
    v4 += v67;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v65, v66, v4);
}

uint64_t sub_12E9750(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_12F0764(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(int *)(a1 + 56);
  uint64_t v9 = v2 + 2 * v8;
  uint64_t v10 = *(void *)(a1 + 64);
  if (v10) {
    unsigned int v11 = (uint64_t *)(v10 + 8);
  }
  else {
    unsigned int v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_12D5330(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  int v15 = *(_DWORD *)(a1 + 16);
  if (!(_BYTE)v15) {
    goto LABEL_25;
  }
  if (v15)
  {
    unint64_t v22 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v23 = *(unsigned __int8 *)(v22 + 23);
    uint64_t v24 = *(void *)(v22 + 8);
    if ((v23 & 0x80u) == 0) {
      uint64_t v24 = v23;
    }
    v9 += v24 + ((9 * (__clz(v24 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v15 & 2) == 0)
    {
LABEL_18:
      if ((v15 & 4) == 0) {
        goto LABEL_19;
      }
      goto LABEL_44;
    }
  }
  else if ((v15 & 2) == 0)
  {
    goto LABEL_18;
  }
  unint64_t v25 = sub_12EE8C8(*(void *)(a1 + 80));
  v9 += v25 + ((9 * (__clz(v25 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v15 & 4) == 0)
  {
LABEL_19:
    if ((v15 & 8) == 0) {
      goto LABEL_20;
    }
    goto LABEL_45;
  }
LABEL_44:
  uint64_t v26 = sub_15B2F90(*(void *)(a1 + 88));
  v9 += v26 + ((9 * (__clz(v26 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v15 & 8) == 0)
  {
LABEL_20:
    if ((v15 & 0x10) == 0) {
      goto LABEL_21;
    }
    goto LABEL_46;
  }
LABEL_45:
  uint64_t v27 = sub_12F9224(*(void *)(a1 + 96));
  v9 += v27 + ((9 * (__clz(v27 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v15 & 0x10) == 0)
  {
LABEL_21:
    if ((v15 & 0x20) == 0) {
      goto LABEL_22;
    }
LABEL_47:
    uint64_t v29 = sub_12F5B28(*(void *)(a1 + 112));
    v9 += v29 + ((9 * (__clz(v29 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v15 & 0x40) == 0)
    {
LABEL_23:
      if ((v15 & 0x80) == 0) {
        goto LABEL_25;
      }
      goto LABEL_24;
    }
    goto LABEL_48;
  }
LABEL_46:
  uint64_t v28 = sub_12F9990(*(void *)(a1 + 104));
  v9 += v28 + ((9 * (__clz(v28 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v15 & 0x20) != 0) {
    goto LABEL_47;
  }
LABEL_22:
  if ((v15 & 0x40) == 0) {
    goto LABEL_23;
  }
LABEL_48:
  uint64_t v30 = sub_12F6328(*(void *)(a1 + 120));
  v9 += v30 + ((9 * (__clz(v30 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v15 & 0x80) != 0)
  {
LABEL_24:
    uint64_t v16 = sub_12F5378(*(void *)(a1 + 128));
    v9 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_25:
  if ((v15 & 0xFF00) == 0) {
    goto LABEL_38;
  }
  if ((v15 & 0x100) != 0)
  {
    uint64_t v31 = sub_12FACB0(*(void *)(a1 + 136));
    v9 += v31 + ((9 * (__clz(v31 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v15 & 0x200) == 0)
    {
LABEL_28:
      if ((v15 & 0x400) == 0) {
        goto LABEL_29;
      }
      goto LABEL_52;
    }
  }
  else if ((v15 & 0x200) == 0)
  {
    goto LABEL_28;
  }
  uint64_t v32 = sub_15FF780(*(void *)(a1 + 144));
  v9 += v32 + ((9 * (__clz(v32 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v15 & 0x400) == 0)
  {
LABEL_29:
    if ((v15 & 0x800) == 0) {
      goto LABEL_30;
    }
    goto LABEL_53;
  }
LABEL_52:
  uint64_t v33 = sub_12F5378(*(void *)(a1 + 152));
  v9 += v33 + ((9 * (__clz(v33 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v15 & 0x800) == 0)
  {
LABEL_30:
    if ((v15 & 0x1000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_54;
  }
LABEL_53:
  uint64_t v34 = sub_12D6448(*(void *)(a1 + 160));
  v9 += v34 + ((9 * (__clz(v34 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v15 & 0x1000) == 0)
  {
LABEL_31:
    if ((v15 & 0x2000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_55;
  }
LABEL_54:
  uint64_t v35 = sub_12EAE2C(*(void *)(a1 + 168));
  v9 += v35 + ((9 * (__clz(v35 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v15 & 0x2000) == 0)
  {
LABEL_32:
    if ((v15 & 0x4000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_59;
  }
LABEL_55:
  int v36 = *(_DWORD *)(a1 + 176);
  uint64_t v37 = ((9 * (__clz(v36 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if (v36 >= 0) {
    uint64_t v38 = v37;
  }
  else {
    uint64_t v38 = 11;
  }
  v9 += v38;
  if ((v15 & 0x4000) == 0)
  {
LABEL_33:
    if ((v15 & 0x8000) == 0) {
      goto LABEL_38;
    }
    goto LABEL_34;
  }
LABEL_59:
  int v39 = *(_DWORD *)(a1 + 180);
  uint64_t v40 = ((9 * (__clz(v39 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if (v39 >= 0) {
    uint64_t v41 = v40;
  }
  else {
    uint64_t v41 = 11;
  }
  v9 += v41;
  if ((v15 & 0x8000) != 0)
  {
LABEL_34:
    int v17 = *(_DWORD *)(a1 + 184);
    uint64_t v18 = ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if (v17 >= 0) {
      uint64_t v19 = v18;
    }
    else {
      uint64_t v19 = 11;
    }
    v9 += v19;
  }
LABEL_38:
  uint64_t v20 = *(void *)(a1 + 8);
  if (v20)
  {
    unint64_t v42 = v20 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v42 + 31) < 0) {
      uint64_t v43 = *(void *)(v42 + 16);
    }
    else {
      uint64_t v43 = *(unsigned __int8 *)(v42 + 31);
    }
    v9 += v43;
  }
  *(_DWORD *)(a1 + 20) = v9;
  return v9;
}

void sub_12E9BC4(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_1301EE8((std::string *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    uint64_t v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    unsigned int v11 = (std::string **)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_1301F74((std::string *)(a1 + 48), v11, v10, v9, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v12 = *(_DWORD *)(a1 + 56) + v9;
    *(_DWORD *)(a1 + 56) = v12;
    uint64_t v13 = *(int **)(a1 + 64);
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 16);
  if (!(_BYTE)v14) {
    goto LABEL_76;
  }
  if (v14)
  {
    int v15 = (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v16 = *(void *)(a1 + 8);
    int v17 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
    if (v16) {
      int v17 = (uint64_t *)*v17;
    }
    sub_1881DF4((std::string **)(a1 + 72), v15, v17);
    if ((v14 & 2) == 0)
    {
LABEL_10:
      if ((v14 & 4) == 0) {
        goto LABEL_11;
      }
      goto LABEL_28;
    }
  }
  else if ((v14 & 2) == 0)
  {
    goto LABEL_10;
  }
  *(_DWORD *)(a1 + 16) |= 2u;
  uint64_t v18 = *(std::string **)(a1 + 80);
  if (!v18)
  {
    uint64_t v19 = *(void *)(a1 + 8);
    uint64_t v20 = (void *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
    if (v19) {
      uint64_t v20 = (void *)*v20;
    }
    uint64_t v18 = (std::string *)sub_12F816C((uint64_t)v20);
    *(void *)(a1 + 80) = v18;
  }
  if (*(void *)(a2 + 80)) {
    uint64_t v21 = *(uint64_t (****)())(a2 + 80);
  }
  else {
    uint64_t v21 = &off_2531E00;
  }
  sub_12D45B4(v18, (uint64_t)v21);
  if ((v14 & 4) == 0)
  {
LABEL_11:
    if ((v14 & 8) == 0) {
      goto LABEL_12;
    }
    goto LABEL_36;
  }
LABEL_28:
  *(_DWORD *)(a1 + 16) |= 4u;
  unint64_t v22 = *(std::string **)(a1 + 88);
  if (!v22)
  {
    uint64_t v23 = *(void *)(a1 + 8);
    uint64_t v24 = (void *)(v23 & 0xFFFFFFFFFFFFFFFCLL);
    if (v23) {
      uint64_t v24 = (void *)*v24;
    }
    unint64_t v22 = (std::string *)sub_15C1B30((uint64_t)v24);
    *(void *)(a1 + 88) = v22;
  }
  if (*(void *)(a2 + 88)) {
    unint64_t v25 = *(uint64_t (****)())(a2 + 88);
  }
  else {
    unint64_t v25 = &off_253F2A0;
  }
  sub_11EC100(v22, (uint64_t)v25);
  if ((v14 & 8) == 0)
  {
LABEL_12:
    if ((v14 & 0x10) == 0) {
      goto LABEL_13;
    }
    goto LABEL_44;
  }
LABEL_36:
  *(_DWORD *)(a1 + 16) |= 8u;
  uint64_t v26 = *(std::string **)(a1 + 96);
  if (!v26)
  {
    uint64_t v27 = *(void *)(a1 + 8);
    uint64_t v28 = (void *)(v27 & 0xFFFFFFFFFFFFFFFCLL);
    if (v27) {
      uint64_t v28 = (void *)*v28;
    }
    uint64_t v26 = (std::string *)sub_12FDFDC((uint64_t)v28);
    *(void *)(a1 + 96) = v26;
  }
  if (*(void *)(a2 + 96)) {
    uint64_t v29 = *(uint64_t (****)())(a2 + 96);
  }
  else {
    uint64_t v29 = &off_25321B0;
  }
  sub_12EA140(v26, (uint64_t)v29);
  if ((v14 & 0x10) == 0)
  {
LABEL_13:
    if ((v14 & 0x20) == 0) {
      goto LABEL_14;
    }
LABEL_52:
    *(_DWORD *)(a1 + 16) |= 0x20u;
    uint64_t v34 = *(std::string **)(a1 + 112);
    if (!v34)
    {
      uint64_t v35 = *(void *)(a1 + 8);
      int v36 = (void *)(v35 & 0xFFFFFFFFFFFFFFFCLL);
      if (v35) {
        int v36 = (void *)*v36;
      }
      uint64_t v34 = (std::string *)sub_12F892C((uint64_t)v36);
      *(void *)(a1 + 112) = v34;
    }
    if (*(void *)(a2 + 112)) {
      uint64_t v37 = *(uint64_t (****)())(a2 + 112);
    }
    else {
      uint64_t v37 = &off_2532090;
    }
    sub_12EA284(v34, (uint64_t)v37);
    if ((v14 & 0x40) == 0)
    {
LABEL_15:
      if ((v14 & 0x80) == 0) {
        goto LABEL_76;
      }
      goto LABEL_68;
    }
    goto LABEL_60;
  }
LABEL_44:
  *(_DWORD *)(a1 + 16) |= 0x10u;
  uint64_t v30 = *(std::string **)(a1 + 104);
  if (!v30)
  {
    uint64_t v31 = *(void *)(a1 + 8);
    uint64_t v32 = (void *)(v31 & 0xFFFFFFFFFFFFFFFCLL);
    if (v31) {
      uint64_t v32 = (void *)*v32;
    }
    uint64_t v30 = (std::string *)sub_12FE080((uint64_t)v32);
    *(void *)(a1 + 104) = v30;
  }
  if (*(void *)(a2 + 104)) {
    uint64_t v33 = *(uint64_t (****)())(a2 + 104);
  }
  else {
    uint64_t v33 = &off_25321F0;
  }
  sub_12D7FFC(v30, (uint64_t)v33);
  if ((v14 & 0x20) != 0) {
    goto LABEL_52;
  }
LABEL_14:
  if ((v14 & 0x40) == 0) {
    goto LABEL_15;
  }
LABEL_60:
  *(_DWORD *)(a1 + 16) |= 0x40u;
  uint64_t v38 = *(std::string **)(a1 + 120);
  if (!v38)
  {
    uint64_t v39 = *(void *)(a1 + 8);
    uint64_t v40 = (void *)(v39 & 0xFFFFFFFFFFFFFFFCLL);
    if (v39) {
      uint64_t v40 = (void *)*v40;
    }
    uint64_t v38 = (std::string *)sub_12F89D8((uint64_t)v40);
    *(void *)(a1 + 120) = v38;
  }
  if (*(void *)(a2 + 120)) {
    uint64_t v41 = *(uint64_t (****)())(a2 + 120);
  }
  else {
    uint64_t v41 = &off_25320D0;
  }
  sub_12EA284(v38, (uint64_t)v41);
  if ((v14 & 0x80) != 0)
  {
LABEL_68:
    *(_DWORD *)(a1 + 16) |= 0x80u;
    unint64_t v42 = *(std::string **)(a1 + 128);
    if (!v42)
    {
      uint64_t v43 = *(void *)(a1 + 8);
      uint64_t v44 = (void *)(v43 & 0xFFFFFFFFFFFFFFFCLL);
      if (v43) {
        uint64_t v44 = (void *)*v44;
      }
      unint64_t v42 = (std::string *)sub_12F88AC((uint64_t)v44);
      *(void *)(a1 + 128) = v42;
    }
    if (*(void *)(a2 + 128)) {
      uint64_t v45 = *(uint64_t (****)())(a2 + 128);
    }
    else {
      uint64_t v45 = &off_2532060;
    }
    sub_12EA3C4(v42, (uint64_t)v45);
  }
LABEL_76:
  if ((v14 & 0xFF00) == 0) {
    goto LABEL_87;
  }
  if ((v14 & 0x100) != 0)
  {
    *(_DWORD *)(a1 + 16) |= 0x100u;
    uint64_t v47 = *(std::string **)(a1 + 136);
    if (!v47)
    {
      uint64_t v48 = *(void *)(a1 + 8);
      unsigned int v49 = (void *)(v48 & 0xFFFFFFFFFFFFFFFCLL);
      if (v48) {
        unsigned int v49 = (void *)*v49;
      }
      sub_12FE0FC((uint64_t)v49);
      *(void *)(a1 + 136) = v47;
    }
    if (*(void *)(a2 + 136)) {
      uint64_t v50 = *(uint64_t (****)())(a2 + 136);
    }
    else {
      uint64_t v50 = &off_2532240;
    }
    sub_12EA4BC(v47, (uint64_t)v50);
    if ((v14 & 0x200) == 0)
    {
LABEL_79:
      if ((v14 & 0x400) == 0) {
        goto LABEL_80;
      }
      goto LABEL_107;
    }
  }
  else if ((v14 & 0x200) == 0)
  {
    goto LABEL_79;
  }
  *(_DWORD *)(a1 + 16) |= 0x200u;
  uint64_t v51 = *(std::string **)(a1 + 144);
  if (!v51)
  {
    uint64_t v52 = *(void *)(a1 + 8);
    uint64_t v53 = (void *)(v52 & 0xFFFFFFFFFFFFFFFCLL);
    if (v52) {
      uint64_t v53 = (void *)*v53;
    }
    uint64_t v51 = (std::string *)sub_16061BC((uint64_t)v53);
    *(void *)(a1 + 144) = v51;
  }
  if (*(void *)(a2 + 144)) {
    uint64_t v54 = *(uint64_t (****)())(a2 + 144);
  }
  else {
    uint64_t v54 = &off_2540CE0;
  }
  sub_15FD594(v51, (uint64_t)v54);
  if ((v14 & 0x400) == 0)
  {
LABEL_80:
    if ((v14 & 0x800) == 0) {
      goto LABEL_81;
    }
    goto LABEL_115;
  }
LABEL_107:
  *(_DWORD *)(a1 + 16) |= 0x400u;
  unsigned int v55 = *(std::string **)(a1 + 152);
  if (!v55)
  {
    uint64_t v56 = *(void *)(a1 + 8);
    int v57 = (void *)(v56 & 0xFFFFFFFFFFFFFFFCLL);
    if (v56) {
      int v57 = (void *)*v57;
    }
    unsigned int v55 = (std::string *)sub_12F88AC((uint64_t)v57);
    *(void *)(a1 + 152) = v55;
  }
  if (*(void *)(a2 + 152)) {
    uint64_t v58 = *(uint64_t (****)())(a2 + 152);
  }
  else {
    uint64_t v58 = &off_2532060;
  }
  sub_12EA3C4(v55, (uint64_t)v58);
  if ((v14 & 0x800) == 0)
  {
LABEL_81:
    if ((v14 & 0x1000) == 0) {
      goto LABEL_82;
    }
    goto LABEL_123;
  }
LABEL_115:
  *(_DWORD *)(a1 + 16) |= 0x800u;
  uint64_t v59 = *(void **)(a1 + 160);
  if (!v59)
  {
    uint64_t v60 = *(void *)(a1 + 8);
    BOOL v61 = (void *)(v60 & 0xFFFFFFFFFFFFFFFCLL);
    if (v60) {
      BOOL v61 = (void *)*v61;
    }
    uint64_t v59 = sub_12D993C((uint64_t)v61);
    *(void *)(a1 + 160) = v59;
  }
  if (*(void *)(a2 + 160)) {
    uint64_t v62 = *(uint64_t (****)())(a2 + 160);
  }
  else {
    uint64_t v62 = &off_2531690;
  }
  sub_12D6540((uint64_t)v59, (uint64_t)v62);
  if ((v14 & 0x1000) == 0)
  {
LABEL_82:
    if ((v14 & 0x2000) == 0) {
      goto LABEL_83;
    }
    goto LABEL_131;
  }
LABEL_123:
  *(_DWORD *)(a1 + 16) |= 0x1000u;
  unint64_t v63 = *(std::string **)(a1 + 168);
  if (!v63)
  {
    uint64_t v64 = *(void *)(a1 + 8);
    unint64_t v65 = (void *)(v64 & 0xFFFFFFFFFFFFFFFCLL);
    if (v64) {
      unint64_t v65 = (void *)*v65;
    }
    unint64_t v63 = (std::string *)sub_12EC538((uint64_t)v65);
    *(void *)(a1 + 168) = v63;
  }
  if (*(void *)(a2 + 168)) {
    uint64_t v66 = *(uint64_t (****)())(a2 + 168);
  }
  else {
    uint64_t v66 = &off_2531CC8;
  }
  sub_11B9C54(v63, (uint64_t)v66);
  if ((v14 & 0x2000) == 0)
  {
LABEL_83:
    if ((v14 & 0x4000) == 0) {
      goto LABEL_84;
    }
LABEL_132:
    *(_DWORD *)(a1 + 180) = *(_DWORD *)(a2 + 180);
    if ((v14 & 0x8000) == 0) {
      goto LABEL_86;
    }
    goto LABEL_85;
  }
LABEL_131:
  *(_DWORD *)(a1 + 176) = *(_DWORD *)(a2 + 176);
  if ((v14 & 0x4000) != 0) {
    goto LABEL_132;
  }
LABEL_84:
  if ((v14 & 0x8000) != 0) {
LABEL_85:
  }
    *(_DWORD *)(a1 + 184) = *(_DWORD *)(a2 + 184);
LABEL_86:
  *(_DWORD *)(a1 + 16) |= v14;
LABEL_87:
  uint64_t v46 = *(void *)(a2 + 8);
  if (v46)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v46 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

std::string *sub_12EA140(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = (std::string *)sub_1302508((uint64_t *)&v3[1], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2]- LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    uint64_t v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 3) != 0)
  {
    if (v9)
    {
      uint64_t v10 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      int v12 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        int v12 = (uint64_t *)*v12;
      }
      uint64_t result = sub_1881DF4((std::string **)&v3[2], v10, v12);
    }
    if ((v9 & 2) != 0)
    {
      uint64_t v13 = (long long *)(*(void *)(a2 + 56) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
      std::string::size_type v14 = v3->__r_.__value_.__l.__size_;
      int v15 = (uint64_t *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
      if (v14) {
        int v15 = (uint64_t *)*v15;
      }
      uint64_t result = sub_1881DF4((std::string **)&v3[2].__r_.__value_.__l.__size_, v13, v15);
    }
  }
  uint64_t v16 = *(void *)(a2 + 8);
  if (v16)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v16 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

std::string *sub_12EA284(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (const std::string **)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = (std::string *)sub_188FB98((uint64_t)&v3[1], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2]- LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    uint64_t v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 7) != 0)
  {
    if (v9)
    {
      unsigned int v11 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v13 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v13 = (uint64_t *)*v13;
      }
      uint64_t result = sub_1881DF4((std::string **)&v3[2], v11, v13);
      if ((v9 & 2) == 0)
      {
LABEL_7:
        if ((v9 & 4) == 0)
        {
LABEL_9:
          LODWORD(v3->__r_.__value_.__r.__words[2]) |= v9;
          goto LABEL_10;
        }
LABEL_8:
        v3[2].__r_.__value_.__s.__data_[12] = *(unsigned char *)(a2 + 60);
        goto LABEL_9;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_7;
    }
    LODWORD(v3[2].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 56);
    if ((v9 & 4) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
LABEL_10:
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

std::string *sub_12EA3C4(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0xF) != 0)
  {
    if (v4)
    {
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::pointer data = (std::string *)result[1].__r_.__value_.__l.__data_;
      if (!data)
      {
        std::string::size_type size = v3->__r_.__value_.__l.__size_;
        uint64_t v8 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
        if (size) {
          uint64_t v8 = (void *)*v8;
        }
        sub_12F8830((uint64_t)v8);
        v3[1].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      }
      if (*(void *)(a2 + 24)) {
        int v9 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        int v9 = &off_2532030;
      }
      uint64_t result = sub_12F4C98(data, (uint64_t)v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_21;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 32);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0)
      {
LABEL_7:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
        goto LABEL_8;
      }
LABEL_6:
      v3[1].__r_.__value_.__s.__data_[16] = *(unsigned char *)(a2 + 40);
      goto LABEL_7;
    }
LABEL_21:
    HIDWORD(v3[1].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 36);
    if ((v4 & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_8:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

std::string *sub_12EA4BC(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(a2 + 16);
  if (!v4) {
    goto LABEL_75;
  }
  if (*(unsigned char *)(a2 + 16))
  {
    LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
    std::string::pointer data = (std::string *)result[1].__r_.__value_.__l.__data_;
    if (!data)
    {
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      int v7 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        int v7 = (void *)*v7;
      }
      std::string::pointer data = (std::string *)sub_12FE180((uint64_t)v7);
      v3[1].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
    }
    if (*(void *)(a2 + 24)) {
      uint64_t v8 = *(uint64_t (****)())(a2 + 24);
    }
    else {
      uint64_t v8 = &off_2532298;
    }
    uint64_t result = sub_12FAEE4(data, (uint64_t)v8);
    if ((v4 & 2) == 0)
    {
LABEL_4:
      if ((v4 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_26;
    }
  }
  else if ((*(unsigned char *)(a2 + 16) & 2) == 0)
  {
    goto LABEL_4;
  }
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
  int v9 = (std::string *)v3[1].__r_.__value_.__l.__size_;
  if (!v9)
  {
    std::string::size_type v10 = v3->__r_.__value_.__l.__size_;
    unsigned int v11 = (void *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
    if (v10) {
      unsigned int v11 = (void *)*v11;
    }
    int v9 = (std::string *)sub_12FE224((uint64_t)v11);
    v3[1].__r_.__value_.__l.__size_ = (std::string::size_type)v9;
  }
  if (*(void *)(a2 + 32)) {
    int v12 = *(uint64_t (****)())(a2 + 32);
  }
  else {
    int v12 = &off_25322D8;
  }
  uint64_t result = sub_12FAEE4(v9, (uint64_t)v12);
  if ((v4 & 4) == 0)
  {
LABEL_5:
    if ((v4 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_34;
  }
LABEL_26:
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
  uint64_t v13 = (std::string *)v3[1].__r_.__value_.__r.__words[2];
  if (!v13)
  {
    std::string::size_type v14 = v3->__r_.__value_.__l.__size_;
    int v15 = (void *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
    if (v14) {
      int v15 = (void *)*v15;
    }
    uint64_t v13 = (std::string *)sub_12FE350((uint64_t)v15);
    v3[1].__r_.__value_.__r.__words[2] = (std::string::size_type)v13;
  }
  if (*(void *)(a2 + 40)) {
    uint64_t v16 = *(uint64_t (****)())(a2 + 40);
  }
  else {
    uint64_t v16 = &off_2532340;
  }
  uint64_t result = sub_11A7934(v13, (uint64_t)v16);
  if ((v4 & 8) == 0)
  {
LABEL_6:
    if ((v4 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_42;
  }
LABEL_34:
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= 8u;
  int v17 = (std::string *)v3[2].__r_.__value_.__l.__data_;
  if (!v17)
  {
    std::string::size_type v18 = v3->__r_.__value_.__l.__size_;
    uint64_t v19 = (void *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
    if (v18) {
      uint64_t v19 = (void *)*v19;
    }
    int v17 = (std::string *)sub_12FE2C8((uint64_t)v19);
    v3[2].__r_.__value_.__r.__words[0] = (std::string::size_type)v17;
  }
  if (*(void *)(a2 + 48)) {
    uint64_t v20 = *(uint64_t (****)())(a2 + 48);
  }
  else {
    uint64_t v20 = &off_2532318;
  }
  uint64_t result = sub_119E644(v17, (uint64_t)v20);
  if ((v4 & 0x10) == 0)
  {
LABEL_7:
    if ((v4 & 0x20) == 0) {
      goto LABEL_8;
    }
LABEL_50:
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x20u;
    unint64_t v25 = (std::string *)v3[2].__r_.__value_.__r.__words[2];
    if (!v25)
    {
      std::string::size_type v26 = v3->__r_.__value_.__l.__size_;
      uint64_t v27 = (void *)(v26 & 0xFFFFFFFFFFFFFFFCLL);
      if (v26) {
        uint64_t v27 = (void *)*v27;
      }
      unint64_t v25 = (std::string *)sub_12FE448((uint64_t)v27);
      v3[2].__r_.__value_.__r.__words[2] = (std::string::size_type)v25;
    }
    if (*(void *)(a2 + 64)) {
      uint64_t v28 = *(uint64_t (****)())(a2 + 64);
    }
    else {
      uint64_t v28 = &off_2532380;
    }
    uint64_t result = sub_12FAFE4(v25, (uint64_t)v28);
    if ((v4 & 0x40) == 0) {
      goto LABEL_66;
    }
    goto LABEL_58;
  }
LABEL_42:
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x10u;
  uint64_t v21 = (std::string *)v3[2].__r_.__value_.__l.__size_;
  if (!v21)
  {
    std::string::size_type v22 = v3->__r_.__value_.__l.__size_;
    uint64_t v23 = (void *)(v22 & 0xFFFFFFFFFFFFFFFCLL);
    if (v22) {
      uint64_t v23 = (void *)*v23;
    }
    uint64_t v21 = (std::string *)sub_12FE3CC((uint64_t)v23);
    v3[2].__r_.__value_.__l.__size_ = (std::string::size_type)v21;
  }
  if (*(void *)(a2 + 56)) {
    uint64_t v24 = *(uint64_t (****)())(a2 + 56);
  }
  else {
    uint64_t v24 = &off_2532360;
  }
  uint64_t result = sub_11A7934(v21, (uint64_t)v24);
  if ((v4 & 0x20) != 0) {
    goto LABEL_50;
  }
LABEL_8:
  if ((v4 & 0x40) != 0)
  {
LABEL_58:
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x40u;
    uint64_t result = (std::string *)v3[3].__r_.__value_.__l.__data_;
    if (!result)
    {
      std::string::size_type v29 = v3->__r_.__value_.__l.__size_;
      uint64_t v30 = (void *)(v29 & 0xFFFFFFFFFFFFFFFCLL);
      if (v29) {
        uint64_t v30 = (void *)*v30;
      }
      uint64_t result = (std::string *)sub_12FE4C4((uint64_t)v30);
      v3[3].__r_.__value_.__r.__words[0] = (std::string::size_type)result;
    }
    uint64_t v31 = *(uint64_t (****)())(a2 + 72);
    if (!v31) {
      uint64_t v31 = &off_25323A8;
    }
    unint64_t v32 = (unint64_t)v31[1];
    if (v32) {
      uint64_t result = sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v32 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
  }
LABEL_66:
  if (v4 < 0)
  {
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x80u;
    uint64_t v33 = (std::string *)v3[3].__r_.__value_.__l.__size_;
    if (!v33)
    {
      std::string::size_type v34 = v3->__r_.__value_.__l.__size_;
      uint64_t v35 = (void *)(v34 & 0xFFFFFFFFFFFFFFFCLL);
      if (v34) {
        uint64_t v35 = (void *)*v35;
      }
      uint64_t v33 = (std::string *)sub_12FE53C((uint64_t)v35);
      v3[3].__r_.__value_.__l.__size_ = (std::string::size_type)v33;
    }
    if (*(void *)(a2 + 80)) {
      int v36 = *(uint64_t (****)())(a2 + 80);
    }
    else {
      int v36 = &off_25323C0;
    }
    uint64_t result = sub_12FB0B4(v33, (uint64_t)v36);
  }
LABEL_75:
  uint64_t v37 = *(void *)(a2 + 8);
  if (v37)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v37 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_12EA7B4(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0x200) != 0)
  {
    if (!sub_15FD828(*(void *)(a1 + 144))) {
      return 0;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 0x800) == 0) {
    return 1;
  }
  uint64_t v4 = *(void *)(a1 + 160);
  uint64_t v5 = *(unsigned int *)(v4 + 32);
  do
  {
    BOOL v3 = (int)v5 < 1;
    if ((int)v5 < 1) {
      break;
    }
    uint64_t v6 = v5 - 1;
    char v7 = sub_12D98F0(*(void *)(*(void *)(v4 + 40) + 8 * v5));
    uint64_t v5 = v6;
  }
  while ((v7 & 1) != 0);
  return v3;
}

void *sub_12EA838@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap.fields.JanaWorkflowContext");
}

uint64_t sub_12EA848(uint64_t a1)
{
  BOOL v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_9;
    }
  }
  else if (v4)
  {
    goto LABEL_9;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_9:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12EA900(uint64_t a1)
{
  sub_12EA848(a1);

  operator delete();
}

uint64_t sub_12EA938(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v30 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v30, a3[11].i32[1])) {
    return *(void *)v30;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    char v7 = (char *)(*(void *)v30 + 1);
    unsigned int v8 = **(unsigned char **)v30;
    if ((char)**(unsigned char **)v30 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        char v7 = (char *)sub_188C180(*(uint64_t *)v30, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        char v7 = (char *)(*(void *)v30 + 2);
      }
    }
    *(void *)uint64_t v30 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 10) {
          goto LABEL_32;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v11 = *(void *)(a1 + 8);
        int v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
        if (v11) {
          int v12 = (uint64_t *)*v12;
        }
        uint64_t v13 = (void *)(a1 + 24);
        goto LABEL_31;
      case 2u:
        if (v8 != 16) {
          goto LABEL_32;
        }
        std::string::size_type v14 = v7 + 1;
        unint64_t v15 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_17;
        }
        int v16 = *v14;
        int v17 = v15 + (v16 << 7);
        unint64_t v15 = (v17 - 128);
        if (v16 < 0)
        {
          *(void *)uint64_t v30 = sub_188C138((uint64_t)v7, (v17 - 128));
          if (!*(void *)v30) {
            return 0;
          }
          unint64_t v15 = v26;
        }
        else
        {
          std::string::size_type v14 = v7 + 2;
LABEL_17:
          *(void *)uint64_t v30 = v14;
        }
        if (v15 <= 5)
        {
          *(_DWORD *)(a1 + 16) |= 4u;
          *(_DWORD *)(a1 + 40) = v15;
          goto LABEL_40;
        }
        if (*v6) {
          uint64_t v28 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          uint64_t v28 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v29 = 2;
        goto LABEL_52;
      case 3u:
        if (v8 != 24) {
          goto LABEL_32;
        }
        std::string::size_type v18 = v7 + 1;
        unint64_t v15 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_24;
        }
        int v19 = *v18;
        int v20 = v15 + (v19 << 7);
        unint64_t v15 = (v20 - 128);
        if (v19 < 0)
        {
          *(void *)uint64_t v30 = sub_188C138((uint64_t)v7, (v20 - 128));
          if (!*(void *)v30) {
            return 0;
          }
          unint64_t v15 = v27;
        }
        else
        {
          std::string::size_type v18 = v7 + 2;
LABEL_24:
          *(void *)uint64_t v30 = v18;
        }
        if (v15 > 4)
        {
          if (*v6) {
            uint64_t v28 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v28 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          int v29 = 3;
LABEL_52:
          sub_188C020(v29, v15, v28);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 8u;
          *(_DWORD *)(a1 + 44) = v15;
        }
        goto LABEL_40;
      case 4u:
        if (v8 != 34) {
          goto LABEL_32;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v21 = *(void *)(a1 + 8);
        int v12 = (uint64_t *)(v21 & 0xFFFFFFFFFFFFFFFCLL);
        if (v21) {
          int v12 = (uint64_t *)*v12;
        }
        uint64_t v13 = (void *)(a1 + 32);
LABEL_31:
        std::string::size_type v22 = (std::string *)sub_1880F84(v13, v12);
        uint64_t v23 = (void *)sub_188C244(v22, *(char **)v30, (uint64_t)a3);
        goto LABEL_39;
      default:
LABEL_32:
        if (v8) {
          BOOL v24 = (v8 & 7) == 4;
        }
        else {
          BOOL v24 = 1;
        }
        if (!v24)
        {
          if (*v6)
          {
            unint64_t v25 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            unint64_t v25 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            char v7 = *(char **)v30;
          }
          uint64_t v23 = sub_1885AC0(v8, v25, v7, a3);
LABEL_39:
          *(void *)uint64_t v30 = v23;
          if (!v23) {
            return 0;
          }
LABEL_40:
          if (sub_11947B8((uint64_t)a3, (char **)v30, a3[11].i32[1])) {
            return *(void *)v30;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return *(void *)v30;
    }
  }
}

unsigned char *sub_12EAC48(uint64_t a1, unsigned char *__dst, void *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v7 = *(int *)(a1 + 40);
    unsigned char *v4 = 16;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 44);
    unsigned char *v4 = 24;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0) {
    uint64_t v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    int v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    int v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_12EAE2C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 0xF) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_23;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
  uint64_t v5 = *(void *)(v3 + 8);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = v4;
  }
  uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    unint64_t v6 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v1 & 4) == 0)
  {
    if ((v1 & 8) == 0) {
      goto LABEL_23;
    }
    goto LABEL_19;
  }
  int v9 = *(_DWORD *)(a1 + 40);
  if (v9 < 0) {
    uint64_t v10 = 11;
  }
  else {
    uint64_t v10 = ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v2 += v10;
  if ((v1 & 8) != 0)
  {
LABEL_19:
    int v11 = *(_DWORD *)(a1 + 44);
    if (v11 < 0) {
      uint64_t v12 = 11;
    }
    else {
      uint64_t v12 = ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v12;
  }
LABEL_23:
  uint64_t v13 = *(void *)(a1 + 8);
  if (v13)
  {
    unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v15 + 31) < 0) {
      uint64_t v16 = *(void *)(v15 + 16);
    }
    else {
      uint64_t v16 = *(unsigned __int8 *)(v15 + 31);
    }
    v2 += v16;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_12EAF78()
{
  return 1;
}

void *sub_12EAF80@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap.fields.ManualOutreachSummary");
}

uint64_t sub_12EAF90(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12DA67C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_12EB020(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12DCA00(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_12EB0B0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12E55BC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_12EB140(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12E80F0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_12EB1D0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12E0C50(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_12EB260(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12E4270(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

void *sub_12EB2F0(void *a1)
{
  unint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_12EB374((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

uint64_t sub_12EB374(uint64_t result)
{
  if ((uint64_t (***)())result != &off_2531CF8)
  {
    int v1 = (void *)result;
    uint64_t v2 = *(void **)(result + 24);
    if (v2)
    {
      sub_12DA238(v2);
      operator delete();
    }
    uint64_t v3 = v1[4];
    if (v3)
    {
      sub_12DC7CC(v3);
      operator delete();
    }
    uint64_t v4 = (void *)v1[5];
    if (v4)
    {
      sub_12E5058(v4);
      operator delete();
    }
    uint64_t v5 = (void *)v1[6];
    if (v5)
    {
      sub_12E7BF0(v5);
      operator delete();
    }
    int v6 = (void *)v1[7];
    if (v6)
    {
      sub_12E0810(v6);
      operator delete();
    }
    uint64_t v7 = v1[8];
    if (v7)
    {
      sub_12E40B4(v7);
      operator delete();
    }
    uint64_t result = v1[9];
    if (result)
    {
      sub_12DD7D4(result);
      operator delete();
    }
  }
  return result;
}

void sub_12EB4A0(void *a1)
{
  sub_12EB2F0(a1);

  operator delete();
}

char *sub_12EB4D8(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v32 = a2;
  if (sub_11947B8((uint64_t)a3, &v32, a3[11].i32[1])) {
    return v32;
  }
  int v6 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v7 = v32 + 1;
    unsigned int v8 = *v32;
    if (*v32 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v32, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v32 + 2;
      }
    }
    unint64_t v32 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 10) {
          goto LABEL_51;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v11 = *(void *)(a1 + 24);
        if (!v11)
        {
          uint64_t v12 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v12 = (void *)*v12;
          }
          sub_12EBDE0((uint64_t)v12);
          uint64_t v11 = v13;
          *(void *)(a1 + 24) = v13;
          uint64_t v7 = v32;
        }
        std::string::size_type v14 = (char *)sub_12EAF90(a3, v11, (unsigned __int8 *)v7);
        goto LABEL_58;
      case 2u:
        if (v8 != 18) {
          goto LABEL_51;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        unint64_t v15 = *(void **)(a1 + 32);
        if (!v15)
        {
          uint64_t v16 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v16 = (void *)*v16;
          }
          unint64_t v15 = sub_12EBEA4((uint64_t)v16);
          *(void *)(a1 + 32) = v15;
          uint64_t v7 = v32;
        }
        std::string::size_type v14 = (char *)sub_12EB020(a3, (uint64_t)v15, (unsigned __int8 *)v7);
        goto LABEL_58;
      case 3u:
        if (v8 != 26) {
          goto LABEL_51;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v17 = *(void *)(a1 + 40);
        if (!v17)
        {
          uint64_t v18 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v18 = (void *)*v18;
          }
          sub_12EC3E0((uint64_t)v18);
          uint64_t v17 = v19;
          *(void *)(a1 + 40) = v19;
          uint64_t v7 = v32;
        }
        std::string::size_type v14 = (char *)sub_12EB0B0(a3, v17, (unsigned __int8 *)v7);
        goto LABEL_58;
      case 4u:
        if (v8 != 34) {
          goto LABEL_51;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v20 = *(void *)(a1 + 48);
        if (!v20)
        {
          uint64_t v21 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v21 = (void *)*v21;
          }
          sub_12EC474((uint64_t)v21);
          uint64_t v20 = v22;
          *(void *)(a1 + 48) = v22;
          uint64_t v7 = v32;
        }
        std::string::size_type v14 = (char *)sub_12EB140(a3, v20, (unsigned __int8 *)v7);
        goto LABEL_58;
      case 5u:
        if (v8 != 42) {
          goto LABEL_51;
        }
        *(_DWORD *)(a1 + 16) |= 0x10u;
        uint64_t v23 = *(void *)(a1 + 56);
        if (!v23)
        {
          BOOL v24 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            BOOL v24 = (void *)*v24;
          }
          sub_12EC1D8((uint64_t)v24);
          uint64_t v23 = v25;
          *(void *)(a1 + 56) = v25;
          uint64_t v7 = v32;
        }
        std::string::size_type v14 = (char *)sub_12EB1D0(a3, v23, (unsigned __int8 *)v7);
        goto LABEL_58;
      case 6u:
        if (v8 != 50) {
          goto LABEL_51;
        }
        *(_DWORD *)(a1 + 16) |= 0x20u;
        uint64_t v26 = *(void *)(a1 + 64);
        if (!v26)
        {
          unint64_t v27 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            unint64_t v27 = (void *)*v27;
          }
          uint64_t v26 = sub_12EC340((uint64_t)v27);
          *(void *)(a1 + 64) = v26;
          uint64_t v7 = v32;
        }
        std::string::size_type v14 = sub_12EB260(a3, v26, (unsigned __int8 *)v7);
        goto LABEL_58;
      case 7u:
        if (v8 != 58) {
          goto LABEL_51;
        }
        *(_DWORD *)(a1 + 16) |= 0x40u;
        uint64_t v28 = *(void **)(a1 + 72);
        if (!v28)
        {
          int v29 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            int v29 = (void *)*v29;
          }
          uint64_t v28 = sub_12EBFD4((uint64_t)v29);
          *(void *)(a1 + 72) = v28;
          uint64_t v7 = v32;
        }
        std::string::size_type v14 = (char *)sub_12DE640(a3, (uint64_t)v28, (unsigned __int8 *)v7);
        goto LABEL_58;
      default:
LABEL_51:
        if (v8) {
          BOOL v30 = (v8 & 7) == 4;
        }
        else {
          BOOL v30 = 1;
        }
        if (!v30)
        {
          if (*v6)
          {
            uint64_t v31 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v31 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v7 = v32;
          }
          std::string::size_type v14 = (char *)sub_1885AC0(v8, v31, v7, a3);
LABEL_58:
          unint64_t v32 = v14;
          if (!v14) {
            return 0;
          }
          if (sub_11947B8((uint64_t)a3, &v32, a3[11].i32[1])) {
            return v32;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return v32;
    }
  }
}

unsigned char *sub_12EB864(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    unsigned char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    uint64_t v4 = sub_12DB220(v7, (unint64_t)v9, a3);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_21;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v10 = *(void *)(a1 + 32);
  unsigned char *v4 = 18;
  unsigned int v11 = *(_DWORD *)(v10 + 20);
  v4[1] = v11;
  if (v11 > 0x7F) {
    uint64_t v12 = sub_188A9CC(v11, v4 + 1);
  }
  else {
    uint64_t v12 = v4 + 2;
  }
  uint64_t v4 = sub_12DCCA8(v10, v12, a3);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_27;
  }
LABEL_21:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v13 = *(void *)(a1 + 40);
  unsigned char *v4 = 26;
  unsigned int v14 = *(_DWORD *)(v13 + 20);
  v4[1] = v14;
  if (v14 > 0x7F) {
    unint64_t v15 = sub_188A9CC(v14, v4 + 1);
  }
  else {
    unint64_t v15 = v4 + 2;
  }
  uint64_t v4 = sub_12E61A8(v13, v15, a3);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_33;
  }
LABEL_27:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v16 = *(void *)(a1 + 48);
  unsigned char *v4 = 34;
  unsigned int v17 = *(_DWORD *)(v16 + 20);
  v4[1] = v17;
  if (v17 > 0x7F) {
    uint64_t v18 = sub_188A9CC(v17, v4 + 1);
  }
  else {
    uint64_t v18 = v4 + 2;
  }
  uint64_t v4 = sub_12E8F18(v16, (unint64_t)v18, a3);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_39;
  }
LABEL_33:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v19 = *(void *)(a1 + 56);
  unsigned char *v4 = 42;
  unsigned int v20 = *(_DWORD *)(v19 + 20);
  v4[1] = v20;
  if (v20 > 0x7F) {
    uint64_t v21 = sub_188A9CC(v20, v4 + 1);
  }
  else {
    uint64_t v21 = v4 + 2;
  }
  uint64_t v4 = sub_12E1824(v19, (unint64_t)v21, a3);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_51;
    }
    goto LABEL_45;
  }
LABEL_39:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v22 = *(void *)(a1 + 64);
  unsigned char *v4 = 50;
  unsigned int v23 = *(_DWORD *)(v22 + 20);
  v4[1] = v23;
  if (v23 > 0x7F) {
    BOOL v24 = sub_188A9CC(v23, v4 + 1);
  }
  else {
    BOOL v24 = v4 + 2;
  }
  uint64_t v4 = sub_12E462C(v22, (unint64_t)v24, a3);
  if ((v6 & 0x40) != 0)
  {
LABEL_45:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v25 = *(void *)(a1 + 72);
    unsigned char *v4 = 58;
    unsigned int v26 = *(_DWORD *)(v25 + 20);
    v4[1] = v26;
    if (v26 > 0x7F) {
      unint64_t v27 = sub_188A9CC(v26, v4 + 1);
    }
    else {
      unint64_t v27 = v4 + 2;
    }
    uint64_t v4 = sub_12DDE58(v25, (unint64_t)v27, a3);
  }
LABEL_51:
  uint64_t v28 = *(void *)(a1 + 8);
  if ((v28 & 1) == 0) {
    return v4;
  }
  unint64_t v30 = v28 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v30 + 31) < 0)
  {
    uint64_t v31 = *(void **)(v30 + 8);
    uint64_t v32 = *(void *)(v30 + 16);
  }
  else
  {
    uint64_t v31 = (void *)(v30 + 8);
    LODWORD(v32) = *(unsigned __int8 *)(v30 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v32)
  {
    uint64_t v33 = (int)v32;
    memcpy(v4, v31, (int)v32);
    v4 += v33;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v31, v32, v4);
}

uint64_t sub_12EBBF4(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0x7F) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_14;
  }
  if (v2)
  {
    uint64_t v4 = sub_12DBB14(*(void *)(a1 + 24));
    uint64_t v3 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_7:
    uint64_t v5 = sub_12DCE50(*(void *)(a1 + 32));
    v3 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_8:
  if ((v2 & 4) != 0)
  {
    uint64_t v9 = sub_12E69E0(*(void *)(a1 + 40));
    v3 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 8) == 0)
    {
LABEL_10:
      if ((v2 & 0x10) == 0) {
        goto LABEL_11;
      }
      goto LABEL_18;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_10;
  }
  uint64_t v10 = sub_12E9750(*(void *)(a1 + 48));
  v3 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x10) == 0)
  {
LABEL_11:
    if ((v2 & 0x20) == 0) {
      goto LABEL_12;
    }
    goto LABEL_19;
  }
LABEL_18:
  uint64_t v11 = sub_12E2108(*(void *)(a1 + 56));
  v3 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x20) == 0)
  {
LABEL_12:
    if ((v2 & 0x40) == 0) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }
LABEL_19:
  uint64_t v12 = sub_12E48B8(*(void *)(a1 + 64));
  v3 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x40) != 0)
  {
LABEL_13:
    uint64_t v6 = sub_12DE0F8(*(void *)(a1 + 72));
    v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_14:
  uint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    unint64_t v13 = v7 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v13 + 31) < 0) {
      uint64_t v14 = *(void *)(v13 + 16);
    }
    else {
      uint64_t v14 = *(unsigned __int8 *)(v13 + 31);
    }
    v3 += v14;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

void *sub_12EBDD0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap.fields.TrafficIncidentFeedback");
}

double sub_12EBDE0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t v2 = off_24A63E8;
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = 0;
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a1;
  *(void *)(v2 + 48) = 0;
  *(void *)(v2 + 56) = 0;
  *(void *)(v2 + 64) = &qword_2550250;
  *(void *)(v2 + 72) = &qword_2550250;
  *(void *)(v2 + 80) = &qword_2550250;
  *(void *)(v2 + 88) = &qword_2550250;
  double result = 0.0;
  *(_OWORD *)(v2 + 96) = 0u;
  *(_OWORD *)(v2 + 112) = 0u;
  *(_OWORD *)(v2 + 128) = 0u;
  *(_OWORD *)(v2 + 144) = 0u;
  *(_OWORD *)(v2 + 160) = 0u;
  *(void *)(v2 + 173) = 0;
  return result;
}

void *sub_12EBEA4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *double result = off_24A6468;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = &qword_2550250;
  result[7] = &qword_2550250;
  result[8] = &qword_2550250;
  return result;
}

uint64_t sub_12EBF4C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24A64E8;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = &qword_2550250;
  *(void *)(result + 32) = &qword_2550250;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

void *sub_12EBFD4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = off_24A6568;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = &qword_2550250;
  result[7] = 0;
  result[8] = 0;
  result[9] = 0;
  return result;
}

uint64_t sub_12EC07C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24A65E8;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = a1;
  *(void *)(result + 56) = 0;
  *(void *)(result + 64) = 0;
  *(void *)(result + 72) = &qword_2550250;
  *(void *)(result + 80) = &qword_2550250;
  *(void *)(result + 88) = &qword_2550250;
  *(void *)(result + 96) = &qword_2550250;
  *(void *)(result + 112) = 0;
  *(void *)(result + 120) = 0;
  *(void *)(result + 104) = 0;
  *(_DWORD *)(result + 128) = 0;
  return result;
}

uint64_t sub_12EC13C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24A6668;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(_OWORD *)(result + 32) = 0u;
  *(_OWORD *)(result + 48) = 0u;
  return result;
}

double sub_12EC1D8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t v2 = off_24A66E8;
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = 0;
  *(void *)(v2 + 40) = 0;
  *(void *)(v2 + 48) = a1;
  *(void *)(v2 + 56) = 0;
  *(void *)(v2 + 64) = 0;
  *(void *)(v2 + 72) = &qword_2550250;
  *(void *)(v2 + 80) = &qword_2550250;
  double result = 0.0;
  *(_OWORD *)(v2 + 88) = 0u;
  *(_OWORD *)(v2 + 104) = 0u;
  *(_OWORD *)(v2 + 120) = 0u;
  *(_OWORD *)(v2 + 136) = 0u;
  *(_OWORD *)(v2 + 152) = 0u;
  *(_OWORD *)(v2 + 168) = 0u;
  *(_DWORD *)(v2 + 183) = 0;
  return result;
}

double sub_12EC2A8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = off_24A6768;
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = &qword_2550250;
  *(void *)(v2 + 32) = &qword_2550250;
  double result = 0.0;
  *(_OWORD *)(v2 + 40) = 0u;
  *(_OWORD *)(v2 + 56) = 0u;
  *(_OWORD *)(v2 + 72) = 0u;
  *(_DWORD *)(v2 + 88) = 0;
  return result;
}

uint64_t sub_12EC340(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24A67E8;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(_OWORD *)(result + 32) = 0u;
  *(_OWORD *)(result + 48) = 0u;
  *(_DWORD *)(result + 64) = 0;
  return result;
}

double sub_12EC3E0(uint64_t a1)
{
  if (!a1)
  {
    sub_1302000();
  }
  *(void *)uint64_t v3 = off_24A6868;
  *(void *)(v3 + 8) = a1;
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(void *)(v3 + 32) = a1;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(void *)(v3 + 56) = &qword_2550250;
  *(void *)(v3 + 64) = &qword_2550250;
  *(void *)(v3 + 72) = &qword_2550250;
  *(void *)(v3 + 80) = &qword_2550250;
  *(void *)(v3 + 88) = &qword_2550250;
  *(void *)(v3 + 96) = &qword_2550250;
  *(void *)(v3 + 104) = &qword_2550250;
  double result = 0.0;
  *(_OWORD *)(v3 + 112) = 0u;
  *(_OWORD *)(v3 + 128) = 0u;
  *(_OWORD *)(v3 + 144) = 0u;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(void *)(v3 + 192) = 0;
  return result;
}

double sub_12EC474(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t v2 = off_24A68E8;
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = 0;
  *(void *)(v2 + 40) = 0;
  *(void *)(v2 + 48) = a1;
  *(void *)(v2 + 56) = 0;
  *(void *)(v2 + 64) = 0;
  *(void *)(v2 + 72) = &qword_2550250;
  double result = 0.0;
  *(_OWORD *)(v2 + 80) = 0u;
  *(_OWORD *)(v2 + 96) = 0u;
  *(_OWORD *)(v2 + 112) = 0u;
  *(_OWORD *)(v2 + 128) = 0u;
  *(_OWORD *)(v2 + 144) = 0u;
  *(_OWORD *)(v2 + 160) = 0u;
  *(_OWORD *)(v2 + 172) = 0u;
  return result;
}

void *sub_12EC538(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *double result = off_24A6968;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = &qword_2550250;
  result[5] = 0;
  return result;
}

double sub_12EC5C0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = off_24A69E8;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  return result;
}

uint64_t sub_12EC640(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  if ((uint64_t (***)())a1 != &off_2531D48)
  {
    if (*(void *)(a1 + 24))
    {
      sub_15B2C44();
      operator delete();
    }
    if (*(void *)(a1 + 32))
    {
      sub_15B2C44();
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12EC710(uint64_t a1)
{
  sub_12EC640(a1);

  operator delete();
}

uint64_t sub_12EC748(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 3) != 0)
  {
    if (v2) {
      double result = sub_15B2C80(*(void *)(result + 24));
    }
    if ((v2 & 2) != 0) {
      double result = sub_15B2C80(*(void *)(v1 + 32));
    }
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_12EC7B8(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v18 = a2;
  if (sub_11947B8((uint64_t)a3, &v18, a3[11].i32[1])) {
    return v18;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v18 + 1;
    unsigned int v8 = *v18;
    if (*v18 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v18, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v18 + 2;
      }
    }
    uint64_t v18 = v7;
    if (v8 >> 3 == 2)
    {
      if (v8 == 18)
      {
        *(_DWORD *)(a1 + 16) |= 2u;
        unint64_t v15 = *(void **)(a1 + 32);
        if (!v15)
        {
          uint64_t v16 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v16 = (void *)*v16;
          }
          unint64_t v15 = sub_15C1B30((uint64_t)v16);
          *(void *)(a1 + 32) = v15;
LABEL_29:
          uint64_t v7 = v18;
        }
LABEL_30:
        uint64_t v14 = (char *)sub_125CF74(a3, (uint64_t)v15, (unsigned __int8 *)v7);
        goto LABEL_31;
      }
    }
    else if (v8 >> 3 == 1 && v8 == 10)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      unint64_t v15 = *(void **)(a1 + 24);
      if (!v15)
      {
        unsigned int v17 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          unsigned int v17 = (void *)*v17;
        }
        unint64_t v15 = sub_15C1B30((uint64_t)v17);
        *(void *)(a1 + 24) = v15;
        goto LABEL_29;
      }
      goto LABEL_30;
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      unint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = v18;
    }
    uint64_t v14 = (char *)sub_1885AC0(v8, v13, v7, a3);
LABEL_31:
    uint64_t v18 = v14;
    if (!v14) {
      return 0;
    }
    if (sub_11947B8((uint64_t)a3, &v18, a3[11].i32[1])) {
      return v18;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v18;
  }
  return 0;
}

char *sub_12EC96C(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*a3 <= __dst) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    char v4 = sub_15B2EA4(v7, v9, a3);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 32);
    char *v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 20);
    v4[1] = v11;
    if (v11 > 0x7F) {
      uint64_t v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      uint64_t v12 = v4 + 2;
    }
    char v4 = sub_15B2EA4(v10, v12, a3);
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    uint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    uint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_12ECAEC(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 3) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_8;
  }
  if (v2)
  {
    uint64_t v4 = sub_15B2F90(*(void *)(a1 + 24));
    uint64_t v3 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_7:
    uint64_t v5 = sub_15B2F90(*(void *)(a1 + 32));
    v3 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_8:
  uint64_t v6 = *(void *)(a1 + 8);
  if (v6)
  {
    unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v8 + 31) < 0) {
      uint64_t v9 = *(void *)(v8 + 16);
    }
    else {
      uint64_t v9 = *(unsigned __int8 *)(v8 + 31);
    }
    v3 += v9;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_12ECBC4(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 3) != 0)
  {
    if (v4)
    {
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::pointer data = (std::string *)result[1].__r_.__value_.__l.__data_;
      if (!data)
      {
        std::string::size_type size = v3->__r_.__value_.__l.__size_;
        uint64_t v7 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
        if (size) {
          uint64_t v7 = (void *)*v7;
        }
        std::string::pointer data = (std::string *)sub_15C1B30((uint64_t)v7);
        v3[1].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      }
      if (*(void *)(a2 + 24)) {
        unint64_t v8 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        unint64_t v8 = &off_253F2A0;
      }
      double result = sub_11EC100(data, (uint64_t)v8);
    }
    if ((v4 & 2) != 0)
    {
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
      uint64_t v9 = (std::string *)v3[1].__r_.__value_.__l.__size_;
      if (!v9)
      {
        std::string::size_type v10 = v3->__r_.__value_.__l.__size_;
        unsigned int v11 = (void *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
        if (v10) {
          unsigned int v11 = (void *)*v11;
        }
        uint64_t v9 = (std::string *)sub_15C1B30((uint64_t)v11);
        v3[1].__r_.__value_.__l.__size_ = (std::string::size_type)v9;
      }
      if (*(void *)(a2 + 32)) {
        uint64_t v12 = *(uint64_t (****)())(a2 + 32);
      }
      else {
        uint64_t v12 = &off_253F2A0;
      }
      double result = sub_11EC100(v9, (uint64_t)v12);
    }
  }
  uint64_t v13 = *(void *)(a2 + 8);
  if (v13)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v13 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_12ECCC0()
{
  return 1;
}

void *sub_12ECCC8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap.OutreachMessage.Notification");
}

uint64_t sub_12ECCD8(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_12;
    }
  }
  else if (v4)
  {
    goto LABEL_12;
  }
  if ((uint64_t (***)())a1 != &off_2531D70)
  {
    if (*(void *)(a1 + 24))
    {
      sub_15B2C44();
      operator delete();
    }
    if (*(void *)(a1 + 32))
    {
      sub_15B2C44();
      operator delete();
    }
    if (*(void *)(a1 + 40))
    {
      sub_15C1370();
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_12:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12ECDC8(uint64_t a1)
{
  sub_12ECCD8(a1);

  operator delete();
}

uint64_t sub_12ECE00(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 7) != 0)
  {
    if (v2)
    {
      double result = sub_15B2C80(*(void *)(result + 24));
      if ((v2 & 2) == 0)
      {
LABEL_4:
        if ((v2 & 4) == 0) {
          goto LABEL_6;
        }
        goto LABEL_5;
      }
    }
    else if ((v2 & 2) == 0)
    {
      goto LABEL_4;
    }
    double result = sub_15B2C80(*(void *)(v1 + 32));
    if ((v2 & 4) != 0) {
LABEL_5:
    }
      double result = sub_15C13AC(*(void *)(v1 + 40));
  }
LABEL_6:
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_12ECE88(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v21 = a2;
  if (sub_11947B8((uint64_t)a3, &v21, a3[11].i32[1])) {
    return v21;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v21 + 1;
    unsigned int v8 = *v21;
    if (*v21 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v21, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v21 + 2;
      }
    }
    uint64_t v21 = v7;
    unsigned int v11 = v8 >> 3;
    if (v8 >> 3 != 3) {
      break;
    }
    if (v8 != 26) {
      goto LABEL_14;
    }
    *(_DWORD *)(a1 + 16) |= 4u;
    uint64_t v16 = *(void **)(a1 + 40);
    if (!v16)
    {
      uint64_t v17 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        uint64_t v17 = (void *)*v17;
      }
      uint64_t v16 = sub_15C2720((uint64_t)v17);
      *(void *)(a1 + 40) = v16;
      uint64_t v7 = v21;
    }
    unint64_t v15 = (char *)sub_12ED094(a3, (uint64_t)v16, (unsigned __int8 *)v7);
LABEL_38:
    uint64_t v21 = v15;
    if (!v15) {
      return 0;
    }
    if (sub_11947B8((uint64_t)a3, &v21, a3[11].i32[1])) {
      return v21;
    }
  }
  if (v11 == 2)
  {
    if (v8 == 18)
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      uint64_t v18 = *(void **)(a1 + 32);
      if (!v18)
      {
        uint64_t v19 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          uint64_t v19 = (void *)*v19;
        }
        uint64_t v18 = sub_15C1B30((uint64_t)v19);
        *(void *)(a1 + 32) = v18;
LABEL_36:
        uint64_t v7 = v21;
      }
LABEL_37:
      unint64_t v15 = (char *)sub_125CF74(a3, (uint64_t)v18, (unsigned __int8 *)v7);
      goto LABEL_38;
    }
  }
  else if (v11 == 1 && v8 == 10)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v18 = *(void **)(a1 + 24);
    if (!v18)
    {
      unsigned int v20 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        unsigned int v20 = (void *)*v20;
      }
      uint64_t v18 = sub_15C1B30((uint64_t)v20);
      *(void *)(a1 + 24) = v18;
      goto LABEL_36;
    }
    goto LABEL_37;
  }
LABEL_14:
  if (v8) {
    BOOL v13 = (v8 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v6)
    {
      uint64_t v14 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = v21;
    }
    unint64_t v15 = (char *)sub_1885AC0(v8, v14, v7, a3);
    goto LABEL_38;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v21;
  }
  return 0;
}

uint64_t sub_12ED094(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_15C1440(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_12ED124(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*a3 <= __dst) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    char v4 = sub_15B2EA4(v7, v9, a3);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_23;
      }
      goto LABEL_17;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v10 = *(void *)(a1 + 32);
  char *v4 = 18;
  unsigned int v11 = *(_DWORD *)(v10 + 20);
  v4[1] = v11;
  if (v11 > 0x7F) {
    uint64_t v12 = sub_188A9CC(v11, v4 + 1);
  }
  else {
    uint64_t v12 = v4 + 2;
  }
  char v4 = sub_15B2EA4(v10, v12, a3);
  if ((v6 & 4) != 0)
  {
LABEL_17:
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v13 = *(void *)(a1 + 40);
    char *v4 = 26;
    unsigned int v14 = *(_DWORD *)(v13 + 20);
    v4[1] = v14;
    if (v14 > 0x7F) {
      unint64_t v15 = sub_188A9CC(v14, v4 + 1);
    }
    else {
      unint64_t v15 = v4 + 2;
    }
    char v4 = sub_15C1600(v13, v15, a3);
  }
LABEL_23:
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return v4;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    uint64_t v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    uint64_t v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(v4, v19, (int)v20);
    v4 += v21;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v19, v20, v4);
}

uint64_t sub_12ED314(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 7) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_10;
  }
  if (v2)
  {
    uint64_t v4 = sub_15B2F90(*(void *)(a1 + 24));
    uint64_t v3 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_7:
    uint64_t v5 = sub_15B2F90(*(void *)(a1 + 32));
    v3 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_8:
  if ((v2 & 4) != 0)
  {
    uint64_t v6 = sub_15C1730(*(void *)(a1 + 40));
    v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  uint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v9 + 31) < 0) {
      uint64_t v10 = *(void *)(v9 + 16);
    }
    else {
      uint64_t v10 = *(unsigned __int8 *)(v9 + 31);
    }
    v3 += v10;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_12ED41C(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 7) == 0) {
    goto LABEL_30;
  }
  if (v4)
  {
    LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
    std::string::pointer data = (std::string *)result[1].__r_.__value_.__l.__data_;
    if (!data)
    {
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v7 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v7 = (void *)*v7;
      }
      std::string::pointer data = (std::string *)sub_15C1B30((uint64_t)v7);
      v3[1].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
    }
    if (*(void *)(a2 + 24)) {
      unsigned int v8 = *(uint64_t (****)())(a2 + 24);
    }
    else {
      unsigned int v8 = &off_253F2A0;
    }
    uint64_t result = sub_11EC100(data, (uint64_t)v8);
    if ((v4 & 2) == 0)
    {
LABEL_4:
      if ((v4 & 4) == 0) {
        goto LABEL_30;
      }
      goto LABEL_22;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_4;
  }
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
  unint64_t v9 = (std::string *)v3[1].__r_.__value_.__l.__size_;
  if (!v9)
  {
    std::string::size_type v10 = v3->__r_.__value_.__l.__size_;
    unsigned int v11 = (void *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
    if (v10) {
      unsigned int v11 = (void *)*v11;
    }
    unint64_t v9 = (std::string *)sub_15C1B30((uint64_t)v11);
    v3[1].__r_.__value_.__l.__size_ = (std::string::size_type)v9;
  }
  if (*(void *)(a2 + 32)) {
    uint64_t v12 = *(uint64_t (****)())(a2 + 32);
  }
  else {
    uint64_t v12 = &off_253F2A0;
  }
  uint64_t result = sub_11EC100(v9, (uint64_t)v12);
  if ((v4 & 4) != 0)
  {
LABEL_22:
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
    uint64_t v13 = (std::string *)v3[1].__r_.__value_.__r.__words[2];
    if (!v13)
    {
      std::string::size_type v14 = v3->__r_.__value_.__l.__size_;
      unint64_t v15 = (void *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
      if (v14) {
        unint64_t v15 = (void *)*v15;
      }
      uint64_t v13 = (std::string *)sub_15C2720((uint64_t)v15);
      v3[1].__r_.__value_.__r.__words[2] = (std::string::size_type)v13;
    }
    if (*(void *)(a2 + 40)) {
      uint64_t v16 = *(uint64_t (****)())(a2 + 40);
    }
    else {
      uint64_t v16 = &off_253F7A0;
    }
    uint64_t result = sub_15C1814(v13, (uint64_t)v16);
  }
LABEL_30:
  uint64_t v17 = *(void *)(a2 + 8);
  if (v17)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v17 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_12ED570()
{
  return 1;
}

void *sub_12ED578@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap.OutreachMessage.Detailed");
}

uint64_t sub_12ED588(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_14;
    }
  }
  else if (v4)
  {
    goto LABEL_14;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if ((uint64_t (***)())a1 != &off_2531DA0)
  {
    uint64_t v6 = *(void *)(a1 + 40);
    if (v6)
    {
      sub_12EC640(v6);
      operator delete();
    }
    uint64_t v7 = *(void *)(a1 + 48);
    if (v7)
    {
      sub_12ECCD8(v7);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_14:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12ED690(uint64_t a1)
{
  sub_12ED588(a1);

  operator delete();
}

uint64_t sub_12ED6C8(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)BOOL v24 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v24, a3[11].i32[1])) {
    return *(void *)v24;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v7 = (unsigned __int8 *)(*(void *)v24 + 1);
    unsigned int v8 = **(unsigned char **)v24;
    if ((char)**(unsigned char **)v24 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if ((char)*v7 < 0)
      {
        uint64_t v7 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v24, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (unsigned __int8 *)(*(void *)v24 + 2);
      }
    }
    *(void *)BOOL v24 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 10) {
          goto LABEL_30;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v11 = *(void *)(a1 + 8);
        uint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
        if (v11) {
          uint64_t v12 = (uint64_t *)*v12;
        }
        uint64_t v13 = (void *)(a1 + 24);
        goto LABEL_29;
      case 2u:
        if (v8 != 18) {
          goto LABEL_30;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        std::string::size_type v14 = *(void **)(a1 + 40);
        if (!v14)
        {
          unint64_t v15 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            unint64_t v15 = (void *)*v15;
          }
          std::string::size_type v14 = sub_12EDDB0((uint64_t)v15);
          *(void *)(a1 + 40) = v14;
          uint64_t v7 = *(unsigned __int8 **)v24;
        }
        uint64_t v16 = sub_12ED940(a3, (uint64_t)v14, v7);
        goto LABEL_37;
      case 3u:
        if (v8 != 26) {
          goto LABEL_30;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v17 = *(void *)(a1 + 48);
        if (!v17)
        {
          unint64_t v18 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            unint64_t v18 = (void *)*v18;
          }
          sub_12EDE2C((uint64_t)v18);
          uint64_t v17 = v19;
          *(void *)(a1 + 48) = v19;
          uint64_t v7 = *(unsigned __int8 **)v24;
        }
        uint64_t v16 = sub_12ED9D0(a3, v17, v7);
        goto LABEL_37;
      case 4u:
        if (v8 != 34) {
          goto LABEL_30;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v20 = *(void *)(a1 + 8);
        uint64_t v12 = (uint64_t *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
        if (v20) {
          uint64_t v12 = (uint64_t *)*v12;
        }
        uint64_t v13 = (void *)(a1 + 32);
LABEL_29:
        uint64_t v21 = (std::string *)sub_1880F84(v13, v12);
        uint64_t v16 = (void *)sub_188C244(v21, *(char **)v24, (uint64_t)a3);
        goto LABEL_37;
      default:
LABEL_30:
        if (v8) {
          BOOL v22 = (v8 & 7) == 4;
        }
        else {
          BOOL v22 = 1;
        }
        if (!v22)
        {
          if (*v6)
          {
            unsigned int v23 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            unsigned int v23 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v7 = *(unsigned __int8 **)v24;
          }
          uint64_t v16 = sub_1885AC0(v8, v23, (char *)v7, a3);
LABEL_37:
          *(void *)BOOL v24 = v16;
          if (!v16) {
            return 0;
          }
          if (sub_11947B8((uint64_t)a3, (char **)v24, a3[11].i32[1])) {
            return *(void *)v24;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return *(void *)v24;
    }
  }
}

char *sub_12ED940(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12EC7B8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_12ED9D0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12ECE88(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_12EDA60(uint64_t a1, unsigned char *__dst, unint64_t *a3)
{
  int v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    int v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 4) == 0)
    {
LABEL_3:
      if ((v6 & 8) == 0) {
        goto LABEL_4;
      }
      goto LABEL_15;
    }
  }
  else if ((v6 & 4) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v9 = *(void *)(a1 + 40);
  unsigned char *v4 = 18;
  unsigned int v10 = *(_DWORD *)(v9 + 20);
  v4[1] = v10;
  if (v10 > 0x7F) {
    uint64_t v11 = sub_188A9CC(v10, v4 + 1);
  }
  else {
    uint64_t v11 = v4 + 2;
  }
  int v4 = sub_12EC96C(v9, (unint64_t)v11, a3);
  if ((v6 & 8) == 0)
  {
LABEL_4:
    if ((v6 & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_15:
  if (*a3 <= (unint64_t)v4) {
    int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v12 = *(void *)(a1 + 48);
  unsigned char *v4 = 26;
  unsigned int v13 = *(_DWORD *)(v12 + 20);
  v4[1] = v13;
  if (v13 > 0x7F) {
    std::string::size_type v14 = sub_188A9CC(v13, v4 + 1);
  }
  else {
    std::string::size_type v14 = v4 + 2;
  }
  int v4 = sub_12ED124(v12, (unint64_t)v14, a3);
  if ((v6 & 2) != 0) {
LABEL_5:
  }
    int v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
LABEL_6:
  uint64_t v7 = *(void *)(a1 + 8);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v7 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    uint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    uint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_12EDC30(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0xF) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_15;
  }
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
  uint64_t v6 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    uint64_t v6 = v5;
  }
  uint64_t v3 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 2) != 0)
  {
LABEL_9:
    unint64_t v7 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v8 = *(unsigned __int8 *)(v7 + 23);
    uint64_t v9 = *(void *)(v7 + 8);
    if ((v8 & 0x80u) == 0) {
      uint64_t v9 = v8;
    }
    v3 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v2 & 4) == 0)
  {
    if ((v2 & 8) == 0) {
      goto LABEL_15;
    }
    goto LABEL_14;
  }
  uint64_t v13 = sub_12ECAEC(*(void *)(a1 + 40));
  v3 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 8) != 0)
  {
LABEL_14:
    uint64_t v10 = sub_12ED314(*(void *)(a1 + 48));
    v3 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_15:
  uint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    unint64_t v14 = v11 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v14 + 31) < 0) {
      uint64_t v15 = *(void *)(v14 + 16);
    }
    else {
      uint64_t v15 = *(unsigned __int8 *)(v14 + 31);
    }
    v3 += v15;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

uint64_t sub_12EDD98()
{
  return 1;
}

void *sub_12EDDA0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap.OutreachMessage");
}

void *sub_12EDDB0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24A6A68;
  result[3] = 0;
  result[4] = 0;
  result[2] = 0;
  return result;
}

double sub_12EDE2C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = off_24A6AE8;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  return result;
}

void *sub_12EDEA8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *double result = off_24A6B68;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = &qword_2550250;
  result[5] = 0;
  result[6] = 0;
  return result;
}

uint64_t sub_12EDF30(unsigned int a1)
{
  BOOL v1 = a1 - 201 < 6 || a1 < 4;
  return a1 - 101 < 0xA || v1;
}

BOOL sub_12EDF58(unsigned int a1)
{
  return a1 < 3;
}

BOOL sub_12EDF64(unsigned int a1)
{
  return a1 < 5;
}

BOOL sub_12EDF70(unsigned int a1)
{
  return a1 < 0xE || a1 == 128;
}

void *sub_12EDF88(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12EDFFC(void *a1)
{
  sub_12EDF88(a1);

  operator delete();
}

char *sub_12EE034(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v25 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v25 + 1;
    unsigned int v9 = *v25;
    if (*v25 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v25, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v25 + 2;
      }
    }
    uint64_t v25 = v8;
    if (v9 >> 3 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_13;
    }
    v5 |= 2u;
    uint64_t v16 = v8 + 1;
    LODWORD(v15) = *v8;
    if ((v15 & 0x80) == 0) {
      goto LABEL_25;
    }
    int v17 = *v16;
    uint64_t v15 = v15 + (v17 << 7) - 128;
    if ((v17 & 0x80000000) == 0)
    {
      uint64_t v16 = v8 + 2;
LABEL_25:
      uint64_t v25 = v16;
      *(_DWORD *)(a1 + 32) = v15;
      goto LABEL_30;
    }
    uint64_t v21 = (char *)sub_188C138((uint64_t)v8, v15);
    uint64_t v25 = v21;
    *(_DWORD *)(a1 + 32) = v22;
    if (!v21) {
      goto LABEL_39;
    }
LABEL_30:
    if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 >> 3 == 1 && v9 == 8)
  {
    v5 |= 1u;
    uint64_t v18 = v8 + 1;
    uint64_t v19 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_29;
    }
    int v20 = *v18;
    uint64_t v19 = v19 + (v20 << 7) - 128;
    if ((v20 & 0x80000000) == 0)
    {
      uint64_t v18 = v8 + 2;
LABEL_29:
      uint64_t v25 = v18;
      *(void *)(a1 + 24) = v19;
      goto LABEL_30;
    }
    unsigned int v23 = (char *)sub_188C138((uint64_t)v8, v19);
    uint64_t v25 = v23;
    *(void *)(a1 + 24) = v24;
    if (!v23) {
      goto LABEL_39;
    }
    goto LABEL_30;
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      unint64_t v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = v25;
    }
    uint64_t v25 = (char *)sub_1885AC0(v9, v14, v8, a3);
    if (!v25) {
      goto LABEL_39;
    }
    goto LABEL_30;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_39:
  uint64_t v25 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v25;
}

unsigned char *sub_12EE220(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  unint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      unint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(void *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 32);
    unsigned char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    uint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    uint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

unint64_t sub_12EE3C4(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    unint64_t v2 = 0;
    goto LABEL_11;
  }
  if (v1)
  {
    unint64_t v2 = ((9 * (__clz(*(void *)(a1 + 24) | 1) ^ 0x3F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_11;
    }
  }
  else
  {
    unint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_11;
    }
  }
  int v3 = *(_DWORD *)(a1 + 32);
  if (v3 < 0) {
    uint64_t v4 = 11;
  }
  else {
    uint64_t v4 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v2 += v4;
LABEL_11:
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5)
  {
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v7 + 31) < 0) {
      uint64_t v8 = *(void *)(v7 + 16);
    }
    else {
      uint64_t v8 = *(unsigned __int8 *)(v7 + 31);
    }
    v2 += v8;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_12EE474()
{
  return 1;
}

void *sub_12EE47C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap.Duration");
}

void *sub_12EE48C(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12EE500(void *a1)
{
  sub_12EE48C(a1);

  operator delete();
}

char *sub_12EE538(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v25 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v25 + 1;
    unsigned int v9 = *v25;
    if (*v25 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v25, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v25 + 2;
      }
    }
    uint64_t v25 = v8;
    if (v9 >> 3 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_13;
    }
    v5 |= 2u;
    uint64_t v16 = v8 + 1;
    LODWORD(v15) = *v8;
    if ((v15 & 0x80) == 0) {
      goto LABEL_25;
    }
    int v17 = *v16;
    uint64_t v15 = v15 + (v17 << 7) - 128;
    if ((v17 & 0x80000000) == 0)
    {
      uint64_t v16 = v8 + 2;
LABEL_25:
      uint64_t v25 = v16;
      *(_DWORD *)(a1 + 32) = v15;
      goto LABEL_30;
    }
    uint64_t v21 = (char *)sub_188C138((uint64_t)v8, v15);
    uint64_t v25 = v21;
    *(_DWORD *)(a1 + 32) = v22;
    if (!v21) {
      goto LABEL_39;
    }
LABEL_30:
    if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 >> 3 == 1 && v9 == 8)
  {
    v5 |= 1u;
    uint64_t v18 = v8 + 1;
    uint64_t v19 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_29;
    }
    int v20 = *v18;
    uint64_t v19 = v19 + (v20 << 7) - 128;
    if ((v20 & 0x80000000) == 0)
    {
      uint64_t v18 = v8 + 2;
LABEL_29:
      uint64_t v25 = v18;
      *(void *)(a1 + 24) = v19;
      goto LABEL_30;
    }
    unsigned int v23 = (char *)sub_188C138((uint64_t)v8, v19);
    uint64_t v25 = v23;
    *(void *)(a1 + 24) = v24;
    if (!v23) {
      goto LABEL_39;
    }
    goto LABEL_30;
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      unint64_t v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = v25;
    }
    uint64_t v25 = (char *)sub_1885AC0(v9, v14, v8, a3);
    if (!v25) {
      goto LABEL_39;
    }
    goto LABEL_30;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_39:
  uint64_t v25 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v25;
}

unsigned char *sub_12EE724(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(void *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 32);
    unsigned char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    uint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    uint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

unint64_t sub_12EE8C8(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    unint64_t v2 = 0;
    goto LABEL_11;
  }
  if (v1)
  {
    unint64_t v2 = ((9 * (__clz(*(void *)(a1 + 24) | 1) ^ 0x3F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_11;
    }
  }
  else
  {
    unint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_11;
    }
  }
  int v3 = *(_DWORD *)(a1 + 32);
  if (v3 < 0) {
    uint64_t v4 = 11;
  }
  else {
    uint64_t v4 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v2 += v4;
LABEL_11:
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5)
  {
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v7 + 31) < 0) {
      uint64_t v8 = *(void *)(v7 + 16);
    }
    else {
      uint64_t v8 = *(unsigned __int8 *)(v7 + 31);
    }
    v2 += v8;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_12EE978()
{
  return 1;
}

void *sub_12EE980@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap.Timestamp");
}

void *sub_12EE990(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12EEA04(void *a1)
{
  sub_12EE990(a1);

  operator delete();
}

char *sub_12EEA3C(uint64_t a1, char *a2, int32x2_t *a3)
{
  unsigned int v26 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v26 + 1;
    unsigned int v9 = *v26;
    if (*v26 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v26, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v26 + 2;
      }
    }
    unsigned int v26 = v8;
    if (v9 >> 3 == 2) {
      break;
    }
    if (v9 >> 3 != 1 || v9 != 8) {
      goto LABEL_13;
    }
    uint64_t v19 = v8 + 1;
    uint64_t v20 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_31;
    }
    int v21 = *v19;
    uint64_t v20 = v20 + (v21 << 7) - 128;
    if ((v21 & 0x80000000) == 0)
    {
      uint64_t v19 = v8 + 2;
LABEL_31:
      unsigned int v26 = v19;
      *(void *)(a1 + 24) = v20;
      int v5 = 1;
      goto LABEL_32;
    }
    unsigned int v23 = (char *)sub_188C138((uint64_t)v8, v20);
    unsigned int v26 = v23;
    *(void *)(a1 + 24) = v24;
    int v5 = 1;
    if (!v23) {
      goto LABEL_45;
    }
LABEL_32:
    if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 == 16)
  {
    unint64_t v15 = v8 + 1;
    unint64_t v16 = *v8;
    if (*v8 < 0)
    {
      int v17 = *v15;
      int v18 = v16 + (v17 << 7);
      unint64_t v16 = (v18 - 128);
      if (v17 < 0)
      {
        unsigned int v26 = (char *)sub_188C138((uint64_t)v8, (v18 - 128));
        if (!v26) {
          goto LABEL_45;
        }
        unint64_t v16 = v22;
        goto LABEL_26;
      }
      unint64_t v15 = v8 + 2;
    }
    unsigned int v26 = v15;
LABEL_26:
    if (sub_12EDF70(v16))
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      *(_DWORD *)(a1 + 32) = v16;
    }
    else
    {
      if (*v7) {
        uint64_t v25 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        uint64_t v25 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      sub_188C020(2, v16, v25);
    }
    goto LABEL_32;
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      unint64_t v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = v26;
    }
    unsigned int v26 = (char *)sub_1885AC0(v9, v14, v8, a3);
    if (!v26) {
      goto LABEL_45;
    }
    goto LABEL_32;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_45:
  unsigned int v26 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v26;
}

unsigned char *sub_12EEC78(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(void *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 32);
    unsigned char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    unint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    unint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

unint64_t sub_12EEE1C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    unint64_t v2 = 0;
    goto LABEL_11;
  }
  if (v1)
  {
    unint64_t v2 = ((9 * (__clz(*(void *)(a1 + 24) | 1) ^ 0x3F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_11;
    }
  }
  else
  {
    unint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_11;
    }
  }
  int v3 = *(_DWORD *)(a1 + 32);
  if (v3 < 0) {
    uint64_t v4 = 11;
  }
  else {
    uint64_t v4 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v2 += v4;
LABEL_11:
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5)
  {
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v7 + 31) < 0) {
      uint64_t v8 = *(void *)(v7 + 16);
    }
    else {
      uint64_t v8 = *(unsigned __int8 *)(v7 + 31);
    }
    v2 += v8;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_12EEECC()
{
  return 1;
}

void *sub_12EEED4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap.Muid");
}

uint64_t sub_12EEEE4(uint64_t a1)
{
  int v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  if ((uint64_t (***)())a1 != &off_2531E50 && *(void *)(a1 + 24))
  {
    sub_15B0994();
    operator delete();
  }
  if (*(void *)(a1 + 8)) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12EEF9C(uint64_t a1)
{
  sub_12EEEE4(a1);

  operator delete();
}

unsigned char *sub_12EEFD4(unsigned char *result)
{
  int v1 = result;
  int v2 = *((_DWORD *)result + 4);
  if (v2) {
    double result = sub_15B09D0(*((void *)result + 3));
  }
  if ((v2 & 0x3E) != 0)
  {
    *((_OWORD *)v1 + 2) = 0u;
    *((_OWORD *)v1 + 3) = 0u;
  }
  char v4 = v1[8];
  int v3 = v1 + 8;
  *((_DWORD *)v3 + 2) = 0;
  if (v4)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_12EF040(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v43 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v43, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = v43 + 1;
    unsigned int v9 = *v43;
    if (*v43 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v43, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v43 + 2;
      }
    }
    uint64_t v43 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_42;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 24);
        if (!v12)
        {
          uint64_t v13 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v13 = (void *)*v13;
          }
          uint64_t v12 = sub_15C1918((uint64_t)v13);
          *(void *)(a1 + 24) = v12;
          uint64_t v8 = v43;
        }
        unint64_t v14 = sub_1198F14(a3, v12, (unsigned __int8 *)v8);
        goto LABEL_49;
      case 2u:
        if (v9 != 16) {
          goto LABEL_42;
        }
        v5 |= 2u;
        unint64_t v15 = v8 + 1;
        uint64_t v16 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_19;
        }
        int v17 = *v15;
        uint64_t v16 = v16 + (v17 << 7) - 128;
        if (v17 < 0)
        {
          uint64_t v33 = (char *)sub_188C138((uint64_t)v8, v16);
          uint64_t v43 = v33;
          *(void *)(a1 + 32) = v34;
          if (!v33) {
            goto LABEL_69;
          }
        }
        else
        {
          unint64_t v15 = v8 + 2;
LABEL_19:
          uint64_t v43 = v15;
          *(void *)(a1 + 32) = v16;
        }
        goto LABEL_50;
      case 3u:
        if (v9 != 24) {
          goto LABEL_42;
        }
        v5 |= 4u;
        uint64_t v18 = v8 + 1;
        uint64_t v19 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_24;
        }
        int v20 = *v18;
        uint64_t v19 = v19 + (v20 << 7) - 128;
        if (v20 < 0)
        {
          uint64_t v35 = (char *)sub_188C138((uint64_t)v8, v19);
          uint64_t v43 = v35;
          *(void *)(a1 + 40) = v36;
          if (!v35) {
            goto LABEL_69;
          }
        }
        else
        {
          uint64_t v18 = v8 + 2;
LABEL_24:
          uint64_t v43 = v18;
          *(void *)(a1 + 40) = v19;
        }
        goto LABEL_50;
      case 4u:
        if (v9 != 32) {
          goto LABEL_42;
        }
        v5 |= 8u;
        int v21 = v8 + 1;
        uint64_t v22 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_29;
        }
        int v23 = *v21;
        uint64_t v22 = v22 + (v23 << 7) - 128;
        if (v23 < 0)
        {
          uint64_t v37 = (char *)sub_188C138((uint64_t)v8, v22);
          uint64_t v43 = v37;
          *(void *)(a1 + 48) = v38;
          if (!v37) {
            goto LABEL_69;
          }
        }
        else
        {
          int v21 = v8 + 2;
LABEL_29:
          uint64_t v43 = v21;
          *(void *)(a1 + 48) = v22;
        }
        goto LABEL_50;
      case 5u:
        if (v9 != 40) {
          goto LABEL_42;
        }
        v5 |= 0x10u;
        uint64_t v24 = v8 + 1;
        uint64_t v25 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_34;
        }
        int v26 = *v24;
        uint64_t v25 = v25 + (v26 << 7) - 128;
        if (v26 < 0)
        {
          uint64_t v39 = (char *)sub_188C138((uint64_t)v8, v25);
          uint64_t v43 = v39;
          *(unsigned char *)(a1 + 56) = v40 != 0;
          if (!v39) {
            goto LABEL_69;
          }
        }
        else
        {
          uint64_t v24 = v8 + 2;
LABEL_34:
          uint64_t v43 = v24;
          *(unsigned char *)(a1 + 56) = v25 != 0;
        }
        goto LABEL_50;
      case 6u:
        if (v9 != 48) {
          goto LABEL_42;
        }
        unint64_t v27 = v8 + 1;
        unint64_t v28 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_39;
        }
        int v29 = *v27;
        int v30 = v28 + (v29 << 7);
        unint64_t v28 = (v30 - 128);
        if (v29 < 0)
        {
          uint64_t v43 = (char *)sub_188C138((uint64_t)v8, (v30 - 128));
          if (!v43) {
            goto LABEL_69;
          }
          unint64_t v28 = v41;
        }
        else
        {
          unint64_t v27 = v8 + 2;
LABEL_39:
          uint64_t v43 = v27;
        }
        if (v28 > 3)
        {
          if (*v7) {
            unint64_t v42 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            unint64_t v42 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(6, v28, v42);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 0x20u;
          *(_DWORD *)(a1 + 60) = v28;
        }
        goto LABEL_50;
      default:
LABEL_42:
        if (v9) {
          BOOL v31 = (v9 & 7) == 4;
        }
        else {
          BOOL v31 = 1;
        }
        if (!v31)
        {
          if (*v7)
          {
            uint64_t v32 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v32 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = v43;
          }
          unint64_t v14 = (char *)sub_1885AC0(v9, v32, v8, a3);
LABEL_49:
          uint64_t v43 = v14;
          if (!v14) {
            goto LABEL_69;
          }
LABEL_50:
          if (sub_11947B8((uint64_t)a3, &v43, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_69:
        }
          uint64_t v43 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v43;
    }
  }
}

char *sub_12EF420(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  char v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 44);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    char v4 = sub_15B0C0C(v7, v9, a3);
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(void *)(a1 + 32);
    char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v13 = *(void *)(a1 + 40);
    char *v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unint64_t v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v16 = *(void *)(a1 + 48);
    char *v4 = 32;
    v4[1] = v16;
    if (v16 > 0x7F)
    {
      v4[1] = v16 | 0x80;
      unint64_t v17 = v16 >> 7;
      v4[2] = v16 >> 7;
      v4 += 3;
      if (v16 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v18 = v17 >> 14;
          v17 >>= 7;
          *v4++ = v17;
        }
        while (v18);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v19 = *(unsigned char *)(a1 + 56);
    char *v4 = 40;
    v4[1] = v19;
    v4 += 2;
  }
  if ((v6 & 0x20) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v20 = *(int *)(a1 + 60);
    char *v4 = 48;
    v4[1] = v20;
    if (v20 > 0x7F)
    {
      v4[1] = v20 | 0x80;
      unint64_t v21 = v20 >> 7;
      v4[2] = v20 >> 7;
      v4 += 3;
      if (v20 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v22 = v21 >> 14;
          v21 >>= 7;
          *v4++ = v21;
        }
        while (v22);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v23 = *(void *)(a1 + 8);
  if ((v23 & 1) == 0) {
    return v4;
  }
  unint64_t v25 = v23 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v25 + 31) < 0)
  {
    int v26 = *(void **)(v25 + 8);
    uint64_t v27 = *(void *)(v25 + 16);
  }
  else
  {
    int v26 = (void *)(v25 + 8);
    LODWORD(v27) = *(unsigned __int8 *)(v25 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v27)
  {
    uint64_t v28 = (int)v27;
    memcpy(v4, v26, (int)v27);
    v4 += v28;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v26, v27, v4);
}

uint64_t sub_12EF764(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0x3F) == 0)
  {
    uint64_t result = 0;
    goto LABEL_19;
  }
  if (v2)
  {
    uint64_t v5 = sub_15B0D90(*(void *)(a1 + 24));
    uint64_t v3 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0) {
LABEL_7:
  }
    v3 += ((9 * (__clz(*(void *)(a1 + 32) | 1) ^ 0x3F) + 73) >> 6) + 1;
LABEL_8:
  if ((v2 & 4) == 0)
  {
    if ((v2 & 8) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  v3 += ((9 * (__clz(*(void *)(a1 + 40) | 1) ^ 0x3F) + 73) >> 6) + 1;
  if ((v2 & 8) != 0) {
LABEL_10:
  }
    v3 += ((9 * (__clz(*(void *)(a1 + 48) | 1) ^ 0x3F) + 73) >> 6) + 1;
LABEL_11:
  if ((v2 & 0x10) != 0) {
    uint64_t result = v3 + 2;
  }
  else {
    uint64_t result = v3;
  }
  if ((v2 & 0x20) != 0)
  {
    int v6 = *(_DWORD *)(a1 + 60);
    uint64_t v7 = ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if (v6 >= 0) {
      uint64_t v8 = v7;
    }
    else {
      uint64_t v8 = 11;
    }
    result += v8;
  }
LABEL_19:
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    result += v11;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

void sub_12EF8B4(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0x3F) != 0)
  {
    if (v4)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v6 = *(void *)(a1 + 24);
      if (!v6)
      {
        uint64_t v7 = *(void *)(a1 + 8);
        uint64_t v8 = (void *)(v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (v7) {
          uint64_t v8 = (void *)*v8;
        }
        uint64_t v6 = sub_15C1918((uint64_t)v8);
        *(void *)(a1 + 24) = v6;
      }
      if (*(void *)(a2 + 24)) {
        uint64_t v9 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        uint64_t v9 = &off_253F1A0;
      }
      sub_15B0E24(v6, (uint64_t)v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_23;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_24;
    }
LABEL_23:
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0) {
        goto LABEL_7;
      }
      goto LABEL_25;
    }
LABEL_24:
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    if ((v4 & 0x10) == 0)
    {
LABEL_7:
      if ((v4 & 0x20) == 0)
      {
LABEL_9:
        *(_DWORD *)(a1 + 16) |= v4;
        goto LABEL_10;
      }
LABEL_8:
      *(_DWORD *)(a1 + 60) = *(_DWORD *)(a2 + 60);
      goto LABEL_9;
    }
LABEL_25:
    *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
    if ((v4 & 0x20) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
LABEL_10:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_12EF9CC(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 1;
  }
  uint64_t result = sub_15B0F18(*(void *)(a1 + 24));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_12EF9F8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap.GeoZilchPoint");
}

void *sub_12EFA08(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1302078(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12EFA88(void *a1)
{
  sub_12EFA08(a1);

  operator delete();
}

char *sub_12EFAC0(uint64_t a1, char *a2, int32x2_t *a3)
{
  char v19 = a2;
  if ((sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v5 = (void *)(a1 + 8);
    while (1)
    {
      uint64_t v6 = v19 + 1;
      unsigned int v7 = *v19;
      if (*v19 < 0)
      {
        unsigned int v8 = v7 + (*v6 << 7);
        unsigned int v7 = v8 - 128;
        if (*v6 < 0)
        {
          uint64_t v6 = (char *)sub_188C180((uint64_t)v19, v8 - 128);
          unsigned int v7 = v9;
        }
        else
        {
          uint64_t v6 = v19 + 2;
        }
      }
      char v19 = v6;
      if (v7 == 10)
      {
        unint64_t v12 = v6 - 1;
        while (1)
        {
          unint64_t v13 = (unsigned __int8 *)(v12 + 1);
          char v19 = v12 + 1;
          unint64_t v14 = *(_DWORD **)(a1 + 32);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 24), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 24) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            sub_12F8264(*(void *)(a1 + 16));
            uint64_t v16 = sub_188CDC8(a1 + 16, v17);
            unint64_t v13 = (unsigned __int8 *)v19;
          }
          unint64_t v12 = sub_12EFC60(a3, v16, v13);
          char v19 = v12;
          if (!v12) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_24;
          }
        }
      }
      if (!v7 || (v7 & 7) == 4) {
        break;
      }
      if (*v5)
      {
        uint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        uint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        uint64_t v6 = v19;
      }
      char v19 = (char *)sub_1885AC0(v7, v11, v6, a3);
      if (!v19) {
        return 0;
      }
LABEL_24:
      if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
        return v19;
      }
    }
    if (v6)
    {
      a3[10].i32[0] = v7 - 1;
      return v19;
    }
    return 0;
  }
  return v19;
}

char *sub_12EFC60(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12EF040(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_12EFCF0(uint64_t a1, char *__dst, _DWORD *a3)
{
  int v6 = *(_DWORD *)(a1 + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unint64_t v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unint64_t v10 = __dst + 2;
      }
      __dst = sub_12EF420(v8, (unint64_t)v10, a3);
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return __dst;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    unint64_t v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    unint64_t v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(__dst, v14, (int)v15);
    __dst += v16;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, __dst);
}

uint64_t sub_12EFE34(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    int v4 = (uint64_t *)(v3 + 8);
  }
  else {
    int v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_12EF764(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 40) = v2;
  return v2;
}

void *sub_12EFEE4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap.GeoZilchPointData");
}

uint64_t sub_12EFEF4(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_14;
    }
  }
  else if (v4)
  {
    goto LABEL_14;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(uint64_t **)(a1 + 40) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 40));
  }
  if ((uint64_t (***)())a1 != &off_2531EC0)
  {
    uint64_t v6 = *(void **)(a1 + 48);
    if (v6)
    {
      sub_12EE48C(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_14:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12EFFF0(uint64_t a1)
{
  sub_12EFEF4(a1);

  operator delete();
}

uint64_t sub_12F0028(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 0xF) == 0) {
    goto LABEL_7;
  }
  if (v2)
  {
    unint64_t v5 = *(void *)(result + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v5 + 23) < 0)
    {
      **(unsigned char **)unint64_t v5 = 0;
      *(void *)(v5 + 8) = 0;
      if ((v2 & 2) != 0) {
        goto LABEL_17;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v5 = 0;
      *(unsigned char *)(v5 + 23) = 0;
      if ((v2 & 2) != 0) {
        goto LABEL_17;
      }
    }
LABEL_4:
    if ((v2 & 4) == 0) {
      goto LABEL_5;
    }
    goto LABEL_21;
  }
  if ((v2 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_17:
  unint64_t v6 = *(void *)(result + 32) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v6 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v6 = 0;
    *(unsigned char *)(v6 + 23) = 0;
    if ((v2 & 4) != 0) {
      goto LABEL_21;
    }
LABEL_5:
    if ((v2 & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  **(unsigned char **)unint64_t v6 = 0;
  *(void *)(v6 + 8) = 0;
  if ((v2 & 4) == 0) {
    goto LABEL_5;
  }
LABEL_21:
  unint64_t v7 = *(void *)(result + 40) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v7 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v7 = 0;
    *(unsigned char *)(v7 + 23) = 0;
    if ((v2 & 8) == 0) {
      goto LABEL_7;
    }
LABEL_6:
    uint64_t result = sub_12D3A88(*(void *)(result + 48));
    goto LABEL_7;
  }
  **(unsigned char **)unint64_t v7 = 0;
  *(void *)(v7 + 8) = 0;
  if ((v2 & 8) != 0) {
    goto LABEL_6;
  }
LABEL_7:
  if ((v2 & 0x30) != 0) {
    *(void *)(v1 + 56) = 0;
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_12F0138(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v33 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v33, a3[11].i32[1])) {
    return *(void *)v33;
  }
  unint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    unint64_t v7 = (unsigned __int8 *)(*(void *)v33 + 1);
    unsigned int v8 = **(unsigned char **)v33;
    if ((char)**(unsigned char **)v33 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if ((char)*v7 < 0)
      {
        unint64_t v7 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v33, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        unint64_t v7 = (unsigned __int8 *)(*(void *)v33 + 2);
      }
    }
    *(void *)uint64_t v33 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 8) {
          goto LABEL_42;
        }
        uint64_t v11 = (char *)(v7 + 1);
        unint64_t v12 = *v7;
        if (((char)*v7 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v13 = *v11;
        int v14 = v12 + (v13 << 7);
        unint64_t v12 = (v14 - 128);
        if (v13 < 0)
        {
          *(void *)uint64_t v33 = sub_188C138((uint64_t)v7, (v14 - 128));
          if (!*(void *)v33) {
            return 0;
          }
          unint64_t v12 = v29;
        }
        else
        {
          uint64_t v11 = (char *)(v7 + 2);
LABEL_13:
          *(void *)uint64_t v33 = v11;
        }
        if (v12 <= 0x17)
        {
          *(_DWORD *)(a1 + 16) |= 0x10u;
          *(_DWORD *)(a1 + 56) = v12;
          goto LABEL_50;
        }
        if (*v6) {
          BOOL v31 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          BOOL v31 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v32 = 1;
        goto LABEL_62;
      case 2u:
        if (v8 != 18) {
          goto LABEL_42;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v15 = *(void *)(a1 + 8);
        uint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          uint64_t v16 = (uint64_t *)*v16;
        }
        uint64_t v17 = (void *)(a1 + 24);
        goto LABEL_41;
      case 3u:
        if (v8 != 26) {
          goto LABEL_42;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v18 = *(void *)(a1 + 8);
        uint64_t v16 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
        if (v18) {
          uint64_t v16 = (uint64_t *)*v16;
        }
        uint64_t v17 = (void *)(a1 + 32);
        goto LABEL_41;
      case 4u:
        if (v8 != 32) {
          goto LABEL_42;
        }
        char v19 = (char *)(v7 + 1);
        unint64_t v12 = *v7;
        if (((char)*v7 & 0x80000000) == 0) {
          goto LABEL_28;
        }
        int v20 = *v19;
        int v21 = v12 + (v20 << 7);
        unint64_t v12 = (v21 - 128);
        if (v20 < 0)
        {
          *(void *)uint64_t v33 = sub_188C138((uint64_t)v7, (v21 - 128));
          if (!*(void *)v33) {
            return 0;
          }
          unint64_t v12 = v30;
        }
        else
        {
          char v19 = (char *)(v7 + 2);
LABEL_28:
          *(void *)uint64_t v33 = v19;
        }
        if (sub_12D58BC(v12))
        {
          *(_DWORD *)(a1 + 16) |= 0x20u;
          *(_DWORD *)(a1 + 60) = v12;
        }
        else
        {
          if (*v6) {
            BOOL v31 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            BOOL v31 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          int v32 = 4;
LABEL_62:
          sub_188C020(v32, v12, v31);
        }
        goto LABEL_50;
      case 5u:
        if (v8 != 42) {
          goto LABEL_42;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v22 = *(void *)(a1 + 48);
        if (!v22)
        {
          uint64_t v23 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v23 = (void *)*v23;
          }
          uint64_t v22 = sub_12F816C((uint64_t)v23);
          *(void *)(a1 + 48) = v22;
          unint64_t v7 = *(unsigned __int8 **)v33;
        }
        uint64_t v24 = sub_12D3F70(a3, v22, v7);
        goto LABEL_49;
      case 6u:
        if (v8 != 50) {
          goto LABEL_42;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v25 = *(void *)(a1 + 8);
        uint64_t v16 = (uint64_t *)(v25 & 0xFFFFFFFFFFFFFFFCLL);
        if (v25) {
          uint64_t v16 = (uint64_t *)*v16;
        }
        uint64_t v17 = (void *)(a1 + 40);
LABEL_41:
        int v26 = (std::string *)sub_1880F84(v17, v16);
        uint64_t v24 = (void *)sub_188C244(v26, *(char **)v33, (uint64_t)a3);
        goto LABEL_49;
      default:
LABEL_42:
        if (v8) {
          BOOL v27 = (v8 & 7) == 4;
        }
        else {
          BOOL v27 = 1;
        }
        if (!v27)
        {
          if (*v6)
          {
            uint64_t v28 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v28 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unint64_t v7 = *(unsigned __int8 **)v33;
          }
          uint64_t v24 = sub_1885AC0(v8, v28, (char *)v7, a3);
LABEL_49:
          *(void *)uint64_t v33 = v24;
          if (!v24) {
            return 0;
          }
LABEL_50:
          if (sub_11947B8((uint64_t)a3, (char **)v33, a3[11].i32[1])) {
            return *(void *)v33;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return *(void *)v33;
    }
  }
}

unsigned char *sub_12F04E4(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 56);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    char v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
    if ((v6 & 2) == 0)
    {
LABEL_10:
      if ((v6 & 0x20) == 0) {
        goto LABEL_20;
      }
      goto LABEL_14;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_10;
  }
  char v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x20) == 0) {
    goto LABEL_20;
  }
LABEL_14:
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  unint64_t v10 = *(int *)(a1 + 60);
  unsigned char *v4 = 32;
  v4[1] = v10;
  if (v10 > 0x7F)
  {
    v4[1] = v10 | 0x80;
    unint64_t v11 = v10 >> 7;
    v4[2] = v10 >> 7;
    v4 += 3;
    if (v10 >= 0x4000)
    {
      do
      {
        *(v4 - 1) |= 0x80u;
        unint64_t v12 = v11 >> 14;
        v11 >>= 7;
        *v4++ = v11;
      }
      while (v12);
    }
  }
  else
  {
    v4 += 2;
  }
LABEL_20:
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v13 = *(void *)(a1 + 48);
    unsigned char *v4 = 42;
    unsigned int v14 = *(_DWORD *)(v13 + 20);
    v4[1] = v14;
    if (v14 > 0x7F) {
      uint64_t v15 = sub_188A9CC(v14, v4 + 1);
    }
    else {
      uint64_t v15 = v4 + 2;
    }
    char v4 = sub_12EE724(v13, (unint64_t)v15, a3);
  }
  if ((v6 & 4) != 0) {
    char v4 = sub_117A0AC(a3, 6, (const void **)(*(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return v4;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    char v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    char v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(v4, v19, (int)v20);
    v4 += v21;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v19, v20, v4);
}

uint64_t sub_12F0764(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0x3F) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_29;
  }
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
  uint64_t v6 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    uint64_t v6 = v5;
  }
  uint64_t v3 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 2) != 0)
  {
LABEL_9:
    unint64_t v7 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v8 = *(unsigned __int8 *)(v7 + 23);
    uint64_t v9 = *(void *)(v7 + 8);
    if ((v8 & 0x80u) == 0) {
      uint64_t v9 = v8;
    }
    v3 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v2 & 4) != 0)
  {
    unint64_t v10 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v11 = *(unsigned __int8 *)(v10 + 23);
    uint64_t v12 = *(void *)(v10 + 8);
    if ((v11 & 0x80u) == 0) {
      uint64_t v12 = v11;
    }
    v3 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 8) == 0)
    {
LABEL_14:
      if ((v2 & 0x10) == 0) {
        goto LABEL_15;
      }
      goto LABEL_21;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_14;
  }
  unint64_t v13 = sub_12EE8C8(*(void *)(a1 + 48));
  v3 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x10) == 0)
  {
LABEL_15:
    if ((v2 & 0x20) == 0) {
      goto LABEL_29;
    }
    goto LABEL_25;
  }
LABEL_21:
  int v14 = *(_DWORD *)(a1 + 56);
  if (v14 < 0) {
    uint64_t v15 = 11;
  }
  else {
    uint64_t v15 = ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v3 += v15;
  if ((v2 & 0x20) != 0)
  {
LABEL_25:
    int v16 = *(_DWORD *)(a1 + 60);
    if (v16 < 0) {
      uint64_t v17 = 11;
    }
    else {
      uint64_t v17 = ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v3 += v17;
  }
LABEL_29:
  uint64_t v18 = *(void *)(a1 + 8);
  if (v18)
  {
    unint64_t v20 = v18 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v20 + 31) < 0) {
      uint64_t v21 = *(void *)(v20 + 16);
    }
    else {
      uint64_t v21 = *(unsigned __int8 *)(v20 + 31);
    }
    v3 += v21;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_12F0950(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0x3F) != 0)
  {
    if (v4)
    {
      uint64_t v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      unint64_t v7 = (std::string **)&result[1];
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v9 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v9 = (uint64_t *)*v9;
      }
      uint64_t result = sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_20;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    unint64_t v10 = (long long *)(*(void *)(a2 + 32) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    std::string::size_type v11 = v3->__r_.__value_.__l.__size_;
    uint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
    if (v11) {
      uint64_t v12 = (uint64_t *)*v12;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[1].__r_.__value_.__l.__size_, v10, v12);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_23;
    }
LABEL_20:
    unint64_t v13 = (long long *)(*(void *)(a2 + 40) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
    std::string::size_type v14 = v3->__r_.__value_.__l.__size_;
    uint64_t v15 = (uint64_t *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
    if (v14) {
      uint64_t v15 = (uint64_t *)*v15;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[1].__r_.__value_.__r.__words[2], v13, v15);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0) {
        goto LABEL_7;
      }
      goto LABEL_31;
    }
LABEL_23:
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 8u;
    std::string::pointer data = (std::string *)v3[2].__r_.__value_.__l.__data_;
    if (!data)
    {
      std::string::size_type v17 = v3->__r_.__value_.__l.__size_;
      uint64_t v18 = (void *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
      if (v17) {
        uint64_t v18 = (void *)*v18;
      }
      std::string::pointer data = (std::string *)sub_12F816C((uint64_t)v18);
      v3[2].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
    }
    if (*(void *)(a2 + 48)) {
      char v19 = *(uint64_t (****)())(a2 + 48);
    }
    else {
      char v19 = &off_2531E00;
    }
    uint64_t result = sub_12D45B4(data, (uint64_t)v19);
    if ((v4 & 0x10) == 0)
    {
LABEL_7:
      if ((v4 & 0x20) == 0)
      {
LABEL_9:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
        goto LABEL_10;
      }
LABEL_8:
      HIDWORD(v3[2].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 60);
      goto LABEL_9;
    }
LABEL_31:
    LODWORD(v3[2].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 56);
    if ((v4 & 0x20) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
LABEL_10:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_12F0AE0()
{
  return 1;
}

void *sub_12F0AE8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap.AssigneeHistory");
}

uint64_t sub_12F0AF8(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_17;
    }
  }
  else if (v4)
  {
    goto LABEL_17;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(uint64_t **)(a1 + 40) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 40));
  }
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 48));
  }
  if (*(uint64_t **)(a1 + 56) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 56));
  }
  if (*(uint64_t **)(a1 + 64) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 64));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_17:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12F0C00(uint64_t a1)
{
  sub_12F0AF8(a1);

  operator delete();
}

uint64_t sub_12F0C38(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v23 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v23, a3[11].i32[1])) {
    return *(void *)v23;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    unint64_t v7 = (char *)(*(void *)v23 + 1);
    unsigned int v8 = **(unsigned char **)v23;
    if ((char)**(unsigned char **)v23 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        unint64_t v7 = (char *)sub_188C180(*(uint64_t *)v23, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        unint64_t v7 = (char *)(*(void *)v23 + 2);
      }
    }
    *(void *)uint64_t v23 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 10) {
          goto LABEL_37;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v11 = *(void *)(a1 + 8);
        uint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
        if (v11) {
          uint64_t v12 = (uint64_t *)*v12;
        }
        unint64_t v13 = (void *)(a1 + 24);
        goto LABEL_33;
      case 2u:
        if (v8 != 18) {
          goto LABEL_37;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v14 = *(void *)(a1 + 8);
        uint64_t v12 = (uint64_t *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
        if (v14) {
          uint64_t v12 = (uint64_t *)*v12;
        }
        unint64_t v13 = (void *)(a1 + 32);
        goto LABEL_33;
      case 3u:
        if (v8 != 26) {
          goto LABEL_37;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v15 = *(void *)(a1 + 8);
        uint64_t v12 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          uint64_t v12 = (uint64_t *)*v12;
        }
        unint64_t v13 = (void *)(a1 + 40);
        goto LABEL_33;
      case 4u:
        if (v8 != 34) {
          goto LABEL_37;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v16 = *(void *)(a1 + 8);
        uint64_t v12 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
        if (v16) {
          uint64_t v12 = (uint64_t *)*v12;
        }
        unint64_t v13 = (void *)(a1 + 48);
        goto LABEL_33;
      case 5u:
        if (v8 != 42) {
          goto LABEL_37;
        }
        *(_DWORD *)(a1 + 16) |= 0x10u;
        uint64_t v17 = *(void *)(a1 + 8);
        uint64_t v12 = (uint64_t *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
        if (v17) {
          uint64_t v12 = (uint64_t *)*v12;
        }
        unint64_t v13 = (void *)(a1 + 56);
        goto LABEL_33;
      case 6u:
        if (v8 != 50) {
          goto LABEL_37;
        }
        *(_DWORD *)(a1 + 16) |= 0x20u;
        uint64_t v18 = *(void *)(a1 + 8);
        uint64_t v12 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
        if (v18) {
          uint64_t v12 = (uint64_t *)*v12;
        }
        unint64_t v13 = (void *)(a1 + 64);
LABEL_33:
        char v19 = (std::string *)sub_1880F84(v13, v12);
        unint64_t v20 = (void *)sub_188C244(v19, *(char **)v23, (uint64_t)a3);
        goto LABEL_34;
      default:
LABEL_37:
        if (v8) {
          BOOL v21 = (v8 & 7) == 4;
        }
        else {
          BOOL v21 = 1;
        }
        if (!v21)
        {
          if (*v6)
          {
            uint64_t v22 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v22 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unint64_t v7 = *(char **)v23;
          }
          unint64_t v20 = sub_1885AC0(v8, v22, v7, a3);
LABEL_34:
          *(void *)uint64_t v23 = v20;
          if (!v20) {
            return 0;
          }
          if (sub_11947B8((uint64_t)a3, (char **)v23, a3[11].i32[1])) {
            return *(void *)v23;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return *(void *)v23;
    }
  }
}

char *sub_12F0F08(uint64_t a1, char *__dst, void *a3)
{
  int v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    int v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  int v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
LABEL_12:
  int v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_14;
  }
LABEL_13:
  int v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
LABEL_14:
  int v4 = sub_117A0AC(a3, 5, (const void **)(*(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x20) != 0) {
LABEL_7:
  }
    int v4 = sub_117A0AC(a3, 6, (const void **)(*(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL), v4);
LABEL_8:
  uint64_t v7 = *(void *)(a1 + 8);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v9 + 31) < 0)
  {
    unsigned int v10 = *(void **)(v9 + 8);
    uint64_t v11 = *(void *)(v9 + 16);
  }
  else
  {
    unsigned int v10 = (void *)(v9 + 8);
    LODWORD(v11) = *(unsigned __int8 *)(v9 + 31);
  }
  if (*a3 - (void)v4 >= (int)v11)
  {
    uint64_t v12 = (int)v11;
    memcpy(v4, v10, (int)v11);
    v4 += v12;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v10, v11, v4);
}

uint64_t sub_12F108C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 0x3F) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_19;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
  uint64_t v5 = *(void *)(v3 + 8);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = v4;
  }
  uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    unint64_t v6 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v1 & 4) != 0)
  {
    unint64_t v14 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v15 = *(unsigned __int8 *)(v14 + 23);
    uint64_t v16 = *(void *)(v14 + 8);
    if ((v15 & 0x80u) == 0) {
      uint64_t v16 = v15;
    }
    v2 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 8) == 0)
    {
LABEL_14:
      if ((v1 & 0x10) == 0) {
        goto LABEL_15;
      }
      goto LABEL_27;
    }
  }
  else if ((v1 & 8) == 0)
  {
    goto LABEL_14;
  }
  unint64_t v17 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v18 = *(unsigned __int8 *)(v17 + 23);
  uint64_t v19 = *(void *)(v17 + 8);
  if ((v18 & 0x80u) == 0) {
    uint64_t v19 = v18;
  }
  v2 += v19 + ((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 0x10) == 0)
  {
LABEL_15:
    if ((v1 & 0x20) == 0) {
      goto LABEL_19;
    }
    goto LABEL_16;
  }
LABEL_27:
  unint64_t v20 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v21 = *(unsigned __int8 *)(v20 + 23);
  uint64_t v22 = *(void *)(v20 + 8);
  if ((v21 & 0x80u) == 0) {
    uint64_t v22 = v21;
  }
  v2 += v22 + ((9 * (__clz(v22 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 0x20) != 0)
  {
LABEL_16:
    unint64_t v9 = *(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v10 = *(unsigned __int8 *)(v9 + 23);
    uint64_t v11 = *(void *)(v9 + 8);
    if ((v10 & 0x80u) == 0) {
      uint64_t v11 = v10;
    }
    v2 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_19:
  uint64_t v12 = *(void *)(a1 + 8);
  if (v12)
  {
    unint64_t v23 = v12 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v23 + 31) < 0) {
      uint64_t v24 = *(void *)(v23 + 16);
    }
    else {
      uint64_t v24 = *(unsigned __int8 *)(v23 + 31);
    }
    v2 += v24;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_12F1288()
{
  return 1;
}

void *sub_12F1290@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap.ArchesArtifactVersions");
}

uint64_t sub_12F12A0(uint64_t a1)
{
  unint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_18;
    }
  }
  else if (v4)
  {
    goto LABEL_18;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(uint64_t **)(a1 + 40) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 40));
  }
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 48));
  }
  if (*(uint64_t **)(a1 + 56) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 56));
  }
  if ((uint64_t (***)())a1 != &off_2531F48)
  {
    uint64_t v6 = *(void *)(a1 + 64);
    if (v6)
    {
      sub_15B3DFC(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_18:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12F13C4(uint64_t a1)
{
  sub_12F12A0(a1);

  operator delete();
}

uint64_t sub_12F13FC(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v24 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v24, a3[11].i32[1])) {
    return *(void *)v24;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v7 = (unsigned __int8 *)(*(void *)v24 + 1);
    unsigned int v8 = **(unsigned char **)v24;
    if ((char)**(unsigned char **)v24 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if ((char)*v7 < 0)
      {
        uint64_t v7 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v24, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (unsigned __int8 *)(*(void *)v24 + 2);
      }
    }
    *(void *)uint64_t v24 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 10) {
          goto LABEL_39;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v11 = *(void *)(a1 + 8);
        uint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
        if (v11) {
          uint64_t v12 = (uint64_t *)*v12;
        }
        unint64_t v13 = (void *)(a1 + 24);
        goto LABEL_29;
      case 2u:
        if (v8 != 18) {
          goto LABEL_39;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v14 = *(void *)(a1 + 8);
        uint64_t v12 = (uint64_t *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
        if (v14) {
          uint64_t v12 = (uint64_t *)*v12;
        }
        unint64_t v13 = (void *)(a1 + 32);
        goto LABEL_29;
      case 3u:
        if (v8 != 26) {
          goto LABEL_39;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v15 = *(void *)(a1 + 8);
        uint64_t v12 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          uint64_t v12 = (uint64_t *)*v12;
        }
        unint64_t v13 = (void *)(a1 + 40);
        goto LABEL_29;
      case 4u:
        if (v8 != 34) {
          goto LABEL_39;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v16 = *(void *)(a1 + 8);
        uint64_t v12 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
        if (v16) {
          uint64_t v12 = (uint64_t *)*v12;
        }
        unint64_t v13 = (void *)(a1 + 48);
        goto LABEL_29;
      case 5u:
        if (v8 != 42) {
          goto LABEL_39;
        }
        *(_DWORD *)(a1 + 16) |= 0x10u;
        uint64_t v17 = *(void *)(a1 + 8);
        uint64_t v12 = (uint64_t *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
        if (v17) {
          uint64_t v12 = (uint64_t *)*v12;
        }
        unint64_t v13 = (void *)(a1 + 56);
LABEL_29:
        uint64_t v18 = (std::string *)sub_1880F84(v13, v12);
        uint64_t v19 = (void *)sub_188C244(v18, *(char **)v24, (uint64_t)a3);
        goto LABEL_30;
      case 6u:
        if (v8 != 50) {
          goto LABEL_39;
        }
        *(_DWORD *)(a1 + 16) |= 0x20u;
        uint64_t v20 = *(void *)(a1 + 64);
        if (!v20)
        {
          uint64_t v21 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v21 = (void *)*v21;
          }
          uint64_t v20 = sub_15C1CB4((uint64_t)v21);
          *(void *)(a1 + 64) = v20;
          uint64_t v7 = *(unsigned __int8 **)v24;
        }
        uint64_t v19 = sub_11B3E48(a3, v20, v7);
        goto LABEL_30;
      default:
LABEL_39:
        if (v8) {
          BOOL v22 = (v8 & 7) == 4;
        }
        else {
          BOOL v22 = 1;
        }
        if (!v22)
        {
          if (*v6)
          {
            unint64_t v23 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            unint64_t v23 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v7 = *(unsigned __int8 **)v24;
          }
          uint64_t v19 = sub_1885AC0(v8, v23, (char *)v7, a3);
LABEL_30:
          *(void *)uint64_t v24 = v19;
          if (!v19) {
            return 0;
          }
          if (sub_11947B8((uint64_t)a3, (char **)v24, a3[11].i32[1])) {
            return *(void *)v24;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return *(void *)v24;
    }
  }
}

char *sub_12F16E4(uint64_t a1, char *__dst, void *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_10;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_11;
  }
LABEL_10:
  uint64_t v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_12;
  }
LABEL_11:
  uint64_t v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_19;
    }
    goto LABEL_13;
  }
LABEL_12:
  uint64_t v4 = sub_117A0AC(a3, 5, (const void **)(*(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x20) == 0) {
    goto LABEL_19;
  }
LABEL_13:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v7 = *(void *)(a1 + 64);
  char *v4 = 50;
  unsigned int v8 = *(_DWORD *)(v7 + 44);
  v4[1] = v8;
  if (v8 > 0x7F) {
    unsigned int v9 = sub_188A9CC(v8, v4 + 1);
  }
  else {
    unsigned int v9 = v4 + 2;
  }
  uint64_t v4 = sub_15B43E4(v7, v9, a3);
LABEL_19:
  uint64_t v10 = *(void *)(a1 + 8);
  if ((v10 & 1) == 0) {
    return v4;
  }
  unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v12 + 31) < 0)
  {
    unint64_t v13 = *(void **)(v12 + 8);
    uint64_t v14 = *(void *)(v12 + 16);
  }
  else
  {
    unint64_t v13 = (void *)(v12 + 8);
    LODWORD(v14) = *(unsigned __int8 *)(v12 + 31);
  }
  if (*a3 - (void)v4 >= (int)v14)
  {
    uint64_t v15 = (int)v14;
    memcpy(v4, v13, (int)v14);
    v4 += v15;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v13, v14, v4);
}

uint64_t sub_12F18AC(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0x3F) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_17;
  }
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
  uint64_t v6 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    uint64_t v6 = v5;
  }
  uint64_t v3 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 2) != 0)
  {
LABEL_9:
    unint64_t v7 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v8 = *(unsigned __int8 *)(v7 + 23);
    uint64_t v9 = *(void *)(v7 + 8);
    if ((v8 & 0x80u) == 0) {
      uint64_t v9 = v8;
    }
    v3 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v2 & 4) != 0)
  {
    unint64_t v13 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v14 = *(unsigned __int8 *)(v13 + 23);
    uint64_t v15 = *(void *)(v13 + 8);
    if ((v14 & 0x80u) == 0) {
      uint64_t v15 = v14;
    }
    v3 += v15 + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 8) == 0)
    {
LABEL_14:
      if ((v2 & 0x10) == 0) {
        goto LABEL_15;
      }
      goto LABEL_25;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_14;
  }
  unint64_t v16 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v17 = *(unsigned __int8 *)(v16 + 23);
  uint64_t v18 = *(void *)(v16 + 8);
  if ((v17 & 0x80u) == 0) {
    uint64_t v18 = v17;
  }
  v3 += v18 + ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x10) == 0)
  {
LABEL_15:
    if ((v2 & 0x20) == 0) {
      goto LABEL_17;
    }
    goto LABEL_16;
  }
LABEL_25:
  unint64_t v19 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v20 = *(unsigned __int8 *)(v19 + 23);
  uint64_t v21 = *(void *)(v19 + 8);
  if ((v20 & 0x80u) == 0) {
    uint64_t v21 = v20;
  }
  v3 += v21 + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x20) != 0)
  {
LABEL_16:
    uint64_t v10 = sub_15B4924(*(void *)(a1 + 64));
    v3 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_17:
  uint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    unint64_t v22 = v11 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v22 + 31) < 0) {
      uint64_t v23 = *(void *)(v22 + 16);
    }
    else {
      uint64_t v23 = *(unsigned __int8 *)(v22 + 31);
    }
    v3 += v23;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

void *sub_12F1AB0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap.RapImage");
}

uint64_t sub_12F1AC0(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  unint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_13;
    }
  }
  else if (v4)
  {
    goto LABEL_13;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(uint64_t **)(a1 + 40) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 40));
  }
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 48));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_13:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12F1BA0(uint64_t a1)
{
  sub_12F1AC0(a1);

  operator delete();
}

uint64_t sub_12F1BD8(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 0xF) == 0) {
    goto LABEL_22;
  }
  if ((v1 & 1) == 0)
  {
    if ((v1 & 2) == 0) {
      goto LABEL_4;
    }
LABEL_11:
    unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)unint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
      if ((v1 & 4) != 0) {
        goto LABEL_15;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
      if ((v1 & 4) != 0) {
        goto LABEL_15;
      }
    }
LABEL_5:
    if ((v1 & 8) == 0) {
      goto LABEL_22;
    }
LABEL_19:
    unint64_t v5 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v5 + 23) < 0)
    {
      **(unsigned char **)unint64_t v5 = 0;
      *(void *)(v5 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v5 = 0;
      *(unsigned char *)(v5 + 23) = 0;
    }
    goto LABEL_22;
  }
  unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v2 + 23) < 0)
  {
    **(unsigned char **)unint64_t v2 = 0;
    *(void *)(v2 + 8) = 0;
    if ((v1 & 2) != 0) {
      goto LABEL_11;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v2 = 0;
    *(unsigned char *)(v2 + 23) = 0;
    if ((v1 & 2) != 0) {
      goto LABEL_11;
    }
  }
LABEL_4:
  if ((v1 & 4) == 0) {
    goto LABEL_5;
  }
LABEL_15:
  unint64_t v4 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v4 + 23) < 0)
  {
    **(unsigned char **)unint64_t v4 = 0;
    *(void *)(v4 + 8) = 0;
    if ((v1 & 8) == 0) {
      goto LABEL_22;
    }
    goto LABEL_19;
  }
  *(unsigned char *)unint64_t v4 = 0;
  *(unsigned char *)(v4 + 23) = 0;
  if ((v1 & 8) != 0) {
    goto LABEL_19;
  }
LABEL_22:
  char v7 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v7) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_12F1CC4(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v21 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v21, a3[11].i32[1])) {
    return *(void *)v21;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    char v7 = (char *)(*(void *)v21 + 1);
    unsigned int v8 = **(unsigned char **)v21;
    if ((char)**(unsigned char **)v21 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        char v7 = (char *)sub_188C180(*(uint64_t *)v21, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        char v7 = (char *)(*(void *)v21 + 2);
      }
    }
    *(void *)uint64_t v21 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 10) {
          goto LABEL_29;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v11 = *(void *)(a1 + 8);
        unint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
        if (v11) {
          unint64_t v12 = (uint64_t *)*v12;
        }
        unint64_t v13 = (void *)(a1 + 24);
        goto LABEL_25;
      case 2u:
        if (v8 != 18) {
          goto LABEL_29;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v14 = *(void *)(a1 + 8);
        unint64_t v12 = (uint64_t *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
        if (v14) {
          unint64_t v12 = (uint64_t *)*v12;
        }
        unint64_t v13 = (void *)(a1 + 32);
        goto LABEL_25;
      case 3u:
        if (v8 != 26) {
          goto LABEL_29;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v15 = *(void *)(a1 + 8);
        unint64_t v12 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          unint64_t v12 = (uint64_t *)*v12;
        }
        unint64_t v13 = (void *)(a1 + 40);
        goto LABEL_25;
      case 4u:
        if (v8 != 34) {
          goto LABEL_29;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v16 = *(void *)(a1 + 8);
        unint64_t v12 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
        if (v16) {
          unint64_t v12 = (uint64_t *)*v12;
        }
        unint64_t v13 = (void *)(a1 + 48);
LABEL_25:
        uint64_t v17 = (std::string *)sub_1880F84(v13, v12);
        uint64_t v18 = (void *)sub_188C244(v17, *(char **)v21, (uint64_t)a3);
        goto LABEL_26;
      default:
LABEL_29:
        if (v8) {
          BOOL v19 = (v8 & 7) == 4;
        }
        else {
          BOOL v19 = 1;
        }
        if (!v19)
        {
          if (*v6)
          {
            uint64_t v20 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v20 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            char v7 = *(char **)v21;
          }
          uint64_t v18 = sub_1885AC0(v8, v20, v7, a3);
LABEL_26:
          *(void *)uint64_t v21 = v18;
          if (!v18) {
            return 0;
          }
          if (sub_11947B8((uint64_t)a3, (char **)v21, a3[11].i32[1])) {
            return *(void *)v21;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return *(void *)v21;
    }
  }
}

char *sub_12F1F14(uint64_t a1, char *__dst, void *a3)
{
  unint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    unint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_10;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  unint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_10:
  unint64_t v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 8) != 0) {
LABEL_5:
  }
    unint64_t v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), v4);
LABEL_6:
  uint64_t v7 = *(void *)(a1 + 8);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v9 + 31) < 0)
  {
    unsigned int v10 = *(void **)(v9 + 8);
    uint64_t v11 = *(void *)(v9 + 16);
  }
  else
  {
    unsigned int v10 = (void *)(v9 + 8);
    LODWORD(v11) = *(unsigned __int8 *)(v9 + 31);
  }
  if (*a3 - (void)v4 >= (int)v11)
  {
    uint64_t v12 = (int)v11;
    memcpy(v4, v10, (int)v11);
    v4 += v12;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v10, v11, v4);
}

uint64_t sub_12F2050(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 0xF) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_17;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
  uint64_t v5 = *(void *)(v3 + 8);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = v4;
  }
  uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    unint64_t v6 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v1 & 4) == 0)
  {
    if ((v1 & 8) == 0) {
      goto LABEL_17;
    }
    goto LABEL_14;
  }
  unint64_t v14 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v15 = *(unsigned __int8 *)(v14 + 23);
  uint64_t v16 = *(void *)(v14 + 8);
  if ((v15 & 0x80u) == 0) {
    uint64_t v16 = v15;
  }
  v2 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 8) != 0)
  {
LABEL_14:
    unint64_t v9 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v10 = *(unsigned __int8 *)(v9 + 23);
    uint64_t v11 = *(void *)(v9 + 8);
    if ((v10 & 0x80u) == 0) {
      uint64_t v11 = v10;
    }
    v2 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_17:
  uint64_t v12 = *(void *)(a1 + 8);
  if (v12)
  {
    unint64_t v17 = v12 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v17 + 31) < 0) {
      uint64_t v18 = *(void *)(v17 + 16);
    }
    else {
      uint64_t v18 = *(unsigned __int8 *)(v17 + 31);
    }
    v2 += v18;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_12F21BC()
{
  return 1;
}

void *sub_12F21C4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap.HawkResource.HawkLink");
}

void *sub_12F21D4(void *a1)
{
  unint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_13020F8(a1 + 16);
  sub_13020F8(a1 + 13);
  sub_13020F8(a1 + 10);
  sub_1889DA8((uint64_t)(a1 + 8));
  sub_13020F8(a1 + 5);
  sub_13020F8(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12F228C(void *a1)
{
  sub_12F21D4(a1);

  operator delete();
}

char *sub_12F22C4(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v51 = a2;
  if ((sub_11947B8((uint64_t)a3, &v51, a3[11].i32[1]) & 1) == 0)
  {
    unsigned int v49 = (uint64_t *)(a1 + 8);
    uint64_t v50 = (uint64_t *)(a1 + 128);
    while (1)
    {
      unint64_t v6 = v51 + 1;
      unsigned int v7 = *v51;
      if (*v51 < 0)
      {
        unsigned int v8 = v7 + (*v6 << 7);
        unsigned int v7 = v8 - 128;
        if (*v6 < 0)
        {
          unint64_t v6 = (char *)sub_188C180((uint64_t)v51, v8 - 128);
          unsigned int v7 = v9;
        }
        else
        {
          unint64_t v6 = v51 + 2;
        }
      }
      uint64_t v51 = v6;
      switch(v7 >> 3)
      {
        case 1u:
          if (v7 != 10) {
            goto LABEL_75;
          }
          uint64_t v10 = v6 - 1;
          while (1)
          {
            uint64_t v11 = (unsigned __int8 *)(v10 + 1);
            uint64_t v51 = v10 + 1;
            uint64_t v12 = *(_DWORD **)(a1 + 32);
            if (v12 && (uint64_t v13 = *(int *)(a1 + 24), (int)v13 < *v12))
            {
              *(_DWORD *)(a1 + 24) = v13 + 1;
              uint64_t v14 = *(void *)&v12[2 * v13 + 2];
            }
            else
            {
              uint64_t v15 = sub_12F8528(*(void *)(a1 + 16));
              uint64_t v14 = sub_188CDC8(a1 + 16, (uint64_t)v15);
              uint64_t v11 = (unsigned __int8 *)v51;
            }
            uint64_t v10 = (char *)sub_12F27EC(a3, v14, v11);
            uint64_t v51 = v10;
            if (!v10) {
              return 0;
            }
            if (*(void *)a3 <= (unint64_t)v10 || *v10 != 10) {
              goto LABEL_83;
            }
          }
        case 2u:
          if (v7 != 18) {
            goto LABEL_75;
          }
          uint64_t v16 = v6 - 1;
          while (1)
          {
            unint64_t v17 = (unsigned __int8 *)(v16 + 1);
            uint64_t v51 = v16 + 1;
            uint64_t v18 = *(_DWORD **)(a1 + 56);
            if (v18 && (uint64_t v19 = *(int *)(a1 + 48), (int)v19 < *v18))
            {
              *(_DWORD *)(a1 + 48) = v19 + 1;
              uint64_t v20 = *(void *)&v18[2 * v19 + 2];
            }
            else
            {
              uint64_t v21 = sub_12F8528(*(void *)(a1 + 40));
              uint64_t v20 = sub_188CDC8(a1 + 40, (uint64_t)v21);
              unint64_t v17 = (unsigned __int8 *)v51;
            }
            uint64_t v16 = (char *)sub_12F27EC(a3, v20, v17);
            uint64_t v51 = v16;
            if (!v16) {
              return 0;
            }
            if (*(void *)a3 <= (unint64_t)v16 || *v16 != 18) {
              goto LABEL_83;
            }
          }
        case 3u:
          if (v7 == 24)
          {
            unint64_t v22 = v6 - 1;
            while (1)
            {
              uint64_t v51 = v22 + 1;
              int v23 = v22[1];
              if (v22[1] < 0)
              {
                int v24 = v23 + (v22[2] << 7);
                int v23 = v24 - 128;
                if (v22[2] < 0)
                {
                  unint64_t v22 = (char *)sub_188C0D0((uint64_t)(v22 + 1), v24 - 128);
                  int v23 = v25;
                }
                else
                {
                  v22 += 3;
                }
              }
              else
              {
                v22 += 2;
              }
              uint64_t v51 = v22;
              uint64_t v26 = *(unsigned int *)(a1 + 64);
              if (v26 == *(_DWORD *)(a1 + 68))
              {
                int v27 = v26 + 1;
                sub_188C80C((unsigned int *)(a1 + 64), v26 + 1);
                *(_DWORD *)(*(void *)(a1 + 72) + 4 * v26) = v23;
                unint64_t v22 = v51;
              }
              else
              {
                *(_DWORD *)(*(void *)(a1 + 72) + 4 * v26) = v23;
                int v27 = v26 + 1;
              }
              *(_DWORD *)(a1 + 64) = v27;
              if (!v22) {
                return 0;
              }
              if (*(void *)a3 <= (unint64_t)v22 || *v22 != 24) {
                goto LABEL_83;
              }
            }
          }
          if (v7 == 26)
          {
            uint64_t v46 = sub_188C2CC((unsigned int *)(a1 + 64), (unsigned __int8 *)v6, (uint64_t)a3);
          }
          else
          {
LABEL_75:
            if (v7) {
              BOOL v47 = (v7 & 7) == 4;
            }
            else {
              BOOL v47 = 1;
            }
            if (v47)
            {
              if (v6)
              {
                a3[10].i32[0] = v7 - 1;
                return v51;
              }
              return 0;
            }
            if (*v49)
            {
              uint64_t v48 = (std::string *)((*v49 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              uint64_t v48 = (std::string *)sub_188DBD8(v49);
              unint64_t v6 = v51;
            }
            uint64_t v46 = sub_1885AC0(v7, v48, v6, a3);
          }
          uint64_t v51 = (char *)v46;
          if (!v46) {
            return 0;
          }
LABEL_83:
          if (sub_11947B8((uint64_t)a3, &v51, a3[11].i32[1])) {
            return v51;
          }
          break;
        case 4u:
          if (v7 != 34) {
            goto LABEL_75;
          }
          uint64_t v28 = v6 - 1;
          while (1)
          {
            unint64_t v29 = (unsigned __int8 *)(v28 + 1);
            uint64_t v51 = v28 + 1;
            unint64_t v30 = *(_DWORD **)(a1 + 96);
            if (v30 && (uint64_t v31 = *(int *)(a1 + 88), (int)v31 < *v30))
            {
              *(_DWORD *)(a1 + 88) = v31 + 1;
              uint64_t v32 = *(void *)&v30[2 * v31 + 2];
            }
            else
            {
              uint64_t v33 = sub_12F8528(*(void *)(a1 + 80));
              uint64_t v32 = sub_188CDC8(a1 + 80, (uint64_t)v33);
              unint64_t v29 = (unsigned __int8 *)v51;
            }
            uint64_t v28 = (char *)sub_12F27EC(a3, v32, v29);
            uint64_t v51 = v28;
            if (!v28) {
              return 0;
            }
            if (*(void *)a3 <= (unint64_t)v28 || *v28 != 34) {
              goto LABEL_83;
            }
          }
        case 5u:
          if (v7 != 42) {
            goto LABEL_75;
          }
          uint64_t v34 = v6 - 1;
          while (1)
          {
            uint64_t v35 = (unsigned __int8 *)(v34 + 1);
            uint64_t v51 = v34 + 1;
            uint64_t v36 = *(_DWORD **)(a1 + 120);
            if (v36 && (uint64_t v37 = *(int *)(a1 + 112), (int)v37 < *v36))
            {
              *(_DWORD *)(a1 + 112) = v37 + 1;
              uint64_t v38 = *(void *)&v36[2 * v37 + 2];
            }
            else
            {
              uint64_t v39 = sub_12F8528(*(void *)(a1 + 104));
              uint64_t v38 = sub_188CDC8(a1 + 104, (uint64_t)v39);
              uint64_t v35 = (unsigned __int8 *)v51;
            }
            uint64_t v34 = (char *)sub_12F27EC(a3, v38, v35);
            uint64_t v51 = v34;
            if (!v34) {
              return 0;
            }
            if (*(void *)a3 <= (unint64_t)v34 || *v34 != 42) {
              goto LABEL_83;
            }
          }
        case 6u:
          if (v7 != 50) {
            goto LABEL_75;
          }
          uint64_t v40 = v6 - 1;
          while (1)
          {
            unint64_t v41 = (unsigned __int8 *)(v40 + 1);
            uint64_t v51 = v40 + 1;
            unint64_t v42 = *(_DWORD **)(a1 + 144);
            if (v42 && (uint64_t v43 = *(int *)(a1 + 136), (int)v43 < *v42))
            {
              *(_DWORD *)(a1 + 136) = v43 + 1;
              uint64_t v44 = *(void *)&v42[2 * v43 + 2];
            }
            else
            {
              uint64_t v45 = sub_12F8528(*v50);
              uint64_t v44 = sub_188CDC8((uint64_t)v50, (uint64_t)v45);
              unint64_t v41 = (unsigned __int8 *)v51;
            }
            uint64_t v40 = (char *)sub_12F27EC(a3, v44, v41);
            uint64_t v51 = v40;
            if (!v40) {
              return 0;
            }
            if (*(void *)a3 <= (unint64_t)v40 || *v40 != 50) {
              goto LABEL_83;
            }
          }
        default:
          goto LABEL_75;
      }
    }
  }
  return v51;
}

uint64_t sub_12F27EC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12F1CC4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_12F287C(uint64_t a1, char *__dst, void *a3)
{
  int v6 = *(_DWORD *)(a1 + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        uint64_t v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        uint64_t v10 = __dst + 2;
      }
      __dst = sub_12F1F14(v8, v10, a3);
    }
  }
  int v11 = *(_DWORD *)(a1 + 48);
  if (v11)
  {
    for (int j = 0; j != v11; ++j)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v13 = *(void *)(*(void *)(a1 + 56) + 8 * j + 8);
      *__dst = 18;
      unsigned int v14 = *(_DWORD *)(v13 + 20);
      __dst[1] = v14;
      if (v14 > 0x7F) {
        uint64_t v15 = sub_188A9CC(v14, __dst + 1);
      }
      else {
        uint64_t v15 = __dst + 2;
      }
      __dst = sub_12F1F14(v13, v15, a3);
    }
  }
  uint64_t v16 = *(unsigned int *)(a1 + 64);
  if ((int)v16 >= 1)
  {
    for (uint64_t k = 0; k != v16; ++k)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      unsigned int v18 = *(_DWORD *)(*(void *)(a1 + 72) + 4 * k);
      *__dst = 24;
      __dst[1] = v18;
      if (v18 > 0x7F)
      {
        __dst[1] = v18 | 0x80;
        unsigned int v19 = v18 >> 7;
        __dst[2] = v18 >> 7;
        __dst += 3;
        if (v18 >= 0x4000)
        {
          do
          {
            *(__dst - 1) |= 0x80u;
            unsigned int v20 = v19 >> 14;
            v19 >>= 7;
            *__dst++ = v19;
          }
          while (v20);
        }
      }
      else
      {
        __dst += 2;
      }
    }
  }
  int v21 = *(_DWORD *)(a1 + 88);
  if (v21)
  {
    for (int m = 0; m != v21; ++m)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v23 = *(void *)(*(void *)(a1 + 96) + 8 * m + 8);
      *__dst = 34;
      unsigned int v24 = *(_DWORD *)(v23 + 20);
      __dst[1] = v24;
      if (v24 > 0x7F) {
        int v25 = sub_188A9CC(v24, __dst + 1);
      }
      else {
        int v25 = __dst + 2;
      }
      __dst = sub_12F1F14(v23, v25, a3);
    }
  }
  int v26 = *(_DWORD *)(a1 + 112);
  if (v26)
  {
    for (int n = 0; n != v26; ++n)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v28 = *(void *)(*(void *)(a1 + 120) + 8 * n + 8);
      *__dst = 42;
      unsigned int v29 = *(_DWORD *)(v28 + 20);
      __dst[1] = v29;
      if (v29 > 0x7F) {
        unint64_t v30 = sub_188A9CC(v29, __dst + 1);
      }
      else {
        unint64_t v30 = __dst + 2;
      }
      __dst = sub_12F1F14(v28, v30, a3);
    }
  }
  int v31 = *(_DWORD *)(a1 + 136);
  if (v31)
  {
    for (iint i = 0; ii != v31; ++ii)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v33 = *(void *)(*(void *)(a1 + 144) + 8 * ii + 8);
      *__dst = 50;
      unsigned int v34 = *(_DWORD *)(v33 + 20);
      __dst[1] = v34;
      if (v34 > 0x7F) {
        uint64_t v35 = sub_188A9CC(v34, __dst + 1);
      }
      else {
        uint64_t v35 = __dst + 2;
      }
      __dst = sub_12F1F14(v33, v35, a3);
    }
  }
  uint64_t v36 = *(void *)(a1 + 8);
  if ((v36 & 1) == 0) {
    return __dst;
  }
  unint64_t v38 = v36 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v38 + 31) < 0)
  {
    uint64_t v39 = *(void **)(v38 + 8);
    uint64_t v40 = *(void *)(v38 + 16);
  }
  else
  {
    uint64_t v39 = (void *)(v38 + 8);
    LODWORD(v40) = *(unsigned __int8 *)(v38 + 31);
  }
  if (*a3 - (void)__dst >= (int)v40)
  {
    uint64_t v41 = (int)v40;
    memcpy(__dst, v39, (int)v40);
    __dst += v41;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v39, v40, __dst);
}

uint64_t sub_12F2C6C(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_12F2050(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(int *)(a1 + 48);
  uint64_t v9 = v2 + v8;
  uint64_t v10 = *(void *)(a1 + 56);
  if (v10) {
    int v11 = (uint64_t *)(v10 + 8);
  }
  else {
    int v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_12F2050(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  uint64_t v15 = sub_188D4F0((unsigned int *)(a1 + 64));
  uint64_t v16 = *(int *)(a1 + 88);
  uint64_t v17 = v15 + v16 + v9 + *(unsigned int *)(a1 + 64);
  uint64_t v18 = *(void *)(a1 + 96);
  if (v18) {
    unsigned int v19 = (uint64_t *)(v18 + 8);
  }
  else {
    unsigned int v19 = 0;
  }
  if (v16)
  {
    uint64_t v20 = 8 * v16;
    do
    {
      uint64_t v21 = *v19++;
      uint64_t v22 = sub_12F2050(v21);
      v17 += v22 + ((9 * (__clz(v22 | 1) ^ 0x1F) + 73) >> 6);
      v20 -= 8;
    }
    while (v20);
  }
  uint64_t v23 = *(int *)(a1 + 112);
  uint64_t v24 = v17 + v23;
  uint64_t v25 = *(void *)(a1 + 120);
  if (v25) {
    int v26 = (uint64_t *)(v25 + 8);
  }
  else {
    int v26 = 0;
  }
  if (v23)
  {
    uint64_t v27 = 8 * v23;
    do
    {
      uint64_t v28 = *v26++;
      uint64_t v29 = sub_12F2050(v28);
      v24 += v29 + ((9 * (__clz(v29 | 1) ^ 0x1F) + 73) >> 6);
      v27 -= 8;
    }
    while (v27);
  }
  uint64_t v30 = *(int *)(a1 + 136);
  uint64_t v31 = v24 + v30;
  uint64_t v32 = *(void *)(a1 + 144);
  if (v32) {
    uint64_t v33 = (uint64_t *)(v32 + 8);
  }
  else {
    uint64_t v33 = 0;
  }
  if (v30)
  {
    uint64_t v34 = 8 * v30;
    do
    {
      uint64_t v35 = *v33++;
      uint64_t v36 = sub_12F2050(v35);
      v31 += v36 + ((9 * (__clz(v36 | 1) ^ 0x1F) + 73) >> 6);
      v34 -= 8;
    }
    while (v34);
  }
  uint64_t v37 = *(void *)(a1 + 8);
  if (v37)
  {
    unint64_t v39 = v37 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v39 + 31) < 0) {
      uint64_t v40 = *(void *)(v39 + 16);
    }
    else {
      uint64_t v40 = *(unsigned __int8 *)(v39 + 31);
    }
    v31 += v40;
  }
  *(_DWORD *)(a1 + 152) = v31;
  return v31;
}

uint64_t sub_12F2E70()
{
  return 1;
}

void *sub_12F2E78@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap.HawkResource");
}

void *sub_12F2E88(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1302178(a1 + 5);
  sub_1302178(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12F2F14(void *a1)
{
  sub_12F2E88(a1);

  operator delete();
}

uint64_t sub_12F2F4C(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 24);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 32) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_12F3788(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 24) = 0;
  }
  uint64_t v5 = *(unsigned int *)(v1 + 48);
  if ((int)v5 >= 1)
  {
    uint64_t v6 = (uint64_t *)(*(void *)(v1 + 56) + 8);
    do
    {
      uint64_t v7 = *v6++;
      uint64_t result = sub_12F3788(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(v1 + 48) = 0;
  }
  char v9 = *(unsigned char *)(v1 + 8);
  uint64_t v8 = (uint64_t *)(v1 + 8);
  if (v9)
  {
    return sub_188B4AC(v8);
  }
  return result;
}

char *sub_12F2FF0(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v26 = a2;
  if ((sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v6 = (void *)(a1 + 8);
    while (1)
    {
      uint64_t v7 = v26 + 1;
      unsigned int v8 = *v26;
      if (*v26 < 0)
      {
        unsigned int v9 = v8 + (*v7 << 7);
        unsigned int v8 = v9 - 128;
        if (*v7 < 0)
        {
          uint64_t v7 = (char *)sub_188C180((uint64_t)v26, v9 - 128);
          unsigned int v8 = v10;
        }
        else
        {
          uint64_t v7 = v26 + 2;
        }
      }
      int v26 = v7;
      if (v8 >> 3 == 2)
      {
        if (v8 == 18)
        {
          uint64_t v14 = v7 - 1;
          while (1)
          {
            uint64_t v15 = (unsigned __int8 *)(v14 + 1);
            int v26 = v14 + 1;
            uint64_t v16 = *(_DWORD **)(a1 + 56);
            if (v16 && (uint64_t v17 = *(int *)(a1 + 48), (int)v17 < *v16))
            {
              *(_DWORD *)(a1 + 48) = v17 + 1;
              uint64_t v18 = *(void *)&v16[2 * v17 + 2];
            }
            else
            {
              unsigned int v19 = sub_12F871C(*(void *)(a1 + 40));
              uint64_t v18 = sub_188CDC8(a1 + 40, (uint64_t)v19);
              uint64_t v15 = (unsigned __int8 *)v26;
            }
            uint64_t v14 = sub_12F3238(a3, v18, v15);
            int v26 = v14;
            if (!v14) {
              return 0;
            }
            if (*(void *)a3 <= (unint64_t)v14 || *v14 != 18) {
              goto LABEL_39;
            }
          }
        }
      }
      else if (v8 >> 3 == 1 && v8 == 10)
      {
        uint64_t v20 = v7 - 1;
        while (1)
        {
          uint64_t v21 = (unsigned __int8 *)(v20 + 1);
          int v26 = v20 + 1;
          uint64_t v22 = *(_DWORD **)(a1 + 32);
          if (v22 && (uint64_t v23 = *(int *)(a1 + 24), (int)v23 < *v22))
          {
            *(_DWORD *)(a1 + 24) = v23 + 1;
            uint64_t v24 = *(void *)&v22[2 * v23 + 2];
          }
          else
          {
            uint64_t v25 = sub_12F871C(*(void *)(a1 + 16));
            uint64_t v24 = sub_188CDC8(a1 + 16, (uint64_t)v25);
            uint64_t v21 = (unsigned __int8 *)v26;
          }
          uint64_t v20 = sub_12F3238(a3, v24, v21);
          int v26 = v20;
          if (!v20) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v20 || *v20 != 10) {
            goto LABEL_39;
          }
        }
      }
      if (!v8 || (v8 & 7) == 4) {
        break;
      }
      if (*v6)
      {
        uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        uint64_t v7 = v26;
      }
      int v26 = (char *)sub_1885AC0(v8, v13, v7, a3);
      if (!v26) {
        return 0;
      }
LABEL_39:
      if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
        return v26;
      }
    }
    if (v7)
    {
      a3[10].i32[0] = v8 - 1;
      return v26;
    }
    return 0;
  }
  return v26;
}

char *sub_12F3238(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12F37AC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_12F32C8(uint64_t a1, char *__dst, _DWORD *a3)
{
  int v6 = *(_DWORD *)(a1 + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unsigned int v10 = __dst + 2;
      }
      __dst = sub_12F3994(v8, (unint64_t)v10, a3);
    }
  }
  int v11 = *(_DWORD *)(a1 + 48);
  if (v11)
  {
    for (int j = 0; j != v11; ++j)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v13 = *(void *)(*(void *)(a1 + 56) + 8 * j + 8);
      *__dst = 18;
      unsigned int v14 = *(_DWORD *)(v13 + 20);
      __dst[1] = v14;
      if (v14 > 0x7F) {
        uint64_t v15 = sub_188A9CC(v14, __dst + 1);
      }
      else {
        uint64_t v15 = __dst + 2;
      }
      __dst = sub_12F3994(v13, (unint64_t)v15, a3);
    }
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return __dst;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    unsigned int v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    unsigned int v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(__dst, v19, (int)v20);
    __dst += v21;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v19, v20, __dst);
}

uint64_t sub_12F3490(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_12F3B38(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(int *)(a1 + 48);
  uint64_t v9 = v2 + v8;
  uint64_t v10 = *(void *)(a1 + 56);
  if (v10) {
    int v11 = (uint64_t *)(v10 + 8);
  }
  else {
    int v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_12F3B38(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  uint64_t v15 = *(void *)(a1 + 8);
  if (v15)
  {
    unint64_t v17 = v15 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v17 + 31) < 0) {
      uint64_t v18 = *(void *)(v17 + 16);
    }
    else {
      uint64_t v18 = *(unsigned __int8 *)(v17 + 31);
    }
    v9 += v18;
  }
  *(_DWORD *)(a1 + 64) = v9;
  return v9;
}

std::string *sub_12F3590(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 32) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result->__r_.__value_.__r.__words[2], *(_DWORD *)(a2 + 24));
    uint64_t result = sub_1302380((std::string *)&v3->__r_.__value_.__r.__words[2], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__l.__size_ - LODWORD(v3[1].__r_.__value_.__l.__data_));
    int v7 = LODWORD(v3[1].__r_.__value_.__l.__data_) + v4;
    LODWORD(v3[1].__r_.__value_.__l.__data_) = v7;
    std::string::size_type size = (int *)v3[1].__r_.__value_.__l.__size_;
    if (*size < v7) {
      *std::string::size_type size = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 48);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 56) + 8);
    int v11 = (std::string **)sub_188CCE4((uint64_t)&v3[1].__r_.__value_.__r.__words[2], *(_DWORD *)(a2 + 48));
    uint64_t result = sub_1302380((std::string *)((char *)v3 + 40), v11, v10, v9, *(_DWORD *)v3[2].__r_.__value_.__l.__size_ - LODWORD(v3[2].__r_.__value_.__l.__data_));
    int v12 = LODWORD(v3[2].__r_.__value_.__l.__data_) + v9;
    LODWORD(v3[2].__r_.__value_.__l.__data_) = v12;
    uint64_t v13 = (int *)v3[2].__r_.__value_.__l.__size_;
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  uint64_t v14 = *(void *)(a2 + 8);
  if (v14)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v14 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_12F36C4()
{
  return 1;
}

void *sub_12F36CC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap.ZilchPointMetadata.ZilchPointSegmentIndices");
}

void *sub_12F36DC(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12F3750(void *a1)
{
  sub_12F36DC(a1);

  operator delete();
}

uint64_t sub_12F3788(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 3) != 0) {
    *(void *)(a1 + 24) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_12F37AC(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v25 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v25 + 1;
    unsigned int v9 = *v25;
    if (*v25 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v25, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v25 + 2;
      }
    }
    uint64_t v25 = v8;
    if (v9 >> 3 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_13;
    }
    v5 |= 2u;
    uint64_t v16 = v8 + 1;
    LODWORD(v15) = *v8;
    if ((v15 & 0x80) == 0) {
      goto LABEL_25;
    }
    int v17 = *v16;
    uint64_t v15 = v15 + (v17 << 7) - 128;
    if ((v17 & 0x80000000) == 0)
    {
      uint64_t v16 = v8 + 2;
LABEL_25:
      uint64_t v25 = v16;
      *(_DWORD *)(a1 + 28) = v15;
      goto LABEL_30;
    }
    uint64_t v21 = (char *)sub_188C138((uint64_t)v8, v15);
    uint64_t v25 = v21;
    *(_DWORD *)(a1 + 28) = v22;
    if (!v21) {
      goto LABEL_39;
    }
LABEL_30:
    if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 >> 3 == 1 && v9 == 8)
  {
    v5 |= 1u;
    unsigned int v19 = v8 + 1;
    LODWORD(v18) = *v8;
    if ((v18 & 0x80) == 0) {
      goto LABEL_29;
    }
    int v20 = *v19;
    uint64_t v18 = v18 + (v20 << 7) - 128;
    if ((v20 & 0x80000000) == 0)
    {
      unsigned int v19 = v8 + 2;
LABEL_29:
      uint64_t v25 = v19;
      *(_DWORD *)(a1 + 24) = v18;
      goto LABEL_30;
    }
    uint64_t v23 = (char *)sub_188C138((uint64_t)v8, v18);
    uint64_t v25 = v23;
    *(_DWORD *)(a1 + 24) = v24;
    if (!v23) {
      goto LABEL_39;
    }
    goto LABEL_30;
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      uint64_t v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = v25;
    }
    uint64_t v25 = (char *)sub_1885AC0(v9, v14, v8, a3);
    if (!v25) {
      goto LABEL_39;
    }
    goto LABEL_30;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_39:
  uint64_t v25 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v25;
}

unsigned char *sub_12F3994(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 28);
    unsigned char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    uint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    uint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_12F3B38(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_14;
  }
  if (v1)
  {
    int v3 = *(_DWORD *)(a1 + 24);
    if (v3 < 0)
    {
      uint64_t v2 = 11;
      if ((v1 & 2) == 0) {
        goto LABEL_14;
      }
    }
    else
    {
      uint64_t v2 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v1 & 2) == 0) {
        goto LABEL_14;
      }
    }
  }
  else
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_14;
    }
  }
  int v4 = *(_DWORD *)(a1 + 28);
  if (v4 < 0) {
    uint64_t v5 = 11;
  }
  else {
    uint64_t v5 = ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v2 += v5;
LABEL_14:
  uint64_t v6 = *(void *)(a1 + 8);
  if (v6)
  {
    unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v8 + 31) < 0) {
      uint64_t v9 = *(void *)(v8 + 16);
    }
    else {
      uint64_t v9 = *(unsigned __int8 *)(v8 + 31);
    }
    v2 += v9;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_12F3BF8()
{
  return 1;
}

void *sub_12F3C00@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap.ZilchPointMetadata.ZilchPointSegment");
}

void *sub_12F3C10(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_13021F8(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12F3C90(void *a1)
{
  sub_12F3C10(a1);

  operator delete();
}

uint64_t sub_12F3CC8(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    int v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_12F2F4C(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = v1 + 8;
  *(_DWORD *)(v5 + 40) = 0;
  *(_DWORD *)(v5 + 8) = 0;
  if (v6)
  {
    return sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

char *sub_12F3D4C(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v26 = a2;
  if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
    return v26;
  }
  char v6 = (void *)(a1 + 8);
  while (1)
  {
    unint64_t v7 = v26 + 1;
    unsigned int v8 = *v26;
    if (*v26 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        unint64_t v7 = (char *)sub_188C180((uint64_t)v26, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        unint64_t v7 = v26 + 2;
      }
    }
    int v26 = v7;
    if (v8 >> 3 == 2)
    {
      if (v8 == 18)
      {
        uint64_t v14 = v7 - 1;
        while (1)
        {
          unint64_t v15 = (unsigned __int8 *)(v14 + 1);
          int v26 = v14 + 1;
          uint64_t v16 = *(_DWORD **)(a1 + 40);
          if (v16 && (uint64_t v17 = *(int *)(a1 + 32), (int)v17 < *v16))
          {
            *(_DWORD *)(a1 + 32) = v17 + 1;
            uint64_t v18 = *(void *)&v16[2 * v17 + 2];
          }
          else
          {
            uint64_t v19 = sub_12F8678(*(void *)(a1 + 24));
            uint64_t v18 = sub_188CDC8(a1 + 24, v19);
            unint64_t v15 = (unsigned __int8 *)v26;
          }
          uint64_t v14 = sub_12F3FA4(a3, v18, v15);
          int v26 = v14;
          if (!v14) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v14 || *v14 != 18) {
            goto LABEL_37;
          }
        }
      }
    }
    else if (v8 >> 3 == 1 && v8 == 8)
    {
      int v20 = v7 + 1;
      unint64_t v21 = *v7;
      if ((*v7 & 0x80000000) == 0) {
        goto LABEL_34;
      }
      int v22 = *v20;
      int v23 = v21 + (v22 << 7);
      unint64_t v21 = (v23 - 128);
      if (v22 < 0)
      {
        int v26 = (char *)sub_188C138((uint64_t)v7, (v23 - 128));
        if (!v26) {
          return 0;
        }
        unint64_t v21 = v24;
      }
      else
      {
        int v20 = v7 + 2;
LABEL_34:
        int v26 = v20;
      }
      if (v21 > 3)
      {
        if (*v6) {
          uint64_t v25 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          uint64_t v25 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        sub_188C020(1, v21, v25);
      }
      else
      {
        *(_DWORD *)(a1 + 16) |= 1u;
        *(_DWORD *)(a1 + 48) = v21;
      }
      goto LABEL_37;
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unint64_t v7 = v26;
    }
    int v26 = (char *)sub_1885AC0(v8, v13, v7, a3);
    if (!v26) {
      return 0;
    }
LABEL_37:
    if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
      return v26;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v26;
  }
  return 0;
}

char *sub_12F3FA4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12F2FF0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_12F4034(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v6 = *(int *)(a1 + 48);
    char *v4 = 8;
    v4[1] = v6;
    if (v6 > 0x7F)
    {
      v4[1] = v6 | 0x80;
      unint64_t v7 = v6 >> 7;
      v4[2] = v6 >> 7;
      v4 += 3;
      if (v6 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v8 = v7 >> 14;
          v7 >>= 7;
          *v4++ = v7;
        }
        while (v8);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v9 = *(_DWORD *)(a1 + 32);
  if (v9)
  {
    for (int i = 0; i != v9; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v11 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      char *v4 = 18;
      unsigned int v12 = *(_DWORD *)(v11 + 64);
      v4[1] = v12;
      if (v12 > 0x7F) {
        uint64_t v13 = sub_188A9CC(v12, v4 + 1);
      }
      else {
        uint64_t v13 = v4 + 2;
      }
      uint64_t v4 = sub_12F32C8(v11, v13, a3);
    }
  }
  uint64_t v14 = *(void *)(a1 + 8);
  if ((v14 & 1) == 0) {
    return v4;
  }
  unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v16 + 31) < 0)
  {
    uint64_t v17 = *(void **)(v16 + 8);
    uint64_t v18 = *(void *)(v16 + 16);
  }
  else
  {
    uint64_t v17 = (void *)(v16 + 8);
    LODWORD(v18) = *(unsigned __int8 *)(v16 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v18)
  {
    uint64_t v19 = (int)v18;
    memcpy(v4, v17, (int)v18);
    v4 += v19;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v17, v18, v4);
}

uint64_t sub_12F41F8(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_12F3490(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  if (*(unsigned char *)(a1 + 16))
  {
    int v8 = *(_DWORD *)(a1 + 48);
    if (v8 < 0) {
      uint64_t v9 = 11;
    }
    else {
      uint64_t v9 = ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v9;
  }
  uint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v12 + 31) < 0) {
      uint64_t v13 = *(void *)(v12 + 16);
    }
    else {
      uint64_t v13 = *(unsigned __int8 *)(v12 + 31);
    }
    v2 += v13;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_12F42E0(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = (std::string *)sub_13023FC((uint64_t *)&v3[1], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2]- LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    int v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *int v8 = v7;
    }
  }
  if (*(unsigned char *)(a2 + 16))
  {
    int v9 = *(_DWORD *)(a2 + 48);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
    LODWORD(v3[2].__r_.__value_.__l.__data_) = v9;
  }
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_12F43CC()
{
  return 1;
}

void *sub_12F43D4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap.ZilchPointMetadata");
}

void *sub_12F43E4(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12F4458(void *a1)
{
  sub_12F43E4(a1);

  operator delete();
}

uint64_t sub_12F4490(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 0x3F) != 0)
  {
    *(void *)(a1 + 24) = 0;
    *(void *)(a1 + 32) = 0;
    *(void *)(a1 + 40) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_12F44B8(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v39 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v39, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (2)
  {
    int v8 = v39 + 1;
    unsigned int v9 = *v39;
    if (*v39 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        int v8 = (char *)sub_188C180((uint64_t)v39, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        int v8 = v39 + 2;
      }
    }
    unint64_t v39 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 13) {
          goto LABEL_36;
        }
        v5 |= 1u;
        *(_DWORD *)(a1 + 24) = *(_DWORD *)v8;
        unint64_t v39 = v8 + 4;
        goto LABEL_43;
      case 2u:
        if (v9 != 16) {
          goto LABEL_36;
        }
        v5 |= 2u;
        unint64_t v12 = v8 + 1;
        int v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_15;
        }
        int v14 = *v12;
        int v13 = v13 + (v14 << 7) - 128;
        if (v14 < 0)
        {
          uint64_t v29 = (char *)sub_188C0D0((uint64_t)v8, v13);
          unint64_t v39 = v29;
          *(_DWORD *)(a1 + 28) = v30;
          if (!v29) {
            goto LABEL_58;
          }
        }
        else
        {
          unint64_t v12 = v8 + 2;
LABEL_15:
          unint64_t v39 = v12;
          *(_DWORD *)(a1 + 28) = v13;
        }
        goto LABEL_43;
      case 3u:
        if (v9 != 24) {
          goto LABEL_36;
        }
        v5 |= 4u;
        unint64_t v15 = v8 + 1;
        int v16 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_20;
        }
        int v17 = *v15;
        int v16 = v16 + (v17 << 7) - 128;
        if (v17 < 0)
        {
          uint64_t v31 = (char *)sub_188C0D0((uint64_t)v8, v16);
          unint64_t v39 = v31;
          *(_DWORD *)(a1 + 32) = v32;
          if (!v31) {
            goto LABEL_58;
          }
        }
        else
        {
          unint64_t v15 = v8 + 2;
LABEL_20:
          unint64_t v39 = v15;
          *(_DWORD *)(a1 + 32) = v16;
        }
        goto LABEL_43;
      case 4u:
        if (v9 != 32) {
          goto LABEL_36;
        }
        v5 |= 8u;
        uint64_t v18 = v8 + 1;
        int v19 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_25;
        }
        int v20 = *v18;
        int v19 = v19 + (v20 << 7) - 128;
        if (v20 < 0)
        {
          uint64_t v33 = (char *)sub_188C0D0((uint64_t)v8, v19);
          unint64_t v39 = v33;
          *(_DWORD *)(a1 + 36) = v34;
          if (!v33) {
            goto LABEL_58;
          }
        }
        else
        {
          uint64_t v18 = v8 + 2;
LABEL_25:
          unint64_t v39 = v18;
          *(_DWORD *)(a1 + 36) = v19;
        }
        goto LABEL_43;
      case 5u:
        if (v9 != 40) {
          goto LABEL_36;
        }
        v5 |= 0x10u;
        unint64_t v21 = v8 + 1;
        int v22 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_30;
        }
        int v23 = *v21;
        int v22 = v22 + (v23 << 7) - 128;
        if (v23 < 0)
        {
          uint64_t v35 = (char *)sub_188C0D0((uint64_t)v8, v22);
          unint64_t v39 = v35;
          *(_DWORD *)(a1 + 40) = v36;
          if (!v35) {
            goto LABEL_58;
          }
        }
        else
        {
          unint64_t v21 = v8 + 2;
LABEL_30:
          unint64_t v39 = v21;
          *(_DWORD *)(a1 + 40) = v22;
        }
        goto LABEL_43;
      case 6u:
        if (v9 != 48) {
          goto LABEL_36;
        }
        v5 |= 0x20u;
        unint64_t v24 = v8 + 1;
        int v25 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_35;
        }
        int v26 = *v24;
        int v25 = v25 + (v26 << 7) - 128;
        if (v26 < 0)
        {
          uint64_t v37 = (char *)sub_188C0D0((uint64_t)v8, v25);
          unint64_t v39 = v37;
          *(_DWORD *)(a1 + 44) = v38;
          if (!v37) {
            goto LABEL_58;
          }
        }
        else
        {
          unint64_t v24 = v8 + 2;
LABEL_35:
          unint64_t v39 = v24;
          *(_DWORD *)(a1 + 44) = v25;
        }
        goto LABEL_43;
      default:
LABEL_36:
        if (v9) {
          BOOL v27 = (v9 & 7) == 4;
        }
        else {
          BOOL v27 = 1;
        }
        if (!v27)
        {
          if (*v7)
          {
            uint64_t v28 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v28 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            int v8 = v39;
          }
          unint64_t v39 = (char *)sub_1885AC0(v9, v28, v8, a3);
          if (!v39) {
            goto LABEL_58;
          }
LABEL_43:
          if (sub_11947B8((uint64_t)a3, &v39, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_58:
        }
          unint64_t v39 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v39;
    }
  }
}

unsigned char *sub_12F4814(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    int v7 = *(_DWORD *)(a1 + 24);
    unsigned char *v4 = 13;
    *(_DWORD *)(v4 + 1) = v7;
    v4 += 5;
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v8 = *(_DWORD *)(a1 + 28);
    unsigned char *v4 = 16;
    v4[1] = v8;
    if (v8 > 0x7F)
    {
      v4[1] = v8 | 0x80;
      unsigned int v9 = v8 >> 7;
      v4[2] = v8 >> 7;
      v4 += 3;
      if (v8 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v10 = v9 >> 14;
          v9 >>= 7;
          *v4++ = v9;
        }
        while (v10);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v11 = *(_DWORD *)(a1 + 32);
    unsigned char *v4 = 24;
    v4[1] = v11;
    if (v11 > 0x7F)
    {
      v4[1] = v11 | 0x80;
      unsigned int v12 = v11 >> 7;
      v4[2] = v11 >> 7;
      v4 += 3;
      if (v11 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v13 = v12 >> 14;
          v12 >>= 7;
          *v4++ = v12;
        }
        while (v13);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v14 = *(_DWORD *)(a1 + 36);
    unsigned char *v4 = 32;
    v4[1] = v14;
    if (v14 > 0x7F)
    {
      v4[1] = v14 | 0x80;
      unsigned int v15 = v14 >> 7;
      v4[2] = v14 >> 7;
      v4 += 3;
      if (v14 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v16 = v15 >> 14;
          v15 >>= 7;
          *v4++ = v15;
        }
        while (v16);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v17 = *(_DWORD *)(a1 + 40);
    unsigned char *v4 = 40;
    v4[1] = v17;
    if (v17 > 0x7F)
    {
      v4[1] = v17 | 0x80;
      unsigned int v18 = v17 >> 7;
      v4[2] = v17 >> 7;
      v4 += 3;
      if (v17 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v19 = v18 >> 14;
          v18 >>= 7;
          *v4++ = v18;
        }
        while (v19);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x20) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v20 = *(_DWORD *)(a1 + 44);
    unsigned char *v4 = 48;
    v4[1] = v20;
    if (v20 > 0x7F)
    {
      v4[1] = v20 | 0x80;
      unsigned int v21 = v20 >> 7;
      v4[2] = v20 >> 7;
      v4 += 3;
      if (v20 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v22 = v21 >> 14;
          v21 >>= 7;
          *v4++ = v21;
        }
        while (v22);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v23 = *(void *)(a1 + 8);
  if ((v23 & 1) == 0) {
    return v4;
  }
  unint64_t v25 = v23 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v25 + 31) < 0)
  {
    int v26 = *(void **)(v25 + 8);
    uint64_t v27 = *(void *)(v25 + 16);
  }
  else
  {
    int v26 = (void *)(v25 + 8);
    LODWORD(v27) = *(unsigned __int8 *)(v25 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v27)
  {
    uint64_t v28 = (int)v27;
    memcpy(v4, v26, (int)v27);
    v4 += v28;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v26, v27, v4);
}

uint64_t sub_12F4B64(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 0x3F) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_16;
  }
  uint64_t v2 = 5;
  if ((v1 & 1) == 0) {
    uint64_t v2 = 0;
  }
  if ((v1 & 2) != 0)
  {
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 28) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 4) == 0)
    {
LABEL_6:
      if ((v1 & 8) == 0) {
        goto LABEL_7;
      }
      goto LABEL_13;
    }
  }
  else if ((v1 & 4) == 0)
  {
    goto LABEL_6;
  }
  v2 += ((9 * (__clz(*(_DWORD *)(a1 + 32) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 8) == 0)
  {
LABEL_7:
    if ((v1 & 0x10) == 0) {
      goto LABEL_8;
    }
LABEL_14:
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 40) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 0x20) == 0) {
      goto LABEL_16;
    }
    goto LABEL_15;
  }
LABEL_13:
  v2 += ((9 * (__clz(*(_DWORD *)(a1 + 36) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 0x10) != 0) {
    goto LABEL_14;
  }
LABEL_8:
  if ((v1 & 0x20) != 0) {
LABEL_15:
  }
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 44) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_16:
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v5 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    v2 += v6;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_12F4C98(std::string *result, uint64_t a2)
{
  int v2 = *(_DWORD *)(a2 + 16);
  if ((v2 & 0x3F) == 0) {
    goto LABEL_10;
  }
  if (v2)
  {
    LODWORD(result[1].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 24);
    if ((v2 & 2) == 0)
    {
LABEL_4:
      if ((v2 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_14;
    }
  }
  else if ((v2 & 2) == 0)
  {
    goto LABEL_4;
  }
  HIDWORD(result[1].__r_.__value_.__r.__words[0]) = *(_DWORD *)(a2 + 28);
  if ((v2 & 4) == 0)
  {
LABEL_5:
    if ((v2 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_15;
  }
LABEL_14:
  LODWORD(result[1].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 32);
  if ((v2 & 8) == 0)
  {
LABEL_6:
    if ((v2 & 0x10) == 0) {
      goto LABEL_7;
    }
LABEL_16:
    LODWORD(result[1].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 40);
    if ((v2 & 0x20) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
LABEL_15:
  HIDWORD(result[1].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 36);
  if ((v2 & 0x10) != 0) {
    goto LABEL_16;
  }
LABEL_7:
  if ((v2 & 0x20) != 0) {
LABEL_8:
  }
    HIDWORD(result[1].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 44);
LABEL_9:
  LODWORD(result->__r_.__value_.__r.__words[2]) |= v2;
LABEL_10:
  uint64_t v3 = *(void *)(a2 + 8);
  if (v3) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v3 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_12F4D2C()
{
  return 1;
}

void *sub_12F4D34@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap.UserCredibility.UnderlyingData");
}

uint64_t sub_12F4D44(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_2532060)
  {
    uint64_t v6 = *(void **)(a1 + 24);
    if (v6)
    {
      sub_12F43E4(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12F4DFC(uint64_t a1)
{
  sub_12F4D44(a1);

  operator delete();
}

char *sub_12F4E34(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v28 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v28, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (2)
  {
    unsigned int v8 = v28 + 1;
    unsigned int v9 = *v28;
    if (*v28 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unsigned int v8 = (char *)sub_188C180((uint64_t)v28, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unsigned int v8 = v28 + 2;
      }
    }
    uint64_t v28 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_27;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 24);
        if (!v12)
        {
          unsigned int v13 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            unsigned int v13 = (void *)*v13;
          }
          sub_12F8830((uint64_t)v13);
          uint64_t v12 = v14;
          *(void *)(a1 + 24) = v14;
          unsigned int v8 = v28;
        }
        unsigned int v15 = sub_12F50D4(a3, v12, (unsigned __int8 *)v8);
        goto LABEL_34;
      case 2u:
        if (v9 != 21) {
          goto LABEL_27;
        }
        v5 |= 2u;
        *(_DWORD *)(a1 + 32) = *(_DWORD *)v8;
        uint64_t v28 = v8 + 4;
        goto LABEL_35;
      case 3u:
        if (v9 != 24) {
          goto LABEL_27;
        }
        v5 |= 4u;
        unsigned int v16 = v8 + 1;
        int v17 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_21;
        }
        int v18 = *v16;
        int v17 = v17 + (v18 << 7) - 128;
        if (v18 < 0)
        {
          unint64_t v24 = (char *)sub_188C0D0((uint64_t)v8, v17);
          uint64_t v28 = v24;
          *(_DWORD *)(a1 + 36) = v25;
          if (!v24) {
            goto LABEL_44;
          }
        }
        else
        {
          unsigned int v16 = v8 + 2;
LABEL_21:
          uint64_t v28 = v16;
          *(_DWORD *)(a1 + 36) = v17;
        }
        goto LABEL_35;
      case 4u:
        if (v9 != 32) {
          goto LABEL_27;
        }
        v5 |= 8u;
        unsigned int v19 = v8 + 1;
        uint64_t v20 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_26;
        }
        int v21 = *v19;
        uint64_t v20 = v20 + (v21 << 7) - 128;
        if (v21 < 0)
        {
          int v26 = (char *)sub_188C138((uint64_t)v8, v20);
          uint64_t v28 = v26;
          *(unsigned char *)(a1 + 40) = v27 != 0;
          if (!v26) {
            goto LABEL_44;
          }
        }
        else
        {
          unsigned int v19 = v8 + 2;
LABEL_26:
          uint64_t v28 = v19;
          *(unsigned char *)(a1 + 40) = v20 != 0;
        }
        goto LABEL_35;
      default:
LABEL_27:
        if (v9) {
          BOOL v22 = (v9 & 7) == 4;
        }
        else {
          BOOL v22 = 1;
        }
        if (!v22)
        {
          if (*v7)
          {
            uint64_t v23 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v23 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unsigned int v8 = v28;
          }
          unsigned int v15 = (char *)sub_1885AC0(v9, v23, v8, a3);
LABEL_34:
          uint64_t v28 = v15;
          if (!v15) {
            goto LABEL_44;
          }
LABEL_35:
          if (sub_11947B8((uint64_t)a3, &v28, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_44:
        }
          uint64_t v28 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v28;
    }
  }
}

char *sub_12F50D4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12F44B8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_12F5164(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    unsigned char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    int v4 = sub_12F4814(v7, (unint64_t)v9, a3);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_20;
      }
      goto LABEL_14;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  int v10 = *(_DWORD *)(a1 + 32);
  unsigned char *v4 = 21;
  *(_DWORD *)(v4 + 1) = v10;
  v4 += 5;
  if ((v6 & 4) != 0)
  {
LABEL_14:
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v11 = *(_DWORD *)(a1 + 36);
    unsigned char *v4 = 24;
    v4[1] = v11;
    if (v11 > 0x7F)
    {
      v4[1] = v11 | 0x80;
      unsigned int v12 = v11 >> 7;
      v4[2] = v11 >> 7;
      v4 += 3;
      if (v11 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v13 = v12 >> 14;
          v12 >>= 7;
          *v4++ = v12;
        }
        while (v13);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_20:
  if ((v6 & 8) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v14 = *(unsigned char *)(a1 + 40);
    unsigned char *v4 = 32;
    v4[1] = v14;
    v4 += 2;
  }
  uint64_t v15 = *(void *)(a1 + 8);
  if ((v15 & 1) == 0) {
    return v4;
  }
  unint64_t v17 = v15 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v17 + 31) < 0)
  {
    int v18 = *(void **)(v17 + 8);
    uint64_t v19 = *(void *)(v17 + 16);
  }
  else
  {
    int v18 = (void *)(v17 + 8);
    LODWORD(v19) = *(unsigned __int8 *)(v17 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v19)
  {
    uint64_t v20 = (int)v19;
    memcpy(v4, v18, (int)v19);
    v4 += v20;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v18, v19, v4);
}

uint64_t sub_12F5378(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0xF) != 0)
  {
    if (v2)
    {
      uint64_t v5 = sub_12F4B64(*(void *)(a1 + 24));
      uint64_t v3 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    else
    {
      uint64_t v3 = 0;
    }
    if ((v2 & 2) != 0) {
      v3 += 5;
    }
    if ((v2 & 4) != 0) {
      v3 += ((9 * (__clz(*(_DWORD *)(a1 + 36) | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v2 & 8) != 0) {
      uint64_t result = v3 + 2;
    }
    else {
      uint64_t result = v3;
    }
  }
  else
  {
    uint64_t result = 0;
  }
  uint64_t v6 = *(void *)(a1 + 8);
  if (v6)
  {
    unint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v7 + 31) < 0) {
      uint64_t v8 = *(void *)(v7 + 16);
    }
    else {
      uint64_t v8 = *(unsigned __int8 *)(v7 + 31);
    }
    result += v8;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

uint64_t sub_12F5450()
{
  return 1;
}

void *sub_12F5458@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap.UserCredibility");
}

uint64_t sub_12F5468(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  sub_1889DE8((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12F5510(uint64_t a1)
{
  sub_12F5468(a1);

  operator delete();
}

uint64_t sub_12F5548(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v37 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v37, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (uint64_t **)(a1 + 24);
  uint64_t v8 = (void *)(a1 + 8);
  while (2)
  {
    unsigned int v9 = (char *)(*(void *)v37 + 1);
    unsigned int v10 = **(unsigned char **)v37;
    if ((char)**(unsigned char **)v37 < 0)
    {
      unsigned int v11 = v10 + (*v9 << 7);
      unsigned int v10 = v11 - 128;
      if (*v9 < 0)
      {
        unsigned int v9 = (char *)sub_188C180(*(uint64_t *)v37, v11 - 128);
        unsigned int v10 = v12;
      }
      else
      {
        unsigned int v9 = (char *)(*(void *)v37 + 2);
      }
    }
    *(void *)uint64_t v37 = v9;
    switch(v10 >> 3)
    {
      case 1u:
        if (v10 != 8) {
          goto LABEL_37;
        }
        unsigned int v13 = v9 + 1;
        unint64_t v14 = *v9;
        if ((*v9 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v15 = *v13;
        int v16 = v14 + (v15 << 7);
        unint64_t v14 = (v16 - 128);
        if (v15 < 0)
        {
          *(void *)uint64_t v37 = sub_188C138((uint64_t)v9, (v16 - 128));
          if (!*(void *)v37) {
            goto LABEL_58;
          }
          unint64_t v14 = v33;
        }
        else
        {
          unsigned int v13 = v9 + 2;
LABEL_13:
          *(void *)uint64_t v37 = v13;
        }
        if (v14 > 2)
        {
          if (*v8) {
            int v36 = (std::string *)((*v8 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            int v36 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(1, v14, v36);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 2u;
          *(_DWORD *)(a1 + 56) = v14;
        }
        goto LABEL_45;
      case 2u:
        if (v10 != 16) {
          goto LABEL_37;
        }
        v5 |= 4u;
        unint64_t v17 = v9 + 1;
        uint64_t v18 = *v9;
        if ((*v9 & 0x80000000) == 0) {
          goto LABEL_20;
        }
        int v19 = *v17;
        uint64_t v18 = v18 + (v19 << 7) - 128;
        if (v19 < 0)
        {
          uint64_t v34 = sub_188C138((uint64_t)v9, v18);
          *(void *)uint64_t v37 = v34;
          *(unsigned char *)(a1 + 60) = v35 != 0;
          if (!v34) {
            goto LABEL_58;
          }
        }
        else
        {
          unint64_t v17 = v9 + 2;
LABEL_20:
          *(void *)uint64_t v37 = v17;
          *(unsigned char *)(a1 + 60) = v18 != 0;
        }
        goto LABEL_45;
      case 3u:
        if (v10 != 26) {
          goto LABEL_37;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v20 = *(void *)(a1 + 8);
        int v21 = (uint64_t *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
        if (v20) {
          int v21 = (uint64_t *)*v21;
        }
        BOOL v22 = (std::string *)sub_1880F84((void *)(a1 + 48), v21);
        uint64_t v23 = (void *)sub_188C244(v22, *(char **)v37, (uint64_t)a3);
        goto LABEL_44;
      case 4u:
        if (v10 != 34) {
          goto LABEL_37;
        }
        unint64_t v24 = v9 - 1;
        while (1)
        {
          int v25 = (char *)(v24 + 1);
          *(void *)uint64_t v37 = v24 + 1;
          int v26 = *(_DWORD **)(a1 + 40);
          if (v26 && (uint64_t v27 = *(int *)(a1 + 32), (int)v27 < *v26))
          {
            *(_DWORD *)(a1 + 32) = v27 + 1;
            uint64_t v28 = *(std::string **)&v26[2 * v27 + 2];
          }
          else
          {
            if (!*v7) {
              operator new();
            }
            *int v30 = v29;
            v30[1] = sub_3A6EDC;
            *uint64_t v29 = 0;
            v29[1] = 0;
            int v29[2] = 0;
            uint64_t v28 = (std::string *)sub_188CDC8(a1 + 24, (uint64_t)v29);
            int v25 = *(char **)v37;
          }
          unint64_t v24 = sub_188C244(v28, v25, (uint64_t)a3);
          *(void *)uint64_t v37 = v24;
          if (!v24) {
            goto LABEL_58;
          }
          if (*(void *)a3 <= (unint64_t)v24 || *v24 != 34) {
            goto LABEL_45;
          }
        }
      default:
LABEL_37:
        if (v10) {
          BOOL v31 = (v10 & 7) == 4;
        }
        else {
          BOOL v31 = 1;
        }
        if (!v31)
        {
          if (*v8)
          {
            int v32 = (std::string *)((*v8 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            int v32 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unsigned int v9 = *(char **)v37;
          }
          uint64_t v23 = sub_1885AC0(v10, v32, v9, a3);
LABEL_44:
          *(void *)uint64_t v37 = v23;
          if (!v23) {
            goto LABEL_58;
          }
LABEL_45:
          if (sub_11947B8((uint64_t)a3, (char **)v37, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v9) {
          a3[10].i32[0] = v10 - 1;
        }
        else {
LABEL_58:
        }
          *(void *)uint64_t v37 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v37;
    }
  }
}

char *sub_12F58E8(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  int v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*a3 <= __dst) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 56);
    char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v10 = *(unsigned char *)(a1 + 60);
    char *v4 = 16;
    v4[1] = v10;
    v4 += 2;
  }
  if (v6) {
    int v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v11 = *(unsigned int *)(a1 + 32);
  if ((int)v11 >= 1)
  {
    uint64_t v12 = 0;
    uint64_t v13 = 8 * v11;
    do
    {
      unint64_t v14 = *(void **)(*(void *)(a1 + 40) + v12 + 8);
      if (*((char *)v14 + 23) < 0)
      {
        int64_t v15 = v14[1];
        if (v15 > 127) {
          goto LABEL_25;
        }
      }
      else
      {
        int64_t v15 = *((unsigned __int8 *)v14 + 23);
      }
      if ((uint64_t)(*a3 - (void)v4 + 14) >= v15)
      {
        char *v4 = 34;
        v4[1] = v15;
        if (*((char *)v14 + 23) < 0) {
          unint64_t v14 = (void *)*v14;
        }
        int v16 = v4 + 2;
        memcpy(v16, v14, v15);
        int v4 = &v16[v15];
        goto LABEL_23;
      }
LABEL_25:
      int v4 = (char *)sub_188A868(a3, 4, (uint64_t)v14, v4);
LABEL_23:
      v12 += 8;
    }
    while (v13 != v12);
  }
  uint64_t v17 = *(void *)(a1 + 8);
  if ((v17 & 1) == 0) {
    return v4;
  }
  unint64_t v19 = v17 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v19 + 31) < 0)
  {
    uint64_t v20 = *(void **)(v19 + 8);
    uint64_t v21 = *(void *)(v19 + 16);
  }
  else
  {
    uint64_t v20 = (void *)(v19 + 8);
    LODWORD(v21) = *(unsigned __int8 *)(v19 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v21)
  {
    uint64_t v22 = (int)v21;
    memcpy(v4, v20, (int)v21);
    v4 += v22;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v20, v21, v4);
}

uint64_t sub_12F5B28(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 32);
  if ((int)v1 < 1)
  {
    uint64_t v3 = *(unsigned int *)(a1 + 32);
  }
  else
  {
    uint64_t v2 = (uint64_t *)(*(void *)(a1 + 40) + 8);
    uint64_t v3 = *(unsigned int *)(a1 + 32);
    do
    {
      uint64_t v4 = *v2++;
      uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
      uint64_t v6 = *(void *)(v4 + 8);
      if ((v5 & 0x80u) == 0) {
        uint64_t v6 = v5;
      }
      v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6);
      --v1;
    }
    while (v1);
  }
  int v7 = *(_DWORD *)(a1 + 16);
  if ((v7 & 7) != 0)
  {
    if (v7)
    {
      unint64_t v8 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v9 = *(unsigned __int8 *)(v8 + 23);
      uint64_t v10 = *(void *)(v8 + 8);
      if ((v9 & 0x80u) == 0) {
        uint64_t v10 = v9;
      }
      v3 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v7 & 2) != 0)
    {
      int v11 = *(_DWORD *)(a1 + 56);
      if (v11 < 0) {
        uint64_t v12 = 11;
      }
      else {
        uint64_t v12 = ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
      v3 += v12;
    }
    if ((v7 & 4) != 0) {
      v3 += 2;
    }
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if (v13)
  {
    unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v15 + 31) < 0) {
      uint64_t v16 = *(void *)(v15 + 16);
    }
    else {
      uint64_t v16 = *(unsigned __int8 *)(v15 + 31);
    }
    v3 += v16;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

uint64_t sub_12F5C50()
{
  return 1;
}

void *sub_12F5C58@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap.HighPriorityDetection");
}

uint64_t sub_12F5C68(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  sub_1889DE8((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12F5D10(uint64_t a1)
{
  sub_12F5C68(a1);

  operator delete();
}

uint64_t sub_12F5D48(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v37 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v37, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (uint64_t **)(a1 + 24);
  unint64_t v8 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v9 = (char *)(*(void *)v37 + 1);
    unsigned int v10 = **(unsigned char **)v37;
    if ((char)**(unsigned char **)v37 < 0)
    {
      unsigned int v11 = v10 + (*v9 << 7);
      unsigned int v10 = v11 - 128;
      if (*v9 < 0)
      {
        uint64_t v9 = (char *)sub_188C180(*(uint64_t *)v37, v11 - 128);
        unsigned int v10 = v12;
      }
      else
      {
        uint64_t v9 = (char *)(*(void *)v37 + 2);
      }
    }
    *(void *)uint64_t v37 = v9;
    switch(v10 >> 3)
    {
      case 1u:
        if (v10 != 8) {
          goto LABEL_37;
        }
        uint64_t v13 = v9 + 1;
        unint64_t v14 = *v9;
        if ((*v9 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v15 = *v13;
        int v16 = v14 + (v15 << 7);
        unint64_t v14 = (v16 - 128);
        if (v15 < 0)
        {
          *(void *)uint64_t v37 = sub_188C138((uint64_t)v9, (v16 - 128));
          if (!*(void *)v37) {
            goto LABEL_58;
          }
          unint64_t v14 = v33;
        }
        else
        {
          uint64_t v13 = v9 + 2;
LABEL_13:
          *(void *)uint64_t v37 = v13;
        }
        if (v14 > 3)
        {
          if (*v8) {
            int v36 = (std::string *)((*v8 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            int v36 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(1, v14, v36);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 2u;
          *(_DWORD *)(a1 + 56) = v14;
        }
        goto LABEL_45;
      case 2u:
        if (v10 != 16) {
          goto LABEL_37;
        }
        v5 |= 4u;
        uint64_t v17 = v9 + 1;
        uint64_t v18 = *v9;
        if ((*v9 & 0x80000000) == 0) {
          goto LABEL_20;
        }
        int v19 = *v17;
        uint64_t v18 = v18 + (v19 << 7) - 128;
        if (v19 < 0)
        {
          uint64_t v34 = sub_188C138((uint64_t)v9, v18);
          *(void *)uint64_t v37 = v34;
          *(unsigned char *)(a1 + 60) = v35 != 0;
          if (!v34) {
            goto LABEL_58;
          }
        }
        else
        {
          uint64_t v17 = v9 + 2;
LABEL_20:
          *(void *)uint64_t v37 = v17;
          *(unsigned char *)(a1 + 60) = v18 != 0;
        }
        goto LABEL_45;
      case 3u:
        if (v10 != 26) {
          goto LABEL_37;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v20 = *(void *)(a1 + 8);
        uint64_t v21 = (uint64_t *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
        if (v20) {
          uint64_t v21 = (uint64_t *)*v21;
        }
        uint64_t v22 = (std::string *)sub_1880F84((void *)(a1 + 48), v21);
        uint64_t v23 = (void *)sub_188C244(v22, *(char **)v37, (uint64_t)a3);
        goto LABEL_44;
      case 4u:
        if (v10 != 34) {
          goto LABEL_37;
        }
        unint64_t v24 = v9 - 1;
        while (1)
        {
          int v25 = (char *)(v24 + 1);
          *(void *)uint64_t v37 = v24 + 1;
          int v26 = *(_DWORD **)(a1 + 40);
          if (v26 && (uint64_t v27 = *(int *)(a1 + 32), (int)v27 < *v26))
          {
            *(_DWORD *)(a1 + 32) = v27 + 1;
            uint64_t v28 = *(std::string **)&v26[2 * v27 + 2];
          }
          else
          {
            if (!*v7) {
              operator new();
            }
            *int v30 = v29;
            v30[1] = sub_3A6EDC;
            *uint64_t v29 = 0;
            v29[1] = 0;
            int v29[2] = 0;
            uint64_t v28 = (std::string *)sub_188CDC8(a1 + 24, (uint64_t)v29);
            int v25 = *(char **)v37;
          }
          unint64_t v24 = sub_188C244(v28, v25, (uint64_t)a3);
          *(void *)uint64_t v37 = v24;
          if (!v24) {
            goto LABEL_58;
          }
          if (*(void *)a3 <= (unint64_t)v24 || *v24 != 34) {
            goto LABEL_45;
          }
        }
      default:
LABEL_37:
        if (v10) {
          BOOL v31 = (v10 & 7) == 4;
        }
        else {
          BOOL v31 = 1;
        }
        if (!v31)
        {
          if (*v8)
          {
            int v32 = (std::string *)((*v8 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            int v32 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v9 = *(char **)v37;
          }
          uint64_t v23 = sub_1885AC0(v10, v32, v9, a3);
LABEL_44:
          *(void *)uint64_t v37 = v23;
          if (!v23) {
            goto LABEL_58;
          }
LABEL_45:
          if (sub_11947B8((uint64_t)a3, (char **)v37, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v9) {
          a3[10].i32[0] = v10 - 1;
        }
        else {
LABEL_58:
        }
          *(void *)uint64_t v37 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v37;
    }
  }
}

char *sub_12F60E8(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 56);
    char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v10 = *(unsigned char *)(a1 + 60);
    char *v4 = 16;
    v4[1] = v10;
    v4 += 2;
  }
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v11 = *(unsigned int *)(a1 + 32);
  if ((int)v11 >= 1)
  {
    uint64_t v12 = 0;
    uint64_t v13 = 8 * v11;
    do
    {
      unint64_t v14 = *(void **)(*(void *)(a1 + 40) + v12 + 8);
      if (*((char *)v14 + 23) < 0)
      {
        int64_t v15 = v14[1];
        if (v15 > 127) {
          goto LABEL_25;
        }
      }
      else
      {
        int64_t v15 = *((unsigned __int8 *)v14 + 23);
      }
      if ((uint64_t)(*a3 - (void)v4 + 14) >= v15)
      {
        char *v4 = 34;
        v4[1] = v15;
        if (*((char *)v14 + 23) < 0) {
          unint64_t v14 = (void *)*v14;
        }
        int v16 = v4 + 2;
        memcpy(v16, v14, v15);
        uint64_t v4 = &v16[v15];
        goto LABEL_23;
      }
LABEL_25:
      uint64_t v4 = (char *)sub_188A868(a3, 4, (uint64_t)v14, v4);
LABEL_23:
      v12 += 8;
    }
    while (v13 != v12);
  }
  uint64_t v17 = *(void *)(a1 + 8);
  if ((v17 & 1) == 0) {
    return v4;
  }
  unint64_t v19 = v17 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v19 + 31) < 0)
  {
    uint64_t v20 = *(void **)(v19 + 8);
    uint64_t v21 = *(void *)(v19 + 16);
  }
  else
  {
    uint64_t v20 = (void *)(v19 + 8);
    LODWORD(v21) = *(unsigned __int8 *)(v19 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v21)
  {
    uint64_t v22 = (int)v21;
    memcpy(v4, v20, (int)v21);
    v4 += v22;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v20, v21, v4);
}

uint64_t sub_12F6328(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 32);
  if ((int)v1 < 1)
  {
    uint64_t v3 = *(unsigned int *)(a1 + 32);
  }
  else
  {
    uint64_t v2 = (uint64_t *)(*(void *)(a1 + 40) + 8);
    uint64_t v3 = *(unsigned int *)(a1 + 32);
    do
    {
      uint64_t v4 = *v2++;
      uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
      uint64_t v6 = *(void *)(v4 + 8);
      if ((v5 & 0x80u) == 0) {
        uint64_t v6 = v5;
      }
      v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6);
      --v1;
    }
    while (v1);
  }
  int v7 = *(_DWORD *)(a1 + 16);
  if ((v7 & 7) != 0)
  {
    if (v7)
    {
      unint64_t v8 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v9 = *(unsigned __int8 *)(v8 + 23);
      uint64_t v10 = *(void *)(v8 + 8);
      if ((v9 & 0x80u) == 0) {
        uint64_t v10 = v9;
      }
      v3 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v7 & 2) != 0)
    {
      int v11 = *(_DWORD *)(a1 + 56);
      if (v11 < 0) {
        uint64_t v12 = 11;
      }
      else {
        uint64_t v12 = ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
      v3 += v12;
    }
    if ((v7 & 4) != 0) {
      v3 += 2;
    }
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if (v13)
  {
    unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v15 + 31) < 0) {
      uint64_t v16 = *(void *)(v15 + 16);
    }
    else {
      uint64_t v16 = *(unsigned __int8 *)(v15 + 31);
    }
    v3 += v16;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

uint64_t sub_12F6450()
{
  return 1;
}

void *sub_12F6458@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap.DuplicateDetection");
}

uint64_t sub_12F6468(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_17;
    }
  }
  else if (v4)
  {
    goto LABEL_17;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(uint64_t **)(a1 + 40) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 40));
  }
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 48));
  }
  if (*(uint64_t **)(a1 + 56) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 56));
  }
  if (*(uint64_t **)(a1 + 64) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 64));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_17:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12F6570(uint64_t a1)
{
  sub_12F6468(a1);

  operator delete();
}

uint64_t sub_12F65A8(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v23 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v23, a3[11].i32[1])) {
    return *(void *)v23;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    int v7 = (char *)(*(void *)v23 + 1);
    unsigned int v8 = **(unsigned char **)v23;
    if ((char)**(unsigned char **)v23 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        int v7 = (char *)sub_188C180(*(uint64_t *)v23, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        int v7 = (char *)(*(void *)v23 + 2);
      }
    }
    *(void *)uint64_t v23 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 10) {
          goto LABEL_37;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v11 = *(void *)(a1 + 8);
        uint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
        if (v11) {
          uint64_t v12 = (uint64_t *)*v12;
        }
        uint64_t v13 = (void *)(a1 + 24);
        goto LABEL_33;
      case 2u:
        if (v8 != 18) {
          goto LABEL_37;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v14 = *(void *)(a1 + 8);
        uint64_t v12 = (uint64_t *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
        if (v14) {
          uint64_t v12 = (uint64_t *)*v12;
        }
        uint64_t v13 = (void *)(a1 + 32);
        goto LABEL_33;
      case 3u:
        if (v8 != 26) {
          goto LABEL_37;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v15 = *(void *)(a1 + 8);
        uint64_t v12 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          uint64_t v12 = (uint64_t *)*v12;
        }
        uint64_t v13 = (void *)(a1 + 40);
        goto LABEL_33;
      case 4u:
        if (v8 != 34) {
          goto LABEL_37;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v16 = *(void *)(a1 + 8);
        uint64_t v12 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
        if (v16) {
          uint64_t v12 = (uint64_t *)*v12;
        }
        uint64_t v13 = (void *)(a1 + 48);
        goto LABEL_33;
      case 5u:
        if (v8 != 42) {
          goto LABEL_37;
        }
        *(_DWORD *)(a1 + 16) |= 0x10u;
        uint64_t v17 = *(void *)(a1 + 8);
        uint64_t v12 = (uint64_t *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
        if (v17) {
          uint64_t v12 = (uint64_t *)*v12;
        }
        uint64_t v13 = (void *)(a1 + 56);
        goto LABEL_33;
      case 6u:
        if (v8 != 50) {
          goto LABEL_37;
        }
        *(_DWORD *)(a1 + 16) |= 0x20u;
        uint64_t v18 = *(void *)(a1 + 8);
        uint64_t v12 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
        if (v18) {
          uint64_t v12 = (uint64_t *)*v12;
        }
        uint64_t v13 = (void *)(a1 + 64);
LABEL_33:
        unint64_t v19 = (std::string *)sub_1880F84(v13, v12);
        uint64_t v20 = (void *)sub_188C244(v19, *(char **)v23, (uint64_t)a3);
        goto LABEL_34;
      default:
LABEL_37:
        if (v8) {
          BOOL v21 = (v8 & 7) == 4;
        }
        else {
          BOOL v21 = 1;
        }
        if (!v21)
        {
          if (*v6)
          {
            uint64_t v22 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v22 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            int v7 = *(char **)v23;
          }
          uint64_t v20 = sub_1885AC0(v8, v22, v7, a3);
LABEL_34:
          *(void *)uint64_t v23 = v20;
          if (!v20) {
            return 0;
          }
          if (sub_11947B8((uint64_t)a3, (char **)v23, a3[11].i32[1])) {
            return *(void *)v23;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return *(void *)v23;
    }
  }
}

char *sub_12F6878(uint64_t a1, char *__dst, void *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
LABEL_12:
  uint64_t v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_14;
  }
LABEL_13:
  uint64_t v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
LABEL_14:
  uint64_t v4 = sub_117A0AC(a3, 5, (const void **)(*(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x20) != 0) {
LABEL_7:
  }
    uint64_t v4 = sub_117A0AC(a3, 6, (const void **)(*(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL), v4);
LABEL_8:
  uint64_t v7 = *(void *)(a1 + 8);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v9 + 31) < 0)
  {
    unsigned int v10 = *(void **)(v9 + 8);
    uint64_t v11 = *(void *)(v9 + 16);
  }
  else
  {
    unsigned int v10 = (void *)(v9 + 8);
    LODWORD(v11) = *(unsigned __int8 *)(v9 + 31);
  }
  if (*a3 - (void)v4 >= (int)v11)
  {
    uint64_t v12 = (int)v11;
    memcpy(v4, v10, (int)v11);
    v4 += v12;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v10, v11, v4);
}

uint64_t sub_12F69FC(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 0x3F) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_19;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
  uint64_t v5 = *(void *)(v3 + 8);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = v4;
  }
  uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    unint64_t v6 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v1 & 4) != 0)
  {
    unint64_t v14 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v15 = *(unsigned __int8 *)(v14 + 23);
    uint64_t v16 = *(void *)(v14 + 8);
    if ((v15 & 0x80u) == 0) {
      uint64_t v16 = v15;
    }
    v2 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 8) == 0)
    {
LABEL_14:
      if ((v1 & 0x10) == 0) {
        goto LABEL_15;
      }
      goto LABEL_27;
    }
  }
  else if ((v1 & 8) == 0)
  {
    goto LABEL_14;
  }
  unint64_t v17 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v18 = *(unsigned __int8 *)(v17 + 23);
  uint64_t v19 = *(void *)(v17 + 8);
  if ((v18 & 0x80u) == 0) {
    uint64_t v19 = v18;
  }
  v2 += v19 + ((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 0x10) == 0)
  {
LABEL_15:
    if ((v1 & 0x20) == 0) {
      goto LABEL_19;
    }
    goto LABEL_16;
  }
LABEL_27:
  unint64_t v20 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v21 = *(unsigned __int8 *)(v20 + 23);
  uint64_t v22 = *(void *)(v20 + 8);
  if ((v21 & 0x80u) == 0) {
    uint64_t v22 = v21;
  }
  v2 += v22 + ((9 * (__clz(v22 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 0x20) != 0)
  {
LABEL_16:
    unint64_t v9 = *(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v10 = *(unsigned __int8 *)(v9 + 23);
    uint64_t v11 = *(void *)(v9 + 8);
    if ((v10 & 0x80u) == 0) {
      uint64_t v11 = v10;
    }
    v2 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_19:
  uint64_t v12 = *(void *)(a1 + 8);
  if (v12)
  {
    unint64_t v23 = v12 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v23 + 31) < 0) {
      uint64_t v24 = *(void *)(v23 + 16);
    }
    else {
      uint64_t v24 = *(unsigned __int8 *)(v23 + 31);
    }
    v2 += v24;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_12F6BF8()
{
  return 1;
}

void *sub_12F6C00@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap.LanceleafVersions");
}

uint64_t sub_12F6C10(uint64_t a1)
{
  unint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12F6CB0(uint64_t a1)
{
  sub_12F6C10(a1);

  operator delete();
}

uint64_t sub_12F6CE8(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v1 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v1 + 23) < 0)
    {
      **(unsigned char **)unint64_t v1 = 0;
      *(void *)(v1 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v1 = 0;
      *(unsigned char *)(v1 + 23) = 0;
    }
  }
  char v3 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 24) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v3) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_12F6D30(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v24 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v24, a3[11].i32[1])) {
    return *(void *)v24;
  }
  unint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = (char *)(*(void *)v24 + 1);
    unsigned int v8 = **(unsigned char **)v24;
    if ((char)**(unsigned char **)v24 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180(*(uint64_t *)v24, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (char *)(*(void *)v24 + 2);
      }
    }
    *(void *)uint64_t v24 = v7;
    if (v8 >> 3 != 2) {
      break;
    }
    if (v8 != 18) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v15 = *(void *)(a1 + 8);
    uint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
    if (v15) {
      uint64_t v16 = (uint64_t *)*v16;
    }
    unint64_t v17 = (std::string *)sub_1880F84((void *)(a1 + 24), v16);
    unint64_t v14 = (void *)sub_188C244(v17, *(char **)v24, (uint64_t)a3);
LABEL_24:
    *(void *)uint64_t v24 = v14;
    if (!v14) {
      goto LABEL_43;
    }
LABEL_32:
    if (sub_11947B8((uint64_t)a3, (char **)v24, a3[11].i32[1])) {
      return *(void *)v24;
    }
  }
  if (v8 >> 3 == 1 && v8 == 8)
  {
    uint64_t v18 = v7 + 1;
    unint64_t v19 = *v7;
    if ((*v7 & 0x80000000) == 0) {
      goto LABEL_29;
    }
    int v20 = *v18;
    int v21 = v19 + (v20 << 7);
    unint64_t v19 = (v21 - 128);
    if (v20 < 0)
    {
      *(void *)uint64_t v24 = sub_188C138((uint64_t)v7, (v21 - 128));
      if (!*(void *)v24) {
        goto LABEL_43;
      }
      unint64_t v19 = v22;
    }
    else
    {
      uint64_t v18 = v7 + 2;
LABEL_29:
      *(void *)uint64_t v24 = v18;
    }
    if (v19 > 2)
    {
      if (*v6) {
        unint64_t v23 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        unint64_t v23 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      sub_188C020(1, v19, v23);
    }
    else
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      *(_DWORD *)(a1 + 32) = v19;
    }
    goto LABEL_32;
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = *(char **)v24;
    }
    unint64_t v14 = sub_1885AC0(v8, v13, v7, a3);
    goto LABEL_24;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v24;
  }
LABEL_43:
  *(void *)uint64_t v24 = 0;
  return *(void *)v24;
}

unsigned char *sub_12F6F40(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 32);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v10 = *(void *)(a1 + 8);
  if ((v10 & 1) == 0) {
    return v4;
  }
  unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v12 + 31) < 0)
  {
    uint64_t v13 = *(void **)(v12 + 8);
    uint64_t v14 = *(void *)(v12 + 16);
  }
  else
  {
    uint64_t v13 = (void *)(v12 + 8);
    LODWORD(v14) = *(unsigned __int8 *)(v12 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v14)
  {
    uint64_t v15 = (int)v14;
    memcpy(v4, v13, (int)v14);
    v4 += v15;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v13, v14, v4);
}

uint64_t sub_12F7088(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_13;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_13;
    }
    goto LABEL_9;
  }
  unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
  uint64_t v5 = *(void *)(v3 + 8);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = v4;
  }
  uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    int v6 = *(_DWORD *)(a1 + 32);
    if (v6 < 0) {
      uint64_t v7 = 11;
    }
    else {
      uint64_t v7 = ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v7;
  }
LABEL_13:
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_12F7154()
{
  return 1;
}

void *sub_12F715C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap.UserId");
}

uint64_t sub_12F716C(uint64_t a1)
{
  unint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_2532180)
  {
    uint64_t v6 = *(void *)(a1 + 32);
    if (v6)
    {
      sub_12F6C10(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12F7238(uint64_t a1)
{
  sub_12F716C(a1);

  operator delete();
}

uint64_t sub_12F7270(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v27 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v27, a3[11].i32[1])) {
    return *(void *)v27;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = (unsigned __int8 *)(*(void *)v27 + 1);
    unsigned int v8 = **(unsigned char **)v27;
    if ((char)**(unsigned char **)v27 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if ((char)*v7 < 0)
      {
        uint64_t v7 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v27, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (unsigned __int8 *)(*(void *)v27 + 2);
      }
    }
    *(void *)uint64_t v27 = v7;
    unsigned int v11 = v8 >> 3;
    if (v8 >> 3 == 3)
    {
      if (v8 != 26) {
        goto LABEL_14;
      }
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v16 = *(void *)(a1 + 8);
      unint64_t v17 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
      if (v16) {
        unint64_t v17 = (uint64_t *)*v17;
      }
      uint64_t v18 = (std::string *)sub_1880F84((void *)(a1 + 24), v17);
      uint64_t v15 = (uint64_t)sub_188C244(v18, *(char **)v27, (uint64_t)a3);
      goto LABEL_31;
    }
    if (v11 != 2) {
      break;
    }
    if (v8 != 18) {
      goto LABEL_14;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v19 = *(void *)(a1 + 32);
    if (!v19)
    {
      int v20 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        int v20 = (void *)*v20;
      }
      uint64_t v19 = sub_12F8B10((uint64_t)v20);
      *(void *)(a1 + 32) = v19;
      uint64_t v7 = *(unsigned __int8 **)v27;
    }
    uint64_t v15 = sub_12F74D8(a3, v19, v7);
LABEL_31:
    *(void *)uint64_t v27 = v15;
    if (!v15) {
      goto LABEL_50;
    }
LABEL_39:
    if (sub_11947B8((uint64_t)a3, (char **)v27, a3[11].i32[1])) {
      return *(void *)v27;
    }
  }
  if (v11 == 1 && v8 == 8)
  {
    int v21 = (char *)(v7 + 1);
    unint64_t v22 = *v7;
    if (((char)*v7 & 0x80000000) == 0) {
      goto LABEL_36;
    }
    int v23 = *v21;
    int v24 = v22 + (v23 << 7);
    unint64_t v22 = (v24 - 128);
    if (v23 < 0)
    {
      *(void *)uint64_t v27 = sub_188C138((uint64_t)v7, (v24 - 128));
      if (!*(void *)v27) {
        goto LABEL_50;
      }
      unint64_t v22 = v25;
    }
    else
    {
      int v21 = (char *)(v7 + 2);
LABEL_36:
      *(void *)uint64_t v27 = v21;
    }
    if (v22 > 3)
    {
      if (*v6) {
        int v26 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        int v26 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      sub_188C020(1, v22, v26);
    }
    else
    {
      *(_DWORD *)(a1 + 16) |= 4u;
      *(_DWORD *)(a1 + 40) = v22;
    }
    goto LABEL_39;
  }
LABEL_14:
  if (v8) {
    BOOL v13 = (v8 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v6)
    {
      uint64_t v14 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = *(unsigned __int8 **)v27;
    }
    uint64_t v15 = (uint64_t)sub_1885AC0(v8, v14, (char *)v7, a3);
    goto LABEL_31;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v27;
  }
LABEL_50:
  *(void *)uint64_t v27 = 0;
  return *(void *)v27;
}

uint64_t sub_12F74D8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12F6D30(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_12F7568(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 4) != 0)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 40);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 32);
    unsigned char *v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 20);
    v4[1] = v11;
    if (v11 > 0x7F) {
      unint64_t v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      unint64_t v12 = v4 + 2;
    }
    uint64_t v4 = sub_12F6F40(v10, (unint64_t)v12, a3);
  }
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    uint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    uint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_12F7720(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 7) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_15;
  }
  if (v2)
  {
    unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
    uint64_t v6 = *(void *)(v4 + 8);
    if ((v5 & 0x80u) == 0) {
      uint64_t v6 = v5;
    }
    uint64_t v3 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_9:
    uint64_t v7 = sub_12F7088(*(void *)(a1 + 32));
    v3 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  if ((v2 & 4) != 0)
  {
    int v8 = *(_DWORD *)(a1 + 40);
    if (v8 < 0) {
      uint64_t v9 = 11;
    }
    else {
      uint64_t v9 = ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v3 += v9;
  }
LABEL_15:
  uint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v12 + 31) < 0) {
      uint64_t v13 = *(void *)(v12 + 16);
    }
    else {
      uint64_t v13 = *(unsigned __int8 *)(v12 + 31);
    }
    v3 += v13;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

uint64_t sub_12F7840()
{
  return 1;
}

void *sub_12F7848@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap.User");
}

uint64_t sub_12F7858(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  unint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 40);
  if (*(uint64_t **)(a1 + 40) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  sub_1889DA8(a1 + 24);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12F7900(uint64_t a1)
{
  sub_12F7858(a1);

  operator delete();
}

uint64_t sub_12F7938(uint64_t a1)
{
  *(_DWORD *)(a1 + 24) = 0;
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v1 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v1 + 23) < 0)
    {
      **(unsigned char **)unint64_t v1 = 0;
      *(void *)(v1 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v1 = 0;
      *(unsigned char *)(v1 + 23) = 0;
    }
  }
  char v3 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 40) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v3) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_12F7984(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v35 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v35, a3[11].i32[1])) {
    return *(void *)v35;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = (char *)(*(void *)v35 + 1);
    unsigned int v8 = **(unsigned char **)v35;
    if ((char)**(unsigned char **)v35 < 0)
    {
      int v9 = *v7;
      unsigned int v10 = v8 + (v9 << 7);
      unsigned int v8 = v10 - 128;
      if (v9 < 0)
      {
        uint64_t v7 = (char *)sub_188C180(*(uint64_t *)v35, v10 - 128);
        unsigned int v8 = v11;
      }
      else
      {
        uint64_t v7 = (char *)(*(void *)v35 + 2);
      }
    }
    *(void *)uint64_t v35 = v7;
    unsigned int v12 = v8 >> 3;
    if (v8 >> 3 == 3)
    {
      if (v8 != 24)
      {
        if (v8 != 26) {
          goto LABEL_14;
        }
        *(void *)&long long v36 = a1 + 24;
        *((void *)&v36 + 1) = sub_12EDF64;
        uint64_t v37 = a1 + 8;
        int v38 = 3;
        uint64_t v16 = sub_1112E88((uint64_t)a3, v7, &v36);
LABEL_51:
        *(void *)uint64_t v35 = v16;
        if (!v16) {
          return 0;
        }
        goto LABEL_52;
      }
      uint64_t v17 = (uint64_t)(v7 - 1);
      while (1)
      {
        *(void *)uint64_t v35 = v17 + 1;
        unint64_t v18 = *(unsigned __int8 *)(v17 + 1);
        uint64_t v19 = (char *)(v17 + 2);
        if (*(char *)(v17 + 1) < 0)
        {
          int v20 = *v19;
          int v21 = v18 + (v20 << 7);
          unint64_t v18 = (v21 - 128);
          if (v20 < 0)
          {
            *(void *)uint64_t v35 = sub_188C138(v17 + 1, (v21 - 128));
            if (!*(void *)v35) {
              return 0;
            }
            unint64_t v18 = v24;
            goto LABEL_27;
          }
          uint64_t v19 = (char *)(v17 + 3);
        }
        *(void *)uint64_t v35 = v19;
LABEL_27:
        if (v18 > 4)
        {
          if (*v6) {
            unint64_t v25 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            unint64_t v25 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(3, v18, v25);
        }
        else
        {
          uint64_t v22 = *(unsigned int *)(a1 + 24);
          if (v22 == *(_DWORD *)(a1 + 28))
          {
            int v23 = v22 + 1;
            sub_188C80C((unsigned int *)(a1 + 24), v22 + 1);
            *(_DWORD *)(*(void *)(a1 + 32) + 4 * v22) = v18;
          }
          else
          {
            *(_DWORD *)(*(void *)(a1 + 32) + 4 * v22) = v18;
            int v23 = v22 + 1;
          }
          *(_DWORD *)(a1 + 24) = v23;
        }
        uint64_t v17 = *(void *)v35;
        if (*(void *)a3 <= *(void *)v35 || **(unsigned char **)v35 != 24) {
          goto LABEL_52;
        }
      }
    }
    if (v12 != 2) {
      break;
    }
    if (v8 != 16) {
      goto LABEL_14;
    }
    int v26 = v7 + 1;
    unint64_t v27 = *v7;
    if (*v7 < 0)
    {
      int v28 = *v26;
      int v29 = v27 + (v28 << 7);
      unint64_t v27 = (v29 - 128);
      if (v28 < 0)
      {
        *(void *)uint64_t v35 = sub_188C138((uint64_t)v7, (v29 - 128));
        if (!*(void *)v35) {
          return 0;
        }
        unint64_t v27 = v33;
        goto LABEL_46;
      }
      int v26 = v7 + 2;
    }
    *(void *)uint64_t v35 = v26;
LABEL_46:
    if (v27 > 2)
    {
      if (*v6) {
        uint64_t v34 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        uint64_t v34 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      sub_188C020(2, v27, v34);
    }
    else
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      *(_DWORD *)(a1 + 48) = v27;
    }
LABEL_52:
    if (sub_11947B8((uint64_t)a3, (char **)v35, a3[11].i32[1])) {
      return *(void *)v35;
    }
  }
  if (v12 == 1 && v8 == 10)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v30 = *(void *)(a1 + 8);
    BOOL v31 = (uint64_t *)(v30 & 0xFFFFFFFFFFFFFFFCLL);
    if (v30) {
      BOOL v31 = (uint64_t *)*v31;
    }
    int v32 = (std::string *)sub_1880F84((void *)(a1 + 40), v31);
    uint64_t v16 = (void *)sub_188C244(v32, *(char **)v35, (uint64_t)a3);
    goto LABEL_51;
  }
LABEL_14:
  if (v8) {
    BOOL v14 = (v8 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (*v6)
    {
      unint64_t v15 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = *(char **)v35;
    }
    uint64_t v16 = sub_1885AC0(v8, v15, v7, a3);
    goto LABEL_51;
  }
  if (!v7) {
    return 0;
  }
  a3[10].i32[0] = v8 - 1;
  return *(void *)v35;
}

unsigned char *sub_12F7CD8(uint64_t a1, unsigned char *__dst, void *a3)
{
  unint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    unint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v7 = *(int *)(a1 + 48);
    unsigned char *v4 = 16;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v10 = *(unsigned int *)(a1 + 24);
  if ((int)v10 >= 1)
  {
    for (uint64_t i = 0; i != v10; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v12 = *(int *)(*(void *)(a1 + 32) + 4 * i);
      unsigned char *v4 = 24;
      v4[1] = v12;
      if (v12 > 0x7F)
      {
        v4[1] = v12 | 0x80;
        unint64_t v13 = v12 >> 7;
        v4[2] = v12 >> 7;
        v4 += 3;
        if (v12 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v14 = v13 >> 14;
            v13 >>= 7;
            *v4++ = v13;
          }
          while (v14);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  uint64_t v15 = *(void *)(a1 + 8);
  if ((v15 & 1) == 0) {
    return v4;
  }
  unint64_t v17 = v15 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v17 + 31) < 0)
  {
    unint64_t v18 = *(void **)(v17 + 8);
    uint64_t v19 = *(void *)(v17 + 16);
  }
  else
  {
    unint64_t v18 = (void *)(v17 + 8);
    LODWORD(v19) = *(unsigned __int8 *)(v17 + 31);
  }
  if (*a3 - (void)v4 >= (int)v19)
  {
    uint64_t v20 = (int)v19;
    memcpy(v4, v18, (int)v19);
    v4 += v20;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v18, v19, v4);
}

uint64_t sub_12F7EC8(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 24);
  if (v1)
  {
    int v2 = 0;
    uint64_t v3 = 0;
    do
    {
      int v4 = *(_DWORD *)(*(void *)(a1 + 32) + 4 * v2);
      if (v4 < 0) {
        uint64_t v5 = 10;
      }
      else {
        uint64_t v5 = (9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6;
      }
      v3 += v5;
      ++v2;
    }
    while (v1 != v2);
  }
  else
  {
    uint64_t v3 = 0;
  }
  uint64_t v6 = v3 + v1;
  int v7 = *(_DWORD *)(a1 + 16);
  if ((v7 & 3) != 0)
  {
    if (v7)
    {
      unint64_t v8 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v9 = *(unsigned __int8 *)(v8 + 23);
      uint64_t v10 = *(void *)(v8 + 8);
      if ((v9 & 0x80u) == 0) {
        uint64_t v10 = v9;
      }
      v6 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v7 & 2) != 0)
    {
      int v11 = *(_DWORD *)(a1 + 48);
      if (v11 < 0) {
        uint64_t v12 = 11;
      }
      else {
        uint64_t v12 = ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
      v6 += v12;
    }
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if (v13)
  {
    unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v15 + 31) < 0) {
      uint64_t v16 = *(void *)(v15 + 16);
    }
    else {
      uint64_t v16 = *(unsigned __int8 *)(v15 + 31);
    }
    v6 += v16;
  }
  *(_DWORD *)(a1 + 20) = v6;
  return v6;
}

std::string *sub_12F7FDC(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = result + 1;
    uint64_t data_low = SLODWORD(result[1].__r_.__value_.__l.__data_);
    sub_188C80C((unsigned int *)&result[1], data_low + v4);
    std::string::size_type size = v3[1].__r_.__value_.__l.__size_;
    LODWORD(v5->__r_.__value_.__l.__data_) += *(_DWORD *)(a2 + 24);
    uint64_t result = (std::string *)memcpy((void *)(size + 4 * data_low), *(const void **)(a2 + 32), 4 * *(int *)(a2 + 24));
  }
  int v8 = *(_DWORD *)(a2 + 16);
  if ((v8 & 3) != 0)
  {
    if (v8)
    {
      uint64_t v9 = (long long *)(*(void *)(a2 + 40) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::size_type v10 = v3->__r_.__value_.__l.__size_;
      int v11 = (uint64_t *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
      if (v10) {
        int v11 = (uint64_t *)*v11;
      }
      uint64_t result = sub_1881DF4((std::string **)&v3[1].__r_.__value_.__r.__words[2], v9, v11);
    }
    if ((v8 & 2) != 0) {
      LODWORD(v3[2].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 48);
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= v8;
  }
  uint64_t v12 = *(void *)(a2 + 8);
  if (v12)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v12 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_12F80D8()
{
  return 1;
}

void *sub_12F80E0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap.AttributeDecision");
}

uint64_t sub_12F80F0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24A6BE8;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_12F816C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24A6C68;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_12F81E8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24A6CE8;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

double sub_12F8264(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = off_24A6D68;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  return result;
}

uint64_t sub_12F82E4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24A6DE8;
  *(void *)(result + 8) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

void *sub_12F8384(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24A6E68;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = &qword_2550250;
  result[6] = 0;
  result[7] = 0;
  result[5] = &qword_2550250;
  return result;
}

void *sub_12F8410(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24A6EE8;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = &qword_2550250;
  result[5] = &qword_2550250;
  result[6] = &qword_2550250;
  result[7] = &qword_2550250;
  result[8] = &qword_2550250;
  return result;
}

void *sub_12F849C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24A6F68;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = &qword_2550250;
  result[5] = &qword_2550250;
  result[6] = &qword_2550250;
  result[7] = &qword_2550250;
  result[8] = 0;
  return result;
}

void *sub_12F8528(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24A6FE8;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = &qword_2550250;
  result[5] = &qword_2550250;
  result[6] = &qword_2550250;
  return result;
}

uint64_t sub_12F85B0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24A7068;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = a1;
  *(void *)(result + 48) = 0;
  *(void *)(result + 56) = 0;
  *(void *)(result + 64) = 0;
  *(void *)(result + 72) = a1;
  *(void *)(result + 80) = a1;
  *(void *)(result + 88) = 0;
  *(void *)(result + 96) = 0;
  *(void *)(result + 104) = a1;
  *(void *)(result + 112) = 0;
  *(void *)(result + 120) = 0;
  *(_DWORD *)(result + 152) = 0;
  *(void *)(result + 128) = a1;
  *(void *)(result + 136) = 0;
  *(void *)(result + 144) = 0;
  return result;
}

uint64_t sub_12F8678(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24A70E8;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = a1;
  *(void *)(result + 48) = 0;
  *(void *)(result + 56) = 0;
  *(_DWORD *)(result + 64) = 0;
  return result;
}

void *sub_12F871C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24A7168;
  result[2] = 0;
  result[3] = 0;
  return result;
}

uint64_t sub_12F8794(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24A71E8;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(_DWORD *)(result + 48) = 0;
  return result;
}

double sub_12F8830(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = off_24A7268;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  return result;
}

uint64_t sub_12F88AC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24A72E8;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = 0;
  *(unsigned char *)(result + 40) = 0;
  return result;
}

uint64_t sub_12F892C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24A7368;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = &qword_2550250;
  *(_DWORD *)(result + 56) = 0;
  *(unsigned char *)(result + 60) = 0;
  return result;
}

uint64_t sub_12F89D8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24A73E8;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = &qword_2550250;
  *(_DWORD *)(result + 56) = 0;
  *(unsigned char *)(result + 60) = 0;
  return result;
}

void *sub_12F8A84(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24A7468;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = &qword_2550250;
  result[5] = &qword_2550250;
  result[6] = &qword_2550250;
  result[7] = &qword_2550250;
  result[8] = &qword_2550250;
  return result;
}

uint64_t sub_12F8B10(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24A74E8;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = &qword_2550250;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_12F8B98(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24A7568;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = &qword_2550250;
  *(void *)(result + 32) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

uint64_t sub_12F8C20(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24A75E8;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = a1;
  *(void *)(result + 40) = &qword_2550250;
  *(_DWORD *)(result + 48) = 0;
  return result;
}

uint64_t sub_12F8CC8(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_9;
    }
  }
  else if (v4)
  {
    goto LABEL_9;
  }
  uint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 56) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 56));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_9:
  sub_1302488((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12F8D8C(uint64_t a1)
{
  sub_12F8CC8(a1);

  operator delete();
}

uint64_t sub_12F8DC4(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unint64_t v27 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v27, a3[11].i32[1])) {
    return *(void *)v27;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    int v7 = (char *)(*(void *)v27 + 1);
    unsigned int v8 = **(unsigned char **)v27;
    if ((char)**(unsigned char **)v27 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        int v7 = (char *)sub_188C180(*(uint64_t *)v27, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        int v7 = (char *)(*(void *)v27 + 2);
      }
    }
    *(void *)unint64_t v27 = v7;
    unsigned int v11 = v8 >> 3;
    if (v8 >> 3 == 3)
    {
      if (v8 == 26)
      {
        uint64_t v16 = v7 - 1;
        while (1)
        {
          unint64_t v17 = (unsigned __int8 *)(v16 + 1);
          *(void *)unint64_t v27 = v16 + 1;
          unint64_t v18 = *(_DWORD **)(a1 + 40);
          if (v18 && (uint64_t v19 = *(int *)(a1 + 32), (int)v19 < *v18))
          {
            *(_DWORD *)(a1 + 32) = v19 + 1;
            uint64_t v20 = *(void *)&v18[2 * v19 + 2];
          }
          else
          {
            uint64_t v21 = sub_12F8C20(*(void *)(a1 + 24));
            uint64_t v20 = sub_188CDC8(a1 + 24, v21);
            unint64_t v17 = *(unsigned __int8 **)v27;
          }
          uint64_t v16 = (char *)sub_12F900C(a3, v20, v17);
          *(void *)unint64_t v27 = v16;
          if (!v16) {
            goto LABEL_45;
          }
          if (*(void *)a3 <= (unint64_t)v16 || *v16 != 26) {
            goto LABEL_40;
          }
        }
      }
    }
    else if (v11 == 2)
    {
      if (v8 == 18)
      {
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v22 = *(void *)(a1 + 8);
        int v23 = (uint64_t *)(v22 & 0xFFFFFFFFFFFFFFFCLL);
        if (v22) {
          int v23 = (uint64_t *)*v23;
        }
        unint64_t v24 = (void *)(a1 + 56);
        goto LABEL_38;
      }
    }
    else if (v11 == 1 && v8 == 10)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v25 = *(void *)(a1 + 8);
      int v23 = (uint64_t *)(v25 & 0xFFFFFFFFFFFFFFFCLL);
      if (v25) {
        int v23 = (uint64_t *)*v23;
      }
      unint64_t v24 = (void *)(a1 + 48);
LABEL_38:
      int v26 = (std::string *)sub_1880F84(v24, v23);
      unint64_t v15 = (void *)sub_188C244(v26, *(char **)v27, (uint64_t)a3);
      goto LABEL_39;
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      unint64_t v14 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v7 = *(char **)v27;
    }
    unint64_t v15 = sub_1885AC0(v8, v14, v7, a3);
LABEL_39:
    *(void *)unint64_t v27 = v15;
    if (!v15) {
      goto LABEL_45;
    }
LABEL_40:
    if (sub_11947B8((uint64_t)a3, (char **)v27, a3[11].i32[1])) {
      return *(void *)v27;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v27;
  }
LABEL_45:
  *(void *)unint64_t v27 = 0;
  return *(void *)v27;
}

uint64_t sub_12F900C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12F7984(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_12F909C(uint64_t a1, unsigned char *__dst, void *a3)
{
  int v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    int v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 2) != 0) {
    int v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  int v7 = *(_DWORD *)(a1 + 32);
  if (v7)
  {
    for (int i = 0; i != v7; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      unsigned char *v4 = 26;
      unsigned int v10 = *(_DWORD *)(v9 + 20);
      v4[1] = v10;
      if (v10 > 0x7F) {
        unsigned int v11 = sub_188A9CC(v10, v4 + 1);
      }
      else {
        unsigned int v11 = v4 + 2;
      }
      int v4 = sub_12F7CD8(v9, v11, a3);
    }
  }
  uint64_t v12 = *(void *)(a1 + 8);
  if ((v12 & 1) == 0) {
    return v4;
  }
  unint64_t v14 = v12 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v14 + 31) < 0)
  {
    unint64_t v15 = *(void **)(v14 + 8);
    uint64_t v16 = *(void *)(v14 + 16);
  }
  else
  {
    unint64_t v15 = (void *)(v14 + 8);
    LODWORD(v16) = *(unsigned __int8 *)(v14 + 31);
  }
  if (*a3 - (void)v4 >= (int)v16)
  {
    uint64_t v17 = (int)v16;
    memcpy(v4, v15, (int)v16);
    v4 += v17;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v15, v16, v4);
}

uint64_t sub_12F9224(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    int v4 = (uint64_t *)(v3 + 8);
  }
  else {
    int v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_12F7EC8(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 3) != 0)
  {
    if (v8)
    {
      unint64_t v9 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v10 = *(unsigned __int8 *)(v9 + 23);
      uint64_t v11 = *(void *)(v9 + 8);
      if ((v10 & 0x80u) == 0) {
        uint64_t v11 = v10;
      }
      v2 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v8 & 2) != 0)
    {
      unint64_t v12 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v13 = *(unsigned __int8 *)(v12 + 23);
      uint64_t v14 = *(void *)(v12 + 8);
      if ((v13 & 0x80u) == 0) {
        uint64_t v14 = v13;
      }
      v2 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  uint64_t v15 = *(void *)(a1 + 8);
  if (v15)
  {
    unint64_t v17 = v15 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v17 + 31) < 0) {
      uint64_t v18 = *(void *)(v17 + 16);
    }
    else {
      uint64_t v18 = *(unsigned __int8 *)(v17 + 31);
    }
    v2 += v18;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_12F9368()
{
  return 1;
}

void *sub_12F9370@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap.RapUpdate.GeminiInfo");
}

uint64_t sub_12F9380(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_19;
    }
  }
  else if (v4)
  {
    goto LABEL_19;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(uint64_t **)(a1 + 40) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 40));
  }
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 48));
  }
  if (*(uint64_t **)(a1 + 56) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 56));
  }
  if (*(uint64_t **)(a1 + 64) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 64));
  }
  if (*(uint64_t **)(a1 + 72) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 72));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_19:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12F949C(uint64_t a1)
{
  sub_12F9380(a1);

  operator delete();
}

uint64_t sub_12F94D4(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unint64_t v24 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v24, a3[11].i32[1])) {
    return *(void *)v24;
  }
  int v23 = (uint64_t *)(a1 + 8);
  while (2)
  {
    uint64_t v6 = (char *)(*(void *)v24 + 1);
    unsigned int v7 = **(unsigned char **)v24;
    if ((char)**(unsigned char **)v24 < 0)
    {
      unsigned int v8 = v7 + (*v6 << 7);
      unsigned int v7 = v8 - 128;
      if (*v6 < 0)
      {
        uint64_t v6 = (char *)sub_188C180(*(uint64_t *)v24, v8 - 128);
        unsigned int v7 = v9;
      }
      else
      {
        uint64_t v6 = (char *)(*(void *)v24 + 2);
      }
    }
    *(void *)unint64_t v24 = v6;
    switch(v7 >> 3)
    {
      case 1u:
        if (v7 != 10) {
          goto LABEL_41;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v10 = *(void *)(a1 + 8);
        uint64_t v11 = (uint64_t *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
        if (v10) {
          uint64_t v11 = (uint64_t *)*v11;
        }
        unint64_t v12 = (void *)(a1 + 24);
        goto LABEL_37;
      case 2u:
        if (v7 != 18) {
          goto LABEL_41;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v13 = *(void *)(a1 + 8);
        uint64_t v11 = (uint64_t *)(v13 & 0xFFFFFFFFFFFFFFFCLL);
        if (v13) {
          uint64_t v11 = (uint64_t *)*v11;
        }
        unint64_t v12 = (void *)(a1 + 32);
        goto LABEL_37;
      case 3u:
        if (v7 != 26) {
          goto LABEL_41;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v14 = *(void *)(a1 + 8);
        uint64_t v11 = (uint64_t *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
        if (v14) {
          uint64_t v11 = (uint64_t *)*v11;
        }
        unint64_t v12 = (void *)(a1 + 40);
        goto LABEL_37;
      case 4u:
        if (v7 != 34) {
          goto LABEL_41;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v15 = *(void *)(a1 + 8);
        uint64_t v11 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          uint64_t v11 = (uint64_t *)*v11;
        }
        unint64_t v12 = (void *)(a1 + 48);
        goto LABEL_37;
      case 5u:
        if (v7 != 42) {
          goto LABEL_41;
        }
        *(_DWORD *)(a1 + 16) |= 0x10u;
        uint64_t v16 = *(void *)(a1 + 8);
        uint64_t v11 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
        if (v16) {
          uint64_t v11 = (uint64_t *)*v11;
        }
        unint64_t v12 = (void *)(a1 + 56);
        goto LABEL_37;
      case 6u:
        if (v7 != 50) {
          goto LABEL_41;
        }
        *(_DWORD *)(a1 + 16) |= 0x20u;
        uint64_t v17 = *(void *)(a1 + 8);
        uint64_t v11 = (uint64_t *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
        if (v17) {
          uint64_t v11 = (uint64_t *)*v11;
        }
        unint64_t v12 = (void *)(a1 + 64);
        goto LABEL_37;
      case 7u:
        if (v7 != 58) {
          goto LABEL_41;
        }
        *(_DWORD *)(a1 + 16) |= 0x40u;
        uint64_t v18 = *(void *)(a1 + 8);
        uint64_t v11 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
        if (v18) {
          uint64_t v11 = (uint64_t *)*v11;
        }
        unint64_t v12 = (void *)(a1 + 72);
LABEL_37:
        uint64_t v19 = (std::string *)sub_1880F84(v12, v11);
        uint64_t v20 = (void *)sub_188C244(v19, *(char **)v24, (uint64_t)a3);
        goto LABEL_38;
      default:
LABEL_41:
        if (v7) {
          BOOL v21 = (v7 & 7) == 4;
        }
        else {
          BOOL v21 = 1;
        }
        if (!v21)
        {
          if (*v23)
          {
            uint64_t v22 = (std::string *)((*v23 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v22 = (std::string *)sub_188DBD8(v23);
            uint64_t v6 = *(char **)v24;
          }
          uint64_t v20 = sub_1885AC0(v7, v22, v6, a3);
LABEL_38:
          *(void *)unint64_t v24 = v20;
          if (!v20) {
            return 0;
          }
          if (sub_11947B8((uint64_t)a3, (char **)v24, a3[11].i32[1])) {
            return *(void *)v24;
          }
          continue;
        }
        if (!v6) {
          return 0;
        }
        a3[10].i32[0] = v7 - 1;
        return *(void *)v24;
    }
  }
}

char *sub_12F97E8(uint64_t a1, char *__dst, void *a3)
{
  int v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    int v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_13;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  int v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_14;
  }
LABEL_13:
  int v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_15;
  }
LABEL_14:
  int v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_16;
  }
LABEL_15:
  int v4 = sub_117A0AC(a3, 5, (const void **)(*(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
LABEL_16:
  int v4 = sub_117A0AC(a3, 6, (const void **)(*(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x40) != 0) {
LABEL_8:
  }
    int v4 = sub_117A0AC(a3, 7, (const void **)(*(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL), v4);
LABEL_9:
  uint64_t v7 = *(void *)(a1 + 8);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v9 + 31) < 0)
  {
    uint64_t v10 = *(void **)(v9 + 8);
    uint64_t v11 = *(void *)(v9 + 16);
  }
  else
  {
    uint64_t v10 = (void *)(v9 + 8);
    LODWORD(v11) = *(unsigned __int8 *)(v9 + 31);
  }
  if (*a3 - (void)v4 >= (int)v11)
  {
    uint64_t v12 = (int)v11;
    memcpy(v4, v10, (int)v11);
    v4 += v12;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v10, v11, v4);
}

uint64_t sub_12F9990(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 0x7F) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_20;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
  uint64_t v5 = *(void *)(v3 + 8);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = v4;
  }
  uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    unint64_t v6 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v1 & 4) != 0)
  {
    unint64_t v14 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v15 = *(unsigned __int8 *)(v14 + 23);
    uint64_t v16 = *(void *)(v14 + 8);
    if ((v15 & 0x80u) == 0) {
      uint64_t v16 = v15;
    }
    v2 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 8) == 0)
    {
LABEL_14:
      if ((v1 & 0x10) == 0) {
        goto LABEL_15;
      }
      goto LABEL_28;
    }
  }
  else if ((v1 & 8) == 0)
  {
    goto LABEL_14;
  }
  unint64_t v17 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v18 = *(unsigned __int8 *)(v17 + 23);
  uint64_t v19 = *(void *)(v17 + 8);
  if ((v18 & 0x80u) == 0) {
    uint64_t v19 = v18;
  }
  v2 += v19 + ((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 0x10) == 0)
  {
LABEL_15:
    if ((v1 & 0x20) == 0) {
      goto LABEL_16;
    }
    goto LABEL_31;
  }
LABEL_28:
  unint64_t v20 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v21 = *(unsigned __int8 *)(v20 + 23);
  uint64_t v22 = *(void *)(v20 + 8);
  if ((v21 & 0x80u) == 0) {
    uint64_t v22 = v21;
  }
  v2 += v22 + ((9 * (__clz(v22 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 0x20) == 0)
  {
LABEL_16:
    if ((v1 & 0x40) == 0) {
      goto LABEL_20;
    }
    goto LABEL_17;
  }
LABEL_31:
  unint64_t v23 = *(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v24 = *(unsigned __int8 *)(v23 + 23);
  uint64_t v25 = *(void *)(v23 + 8);
  if ((v24 & 0x80u) == 0) {
    uint64_t v25 = v24;
  }
  v2 += v25 + ((9 * (__clz(v25 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 0x40) != 0)
  {
LABEL_17:
    unint64_t v9 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v10 = *(unsigned __int8 *)(v9 + 23);
    uint64_t v11 = *(void *)(v9 + 8);
    if ((v10 & 0x80u) == 0) {
      uint64_t v11 = v10;
    }
    v2 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_20:
  uint64_t v12 = *(void *)(a1 + 8);
  if (v12)
  {
    unint64_t v26 = v12 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v26 + 31) < 0) {
      uint64_t v27 = *(void *)(v26 + 16);
    }
    else {
      uint64_t v27 = *(unsigned __int8 *)(v26 + 31);
    }
    v2 += v27;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_12F9BD4()
{
  return 1;
}

void *sub_12F9BDC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap.RapUpdate.PlasmaInfo");
}

void *sub_12F9BEC(void *a1)
{
  unint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_12F9C70((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

uint64_t sub_12F9C70(uint64_t result)
{
  if ((uint64_t (***)())result != &off_2532240)
  {
    int v1 = (void *)result;
    uint64_t v2 = *(void **)(result + 24);
    if (v2)
    {
      sub_12FB25C(v2);
      operator delete();
    }
    unint64_t v3 = (void *)v1[4];
    if (v3)
    {
      sub_12FB9AC(v3);
      operator delete();
    }
    uint64_t v4 = (void *)v1[5];
    if (v4)
    {
      sub_12FC610(v4);
      operator delete();
    }
    uint64_t v5 = v1[6];
    if (v5)
    {
      sub_12FC0FC(v5);
      operator delete();
    }
    unint64_t v6 = (void *)v1[7];
    if (v6)
    {
      sub_12FCA18(v6);
      operator delete();
    }
    uint64_t v7 = v1[8];
    if (v7)
    {
      sub_12FCE20(v7);
      operator delete();
    }
    uint64_t v8 = (void *)v1[9];
    if (v8)
    {
      sub_12FD394(v8);
      operator delete();
    }
    uint64_t result = v1[10];
    if (result)
    {
      sub_12FD640(result);
      operator delete();
    }
  }
  return result;
}

void sub_12F9DBC(void *a1)
{
  sub_12F9BEC(a1);

  operator delete();
}

uint64_t sub_12F9DF4(uint64_t a1)
{
  uint64_t result = sub_188CC00(a1 + 24);
  if ((*(unsigned char *)(a1 + 16) & 3) != 0)
  {
    *(_DWORD *)(a1 + 56) = 0;
    *(void *)(a1 + 48) = 0;
  }
  char v4 = *(unsigned char *)(a1 + 8);
  uint64_t v3 = a1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_12F9E5C(uint64_t a1)
{
  uint64_t result = sub_188CC00(a1 + 24);
  if ((*(unsigned char *)(a1 + 16) & 3) != 0)
  {
    *(_DWORD *)(a1 + 56) = 0;
    *(void *)(a1 + 48) = 0;
  }
  char v4 = *(unsigned char *)(a1 + 8);
  uint64_t v3 = a1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_12F9EC4(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 16) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_12F9EDC(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v1 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v1 + 23) < 0)
    {
      **(unsigned char **)unint64_t v1 = 0;
      *(void *)(v1 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v1 = 0;
      *(unsigned char *)(v1 + 23) = 0;
    }
  }
  char v3 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 24) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v3) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_12F9F24(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 16) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_12F9F3C(uint64_t result)
{
  uint64_t v1 = result;
  if (*(unsigned char *)(result + 16)) {
    uint64_t result = sub_1481530(*(void *)(result + 24));
  }
  char v3 = *(unsigned char *)(v1 + 8);
  uint64_t v2 = v1 + 8;
  *(_DWORD *)(v2 + 24) = 0;
  *(_DWORD *)(v2 + 8) = 0;
  if (v3)
  {
    return sub_188B4AC((uint64_t *)v2);
  }
  return result;
}

uint64_t *sub_12F9F9C(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = (uint64_t *)(a1 + 8);
  if (v2) {
    return (uint64_t *)sub_188B4AC(result);
  }
  return result;
}

uint64_t sub_12F9FAC(uint64_t a1)
{
  uint64_t result = sub_188CC00(a1 + 24);
  int v3 = *(_DWORD *)(a1 + 16);
  if ((v3 & 3) != 0)
  {
    if ((v3 & 1) == 0) {
      goto LABEL_5;
    }
    unint64_t v4 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if ((*(char *)(v4 + 23) & 0x80000000) == 0)
    {
      *(unsigned char *)unint64_t v4 = 0;
      *(unsigned char *)(v4 + 23) = 0;
LABEL_5:
      if ((v3 & 2) == 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
    **(unsigned char **)unint64_t v4 = 0;
    *(void *)(v4 + 8) = 0;
    if ((v3 & 2) != 0) {
LABEL_6:
    }
      uint64_t result = sub_12D6FA0(*(void *)(a1 + 56));
  }
LABEL_7:
  if ((v3 & 0xC) != 0)
  {
    *(_DWORD *)(a1 + 72) = 0;
    *(void *)(a1 + 64) = 0;
  }
  char v6 = *(unsigned char *)(a1 + 8);
  uint64_t v5 = a1 + 8;
  *(_DWORD *)(v5 + 8) = 0;
  if (v6)
  {
    return sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

char *sub_12FA058(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v30 = a2;
  if (sub_11947B8((uint64_t)a3, &v30, a3[11].i32[1])) {
    return v30;
  }
  char v6 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v7 = v30 + 1;
    unsigned int v8 = *v30;
    if (*v30 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v30, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v30 + 2;
      }
    }
    uint64_t v30 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 10) {
          goto LABEL_57;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v11 = *(void *)(a1 + 24);
        if (!v11)
        {
          uint64_t v12 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v12 = (void *)*v12;
          }
          uint64_t v11 = sub_12FE180((uint64_t)v12);
          *(void *)(a1 + 24) = v11;
          uint64_t v7 = v30;
        }
        uint64_t v13 = (char *)sub_12FA438(a3, v11, (unsigned __int8 *)v7);
        goto LABEL_64;
      case 2u:
        if (v8 != 18) {
          goto LABEL_57;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v14 = *(void *)(a1 + 32);
        if (!v14)
        {
          uint64_t v15 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v15 = (void *)*v15;
          }
          uint64_t v14 = sub_12FE224((uint64_t)v15);
          *(void *)(a1 + 32) = v14;
          uint64_t v7 = v30;
        }
        uint64_t v13 = (char *)sub_12FA4C8(a3, v14, (unsigned __int8 *)v7);
        goto LABEL_64;
      case 3u:
        if (v8 != 26) {
          goto LABEL_57;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v16 = *(void *)(a1 + 40);
        if (!v16)
        {
          unint64_t v17 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            unint64_t v17 = (void *)*v17;
          }
          uint64_t v16 = sub_12FE350((uint64_t)v17);
          *(void *)(a1 + 40) = v16;
          uint64_t v7 = v30;
        }
        uint64_t v13 = sub_12FA558(a3, v16, (unsigned __int8 *)v7);
        goto LABEL_64;
      case 4u:
        if (v8 != 34) {
          goto LABEL_57;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v18 = *(void *)(a1 + 48);
        if (!v18)
        {
          uint64_t v19 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v19 = (void *)*v19;
          }
          uint64_t v18 = sub_12FE2C8((uint64_t)v19);
          *(void *)(a1 + 48) = v18;
          uint64_t v7 = v30;
        }
        uint64_t v13 = (char *)sub_12FA5E8(a3, v18, (unsigned __int8 *)v7);
        goto LABEL_64;
      case 5u:
        if (v8 != 42) {
          goto LABEL_57;
        }
        *(_DWORD *)(a1 + 16) |= 0x10u;
        uint64_t v20 = *(void *)(a1 + 56);
        if (!v20)
        {
          uint64_t v21 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v21 = (void *)*v21;
          }
          uint64_t v20 = sub_12FE3CC((uint64_t)v21);
          *(void *)(a1 + 56) = v20;
          uint64_t v7 = v30;
        }
        uint64_t v13 = sub_12FA678(a3, v20, (unsigned __int8 *)v7);
        goto LABEL_64;
      case 6u:
        if (v8 != 50) {
          goto LABEL_57;
        }
        *(_DWORD *)(a1 + 16) |= 0x20u;
        uint64_t v22 = *(void *)(a1 + 64);
        if (!v22)
        {
          unint64_t v23 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            unint64_t v23 = (void *)*v23;
          }
          uint64_t v22 = sub_12FE448((uint64_t)v23);
          *(void *)(a1 + 64) = v22;
          uint64_t v7 = v30;
        }
        uint64_t v13 = sub_12FA708(a3, v22, (unsigned __int8 *)v7);
        goto LABEL_64;
      case 7u:
        if (v8 != 58) {
          goto LABEL_57;
        }
        *(_DWORD *)(a1 + 16) |= 0x40u;
        uint64_t v24 = *(void *)(a1 + 72);
        if (!v24)
        {
          uint64_t v25 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v25 = (void *)*v25;
          }
          uint64_t v24 = sub_12FE4C4((uint64_t)v25);
          *(void *)(a1 + 72) = v24;
          uint64_t v7 = v30;
        }
        uint64_t v13 = sub_12FA798(a3, v24, (unsigned __int8 *)v7);
        goto LABEL_64;
      case 8u:
        if (v8 != 66) {
          goto LABEL_57;
        }
        *(_DWORD *)(a1 + 16) |= 0x80u;
        uint64_t v26 = *(void *)(a1 + 80);
        if (!v26)
        {
          uint64_t v27 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v27 = (void *)*v27;
          }
          uint64_t v26 = sub_12FE53C((uint64_t)v27);
          *(void *)(a1 + 80) = v26;
          uint64_t v7 = v30;
        }
        uint64_t v13 = (char *)sub_12FA828(a3, v26, (unsigned __int8 *)v7);
        goto LABEL_64;
      default:
LABEL_57:
        if (v8) {
          BOOL v28 = (v8 & 7) == 4;
        }
        else {
          BOOL v28 = 1;
        }
        if (!v28)
        {
          if (*v6)
          {
            int v29 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            int v29 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v7 = v30;
          }
          uint64_t v13 = (char *)sub_1885AC0(v8, v29, v7, a3);
LABEL_64:
          uint64_t v30 = v13;
          if (!v13) {
            return 0;
          }
          if (sub_11947B8((uint64_t)a3, &v30, a3[11].i32[1])) {
            return v30;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return v30;
    }
  }
}

uint64_t sub_12FA438(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12FB310(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_12FA4C8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12FBA60(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_12FA558(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12FC6BC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_12FA5E8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12FC1D4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_12FA678(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12FCAC4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_12FA708(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12FCF10(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_12FA798(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12FD440(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_12FA828(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12FD74C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_12FA8B8(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  unint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*a3 <= __dst) {
      unint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    unsigned char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    unint64_t v4 = sub_12FB634(v7, (unint64_t)v9, a3);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_22;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v10 = *(void *)(a1 + 32);
  unsigned char *v4 = 18;
  unsigned int v11 = *(_DWORD *)(v10 + 20);
  v4[1] = v11;
  if (v11 > 0x7F) {
    uint64_t v12 = sub_188A9CC(v11, v4 + 1);
  }
  else {
    uint64_t v12 = v4 + 2;
  }
  unint64_t v4 = sub_12FBD84(v10, (unint64_t)v12, a3);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_28;
  }
LABEL_22:
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v13 = *(void *)(a1 + 40);
  unsigned char *v4 = 26;
  unsigned int v14 = *(_DWORD *)(v13 + 20);
  v4[1] = v14;
  if (v14 > 0x7F) {
    uint64_t v15 = sub_188A9CC(v14, v4 + 1);
  }
  else {
    uint64_t v15 = v4 + 2;
  }
  unint64_t v4 = sub_12FC864(v13, (unint64_t)v15, a3);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_34;
  }
LABEL_28:
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v16 = *(void *)(a1 + 48);
  unsigned char *v4 = 34;
  unsigned int v17 = *(_DWORD *)(v16 + 20);
  v4[1] = v17;
  if (v17 > 0x7F) {
    uint64_t v18 = sub_188A9CC(v17, v4 + 1);
  }
  else {
    uint64_t v18 = v4 + 2;
  }
  unint64_t v4 = sub_12FC3E4(v16, (unint64_t)v18, a3);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_40;
  }
LABEL_34:
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v19 = *(void *)(a1 + 56);
  unsigned char *v4 = 42;
  unsigned int v20 = *(_DWORD *)(v19 + 20);
  v4[1] = v20;
  if (v20 > 0x7F) {
    uint64_t v21 = sub_188A9CC(v20, v4 + 1);
  }
  else {
    uint64_t v21 = v4 + 2;
  }
  unint64_t v4 = sub_12FCC6C(v19, (unint64_t)v21, a3);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_46;
  }
LABEL_40:
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v22 = *(void *)(a1 + 64);
  unsigned char *v4 = 50;
  unsigned int v23 = *(_DWORD *)(v22 + 20);
  v4[1] = v23;
  if (v23 > 0x7F) {
    uint64_t v24 = sub_188A9CC(v23, v4 + 1);
  }
  else {
    uint64_t v24 = v4 + 2;
  }
  unint64_t v4 = sub_12FD120(v22, (unint64_t)v24, a3);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_58;
    }
    goto LABEL_52;
  }
LABEL_46:
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v25 = *(void *)(a1 + 72);
  unsigned char *v4 = 58;
  unsigned int v26 = *(_DWORD *)(v25 + 16);
  v4[1] = v26;
  if (v26 > 0x7F) {
    uint64_t v27 = sub_188A9CC(v26, v4 + 1);
  }
  else {
    uint64_t v27 = v4 + 2;
  }
  unint64_t v4 = sub_12FD540(v25, v27, a3);
  if ((v6 & 0x80) != 0)
  {
LABEL_52:
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v28 = *(void *)(a1 + 80);
    unsigned char *v4 = 66;
    unsigned int v29 = *(_DWORD *)(v28 + 20);
    v4[1] = v29;
    if (v29 > 0x7F) {
      uint64_t v30 = sub_188A9CC(v29, v4 + 1);
    }
    else {
      uint64_t v30 = v4 + 2;
    }
    unint64_t v4 = sub_12FDB38(v28, (unint64_t)v30, a3);
  }
LABEL_58:
  uint64_t v31 = *(void *)(a1 + 8);
  if ((v31 & 1) == 0) {
    return v4;
  }
  unint64_t v33 = v31 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v33 + 31) < 0)
  {
    uint64_t v34 = *(void **)(v33 + 8);
    uint64_t v35 = *(void *)(v33 + 16);
  }
  else
  {
    uint64_t v34 = (void *)(v33 + 8);
    LODWORD(v35) = *(unsigned __int8 *)(v33 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v35)
  {
    uint64_t v36 = (int)v35;
    memcpy(v4, v34, (int)v35);
    v4 += v36;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v34, v35, v4);
}

uint64_t sub_12FACB0(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 16);
  if (!v2)
  {
    uint64_t v3 = 0;
    goto LABEL_15;
  }
  if (*(unsigned char *)(a1 + 16))
  {
    uint64_t v4 = sub_12FB898(*(void *)(a1 + 24));
    uint64_t v3 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v3 = 0;
  if ((*(unsigned char *)(a1 + 16) & 2) != 0)
  {
LABEL_7:
    uint64_t v5 = sub_12FBFE8(*(void *)(a1 + 32));
    v3 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_8:
  if ((v2 & 4) != 0)
  {
    uint64_t v9 = sub_12FC98C(*(void *)(a1 + 40));
    v3 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 8) == 0)
    {
LABEL_10:
      if ((v2 & 0x10) == 0) {
        goto LABEL_11;
      }
      goto LABEL_19;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_10;
  }
  uint64_t v10 = sub_12FC52C(*(void *)(a1 + 48));
  v3 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x10) == 0)
  {
LABEL_11:
    if ((v2 & 0x20) == 0) {
      goto LABEL_12;
    }
    goto LABEL_20;
  }
LABEL_19:
  uint64_t v11 = sub_12FCD94(*(void *)(a1 + 56));
  v3 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x20) == 0)
  {
LABEL_12:
    if ((v2 & 0x40) == 0) {
      goto LABEL_13;
    }
    goto LABEL_21;
  }
LABEL_20:
  uint64_t v12 = sub_12FD2AC(*(void *)(a1 + 64));
  v3 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x40) == 0)
  {
LABEL_13:
    if ((v2 & 0x80) == 0) {
      goto LABEL_15;
    }
    goto LABEL_14;
  }
LABEL_21:
  uint64_t v13 = *(void *)(a1 + 72);
  uint64_t v14 = *(void *)(v13 + 8);
  if (v14)
  {
    unint64_t v18 = v14 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v18 + 31) < 0) {
      uint64_t v15 = *(void *)(v18 + 16);
    }
    else {
      uint64_t v15 = *(unsigned __int8 *)(v18 + 31);
    }
  }
  else
  {
    uint64_t v15 = 0;
  }
  *(_DWORD *)(v13 + 16) = v15;
  v3 += v15 + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if (v2 < 0)
  {
LABEL_14:
    uint64_t v6 = sub_12FDE20(*(void *)(a1 + 80));
    v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_15:
  uint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    unint64_t v16 = v7 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v16 + 31) < 0) {
      uint64_t v17 = *(void *)(v16 + 16);
    }
    else {
      uint64_t v17 = *(unsigned __int8 *)(v16 + 31);
    }
    v3 += v17;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_12FAEE4(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (const std::string **)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = (std::string *)sub_188FB98((uint64_t)&v3[1], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2]- LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    unsigned int v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *unsigned int v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 3) != 0)
  {
    if (v9) {
      v3[2].__r_.__value_.__r.__words[0] = *(void *)(a2 + 48);
    }
    if ((v9 & 2) != 0) {
      LODWORD(v3[2].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 56);
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= v9;
  }
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

std::string *sub_12FAFE4(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 3) != 0)
  {
    if (v4)
    {
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::pointer data = (std::string *)result[1].__r_.__value_.__l.__data_;
      if (!data)
      {
        std::string::size_type size = v3->__r_.__value_.__l.__size_;
        int v7 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
        if (size) {
          int v7 = (void *)*v7;
        }
        std::string::pointer data = (std::string *)sub_1482228((uint64_t)v7);
        v3[1].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      }
      if (*(void *)(a2 + 24)) {
        unsigned int v8 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        unsigned int v8 = &off_2539FD0;
      }
      uint64_t result = sub_1481AD8(data, (uint64_t)v8);
    }
    if ((v4 & 2) != 0) {
      LODWORD(v3[1].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 32);
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

std::string *sub_12FB0B4(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (const std::string **)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = (std::string *)sub_188FB98((uint64_t)&v3[1], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2]- LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    unsigned int v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *unsigned int v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 0xF) != 0)
  {
    if (v9)
    {
      uint64_t v11 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v13 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v13 = (uint64_t *)*v13;
      }
      uint64_t result = sub_1881DF4((std::string **)&v3[2], v11, v13);
      if ((v9 & 2) == 0)
      {
LABEL_7:
        if ((v9 & 4) == 0) {
          goto LABEL_8;
        }
        goto LABEL_26;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_7;
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    uint64_t v14 = (std::string *)v3[2].__r_.__value_.__l.__size_;
    if (!v14)
    {
      std::string::size_type v15 = v3->__r_.__value_.__l.__size_;
      unint64_t v16 = (void *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
      if (v15) {
        unint64_t v16 = (void *)*v16;
      }
      uint64_t v14 = (std::string *)sub_12EDEA8((uint64_t)v16);
      v3[2].__r_.__value_.__l.__size_ = (std::string::size_type)v14;
    }
    if (*(void *)(a2 + 56)) {
      uint64_t v17 = *(uint64_t (****)())(a2 + 56);
    }
    else {
      uint64_t v17 = &off_2531DA0;
    }
    uint64_t result = sub_12D7E80(v14, (uint64_t)v17);
    if ((v9 & 4) == 0)
    {
LABEL_8:
      if ((v9 & 8) == 0)
      {
LABEL_10:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v9;
        goto LABEL_11;
      }
LABEL_9:
      LODWORD(v3[3].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 72);
      goto LABEL_10;
    }
LABEL_26:
    v3[2].__r_.__value_.__r.__words[2] = *(void *)(a2 + 64);
    if ((v9 & 8) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
LABEL_11:
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_12FB244()
{
  return 1;
}

void *sub_12FB24C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap.RapUpdate.NotificationDetails");
}

void *sub_12FB25C(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1889DE8(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12FB2D8(void *a1)
{
  sub_12FB25C(a1);

  operator delete();
}

uint64_t sub_12FB310(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v35 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v35, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (uint64_t **)(a1 + 24);
  unsigned int v8 = (void *)(a1 + 8);
  while (1)
  {
    int v9 = (char *)(*(void *)v35 + 1);
    unsigned int v10 = **(unsigned char **)v35;
    if ((char)**(unsigned char **)v35 < 0)
    {
      unsigned int v11 = v10 + (*v9 << 7);
      unsigned int v10 = v11 - 128;
      if (*v9 < 0)
      {
        int v9 = (char *)sub_188C180(*(uint64_t *)v35, v11 - 128);
        unsigned int v10 = v12;
      }
      else
      {
        int v9 = (char *)(*(void *)v35 + 2);
      }
    }
    *(void *)uint64_t v35 = v9;
    unsigned int v13 = v10 >> 3;
    if (v10 >> 3 == 3)
    {
      if (v10 == 26)
      {
        uint64_t v17 = v9 - 1;
        while (1)
        {
          unint64_t v18 = (char *)(v17 + 1);
          *(void *)uint64_t v35 = v17 + 1;
          uint64_t v19 = *(_DWORD **)(a1 + 40);
          if (v19 && (uint64_t v20 = *(int *)(a1 + 32), (int)v20 < *v19))
          {
            *(_DWORD *)(a1 + 32) = v20 + 1;
            uint64_t v21 = *(std::string **)&v19[2 * v20 + 2];
          }
          else
          {
            if (!*v7) {
              operator new();
            }
            *unsigned int v23 = v22;
            v23[1] = sub_3A6EDC;
            *uint64_t v22 = 0;
            v22[1] = 0;
            int v22[2] = 0;
            uint64_t v21 = (std::string *)sub_188CDC8(a1 + 24, (uint64_t)v22);
            unint64_t v18 = *(char **)v35;
          }
          uint64_t v17 = sub_188C244(v21, v18, (uint64_t)a3);
          *(void *)uint64_t v35 = v17;
          if (!v17) {
            goto LABEL_58;
          }
          if (*(void *)a3 <= (unint64_t)v17 || *v17 != 26) {
            goto LABEL_45;
          }
        }
      }
      goto LABEL_14;
    }
    if (v13 != 2) {
      break;
    }
    if (v10 != 16) {
      goto LABEL_14;
    }
    uint64_t v24 = v9 + 1;
    uint64_t v25 = *v9;
    if ((*v9 & 0x80000000) == 0) {
      goto LABEL_38;
    }
    int v26 = *v24;
    uint64_t v25 = v25 + (v26 << 7) - 128;
    if ((v26 & 0x80000000) == 0)
    {
      uint64_t v24 = v9 + 2;
LABEL_38:
      *(void *)uint64_t v35 = v24;
      *(void *)(a1 + 48) = v25;
      int v5 = 1;
      goto LABEL_45;
    }
    uint64_t v31 = sub_188C138((uint64_t)v9, v25);
    *(void *)uint64_t v35 = v31;
    *(void *)(a1 + 48) = v32;
    int v5 = 1;
    if (!v31) {
      goto LABEL_58;
    }
LABEL_45:
    if (sub_11947B8((uint64_t)a3, (char **)v35, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v13 == 1 && v10 == 8)
  {
    uint64_t v27 = v9 + 1;
    unint64_t v28 = *v9;
    if ((*v9 & 0x80000000) == 0) {
      goto LABEL_42;
    }
    int v29 = *v27;
    int v30 = v28 + (v29 << 7);
    unint64_t v28 = (v30 - 128);
    if (v29 < 0)
    {
      *(void *)uint64_t v35 = sub_188C138((uint64_t)v9, (v30 - 128));
      if (!*(void *)v35) {
        goto LABEL_58;
      }
      unint64_t v28 = v33;
    }
    else
    {
      uint64_t v27 = v9 + 2;
LABEL_42:
      *(void *)uint64_t v35 = v27;
    }
    if (v28 > 3)
    {
      if (*v8) {
        uint64_t v34 = (std::string *)((*v8 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        uint64_t v34 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      sub_188C020(1, v28, v34);
    }
    else
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      *(_DWORD *)(a1 + 56) = v28;
    }
    goto LABEL_45;
  }
LABEL_14:
  if (v10) {
    BOOL v15 = (v10 & 7) == 4;
  }
  else {
    BOOL v15 = 1;
  }
  if (!v15)
  {
    if (*v8)
    {
      unint64_t v16 = (std::string *)((*v8 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v16 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v9 = *(char **)v35;
    }
    *(void *)uint64_t v35 = sub_1885AC0(v10, v16, v9, a3);
    if (!*(void *)v35) {
      goto LABEL_58;
    }
    goto LABEL_45;
  }
  if (v9)
  {
    a3[10].i32[0] = v10 - 1;
    goto LABEL_2;
  }
LABEL_58:
  *(void *)uint64_t v35 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return *(void *)v35;
}

char *sub_12FB634(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= __dst) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 56);
    char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(void *)(a1 + 48);
    char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v13 = *(unsigned int *)(a1 + 32);
  if ((int)v13 >= 1)
  {
    uint64_t v14 = 0;
    uint64_t v15 = 8 * v13;
    do
    {
      unint64_t v16 = *(void **)(*(void *)(a1 + 40) + v14 + 8);
      if (*((char *)v16 + 23) < 0)
      {
        int64_t v17 = v16[1];
        if (v17 > 127) {
          goto LABEL_26;
        }
      }
      else
      {
        int64_t v17 = *((unsigned __int8 *)v16 + 23);
      }
      if (*(void *)a3 - (void)v4 + 14 >= v17)
      {
        char *v4 = 26;
        v4[1] = v17;
        if (*((char *)v16 + 23) < 0) {
          unint64_t v16 = (void *)*v16;
        }
        unint64_t v18 = v4 + 2;
        memcpy(v18, v16, v17);
        int v4 = &v18[v17];
        goto LABEL_24;
      }
LABEL_26:
      int v4 = (char *)sub_188A868(a3, 3, (uint64_t)v16, v4);
LABEL_24:
      v14 += 8;
    }
    while (v15 != v14);
  }
  uint64_t v19 = *(void *)(a1 + 8);
  if ((v19 & 1) == 0) {
    return v4;
  }
  unint64_t v21 = v19 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v21 + 31) < 0)
  {
    uint64_t v22 = *(void **)(v21 + 8);
    uint64_t v23 = *(void *)(v21 + 16);
  }
  else
  {
    uint64_t v22 = (void *)(v21 + 8);
    LODWORD(v23) = *(unsigned __int8 *)(v21 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v23)
  {
    uint64_t v24 = (int)v23;
    memcpy(v4, v22, (int)v23);
    v4 += v24;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v22, v23, v4);
}

uint64_t sub_12FB898(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 32);
  if ((int)v1 < 1)
  {
    uint64_t v3 = *(unsigned int *)(a1 + 32);
  }
  else
  {
    uint64_t v2 = (uint64_t *)(*(void *)(a1 + 40) + 8);
    uint64_t v3 = *(unsigned int *)(a1 + 32);
    do
    {
      uint64_t v4 = *v2++;
      uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
      uint64_t v6 = *(void *)(v4 + 8);
      if ((v5 & 0x80u) == 0) {
        uint64_t v6 = v5;
      }
      v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6);
      --v1;
    }
    while (v1);
  }
  int v7 = *(_DWORD *)(a1 + 16);
  if ((v7 & 3) != 0)
  {
    if (v7) {
      v3 += ((9 * (__clz(*(void *)(a1 + 48) | 1) ^ 0x3F) + 73) >> 6) + 1;
    }
    if ((v7 & 2) != 0)
    {
      int v8 = *(_DWORD *)(a1 + 56);
      if (v8 < 0) {
        uint64_t v9 = 11;
      }
      else {
        uint64_t v9 = ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
      v3 += v9;
    }
  }
  uint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v12 + 31) < 0) {
      uint64_t v13 = *(void *)(v12 + 16);
    }
    else {
      uint64_t v13 = *(unsigned __int8 *)(v12 + 31);
    }
    v3 += v13;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

uint64_t sub_12FB994()
{
  return 1;
}

void *sub_12FB99C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap.RapUpdate.PoiNotification");
}

void *sub_12FB9AC(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1889DE8(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12FBA28(void *a1)
{
  sub_12FB9AC(a1);

  operator delete();
}

uint64_t sub_12FBA60(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v35 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v35, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (uint64_t **)(a1 + 24);
  int v8 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v9 = (char *)(*(void *)v35 + 1);
    unsigned int v10 = **(unsigned char **)v35;
    if ((char)**(unsigned char **)v35 < 0)
    {
      unsigned int v11 = v10 + (*v9 << 7);
      unsigned int v10 = v11 - 128;
      if (*v9 < 0)
      {
        uint64_t v9 = (char *)sub_188C180(*(uint64_t *)v35, v11 - 128);
        unsigned int v10 = v12;
      }
      else
      {
        uint64_t v9 = (char *)(*(void *)v35 + 2);
      }
    }
    *(void *)uint64_t v35 = v9;
    unsigned int v13 = v10 >> 3;
    if (v10 >> 3 == 3)
    {
      if (v10 == 26)
      {
        int64_t v17 = v9 - 1;
        while (1)
        {
          unint64_t v18 = (char *)(v17 + 1);
          *(void *)uint64_t v35 = v17 + 1;
          uint64_t v19 = *(_DWORD **)(a1 + 40);
          if (v19 && (uint64_t v20 = *(int *)(a1 + 32), (int)v20 < *v19))
          {
            *(_DWORD *)(a1 + 32) = v20 + 1;
            unint64_t v21 = *(std::string **)&v19[2 * v20 + 2];
          }
          else
          {
            if (!*v7) {
              operator new();
            }
            *uint64_t v23 = v22;
            v23[1] = sub_3A6EDC;
            *uint64_t v22 = 0;
            v22[1] = 0;
            int v22[2] = 0;
            unint64_t v21 = (std::string *)sub_188CDC8(a1 + 24, (uint64_t)v22);
            unint64_t v18 = *(char **)v35;
          }
          int64_t v17 = sub_188C244(v21, v18, (uint64_t)a3);
          *(void *)uint64_t v35 = v17;
          if (!v17) {
            goto LABEL_58;
          }
          if (*(void *)a3 <= (unint64_t)v17 || *v17 != 26) {
            goto LABEL_45;
          }
        }
      }
      goto LABEL_14;
    }
    if (v13 != 2) {
      break;
    }
    if (v10 != 16) {
      goto LABEL_14;
    }
    uint64_t v24 = v9 + 1;
    uint64_t v25 = *v9;
    if ((*v9 & 0x80000000) == 0) {
      goto LABEL_38;
    }
    int v26 = *v24;
    uint64_t v25 = v25 + (v26 << 7) - 128;
    if ((v26 & 0x80000000) == 0)
    {
      uint64_t v24 = v9 + 2;
LABEL_38:
      *(void *)uint64_t v35 = v24;
      *(void *)(a1 + 48) = v25;
      int v5 = 1;
      goto LABEL_45;
    }
    uint64_t v31 = sub_188C138((uint64_t)v9, v25);
    *(void *)uint64_t v35 = v31;
    *(void *)(a1 + 48) = v32;
    int v5 = 1;
    if (!v31) {
      goto LABEL_58;
    }
LABEL_45:
    if (sub_11947B8((uint64_t)a3, (char **)v35, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v13 == 1 && v10 == 8)
  {
    uint64_t v27 = v9 + 1;
    unint64_t v28 = *v9;
    if ((*v9 & 0x80000000) == 0) {
      goto LABEL_42;
    }
    int v29 = *v27;
    int v30 = v28 + (v29 << 7);
    unint64_t v28 = (v30 - 128);
    if (v29 < 0)
    {
      *(void *)uint64_t v35 = sub_188C138((uint64_t)v9, (v30 - 128));
      if (!*(void *)v35) {
        goto LABEL_58;
      }
      unint64_t v28 = v33;
    }
    else
    {
      uint64_t v27 = v9 + 2;
LABEL_42:
      *(void *)uint64_t v35 = v27;
    }
    if (v28 > 7)
    {
      if (*v8) {
        uint64_t v34 = (std::string *)((*v8 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        uint64_t v34 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      sub_188C020(1, v28, v34);
    }
    else
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      *(_DWORD *)(a1 + 56) = v28;
    }
    goto LABEL_45;
  }
LABEL_14:
  if (v10) {
    BOOL v15 = (v10 & 7) == 4;
  }
  else {
    BOOL v15 = 1;
  }
  if (!v15)
  {
    if (*v8)
    {
      unint64_t v16 = (std::string *)((*v8 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v16 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v9 = *(char **)v35;
    }
    *(void *)uint64_t v35 = sub_1885AC0(v10, v16, v9, a3);
    if (!*(void *)v35) {
      goto LABEL_58;
    }
    goto LABEL_45;
  }
  if (v9)
  {
    a3[10].i32[0] = v10 - 1;
    goto LABEL_2;
  }
LABEL_58:
  *(void *)uint64_t v35 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return *(void *)v35;
}

char *sub_12FBD84(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 56);
    char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(void *)(a1 + 48);
    char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v13 = *(unsigned int *)(a1 + 32);
  if ((int)v13 >= 1)
  {
    uint64_t v14 = 0;
    uint64_t v15 = 8 * v13;
    do
    {
      unint64_t v16 = *(void **)(*(void *)(a1 + 40) + v14 + 8);
      if (*((char *)v16 + 23) < 0)
      {
        int64_t v17 = v16[1];
        if (v17 > 127) {
          goto LABEL_26;
        }
      }
      else
      {
        int64_t v17 = *((unsigned __int8 *)v16 + 23);
      }
      if (*(void *)a3 - (void)v4 + 14 >= v17)
      {
        char *v4 = 26;
        v4[1] = v17;
        if (*((char *)v16 + 23) < 0) {
          unint64_t v16 = (void *)*v16;
        }
        unint64_t v18 = v4 + 2;
        memcpy(v18, v16, v17);
        uint64_t v4 = &v18[v17];
        goto LABEL_24;
      }
LABEL_26:
      uint64_t v4 = (char *)sub_188A868(a3, 3, (uint64_t)v16, v4);
LABEL_24:
      v14 += 8;
    }
    while (v15 != v14);
  }
  uint64_t v19 = *(void *)(a1 + 8);
  if ((v19 & 1) == 0) {
    return v4;
  }
  unint64_t v21 = v19 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v21 + 31) < 0)
  {
    uint64_t v22 = *(void **)(v21 + 8);
    uint64_t v23 = *(void *)(v21 + 16);
  }
  else
  {
    uint64_t v22 = (void *)(v21 + 8);
    LODWORD(v23) = *(unsigned __int8 *)(v21 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v23)
  {
    uint64_t v24 = (int)v23;
    memcpy(v4, v22, (int)v23);
    v4 += v24;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v22, v23, v4);
}

uint64_t sub_12FBFE8(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 32);
  if ((int)v1 < 1)
  {
    uint64_t v3 = *(unsigned int *)(a1 + 32);
  }
  else
  {
    uint64_t v2 = (uint64_t *)(*(void *)(a1 + 40) + 8);
    uint64_t v3 = *(unsigned int *)(a1 + 32);
    do
    {
      uint64_t v4 = *v2++;
      uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
      uint64_t v6 = *(void *)(v4 + 8);
      if ((v5 & 0x80u) == 0) {
        uint64_t v6 = v5;
      }
      v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6);
      --v1;
    }
    while (v1);
  }
  int v7 = *(_DWORD *)(a1 + 16);
  if ((v7 & 3) != 0)
  {
    if (v7) {
      v3 += ((9 * (__clz(*(void *)(a1 + 48) | 1) ^ 0x3F) + 73) >> 6) + 1;
    }
    if ((v7 & 2) != 0)
    {
      int v8 = *(_DWORD *)(a1 + 56);
      if (v8 < 0) {
        uint64_t v9 = 11;
      }
      else {
        uint64_t v9 = ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
      v3 += v9;
    }
  }
  uint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v12 + 31) < 0) {
      uint64_t v13 = *(void *)(v12 + 16);
    }
    else {
      uint64_t v13 = *(unsigned __int8 *)(v12 + 31);
    }
    v3 += v13;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

uint64_t sub_12FC0E4()
{
  return 1;
}

void *sub_12FC0EC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap.RapUpdate.TransitNotification");
}

uint64_t sub_12FC0FC(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12FC19C(uint64_t a1)
{
  sub_12FC0FC(a1);

  operator delete();
}

uint64_t sub_12FC1D4(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v24 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v24, a3[11].i32[1])) {
    return *(void *)v24;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    int v7 = (char *)(*(void *)v24 + 1);
    unsigned int v8 = **(unsigned char **)v24;
    if ((char)**(unsigned char **)v24 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        int v7 = (char *)sub_188C180(*(uint64_t *)v24, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        int v7 = (char *)(*(void *)v24 + 2);
      }
    }
    *(void *)uint64_t v24 = v7;
    if (v8 >> 3 != 2) {
      break;
    }
    if (v8 != 18) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v15 = *(void *)(a1 + 8);
    unint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
    if (v15) {
      unint64_t v16 = (uint64_t *)*v16;
    }
    int64_t v17 = (std::string *)sub_1880F84((void *)(a1 + 24), v16);
    uint64_t v14 = (void *)sub_188C244(v17, *(char **)v24, (uint64_t)a3);
LABEL_24:
    *(void *)uint64_t v24 = v14;
    if (!v14) {
      goto LABEL_43;
    }
LABEL_32:
    if (sub_11947B8((uint64_t)a3, (char **)v24, a3[11].i32[1])) {
      return *(void *)v24;
    }
  }
  if (v8 >> 3 == 1 && v8 == 8)
  {
    unint64_t v18 = v7 + 1;
    unint64_t v19 = *v7;
    if ((*v7 & 0x80000000) == 0) {
      goto LABEL_29;
    }
    int v20 = *v18;
    int v21 = v19 + (v20 << 7);
    unint64_t v19 = (v21 - 128);
    if (v20 < 0)
    {
      *(void *)uint64_t v24 = sub_188C138((uint64_t)v7, (v21 - 128));
      if (!*(void *)v24) {
        goto LABEL_43;
      }
      unint64_t v19 = v22;
    }
    else
    {
      unint64_t v18 = v7 + 2;
LABEL_29:
      *(void *)uint64_t v24 = v18;
    }
    if (v19 > 1)
    {
      if (*v6) {
        uint64_t v23 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        uint64_t v23 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      sub_188C020(1, v19, v23);
    }
    else
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      *(_DWORD *)(a1 + 32) = v19;
    }
    goto LABEL_32;
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v7 = *(char **)v24;
    }
    uint64_t v14 = sub_1885AC0(v8, v13, v7, a3);
    goto LABEL_24;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v24;
  }
LABEL_43:
  *(void *)uint64_t v24 = 0;
  return *(void *)v24;
}

unsigned char *sub_12FC3E4(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 32);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v10 = *(void *)(a1 + 8);
  if ((v10 & 1) == 0) {
    return v4;
  }
  unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v12 + 31) < 0)
  {
    uint64_t v13 = *(void **)(v12 + 8);
    uint64_t v14 = *(void *)(v12 + 16);
  }
  else
  {
    uint64_t v13 = (void *)(v12 + 8);
    LODWORD(v14) = *(unsigned __int8 *)(v12 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v14)
  {
    uint64_t v15 = (int)v14;
    memcpy(v4, v13, (int)v14);
    v4 += v15;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v13, v14, v4);
}

uint64_t sub_12FC52C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_13;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_13;
    }
    goto LABEL_9;
  }
  unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
  uint64_t v5 = *(void *)(v3 + 8);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = v4;
  }
  uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    int v6 = *(_DWORD *)(a1 + 32);
    if (v6 < 0) {
      uint64_t v7 = 11;
    }
    else {
      uint64_t v7 = ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v7;
  }
LABEL_13:
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_12FC5F8()
{
  return 1;
}

void *sub_12FC600@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap.RapUpdate.TileNotification");
}

void *sub_12FC610(void *a1)
{
  unint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12FC684(void *a1)
{
  sub_12FC610(a1);

  operator delete();
}

char *sub_12FC6BC(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v19 = a2;
  if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
    return v19;
  }
  uint64_t v5 = (void *)(a1 + 8);
  while (1)
  {
    int v6 = v19 + 1;
    unsigned int v7 = *v19;
    if (*v19 < 0)
    {
      unsigned int v8 = v7 + (*v6 << 7);
      unsigned int v7 = v8 - 128;
      if (*v6 < 0)
      {
        int v6 = (char *)sub_188C180((uint64_t)v19, v8 - 128);
        unsigned int v7 = v9;
      }
      else
      {
        int v6 = v19 + 2;
      }
    }
    unint64_t v19 = v6;
    if (v7 == 8)
    {
      unint64_t v12 = v6 + 1;
      unint64_t v13 = *v6;
      if (*v6 < 0)
      {
        int v14 = *v12;
        int v15 = v13 + (v14 << 7);
        unint64_t v13 = (v15 - 128);
        if (v14 < 0)
        {
          unint64_t v19 = (char *)sub_188C138((uint64_t)v6, (v15 - 128));
          if (!v19) {
            return 0;
          }
          unint64_t v13 = v16;
          goto LABEL_20;
        }
        unint64_t v12 = v6 + 2;
      }
      unint64_t v19 = v12;
LABEL_20:
      if (v13 > 1)
      {
        if (*v5) {
          int64_t v17 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          int64_t v17 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        sub_188C020(1, v13, v17);
      }
      else
      {
        *(_DWORD *)(a1 + 16) |= 1u;
        *(_DWORD *)(a1 + 24) = v13;
      }
      goto LABEL_22;
    }
    if (!v7 || (v7 & 7) == 4) {
      break;
    }
    if (*v5)
    {
      uint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v6 = v19;
    }
    unint64_t v19 = (char *)sub_1885AC0(v7, v11, v6, a3);
    if (!v19) {
      return 0;
    }
LABEL_22:
    if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
      return v19;
    }
  }
  if (v6)
  {
    a3[10].i32[0] = v7 - 1;
    return v19;
  }
  return 0;
}

unsigned char *sub_12FC864(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v6 = *(int *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v6;
    if (v6 > 0x7F)
    {
      v4[1] = v6 | 0x80;
      unint64_t v7 = v6 >> 7;
      v4[2] = v6 >> 7;
      v4 += 3;
      if (v6 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v8 = v7 >> 14;
          v7 >>= 7;
          *v4++ = v7;
        }
        while (v8);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    unint64_t v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    unint64_t v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    v4 += v14;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v12, v13, v4);
}

uint64_t sub_12FC98C(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    int v2 = *(_DWORD *)(a1 + 24);
    if (v2 < 0) {
      uint64_t v1 = 11;
    }
    else {
      uint64_t v1 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  else
  {
    uint64_t v1 = 0;
  }
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v5 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    v1 += v6;
  }
  *(_DWORD *)(a1 + 20) = v1;
  return v1;
}

uint64_t sub_12FCA00()
{
  return 1;
}

void *sub_12FCA08@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap.RapUpdate.AddressNotification");
}

void *sub_12FCA18(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12FCA8C(void *a1)
{
  sub_12FCA18(a1);

  operator delete();
}

char *sub_12FCAC4(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v19 = a2;
  if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
    return v19;
  }
  unint64_t v5 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v6 = v19 + 1;
    unsigned int v7 = *v19;
    if (*v19 < 0)
    {
      unsigned int v8 = v7 + (*v6 << 7);
      unsigned int v7 = v8 - 128;
      if (*v6 < 0)
      {
        uint64_t v6 = (char *)sub_188C180((uint64_t)v19, v8 - 128);
        unsigned int v7 = v9;
      }
      else
      {
        uint64_t v6 = v19 + 2;
      }
    }
    unint64_t v19 = v6;
    if (v7 == 8)
    {
      unint64_t v12 = v6 + 1;
      unint64_t v13 = *v6;
      if (*v6 < 0)
      {
        int v14 = *v12;
        int v15 = v13 + (v14 << 7);
        unint64_t v13 = (v15 - 128);
        if (v14 < 0)
        {
          unint64_t v19 = (char *)sub_188C138((uint64_t)v6, (v15 - 128));
          if (!v19) {
            return 0;
          }
          unint64_t v13 = v16;
          goto LABEL_20;
        }
        unint64_t v12 = v6 + 2;
      }
      unint64_t v19 = v12;
LABEL_20:
      if (v13 > 1)
      {
        if (*v5) {
          int64_t v17 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          int64_t v17 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        sub_188C020(1, v13, v17);
      }
      else
      {
        *(_DWORD *)(a1 + 16) |= 1u;
        *(_DWORD *)(a1 + 24) = v13;
      }
      goto LABEL_22;
    }
    if (!v7 || (v7 & 7) == 4) {
      break;
    }
    if (*v5)
    {
      unint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v6 = v19;
    }
    unint64_t v19 = (char *)sub_1885AC0(v7, v11, v6, a3);
    if (!v19) {
      return 0;
    }
LABEL_22:
    if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
      return v19;
    }
  }
  if (v6)
  {
    a3[10].i32[0] = v7 - 1;
    return v19;
  }
  return 0;
}

unsigned char *sub_12FCC6C(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v6 = *(int *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v6;
    if (v6 > 0x7F)
    {
      v4[1] = v6 | 0x80;
      unint64_t v7 = v6 >> 7;
      v4[2] = v6 >> 7;
      v4 += 3;
      if (v6 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v8 = v7 >> 14;
          v7 >>= 7;
          *v4++ = v7;
        }
        while (v8);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    unint64_t v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    unint64_t v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    v4 += v14;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v12, v13, v4);
}

uint64_t sub_12FCD94(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    int v2 = *(_DWORD *)(a1 + 24);
    if (v2 < 0) {
      uint64_t v1 = 11;
    }
    else {
      uint64_t v1 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  else
  {
    uint64_t v1 = 0;
  }
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v5 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    v1 += v6;
  }
  *(_DWORD *)(a1 + 20) = v1;
  return v1;
}

uint64_t sub_12FCE08()
{
  return 1;
}

void *sub_12FCE10@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap.RapUpdate.DirectionsNotification");
}

uint64_t sub_12FCE20(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  if ((uint64_t (***)())a1 != &off_2532380 && *(void *)(a1 + 24))
  {
    sub_14814F4();
    operator delete();
  }
  if (*(void *)(a1 + 8)) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12FCED8(uint64_t a1)
{
  sub_12FCE20(a1);

  operator delete();
}

char *sub_12FCF10(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v23 = a2;
  if (sub_11947B8((uint64_t)a3, &v23, a3[11].i32[1])) {
    return v23;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    unint64_t v7 = v23 + 1;
    unsigned int v8 = *v23;
    if (*v23 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        unint64_t v7 = (char *)sub_188C180((uint64_t)v23, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        unint64_t v7 = v23 + 2;
      }
    }
    uint64_t v23 = v7;
    if (v8 >> 3 != 2) {
      break;
    }
    if (v8 != 18) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    int v15 = *(void **)(a1 + 24);
    if (!v15)
    {
      unint64_t v16 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        unint64_t v16 = (void *)*v16;
      }
      int v15 = sub_1482228((uint64_t)v16);
      *(void *)(a1 + 24) = v15;
      unint64_t v7 = v23;
    }
    uint64_t v14 = sub_12E4CC4(a3, (uint64_t)v15, (unsigned __int8 *)v7);
LABEL_26:
    uint64_t v23 = v14;
    if (!v14) {
      return 0;
    }
LABEL_34:
    if (sub_11947B8((uint64_t)a3, &v23, a3[11].i32[1])) {
      return v23;
    }
  }
  if (v8 >> 3 == 1 && v8 == 8)
  {
    int64_t v17 = v7 + 1;
    unint64_t v18 = *v7;
    if ((*v7 & 0x80000000) == 0) {
      goto LABEL_31;
    }
    int v19 = *v17;
    int v20 = v18 + (v19 << 7);
    unint64_t v18 = (v20 - 128);
    if (v19 < 0)
    {
      uint64_t v23 = (char *)sub_188C138((uint64_t)v7, (v20 - 128));
      if (!v23) {
        return 0;
      }
      unint64_t v18 = v21;
    }
    else
    {
      int64_t v17 = v7 + 2;
LABEL_31:
      uint64_t v23 = v17;
    }
    if (v18 > 1)
    {
      if (*v6) {
        unint64_t v22 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        unint64_t v22 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      sub_188C020(1, v18, v22);
    }
    else
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      *(_DWORD *)(a1 + 32) = v18;
    }
    goto LABEL_34;
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unint64_t v7 = v23;
    }
    uint64_t v14 = (char *)sub_1885AC0(v8, v13, v7, a3);
    goto LABEL_26;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v23;
  }
  return 0;
}

unsigned char *sub_12FD120(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 32);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 24);
    unsigned char *v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 20);
    v4[1] = v11;
    if (v11 > 0x7F) {
      BOOL v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      BOOL v12 = v4 + 2;
    }
    uint64_t v4 = sub_1481880(v10, (unint64_t)v12, a3);
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    unint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    unint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_12FD2AC(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 3) == 0)
  {
    uint64_t result = 0;
    goto LABEL_11;
  }
  if (v2)
  {
    uint64_t v4 = sub_1481A00(*(void *)(a1 + 24));
    uint64_t result = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_11;
    }
  }
  else
  {
    uint64_t result = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_11;
    }
  }
  int v5 = *(_DWORD *)(a1 + 32);
  if (v5 < 0) {
    uint64_t v6 = 11;
  }
  else {
    uint64_t v6 = ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  result += v6;
LABEL_11:
  uint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    unint64_t v8 = v7 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v8 + 31) < 0) {
      uint64_t v9 = *(void *)(v8 + 16);
    }
    else {
      uint64_t v9 = *(unsigned __int8 *)(v8 + 31);
    }
    result += v9;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

uint64_t sub_12FD37C()
{
  return 1;
}

void *sub_12FD384@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap.RapUpdate.GroundViewNotification");
}

void *sub_12FD394(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12FD408(void *a1)
{
  sub_12FD394(a1);

  operator delete();
}

char *sub_12FD440(uint64_t a1, char *a2, int32x2_t *a3)
{
  BOOL v12 = a2;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  while (1)
  {
    if (sub_11947B8((uint64_t)a3, &v12, a3[11].i32[1])) {
      return v12;
    }
    int v5 = v12 + 1;
    unsigned int v6 = *v12;
    if (*v12 < 0)
    {
      unsigned int v7 = v6 + (*v5 << 7);
      unsigned int v6 = v7 - 128;
      if (*v5 < 0)
      {
        int v5 = (char *)sub_188C180((uint64_t)v12, v7 - 128);
        unsigned int v6 = v8;
      }
      else
      {
        int v5 = v12 + 2;
      }
    }
    BOOL v12 = v5;
    if (!v6 || (v6 & 7) == 4) {
      break;
    }
    if (*v4)
    {
      uint64_t v10 = (std::string *)((*v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v10 = (std::string *)sub_188DBD8(v4);
      int v5 = v12;
    }
    BOOL v12 = (char *)sub_1885AC0(v6, v10, v5, a3);
    if (!v12) {
      return 0;
    }
  }
  if (v5) {
    a3[10].i32[0] = v6 - 1;
  }
  return v5;
}

char *sub_12FD540(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v4 = *(void *)(a1 + 8);
  if ((v4 & 1) == 0) {
    return __dst;
  }
  unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v6 + 31) < 0)
  {
    unsigned int v7 = *(void **)(v6 + 8);
    unint64_t v6 = *(void *)(v6 + 16);
  }
  else
  {
    unsigned int v7 = (void *)(v6 + 8);
    LODWORD(v6) = *(unsigned __int8 *)(v6 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v6)
  {
    uint64_t v8 = (int)v6;
    memcpy(__dst, v7, (int)v6);
    __dst += v8;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v7, v6, __dst);
}

uint64_t sub_12FD5D8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (v1)
  {
    unint64_t v4 = v1 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v2 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v2 = *(unsigned __int8 *)(v4 + 31);
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  *(_DWORD *)(a1 + 16) = v2;
  return v2;
}

std::string *sub_12FD60C(std::string *result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 8);
  if (v2) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v2 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_12FD628()
{
  return 1;
}

void *sub_12FD630@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap.RapUpdate.GenericNotification");
}

uint64_t sub_12FD640(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  unint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  int v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_25323C0)
  {
    uint64_t v6 = *(void *)(a1 + 56);
    if (v6)
    {
      sub_12ED588(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  sub_1889DE8((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12FD714(uint64_t a1)
{
  sub_12FD640(a1);

  operator delete();
}

uint64_t sub_12FD74C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unint64_t v39 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v39, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unsigned int v7 = (void *)(a1 + 8);
  uint64_t v8 = (uint64_t **)(a1 + 24);
  while (2)
  {
    uint64_t v9 = (unsigned __int8 *)(*(void *)v39 + 1);
    unsigned int v10 = **(unsigned char **)v39;
    if ((char)**(unsigned char **)v39 < 0)
    {
      unsigned int v11 = v10 + (*v9 << 7);
      unsigned int v10 = v11 - 128;
      if ((char)*v9 < 0)
      {
        uint64_t v9 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v39, v11 - 128);
        unsigned int v10 = v12;
      }
      else
      {
        uint64_t v9 = (unsigned __int8 *)(*(void *)v39 + 2);
      }
    }
    *(void *)unint64_t v39 = v9;
    switch(v10 >> 3)
    {
      case 1u:
        if (v10 != 8) {
          goto LABEL_43;
        }
        uint64_t v13 = (char *)(v9 + 1);
        unint64_t v14 = *v9;
        if (((char)*v9 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v15 = *v13;
        int v16 = v14 + (v15 << 7);
        unint64_t v14 = (v16 - 128);
        if (v15 < 0)
        {
          *(void *)unint64_t v39 = sub_188C138((uint64_t)v9, (v16 - 128));
          if (!*(void *)v39) {
            goto LABEL_64;
          }
          unint64_t v14 = v35;
        }
        else
        {
          uint64_t v13 = (char *)(v9 + 2);
LABEL_13:
          *(void *)unint64_t v39 = v13;
        }
        if (sub_12EDF30(v14))
        {
          *(_DWORD *)(a1 + 16) |= 8u;
          *(_DWORD *)(a1 + 72) = v14;
        }
        else
        {
          if (*v7) {
            int v38 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            int v38 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(1, v14, v38);
        }
        goto LABEL_51;
      case 2u:
        if (v10 != 16) {
          goto LABEL_43;
        }
        v5 |= 4u;
        uint64_t v17 = (char *)(v9 + 1);
        uint64_t v18 = *v9;
        if (((char)*v9 & 0x80000000) == 0) {
          goto LABEL_20;
        }
        int v19 = *v17;
        uint64_t v18 = v18 + (v19 << 7) - 128;
        if (v19 < 0)
        {
          uint64_t v36 = sub_188C138((uint64_t)v9, v18);
          *(void *)unint64_t v39 = v36;
          *(void *)(a1 + 64) = v37;
          if (!v36) {
            goto LABEL_64;
          }
        }
        else
        {
          uint64_t v17 = (char *)(v9 + 2);
LABEL_20:
          *(void *)unint64_t v39 = v17;
          *(void *)(a1 + 64) = v18;
        }
        goto LABEL_51;
      case 3u:
        if (v10 != 26) {
          goto LABEL_43;
        }
        int v20 = (const std::string::value_type *)(v9 - 1);
        while (1)
        {
          unint64_t v21 = (char *)(v20 + 1);
          *(void *)unint64_t v39 = v20 + 1;
          unint64_t v22 = *(_DWORD **)(a1 + 40);
          if (v22 && (uint64_t v23 = *(int *)(a1 + 32), (int)v23 < *v22))
          {
            *(_DWORD *)(a1 + 32) = v23 + 1;
            uint64_t v24 = *(std::string **)&v22[2 * v23 + 2];
          }
          else
          {
            if (!*v8) {
              operator new();
            }
            *int v26 = v25;
            v26[1] = sub_3A6EDC;
            *uint64_t v25 = 0;
            v25[1] = 0;
            int v25[2] = 0;
            uint64_t v24 = (std::string *)sub_188CDC8(a1 + 24, (uint64_t)v25);
            unint64_t v21 = *(char **)v39;
          }
          int v20 = sub_188C244(v24, v21, (uint64_t)a3);
          *(void *)unint64_t v39 = v20;
          if (!v20) {
            goto LABEL_64;
          }
          if (*(void *)a3 <= (unint64_t)v20 || *v20 != 26) {
            goto LABEL_51;
          }
        }
      case 5u:
        if (v10 != 42) {
          goto LABEL_43;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v27 = *(void **)(a1 + 56);
        if (!v27)
        {
          unint64_t v28 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            unint64_t v28 = (void *)*v28;
          }
          uint64_t v27 = sub_12EDEA8((uint64_t)v28);
          *(void *)(a1 + 56) = v27;
          uint64_t v9 = *(unsigned __int8 **)v39;
        }
        uint64_t v29 = sub_12D7768(a3, (uint64_t)v27, v9);
        goto LABEL_50;
      case 6u:
        if (v10 != 50) {
          goto LABEL_43;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v30 = *(void *)(a1 + 8);
        uint64_t v31 = (uint64_t *)(v30 & 0xFFFFFFFFFFFFFFFCLL);
        if (v30) {
          uint64_t v31 = (uint64_t *)*v31;
        }
        uint64_t v32 = (std::string *)sub_1880F84((void *)(a1 + 48), v31);
        uint64_t v29 = (uint64_t)sub_188C244(v32, *(char **)v39, (uint64_t)a3);
        goto LABEL_50;
      default:
LABEL_43:
        if (v10) {
          BOOL v33 = (v10 & 7) == 4;
        }
        else {
          BOOL v33 = 1;
        }
        if (!v33)
        {
          if (*v7)
          {
            uint64_t v34 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v34 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v9 = *(unsigned __int8 **)v39;
          }
          uint64_t v29 = (uint64_t)sub_1885AC0(v10, v34, (char *)v9, a3);
LABEL_50:
          *(void *)unint64_t v39 = v29;
          if (!v29) {
            goto LABEL_64;
          }
LABEL_51:
          if (sub_11947B8((uint64_t)a3, (char **)v39, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v9) {
          a3[10].i32[0] = v10 - 1;
        }
        else {
LABEL_64:
        }
          *(void *)unint64_t v39 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v39;
    }
  }
}

char *sub_12FDB38(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  unint64_t v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 8) != 0)
  {
    if (*a3 <= __dst) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 72);
    char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(void *)(a1 + 64);
    char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v13 = *(unsigned int *)(a1 + 32);
  if ((int)v13 >= 1)
  {
    uint64_t v14 = 0;
    uint64_t v15 = 8 * v13;
    do
    {
      int v16 = *(void **)(*(void *)(a1 + 40) + v14 + 8);
      if (*((char *)v16 + 23) < 0)
      {
        int64_t v17 = v16[1];
        if (v17 > 127) {
          goto LABEL_26;
        }
      }
      else
      {
        int64_t v17 = *((unsigned __int8 *)v16 + 23);
      }
      if ((uint64_t)(*a3 - (void)v4 + 14) >= v17)
      {
        char *v4 = 26;
        v4[1] = v17;
        if (*((char *)v16 + 23) < 0) {
          int v16 = (void *)*v16;
        }
        uint64_t v18 = v4 + 2;
        memcpy(v18, v16, v17);
        unint64_t v4 = &v18[v17];
        goto LABEL_24;
      }
LABEL_26:
      unint64_t v4 = (char *)sub_188A868(a3, 3, (uint64_t)v16, v4);
LABEL_24:
      v14 += 8;
    }
    while (v15 != v14);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v19 = *(void *)(a1 + 56);
    char *v4 = 42;
    unsigned int v20 = *(_DWORD *)(v19 + 20);
    v4[1] = v20;
    if (v20 > 0x7F) {
      unint64_t v21 = sub_188A9CC(v20, v4 + 1);
    }
    else {
      unint64_t v21 = v4 + 2;
    }
    unint64_t v4 = sub_12EDA60(v19, v21, a3);
  }
  if (v6) {
    unint64_t v4 = sub_117A0AC(a3, 6, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v22 = *(void *)(a1 + 8);
  if ((v22 & 1) == 0) {
    return v4;
  }
  unint64_t v24 = v22 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v24 + 31) < 0)
  {
    uint64_t v25 = *(void **)(v24 + 8);
    uint64_t v26 = *(void *)(v24 + 16);
  }
  else
  {
    uint64_t v25 = (void *)(v24 + 8);
    LODWORD(v26) = *(unsigned __int8 *)(v24 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v26)
  {
    uint64_t v27 = (int)v26;
    memcpy(v4, v25, (int)v26);
    v4 += v27;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v25, v26, v4);
}

uint64_t sub_12FDE20(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  if ((int)v2 < 1)
  {
    uint64_t v4 = *(unsigned int *)(a1 + 32);
  }
  else
  {
    uint64_t v3 = (uint64_t *)(*(void *)(a1 + 40) + 8);
    uint64_t v4 = *(unsigned int *)(a1 + 32);
    do
    {
      uint64_t v5 = *v3++;
      uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
      uint64_t v7 = *(void *)(v5 + 8);
      if ((v6 & 0x80u) == 0) {
        uint64_t v7 = v6;
      }
      v4 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      --v2;
    }
    while (v2);
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 0xF) != 0)
  {
    if (v8)
    {
      unint64_t v9 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v10 = *(unsigned __int8 *)(v9 + 23);
      uint64_t v11 = *(void *)(v9 + 8);
      if ((v10 & 0x80u) == 0) {
        uint64_t v11 = v10;
      }
      v4 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v8 & 2) == 0)
      {
LABEL_11:
        if ((v8 & 4) == 0) {
          goto LABEL_12;
        }
        goto LABEL_18;
      }
    }
    else if ((v8 & 2) == 0)
    {
      goto LABEL_11;
    }
    uint64_t v12 = sub_12EDC30(*(void *)(a1 + 56));
    v4 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v8 & 4) == 0)
    {
LABEL_12:
      if ((v8 & 8) == 0) {
        goto LABEL_23;
      }
      goto LABEL_19;
    }
LABEL_18:
    v4 += ((9 * (__clz(*(void *)(a1 + 64) | 1) ^ 0x3F) + 73) >> 6) + 1;
    if ((v8 & 8) == 0) {
      goto LABEL_23;
    }
LABEL_19:
    int v13 = *(_DWORD *)(a1 + 72);
    if (v13 < 0) {
      uint64_t v14 = 11;
    }
    else {
      uint64_t v14 = ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v4 += v14;
  }
LABEL_23:
  uint64_t v15 = *(void *)(a1 + 8);
  if (v15)
  {
    unint64_t v17 = v15 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v17 + 31) < 0) {
      uint64_t v18 = *(void *)(v17 + 16);
    }
    else {
      uint64_t v18 = *(unsigned __int8 *)(v17 + 31);
    }
    v4 += v18;
  }
  *(_DWORD *)(a1 + 20) = v4;
  return v4;
}

uint64_t sub_12FDFC4()
{
  return 1;
}

void *sub_12FDFCC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap.RapUpdate.ResolutionNotification");
}

void *sub_12FDFDC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = off_24A7668;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = &qword_2550250;
  result[7] = &qword_2550250;
  return result;
}

void *sub_12FE080(uint64_t a1)
{
  if (!a1)
  {
    sub_1302594();
  }
  *uint64_t result = off_24A76E8;
  result[1] = a1;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = &qword_2550250;
  result[5] = &qword_2550250;
  result[6] = &qword_2550250;
  result[7] = &qword_2550250;
  result[8] = &qword_2550250;
  result[9] = &qword_2550250;
  return result;
}

double sub_12FE0FC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = off_24A7768;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(void *)(v2 + 80) = 0;
  return result;
}

uint64_t sub_12FE180(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24A77E8;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = 0;
  *(_DWORD *)(result + 56) = 0;
  return result;
}

uint64_t sub_12FE224(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24A7868;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = 0;
  *(_DWORD *)(result + 56) = 0;
  return result;
}

uint64_t sub_12FE2C8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24A78E8;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = &qword_2550250;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_12FE350(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24A7968;
  *(void *)(result + 16) = 0;
  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t sub_12FE3CC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24A79E8;
  *(void *)(result + 16) = 0;
  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t sub_12FE448(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24A7A68;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_12FE4C4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24A7AE8;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_12FE53C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24A7B68;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 56) = 0;
  *(void *)(result + 64) = 0;
  *(void *)(result + 48) = &qword_2550250;
  *(_DWORD *)(result + 72) = 0;
  return result;
}

uint64_t sub_12FE5E8(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12FE688(uint64_t a1)
{
  sub_12FE5E8(a1);

  operator delete();
}

uint64_t sub_12FE6C0(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v1 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v1 + 23) < 0)
    {
      **(unsigned char **)unint64_t v1 = 0;
      *(void *)(v1 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v1 = 0;
      *(unsigned char *)(v1 + 23) = 0;
    }
  }
  char v3 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v3) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_12FE704(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unint64_t v17 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v17, a3[11].i32[1])) {
    return *(void *)v17;
  }
  uint64_t v5 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v6 = (char *)(*(void *)v17 + 1);
    unsigned int v7 = **(unsigned char **)v17;
    if ((char)**(unsigned char **)v17 < 0)
    {
      unsigned int v8 = v7 + (*v6 << 7);
      unsigned int v7 = v8 - 128;
      if (*v6 < 0)
      {
        uint64_t v6 = (char *)sub_188C180(*(uint64_t *)v17, v8 - 128);
        unsigned int v7 = v9;
      }
      else
      {
        uint64_t v6 = (char *)(*(void *)v17 + 2);
      }
    }
    *(void *)unint64_t v17 = v6;
    if (v7 != 10) {
      break;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v13 = *(void *)(a1 + 8);
    uint64_t v14 = (uint64_t *)(v13 & 0xFFFFFFFFFFFFFFFCLL);
    if (v13) {
      uint64_t v14 = (uint64_t *)*v14;
    }
    uint64_t v15 = (std::string *)sub_1880F84((void *)(a1 + 24), v14);
    uint64_t v12 = (void *)sub_188C244(v15, *(char **)v17, (uint64_t)a3);
LABEL_18:
    *(void *)unint64_t v17 = v12;
    if (!v12) {
      goto LABEL_25;
    }
    if (sub_11947B8((uint64_t)a3, (char **)v17, a3[11].i32[1])) {
      return *(void *)v17;
    }
  }
  if (v7) {
    BOOL v10 = (v7 & 7) == 4;
  }
  else {
    BOOL v10 = 1;
  }
  if (!v10)
  {
    if (*v5)
    {
      uint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v6 = *(char **)v17;
    }
    uint64_t v12 = sub_1885AC0(v7, v11, v6, a3);
    goto LABEL_18;
  }
  if (v6)
  {
    a3[10].i32[0] = v7 - 1;
    return *(void *)v17;
  }
LABEL_25:
  *(void *)unint64_t v17 = 0;
  return *(void *)v17;
}

char *sub_12FE85C(uint64_t a1, char *__dst, void *a3)
{
  uint64_t v4 = __dst;
  if (*(unsigned char *)(a1 + 16)) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  uint64_t v6 = *(void *)(a1 + 8);
  if ((v6 & 1) == 0) {
    return v4;
  }
  unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v8 + 31) < 0)
  {
    unsigned int v9 = *(void **)(v8 + 8);
    uint64_t v10 = *(void *)(v8 + 16);
  }
  else
  {
    unsigned int v9 = (void *)(v8 + 8);
    LODWORD(v10) = *(unsigned __int8 *)(v8 + 31);
  }
  if (*a3 - (void)v4 >= (int)v10)
  {
    uint64_t v11 = (int)v10;
    memcpy(v4, v9, (int)v10);
    v4 += v11;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v9, v10, v4);
}

uint64_t sub_12FE928(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v3 = *(unsigned __int8 *)(v2 + 23);
    uint64_t v4 = *(void *)(v2 + 8);
    if ((v3 & 0x80u) == 0) {
      uint64_t v4 = v3;
    }
    uint64_t v1 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  else
  {
    uint64_t v1 = 0;
  }
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5)
  {
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v7 + 31) < 0) {
      uint64_t v8 = *(void *)(v7 + 16);
    }
    else {
      uint64_t v8 = *(unsigned __int8 *)(v7 + 31);
    }
    v1 += v8;
  }
  *(_DWORD *)(a1 + 20) = v1;
  return v1;
}

uint64_t sub_12FE9AC(uint64_t a1)
{
  return *(_DWORD *)(a1 + 16) & 1;
}

void *sub_12FE9B8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "JsonString");
}

void *sub_12FE9C8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = &off_24A7BE8;
  result[2] = 0;
  result[3] = &qword_2550250;
  return result;
}

char *sub_12FEA4C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_161EA18(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_12FEADC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_160E190(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_12FEB6C(uint64_t a1)
{
  uint64_t result = sub_188CC00(a1 + 24);
  int v3 = *(_DWORD *)(a1 + 16);
  if ((v3 & 7) == 0) {
    goto LABEL_6;
  }
  if ((v3 & 1) == 0)
  {
    if ((v3 & 2) == 0) {
      goto LABEL_4;
    }
    goto LABEL_14;
  }
  unint64_t v6 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v6 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v6 = 0;
    *(unsigned char *)(v6 + 23) = 0;
    if ((v3 & 2) != 0) {
      goto LABEL_14;
    }
LABEL_4:
    if ((v3 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  **(unsigned char **)unint64_t v6 = 0;
  *(void *)(v6 + 8) = 0;
  if ((v3 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_14:
  unint64_t v7 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v7 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v7 = 0;
    *(unsigned char *)(v7 + 23) = 0;
    if ((v3 & 4) == 0) {
      goto LABEL_6;
    }
LABEL_5:
    uint64_t result = sub_15DF33C(*(void *)(a1 + 64));
    goto LABEL_6;
  }
  **(unsigned char **)unint64_t v7 = 0;
  *(void *)(v7 + 8) = 0;
  if ((v3 & 4) != 0) {
    goto LABEL_5;
  }
LABEL_6:
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t v4 = a1 + 8;
  *(_DWORD *)(v4 + 64) = 0;
  *(_DWORD *)(v4 + 8) = 0;
  if (v5)
  {
    return sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

uint64_t sub_12FEC48(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12FF074(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_12FECD8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_15C2878(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

void sub_12FED68(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    char v5 = (const std::string **)(*(void *)(a2 + 40) + 8);
    int v6 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_188FB98(a1 + 24, v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    uint64_t v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 0xF) != 0)
  {
    if (v9)
    {
      uint64_t v11 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v12 = *(void *)(a1 + 8);
      uint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
      if (v12) {
        uint64_t v13 = (uint64_t *)*v13;
      }
      sub_1881DF4((std::string **)(a1 + 48), v11, v13);
      if ((v9 & 2) == 0)
      {
LABEL_7:
        if ((v9 & 4) == 0) {
          goto LABEL_8;
        }
        goto LABEL_21;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_7;
    }
    uint64_t v14 = (long long *)(*(void *)(a2 + 56) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v15 = *(void *)(a1 + 8);
    int v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
    if (v15) {
      int v16 = (uint64_t *)*v16;
    }
    sub_1881DF4((std::string **)(a1 + 56), v14, v16);
    if ((v9 & 4) == 0)
    {
LABEL_8:
      if ((v9 & 8) == 0)
      {
LABEL_10:
        *(_DWORD *)(a1 + 16) |= v9;
        goto LABEL_11;
      }
LABEL_9:
      *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
      goto LABEL_10;
    }
LABEL_21:
    *(_DWORD *)(a1 + 16) |= 4u;
    uint64_t v17 = *(void *)(a1 + 64);
    if (!v17)
    {
      uint64_t v18 = *(void *)(a1 + 8);
      uint64_t v19 = (void *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
      if (v18) {
        uint64_t v19 = (void *)*v19;
      }
      sub_160A950((uint64_t)v19);
      *(void *)(a1 + 64) = v17;
    }
    if (*(void *)(a2 + 64)) {
      unsigned int v20 = *(uint64_t (****)())(a2 + 64);
    }
    else {
      unsigned int v20 = &off_2540FA8;
    }
    sub_15E2A5C(v17, (uint64_t)v20);
    if ((v9 & 8) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
LABEL_11:
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_12FEF20(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 4) == 0) {
    return 1;
  }
  uint64_t result = sub_15E344C(*(void *)(a1 + 64));
  if (result) {
    return 1;
  }
  return result;
}

uint64_t sub_12FEF4C(uint64_t a1)
{
  int v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_12;
    }
  }
  else if (v4)
  {
    goto LABEL_12;
  }
  char v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 56) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 56));
  }
  if ((uint64_t (***)())a1 != &off_2532430 && *(void *)(a1 + 64))
  {
    sub_1606AE8();
    operator delete();
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_12:
  sub_1889DE8((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12FF03C(uint64_t a1)
{
  sub_12FEF4C(a1);

  operator delete();
}

uint64_t sub_12FF074(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v36 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v36, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  uint64_t v8 = (uint64_t **)(a1 + 24);
  while (2)
  {
    int v9 = (unsigned __int8 *)(*(void *)v36 + 1);
    unsigned int v10 = **(unsigned char **)v36;
    if ((char)**(unsigned char **)v36 < 0)
    {
      unsigned int v11 = v10 + (*v9 << 7);
      unsigned int v10 = v11 - 128;
      if ((char)*v9 < 0)
      {
        int v9 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v36, v11 - 128);
        unsigned int v10 = v12;
      }
      else
      {
        int v9 = (unsigned __int8 *)(*(void *)v36 + 2);
      }
    }
    *(void *)uint64_t v36 = v9;
    switch(v10 >> 3)
    {
      case 1u:
        if (v10 != 10) {
          goto LABEL_41;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v13 = *(void *)(a1 + 8);
        uint64_t v14 = (uint64_t *)(v13 & 0xFFFFFFFFFFFFFFFCLL);
        if (v13) {
          uint64_t v14 = (uint64_t *)*v14;
        }
        uint64_t v15 = (void *)(a1 + 48);
        goto LABEL_35;
      case 3u:
        if (v10 != 26) {
          goto LABEL_41;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v16 = *(void *)(a1 + 64);
        if (!v16)
        {
          uint64_t v17 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v17 = (void *)*v17;
          }
          sub_160A950((uint64_t)v17);
          uint64_t v16 = v18;
          *(void *)(a1 + 64) = v18;
          int v9 = *(unsigned __int8 **)v36;
        }
        uint64_t v19 = sub_12FF3F8(a3, v16, v9);
        goto LABEL_48;
      case 4u:
        if (v10 != 34) {
          goto LABEL_41;
        }
        unsigned int v20 = (const std::string::value_type *)(v9 - 1);
        while (1)
        {
          unint64_t v21 = (char *)(v20 + 1);
          *(void *)uint64_t v36 = v20 + 1;
          uint64_t v22 = *(_DWORD **)(a1 + 40);
          if (v22 && (uint64_t v23 = *(int *)(a1 + 32), (int)v23 < *v22))
          {
            *(_DWORD *)(a1 + 32) = v23 + 1;
            unint64_t v24 = *(std::string **)&v22[2 * v23 + 2];
          }
          else
          {
            if (!*v8) {
              operator new();
            }
            *uint64_t v26 = v25;
            v26[1] = sub_3A6EDC;
            *uint64_t v25 = 0;
            v25[1] = 0;
            int v25[2] = 0;
            unint64_t v24 = (std::string *)sub_188CDC8(a1 + 24, (uint64_t)v25);
            unint64_t v21 = *(char **)v36;
          }
          unsigned int v20 = sub_188C244(v24, v21, (uint64_t)a3);
          *(void *)uint64_t v36 = v20;
          if (!v20) {
            goto LABEL_56;
          }
          if (*(void *)a3 <= (unint64_t)v20 || *v20 != 34) {
            goto LABEL_49;
          }
        }
      case 5u:
        if (v10 != 42) {
          goto LABEL_41;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v27 = *(void *)(a1 + 8);
        uint64_t v14 = (uint64_t *)(v27 & 0xFFFFFFFFFFFFFFFCLL);
        if (v27) {
          uint64_t v14 = (uint64_t *)*v14;
        }
        uint64_t v15 = (void *)(a1 + 56);
LABEL_35:
        unint64_t v28 = (std::string *)sub_1880F84(v15, v14);
        uint64_t v19 = (void *)sub_188C244(v28, *(char **)v36, (uint64_t)a3);
        goto LABEL_48;
      case 6u:
        if (v10 != 48) {
          goto LABEL_41;
        }
        v5 |= 8u;
        uint64_t v30 = (char *)(v9 + 1);
        LODWORD(v29) = *v9;
        if ((v29 & 0x80) == 0) {
          goto LABEL_40;
        }
        int v31 = *v30;
        uint64_t v29 = v29 + (v31 << 7) - 128;
        if (v31 < 0)
        {
          uint64_t v34 = sub_188C138((uint64_t)v9, v29);
          *(void *)uint64_t v36 = v34;
          *(_DWORD *)(a1 + 72) = v35;
          if (!v34) {
            goto LABEL_56;
          }
        }
        else
        {
          uint64_t v30 = (char *)(v9 + 2);
LABEL_40:
          *(void *)uint64_t v36 = v30;
          *(_DWORD *)(a1 + 72) = v29;
        }
        goto LABEL_49;
      default:
LABEL_41:
        if (v10) {
          BOOL v32 = (v10 & 7) == 4;
        }
        else {
          BOOL v32 = 1;
        }
        if (!v32)
        {
          if (*v7)
          {
            BOOL v33 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            BOOL v33 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            int v9 = *(unsigned __int8 **)v36;
          }
          uint64_t v19 = sub_1885AC0(v10, v33, (char *)v9, a3);
LABEL_48:
          *(void *)uint64_t v36 = v19;
          if (!v19) {
            goto LABEL_56;
          }
LABEL_49:
          if (sub_11947B8((uint64_t)a3, (char **)v36, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v9) {
          a3[10].i32[0] = v10 - 1;
        }
        else {
LABEL_56:
        }
          *(void *)uint64_t v36 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v36;
    }
  }
}

char *sub_12FF3F8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1606CFC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_12FF488(uint64_t a1, char *__dst, void *a3)
{
  int v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    int v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v7 = *(void *)(a1 + 64);
    char *v4 = 26;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      int v9 = v4 + 2;
    }
    int v4 = sub_1607270(v7, (unint64_t)v9, a3);
  }
  uint64_t v10 = *(unsigned int *)(a1 + 32);
  if ((int)v10 >= 1)
  {
    uint64_t v11 = 0;
    uint64_t v12 = 8 * v10;
    do
    {
      uint64_t v13 = *(void **)(*(void *)(a1 + 40) + v11 + 8);
      if (*((char *)v13 + 23) < 0)
      {
        int64_t v14 = v13[1];
        if (v14 > 127) {
          goto LABEL_21;
        }
      }
      else
      {
        int64_t v14 = *((unsigned __int8 *)v13 + 23);
      }
      if (*a3 - (void)v4 + 14 >= v14)
      {
        char *v4 = 34;
        v4[1] = v14;
        if (*((char *)v13 + 23) < 0) {
          uint64_t v13 = (void *)*v13;
        }
        uint64_t v15 = v4 + 2;
        memcpy(v15, v13, v14);
        int v4 = &v15[v14];
        goto LABEL_19;
      }
LABEL_21:
      int v4 = (char *)sub_188A868(a3, 4, (uint64_t)v13, v4);
LABEL_19:
      v11 += 8;
    }
    while (v12 != v11);
  }
  if ((v6 & 2) != 0) {
    int v4 = sub_117A0AC(a3, 5, (const void **)(*(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v16 = *(int *)(a1 + 72);
    char *v4 = 48;
    v4[1] = v16;
    if (v16 > 0x7F)
    {
      v4[1] = v16 | 0x80;
      unint64_t v17 = v16 >> 7;
      v4[2] = v16 >> 7;
      v4 += 3;
      if (v16 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v18 = v17 >> 14;
          v17 >>= 7;
          *v4++ = v17;
        }
        while (v18);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v19 = *(void *)(a1 + 8);
  if ((v19 & 1) == 0) {
    return v4;
  }
  unint64_t v21 = v19 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v21 + 31) < 0)
  {
    uint64_t v22 = *(void **)(v21 + 8);
    uint64_t v23 = *(void *)(v21 + 16);
  }
  else
  {
    uint64_t v22 = (void *)(v21 + 8);
    LODWORD(v23) = *(unsigned __int8 *)(v21 + 31);
  }
  if (*a3 - (void)v4 >= (int)v23)
  {
    uint64_t v24 = (int)v23;
    memcpy(v4, v22, (int)v23);
    v4 += v24;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v22, v23, v4);
}

uint64_t sub_12FF714(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  if ((int)v2 < 1)
  {
    uint64_t v4 = *(unsigned int *)(a1 + 32);
  }
  else
  {
    int v3 = (uint64_t *)(*(void *)(a1 + 40) + 8);
    uint64_t v4 = *(unsigned int *)(a1 + 32);
    do
    {
      uint64_t v5 = *v3++;
      uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
      uint64_t v7 = *(void *)(v5 + 8);
      if ((v6 & 0x80u) == 0) {
        uint64_t v7 = v6;
      }
      v4 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      --v2;
    }
    while (v2);
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 0xF) != 0)
  {
    if (v8)
    {
      unint64_t v9 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v10 = *(unsigned __int8 *)(v9 + 23);
      uint64_t v11 = *(void *)(v9 + 8);
      if ((v10 & 0x80u) == 0) {
        uint64_t v11 = v10;
      }
      v4 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v8 & 2) == 0)
      {
LABEL_11:
        if ((v8 & 4) == 0) {
          goto LABEL_12;
        }
        goto LABEL_20;
      }
    }
    else if ((v8 & 2) == 0)
    {
      goto LABEL_11;
    }
    unint64_t v12 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v13 = *(unsigned __int8 *)(v12 + 23);
    uint64_t v14 = *(void *)(v12 + 8);
    if ((v13 & 0x80u) == 0) {
      uint64_t v14 = v13;
    }
    v4 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v8 & 4) == 0)
    {
LABEL_12:
      if ((v8 & 8) == 0) {
        goto LABEL_25;
      }
      goto LABEL_21;
    }
LABEL_20:
    uint64_t v15 = sub_1607544(*(void *)(a1 + 64));
    v4 += v15 + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v8 & 8) == 0) {
      goto LABEL_25;
    }
LABEL_21:
    int v16 = *(_DWORD *)(a1 + 72);
    if (v16 < 0) {
      uint64_t v17 = 11;
    }
    else {
      uint64_t v17 = ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v4 += v17;
  }
LABEL_25:
  uint64_t v18 = *(void *)(a1 + 8);
  if (v18)
  {
    unint64_t v20 = v18 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v20 + 31) < 0) {
      uint64_t v21 = *(void *)(v20 + 16);
    }
    else {
      uint64_t v21 = *(unsigned __int8 *)(v20 + 31);
    }
    v4 += v21;
  }
  *(_DWORD *)(a1 + 20) = v4;
  return v4;
}

void *sub_12FF8D8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.uir.UserIncidentReport");
}

uint64_t sub_12FF8E8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24A7C68;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = &qword_2550250;
  *(void *)(result + 56) = &qword_2550250;
  *(void *)(result + 64) = 0;
  *(_DWORD *)(result + 72) = 0;
  return result;
}

char *sub_12FF994(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_160898C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

void sub_12FFA24()
{
}

uint64_t sub_12FFA74(uint64_t a1, uint64_t a2)
{
  return sub_12F80F0(a2);
}

uint64_t sub_12FFA7C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12FFA84()
{
}

uint64_t sub_12FFAD4(uint64_t a1, uint64_t a2)
{
  return sub_12F816C(a2);
}

uint64_t sub_12FFADC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12FFAE4()
{
}

uint64_t sub_12FFB34(uint64_t a1, uint64_t a2)
{
  return sub_12F81E8(a2);
}

uint64_t sub_12FFB3C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12FFB44()
{
}

double sub_12FFB98(uint64_t a1, uint64_t a2)
{
  return sub_12F8264(a2);
}

uint64_t sub_12FFBA0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12FFBA8()
{
}

uint64_t sub_12FFBFC(uint64_t a1, uint64_t a2)
{
  return sub_12F82E4(a2);
}

uint64_t sub_12FFC04(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_12FFC0C()
{
}

void *sub_12FFC6C(uint64_t a1, uint64_t a2)
{
  return sub_12F8384(a2);
}

uint64_t sub_12FFC74(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12FFC7C()
{
}

void *sub_12FFCDC(uint64_t a1, uint64_t a2)
{
  return sub_12F8410(a2);
}

uint64_t sub_12FFCE4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12FFCEC()
{
}

void *sub_12FFD4C(uint64_t a1, uint64_t a2)
{
  return sub_12F849C(a2);
}

uint64_t sub_12FFD54(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12FFD5C()
{
}

void *sub_12FFDB8(uint64_t a1, uint64_t a2)
{
  return sub_12F8528(a2);
}

uint64_t sub_12FFDC0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12FFDC8()
{
}

uint64_t sub_12FFE28(uint64_t a1, uint64_t a2)
{
  return sub_12F85B0(a2);
}

uint64_t sub_12FFE30(uint64_t a1)
{
  return *(unsigned int *)(a1 + 152);
}

void sub_12FFE38()
{
}

uint64_t sub_12FFE90(uint64_t a1, uint64_t a2)
{
  return sub_12F8678(a2);
}

uint64_t sub_12FFE98(uint64_t a1)
{
  return *(unsigned int *)(a1 + 64);
}

void sub_12FFEA0()
{
}

void *sub_12FFEEC(uint64_t a1, uint64_t a2)
{
  return sub_12F871C(a2);
}

uint64_t sub_12FFEF4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12FFEFC()
{
}

uint64_t sub_12FFF50(uint64_t a1, uint64_t a2)
{
  return sub_12F8794(a2);
}

uint64_t sub_12FFF58(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12FFF60()
{
}

double sub_12FFFB0(uint64_t a1, uint64_t a2)
{
  return sub_12F8830(a2);
}

uint64_t sub_12FFFB8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12FFFC0()
{
}

uint64_t sub_1300014(uint64_t a1, uint64_t a2)
{
  return sub_12F88AC(a2);
}

uint64_t sub_130001C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1300024()
{
}

uint64_t sub_1300088(uint64_t a1, uint64_t a2)
{
  return sub_12F892C(a2);
}

uint64_t sub_1300090(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1300098()
{
}

uint64_t sub_13000FC(uint64_t a1, uint64_t a2)
{
  return sub_12F89D8(a2);
}

uint64_t sub_1300104(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_130010C()
{
}

void *sub_130016C(uint64_t a1, uint64_t a2)
{
  return sub_12F8A84(a2);
}

uint64_t sub_1300174(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_130017C()
{
}

uint64_t sub_13001D8(uint64_t a1, uint64_t a2)
{
  return sub_12F8B10(a2);
}

uint64_t sub_13001E0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_13001E8()
{
}

uint64_t sub_1300244(uint64_t a1, uint64_t a2)
{
  return sub_12F8B98(a2);
}

uint64_t sub_130024C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1300254()
{
}

uint64_t sub_13002B4(uint64_t a1, uint64_t a2)
{
  return sub_12F8C20(a2);
}

uint64_t sub_13002BC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_13002C4()
{
}

void *sub_1300314(uint64_t a1, uint64_t a2)
{
  return sub_12EDDB0(a2);
}

uint64_t sub_130031C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1300324()
{
}

double sub_1300374(uint64_t a1, uint64_t a2)
{
  return sub_12EDE2C(a2);
}

uint64_t sub_130037C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1300384()
{
}

void *sub_13003E0(uint64_t a1, uint64_t a2)
{
  return sub_12EDEA8(a2);
}

uint64_t sub_13003E8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_13003F0()
{
}

void *sub_130044C(uint64_t a1, uint64_t a2)
{
  return sub_12FDFDC(a2);
}

uint64_t sub_1300454(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_130045C()
{
}

void *sub_13004C0(uint64_t a1, uint64_t a2)
{
  return sub_12FE080(a2);
}

uint64_t sub_13004C8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_13004D0()
{
}

double sub_1300528(uint64_t a1, uint64_t a2)
{
  return sub_12FE0FC(a2);
}

uint64_t sub_1300530(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1300538()
{
}

uint64_t sub_130058C(uint64_t a1, uint64_t a2)
{
  return sub_12FE180(a2);
}

uint64_t sub_1300594(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_130059C()
{
}

uint64_t sub_13005F0(uint64_t a1, uint64_t a2)
{
  return sub_12FE224(a2);
}

uint64_t sub_13005F8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1300600()
{
}

uint64_t sub_130065C(uint64_t a1, uint64_t a2)
{
  return sub_12FE2C8(a2);
}

uint64_t sub_1300664(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_130066C()
{
}

uint64_t sub_13006BC(uint64_t a1, uint64_t a2)
{
  return sub_12FE350(a2);
}

uint64_t sub_13006C4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_13006CC()
{
}

uint64_t sub_130071C(uint64_t a1, uint64_t a2)
{
  return sub_12FE3CC(a2);
}

uint64_t sub_1300724(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_130072C()
{
}

uint64_t sub_130077C(uint64_t a1, uint64_t a2)
{
  return sub_12FE448(a2);
}

uint64_t sub_1300784(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_130078C()
{
}

uint64_t sub_13007D8(uint64_t a1, uint64_t a2)
{
  return sub_12FE4C4(a2);
}

uint64_t sub_13007E0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

void sub_13007E8()
{
}

uint64_t sub_130084C(uint64_t a1, uint64_t a2)
{
  return sub_12FE53C(a2);
}

uint64_t sub_1300854(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_130085C()
{
}

double sub_13008B0(uint64_t a1, uint64_t a2)
{
  return sub_12D5DBC(a2);
}

uint64_t sub_13008B8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_13008C0()
{
}

void *sub_1300928(uint64_t a1, uint64_t a2)
{
  return sub_12D5E3C(a2);
}

uint64_t sub_1300930(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1300938()
{
}

void *sub_1300994(uint64_t a1, uint64_t a2)
{
  return sub_12D993C(a2);
}

uint64_t sub_130099C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_13009A4()
{
}

void *sub_13009F8(uint64_t a1, uint64_t a2)
{
  return sub_12D99E0(a2);
}

uint64_t sub_1300A00(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1300A08()
{
}

uint64_t sub_1300A60(uint64_t a1, uint64_t a2)
{
  return sub_12D9A7C(a2);
}

uint64_t sub_1300A68(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1300A70()
{
}

void *sub_1300AC0(uint64_t a1, uint64_t a2)
{
  return sub_12D9B1C(a2);
}

uint64_t sub_1300AC8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1300AD0()
{
}

void *sub_1300B30(uint64_t a1, uint64_t a2)
{
  return sub_12D9B98(a2);
}

uint64_t sub_1300B38(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1300B40()
{
}

double sub_1300BB4(uint64_t a1, uint64_t a2)
{
  return sub_12EBDE0(a2);
}

uint64_t sub_1300BBC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1300BC4()
{
}

void *sub_1300C24(uint64_t a1, uint64_t a2)
{
  return sub_12EBEA4(a2);
}

uint64_t sub_1300C2C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1300C34()
{
}

uint64_t sub_1300C90(uint64_t a1, uint64_t a2)
{
  return sub_12EBF4C(a2);
}

uint64_t sub_1300C98(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1300CA0()
{
}

void *sub_1300D00(uint64_t a1, uint64_t a2)
{
  return sub_12EBFD4(a2);
}

uint64_t sub_1300D08(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1300D10()
{
}

uint64_t sub_1300D80(uint64_t a1, uint64_t a2)
{
  return sub_12EC07C(a2);
}

uint64_t sub_1300D88(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1300D90()
{
}

uint64_t sub_1300DE4(uint64_t a1, uint64_t a2)
{
  return sub_12EC13C(a2);
}

uint64_t sub_1300DEC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1300DF4()
{
}

double sub_1300E74(uint64_t a1, uint64_t a2)
{
  return sub_12EC1D8(a2);
}

uint64_t sub_1300E7C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1300E84()
{
}

double sub_1300EF0(uint64_t a1, uint64_t a2)
{
  return sub_12EC2A8(a2);
}

uint64_t sub_1300EF8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1300F00()
{
}

uint64_t sub_1300F58(uint64_t a1, uint64_t a2)
{
  return sub_12EC340(a2);
}

uint64_t sub_1300F60(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1300F68()
{
}

double sub_1300FE0(uint64_t a1, uint64_t a2)
{
  return sub_12EC3E0(a2);
}

uint64_t sub_1300FE8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1300FF0()
{
}

double sub_1301060(uint64_t a1, uint64_t a2)
{
  return sub_12EC474(a2);
}

uint64_t sub_1301068(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1301070()
{
}

void *sub_13010CC(uint64_t a1, uint64_t a2)
{
  return sub_12EC538(a2);
}

uint64_t sub_13010D4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_13010DC()
{
}

double sub_1301130(uint64_t a1, uint64_t a2)
{
  return sub_12EC5C0(a2);
}

uint64_t sub_1301138(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1301140()
{
}

void *sub_1301198(uint64_t a1, uint64_t a2)
{
  return sub_12FE9C8(a2);
}

uint64_t sub_13011A0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_13011A8()
{
}

uint64_t sub_130120C(uint64_t a1, uint64_t a2)
{
  return sub_12FF8E8(a2);
}

uint64_t sub_1301214(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_130121C()
{
}

void sub_1301284(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    int v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_12D8A94(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1301304(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    int v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_12F12A0(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1301384(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    int v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_12EE48C(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1301404(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = (uint64_t)sub_12D9B98(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_1301480(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_1301480(uint64_t a1, uint64_t a2)
{
}

void sub_1301490(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = (uint64_t)sub_12F849C(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_130150C(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_130150C(uint64_t a1, uint64_t a2)
{
}

uint64_t *sub_130151C(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    uint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      uint64_t result = (uint64_t *)sub_12F816C(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = (uint64_t *)sub_1301598(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_1301598(uint64_t a1, std::string *a2)
{
  return sub_12D45B4(a2, a1);
}

void sub_13015A8(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    int v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_12DD180(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1301628(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    int v3 = v2 + 2;
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_15BB0B0();
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_13016A8(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    int v3 = v2 + 2;
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_16E9884();
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1301728(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    int v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_15C3530(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_13017A8(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    int v3 = v2 + 2;
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1395B50();
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1301828(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    int v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_12F3C10(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_13018A8(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    int v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_12E2CB0(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1301928(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    int v3 = v2 + 2;
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_15F2548();
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_13019A8(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    int v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_12EFEF4(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1301A28(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    int v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_12D4618(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

uint64_t *sub_1301AA8(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    uint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      uint64_t result = (uint64_t *)sub_12EBF4C(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = (uint64_t *)sub_1194DD8(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

void sub_1301B24(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      sub_15C219C(v9);
      *v10++ = v11;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v13 = *a3++;
      uint64_t v12 = v13;
      uint64_t v14 = *v7++;
      sub_1301BA0(v12, v14);
      --v5;
    }
    while (v5);
  }
}

void sub_1301BA0(uint64_t a1, uint64_t a2)
{
}

void sub_1301BB0(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = (uint64_t)sub_1788574(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_1301C2C(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_1301C2C(uint64_t a1, uint64_t a2)
{
}

void sub_1301C3C(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = sub_15C6224(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_1301CB8(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_1301CB8(uint64_t a1, uint64_t a2)
{
}

void sub_1301CC8(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = sub_13D8374(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_1301D44(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_1301D44(uint64_t a1, uint64_t a2)
{
}

uint64_t *sub_1301D54(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    uint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      uint64_t result = (uint64_t *)sub_12F8794(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = (uint64_t *)sub_1301DD0(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_1301DD0(uint64_t a1, std::string *a2)
{
  return sub_12F42E0(a2, a1);
}

void sub_1301DE0(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      sub_12EC2A8(v9);
      *v10++ = v11;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v13 = *a3++;
      uint64_t v12 = v13;
      uint64_t v14 = *v7++;
      sub_1301E5C(v12, v14);
      --v5;
    }
    while (v5);
  }
}

void sub_1301E5C(uint64_t a1, uint64_t a2)
{
}

uint64_t *sub_1301E6C(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    uint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      uint64_t result = (uint64_t *)sub_15FA174(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = (uint64_t *)sub_122C7C8(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_1301EE8(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      uint64_t result = (std::string *)sub_12F8384(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = sub_1301F64(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_1301F64(uint64_t a1, std::string *a2)
{
  return sub_12F0950(a2, a1);
}

std::string *sub_1301F74(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      uint64_t result = (std::string *)sub_12D5E3C(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = sub_1301FF0(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_1301FF0(uint64_t a1, std::string *a2)
{
  return sub_12D5638(a2, a1);
}

void sub_1302000()
{
}

void sub_1302078(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    int v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_12EEEE4(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_13020F8(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    int v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_12F1AC0(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1302178(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    int v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_12F36DC(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_13021F8(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    int v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_12F2E88(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1302278(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      sub_12F8264(v9);
      *v10++ = v11;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v13 = *a3++;
      uint64_t v12 = v13;
      uint64_t v14 = *v7++;
      sub_13022F4(v12, v14);
      --v5;
    }
    while (v5);
  }
}

void sub_13022F4(uint64_t a1, uint64_t a2)
{
}

std::string *sub_1302304(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      uint64_t result = (std::string *)sub_12F8528(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = sub_124D810(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_1302380(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      uint64_t result = (std::string *)sub_12F871C(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = sub_11DC498(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

uint64_t *sub_13023FC(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    uint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      uint64_t result = (uint64_t *)sub_12F8678(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = (uint64_t *)sub_1302478(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_1302478(uint64_t a1, std::string *a2)
{
  return sub_12F3590(a2, a1);
}

void sub_1302488(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    int v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_12F7858(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

uint64_t *sub_1302508(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    uint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      uint64_t result = (uint64_t *)sub_12F8C20(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = (uint64_t *)sub_1302584(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_1302584(uint64_t a1, std::string *a2)
{
  return sub_12F7FDC(a2, a1);
}

void sub_1302594()
{
}

void sub_13025F8()
{
  dword_254EF30 = 100;
  qword_254EF38 = (uint64_t)&off_253A138;
  sub_1882AC4((unint64_t)&off_252FF58, 100, 11, 0, 0, (uint64_t)&off_253A138);
  dword_254EF40 = 101;
  qword_254EF48 = (uint64_t)&unk_213FE28;
  sub_1882224((unint64_t)&off_252FF58, 101, 9, 1, 0);
  dword_254EF50 = 102;
  qword_254EF58 = (uint64_t)&unk_213FE40;
  sub_1882224((unint64_t)&off_252FF58, 102, 9, 1, 0);
  dword_254EF60 = 100;
  qword_254EF68 = (uint64_t)&off_253A138;
  sub_1882AC4((unint64_t)&off_25301D0, 100, 11, 0, 0, (uint64_t)&off_253A138);
  dword_254EF70 = 101;
  qword_254EF78 = (uint64_t)&unk_213FE58;
  sub_1882224((unint64_t)&off_25301D0, 101, 9, 1, 0);
  dword_254EF80 = 102;
  qword_254EF88 = (uint64_t)&unk_213FE70;
  sub_1882224((unint64_t)&off_25301D0, 102, 9, 1, 0);
  qword_254EF90 = 100;
  sub_1882224((unint64_t)&off_252FBF0, 100, 5, 0, 0);
  dword_254EF98 = 101;
  qword_254EFA0 = (uint64_t)&unk_213FE88;
  sub_1882224((unint64_t)&off_252FBF0, 101, 9, 0, 0);
  dword_254EFA8 = 102;
  qword_254EFB0 = (uint64_t)&unk_213FEA0;
  sub_1882224((unint64_t)&off_252FBF0, 102, 9, 0, 0);
  dword_254EFB8 = 103;
  qword_254EFC0 = (uint64_t)&unk_213FEB8;
  sub_1882224((unint64_t)&off_252FBF0, 103, 9, 0, 0);
  dword_254EFC8 = 110;
  qword_254EFD0 = (uint64_t)&unk_213FED0;
  sub_1882224((unint64_t)&off_252FBF0, 110, 9, 0, 0);
  dword_254EFD8 = 111;
  qword_254EFE0 = (uint64_t)&unk_213FEE8;
  sub_1882224((unint64_t)&off_252FBF0, 111, 9, 0, 0);
  dword_254EFE8 = 112;
  qword_254EFF0 = 0;
  sub_1882224((unint64_t)&off_252FBF0, 112, 3, 0, 0);
  dword_254EFF8 = 113;
  qword_254F000 = (uint64_t)&unk_213FF00;
  sub_1882224((unint64_t)&off_252FBF0, 113, 9, 1, 0);
  dword_254F008 = 114;
  qword_254F010 = (uint64_t)&unk_213FF18;
  sub_1882224((unint64_t)&off_252FBF0, 114, 9, 1, 0);
  dword_254F018 = 115;
  qword_254F020 = 0;
  sub_1882224((unint64_t)&off_252FBF0, 115, 3, 0, 0);
  dword_254F028 = 116;
  qword_254F030 = (uint64_t)&unk_213FF30;
  sub_1882224((unint64_t)&off_252FBF0, 116, 9, 1, 0);
  dword_254F038 = 117;
  qword_254F040 = (uint64_t)&off_254CA18;
  sub_1882AC4((unint64_t)&off_252FBF0, 117, 11, 0, 0, (uint64_t)&off_254CA18);
  dword_254F048 = 120;
  byte_254F04C = 0;
  sub_1882224((unint64_t)&off_252FBF0, 120, 8, 0, 0);
  dword_254F050 = 121;
  qword_254F058 = (uint64_t)&off_252F330;
  sub_1882AC4((unint64_t)&off_252FBF0, 121, 11, 0, 0, (uint64_t)&off_252F330);
  dword_254F060 = 122;
  qword_254F068 = (uint64_t)&unk_213FF48;
  sub_1882224((unint64_t)&off_252FBF0, 122, 12, 0, 0);
  dword_254F070 = 123;
  qword_254F078 = (uint64_t)&unk_213FF60;
  sub_1882224((unint64_t)&off_252FBF0, 123, 9, 0, 0);
  qword_254F080 = 124;
  sub_18829C0((unint64_t)&off_252FBF0, 124, 14, 0, 0, (uint64_t)sub_12EDF58);
  dword_254F088 = 125;
  qword_254F090 = 0;
  sub_1882224((unint64_t)&off_252FBF0, 125, 3, 0, 0);
  dword_254F098 = 126;
  qword_254F0A0 = (uint64_t)&off_2532410;
  sub_1882AC4((unint64_t)&off_252FBF0, 126, 11, 0, 0, (uint64_t)&off_2532410);
  dword_254F0A8 = 127;
  qword_254F0B0 = (uint64_t)&off_2532410;
  sub_1882AC4((unint64_t)&off_252FBF0, 127, 11, 0, 0, (uint64_t)&off_2532410);
  dword_254F0B8 = 100;
  qword_254F0C0 = (uint64_t)&unk_213FF78;

  sub_1882224((unint64_t)&off_252F8A0, 100, 9, 0, 0);
}

uint64_t sub_1302B88()
{
  qword_2601E60 = (uint64_t)"CORRECTFALSE_NEGATIVEFALSE_POSITIVETRUE_NEGATIVETRUE_POSITIVEUNKNOWNWRONG";
  *(void *)algn_2601E68 = 7;
  dword_2601E70 = 5;
  qword_2601E78 = (uint64_t)"FALSE_NEGATIVEFALSE_POSITIVETRUE_NEGATIVETRUE_POSITIVEUNKNOWNWRONG";
  unk_2601E80 = 14;
  dword_2601E88 = 4;
  qword_2601E90 = (uint64_t)"FALSE_POSITIVETRUE_NEGATIVETRUE_POSITIVEUNKNOWNWRONG";
  unk_2601E98 = 14;
  dword_2601EA0 = 2;
  qword_2601EA8 = (uint64_t)"TRUE_NEGATIVETRUE_POSITIVEUNKNOWNWRONG";
  unk_2601EB0 = 13;
  dword_2601EB8 = 3;
  qword_2601EC0 = (uint64_t)"TRUE_POSITIVEUNKNOWNWRONG";
  unk_2601EC8 = 13;
  dword_2601ED0 = 1;
  qword_2601ED8 = (uint64_t)"UNKNOWNWRONG";
  unk_2601EE0 = 7;
  dword_2601EE8 = 0;
  qword_2601EF0 = (uint64_t)"WRONG";
  unk_2601EF8 = 5;
  dword_2601F00 = 6;
  qword_2601F08 = (uint64_t)"DELIVERY_TYPE_EVENTDELIVERY_TYPE_RAP_DEPLOYMENTDELIVERY_TYPE_RAP_FIELD_SETDELIVERY_TYPE_STATU"
                           "S_REQUESTDELIVERY_TYPE_TASK_JSONDELIVERY_TYPE_TASK_JSON_AND_RAP_PROTODELIVERY_TYPE_UNKNOWNDEL"
                           "IVERY_TYPE_USER_FEEDBACK";
  unk_2601F10 = 19;
  dword_2601F18 = 7;
  qword_2601F20 = (uint64_t)"DELIVERY_TYPE_RAP_DEPLOYMENTDELIVERY_TYPE_RAP_FIELD_SETDELIVERY_TYPE_STATUS_REQUESTDELIVERY_TYPE_TASK_JSONDELIVERY_TYPE_TASK_JSON_AND_RAP_PROTODELIVERY_TYPE_UNKNOWNDELIVERY_TYPE_USER_FEEDBACK";
  unk_2601F28 = 28;
  dword_2601F30 = 4;
  qword_2601F38 = (uint64_t)"DELIVERY_TYPE_RAP_FIELD_SETDELIVERY_TYPE_STATUS_REQUESTDELIVERY_TYPE_TASK_JSONDELIVERY_TYPE_TASK_JSON_AND_RAP_PROTODELIVERY_TYPE_UNKNOWNDELIVERY_TYPE_USER_FEEDBACK";
  unk_2601F40 = 27;
  dword_2601F48 = 3;
  qword_2601F50 = (uint64_t)"DELIVERY_TYPE_STATUS_REQUESTDELIVERY_TYPE_TASK_JSONDELIVERY_TYPE_TASK_JSON_AND_RAP_PROTODELIVERY_TYPE_UNKNOWNDELIVERY_TYPE_USER_FEEDBACK";
  unk_2601F58 = 28;
  dword_2601F60 = 6;
  qword_2601F68 = (uint64_t)"DELIVERY_TYPE_TASK_JSONDELIVERY_TYPE_TASK_JSON_AND_RAP_PROTODELIVERY_TYPE_UNKNOWNDELIVERY_TYPE_USER_FEEDBACK";
  unk_2601F70 = 23;
  dword_2601F78 = 1;
  qword_2601F80 = (uint64_t)"DELIVERY_TYPE_TASK_JSON_AND_RAP_PROTODELIVERY_TYPE_UNKNOWNDELIVERY_TYPE_USER_FEEDBACK";
  unk_2601F88 = 37;
  dword_2601F90 = 2;
  qword_2601F98 = (uint64_t)"DELIVERY_TYPE_UNKNOWNDELIVERY_TYPE_USER_FEEDBACK";
  unk_2601FA0 = 21;
  dword_2601FA8 = 0;
  qword_2601FB0 = (uint64_t)"DELIVERY_TYPE_USER_FEEDBACK";
  unk_2601FB8 = 27;
  dword_2601FC0 = 5;
  qword_2601FC8 = (uint64_t)"USER_FEEDBACK_VERSION_1USER_FEEDBACK_VERSION_2USER_FEEDBACK_VERSION_3USER_FEEDBACK_VERSION_4U"
                           "SER_FEEDBACK_VERSION_UNKNOWN";
  unk_2601FD0 = 23;
  dword_2601FD8 = 1;
  qword_2601FE0 = (uint64_t)"USER_FEEDBACK_VERSION_2USER_FEEDBACK_VERSION_3USER_FEEDBACK_VERSION_4USER_FEEDBACK_VERSION_UNKNOWN";
  unk_2601FE8 = 23;
  dword_2601FF0 = 2;
  qword_2601FF8 = (uint64_t)"USER_FEEDBACK_VERSION_3USER_FEEDBACK_VERSION_4USER_FEEDBACK_VERSION_UNKNOWN";
  unk_2602000 = 23;
  dword_2602008 = 3;
  qword_2602010 = (uint64_t)"USER_FEEDBACK_VERSION_4USER_FEEDBACK_VERSION_UNKNOWN";
  unk_2602018 = 23;
  dword_2602020 = 4;
  qword_2602028 = (uint64_t)"USER_FEEDBACK_VERSION_UNKNOWN";
  unk_2602030 = 29;
  dword_2602038 = 0;
  qword_2602040 = (uint64_t)"REQUEST_TYPE_LOG_EVENTREQUEST_TYPE_PROBLEM_STATUSREQUEST_TYPE_RAP_INFOREQUEST_TYPE_UNKNOWN";
  *(void *)algn_2602048 = 22;
  dword_2602050 = 3;
  qword_2602058 = (uint64_t)"REQUEST_TYPE_PROBLEM_STATUSREQUEST_TYPE_RAP_INFOREQUEST_TYPE_UNKNOWN";
  unk_2602060 = 27;
  dword_2602068 = 1;
  qword_2602070 = (uint64_t)"REQUEST_TYPE_RAP_INFOREQUEST_TYPE_UNKNOWN";
  unk_2602078 = 21;
  dword_2602080 = 2;
  qword_2602088 = (uint64_t)"REQUEST_TYPE_UNKNOWN";
  unk_2602090 = 20;
  dword_2602098 = 0;
  qword_26020A0 = (uint64_t)"EVENT_TYPE_OUTREACH_SENTEVENT_TYPE_UNKNOWN";
  *(void *)algn_26020A8 = 24;
  dword_26020B0 = 1;
  qword_26020B8 = (uint64_t)"EVENT_TYPE_UNKNOWN";
  unk_26020C0 = 18;
  dword_26020C8 = 0;
  qword_26020D0 = (uint64_t)"ADDADD_PERSONALIZED_LOCATIONCORRECTION_TYPE_UNKNOWNEDIT_FIELDSEDIT_LOCATIONEDIT_PERSONALIZED_LOCATIONOTHER";
  *(void *)algn_26020D8 = 3;
  dword_26020E0 = 1;
  qword_26020E8 = (uint64_t)"ADD_PERSONALIZED_LOCATIONCORRECTION_TYPE_UNKNOWNEDIT_FIELDSEDIT_LOCATIONEDIT_PERSONALIZED_LOCATIONOTHER";
  unk_26020F0 = 25;
  dword_26020F8 = 4;
  qword_2602100 = (uint64_t)"CORRECTION_TYPE_UNKNOWNEDIT_FIELDSEDIT_LOCATIONEDIT_PERSONALIZED_LOCATIONOTHER";
  unk_2602108 = 23;
  dword_2602110 = 0;
  qword_2602118 = (uint64_t)"EDIT_FIELDSEDIT_LOCATIONEDIT_PERSONALIZED_LOCATIONOTHER";
  unk_2602120 = 11;
  dword_2602128 = 2;
  qword_2602130 = (uint64_t)"EDIT_LOCATIONEDIT_PERSONALIZED_LOCATIONOTHER";
  unk_2602138 = 13;
  dword_2602140 = 3;
  qword_2602148 = (uint64_t)"EDIT_PERSONALIZED_LOCATIONOTHER";
  unk_2602150 = 26;
  dword_2602158 = 5;
  qword_2602160 = (uint64_t)"OTHER";
  unk_2602168 = 5;
  dword_2602170 = 6;
  qword_2602178 = (uint64_t)"ADDCORRECTION_TYPE_UNKNOWNEDITREMOVE";
  unk_2602180 = 3;
  dword_2602188 = 1;
  qword_2602190 = (uint64_t)"CORRECTION_TYPE_UNKNOWNEDITREMOVE";
  unk_2602198 = 23;
  dword_26021A0 = 0;
  qword_26021A8 = (uint64_t)"EDITREMOVE";
  unk_26021B0 = 4;
  dword_26021B8 = 2;
  qword_26021C0 = (uint64_t)"REMOVE";
  unk_26021C8 = 6;
  dword_26021D0 = 3;
  qword_26021D8 = (uint64_t)"BROKEN_LINKCORRECTION_TYPE_UNKNOWNINACCURATE_DESCRIPTIONINACCURATE_PLACE_DETAILSOTHER";
  unk_26021E0 = 11;
  dword_26021E8 = 1;
  qword_26021F0 = (uint64_t)"CORRECTION_TYPE_UNKNOWNINACCURATE_DESCRIPTIONINACCURATE_PLACE_DETAILSOTHER";
  unk_26021F8 = 23;
  dword_2602200 = 0;
  qword_2602208 = (uint64_t)"INACCURATE_DESCRIPTIONINACCURATE_PLACE_DETAILSOTHER";
  unk_2602210 = 22;
  dword_2602218 = 2;
  qword_2602220 = (uint64_t)"INACCURATE_PLACE_DETAILSOTHER";
  unk_2602228 = 24;
  dword_2602230 = 3;
  qword_2602238 = (uint64_t)"OTHER";
  unk_2602240 = 5;
  dword_2602248 = 4;
  qword_2602250 = (uint64_t)"CORRECTION_TYPE_UNKNOWNEDIT_LINEEDIT_POIOTHER";
  *(void *)algn_2602258 = 23;
  dword_2602260 = 0;
  qword_2602268 = (uint64_t)"EDIT_LINEEDIT_POIOTHER";
  unk_2602270 = 9;
  dword_2602278 = 2;
  qword_2602280 = (uint64_t)"EDIT_POIOTHER";
  unk_2602288 = 8;
  dword_2602290 = 1;
  qword_2602298 = (uint64_t)"OTHER";
  unk_26022A0 = 5;
  dword_26022A8 = 3;
  qword_26022B0 = (uint64_t)"OUTREACH_MESSAGE_STATE_APPROVEDOUTREACH_MESSAGE_STATE_DISCARDEDOUTREACH_MESSAGE_STATE_DRAFTOU"
                           "TREACH_MESSAGE_STATE_IN_REVIEWOUTREACH_MESSAGE_STATE_REJECTEDOUTREACH_MESSAGE_STATE_UNSPECIFIED";
  *(void *)algn_26022B8 = 31;
  dword_26022C0 = 3;
  qword_26022C8 = (uint64_t)"OUTREACH_MESSAGE_STATE_DISCARDEDOUTREACH_MESSAGE_STATE_DRAFTOUTREACH_MESSAGE_STATE_IN_REVIEWOUTREACH_MESSAGE_STATE_REJECTEDOUTREACH_MESSAGE_STATE_UNSPECIFIED";
  unk_26022D0 = 32;
  dword_26022D8 = 5;
  qword_26022E0 = (uint64_t)"OUTREACH_MESSAGE_STATE_DRAFTOUTREACH_MESSAGE_STATE_IN_REVIEWOUTREACH_MESSAGE_STATE_REJECTEDOUTREACH_MESSAGE_STATE_UNSPECIFIED";
  unk_26022E8 = 28;
  dword_26022F0 = 1;
  qword_26022F8 = (uint64_t)"OUTREACH_MESSAGE_STATE_IN_REVIEWOUTREACH_MESSAGE_STATE_REJECTEDOUTREACH_MESSAGE_STATE_UNSPECIFIED";
  unk_2602300 = 32;
  dword_2602308 = 2;
  qword_2602310 = (uint64_t)"OUTREACH_MESSAGE_STATE_REJECTEDOUTREACH_MESSAGE_STATE_UNSPECIFIED";
  unk_2602318 = 31;
  dword_2602320 = 4;
  qword_2602328 = (uint64_t)"OUTREACH_MESSAGE_STATE_UNSPECIFIED";
  unk_2602330 = 34;
  dword_2602338 = 0;
  qword_2602358 = (uint64_t)"USER_RESPONSE_STATE_NO_OUTREACHUSER_RESPONSE_STATE_NO_RESPONSE_EXPECTEDUSER_RESPONSE_STATE_RESPONDEDUSER_RESPONSE_STATE_UNSPECIFIED";
  unk_2602360 = 31;
  qword_2602370 = (uint64_t)"USER_RESPONSE_STATE_NO_RESPONSE_EXPECTEDUSER_RESPONSE_STATE_RESPONDEDUSER_RESPONSE_STATE_UNSPECIFIED";
  unk_2602378 = 40;
  qword_2602388 = (uint64_t)"USER_RESPONSE_STATE_RESPONDEDUSER_RESPONSE_STATE_UNSPECIFIED";
  unk_2602390 = 29;
  qword_2602340 = (uint64_t)"USER_RESPONSE_STATE_AWAITING_RESPONSEUSER_RESPONSE_STATE_NO_OUTREACHUSER_RESPONSE_STATE_NO_RE"
                           "SPONSE_EXPECTEDUSER_RESPONSE_STATE_RESPONDEDUSER_RESPONSE_STATE_UNSPECIFIED";
  *(void *)algn_2602348 = 37;
  dword_2602350 = 2;
  dword_2602368 = 1;
  dword_2602380 = 4;
  dword_2602398 = 3;
  qword_26023A0 = (uint64_t)"USER_RESPONSE_STATE_UNSPECIFIED";
  unk_26023A8 = 31;
  dword_26023B0 = 0;
  qword_26023D0 = (uint64_t)"BEHAVES_CORRECTLYCLOSEDCUSTOMER_OUTREACH_BEHAVES_CORRECTLYCUSTOMER_OUTREACH_BY_MESSAGECUSTOMER_OUTREACH_BY_WORKGROUPDATA_FIXEDDATA_FIXED_NO_TIMELINEFAVORITE_LOCATION_EDITINACCURATE_INFORMATIONMAPS_FEATURE_REQUESTMOBILE_BUSINESSNOT_AN_OPERATIONS_EDITNOT_ENOUGH_INFOPOLICY_VIOLATIONPRIVATE_LOCATION_EDITSPAMTRANSIT_MARKET_REQUESTTRANSIT_NOT_ON_SCHEDULEUNKNOWN";
  qword_26023E8 = (uint64_t)"CLOSEDCUSTOMER_OUTREACH_BEHAVES_CORRECTLYCUSTOMER_OUTREACH_BY_MESSAGECUSTOMER_OUTREACH_BY_WORKGROUPDATA_FIXEDDATA_FIXED_NO_TIMELINEFAVORITE_LOCATION_EDITINACCURATE_INFORMATIONMAPS_FEATURE_REQUESTMOBILE_BUSINESSNOT_AN_OPERATIONS_EDITNOT_ENOUGH_INFOPOLICY_VIOLATIONPRIVATE_LOCATION_EDITSPAMTRANSIT_MARKET_REQUESTTRANSIT_NOT_ON_SCHEDULEUNKNOWN";
  qword_2602400 = (uint64_t)"CUSTOMER_OUTREACH_BEHAVES_CORRECTLYCUSTOMER_OUTREACH_BY_MESSAGECUSTOMER_OUTREACH_BY_WORKGROUPDATA_FIXEDDATA_FIXED_NO_TIMELINEFAVORITE_LOCATION_EDITINACCURATE_INFORMATIONMAPS_FEATURE_REQUESTMOBILE_BUSINESSNOT_AN_OPERATIONS_EDITNOT_ENOUGH_INFOPOLICY_VIOLATIONPRIVATE_LOCATION_EDITSPAMTRANSIT_MARKET_REQUESTTRANSIT_NOT_ON_SCHEDULEUNKNOWN";
  qword_2602418 = (uint64_t)"CUSTOMER_OUTREACH_BY_MESSAGECUSTOMER_OUTREACH_BY_WORKGROUPDATA_FIXEDDATA_FIXED_NO_TIMELINEFAVORITE_LOCATION_EDITINACCURATE_INFORMATIONMAPS_FEATURE_REQUESTMOBILE_BUSINESSNOT_AN_OPERATIONS_EDITNOT_ENOUGH_INFOPOLICY_VIOLATIONPRIVATE_LOCATION_EDITSPAMTRANSIT_MARKET_REQUESTTRANSIT_NOT_ON_SCHEDULEUNKNOWN";
  qword_2602430 = (uint64_t)"CUSTOMER_OUTREACH_BY_WORKGROUPDATA_FIXEDDATA_FIXED_NO_TIMELINEFAVORITE_LOCATION_EDITINACCURATE_INFORMATIONMAPS_FEATURE_REQUESTMOBILE_BUSINESSNOT_AN_OPERATIONS_EDITNOT_ENOUGH_INFOPOLICY_VIOLATIONPRIVATE_LOCATION_EDITSPAMTRANSIT_MARKET_REQUESTTRANSIT_NOT_ON_SCHEDULEUNKNOWN";
  qword_2602448 = (uint64_t)"DATA_FIXEDDATA_FIXED_NO_TIMELINEFAVORITE_LOCATION_EDITINACCURATE_INFORMATIONMAPS_FEATURE_REQUESTMOBILE_BUSINESSNOT_AN_OPERATIONS_EDITNOT_ENOUGH_INFOPOLICY_VIOLATIONPRIVATE_LOCATION_EDITSPAMTRANSIT_MARKET_REQUESTTRANSIT_NOT_ON_SCHEDULEUNKNOWN";
  qword_2602460 = (uint64_t)"DATA_FIXED_NO_TIMELINEFAVORITE_LOCATION_EDITINACCURATE_INFORMATIONMAPS_FEATURE_REQUESTMOBILE_BUSINESSNOT_AN_OPERATIONS_EDITNOT_ENOUGH_INFOPOLICY_VIOLATIONPRIVATE_LOCATION_EDITSPAMTRANSIT_MARKET_REQUESTTRANSIT_NOT_ON_SCHEDULEUNKNOWN";
  qword_2602478 = (uint64_t)"FAVORITE_LOCATION_EDITINACCURATE_INFORMATIONMAPS_FEATURE_REQUESTMOBILE_BUSINESSNOT_AN_OPERATIONS_EDITNOT_ENOUGH_INFOPOLICY_VIOLATIONPRIVATE_LOCATION_EDITSPAMTRANSIT_MARKET_REQUESTTRANSIT_NOT_ON_SCHEDULEUNKNOWN";
  qword_2602490 = (uint64_t)"INACCURATE_INFORMATIONMAPS_FEATURE_REQUESTMOBILE_BUSINESSNOT_AN_OPERATIONS_EDITNOT_ENOUGH_INFOPOLICY_VIOLATIONPRIVATE_LOCATION_EDITSPAMTRANSIT_MARKET_REQUESTTRANSIT_NOT_ON_SCHEDULEUNKNOWN";
  qword_26024A8 = (uint64_t)"MAPS_FEATURE_REQUESTMOBILE_BUSINESSNOT_AN_OPERATIONS_EDITNOT_ENOUGH_INFOPOLICY_VIOLATIONPRIVATE_LOCATION_EDITSPAMTRANSIT_MARKET_REQUESTTRANSIT_NOT_ON_SCHEDULEUNKNOWN";
  qword_26024C0 = (uint64_t)"MOBILE_BUSINESSNOT_AN_OPERATIONS_EDITNOT_ENOUGH_INFOPOLICY_VIOLATIONPRIVATE_LOCATION_EDITSPAMTRANSIT_MARKET_REQUESTTRANSIT_NOT_ON_SCHEDULEUNKNOWN";
  qword_26024D8 = (uint64_t)"NOT_AN_OPERATIONS_EDITNOT_ENOUGH_INFOPOLICY_VIOLATIONPRIVATE_LOCATION_EDITSPAMTRANSIT_MARKET_REQUESTTRANSIT_NOT_ON_SCHEDULEUNKNOWN";
  qword_26024F0 = (uint64_t)"NOT_ENOUGH_INFOPOLICY_VIOLATIONPRIVATE_LOCATION_EDITSPAMTRANSIT_MARKET_REQUESTTRANSIT_NOT_ON_SCHEDULEUNKNOWN";
  qword_2602508 = (uint64_t)"POLICY_VIOLATIONPRIVATE_LOCATION_EDITSPAMTRANSIT_MARKET_REQUESTTRANSIT_NOT_ON_SCHEDULEUNKNOWN";
  qword_2602520 = (uint64_t)"PRIVATE_LOCATION_EDITSPAMTRANSIT_MARKET_REQUESTTRANSIT_NOT_ON_SCHEDULEUNKNOWN";
  qword_2602538 = (uint64_t)"SPAMTRANSIT_MARKET_REQUESTTRANSIT_NOT_ON_SCHEDULEUNKNOWN";
  qword_2602550 = (uint64_t)"TRANSIT_MARKET_REQUESTTRANSIT_NOT_ON_SCHEDULEUNKNOWN";
  qword_2602568 = (uint64_t)"TRANSIT_NOT_ON_SCHEDULEUNKNOWN";
  qword_2602580 = (uint64_t)"UNKNOWN";
  qword_26023B8 = (uint64_t)"ALREADY_FIXEDBEHAVES_CORRECTLYCLOSEDCUSTOMER_OUTREACH_BEHAVES_CORRECTLYCUSTOMER_OUTREACH_BY_M"
                           "ESSAGECUSTOMER_OUTREACH_BY_WORKGROUPDATA_FIXEDDATA_FIXED_NO_TIMELINEFAVORITE_LOCATION_EDITINA"
                           "CCURATE_INFORMATIONMAPS_FEATURE_REQUESTMOBILE_BUSINESSNOT_AN_OPERATIONS_EDITNOT_ENOUGH_INFOPO"
                           "LICY_VIOLATIONPRIVATE_LOCATION_EDITSPAMTRANSIT_MARKET_REQUESTTRANSIT_NOT_ON_SCHEDULEUNKNOWN";
  unk_26023C0 = 13;
  dword_26023C8 = 2;
  qword_26023D8 = 17;
  dword_26023E0 = 103;
  qword_26023F0 = 6;
  dword_26023F8 = 206;
  qword_2602408 = 35;
  dword_2602410 = 110;
  qword_2602420 = 28;
  dword_2602428 = 109;
  qword_2602438 = 30;
  dword_2602440 = 108;
  qword_2602450 = 10;
  dword_2602458 = 1;
  qword_2602468 = 22;
  dword_2602470 = 3;
  qword_2602480 = 22;
  dword_2602488 = 205;
  qword_2602498 = 22;
  dword_26024A0 = 104;
  qword_26024B0 = 20;
  dword_26024B8 = 201;
  qword_26024C8 = 15;
  dword_26024D0 = 107;
  qword_26024E0 = 22;
  dword_26024E8 = 106;
  qword_26024F8 = 15;
  dword_2602500 = 101;
  qword_2602510 = 16;
  dword_2602518 = 105;
  qword_2602528 = 21;
  dword_2602530 = 202;
  qword_2602540 = 4;
  dword_2602548 = 102;
  qword_2602558 = 22;
  dword_2602560 = 204;
  qword_2602570 = 23;
  dword_2602578 = 203;
  qword_2602588 = 7;
  dword_2602590 = 0;
  dword_26025A8 = 501;
  dword_26025C0 = 500;
  dword_26025D8 = 600;
  dword_26025F0 = 100;
  dword_2602608 = 105;
  qword_2602610 = (uint64_t)"BASE_MAP_ADD_STREETBASE_MAP_ADMINISTRATIVE_AREABASE_MAP_AOIBASE_MAP_AUTOCOMPLETEBASE_MAP_BUILDINGBASE_MAP_CHANGE_LABELBASE_MAP_CITYBASE_MAP_COUNTRYBASE_MAP_CYCLINGBASE_MAP_DIRECTIONSBASE_MAP_LAND_USEBASE_MAP_LOCALITYBASE_MAP_OTHERBASE_MAP_RUNNING_TRACKBASE_MAP_SEARCHBASE_MAP_STOREFRONTBASE_MAP_STREETBASE_MAP_TRAILBASE_MAP_TRANSIT_DIRECTIONSBRAND_CHANGE_DETAILSBRAND_MERCHANT_LOOKUPBRAND_OTHERCARTOCLIENT_FEATURE_REQUESTCURATED_COLLECTIONS_CHANGE_DETAILSCURRENT_LOCATION_OTHERDATA_OTHERDIRECTIONSDIRECTIONS_OTHERDISPUTED_TERRITORIES_OTHERGROUND_VIEW_ADDRESS_CENSOR_REQUESTGROUND_VIEW_BASIC_CENSOR_REQUESTGROUND_VIEW_IMAGE_QUALITYGROUND_VIEW_OTHERGROUND_VIEW_UNVERIFIED_ADDRESS_CENSOR_REQUESTIMAGERYINSUFFICIENT_INFORMATIONMALFORMEDMANUALMAPS_APPMAPS_APP_OTHERMAPS_APP_SIRIMERCHANT_LOOKUP_NO_MATCHMERCHANT_LOOKUP_OTHERPEDESTRIANPOI_ADDPOI_ADD_DISPUTED_TERRITORYPOI_AUTOCOMPLETEPOI_CHANGE_DETAILSPOI_CHANGE_LABELPOI_CONTAINMENT_CHANGEPOI_CURATED_COLLECTIONSPOI_GROUND_VIEW_STOREFRONTPOI_MERCHANT_LOOKUPPOI_OTHERPOI_REMOVEPOI_SEARCHPOI_TEMPORARY_CLOSUREROAD_INTERSECTIONROAD_OTHERROAD_RESTRICTIONROAD_SPEED_LIMITSROUTINGROUTING_CORRECT_ETASATELLITE_OTHERSATELLITE_OUTDATEDSATELLITE_QUALITYSEARCH_OTHERSEARCH_RESULTS_OTHERSTREETTEMPORARY_PROBLEMTRAFFIC_OTHERTRANSIT_ADDTRANSIT_CHANGE_LABELTRANSIT_DIRECTIONSTRANSIT_DIRECTIONS_UNSUPPORTED_MARKETTRANSIT_LINE_CHANGETRANSIT_LINE_GEOMETRYTRANSIT_MARKET_REQUESTTRANSIT_OTHERTRANSIT_POI_CHANGETRANSIT_POI_CONTAINMENT_CHANGETRANSIT_SCHEDULE_CHANGETRANSIT_STATION_GEOMETRYUNKNOWNUNSPECIFIEDUSER_NAME_INAPPROPRIATEUSER_RESPONSE";
  dword_2602620 = 124;
  dword_2602638 = 106;
  dword_2602650 = 107;
  dword_2602680 = 108;
  qword_2602688 = (uint64_t)"BASE_MAP_CHANGE_LABELBASE_MAP_CITYBASE_MAP_COUNTRYBASE_MAP_CYCLINGBASE_MAP_DIRECTIONSBASE_MAP_LAND_USEBASE_MAP_LOCALITYBASE_MAP_OTHERBASE_MAP_RUNNING_TRACKBASE_MAP_SEARCHBASE_MAP_STOREFRONTBASE_MAP_STREETBASE_MAP_TRAILBASE_MAP_TRANSIT_DIRECTIONSBRAND_CHANGE_DETAILSBRAND_MERCHANT_LOOKUPBRAND_OTHERCARTOCLIENT_FEATURE_REQUESTCURATED_COLLECTIONS_CHANGE_DETAILSCURRENT_LOCATION_OTHERDATA_OTHERDIRECTIONSDIRECTIONS_OTHERDISPUTED_TERRITORIES_OTHERGROUND_VIEW_ADDRESS_CENSOR_REQUESTGROUND_VIEW_BASIC_CENSOR_REQUESTGROUND_VIEW_IMAGE_QUALITYGROUND_VIEW_OTHERGROUND_VIEW_UNVERIFIED_ADDRESS_CENSOR_REQUESTIMAGERYINSUFFICIENT_INFORMATIONMALFORMEDMANUALMAPS_APPMAPS_APP_OTHERMAPS_APP_SIRIMERCHANT_LOOKUP_NO_MATCHMERCHANT_LOOKUP_OTHERPEDESTRIANPOI_ADDPOI_ADD_DISPUTED_TERRITORYPOI_AUTOCOMPLETEPOI_CHANGE_DETAILSPOI_CHANGE_LABELPOI_CONTAINMENT_CHANGEPOI_CURATED_COLLECTIONSPOI_GROUND_VIEW_STOREFRONTPOI_MERCHANT_LOOKUPPOI_OTHERPOI_REMOVEPOI_SEARCHPOI_TEMPORARY_CLOSUREROAD_INTERSECTIONROAD_OTHERROAD_RESTRICTIONROAD_SPEED_LIMITSROUTINGROUTING_CORRECT_ETASATELLITE_OTHERSATELLITE_OUTDATEDSATELLITE_QUALITYSEARCH_OTHERSEARCH_RESULTS_OTHERSTREETTEMPORARY_PROBLEMTRAFFIC_OTHERTRANSIT_ADDTRANSIT_CHANGE_LABELTRANSIT_DIRECTIONSTRANSIT_DIRECTIONS_UNSUPPORTED_MARKETTRANSIT_LINE_CHANGETRANSIT_LINE_GEOMETRYTRANSIT_MARKET_REQUESTTRANSIT_OTHERTRANSIT_POI_CHANGETRANSIT_POI_CONTAINMENT_CHANGETRANSIT_SCHEDULE_CHANGETRANSIT_STATION_GEOMETRYUNKNOWNUNSPECIFIEDUSER_NAME_INAPPROPRIATEUSER_RESPONSE";
  dword_26026B0 = 109;
  dword_26026C8 = 110;
  dword_26026E0 = 123;
  dword_26026F8 = 111;
  qword_2602700 = (uint64_t)"BASE_MAP_LAND_USEBASE_MAP_LOCALITYBASE_MAP_OTHERBASE_MAP_RUNNING_TRACKBASE_MAP_SEARCHBASE_MAP_STOREFRONTBASE_MAP_STREETBASE_MAP_TRAILBASE_MAP_TRANSIT_DIRECTIONSBRAND_CHANGE_DETAILSBRAND_MERCHANT_LOOKUPBRAND_OTHERCARTOCLIENT_FEATURE_REQUESTCURATED_COLLECTIONS_CHANGE_DETAILSCURRENT_LOCATION_OTHERDATA_OTHERDIRECTIONSDIRECTIONS_OTHERDISPUTED_TERRITORIES_OTHERGROUND_VIEW_ADDRESS_CENSOR_REQUESTGROUND_VIEW_BASIC_CENSOR_REQUESTGROUND_VIEW_IMAGE_QUALITYGROUND_VIEW_OTHERGROUND_VIEW_UNVERIFIED_ADDRESS_CENSOR_REQUESTIMAGERYINSUFFICIENT_INFORMATIONMALFORMEDMANUALMAPS_APPMAPS_APP_OTHERMAPS_APP_SIRIMERCHANT_LOOKUP_NO_MATCHMERCHANT_LOOKUP_OTHERPEDESTRIANPOI_ADDPOI_ADD_DISPUTED_TERRITORYPOI_AUTOCOMPLETEPOI_CHANGE_DETAILSPOI_CHANGE_LABELPOI_CONTAINMENT_CHANGEPOI_CURATED_COLLECTIONSPOI_GROUND_VIEW_STOREFRONTPOI_MERCHANT_LOOKUPPOI_OTHERPOI_REMOVEPOI_SEARCHPOI_TEMPORARY_CLOSUREROAD_INTERSECTIONROAD_OTHERROAD_RESTRICTIONROAD_SPEED_LIMITSROUTINGROUTING_CORRECT_ETASATELLITE_OTHERSATELLITE_OUTDATEDSATELLITE_QUALITYSEARCH_OTHERSEARCH_RESULTS_OTHERSTREETTEMPORARY_PROBLEMTRAFFIC_OTHERTRANSIT_ADDTRANSIT_CHANGE_LABELTRANSIT_DIRECTIONSTRANSIT_DIRECTIONS_UNSUPPORTED_MARKETTRANSIT_LINE_CHANGETRANSIT_LINE_GEOMETRYTRANSIT_MARKET_REQUESTTRANSIT_OTHERTRANSIT_POI_CHANGETRANSIT_POI_CONTAINMENT_CHANGETRANSIT_SCHEDULE_CHANGETRANSIT_STATION_GEOMETRYUNKNOWNUNSPECIFIEDUSER_NAME_INAPPROPRIATEUSER_RESPONSE";
  dword_2602710 = 112;
  dword_2602728 = 122;
  dword_2602740 = 113;
  qword_26038A0 = (uint64_t)"FILTERED_POI_EMOJIFILTERED_POI_HOMEFILTERED_POI_LOIFILTERED_POI_WORKFILTERED_PROBLEM_TYPEFILTERED_REROUTED_UNSUPPORTED_PROBLEMFILTERED_SPAMFILTERED_TEST_RAPFILTERED_UNKNOWN_CLASSIFICATIONFILTERED_UNKNOWN_REASONFILTERED_UNSUPPORTED_CLASSIFICATIONFILTERED_UNSUPPORTED_MANIFEST_ENVFILTERED_UNSUPPORTED_OS_VERSIONFILTERED_UNSUPPORTED_PROVIDERNOT_FILTERED";
  unk_26038A8 = 18;
  qword_2603888 = (uint64_t)"FILTERED_POI_DISPUTED_TERRITORYFILTERED_POI_EMOJIFILTERED_POI_HOMEFILTERED_POI_LOIFILTERED_POI_WORKFILTERED_PROBLEM_TYPEFILTERED_REROUTED_UNSUPPORTED_PROBLEMFILTERED_SPAMFILTERED_TEST_RAPFILTERED_UNKNOWN_CLASSIFICATIONFILTERED_UNKNOWN_REASONFILTERED_UNSUPPORTED_CLASSIFICATIONFILTERED_UNSUPPORTED_MANIFEST_ENVFILTERED_UNSUPPORTED_OS_VERSIONFILTERED_UNSUPPORTED_PROVIDERNOT_FILTERED";
  unk_2603890 = 31;
  dword_2603880 = 20;
  dword_2603898 = 10;
  qword_2603858 = (uint64_t)"FILTERED_NONACTIONABLE_BASEMAP_STREET_ADDFILTERED_OTHERFILTERED_POI_DISPUTED_TERRITORYFILTERED_POI_EMOJIFILTERED_POI_HOMEFILTERED_POI_LOIFILTERED_POI_WORKFILTERED_PROBLEM_TYPEFILTERED_REROUTED_UNSUPPORTED_PROBLEMFILTERED_SPAMFILTERED_TEST_RAPFILTERED_UNKNOWN_CLASSIFICATIONFILTERED_UNKNOWN_REASONFILTERED_UNSUPPORTED_CLASSIFICATIONFILTERED_UNSUPPORTED_MANIFEST_ENVFILTERED_UNSUPPORTED_OS_VERSIONFILTERED_UNSUPPORTED_PROVIDERNOT_FILTERED";
  unk_2603860 = 41;
  dword_2603868 = 25;
  qword_2603870 = (uint64_t)"FILTERED_OTHERFILTERED_POI_DISPUTED_TERRITORYFILTERED_POI_EMOJIFILTERED_POI_HOMEFILTERED_POI_LOIFILTERED_POI_WORKFILTERED_PROBLEM_TYPEFILTERED_REROUTED_UNSUPPORTED_PROBLEMFILTERED_SPAMFILTERED_TEST_RAPFILTERED_UNKNOWN_CLASSIFICATIONFILTERED_UNKNOWN_REASONFILTERED_UNSUPPORTED_CLASSIFICATIONFILTERED_UNSUPPORTED_MANIFEST_ENVFILTERED_UNSUPPORTED_OS_VERSIONFILTERED_UNSUPPORTED_PROVIDERNOT_FILTERED";
  unk_2603878 = 14;
  qword_2603828 = (uint64_t)"FILTERED_MALFORMEDFILTERED_MAPS_SERVER_ENVIRONMENTFILTERED_NONACTIONABLE_BASEMAP_STREET_ADDFILTERED_OTHERFILTERED_POI_DISPUTED_TERRITORYFILTERED_POI_EMOJIFILTERED_POI_HOMEFILTERED_POI_LOIFILTERED_POI_WORKFILTERED_PROBLEM_TYPEFILTERED_REROUTED_UNSUPPORTED_PROBLEMFILTERED_SPAMFILTERED_TEST_RAPFILTERED_UNKNOWN_CLASSIFICATIONFILTERED_UNKNOWN_REASONFILTERED_UNSUPPORTED_CLASSIFICATIONFILTERED_UNSUPPORTED_MANIFEST_ENVFILTERED_UNSUPPORTED_OS_VERSIONFILTERED_UNSUPPORTED_PROVIDERNOT_FILTERED";
  unk_2603830 = 18;
  qword_2603840 = (uint64_t)"FILTERED_MAPS_SERVER_ENVIRONMENTFILTERED_NONACTIONABLE_BASEMAP_STREET_ADDFILTERED_OTHERFILTERED_POI_DISPUTED_TERRITORYFILTERED_POI_EMOJIFILTERED_POI_HOMEFILTERED_POI_LOIFILTERED_POI_WORKFILTERED_PROBLEM_TYPEFILTERED_REROUTED_UNSUPPORTED_PROBLEMFILTERED_SPAMFILTERED_TEST_RAPFILTERED_UNKNOWN_CLASSIFICATIONFILTERED_UNKNOWN_REASONFILTERED_UNSUPPORTED_CLASSIFICATIONFILTERED_UNSUPPORTED_MANIFEST_ENVFILTERED_UNSUPPORTED_OS_VERSIONFILTERED_UNSUPPORTED_PROVIDERNOT_FILTERED";
  unk_2603848 = 32;
  dword_2603850 = 26;
  dword_2603838 = 19;
  qword_26035B8 = (uint64_t)"CANNOT_FIXCANNOT_VALIDATEFIXEDINACCURATE_INFOINSUFFICIENT_INFOINVALID_REQUESTOTHERPOLICY_VIOLATIONREASSIGNMENTREPROCESSED_RAPSPAMUNCLEAR_INTENTUNKNOWN";
  qword_2603810 = (uint64_t)"FILTERED_LENGTHY_CORRECTIONFILTERED_MALFORMEDFILTERED_MAPS_SERVER_ENVIRONMENTFILTERED_NONACTIONABLE_BASEMAP_STREET_ADDFILTERED_OTHERFILTERED_POI_DISPUTED_TERRITORYFILTERED_POI_EMOJIFILTERED_POI_HOMEFILTERED_POI_LOIFILTERED_POI_WORKFILTERED_PROBLEM_TYPEFILTERED_REROUTED_UNSUPPORTED_PROBLEMFILTERED_SPAMFILTERED_TEST_RAPFILTERED_UNKNOWN_CLASSIFICATIONFILTERED_UNKNOWN_REASONFILTERED_UNSUPPORTED_CLASSIFICATIONFILTERED_UNSUPPORTED_MANIFEST_ENVFILTERED_UNSUPPORTED_OS_VERSIONFILTERED_UNSUPPORTED_PROVIDERNOT_FILTERED";
  unk_2603818 = 27;
  dword_2603820 = 6;
  qword_26037F8 = (uint64_t)"FILTERED_INSUFFICIENT_INFORMATIONFILTERED_LENGTHY_CORRECTIONFILTERED_MALFORMEDFILTERED_MAPS_SERVER_ENVIRONMENTFILTERED_NONACTIONABLE_BASEMAP_STREET_ADDFILTERED_OTHERFILTERED_POI_DISPUTED_TERRITORYFILTERED_POI_EMOJIFILTERED_POI_HOMEFILTERED_POI_LOIFILTERED_POI_WORKFILTERED_PROBLEM_TYPEFILTERED_REROUTED_UNSUPPORTED_PROBLEMFILTERED_SPAMFILTERED_TEST_RAPFILTERED_UNKNOWN_CLASSIFICATIONFILTERED_UNKNOWN_REASONFILTERED_UNSUPPORTED_CLASSIFICATIONFILTERED_UNSUPPORTED_MANIFEST_ENVFILTERED_UNSUPPORTED_OS_VERSIONFILTERED_UNSUPPORTED_PROVIDERNOT_FILTERED";
  unk_2603800 = 33;
  dword_26037F0 = 5;
  dword_2603808 = 18;
  qword_26037E0 = (uint64_t)"FILTERED_ICLOUD_USERFILTERED_INSUFFICIENT_INFORMATIONFILTERED_LENGTHY_CORRECTIONFILTERED_MALFORMEDFILTERED_MAPS_SERVER_ENVIRONMENTFILTERED_NONACTIONABLE_BASEMAP_STREET_ADDFILTERED_OTHERFILTERED_POI_DISPUTED_TERRITORYFILTERED_POI_EMOJIFILTERED_POI_HOMEFILTERED_POI_LOIFILTERED_POI_WORKFILTERED_PROBLEM_TYPEFILTERED_REROUTED_UNSUPPORTED_PROBLEMFILTERED_SPAMFILTERED_TEST_RAPFILTERED_UNKNOWN_CLASSIFICATIONFILTERED_UNKNOWN_REASONFILTERED_UNSUPPORTED_CLASSIFICATIONFILTERED_UNSUPPORTED_MANIFEST_ENVFILTERED_UNSUPPORTED_OS_VERSIONFILTERED_UNSUPPORTED_PROVIDERNOT_FILTERED";
  unk_26037E8 = 20;
  qword_26037C8 = (uint64_t)"FILTERED_EV_CHARGERFILTERED_ICLOUD_USERFILTERED_INSUFFICIENT_INFORMATIONFILTERED_LENGTHY_CORRECTIONFILTERED_MALFORMEDFILTERED_MAPS_SERVER_ENVIRONMENTFILTERED_NONACTIONABLE_BASEMAP_STREET_ADDFILTERED_OTHERFILTERED_POI_DISPUTED_TERRITORYFILTERED_POI_EMOJIFILTERED_POI_HOMEFILTERED_POI_LOIFILTERED_POI_WORKFILTERED_PROBLEM_TYPEFILTERED_REROUTED_UNSUPPORTED_PROBLEMFILTERED_SPAMFILTERED_TEST_RAPFILTERED_UNKNOWN_CLASSIFICATIONFILTERED_UNKNOWN_REASONFILTERED_UNSUPPORTED_CLASSIFICATIONFILTERED_UNSUPPORTED_MANIFEST_ENVFILTERED_UNSUPPORTED_OS_VERSIONFILTERED_UNSUPPORTED_PROVIDERNOT_FILTERED";
  unk_26037D0 = 19;
  dword_26037D8 = 32;
  qword_26037B0 = (uint64_t)"FILTERED_DUPLICATEFILTERED_EV_CHARGERFILTERED_ICLOUD_USERFILTERED_INSUFFICIENT_INFORMATIONFILTERED_LENGTHY_CORRECTIONFILTERED_MALFORMEDFILTERED_MAPS_SERVER_ENVIRONMENTFILTERED_NONACTIONABLE_BASEMAP_STREET_ADDFILTERED_OTHERFILTERED_POI_DISPUTED_TERRITORYFILTERED_POI_EMOJIFILTERED_POI_HOMEFILTERED_POI_LOIFILTERED_POI_WORKFILTERED_PROBLEM_TYPEFILTERED_REROUTED_UNSUPPORTED_PROBLEMFILTERED_SPAMFILTERED_TEST_RAPFILTERED_UNKNOWN_CLASSIFICATIONFILTERED_UNKNOWN_REASONFILTERED_UNSUPPORTED_CLASSIFICATIONFILTERED_UNSUPPORTED_MANIFEST_ENVFILTERED_UNSUPPORTED_OS_VERSIONFILTERED_UNSUPPORTED_PROVIDERNOT_FILTERED";
  unk_26037B8 = 18;
  dword_26037A8 = 27;
  dword_26037C0 = 29;
  qword_2603798 = (uint64_t)"FILTERED_COUNTRYFILTERED_DUPLICATEFILTERED_EV_CHARGERFILTERED_ICLOUD_USERFILTERED_INSUFFICIENT_INFORMATIONFILTERED_LENGTHY_CORRECTIONFILTERED_MALFORMEDFILTERED_MAPS_SERVER_ENVIRONMENTFILTERED_NONACTIONABLE_BASEMAP_STREET_ADDFILTERED_OTHERFILTERED_POI_DISPUTED_TERRITORYFILTERED_POI_EMOJIFILTERED_POI_HOMEFILTERED_POI_LOIFILTERED_POI_WORKFILTERED_PROBLEM_TYPEFILTERED_REROUTED_UNSUPPORTED_PROBLEMFILTERED_SPAMFILTERED_TEST_RAPFILTERED_UNKNOWN_CLASSIFICATIONFILTERED_UNKNOWN_REASONFILTERED_UNSUPPORTED_CLASSIFICATIONFILTERED_UNSUPPORTED_MANIFEST_ENVFILTERED_UNSUPPORTED_OS_VERSIONFILTERED_UNSUPPORTED_PROVIDERNOT_FILTERED";
  qword_2603780 = (uint64_t)"FILTERED_CLASSIFICATIONFILTERED_COUNTRYFILTERED_DUPLICATEFILTERED_EV_CHARGERFILTERED_ICLOUD_USERFILTERED_INSUFFICIENT_INFORMATIONFILTERED_LENGTHY_CORRECTIONFILTERED_MALFORMEDFILTERED_MAPS_SERVER_ENVIRONMENTFILTERED_NONACTIONABLE_BASEMAP_STREET_ADDFILTERED_OTHERFILTERED_POI_DISPUTED_TERRITORYFILTERED_POI_EMOJIFILTERED_POI_HOMEFILTERED_POI_LOIFILTERED_POI_WORKFILTERED_PROBLEM_TYPEFILTERED_REROUTED_UNSUPPORTED_PROBLEMFILTERED_SPAMFILTERED_TEST_RAPFILTERED_UNKNOWN_CLASSIFICATIONFILTERED_UNKNOWN_REASONFILTERED_UNSUPPORTED_CLASSIFICATIONFILTERED_UNSUPPORTED_MANIFEST_ENVFILTERED_UNSUPPORTED_OS_VERSIONFILTERED_UNSUPPORTED_PROVIDERNOT_FILTERED";
  unk_2603788 = 23;
  dword_2603790 = 3;
  qword_26037A0 = 16;
  dword_2603760 = 13;
  qword_2603768 = (uint64_t)"FILTERED_BLOCKED_USERFILTERED_CLASSIFICATIONFILTERED_COUNTRYFILTERED_DUPLICATEFILTERED_EV_CHARGERFILTERED_ICLOUD_USERFILTERED_INSUFFICIENT_INFORMATIONFILTERED_LENGTHY_CORRECTIONFILTERED_MALFORMEDFILTERED_MAPS_SERVER_ENVIRONMENTFILTERED_NONACTIONABLE_BASEMAP_STREET_ADDFILTERED_OTHERFILTERED_POI_DISPUTED_TERRITORYFILTERED_POI_EMOJIFILTERED_POI_HOMEFILTERED_POI_LOIFILTERED_POI_WORKFILTERED_PROBLEM_TYPEFILTERED_REROUTED_UNSUPPORTED_PROBLEMFILTERED_SPAMFILTERED_TEST_RAPFILTERED_UNKNOWN_CLASSIFICATIONFILTERED_UNKNOWN_REASONFILTERED_UNSUPPORTED_CLASSIFICATIONFILTERED_UNSUPPORTED_MANIFEST_ENVFILTERED_UNSUPPORTED_OS_VERSIONFILTERED_UNSUPPORTED_PROVIDERNOT_FILTERED";
  unk_2603770 = 21;
  dword_2603778 = 31;
  qword_2603750 = (uint64_t)"FILTERED_BASEMAP_WORKFILTERED_BLOCKED_USERFILTERED_CLASSIFICATIONFILTERED_COUNTRYFILTERED_DUPLICATEFILTERED_EV_CHARGERFILTERED_ICLOUD_USERFILTERED_INSUFFICIENT_INFORMATIONFILTERED_LENGTHY_CORRECTIONFILTERED_MALFORMEDFILTERED_MAPS_SERVER_ENVIRONMENTFILTERED_NONACTIONABLE_BASEMAP_STREET_ADDFILTERED_OTHERFILTERED_POI_DISPUTED_TERRITORYFILTERED_POI_EMOJIFILTERED_POI_HOMEFILTERED_POI_LOIFILTERED_POI_WORKFILTERED_PROBLEM_TYPEFILTERED_REROUTED_UNSUPPORTED_PROBLEMFILTERED_SPAMFILTERED_TEST_RAPFILTERED_UNKNOWN_CLASSIFICATIONFILTERED_UNKNOWN_REASONFILTERED_UNSUPPORTED_CLASSIFICATIONFILTERED_UNSUPPORTED_MANIFEST_ENVFILTERED_UNSUPPORTED_OS_VERSIONFILTERED_UNSUPPORTED_PROVIDERNOT_FILTERED";
  unk_2603758 = 21;
  qword_2603738 = (uint64_t)"FILTERED_BASEMAP_LOIFILTERED_BASEMAP_WORKFILTERED_BLOCKED_USERFILTERED_CLASSIFICATIONFILTERED_COUNTRYFILTERED_DUPLICATEFILTERED_EV_CHARGERFILTERED_ICLOUD_USERFILTERED_INSUFFICIENT_INFORMATIONFILTERED_LENGTHY_CORRECTIONFILTERED_MALFORMEDFILTERED_MAPS_SERVER_ENVIRONMENTFILTERED_NONACTIONABLE_BASEMAP_STREET_ADDFILTERED_OTHERFILTERED_POI_DISPUTED_TERRITORYFILTERED_POI_EMOJIFILTERED_POI_HOMEFILTERED_POI_LOIFILTERED_POI_WORKFILTERED_PROBLEM_TYPEFILTERED_REROUTED_UNSUPPORTED_PROBLEMFILTERED_SPAMFILTERED_TEST_RAPFILTERED_UNKNOWN_CLASSIFICATIONFILTERED_UNKNOWN_REASONFILTERED_UNSUPPORTED_CLASSIFICATIONFILTERED_UNSUPPORTED_MANIFEST_ENVFILTERED_UNSUPPORTED_OS_VERSIONFILTERED_UNSUPPORTED_PROVIDERNOT_FILTERED";
  unk_2603740 = 20;
  dword_2603748 = 14;
  qword_2603720 = (uint64_t)"FILTERED_BASEMAP_HOMEFILTERED_BASEMAP_LOIFILTERED_BASEMAP_WORKFILTERED_BLOCKED_USERFILTERED_CLASSIFICATIONFILTERED_COUNTRYFILTERED_DUPLICATEFILTERED_EV_CHARGERFILTERED_ICLOUD_USERFILTERED_INSUFFICIENT_INFORMATIONFILTERED_LENGTHY_CORRECTIONFILTERED_MALFORMEDFILTERED_MAPS_SERVER_ENVIRONMENTFILTERED_NONACTIONABLE_BASEMAP_STREET_ADDFILTERED_OTHERFILTERED_POI_DISPUTED_TERRITORYFILTERED_POI_EMOJIFILTERED_POI_HOMEFILTERED_POI_LOIFILTERED_POI_WORKFILTERED_PROBLEM_TYPEFILTERED_REROUTED_UNSUPPORTED_PROBLEMFILTERED_SPAMFILTERED_TEST_RAPFILTERED_UNKNOWN_CLASSIFICATIONFILTERED_UNKNOWN_REASONFILTERED_UNSUPPORTED_CLASSIFICATIONFILTERED_UNSUPPORTED_MANIFEST_ENVFILTERED_UNSUPPORTED_OS_VERSIONFILTERED_UNSUPPORTED_PROVIDERNOT_FILTERED";
  unk_2603728 = 21;
  dword_2603718 = 15;
  dword_2603730 = 12;
  qword_2603708 = (uint64_t)"FILTERED_BASEMAP_FAULTY_BOOKMARKFILTERED_BASEMAP_HOMEFILTERED_BASEMAP_LOIFILTERED_BASEMAP_WORKFILTERED_BLOCKED_USERFILTERED_CLASSIFICATIONFILTERED_COUNTRYFILTERED_DUPLICATEFILTERED_EV_CHARGERFILTERED_ICLOUD_USERFILTERED_INSUFFICIENT_INFORMATIONFILTERED_LENGTHY_CORRECTIONFILTERED_MALFORMEDFILTERED_MAPS_SERVER_ENVIRONMENTFILTERED_NONACTIONABLE_BASEMAP_STREET_ADDFILTERED_OTHERFILTERED_POI_DISPUTED_TERRITORYFILTERED_POI_EMOJIFILTERED_POI_HOMEFILTERED_POI_LOIFILTERED_POI_WORKFILTERED_PROBLEM_TYPEFILTERED_REROUTED_UNSUPPORTED_PROBLEMFILTERED_SPAMFILTERED_TEST_RAPFILTERED_UNKNOWN_CLASSIFICATIONFILTERED_UNKNOWN_REASONFILTERED_UNSUPPORTED_CLASSIFICATIONFILTERED_UNSUPPORTED_MANIFEST_ENVFILTERED_UNSUPPORTED_OS_VERSIONFILTERED_UNSUPPORTED_PROVIDERNOT_FILTERED";
  unk_2603710 = 32;
  qword_26036F0 = (uint64_t)"FILTERED_BAD_ROUTE_STEP_INDEXFILTERED_BASEMAP_FAULTY_BOOKMARKFILTERED_BASEMAP_HOMEFILTERED_BA"
                           "SEMAP_LOIFILTERED_BASEMAP_WORKFILTERED_BLOCKED_USERFILTERED_CLASSIFICATIONFILTERED_COUNTRYFIL"
                           "TERED_DUPLICATEFILTERED_EV_CHARGERFILTERED_ICLOUD_USERFILTERED_INSUFFICIENT_INFORMATIONFILTER"
                           "ED_LENGTHY_CORRECTIONFILTERED_MALFORMEDFILTERED_MAPS_SERVER_ENVIRONMENTFILTERED_NONACTIONABLE"
                           "_BASEMAP_STREET_ADDFILTERED_OTHERFILTERED_POI_DISPUTED_TERRITORYFILTERED_POI_EMOJIFILTERED_PO"
                           "I_HOMEFILTERED_POI_LOIFILTERED_POI_WORKFILTERED_PROBLEM_TYPEFILTERED_REROUTED_UNSUPPORTED_PRO"
                           "BLEMFILTERED_SPAMFILTERED_TEST_RAPFILTERED_UNKNOWN_CLASSIFICATIONFILTERED_UNKNOWN_REASONFILTE"
                           "RED_UNSUPPORTED_CLASSIFICATIONFILTERED_UNSUPPORTED_MANIFEST_ENVFILTERED_UNSUPPORTED_OS_VERSIO"
                           "NFILTERED_UNSUPPORTED_PROVIDERNOT_FILTERED";
  *(void *)algn_26036F8 = 29;
  dword_2603700 = 2;
  qword_26036D8 = (uint64_t)"UNKNOWN";
  unk_26036E0 = 7;
  dword_26036D0 = 10;
  dword_26036E8 = 0;
  qword_26036C0 = (uint64_t)"UNCLEAR_INTENTUNKNOWN";
  unk_26036C8 = 14;
  qword_26036A8 = (uint64_t)"SPAMUNCLEAR_INTENTUNKNOWN";
  unk_26036B0 = 4;
  dword_26036B8 = 9;
  qword_2603690 = (uint64_t)"REPROCESSED_RAPSPAMUNCLEAR_INTENTUNKNOWN";
  unk_2603698 = 15;
  dword_2603688 = 8;
  dword_26036A0 = 13;
  qword_2603678 = (uint64_t)"REASSIGNMENTREPROCESSED_RAPSPAMUNCLEAR_INTENTUNKNOWN";
  unk_2603680 = 12;
  qword_2603660 = (uint64_t)"POLICY_VIOLATIONREASSIGNMENTREPROCESSED_RAPSPAMUNCLEAR_INTENTUNKNOWN";
  unk_2603668 = 16;
  dword_2603670 = 7;
  qword_2603648 = (uint64_t)"OTHERPOLICY_VIOLATIONREASSIGNMENTREPROCESSED_RAPSPAMUNCLEAR_INTENTUNKNOWN";
  unk_2603650 = 5;
  dword_2603640 = 11;
  dword_2603658 = 6;
  qword_2603630 = (uint64_t)"INVALID_REQUESTOTHERPOLICY_VIOLATIONREASSIGNMENTREPROCESSED_RAPSPAMUNCLEAR_INTENTUNKNOWN";
  unk_2603638 = 15;
  qword_2603618 = (uint64_t)"INSUFFICIENT_INFOINVALID_REQUESTOTHERPOLICY_VIOLATIONREASSIGNMENTREPROCESSED_RAPSPAMUNCLEAR_INTENTUNKNOWN";
  unk_2603620 = 17;
  dword_2603628 = 5;
  qword_2603600 = (uint64_t)"INACCURATE_INFOINSUFFICIENT_INFOINVALID_REQUESTOTHERPOLICY_VIOLATIONREASSIGNMENTREPROCESSED_RAPSPAMUNCLEAR_INTENTUNKNOWN";
  unk_2603608 = 15;
  dword_26035F8 = 1;
  dword_2603610 = 4;
  qword_26035E8 = (uint64_t)"FIXEDINACCURATE_INFOINSUFFICIENT_INFOINVALID_REQUESTOTHERPOLICY_VIOLATIONREASSIGNMENTREPROCESSED_RAPSPAMUNCLEAR_INTENTUNKNOWN";
  unk_26035F0 = 5;
  qword_26035D0 = (uint64_t)"CANNOT_VALIDATEFIXEDINACCURATE_INFOINSUFFICIENT_INFOINVALID_REQUESTOTHERPOLICY_VIOLATIONREASSIGNMENTREPROCESSED_RAPSPAMUNCLEAR_INTENTUNKNOWN";
  unk_26035D8 = 15;
  dword_26035E0 = 3;
  qword_26035C0 = 10;
  dword_26035C8 = 12;
  qword_2603588 = (uint64_t)"UNKNOWN";
  unk_2603590 = 7;
  qword_26035A0 = (uint64_t)"ALREADY_CORRECTCANNOT_FIXCANNOT_VALIDATEFIXEDINACCURATE_INFOINSUFFICIENT_INFOINVALID_REQUESTO"
                           "THERPOLICY_VIOLATIONREASSIGNMENTREPROCESSED_RAPSPAMUNCLEAR_INTENTUNKNOWN";
  *(void *)algn_26035A8 = 15;
  dword_26035B0 = 2;
  dword_2603598 = 0;
  qword_2603570 = (uint64_t)"SUCCESSUNKNOWN";
  unk_2603578 = 7;
  dword_2603580 = 1;
  qword_2603558 = (uint64_t)"REJECTIONSUCCESSUNKNOWN";
  unk_2603560 = 9;
  qword_2603540 = (uint64_t)"REASSIGNMENTREJECTIONSUCCESSUNKNOWN";
  unk_2603548 = 12;
  dword_2603568 = 2;
  dword_2603550 = 3;
  qword_26034E0 = (uint64_t)"OFFLINE_AREAPOIQUERY";
  qword_2603528 = (uint64_t)"HOLDREASSIGNMENTREJECTIONSUCCESSUNKNOWN";
  unk_2603530 = 4;
  dword_2603538 = 4;
  dword_2603520 = 3;
  qword_2603510 = (uint64_t)"QUERY";
  qword_26034F8 = (uint64_t)"POIQUERY";
  unk_2603500 = 3;
  dword_2603508 = 2;
  qword_2603518 = 5;
  qword_26034C8 = (uint64_t)"CATEGORYOFFLINE_AREAPOIQUERY";
  unk_26034D0 = 8;
  dword_26034D8 = 1;
  qword_26034E8 = 12;
  dword_26034F0 = 5;
  qword_2603498 = (uint64_t)"ADDRESSBRAND_PROFILECATEGORYOFFLINE_AREAPOIQUERY";
  unk_26034A0 = 7;
  qword_26034B0 = (uint64_t)"BRAND_PROFILECATEGORYOFFLINE_AREAPOIQUERY";
  unk_26034B8 = 13;
  dword_26034C0 = 4;
  dword_26034A8 = 0;
  qword_2603468 = (uint64_t)"TRANSITUNKNOWN";
  qword_2603480 = (uint64_t)"UNKNOWN";
  dword_2603478 = 10;
  qword_2603488 = 7;
  dword_2603490 = 0;
  qword_2603450 = (uint64_t)"TRAFFICTRANSITUNKNOWN";
  unk_2603458 = 7;
  dword_2603460 = 18;
  qword_2603470 = 7;
  qword_2603420 = (uint64_t)"SEARCHTHREE_DVTRAFFICTRANSITUNKNOWN";
  dword_2603430 = 9;
  qword_2603438 = (uint64_t)"THREE_DVTRAFFICTRANSITUNKNOWN";
  unk_2603440 = 8;
  dword_2603448 = 19;
  qword_2603408 = (uint64_t)"SATELLITESEARCHTHREE_DVTRAFFICTRANSITUNKNOWN";
  unk_2603410 = 9;
  dword_2603418 = 8;
  qword_2603428 = 6;
  qword_26033D8 = (uint64_t)"POI_OUTREACHROUTINGSATELLITESEARCHTHREE_DVTRAFFICTRANSITUNKNOWN";
  qword_26033F0 = (uint64_t)"ROUTINGSATELLITESEARCHTHREE_DVTRAFFICTRANSITUNKNOWN";
  unk_26033F8 = 7;
  dword_26033E8 = 23;
  dword_2603400 = 7;
  qword_26033C0 = (uint64_t)"POI_COLLECTIONPOI_OUTREACHROUTINGSATELLITESEARCHTHREE_DVTRAFFICTRANSITUNKNOWN";
  unk_26033C8 = 14;
  dword_26033D0 = 22;
  qword_26033E0 = 12;
  qword_2603390 = (uint64_t)"OTHERPOIPOI_COLLECTIONPOI_OUTREACHROUTINGSATELLITESEARCHTHREE_DVTRAFFICTRANSITUNKNOWN";
  unk_2603398 = 5;
  dword_26033A0 = 12;
  qword_26033A8 = (uint64_t)"POIPOI_COLLECTIONPOI_OUTREACHROUTINGSATELLITESEARCHTHREE_DVTRAFFICTRANSITUNKNOWN";
  unk_26033B0 = 3;
  dword_26033B8 = 4;
  qword_2603378 = (uint64_t)"NO_ASSIGNEEOTHERPOIPOI_COLLECTIONPOI_OUTREACHROUTINGSATELLITESEARCHTHREE_DVTRAFFICTRANSITUNKNOWN";
  unk_2603380 = 11;
  dword_2603388 = 11;
  qword_2603348 = (uint64_t)"LOC_SERVICESMANTRANO_ASSIGNEEOTHERPOIPOI_COLLECTIONPOI_OUTREACHROUTINGSATELLITESEARCHTHREE_DVTRAFFICTRANSITUNKNOWN";
  unk_2603350 = 12;
  qword_2603360 = (uint64_t)"MANTRANO_ASSIGNEEOTHERPOIPOI_COLLECTIONPOI_OUTREACHROUTINGSATELLITESEARCHTHREE_DVTRAFFICTRANSITUNKNOWN";
  unk_2603368 = 6;
  dword_2603358 = 3;
  dword_2603370 = 17;
  qword_2603330 = (uint64_t)"JANALOC_SERVICESMANTRANO_ASSIGNEEOTHERPOIPOI_COLLECTIONPOI_OUTREACHROUTINGSATELLITESEARCHTHREE_DVTRAFFICTRANSITUNKNOWN";
  unk_2603338 = 4;
  dword_2603340 = 16;
  qword_2603300 = (uint64_t)"GENESYSIMAGERYJANALOC_SERVICESMANTRANO_ASSIGNEEOTHERPOIPOI_COLLECTIONPOI_OUTREACHROUTINGSATELLITESEARCHTHREE_DVTRAFFICTRANSITUNKNOWN";
  unk_2603308 = 7;
  qword_2603318 = (uint64_t)"IMAGERYJANALOC_SERVICESMANTRANO_ASSIGNEEOTHERPOIPOI_COLLECTIONPOI_OUTREACHROUTINGSATELLITESEARCHTHREE_DVTRAFFICTRANSITUNKNOWN";
  unk_2603320 = 7;
  dword_2603310 = 14;
  dword_2603328 = 6;
  qword_26032E8 = (uint64_t)"FLYOVERGENESYSIMAGERYJANALOC_SERVICESMANTRANO_ASSIGNEEOTHERPOIPOI_COLLECTIONPOI_OUTREACHROUTINGSATELLITESEARCHTHREE_DVTRAFFICTRANSITUNKNOWN";
  unk_26032F0 = 7;
  dword_26032F8 = 5;
  qword_26032B8 = (uint64_t)"CLIENTESCALATIONFLYOVERGENESYSIMAGERYJANALOC_SERVICESMANTRANO_ASSIGNEEOTHERPOIPOI_COLLECTIONPOI_OUTREACHROUTINGSATELLITESEARCHTHREE_DVTRAFFICTRANSITUNKNOWN";
  unk_26032C0 = 6;
  qword_26032D0 = (uint64_t)"ESCALATIONFLYOVERGENESYSIMAGERYJANALOC_SERVICESMANTRANO_ASSIGNEEOTHERPOIPOI_COLLECTIONPOI_OUTREACHROUTINGSATELLITESEARCHTHREE_DVTRAFFICTRANSITUNKNOWN";
  unk_26032D8 = 10;
  dword_26032C8 = 2;
  dword_26032E0 = 20;
  qword_26032A0 = (uint64_t)"BRANDCLIENTESCALATIONFLYOVERGENESYSIMAGERYJANALOC_SERVICESMANTRANO_ASSIGNEEOTHERPOIPOI_COLLECTIONPOI_OUTREACHROUTINGSATELLITESEARCHTHREE_DVTRAFFICTRANSITUNKNOWN";
  unk_26032A8 = 5;
  dword_26032B0 = 13;
  qword_2603288 = (uint64_t)"BASE_MAPBRANDCLIENTESCALATIONFLYOVERGENESYSIMAGERYJANALOC_SERVICESMANTRANO_ASSIGNEEOTHERPOIPOI_COLLECTIONPOI_OUTREACHROUTINGSATELLITESEARCHTHREE_DVTRAFFICTRANSITUNKNOWN";
  unk_2603290 = 8;
  qword_2603270 = (uint64_t)"BASEMAP_VENDORBASE_MAPBRANDCLIENTESCALATIONFLYOVERGENESYSIMAGERYJANALOC_SERVICESMANTRANO_ASSIGNEEOTHERPOIPOI_COLLECTIONPOI_OUTREACHROUTINGSATELLITESEARCHTHREE_DVTRAFFICTRANSITUNKNOWN";
  unk_2603278 = 14;
  dword_2603298 = 1;
  dword_2603280 = 21;
  dword_2602788 = 125;
  qword_2603168 = (uint64_t)"POI_IMAGE_COPYRIGHT_VIOLATIONPOI_IMAGE_CRIMEPOI_IMAGE_IRRELEVANTPOI_IMAGE_OFFENSIVEPOI_IMAGE_POOR_QUALITYREMOVE_ADDRESSREMOVE_OTHERREMOVE_POIREMOVE_TILEUNKNOWN";
  qword_2603258 = (uint64_t)"ALPHABASEMAP_VENDORBASE_MAPBRANDCLIENTESCALATIONFLYOVERGENESYSIMAGERYJANALOC_SERVICESMANTRANO"
                           "_ASSIGNEEOTHERPOIPOI_COLLECTIONPOI_OUTREACHROUTINGSATELLITESEARCHTHREE_DVTRAFFICTRANSITUNKNOWN";
  unk_2603260 = 5;
  dword_2603268 = 15;
  dword_2603238 = 303;
  qword_2603240 = (uint64_t)"UNKNOWN";
  qword_2603248 = 7;
  dword_2603250 = 0;
  qword_2603228 = (uint64_t)"REMOVE_TILEUNKNOWN";
  qword_2603218 = 10;
  dword_2603220 = 302;
  qword_2603230 = 11;
  dword_2603208 = 304;
  qword_2603210 = (uint64_t)"REMOVE_POIREMOVE_TILEUNKNOWN";
  qword_2603200 = 12;
  qword_26031E0 = (uint64_t)"REMOVE_ADDRESSREMOVE_OTHERREMOVE_POIREMOVE_TILEUNKNOWN";
  qword_26031F8 = (uint64_t)"REMOVE_OTHERREMOVE_POIREMOVE_TILEUNKNOWN";
  qword_26031E8 = 14;
  dword_26031F0 = 301;
  qword_26031C8 = (uint64_t)"POI_IMAGE_POOR_QUALITYREMOVE_ADDRESSREMOVE_OTHERREMOVE_POIREMOVE_TILEUNKNOWN";
  dword_26031D8 = 1303;
  qword_26031D0 = 22;
  dword_26031A8 = 1301;
  qword_26031B0 = (uint64_t)"POI_IMAGE_OFFENSIVEPOI_IMAGE_POOR_QUALITYREMOVE_ADDRESSREMOVE_OTHERREMOVE_POIREMOVE_TILEUNKNOWN";
  dword_26031C0 = 1302;
  qword_26031B8 = 19;
  dword_2603190 = 1304;
  qword_2603198 = (uint64_t)"POI_IMAGE_IRRELEVANTPOI_IMAGE_OFFENSIVEPOI_IMAGE_POOR_QUALITYREMOVE_ADDRESSREMOVE_OTHERREMOVE_POIREMOVE_TILEUNKNOWN";
  qword_2603188 = 15;
  qword_26031A0 = 20;
  dword_2603178 = 1305;
  qword_2603180 = (uint64_t)"POI_IMAGE_CRIMEPOI_IMAGE_IRRELEVANTPOI_IMAGE_OFFENSIVEPOI_IMAGE_POOR_QUALITYREMOVE_ADDRESSREMOVE_OTHERREMOVE_POIREMOVE_TILEUNKNOWN";
  qword_2603170 = 29;
  qword_2602820 = (uint64_t)"CARTOCLIENT_FEATURE_REQUESTCURATED_COLLECTIONS_CHANGE_DETAILSCURRENT_LOCATION_OTHERDATA_OTHERDIRECTIONSDIRECTIONS_OTHERDISPUTED_TERRITORIES_OTHERGROUND_VIEW_ADDRESS_CENSOR_REQUESTGROUND_VIEW_BASIC_CENSOR_REQUESTGROUND_VIEW_IMAGE_QUALITYGROUND_VIEW_OTHERGROUND_VIEW_UNVERIFIED_ADDRESS_CENSOR_REQUESTIMAGERYINSUFFICIENT_INFORMATIONMALFORMEDMANUALMAPS_APPMAPS_APP_OTHERMAPS_APP_SIRIMERCHANT_LOOKUP_NO_MATCHMERCHANT_LOOKUP_OTHERPEDESTRIANPOI_ADDPOI_ADD_DISPUTED_TERRITORYPOI_AUTOCOMPLETEPOI_CHANGE_DETAILSPOI_CHANGE_LABELPOI_CONTAINMENT_CHANGEPOI_CURATED_COLLECTIONSPOI_GROUND_VIEW_STOREFRONTPOI_MERCHANT_LOOKUPPOI_OTHERPOI_REMOVEPOI_SEARCHPOI_TEMPORARY_CLOSUREROAD_INTERSECTIONROAD_OTHERROAD_RESTRICTIONROAD_SPEED_LIMITSROUTINGROUTING_CORRECT_ETASATELLITE_OTHERSATELLITE_OUTDATEDSATELLITE_QUALITYSEARCH_OTHERSEARCH_RESULTS_OTHERSTREETTEMPORARY_PROBLEMTRAFFIC_OTHERTRANSIT_ADDTRANSIT_CHANGE_LABELTRANSIT_DIRECTIONSTRANSIT_DIRECTIONS_UNSUPPORTED_MARKETTRANSIT_LINE_CHANGETRANSIT_LINE_GEOMETRYTRANSIT_MARKET_REQUESTTRANSIT_OTHERTRANSIT_POI_CHANGETRANSIT_POI_CONTAINMENT_CHANGETRANSIT_SCHEDULE_CHANGETRANSIT_STATION_GEOMETRYUNKNOWNUNSPECIFIEDUSER_NAME_INAPPROPRIATEUSER_RESPONSE";
  qword_2603150 = (uint64_t)"NOT_LISTED_TRANSITPOI_IMAGE_COPYRIGHT_VIOLATIONPOI_IMAGE_CRIMEPOI_IMAGE_IRRELEVANTPOI_IMAGE_OFFENSIVEPOI_IMAGE_POOR_QUALITYREMOVE_ADDRESSREMOVE_OTHERREMOVE_POIREMOVE_TILEUNKNOWN";
  qword_2602930 = 17;
  qword_2603158 = 18;
  dword_2603160 = 205;
  dword_2602920 = 701;
  qword_2602928 = (uint64_t)"GROUND_VIEW_OTHERGROUND_VIEW_UNVERIFIED_ADDRESS_CENSOR_REQUESTIMAGERYINSUFFICIENT_INFORMATIONMALFORMEDMANUALMAPS_APPMAPS_APP_OTHERMAPS_APP_SIRIMERCHANT_LOOKUP_NO_MATCHMERCHANT_LOOKUP_OTHERPEDESTRIANPOI_ADDPOI_ADD_DISPUTED_TERRITORYPOI_AUTOCOMPLETEPOI_CHANGE_DETAILSPOI_CHANGE_LABELPOI_CONTAINMENT_CHANGEPOI_CURATED_COLLECTIONSPOI_GROUND_VIEW_STOREFRONTPOI_MERCHANT_LOOKUPPOI_OTHERPOI_REMOVEPOI_SEARCHPOI_TEMPORARY_CLOSUREROAD_INTERSECTIONROAD_OTHERROAD_RESTRICTIONROAD_SPEED_LIMITSROUTINGROUTING_CORRECT_ETASATELLITE_OTHERSATELLITE_OUTDATEDSATELLITE_QUALITYSEARCH_OTHERSEARCH_RESULTS_OTHERSTREETTEMPORARY_PROBLEMTRAFFIC_OTHERTRANSIT_ADDTRANSIT_CHANGE_LABELTRANSIT_DIRECTIONSTRANSIT_DIRECTIONS_UNSUPPORTED_MARKETTRANSIT_LINE_CHANGETRANSIT_LINE_GEOMETRYTRANSIT_MARKET_REQUESTTRANSIT_OTHERTRANSIT_POI_CHANGETRANSIT_POI_CONTAINMENT_CHANGETRANSIT_SCHEDULE_CHANGETRANSIT_STATION_GEOMETRYUNKNOWNUNSPECIFIEDUSER_NAME_INAPPROPRIATEUSER_RESPONSE";
  qword_2602918 = 25;
  qword_26028F8 = (uint64_t)"GROUND_VIEW_BASIC_CENSOR_REQUESTGROUND_VIEW_IMAGE_QUALITYGROUND_VIEW_OTHERGROUND_VIEW_UNVERIFIED_ADDRESS_CENSOR_REQUESTIMAGERYINSUFFICIENT_INFORMATIONMALFORMEDMANUALMAPS_APPMAPS_APP_OTHERMAPS_APP_SIRIMERCHANT_LOOKUP_NO_MATCHMERCHANT_LOOKUP_OTHERPEDESTRIANPOI_ADDPOI_ADD_DISPUTED_TERRITORYPOI_AUTOCOMPLETEPOI_CHANGE_DETAILSPOI_CHANGE_LABELPOI_CONTAINMENT_CHANGEPOI_CURATED_COLLECTIONSPOI_GROUND_VIEW_STOREFRONTPOI_MERCHANT_LOOKUPPOI_OTHERPOI_REMOVEPOI_SEARCHPOI_TEMPORARY_CLOSUREROAD_INTERSECTIONROAD_OTHERROAD_RESTRICTIONROAD_SPEED_LIMITSROUTINGROUTING_CORRECT_ETASATELLITE_OTHERSATELLITE_OUTDATEDSATELLITE_QUALITYSEARCH_OTHERSEARCH_RESULTS_OTHERSTREETTEMPORARY_PROBLEMTRAFFIC_OTHERTRANSIT_ADDTRANSIT_CHANGE_LABELTRANSIT_DIRECTIONSTRANSIT_DIRECTIONS_UNSUPPORTED_MARKETTRANSIT_LINE_CHANGETRANSIT_LINE_GEOMETRYTRANSIT_MARKET_REQUESTTRANSIT_OTHERTRANSIT_POI_CHANGETRANSIT_POI_CONTAINMENT_CHANGETRANSIT_SCHEDULE_CHANGETRANSIT_STATION_GEOMETRYUNKNOWNUNSPECIFIEDUSER_NAME_INAPPROPRIATEUSER_RESPONSE";
  dword_2602908 = 702;
  qword_2602910 = (uint64_t)"GROUND_VIEW_IMAGE_QUALITYGROUND_VIEW_OTHERGROUND_VIEW_UNVERIFIED_ADDRESS_CENSOR_REQUESTIMAGERYINSUFFICIENT_INFORMATIONMALFORMEDMANUALMAPS_APPMAPS_APP_OTHERMAPS_APP_SIRIMERCHANT_LOOKUP_NO_MATCHMERCHANT_LOOKUP_OTHERPEDESTRIANPOI_ADDPOI_ADD_DISPUTED_TERRITORYPOI_AUTOCOMPLETEPOI_CHANGE_DETAILSPOI_CHANGE_LABELPOI_CONTAINMENT_CHANGEPOI_CURATED_COLLECTIONSPOI_GROUND_VIEW_STOREFRONTPOI_MERCHANT_LOOKUPPOI_OTHERPOI_REMOVEPOI_SEARCHPOI_TEMPORARY_CLOSUREROAD_INTERSECTIONROAD_OTHERROAD_RESTRICTIONROAD_SPEED_LIMITSROUTINGROUTING_CORRECT_ETASATELLITE_OTHERSATELLITE_OUTDATEDSATELLITE_QUALITYSEARCH_OTHERSEARCH_RESULTS_OTHERSTREETTEMPORARY_PROBLEMTRAFFIC_OTHERTRANSIT_ADDTRANSIT_CHANGE_LABELTRANSIT_DIRECTIONSTRANSIT_DIRECTIONS_UNSUPPORTED_MARKETTRANSIT_LINE_CHANGETRANSIT_LINE_GEOMETRYTRANSIT_MARKET_REQUESTTRANSIT_OTHERTRANSIT_POI_CHANGETRANSIT_POI_CONTAINMENT_CHANGETRANSIT_SCHEDULE_CHANGETRANSIT_STATION_GEOMETRYUNKNOWNUNSPECIFIEDUSER_NAME_INAPPROPRIATEUSER_RESPONSE";
  qword_2602900 = 32;
  qword_26028E0 = (uint64_t)"GROUND_VIEW_ADDRESS_CENSOR_REQUESTGROUND_VIEW_BASIC_CENSOR_REQUESTGROUND_VIEW_IMAGE_QUALITYGROUND_VIEW_OTHERGROUND_VIEW_UNVERIFIED_ADDRESS_CENSOR_REQUESTIMAGERYINSUFFICIENT_INFORMATIONMALFORMEDMANUALMAPS_APPMAPS_APP_OTHERMAPS_APP_SIRIMERCHANT_LOOKUP_NO_MATCHMERCHANT_LOOKUP_OTHERPEDESTRIANPOI_ADDPOI_ADD_DISPUTED_TERRITORYPOI_AUTOCOMPLETEPOI_CHANGE_DETAILSPOI_CHANGE_LABELPOI_CONTAINMENT_CHANGEPOI_CURATED_COLLECTIONSPOI_GROUND_VIEW_STOREFRONTPOI_MERCHANT_LOOKUPPOI_OTHERPOI_REMOVEPOI_SEARCHPOI_TEMPORARY_CLOSUREROAD_INTERSECTIONROAD_OTHERROAD_RESTRICTIONROAD_SPEED_LIMITSROUTINGROUTING_CORRECT_ETASATELLITE_OTHERSATELLITE_OUTDATEDSATELLITE_QUALITYSEARCH_OTHERSEARCH_RESULTS_OTHERSTREETTEMPORARY_PROBLEMTRAFFIC_OTHERTRANSIT_ADDTRANSIT_CHANGE_LABELTRANSIT_DIRECTIONSTRANSIT_DIRECTIONS_UNSUPPORTED_MARKETTRANSIT_LINE_CHANGETRANSIT_LINE_GEOMETRYTRANSIT_MARKET_REQUESTTRANSIT_OTHERTRANSIT_POI_CHANGETRANSIT_POI_CONTAINMENT_CHANGETRANSIT_SCHEDULE_CHANGETRANSIT_STATION_GEOMETRYUNKNOWNUNSPECIFIEDUSER_NAME_INAPPROPRIATEUSER_RESPONSE";
  dword_26028F0 = 703;
  qword_26028E8 = 34;
  dword_26028C0 = 115;
  qword_26028C8 = (uint64_t)"DISPUTED_TERRITORIES_OTHERGROUND_VIEW_ADDRESS_CENSOR_REQUESTGROUND_VIEW_BASIC_CENSOR_REQUESTGROUND_VIEW_IMAGE_QUALITYGROUND_VIEW_OTHERGROUND_VIEW_UNVERIFIED_ADDRESS_CENSOR_REQUESTIMAGERYINSUFFICIENT_INFORMATIONMALFORMEDMANUALMAPS_APPMAPS_APP_OTHERMAPS_APP_SIRIMERCHANT_LOOKUP_NO_MATCHMERCHANT_LOOKUP_OTHERPEDESTRIANPOI_ADDPOI_ADD_DISPUTED_TERRITORYPOI_AUTOCOMPLETEPOI_CHANGE_DETAILSPOI_CHANGE_LABELPOI_CONTAINMENT_CHANGEPOI_CURATED_COLLECTIONSPOI_GROUND_VIEW_STOREFRONTPOI_MERCHANT_LOOKUPPOI_OTHERPOI_REMOVEPOI_SEARCHPOI_TEMPORARY_CLOSUREROAD_INTERSECTIONROAD_OTHERROAD_RESTRICTIONROAD_SPEED_LIMITSROUTINGROUTING_CORRECT_ETASATELLITE_OTHERSATELLITE_OUTDATEDSATELLITE_QUALITYSEARCH_OTHERSEARCH_RESULTS_OTHERSTREETTEMPORARY_PROBLEMTRAFFIC_OTHERTRANSIT_ADDTRANSIT_CHANGE_LABELTRANSIT_DIRECTIONSTRANSIT_DIRECTIONS_UNSUPPORTED_MARKETTRANSIT_LINE_CHANGETRANSIT_LINE_GEOMETRYTRANSIT_MARKET_REQUESTTRANSIT_OTHERTRANSIT_POI_CHANGETRANSIT_POI_CONTAINMENT_CHANGETRANSIT_SCHEDULE_CHANGETRANSIT_STATION_GEOMETRYUNKNOWNUNSPECIFIEDUSER_NAME_INAPPROPRIATEUSER_RESPONSE";
  dword_26028D8 = 116;
  qword_26028D0 = 26;
  dword_26028A8 = 601;
  qword_26028B0 = (uint64_t)"DIRECTIONS_OTHERDISPUTED_TERRITORIES_OTHERGROUND_VIEW_ADDRESS_CENSOR_REQUESTGROUND_VIEW_BASIC_CENSOR_REQUESTGROUND_VIEW_IMAGE_QUALITYGROUND_VIEW_OTHERGROUND_VIEW_UNVERIFIED_ADDRESS_CENSOR_REQUESTIMAGERYINSUFFICIENT_INFORMATIONMALFORMEDMANUALMAPS_APPMAPS_APP_OTHERMAPS_APP_SIRIMERCHANT_LOOKUP_NO_MATCHMERCHANT_LOOKUP_OTHERPEDESTRIANPOI_ADDPOI_ADD_DISPUTED_TERRITORYPOI_AUTOCOMPLETEPOI_CHANGE_DETAILSPOI_CHANGE_LABELPOI_CONTAINMENT_CHANGEPOI_CURATED_COLLECTIONSPOI_GROUND_VIEW_STOREFRONTPOI_MERCHANT_LOOKUPPOI_OTHERPOI_REMOVEPOI_SEARCHPOI_TEMPORARY_CLOSUREROAD_INTERSECTIONROAD_OTHERROAD_RESTRICTIONROAD_SPEED_LIMITSROUTINGROUTING_CORRECT_ETASATELLITE_OTHERSATELLITE_OUTDATEDSATELLITE_QUALITYSEARCH_OTHERSEARCH_RESULTS_OTHERSTREETTEMPORARY_PROBLEMTRAFFIC_OTHERTRANSIT_ADDTRANSIT_CHANGE_LABELTRANSIT_DIRECTIONSTRANSIT_DIRECTIONS_UNSUPPORTED_MARKETTRANSIT_LINE_CHANGETRANSIT_LINE_GEOMETRYTRANSIT_MARKET_REQUESTTRANSIT_OTHERTRANSIT_POI_CHANGETRANSIT_POI_CONTAINMENT_CHANGETRANSIT_SCHEDULE_CHANGETRANSIT_STATION_GEOMETRYUNKNOWNUNSPECIFIEDUSER_NAME_INAPPROPRIATEUSER_RESPONSE";
  qword_26028A0 = 10;
  qword_26028B8 = 16;
  dword_2602890 = 114;
  qword_2602898 = (uint64_t)"DIRECTIONSDIRECTIONS_OTHERDISPUTED_TERRITORIES_OTHERGROUND_VIEW_ADDRESS_CENSOR_REQUESTGROUND_VIEW_BASIC_CENSOR_REQUESTGROUND_VIEW_IMAGE_QUALITYGROUND_VIEW_OTHERGROUND_VIEW_UNVERIFIED_ADDRESS_CENSOR_REQUESTIMAGERYINSUFFICIENT_INFORMATIONMALFORMEDMANUALMAPS_APPMAPS_APP_OTHERMAPS_APP_SIRIMERCHANT_LOOKUP_NO_MATCHMERCHANT_LOOKUP_OTHERPEDESTRIANPOI_ADDPOI_ADD_DISPUTED_TERRITORYPOI_AUTOCOMPLETEPOI_CHANGE_DETAILSPOI_CHANGE_LABELPOI_CONTAINMENT_CHANGEPOI_CURATED_COLLECTIONSPOI_GROUND_VIEW_STOREFRONTPOI_MERCHANT_LOOKUPPOI_OTHERPOI_REMOVEPOI_SEARCHPOI_TEMPORARY_CLOSUREROAD_INTERSECTIONROAD_OTHERROAD_RESTRICTIONROAD_SPEED_LIMITSROUTINGROUTING_CORRECT_ETASATELLITE_OTHERSATELLITE_OUTDATEDSATELLITE_QUALITYSEARCH_OTHERSEARCH_RESULTS_OTHERSTREETTEMPORARY_PROBLEMTRAFFIC_OTHERTRANSIT_ADDTRANSIT_CHANGE_LABELTRANSIT_DIRECTIONSTRANSIT_DIRECTIONS_UNSUPPORTED_MARKETTRANSIT_LINE_CHANGETRANSIT_LINE_GEOMETRYTRANSIT_MARKET_REQUESTTRANSIT_OTHERTRANSIT_POI_CHANGETRANSIT_POI_CONTAINMENT_CHANGETRANSIT_SCHEDULE_CHANGETRANSIT_STATION_GEOMETRYUNKNOWNUNSPECIFIEDUSER_NAME_INAPPROPRIATEUSER_RESPONSE";
  qword_2602888 = 10;
  qword_2602868 = (uint64_t)"CURRENT_LOCATION_OTHERDATA_OTHERDIRECTIONSDIRECTIONS_OTHERDISPUTED_TERRITORIES_OTHERGROUND_VIEW_ADDRESS_CENSOR_REQUESTGROUND_VIEW_BASIC_CENSOR_REQUESTGROUND_VIEW_IMAGE_QUALITYGROUND_VIEW_OTHERGROUND_VIEW_UNVERIFIED_ADDRESS_CENSOR_REQUESTIMAGERYINSUFFICIENT_INFORMATIONMALFORMEDMANUALMAPS_APPMAPS_APP_OTHERMAPS_APP_SIRIMERCHANT_LOOKUP_NO_MATCHMERCHANT_LOOKUP_OTHERPEDESTRIANPOI_ADDPOI_ADD_DISPUTED_TERRITORYPOI_AUTOCOMPLETEPOI_CHANGE_DETAILSPOI_CHANGE_LABELPOI_CONTAINMENT_CHANGEPOI_CURATED_COLLECTIONSPOI_GROUND_VIEW_STOREFRONTPOI_MERCHANT_LOOKUPPOI_OTHERPOI_REMOVEPOI_SEARCHPOI_TEMPORARY_CLOSUREROAD_INTERSECTIONROAD_OTHERROAD_RESTRICTIONROAD_SPEED_LIMITSROUTINGROUTING_CORRECT_ETASATELLITE_OTHERSATELLITE_OUTDATEDSATELLITE_QUALITYSEARCH_OTHERSEARCH_RESULTS_OTHERSTREETTEMPORARY_PROBLEMTRAFFIC_OTHERTRANSIT_ADDTRANSIT_CHANGE_LABELTRANSIT_DIRECTIONSTRANSIT_DIRECTIONS_UNSUPPORTED_MARKETTRANSIT_LINE_CHANGETRANSIT_LINE_GEOMETRYTRANSIT_MARKET_REQUESTTRANSIT_OTHERTRANSIT_POI_CHANGETRANSIT_POI_CONTAINMENT_CHANGETRANSIT_SCHEDULE_CHANGETRANSIT_STATION_GEOMETRYUNKNOWNUNSPECIFIEDUSER_NAME_INAPPROPRIATEUSER_RESPONSE";
  dword_2602878 = 502;
  qword_2602880 = (uint64_t)"DATA_OTHERDIRECTIONSDIRECTIONS_OTHERDISPUTED_TERRITORIES_OTHERGROUND_VIEW_ADDRESS_CENSOR_REQUESTGROUND_VIEW_BASIC_CENSOR_REQUESTGROUND_VIEW_IMAGE_QUALITYGROUND_VIEW_OTHERGROUND_VIEW_UNVERIFIED_ADDRESS_CENSOR_REQUESTIMAGERYINSUFFICIENT_INFORMATIONMALFORMEDMANUALMAPS_APPMAPS_APP_OTHERMAPS_APP_SIRIMERCHANT_LOOKUP_NO_MATCHMERCHANT_LOOKUP_OTHERPEDESTRIANPOI_ADDPOI_ADD_DISPUTED_TERRITORYPOI_AUTOCOMPLETEPOI_CHANGE_DETAILSPOI_CHANGE_LABELPOI_CONTAINMENT_CHANGEPOI_CURATED_COLLECTIONSPOI_GROUND_VIEW_STOREFRONTPOI_MERCHANT_LOOKUPPOI_OTHERPOI_REMOVEPOI_SEARCHPOI_TEMPORARY_CLOSUREROAD_INTERSECTIONROAD_OTHERROAD_RESTRICTIONROAD_SPEED_LIMITSROUTINGROUTING_CORRECT_ETASATELLITE_OTHERSATELLITE_OUTDATEDSATELLITE_QUALITYSEARCH_OTHERSEARCH_RESULTS_OTHERSTREETTEMPORARY_PROBLEMTRAFFIC_OTHERTRANSIT_ADDTRANSIT_CHANGE_LABELTRANSIT_DIRECTIONSTRANSIT_DIRECTIONS_UNSUPPORTED_MARKETTRANSIT_LINE_CHANGETRANSIT_LINE_GEOMETRYTRANSIT_MARKET_REQUESTTRANSIT_OTHERTRANSIT_POI_CHANGETRANSIT_POI_CONTAINMENT_CHANGETRANSIT_SCHEDULE_CHANGETRANSIT_STATION_GEOMETRYUNKNOWNUNSPECIFIEDUSER_NAME_INAPPROPRIATEUSER_RESPONSE";
  qword_2602870 = 22;
  dword_2602848 = 608;
  qword_2602850 = (uint64_t)"CURATED_COLLECTIONS_CHANGE_DETAILSCURRENT_LOCATION_OTHERDATA_OTHERDIRECTIONSDIRECTIONS_OTHERDISPUTED_TERRITORIES_OTHERGROUND_VIEW_ADDRESS_CENSOR_REQUESTGROUND_VIEW_BASIC_CENSOR_REQUESTGROUND_VIEW_IMAGE_QUALITYGROUND_VIEW_OTHERGROUND_VIEW_UNVERIFIED_ADDRESS_CENSOR_REQUESTIMAGERYINSUFFICIENT_INFORMATIONMALFORMEDMANUALMAPS_APPMAPS_APP_OTHERMAPS_APP_SIRIMERCHANT_LOOKUP_NO_MATCHMERCHANT_LOOKUP_OTHERPEDESTRIANPOI_ADDPOI_ADD_DISPUTED_TERRITORYPOI_AUTOCOMPLETEPOI_CHANGE_DETAILSPOI_CHANGE_LABELPOI_CONTAINMENT_CHANGEPOI_CURATED_COLLECTIONSPOI_GROUND_VIEW_STOREFRONTPOI_MERCHANT_LOOKUPPOI_OTHERPOI_REMOVEPOI_SEARCHPOI_TEMPORARY_CLOSUREROAD_INTERSECTIONROAD_OTHERROAD_RESTRICTIONROAD_SPEED_LIMITSROUTINGROUTING_CORRECT_ETASATELLITE_OTHERSATELLITE_OUTDATEDSATELLITE_QUALITYSEARCH_OTHERSEARCH_RESULTS_OTHERSTREETTEMPORARY_PROBLEMTRAFFIC_OTHERTRANSIT_ADDTRANSIT_CHANGE_LABELTRANSIT_DIRECTIONSTRANSIT_DIRECTIONS_UNSUPPORTED_MARKETTRANSIT_LINE_CHANGETRANSIT_LINE_GEOMETRYTRANSIT_MARKET_REQUESTTRANSIT_OTHERTRANSIT_POI_CHANGETRANSIT_POI_CONTAINMENT_CHANGETRANSIT_SCHEDULE_CHANGETRANSIT_STATION_GEOMETRYUNKNOWNUNSPECIFIEDUSER_NAME_INAPPROPRIATEUSER_RESPONSE";
  qword_2602858 = 34;
  dword_2602860 = 6;
  dword_2602830 = 607;
  qword_2602838 = (uint64_t)"CLIENT_FEATURE_REQUESTCURATED_COLLECTIONS_CHANGE_DETAILSCURRENT_LOCATION_OTHERDATA_OTHERDIRECTIONSDIRECTIONS_OTHERDISPUTED_TERRITORIES_OTHERGROUND_VIEW_ADDRESS_CENSOR_REQUESTGROUND_VIEW_BASIC_CENSOR_REQUESTGROUND_VIEW_IMAGE_QUALITYGROUND_VIEW_OTHERGROUND_VIEW_UNVERIFIED_ADDRESS_CENSOR_REQUESTIMAGERYINSUFFICIENT_INFORMATIONMALFORMEDMANUALMAPS_APPMAPS_APP_OTHERMAPS_APP_SIRIMERCHANT_LOOKUP_NO_MATCHMERCHANT_LOOKUP_OTHERPEDESTRIANPOI_ADDPOI_ADD_DISPUTED_TERRITORYPOI_AUTOCOMPLETEPOI_CHANGE_DETAILSPOI_CHANGE_LABELPOI_CONTAINMENT_CHANGEPOI_CURATED_COLLECTIONSPOI_GROUND_VIEW_STOREFRONTPOI_MERCHANT_LOOKUPPOI_OTHERPOI_REMOVEPOI_SEARCHPOI_TEMPORARY_CLOSUREROAD_INTERSECTIONROAD_OTHERROAD_RESTRICTIONROAD_SPEED_LIMITSROUTINGROUTING_CORRECT_ETASATELLITE_OTHERSATELLITE_OUTDATEDSATELLITE_QUALITYSEARCH_OTHERSEARCH_RESULTS_OTHERSTREETTEMPORARY_PROBLEMTRAFFIC_OTHERTRANSIT_ADDTRANSIT_CHANGE_LABELTRANSIT_DIRECTIONSTRANSIT_DIRECTIONS_UNSUPPORTED_MARKETTRANSIT_LINE_CHANGETRANSIT_LINE_GEOMETRYTRANSIT_MARKET_REQUESTTRANSIT_OTHERTRANSIT_POI_CHANGETRANSIT_POI_CONTAINMENT_CHANGETRANSIT_SCHEDULE_CHANGETRANSIT_STATION_GEOMETRYUNKNOWNUNSPECIFIEDUSER_NAME_INAPPROPRIATEUSER_RESPONSE";
  qword_2602828 = 5;
  qword_2602840 = 22;
  qword_2602808 = (uint64_t)"BRAND_OTHERCARTOCLIENT_FEATURE_REQUESTCURATED_COLLECTIONS_CHANGE_DETAILSCURRENT_LOCATION_OTHERDATA_OTHERDIRECTIONSDIRECTIONS_OTHERDISPUTED_TERRITORIES_OTHERGROUND_VIEW_ADDRESS_CENSOR_REQUESTGROUND_VIEW_BASIC_CENSOR_REQUESTGROUND_VIEW_IMAGE_QUALITYGROUND_VIEW_OTHERGROUND_VIEW_UNVERIFIED_ADDRESS_CENSOR_REQUESTIMAGERYINSUFFICIENT_INFORMATIONMALFORMEDMANUALMAPS_APPMAPS_APP_OTHERMAPS_APP_SIRIMERCHANT_LOOKUP_NO_MATCHMERCHANT_LOOKUP_OTHERPEDESTRIANPOI_ADDPOI_ADD_DISPUTED_TERRITORYPOI_AUTOCOMPLETEPOI_CHANGE_DETAILSPOI_CHANGE_LABELPOI_CONTAINMENT_CHANGEPOI_CURATED_COLLECTIONSPOI_GROUND_VIEW_STOREFRONTPOI_MERCHANT_LOOKUPPOI_OTHERPOI_REMOVEPOI_SEARCHPOI_TEMPORARY_CLOSUREROAD_INTERSECTIONROAD_OTHERROAD_RESTRICTIONROAD_SPEED_LIMITSROUTINGROUTING_CORRECT_ETASATELLITE_OTHERSATELLITE_OUTDATEDSATELLITE_QUALITYSEARCH_OTHERSEARCH_RESULTS_OTHERSTREETTEMPORARY_PROBLEMTRAFFIC_OTHERTRANSIT_ADDTRANSIT_CHANGE_LABELTRANSIT_DIRECTIONSTRANSIT_DIRECTIONS_UNSUPPORTED_MARKETTRANSIT_LINE_CHANGETRANSIT_LINE_GEOMETRYTRANSIT_MARKET_REQUESTTRANSIT_OTHERTRANSIT_POI_CHANGETRANSIT_POI_CONTAINMENT_CHANGETRANSIT_SCHEDULE_CHANGETRANSIT_STATION_GEOMETRYUNKNOWNUNSPECIFIEDUSER_NAME_INAPPROPRIATEUSER_RESPONSE";
  dword_2602800 = 5;
  qword_2602810 = 11;
  dword_2602818 = 4;
  dword_26027A0 = 121;
  qword_26027F0 = (uint64_t)"BRAND_MERCHANT_LOOKUPBRAND_OTHERCARTOCLIENT_FEATURE_REQUESTCURATED_COLLECTIONS_CHANGE_DETAILSCURRENT_LOCATION_OTHERDATA_OTHERDIRECTIONSDIRECTIONS_OTHERDISPUTED_TERRITORIES_OTHERGROUND_VIEW_ADDRESS_CENSOR_REQUESTGROUND_VIEW_BASIC_CENSOR_REQUESTGROUND_VIEW_IMAGE_QUALITYGROUND_VIEW_OTHERGROUND_VIEW_UNVERIFIED_ADDRESS_CENSOR_REQUESTIMAGERYINSUFFICIENT_INFORMATIONMALFORMEDMANUALMAPS_APPMAPS_APP_OTHERMAPS_APP_SIRIMERCHANT_LOOKUP_NO_MATCHMERCHANT_LOOKUP_OTHERPEDESTRIANPOI_ADDPOI_ADD_DISPUTED_TERRITORYPOI_AUTOCOMPLETEPOI_CHANGE_DETAILSPOI_CHANGE_LABELPOI_CONTAINMENT_CHANGEPOI_CURATED_COLLECTIONSPOI_GROUND_VIEW_STOREFRONTPOI_MERCHANT_LOOKUPPOI_OTHERPOI_REMOVEPOI_SEARCHPOI_TEMPORARY_CLOSUREROAD_INTERSECTIONROAD_OTHERROAD_RESTRICTIONROAD_SPEED_LIMITSROUTINGROUTING_CORRECT_ETASATELLITE_OTHERSATELLITE_OUTDATEDSATELLITE_QUALITYSEARCH_OTHERSEARCH_RESULTS_OTHERSTREETTEMPORARY_PROBLEMTRAFFIC_OTHERTRANSIT_ADDTRANSIT_CHANGE_LABELTRANSIT_DIRECTIONSTRANSIT_DIRECTIONS_UNSUPPORTED_MARKETTRANSIT_LINE_CHANGETRANSIT_LINE_GEOMETRYTRANSIT_MARKET_REQUESTTRANSIT_OTHERTRANSIT_POI_CHANGETRANSIT_POI_CONTAINMENT_CHANGETRANSIT_SCHEDULE_CHANGETRANSIT_STATION_GEOMETRYUNKNOWNUNSPECIFIEDUSER_NAME_INAPPROPRIATEUSER_RESPONSE";
  qword_26027E0 = 20;
  dword_26027E8 = 3;
  qword_26027F8 = 21;
  qword_26027C0 = (uint64_t)"BASE_MAP_TRANSIT_DIRECTIONSBRAND_CHANGE_DETAILSBRAND_MERCHANT_LOOKUPBRAND_OTHERCARTOCLIENT_FEATURE_REQUESTCURATED_COLLECTIONS_CHANGE_DETAILSCURRENT_LOCATION_OTHERDATA_OTHERDIRECTIONSDIRECTIONS_OTHERDISPUTED_TERRITORIES_OTHERGROUND_VIEW_ADDRESS_CENSOR_REQUESTGROUND_VIEW_BASIC_CENSOR_REQUESTGROUND_VIEW_IMAGE_QUALITYGROUND_VIEW_OTHERGROUND_VIEW_UNVERIFIED_ADDRESS_CENSOR_REQUESTIMAGERYINSUFFICIENT_INFORMATIONMALFORMEDMANUALMAPS_APPMAPS_APP_OTHERMAPS_APP_SIRIMERCHANT_LOOKUP_NO_MATCHMERCHANT_LOOKUP_OTHERPEDESTRIANPOI_ADDPOI_ADD_DISPUTED_TERRITORYPOI_AUTOCOMPLETEPOI_CHANGE_DETAILSPOI_CHANGE_LABELPOI_CONTAINMENT_CHANGEPOI_CURATED_COLLECTIONSPOI_GROUND_VIEW_STOREFRONTPOI_MERCHANT_LOOKUPPOI_OTHERPOI_REMOVEPOI_SEARCHPOI_TEMPORARY_CLOSUREROAD_INTERSECTIONROAD_OTHERROAD_RESTRICTIONROAD_SPEED_LIMITSROUTINGROUTING_CORRECT_ETASATELLITE_OTHERSATELLITE_OUTDATEDSATELLITE_QUALITYSEARCH_OTHERSEARCH_RESULTS_OTHERSTREETTEMPORARY_PROBLEMTRAFFIC_OTHERTRANSIT_ADDTRANSIT_CHANGE_LABELTRANSIT_DIRECTIONSTRANSIT_DIRECTIONS_UNSUPPORTED_MARKETTRANSIT_LINE_CHANGETRANSIT_LINE_GEOMETRYTRANSIT_MARKET_REQUESTTRANSIT_OTHERTRANSIT_POI_CHANGETRANSIT_POI_CONTAINMENT_CHANGETRANSIT_SCHEDULE_CHANGETRANSIT_STATION_GEOMETRYUNKNOWNUNSPECIFIEDUSER_NAME_INAPPROPRIATEUSER_RESPONSE";
  dword_26027D0 = 104;
  qword_26027D8 = (uint64_t)"BRAND_CHANGE_DETAILSBRAND_MERCHANT_LOOKUPBRAND_OTHERCARTOCLIENT_FEATURE_REQUESTCURATED_COLLECTIONS_CHANGE_DETAILSCURRENT_LOCATION_OTHERDATA_OTHERDIRECTIONSDIRECTIONS_OTHERDISPUTED_TERRITORIES_OTHERGROUND_VIEW_ADDRESS_CENSOR_REQUESTGROUND_VIEW_BASIC_CENSOR_REQUESTGROUND_VIEW_IMAGE_QUALITYGROUND_VIEW_OTHERGROUND_VIEW_UNVERIFIED_ADDRESS_CENSOR_REQUESTIMAGERYINSUFFICIENT_INFORMATIONMALFORMEDMANUALMAPS_APPMAPS_APP_OTHERMAPS_APP_SIRIMERCHANT_LOOKUP_NO_MATCHMERCHANT_LOOKUP_OTHERPEDESTRIANPOI_ADDPOI_ADD_DISPUTED_TERRITORYPOI_AUTOCOMPLETEPOI_CHANGE_DETAILSPOI_CHANGE_LABELPOI_CONTAINMENT_CHANGEPOI_CURATED_COLLECTIONSPOI_GROUND_VIEW_STOREFRONTPOI_MERCHANT_LOOKUPPOI_OTHERPOI_REMOVEPOI_SEARCHPOI_TEMPORARY_CLOSUREROAD_INTERSECTIONROAD_OTHERROAD_RESTRICTIONROAD_SPEED_LIMITSROUTINGROUTING_CORRECT_ETASATELLITE_OTHERSATELLITE_OUTDATEDSATELLITE_QUALITYSEARCH_OTHERSEARCH_RESULTS_OTHERSTREETTEMPORARY_PROBLEMTRAFFIC_OTHERTRANSIT_ADDTRANSIT_CHANGE_LABELTRANSIT_DIRECTIONSTRANSIT_DIRECTIONS_UNSUPPORTED_MARKETTRANSIT_LINE_CHANGETRANSIT_LINE_GEOMETRYTRANSIT_MARKET_REQUESTTRANSIT_OTHERTRANSIT_POI_CHANGETRANSIT_POI_CONTAINMENT_CHANGETRANSIT_SCHEDULE_CHANGETRANSIT_STATION_GEOMETRYUNKNOWNUNSPECIFIEDUSER_NAME_INAPPROPRIATEUSER_RESPONSE";
  qword_26027C8 = 27;
  qword_26027A8 = (uint64_t)"BASE_MAP_TRAILBASE_MAP_TRANSIT_DIRECTIONSBRAND_CHANGE_DETAILSBRAND_MERCHANT_LOOKUPBRAND_OTHERCARTOCLIENT_FEATURE_REQUESTCURATED_COLLECTIONS_CHANGE_DETAILSCURRENT_LOCATION_OTHERDATA_OTHERDIRECTIONSDIRECTIONS_OTHERDISPUTED_TERRITORIES_OTHERGROUND_VIEW_ADDRESS_CENSOR_REQUESTGROUND_VIEW_BASIC_CENSOR_REQUESTGROUND_VIEW_IMAGE_QUALITYGROUND_VIEW_OTHERGROUND_VIEW_UNVERIFIED_ADDRESS_CENSOR_REQUESTIMAGERYINSUFFICIENT_INFORMATIONMALFORMEDMANUALMAPS_APPMAPS_APP_OTHERMAPS_APP_SIRIMERCHANT_LOOKUP_NO_MATCHMERCHANT_LOOKUP_OTHERPEDESTRIANPOI_ADDPOI_ADD_DISPUTED_TERRITORYPOI_AUTOCOMPLETEPOI_CHANGE_DETAILSPOI_CHANGE_LABELPOI_CONTAINMENT_CHANGEPOI_CURATED_COLLECTIONSPOI_GROUND_VIEW_STOREFRONTPOI_MERCHANT_LOOKUPPOI_OTHERPOI_REMOVEPOI_SEARCHPOI_TEMPORARY_CLOSUREROAD_INTERSECTIONROAD_OTHERROAD_RESTRICTIONROAD_SPEED_LIMITSROUTINGROUTING_CORRECT_ETASATELLITE_OTHERSATELLITE_OUTDATEDSATELLITE_QUALITYSEARCH_OTHERSEARCH_RESULTS_OTHERSTREETTEMPORARY_PROBLEMTRAFFIC_OTHERTRANSIT_ADDTRANSIT_CHANGE_LABELTRANSIT_DIRECTIONSTRANSIT_DIRECTIONS_UNSUPPORTED_MARKETTRANSIT_LINE_CHANGETRANSIT_LINE_GEOMETRYTRANSIT_MARKET_REQUESTTRANSIT_OTHERTRANSIT_POI_CHANGETRANSIT_POI_CONTAINMENT_CHANGETRANSIT_SCHEDULE_CHANGETRANSIT_STATION_GEOMETRYUNKNOWNUNSPECIFIEDUSER_NAME_INAPPROPRIATEUSER_RESPONSE";
  dword_26027B8 = 127;
  qword_26027B0 = 14;
  qword_2602778 = (uint64_t)"BASE_MAP_STOREFRONTBASE_MAP_STREETBASE_MAP_TRAILBASE_MAP_TRANSIT_DIRECTIONSBRAND_CHANGE_DETAILSBRAND_MERCHANT_LOOKUPBRAND_OTHERCARTOCLIENT_FEATURE_REQUESTCURATED_COLLECTIONS_CHANGE_DETAILSCURRENT_LOCATION_OTHERDATA_OTHERDIRECTIONSDIRECTIONS_OTHERDISPUTED_TERRITORIES_OTHERGROUND_VIEW_ADDRESS_CENSOR_REQUESTGROUND_VIEW_BASIC_CENSOR_REQUESTGROUND_VIEW_IMAGE_QUALITYGROUND_VIEW_OTHERGROUND_VIEW_UNVERIFIED_ADDRESS_CENSOR_REQUESTIMAGERYINSUFFICIENT_INFORMATIONMALFORMEDMANUALMAPS_APPMAPS_APP_OTHERMAPS_APP_SIRIMERCHANT_LOOKUP_NO_MATCHMERCHANT_LOOKUP_OTHERPEDESTRIANPOI_ADDPOI_ADD_DISPUTED_TERRITORYPOI_AUTOCOMPLETEPOI_CHANGE_DETAILSPOI_CHANGE_LABELPOI_CONTAINMENT_CHANGEPOI_CURATED_COLLECTIONSPOI_GROUND_VIEW_STOREFRONTPOI_MERCHANT_LOOKUPPOI_OTHERPOI_REMOVEPOI_SEARCHPOI_TEMPORARY_CLOSUREROAD_INTERSECTIONROAD_OTHERROAD_RESTRICTIONROAD_SPEED_LIMITSROUTINGROUTING_CORRECT_ETASATELLITE_OTHERSATELLITE_OUTDATEDSATELLITE_QUALITYSEARCH_OTHERSEARCH_RESULTS_OTHERSTREETTEMPORARY_PROBLEMTRAFFIC_OTHERTRANSIT_ADDTRANSIT_CHANGE_LABELTRANSIT_DIRECTIONSTRANSIT_DIRECTIONS_UNSUPPORTED_MARKETTRANSIT_LINE_CHANGETRANSIT_LINE_GEOMETRYTRANSIT_MARKET_REQUESTTRANSIT_OTHERTRANSIT_POI_CHANGETRANSIT_POI_CONTAINMENT_CHANGETRANSIT_SCHEDULE_CHANGETRANSIT_STATION_GEOMETRYUNKNOWNUNSPECIFIEDUSER_NAME_INAPPROPRIATEUSER_RESPONSE";
  unk_2602780 = 19;
  qword_2602790 = (uint64_t)"BASE_MAP_STREETBASE_MAP_TRAILBASE_MAP_TRANSIT_DIRECTIONSBRAND_CHANGE_DETAILSBRAND_MERCHANT_LOOKUPBRAND_OTHERCARTOCLIENT_FEATURE_REQUESTCURATED_COLLECTIONS_CHANGE_DETAILSCURRENT_LOCATION_OTHERDATA_OTHERDIRECTIONSDIRECTIONS_OTHERDISPUTED_TERRITORIES_OTHERGROUND_VIEW_ADDRESS_CENSOR_REQUESTGROUND_VIEW_BASIC_CENSOR_REQUESTGROUND_VIEW_IMAGE_QUALITYGROUND_VIEW_OTHERGROUND_VIEW_UNVERIFIED_ADDRESS_CENSOR_REQUESTIMAGERYINSUFFICIENT_INFORMATIONMALFORMEDMANUALMAPS_APPMAPS_APP_OTHERMAPS_APP_SIRIMERCHANT_LOOKUP_NO_MATCHMERCHANT_LOOKUP_OTHERPEDESTRIANPOI_ADDPOI_ADD_DISPUTED_TERRITORYPOI_AUTOCOMPLETEPOI_CHANGE_DETAILSPOI_CHANGE_LABELPOI_CONTAINMENT_CHANGEPOI_CURATED_COLLECTIONSPOI_GROUND_VIEW_STOREFRONTPOI_MERCHANT_LOOKUPPOI_OTHERPOI_REMOVEPOI_SEARCHPOI_TEMPORARY_CLOSUREROAD_INTERSECTIONROAD_OTHERROAD_RESTRICTIONROAD_SPEED_LIMITSROUTINGROUTING_CORRECT_ETASATELLITE_OTHERSATELLITE_OUTDATEDSATELLITE_QUALITYSEARCH_OTHERSEARCH_RESULTS_OTHERSTREETTEMPORARY_PROBLEMTRAFFIC_OTHERTRANSIT_ADDTRANSIT_CHANGE_LABELTRANSIT_DIRECTIONSTRANSIT_DIRECTIONS_UNSUPPORTED_MARKETTRANSIT_LINE_CHANGETRANSIT_LINE_GEOMETRYTRANSIT_MARKET_REQUESTTRANSIT_OTHERTRANSIT_POI_CHANGETRANSIT_POI_CONTAINMENT_CHANGETRANSIT_SCHEDULE_CHANGETRANSIT_STATION_GEOMETRYUNKNOWNUNSPECIFIEDUSER_NAME_INAPPROPRIATEUSER_RESPONSE";
  unk_2602798 = 15;
  dword_2602758 = 126;
  qword_2602760 = (uint64_t)"BASE_MAP_SEARCHBASE_MAP_STOREFRONTBASE_MAP_STREETBASE_MAP_TRAILBASE_MAP_TRANSIT_DIRECTIONSBRAND_CHANGE_DETAILSBRAND_MERCHANT_LOOKUPBRAND_OTHERCARTOCLIENT_FEATURE_REQUESTCURATED_COLLECTIONS_CHANGE_DETAILSCURRENT_LOCATION_OTHERDATA_OTHERDIRECTIONSDIRECTIONS_OTHERDISPUTED_TERRITORIES_OTHERGROUND_VIEW_ADDRESS_CENSOR_REQUESTGROUND_VIEW_BASIC_CENSOR_REQUESTGROUND_VIEW_IMAGE_QUALITYGROUND_VIEW_OTHERGROUND_VIEW_UNVERIFIED_ADDRESS_CENSOR_REQUESTIMAGERYINSUFFICIENT_INFORMATIONMALFORMEDMANUALMAPS_APPMAPS_APP_OTHERMAPS_APP_SIRIMERCHANT_LOOKUP_NO_MATCHMERCHANT_LOOKUP_OTHERPEDESTRIANPOI_ADDPOI_ADD_DISPUTED_TERRITORYPOI_AUTOCOMPLETEPOI_CHANGE_DETAILSPOI_CHANGE_LABELPOI_CONTAINMENT_CHANGEPOI_CURATED_COLLECTIONSPOI_GROUND_VIEW_STOREFRONTPOI_MERCHANT_LOOKUPPOI_OTHERPOI_REMOVEPOI_SEARCHPOI_TEMPORARY_CLOSUREROAD_INTERSECTIONROAD_OTHERROAD_RESTRICTIONROAD_SPEED_LIMITSROUTINGROUTING_CORRECT_ETASATELLITE_OTHERSATELLITE_OUTDATEDSATELLITE_QUALITYSEARCH_OTHERSEARCH_RESULTS_OTHERSTREETTEMPORARY_PROBLEMTRAFFIC_OTHERTRANSIT_ADDTRANSIT_CHANGE_LABELTRANSIT_DIRECTIONSTRANSIT_DIRECTIONS_UNSUPPORTED_MARKETTRANSIT_LINE_CHANGETRANSIT_LINE_GEOMETRYTRANSIT_MARKET_REQUESTTRANSIT_OTHERTRANSIT_POI_CHANGETRANSIT_POI_CONTAINMENT_CHANGETRANSIT_SCHEDULE_CHANGETRANSIT_STATION_GEOMETRYUNKNOWNUNSPECIFIEDUSER_NAME_INAPPROPRIATEUSER_RESPONSE";
  unk_2602768 = 15;
  dword_2602770 = 103;
  dword_2602938 = 700;
  qword_2602940 = (uint64_t)"GROUND_VIEW_UNVERIFIED_ADDRESS_CENSOR_REQUESTIMAGERYINSUFFICIENT_INFORMATIONMALFORMEDMANUALMAPS_APPMAPS_APP_OTHERMAPS_APP_SIRIMERCHANT_LOOKUP_NO_MATCHMERCHANT_LOOKUP_OTHERPEDESTRIANPOI_ADDPOI_ADD_DISPUTED_TERRITORYPOI_AUTOCOMPLETEPOI_CHANGE_DETAILSPOI_CHANGE_LABELPOI_CONTAINMENT_CHANGEPOI_CURATED_COLLECTIONSPOI_GROUND_VIEW_STOREFRONTPOI_MERCHANT_LOOKUPPOI_OTHERPOI_REMOVEPOI_SEARCHPOI_TEMPORARY_CLOSUREROAD_INTERSECTIONROAD_OTHERROAD_RESTRICTIONROAD_SPEED_LIMITSROUTINGROUTING_CORRECT_ETASATELLITE_OTHERSATELLITE_OUTDATEDSATELLITE_QUALITYSEARCH_OTHERSEARCH_RESULTS_OTHERSTREETTEMPORARY_PROBLEMTRAFFIC_OTHERTRANSIT_ADDTRANSIT_CHANGE_LABELTRANSIT_DIRECTIONSTRANSIT_DIRECTIONS_UNSUPPORTED_MARKETTRANSIT_LINE_CHANGETRANSIT_LINE_GEOMETRYTRANSIT_MARKET_REQUESTTRANSIT_OTHERTRANSIT_POI_CHANGETRANSIT_POI_CONTAINMENT_CHANGETRANSIT_SCHEDULE_CHANGETRANSIT_STATION_GEOMETRYUNKNOWNUNSPECIFIEDUSER_NAME_INAPPROPRIATEUSER_RESPONSE";
  qword_2602748 = (uint64_t)"BASE_MAP_RUNNING_TRACKBASE_MAP_SEARCHBASE_MAP_STOREFRONTBASE_MAP_STREETBASE_MAP_TRAILBASE_MAP_TRANSIT_DIRECTIONSBRAND_CHANGE_DETAILSBRAND_MERCHANT_LOOKUPBRAND_OTHERCARTOCLIENT_FEATURE_REQUESTCURATED_COLLECTIONS_CHANGE_DETAILSCURRENT_LOCATION_OTHERDATA_OTHERDIRECTIONSDIRECTIONS_OTHERDISPUTED_TERRITORIES_OTHERGROUND_VIEW_ADDRESS_CENSOR_REQUESTGROUND_VIEW_BASIC_CENSOR_REQUESTGROUND_VIEW_IMAGE_QUALITYGROUND_VIEW_OTHERGROUND_VIEW_UNVERIFIED_ADDRESS_CENSOR_REQUESTIMAGERYINSUFFICIENT_INFORMATIONMALFORMEDMANUALMAPS_APPMAPS_APP_OTHERMAPS_APP_SIRIMERCHANT_LOOKUP_NO_MATCHMERCHANT_LOOKUP_OTHERPEDESTRIANPOI_ADDPOI_ADD_DISPUTED_TERRITORYPOI_AUTOCOMPLETEPOI_CHANGE_DETAILSPOI_CHANGE_LABELPOI_CONTAINMENT_CHANGEPOI_CURATED_COLLECTIONSPOI_GROUND_VIEW_STOREFRONTPOI_MERCHANT_LOOKUPPOI_OTHERPOI_REMOVEPOI_SEARCHPOI_TEMPORARY_CLOSUREROAD_INTERSECTIONROAD_OTHERROAD_RESTRICTIONROAD_SPEED_LIMITSROUTINGROUTING_CORRECT_ETASATELLITE_OTHERSATELLITE_OUTDATEDSATELLITE_QUALITYSEARCH_OTHERSEARCH_RESULTS_OTHERSTREETTEMPORARY_PROBLEMTRAFFIC_OTHERTRANSIT_ADDTRANSIT_CHANGE_LABELTRANSIT_DIRECTIONSTRANSIT_DIRECTIONS_UNSUPPORTED_MARKETTRANSIT_LINE_CHANGETRANSIT_LINE_GEOMETRYTRANSIT_MARKET_REQUESTTRANSIT_OTHERTRANSIT_POI_CHANGETRANSIT_POI_CONTAINMENT_CHANGETRANSIT_SCHEDULE_CHANGETRANSIT_STATION_GEOMETRYUNKNOWNUNSPECIFIEDUSER_NAME_INAPPROPRIATEUSER_RESPONSE";
  unk_2602750 = 22;
  qword_2602948 = 45;
  qword_2602730 = (uint64_t)"BASE_MAP_OTHERBASE_MAP_RUNNING_TRACKBASE_MAP_SEARCHBASE_MAP_STOREFRONTBASE_MAP_STREETBASE_MAP_TRAILBASE_MAP_TRANSIT_DIRECTIONSBRAND_CHANGE_DETAILSBRAND_MERCHANT_LOOKUPBRAND_OTHERCARTOCLIENT_FEATURE_REQUESTCURATED_COLLECTIONS_CHANGE_DETAILSCURRENT_LOCATION_OTHERDATA_OTHERDIRECTIONSDIRECTIONS_OTHERDISPUTED_TERRITORIES_OTHERGROUND_VIEW_ADDRESS_CENSOR_REQUESTGROUND_VIEW_BASIC_CENSOR_REQUESTGROUND_VIEW_IMAGE_QUALITYGROUND_VIEW_OTHERGROUND_VIEW_UNVERIFIED_ADDRESS_CENSOR_REQUESTIMAGERYINSUFFICIENT_INFORMATIONMALFORMEDMANUALMAPS_APPMAPS_APP_OTHERMAPS_APP_SIRIMERCHANT_LOOKUP_NO_MATCHMERCHANT_LOOKUP_OTHERPEDESTRIANPOI_ADDPOI_ADD_DISPUTED_TERRITORYPOI_AUTOCOMPLETEPOI_CHANGE_DETAILSPOI_CHANGE_LABELPOI_CONTAINMENT_CHANGEPOI_CURATED_COLLECTIONSPOI_GROUND_VIEW_STOREFRONTPOI_MERCHANT_LOOKUPPOI_OTHERPOI_REMOVEPOI_SEARCHPOI_TEMPORARY_CLOSUREROAD_INTERSECTIONROAD_OTHERROAD_RESTRICTIONROAD_SPEED_LIMITSROUTINGROUTING_CORRECT_ETASATELLITE_OTHERSATELLITE_OUTDATEDSATELLITE_QUALITYSEARCH_OTHERSEARCH_RESULTS_OTHERSTREETTEMPORARY_PROBLEMTRAFFIC_OTHERTRANSIT_ADDTRANSIT_CHANGE_LABELTRANSIT_DIRECTIONSTRANSIT_DIRECTIONS_UNSUPPORTED_MARKETTRANSIT_LINE_CHANGETRANSIT_LINE_GEOMETRYTRANSIT_MARKET_REQUESTTRANSIT_OTHERTRANSIT_POI_CHANGETRANSIT_POI_CONTAINMENT_CHANGETRANSIT_SCHEDULE_CHANGETRANSIT_STATION_GEOMETRYUNKNOWNUNSPECIFIEDUSER_NAME_INAPPROPRIATEUSER_RESPONSE";
  unk_2602738 = 14;
  dword_2602950 = 704;
  qword_2602958 = (uint64_t)"IMAGERYINSUFFICIENT_INFORMATIONMALFORMEDMANUALMAPS_APPMAPS_APP_OTHERMAPS_APP_SIRIMERCHANT_LOOKUP_NO_MATCHMERCHANT_LOOKUP_OTHERPEDESTRIANPOI_ADDPOI_ADD_DISPUTED_TERRITORYPOI_AUTOCOMPLETEPOI_CHANGE_DETAILSPOI_CHANGE_LABELPOI_CONTAINMENT_CHANGEPOI_CURATED_COLLECTIONSPOI_GROUND_VIEW_STOREFRONTPOI_MERCHANT_LOOKUPPOI_OTHERPOI_REMOVEPOI_SEARCHPOI_TEMPORARY_CLOSUREROAD_INTERSECTIONROAD_OTHERROAD_RESTRICTIONROAD_SPEED_LIMITSROUTINGROUTING_CORRECT_ETASATELLITE_OTHERSATELLITE_OUTDATEDSATELLITE_QUALITYSEARCH_OTHERSEARCH_RESULTS_OTHERSTREETTEMPORARY_PROBLEMTRAFFIC_OTHERTRANSIT_ADDTRANSIT_CHANGE_LABELTRANSIT_DIRECTIONSTRANSIT_DIRECTIONS_UNSUPPORTED_MARKETTRANSIT_LINE_CHANGETRANSIT_LINE_GEOMETRYTRANSIT_MARKET_REQUESTTRANSIT_OTHERTRANSIT_POI_CHANGETRANSIT_POI_CONTAINMENT_CHANGETRANSIT_SCHEDULE_CHANGETRANSIT_STATION_GEOMETRYUNKNOWNUNSPECIFIEDUSER_NAME_INAPPROPRIATEUSER_RESPONSE";
  qword_2602718 = (uint64_t)"BASE_MAP_LOCALITYBASE_MAP_OTHERBASE_MAP_RUNNING_TRACKBASE_MAP_SEARCHBASE_MAP_STOREFRONTBASE_MAP_STREETBASE_MAP_TRAILBASE_MAP_TRANSIT_DIRECTIONSBRAND_CHANGE_DETAILSBRAND_MERCHANT_LOOKUPBRAND_OTHERCARTOCLIENT_FEATURE_REQUESTCURATED_COLLECTIONS_CHANGE_DETAILSCURRENT_LOCATION_OTHERDATA_OTHERDIRECTIONSDIRECTIONS_OTHERDISPUTED_TERRITORIES_OTHERGROUND_VIEW_ADDRESS_CENSOR_REQUESTGROUND_VIEW_BASIC_CENSOR_REQUESTGROUND_VIEW_IMAGE_QUALITYGROUND_VIEW_OTHERGROUND_VIEW_UNVERIFIED_ADDRESS_CENSOR_REQUESTIMAGERYINSUFFICIENT_INFORMATIONMALFORMEDMANUALMAPS_APPMAPS_APP_OTHERMAPS_APP_SIRIMERCHANT_LOOKUP_NO_MATCHMERCHANT_LOOKUP_OTHERPEDESTRIANPOI_ADDPOI_ADD_DISPUTED_TERRITORYPOI_AUTOCOMPLETEPOI_CHANGE_DETAILSPOI_CHANGE_LABELPOI_CONTAINMENT_CHANGEPOI_CURATED_COLLECTIONSPOI_GROUND_VIEW_STOREFRONTPOI_MERCHANT_LOOKUPPOI_OTHERPOI_REMOVEPOI_SEARCHPOI_TEMPORARY_CLOSUREROAD_INTERSECTIONROAD_OTHERROAD_RESTRICTIONROAD_SPEED_LIMITSROUTINGROUTING_CORRECT_ETASATELLITE_OTHERSATELLITE_OUTDATEDSATELLITE_QUALITYSEARCH_OTHERSEARCH_RESULTS_OTHERSTREETTEMPORARY_PROBLEMTRAFFIC_OTHERTRANSIT_ADDTRANSIT_CHANGE_LABELTRANSIT_DIRECTIONSTRANSIT_DIRECTIONS_UNSUPPORTED_MARKETTRANSIT_LINE_CHANGETRANSIT_LINE_GEOMETRYTRANSIT_MARKET_REQUESTTRANSIT_OTHERTRANSIT_POI_CHANGETRANSIT_POI_CONTAINMENT_CHANGETRANSIT_SCHEDULE_CHANGETRANSIT_STATION_GEOMETRYUNKNOWNUNSPECIFIEDUSER_NAME_INAPPROPRIATEUSER_RESPONSE";
  unk_2602720 = 17;
  dword_2602968 = 610;
  qword_26026E8 = (uint64_t)"BASE_MAP_DIRECTIONSBASE_MAP_LAND_USEBASE_MAP_LOCALITYBASE_MAP_OTHERBASE_MAP_RUNNING_TRACKBASE_MAP_SEARCHBASE_MAP_STOREFRONTBASE_MAP_STREETBASE_MAP_TRAILBASE_MAP_TRANSIT_DIRECTIONSBRAND_CHANGE_DETAILSBRAND_MERCHANT_LOOKUPBRAND_OTHERCARTOCLIENT_FEATURE_REQUESTCURATED_COLLECTIONS_CHANGE_DETAILSCURRENT_LOCATION_OTHERDATA_OTHERDIRECTIONSDIRECTIONS_OTHERDISPUTED_TERRITORIES_OTHERGROUND_VIEW_ADDRESS_CENSOR_REQUESTGROUND_VIEW_BASIC_CENSOR_REQUESTGROUND_VIEW_IMAGE_QUALITYGROUND_VIEW_OTHERGROUND_VIEW_UNVERIFIED_ADDRESS_CENSOR_REQUESTIMAGERYINSUFFICIENT_INFORMATIONMALFORMEDMANUALMAPS_APPMAPS_APP_OTHERMAPS_APP_SIRIMERCHANT_LOOKUP_NO_MATCHMERCHANT_LOOKUP_OTHERPEDESTRIANPOI_ADDPOI_ADD_DISPUTED_TERRITORYPOI_AUTOCOMPLETEPOI_CHANGE_DETAILSPOI_CHANGE_LABELPOI_CONTAINMENT_CHANGEPOI_CURATED_COLLECTIONSPOI_GROUND_VIEW_STOREFRONTPOI_MERCHANT_LOOKUPPOI_OTHERPOI_REMOVEPOI_SEARCHPOI_TEMPORARY_CLOSUREROAD_INTERSECTIONROAD_OTHERROAD_RESTRICTIONROAD_SPEED_LIMITSROUTINGROUTING_CORRECT_ETASATELLITE_OTHERSATELLITE_OUTDATEDSATELLITE_QUALITYSEARCH_OTHERSEARCH_RESULTS_OTHERSTREETTEMPORARY_PROBLEMTRAFFIC_OTHERTRANSIT_ADDTRANSIT_CHANGE_LABELTRANSIT_DIRECTIONSTRANSIT_DIRECTIONS_UNSUPPORTED_MARKETTRANSIT_LINE_CHANGETRANSIT_LINE_GEOMETRYTRANSIT_MARKET_REQUESTTRANSIT_OTHERTRANSIT_POI_CHANGETRANSIT_POI_CONTAINMENT_CHANGETRANSIT_SCHEDULE_CHANGETRANSIT_STATION_GEOMETRYUNKNOWNUNSPECIFIEDUSER_NAME_INAPPROPRIATEUSER_RESPONSE";
  unk_26026F0 = 19;
  qword_2602708 = 17;
  qword_2602970 = (uint64_t)"INSUFFICIENT_INFORMATIONMALFORMEDMANUALMAPS_APPMAPS_APP_OTHERMAPS_APP_SIRIMERCHANT_LOOKUP_NO_MATCHMERCHANT_LOOKUP_OTHERPEDESTRIANPOI_ADDPOI_ADD_DISPUTED_TERRITORYPOI_AUTOCOMPLETEPOI_CHANGE_DETAILSPOI_CHANGE_LABELPOI_CONTAINMENT_CHANGEPOI_CURATED_COLLECTIONSPOI_GROUND_VIEW_STOREFRONTPOI_MERCHANT_LOOKUPPOI_OTHERPOI_REMOVEPOI_SEARCHPOI_TEMPORARY_CLOSUREROAD_INTERSECTIONROAD_OTHERROAD_RESTRICTIONROAD_SPEED_LIMITSROUTINGROUTING_CORRECT_ETASATELLITE_OTHERSATELLITE_OUTDATEDSATELLITE_QUALITYSEARCH_OTHERSEARCH_RESULTS_OTHERSTREETTEMPORARY_PROBLEMTRAFFIC_OTHERTRANSIT_ADDTRANSIT_CHANGE_LABELTRANSIT_DIRECTIONSTRANSIT_DIRECTIONS_UNSUPPORTED_MARKETTRANSIT_LINE_CHANGETRANSIT_LINE_GEOMETRYTRANSIT_MARKET_REQUESTTRANSIT_OTHERTRANSIT_POI_CHANGETRANSIT_POI_CONTAINMENT_CHANGETRANSIT_SCHEDULE_CHANGETRANSIT_STATION_GEOMETRYUNKNOWNUNSPECIFIEDUSER_NAME_INAPPROPRIATEUSER_RESPONSE";
  qword_26026D0 = (uint64_t)"BASE_MAP_CYCLINGBASE_MAP_DIRECTIONSBASE_MAP_LAND_USEBASE_MAP_LOCALITYBASE_MAP_OTHERBASE_MAP_RUNNING_TRACKBASE_MAP_SEARCHBASE_MAP_STOREFRONTBASE_MAP_STREETBASE_MAP_TRAILBASE_MAP_TRANSIT_DIRECTIONSBRAND_CHANGE_DETAILSBRAND_MERCHANT_LOOKUPBRAND_OTHERCARTOCLIENT_FEATURE_REQUESTCURATED_COLLECTIONS_CHANGE_DETAILSCURRENT_LOCATION_OTHERDATA_OTHERDIRECTIONSDIRECTIONS_OTHERDISPUTED_TERRITORIES_OTHERGROUND_VIEW_ADDRESS_CENSOR_REQUESTGROUND_VIEW_BASIC_CENSOR_REQUESTGROUND_VIEW_IMAGE_QUALITYGROUND_VIEW_OTHERGROUND_VIEW_UNVERIFIED_ADDRESS_CENSOR_REQUESTIMAGERYINSUFFICIENT_INFORMATIONMALFORMEDMANUALMAPS_APPMAPS_APP_OTHERMAPS_APP_SIRIMERCHANT_LOOKUP_NO_MATCHMERCHANT_LOOKUP_OTHERPEDESTRIANPOI_ADDPOI_ADD_DISPUTED_TERRITORYPOI_AUTOCOMPLETEPOI_CHANGE_DETAILSPOI_CHANGE_LABELPOI_CONTAINMENT_CHANGEPOI_CURATED_COLLECTIONSPOI_GROUND_VIEW_STOREFRONTPOI_MERCHANT_LOOKUPPOI_OTHERPOI_REMOVEPOI_SEARCHPOI_TEMPORARY_CLOSUREROAD_INTERSECTIONROAD_OTHERROAD_RESTRICTIONROAD_SPEED_LIMITSROUTINGROUTING_CORRECT_ETASATELLITE_OTHERSATELLITE_OUTDATEDSATELLITE_QUALITYSEARCH_OTHERSEARCH_RESULTS_OTHERSTREETTEMPORARY_PROBLEMTRAFFIC_OTHERTRANSIT_ADDTRANSIT_CHANGE_LABELTRANSIT_DIRECTIONSTRANSIT_DIRECTIONS_UNSUPPORTED_MARKETTRANSIT_LINE_CHANGETRANSIT_LINE_GEOMETRYTRANSIT_MARKET_REQUESTTRANSIT_OTHERTRANSIT_POI_CHANGETRANSIT_POI_CONTAINMENT_CHANGETRANSIT_SCHEDULE_CHANGETRANSIT_STATION_GEOMETRYUNKNOWNUNSPECIFIEDUSER_NAME_INAPPROPRIATEUSER_RESPONSE";
  unk_26026D8 = 16;
  qword_2602988 = (uint64_t)"MALFORMEDMANUALMAPS_APPMAPS_APP_OTHERMAPS_APP_SIRIMERCHANT_LOOKUP_NO_MATCHMERCHANT_LOOKUP_OTHERPEDESTRIANPOI_ADDPOI_ADD_DISPUTED_TERRITORYPOI_AUTOCOMPLETEPOI_CHANGE_DETAILSPOI_CHANGE_LABELPOI_CONTAINMENT_CHANGEPOI_CURATED_COLLECTIONSPOI_GROUND_VIEW_STOREFRONTPOI_MERCHANT_LOOKUPPOI_OTHERPOI_REMOVEPOI_SEARCHPOI_TEMPORARY_CLOSUREROAD_INTERSECTIONROAD_OTHERROAD_RESTRICTIONROAD_SPEED_LIMITSROUTINGROUTING_CORRECT_ETASATELLITE_OTHERSATELLITE_OUTDATEDSATELLITE_QUALITYSEARCH_OTHERSEARCH_RESULTS_OTHERSTREETTEMPORARY_PROBLEMTRAFFIC_OTHERTRANSIT_ADDTRANSIT_CHANGE_LABELTRANSIT_DIRECTIONSTRANSIT_DIRECTIONS_UNSUPPORTED_MARKETTRANSIT_LINE_CHANGETRANSIT_LINE_GEOMETRYTRANSIT_MARKET_REQUESTTRANSIT_OTHERTRANSIT_POI_CHANGETRANSIT_POI_CONTAINMENT_CHANGETRANSIT_SCHEDULE_CHANGETRANSIT_STATION_GEOMETRYUNKNOWNUNSPECIFIEDUSER_NAME_INAPPROPRIATEUSER_RESPONSE";
  qword_26029A0 = (uint64_t)"MANUALMAPS_APPMAPS_APP_OTHERMAPS_APP_SIRIMERCHANT_LOOKUP_NO_MATCHMERCHANT_LOOKUP_OTHERPEDESTRIANPOI_ADDPOI_ADD_DISPUTED_TERRITORYPOI_AUTOCOMPLETEPOI_CHANGE_DETAILSPOI_CHANGE_LABELPOI_CONTAINMENT_CHANGEPOI_CURATED_COLLECTIONSPOI_GROUND_VIEW_STOREFRONTPOI_MERCHANT_LOOKUPPOI_OTHERPOI_REMOVEPOI_SEARCHPOI_TEMPORARY_CLOSUREROAD_INTERSECTIONROAD_OTHERROAD_RESTRICTIONROAD_SPEED_LIMITSROUTINGROUTING_CORRECT_ETASATELLITE_OTHERSATELLITE_OUTDATEDSATELLITE_QUALITYSEARCH_OTHERSEARCH_RESULTS_OTHERSTREETTEMPORARY_PROBLEMTRAFFIC_OTHERTRANSIT_ADDTRANSIT_CHANGE_LABELTRANSIT_DIRECTIONSTRANSIT_DIRECTIONS_UNSUPPORTED_MARKETTRANSIT_LINE_CHANGETRANSIT_LINE_GEOMETRYTRANSIT_MARKET_REQUESTTRANSIT_OTHERTRANSIT_POI_CHANGETRANSIT_POI_CONTAINMENT_CHANGETRANSIT_SCHEDULE_CHANGETRANSIT_STATION_GEOMETRYUNKNOWNUNSPECIFIEDUSER_NAME_INAPPROPRIATEUSER_RESPONSE";
  qword_26026B8 = (uint64_t)"BASE_MAP_COUNTRYBASE_MAP_CYCLINGBASE_MAP_DIRECTIONSBASE_MAP_LAND_USEBASE_MAP_LOCALITYBASE_MAP_OTHERBASE_MAP_RUNNING_TRACKBASE_MAP_SEARCHBASE_MAP_STOREFRONTBASE_MAP_STREETBASE_MAP_TRAILBASE_MAP_TRANSIT_DIRECTIONSBRAND_CHANGE_DETAILSBRAND_MERCHANT_LOOKUPBRAND_OTHERCARTOCLIENT_FEATURE_REQUESTCURATED_COLLECTIONS_CHANGE_DETAILSCURRENT_LOCATION_OTHERDATA_OTHERDIRECTIONSDIRECTIONS_OTHERDISPUTED_TERRITORIES_OTHERGROUND_VIEW_ADDRESS_CENSOR_REQUESTGROUND_VIEW_BASIC_CENSOR_REQUESTGROUND_VIEW_IMAGE_QUALITYGROUND_VIEW_OTHERGROUND_VIEW_UNVERIFIED_ADDRESS_CENSOR_REQUESTIMAGERYINSUFFICIENT_INFORMATIONMALFORMEDMANUALMAPS_APPMAPS_APP_OTHERMAPS_APP_SIRIMERCHANT_LOOKUP_NO_MATCHMERCHANT_LOOKUP_OTHERPEDESTRIANPOI_ADDPOI_ADD_DISPUTED_TERRITORYPOI_AUTOCOMPLETEPOI_CHANGE_DETAILSPOI_CHANGE_LABELPOI_CONTAINMENT_CHANGEPOI_CURATED_COLLECTIONSPOI_GROUND_VIEW_STOREFRONTPOI_MERCHANT_LOOKUPPOI_OTHERPOI_REMOVEPOI_SEARCHPOI_TEMPORARY_CLOSUREROAD_INTERSECTIONROAD_OTHERROAD_RESTRICTIONROAD_SPEED_LIMITSROUTINGROUTING_CORRECT_ETASATELLITE_OTHERSATELLITE_OUTDATEDSATELLITE_QUALITYSEARCH_OTHERSEARCH_RESULTS_OTHERSTREETTEMPORARY_PROBLEMTRAFFIC_OTHERTRANSIT_ADDTRANSIT_CHANGE_LABELTRANSIT_DIRECTIONSTRANSIT_DIRECTIONS_UNSUPPORTED_MARKETTRANSIT_LINE_CHANGETRANSIT_LINE_GEOMETRYTRANSIT_MARKET_REQUESTTRANSIT_OTHERTRANSIT_POI_CHANGETRANSIT_POI_CONTAINMENT_CHANGETRANSIT_SCHEDULE_CHANGETRANSIT_STATION_GEOMETRYUNKNOWNUNSPECIFIEDUSER_NAME_INAPPROPRIATEUSER_RESPONSE";
  unk_26026C0 = 16;
  dword_26029B0 = 614;
  qword_26026A0 = (uint64_t)"BASE_MAP_CITYBASE_MAP_COUNTRYBASE_MAP_CYCLINGBASE_MAP_DIRECTIONSBASE_MAP_LAND_USEBASE_MAP_LOCALITYBASE_MAP_OTHERBASE_MAP_RUNNING_TRACKBASE_MAP_SEARCHBASE_MAP_STOREFRONTBASE_MAP_STREETBASE_MAP_TRAILBASE_MAP_TRANSIT_DIRECTIONSBRAND_CHANGE_DETAILSBRAND_MERCHANT_LOOKUPBRAND_OTHERCARTOCLIENT_FEATURE_REQUESTCURATED_COLLECTIONS_CHANGE_DETAILSCURRENT_LOCATION_OTHERDATA_OTHERDIRECTIONSDIRECTIONS_OTHERDISPUTED_TERRITORIES_OTHERGROUND_VIEW_ADDRESS_CENSOR_REQUESTGROUND_VIEW_BASIC_CENSOR_REQUESTGROUND_VIEW_IMAGE_QUALITYGROUND_VIEW_OTHERGROUND_VIEW_UNVERIFIED_ADDRESS_CENSOR_REQUESTIMAGERYINSUFFICIENT_INFORMATIONMALFORMEDMANUALMAPS_APPMAPS_APP_OTHERMAPS_APP_SIRIMERCHANT_LOOKUP_NO_MATCHMERCHANT_LOOKUP_OTHERPEDESTRIANPOI_ADDPOI_ADD_DISPUTED_TERRITORYPOI_AUTOCOMPLETEPOI_CHANGE_DETAILSPOI_CHANGE_LABELPOI_CONTAINMENT_CHANGEPOI_CURATED_COLLECTIONSPOI_GROUND_VIEW_STOREFRONTPOI_MERCHANT_LOOKUPPOI_OTHERPOI_REMOVEPOI_SEARCHPOI_TEMPORARY_CLOSUREROAD_INTERSECTIONROAD_OTHERROAD_RESTRICTIONROAD_SPEED_LIMITSROUTINGROUTING_CORRECT_ETASATELLITE_OTHERSATELLITE_OUTDATEDSATELLITE_QUALITYSEARCH_OTHERSEARCH_RESULTS_OTHERSTREETTEMPORARY_PROBLEMTRAFFIC_OTHERTRANSIT_ADDTRANSIT_CHANGE_LABELTRANSIT_DIRECTIONSTRANSIT_DIRECTIONS_UNSUPPORTED_MARKETTRANSIT_LINE_CHANGETRANSIT_LINE_GEOMETRYTRANSIT_MARKET_REQUESTTRANSIT_OTHERTRANSIT_POI_CHANGETRANSIT_POI_CONTAINMENT_CHANGETRANSIT_SCHEDULE_CHANGETRANSIT_STATION_GEOMETRYUNKNOWNUNSPECIFIEDUSER_NAME_INAPPROPRIATEUSER_RESPONSE";
  unk_26026A8 = 13;
  dword_2602698 = 102;
  qword_26029B8 = (uint64_t)"MAPS_APPMAPS_APP_OTHERMAPS_APP_SIRIMERCHANT_LOOKUP_NO_MATCHMERCHANT_LOOKUP_OTHERPEDESTRIANPOI_ADDPOI_ADD_DISPUTED_TERRITORYPOI_AUTOCOMPLETEPOI_CHANGE_DETAILSPOI_CHANGE_LABELPOI_CONTAINMENT_CHANGEPOI_CURATED_COLLECTIONSPOI_GROUND_VIEW_STOREFRONTPOI_MERCHANT_LOOKUPPOI_OTHERPOI_REMOVEPOI_SEARCHPOI_TEMPORARY_CLOSUREROAD_INTERSECTIONROAD_OTHERROAD_RESTRICTIONROAD_SPEED_LIMITSROUTINGROUTING_CORRECT_ETASATELLITE_OTHERSATELLITE_OUTDATEDSATELLITE_QUALITYSEARCH_OTHERSEARCH_RESULTS_OTHERSTREETTEMPORARY_PROBLEMTRAFFIC_OTHERTRANSIT_ADDTRANSIT_CHANGE_LABELTRANSIT_DIRECTIONSTRANSIT_DIRECTIONS_UNSUPPORTED_MARKETTRANSIT_LINE_CHANGETRANSIT_LINE_GEOMETRYTRANSIT_MARKET_REQUESTTRANSIT_OTHERTRANSIT_POI_CHANGETRANSIT_POI_CONTAINMENT_CHANGETRANSIT_SCHEDULE_CHANGETRANSIT_STATION_GEOMETRYUNKNOWNUNSPECIFIEDUSER_NAME_INAPPROPRIATEUSER_RESPONSE";
  qword_2602670 = (uint64_t)"BASE_MAP_BUILDINGBASE_MAP_CHANGE_LABELBASE_MAP_CITYBASE_MAP_COUNTRYBASE_MAP_CYCLINGBASE_MAP_DIRECTIONSBASE_MAP_LAND_USEBASE_MAP_LOCALITYBASE_MAP_OTHERBASE_MAP_RUNNING_TRACKBASE_MAP_SEARCHBASE_MAP_STOREFRONTBASE_MAP_STREETBASE_MAP_TRAILBASE_MAP_TRANSIT_DIRECTIONSBRAND_CHANGE_DETAILSBRAND_MERCHANT_LOOKUPBRAND_OTHERCARTOCLIENT_FEATURE_REQUESTCURATED_COLLECTIONS_CHANGE_DETAILSCURRENT_LOCATION_OTHERDATA_OTHERDIRECTIONSDIRECTIONS_OTHERDISPUTED_TERRITORIES_OTHERGROUND_VIEW_ADDRESS_CENSOR_REQUESTGROUND_VIEW_BASIC_CENSOR_REQUESTGROUND_VIEW_IMAGE_QUALITYGROUND_VIEW_OTHERGROUND_VIEW_UNVERIFIED_ADDRESS_CENSOR_REQUESTIMAGERYINSUFFICIENT_INFORMATIONMALFORMEDMANUALMAPS_APPMAPS_APP_OTHERMAPS_APP_SIRIMERCHANT_LOOKUP_NO_MATCHMERCHANT_LOOKUP_OTHERPEDESTRIANPOI_ADDPOI_ADD_DISPUTED_TERRITORYPOI_AUTOCOMPLETEPOI_CHANGE_DETAILSPOI_CHANGE_LABELPOI_CONTAINMENT_CHANGEPOI_CURATED_COLLECTIONSPOI_GROUND_VIEW_STOREFRONTPOI_MERCHANT_LOOKUPPOI_OTHERPOI_REMOVEPOI_SEARCHPOI_TEMPORARY_CLOSUREROAD_INTERSECTIONROAD_OTHERROAD_RESTRICTIONROAD_SPEED_LIMITSROUTINGROUTING_CORRECT_ETASATELLITE_OTHERSATELLITE_OUTDATEDSATELLITE_QUALITYSEARCH_OTHERSEARCH_RESULTS_OTHERSTREETTEMPORARY_PROBLEMTRAFFIC_OTHERTRANSIT_ADDTRANSIT_CHANGE_LABELTRANSIT_DIRECTIONSTRANSIT_DIRECTIONS_UNSUPPORTED_MARKETTRANSIT_LINE_CHANGETRANSIT_LINE_GEOMETRYTRANSIT_MARKET_REQUESTTRANSIT_OTHERTRANSIT_POI_CHANGETRANSIT_POI_CONTAINMENT_CHANGETRANSIT_SCHEDULE_CHANGETRANSIT_STATION_GEOMETRYUNKNOWNUNSPECIFIEDUSER_NAME_INAPPROPRIATEUSER_RESPONSE";
  unk_2602678 = 17;
  qword_2602690 = 21;
  dword_26029C8 = 611;
  qword_2602658 = (uint64_t)"BASE_MAP_AUTOCOMPLETEBASE_MAP_BUILDINGBASE_MAP_CHANGE_LABELBASE_MAP_CITYBASE_MAP_COUNTRYBASE_MAP_CYCLINGBASE_MAP_DIRECTIONSBASE_MAP_LAND_USEBASE_MAP_LOCALITYBASE_MAP_OTHERBASE_MAP_RUNNING_TRACKBASE_MAP_SEARCHBASE_MAP_STOREFRONTBASE_MAP_STREETBASE_MAP_TRAILBASE_MAP_TRANSIT_DIRECTIONSBRAND_CHANGE_DETAILSBRAND_MERCHANT_LOOKUPBRAND_OTHERCARTOCLIENT_FEATURE_REQUESTCURATED_COLLECTIONS_CHANGE_DETAILSCURRENT_LOCATION_OTHERDATA_OTHERDIRECTIONSDIRECTIONS_OTHERDISPUTED_TERRITORIES_OTHERGROUND_VIEW_ADDRESS_CENSOR_REQUESTGROUND_VIEW_BASIC_CENSOR_REQUESTGROUND_VIEW_IMAGE_QUALITYGROUND_VIEW_OTHERGROUND_VIEW_UNVERIFIED_ADDRESS_CENSOR_REQUESTIMAGERYINSUFFICIENT_INFORMATIONMALFORMEDMANUALMAPS_APPMAPS_APP_OTHERMAPS_APP_SIRIMERCHANT_LOOKUP_NO_MATCHMERCHANT_LOOKUP_OTHERPEDESTRIANPOI_ADDPOI_ADD_DISPUTED_TERRITORYPOI_AUTOCOMPLETEPOI_CHANGE_DETAILSPOI_CHANGE_LABELPOI_CONTAINMENT_CHANGEPOI_CURATED_COLLECTIONSPOI_GROUND_VIEW_STOREFRONTPOI_MERCHANT_LOOKUPPOI_OTHERPOI_REMOVEPOI_SEARCHPOI_TEMPORARY_CLOSUREROAD_INTERSECTIONROAD_OTHERROAD_RESTRICTIONROAD_SPEED_LIMITSROUTINGROUTING_CORRECT_ETASATELLITE_OTHERSATELLITE_OUTDATEDSATELLITE_QUALITYSEARCH_OTHERSEARCH_RESULTS_OTHERSTREETTEMPORARY_PROBLEMTRAFFIC_OTHERTRANSIT_ADDTRANSIT_CHANGE_LABELTRANSIT_DIRECTIONSTRANSIT_DIRECTIONS_UNSUPPORTED_MARKETTRANSIT_LINE_CHANGETRANSIT_LINE_GEOMETRYTRANSIT_MARKET_REQUESTTRANSIT_OTHERTRANSIT_POI_CHANGETRANSIT_POI_CONTAINMENT_CHANGETRANSIT_SCHEDULE_CHANGETRANSIT_STATION_GEOMETRYUNKNOWNUNSPECIFIEDUSER_NAME_INAPPROPRIATEUSER_RESPONSE";
  unk_2602660 = 21;
  dword_2602668 = 101;
  qword_26029D0 = (uint64_t)"MAPS_APP_OTHERMAPS_APP_SIRIMERCHANT_LOOKUP_NO_MATCHMERCHANT_LOOKUP_OTHERPEDESTRIANPOI_ADDPOI_ADD_DISPUTED_TERRITORYPOI_AUTOCOMPLETEPOI_CHANGE_DETAILSPOI_CHANGE_LABELPOI_CONTAINMENT_CHANGEPOI_CURATED_COLLECTIONSPOI_GROUND_VIEW_STOREFRONTPOI_MERCHANT_LOOKUPPOI_OTHERPOI_REMOVEPOI_SEARCHPOI_TEMPORARY_CLOSUREROAD_INTERSECTIONROAD_OTHERROAD_RESTRICTIONROAD_SPEED_LIMITSROUTINGROUTING_CORRECT_ETASATELLITE_OTHERSATELLITE_OUTDATEDSATELLITE_QUALITYSEARCH_OTHERSEARCH_RESULTS_OTHERSTREETTEMPORARY_PROBLEMTRAFFIC_OTHERTRANSIT_ADDTRANSIT_CHANGE_LABELTRANSIT_DIRECTIONSTRANSIT_DIRECTIONS_UNSUPPORTED_MARKETTRANSIT_LINE_CHANGETRANSIT_LINE_GEOMETRYTRANSIT_MARKET_REQUESTTRANSIT_OTHERTRANSIT_POI_CHANGETRANSIT_POI_CONTAINMENT_CHANGETRANSIT_SCHEDULE_CHANGETRANSIT_STATION_GEOMETRYUNKNOWNUNSPECIFIEDUSER_NAME_INAPPROPRIATEUSER_RESPONSE";
  qword_2602640 = (uint64_t)"BASE_MAP_AOIBASE_MAP_AUTOCOMPLETEBASE_MAP_BUILDINGBASE_MAP_CHANGE_LABELBASE_MAP_CITYBASE_MAP_COUNTRYBASE_MAP_CYCLINGBASE_MAP_DIRECTIONSBASE_MAP_LAND_USEBASE_MAP_LOCALITYBASE_MAP_OTHERBASE_MAP_RUNNING_TRACKBASE_MAP_SEARCHBASE_MAP_STOREFRONTBASE_MAP_STREETBASE_MAP_TRAILBASE_MAP_TRANSIT_DIRECTIONSBRAND_CHANGE_DETAILSBRAND_MERCHANT_LOOKUPBRAND_OTHERCARTOCLIENT_FEATURE_REQUESTCURATED_COLLECTIONS_CHANGE_DETAILSCURRENT_LOCATION_OTHERDATA_OTHERDIRECTIONSDIRECTIONS_OTHERDISPUTED_TERRITORIES_OTHERGROUND_VIEW_ADDRESS_CENSOR_REQUESTGROUND_VIEW_BASIC_CENSOR_REQUESTGROUND_VIEW_IMAGE_QUALITYGROUND_VIEW_OTHERGROUND_VIEW_UNVERIFIED_ADDRESS_CENSOR_REQUESTIMAGERYINSUFFICIENT_INFORMATIONMALFORMEDMANUALMAPS_APPMAPS_APP_OTHERMAPS_APP_SIRIMERCHANT_LOOKUP_NO_MATCHMERCHANT_LOOKUP_OTHERPEDESTRIANPOI_ADDPOI_ADD_DISPUTED_TERRITORYPOI_AUTOCOMPLETEPOI_CHANGE_DETAILSPOI_CHANGE_LABELPOI_CONTAINMENT_CHANGEPOI_CURATED_COLLECTIONSPOI_GROUND_VIEW_STOREFRONTPOI_MERCHANT_LOOKUPPOI_OTHERPOI_REMOVEPOI_SEARCHPOI_TEMPORARY_CLOSUREROAD_INTERSECTIONROAD_OTHERROAD_RESTRICTIONROAD_SPEED_LIMITSROUTINGROUTING_CORRECT_ETASATELLITE_OTHERSATELLITE_OUTDATEDSATELLITE_QUALITYSEARCH_OTHERSEARCH_RESULTS_OTHERSTREETTEMPORARY_PROBLEMTRAFFIC_OTHERTRANSIT_ADDTRANSIT_CHANGE_LABELTRANSIT_DIRECTIONSTRANSIT_DIRECTIONS_UNSUPPORTED_MARKETTRANSIT_LINE_CHANGETRANSIT_LINE_GEOMETRYTRANSIT_MARKET_REQUESTTRANSIT_OTHERTRANSIT_POI_CHANGETRANSIT_POI_CONTAINMENT_CHANGETRANSIT_SCHEDULE_CHANGETRANSIT_STATION_GEOMETRYUNKNOWNUNSPECIFIEDUSER_NAME_INAPPROPRIATEUSER_RESPONSE";
  unk_2602648 = 12;
  dword_26029E0 = 503;
  qword_26029E8 = (uint64_t)"MAPS_APP_SIRIMERCHANT_LOOKUP_NO_MATCHMERCHANT_LOOKUP_OTHERPEDESTRIANPOI_ADDPOI_ADD_DISPUTED_TERRITORYPOI_AUTOCOMPLETEPOI_CHANGE_DETAILSPOI_CHANGE_LABELPOI_CONTAINMENT_CHANGEPOI_CURATED_COLLECTIONSPOI_GROUND_VIEW_STOREFRONTPOI_MERCHANT_LOOKUPPOI_OTHERPOI_REMOVEPOI_SEARCHPOI_TEMPORARY_CLOSUREROAD_INTERSECTIONROAD_OTHERROAD_RESTRICTIONROAD_SPEED_LIMITSROUTINGROUTING_CORRECT_ETASATELLITE_OTHERSATELLITE_OUTDATEDSATELLITE_QUALITYSEARCH_OTHERSEARCH_RESULTS_OTHERSTREETTEMPORARY_PROBLEMTRAFFIC_OTHERTRANSIT_ADDTRANSIT_CHANGE_LABELTRANSIT_DIRECTIONSTRANSIT_DIRECTIONS_UNSUPPORTED_MARKETTRANSIT_LINE_CHANGETRANSIT_LINE_GEOMETRYTRANSIT_MARKET_REQUESTTRANSIT_OTHERTRANSIT_POI_CHANGETRANSIT_POI_CONTAINMENT_CHANGETRANSIT_SCHEDULE_CHANGETRANSIT_STATION_GEOMETRYUNKNOWNUNSPECIFIEDUSER_NAME_INAPPROPRIATEUSER_RESPONSE";
  qword_2602628 = (uint64_t)"BASE_MAP_ADMINISTRATIVE_AREABASE_MAP_AOIBASE_MAP_AUTOCOMPLETEBASE_MAP_BUILDINGBASE_MAP_CHANGE_LABELBASE_MAP_CITYBASE_MAP_COUNTRYBASE_MAP_CYCLINGBASE_MAP_DIRECTIONSBASE_MAP_LAND_USEBASE_MAP_LOCALITYBASE_MAP_OTHERBASE_MAP_RUNNING_TRACKBASE_MAP_SEARCHBASE_MAP_STOREFRONTBASE_MAP_STREETBASE_MAP_TRAILBASE_MAP_TRANSIT_DIRECTIONSBRAND_CHANGE_DETAILSBRAND_MERCHANT_LOOKUPBRAND_OTHERCARTOCLIENT_FEATURE_REQUESTCURATED_COLLECTIONS_CHANGE_DETAILSCURRENT_LOCATION_OTHERDATA_OTHERDIRECTIONSDIRECTIONS_OTHERDISPUTED_TERRITORIES_OTHERGROUND_VIEW_ADDRESS_CENSOR_REQUESTGROUND_VIEW_BASIC_CENSOR_REQUESTGROUND_VIEW_IMAGE_QUALITYGROUND_VIEW_OTHERGROUND_VIEW_UNVERIFIED_ADDRESS_CENSOR_REQUESTIMAGERYINSUFFICIENT_INFORMATIONMALFORMEDMANUALMAPS_APPMAPS_APP_OTHERMAPS_APP_SIRIMERCHANT_LOOKUP_NO_MATCHMERCHANT_LOOKUP_OTHERPEDESTRIANPOI_ADDPOI_ADD_DISPUTED_TERRITORYPOI_AUTOCOMPLETEPOI_CHANGE_DETAILSPOI_CHANGE_LABELPOI_CONTAINMENT_CHANGEPOI_CURATED_COLLECTIONSPOI_GROUND_VIEW_STOREFRONTPOI_MERCHANT_LOOKUPPOI_OTHERPOI_REMOVEPOI_SEARCHPOI_TEMPORARY_CLOSUREROAD_INTERSECTIONROAD_OTHERROAD_RESTRICTIONROAD_SPEED_LIMITSROUTINGROUTING_CORRECT_ETASATELLITE_OTHERSATELLITE_OUTDATEDSATELLITE_QUALITYSEARCH_OTHERSEARCH_RESULTS_OTHERSTREETTEMPORARY_PROBLEMTRAFFIC_OTHERTRANSIT_ADDTRANSIT_CHANGE_LABELTRANSIT_DIRECTIONSTRANSIT_DIRECTIONS_UNSUPPORTED_MARKETTRANSIT_LINE_CHANGETRANSIT_LINE_GEOMETRYTRANSIT_MARKET_REQUESTTRANSIT_OTHERTRANSIT_POI_CHANGETRANSIT_POI_CONTAINMENT_CHANGETRANSIT_SCHEDULE_CHANGETRANSIT_STATION_GEOMETRYUNKNOWNUNSPECIFIEDUSER_NAME_INAPPROPRIATEUSER_RESPONSE";
  unk_2602630 = 28;
  dword_26029F8 = 504;
  qword_26025F8 = (uint64_t)"BASE_MAP_ADDRESSBASE_MAP_ADD_STREETBASE_MAP_ADMINISTRATIVE_AREABASE_MAP_AOIBASE_MAP_AUTOCOMPLETEBASE_MAP_BUILDINGBASE_MAP_CHANGE_LABELBASE_MAP_CITYBASE_MAP_COUNTRYBASE_MAP_CYCLINGBASE_MAP_DIRECTIONSBASE_MAP_LAND_USEBASE_MAP_LOCALITYBASE_MAP_OTHERBASE_MAP_RUNNING_TRACKBASE_MAP_SEARCHBASE_MAP_STOREFRONTBASE_MAP_STREETBASE_MAP_TRAILBASE_MAP_TRANSIT_DIRECTIONSBRAND_CHANGE_DETAILSBRAND_MERCHANT_LOOKUPBRAND_OTHERCARTOCLIENT_FEATURE_REQUESTCURATED_COLLECTIONS_CHANGE_DETAILSCURRENT_LOCATION_OTHERDATA_OTHERDIRECTIONSDIRECTIONS_OTHERDISPUTED_TERRITORIES_OTHERGROUND_VIEW_ADDRESS_CENSOR_REQUESTGROUND_VIEW_BASIC_CENSOR_REQUESTGROUND_VIEW_IMAGE_QUALITYGROUND_VIEW_OTHERGROUND_VIEW_UNVERIFIED_ADDRESS_CENSOR_REQUESTIMAGERYINSUFFICIENT_INFORMATIONMALFORMEDMANUALMAPS_APPMAPS_APP_OTHERMAPS_APP_SIRIMERCHANT_LOOKUP_NO_MATCHMERCHANT_LOOKUP_OTHERPEDESTRIANPOI_ADDPOI_ADD_DISPUTED_TERRITORYPOI_AUTOCOMPLETEPOI_CHANGE_DETAILSPOI_CHANGE_LABELPOI_CONTAINMENT_CHANGEPOI_CURATED_COLLECTIONSPOI_GROUND_VIEW_STOREFRONTPOI_MERCHANT_LOOKUPPOI_OTHERPOI_REMOVEPOI_SEARCHPOI_TEMPORARY_CLOSUREROAD_INTERSECTIONROAD_OTHERROAD_RESTRICTIONROAD_SPEED_LIMITSROUTINGROUTING_CORRECT_ETASATELLITE_OTHERSATELLITE_OUTDATEDSATELLITE_QUALITYSEARCH_OTHERSEARCH_RESULTS_OTHERSTREETTEMPORARY_PROBLEMTRAFFIC_OTHERTRANSIT_ADDTRANSIT_CHANGE_LABELTRANSIT_DIRECTIONSTRANSIT_DIRECTIONS_UNSUPPORTED_MARKETTRANSIT_LINE_CHANGETRANSIT_LINE_GEOMETRYTRANSIT_MARKET_REQUESTTRANSIT_OTHERTRANSIT_POI_CHANGETRANSIT_POI_CONTAINMENT_CHANGETRANSIT_SCHEDULE_CHANGETRANSIT_STATION_GEOMETRYUNKNOWNUNSPECIFIEDUSER_NAME_INAPPROPRIATEUSER_RESPONSE";
  unk_2602600 = 16;
  qword_2602618 = 19;
  qword_2602A00 = (uint64_t)"MERCHANT_LOOKUP_NO_MATCHMERCHANT_LOOKUP_OTHERPEDESTRIANPOI_ADDPOI_ADD_DISPUTED_TERRITORYPOI_AUTOCOMPLETEPOI_CHANGE_DETAILSPOI_CHANGE_LABELPOI_CONTAINMENT_CHANGEPOI_CURATED_COLLECTIONSPOI_GROUND_VIEW_STOREFRONTPOI_MERCHANT_LOOKUPPOI_OTHERPOI_REMOVEPOI_SEARCHPOI_TEMPORARY_CLOSUREROAD_INTERSECTIONROAD_OTHERROAD_RESTRICTIONROAD_SPEED_LIMITSROUTINGROUTING_CORRECT_ETASATELLITE_OTHERSATELLITE_OUTDATEDSATELLITE_QUALITYSEARCH_OTHERSEARCH_RESULTS_OTHERSTREETTEMPORARY_PROBLEMTRAFFIC_OTHERTRANSIT_ADDTRANSIT_CHANGE_LABELTRANSIT_DIRECTIONSTRANSIT_DIRECTIONS_UNSUPPORTED_MARKETTRANSIT_LINE_CHANGETRANSIT_LINE_GEOMETRYTRANSIT_MARKET_REQUESTTRANSIT_OTHERTRANSIT_POI_CHANGETRANSIT_POI_CONTAINMENT_CHANGETRANSIT_SCHEDULE_CHANGETRANSIT_STATION_GEOMETRYUNKNOWNUNSPECIFIEDUSER_NAME_INAPPROPRIATEUSER_RESPONSE";
  qword_26025E0 = (uint64_t)"BASE_MAP_ADDBASE_MAP_ADDRESSBASE_MAP_ADD_STREETBASE_MAP_ADMINISTRATIVE_AREABASE_MAP_AOIBASE_MAP_AUTOCOMPLETEBASE_MAP_BUILDINGBASE_MAP_CHANGE_LABELBASE_MAP_CITYBASE_MAP_COUNTRYBASE_MAP_CYCLINGBASE_MAP_DIRECTIONSBASE_MAP_LAND_USEBASE_MAP_LOCALITYBASE_MAP_OTHERBASE_MAP_RUNNING_TRACKBASE_MAP_SEARCHBASE_MAP_STOREFRONTBASE_MAP_STREETBASE_MAP_TRAILBASE_MAP_TRANSIT_DIRECTIONSBRAND_CHANGE_DETAILSBRAND_MERCHANT_LOOKUPBRAND_OTHERCARTOCLIENT_FEATURE_REQUESTCURATED_COLLECTIONS_CHANGE_DETAILSCURRENT_LOCATION_OTHERDATA_OTHERDIRECTIONSDIRECTIONS_OTHERDISPUTED_TERRITORIES_OTHERGROUND_VIEW_ADDRESS_CENSOR_REQUESTGROUND_VIEW_BASIC_CENSOR_REQUESTGROUND_VIEW_IMAGE_QUALITYGROUND_VIEW_OTHERGROUND_VIEW_UNVERIFIED_ADDRESS_CENSOR_REQUESTIMAGERYINSUFFICIENT_INFORMATIONMALFORMEDMANUALMAPS_APPMAPS_APP_OTHERMAPS_APP_SIRIMERCHANT_LOOKUP_NO_MATCHMERCHANT_LOOKUP_OTHERPEDESTRIANPOI_ADDPOI_ADD_DISPUTED_TERRITORYPOI_AUTOCOMPLETEPOI_CHANGE_DETAILSPOI_CHANGE_LABELPOI_CONTAINMENT_CHANGEPOI_CURATED_COLLECTIONSPOI_GROUND_VIEW_STOREFRONTPOI_MERCHANT_LOOKUPPOI_OTHERPOI_REMOVEPOI_SEARCHPOI_TEMPORARY_CLOSUREROAD_INTERSECTIONROAD_OTHERROAD_RESTRICTIONROAD_SPEED_LIMITSROUTINGROUTING_CORRECT_ETASATELLITE_OTHERSATELLITE_OUTDATEDSATELLITE_QUALITYSEARCH_OTHERSEARCH_RESULTS_OTHERSTREETTEMPORARY_PROBLEMTRAFFIC_OTHERTRANSIT_ADDTRANSIT_CHANGE_LABELTRANSIT_DIRECTIONSTRANSIT_DIRECTIONS_UNSUPPORTED_MARKETTRANSIT_LINE_CHANGETRANSIT_LINE_GEOMETRYTRANSIT_MARKET_REQUESTTRANSIT_OTHERTRANSIT_POI_CHANGETRANSIT_POI_CONTAINMENT_CHANGETRANSIT_SCHEDULE_CHANGETRANSIT_STATION_GEOMETRYUNKNOWNUNSPECIFIEDUSER_NAME_INAPPROPRIATEUSER_RESPONSE";
  unk_26025E8 = 12;
  dword_2602A10 = 801;
  qword_2602A18 = (uint64_t)"MERCHANT_LOOKUP_OTHERPEDESTRIANPOI_ADDPOI_ADD_DISPUTED_TERRITORYPOI_AUTOCOMPLETEPOI_CHANGE_DETAILSPOI_CHANGE_LABELPOI_CONTAINMENT_CHANGEPOI_CURATED_COLLECTIONSPOI_GROUND_VIEW_STOREFRONTPOI_MERCHANT_LOOKUPPOI_OTHERPOI_REMOVEPOI_SEARCHPOI_TEMPORARY_CLOSUREROAD_INTERSECTIONROAD_OTHERROAD_RESTRICTIONROAD_SPEED_LIMITSROUTINGROUTING_CORRECT_ETASATELLITE_OTHERSATELLITE_OUTDATEDSATELLITE_QUALITYSEARCH_OTHERSEARCH_RESULTS_OTHERSTREETTEMPORARY_PROBLEMTRAFFIC_OTHERTRANSIT_ADDTRANSIT_CHANGE_LABELTRANSIT_DIRECTIONSTRANSIT_DIRECTIONS_UNSUPPORTED_MARKETTRANSIT_LINE_CHANGETRANSIT_LINE_GEOMETRYTRANSIT_MARKET_REQUESTTRANSIT_OTHERTRANSIT_POI_CHANGETRANSIT_POI_CONTAINMENT_CHANGETRANSIT_SCHEDULE_CHANGETRANSIT_STATION_GEOMETRYUNKNOWNUNSPECIFIEDUSER_NAME_INAPPROPRIATEUSER_RESPONSE";
  qword_26025C8 = (uint64_t)"BASE_MAPBASE_MAP_ADDBASE_MAP_ADDRESSBASE_MAP_ADD_STREETBASE_MAP_ADMINISTRATIVE_AREABASE_MAP_AOIBASE_MAP_AUTOCOMPLETEBASE_MAP_BUILDINGBASE_MAP_CHANGE_LABELBASE_MAP_CITYBASE_MAP_COUNTRYBASE_MAP_CYCLINGBASE_MAP_DIRECTIONSBASE_MAP_LAND_USEBASE_MAP_LOCALITYBASE_MAP_OTHERBASE_MAP_RUNNING_TRACKBASE_MAP_SEARCHBASE_MAP_STOREFRONTBASE_MAP_STREETBASE_MAP_TRAILBASE_MAP_TRANSIT_DIRECTIONSBRAND_CHANGE_DETAILSBRAND_MERCHANT_LOOKUPBRAND_OTHERCARTOCLIENT_FEATURE_REQUESTCURATED_COLLECTIONS_CHANGE_DETAILSCURRENT_LOCATION_OTHERDATA_OTHERDIRECTIONSDIRECTIONS_OTHERDISPUTED_TERRITORIES_OTHERGROUND_VIEW_ADDRESS_CENSOR_REQUESTGROUND_VIEW_BASIC_CENSOR_REQUESTGROUND_VIEW_IMAGE_QUALITYGROUND_VIEW_OTHERGROUND_VIEW_UNVERIFIED_ADDRESS_CENSOR_REQUESTIMAGERYINSUFFICIENT_INFORMATIONMALFORMEDMANUALMAPS_APPMAPS_APP_OTHERMAPS_APP_SIRIMERCHANT_LOOKUP_NO_MATCHMERCHANT_LOOKUP_OTHERPEDESTRIANPOI_ADDPOI_ADD_DISPUTED_TERRITORYPOI_AUTOCOMPLETEPOI_CHANGE_DETAILSPOI_CHANGE_LABELPOI_CONTAINMENT_CHANGEPOI_CURATED_COLLECTIONSPOI_GROUND_VIEW_STOREFRONTPOI_MERCHANT_LOOKUPPOI_OTHERPOI_REMOVEPOI_SEARCHPOI_TEMPORARY_CLOSUREROAD_INTERSECTIONROAD_OTHERROAD_RESTRICTIONROAD_SPEED_LIMITSROUTINGROUTING_CORRECT_ETASATELLITE_OTHERSATELLITE_OUTDATEDSATELLITE_QUALITYSEARCH_OTHERSEARCH_RESULTS_OTHERSTREETTEMPORARY_PROBLEMTRAFFIC_OTHERTRANSIT_ADDTRANSIT_CHANGE_LABELTRANSIT_DIRECTIONSTRANSIT_DIRECTIONS_UNSUPPORTED_MARKETTRANSIT_LINE_CHANGETRANSIT_LINE_GEOMETRYTRANSIT_MARKET_REQUESTTRANSIT_OTHERTRANSIT_POI_CHANGETRANSIT_POI_CONTAINMENT_CHANGETRANSIT_SCHEDULE_CHANGETRANSIT_STATION_GEOMETRYUNKNOWNUNSPECIFIEDUSER_NAME_INAPPROPRIATEUSER_RESPONSE";
  unk_26025D0 = 8;
  dword_2602A28 = 800;
  qword_26025B0 = (uint64_t)"APPLE_OTHERBASE_MAPBASE_MAP_ADDBASE_MAP_ADDRESSBASE_MAP_ADD_STREETBASE_MAP_ADMINISTRATIVE_AREABASE_MAP_AOIBASE_MAP_AUTOCOMPLETEBASE_MAP_BUILDINGBASE_MAP_CHANGE_LABELBASE_MAP_CITYBASE_MAP_COUNTRYBASE_MAP_CYCLINGBASE_MAP_DIRECTIONSBASE_MAP_LAND_USEBASE_MAP_LOCALITYBASE_MAP_OTHERBASE_MAP_RUNNING_TRACKBASE_MAP_SEARCHBASE_MAP_STOREFRONTBASE_MAP_STREETBASE_MAP_TRAILBASE_MAP_TRANSIT_DIRECTIONSBRAND_CHANGE_DETAILSBRAND_MERCHANT_LOOKUPBRAND_OTHERCARTOCLIENT_FEATURE_REQUESTCURATED_COLLECTIONS_CHANGE_DETAILSCURRENT_LOCATION_OTHERDATA_OTHERDIRECTIONSDIRECTIONS_OTHERDISPUTED_TERRITORIES_OTHERGROUND_VIEW_ADDRESS_CENSOR_REQUESTGROUND_VIEW_BASIC_CENSOR_REQUESTGROUND_VIEW_IMAGE_QUALITYGROUND_VIEW_OTHERGROUND_VIEW_UNVERIFIED_ADDRESS_CENSOR_REQUESTIMAGERYINSUFFICIENT_INFORMATIONMALFORMEDMANUALMAPS_APPMAPS_APP_OTHERMAPS_APP_SIRIMERCHANT_LOOKUP_NO_MATCHMERCHANT_LOOKUP_OTHERPEDESTRIANPOI_ADDPOI_ADD_DISPUTED_TERRITORYPOI_AUTOCOMPLETEPOI_CHANGE_DETAILSPOI_CHANGE_LABELPOI_CONTAINMENT_CHANGEPOI_CURATED_COLLECTIONSPOI_GROUND_VIEW_STOREFRONTPOI_MERCHANT_LOOKUPPOI_OTHERPOI_REMOVEPOI_SEARCHPOI_TEMPORARY_CLOSUREROAD_INTERSECTIONROAD_OTHERROAD_RESTRICTIONROAD_SPEED_LIMITSROUTINGROUTING_CORRECT_ETASATELLITE_OTHERSATELLITE_OUTDATEDSATELLITE_QUALITYSEARCH_OTHERSEARCH_RESULTS_OTHERSTREETTEMPORARY_PROBLEMTRAFFIC_OTHERTRANSIT_ADDTRANSIT_CHANGE_LABELTRANSIT_DIRECTIONSTRANSIT_DIRECTIONS_UNSUPPORTED_MARKETTRANSIT_LINE_CHANGETRANSIT_LINE_GEOMETRYTRANSIT_MARKET_REQUESTTRANSIT_OTHERTRANSIT_POI_CHANGETRANSIT_POI_CONTAINMENT_CHANGETRANSIT_SCHEDULE_CHANGETRANSIT_STATION_GEOMETRYUNKNOWNUNSPECIFIEDUSER_NAME_INAPPROPRIATEUSER_RESPONSE";
  unk_26025B8 = 11;
  qword_2602A30 = (uint64_t)"PEDESTRIANPOI_ADDPOI_ADD_DISPUTED_TERRITORYPOI_AUTOCOMPLETEPOI_CHANGE_DETAILSPOI_CHANGE_LABELPOI_CONTAINMENT_CHANGEPOI_CURATED_COLLECTIONSPOI_GROUND_VIEW_STOREFRONTPOI_MERCHANT_LOOKUPPOI_OTHERPOI_REMOVEPOI_SEARCHPOI_TEMPORARY_CLOSUREROAD_INTERSECTIONROAD_OTHERROAD_RESTRICTIONROAD_SPEED_LIMITSROUTINGROUTING_CORRECT_ETASATELLITE_OTHERSATELLITE_OUTDATEDSATELLITE_QUALITYSEARCH_OTHERSEARCH_RESULTS_OTHERSTREETTEMPORARY_PROBLEMTRAFFIC_OTHERTRANSIT_ADDTRANSIT_CHANGE_LABELTRANSIT_DIRECTIONSTRANSIT_DIRECTIONS_UNSUPPORTED_MARKETTRANSIT_LINE_CHANGETRANSIT_LINE_GEOMETRYTRANSIT_MARKET_REQUESTTRANSIT_OTHERTRANSIT_POI_CHANGETRANSIT_POI_CONTAINMENT_CHANGETRANSIT_SCHEDULE_CHANGETRANSIT_STATION_GEOMETRYUNKNOWNUNSPECIFIEDUSER_NAME_INAPPROPRIATEUSER_RESPONSE";
  dword_2602A40 = 603;
  qword_2602598 = (uint64_t)"ANALYTICS_ONLYAPPLE_OTHERBASE_MAPBASE_MAP_ADDBASE_MAP_ADDRESSBASE_MAP_ADD_STREETBASE_MAP_ADMI"
                           "NISTRATIVE_AREABASE_MAP_AOIBASE_MAP_AUTOCOMPLETEBASE_MAP_BUILDINGBASE_MAP_CHANGE_LABELBASE_MA"
                           "P_CITYBASE_MAP_COUNTRYBASE_MAP_CYCLINGBASE_MAP_DIRECTIONSBASE_MAP_LAND_USEBASE_MAP_LOCALITYBA"
                           "SE_MAP_OTHERBASE_MAP_RUNNING_TRACKBASE_MAP_SEARCHBASE_MAP_STOREFRONTBASE_MAP_STREETBASE_MAP_T"
                           "RAILBASE_MAP_TRANSIT_DIRECTIONSBRAND_CHANGE_DETAILSBRAND_MERCHANT_LOOKUPBRAND_OTHERCARTOCLIEN"
                           "T_FEATURE_REQUESTCURATED_COLLECTIONS_CHANGE_DETAILSCURRENT_LOCATION_OTHERDATA_OTHERDIRECTIONS"
                           "DIRECTIONS_OTHERDISPUTED_TERRITORIES_OTHERGROUND_VIEW_ADDRESS_CENSOR_REQUESTGROUND_VIEW_BASIC"
                           "_CENSOR_REQUESTGROUND_VIEW_IMAGE_QUALITYGROUND_VIEW_OTHERGROUND_VIEW_UNVERIFIED_ADDRESS_CENSO"
                           "R_REQUESTIMAGERYINSUFFICIENT_INFORMATIONMALFORMEDMANUALMAPS_APPMAPS_APP_OTHERMAPS_APP_SIRIMER"
                           "CHANT_LOOKUP_NO_MATCHMERCHANT_LOOKUP_OTHERPEDESTRIANPOI_ADDPOI_ADD_DISPUTED_TERRITORYPOI_AUTO"
                           "COMPLETEPOI_CHANGE_DETAILSPOI_CHANGE_LABELPOI_CONTAINMENT_CHANGEPOI_CURATED_COLLECTIONSPOI_GR"
                           "OUND_VIEW_STOREFRONTPOI_MERCHANT_LOOKUPPOI_OTHERPOI_REMOVEPOI_SEARCHPOI_TEMPORARY_CLOSUREROAD"
                           "_INTERSECTIONROAD_OTHERROAD_RESTRICTIONROAD_SPEED_LIMITSROUTINGROUTING_CORRECT_ETASATELLITE_O"
                           "THERSATELLITE_OUTDATEDSATELLITE_QUALITYSEARCH_OTHERSEARCH_RESULTS_OTHERSTREETTEMPORARY_PROBLE"
                           "MTRAFFIC_OTHERTRANSIT_ADDTRANSIT_CHANGE_LABELTRANSIT_DIRECTIONSTRANSIT_DIRECTIONS_UNSUPPORTED"
                           "_MARKETTRANSIT_LINE_CHANGETRANSIT_LINE_GEOMETRYTRANSIT_MARKET_REQUESTTRANSIT_OTHERTRANSIT_POI"
                           "_CHANGETRANSIT_POI_CONTAINMENT_CHANGETRANSIT_SCHEDULE_CHANGETRANSIT_STATION_GEOMETRYUNKNOWNUN"
                           "SPECIFIEDUSER_NAME_INAPPROPRIATEUSER_RESPONSE";
  unk_26025A0 = 14;
  qword_2602A48 = (uint64_t)"POI_ADDPOI_ADD_DISPUTED_TERRITORYPOI_AUTOCOMPLETEPOI_CHANGE_DETAILSPOI_CHANGE_LABELPOI_CONTAINMENT_CHANGEPOI_CURATED_COLLECTIONSPOI_GROUND_VIEW_STOREFRONTPOI_MERCHANT_LOOKUPPOI_OTHERPOI_REMOVEPOI_SEARCHPOI_TEMPORARY_CLOSUREROAD_INTERSECTIONROAD_OTHERROAD_RESTRICTIONROAD_SPEED_LIMITSROUTINGROUTING_CORRECT_ETASATELLITE_OTHERSATELLITE_OUTDATEDSATELLITE_QUALITYSEARCH_OTHERSEARCH_RESULTS_OTHERSTREETTEMPORARY_PROBLEMTRAFFIC_OTHERTRANSIT_ADDTRANSIT_CHANGE_LABELTRANSIT_DIRECTIONSTRANSIT_DIRECTIONS_UNSUPPORTED_MARKETTRANSIT_LINE_CHANGETRANSIT_LINE_GEOMETRYTRANSIT_MARKET_REQUESTTRANSIT_OTHERTRANSIT_POI_CHANGETRANSIT_POI_CONTAINMENT_CHANGETRANSIT_SCHEDULE_CHANGETRANSIT_STATION_GEOMETRYUNKNOWNUNSPECIFIEDUSER_NAME_INAPPROPRIATEUSER_RESPONSE";
  dword_2602A58 = 200;
  qword_2602A60 = (uint64_t)"POI_ADD_DISPUTED_TERRITORYPOI_AUTOCOMPLETEPOI_CHANGE_DETAILSPOI_CHANGE_LABELPOI_CONTAINMENT_CHANGEPOI_CURATED_COLLECTIONSPOI_GROUND_VIEW_STOREFRONTPOI_MERCHANT_LOOKUPPOI_OTHERPOI_REMOVEPOI_SEARCHPOI_TEMPORARY_CLOSUREROAD_INTERSECTIONROAD_OTHERROAD_RESTRICTIONROAD_SPEED_LIMITSROUTINGROUTING_CORRECT_ETASATELLITE_OTHERSATELLITE_OUTDATEDSATELLITE_QUALITYSEARCH_OTHERSEARCH_RESULTS_OTHERSTREETTEMPORARY_PROBLEMTRAFFIC_OTHERTRANSIT_ADDTRANSIT_CHANGE_LABELTRANSIT_DIRECTIONSTRANSIT_DIRECTIONS_UNSUPPORTED_MARKETTRANSIT_LINE_CHANGETRANSIT_LINE_GEOMETRYTRANSIT_MARKET_REQUESTTRANSIT_OTHERTRANSIT_POI_CHANGETRANSIT_POI_CONTAINMENT_CHANGETRANSIT_SCHEDULE_CHANGETRANSIT_STATION_GEOMETRYUNKNOWNUNSPECIFIEDUSER_NAME_INAPPROPRIATEUSER_RESPONSE";
  dword_2602A70 = 505;
  qword_2602A78 = (uint64_t)"POI_AUTOCOMPLETEPOI_CHANGE_DETAILSPOI_CHANGE_LABELPOI_CONTAINMENT_CHANGEPOI_CURATED_COLLECTIONSPOI_GROUND_VIEW_STOREFRONTPOI_MERCHANT_LOOKUPPOI_OTHERPOI_REMOVEPOI_SEARCHPOI_TEMPORARY_CLOSUREROAD_INTERSECTIONROAD_OTHERROAD_RESTRICTIONROAD_SPEED_LIMITSROUTINGROUTING_CORRECT_ETASATELLITE_OTHERSATELLITE_OUTDATEDSATELLITE_QUALITYSEARCH_OTHERSEARCH_RESULTS_OTHERSTREETTEMPORARY_PROBLEMTRAFFIC_OTHERTRANSIT_ADDTRANSIT_CHANGE_LABELTRANSIT_DIRECTIONSTRANSIT_DIRECTIONS_UNSUPPORTED_MARKETTRANSIT_LINE_CHANGETRANSIT_LINE_GEOMETRYTRANSIT_MARKET_REQUESTTRANSIT_OTHERTRANSIT_POI_CHANGETRANSIT_POI_CONTAINMENT_CHANGETRANSIT_SCHEDULE_CHANGETRANSIT_STATION_GEOMETRYUNKNOWNUNSPECIFIEDUSER_NAME_INAPPROPRIATEUSER_RESPONSE";
  qword_2602A90 = (uint64_t)"POI_CHANGE_DETAILSPOI_CHANGE_LABELPOI_CONTAINMENT_CHANGEPOI_CURATED_COLLECTIONSPOI_GROUND_VIEW_STOREFRONTPOI_MERCHANT_LOOKUPPOI_OTHERPOI_REMOVEPOI_SEARCHPOI_TEMPORARY_CLOSUREROAD_INTERSECTIONROAD_OTHERROAD_RESTRICTIONROAD_SPEED_LIMITSROUTINGROUTING_CORRECT_ETASATELLITE_OTHERSATELLITE_OUTDATEDSATELLITE_QUALITYSEARCH_OTHERSEARCH_RESULTS_OTHERSTREETTEMPORARY_PROBLEMTRAFFIC_OTHERTRANSIT_ADDTRANSIT_CHANGE_LABELTRANSIT_DIRECTIONSTRANSIT_DIRECTIONS_UNSUPPORTED_MARKETTRANSIT_LINE_CHANGETRANSIT_LINE_GEOMETRYTRANSIT_MARKET_REQUESTTRANSIT_OTHERTRANSIT_POI_CHANGETRANSIT_POI_CONTAINMENT_CHANGETRANSIT_SCHEDULE_CHANGETRANSIT_STATION_GEOMETRYUNKNOWNUNSPECIFIEDUSER_NAME_INAPPROPRIATEUSER_RESPONSE";
  qword_2602AA8 = (uint64_t)"POI_CHANGE_LABELPOI_CONTAINMENT_CHANGEPOI_CURATED_COLLECTIONSPOI_GROUND_VIEW_STOREFRONTPOI_MERCHANT_LOOKUPPOI_OTHERPOI_REMOVEPOI_SEARCHPOI_TEMPORARY_CLOSUREROAD_INTERSECTIONROAD_OTHERROAD_RESTRICTIONROAD_SPEED_LIMITSROUTINGROUTING_CORRECT_ETASATELLITE_OTHERSATELLITE_OUTDATEDSATELLITE_QUALITYSEARCH_OTHERSEARCH_RESULTS_OTHERSTREETTEMPORARY_PROBLEMTRAFFIC_OTHERTRANSIT_ADDTRANSIT_CHANGE_LABELTRANSIT_DIRECTIONSTRANSIT_DIRECTIONS_UNSUPPORTED_MARKETTRANSIT_LINE_CHANGETRANSIT_LINE_GEOMETRYTRANSIT_MARKET_REQUESTTRANSIT_OTHERTRANSIT_POI_CHANGETRANSIT_POI_CONTAINMENT_CHANGETRANSIT_SCHEDULE_CHANGETRANSIT_STATION_GEOMETRYUNKNOWNUNSPECIFIEDUSER_NAME_INAPPROPRIATEUSER_RESPONSE";
  qword_2602AC0 = (uint64_t)"POI_CONTAINMENT_CHANGEPOI_CURATED_COLLECTIONSPOI_GROUND_VIEW_STOREFRONTPOI_MERCHANT_LOOKUPPOI_OTHERPOI_REMOVEPOI_SEARCHPOI_TEMPORARY_CLOSUREROAD_INTERSECTIONROAD_OTHERROAD_RESTRICTIONROAD_SPEED_LIMITSROUTINGROUTING_CORRECT_ETASATELLITE_OTHERSATELLITE_OUTDATEDSATELLITE_QUALITYSEARCH_OTHERSEARCH_RESULTS_OTHERSTREETTEMPORARY_PROBLEMTRAFFIC_OTHERTRANSIT_ADDTRANSIT_CHANGE_LABELTRANSIT_DIRECTIONSTRANSIT_DIRECTIONS_UNSUPPORTED_MARKETTRANSIT_LINE_CHANGETRANSIT_LINE_GEOMETRYTRANSIT_MARKET_REQUESTTRANSIT_OTHERTRANSIT_POI_CHANGETRANSIT_POI_CONTAINMENT_CHANGETRANSIT_SCHEDULE_CHANGETRANSIT_STATION_GEOMETRYUNKNOWNUNSPECIFIEDUSER_NAME_INAPPROPRIATEUSER_RESPONSE";
  qword_2602AD8 = (uint64_t)"POI_CURATED_COLLECTIONSPOI_GROUND_VIEW_STOREFRONTPOI_MERCHANT_LOOKUPPOI_OTHERPOI_REMOVEPOI_SEARCHPOI_TEMPORARY_CLOSUREROAD_INTERSECTIONROAD_OTHERROAD_RESTRICTIONROAD_SPEED_LIMITSROUTINGROUTING_CORRECT_ETASATELLITE_OTHERSATELLITE_OUTDATEDSATELLITE_QUALITYSEARCH_OTHERSEARCH_RESULTS_OTHERSTREETTEMPORARY_PROBLEMTRAFFIC_OTHERTRANSIT_ADDTRANSIT_CHANGE_LABELTRANSIT_DIRECTIONSTRANSIT_DIRECTIONS_UNSUPPORTED_MARKETTRANSIT_LINE_CHANGETRANSIT_LINE_GEOMETRYTRANSIT_MARKET_REQUESTTRANSIT_OTHERTRANSIT_POI_CHANGETRANSIT_POI_CONTAINMENT_CHANGETRANSIT_SCHEDULE_CHANGETRANSIT_STATION_GEOMETRYUNKNOWNUNSPECIFIEDUSER_NAME_INAPPROPRIATEUSER_RESPONSE";
  qword_2602AF0 = (uint64_t)"POI_GROUND_VIEW_STOREFRONTPOI_MERCHANT_LOOKUPPOI_OTHERPOI_REMOVEPOI_SEARCHPOI_TEMPORARY_CLOSUREROAD_INTERSECTIONROAD_OTHERROAD_RESTRICTIONROAD_SPEED_LIMITSROUTINGROUTING_CORRECT_ETASATELLITE_OTHERSATELLITE_OUTDATEDSATELLITE_QUALITYSEARCH_OTHERSEARCH_RESULTS_OTHERSTREETTEMPORARY_PROBLEMTRAFFIC_OTHERTRANSIT_ADDTRANSIT_CHANGE_LABELTRANSIT_DIRECTIONSTRANSIT_DIRECTIONS_UNSUPPORTED_MARKETTRANSIT_LINE_CHANGETRANSIT_LINE_GEOMETRYTRANSIT_MARKET_REQUESTTRANSIT_OTHERTRANSIT_POI_CHANGETRANSIT_POI_CONTAINMENT_CHANGETRANSIT_SCHEDULE_CHANGETRANSIT_STATION_GEOMETRYUNKNOWNUNSPECIFIEDUSER_NAME_INAPPROPRIATEUSER_RESPONSE";
  qword_2602B08 = (uint64_t)"POI_MERCHANT_LOOKUPPOI_OTHERPOI_REMOVEPOI_SEARCHPOI_TEMPORARY_CLOSUREROAD_INTERSECTIONROAD_OTHERROAD_RESTRICTIONROAD_SPEED_LIMITSROUTINGROUTING_CORRECT_ETASATELLITE_OTHERSATELLITE_OUTDATEDSATELLITE_QUALITYSEARCH_OTHERSEARCH_RESULTS_OTHERSTREETTEMPORARY_PROBLEMTRAFFIC_OTHERTRANSIT_ADDTRANSIT_CHANGE_LABELTRANSIT_DIRECTIONSTRANSIT_DIRECTIONS_UNSUPPORTED_MARKETTRANSIT_LINE_CHANGETRANSIT_LINE_GEOMETRYTRANSIT_MARKET_REQUESTTRANSIT_OTHERTRANSIT_POI_CHANGETRANSIT_POI_CONTAINMENT_CHANGETRANSIT_SCHEDULE_CHANGETRANSIT_STATION_GEOMETRYUNKNOWNUNSPECIFIEDUSER_NAME_INAPPROPRIATEUSER_RESPONSE";
  qword_2602B20 = (uint64_t)"POI_OTHERPOI_REMOVEPOI_SEARCHPOI_TEMPORARY_CLOSUREROAD_INTERSECTIONROAD_OTHERROAD_RESTRICTIONROAD_SPEED_LIMITSROUTINGROUTING_CORRECT_ETASATELLITE_OTHERSATELLITE_OUTDATEDSATELLITE_QUALITYSEARCH_OTHERSEARCH_RESULTS_OTHERSTREETTEMPORARY_PROBLEMTRAFFIC_OTHERTRANSIT_ADDTRANSIT_CHANGE_LABELTRANSIT_DIRECTIONSTRANSIT_DIRECTIONS_UNSUPPORTED_MARKETTRANSIT_LINE_CHANGETRANSIT_LINE_GEOMETRYTRANSIT_MARKET_REQUESTTRANSIT_OTHERTRANSIT_POI_CHANGETRANSIT_POI_CONTAINMENT_CHANGETRANSIT_SCHEDULE_CHANGETRANSIT_STATION_GEOMETRYUNKNOWNUNSPECIFIEDUSER_NAME_INAPPROPRIATEUSER_RESPONSE";
  qword_2602B38 = (uint64_t)"POI_REMOVEPOI_SEARCHPOI_TEMPORARY_CLOSUREROAD_INTERSECTIONROAD_OTHERROAD_RESTRICTIONROAD_SPEED_LIMITSROUTINGROUTING_CORRECT_ETASATELLITE_OTHERSATELLITE_OUTDATEDSATELLITE_QUALITYSEARCH_OTHERSEARCH_RESULTS_OTHERSTREETTEMPORARY_PROBLEMTRAFFIC_OTHERTRANSIT_ADDTRANSIT_CHANGE_LABELTRANSIT_DIRECTIONSTRANSIT_DIRECTIONS_UNSUPPORTED_MARKETTRANSIT_LINE_CHANGETRANSIT_LINE_GEOMETRYTRANSIT_MARKET_REQUESTTRANSIT_OTHERTRANSIT_POI_CHANGETRANSIT_POI_CONTAINMENT_CHANGETRANSIT_SCHEDULE_CHANGETRANSIT_STATION_GEOMETRYUNKNOWNUNSPECIFIEDUSER_NAME_INAPPROPRIATEUSER_RESPONSE";
  qword_2602B50 = (uint64_t)"POI_SEARCHPOI_TEMPORARY_CLOSUREROAD_INTERSECTIONROAD_OTHERROAD_RESTRICTIONROAD_SPEED_LIMITSROUTINGROUTING_CORRECT_ETASATELLITE_OTHERSATELLITE_OUTDATEDSATELLITE_QUALITYSEARCH_OTHERSEARCH_RESULTS_OTHERSTREETTEMPORARY_PROBLEMTRAFFIC_OTHERTRANSIT_ADDTRANSIT_CHANGE_LABELTRANSIT_DIRECTIONSTRANSIT_DIRECTIONS_UNSUPPORTED_MARKETTRANSIT_LINE_CHANGETRANSIT_LINE_GEOMETRYTRANSIT_MARKET_REQUESTTRANSIT_OTHERTRANSIT_POI_CHANGETRANSIT_POI_CONTAINMENT_CHANGETRANSIT_SCHEDULE_CHANGETRANSIT_STATION_GEOMETRYUNKNOWNUNSPECIFIEDUSER_NAME_INAPPROPRIATEUSER_RESPONSE";
  dword_2602B60 = 205;
  qword_2602B68 = (uint64_t)"POI_TEMPORARY_CLOSUREROAD_INTERSECTIONROAD_OTHERROAD_RESTRICTIONROAD_SPEED_LIMITSROUTINGROUTING_CORRECT_ETASATELLITE_OTHERSATELLITE_OUTDATEDSATELLITE_QUALITYSEARCH_OTHERSEARCH_RESULTS_OTHERSTREETTEMPORARY_PROBLEMTRAFFIC_OTHERTRANSIT_ADDTRANSIT_CHANGE_LABELTRANSIT_DIRECTIONSTRANSIT_DIRECTIONS_UNSUPPORTED_MARKETTRANSIT_LINE_CHANGETRANSIT_LINE_GEOMETRYTRANSIT_MARKET_REQUESTTRANSIT_OTHERTRANSIT_POI_CHANGETRANSIT_POI_CONTAINMENT_CHANGETRANSIT_SCHEDULE_CHANGETRANSIT_STATION_GEOMETRYUNKNOWNUNSPECIFIEDUSER_NAME_INAPPROPRIATEUSER_RESPONSE";
  qword_2602B80 = (uint64_t)"ROAD_INTERSECTIONROAD_OTHERROAD_RESTRICTIONROAD_SPEED_LIMITSROUTINGROUTING_CORRECT_ETASATELLITE_OTHERSATELLITE_OUTDATEDSATELLITE_QUALITYSEARCH_OTHERSEARCH_RESULTS_OTHERSTREETTEMPORARY_PROBLEMTRAFFIC_OTHERTRANSIT_ADDTRANSIT_CHANGE_LABELTRANSIT_DIRECTIONSTRANSIT_DIRECTIONS_UNSUPPORTED_MARKETTRANSIT_LINE_CHANGETRANSIT_LINE_GEOMETRYTRANSIT_MARKET_REQUESTTRANSIT_OTHERTRANSIT_POI_CHANGETRANSIT_POI_CONTAINMENT_CHANGETRANSIT_SCHEDULE_CHANGETRANSIT_STATION_GEOMETRYUNKNOWNUNSPECIFIEDUSER_NAME_INAPPROPRIATEUSER_RESPONSE";
  dword_2602B90 = 117;
  qword_2602B98 = (uint64_t)"ROAD_OTHERROAD_RESTRICTIONROAD_SPEED_LIMITSROUTINGROUTING_CORRECT_ETASATELLITE_OTHERSATELLITE_OUTDATEDSATELLITE_QUALITYSEARCH_OTHERSEARCH_RESULTS_OTHERSTREETTEMPORARY_PROBLEMTRAFFIC_OTHERTRANSIT_ADDTRANSIT_CHANGE_LABELTRANSIT_DIRECTIONSTRANSIT_DIRECTIONS_UNSUPPORTED_MARKETTRANSIT_LINE_CHANGETRANSIT_LINE_GEOMETRYTRANSIT_MARKET_REQUESTTRANSIT_OTHERTRANSIT_POI_CHANGETRANSIT_POI_CONTAINMENT_CHANGETRANSIT_SCHEDULE_CHANGETRANSIT_STATION_GEOMETRYUNKNOWNUNSPECIFIEDUSER_NAME_INAPPROPRIATEUSER_RESPONSE";
  dword_2602BA8 = 118;
  qword_2602BB0 = (uint64_t)"ROAD_RESTRICTIONROAD_SPEED_LIMITSROUTINGROUTING_CORRECT_ETASATELLITE_OTHERSATELLITE_OUTDATEDSATELLITE_QUALITYSEARCH_OTHERSEARCH_RESULTS_OTHERSTREETTEMPORARY_PROBLEMTRAFFIC_OTHERTRANSIT_ADDTRANSIT_CHANGE_LABELTRANSIT_DIRECTIONSTRANSIT_DIRECTIONS_UNSUPPORTED_MARKETTRANSIT_LINE_CHANGETRANSIT_LINE_GEOMETRYTRANSIT_MARKET_REQUESTTRANSIT_OTHERTRANSIT_POI_CHANGETRANSIT_POI_CONTAINMENT_CHANGETRANSIT_SCHEDULE_CHANGETRANSIT_STATION_GEOMETRYUNKNOWNUNSPECIFIEDUSER_NAME_INAPPROPRIATEUSER_RESPONSE";
  dword_2602BC0 = 119;
  qword_2602BC8 = (uint64_t)"ROAD_SPEED_LIMITSROUTINGROUTING_CORRECT_ETASATELLITE_OTHERSATELLITE_OUTDATEDSATELLITE_QUALITYSEARCH_OTHERSEARCH_RESULTS_OTHERSTREETTEMPORARY_PROBLEMTRAFFIC_OTHERTRANSIT_ADDTRANSIT_CHANGE_LABELTRANSIT_DIRECTIONSTRANSIT_DIRECTIONS_UNSUPPORTED_MARKETTRANSIT_LINE_CHANGETRANSIT_LINE_GEOMETRYTRANSIT_MARKET_REQUESTTRANSIT_OTHERTRANSIT_POI_CHANGETRANSIT_POI_CONTAINMENT_CHANGETRANSIT_SCHEDULE_CHANGETRANSIT_STATION_GEOMETRYUNKNOWNUNSPECIFIEDUSER_NAME_INAPPROPRIATEUSER_RESPONSE";
  dword_2602BD8 = 120;
  qword_2602BE0 = (uint64_t)"ROUTINGROUTING_CORRECT_ETASATELLITE_OTHERSATELLITE_OUTDATEDSATELLITE_QUALITYSEARCH_OTHERSEARCH_RESULTS_OTHERSTREETTEMPORARY_PROBLEMTRAFFIC_OTHERTRANSIT_ADDTRANSIT_CHANGE_LABELTRANSIT_DIRECTIONSTRANSIT_DIRECTIONS_UNSUPPORTED_MARKETTRANSIT_LINE_CHANGETRANSIT_LINE_GEOMETRYTRANSIT_MARKET_REQUESTTRANSIT_OTHERTRANSIT_POI_CHANGETRANSIT_POI_CONTAINMENT_CHANGETRANSIT_SCHEDULE_CHANGETRANSIT_STATION_GEOMETRYUNKNOWNUNSPECIFIEDUSER_NAME_INAPPROPRIATEUSER_RESPONSE";
  dword_2602BF0 = 901;
  qword_2602BF8 = (uint64_t)"ROUTING_CORRECT_ETASATELLITE_OTHERSATELLITE_OUTDATEDSATELLITE_QUALITYSEARCH_OTHERSEARCH_RESULTS_OTHERSTREETTEMPORARY_PROBLEMTRAFFIC_OTHERTRANSIT_ADDTRANSIT_CHANGE_LABELTRANSIT_DIRECTIONSTRANSIT_DIRECTIONS_UNSUPPORTED_MARKETTRANSIT_LINE_CHANGETRANSIT_LINE_GEOMETRYTRANSIT_MARKET_REQUESTTRANSIT_OTHERTRANSIT_POI_CHANGETRANSIT_POI_CONTAINMENT_CHANGETRANSIT_SCHEDULE_CHANGETRANSIT_STATION_GEOMETRYUNKNOWNUNSPECIFIEDUSER_NAME_INAPPROPRIATEUSER_RESPONSE";
  dword_2602C08 = 506;
  qword_2602C10 = (uint64_t)"SATELLITE_OTHERSATELLITE_OUTDATEDSATELLITE_QUALITYSEARCH_OTHERSEARCH_RESULTS_OTHERSTREETTEMPORARY_PROBLEMTRAFFIC_OTHERTRANSIT_ADDTRANSIT_CHANGE_LABELTRANSIT_DIRECTIONSTRANSIT_DIRECTIONS_UNSUPPORTED_MARKETTRANSIT_LINE_CHANGETRANSIT_LINE_GEOMETRYTRANSIT_MARKET_REQUESTTRANSIT_OTHERTRANSIT_POI_CHANGETRANSIT_POI_CONTAINMENT_CHANGETRANSIT_SCHEDULE_CHANGETRANSIT_STATION_GEOMETRYUNKNOWNUNSPECIFIEDUSER_NAME_INAPPROPRIATEUSER_RESPONSE";
  dword_2602C20 = 300;
  qword_2602C28 = (uint64_t)"SATELLITE_OUTDATEDSATELLITE_QUALITYSEARCH_OTHERSEARCH_RESULTS_OTHERSTREETTEMPORARY_PROBLEMTRAFFIC_OTHERTRANSIT_ADDTRANSIT_CHANGE_LABELTRANSIT_DIRECTIONSTRANSIT_DIRECTIONS_UNSUPPORTED_MARKETTRANSIT_LINE_CHANGETRANSIT_LINE_GEOMETRYTRANSIT_MARKET_REQUESTTRANSIT_OTHERTRANSIT_POI_CHANGETRANSIT_POI_CONTAINMENT_CHANGETRANSIT_SCHEDULE_CHANGETRANSIT_STATION_GEOMETRYUNKNOWNUNSPECIFIEDUSER_NAME_INAPPROPRIATEUSER_RESPONSE";
  dword_2602C38 = 301;
  qword_2602C40 = (uint64_t)"SATELLITE_QUALITYSEARCH_OTHERSEARCH_RESULTS_OTHERSTREETTEMPORARY_PROBLEMTRAFFIC_OTHERTRANSIT_ADDTRANSIT_CHANGE_LABELTRANSIT_DIRECTIONSTRANSIT_DIRECTIONS_UNSUPPORTED_MARKETTRANSIT_LINE_CHANGETRANSIT_LINE_GEOMETRYTRANSIT_MARKET_REQUESTTRANSIT_OTHERTRANSIT_POI_CHANGETRANSIT_POI_CONTAINMENT_CHANGETRANSIT_SCHEDULE_CHANGETRANSIT_STATION_GEOMETRYUNKNOWNUNSPECIFIEDUSER_NAME_INAPPROPRIATEUSER_RESPONSE";
  dword_2602C50 = 302;
  qword_2602C58 = (uint64_t)"SEARCH_OTHERSEARCH_RESULTS_OTHERSTREETTEMPORARY_PROBLEMTRAFFIC_OTHERTRANSIT_ADDTRANSIT_CHANGE_LABELTRANSIT_DIRECTIONSTRANSIT_DIRECTIONS_UNSUPPORTED_MARKETTRANSIT_LINE_CHANGETRANSIT_LINE_GEOMETRYTRANSIT_MARKET_REQUESTTRANSIT_OTHERTRANSIT_POI_CHANGETRANSIT_POI_CONTAINMENT_CHANGETRANSIT_SCHEDULE_CHANGETRANSIT_STATION_GEOMETRYUNKNOWNUNSPECIFIEDUSER_NAME_INAPPROPRIATEUSER_RESPONSE";
  dword_2602C68 = 612;
  qword_2602C70 = (uint64_t)"SEARCH_RESULTS_OTHERSTREETTEMPORARY_PROBLEMTRAFFIC_OTHERTRANSIT_ADDTRANSIT_CHANGE_LABELTRANSIT_DIRECTIONSTRANSIT_DIRECTIONS_UNSUPPORTED_MARKETTRANSIT_LINE_CHANGETRANSIT_LINE_GEOMETRYTRANSIT_MARKET_REQUESTTRANSIT_OTHERTRANSIT_POI_CHANGETRANSIT_POI_CONTAINMENT_CHANGETRANSIT_SCHEDULE_CHANGETRANSIT_STATION_GEOMETRYUNKNOWNUNSPECIFIEDUSER_NAME_INAPPROPRIATEUSER_RESPONSE";
  dword_2602C80 = 507;
  qword_2602C88 = (uint64_t)"STREETTEMPORARY_PROBLEMTRAFFIC_OTHERTRANSIT_ADDTRANSIT_CHANGE_LABELTRANSIT_DIRECTIONSTRANSIT_DIRECTIONS_UNSUPPORTED_MARKETTRANSIT_LINE_CHANGETRANSIT_LINE_GEOMETRYTRANSIT_MARKET_REQUESTTRANSIT_OTHERTRANSIT_POI_CHANGETRANSIT_POI_CONTAINMENT_CHANGETRANSIT_SCHEDULE_CHANGETRANSIT_STATION_GEOMETRYUNKNOWNUNSPECIFIEDUSER_NAME_INAPPROPRIATEUSER_RESPONSE";
  dword_2602C98 = 602;
  qword_2602CA0 = (uint64_t)"TEMPORARY_PROBLEMTRAFFIC_OTHERTRANSIT_ADDTRANSIT_CHANGE_LABELTRANSIT_DIRECTIONSTRANSIT_DIRECTIONS_UNSUPPORTED_MARKETTRANSIT_LINE_CHANGETRANSIT_LINE_GEOMETRYTRANSIT_MARKET_REQUESTTRANSIT_OTHERTRANSIT_POI_CHANGETRANSIT_POI_CONTAINMENT_CHANGETRANSIT_SCHEDULE_CHANGETRANSIT_STATION_GEOMETRYUNKNOWNUNSPECIFIEDUSER_NAME_INAPPROPRIATEUSER_RESPONSE";
  dword_2602CB0 = 508;
  qword_2602CB8 = (uint64_t)"TRAFFIC_OTHERTRANSIT_ADDTRANSIT_CHANGE_LABELTRANSIT_DIRECTIONSTRANSIT_DIRECTIONS_UNSUPPORTED_MARKETTRANSIT_LINE_CHANGETRANSIT_LINE_GEOMETRYTRANSIT_MARKET_REQUESTTRANSIT_OTHERTRANSIT_POI_CHANGETRANSIT_POI_CONTAINMENT_CHANGETRANSIT_SCHEDULE_CHANGETRANSIT_STATION_GEOMETRYUNKNOWNUNSPECIFIEDUSER_NAME_INAPPROPRIATEUSER_RESPONSE";
  dword_2602CC8 = 509;
  qword_2602CD0 = (uint64_t)"TRANSIT_ADDTRANSIT_CHANGE_LABELTRANSIT_DIRECTIONSTRANSIT_DIRECTIONS_UNSUPPORTED_MARKETTRANSIT_LINE_CHANGETRANSIT_LINE_GEOMETRYTRANSIT_MARKET_REQUESTTRANSIT_OTHERTRANSIT_POI_CHANGETRANSIT_POI_CONTAINMENT_CHANGETRANSIT_SCHEDULE_CHANGETRANSIT_STATION_GEOMETRYUNKNOWNUNSPECIFIEDUSER_NAME_INAPPROPRIATEUSER_RESPONSE";
  dword_2602CE0 = 406;
  qword_2602CE8 = (uint64_t)"TRANSIT_CHANGE_LABELTRANSIT_DIRECTIONSTRANSIT_DIRECTIONS_UNSUPPORTED_MARKETTRANSIT_LINE_CHANGETRANSIT_LINE_GEOMETRYTRANSIT_MARKET_REQUESTTRANSIT_OTHERTRANSIT_POI_CHANGETRANSIT_POI_CONTAINMENT_CHANGETRANSIT_SCHEDULE_CHANGETRANSIT_STATION_GEOMETRYUNKNOWNUNSPECIFIEDUSER_NAME_INAPPROPRIATEUSER_RESPONSE";
  dword_2602CF8 = 400;
  qword_2602D00 = (uint64_t)"TRANSIT_DIRECTIONSTRANSIT_DIRECTIONS_UNSUPPORTED_MARKETTRANSIT_LINE_CHANGETRANSIT_LINE_GEOMETRYTRANSIT_MARKET_REQUESTTRANSIT_OTHERTRANSIT_POI_CHANGETRANSIT_POI_CONTAINMENT_CHANGETRANSIT_SCHEDULE_CHANGETRANSIT_STATION_GEOMETRYUNKNOWNUNSPECIFIEDUSER_NAME_INAPPROPRIATEUSER_RESPONSE";
  dword_2602D10 = 401;
  qword_2602D18 = (uint64_t)"TRANSIT_DIRECTIONS_UNSUPPORTED_MARKETTRANSIT_LINE_CHANGETRANSIT_LINE_GEOMETRYTRANSIT_MARKET_REQUESTTRANSIT_OTHERTRANSIT_POI_CHANGETRANSIT_POI_CONTAINMENT_CHANGETRANSIT_SCHEDULE_CHANGETRANSIT_STATION_GEOMETRYUNKNOWNUNSPECIFIEDUSER_NAME_INAPPROPRIATEUSER_RESPONSE";
  dword_2602D28 = 510;
  qword_2602D30 = (uint64_t)"TRANSIT_LINE_CHANGETRANSIT_LINE_GEOMETRYTRANSIT_MARKET_REQUESTTRANSIT_OTHERTRANSIT_POI_CHANGETRANSIT_POI_CONTAINMENT_CHANGETRANSIT_SCHEDULE_CHANGETRANSIT_STATION_GEOMETRYUNKNOWNUNSPECIFIEDUSER_NAME_INAPPROPRIATEUSER_RESPONSE";
  dword_2602D40 = 402;
  qword_2602D48 = (uint64_t)"TRANSIT_LINE_GEOMETRYTRANSIT_MARKET_REQUESTTRANSIT_OTHERTRANSIT_POI_CHANGETRANSIT_POI_CONTAINMENT_CHANGETRANSIT_SCHEDULE_CHANGETRANSIT_STATION_GEOMETRYUNKNOWNUNSPECIFIEDUSER_NAME_INAPPROPRIATEUSER_RESPONSE";
  dword_2602D58 = 604;
  qword_2602D60 = (uint64_t)"TRANSIT_MARKET_REQUESTTRANSIT_OTHERTRANSIT_POI_CHANGETRANSIT_POI_CONTAINMENT_CHANGETRANSIT_SCHEDULE_CHANGETRANSIT_STATION_GEOMETRYUNKNOWNUNSPECIFIEDUSER_NAME_INAPPROPRIATEUSER_RESPONSE";
  dword_2602D70 = 609;
  qword_2602D78 = (uint64_t)"TRANSIT_OTHERTRANSIT_POI_CHANGETRANSIT_POI_CONTAINMENT_CHANGETRANSIT_SCHEDULE_CHANGETRANSIT_STATION_GEOMETRYUNKNOWNUNSPECIFIEDUSER_NAME_INAPPROPRIATEUSER_RESPONSE";
  dword_2602D88 = 606;
  qword_2602D90 = (uint64_t)"TRANSIT_POI_CHANGETRANSIT_POI_CONTAINMENT_CHANGETRANSIT_SCHEDULE_CHANGETRANSIT_STATION_GEOMETRYUNKNOWNUNSPECIFIEDUSER_NAME_INAPPROPRIATEUSER_RESPONSE";
  dword_2602DA0 = 403;
  qword_2602DA8 = (uint64_t)"TRANSIT_POI_CONTAINMENT_CHANGETRANSIT_SCHEDULE_CHANGETRANSIT_STATION_GEOMETRYUNKNOWNUNSPECIFIEDUSER_NAME_INAPPROPRIATEUSER_RESPONSE";
  dword_2602DB8 = 405;
  qword_2602DC0 = (uint64_t)"TRANSIT_SCHEDULE_CHANGETRANSIT_STATION_GEOMETRYUNKNOWNUNSPECIFIEDUSER_NAME_INAPPROPRIATEUSER_RESPONSE";
  dword_2602DD0 = 404;
  qword_2602DD8 = (uint64_t)"TRANSIT_STATION_GEOMETRYUNKNOWNUNSPECIFIEDUSER_NAME_INAPPROPRIATEUSER_RESPONSE";
  dword_2602DE8 = 605;
  qword_2602DF0 = (uint64_t)"UNKNOWNUNSPECIFIEDUSER_NAME_INAPPROPRIATEUSER_RESPONSE";
  qword_2602E08 = (uint64_t)"UNSPECIFIEDUSER_NAME_INAPPROPRIATEUSER_RESPONSE";
  dword_2602E18 = 613;
  qword_2602E20 = (uint64_t)"USER_NAME_INAPPROPRIATEUSER_RESPONSE";
  qword_2602E38 = (uint64_t)"USER_RESPONSE";
  qword_2602960 = 7;
  qword_2602978 = 24;
  dword_2602980 = 2;
  qword_2602990 = 9;
  dword_2602998 = 1;
  qword_26029A8 = 6;
  qword_26029C0 = 8;
  qword_26029D8 = 14;
  qword_26029F0 = 13;
  qword_2602A08 = 24;
  qword_2602A20 = 21;
  qword_2602A38 = 10;
  qword_2602A50 = 7;
  qword_2602A68 = 26;
  qword_2602A80 = 16;
  dword_2602A88 = 201;
  qword_2602A98 = 18;
  dword_2602AA0 = 202;
  qword_2602AB0 = 16;
  dword_2602AB8 = 203;
  qword_2602AC8 = 22;
  dword_2602AD0 = 210;
  qword_2602AE0 = 23;
  dword_2602AE8 = 211;
  qword_2602AF8 = 26;
  dword_2602B00 = 208;
  qword_2602B10 = 19;
  dword_2602B18 = 209;
  qword_2602B28 = 9;
  dword_2602B30 = 207;
  qword_2602B40 = 10;
  dword_2602B48 = 204;
  qword_2602B58 = 10;
  qword_2602B70 = 21;
  dword_2602B78 = 206;
  qword_2602B88 = 17;
  qword_2602BA0 = 10;
  qword_2602BB8 = 16;
  qword_2602BD0 = 17;
  qword_2602BE8 = 7;
  qword_2602C00 = 19;
  qword_2602C18 = 15;
  qword_2602C30 = 18;
  qword_2602C48 = 17;
  qword_2602C60 = 12;
  qword_2602C78 = 20;
  qword_2602C90 = 6;
  qword_2602CA8 = 17;
  qword_2602CC0 = 13;
  qword_2602CD8 = 11;
  qword_2602CF0 = 20;
  qword_2602D08 = 18;
  qword_2602D20 = 37;
  qword_2602D38 = 19;
  qword_2602D50 = 21;
  qword_2602D68 = 22;
  qword_2602D80 = 13;
  qword_2602D98 = 18;
  qword_2602DB0 = 30;
  qword_2602DC8 = 23;
  qword_2602DE0 = 24;
  qword_2602DF8 = 7;
  dword_2602E00 = 0;
  qword_2602E10 = 11;
  qword_2602E28 = 23;
  dword_2602E30 = 10;
  qword_2602E40 = 13;
  dword_2602E48 = 1001;
  qword_2602E68 = (uint64_t)"MANUALUNKNOWN";
  unk_2602E70 = 6;
  qword_2602E80 = (uint64_t)"UNKNOWN";
  unk_2602E88 = 7;
  qword_2602E50 = (uint64_t)"AUTOMANUALUNKNOWN";
  *(void *)algn_2602E58 = 4;
  dword_2602E60 = 1;
  dword_2602E78 = 2;
  dword_2602E90 = 0;
  dword_2602EA8 = 1401;
  qword_2602EB0 = (uint64_t)"CURATED_COLLECTION_INACCURATE_DESCRIPTIONDIRECTIONS_ARRIVAL_DESTINATION_INCORRECTDIRECTIONS_ARRIVAL_ENTRY_POINT_INCORRECTDIRECTIONS_INCORRECT_INSTRUCTIONSDIRECTIONS_ROUTE_WRONGGROUND_VIEW_IMAGE_QUALITYGROUND_VIEW_STORE_LABELGROUND_VIEW_STREET_LABELINCORRECT_INFO_ADDRESSINCORRECT_INFO_LABELINCORRECT_INFO_LINEINCORRECT_INFO_POIINCORRECT_INFO_STATIONINCORRECT_INFO_TILEMERCHANT_LOOKUPMISSING_LOCATION_ADDRESSMISSING_LOCATION_OTHERMISSING_LOCATION_POINOT_LISTED_ADDRESSNOT_LISTED_CURATED_COLLECTIONNOT_LISTED_CURRENT_LOCATIONNOT_LISTED_DIRECTIONSNOT_LISTED_GROUND_VIEWNOT_LISTED_OTHERNOT_LISTED_POINOT_LISTED_POI_IMAGENOT_LISTED_SATELLITENOT_LISTED_SEARCHNOT_LISTED_TRANSITPOI_IMAGE_COPYRIGHT_VIOLATIONPOI_IMAGE_CRIMEPOI_IMAGE_IRRELEVANTPOI_IMAGE_OFFENSIVEPOI_IMAGE_POOR_QUALITYREMOVE_ADDRESSREMOVE_OTHERREMOVE_POIREMOVE_TILEUNKNOWN";
  dword_2602EC0 = 1402;
  dword_2602ED8 = 1004;
  qword_2602EE0 = (uint64_t)"DIRECTIONS_ARRIVAL_ENTRY_POINT_INCORRECTDIRECTIONS_INCORRECT_INSTRUCTIONSDIRECTIONS_ROUTE_WRONGGROUND_VIEW_IMAGE_QUALITYGROUND_VIEW_STORE_LABELGROUND_VIEW_STREET_LABELINCORRECT_INFO_ADDRESSINCORRECT_INFO_LABELINCORRECT_INFO_LINEINCORRECT_INFO_POIINCORRECT_INFO_STATIONINCORRECT_INFO_TILEMERCHANT_LOOKUPMISSING_LOCATION_ADDRESSMISSING_LOCATION_OTHERMISSING_LOCATION_POINOT_LISTED_ADDRESSNOT_LISTED_CURATED_COLLECTIONNOT_LISTED_CURRENT_LOCATIONNOT_LISTED_DIRECTIONSNOT_LISTED_GROUND_VIEWNOT_LISTED_OTHERNOT_LISTED_POINOT_LISTED_POI_IMAGENOT_LISTED_SATELLITENOT_LISTED_SEARCHNOT_LISTED_TRANSITPOI_IMAGE_COPYRIGHT_VIOLATIONPOI_IMAGE_CRIMEPOI_IMAGE_IRRELEVANTPOI_IMAGE_OFFENSIVEPOI_IMAGE_POOR_QUALITYREMOVE_ADDRESSREMOVE_OTHERREMOVE_POIREMOVE_TILEUNKNOWN";
  qword_2602EC8 = (uint64_t)"DIRECTIONS_ARRIVAL_DESTINATION_INCORRECTDIRECTIONS_ARRIVAL_ENTRY_POINT_INCORRECTDIRECTIONS_INCORRECT_INSTRUCTIONSDIRECTIONS_ROUTE_WRONGGROUND_VIEW_IMAGE_QUALITYGROUND_VIEW_STORE_LABELGROUND_VIEW_STREET_LABELINCORRECT_INFO_ADDRESSINCORRECT_INFO_LABELINCORRECT_INFO_LINEINCORRECT_INFO_POIINCORRECT_INFO_STATIONINCORRECT_INFO_TILEMERCHANT_LOOKUPMISSING_LOCATION_ADDRESSMISSING_LOCATION_OTHERMISSING_LOCATION_POINOT_LISTED_ADDRESSNOT_LISTED_CURATED_COLLECTIONNOT_LISTED_CURRENT_LOCATIONNOT_LISTED_DIRECTIONSNOT_LISTED_GROUND_VIEWNOT_LISTED_OTHERNOT_LISTED_POINOT_LISTED_POI_IMAGENOT_LISTED_SATELLITENOT_LISTED_SEARCHNOT_LISTED_TRANSITPOI_IMAGE_COPYRIGHT_VIOLATIONPOI_IMAGE_CRIMEPOI_IMAGE_IRRELEVANTPOI_IMAGE_OFFENSIVEPOI_IMAGE_POOR_QUALITYREMOVE_ADDRESSREMOVE_OTHERREMOVE_POIREMOVE_TILEUNKNOWN";
  qword_2602ED0 = 40;
  qword_2602EE8 = 40;
  dword_2602EF0 = 1001;
  qword_2602EF8 = (uint64_t)"DIRECTIONS_INCORRECT_INSTRUCTIONSDIRECTIONS_ROUTE_WRONGGROUND_VIEW_IMAGE_QUALITYGROUND_VIEW_STORE_LABELGROUND_VIEW_STREET_LABELINCORRECT_INFO_ADDRESSINCORRECT_INFO_LABELINCORRECT_INFO_LINEINCORRECT_INFO_POIINCORRECT_INFO_STATIONINCORRECT_INFO_TILEMERCHANT_LOOKUPMISSING_LOCATION_ADDRESSMISSING_LOCATION_OTHERMISSING_LOCATION_POINOT_LISTED_ADDRESSNOT_LISTED_CURATED_COLLECTIONNOT_LISTED_CURRENT_LOCATIONNOT_LISTED_DIRECTIONSNOT_LISTED_GROUND_VIEWNOT_LISTED_OTHERNOT_LISTED_POINOT_LISTED_POI_IMAGENOT_LISTED_SATELLITENOT_LISTED_SEARCHNOT_LISTED_TRANSITPOI_IMAGE_COPYRIGHT_VIOLATIONPOI_IMAGE_CRIMEPOI_IMAGE_IRRELEVANTPOI_IMAGE_OFFENSIVEPOI_IMAGE_POOR_QUALITYREMOVE_ADDRESSREMOVE_OTHERREMOVE_POIREMOVE_TILEUNKNOWN";
  dword_2602F08 = 1002;
  qword_2602F10 = (uint64_t)"DIRECTIONS_ROUTE_WRONGGROUND_VIEW_IMAGE_QUALITYGROUND_VIEW_STORE_LABELGROUND_VIEW_STREET_LABELINCORRECT_INFO_ADDRESSINCORRECT_INFO_LABELINCORRECT_INFO_LINEINCORRECT_INFO_POIINCORRECT_INFO_STATIONINCORRECT_INFO_TILEMERCHANT_LOOKUPMISSING_LOCATION_ADDRESSMISSING_LOCATION_OTHERMISSING_LOCATION_POINOT_LISTED_ADDRESSNOT_LISTED_CURATED_COLLECTIONNOT_LISTED_CURRENT_LOCATIONNOT_LISTED_DIRECTIONSNOT_LISTED_GROUND_VIEWNOT_LISTED_OTHERNOT_LISTED_POINOT_LISTED_POI_IMAGENOT_LISTED_SATELLITENOT_LISTED_SEARCHNOT_LISTED_TRANSITPOI_IMAGE_COPYRIGHT_VIOLATIONPOI_IMAGE_CRIMEPOI_IMAGE_IRRELEVANTPOI_IMAGE_OFFENSIVEPOI_IMAGE_POOR_QUALITYREMOVE_ADDRESSREMOVE_OTHERREMOVE_POIREMOVE_TILEUNKNOWN";
  dword_2602F20 = 1003;
  qword_2602F28 = (uint64_t)"GROUND_VIEW_IMAGE_QUALITYGROUND_VIEW_STORE_LABELGROUND_VIEW_STREET_LABELINCORRECT_INFO_ADDRESSINCORRECT_INFO_LABELINCORRECT_INFO_LINEINCORRECT_INFO_POIINCORRECT_INFO_STATIONINCORRECT_INFO_TILEMERCHANT_LOOKUPMISSING_LOCATION_ADDRESSMISSING_LOCATION_OTHERMISSING_LOCATION_POINOT_LISTED_ADDRESSNOT_LISTED_CURATED_COLLECTIONNOT_LISTED_CURRENT_LOCATIONNOT_LISTED_DIRECTIONSNOT_LISTED_GROUND_VIEWNOT_LISTED_OTHERNOT_LISTED_POINOT_LISTED_POI_IMAGENOT_LISTED_SATELLITENOT_LISTED_SEARCHNOT_LISTED_TRANSITPOI_IMAGE_COPYRIGHT_VIOLATIONPOI_IMAGE_CRIMEPOI_IMAGE_IRRELEVANTPOI_IMAGE_OFFENSIVEPOI_IMAGE_POOR_QUALITYREMOVE_ADDRESSREMOVE_OTHERREMOVE_POIREMOVE_TILEUNKNOWN";
  dword_2602F38 = 1101;
  qword_2602F40 = (uint64_t)"GROUND_VIEW_STORE_LABELGROUND_VIEW_STREET_LABELINCORRECT_INFO_ADDRESSINCORRECT_INFO_LABELINCORRECT_INFO_LINEINCORRECT_INFO_POIINCORRECT_INFO_STATIONINCORRECT_INFO_TILEMERCHANT_LOOKUPMISSING_LOCATION_ADDRESSMISSING_LOCATION_OTHERMISSING_LOCATION_POINOT_LISTED_ADDRESSNOT_LISTED_CURATED_COLLECTIONNOT_LISTED_CURRENT_LOCATIONNOT_LISTED_DIRECTIONSNOT_LISTED_GROUND_VIEWNOT_LISTED_OTHERNOT_LISTED_POINOT_LISTED_POI_IMAGENOT_LISTED_SATELLITENOT_LISTED_SEARCHNOT_LISTED_TRANSITPOI_IMAGE_COPYRIGHT_VIOLATIONPOI_IMAGE_CRIMEPOI_IMAGE_IRRELEVANTPOI_IMAGE_OFFENSIVEPOI_IMAGE_POOR_QUALITYREMOVE_ADDRESSREMOVE_OTHERREMOVE_POIREMOVE_TILEUNKNOWN";
  dword_2602F50 = 1102;
  qword_2602F58 = (uint64_t)"GROUND_VIEW_STREET_LABELINCORRECT_INFO_ADDRESSINCORRECT_INFO_LABELINCORRECT_INFO_LINEINCORRECT_INFO_POIINCORRECT_INFO_STATIONINCORRECT_INFO_TILEMERCHANT_LOOKUPMISSING_LOCATION_ADDRESSMISSING_LOCATION_OTHERMISSING_LOCATION_POINOT_LISTED_ADDRESSNOT_LISTED_CURATED_COLLECTIONNOT_LISTED_CURRENT_LOCATIONNOT_LISTED_DIRECTIONSNOT_LISTED_GROUND_VIEWNOT_LISTED_OTHERNOT_LISTED_POINOT_LISTED_POI_IMAGENOT_LISTED_SATELLITENOT_LISTED_SEARCHNOT_LISTED_TRANSITPOI_IMAGE_COPYRIGHT_VIOLATIONPOI_IMAGE_CRIMEPOI_IMAGE_IRRELEVANTPOI_IMAGE_OFFENSIVEPOI_IMAGE_POOR_QUALITYREMOVE_ADDRESSREMOVE_OTHERREMOVE_POIREMOVE_TILEUNKNOWN";
  dword_2602F68 = 1103;
  qword_2602F70 = (uint64_t)"INCORRECT_INFO_ADDRESSINCORRECT_INFO_LABELINCORRECT_INFO_LINEINCORRECT_INFO_POIINCORRECT_INFO_STATIONINCORRECT_INFO_TILEMERCHANT_LOOKUPMISSING_LOCATION_ADDRESSMISSING_LOCATION_OTHERMISSING_LOCATION_POINOT_LISTED_ADDRESSNOT_LISTED_CURATED_COLLECTIONNOT_LISTED_CURRENT_LOCATIONNOT_LISTED_DIRECTIONSNOT_LISTED_GROUND_VIEWNOT_LISTED_OTHERNOT_LISTED_POINOT_LISTED_POI_IMAGENOT_LISTED_SATELLITENOT_LISTED_SEARCHNOT_LISTED_TRANSITPOI_IMAGE_COPYRIGHT_VIOLATIONPOI_IMAGE_CRIMEPOI_IMAGE_IRRELEVANTPOI_IMAGE_OFFENSIVEPOI_IMAGE_POOR_QUALITYREMOVE_ADDRESSREMOVE_OTHERREMOVE_POIREMOVE_TILEUNKNOWN";
  qword_2602F88 = (uint64_t)"INCORRECT_INFO_LABELINCORRECT_INFO_LINEINCORRECT_INFO_POIINCORRECT_INFO_STATIONINCORRECT_INFO_TILEMERCHANT_LOOKUPMISSING_LOCATION_ADDRESSMISSING_LOCATION_OTHERMISSING_LOCATION_POINOT_LISTED_ADDRESSNOT_LISTED_CURATED_COLLECTIONNOT_LISTED_CURRENT_LOCATIONNOT_LISTED_DIRECTIONSNOT_LISTED_GROUND_VIEWNOT_LISTED_OTHERNOT_LISTED_POINOT_LISTED_POI_IMAGENOT_LISTED_SATELLITENOT_LISTED_SEARCHNOT_LISTED_TRANSITPOI_IMAGE_COPYRIGHT_VIOLATIONPOI_IMAGE_CRIMEPOI_IMAGE_IRRELEVANTPOI_IMAGE_OFFENSIVEPOI_IMAGE_POOR_QUALITYREMOVE_ADDRESSREMOVE_OTHERREMOVE_POIREMOVE_TILEUNKNOWN";
  qword_2602FA0 = (uint64_t)"INCORRECT_INFO_LINEINCORRECT_INFO_POIINCORRECT_INFO_STATIONINCORRECT_INFO_TILEMERCHANT_LOOKUPMISSING_LOCATION_ADDRESSMISSING_LOCATION_OTHERMISSING_LOCATION_POINOT_LISTED_ADDRESSNOT_LISTED_CURATED_COLLECTIONNOT_LISTED_CURRENT_LOCATIONNOT_LISTED_DIRECTIONSNOT_LISTED_GROUND_VIEWNOT_LISTED_OTHERNOT_LISTED_POINOT_LISTED_POI_IMAGENOT_LISTED_SATELLITENOT_LISTED_SEARCHNOT_LISTED_TRANSITPOI_IMAGE_COPYRIGHT_VIOLATIONPOI_IMAGE_CRIMEPOI_IMAGE_IRRELEVANTPOI_IMAGE_OFFENSIVEPOI_IMAGE_POOR_QUALITYREMOVE_ADDRESSREMOVE_OTHERREMOVE_POIREMOVE_TILEUNKNOWN";
  qword_2602FB8 = (uint64_t)"INCORRECT_INFO_POIINCORRECT_INFO_STATIONINCORRECT_INFO_TILEMERCHANT_LOOKUPMISSING_LOCATION_ADDRESSMISSING_LOCATION_OTHERMISSING_LOCATION_POINOT_LISTED_ADDRESSNOT_LISTED_CURATED_COLLECTIONNOT_LISTED_CURRENT_LOCATIONNOT_LISTED_DIRECTIONSNOT_LISTED_GROUND_VIEWNOT_LISTED_OTHERNOT_LISTED_POINOT_LISTED_POI_IMAGENOT_LISTED_SATELLITENOT_LISTED_SEARCHNOT_LISTED_TRANSITPOI_IMAGE_COPYRIGHT_VIOLATIONPOI_IMAGE_CRIMEPOI_IMAGE_IRRELEVANTPOI_IMAGE_OFFENSIVEPOI_IMAGE_POOR_QUALITYREMOVE_ADDRESSREMOVE_OTHERREMOVE_POIREMOVE_TILEUNKNOWN";
  qword_2602FD0 = (uint64_t)"INCORRECT_INFO_STATIONINCORRECT_INFO_TILEMERCHANT_LOOKUPMISSING_LOCATION_ADDRESSMISSING_LOCATION_OTHERMISSING_LOCATION_POINOT_LISTED_ADDRESSNOT_LISTED_CURATED_COLLECTIONNOT_LISTED_CURRENT_LOCATIONNOT_LISTED_DIRECTIONSNOT_LISTED_GROUND_VIEWNOT_LISTED_OTHERNOT_LISTED_POINOT_LISTED_POI_IMAGENOT_LISTED_SATELLITENOT_LISTED_SEARCHNOT_LISTED_TRANSITPOI_IMAGE_COPYRIGHT_VIOLATIONPOI_IMAGE_CRIMEPOI_IMAGE_IRRELEVANTPOI_IMAGE_OFFENSIVEPOI_IMAGE_POOR_QUALITYREMOVE_ADDRESSREMOVE_OTHERREMOVE_POIREMOVE_TILEUNKNOWN";
  qword_2602FE8 = (uint64_t)"INCORRECT_INFO_TILEMERCHANT_LOOKUPMISSING_LOCATION_ADDRESSMISSING_LOCATION_OTHERMISSING_LOCATION_POINOT_LISTED_ADDRESSNOT_LISTED_CURATED_COLLECTIONNOT_LISTED_CURRENT_LOCATIONNOT_LISTED_DIRECTIONSNOT_LISTED_GROUND_VIEWNOT_LISTED_OTHERNOT_LISTED_POINOT_LISTED_POI_IMAGENOT_LISTED_SATELLITENOT_LISTED_SEARCHNOT_LISTED_TRANSITPOI_IMAGE_COPYRIGHT_VIOLATIONPOI_IMAGE_CRIMEPOI_IMAGE_IRRELEVANTPOI_IMAGE_OFFENSIVEPOI_IMAGE_POOR_QUALITYREMOVE_ADDRESSREMOVE_OTHERREMOVE_POIREMOVE_TILEUNKNOWN";
  qword_2603000 = (uint64_t)"MERCHANT_LOOKUPMISSING_LOCATION_ADDRESSMISSING_LOCATION_OTHERMISSING_LOCATION_POINOT_LISTED_ADDRESSNOT_LISTED_CURATED_COLLECTIONNOT_LISTED_CURRENT_LOCATIONNOT_LISTED_DIRECTIONSNOT_LISTED_GROUND_VIEWNOT_LISTED_OTHERNOT_LISTED_POINOT_LISTED_POI_IMAGENOT_LISTED_SATELLITENOT_LISTED_SEARCHNOT_LISTED_TRANSITPOI_IMAGE_COPYRIGHT_VIOLATIONPOI_IMAGE_CRIMEPOI_IMAGE_IRRELEVANTPOI_IMAGE_OFFENSIVEPOI_IMAGE_POOR_QUALITYREMOVE_ADDRESSREMOVE_OTHERREMOVE_POIREMOVE_TILEUNKNOWN";
  dword_2603010 = 1201;
  qword_2603018 = (uint64_t)"MISSING_LOCATION_ADDRESSMISSING_LOCATION_OTHERMISSING_LOCATION_POINOT_LISTED_ADDRESSNOT_LISTED_CURATED_COLLECTIONNOT_LISTED_CURRENT_LOCATIONNOT_LISTED_DIRECTIONSNOT_LISTED_GROUND_VIEWNOT_LISTED_OTHERNOT_LISTED_POINOT_LISTED_POI_IMAGENOT_LISTED_SATELLITENOT_LISTED_SEARCHNOT_LISTED_TRANSITPOI_IMAGE_COPYRIGHT_VIOLATIONPOI_IMAGE_CRIMEPOI_IMAGE_IRRELEVANTPOI_IMAGE_OFFENSIVEPOI_IMAGE_POOR_QUALITYREMOVE_ADDRESSREMOVE_OTHERREMOVE_POIREMOVE_TILEUNKNOWN";
  dword_2603028 = 101;
  qword_2603030 = (uint64_t)"MISSING_LOCATION_OTHERMISSING_LOCATION_POINOT_LISTED_ADDRESSNOT_LISTED_CURATED_COLLECTIONNOT_LISTED_CURRENT_LOCATIONNOT_LISTED_DIRECTIONSNOT_LISTED_GROUND_VIEWNOT_LISTED_OTHERNOT_LISTED_POINOT_LISTED_POI_IMAGENOT_LISTED_SATELLITENOT_LISTED_SEARCHNOT_LISTED_TRANSITPOI_IMAGE_COPYRIGHT_VIOLATIONPOI_IMAGE_CRIMEPOI_IMAGE_IRRELEVANTPOI_IMAGE_OFFENSIVEPOI_IMAGE_POOR_QUALITYREMOVE_ADDRESSREMOVE_OTHERREMOVE_POIREMOVE_TILEUNKNOWN";
  dword_2603040 = 102;
  qword_2603048 = (uint64_t)"MISSING_LOCATION_POINOT_LISTED_ADDRESSNOT_LISTED_CURATED_COLLECTIONNOT_LISTED_CURRENT_LOCATIONNOT_LISTED_DIRECTIONSNOT_LISTED_GROUND_VIEWNOT_LISTED_OTHERNOT_LISTED_POINOT_LISTED_POI_IMAGENOT_LISTED_SATELLITENOT_LISTED_SEARCHNOT_LISTED_TRANSITPOI_IMAGE_COPYRIGHT_VIOLATIONPOI_IMAGE_CRIMEPOI_IMAGE_IRRELEVANTPOI_IMAGE_OFFENSIVEPOI_IMAGE_POOR_QUALITYREMOVE_ADDRESSREMOVE_OTHERREMOVE_POIREMOVE_TILEUNKNOWN";
  dword_2603058 = 103;
  qword_2603060 = (uint64_t)"NOT_LISTED_ADDRESSNOT_LISTED_CURATED_COLLECTIONNOT_LISTED_CURRENT_LOCATIONNOT_LISTED_DIRECTIONSNOT_LISTED_GROUND_VIEWNOT_LISTED_OTHERNOT_LISTED_POINOT_LISTED_POI_IMAGENOT_LISTED_SATELLITENOT_LISTED_SEARCHNOT_LISTED_TRANSITPOI_IMAGE_COPYRIGHT_VIOLATIONPOI_IMAGE_CRIMEPOI_IMAGE_IRRELEVANTPOI_IMAGE_OFFENSIVEPOI_IMAGE_POOR_QUALITYREMOVE_ADDRESSREMOVE_OTHERREMOVE_POIREMOVE_TILEUNKNOWN";
  dword_2603070 = 206;
  qword_2603078 = (uint64_t)"NOT_LISTED_CURATED_COLLECTIONNOT_LISTED_CURRENT_LOCATIONNOT_LISTED_DIRECTIONSNOT_LISTED_GROUND_VIEWNOT_LISTED_OTHERNOT_LISTED_POINOT_LISTED_POI_IMAGENOT_LISTED_SATELLITENOT_LISTED_SEARCHNOT_LISTED_TRANSITPOI_IMAGE_COPYRIGHT_VIOLATIONPOI_IMAGE_CRIMEPOI_IMAGE_IRRELEVANTPOI_IMAGE_OFFENSIVEPOI_IMAGE_POOR_QUALITYREMOVE_ADDRESSREMOVE_OTHERREMOVE_POIREMOVE_TILEUNKNOWN";
  dword_2603088 = 210;
  qword_2603090 = (uint64_t)"NOT_LISTED_CURRENT_LOCATIONNOT_LISTED_DIRECTIONSNOT_LISTED_GROUND_VIEWNOT_LISTED_OTHERNOT_LISTED_POINOT_LISTED_POI_IMAGENOT_LISTED_SATELLITENOT_LISTED_SEARCHNOT_LISTED_TRANSITPOI_IMAGE_COPYRIGHT_VIOLATIONPOI_IMAGE_CRIMEPOI_IMAGE_IRRELEVANTPOI_IMAGE_OFFENSIVEPOI_IMAGE_POOR_QUALITYREMOVE_ADDRESSREMOVE_OTHERREMOVE_POIREMOVE_TILEUNKNOWN";
  dword_26030A0 = 208;
  qword_26030A8 = (uint64_t)"NOT_LISTED_DIRECTIONSNOT_LISTED_GROUND_VIEWNOT_LISTED_OTHERNOT_LISTED_POINOT_LISTED_POI_IMAGENOT_LISTED_SATELLITENOT_LISTED_SEARCHNOT_LISTED_TRANSITPOI_IMAGE_COPYRIGHT_VIOLATIONPOI_IMAGE_CRIMEPOI_IMAGE_IRRELEVANTPOI_IMAGE_OFFENSIVEPOI_IMAGE_POOR_QUALITYREMOVE_ADDRESSREMOVE_OTHERREMOVE_POIREMOVE_TILEUNKNOWN";
  dword_26030B8 = 201;
  qword_26030C0 = (uint64_t)"NOT_LISTED_GROUND_VIEWNOT_LISTED_OTHERNOT_LISTED_POINOT_LISTED_POI_IMAGENOT_LISTED_SATELLITENOT_LISTED_SEARCHNOT_LISTED_TRANSITPOI_IMAGE_COPYRIGHT_VIOLATIONPOI_IMAGE_CRIMEPOI_IMAGE_IRRELEVANTPOI_IMAGE_OFFENSIVEPOI_IMAGE_POOR_QUALITYREMOVE_ADDRESSREMOVE_OTHERREMOVE_POIREMOVE_TILEUNKNOWN";
  dword_26030D0 = 202;
  qword_26030D8 = (uint64_t)"NOT_LISTED_OTHERNOT_LISTED_POINOT_LISTED_POI_IMAGENOT_LISTED_SATELLITENOT_LISTED_SEARCHNOT_LISTED_TRANSITPOI_IMAGE_COPYRIGHT_VIOLATIONPOI_IMAGE_CRIMEPOI_IMAGE_IRRELEVANTPOI_IMAGE_OFFENSIVEPOI_IMAGE_POOR_QUALITYREMOVE_ADDRESSREMOVE_OTHERREMOVE_POIREMOVE_TILEUNKNOWN";
  dword_26030E8 = 203;
  qword_26030F0 = (uint64_t)"NOT_LISTED_POINOT_LISTED_POI_IMAGENOT_LISTED_SATELLITENOT_LISTED_SEARCHNOT_LISTED_TRANSITPOI_IMAGE_COPYRIGHT_VIOLATIONPOI_IMAGE_CRIMEPOI_IMAGE_IRRELEVANTPOI_IMAGE_OFFENSIVEPOI_IMAGE_POOR_QUALITYREMOVE_ADDRESSREMOVE_OTHERREMOVE_POIREMOVE_TILEUNKNOWN";
  dword_2603100 = 207;
  qword_2603108 = (uint64_t)"NOT_LISTED_POI_IMAGENOT_LISTED_SATELLITENOT_LISTED_SEARCHNOT_LISTED_TRANSITPOI_IMAGE_COPYRIGHT_VIOLATIONPOI_IMAGE_CRIMEPOI_IMAGE_IRRELEVANTPOI_IMAGE_OFFENSIVEPOI_IMAGE_POOR_QUALITYREMOVE_ADDRESSREMOVE_OTHERREMOVE_POIREMOVE_TILEUNKNOWN";
  dword_2603118 = 211;
  qword_2603120 = (uint64_t)"NOT_LISTED_SATELLITENOT_LISTED_SEARCHNOT_LISTED_TRANSITPOI_IMAGE_COPYRIGHT_VIOLATIONPOI_IMAGE_CRIMEPOI_IMAGE_IRRELEVANTPOI_IMAGE_OFFENSIVEPOI_IMAGE_POOR_QUALITYREMOVE_ADDRESSREMOVE_OTHERREMOVE_POIREMOVE_TILEUNKNOWN";
  dword_2603130 = 209;
  qword_2603138 = (uint64_t)"NOT_LISTED_SEARCHNOT_LISTED_TRANSITPOI_IMAGE_COPYRIGHT_VIOLATIONPOI_IMAGE_CRIMEPOI_IMAGE_IRRELEVANTPOI_IMAGE_OFFENSIVEPOI_IMAGE_POOR_QUALITYREMOVE_ADDRESSREMOVE_OTHERREMOVE_POIREMOVE_TILEUNKNOWN";
  dword_2603148 = 204;
  qword_2602E98 = (uint64_t)"CURATED_COLLECTION_BROKEN_LINKCURATED_COLLECTION_INACCURATE_DESCRIPTIONDIRECTIONS_ARRIVAL_DES"
                           "TINATION_INCORRECTDIRECTIONS_ARRIVAL_ENTRY_POINT_INCORRECTDIRECTIONS_INCORRECT_INSTRUCTIONSDI"
                           "RECTIONS_ROUTE_WRONGGROUND_VIEW_IMAGE_QUALITYGROUND_VIEW_STORE_LABELGROUND_VIEW_STREET_LABELI"
                           "NCORRECT_INFO_ADDRESSINCORRECT_INFO_LABELINCORRECT_INFO_LINEINCORRECT_INFO_POIINCORRECT_INFO_"
                           "STATIONINCORRECT_INFO_TILEMERCHANT_LOOKUPMISSING_LOCATION_ADDRESSMISSING_LOCATION_OTHERMISSIN"
                           "G_LOCATION_POINOT_LISTED_ADDRESSNOT_LISTED_CURATED_COLLECTIONNOT_LISTED_CURRENT_LOCATIONNOT_L"
                           "ISTED_DIRECTIONSNOT_LISTED_GROUND_VIEWNOT_LISTED_OTHERNOT_LISTED_POINOT_LISTED_POI_IMAGENOT_L"
                           "ISTED_SATELLITENOT_LISTED_SEARCHNOT_LISTED_TRANSITPOI_IMAGE_COPYRIGHT_VIOLATIONPOI_IMAGE_CRIM"
                           "EPOI_IMAGE_IRRELEVANTPOI_IMAGE_OFFENSIVEPOI_IMAGE_POOR_QUALITYREMOVE_ADDRESSREMOVE_OTHERREMOV"
                           "E_POIREMOVE_TILEUNKNOWN";
  qword_2602EA0 = 30;
  qword_2602EB8 = 41;
  qword_2602F00 = 33;
  qword_2602F18 = 22;
  qword_2602F30 = 25;
  qword_2602F48 = 23;
  qword_2602F60 = 24;
  qword_2602F78 = 22;
  dword_2602F80 = 1;
  qword_2602F90 = 20;
  dword_2602F98 = 2;
  qword_2602FA8 = 19;
  dword_2602FB0 = 3;
  qword_2602FC0 = 18;
  dword_2602FC8 = 4;
  qword_2602FD8 = 22;
  dword_2602FE0 = 5;
  qword_2602FF0 = 19;
  dword_2602FF8 = 6;
  qword_2603008 = 15;
  qword_2603020 = 24;
  qword_2603038 = 22;
  qword_2603050 = 20;
  qword_2603068 = 18;
  qword_2603080 = 29;
  qword_2603098 = 27;
  qword_26030B0 = 21;
  qword_26030C8 = 22;
  qword_26030E0 = 16;
  qword_26030F8 = 14;
  qword_2603140 = 17;
  dword_26038E0 = 9;
  qword_2603110 = 20;
  qword_2603128 = 20;
  qword_26038D0 = (uint64_t)"FILTERED_POI_LOIFILTERED_POI_WORKFILTERED_PROBLEM_TYPEFILTERED_REROUTED_UNSUPPORTED_PROBLEMFILTERED_SPAMFILTERED_TEST_RAPFILTERED_UNKNOWN_CLASSIFICATIONFILTERED_UNKNOWN_REASONFILTERED_UNSUPPORTED_CLASSIFICATIONFILTERED_UNSUPPORTED_MANIFEST_ENVFILTERED_UNSUPPORTED_OS_VERSIONFILTERED_UNSUPPORTED_PROVIDERNOT_FILTERED";
  qword_26038E8 = (uint64_t)"FILTERED_POI_WORKFILTERED_PROBLEM_TYPEFILTERED_REROUTED_UNSUPPORTED_PROBLEMFILTERED_SPAMFILTERED_TEST_RAPFILTERED_UNKNOWN_CLASSIFICATIONFILTERED_UNKNOWN_REASONFILTERED_UNSUPPORTED_CLASSIFICATIONFILTERED_UNSUPPORTED_MANIFEST_ENVFILTERED_UNSUPPORTED_OS_VERSIONFILTERED_UNSUPPORTED_PROVIDERNOT_FILTERED";
  qword_2603900 = (uint64_t)"FILTERED_PROBLEM_TYPEFILTERED_REROUTED_UNSUPPORTED_PROBLEMFILTERED_SPAMFILTERED_TEST_RAPFILTERED_UNKNOWN_CLASSIFICATIONFILTERED_UNKNOWN_REASONFILTERED_UNSUPPORTED_CLASSIFICATIONFILTERED_UNSUPPORTED_MANIFEST_ENVFILTERED_UNSUPPORTED_OS_VERSIONFILTERED_UNSUPPORTED_PROVIDERNOT_FILTERED";
  qword_2603918 = (uint64_t)"FILTERED_REROUTED_UNSUPPORTED_PROBLEMFILTERED_SPAMFILTERED_TEST_RAPFILTERED_UNKNOWN_CLASSIFICATIONFILTERED_UNKNOWN_REASONFILTERED_UNSUPPORTED_CLASSIFICATIONFILTERED_UNSUPPORTED_MANIFEST_ENVFILTERED_UNSUPPORTED_OS_VERSIONFILTERED_UNSUPPORTED_PROVIDERNOT_FILTERED";
  qword_2603930 = (uint64_t)"FILTERED_SPAMFILTERED_TEST_RAPFILTERED_UNKNOWN_CLASSIFICATIONFILTERED_UNKNOWN_REASONFILTERED_UNSUPPORTED_CLASSIFICATIONFILTERED_UNSUPPORTED_MANIFEST_ENVFILTERED_UNSUPPORTED_OS_VERSIONFILTERED_UNSUPPORTED_PROVIDERNOT_FILTERED";
  qword_2603948 = (uint64_t)"FILTERED_TEST_RAPFILTERED_UNKNOWN_CLASSIFICATIONFILTERED_UNKNOWN_REASONFILTERED_UNSUPPORTED_CLASSIFICATIONFILTERED_UNSUPPORTED_MANIFEST_ENVFILTERED_UNSUPPORTED_OS_VERSIONFILTERED_UNSUPPORTED_PROVIDERNOT_FILTERED";
  qword_2603960 = (uint64_t)"FILTERED_UNKNOWN_CLASSIFICATIONFILTERED_UNKNOWN_REASONFILTERED_UNSUPPORTED_CLASSIFICATIONFILTERED_UNSUPPORTED_MANIFEST_ENVFILTERED_UNSUPPORTED_OS_VERSIONFILTERED_UNSUPPORTED_PROVIDERNOT_FILTERED";
  qword_2603978 = (uint64_t)"FILTERED_UNKNOWN_REASONFILTERED_UNSUPPORTED_CLASSIFICATIONFILTERED_UNSUPPORTED_MANIFEST_ENVFILTERED_UNSUPPORTED_OS_VERSIONFILTERED_UNSUPPORTED_PROVIDERNOT_FILTERED";
  qword_2603990 = (uint64_t)"FILTERED_UNSUPPORTED_CLASSIFICATIONFILTERED_UNSUPPORTED_MANIFEST_ENVFILTERED_UNSUPPORTED_OS_VERSIONFILTERED_UNSUPPORTED_PROVIDERNOT_FILTERED";
  qword_26039A8 = (uint64_t)"FILTERED_UNSUPPORTED_MANIFEST_ENVFILTERED_UNSUPPORTED_OS_VERSIONFILTERED_UNSUPPORTED_PROVIDERNOT_FILTERED";
  qword_26039C0 = (uint64_t)"FILTERED_UNSUPPORTED_OS_VERSIONFILTERED_UNSUPPORTED_PROVIDERNOT_FILTERED";
  qword_26039D8 = (uint64_t)"FILTERED_UNSUPPORTED_PROVIDERNOT_FILTERED";
  qword_26039F0 = (uint64_t)"NOT_FILTERED";
  dword_26038B0 = 11;
  qword_26038B8 = (uint64_t)"FILTERED_POI_HOMEFILTERED_POI_LOIFILTERED_POI_WORKFILTERED_PROBLEM_TYPEFILTERED_REROUTED_UNSUPPORTED_PROBLEMFILTERED_SPAMFILTERED_TEST_RAPFILTERED_UNKNOWN_CLASSIFICATIONFILTERED_UNKNOWN_REASONFILTERED_UNSUPPORTED_CLASSIFICATIONFILTERED_UNSUPPORTED_MANIFEST_ENVFILTERED_UNSUPPORTED_OS_VERSIONFILTERED_UNSUPPORTED_PROVIDERNOT_FILTERED";
  unk_26038C0 = 17;
  dword_26038C8 = 7;
  qword_26038D8 = 16;
  qword_26038F0 = 17;
  dword_26038F8 = 8;
  qword_2603908 = 21;
  dword_2603910 = 4;
  qword_2603920 = 37;
  dword_2603928 = 21;
  qword_2603938 = 13;
  dword_2603940 = 16;
  qword_2603950 = 17;
  dword_2603958 = 17;
  qword_2603968 = 31;
  dword_2603970 = 1;
  qword_2603980 = 23;
  dword_2603988 = 0;
  qword_2603998 = 35;
  dword_26039A0 = 22;
  qword_26039B0 = 33;
  dword_26039B8 = 28;
  qword_26039C8 = 31;
  dword_26039D0 = 23;
  qword_26039E0 = 29;
  dword_26039E8 = 24;
  qword_26039F8 = 12;
  dword_2603A00 = 30;
  qword_2603A20 = (uint64_t)"UNKNOWNVALID";
  unk_2603A28 = 7;
  qword_2603A08 = (uint64_t)"INVALIDUNKNOWNVALID";
  unk_2603A10 = 7;
  dword_2603A18 = 2;
  dword_2603A30 = 0;
  qword_2603A38 = (uint64_t)"VALID";
  unk_2603A40 = 5;
  dword_2603A48 = 1;
  qword_2603A68 = (uint64_t)"NOTIFICATION_RESULT_UNKNOWNNO_NOTIFICATION_REQUESTEDSCHEDULED";
  unk_2603A70 = 27;
  qword_2603A80 = (uint64_t)"NO_NOTIFICATION_REQUESTEDSCHEDULED";
  qword_2603A50 = (uint64_t)"FAILEDNOTIFICATION_RESULT_UNKNOWNNO_NOTIFICATION_REQUESTEDSCHEDULED";
  *(void *)algn_2603A58 = 6;
  dword_2603A60 = 3;
  dword_2603A78 = 0;
  qword_2603A88 = 25;
  dword_2603A90 = 2;
  qword_2603A98 = (uint64_t)"SCHEDULED";
  unk_2603AA0 = 9;
  dword_2603AA8 = 1;
  qword_2603AC8 = (uint64_t)"INACTIVE_USERMISSING_ICLOUD_USER_IDSUPPRESSED_CLASSIFICATIONSUPPRESSED_FEEDBACK_CORRECTION_TYPESUPPRESSED_MAPS_ENVSUPPRESSION_REASON_UNKNOWNUSER_NOT_OPTED_IN";
  unk_2603AD0 = 13;
  qword_2603AE0 = (uint64_t)"MISSING_ICLOUD_USER_IDSUPPRESSED_CLASSIFICATIONSUPPRESSED_FEEDBACK_CORRECTION_TYPESUPPRESSED_MAPS_ENVSUPPRESSION_REASON_UNKNOWNUSER_NOT_OPTED_IN";
  unk_2603AE8 = 22;
  qword_2603AF8 = (uint64_t)"SUPPRESSED_CLASSIFICATIONSUPPRESSED_FEEDBACK_CORRECTION_TYPESUPPRESSED_MAPS_ENVSUPPRESSION_REASON_UNKNOWNUSER_NOT_OPTED_IN";
  unk_2603B00 = 25;
  qword_2603B10 = (uint64_t)"SUPPRESSED_FEEDBACK_CORRECTION_TYPESUPPRESSED_MAPS_ENVSUPPRESSION_REASON_UNKNOWNUSER_NOT_OPTED_IN";
  unk_2603B18 = 35;
  qword_2603B28 = (uint64_t)"SUPPRESSED_MAPS_ENVSUPPRESSION_REASON_UNKNOWNUSER_NOT_OPTED_IN";
  unk_2603B30 = 19;
  qword_2603B40 = (uint64_t)"SUPPRESSION_REASON_UNKNOWNUSER_NOT_OPTED_IN";
  qword_2603B58 = (uint64_t)"USER_NOT_OPTED_IN";
  unk_2603B60 = 17;
  qword_2603AB0 = (uint64_t)"EMPTY_FIXINACTIVE_USERMISSING_ICLOUD_USER_IDSUPPRESSED_CLASSIFICATIONSUPPRESSED_FEEDBACK_CORR"
                           "ECTION_TYPESUPPRESSED_MAPS_ENVSUPPRESSION_REASON_UNKNOWNUSER_NOT_OPTED_IN";
  *(void *)algn_2603AB8 = 9;
  dword_2603AC0 = 1;
  dword_2603AD8 = 2;
  dword_2603AF0 = 3;
  dword_2603B08 = 4;
  dword_2603B20 = 5;
  dword_2603B38 = 7;
  qword_2603B48 = 26;
  dword_2603B50 = 0;
  dword_2603B68 = 6;
  qword_2603B78 = 34;
  qword_2603BA0 = (uint64_t)"MISSING_COORDINATEMISSING_DESTINATION_PLACE_LAT_LNGMISSING_DESTINATION_PLACE_NAMEMISSING_DISPLAY_REGIONMISSING_LABELMISSING_LABEL_MAP_REGIONMISSING_LINEMISSING_LINE_SYSTEM_NAMEMISSING_LOCALEMISSING_LOCALITY_NAMEMISSING_MAIN_TRANSPORT_TYPEMISSING_ORIGIN_PLACE_LAT_LNGMISSING_ORIGIN_PLACE_NAMEMISSING_PLACE_NAMEMISSING_PLACE_REQUESTMISSING_RECIEVED_ATMISSING_TASK_INPUTMUID_ENCRYPTION_FAILEDNO_DISPATCHER_PLACE_LOOKUP_RESULTNO_SEARCH_PLACE_LOOKUP_RESULTUNKNOWN_FIX_TYPE";
  qword_2603BB8 = (uint64_t)"MISSING_DESTINATION_PLACE_LAT_LNGMISSING_DESTINATION_PLACE_NAMEMISSING_DISPLAY_REGIONMISSING_LABELMISSING_LABEL_MAP_REGIONMISSING_LINEMISSING_LINE_SYSTEM_NAMEMISSING_LOCALEMISSING_LOCALITY_NAMEMISSING_MAIN_TRANSPORT_TYPEMISSING_ORIGIN_PLACE_LAT_LNGMISSING_ORIGIN_PLACE_NAMEMISSING_PLACE_NAMEMISSING_PLACE_REQUESTMISSING_RECIEVED_ATMISSING_TASK_INPUTMUID_ENCRYPTION_FAILEDNO_DISPATCHER_PLACE_LOOKUP_RESULTNO_SEARCH_PLACE_LOOKUP_RESULTUNKNOWN_FIX_TYPE";
  qword_2603BD0 = (uint64_t)"MISSING_DESTINATION_PLACE_NAMEMISSING_DISPLAY_REGIONMISSING_LABELMISSING_LABEL_MAP_REGIONMISSING_LINEMISSING_LINE_SYSTEM_NAMEMISSING_LOCALEMISSING_LOCALITY_NAMEMISSING_MAIN_TRANSPORT_TYPEMISSING_ORIGIN_PLACE_LAT_LNGMISSING_ORIGIN_PLACE_NAMEMISSING_PLACE_NAMEMISSING_PLACE_REQUESTMISSING_RECIEVED_ATMISSING_TASK_INPUTMUID_ENCRYPTION_FAILEDNO_DISPATCHER_PLACE_LOOKUP_RESULTNO_SEARCH_PLACE_LOOKUP_RESULTUNKNOWN_FIX_TYPE";
  qword_2603BE8 = (uint64_t)"MISSING_DISPLAY_REGIONMISSING_LABELMISSING_LABEL_MAP_REGIONMISSING_LINEMISSING_LINE_SYSTEM_NAMEMISSING_LOCALEMISSING_LOCALITY_NAMEMISSING_MAIN_TRANSPORT_TYPEMISSING_ORIGIN_PLACE_LAT_LNGMISSING_ORIGIN_PLACE_NAMEMISSING_PLACE_NAMEMISSING_PLACE_REQUESTMISSING_RECIEVED_ATMISSING_TASK_INPUTMUID_ENCRYPTION_FAILEDNO_DISPATCHER_PLACE_LOOKUP_RESULTNO_SEARCH_PLACE_LOOKUP_RESULTUNKNOWN_FIX_TYPE";
  qword_2603C00 = (uint64_t)"MISSING_LABELMISSING_LABEL_MAP_REGIONMISSING_LINEMISSING_LINE_SYSTEM_NAMEMISSING_LOCALEMISSING_LOCALITY_NAMEMISSING_MAIN_TRANSPORT_TYPEMISSING_ORIGIN_PLACE_LAT_LNGMISSING_ORIGIN_PLACE_NAMEMISSING_PLACE_NAMEMISSING_PLACE_REQUESTMISSING_RECIEVED_ATMISSING_TASK_INPUTMUID_ENCRYPTION_FAILEDNO_DISPATCHER_PLACE_LOOKUP_RESULTNO_SEARCH_PLACE_LOOKUP_RESULTUNKNOWN_FIX_TYPE";
  qword_2603C18 = (uint64_t)"MISSING_LABEL_MAP_REGIONMISSING_LINEMISSING_LINE_SYSTEM_NAMEMISSING_LOCALEMISSING_LOCALITY_NAMEMISSING_MAIN_TRANSPORT_TYPEMISSING_ORIGIN_PLACE_LAT_LNGMISSING_ORIGIN_PLACE_NAMEMISSING_PLACE_NAMEMISSING_PLACE_REQUESTMISSING_RECIEVED_ATMISSING_TASK_INPUTMUID_ENCRYPTION_FAILEDNO_DISPATCHER_PLACE_LOOKUP_RESULTNO_SEARCH_PLACE_LOOKUP_RESULTUNKNOWN_FIX_TYPE";
  qword_2603C30 = (uint64_t)"MISSING_LINEMISSING_LINE_SYSTEM_NAMEMISSING_LOCALEMISSING_LOCALITY_NAMEMISSING_MAIN_TRANSPORT_TYPEMISSING_ORIGIN_PLACE_LAT_LNGMISSING_ORIGIN_PLACE_NAMEMISSING_PLACE_NAMEMISSING_PLACE_REQUESTMISSING_RECIEVED_ATMISSING_TASK_INPUTMUID_ENCRYPTION_FAILEDNO_DISPATCHER_PLACE_LOOKUP_RESULTNO_SEARCH_PLACE_LOOKUP_RESULTUNKNOWN_FIX_TYPE";
  qword_2603C48 = (uint64_t)"MISSING_LINE_SYSTEM_NAMEMISSING_LOCALEMISSING_LOCALITY_NAMEMISSING_MAIN_TRANSPORT_TYPEMISSING_ORIGIN_PLACE_LAT_LNGMISSING_ORIGIN_PLACE_NAMEMISSING_PLACE_NAMEMISSING_PLACE_REQUESTMISSING_RECIEVED_ATMISSING_TASK_INPUTMUID_ENCRYPTION_FAILEDNO_DISPATCHER_PLACE_LOOKUP_RESULTNO_SEARCH_PLACE_LOOKUP_RESULTUNKNOWN_FIX_TYPE";
  qword_2603C60 = (uint64_t)"MISSING_LOCALEMISSING_LOCALITY_NAMEMISSING_MAIN_TRANSPORT_TYPEMISSING_ORIGIN_PLACE_LAT_LNGMISSING_ORIGIN_PLACE_NAMEMISSING_PLACE_NAMEMISSING_PLACE_REQUESTMISSING_RECIEVED_ATMISSING_TASK_INPUTMUID_ENCRYPTION_FAILEDNO_DISPATCHER_PLACE_LOOKUP_RESULTNO_SEARCH_PLACE_LOOKUP_RESULTUNKNOWN_FIX_TYPE";
  qword_2603C78 = (uint64_t)"MISSING_LOCALITY_NAMEMISSING_MAIN_TRANSPORT_TYPEMISSING_ORIGIN_PLACE_LAT_LNGMISSING_ORIGIN_PLACE_NAMEMISSING_PLACE_NAMEMISSING_PLACE_REQUESTMISSING_RECIEVED_ATMISSING_TASK_INPUTMUID_ENCRYPTION_FAILEDNO_DISPATCHER_PLACE_LOOKUP_RESULTNO_SEARCH_PLACE_LOOKUP_RESULTUNKNOWN_FIX_TYPE";
  qword_2603C90 = (uint64_t)"MISSING_MAIN_TRANSPORT_TYPEMISSING_ORIGIN_PLACE_LAT_LNGMISSING_ORIGIN_PLACE_NAMEMISSING_PLACE_NAMEMISSING_PLACE_REQUESTMISSING_RECIEVED_ATMISSING_TASK_INPUTMUID_ENCRYPTION_FAILEDNO_DISPATCHER_PLACE_LOOKUP_RESULTNO_SEARCH_PLACE_LOOKUP_RESULTUNKNOWN_FIX_TYPE";
  qword_2603CA8 = (uint64_t)"MISSING_ORIGIN_PLACE_LAT_LNGMISSING_ORIGIN_PLACE_NAMEMISSING_PLACE_NAMEMISSING_PLACE_REQUESTMISSING_RECIEVED_ATMISSING_TASK_INPUTMUID_ENCRYPTION_FAILEDNO_DISPATCHER_PLACE_LOOKUP_RESULTNO_SEARCH_PLACE_LOOKUP_RESULTUNKNOWN_FIX_TYPE";
  qword_2603CC0 = (uint64_t)"MISSING_ORIGIN_PLACE_NAMEMISSING_PLACE_NAMEMISSING_PLACE_REQUESTMISSING_RECIEVED_ATMISSING_TASK_INPUTMUID_ENCRYPTION_FAILEDNO_DISPATCHER_PLACE_LOOKUP_RESULTNO_SEARCH_PLACE_LOOKUP_RESULTUNKNOWN_FIX_TYPE";
  qword_2603CD8 = (uint64_t)"MISSING_PLACE_NAMEMISSING_PLACE_REQUESTMISSING_RECIEVED_ATMISSING_TASK_INPUTMUID_ENCRYPTION_FAILEDNO_DISPATCHER_PLACE_LOOKUP_RESULTNO_SEARCH_PLACE_LOOKUP_RESULTUNKNOWN_FIX_TYPE";
  qword_2603CF0 = (uint64_t)"MISSING_PLACE_REQUESTMISSING_RECIEVED_ATMISSING_TASK_INPUTMUID_ENCRYPTION_FAILEDNO_DISPATCHER_PLACE_LOOKUP_RESULTNO_SEARCH_PLACE_LOOKUP_RESULTUNKNOWN_FIX_TYPE";
  qword_2603D08 = (uint64_t)"MISSING_RECIEVED_ATMISSING_TASK_INPUTMUID_ENCRYPTION_FAILEDNO_DISPATCHER_PLACE_LOOKUP_RESULTNO_SEARCH_PLACE_LOOKUP_RESULTUNKNOWN_FIX_TYPE";
  qword_2603D20 = (uint64_t)"MISSING_TASK_INPUTMUID_ENCRYPTION_FAILEDNO_DISPATCHER_PLACE_LOOKUP_RESULTNO_SEARCH_PLACE_LOOKUP_RESULTUNKNOWN_FIX_TYPE";
  qword_2603D38 = (uint64_t)"MUID_ENCRYPTION_FAILEDNO_DISPATCHER_PLACE_LOOKUP_RESULTNO_SEARCH_PLACE_LOOKUP_RESULTUNKNOWN_FIX_TYPE";
  qword_2603D50 = (uint64_t)"NO_DISPATCHER_PLACE_LOOKUP_RESULTNO_SEARCH_PLACE_LOOKUP_RESULTUNKNOWN_FIX_TYPE";
  qword_2603D68 = (uint64_t)"NO_SEARCH_PLACE_LOOKUP_RESULTUNKNOWN_FIX_TYPE";
  qword_2603D80 = (uint64_t)"UNKNOWN_FIX_TYPE";
  qword_2603B70 = (uint64_t)"FAILED_TO_ADD_NOTIFICATION_DETAILSFAILURE_REASON_UNKNOWNMISSING_COORDINATEMISSING_DESTINATION"
                           "_PLACE_LAT_LNGMISSING_DESTINATION_PLACE_NAMEMISSING_DISPLAY_REGIONMISSING_LABELMISSING_LABEL_"
                           "MAP_REGIONMISSING_LINEMISSING_LINE_SYSTEM_NAMEMISSING_LOCALEMISSING_LOCALITY_NAMEMISSING_MAIN"
                           "_TRANSPORT_TYPEMISSING_ORIGIN_PLACE_LAT_LNGMISSING_ORIGIN_PLACE_NAMEMISSING_PLACE_NAMEMISSING"
                           "_PLACE_REQUESTMISSING_RECIEVED_ATMISSING_TASK_INPUTMUID_ENCRYPTION_FAILEDNO_DISPATCHER_PLACE_"
                           "LOOKUP_RESULTNO_SEARCH_PLACE_LOOKUP_RESULTUNKNOWN_FIX_TYPE";
  qword_2603B88 = (uint64_t)"FAILURE_REASON_UNKNOWNMISSING_COORDINATEMISSING_DESTINATION_PLACE_LAT_LNGMISSING_DESTINATION_PLACE_NAMEMISSING_DISPLAY_REGIONMISSING_LABELMISSING_LABEL_MAP_REGIONMISSING_LINEMISSING_LINE_SYSTEM_NAMEMISSING_LOCALEMISSING_LOCALITY_NAMEMISSING_MAIN_TRANSPORT_TYPEMISSING_ORIGIN_PLACE_LAT_LNGMISSING_ORIGIN_PLACE_NAMEMISSING_PLACE_NAMEMISSING_PLACE_REQUESTMISSING_RECIEVED_ATMISSING_TASK_INPUTMUID_ENCRYPTION_FAILEDNO_DISPATCHER_PLACE_LOOKUP_RESULTNO_SEARCH_PLACE_LOOKUP_RESULTUNKNOWN_FIX_TYPE";
  unk_2603B90 = 22;
  dword_2603B80 = 20;
  dword_2603B98 = 0;
  qword_2603BA8 = 18;
  dword_2603BB0 = 9;
  qword_2603BC0 = 33;
  dword_2603BC8 = 13;
  qword_2603BD8 = 30;
  dword_2603BE0 = 15;
  qword_2603BF0 = 22;
  dword_2603BF8 = 8;
  qword_2603C08 = 13;
  dword_2603C10 = 4;
  qword_2603C20 = 24;
  dword_2603C28 = 10;
  qword_2603C38 = 12;
  dword_2603C40 = 6;
  qword_2603C50 = 24;
  dword_2603C58 = 7;
  qword_2603C68 = 14;
  dword_2603C70 = 5;
  qword_2603C80 = 21;
  dword_2603C88 = 22;
  qword_2603C98 = 27;
  dword_2603CA0 = 16;
  qword_2603CB0 = 28;
  dword_2603CB8 = 12;
  qword_2603CC8 = 25;
  dword_2603CD0 = 14;
  qword_2603CE0 = 18;
  dword_2603CE8 = 3;
  qword_2603CF8 = 21;
  dword_2603D00 = 11;
  qword_2603D10 = 19;
  dword_2603D18 = 2;
  qword_2603D28 = 18;
  dword_2603D30 = 21;
  qword_2603D40 = 22;
  dword_2603D48 = 17;
  qword_2603D58 = 33;
  dword_2603D60 = 18;
  qword_2603D70 = 29;
  dword_2603D78 = 19;
  qword_2603D88 = 16;
  dword_2603D90 = 1;
  dword_2603DA8 = 57879;
  qword_2603DB0 = (uint64_t)"FWDGEOGEMINIREVGEOYAHOO_JPYANDEX";
  dword_2603DC0 = 6489;
  qword_2603DC8 = (uint64_t)"GEMINIREVGEOYAHOO_JPYANDEX";
  dword_2603DD8 = 9902;
  qword_2603DE0 = (uint64_t)"REVGEOYAHOO_JPYANDEX";
  dword_2603DF0 = 7618;
  qword_2603DF8 = (uint64_t)"YAHOO_JPYANDEX";
  dword_2603E08 = 47419;
  qword_2603E10 = (uint64_t)"YANDEX";
  dword_2603E20 = 35230;
  qword_2603D98 = (uint64_t)"AUTONAVIFWDGEOGEMINIREVGEOYAHOO_JPYANDEX";
  unk_2603DA0 = 8;
  qword_2603DB8 = 6;
  qword_2603DD0 = 6;
  qword_2603DE8 = 6;
  qword_2603E00 = 8;
  qword_2603E18 = 6;
  qword_2603E40 = (uint64_t)"GENESYS_DEGENESYS_ENGENESYS_JAGENESYS_OTHERUNKNOWN";
  qword_2603E58 = (uint64_t)"GENESYS_ENGENESYS_JAGENESYS_OTHERUNKNOWN";
  qword_2603E70 = (uint64_t)"GENESYS_JAGENESYS_OTHERUNKNOWN";
  qword_2603E88 = (uint64_t)"GENESYS_OTHERUNKNOWN";
  unk_2603E90 = 13;
  qword_2603EA0 = (uint64_t)"UNKNOWN";
  unk_2603EA8 = 7;
  qword_2603E28 = (uint64_t)"ALPHAGENESYS_DEGENESYS_ENGENESYS_JAGENESYS_OTHERUNKNOWN";
  qword_2603E30 = 5;
  dword_2603E38 = 1;
  qword_2603E48 = 10;
  dword_2603E50 = 4;
  qword_2603E60 = 10;
  dword_2603E68 = 2;
  qword_2603E78 = 10;
  dword_2603E80 = 3;
  dword_2603E98 = 5;
  dword_2603EB0 = 0;
  qword_2603ED0 = (uint64_t)"TRANSITUNKNOWN_TARGET";
  unk_2603ED8 = 7;
  qword_2603EE8 = (uint64_t)"UNKNOWN_TARGET";
  unk_2603EF0 = 14;
  qword_2603EB8 = (uint64_t)"POITRANSITUNKNOWN_TARGET";
  unk_2603EC0 = 3;
  dword_2603EC8 = 1;
  dword_2603EE0 = 2;
  dword_2603EF8 = 0;
  qword_2603F18 = (uint64_t)"PLACE_UPDATE_RESOURCEUNKNOWN";
  unk_2603F20 = 21;
  qword_2603F30 = (uint64_t)"UNKNOWN";
  unk_2603F38 = 7;
  qword_2603F00 = (uint64_t)"ARCHES_RESOURCEPLACE_UPDATE_RESOURCEUNKNOWN";
  *(void *)algn_2603F08 = 15;
  dword_2603F10 = 1;
  dword_2603F28 = 2;
  dword_2603F40 = 0;
  qword_2603F60 = (uint64_t)"DEVICE_LOCATIONDIRECTIONS_STEP_COORDINATEEND_WAYPOINTGROUND_VIEW_CAMERA_COORDINATEORIGINAL_COORDINATERAP_PLACESTART_WAYPOINTUNKNOWNVIEWPORT_CENTER";
  qword_2603F78 = (uint64_t)"DIRECTIONS_STEP_COORDINATEEND_WAYPOINTGROUND_VIEW_CAMERA_COORDINATEORIGINAL_COORDINATERAP_PLACESTART_WAYPOINTUNKNOWNVIEWPORT_CENTER";
  qword_2603F90 = (uint64_t)"END_WAYPOINTGROUND_VIEW_CAMERA_COORDINATEORIGINAL_COORDINATERAP_PLACESTART_WAYPOINTUNKNOWNVIEWPORT_CENTER";
  qword_2603FA8 = (uint64_t)"GROUND_VIEW_CAMERA_COORDINATEORIGINAL_COORDINATERAP_PLACESTART_WAYPOINTUNKNOWNVIEWPORT_CENTER";
  qword_2603FC0 = (uint64_t)"ORIGINAL_COORDINATERAP_PLACESTART_WAYPOINTUNKNOWNVIEWPORT_CENTER";
  qword_2603FD8 = (uint64_t)"RAP_PLACESTART_WAYPOINTUNKNOWNVIEWPORT_CENTER";
  qword_2603FF0 = (uint64_t)"START_WAYPOINTUNKNOWNVIEWPORT_CENTER";
  qword_2604008 = (uint64_t)"UNKNOWNVIEWPORT_CENTER";
  qword_2604020 = (uint64_t)"VIEWPORT_CENTER";
  qword_2603F48 = (uint64_t)"CORRECTED_COORDINATEDEVICE_LOCATIONDIRECTIONS_STEP_COORDINATEEND_WAYPOINTGROUND_VIEW_CAMERA_C"
                           "OORDINATEORIGINAL_COORDINATERAP_PLACESTART_WAYPOINTUNKNOWNVIEWPORT_CENTER";
  unk_2603F50 = 20;
  dword_2603F58 = 3;
  qword_2603F68 = 15;
  dword_2603F70 = 7;
  qword_2603F80 = 26;
  dword_2603F88 = 6;
  qword_2603F98 = 12;
  dword_2603FA0 = 9;
  qword_2603FB0 = 29;
  dword_2603FB8 = 5;
  qword_2603FC8 = 19;
  dword_2603FD0 = 2;
  qword_2603FE0 = 9;
  dword_2603FE8 = 1;
  qword_2603FF8 = 14;
  dword_2604000 = 8;
  qword_2604010 = 7;
  dword_2604018 = 0;
  qword_2604028 = 15;
  dword_2604030 = 4;
  qword_2604050 = (uint64_t)"ASSIGNEDCOMPLETEDINCOMPLETE_WORKFLOWNEWPAUSEDQUEUEDUNKNOWN";
  qword_2604068 = (uint64_t)"COMPLETEDINCOMPLETE_WORKFLOWNEWPAUSEDQUEUEDUNKNOWN";
  qword_2604080 = (uint64_t)"INCOMPLETE_WORKFLOWNEWPAUSEDQUEUEDUNKNOWN";
  qword_2604098 = (uint64_t)"NEWPAUSEDQUEUEDUNKNOWN";
  qword_26040B0 = (uint64_t)"PAUSEDQUEUEDUNKNOWN";
  qword_26040E0 = (uint64_t)"UNKNOWN";
  qword_2604110 = (uint64_t)"EXTERNALFWDGEOMUIDPLACE_SEARCH_TYPE_UNKNOWNREVGEOSEARCH";
  qword_2604128 = (uint64_t)"FWDGEOMUIDPLACE_SEARCH_TYPE_UNKNOWNREVGEOSEARCH";
  qword_2604140 = (uint64_t)"MUIDPLACE_SEARCH_TYPE_UNKNOWNREVGEOSEARCH";
  qword_2604158 = (uint64_t)"PLACE_SEARCH_TYPE_UNKNOWNREVGEOSEARCH";
  qword_2604170 = (uint64_t)"REVGEOSEARCH";
  qword_2604188 = (uint64_t)"SEARCH";
  qword_26041B8 = (uint64_t)"NORMALPERMANENT_CLOSURESPECIALTEMPORARY_CLOSURE";
  qword_26041E8 = (uint64_t)"SPECIALTEMPORARY_CLOSURE";
  qword_26042E0 = 32;
  qword_2604880 = 31;
  qword_26048C0 = (uint64_t)"GEO_ZILCH_POINT_TYPE_NORMALGEO_ZILCH_POINT_TYPE_UNKNOWN";
  qword_2605010 = (uint64_t)"EVENT_SUBTYPE_UNKNOWN";
  qword_2604FF8 = (uint64_t)"EVENT_SUBTYPE_DATA_GUIDEEVENT_SUBTYPE_UNKNOWN";
  unk_2605000 = 24;
  dword_2605008 = 2;
  qword_2604F80 = (uint64_t)"DELETE_RESTRICTEVENT_TYPE_UNKNOWNFREEZERETENTION";
  qword_2604FE0 = (uint64_t)"EVENT_SUBTYPE_ACCESSEVENT_SUBTYPE_DATA_GUIDEEVENT_SUBTYPE_UNKNOWN";
  *(void *)algn_2604FE8 = 20;
  dword_2604FD8 = 4;
  dword_2604FF0 = 1;
  qword_2604FC8 = (uint64_t)"RETENTION";
  qword_2604FB0 = (uint64_t)"FREEZERETENTION";
  unk_2604FB8 = 6;
  dword_2604FC0 = 3;
  qword_2604FD0 = 9;
  qword_2604F68 = (uint64_t)"ACCESSDELETE_RESTRICTEVENT_TYPE_UNKNOWNFREEZERETENTION";
  unk_2604F70 = 6;
  qword_2604F98 = (uint64_t)"EVENT_TYPE_UNKNOWNFREEZERETENTION";
  unk_2604FA0 = 18;
  dword_2604F90 = 2;
  dword_2604FA8 = 0;
  dword_2604F78 = 1;
  qword_2604F88 = 15;
  qword_2604E18 = (uint64_t)"RAP_DEPLOY_SUCCESSRAP_EDIT_REJECTRAP_EDIT_REROUTERAP_EDIT_SUCCESSRAP_INGEST_REJECTRAP_INGEST_REROUTERAP_INGEST_SUCCESSRAP_NEEDS_RETRYRAP_REPROCESSRAP_UPDATEUNKNOWN";
  qword_2604F50 = (uint64_t)"RETIRED";
  unk_2604F58 = 7;
  dword_2604F48 = 0;
  dword_2604F60 = 1;
  qword_2604F38 = (uint64_t)"RETENTION_STATUS_UNKNOWNRETIRED";
  unk_2604F40 = 24;
  qword_2604F20 = (uint64_t)"DELETEDRETENTION_STATUS_UNKNOWNRETIRED";
  *(void *)algn_2604F28 = 7;
  dword_2604F30 = 2;
  qword_2604F08 = (uint64_t)"UNKNOWN";
  unk_2604F10 = 7;
  dword_2604F00 = 6;
  dword_2604F18 = 0;
  qword_2604EF0 = (uint64_t)"RAP_UPDATEUNKNOWN";
  qword_2604ED8 = (uint64_t)"RAP_REPROCESSRAP_UPDATEUNKNOWN";
  unk_2604EE0 = 13;
  dword_2604EE8 = 11;
  qword_2604EF8 = 10;
  qword_2604EC0 = (uint64_t)"RAP_NEEDS_RETRYRAP_REPROCESSRAP_UPDATEUNKNOWN";
  unk_2604EC8 = 15;
  dword_2604EB8 = 1;
  dword_2604ED0 = 8;
  qword_2604EA8 = (uint64_t)"RAP_INGEST_SUCCESSRAP_NEEDS_RETRYRAP_REPROCESSRAP_UPDATEUNKNOWN";
  qword_2604E90 = (uint64_t)"RAP_INGEST_REROUTERAP_INGEST_SUCCESSRAP_NEEDS_RETRYRAP_REPROCESSRAP_UPDATEUNKNOWN";
  qword_2604E98 = 18;
  dword_2604EA0 = 9;
  qword_2604EB0 = 18;
  qword_2604E78 = (uint64_t)"RAP_INGEST_REJECTRAP_INGEST_REROUTERAP_INGEST_SUCCESSRAP_NEEDS_RETRYRAP_REPROCESSRAP_UPDATEUNKNOWN";
  unk_2604E80 = 17;
  dword_2604E70 = 3;
  dword_2604E88 = 2;
  qword_2604E60 = (uint64_t)"RAP_EDIT_SUCCESSRAP_INGEST_REJECTRAP_INGEST_REROUTERAP_INGEST_SUCCESSRAP_NEEDS_RETRYRAP_REPROCESSRAP_UPDATEUNKNOWN";
  qword_2604E48 = (uint64_t)"RAP_EDIT_REROUTERAP_EDIT_SUCCESSRAP_INGEST_REJECTRAP_INGEST_REROUTERAP_INGEST_SUCCESSRAP_NEEDS_RETRYRAP_REPROCESSRAP_UPDATEUNKNOWN";
  qword_2604E50 = 16;
  dword_2604E58 = 5;
  qword_2604E68 = 16;
  qword_2604E00 = (uint64_t)"RAP_ASSIGNED_TO_VENDORRAP_DEPLOY_SUCCESSRAP_EDIT_REJECTRAP_EDIT_REROUTERAP_EDIT_SUCCESSRAP_IN"
                           "GEST_REJECTRAP_INGEST_REROUTERAP_INGEST_SUCCESSRAP_NEEDS_RETRYRAP_REPROCESSRAP_UPDATEUNKNOWN";
  *(void *)algn_2604E08 = 22;
  qword_2604E30 = (uint64_t)"RAP_EDIT_REJECTRAP_EDIT_REROUTERAP_EDIT_SUCCESSRAP_INGEST_REJECTRAP_INGEST_REROUTERAP_INGEST_SUCCESSRAP_NEEDS_RETRYRAP_REPROCESSRAP_UPDATEUNKNOWN";
  unk_2604E38 = 15;
  dword_2604E28 = 7;
  dword_2604E40 = 4;
  dword_2604E10 = 10;
  qword_2604E20 = 18;
  qword_2604C98 = (uint64_t)"LINE_UPDATESCHEDULE_UPDATESTATION_ADDSTATION_REMOVALSTATION_UPDATETRANSIT_ISSUE_FIXEDTRANSIT_NOTIFICATION_TYPE_UNKNOWN";
  qword_2604DE8 = (uint64_t)"LOCATION_BLURRED";
  unk_2604DF0 = 16;
  dword_2604DF8 = 1;
  qword_2604DD0 = (uint64_t)"GROUND_VIEW_NOTIFICATION_TYPE_UNKNOWNLOCATION_BLURRED";
  *(void *)algn_2604DD8 = 37;
  dword_2604DE0 = 0;
  qword_2604DA0 = (uint64_t)"DIRECTIONS_NOTIFICATION_TYPE_UNKNOWNROUTE_UPDATED";
  *(void *)algn_2604DA8 = 36;
  qword_2604DB8 = (uint64_t)"ROUTE_UPDATED";
  unk_2604DC0 = 13;
  dword_2604DC8 = 1;
  dword_2604DB0 = 0;
  qword_2604D70 = (uint64_t)"ADDRESSADDRESS_NOTIFICATION_TYPE_UNKNOWN";
  *(void *)algn_2604D78 = 7;
  qword_2604D88 = (uint64_t)"ADDRESS_NOTIFICATION_TYPE_UNKNOWN";
  unk_2604D90 = 33;
  dword_2604D98 = 0;
  dword_2604D80 = 1;
  dword_2604D68 = 0;
  qword_2604D40 = (uint64_t)"MAP_LABELTILE_NOTIFICATION_TYPE_UNKNOWN";
  *(void *)algn_2604D48 = 9;
  dword_2604D50 = 1;
  qword_2604D58 = (uint64_t)"TILE_NOTIFICATION_TYPE_UNKNOWN";
  unk_2604D60 = 30;
  qword_2604D28 = (uint64_t)"TRANSIT_NOTIFICATION_TYPE_UNKNOWN";
  unk_2604D30 = 33;
  dword_2604D20 = 7;
  dword_2604D38 = 0;
  qword_2604D10 = (uint64_t)"TRANSIT_ISSUE_FIXEDTRANSIT_NOTIFICATION_TYPE_UNKNOWN";
  qword_2604CF8 = (uint64_t)"STATION_UPDATETRANSIT_ISSUE_FIXEDTRANSIT_NOTIFICATION_TYPE_UNKNOWN";
  unk_2604D00 = 14;
  dword_2604D08 = 2;
  qword_2604D18 = 19;
  dword_2604CD8 = 1;
  qword_2604CE0 = (uint64_t)"STATION_REMOVALSTATION_UPDATETRANSIT_ISSUE_FIXEDTRANSIT_NOTIFICATION_TYPE_UNKNOWN";
  unk_2604CE8 = 15;
  dword_2604CF0 = 3;
  qword_2604CC8 = (uint64_t)"STATION_ADDSTATION_REMOVALSTATION_UPDATETRANSIT_ISSUE_FIXEDTRANSIT_NOTIFICATION_TYPE_UNKNOWN";
  qword_2604CB0 = (uint64_t)"SCHEDULE_UPDATESTATION_ADDSTATION_REMOVALSTATION_UPDATETRANSIT_ISSUE_FIXEDTRANSIT_NOTIFICATION_TYPE_UNKNOWN";
  unk_2604CB8 = 15;
  dword_2604CC0 = 6;
  qword_2604CD0 = 11;
  qword_2604C80 = (uint64_t)"LINE_ADDLINE_UPDATESCHEDULE_UPDATESTATION_ADDSTATION_REMOVALSTATION_UPDATETRANSIT_ISSUE_FIXED"
                           "TRANSIT_NOTIFICATION_TYPE_UNKNOWN";
  *(void *)algn_2604C88 = 8;
  qword_2604CA0 = 11;
  dword_2604CA8 = 5;
  dword_2604C90 = 4;
  qword_2604C68 = (uint64_t)"POI_UPDATE";
  unk_2604C70 = 10;
  dword_2604C78 = 2;
  qword_2604B60 = (uint64_t)"NOTIFICATION_TYPE_DIRECTIONSNOTIFICATION_TYPE_GENERICNOTIFICATION_TYPE_GROUND_VIEWNOTIFICATION_TYPE_POINOTIFICATION_TYPE_RESOLUTIONNOTIFICATION_TYPE_TILENOTIFICATION_TYPE_TRANSITNOTIFICATION_TYPE_UNKNOWN";
  qword_2604C50 = (uint64_t)"POI_REMOVALPOI_UPDATE";
  unk_2604C58 = 11;
  dword_2604C48 = 0;
  dword_2604C60 = 3;
  qword_2604C20 = (uint64_t)"POI_ADDPOI_NOTIFICATION_TYPE_UNKNOWNPOI_REMOVALPOI_UPDATE";
  *(void *)algn_2604C28 = 7;
  dword_2604C30 = 1;
  qword_2604C38 = (uint64_t)"POI_NOTIFICATION_TYPE_UNKNOWNPOI_REMOVALPOI_UPDATE";
  unk_2604C40 = 29;
  dword_2604C00 = 2;
  qword_2604C08 = (uint64_t)"NOTIFICATION_TYPE_UNKNOWN";
  unk_2604C10 = 25;
  dword_2604C18 = 0;
  qword_2604BF0 = (uint64_t)"NOTIFICATION_TYPE_TRANSITNOTIFICATION_TYPE_UNKNOWN";
  unk_2604BF8 = 25;
  qword_2604BD8 = (uint64_t)"NOTIFICATION_TYPE_TILENOTIFICATION_TYPE_TRANSITNOTIFICATION_TYPE_UNKNOWN";
  unk_2604BE0 = 22;
  dword_2604BE8 = 4;
  dword_2604BB8 = 1;
  qword_2604BC0 = (uint64_t)"NOTIFICATION_TYPE_RESOLUTIONNOTIFICATION_TYPE_TILENOTIFICATION_TYPE_TRANSITNOTIFICATION_TYPE_UNKNOWN";
  unk_2604BC8 = 28;
  dword_2604BD0 = 8;
  qword_2604BA8 = (uint64_t)"NOTIFICATION_TYPE_POINOTIFICATION_TYPE_RESOLUTIONNOTIFICATION_TYPE_TILENOTIFICATION_TYPE_TRANSITNOTIFICATION_TYPE_UNKNOWN";
  qword_2604B90 = (uint64_t)"NOTIFICATION_TYPE_GROUND_VIEWNOTIFICATION_TYPE_POINOTIFICATION_TYPE_RESOLUTIONNOTIFICATION_TYPE_TILENOTIFICATION_TYPE_TRANSITNOTIFICATION_TYPE_UNKNOWN";
  unk_2604B98 = 29;
  dword_2604BA0 = 6;
  qword_2604BB0 = 21;
  qword_2604B78 = (uint64_t)"NOTIFICATION_TYPE_GENERICNOTIFICATION_TYPE_GROUND_VIEWNOTIFICATION_TYPE_POINOTIFICATION_TYPE_RESOLUTIONNOTIFICATION_TYPE_TILENOTIFICATION_TYPE_TRANSITNOTIFICATION_TYPE_UNKNOWN";
  unk_2604B80 = 25;
  dword_2604B70 = 5;
  dword_2604B88 = 7;
  dword_2604B58 = 3;
  qword_2604B68 = 28;
  qword_2604B48 = (uint64_t)"NOTIFICATION_TYPE_ADDRESSNOTIFICATION_TYPE_DIRECTIONSNOTIFICATION_TYPE_GENERICNOTIFICATION_TY"
                           "PE_GROUND_VIEWNOTIFICATION_TYPE_POINOTIFICATION_TYPE_RESOLUTIONNOTIFICATION_TYPE_TILENOTIFICA"
                           "TION_TYPE_TRANSITNOTIFICATION_TYPE_UNKNOWN";
  unk_2604B50 = 25;
  qword_2604968 = (uint64_t)"ASSIGNEE_PREDICTIONDUPLICATE_DETECTIONHIGH_CREDIBILITY_EXCEPTIONHIGH_PRIORITY_DETECTIONLOW_CREDIBILITY_FILTERINGPRIVACY_DETECTIONPROFANITY_DETECTIONRAP_PRIORITY_DETECTIONSPAM_DETECTIONUNKNOWNUSER_CREDIBILITY";
  dword_2604B28 = 1;
  qword_2604B30 = (uint64_t)"USER_ID_TYPE_UNKNOWN";
  unk_2604B38 = 20;
  dword_2604B40 = 0;
  qword_2604B00 = (uint64_t)"USER_ID_TYPE_COMMUNITY_IDUSER_ID_TYPE_DS_IDUSER_ID_TYPE_UNKNOWN";
  *(void *)algn_2604B08 = 25;
  dword_2604B10 = 2;
  qword_2604B18 = (uint64_t)"USER_ID_TYPE_DS_IDUSER_ID_TYPE_UNKNOWN";
  unk_2604B20 = 18;
  dword_2604AF8 = 0;
  qword_2604AE8 = (uint64_t)"USER_ROLE_UNKNOWN";
  qword_2604AD0 = (uint64_t)"USER_ROLE_SYSTEMUSER_ROLE_UNKNOWN";
  unk_2604AD8 = 16;
  dword_2604AE0 = 2;
  qword_2604AF0 = 17;
  qword_2604AB8 = (uint64_t)"USER_ROLE_REPRESENTATIVEUSER_ROLE_SYSTEMUSER_ROLE_UNKNOWN";
  unk_2604AC0 = 24;
  qword_2604AA0 = (uint64_t)"USER_ROLE_CUSTOMERUSER_ROLE_REPRESENTATIVEUSER_ROLE_SYSTEMUSER_ROLE_UNKNOWN";
  *(void *)algn_2604AA8 = 18;
  dword_2604AC8 = 3;
  dword_2604AB0 = 1;
  dword_2604A98 = 0;
  qword_2604A70 = (uint64_t)"CLIENT_CAPABILITIES_OUTREACHCLIENT_CAPABILITIES_UNKNOWN";
  *(void *)algn_2604A78 = 28;
  dword_2604A80 = 1;
  qword_2604A88 = (uint64_t)"CLIENT_CAPABILITIES_UNKNOWN";
  unk_2604A90 = 27;
  qword_2604A58 = (uint64_t)"USER_CREDIBILITY";
  unk_2604A60 = 16;
  dword_2604A50 = 0;
  dword_2604A68 = 4;
  qword_2604A40 = (uint64_t)"UNKNOWNUSER_CREDIBILITY";
  unk_2604A48 = 7;
  qword_2604A28 = (uint64_t)"SPAM_DETECTIONUNKNOWNUSER_CREDIBILITY";
  unk_2604A30 = 14;
  dword_2604A38 = 1;
  qword_2604A10 = (uint64_t)"RAP_PRIORITY_DETECTIONSPAM_DETECTIONUNKNOWNUSER_CREDIBILITY";
  unk_2604A18 = 22;
  dword_2604A08 = 9;
  dword_2604A20 = 6;
  qword_26049F8 = (uint64_t)"PROFANITY_DETECTIONRAP_PRIORITY_DETECTIONSPAM_DETECTIONUNKNOWNUSER_CREDIBILITY";
  unk_2604A00 = 19;
  qword_26049E0 = (uint64_t)"PRIVACY_DETECTIONPROFANITY_DETECTIONRAP_PRIORITY_DETECTIONSPAM_DETECTIONUNKNOWNUSER_CREDIBILITY";
  unk_26049E8 = 17;
  dword_26049F0 = 10;
  qword_26049C8 = (uint64_t)"LOW_CREDIBILITY_FILTERINGPRIVACY_DETECTIONPROFANITY_DETECTIONRAP_PRIORITY_DETECTIONSPAM_DETECTIONUNKNOWNUSER_CREDIBILITY";
  unk_26049D0 = 25;
  dword_26049C0 = 3;
  dword_26049D8 = 7;
  qword_26049B0 = (uint64_t)"HIGH_PRIORITY_DETECTIONLOW_CREDIBILITY_FILTERINGPRIVACY_DETECTIONPROFANITY_DETECTIONRAP_PRIORITY_DETECTIONSPAM_DETECTIONUNKNOWNUSER_CREDIBILITY";
  qword_2604998 = (uint64_t)"HIGH_CREDIBILITY_EXCEPTIONHIGH_PRIORITY_DETECTIONLOW_CREDIBILITY_FILTERINGPRIVACY_DETECTIONPROFANITY_DETECTIONRAP_PRIORITY_DETECTIONSPAM_DETECTIONUNKNOWNUSER_CREDIBILITY";
  unk_26049A0 = 26;
  dword_26049A8 = 8;
  qword_26049B8 = 23;
  qword_2604950 = (uint64_t)"ACTIONABILITY_PREDICTIONASSIGNEE_PREDICTIONDUPLICATE_DETECTIONHIGH_CREDIBILITY_EXCEPTIONHIGH_"
                           "PRIORITY_DETECTIONLOW_CREDIBILITY_FILTERINGPRIVACY_DETECTIONPROFANITY_DETECTIONRAP_PRIORITY_D"
                           "ETECTIONSPAM_DETECTIONUNKNOWNUSER_CREDIBILITY";
  dword_2604978 = 5;
  qword_2604980 = (uint64_t)"DUPLICATE_DETECTIONHIGH_CREDIBILITY_EXCEPTIONHIGH_PRIORITY_DETECTIONLOW_CREDIBILITY_FILTERINGPRIVACY_DETECTIONPROFANITY_DETECTIONRAP_PRIORITY_DETECTIONSPAM_DETECTIONUNKNOWNUSER_CREDIBILITY";
  unk_2604988 = 19;
  dword_2604990 = 2;
  dword_2604960 = 11;
  qword_2604970 = 19;
  qword_2604958 = 24;
  qword_2604938 = (uint64_t)"INDICATOR_UNKNOWN";
  unk_2604940 = 17;
  dword_2604948 = 0;
  qword_26048D8 = (uint64_t)"GEO_ZILCH_POINT_TYPE_UNKNOWN";
  qword_2604920 = (uint64_t)"INDICATOR_NON_KITTY_HAWKINDICATOR_UNKNOWN";
  unk_2604928 = 24;
  dword_2604918 = 1;
  dword_2604930 = 2;
  qword_2604908 = (uint64_t)"INDICATOR_KITTY_HAWKINDICATOR_NON_KITTY_HAWKINDICATOR_UNKNOWN";
  unk_2604910 = 20;
  qword_26048F0 = (uint64_t)"INDICATOR_HYBRIDINDICATOR_KITTY_HAWKINDICATOR_NON_KITTY_HAWKINDICATOR_UNKNOWN";
  *(void *)algn_26048F8 = 16;
  dword_2604900 = 3;
  qword_26041A8 = 28;
  qword_26048E0 = 28;
  dword_26048D0 = 1;
  dword_26048E8 = 0;
  qword_26048A8 = (uint64_t)"GEO_ZILCH_POINT_TYPE_HALF_DUMMYGEO_ZILCH_POINT_TYPE_NORMALGEO_ZILCH_POINT_TYPE_UNKNOWN";
  unk_26048B0 = 31;
  dword_26048B8 = 3;
  uint64_t result = 3;
  qword_26048C8 = 27;
  qword_2604860 = (uint64_t)"SUBMISSION_TRIGGER_TYPE_SEARCH_PLACE_CARDSUBMISSION_TRIGGER_TYPE_UNKNOWN";
  qword_2604868 = 41;
  qword_2604890 = (uint64_t)"GEO_ZILCH_POINT_TYPE_DUMMYGEO_ZILCH_POINT_TYPE_HALF_DUMMYGEO_ZILCH_POINT_TYPE_NORMALGEO_ZILCH"
                           "_POINT_TYPE_UNKNOWN";
  *(void *)algn_2604898 = 26;
  dword_26048A0 = 2;
  dword_2604888 = 0;
  qword_2604878 = (uint64_t)"SUBMISSION_TRIGGER_TYPE_UNKNOWN";
  dword_2604870 = 2;
  dword_26047B0 = 128;
  qword_2604848 = (uint64_t)"SUBMISSION_TRIGGER_TYPE_MAP_APPSUBMISSION_TRIGGER_TYPE_SEARCH_PLACE_CARDSUBMISSION_TRIGGER_TYPE_UNKNOWN";
  unk_2604850 = 31;
  dword_2604858 = 1;
  qword_2604830 = (uint64_t)"SUBMISSION_TRIGGER_TYPE_DROPPED_PLACE_CARDSUBMISSION_TRIGGER_TYPE_MAP_APPSUBMISSION_TRIGGER_TYPE_SEARCH_PLACE_CARDSUBMISSION_TRIGGER_TYPE_UNKNOWN";
  unk_2604838 = 42;
  qword_2604818 = (uint64_t)"SUBMISSION_TRIGGER_TYPE_CURRENT_LOCATION_PLACE_CARDSUBMISSION_TRIGGER_TYPE_DROPPED_PLACE_CARD"
                           "SUBMISSION_TRIGGER_TYPE_MAP_APPSUBMISSION_TRIGGER_TYPE_SEARCH_PLACE_CARDSUBMISSION_TRIGGER_TYPE_UNKNOWN";
  unk_2604820 = 51;
  dword_2604840 = 3;
  dword_2604828 = 4;
  dword_2604810 = 5;
  qword_2604800 = (uint64_t)"MUID_NAMESPACE_VECTOR";
  qword_26047E8 = (uint64_t)"MUID_NAMESPACE_UNKNOWNMUID_NAMESPACE_VECTOR";
  unk_26047F0 = 22;
  dword_26047F8 = 0;
  qword_2604808 = 21;
  qword_26047D0 = (uint64_t)"MUID_NAMESPACE_TRANSITMUID_NAMESPACE_UNKNOWNMUID_NAMESPACE_VECTOR";
  unk_26047D8 = 22;
  dword_26047C8 = 9;
  dword_26047E0 = 2;
  qword_26047B8 = (uint64_t)"MUID_NAMESPACE_TRAFFICMUID_NAMESPACE_TRANSITMUID_NAMESPACE_UNKNOWNMUID_NAMESPACE_VECTOR";
  unk_26047C0 = 22;
  qword_26047A0 = (uint64_t)"MUID_NAMESPACE_TEST_IDSMUID_NAMESPACE_TRAFFICMUID_NAMESPACE_TRANSITMUID_NAMESPACE_UNKNOWNMUID_NAMESPACE_VECTOR";
  unk_26047A8 = 23;
  qword_2604770 = (uint64_t)"MUID_NAMESPACE_OSMMUID_NAMESPACE_SOURCE_CATALOGMUID_NAMESPACE_TEST_IDSMUID_NAMESPACE_TRAFFICMUID_NAMESPACE_TRANSITMUID_NAMESPACE_UNKNOWNMUID_NAMESPACE_VECTOR";
  qword_2604788 = (uint64_t)"MUID_NAMESPACE_SOURCE_CATALOGMUID_NAMESPACE_TEST_IDSMUID_NAMESPACE_TRAFFICMUID_NAMESPACE_TRANSITMUID_NAMESPACE_UNKNOWNMUID_NAMESPACE_VECTOR";
  dword_2604780 = 11;
  qword_2604790 = 29;
  dword_2604798 = 10;
  qword_2604758 = (uint64_t)"MUID_NAMESPACE_NEUTRON_BULKMUID_NAMESPACE_OSMMUID_NAMESPACE_SOURCE_CATALOGMUID_NAMESPACE_TEST_IDSMUID_NAMESPACE_TRAFFICMUID_NAMESPACE_TRANSITMUID_NAMESPACE_UNKNOWNMUID_NAMESPACE_VECTOR";
  unk_2604760 = 27;
  dword_2604768 = 7;
  qword_2604778 = 18;
  qword_2604728 = (uint64_t)"MUID_NAMESPACE_INDOORMUID_NAMESPACE_NEUTRONMUID_NAMESPACE_NEUTRON_BULKMUID_NAMESPACE_OSMMUID_NAMESPACE_SOURCE_CATALOGMUID_NAMESPACE_TEST_IDSMUID_NAMESPACE_TRAFFICMUID_NAMESPACE_TRANSITMUID_NAMESPACE_UNKNOWNMUID_NAMESPACE_VECTOR";
  unk_2604730 = 21;
  qword_2604740 = (uint64_t)"MUID_NAMESPACE_NEUTRONMUID_NAMESPACE_NEUTRON_BULKMUID_NAMESPACE_OSMMUID_NAMESPACE_SOURCE_CATALOGMUID_NAMESPACE_TEST_IDSMUID_NAMESPACE_TRAFFICMUID_NAMESPACE_TRANSITMUID_NAMESPACE_UNKNOWNMUID_NAMESPACE_VECTOR";
  unk_2604748 = 22;
  dword_2604738 = 4;
  dword_2604750 = 3;
  qword_2604710 = (uint64_t)"MUID_NAMESPACE_GEMINI_EVENTMUID_NAMESPACE_INDOORMUID_NAMESPACE_NEUTRONMUID_NAMESPACE_NEUTRON_BULKMUID_NAMESPACE_OSMMUID_NAMESPACE_SOURCE_CATALOGMUID_NAMESPACE_TEST_IDSMUID_NAMESPACE_TRAFFICMUID_NAMESPACE_TRANSITMUID_NAMESPACE_UNKNOWNMUID_NAMESPACE_VECTOR";
  unk_2604718 = 27;
  dword_2604720 = 13;
  qword_26046F8 = (uint64_t)"MUID_NAMESPACE_GEMINI_BRANDMUID_NAMESPACE_GEMINI_EVENTMUID_NAMESPACE_INDOORMUID_NAMESPACE_NEUTRONMUID_NAMESPACE_NEUTRON_BULKMUID_NAMESPACE_OSMMUID_NAMESPACE_SOURCE_CATALOGMUID_NAMESPACE_TEST_IDSMUID_NAMESPACE_TRAFFICMUID_NAMESPACE_TRANSITMUID_NAMESPACE_UNKNOWNMUID_NAMESPACE_VECTOR";
  unk_2604700 = 27;
  qword_26046E0 = (uint64_t)"MUID_NAMESPACE_GEMINIMUID_NAMESPACE_GEMINI_BRANDMUID_NAMESPACE_GEMINI_EVENTMUID_NAMESPACE_INDOORMUID_NAMESPACE_NEUTRONMUID_NAMESPACE_NEUTRON_BULKMUID_NAMESPACE_OSMMUID_NAMESPACE_SOURCE_CATALOGMUID_NAMESPACE_TEST_IDSMUID_NAMESPACE_TRAFFICMUID_NAMESPACE_TRANSITMUID_NAMESPACE_UNKNOWNMUID_NAMESPACE_VECTOR";
  unk_26046E8 = 21;
  dword_2604708 = 12;
  dword_26046F0 = 1;
  qword_26045F0 = (uint64_t)"MAP_LAYER_AOIMAP_LAYER_BUILDINGMAP_LAYER_POIMAP_LAYER_STREETMAP_LAYER_TERRITORYMAP_LAYER_TRANSITMAP_LAYER_UNKNOWNMAP_LAYER_WATER";
  qword_26046C8 = (uint64_t)"MUID_NAMESPACE_FLYOVERMUID_NAMESPACE_GEMINIMUID_NAMESPACE_GEMINI_BRANDMUID_NAMESPACE_GEMINI_EVENTMUID_NAMESPACE_INDOORMUID_NAMESPACE_NEUTRONMUID_NAMESPACE_NEUTRON_BULKMUID_NAMESPACE_OSMMUID_NAMESPACE_SOURCE_CATALOGMUID_NAMESPACE_TEST_IDSMUID_NAMESPACE_TRAFFICMUID_NAMESPACE_TRANSITMUID_NAMESPACE_UNKNOWNMUID_NAMESPACE_VECTOR";
  unk_26046D0 = 22;
  dword_26046C0 = 8;
  dword_26046D8 = 6;
  qword_26046B0 = (uint64_t)"MUID_NAMESPACE_ESRIMUID_NAMESPACE_FLYOVERMUID_NAMESPACE_GEMINIMUID_NAMESPACE_GEMINI_BRANDMUID"
                           "_NAMESPACE_GEMINI_EVENTMUID_NAMESPACE_INDOORMUID_NAMESPACE_NEUTRONMUID_NAMESPACE_NEUTRON_BULK"
                           "MUID_NAMESPACE_OSMMUID_NAMESPACE_SOURCE_CATALOGMUID_NAMESPACE_TEST_IDSMUID_NAMESPACE_TRAFFICM"
                           "UID_NAMESPACE_TRANSITMUID_NAMESPACE_UNKNOWNMUID_NAMESPACE_VECTOR";
  *(void *)algn_26046B8 = 19;
  qword_2604698 = (uint64_t)"MAP_LAYER_WATER";
  unk_26046A0 = 15;
  dword_26046A8 = 4;
  dword_2604678 = 7;
  qword_2604680 = (uint64_t)"MAP_LAYER_UNKNOWNMAP_LAYER_WATER";
  unk_2604688 = 17;
  dword_2604690 = 0;
  qword_2604668 = (uint64_t)"MAP_LAYER_TRANSITMAP_LAYER_UNKNOWNMAP_LAYER_WATER";
  unk_2604670 = 17;
  qword_2604650 = (uint64_t)"MAP_LAYER_TERRITORYMAP_LAYER_TRANSITMAP_LAYER_UNKNOWNMAP_LAYER_WATER";
  unk_2604658 = 19;
  dword_2604660 = 1;
  qword_2604638 = (uint64_t)"MAP_LAYER_STREETMAP_LAYER_TERRITORYMAP_LAYER_TRANSITMAP_LAYER_UNKNOWNMAP_LAYER_WATER";
  unk_2604640 = 16;
  dword_2604630 = 5;
  dword_2604648 = 2;
  qword_2604620 = (uint64_t)"MAP_LAYER_POIMAP_LAYER_STREETMAP_LAYER_TERRITORYMAP_LAYER_TRANSITMAP_LAYER_UNKNOWNMAP_LAYER_WATER";
  qword_2604608 = (uint64_t)"MAP_LAYER_BUILDINGMAP_LAYER_POIMAP_LAYER_STREETMAP_LAYER_TERRITORYMAP_LAYER_TRANSITMAP_LAYER_UNKNOWNMAP_LAYER_WATER";
  unk_2604610 = 18;
  dword_2604618 = 6;
  qword_2604628 = 13;
  qword_26045F8 = 13;
  dword_2604600 = 3;
  qword_26045C0 = (uint64_t)"OS_TYPE_WATCH_OS";
  unk_26045C8 = 16;
  qword_26045D8 = (uint64_t)"MAP_LAYER_ADDRESSMAP_LAYER_AOIMAP_LAYER_BUILDINGMAP_LAYER_POIMAP_LAYER_STREETMAP_LAYER_TERRIT"
                           "ORYMAP_LAYER_TRANSITMAP_LAYER_UNKNOWNMAP_LAYER_WATER";
  unk_26045E0 = 17;
  dword_26045E8 = 8;
  dword_26045D0 = 4;
  qword_26045A8 = (uint64_t)"OS_TYPE_VISION_OSOS_TYPE_WATCH_OS";
  unk_26045B0 = 17;
  dword_26045B8 = 5;
  qword_2604590 = (uint64_t)"OS_TYPE_UNKNOWNOS_TYPE_VISION_OSOS_TYPE_WATCH_OS";
  unk_2604598 = 15;
  qword_2604578 = (uint64_t)"OS_TYPE_TV_OSOS_TYPE_UNKNOWNOS_TYPE_VISION_OSOS_TYPE_WATCH_OS";
  unk_2604580 = 13;
  dword_26045A0 = 0;
  dword_2604588 = 3;
  qword_2604518 = (uint64_t)"ANNOTATION_USER_MATCHES_SOURCEANNOTATION_USER_WINNING";
  qword_2604560 = (uint64_t)"OS_TYPE_OS_XOS_TYPE_TV_OSOS_TYPE_UNKNOWNOS_TYPE_VISION_OSOS_TYPE_WATCH_OS";
  unk_2604568 = 12;
  dword_2604558 = 1;
  dword_2604570 = 2;
  qword_2604548 = (uint64_t)"OS_TYPE_IOSOS_TYPE_OS_XOS_TYPE_TV_OSOS_TYPE_UNKNOWNOS_TYPE_VISION_OSOS_TYPE_WATCH_OS";
  unk_2604550 = 11;
  qword_2604530 = (uint64_t)"ANNOTATION_USER_WINNING";
  unk_2604538 = 23;
  dword_2604540 = 2;
  qword_2604520 = 30;
  qword_2604500 = (uint64_t)"ANNOTATION_USER_INACCURATEANNOTATION_USER_MATCHES_SOURCEANNOTATION_USER_WINNING";
  unk_2604508 = 26;
  dword_2604510 = 4;
  dword_2604528 = 3;
  qword_26044E8 = (uint64_t)"ANNOTATION_UNSUPPORTED_CORRECTIONANNOTATION_USER_INACCURATEANNOTATION_USER_MATCHES_SOURCEANNOTATION_USER_WINNING";
  unk_26044F0 = 33;
  qword_26044D0 = (uint64_t)"ANNOTATION_UNKNOWNANNOTATION_UNSUPPORTED_CORRECTIONANNOTATION_USER_INACCURATEANNOTATION_USER_"
                           "MATCHES_SOURCEANNOTATION_USER_WINNING";
  *(void *)algn_26044D8 = 18;
  dword_26044F8 = 1;
  dword_26044E0 = 0;
  qword_26044B8 = (uint64_t)"RESOLVER_UNKNOWN";
  qword_26044A0 = (uint64_t)"RESOLVER_EDITORSRESOLVER_UNKNOWN";
  unk_26044A8 = 16;
  qword_26044C0 = 16;
  dword_26044C8 = 0;
  dword_26044B0 = 2;
  qword_26043F8 = (uint64_t)"HIGH_CREDIBILITY_USERHIGH_PRIORITYLOW_CREDIBILITY_USERPRIVACYPROFANITYUNKNOWN";
  qword_2604488 = (uint64_t)"RESOLVER_AUTOMATIONRESOLVER_EDITORSRESOLVER_UNKNOWN";
  unk_2604490 = 19;
  dword_2604498 = 1;
  dword_2604480 = 0;
  qword_2604470 = (uint64_t)"UNKNOWN";
  unk_2604478 = 7;
  qword_2604458 = (uint64_t)"PROFANITYUNKNOWN";
  unk_2604460 = 9;
  dword_2604468 = 1;
  qword_2604440 = (uint64_t)"PRIVACYPROFANITYUNKNOWN";
  unk_2604448 = 7;
  dword_2604438 = 4;
  dword_2604450 = 5;
  qword_2604410 = (uint64_t)"HIGH_PRIORITYLOW_CREDIBILITY_USERPRIVACYPROFANITYUNKNOWN";
  unk_2604418 = 13;
  dword_2604420 = 2;
  qword_2604428 = (uint64_t)"LOW_CREDIBILITY_USERPRIVACYPROFANITYUNKNOWN";
  unk_2604430 = 20;
  qword_26043E0 = (uint64_t)"ACTIONABLEHIGH_CREDIBILITY_USERHIGH_PRIORITYLOW_CREDIBILITY_USERPRIVACYPROFANITYUNKNOWN";
  *(void *)algn_26043E8 = 10;
  qword_2604400 = 21;
  dword_2604408 = 3;
  dword_26043F0 = 6;
  qword_26043C8 = (uint64_t)"UNKNOWN";
  unk_26043D0 = 7;
  dword_26043D8 = 0;
  qword_2604350 = (uint64_t)"MUIDUNKNOWN";
  qword_26043B0 = (uint64_t)"NAMEUNKNOWN";
  unk_26043B8 = 4;
  dword_26043A8 = 2;
  dword_26043C0 = 1;
  qword_2604380 = (uint64_t)"LOCATIONMUIDNAMEUNKNOWN";
  *(void *)algn_2604388 = 8;
  dword_2604390 = 3;
  qword_2604398 = (uint64_t)"MUIDNAMEUNKNOWN";
  unk_26043A0 = 4;
  qword_2604338 = (uint64_t)"LOCATIONMUIDUNKNOWN";
  unk_2604340 = 8;
  qword_2604368 = (uint64_t)"UNKNOWN";
  unk_2604370 = 7;
  dword_2604360 = 2;
  dword_2604378 = 0;
  dword_2604348 = 1;
  qword_2604358 = 4;
  qword_26042F0 = (uint64_t)"DECODER_DATA_ZILCH_POINTROUTE_ZILCH_POINTZILCH_POINT_SOURCE_UNKNOWN";
  qword_2604320 = (uint64_t)"ZILCH_POINT_SOURCE_UNKNOWN";
  unk_2604328 = 26;
  dword_2604318 = 1;
  dword_2604330 = 0;
  qword_26042D8 = (uint64_t)"DECODER_DATA_WALKING_ZILCH_POINTDECODER_DATA_ZILCH_POINTROUTE_ZILCH_POINTZILCH_POINT_SOURCE_UNKNOWN";
  qword_2604308 = (uint64_t)"ROUTE_ZILCH_POINTZILCH_POINT_SOURCE_UNKNOWN";
  unk_2604310 = 17;
  dword_26042E8 = 3;
  dword_2604300 = 2;
  qword_26042F8 = 24;
  qword_2604260 = (uint64_t)"FIXEDIN_PROGRESSON_HOLDREJECTEDUNKNOWN";
  qword_26042C0 = (uint64_t)"UNKNOWN";
  unk_26042C8 = 7;
  dword_26042D0 = 0;
  qword_2604290 = (uint64_t)"ON_HOLDREJECTEDUNKNOWN";
  unk_2604298 = 7;
  qword_26042A8 = (uint64_t)"REJECTEDUNKNOWN";
  unk_26042B0 = 8;
  dword_26042A0 = 4;
  dword_26042B8 = 5;
  qword_2604278 = (uint64_t)"IN_PROGRESSON_HOLDREJECTEDUNKNOWN";
  unk_2604280 = 11;
  dword_2604288 = 3;
  qword_2604248 = (uint64_t)"DEPLOYINGFIXEDIN_PROGRESSON_HOLDREJECTEDUNKNOWN";
  unk_2604250 = 9;
  dword_2604258 = 6;
  qword_2604268 = 5;
  dword_2604270 = 7;
  qword_2604230 = (uint64_t)"DELETEDDEPLOYINGFIXEDIN_PROGRESSON_HOLDREJECTEDUNKNOWN";
  unk_2604238 = 7;
  qword_2604218 = (uint64_t)"CREATEDDELETEDDEPLOYINGFIXEDIN_PROGRESSON_HOLDREJECTEDUNKNOWN";
  unk_2604220 = 7;
  dword_2604228 = 2;
  dword_2604240 = 1;
  qword_2604200 = (uint64_t)"TEMPORARY_CLOSURE";
  unk_2604208 = 17;
  qword_26041A0 = (uint64_t)"CORRECTED_HOURS_TYPE_UNKNOWNNORMALPERMANENT_CLOSURESPECIALTEMPORARY_CLOSURE";
  dword_2604210 = 3;
  qword_26041D0 = (uint64_t)"PERMANENT_CLOSURESPECIALTEMPORARY_CLOSURE";
  unk_26041D8 = 17;
  dword_26041B0 = 0;
  dword_26041E0 = 4;
  qword_26041F0 = 7;
  dword_26041F8 = 2;
  qword_26041C0 = 6;
  dword_26041C8 = 1;
  qword_26040F8 = (uint64_t)"AUTOCOMPLETEEXTERNALFWDGEOMUIDPLACE_SEARCH_TYPE_UNKNOWNREVGEOSEARCH";
  unk_2604100 = 12;
  dword_2604108 = 4;
  qword_2604118 = 8;
  dword_2604120 = 6;
  qword_2604130 = 6;
  qword_2604178 = 6;
  dword_2604180 = 2;
  qword_2604190 = 6;
  dword_2604198 = 3;
  dword_2604138 = 1;
  qword_2604148 = 4;
  dword_2604150 = 5;
  qword_2604160 = 25;
  dword_2604168 = 0;
  qword_2604038 = (uint64_t)"ABORTEDASSIGNEDCOMPLETEDINCOMPLETE_WORKFLOWNEWPAUSEDQUEUEDUNKNOWN";
  unk_2604040 = 7;
  dword_2604048 = 4;
  qword_2604058 = 8;
  dword_2604060 = 2;
  qword_2604070 = 9;
  dword_2604078 = 6;
  qword_2604088 = 19;
  dword_2604090 = 5;
  qword_26040A0 = 3;
  dword_26040A8 = 7;
  qword_26040E8 = 7;
  dword_26040F0 = 0;
  qword_26040B8 = 6;
  dword_26040C0 = 3;
  qword_26040C8 = (uint64_t)"QUEUEDUNKNOWN";
  unk_26040D0 = 6;
  dword_26040D8 = 1;
  qword_2605018 = 21;
  dword_2605020 = 0;
  qword_2605028 = (uint64_t)"ACTIVEDELETEDINDICATOR_UNKNOWNMARKED_FOR_DELETERESTRICTED";
  unk_2605030 = 6;
  dword_2605038 = 1;
  qword_2605040 = (uint64_t)"DELETEDINDICATOR_UNKNOWNMARKED_FOR_DELETERESTRICTED";
  unk_2605048 = 7;
  dword_2605050 = 2;
  qword_2605058 = (uint64_t)"INDICATOR_UNKNOWNMARKED_FOR_DELETERESTRICTED";
  unk_2605060 = 17;
  dword_2605068 = 0;
  qword_2605070 = (uint64_t)"MARKED_FOR_DELETERESTRICTED";
  unk_2605078 = 17;
  dword_2605080 = 3;
  qword_2605088 = (uint64_t)"RESTRICTED";
  unk_2605090 = 10;
  dword_2605098 = 4;
  qword_26050A0 = (uint64_t)"ABORTACCESS_STATUS_UNKNOWNINITIATEIN_PROGRESS";
  *(void *)algn_26050A8 = 5;
  dword_26050B0 = 2;
  qword_26050B8 = (uint64_t)"ACCESS_STATUS_UNKNOWNINITIATEIN_PROGRESS";
  unk_26050C0 = 21;
  dword_26050C8 = 0;
  qword_26050D0 = (uint64_t)"INITIATEIN_PROGRESS";
  unk_26050D8 = 8;
  dword_26050E0 = 1;
  qword_26050E8 = (uint64_t)"IN_PROGRESS";
  unk_26050F0 = 11;
  dword_26050F8 = 3;
  qword_2605100 = (uint64_t)"ACCESSDELETEFREEZEMARK_FOR_DELETEREQUEST_TYPE_UNKNOWNRESTRICTUNDO_DELETEUNDO_RESTRICT";
  *(void *)algn_2605108 = 6;
  dword_2605110 = 1;
  qword_2605118 = (uint64_t)"DELETEFREEZEMARK_FOR_DELETEREQUEST_TYPE_UNKNOWNRESTRICTUNDO_DELETEUNDO_RESTRICT";
  unk_2605120 = 6;
  dword_2605128 = 6;
  qword_2605130 = (uint64_t)"FREEZEMARK_FOR_DELETEREQUEST_TYPE_UNKNOWNRESTRICTUNDO_DELETEUNDO_RESTRICT";
  unk_2605138 = 6;
  dword_2605140 = 7;
  qword_2605148 = (uint64_t)"MARK_FOR_DELETEREQUEST_TYPE_UNKNOWNRESTRICTUNDO_DELETEUNDO_RESTRICT";
  unk_2605150 = 15;
  dword_2605158 = 4;
  qword_2605160 = (uint64_t)"REQUEST_TYPE_UNKNOWNRESTRICTUNDO_DELETEUNDO_RESTRICT";
  unk_2605168 = 20;
  dword_2605170 = 0;
  qword_2605178 = (uint64_t)"RESTRICTUNDO_DELETEUNDO_RESTRICT";
  unk_2605180 = 8;
  dword_2605188 = 2;
  qword_2605190 = (uint64_t)"UNDO_DELETEUNDO_RESTRICT";
  unk_2605198 = 11;
  dword_26051A0 = 5;
  qword_26051A8 = (uint64_t)"UNDO_RESTRICT";
  unk_26051B0 = 13;
  dword_26051B8 = 3;
  qword_26051D8 = (uint64_t)"EVENT_TYPE_RETENTIONEVENT_TYPE_UNKNOWN";
  unk_26051E0 = 20;
  qword_26051C0 = (uint64_t)"EVENT_TYPE_DELETIONEVENT_TYPE_RETENTIONEVENT_TYPE_UNKNOWN";
  *(void *)algn_26051C8 = 19;
  dword_26051D0 = 2;
  dword_26051E8 = 1;
  qword_26051F0 = (uint64_t)"EVENT_TYPE_UNKNOWN";
  unk_26051F8 = 18;
  dword_2605200 = 0;
  qword_2605208 = (uint64_t)"LEGALRAP_SERVERSOURCE_UNKNOWNUSER";
  unk_2605210 = 5;
  dword_2605218 = 2;
  qword_2605220 = (uint64_t)"RAP_SERVERSOURCE_UNKNOWNUSER";
  unk_2605228 = 10;
  dword_2605230 = 3;
  qword_2605238 = (uint64_t)"SOURCE_UNKNOWNUSER";
  unk_2605240 = 14;
  dword_2605248 = 0;
  qword_2605250 = (uint64_t)"USER";
  unk_2605258 = 4;
  dword_2605260 = 1;
  qword_2605268 = (uint64_t)"AGENT_UNKNOWNARP_ASSET_STOREFEEDBACK_COLLECTORGEMINIHEISENBERGHEMLOCKJURYLANCELEAF_MODELRAP_A"
                           "NALYTICSRAP_SERVERTHREE_DV";
  unk_2605270 = 13;
  dword_2605278 = 0;
  qword_2605280 = (uint64_t)"ARP_ASSET_STOREFEEDBACK_COLLECTORGEMINIHEISENBERGHEMLOCKJURYLANCELEAF_MODELRAP_ANALYTICSRAP_SERVERTHREE_DV";
  unk_2605288 = 15;
  dword_2605290 = 9;
  qword_2605298 = (uint64_t)"FEEDBACK_COLLECTORGEMINIHEISENBERGHEMLOCKJURYLANCELEAF_MODELRAP_ANALYTICSRAP_SERVERTHREE_DV";
  unk_26052A0 = 18;
  dword_26052A8 = 6;
  qword_26052B0 = (uint64_t)"GEMINIHEISENBERGHEMLOCKJURYLANCELEAF_MODELRAP_ANALYTICSRAP_SERVERTHREE_DV";
  unk_26052B8 = 6;
  dword_26052C0 = 1;
  qword_26052C8 = (uint64_t)"HEISENBERGHEMLOCKJURYLANCELEAF_MODELRAP_ANALYTICSRAP_SERVERTHREE_DV";
  unk_26052D0 = 10;
  dword_26052D8 = 2;
  qword_26052E0 = (uint64_t)"HEMLOCKJURYLANCELEAF_MODELRAP_ANALYTICSRAP_SERVERTHREE_DV";
  unk_26052E8 = 7;
  dword_26052F0 = 10;
  qword_26052F8 = (uint64_t)"JURYLANCELEAF_MODELRAP_ANALYTICSRAP_SERVERTHREE_DV";
  unk_2605300 = 4;
  dword_2605308 = 8;
  qword_2605310 = (uint64_t)"LANCELEAF_MODELRAP_ANALYTICSRAP_SERVERTHREE_DV";
  unk_2605318 = 15;
  dword_2605320 = 7;
  qword_2605328 = (uint64_t)"RAP_ANALYTICSRAP_SERVERTHREE_DV";
  unk_2605330 = 13;
  dword_2605338 = 3;
  qword_2605340 = (uint64_t)"RAP_SERVERTHREE_DV";
  unk_2605348 = 10;
  dword_2605350 = 4;
  qword_2605358 = (uint64_t)"THREE_DV";
  unk_2605360 = 8;
  dword_2605368 = 5;
  qword_2605370 = (uint64_t)"FAILEDNOT_APPLICABLERECEIVEDSENTSTATUS_UNKNOWN";
  *(void *)algn_2605378 = 6;
  dword_2605380 = 4;
  qword_2605388 = (uint64_t)"NOT_APPLICABLERECEIVEDSENTSTATUS_UNKNOWN";
  unk_2605390 = 14;
  dword_2605398 = 3;
  qword_26053A0 = (uint64_t)"RECEIVEDSENTSTATUS_UNKNOWN";
  unk_26053A8 = 8;
  dword_26053B0 = 2;
  qword_26053B8 = (uint64_t)"SENTSTATUS_UNKNOWN";
  unk_26053C0 = 4;
  dword_26053C8 = 1;
  qword_26053D0 = (uint64_t)"STATUS_UNKNOWN";
  unk_26053D8 = 14;
  dword_26053E0 = 0;
  qword_2605400 = (uint64_t)"ACTION_UNKNOWNDATA_STATUSDEACTIVATEERROR_ALERTNOOPPURGEREACTIVATEREPUBLISHRETIRERETRIEVE";
  unk_2605408 = 14;
  qword_2605418 = (uint64_t)"DATA_STATUSDEACTIVATEERROR_ALERTNOOPPURGEREACTIVATEREPUBLISHRETIRERETRIEVE";
  unk_2605420 = 11;
  qword_2605430 = (uint64_t)"DEACTIVATEERROR_ALERTNOOPPURGEREACTIVATEREPUBLISHRETIRERETRIEVE";
  qword_2605448 = (uint64_t)"ERROR_ALERTNOOPPURGEREACTIVATEREPUBLISHRETIRERETRIEVE";
  unk_2605450 = 11;
  qword_26053E8 = (uint64_t)"ABORTACTION_UNKNOWNDATA_STATUSDEACTIVATEERROR_ALERTNOOPPURGEREACTIVATEREPUBLISHRETIRERETRIEVE";
  unk_26053F0 = 5;
  dword_26053F8 = 8;
  dword_2605410 = 0;
  dword_2605428 = 10;
  qword_2605438 = 10;
  dword_2605440 = 3;
  dword_2605458 = 2;
  qword_2605460 = (uint64_t)"NOOPPURGEREACTIVATEREPUBLISHRETIRERETRIEVE";
  unk_2605468 = 4;
  dword_2605470 = 1;
  qword_2605478 = (uint64_t)"PURGEREACTIVATEREPUBLISHRETIRERETRIEVE";
  qword_2605480 = 5;
  dword_2605488 = 5;
  qword_2605490 = (uint64_t)"REACTIVATEREPUBLISHRETIRERETRIEVE";
  unk_2605498 = 10;
  dword_26054A0 = 4;
  qword_26054A8 = (uint64_t)"REPUBLISHRETIRERETRIEVE";
  unk_26054B0 = 9;
  dword_26054B8 = 7;
  qword_26054C0 = (uint64_t)"RETIRERETRIEVE";
  unk_26054C8 = 6;
  dword_26054D0 = 9;
  qword_26054D8 = (uint64_t)"RETRIEVE";
  unk_26054E0 = 8;
  dword_26054E8 = 6;
  qword_2605508 = (uint64_t)"REJECTEDREPORT_OUTCOME_UNKNOWN";
  unk_2605510 = 8;
  qword_26054F0 = (uint64_t)"ACCEPTEDREJECTEDREPORT_OUTCOME_UNKNOWN";
  *(void *)algn_26054F8 = 8;
  qword_2605520 = (uint64_t)"REPORT_OUTCOME_UNKNOWN";
  dword_2605500 = 1;
  dword_2605518 = 2;
  qword_2605528 = 22;
  dword_2605530 = 0;
  qword_2605538 = (uint64_t)"ANNOTATIONS_UNKNOWNMATCHES_USER_INCIDENTMATCHES_VENDOR_INCIDENT";
  unk_2605540 = 19;
  qword_2605550 = (uint64_t)"MATCHES_USER_INCIDENTMATCHES_VENDOR_INCIDENT";
  unk_2605558 = 21;
  dword_2605548 = 0;
  dword_2605560 = 1;
  qword_2605568 = (uint64_t)"MATCHES_VENDOR_INCIDENT";
  unk_2605570 = 23;
  dword_2605578 = 2;
  qword_2605580 = (uint64_t)"AUTO_UP_VOTEMISSING_USER_LOCATIONNOT_INFORMATIVENOT_NEAR_ROADREJECTION_REASON_UNKNOWNUNSUPPOR"
                           "TED_INCIDENT_TYPEUSER_LOCATION_TOO_FAR";
  *(void *)algn_2605588 = 12;
  qword_26055B0 = (uint64_t)"NOT_INFORMATIVENOT_NEAR_ROADREJECTION_REASON_UNKNOWNUNSUPPORTED_INCIDENT_TYPEUSER_LOCATION_TOO_FAR";
  unk_26055B8 = 15;
  qword_26055C8 = (uint64_t)"NOT_NEAR_ROADREJECTION_REASON_UNKNOWNUNSUPPORTED_INCIDENT_TYPEUSER_LOCATION_TOO_FAR";
  unk_26055D0 = 13;
  qword_26055E0 = (uint64_t)"REJECTION_REASON_UNKNOWNUNSUPPORTED_INCIDENT_TYPEUSER_LOCATION_TOO_FAR";
  unk_26055E8 = 24;
  qword_2605598 = (uint64_t)"MISSING_USER_LOCATIONNOT_INFORMATIVENOT_NEAR_ROADREJECTION_REASON_UNKNOWNUNSUPPORTED_INCIDENT_TYPEUSER_LOCATION_TOO_FAR";
  unk_26055A0 = 21;
  dword_2605590 = 6;
  dword_26055A8 = 3;
  dword_26055C0 = 2;
  dword_26055D8 = 1;
  dword_26055F0 = 0;
  qword_26055F8 = (uint64_t)"UNSUPPORTED_INCIDENT_TYPEUSER_LOCATION_TOO_FAR";
  unk_2605600 = 25;
  dword_2605608 = 7;
  qword_2605610 = (uint64_t)"USER_LOCATION_TOO_FAR";
  unk_2605618 = 21;
  dword_2605620 = 4;
  qword_2605640 = (uint64_t)"CONFLATION_OF_UGC_REPORTSCONFLATION_TO_VENDOR_INCIDENTDOWN_VOTESMANUAL_CURATION";
  unk_2605648 = 25;
  qword_2605658 = (uint64_t)"CONFLATION_TO_VENDOR_INCIDENTDOWN_VOTESMANUAL_CURATION";
  qword_2605660 = 29;
  qword_2605670 = (uint64_t)"DOWN_VOTESMANUAL_CURATION";
  unk_2605678 = 10;
  qword_2605628 = (uint64_t)"ANNOTATION_UNKNOWNCONFLATION_OF_UGC_REPORTSCONFLATION_TO_VENDOR_INCIDENTDOWN_VOTESMANUAL_CURATION";
  unk_2605630 = 18;
  dword_2605638 = 0;
  dword_2605650 = 4;
  dword_2605668 = 3;
  dword_2605680 = 2;
  qword_2605688 = (uint64_t)"MANUAL_CURATION";
  unk_2605690 = 15;
  dword_2605698 = 1;
  qword_26056A0 = (uint64_t)"INCIDENT_ADDEDINCIDENT_EXTENDEDINCIDENT_REMOVEDINCIDENT_TYPE_CHANGEDNO_CHANGEOUTCOME_UNKNOWN";
  *(void *)algn_26056A8 = 14;
  qword_26056B8 = (uint64_t)"INCIDENT_EXTENDEDINCIDENT_REMOVEDINCIDENT_TYPE_CHANGEDNO_CHANGEOUTCOME_UNKNOWN";
  unk_26056C0 = 17;
  dword_26056C8 = 5;
  qword_26056D0 = (uint64_t)"INCIDENT_REMOVEDINCIDENT_TYPE_CHANGEDNO_CHANGEOUTCOME_UNKNOWN";
  unk_26056D8 = 16;
  qword_26056E8 = (uint64_t)"INCIDENT_TYPE_CHANGEDNO_CHANGEOUTCOME_UNKNOWN";
  unk_26056F0 = 21;
  qword_2605700 = (uint64_t)"NO_CHANGEOUTCOME_UNKNOWN";
  unk_2605708 = 9;
  dword_26056B0 = 1;
  dword_26056E0 = 2;
  dword_26056F8 = 3;
  dword_2605710 = 4;
  qword_2605718 = (uint64_t)"OUTCOME_UNKNOWN";
  unk_2605720 = 15;
  dword_2605728 = 0;
  qword_2605730 = (uint64_t)"CONFIDENCE_UNKNOWNHIGHLOWMEDIUM";
  *(void *)algn_2605738 = 18;
  qword_2605760 = (uint64_t)"LOWMEDIUM";
  unk_2605768 = 3;
  dword_2605758 = 3;
  qword_2605748 = (uint64_t)"HIGHLOWMEDIUM";
  unk_2605750 = 4;
  dword_2605740 = 0;
  dword_2605770 = 1;
  qword_2605778 = (uint64_t)"MEDIUM";
  unk_2605780 = 6;
  dword_2605788 = 2;
  qword_26057A8 = (uint64_t)"SIRIUNKNOWN";
  unk_26057B0 = 4;
  qword_2605790 = (uint64_t)"MAPSSIRIUNKNOWN";
  *(void *)algn_2605798 = 4;
  dword_26057A0 = 1;
  dword_26057B8 = 2;
  qword_26057C0 = (uint64_t)"UNKNOWN";
  unk_26057C8 = 7;
  dword_26057D0 = 0;
  qword_26057D8 = (uint64_t)"UNKNOWNUSER_LOCATIONVENDOR_INCIDENT";
  unk_26057E0 = 7;
  qword_26057F0 = (uint64_t)"USER_LOCATIONVENDOR_INCIDENT";
  unk_26057F8 = 13;
  dword_2605800 = 1;
  qword_2605808 = (uint64_t)"VENDOR_INCIDENT";
  unk_2605810 = 15;
  dword_2605818 = 2;
  dword_26057E8 = 0;
  return result;
}

void *sub_13057E0(void *a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  a1[1] = v4;
  *a1 = off_24A8240;
  sub_1882BC4((uint64_t)(a1 + 2), a2);
  a1[5] = 0;
  a1[6] = 0;
  return a1;
}

void sub_1305844(_Unwind_Exception *a1)
{
  *uint64_t v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_1305874(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  uint64_t v4 = a1 + 16;
  *(void *)a1 = off_24A8240;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 44) = 0;
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v4, a2 + 16);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  return a1;
}

void sub_1305914(_Unwind_Exception *a1)
{
  sub_1882CC0(v3);
  *uint64_t v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_1305954(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_13059D0(void *a1)
{
  sub_1305954(a1);

  operator delete();
}

unsigned char *sub_1305A08(uint64_t a1)
{
  uint64_t result = sub_18843A4((unsigned char *)(a1 + 16));
  if ((*(unsigned char *)(a1 + 40) & 3) != 0) {
    *(void *)(a1 + 48) = 0;
  }
  char v4 = *(unsigned char *)(a1 + 8);
  uint64_t v3 = a1 + 8;
  *(_DWORD *)(v3 + 32) = 0;
  if (v4)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_1305A6C(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v26 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (1)
  {
    int v8 = v26 + 1;
    unsigned int v9 = *v26;
    if (*v26 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        int v8 = (char *)sub_188C180((uint64_t)v26, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        int v8 = v26 + 2;
      }
    }
    uint64_t v26 = v8;
    if (v9 >> 3 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_13;
    }
    v5 |= 2u;
    uint64_t v15 = v8 + 1;
    int v16 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_23;
    }
    int v17 = *v15;
    int v16 = v16 + (v17 << 7) - 128;
    if ((v17 & 0x80000000) == 0)
    {
      uint64_t v15 = v8 + 2;
LABEL_23:
      uint64_t v26 = v15;
      *(_DWORD *)(a1 + 52) = v16;
      goto LABEL_32;
    }
    uint64_t v22 = (char *)sub_188C0D0((uint64_t)v8, v16);
    uint64_t v26 = v22;
    *(_DWORD *)(a1 + 52) = v23;
    if (!v22) {
      goto LABEL_41;
    }
LABEL_32:
    if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 >> 3 == 1 && v9 == 8)
  {
    v5 |= 1u;
    uint64_t v18 = v8 + 1;
    int v19 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_27;
    }
    int v20 = *v18;
    int v19 = v19 + (v20 << 7) - 128;
    if ((v20 & 0x80000000) == 0)
    {
      uint64_t v18 = v8 + 2;
LABEL_27:
      uint64_t v26 = v18;
      *(_DWORD *)(a1 + 48) = v19;
      goto LABEL_32;
    }
    uint64_t v24 = (char *)sub_188C0D0((uint64_t)v8, v19);
    uint64_t v26 = v24;
    *(_DWORD *)(a1 + 48) = v25;
    if (!v24) {
      goto LABEL_41;
    }
    goto LABEL_32;
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (v9 - 8000 > 0x327)
    {
      if (*v7)
      {
        uint64_t v21 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        uint64_t v21 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        int v8 = v26;
      }
      uint64_t v14 = sub_1885AC0(v9, v21, v8, a3);
    }
    else
    {
      uint64_t v14 = sub_18859DC((uint64_t **)(a1 + 16), v9, v8, (uint64_t)&off_2532480, (uint64_t *)(a1 + 8), a3);
    }
    uint64_t v26 = (char *)v14;
    if (!v14) {
      goto LABEL_41;
    }
    goto LABEL_32;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_41:
  uint64_t v26 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 40) |= v5;
  return v26;
}

char *sub_1305C9C(uint64_t a1, char *a2, _DWORD *a3)
{
  char v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 48);
    char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 52);
    char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (*(_WORD *)(a1 + 26)) {
    char v4 = sub_1886844(a1 + 16, 1000, 1101, v4, a3);
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    int v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    int v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_1305E64(uint64_t a1)
{
  uint64_t result = sub_1889280(a1 + 16);
  int v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 3) != 0)
  {
    if (v3) {
      result += ((9 * (__clz(*(_DWORD *)(a1 + 48) | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v3 & 2) != 0) {
      result += ((9 * (__clz(*(_DWORD *)(a1 + 52) | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v5 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    result += v6;
  }
  *(_DWORD *)(a1 + 44) = result;
  return result;
}

void sub_1305F18(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 40);
  if ((v4 & 3) != 0)
  {
    if (v4) {
      *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
    }
    if ((v4 & 2) != 0) {
      *(_DWORD *)(a1 + 52) = *(_DWORD *)(a2 + 52);
    }
    *(_DWORD *)(a1 + 40) |= v4;
  }
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_1305FA8(uint64_t a1)
{
  return sub_18856CC(a1 + 16);
}

void *sub_1305FB0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.ABClientDatasetMetadata");
}

uint64_t sub_1305FC0(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_24A82C0;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  return a1;
}

void sub_130603C(_Unwind_Exception *a1)
{
  *uint64_t v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_1306070(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_13060E4(void *a1)
{
  sub_1306070(a1);

  operator delete();
}

uint64_t sub_130611C(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 16) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_1306134(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v19 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
    goto LABEL_27;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    unsigned int v7 = v19 + 1;
    unsigned int v8 = *v19;
    if (*v19 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        unsigned int v7 = (char *)sub_188C180((uint64_t)v19, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        unsigned int v7 = v19 + 2;
      }
    }
    int v19 = v7;
    if (v8 != 8) {
      break;
    }
    uint64_t v13 = v7 + 1;
    int v14 = *v7;
    if ((*v7 & 0x80000000) == 0) {
      goto LABEL_19;
    }
    int v15 = *v13;
    int v14 = v14 + (v15 << 7) - 128;
    if ((v15 & 0x80000000) == 0)
    {
      uint64_t v13 = v7 + 2;
LABEL_19:
      int v19 = v13;
      *(_DWORD *)(a1 + 24) = v14;
      int v5 = 1;
      goto LABEL_20;
    }
    int v16 = (char *)sub_188C0D0((uint64_t)v7, v14);
    int v19 = v16;
    *(_DWORD *)(a1 + 24) = v17;
    int v5 = 1;
    if (!v16) {
      goto LABEL_28;
    }
LABEL_20:
    if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
      goto LABEL_27;
    }
  }
  if (v8) {
    BOOL v11 = (v8 & 7) == 4;
  }
  else {
    BOOL v11 = 1;
  }
  if (!v11)
  {
    if (*v6)
    {
      unsigned int v12 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unsigned int v12 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unsigned int v7 = v19;
    }
    int v19 = (char *)sub_1885AC0(v8, v12, v7, a3);
    if (!v19) {
      goto LABEL_28;
    }
    goto LABEL_20;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    goto LABEL_27;
  }
LABEL_28:
  int v19 = 0;
LABEL_27:
  *(_DWORD *)(a1 + 16) |= v5;
  return v19;
}

unsigned char *sub_13062B4(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v6 = *(_DWORD *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v6;
    if (v6 > 0x7F)
    {
      v4[1] = v6 | 0x80;
      unsigned int v7 = v6 >> 7;
      v4[2] = v6 >> 7;
      v4 += 3;
      if (v6 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v8 = v7 >> 14;
          v7 >>= 7;
          *v4++ = v7;
        }
        while (v8);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    unsigned int v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    unsigned int v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    v4 += v14;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v12, v13, v4);
}

uint64_t sub_13063DC(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16)) {
    uint64_t v1 = ((9 * (__clz(*(_DWORD *)(a1 + 24) | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  else {
    uint64_t v1 = 0;
  }
  uint64_t v2 = *(void *)(a1 + 8);
  if (v2)
  {
    unint64_t v4 = v2 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v5 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v5 = *(unsigned __int8 *)(v4 + 31);
    }
    v1 += v5;
  }
  *(_DWORD *)(a1 + 20) = v1;
  return v1;
}

uint64_t sub_1306444()
{
  return 1;
}

void *sub_130644C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.DatasetABStatus");
}

void *sub_130645C(uint64_t a1)
{
  if (!a1)
  {
    sub_131FFDC();
  }

  return sub_13057E0(v3, a1, 0);
}

uint64_t sub_13064B8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24A82C0;
  *(void *)(result + 16) = 0;
  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t sub_1306534(uint64_t a1)
{
  int v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  unint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_25324D8)
  {
    unsigned int v6 = *(void **)(a1 + 72);
    if (v6)
    {
      sub_1305954(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  sub_13200C8((void *)(a1 + 48));
  sub_1320048((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1306604(uint64_t a1)
{
  sub_1306534(a1);

  operator delete();
}

uint64_t sub_130663C(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    int v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_13098B0(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  uint64_t v5 = *(unsigned int *)(v1 + 56);
  if ((int)v5 >= 1)
  {
    unsigned int v6 = (uint64_t *)(*(void *)(v1 + 64) + 8);
    do
    {
      uint64_t v7 = *v6++;
      uint64_t result = sub_130739C(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(v1 + 56) = 0;
  }
  if (*(unsigned char *)(v1 + 16)) {
    uint64_t result = (uint64_t)sub_1305A08(*(void *)(v1 + 72));
  }
  char v9 = *(unsigned char *)(v1 + 8);
  uint64_t v8 = v1 + 8;
  *(_DWORD *)(v8 + 8) = 0;
  if (v9)
  {
    return sub_188B4AC((uint64_t *)v8);
  }
  return result;
}

char *sub_13066F4(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v30 = a2;
  if (sub_11947B8((uint64_t)a3, &v30, a3[11].i32[1])) {
    return v30;
  }
  unsigned int v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v30 + 1;
    unsigned int v8 = *v30;
    if (*v30 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v30, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v30 + 2;
      }
    }
    uint64_t v30 = v7;
    unsigned int v11 = v8 >> 3;
    if (v8 >> 3 != 5) {
      break;
    }
    if (v8 != 42) {
      goto LABEL_14;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    int v16 = *(void **)(a1 + 72);
    if (!v16)
    {
      int v17 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        int v17 = (void *)*v17;
      }
      int v16 = sub_130645C((uint64_t)v17);
      *(void *)(a1 + 72) = v16;
      uint64_t v7 = v30;
    }
    int v15 = sub_1192188(a3, (uint64_t)v16, (unsigned __int8 *)v7);
LABEL_27:
    uint64_t v30 = v15;
    if (!v15) {
      return 0;
    }
LABEL_28:
    if (sub_11947B8((uint64_t)a3, &v30, a3[11].i32[1])) {
      return v30;
    }
  }
  if (v11 == 2)
  {
    if (v8 == 18)
    {
      uint64_t v18 = v7 - 1;
      while (1)
      {
        int v19 = (unsigned __int8 *)(v18 + 1);
        uint64_t v30 = v18 + 1;
        int v20 = *(_DWORD **)(a1 + 64);
        if (v20 && (uint64_t v21 = *(int *)(a1 + 56), (int)v21 < *v20))
        {
          *(_DWORD *)(a1 + 56) = v21 + 1;
          uint64_t v22 = *(void *)&v20[2 * v21 + 2];
        }
        else
        {
          int v23 = sub_130BE74(*(void *)(a1 + 48));
          uint64_t v22 = sub_188CDC8(a1 + 48, (uint64_t)v23);
          int v19 = (unsigned __int8 *)v30;
        }
        uint64_t v18 = (char *)sub_1306A24(a3, v22, v19);
        uint64_t v30 = v18;
        if (!v18) {
          return 0;
        }
        if (*(void *)a3 <= (unint64_t)v18 || *v18 != 18) {
          goto LABEL_28;
        }
      }
    }
  }
  else if (v11 == 1 && v8 == 10)
  {
    uint64_t v24 = v7 - 1;
    while (1)
    {
      int v25 = (unsigned __int8 *)(v24 + 1);
      uint64_t v30 = v24 + 1;
      uint64_t v26 = *(_DWORD **)(a1 + 40);
      if (v26 && (uint64_t v27 = *(int *)(a1 + 32), (int)v27 < *v26))
      {
        *(_DWORD *)(a1 + 32) = v27 + 1;
        uint64_t v28 = *(void *)&v26[2 * v27 + 2];
      }
      else
      {
        uint64_t v29 = sub_130BFC0(*(void *)(a1 + 24));
        uint64_t v28 = sub_188CDC8(a1 + 24, (uint64_t)v29);
        int v25 = (unsigned __int8 *)v30;
      }
      uint64_t v24 = (char *)sub_1306994(a3, v28, v25);
      uint64_t v30 = v24;
      if (!v24) {
        return 0;
      }
      if (*(void *)a3 <= (unint64_t)v24 || *v24 != 10) {
        goto LABEL_28;
      }
    }
  }
LABEL_14:
  if (v8) {
    BOOL v13 = (v8 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v6)
    {
      uint64_t v14 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = v30;
    }
    int v15 = (char *)sub_1885AC0(v8, v14, v7, a3);
    goto LABEL_27;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v30;
  }
  return 0;
}

uint64_t sub_1306994(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_130998C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_1306A24(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_13087A8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1306AB4(uint64_t a1, char *__dst, unint64_t *a3)
{
  int v6 = *(_DWORD *)(a1 + 32);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unsigned int v10 = __dst + 2;
      }
      __dst = sub_1309CF4(v8, (unint64_t)v10, a3);
    }
  }
  int v11 = *(_DWORD *)(a1 + 56);
  if (v11)
  {
    for (int j = 0; j != v11; ++j)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v13 = *(void *)(*(void *)(a1 + 64) + 8 * j + 8);
      *__dst = 18;
      unsigned int v14 = *(_DWORD *)(v13 + 20);
      __dst[1] = v14;
      if (v14 > 0x7F) {
        int v15 = sub_188A9CC(v14, __dst + 1);
      }
      else {
        int v15 = __dst + 2;
      }
      __dst = sub_1308B68(v13, v15, a3);
    }
  }
  if (*(unsigned char *)(a1 + 16))
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    uint64_t v16 = *(void *)(a1 + 72);
    *__dst = 42;
    unsigned int v17 = *(_DWORD *)(v16 + 44);
    __dst[1] = v17;
    if (v17 > 0x7F) {
      uint64_t v18 = sub_188A9CC(v17, __dst + 1);
    }
    else {
      uint64_t v18 = __dst + 2;
    }
    __dst = sub_1305C9C(v16, v18, a3);
  }
  uint64_t v19 = *(void *)(a1 + 8);
  if ((v19 & 1) == 0) {
    return __dst;
  }
  unint64_t v21 = v19 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v21 + 31) < 0)
  {
    uint64_t v22 = *(void **)(v21 + 8);
    uint64_t v23 = *(void *)(v21 + 16);
  }
  else
  {
    uint64_t v22 = (void *)(v21 + 8);
    LODWORD(v23) = *(unsigned __int8 *)(v21 + 31);
  }
  if ((uint64_t)(*a3 - (void)__dst) >= (int)v23)
  {
    uint64_t v24 = (int)v23;
    memcpy(__dst, v22, (int)v23);
    __dst += v24;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v22, v23, __dst);
}

uint64_t sub_1306CE4(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_1309F54(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(int *)(a1 + 56);
  uint64_t v9 = v2 + v8;
  uint64_t v10 = *(void *)(a1 + 64);
  if (v10) {
    int v11 = (uint64_t *)(v10 + 8);
  }
  else {
    int v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_1308D54(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  if (*(unsigned char *)(a1 + 16))
  {
    uint64_t v15 = sub_1305E64(*(void *)(a1 + 72));
    v9 += v15 + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if (v16)
  {
    unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v18 + 31) < 0) {
      uint64_t v19 = *(void *)(v18 + 16);
    }
    else {
      uint64_t v19 = *(unsigned __int8 *)(v18 + 31);
    }
    v9 += v19;
  }
  *(_DWORD *)(a1 + 20) = v9;
  return v9;
}

void sub_1306E18(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_1320248((std::string *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    uint64_t v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    int v11 = (std::string **)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_13202D4((std::string *)(a1 + 48), v11, v10, v9, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v12 = *(_DWORD *)(a1 + 56) + v9;
    *(_DWORD *)(a1 + 56) = v12;
    uint64_t v13 = *(int **)(a1 + 64);
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  if (*(unsigned char *)(a2 + 16))
  {
    uint64_t v14 = *(uint64_t (****)())(a2 + 72);
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v15 = *(void **)(a1 + 72);
    if (!v15)
    {
      uint64_t v16 = *(void *)(a1 + 8);
      unsigned int v17 = (void *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
      if (v16) {
        unsigned int v17 = (void *)*v17;
      }
      uint64_t v15 = sub_130645C((uint64_t)v17);
      *(void *)(a1 + 72) = v15;
      uint64_t v14 = *(uint64_t (****)())(a2 + 72);
    }
    if (v14) {
      unint64_t v18 = v14;
    }
    else {
      unint64_t v18 = &off_2532480;
    }
    sub_1305F18((uint64_t)v15, (uint64_t)v18);
  }
  uint64_t v19 = *(void *)(a2 + 8);
  if (v19)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v19 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_1306FA0(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 1;
  }
  uint64_t result = sub_18856CC(*(void *)(a1 + 72) + 16);
  if (result) {
    return 1;
  }
  return result;
}

void *sub_1306FD0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.abtesting.ABAssignmentResponse.ABSecondPartyPlaceRequestClientMetaData");
}

uint64_t sub_1306FE0(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  *(void *)(a1 + 8) = v5;
  *(void *)a1 = off_24A83C0;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = a2;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = &qword_2550250;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 122) = 0u;
  return a1;
}

void sub_1307068(_Unwind_Exception *a1)
{
  *uint64_t v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_1307098(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_1307130((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  sub_1320048(a1 + 6);
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void ***sub_1307130(uint64_t a1)
{
  uint64_t v3 = *(uint64_t **)(a1 + 72);
  uint64_t result = (void ***)(a1 + 72);
  if (v3 != &qword_2550250) {
    sub_1881C6C(result);
  }
  if ((uint64_t (***)())a1 != &off_2532528)
  {
    uint64_t v4 = *(void *)(a1 + 80);
    if (v4)
    {
      sub_13086B8(v4);
      operator delete();
    }
    uint64_t v5 = *(void *)(a1 + 88);
    if (v5)
    {
      sub_1306534(v5);
      operator delete();
    }
    uint64_t v6 = *(void *)(a1 + 96);
    if (v6)
    {
      sub_1306534(v6);
      operator delete();
    }
    uint64_t v7 = *(void *)(a1 + 104);
    if (v7)
    {
      sub_1306534(v7);
      operator delete();
    }
    uint64_t result = *(void ****)(a1 + 112);
    if (result)
    {
      sub_1306534((uint64_t)result);
      operator delete();
    }
  }
  return result;
}

void sub_1307234(void *a1)
{
  sub_1307098(a1);

  operator delete();
}

uint64_t sub_130726C(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  uint64_t v3 = *(unsigned int *)(a1 + 56);
  if ((int)v3 >= 1)
  {
    uint64_t v4 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = sub_13098B0(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 56) = 0;
  }
  int v6 = *(_DWORD *)(a1 + 40);
  if ((v6 & 0x3F) == 0) {
    goto LABEL_13;
  }
  if (v6)
  {
    unint64_t v9 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v9 + 23) < 0)
    {
      **(unsigned char **)unint64_t v9 = 0;
      *(void *)(v9 + 8) = 0;
      if ((v6 & 2) != 0) {
        goto LABEL_25;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v9 = 0;
      *(unsigned char *)(v9 + 23) = 0;
      if ((v6 & 2) != 0) {
        goto LABEL_25;
      }
    }
LABEL_8:
    if ((v6 & 4) == 0) {
      goto LABEL_9;
    }
    goto LABEL_26;
  }
  if ((v6 & 2) == 0) {
    goto LABEL_8;
  }
LABEL_25:
  uint64_t result = sub_130739C(*(void *)(a1 + 80));
  if ((v6 & 4) == 0)
  {
LABEL_9:
    if ((v6 & 8) == 0) {
      goto LABEL_10;
    }
LABEL_27:
    uint64_t result = sub_130663C(*(void *)(a1 + 96));
    if ((v6 & 0x10) == 0)
    {
LABEL_11:
      if ((v6 & 0x20) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }
    goto LABEL_28;
  }
LABEL_26:
  uint64_t result = sub_130663C(*(void *)(a1 + 88));
  if ((v6 & 8) != 0) {
    goto LABEL_27;
  }
LABEL_10:
  if ((v6 & 0x10) == 0) {
    goto LABEL_11;
  }
LABEL_28:
  uint64_t result = sub_130663C(*(void *)(a1 + 104));
  if ((v6 & 0x20) != 0) {
LABEL_12:
  }
    uint64_t result = sub_130663C(*(void *)(a1 + 112));
LABEL_13:
  if ((v6 & 0xC0) != 0)
  {
    *(void *)(a1 + 120) = 0;
    *(void *)(a1 + 128) = 0;
  }
  if ((v6 & 0x300) != 0) {
    *(_WORD *)(a1 + 136) = 0;
  }
  char v8 = *(unsigned char *)(a1 + 8);
  uint64_t v7 = a1 + 8;
  *(_DWORD *)(v7 + 32) = 0;
  if (v8)
  {
    return sub_188B4AC((uint64_t *)v7);
  }
  return result;
}

uint64_t sub_130739C(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_130B0FC(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  uint64_t v5 = *(unsigned int *)(v1 + 56);
  if ((int)v5 >= 1)
  {
    int v6 = (uint64_t *)(*(void *)(v1 + 64) + 8);
    do
    {
      uint64_t v7 = *v6++;
      uint64_t result = sub_1308FB0(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(v1 + 56) = 0;
  }
  if (*(unsigned char *)(v1 + 16))
  {
    unint64_t v8 = *(void *)(v1 + 72) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v8 + 23) < 0)
    {
      **(unsigned char **)unint64_t v8 = 0;
      *(void *)(v8 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v8 = 0;
      *(unsigned char *)(v8 + 23) = 0;
    }
  }
  char v10 = *(unsigned char *)(v1 + 8);
  uint64_t v9 = v1 + 8;
  *(_DWORD *)(v9 + 8) = 0;
  if (v10)
  {
    return sub_188B4AC((uint64_t *)v9);
  }
  return result;
}

uint64_t sub_1307474(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v51 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v51, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    unint64_t v8 = (unsigned __int8 *)(*(void *)v51 + 1);
    unsigned int v9 = **(unsigned char **)v51;
    if ((char)**(unsigned char **)v51 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        unint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v51, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unint64_t v8 = (unsigned __int8 *)(*(void *)v51 + 2);
      }
    }
    *(void *)uint64_t v51 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_74;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        uint64_t v12 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        uint64_t v14 = (std::string *)sub_1880F84((void *)(a1 + 72), v13);
        uint64_t v15 = (uint64_t)sub_188C244(v14, *(char **)v51, (uint64_t)a3);
        goto LABEL_66;
      case 2u:
        if (v9 != 18) {
          goto LABEL_74;
        }
        uint64_t v16 = v8 - 1;
        while (1)
        {
          unsigned int v17 = v16 + 1;
          *(void *)uint64_t v51 = v16 + 1;
          unint64_t v18 = *(_DWORD **)(a1 + 64);
          if (v18 && (uint64_t v19 = *(int *)(a1 + 56), (int)v19 < *v18))
          {
            *(_DWORD *)(a1 + 56) = v19 + 1;
            uint64_t v20 = *(void *)&v18[2 * v19 + 2];
          }
          else
          {
            unint64_t v21 = sub_130BFC0(*(void *)(a1 + 48));
            uint64_t v20 = sub_188CDC8(a1 + 48, (uint64_t)v21);
            unsigned int v17 = *(unsigned __int8 **)v51;
          }
          uint64_t v16 = (unsigned __int8 *)sub_1306994(a3, v20, v17);
          *(void *)uint64_t v51 = v16;
          if (!v16) {
            goto LABEL_94;
          }
          if (*(void *)a3 <= (unint64_t)v16 || *v16 != 18) {
            goto LABEL_67;
          }
        }
      case 3u:
        if (v9 != 24) {
          goto LABEL_74;
        }
        v5 |= 0x100u;
        uint64_t v22 = (char *)(v8 + 1);
        uint64_t v23 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_27;
        }
        int v24 = *v22;
        uint64_t v23 = v23 + (v24 << 7) - 128;
        if (v24 < 0)
        {
          uint64_t v43 = sub_188C138((uint64_t)v8, v23);
          *(void *)uint64_t v51 = v43;
          *(unsigned char *)(a1 + 136) = v44 != 0;
          if (!v43) {
            goto LABEL_94;
          }
        }
        else
        {
          uint64_t v22 = (char *)(v8 + 2);
LABEL_27:
          *(void *)uint64_t v51 = v22;
          *(unsigned char *)(a1 + 136) = v23 != 0;
        }
        goto LABEL_67;
      case 4u:
        if (v9 != 32) {
          goto LABEL_74;
        }
        v5 |= 0x200u;
        int v25 = (char *)(v8 + 1);
        uint64_t v26 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_32;
        }
        int v27 = *v25;
        uint64_t v26 = v26 + (v27 << 7) - 128;
        if (v27 < 0)
        {
          uint64_t v45 = sub_188C138((uint64_t)v8, v26);
          *(void *)uint64_t v51 = v45;
          *(unsigned char *)(a1 + 137) = v46 != 0;
          if (!v45) {
            goto LABEL_94;
          }
        }
        else
        {
          int v25 = (char *)(v8 + 2);
LABEL_32:
          *(void *)uint64_t v51 = v25;
          *(unsigned char *)(a1 + 137) = v26 != 0;
        }
        goto LABEL_67;
      case 5u:
        if (v9 != 40) {
          goto LABEL_74;
        }
        v5 |= 0x40u;
        uint64_t v28 = (char *)(v8 + 1);
        uint64_t v29 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_37;
        }
        int v30 = *v28;
        uint64_t v29 = v29 + (v30 << 7) - 128;
        if (v30 < 0)
        {
          uint64_t v47 = sub_188C138((uint64_t)v8, v29);
          *(void *)uint64_t v51 = v47;
          *(void *)(a1 + 120) = v48;
          if (!v47) {
            goto LABEL_94;
          }
        }
        else
        {
          uint64_t v28 = (char *)(v8 + 2);
LABEL_37:
          *(void *)uint64_t v51 = v28;
          *(void *)(a1 + 120) = v29;
        }
        goto LABEL_67;
      case 6u:
        if (v9 != 50) {
          goto LABEL_74;
        }
        *(_DWORD *)(a1 + 40) |= 2u;
        int v31 = *(void **)(a1 + 80);
        if (!v31)
        {
          BOOL v32 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            BOOL v32 = (void *)*v32;
          }
          int v31 = sub_130BE74((uint64_t)v32);
          *(void *)(a1 + 80) = v31;
          unint64_t v8 = *(unsigned __int8 **)v51;
        }
        uint64_t v15 = sub_1306A24(a3, (uint64_t)v31, v8);
        goto LABEL_66;
      case 7u:
        if (v9 != 58) {
          goto LABEL_74;
        }
        *(_DWORD *)(a1 + 40) |= 4u;
        BOOL v33 = *(void **)(a1 + 88);
        if (v33) {
          goto LABEL_65;
        }
        uint64_t v34 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          uint64_t v34 = (void *)*v34;
        }
        BOOL v33 = sub_130BD74((uint64_t)v34);
        *(void *)(a1 + 88) = v33;
        goto LABEL_64;
      case 8u:
        if (v9 != 66) {
          goto LABEL_74;
        }
        *(_DWORD *)(a1 + 40) |= 8u;
        BOOL v33 = *(void **)(a1 + 96);
        if (v33) {
          goto LABEL_65;
        }
        int v35 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          int v35 = (void *)*v35;
        }
        BOOL v33 = sub_130BD74((uint64_t)v35);
        *(void *)(a1 + 96) = v33;
        goto LABEL_64;
      case 9u:
        if (v9 != 74) {
          goto LABEL_74;
        }
        *(_DWORD *)(a1 + 40) |= 0x10u;
        BOOL v33 = *(void **)(a1 + 104);
        if (v33) {
          goto LABEL_65;
        }
        uint64_t v36 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          uint64_t v36 = (void *)*v36;
        }
        BOOL v33 = sub_130BD74((uint64_t)v36);
        *(void *)(a1 + 104) = v33;
        goto LABEL_64;
      case 0xAu:
        if (v9 != 82) {
          goto LABEL_74;
        }
        *(_DWORD *)(a1 + 40) |= 0x20u;
        BOOL v33 = *(void **)(a1 + 112);
        if (v33) {
          goto LABEL_65;
        }
        uint64_t v37 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          uint64_t v37 = (void *)*v37;
        }
        BOOL v33 = sub_130BD74((uint64_t)v37);
        *(void *)(a1 + 112) = v33;
LABEL_64:
        unint64_t v8 = *(unsigned __int8 **)v51;
LABEL_65:
        uint64_t v15 = (uint64_t)sub_127B5B0(a3, (uint64_t)v33, v8);
        goto LABEL_66;
      case 0xBu:
        if (v9 != 88) {
          goto LABEL_74;
        }
        v5 |= 0x80u;
        int v38 = (char *)(v8 + 1);
        uint64_t v39 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_73;
        }
        int v40 = *v38;
        uint64_t v39 = v39 + (v40 << 7) - 128;
        if (v40 < 0)
        {
          uint64_t v49 = sub_188C138((uint64_t)v8, v39);
          *(void *)uint64_t v51 = v49;
          *(void *)(a1 + 128) = v50;
          if (!v49) {
            goto LABEL_94;
          }
        }
        else
        {
          int v38 = (char *)(v8 + 2);
LABEL_73:
          *(void *)uint64_t v51 = v38;
          *(void *)(a1 + 128) = v39;
        }
        goto LABEL_67;
      default:
LABEL_74:
        if (v9) {
          BOOL v41 = (v9 & 7) == 4;
        }
        else {
          BOOL v41 = 1;
        }
        if (!v41)
        {
          if (v9 - 800 > 0x63F)
          {
            if (*v7)
            {
              unint64_t v42 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              unint64_t v42 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              unint64_t v8 = *(unsigned __int8 **)v51;
            }
            uint64_t v15 = (uint64_t)sub_1885AC0(v9, v42, (char *)v8, a3);
          }
          else
          {
            uint64_t v15 = (uint64_t)sub_18859DC((uint64_t **)(a1 + 16), v9, (char *)v8, (uint64_t)&off_2532528, (uint64_t *)(a1 + 8), a3);
          }
LABEL_66:
          *(void *)uint64_t v51 = v15;
          if (!v15) {
            goto LABEL_94;
          }
LABEL_67:
          if (sub_11947B8((uint64_t)a3, (char **)v51, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_94:
        }
          *(void *)uint64_t v51 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 40) |= v5;
        return *(void *)v51;
    }
  }
}

char *sub_1307A10(uint64_t a1, char *a2, unint64_t *a3)
{
  uint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL), a2);
  }
  int v7 = *(_DWORD *)(a1 + 56);
  if (v7)
  {
    for (int i = 0; i != v7; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v9 = *(void *)(*(void *)(a1 + 64) + 8 * i + 8);
      char *v4 = 18;
      unsigned int v10 = *(_DWORD *)(v9 + 20);
      v4[1] = v10;
      if (v10 > 0x7F) {
        unsigned int v11 = sub_188A9CC(v10, v4 + 1);
      }
      else {
        unsigned int v11 = v4 + 2;
      }
      uint64_t v4 = sub_1309CF4(v9, (unint64_t)v11, a3);
    }
  }
  if ((v6 & 0x100) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v12 = *(unsigned char *)(a1 + 136);
    char *v4 = 24;
    v4[1] = v12;
    v4 += 2;
    if ((v6 & 0x200) == 0)
    {
LABEL_13:
      if ((v6 & 0x40) == 0) {
        goto LABEL_27;
      }
      goto LABEL_21;
    }
  }
  else if ((v6 & 0x200) == 0)
  {
    goto LABEL_13;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v13 = *(unsigned char *)(a1 + 137);
  char *v4 = 32;
  v4[1] = v13;
  v4 += 2;
  if ((v6 & 0x40) != 0)
  {
LABEL_21:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v14 = *(void *)(a1 + 120);
    char *v4 = 40;
    v4[1] = v14;
    if (v14 > 0x7F)
    {
      v4[1] = v14 | 0x80;
      unint64_t v15 = v14 >> 7;
      v4[2] = v14 >> 7;
      v4 += 3;
      if (v14 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v16 = v15 >> 14;
          v15 >>= 7;
          *v4++ = v15;
        }
        while (v16);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_27:
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v17 = *(void *)(a1 + 80);
    char *v4 = 50;
    unsigned int v18 = *(_DWORD *)(v17 + 20);
    v4[1] = v18;
    if (v18 > 0x7F) {
      uint64_t v19 = sub_188A9CC(v18, v4 + 1);
    }
    else {
      uint64_t v19 = v4 + 2;
    }
    uint64_t v4 = sub_1308B68(v17, v19, a3);
    if ((v6 & 4) == 0)
    {
LABEL_29:
      if ((v6 & 8) == 0) {
        goto LABEL_30;
      }
      goto LABEL_46;
    }
  }
  else if ((v6 & 4) == 0)
  {
    goto LABEL_29;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v20 = *(void *)(a1 + 88);
  char *v4 = 58;
  unsigned int v21 = *(_DWORD *)(v20 + 20);
  v4[1] = v21;
  if (v21 > 0x7F) {
    uint64_t v22 = sub_188A9CC(v21, v4 + 1);
  }
  else {
    uint64_t v22 = v4 + 2;
  }
  uint64_t v4 = sub_1306AB4(v20, v22, a3);
  if ((v6 & 8) == 0)
  {
LABEL_30:
    if ((v6 & 0x10) == 0) {
      goto LABEL_31;
    }
    goto LABEL_52;
  }
LABEL_46:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v23 = *(void *)(a1 + 96);
  char *v4 = 66;
  unsigned int v24 = *(_DWORD *)(v23 + 20);
  v4[1] = v24;
  if (v24 > 0x7F) {
    int v25 = sub_188A9CC(v24, v4 + 1);
  }
  else {
    int v25 = v4 + 2;
  }
  uint64_t v4 = sub_1306AB4(v23, v25, a3);
  if ((v6 & 0x10) == 0)
  {
LABEL_31:
    if ((v6 & 0x20) == 0) {
      goto LABEL_32;
    }
    goto LABEL_58;
  }
LABEL_52:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v26 = *(void *)(a1 + 104);
  char *v4 = 74;
  unsigned int v27 = *(_DWORD *)(v26 + 20);
  v4[1] = v27;
  if (v27 > 0x7F) {
    uint64_t v28 = sub_188A9CC(v27, v4 + 1);
  }
  else {
    uint64_t v28 = v4 + 2;
  }
  uint64_t v4 = sub_1306AB4(v26, v28, a3);
  if ((v6 & 0x20) == 0)
  {
LABEL_32:
    if ((v6 & 0x80) == 0) {
      goto LABEL_70;
    }
    goto LABEL_64;
  }
LABEL_58:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v29 = *(void *)(a1 + 112);
  char *v4 = 82;
  unsigned int v30 = *(_DWORD *)(v29 + 20);
  v4[1] = v30;
  if (v30 > 0x7F) {
    int v31 = sub_188A9CC(v30, v4 + 1);
  }
  else {
    int v31 = v4 + 2;
  }
  uint64_t v4 = sub_1306AB4(v29, v31, a3);
  if ((v6 & 0x80) != 0)
  {
LABEL_64:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v32 = *(void *)(a1 + 128);
    char *v4 = 88;
    v4[1] = v32;
    if (v32 > 0x7F)
    {
      v4[1] = v32 | 0x80;
      unint64_t v33 = v32 >> 7;
      v4[2] = v32 >> 7;
      v4 += 3;
      if (v32 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v34 = v33 >> 14;
          v33 >>= 7;
          *v4++ = v33;
        }
        while (v34);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_70:
  if (*(_WORD *)(a1 + 26)) {
    uint64_t v4 = sub_1886844(a1 + 16, 100, 300, v4, a3);
  }
  uint64_t v35 = *(void *)(a1 + 8);
  if ((v35 & 1) == 0) {
    return v4;
  }
  unint64_t v37 = v35 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v37 + 31) < 0)
  {
    int v38 = *(void **)(v37 + 8);
    uint64_t v39 = *(void *)(v37 + 16);
  }
  else
  {
    int v38 = (void *)(v37 + 8);
    LODWORD(v39) = *(unsigned __int8 *)(v37 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v39)
  {
    uint64_t v40 = (int)v39;
    memcpy(v4, v38, (int)v39);
    v4 += v40;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v38, v39, v4);
}

uint64_t sub_1307F1C(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(int *)(a1 + 56);
  uint64_t v4 = v2 + v3;
  uint64_t v5 = *(void *)(a1 + 64);
  if (v5) {
    int v6 = (uint64_t *)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = sub_1309F54(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  int v10 = *(_DWORD *)(a1 + 40);
  if (!(_BYTE)v10) {
    goto LABEL_17;
  }
  if (v10)
  {
    unint64_t v14 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v15 = *(unsigned __int8 *)(v14 + 23);
    uint64_t v16 = *(void *)(v14 + 8);
    if ((v15 & 0x80u) == 0) {
      uint64_t v16 = v15;
    }
    v4 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v10 & 2) == 0)
    {
LABEL_10:
      if ((v10 & 4) == 0) {
        goto LABEL_11;
      }
      goto LABEL_30;
    }
  }
  else if ((v10 & 2) == 0)
  {
    goto LABEL_10;
  }
  uint64_t v17 = sub_1308D54(*(void *)(a1 + 80));
  v4 += v17 + ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v10 & 4) == 0)
  {
LABEL_11:
    if ((v10 & 8) == 0) {
      goto LABEL_12;
    }
    goto LABEL_31;
  }
LABEL_30:
  uint64_t v18 = sub_1306CE4(*(void *)(a1 + 88));
  v4 += v18 + ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v10 & 8) == 0)
  {
LABEL_12:
    if ((v10 & 0x10) == 0) {
      goto LABEL_13;
    }
    goto LABEL_32;
  }
LABEL_31:
  uint64_t v19 = sub_1306CE4(*(void *)(a1 + 96));
  v4 += v19 + ((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v10 & 0x10) == 0)
  {
LABEL_13:
    if ((v10 & 0x20) == 0) {
      goto LABEL_14;
    }
LABEL_33:
    uint64_t v21 = sub_1306CE4(*(void *)(a1 + 112));
    v4 += v21 + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v10 & 0x40) == 0)
    {
LABEL_15:
      if ((v10 & 0x80) == 0) {
        goto LABEL_17;
      }
      goto LABEL_16;
    }
    goto LABEL_34;
  }
LABEL_32:
  uint64_t v20 = sub_1306CE4(*(void *)(a1 + 104));
  v4 += v20 + ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v10 & 0x20) != 0) {
    goto LABEL_33;
  }
LABEL_14:
  if ((v10 & 0x40) == 0) {
    goto LABEL_15;
  }
LABEL_34:
  v4 += ((9 * (__clz(*(void *)(a1 + 120) | 1) ^ 0x3F) + 73) >> 6) + 1;
  if ((v10 & 0x80) != 0) {
LABEL_16:
  }
    v4 += ((9 * (__clz(*(void *)(a1 + 128) | 1) ^ 0x3F) + 73) >> 6) + 1;
LABEL_17:
  uint64_t v11 = v4 + 2;
  if ((v10 & 0x100) == 0) {
    uint64_t v11 = v4;
  }
  if ((v10 & 0x200) != 0) {
    v11 += 2;
  }
  if ((v10 & 0x300) != 0) {
    uint64_t result = v11;
  }
  else {
    uint64_t result = v4;
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if (v13)
  {
    unint64_t v22 = v13 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v22 + 31) < 0) {
      uint64_t v23 = *(void *)(v22 + 16);
    }
    else {
      uint64_t v23 = *(unsigned __int8 *)(v22 + 31);
    }
    result += v23;
  }
  *(_DWORD *)(a1 + 44) = result;
  return result;
}

void sub_1308194(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 56);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    int v6 = (std::string **)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_1320248((std::string *)(a1 + 48), v6, v5, v4, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v7 = *(_DWORD *)(a1 + 56) + v4;
    *(_DWORD *)(a1 + 56) = v7;
    uint64_t v8 = *(int **)(a1 + 64);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 40);
  if ((_BYTE)v9)
  {
    if (v9)
    {
      int v10 = (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 40) |= 1u;
      uint64_t v11 = *(void *)(a1 + 8);
      char v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        char v12 = (uint64_t *)*v12;
      }
      sub_1881DF4((std::string **)(a1 + 72), v10, v12);
    }
    if ((v9 & 2) != 0)
    {
      *(_DWORD *)(a1 + 40) |= 2u;
      uint64_t v13 = *(std::string **)(a1 + 80);
      if (!v13)
      {
        uint64_t v14 = *(void *)(a1 + 8);
        uint64_t v15 = (void *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
        if (v14) {
          uint64_t v15 = (void *)*v15;
        }
        uint64_t v13 = (std::string *)sub_130BE74((uint64_t)v15);
        *(void *)(a1 + 80) = v13;
      }
      if (*(void *)(a2 + 80)) {
        uint64_t v16 = *(uint64_t (****)())(a2 + 80);
      }
      else {
        uint64_t v16 = &off_25325B8;
      }
      sub_130847C(v13, (uint64_t)v16);
    }
    if ((v9 & 4) != 0)
    {
      *(_DWORD *)(a1 + 40) |= 4u;
      uint64_t v18 = *(void **)(a1 + 88);
      if (!v18)
      {
        uint64_t v19 = *(void *)(a1 + 8);
        uint64_t v20 = (void *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
        if (v19) {
          uint64_t v20 = (void *)*v20;
        }
        uint64_t v18 = sub_130BD74((uint64_t)v20);
        *(void *)(a1 + 88) = v18;
      }
      if (*(void *)(a2 + 88)) {
        uint64_t v21 = *(uint64_t (****)())(a2 + 88);
      }
      else {
        uint64_t v21 = &off_25324D8;
      }
      sub_1306E18((uint64_t)v18, (uint64_t)v21);
      if ((v9 & 8) == 0)
      {
LABEL_20:
        if ((v9 & 0x10) == 0) {
          goto LABEL_21;
        }
        goto LABEL_52;
      }
    }
    else if ((v9 & 8) == 0)
    {
      goto LABEL_20;
    }
    *(_DWORD *)(a1 + 40) |= 8u;
    unint64_t v22 = *(void **)(a1 + 96);
    if (!v22)
    {
      uint64_t v23 = *(void *)(a1 + 8);
      unsigned int v24 = (void *)(v23 & 0xFFFFFFFFFFFFFFFCLL);
      if (v23) {
        unsigned int v24 = (void *)*v24;
      }
      unint64_t v22 = sub_130BD74((uint64_t)v24);
      *(void *)(a1 + 96) = v22;
    }
    if (*(void *)(a2 + 96)) {
      int v25 = *(uint64_t (****)())(a2 + 96);
    }
    else {
      int v25 = &off_25324D8;
    }
    sub_1306E18((uint64_t)v22, (uint64_t)v25);
    if ((v9 & 0x10) == 0)
    {
LABEL_21:
      if ((v9 & 0x20) == 0) {
        goto LABEL_22;
      }
      goto LABEL_60;
    }
LABEL_52:
    *(_DWORD *)(a1 + 40) |= 0x10u;
    uint64_t v26 = *(void **)(a1 + 104);
    if (!v26)
    {
      uint64_t v27 = *(void *)(a1 + 8);
      uint64_t v28 = (void *)(v27 & 0xFFFFFFFFFFFFFFFCLL);
      if (v27) {
        uint64_t v28 = (void *)*v28;
      }
      uint64_t v26 = sub_130BD74((uint64_t)v28);
      *(void *)(a1 + 104) = v26;
    }
    if (*(void *)(a2 + 104)) {
      uint64_t v29 = *(uint64_t (****)())(a2 + 104);
    }
    else {
      uint64_t v29 = &off_25324D8;
    }
    sub_1306E18((uint64_t)v26, (uint64_t)v29);
    if ((v9 & 0x20) == 0)
    {
LABEL_22:
      if ((v9 & 0x40) == 0) {
        goto LABEL_23;
      }
      goto LABEL_68;
    }
LABEL_60:
    *(_DWORD *)(a1 + 40) |= 0x20u;
    unsigned int v30 = *(void **)(a1 + 112);
    if (!v30)
    {
      uint64_t v31 = *(void *)(a1 + 8);
      unint64_t v32 = (void *)(v31 & 0xFFFFFFFFFFFFFFFCLL);
      if (v31) {
        unint64_t v32 = (void *)*v32;
      }
      unsigned int v30 = sub_130BD74((uint64_t)v32);
      *(void *)(a1 + 112) = v30;
    }
    if (*(void *)(a2 + 112)) {
      unint64_t v33 = *(uint64_t (****)())(a2 + 112);
    }
    else {
      unint64_t v33 = &off_25324D8;
    }
    sub_1306E18((uint64_t)v30, (uint64_t)v33);
    if ((v9 & 0x40) == 0)
    {
LABEL_23:
      if ((v9 & 0x80) == 0)
      {
LABEL_25:
        *(_DWORD *)(a1 + 40) |= v9;
        goto LABEL_26;
      }
LABEL_24:
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      goto LABEL_25;
    }
LABEL_68:
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    if ((v9 & 0x80) == 0) {
      goto LABEL_25;
    }
    goto LABEL_24;
  }
LABEL_26:
  if ((v9 & 0x300) != 0)
  {
    if ((v9 & 0x100) != 0) {
      *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
    }
    if ((v9 & 0x200) != 0) {
      *(unsigned char *)(a1 + 137) = *(unsigned char *)(a2 + 137);
    }
    *(_DWORD *)(a1 + 40) |= v9;
  }
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v17 = *(void *)(a2 + 8);
  if (v17)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v17 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

std::string *sub_130847C(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    int v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = (std::string *)sub_1320360((uint64_t *)&v3[1], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2]- LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    uint64_t v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    int v10 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    uint64_t v11 = (std::string **)sub_188CCE4((uint64_t)&v3[2], *(_DWORD *)(a2 + 56));
    uint64_t result = sub_13203EC(v3 + 2, v11, v10, v9, *(_DWORD *)v3[2].__r_.__value_.__r.__words[2] - LODWORD(v3[2].__r_.__value_.__r.__words[1]));
    int v12 = LODWORD(v3[2].__r_.__value_.__r.__words[1]) + v9;
    LODWORD(v3[2].__r_.__value_.__r.__words[1]) = v12;
    uint64_t v13 = (int *)v3[2].__r_.__value_.__r.__words[2];
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  if (*(unsigned char *)(a2 + 16))
  {
    uint64_t v14 = (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
    std::string::size_type size = v3->__r_.__value_.__l.__size_;
    uint64_t v16 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
    if (size) {
      uint64_t v16 = (uint64_t *)*v16;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[3], v14, v16);
  }
  uint64_t v17 = *(void *)(a2 + 8);
  if (v17)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v17 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_13085E8(uint64_t a1)
{
  uint64_t result = sub_18856CC(a1 + 16);
  if (result)
  {
    int v3 = *(_DWORD *)(a1 + 40);
    if ((v3 & 4) != 0)
    {
      uint64_t v4 = *(void *)(a1 + 88);
      if (*(unsigned char *)(v4 + 16))
      {
        uint64_t result = sub_18856CC(*(void *)(v4 + 72) + 16);
        if (!result) {
          return result;
        }
        int v3 = *(_DWORD *)(a1 + 40);
      }
    }
    if ((v3 & 8) != 0)
    {
      uint64_t v5 = *(void *)(a1 + 96);
      if (*(unsigned char *)(v5 + 16))
      {
        uint64_t result = sub_18856CC(*(void *)(v5 + 72) + 16);
        if (!result) {
          return result;
        }
        int v3 = *(_DWORD *)(a1 + 40);
      }
    }
    if ((v3 & 0x10) != 0)
    {
      uint64_t v6 = *(void *)(a1 + 104);
      if (*(unsigned char *)(v6 + 16))
      {
        uint64_t result = sub_18856CC(*(void *)(v6 + 72) + 16);
        if (!result) {
          return result;
        }
        int v3 = *(_DWORD *)(a1 + 40);
      }
    }
    if ((v3 & 0x20) == 0) {
      return 1;
    }
    uint64_t v7 = *(void *)(a1 + 112);
    if ((*(unsigned char *)(v7 + 16) & 1) == 0) {
      return 1;
    }
    uint64_t result = sub_18856CC(*(void *)(v7 + 72) + 16);
    if (result) {
      return 1;
    }
  }
  return result;
}

void *sub_13086A8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.abtesting.ABAssignmentResponse");
}

uint64_t sub_13086B8(uint64_t a1)
{
  int v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 72);
  if (*(uint64_t **)(a1 + 72) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  sub_13201C8((void *)(a1 + 48));
  sub_1320148((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1308770(uint64_t a1)
{
  sub_13086B8(a1);

  operator delete();
}

uint64_t sub_13087A8(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v31 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v31, a3[11].i32[1])) {
    return *(void *)v31;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = (char *)(*(void *)v31 + 1);
    unsigned int v8 = **(unsigned char **)v31;
    if ((char)**(unsigned char **)v31 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180(*(uint64_t *)v31, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (char *)(*(void *)v31 + 2);
      }
    }
    *(void *)uint64_t v31 = v7;
    unsigned int v11 = v8 >> 3;
    if (v8 >> 3 == 3) {
      break;
    }
    if (v11 != 2)
    {
      if (v11 == 1 && v8 == 10)
      {
        int v25 = v7 - 1;
        while (1)
        {
          uint64_t v26 = (unsigned __int8 *)(v25 + 1);
          *(void *)uint64_t v31 = v25 + 1;
          uint64_t v27 = *(_DWORD **)(a1 + 40);
          if (v27 && (uint64_t v28 = *(int *)(a1 + 32), (int)v28 < *v27))
          {
            *(_DWORD *)(a1 + 32) = v28 + 1;
            uint64_t v29 = *(void *)&v27[2 * v28 + 2];
          }
          else
          {
            uint64_t v30 = sub_130C158(*(void *)(a1 + 24));
            uint64_t v29 = sub_188CDC8(a1 + 24, v30);
            uint64_t v26 = *(unsigned __int8 **)v31;
          }
          int v25 = (char *)sub_1308A48(a3, v29, v26);
          *(void *)uint64_t v31 = v25;
          if (!v25) {
            goto LABEL_50;
          }
          if (*(void *)a3 <= (unint64_t)v25 || *v25 != 10) {
            goto LABEL_36;
          }
        }
      }
      goto LABEL_14;
    }
    if (v8 != 18) {
      goto LABEL_14;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v22 = *(void *)(a1 + 8);
    uint64_t v23 = (uint64_t *)(v22 & 0xFFFFFFFFFFFFFFFCLL);
    if (v22) {
      uint64_t v23 = (uint64_t *)*v23;
    }
    unsigned int v24 = (std::string *)sub_1880F84((void *)(a1 + 72), v23);
    uint64_t v15 = (void *)sub_188C244(v24, *(char **)v31, (uint64_t)a3);
LABEL_35:
    *(void *)uint64_t v31 = v15;
    if (!v15) {
      goto LABEL_50;
    }
LABEL_36:
    if (sub_11947B8((uint64_t)a3, (char **)v31, a3[11].i32[1])) {
      return *(void *)v31;
    }
  }
  if (v8 == 26)
  {
    uint64_t v16 = v7 - 1;
    while (1)
    {
      uint64_t v17 = (unsigned __int8 *)(v16 + 1);
      *(void *)uint64_t v31 = v16 + 1;
      uint64_t v18 = *(_DWORD **)(a1 + 64);
      if (v18 && (uint64_t v19 = *(int *)(a1 + 56), (int)v19 < *v18))
      {
        *(_DWORD *)(a1 + 56) = v19 + 1;
        uint64_t v20 = *(void *)&v18[2 * v19 + 2];
      }
      else
      {
        uint64_t v21 = sub_130BF24(*(void *)(a1 + 48));
        uint64_t v20 = sub_188CDC8(a1 + 48, (uint64_t)v21);
        uint64_t v17 = *(unsigned __int8 **)v31;
      }
      uint64_t v16 = sub_1308AD8(a3, v20, v17);
      *(void *)uint64_t v31 = v16;
      if (!v16) {
        goto LABEL_50;
      }
      if (*(void *)a3 <= (unint64_t)v16 || *v16 != 26) {
        goto LABEL_36;
      }
    }
  }
LABEL_14:
  if (v8) {
    BOOL v13 = (v8 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v6)
    {
      uint64_t v14 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = *(char **)v31;
    }
    uint64_t v15 = sub_1885AC0(v8, v14, v7, a3);
    goto LABEL_35;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v31;
  }
LABEL_50:
  *(void *)uint64_t v31 = 0;
  return *(void *)v31;
}

uint64_t sub_1308A48(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_130B194(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1308AD8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_130912C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1308B68(uint64_t a1, char *__dst, unint64_t *a3)
{
  int v6 = *(_DWORD *)(a1 + 32);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unsigned int v10 = __dst + 2;
      }
      __dst = sub_130B48C(v8, v10, a3);
    }
  }
  if (*(unsigned char *)(a1 + 16)) {
    __dst = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  int v11 = *(_DWORD *)(a1 + 56);
  if (v11)
  {
    for (int j = 0; j != v11; ++j)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v13 = *(void *)(*(void *)(a1 + 64) + 8 * j + 8);
      *__dst = 26;
      unsigned int v14 = *(_DWORD *)(v13 + 20);
      __dst[1] = v14;
      if (v14 > 0x7F) {
        uint64_t v15 = sub_188A9CC(v14, __dst + 1);
      }
      else {
        uint64_t v15 = __dst + 2;
      }
      __dst = sub_13093C4(v13, (unint64_t)v15, a3);
    }
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return __dst;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    uint64_t v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    uint64_t v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if ((uint64_t)(*a3 - (void)__dst) >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(__dst, v19, (int)v20);
    __dst += v21;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v19, v20, __dst);
}

uint64_t sub_1308D54(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_130B638(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(int *)(a1 + 56);
  uint64_t v9 = v2 + v8;
  uint64_t v10 = *(void *)(a1 + 64);
  if (v10) {
    int v11 = (uint64_t *)(v10 + 8);
  }
  else {
    int v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_1309570(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v15 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v16 = *(unsigned __int8 *)(v15 + 23);
    uint64_t v17 = *(void *)(v15 + 8);
    if ((v16 & 0x80u) == 0) {
      uint64_t v17 = v16;
    }
    v9 += v17 + ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v18 = *(void *)(a1 + 8);
  if (v18)
  {
    unint64_t v20 = v18 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v20 + 31) < 0) {
      uint64_t v21 = *(void *)(v20 + 16);
    }
    else {
      uint64_t v21 = *(unsigned __int8 *)(v20 + 31);
    }
    v9 += v21;
  }
  *(_DWORD *)(a1 + 20) = v9;
  return v9;
}

uint64_t sub_1308E9C()
{
  return 1;
}

void *sub_1308EA4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.abtesting.ABClientConfig");
}

uint64_t sub_1308EB4(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_2532608)
  {
    uint64_t v6 = *(void *)(a1 + 48);
    if (v6)
    {
      sub_130A268(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  sub_1320148((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1308F78(uint64_t a1)
{
  sub_1308EB4(a1);

  operator delete();
}

uint64_t sub_1308FB0(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_130B0FC(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  if (*(unsigned char *)(v1 + 16)) {
    uint64_t result = sub_1309040(*(void *)(v1 + 48));
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = v1 + 8;
  *(_DWORD *)(v5 + 8) = 0;
  if (v6)
  {
    return sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

uint64_t sub_1309040(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 0xF) == 0) {
    goto LABEL_22;
  }
  if ((v1 & 1) == 0)
  {
    if ((v1 & 2) == 0) {
      goto LABEL_4;
    }
LABEL_11:
    unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)unint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
      if ((v1 & 4) != 0) {
        goto LABEL_15;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
      if ((v1 & 4) != 0) {
        goto LABEL_15;
      }
    }
LABEL_5:
    if ((v1 & 8) == 0) {
      goto LABEL_22;
    }
LABEL_19:
    unint64_t v5 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v5 + 23) < 0)
    {
      **(unsigned char **)unint64_t v5 = 0;
      *(void *)(v5 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v5 = 0;
      *(unsigned char *)(v5 + 23) = 0;
    }
    goto LABEL_22;
  }
  unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v2 + 23) < 0)
  {
    **(unsigned char **)unint64_t v2 = 0;
    *(void *)(v2 + 8) = 0;
    if ((v1 & 2) != 0) {
      goto LABEL_11;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v2 = 0;
    *(unsigned char *)(v2 + 23) = 0;
    if ((v1 & 2) != 0) {
      goto LABEL_11;
    }
  }
LABEL_4:
  if ((v1 & 4) == 0) {
    goto LABEL_5;
  }
LABEL_15:
  unint64_t v4 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v4 + 23) < 0)
  {
    **(unsigned char **)unint64_t v4 = 0;
    *(void *)(v4 + 8) = 0;
    if ((v1 & 8) == 0) {
      goto LABEL_22;
    }
    goto LABEL_19;
  }
  *(unsigned char *)unint64_t v4 = 0;
  *(unsigned char *)(v4 + 23) = 0;
  if ((v1 & 8) != 0) {
    goto LABEL_19;
  }
LABEL_22:
  char v7 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v7) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_130912C(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v23 = a2;
  if (sub_11947B8((uint64_t)a3, &v23, a3[11].i32[1])) {
    return v23;
  }
  char v6 = (void *)(a1 + 8);
  while (1)
  {
    char v7 = v23 + 1;
    unsigned int v8 = *v23;
    if (*v23 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        char v7 = (char *)sub_188C180((uint64_t)v23, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        char v7 = v23 + 2;
      }
    }
    uint64_t v23 = v7;
    if (v8 >> 3 == 2) {
      break;
    }
    if (v8 >> 3 != 1 || v8 != 10) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v21 = *(void **)(a1 + 48);
    if (!v21)
    {
      uint64_t v22 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        uint64_t v22 = (void *)*v22;
      }
      uint64_t v21 = sub_130C048((uint64_t)v22);
      *(void *)(a1 + 48) = v21;
      char v7 = v23;
    }
    uint64_t v14 = (char *)sub_1309334(a3, (uint64_t)v21, (unsigned __int8 *)v7);
LABEL_35:
    uint64_t v23 = v14;
    if (!v14) {
      return 0;
    }
LABEL_36:
    if (sub_11947B8((uint64_t)a3, &v23, a3[11].i32[1])) {
      return v23;
    }
  }
  if (v8 == 18)
  {
    unint64_t v15 = v7 - 1;
    while (1)
    {
      uint64_t v16 = (unsigned __int8 *)(v15 + 1);
      uint64_t v23 = v15 + 1;
      uint64_t v17 = *(_DWORD **)(a1 + 40);
      if (v17 && (uint64_t v18 = *(int *)(a1 + 32), (int)v18 < *v17))
      {
        *(_DWORD *)(a1 + 32) = v18 + 1;
        uint64_t v19 = *(void *)&v17[2 * v18 + 2];
      }
      else
      {
        uint64_t v20 = sub_130C158(*(void *)(a1 + 24));
        uint64_t v19 = sub_188CDC8(a1 + 24, v20);
        uint64_t v16 = (unsigned __int8 *)v23;
      }
      unint64_t v15 = (char *)sub_1308A48(a3, v19, v16);
      uint64_t v23 = v15;
      if (!v15) {
        return 0;
      }
      if (*(void *)a3 <= (unint64_t)v15 || *v15 != 18) {
        goto LABEL_36;
      }
    }
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      char v7 = v23;
    }
    uint64_t v14 = (char *)sub_1885AC0(v8, v13, v7, a3);
    goto LABEL_35;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v23;
  }
  return 0;
}

uint64_t sub_1309334(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_130A380(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_13093C4(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  unint64_t v4 = (char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*a3 <= __dst) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v6 = *(void *)(a1 + 48);
    char *v4 = 10;
    unsigned int v7 = *(_DWORD *)(v6 + 20);
    v4[1] = v7;
    if (v7 > 0x7F) {
      unsigned int v8 = sub_188A9CC(v7, v4 + 1);
    }
    else {
      unsigned int v8 = v4 + 2;
    }
    unint64_t v4 = sub_130A5D0(v6, v8, a3);
  }
  int v9 = *(_DWORD *)(a1 + 32);
  if (v9)
  {
    for (int i = 0; i != v9; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v11 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      char *v4 = 18;
      unsigned int v12 = *(_DWORD *)(v11 + 20);
      v4[1] = v12;
      if (v12 > 0x7F) {
        uint64_t v13 = sub_188A9CC(v12, v4 + 1);
      }
      else {
        uint64_t v13 = v4 + 2;
      }
      unint64_t v4 = sub_130B48C(v11, v13, a3);
    }
  }
  uint64_t v14 = *(void *)(a1 + 8);
  if ((v14 & 1) == 0) {
    return v4;
  }
  unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v16 + 31) < 0)
  {
    uint64_t v17 = *(void **)(v16 + 8);
    uint64_t v18 = *(void *)(v16 + 16);
  }
  else
  {
    uint64_t v17 = (void *)(v16 + 8);
    LODWORD(v18) = *(unsigned __int8 *)(v16 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v18)
  {
    uint64_t v19 = (int)v18;
    memcpy(v4, v17, (int)v18);
    v4 += v19;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v17, v18, v4);
}

uint64_t sub_1309570(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    unint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    unint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_130B638(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  if (*(unsigned char *)(a1 + 16))
  {
    uint64_t v8 = sub_130A70C(*(void *)(a1 + 48));
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    v2 += v12;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_1309654(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = (std::string *)sub_1320360((uint64_t *)&v3[1], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2]- LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    uint64_t v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  if (*(unsigned char *)(a2 + 16))
  {
    uint64_t v9 = *(uint64_t (****)())(a2 + 48);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
    std::string::pointer data = (std::string *)v3[2].__r_.__value_.__l.__data_;
    if (!data)
    {
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v12 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v12 = (void *)*v12;
      }
      std::string::pointer data = (std::string *)sub_130C048((uint64_t)v12);
      v3[2].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      uint64_t v9 = *(uint64_t (****)())(a2 + 48);
    }
    if (v9) {
      uint64_t v13 = v9;
    }
    else {
      uint64_t v13 = &off_2532678;
    }
    uint64_t result = sub_1263010(data, (uint64_t)v13);
  }
  uint64_t v14 = *(void *)(a2 + 8);
  if (v14)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v14 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1309778()
{
  return 1;
}

void *sub_1309780@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.abtesting.ABClientDebugPanelExperimentBranch");
}

uint64_t sub_1309790(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_12;
    }
  }
  else if (v4)
  {
    goto LABEL_12;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if ((uint64_t (***)())a1 != &off_2532640)
  {
    uint64_t v6 = *(void *)(a1 + 40);
    if (v6)
    {
      sub_130A268(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_12:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1309878(uint64_t a1)
{
  sub_1309790(a1);

  operator delete();
}

uint64_t sub_13098B0(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 7) == 0) {
    goto LABEL_6;
  }
  if ((v2 & 1) == 0)
  {
    if ((v2 & 2) == 0) {
      goto LABEL_4;
    }
    goto LABEL_16;
  }
  unint64_t v5 = *(void *)(result + 24) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v5 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v5 = 0;
    *(unsigned char *)(v5 + 23) = 0;
    if ((v2 & 2) != 0) {
      goto LABEL_16;
    }
LABEL_4:
    if ((v2 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  **(unsigned char **)unint64_t v5 = 0;
  *(void *)(v5 + 8) = 0;
  if ((v2 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_16:
  unint64_t v6 = *(void *)(result + 32) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v6 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v6 = 0;
    *(unsigned char *)(v6 + 23) = 0;
    if ((v2 & 4) == 0) {
      goto LABEL_6;
    }
LABEL_5:
    uint64_t result = sub_1309040(*(void *)(result + 40));
    goto LABEL_6;
  }
  **(unsigned char **)unint64_t v6 = 0;
  *(void *)(v6 + 8) = 0;
  if ((v2 & 4) != 0) {
    goto LABEL_5;
  }
LABEL_6:
  if ((v2 & 0x18) != 0) {
    *(void *)(v1 + 48) = 0;
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_130998C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unint64_t v32 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v32, a3[11].i32[1])) {
    return *(void *)v32;
  }
  unint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    int v7 = (unsigned __int8 *)(*(void *)v32 + 1);
    unsigned int v8 = **(unsigned char **)v32;
    if ((char)**(unsigned char **)v32 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if ((char)*v7 < 0)
      {
        int v7 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v32, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        int v7 = (unsigned __int8 *)(*(void *)v32 + 2);
      }
    }
    *(void *)unint64_t v32 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 8) {
          goto LABEL_38;
        }
        unint64_t v11 = (char *)(v7 + 1);
        unint64_t v12 = *v7;
        if (((char)*v7 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v13 = *v11;
        int v14 = v12 + (v13 << 7);
        unint64_t v12 = (v14 - 128);
        if (v13 < 0)
        {
          *(void *)unint64_t v32 = sub_188C138((uint64_t)v7, (v14 - 128));
          if (!*(void *)v32) {
            return 0;
          }
          unint64_t v12 = v28;
        }
        else
        {
          unint64_t v11 = (char *)(v7 + 2);
LABEL_13:
          *(void *)unint64_t v32 = v11;
        }
        if (v12 <= 3)
        {
          *(_DWORD *)(a1 + 16) |= 8u;
          *(_DWORD *)(a1 + 48) = v12;
          goto LABEL_46;
        }
        if (*v6) {
          uint64_t v30 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          uint64_t v30 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v31 = 1;
        goto LABEL_58;
      case 2u:
        if (v8 != 16) {
          goto LABEL_38;
        }
        unint64_t v15 = (char *)(v7 + 1);
        unint64_t v12 = *v7;
        if (((char)*v7 & 0x80000000) == 0) {
          goto LABEL_20;
        }
        int v16 = *v15;
        int v17 = v12 + (v16 << 7);
        unint64_t v12 = (v17 - 128);
        if (v16 < 0)
        {
          *(void *)unint64_t v32 = sub_188C138((uint64_t)v7, (v17 - 128));
          if (!*(void *)v32) {
            return 0;
          }
          unint64_t v12 = v29;
        }
        else
        {
          unint64_t v15 = (char *)(v7 + 2);
LABEL_20:
          *(void *)unint64_t v32 = v15;
        }
        if (sub_1791E00(v12))
        {
          *(_DWORD *)(a1 + 16) |= 0x10u;
          *(_DWORD *)(a1 + 52) = v12;
        }
        else
        {
          if (*v6) {
            uint64_t v30 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v30 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          int v31 = 2;
LABEL_58:
          sub_188C020(v31, v12, v30);
        }
        goto LABEL_46;
      case 3u:
        if (v8 != 26) {
          goto LABEL_38;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v18 = *(void *)(a1 + 8);
        uint64_t v19 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
        if (v18) {
          uint64_t v19 = (uint64_t *)*v19;
        }
        uint64_t v20 = (void *)(a1 + 24);
        goto LABEL_37;
      case 4u:
        if (v8 != 34) {
          goto LABEL_38;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v21 = *(void **)(a1 + 40);
        if (!v21)
        {
          uint64_t v22 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v22 = (void *)*v22;
          }
          uint64_t v21 = sub_130C048((uint64_t)v22);
          *(void *)(a1 + 40) = v21;
          int v7 = *(unsigned __int8 **)v32;
        }
        uint64_t v23 = sub_1309334(a3, (uint64_t)v21, v7);
        goto LABEL_45;
      case 5u:
        if (v8 != 42) {
          goto LABEL_38;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v24 = *(void *)(a1 + 8);
        uint64_t v19 = (uint64_t *)(v24 & 0xFFFFFFFFFFFFFFFCLL);
        if (v24) {
          uint64_t v19 = (uint64_t *)*v19;
        }
        uint64_t v20 = (void *)(a1 + 32);
LABEL_37:
        int v25 = (std::string *)sub_1880F84(v20, v19);
        uint64_t v23 = (uint64_t)sub_188C244(v25, *(char **)v32, (uint64_t)a3);
        goto LABEL_45;
      default:
LABEL_38:
        if (v8) {
          BOOL v26 = (v8 & 7) == 4;
        }
        else {
          BOOL v26 = 1;
        }
        if (!v26)
        {
          if (*v6)
          {
            uint64_t v27 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v27 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            int v7 = *(unsigned __int8 **)v32;
          }
          uint64_t v23 = (uint64_t)sub_1885AC0(v8, v27, (char *)v7, a3);
LABEL_45:
          *(void *)unint64_t v32 = v23;
          if (!v23) {
            return 0;
          }
LABEL_46:
          if (sub_11947B8((uint64_t)a3, (char **)v32, a3[11].i32[1])) {
            return *(void *)v32;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return *(void *)v32;
    }
  }
}

char *sub_1309CF4(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 8) != 0)
  {
    if (*a3 <= __dst) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 48);
    char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 52);
    char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    char v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
    if ((v6 & 4) == 0)
    {
LABEL_17:
      if ((v6 & 2) == 0) {
        goto LABEL_19;
      }
      goto LABEL_18;
    }
  }
  else if ((v6 & 4) == 0)
  {
    goto LABEL_17;
  }
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v15 = *(void *)(a1 + 40);
  char *v4 = 34;
  unsigned int v16 = *(_DWORD *)(v15 + 20);
  v4[1] = v16;
  if (v16 > 0x7F) {
    int v17 = sub_188A9CC(v16, v4 + 1);
  }
  else {
    int v17 = v4 + 2;
  }
  char v4 = sub_130A5D0(v15, v17, a3);
  if ((v6 & 2) != 0) {
LABEL_18:
  }
    char v4 = sub_117A0AC(a3, 5, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
LABEL_19:
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v18 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    uint64_t v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    uint64_t v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(v4, v19, (int)v20);
    v4 += v21;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v19, v20, v4);
}

uint64_t sub_1309F54(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0x1F) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_25;
  }
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
  uint64_t v6 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    uint64_t v6 = v5;
  }
  uint64_t v3 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 2) != 0)
  {
LABEL_9:
    unint64_t v7 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v8 = *(unsigned __int8 *)(v7 + 23);
    uint64_t v9 = *(void *)(v7 + 8);
    if ((v8 & 0x80u) == 0) {
      uint64_t v9 = v8;
    }
    v3 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v2 & 4) != 0)
  {
    uint64_t v10 = sub_130A70C(*(void *)(a1 + 40));
    v3 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 8) == 0)
    {
LABEL_14:
      if ((v2 & 0x10) == 0) {
        goto LABEL_25;
      }
      goto LABEL_21;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_14;
  }
  int v11 = *(_DWORD *)(a1 + 48);
  if (v11 < 0) {
    uint64_t v12 = 11;
  }
  else {
    uint64_t v12 = ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v3 += v12;
  if ((v2 & 0x10) != 0)
  {
LABEL_21:
    int v13 = *(_DWORD *)(a1 + 52);
    if (v13 < 0) {
      uint64_t v14 = 11;
    }
    else {
      uint64_t v14 = ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v3 += v14;
  }
LABEL_25:
  uint64_t v15 = *(void *)(a1 + 8);
  if (v15)
  {
    unint64_t v17 = v15 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v17 + 31) < 0) {
      uint64_t v18 = *(void *)(v17 + 16);
    }
    else {
      uint64_t v18 = *(unsigned __int8 *)(v17 + 31);
    }
    v3 += v18;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_130A0F8(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0x1F) != 0)
  {
    if (v4)
    {
      uint64_t v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      unint64_t v7 = (std::string **)&result[1];
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v9 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v9 = (uint64_t *)*v9;
      }
      uint64_t result = sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_19;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    uint64_t v10 = (long long *)(*(void *)(a2 + 32) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    std::string::size_type v11 = v3->__r_.__value_.__l.__size_;
    uint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
    if (v11) {
      uint64_t v12 = (uint64_t *)*v12;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[1].__r_.__value_.__l.__size_, v10, v12);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_27;
    }
LABEL_19:
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
    int v13 = (std::string *)v3[1].__r_.__value_.__r.__words[2];
    if (!v13)
    {
      std::string::size_type v14 = v3->__r_.__value_.__l.__size_;
      uint64_t v15 = (void *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
      if (v14) {
        uint64_t v15 = (void *)*v15;
      }
      int v13 = (std::string *)sub_130C048((uint64_t)v15);
      v3[1].__r_.__value_.__r.__words[2] = (std::string::size_type)v13;
    }
    if (*(void *)(a2 + 40)) {
      unsigned int v16 = *(uint64_t (****)())(a2 + 40);
    }
    else {
      unsigned int v16 = &off_2532678;
    }
    uint64_t result = sub_1263010(v13, (uint64_t)v16);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0)
      {
LABEL_8:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
        goto LABEL_9;
      }
LABEL_7:
      HIDWORD(v3[2].__r_.__value_.__r.__words[0]) = *(_DWORD *)(a2 + 52);
      goto LABEL_8;
    }
LABEL_27:
    LODWORD(v3[2].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 48);
    if ((v4 & 0x10) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
LABEL_9:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_130A250()
{
  return 1;
}

void *sub_130A258@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.abtesting.ABExperimentAssignment");
}

uint64_t sub_130A268(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_13;
    }
  }
  else if (v4)
  {
    goto LABEL_13;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(uint64_t **)(a1 + 40) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 40));
  }
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 48));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_13:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_130A348(uint64_t a1)
{
  sub_130A268(a1);

  operator delete();
}

uint64_t sub_130A380(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v21 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v21, a3[11].i32[1])) {
    return *(void *)v21;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    unint64_t v7 = (char *)(*(void *)v21 + 1);
    unsigned int v8 = **(unsigned char **)v21;
    if ((char)**(unsigned char **)v21 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        unint64_t v7 = (char *)sub_188C180(*(uint64_t *)v21, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        unint64_t v7 = (char *)(*(void *)v21 + 2);
      }
    }
    *(void *)uint64_t v21 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 10) {
          goto LABEL_29;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v11 = *(void *)(a1 + 8);
        uint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
        if (v11) {
          uint64_t v12 = (uint64_t *)*v12;
        }
        int v13 = (void *)(a1 + 24);
        goto LABEL_25;
      case 2u:
        if (v8 != 18) {
          goto LABEL_29;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v14 = *(void *)(a1 + 8);
        uint64_t v12 = (uint64_t *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
        if (v14) {
          uint64_t v12 = (uint64_t *)*v12;
        }
        int v13 = (void *)(a1 + 32);
        goto LABEL_25;
      case 3u:
        if (v8 != 26) {
          goto LABEL_29;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v15 = *(void *)(a1 + 8);
        uint64_t v12 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          uint64_t v12 = (uint64_t *)*v12;
        }
        int v13 = (void *)(a1 + 40);
        goto LABEL_25;
      case 4u:
        if (v8 != 34) {
          goto LABEL_29;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v16 = *(void *)(a1 + 8);
        uint64_t v12 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
        if (v16) {
          uint64_t v12 = (uint64_t *)*v12;
        }
        int v13 = (void *)(a1 + 48);
LABEL_25:
        unint64_t v17 = (std::string *)sub_1880F84(v13, v12);
        uint64_t v18 = (void *)sub_188C244(v17, *(char **)v21, (uint64_t)a3);
        goto LABEL_26;
      default:
LABEL_29:
        if (v8) {
          BOOL v19 = (v8 & 7) == 4;
        }
        else {
          BOOL v19 = 1;
        }
        if (!v19)
        {
          if (*v6)
          {
            uint64_t v20 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v20 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unint64_t v7 = *(char **)v21;
          }
          uint64_t v18 = sub_1885AC0(v8, v20, v7, a3);
LABEL_26:
          *(void *)uint64_t v21 = v18;
          if (!v18) {
            return 0;
          }
          if (sub_11947B8((uint64_t)a3, (char **)v21, a3[11].i32[1])) {
            return *(void *)v21;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return *(void *)v21;
    }
  }
}

char *sub_130A5D0(uint64_t a1, char *__dst, void *a3)
{
  int v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    int v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_10;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  int v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_10:
  int v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 8) != 0) {
LABEL_5:
  }
    int v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), v4);
LABEL_6:
  uint64_t v7 = *(void *)(a1 + 8);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v9 + 31) < 0)
  {
    unsigned int v10 = *(void **)(v9 + 8);
    uint64_t v11 = *(void *)(v9 + 16);
  }
  else
  {
    unsigned int v10 = (void *)(v9 + 8);
    LODWORD(v11) = *(unsigned __int8 *)(v9 + 31);
  }
  if (*a3 - (void)v4 >= (int)v11)
  {
    uint64_t v12 = (int)v11;
    memcpy(v4, v10, (int)v11);
    v4 += v12;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v10, v11, v4);
}

uint64_t sub_130A70C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 0xF) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_17;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
  uint64_t v5 = *(void *)(v3 + 8);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = v4;
  }
  uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    unint64_t v6 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v1 & 4) == 0)
  {
    if ((v1 & 8) == 0) {
      goto LABEL_17;
    }
    goto LABEL_14;
  }
  unint64_t v14 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v15 = *(unsigned __int8 *)(v14 + 23);
  uint64_t v16 = *(void *)(v14 + 8);
  if ((v15 & 0x80u) == 0) {
    uint64_t v16 = v15;
  }
  v2 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 8) != 0)
  {
LABEL_14:
    unint64_t v9 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v10 = *(unsigned __int8 *)(v9 + 23);
    uint64_t v11 = *(void *)(v9 + 8);
    if ((v10 & 0x80u) == 0) {
      uint64_t v11 = v10;
    }
    v2 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_17:
  uint64_t v12 = *(void *)(a1 + 8);
  if (v12)
  {
    unint64_t v17 = v12 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v17 + 31) < 0) {
      uint64_t v18 = *(void *)(v17 + 16);
    }
    else {
      uint64_t v18 = *(unsigned __int8 *)(v17 + 31);
    }
    v2 += v18;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_130A878()
{
  return 1;
}

void *sub_130A880@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.abtesting.ABDebugPanelExperimentBranch");
}

uint64_t sub_130A890(uint64_t a1)
{
  unint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_130A930(uint64_t a1)
{
  sub_130A890(a1);

  operator delete();
}

uint64_t sub_130A968(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if (v1)
  {
    unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)unint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
    }
  }
  if ((v1 & 0xE) != 0)
  {
    *(void *)(a1 + 32) = 0;
    *(void *)(a1 + 40) = 0;
    *(unsigned char *)(a1 + 48) = 0;
  }
  char v4 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v4) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_130A9BC(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v25 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v25, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (char *)(*(void *)v25 + 1);
    unsigned int v9 = **(unsigned char **)v25;
    if ((char)**(unsigned char **)v25 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180(*(uint64_t *)v25, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (char *)(*(void *)v25 + 2);
      }
    }
    *(void *)int v25 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_24;
        }
        uint64_t v12 = v8 + 1;
        unint64_t v13 = *v8;
        if (*v8 < 0)
        {
          unint64_t v13 = v13 + (*v12 << 7) - 128;
          if (*v12 < 0) {
            uint64_t v12 = (char *)sub_188C138((uint64_t)v8, v13);
          }
          else {
            uint64_t v12 = v8 + 2;
          }
        }
        v5 |= 2u;
        *(void *)int v25 = v12;
        *(void *)(a1 + 32) = -(uint64_t)(v13 & 1) ^ (v13 >> 1);
        if (!v12) {
          goto LABEL_42;
        }
        goto LABEL_35;
      case 2u:
        if (v9 != 17) {
          goto LABEL_24;
        }
        v5 |= 4u;
        *(void *)(a1 + 40) = *(void *)v8;
        *(void *)int v25 = v8 + 8;
        goto LABEL_35;
      case 3u:
        if (v9 != 26) {
          goto LABEL_24;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v14 = *(void *)(a1 + 8);
        uint64_t v15 = (uint64_t *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
        if (v14) {
          uint64_t v15 = (uint64_t *)*v15;
        }
        uint64_t v16 = (std::string *)sub_1880F84((void *)(a1 + 24), v15);
        unint64_t v17 = (void *)sub_188C244(v16, *(char **)v25, (uint64_t)a3);
        goto LABEL_31;
      case 4u:
        if (v9 != 32) {
          goto LABEL_24;
        }
        v5 |= 8u;
        uint64_t v18 = v8 + 1;
        uint64_t v19 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_23;
        }
        int v20 = *v18;
        uint64_t v19 = v19 + (v20 << 7) - 128;
        if (v20 < 0)
        {
          uint64_t v23 = sub_188C138((uint64_t)v8, v19);
          *(void *)int v25 = v23;
          *(unsigned char *)(a1 + 48) = v24 != 0;
          if (!v23) {
            goto LABEL_42;
          }
        }
        else
        {
          uint64_t v18 = v8 + 2;
LABEL_23:
          *(void *)int v25 = v18;
          *(unsigned char *)(a1 + 48) = v19 != 0;
        }
        goto LABEL_35;
      default:
LABEL_24:
        if (v9) {
          BOOL v21 = (v9 & 7) == 4;
        }
        else {
          BOOL v21 = 1;
        }
        if (!v21)
        {
          if (*v7)
          {
            uint64_t v22 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v22 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = *(char **)v25;
          }
          unint64_t v17 = sub_1885AC0(v9, v22, v8, a3);
LABEL_31:
          *(void *)int v25 = v17;
          if (!v17) {
            goto LABEL_42;
          }
LABEL_35:
          if (sub_11947B8((uint64_t)a3, (char **)v25, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_42:
        }
          *(void *)int v25 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v25;
    }
  }
}

unsigned char *sub_130AC58(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 32);
    unsigned char *v4 = 8;
    unint64_t v8 = (2 * v7) ^ (v7 >> 63);
    v4[1] = v8;
    if (v8 > 0x7F)
    {
      v4[1] = v8 | 0x80;
      unint64_t v9 = v8 >> 7;
      v4[2] = v8 >> 7;
      v4 += 3;
      if (v8 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v10 = v9 >> 14;
          v9 >>= 7;
          *v4++ = v9;
        }
        while (v10);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v11 = *(void *)(a1 + 40);
    unsigned char *v4 = 17;
    *(void *)(v4 + 1) = v11;
    v4 += 9;
    if ((v6 & 1) == 0)
    {
LABEL_10:
      if ((v6 & 8) == 0) {
        goto LABEL_19;
      }
      goto LABEL_16;
    }
  }
  else if ((v6 & 1) == 0)
  {
    goto LABEL_10;
  }
  char v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 8) == 0) {
    goto LABEL_19;
  }
LABEL_16:
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v12 = *(unsigned char *)(a1 + 48);
  unsigned char *v4 = 32;
  v4[1] = v12;
  v4 += 2;
LABEL_19:
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    uint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    uint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_130AE24(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 0xF) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_15;
  }
  if (v1)
  {
    unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
    uint64_t v6 = *(void *)(v4 + 8);
    if ((v5 & 0x80u) == 0) {
      uint64_t v6 = v5;
    }
    uint64_t v2 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_10;
    }
  }
  v2 += ((9 * (__clz((2 * *(void *)(a1 + 32)) ^ (*(uint64_t *)(a1 + 32) >> 63) | 1) ^ 0x3F) + 73) >> 6) + 1;
LABEL_10:
  if ((v1 & 4) != 0) {
    v2 += 9;
  }
  if ((v1 & 8) != 0) {
    uint64_t v3 = v2 + 2;
  }
  else {
    uint64_t v3 = v2;
  }
LABEL_15:
  uint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v9 + 31) < 0) {
      uint64_t v10 = *(void *)(v9 + 16);
    }
    else {
      uint64_t v10 = *(unsigned __int8 *)(v9 + 31);
    }
    v3 += v10;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_130AF00(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0xF) != 0)
  {
    if (v4)
    {
      uint64_t v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      uint64_t v7 = (std::string **)&result[1];
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      unint64_t v9 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        unint64_t v9 = (uint64_t *)*v9;
      }
      uint64_t result = sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_16;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    v3[1].__r_.__value_.__l.__size_ = *(void *)(a2 + 32);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0)
      {
LABEL_7:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
        goto LABEL_8;
      }
LABEL_6:
      v3[2].__r_.__value_.__s.__data_[0] = *(unsigned char *)(a2 + 48);
      goto LABEL_7;
    }
LABEL_16:
    v3[1].__r_.__value_.__r.__words[2] = *(void *)(a2 + 40);
    if ((v4 & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_8:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_130AFE0()
{
  return 1;
}

void *sub_130AFE8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.abtesting.ABConfigKeyValuePair.ABConfigValue");
}

uint64_t sub_130AFF8(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_25326E8)
  {
    uint64_t v6 = *(void *)(a1 + 32);
    if (v6)
    {
      sub_130A890(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_130B0C4(uint64_t a1)
{
  sub_130AFF8(a1);

  operator delete();
}

uint64_t sub_130B0FC(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 3) != 0)
  {
    if ((v2 & 1) == 0) {
      goto LABEL_5;
    }
    unint64_t v3 = *(void *)(result + 24) & 0xFFFFFFFFFFFFFFFELL;
    if ((*(char *)(v3 + 23) & 0x80000000) == 0)
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
LABEL_5:
      if ((v2 & 2) == 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
    **(unsigned char **)unint64_t v3 = 0;
    *(void *)(v3 + 8) = 0;
    if ((v2 & 2) != 0) {
LABEL_6:
    }
      uint64_t result = sub_130A968(*(void *)(result + 32));
  }
LABEL_7:
  char v5 = *(unsigned char *)(v1 + 8);
  uint64_t v4 = v1 + 8;
  *(_DWORD *)(v4 + 32) = 0;
  *(_DWORD *)(v4 + 8) = 0;
  if (v5)
  {
    return sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

uint64_t sub_130B194(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v27 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v27, a3[11].i32[1])) {
    return *(void *)v27;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = (unsigned __int8 *)(*(void *)v27 + 1);
    unsigned int v8 = **(unsigned char **)v27;
    if ((char)**(unsigned char **)v27 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if ((char)*v7 < 0)
      {
        uint64_t v7 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v27, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (unsigned __int8 *)(*(void *)v27 + 2);
      }
    }
    *(void *)uint64_t v27 = v7;
    unsigned int v11 = v8 >> 3;
    if (v8 >> 3 == 3)
    {
      if (v8 != 26) {
        goto LABEL_14;
      }
      *(_DWORD *)(a1 + 16) |= 2u;
      uint64_t v16 = *(void *)(a1 + 32);
      if (!v16)
      {
        uint64_t v17 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          uint64_t v17 = (void *)*v17;
        }
        uint64_t v16 = sub_130C0D0((uint64_t)v17);
        *(void *)(a1 + 32) = v16;
        uint64_t v7 = *(unsigned __int8 **)v27;
      }
      uint64_t v15 = sub_130B3FC(a3, v16, v7);
      goto LABEL_37;
    }
    if (v11 == 2) {
      break;
    }
    if (v11 != 1 || v8 != 10) {
      goto LABEL_14;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v22 = *(void *)(a1 + 8);
    uint64_t v23 = (uint64_t *)(v22 & 0xFFFFFFFFFFFFFFFCLL);
    if (v22) {
      uint64_t v23 = (uint64_t *)*v23;
    }
    uint64_t v24 = (std::string *)sub_1880F84((void *)(a1 + 24), v23);
    uint64_t v15 = (uint64_t)sub_188C244(v24, *(char **)v27, (uint64_t)a3);
LABEL_37:
    *(void *)uint64_t v27 = v15;
    if (!v15) {
      goto LABEL_49;
    }
LABEL_38:
    if (sub_11947B8((uint64_t)a3, (char **)v27, a3[11].i32[1])) {
      return *(void *)v27;
    }
  }
  if (v8 == 16)
  {
    uint64_t v18 = (char *)(v7 + 1);
    unint64_t v19 = *v7;
    if (((char)*v7 & 0x80000000) == 0) {
      goto LABEL_31;
    }
    int v20 = *v18;
    int v21 = v19 + (v20 << 7);
    unint64_t v19 = (v21 - 128);
    if (v20 < 0)
    {
      *(void *)uint64_t v27 = sub_188C138((uint64_t)v7, (v21 - 128));
      if (!*(void *)v27) {
        goto LABEL_49;
      }
      unint64_t v19 = v25;
    }
    else
    {
      uint64_t v18 = (char *)(v7 + 2);
LABEL_31:
      *(void *)uint64_t v27 = v18;
    }
    if (v19 > 4)
    {
      if (*v6) {
        BOOL v26 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        BOOL v26 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      sub_188C020(2, v19, v26);
    }
    else
    {
      *(_DWORD *)(a1 + 16) |= 4u;
      *(_DWORD *)(a1 + 40) = v19;
    }
    goto LABEL_38;
  }
LABEL_14:
  if (v8) {
    BOOL v13 = (v8 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v6)
    {
      uint64_t v14 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = *(unsigned __int8 **)v27;
    }
    uint64_t v15 = (uint64_t)sub_1885AC0(v8, v14, (char *)v7, a3);
    goto LABEL_37;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v27;
  }
LABEL_49:
  *(void *)uint64_t v27 = 0;
  return *(void *)v27;
}

uint64_t sub_130B3FC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_130A9BC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_130B48C(uint64_t a1, unsigned char *__dst, unint64_t *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v7 = *(int *)(a1 + 40);
    unsigned char *v4 = 16;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 32);
    unsigned char *v4 = 26;
    unsigned int v11 = *(_DWORD *)(v10 + 20);
    v4[1] = v11;
    if (v11 > 0x7F) {
      char v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      char v12 = v4 + 2;
    }
    uint64_t v4 = sub_130AC58(v10, (unint64_t)v12, a3);
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    uint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    uint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_130B638(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 7) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_15;
  }
  if (v2)
  {
    unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
    uint64_t v6 = *(void *)(v4 + 8);
    if ((v5 & 0x80u) == 0) {
      uint64_t v6 = v5;
    }
    uint64_t v3 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_9:
    uint64_t v7 = sub_130AE24(*(void *)(a1 + 32));
    v3 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  if ((v2 & 4) != 0)
  {
    int v8 = *(_DWORD *)(a1 + 40);
    if (v8 < 0) {
      uint64_t v9 = 11;
    }
    else {
      uint64_t v9 = ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v3 += v9;
  }
LABEL_15:
  uint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v12 + 31) < 0) {
      uint64_t v13 = *(void *)(v12 + 16);
    }
    else {
      uint64_t v13 = *(unsigned __int8 *)(v12 + 31);
    }
    v3 += v13;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_130B758(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 7) != 0)
  {
    if (v4)
    {
      uint64_t v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      uint64_t v7 = (std::string **)&result[1];
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v9 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v9 = (uint64_t *)*v9;
      }
      uint64_t result = sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0)
        {
LABEL_6:
          LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
          goto LABEL_7;
        }
LABEL_5:
        LODWORD(v3[1].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 40);
        goto LABEL_6;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    uint64_t v10 = (std::string *)v3[1].__r_.__value_.__l.__size_;
    if (!v10)
    {
      std::string::size_type v11 = v3->__r_.__value_.__l.__size_;
      unint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        unint64_t v12 = (void *)*v12;
      }
      uint64_t v10 = (std::string *)sub_130C0D0((uint64_t)v12);
      v3[1].__r_.__value_.__l.__size_ = (std::string::size_type)v10;
    }
    if (*(void *)(a2 + 32)) {
      uint64_t v13 = *(uint64_t (****)())(a2 + 32);
    }
    else {
      uint64_t v13 = &off_25326B0;
    }
    uint64_t result = sub_130AF00(v10, (uint64_t)v13);
    if ((v4 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_7:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_130B868()
{
  return 1;
}

void *sub_130B870@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.abtesting.ABConfigKeyValuePair");
}

uint64_t sub_130B880(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_9;
    }
  }
  else if (v4)
  {
    goto LABEL_9;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_9:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_130B938(uint64_t a1)
{
  sub_130B880(a1);

  operator delete();
}

uint64_t sub_130B970(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0) {
    goto LABEL_11;
  }
  if ((v1 & 1) == 0)
  {
LABEL_5:
    if ((v1 & 2) != 0) {
      goto LABEL_6;
    }
    goto LABEL_11;
  }
  unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v2 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v2 = 0;
    *(unsigned char *)(v2 + 23) = 0;
    goto LABEL_5;
  }
  **(unsigned char **)unint64_t v2 = 0;
  *(void *)(v2 + 8) = 0;
  if ((v1 & 2) != 0)
  {
LABEL_6:
    unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)unint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
LABEL_11:
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v5) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_130B9EC(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v20 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
    return *(void *)v20;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = (char *)(*(void *)v20 + 1);
    unsigned int v8 = **(unsigned char **)v20;
    if ((char)**(unsigned char **)v20 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180(*(uint64_t *)v20, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (char *)(*(void *)v20 + 2);
      }
    }
    *(void *)int v20 = v7;
    if (v8 >> 3 == 2)
    {
      if (v8 == 18)
      {
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v15 = *(void *)(a1 + 8);
        uint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          uint64_t v16 = (uint64_t *)*v16;
        }
        uint64_t v17 = (void *)(a1 + 32);
        goto LABEL_27;
      }
    }
    else if (v8 >> 3 == 1 && v8 == 10)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v18 = *(void *)(a1 + 8);
      uint64_t v16 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
      if (v18) {
        uint64_t v16 = (uint64_t *)*v16;
      }
      uint64_t v17 = (void *)(a1 + 24);
LABEL_27:
      unint64_t v19 = (std::string *)sub_1880F84(v17, v16);
      uint64_t v14 = (void *)sub_188C244(v19, *(char **)v20, (uint64_t)a3);
      goto LABEL_28;
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = *(char **)v20;
    }
    uint64_t v14 = sub_1885AC0(v8, v13, v7, a3);
LABEL_28:
    *(void *)int v20 = v14;
    if (!v14) {
      goto LABEL_34;
    }
    if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
      return *(void *)v20;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v20;
  }
LABEL_34:
  *(void *)int v20 = 0;
  return *(void *)v20;
}

char *sub_130BB94(uint64_t a1, char *__dst, void *a3)
{
  int v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    int v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 2) != 0) {
    int v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v9 + 31) < 0)
  {
    unsigned int v10 = *(void **)(v9 + 8);
    uint64_t v11 = *(void *)(v9 + 16);
  }
  else
  {
    unsigned int v10 = (void *)(v9 + 8);
    LODWORD(v11) = *(unsigned __int8 *)(v9 + 31);
  }
  if (*a3 - (void)v4 >= (int)v11)
  {
    uint64_t v12 = (int)v11;
    memcpy(v4, v10, (int)v11);
    v4 += v12;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v10, v11, v4);
}

uint64_t sub_130BC80(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_12;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
  uint64_t v5 = *(void *)(v3 + 8);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = v4;
  }
  uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    unint64_t v6 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    v2 += v12;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_130BD5C()
{
  return 1;
}

void *sub_130BD64@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.abtesting.ABBranchInfo");
}

void *sub_130BD74(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = off_24A8340;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = a1;
  result[7] = 0;
  result[8] = 0;
  result[9] = 0;
  return result;
}

uint64_t sub_130BE18(uint64_t a1)
{
  if (!a1)
  {
    sub_1320478();
  }

  return sub_1306FE0(v3, a1, 0);
}

void *sub_130BE74(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = off_24A8440;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = a1;
  result[7] = 0;
  result[8] = 0;
  result[9] = &qword_2550250;
  return result;
}

void *sub_130BF24(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = off_24A84C0;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = 0;
  return result;
}

void *sub_130BFC0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24A8540;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = &qword_2550250;
  result[5] = 0;
  result[6] = 0;
  return result;
}

void *sub_130C048(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24A85C0;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = &qword_2550250;
  result[5] = &qword_2550250;
  result[6] = &qword_2550250;
  return result;
}

uint64_t sub_130C0D0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24A8640;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = &qword_2550250;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(unsigned char *)(result + 48) = 0;
  return result;
}

uint64_t sub_130C158(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24A86C0;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = &qword_2550250;
  *(void *)(result + 32) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

void *sub_130C1E0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = &off_24A8740;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = &qword_2550250;
  return result;
}

char *sub_130C264(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17907C8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

BOOL sub_130C2F4(unsigned int a1)
{
  return a1 < 0xA;
}

uint64_t sub_130C300(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_24A87C0;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  return a1;
}

void sub_130C37C(_Unwind_Exception *a1)
{
  *uint64_t v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_130C3B0(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_130C424(void *a1)
{
  sub_130C3B0(a1);

  operator delete();
}

uint64_t sub_130C45C(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 3) != 0)
  {
    *(void *)(a1 + 24) = 0;
    *(void *)(a1 + 32) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_130C480(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v18 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v18, a3[11].i32[1])) {
    goto LABEL_29;
  }
  int v6 = (void *)(a1 + 8);
  while (1)
  {
    int v7 = v18 + 1;
    unsigned int v8 = *v18;
    if (*v18 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        int v7 = (char *)sub_188C180((uint64_t)v18, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        int v7 = v18 + 2;
      }
    }
    uint64_t v18 = v7;
    if (v8 >> 3 == 2)
    {
      if (v8 == 17)
      {
        uint64_t v15 = *(void *)v7;
        uint64_t v14 = v7 + 8;
        v5 |= 2u;
        *(void *)(a1 + 32) = v15;
LABEL_23:
        uint64_t v18 = v14;
        goto LABEL_24;
      }
    }
    else if (v8 >> 3 == 1 && v8 == 9)
    {
      uint64_t v16 = *(void *)v7;
      uint64_t v14 = v7 + 8;
      v5 |= 1u;
      *(void *)(a1 + 24) = v16;
      goto LABEL_23;
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v7 = v18;
    }
    uint64_t v18 = (char *)sub_1885AC0(v8, v13, v7, a3);
    if (!v18) {
      goto LABEL_30;
    }
LABEL_24:
    if (sub_11947B8((uint64_t)a3, &v18, a3[11].i32[1])) {
      goto LABEL_29;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    goto LABEL_29;
  }
LABEL_30:
  uint64_t v18 = 0;
LABEL_29:
  *(_DWORD *)(a1 + 16) |= v5;
  return v18;
}

_OWORD *sub_130C5F0(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (_OWORD *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    *(unsigned char *)uint64_t v4 = 9;
    *(void *)((char *)v4 + 1) = v7;
    uint64_t v4 = (_OWORD *)((char *)v4 + 9);
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v8 = *(void *)(a1 + 32);
    *(unsigned char *)uint64_t v4 = 17;
    *(void *)((char *)v4 + 1) = v8;
    uint64_t v4 = (_OWORD *)((char *)v4 + 9);
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    uint64_t v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    uint64_t v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    return (_OWORD *)((char *)v4 + v14);
  }

  return (_OWORD *)sub_188A528(a3, (char *)v12, v13, v4);
}

uint64_t sub_130C70C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  uint64_t v2 = 9;
  if ((v1 & 1) == 0) {
    uint64_t v2 = 0;
  }
  if ((v1 & 2) != 0) {
    v2 += 9;
  }
  if ((v1 & 3) != 0) {
    uint64_t v3 = v2;
  }
  else {
    uint64_t v3 = 0;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v6 + 31) < 0) {
      uint64_t v7 = *(void *)(v6 + 16);
    }
    else {
      uint64_t v7 = *(unsigned __int8 *)(v6 + 31);
    }
    v3 += v7;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

uint64_t sub_130C768()
{
  return 1;
}

void *sub_130C770@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.ParsecQueryRankingFeatures");
}

uint64_t sub_130C780(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  *(void *)(a1 + 8) = v4;
  *(void *)a1 = off_24A8840;
  sub_1882BC4(a1 + 16, a2);
  *(_DWORD *)(a1 + 40) = 0;
  return a1;
}

void sub_130C7E4(_Unwind_Exception *a1)
{
  *int v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_130C814(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  uint64_t v4 = a1 + 16;
  *(void *)a1 = off_24A8840;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = 0;
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v4, a2 + 16);
  return a1;
}

void sub_130C8A8(_Unwind_Exception *a1)
{
  sub_1882CC0(v3);
  *int v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_130C8E8(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_130C964(void *a1)
{
  sub_130C8E8(a1);

  operator delete();
}

unsigned char *sub_130C99C(uint64_t a1)
{
  uint64_t result = sub_18843A4((unsigned char *)(a1 + 16));
  char v4 = *(unsigned char *)(a1 + 8);
  uint64_t v3 = (uint64_t *)(a1 + 8);
  if (v4)
  {
    return (unsigned char *)sub_188B4AC(v3);
  }
  return result;
}

char *sub_130C9EC(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v15 = a2;
  if ((sub_11947B8((uint64_t)a3, &v15, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v5 = (uint64_t *)(a1 + 8);
    unint64_t v6 = (uint64_t **)(a1 + 16);
    while (1)
    {
      uint64_t v7 = v15 + 1;
      unsigned int v8 = *v15;
      if (*v15 < 0)
      {
        unsigned int v9 = v8 + (*v7 << 7);
        unsigned int v8 = v9 - 128;
        if (*v7 < 0)
        {
          uint64_t v7 = (char *)sub_188C180((uint64_t)v15, v9 - 128);
          unsigned int v8 = v10;
        }
        else
        {
          uint64_t v7 = v15 + 2;
        }
      }
      uint64_t v15 = v7;
      if (!v8 || (v8 & 7) == 4) {
        break;
      }
      if (v8 - 800 > 0x327)
      {
        if (*v5)
        {
          uint64_t v13 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else
        {
          uint64_t v13 = (std::string *)sub_188DBD8(v5);
          uint64_t v7 = v15;
        }
        uint64_t v12 = sub_1885AC0(v8, v13, v7, a3);
      }
      else
      {
        uint64_t v12 = sub_18859DC(v6, v8, v7, (uint64_t)&off_2532768, v5, a3);
      }
      uint64_t v15 = (char *)v12;
      if (!v12) {
        return 0;
      }
      if (sub_11947B8((uint64_t)a3, &v15, a3[11].i32[1])) {
        return v15;
      }
    }
    if (v7)
    {
      a3[10].i32[0] = v8 - 1;
      return v15;
    }
    return 0;
  }
  return v15;
}

char *sub_130CB34(uint64_t a1, char *a2, _DWORD *a3)
{
  char v4 = a2;
  if (*(_WORD *)(a1 + 26)) {
    char v4 = sub_1886844(a1 + 16, 100, 201, a2, a3);
  }
  uint64_t v6 = *(void *)(a1 + 8);
  if ((v6 & 1) == 0) {
    return v4;
  }
  unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v8 + 31) < 0)
  {
    unsigned int v9 = *(void **)(v8 + 8);
    uint64_t v10 = *(void *)(v8 + 16);
  }
  else
  {
    unsigned int v9 = (void *)(v8 + 8);
    LODWORD(v10) = *(unsigned __int8 *)(v8 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v10)
  {
    uint64_t v11 = (int)v10;
    memcpy(v4, v9, (int)v10);
    v4 += v11;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v9, v10, v4);
}

uint64_t sub_130CC00(uint64_t a1)
{
  uint64_t result = sub_1889280(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v4 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v5 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v5 = *(unsigned __int8 *)(v4 + 31);
    }
    result += v5;
  }
  *(_DWORD *)(a1 + 40) = result;
  return result;
}

uint64_t sub_130CC58(uint64_t a1)
{
  return sub_18856CC(a1 + 16);
}

void *sub_130CC60@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.AutocompleteSessionData");
}

void *sub_130CC70(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_130CCE4(void *a1)
{
  sub_130CC70(a1);

  operator delete();
}

uint64_t sub_130CD1C(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 3) != 0) {
    *(void *)(a1 + 24) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_130CD40(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v25 = a2;
  if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
    return v25;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v25 + 1;
    unsigned int v8 = *v25;
    if (*v25 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v25, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v25 + 2;
      }
    }
    unint64_t v25 = v7;
    if (v8 >> 3 != 2) {
      break;
    }
    if (v8 != 16) {
      goto LABEL_13;
    }
    uint64_t v14 = v7 + 1;
    unint64_t v15 = *v7;
    if (*v7 < 0)
    {
      int v16 = *v14;
      int v17 = v15 + (v16 << 7);
      unint64_t v15 = (v17 - 128);
      if (v16 < 0)
      {
        unint64_t v25 = (char *)sub_188C138((uint64_t)v7, (v17 - 128));
        if (!v25) {
          return 0;
        }
        unint64_t v15 = v21;
        goto LABEL_26;
      }
      uint64_t v14 = v7 + 2;
    }
    unint64_t v25 = v14;
LABEL_26:
    if (v15 > 9)
    {
      if (*v6) {
        uint64_t v23 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        uint64_t v23 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      int v24 = 2;
      goto LABEL_46;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    *(_DWORD *)(a1 + 28) = v15;
LABEL_34:
    if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
      return v25;
    }
  }
  if (v8 >> 3 == 1 && v8 == 8)
  {
    uint64_t v18 = v7 + 1;
    unint64_t v15 = *v7;
    if ((*v7 & 0x80000000) == 0) {
      goto LABEL_31;
    }
    int v19 = *v18;
    int v20 = v15 + (v19 << 7);
    unint64_t v15 = (v20 - 128);
    if (v19 < 0)
    {
      unint64_t v25 = (char *)sub_188C138((uint64_t)v7, (v20 - 128));
      if (!v25) {
        return 0;
      }
      unint64_t v15 = v22;
    }
    else
    {
      uint64_t v18 = v7 + 2;
LABEL_31:
      unint64_t v25 = v18;
    }
    if (sub_12BD228(v15))
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      *(_DWORD *)(a1 + 24) = v15;
      goto LABEL_34;
    }
    if (*v6) {
      uint64_t v23 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else {
      uint64_t v23 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
    }
    int v24 = 1;
LABEL_46:
    sub_188C020(v24, v15, v23);
    goto LABEL_34;
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = v25;
    }
    unint64_t v25 = (char *)sub_1885AC0(v8, v13, v7, a3);
    if (!v25) {
      return 0;
    }
    goto LABEL_34;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v25;
  }
  return 0;
}

unsigned char *sub_130CF9C(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  unint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      unint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 28);
    unsigned char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    int v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    int v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_130D140(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_14;
  }
  if (v1)
  {
    int v3 = *(_DWORD *)(a1 + 24);
    if (v3 < 0)
    {
      uint64_t v2 = 11;
      if ((v1 & 2) == 0) {
        goto LABEL_14;
      }
    }
    else
    {
      uint64_t v2 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v1 & 2) == 0) {
        goto LABEL_14;
      }
    }
  }
  else
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_14;
    }
  }
  int v4 = *(_DWORD *)(a1 + 28);
  if (v4 < 0) {
    uint64_t v5 = 11;
  }
  else {
    uint64_t v5 = ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v2 += v5;
LABEL_14:
  uint64_t v6 = *(void *)(a1 + 8);
  if (v6)
  {
    unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v8 + 31) < 0) {
      uint64_t v9 = *(void *)(v8 + 16);
    }
    else {
      uint64_t v9 = *(unsigned __int8 *)(v8 + 31);
    }
    v2 += v9;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_130D200()
{
  return 1;
}

void *sub_130D208@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.ClientRankingFeatureMetadata.ClientRankingFeatureTypeSource");
}

void *sub_130D218(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_130D28C(void *a1)
{
  sub_130D218(a1);

  operator delete();
}

uint64_t sub_130D2C4(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 16) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_130D2DC(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v19 = a2;
  if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
    return v19;
  }
  uint64_t v5 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v6 = v19 + 1;
    unsigned int v7 = *v19;
    if (*v19 < 0)
    {
      unsigned int v8 = v7 + (*v6 << 7);
      unsigned int v7 = v8 - 128;
      if (*v6 < 0)
      {
        uint64_t v6 = (char *)sub_188C180((uint64_t)v19, v8 - 128);
        unsigned int v7 = v9;
      }
      else
      {
        uint64_t v6 = v19 + 2;
      }
    }
    int v19 = v6;
    if (v7 == 8)
    {
      unint64_t v12 = v6 + 1;
      unint64_t v13 = *v6;
      if (*v6 < 0)
      {
        int v14 = *v12;
        int v15 = v13 + (v14 << 7);
        unint64_t v13 = (v15 - 128);
        if (v14 < 0)
        {
          int v19 = (char *)sub_188C138((uint64_t)v6, (v15 - 128));
          if (!v19) {
            return 0;
          }
          unint64_t v13 = v16;
          goto LABEL_20;
        }
        unint64_t v12 = v6 + 2;
      }
      int v19 = v12;
LABEL_20:
      if (v13 > 0x29)
      {
        if (*v5) {
          uint64_t v17 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          uint64_t v17 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        sub_188C020(1, v13, v17);
      }
      else
      {
        *(_DWORD *)(a1 + 16) |= 1u;
        *(_DWORD *)(a1 + 24) = v13;
      }
      goto LABEL_22;
    }
    if (!v7 || (v7 & 7) == 4) {
      break;
    }
    if (*v5)
    {
      unint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v6 = v19;
    }
    int v19 = (char *)sub_1885AC0(v7, v11, v6, a3);
    if (!v19) {
      return 0;
    }
LABEL_22:
    if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
      return v19;
    }
  }
  if (v6)
  {
    a3[10].i32[0] = v7 - 1;
    return v19;
  }
  return 0;
}

unsigned char *sub_130D484(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (unsigned char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v6 = *(int *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v6;
    if (v6 > 0x7F)
    {
      v4[1] = v6 | 0x80;
      unint64_t v7 = v6 >> 7;
      v4[2] = v6 >> 7;
      v4 += 3;
      if (v6 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v8 = v7 >> 14;
          v7 >>= 7;
          *v4++ = v7;
        }
        while (v8);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    unint64_t v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    unint64_t v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    v4 += v14;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v12, v13, v4);
}

uint64_t sub_130D5AC(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    int v2 = *(_DWORD *)(a1 + 24);
    if (v2 < 0) {
      uint64_t v1 = 11;
    }
    else {
      uint64_t v1 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  else
  {
    uint64_t v1 = 0;
  }
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v5 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    v1 += v6;
  }
  *(_DWORD *)(a1 + 20) = v1;
  return v1;
}

uint64_t sub_130D620()
{
  return 1;
}

void *sub_130D628@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.ClientRankingFeatureMetadata.ClientRankingFeatureTypeResult");
}

uint64_t sub_130D638(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_130D6BC((uint64_t (***)())a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

uint64_t (***sub_130D6BC(uint64_t (***result)()))()
{
  if (result != &off_25327D8)
  {
    uint64_t v1 = result;
    uint64_t v2 = result[3];
    if (v2)
    {
      sub_130CC70(v2);
      operator delete();
    }
    uint64_t v3 = v1[4];
    if (v3)
    {
      sub_130D218(v3);
      operator delete();
    }
    int v4 = v1[5];
    if (v4)
    {
      sub_130F480(v4);
      operator delete();
    }
    uint64_t result = (uint64_t (***)())v1[6];
    if (result)
    {
      sub_130F8A4(result);
      operator delete();
    }
  }
  return result;
}

void sub_130D788(uint64_t a1)
{
  sub_130D638(a1);

  operator delete();
}

uint64_t sub_130D7C0(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 0xF) != 0)
  {
    if (v2) {
      uint64_t result = sub_130CD1C(*(void *)(result + 24));
    }
    if ((v2 & 2) != 0)
    {
      uint64_t v3 = *(void *)(v1 + 32);
      char v4 = *(unsigned char *)(v3 + 8);
      uint64_t result = v3 + 8;
      *(_DWORD *)(result + 16) = 0;
      *(_DWORD *)(result + 8) = 0;
      if (v4) {
        uint64_t result = sub_188B4AC((uint64_t *)result);
      }
    }
    if ((v2 & 4) != 0) {
      uint64_t result = sub_130D864(*(void *)(v1 + 40));
    }
    if ((v2 & 8) != 0) {
      uint64_t result = sub_130D88C(*(void *)(v1 + 48));
    }
  }
  if ((v2 & 0x30) != 0) {
    *(void *)(v1 + 56) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = v1 + 8;
  *(_DWORD *)(v5 + 8) = 0;
  if (v6)
  {
    return sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

uint64_t sub_130D864(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 7) != 0)
  {
    *(_DWORD *)(a1 + 32) = 0;
    *(void *)(a1 + 24) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_130D88C(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 0xF) != 0)
  {
    *(void *)(a1 + 24) = 0;
    *(void *)(a1 + 32) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_130D8B0(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v33 = a2;
  if (sub_11947B8((uint64_t)a3, &v33, a3[11].i32[1])) {
    return v33;
  }
  char v6 = (void *)(a1 + 8);
  while (2)
  {
    unint64_t v7 = v33 + 1;
    unsigned int v8 = *v33;
    if (*v33 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        unint64_t v7 = (char *)sub_188C180((uint64_t)v33, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        unint64_t v7 = v33 + 2;
      }
    }
    unint64_t v33 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 8) {
          goto LABEL_47;
        }
        unint64_t v11 = v7 + 1;
        unint64_t v12 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v13 = *v11;
        int v14 = v12 + (v13 << 7);
        unint64_t v12 = (v14 - 128);
        if (v13 < 0)
        {
          unint64_t v33 = (char *)sub_188C138((uint64_t)v7, (v14 - 128));
          if (!v33) {
            return 0;
          }
          unint64_t v12 = v29;
        }
        else
        {
          unint64_t v11 = v7 + 2;
LABEL_13:
          unint64_t v33 = v11;
        }
        if (v12 <= 3)
        {
          *(_DWORD *)(a1 + 16) |= 0x10u;
          *(_DWORD *)(a1 + 56) = v12;
          goto LABEL_55;
        }
        if (*v6) {
          int v31 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          int v31 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v32 = 1;
        goto LABEL_67;
      case 2u:
        if (v8 != 18) {
          goto LABEL_47;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        int v15 = *(void **)(a1 + 24);
        if (!v15)
        {
          unint64_t v16 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            unint64_t v16 = (void *)*v16;
          }
          int v15 = sub_131B310((uint64_t)v16);
          *(void *)(a1 + 24) = v15;
          unint64_t v7 = v33;
        }
        uint64_t v17 = sub_130DC80(a3, (uint64_t)v15, (unsigned __int8 *)v7);
        goto LABEL_54;
      case 3u:
        if (v8 != 26) {
          goto LABEL_47;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v18 = *(void *)(a1 + 32);
        if (!v18)
        {
          int v19 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            int v19 = (void *)*v19;
          }
          uint64_t v18 = sub_131B388((uint64_t)v19);
          *(void *)(a1 + 32) = v18;
          unint64_t v7 = v33;
        }
        uint64_t v17 = sub_130DD10(a3, v18, (unsigned __int8 *)v7);
        goto LABEL_54;
      case 4u:
        if (v8 != 32) {
          goto LABEL_47;
        }
        int v20 = v7 + 1;
        unint64_t v12 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_32;
        }
        int v21 = *v20;
        int v22 = v12 + (v21 << 7);
        unint64_t v12 = (v22 - 128);
        if (v21 < 0)
        {
          unint64_t v33 = (char *)sub_188C138((uint64_t)v7, (v22 - 128));
          if (!v33) {
            return 0;
          }
          unint64_t v12 = v30;
        }
        else
        {
          int v20 = v7 + 2;
LABEL_32:
          unint64_t v33 = v20;
        }
        if (v12 > 2)
        {
          if (*v6) {
            int v31 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            int v31 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          int v32 = 4;
LABEL_67:
          sub_188C020(v32, v12, v31);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 0x20u;
          *(_DWORD *)(a1 + 60) = v12;
        }
        goto LABEL_55;
      case 5u:
        if (v8 != 42) {
          goto LABEL_47;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v23 = *(void *)(a1 + 40);
        if (!v23)
        {
          int v24 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            int v24 = (void *)*v24;
          }
          uint64_t v23 = sub_131B59C((uint64_t)v24);
          *(void *)(a1 + 40) = v23;
          unint64_t v7 = v33;
        }
        uint64_t v17 = sub_130DDA0(a3, v23, (unsigned __int8 *)v7);
        goto LABEL_54;
      case 6u:
        if (v8 != 50) {
          goto LABEL_47;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        unint64_t v25 = *(void **)(a1 + 48);
        if (!v25)
        {
          BOOL v26 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            BOOL v26 = (void *)*v26;
          }
          unint64_t v25 = sub_131B618((uint64_t)v26);
          *(void *)(a1 + 48) = v25;
          unint64_t v7 = v33;
        }
        uint64_t v17 = sub_130DE30(a3, (uint64_t)v25, (unsigned __int8 *)v7);
        goto LABEL_54;
      default:
LABEL_47:
        if (v8) {
          BOOL v27 = (v8 & 7) == 4;
        }
        else {
          BOOL v27 = 1;
        }
        if (!v27)
        {
          if (*v6)
          {
            unint64_t v28 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            unint64_t v28 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unint64_t v7 = v33;
          }
          uint64_t v17 = (char *)sub_1885AC0(v8, v28, v7, a3);
LABEL_54:
          unint64_t v33 = v17;
          if (!v17) {
            return 0;
          }
LABEL_55:
          if (sub_11947B8((uint64_t)a3, &v33, a3[11].i32[1])) {
            return v33;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return v33;
    }
  }
}

char *sub_130DC80(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_130CD40(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_130DD10(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_130D2DC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_130DDA0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_130F52C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_130DE30(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_130F950(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_130DEC0(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 0x10) != 0)
  {
    if (*(void *)a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 56);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 24);
    unsigned char *v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 20);
    v4[1] = v11;
    if (v11 > 0x7F) {
      unint64_t v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      unint64_t v12 = v4 + 2;
    }
    char v4 = sub_130CF9C(v10, (unint64_t)v12, a3);
    if ((v6 & 2) == 0)
    {
LABEL_10:
      if ((v6 & 0x20) == 0) {
        goto LABEL_30;
      }
      goto LABEL_24;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_10;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v13 = *(void *)(a1 + 32);
  unsigned char *v4 = 26;
  unsigned int v14 = *(_DWORD *)(v13 + 20);
  v4[1] = v14;
  if (v14 > 0x7F) {
    int v15 = sub_188A9CC(v14, v4 + 1);
  }
  else {
    int v15 = v4 + 2;
  }
  char v4 = sub_130D484(v13, (unint64_t)v15, a3);
  if ((v6 & 0x20) != 0)
  {
LABEL_24:
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v16 = *(int *)(a1 + 60);
    unsigned char *v4 = 32;
    v4[1] = v16;
    if (v16 > 0x7F)
    {
      v4[1] = v16 | 0x80;
      unint64_t v17 = v16 >> 7;
      v4[2] = v16 >> 7;
      v4 += 3;
      if (v16 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v18 = v17 >> 14;
          v17 >>= 7;
          *v4++ = v17;
        }
        while (v18);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_30:
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v19 = *(void *)(a1 + 40);
    unsigned char *v4 = 42;
    unsigned int v20 = *(_DWORD *)(v19 + 20);
    v4[1] = v20;
    if (v20 > 0x7F) {
      int v21 = sub_188A9CC(v20, v4 + 1);
    }
    else {
      int v21 = v4 + 2;
    }
    char v4 = sub_130F6C4(v19, (unint64_t)v21, a3);
  }
  if ((v6 & 8) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v22 = *(void *)(a1 + 48);
    unsigned char *v4 = 50;
    unsigned int v23 = *(_DWORD *)(v22 + 20);
    v4[1] = v23;
    if (v23 > 0x7F) {
      int v24 = sub_188A9CC(v23, v4 + 1);
    }
    else {
      int v24 = v4 + 2;
    }
    char v4 = sub_130FB2C(v22, (unint64_t)v24, a3);
  }
  uint64_t v25 = *(void *)(a1 + 8);
  if ((v25 & 1) == 0) {
    return v4;
  }
  unint64_t v27 = v25 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v27 + 31) < 0)
  {
    unint64_t v28 = *(void **)(v27 + 8);
    uint64_t v29 = *(void *)(v27 + 16);
  }
  else
  {
    unint64_t v28 = (void *)(v27 + 8);
    LODWORD(v29) = *(unsigned __int8 *)(v27 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v29)
  {
    uint64_t v30 = (int)v29;
    memcpy(v4, v28, (int)v29);
    v4 += v30;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v28, v29, v4);
}

uint64_t sub_130E20C(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0x3F) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_23;
  }
  if (v2)
  {
    uint64_t v4 = sub_130D140(*(void *)(a1 + 24));
    uint64_t v3 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_7:
    uint64_t v5 = sub_130D5AC(*(void *)(a1 + 32));
    v3 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_8:
  if ((v2 & 4) != 0)
  {
    uint64_t v6 = sub_130F824(*(void *)(a1 + 40));
    v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 8) == 0)
    {
LABEL_10:
      if ((v2 & 0x10) == 0) {
        goto LABEL_11;
      }
      goto LABEL_15;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_10;
  }
  uint64_t v7 = sub_130FCC8(*(void *)(a1 + 48));
  v3 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x10) == 0)
  {
LABEL_11:
    if ((v2 & 0x20) == 0) {
      goto LABEL_23;
    }
    goto LABEL_19;
  }
LABEL_15:
  int v8 = *(_DWORD *)(a1 + 56);
  if (v8 < 0) {
    uint64_t v9 = 11;
  }
  else {
    uint64_t v9 = ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v3 += v9;
  if ((v2 & 0x20) != 0)
  {
LABEL_19:
    int v10 = *(_DWORD *)(a1 + 60);
    if (v10 < 0) {
      uint64_t v11 = 11;
    }
    else {
      uint64_t v11 = ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v3 += v11;
  }
LABEL_23:
  uint64_t v12 = *(void *)(a1 + 8);
  if (v12)
  {
    unint64_t v14 = v12 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v14 + 31) < 0) {
      uint64_t v15 = *(void *)(v14 + 16);
    }
    else {
      uint64_t v15 = *(unsigned __int8 *)(v14 + 31);
    }
    v3 += v15;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_130E3BC(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0x3F) != 0)
  {
    if (v4)
    {
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::pointer data = (std::string *)result[1].__r_.__value_.__l.__data_;
      if (!data)
      {
        std::string::size_type size = v3->__r_.__value_.__l.__size_;
        int v8 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
        if (size) {
          int v8 = (void *)*v8;
        }
        std::string::pointer data = (std::string *)sub_131B310((uint64_t)v8);
        v3[1].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      }
      if (*(void *)(a2 + 24)) {
        uint64_t v9 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        uint64_t v9 = &off_2532798;
      }
      uint64_t result = sub_117EF04(data, (uint64_t)v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_30;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    int v10 = (std::string *)v3[1].__r_.__value_.__l.__size_;
    if (!v10)
    {
      std::string::size_type v11 = v3->__r_.__value_.__l.__size_;
      uint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        uint64_t v12 = (void *)*v12;
      }
      int v10 = (std::string *)sub_131B388((uint64_t)v12);
      v3[1].__r_.__value_.__l.__size_ = (std::string::size_type)v10;
    }
    if (*(void *)(a2 + 32)) {
      uint64_t v13 = *(uint64_t (****)())(a2 + 32);
    }
    else {
      uint64_t v13 = &off_25327B8;
    }
    uint64_t result = sub_11A7934(v10, (uint64_t)v13);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_38;
    }
LABEL_30:
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
    unint64_t v14 = (std::string *)v3[1].__r_.__value_.__r.__words[2];
    if (!v14)
    {
      std::string::size_type v15 = v3->__r_.__value_.__l.__size_;
      unint64_t v16 = (void *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
      if (v15) {
        unint64_t v16 = (void *)*v16;
      }
      unint64_t v14 = (std::string *)sub_131B59C((uint64_t)v16);
      v3[1].__r_.__value_.__r.__words[2] = (std::string::size_type)v14;
    }
    if (*(void *)(a2 + 40)) {
      unint64_t v17 = *(uint64_t (****)())(a2 + 40);
    }
    else {
      unint64_t v17 = &off_2532878;
    }
    uint64_t result = sub_130E594(v14, (uint64_t)v17);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0) {
        goto LABEL_7;
      }
      goto LABEL_46;
    }
LABEL_38:
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 8u;
    unint64_t v18 = (std::string *)v3[2].__r_.__value_.__l.__data_;
    if (!v18)
    {
      std::string::size_type v19 = v3->__r_.__value_.__l.__size_;
      unsigned int v20 = (void *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
      if (v19) {
        unsigned int v20 = (void *)*v20;
      }
      unint64_t v18 = (std::string *)sub_131B618((uint64_t)v20);
      v3[2].__r_.__value_.__r.__words[0] = (std::string::size_type)v18;
    }
    if (*(void *)(a2 + 48)) {
      int v21 = *(uint64_t (****)())(a2 + 48);
    }
    else {
      int v21 = &off_25328A0;
    }
    uint64_t result = sub_130E5F8(v18, (uint64_t)v21);
    if ((v4 & 0x10) == 0)
    {
LABEL_7:
      if ((v4 & 0x20) == 0)
      {
LABEL_9:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
        goto LABEL_10;
      }
LABEL_8:
      HIDWORD(v3[2].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 60);
      goto LABEL_9;
    }
LABEL_46:
    LODWORD(v3[2].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 56);
    if ((v4 & 0x20) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
LABEL_10:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

std::string *sub_130E594(std::string *result, uint64_t a2)
{
  int v2 = *(_DWORD *)(a2 + 16);
  if ((v2 & 7) == 0) {
    goto LABEL_7;
  }
  if ((v2 & 1) == 0)
  {
    if ((v2 & 2) == 0) {
      goto LABEL_4;
    }
LABEL_10:
    HIDWORD(result[1].__r_.__value_.__r.__words[0]) = *(_DWORD *)(a2 + 28);
    if ((v2 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  LODWORD(result[1].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 24);
  if ((v2 & 2) != 0) {
    goto LABEL_10;
  }
LABEL_4:
  if ((v2 & 4) != 0) {
LABEL_5:
  }
    LODWORD(result[1].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 32);
LABEL_6:
  LODWORD(result->__r_.__value_.__r.__words[2]) |= v2;
LABEL_7:
  uint64_t v3 = *(void *)(a2 + 8);
  if (v3) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v3 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

std::string *sub_130E5F8(std::string *result, uint64_t a2)
{
  int v2 = *(_DWORD *)(a2 + 16);
  if ((v2 & 0xF) == 0) {
    goto LABEL_8;
  }
  if (v2)
  {
    LODWORD(result[1].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 24);
    if ((v2 & 2) == 0)
    {
LABEL_4:
      if ((v2 & 4) == 0) {
        goto LABEL_5;
      }
LABEL_12:
      LODWORD(result[1].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 32);
      if ((v2 & 8) == 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
  }
  else if ((v2 & 2) == 0)
  {
    goto LABEL_4;
  }
  HIDWORD(result[1].__r_.__value_.__r.__words[0]) = *(_DWORD *)(a2 + 28);
  if ((v2 & 4) != 0) {
    goto LABEL_12;
  }
LABEL_5:
  if ((v2 & 8) != 0) {
LABEL_6:
  }
    HIDWORD(result[1].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 36);
LABEL_7:
  LODWORD(result->__r_.__value_.__r.__words[2]) |= v2;
LABEL_8:
  uint64_t v3 = *(void *)(a2 + 8);
  if (v3) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v3 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_130E66C()
{
  return 1;
}

void *sub_130E674@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.ClientRankingFeatureMetadata.ClientRankingFeatureUnit");
}

uint64_t sub_130E684(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_2532818)
  {
    uint64_t v6 = *(void *)(a1 + 24);
    if (v6)
    {
      sub_130D638(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_130E73C(uint64_t a1)
{
  sub_130E684(a1);

  operator delete();
}

uint64_t sub_130E774(uint64_t result)
{
  uint64_t v1 = result;
  if (*(unsigned char *)(result + 16)) {
    uint64_t result = sub_130D7C0(*(void *)(result + 24));
  }
  char v3 = *(unsigned char *)(v1 + 8);
  uint64_t v2 = v1 + 8;
  *(_DWORD *)(v2 + 24) = 0;
  *(_DWORD *)(v2 + 8) = 0;
  if (v3)
  {
    return sub_188B4AC((uint64_t *)v2);
  }
  return result;
}

char *sub_130E7D4(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v24 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v24, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    int v8 = v24 + 1;
    unsigned int v9 = *v24;
    if (*v24 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        int v8 = (char *)sub_188C180((uint64_t)v24, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        int v8 = v24 + 2;
      }
    }
    int v24 = v8;
    if (v9 >> 3 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_13;
    }
    v5 |= 2u;
    unint64_t v16 = v8 + 1;
    int v17 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_24;
    }
    int v18 = *v16;
    int v17 = v17 + (v18 << 7) - 128;
    if ((v18 & 0x80000000) == 0)
    {
      unint64_t v16 = v8 + 2;
LABEL_24:
      int v24 = v16;
      *(_DWORD *)(a1 + 32) = v17;
      goto LABEL_31;
    }
    uint64_t v22 = (char *)sub_188C0D0((uint64_t)v8, v17);
    int v24 = v22;
    *(_DWORD *)(a1 + 32) = v23;
    if (!v22) {
      goto LABEL_38;
    }
LABEL_31:
    if (sub_11947B8((uint64_t)a3, &v24, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 >> 3 == 1 && v9 == 10)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v19 = *(void *)(a1 + 24);
    if (!v19)
    {
      unsigned int v20 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v7) {
        unsigned int v20 = (void *)*v20;
      }
      sub_131B404((uint64_t)v20);
      uint64_t v19 = v21;
      *(void *)(a1 + 24) = v21;
      int v8 = v24;
    }
    std::string::size_type v15 = sub_130E9B8(a3, v19, (unsigned __int8 *)v8);
LABEL_30:
    int v24 = v15;
    if (!v15) {
      goto LABEL_38;
    }
    goto LABEL_31;
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      unint64_t v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v8 = v24;
    }
    std::string::size_type v15 = (char *)sub_1885AC0(v9, v14, v8, a3);
    goto LABEL_30;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_38:
  int v24 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v24;
}

char *sub_130E9B8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_130D8B0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_130EA48(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    unsigned char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    int v4 = sub_130DEC0(v7, (unint64_t)v9, a3);
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 32);
    unsigned char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    unint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    unint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_130EBE0(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 3) == 0)
  {
    uint64_t result = 0;
    goto LABEL_8;
  }
  if (v2)
  {
    uint64_t v4 = sub_130E20C(*(void *)(a1 + 24));
    uint64_t result = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t result = 0;
  if ((v2 & 2) != 0) {
LABEL_7:
  }
    result += ((9 * (__clz(*(_DWORD *)(a1 + 32) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_8:
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5)
  {
    unint64_t v6 = v5 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v6 + 31) < 0) {
      uint64_t v7 = *(void *)(v6 + 16);
    }
    else {
      uint64_t v7 = *(unsigned __int8 *)(v6 + 31);
    }
    result += v7;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

std::string *sub_130ECA4(std::string *result, uint64_t a2)
{
  char v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 3) != 0)
  {
    if (v4)
    {
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::pointer data = (std::string *)result[1].__r_.__value_.__l.__data_;
      if (!data)
      {
        std::string::size_type size = v3->__r_.__value_.__l.__size_;
        uint64_t v7 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
        if (size) {
          uint64_t v7 = (void *)*v7;
        }
        sub_131B404((uint64_t)v7);
        v3[1].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      }
      if (*(void *)(a2 + 24)) {
        unsigned int v8 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        unsigned int v8 = &off_25327D8;
      }
      uint64_t result = sub_130E3BC(data, (uint64_t)v8);
    }
    if ((v4 & 2) != 0) {
      LODWORD(v3[1].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 32);
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_130ED74()
{
  return 1;
}

void *sub_130ED7C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.ClientRankingFeatureMetadata.ClientRankingFeatureTypeComposite.VariableExponentPair");
}

void *sub_130ED8C(void *a1)
{
  char v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_13204E4(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_130EE0C(void *a1)
{
  sub_130ED8C(a1);

  operator delete();
}

uint64_t sub_130EE44(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    char v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_130E774(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = v1 + 8;
  *(_DWORD *)(v5 + 40) = 0;
  *(_DWORD *)(v5 + 8) = 0;
  if (v6)
  {
    return sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

char *sub_130EEC8(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v21 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v21, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    unsigned int v8 = v21 + 1;
    unsigned int v9 = *v21;
    if (*v21 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unsigned int v8 = (char *)sub_188C180((uint64_t)v21, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unsigned int v8 = v21 + 2;
      }
    }
    uint64_t v21 = v8;
    if (v9 >> 3 == 2)
    {
      if (v9 == 21)
      {
        *(_DWORD *)(a1 + 48) = *(_DWORD *)v8;
        uint64_t v21 = v8 + 4;
        int v5 = 1;
        goto LABEL_31;
      }
    }
    else if (v9 >> 3 == 1 && v9 == 10)
    {
      unint64_t v15 = v8 - 1;
      while (1)
      {
        unint64_t v16 = (unsigned __int8 *)(v15 + 1);
        uint64_t v21 = v15 + 1;
        uint64_t v17 = *(_DWORD **)(a1 + 40);
        if (v17 && (uint64_t v18 = *(int *)(a1 + 32), (int)v18 < *v17))
        {
          *(_DWORD *)(a1 + 32) = v18 + 1;
          uint64_t v19 = *(void *)&v17[2 * v18 + 2];
        }
        else
        {
          uint64_t v20 = sub_131B484(*(void *)(a1 + 24));
          uint64_t v19 = sub_188CDC8(a1 + 24, v20);
          unint64_t v16 = (unsigned __int8 *)v21;
        }
        unint64_t v15 = sub_130F0B0(a3, v19, v16);
        uint64_t v21 = v15;
        if (!v15) {
          goto LABEL_36;
        }
        if (*(void *)a3 <= (unint64_t)v15 || *v15 != 10) {
          goto LABEL_31;
        }
      }
    }
    if (!v9 || (v9 & 7) == 4) {
      break;
    }
    if (*v7)
    {
      unint64_t v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unsigned int v8 = v21;
    }
    uint64_t v21 = (char *)sub_1885AC0(v9, v14, v8, a3);
    if (!v21) {
      goto LABEL_36;
    }
LABEL_31:
    if (sub_11947B8((uint64_t)a3, &v21, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_36:
  uint64_t v21 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v21;
}

char *sub_130F0B0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_130E7D4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_130F140(uint64_t a1, char *__dst, _DWORD *a3)
{
  int v6 = *(_DWORD *)(a1 + 32);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unsigned int v10 = __dst + 2;
      }
      __dst = sub_130EA48(v8, (unint64_t)v10, a3);
    }
  }
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    int v11 = *(_DWORD *)(a1 + 48);
    *__dst = 21;
    *(_DWORD *)(__dst + 1) = v11;
    __dst += 5;
  }
  uint64_t v12 = *(void *)(a1 + 8);
  if ((v12 & 1) == 0) {
    return __dst;
  }
  unint64_t v14 = v12 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v14 + 31) < 0)
  {
    unint64_t v15 = *(void **)(v14 + 8);
    uint64_t v16 = *(void *)(v14 + 16);
  }
  else
  {
    unint64_t v15 = (void *)(v14 + 8);
    LODWORD(v16) = *(unsigned __int8 *)(v14 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v16)
  {
    uint64_t v17 = (int)v16;
    memcpy(__dst, v15, (int)v16);
    __dst += v17;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v15, v16, __dst);
}

uint64_t sub_130F2C0(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_130EBE0(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  if (*(unsigned char *)(a1 + 16)) {
    uint64_t result = v2 + 5;
  }
  else {
    uint64_t result = v2;
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    result += v11;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

std::string *sub_130F37C(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = (std::string *)sub_13205E4((uint64_t *)&v3[1], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2]- LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    uint64_t v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  if (*(unsigned char *)(a2 + 16))
  {
    int v9 = *(_DWORD *)(a2 + 48);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
    LODWORD(v3[2].__r_.__value_.__l.__data_) = v9;
  }
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_130F468()
{
  return 1;
}

void *sub_130F470@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.ClientRankingFeatureMetadata.ClientRankingFeatureTypeComposite");
}

void *sub_130F480(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_130F4F4(void *a1)
{
  sub_130F480(a1);

  operator delete();
}

char *sub_130F52C(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v20 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v20, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v20 + 1;
    unsigned int v9 = *v20;
    if (*v20 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v20, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v20 + 2;
      }
    }
    uint64_t v20 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 == 3)
    {
      if (v9 != 29) {
        goto LABEL_14;
      }
      int v17 = *(_DWORD *)v8;
      uint64_t v16 = v8 + 4;
      v5 |= 4u;
      *(_DWORD *)(a1 + 32) = v17;
      goto LABEL_27;
    }
    if (v12 == 2)
    {
      if (v9 != 21) {
        goto LABEL_14;
      }
      int v18 = *(_DWORD *)v8;
      uint64_t v16 = v8 + 4;
      v5 |= 2u;
      *(_DWORD *)(a1 + 28) = v18;
LABEL_27:
      uint64_t v20 = v16;
      goto LABEL_28;
    }
    if (v12 == 1 && v9 == 13)
    {
      int v19 = *(_DWORD *)v8;
      uint64_t v16 = v8 + 4;
      v5 |= 1u;
      *(_DWORD *)(a1 + 24) = v19;
      goto LABEL_27;
    }
LABEL_14:
    if (!v9 || (v9 & 7) == 4) {
      break;
    }
    if (*v7)
    {
      unint64_t v15 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = v20;
    }
    uint64_t v20 = (char *)sub_1885AC0(v9, v15, v8, a3);
    if (!v20) {
      goto LABEL_33;
    }
LABEL_28:
    if (sub_11947B8((uint64_t)a3, &v20, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_33:
  uint64_t v20 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v20;
}

_OWORD *sub_130F6C4(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (_OWORD *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    int v7 = *(_DWORD *)(a1 + 24);
    *(unsigned char *)int v4 = 13;
    *(_DWORD *)((char *)v4 + 1) = v7;
    int v4 = (_OWORD *)((char *)v4 + 5);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_14;
      }
      goto LABEL_11;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  int v8 = *(_DWORD *)(a1 + 28);
  *(unsigned char *)int v4 = 21;
  *(_DWORD *)((char *)v4 + 1) = v8;
  int v4 = (_OWORD *)((char *)v4 + 5);
  if ((v6 & 4) != 0)
  {
LABEL_11:
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    int v9 = *(_DWORD *)(a1 + 32);
    *(unsigned char *)int v4 = 29;
    *(_DWORD *)((char *)v4 + 1) = v9;
    int v4 = (_OWORD *)((char *)v4 + 5);
  }
LABEL_14:
  uint64_t v10 = *(void *)(a1 + 8);
  if ((v10 & 1) == 0) {
    return v4;
  }
  unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v12 + 31) < 0)
  {
    uint64_t v13 = *(void **)(v12 + 8);
    uint64_t v14 = *(void *)(v12 + 16);
  }
  else
  {
    uint64_t v13 = (void *)(v12 + 8);
    LODWORD(v14) = *(unsigned __int8 *)(v12 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v14)
  {
    uint64_t v15 = (int)v14;
    memcpy(v4, v13, (int)v14);
    return (_OWORD *)((char *)v4 + v15);
  }

  return (_OWORD *)sub_188A528(a3, (char *)v13, v14, v4);
}

uint64_t sub_130F824(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  uint64_t v2 = 5;
  if ((v1 & 1) == 0) {
    uint64_t v2 = 0;
  }
  if ((v1 & 2) != 0) {
    v2 += 5;
  }
  if ((v1 & 4) != 0) {
    v2 += 5;
  }
  if ((v1 & 7) != 0) {
    uint64_t v3 = v2;
  }
  else {
    uint64_t v3 = 0;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v6 + 31) < 0) {
      uint64_t v7 = *(void *)(v6 + 16);
    }
    else {
      uint64_t v7 = *(unsigned __int8 *)(v6 + 31);
    }
    v3 += v7;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

uint64_t sub_130F88C()
{
  return 1;
}

void *sub_130F894@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.ClientRankingFeatureMetadata.ClientRankingFeatureFunctionTypeLinear");
}

void *sub_130F8A4(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_130F918(void *a1)
{
  sub_130F8A4(a1);

  operator delete();
}

char *sub_130F950(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v19 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    int v8 = v19 + 1;
    unsigned int v9 = *v19;
    if (*v19 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        int v8 = (char *)sub_188C180((uint64_t)v19, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        int v8 = v19 + 2;
      }
    }
    int v19 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 13) {
          goto LABEL_20;
        }
        int v13 = *(_DWORD *)v8;
        unint64_t v12 = v8 + 4;
        v5 |= 1u;
        *(_DWORD *)(a1 + 24) = v13;
        goto LABEL_17;
      case 2u:
        if (v9 != 21) {
          goto LABEL_20;
        }
        int v14 = *(_DWORD *)v8;
        unint64_t v12 = v8 + 4;
        v5 |= 2u;
        *(_DWORD *)(a1 + 28) = v14;
        goto LABEL_17;
      case 3u:
        if (v9 != 29) {
          goto LABEL_20;
        }
        int v15 = *(_DWORD *)v8;
        unint64_t v12 = v8 + 4;
        v5 |= 4u;
        *(_DWORD *)(a1 + 32) = v15;
        goto LABEL_17;
      case 4u:
        if (v9 != 37) {
          goto LABEL_20;
        }
        int v16 = *(_DWORD *)v8;
        unint64_t v12 = v8 + 4;
        v5 |= 8u;
        *(_DWORD *)(a1 + 36) = v16;
LABEL_17:
        int v19 = v12;
        goto LABEL_18;
      default:
LABEL_20:
        if (v9) {
          BOOL v17 = (v9 & 7) == 4;
        }
        else {
          BOOL v17 = 1;
        }
        if (!v17)
        {
          if (*v7)
          {
            int v18 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            int v18 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            int v8 = v19;
          }
          int v19 = (char *)sub_1885AC0(v9, v18, v8, a3);
          if (!v19) {
            goto LABEL_31;
          }
LABEL_18:
          if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_31:
        }
          int v19 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v19;
    }
  }
}

_OWORD *sub_130FB2C(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (_OWORD *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    int v7 = *(_DWORD *)(a1 + 24);
    *(unsigned char *)uint64_t v4 = 13;
    *(_DWORD *)((char *)v4 + 1) = v7;
    uint64_t v4 = (_OWORD *)((char *)v4 + 5);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  int v8 = *(_DWORD *)(a1 + 28);
  *(unsigned char *)uint64_t v4 = 21;
  *(_DWORD *)((char *)v4 + 1) = v8;
  uint64_t v4 = (_OWORD *)((char *)v4 + 5);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_18;
    }
    goto LABEL_15;
  }
LABEL_12:
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  int v9 = *(_DWORD *)(a1 + 32);
  *(unsigned char *)uint64_t v4 = 29;
  *(_DWORD *)((char *)v4 + 1) = v9;
  uint64_t v4 = (_OWORD *)((char *)v4 + 5);
  if ((v6 & 8) != 0)
  {
LABEL_15:
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    int v10 = *(_DWORD *)(a1 + 36);
    *(unsigned char *)uint64_t v4 = 37;
    *(_DWORD *)((char *)v4 + 1) = v10;
    uint64_t v4 = (_OWORD *)((char *)v4 + 5);
  }
LABEL_18:
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return v4;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    int v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    int v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(v4, v14, (int)v15);
    return (_OWORD *)((char *)v4 + v16);
  }

  return (_OWORD *)sub_188A528(a3, (char *)v14, v15, v4);
}

uint64_t sub_130FCC8(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  uint64_t v2 = 5;
  if ((v1 & 1) == 0) {
    uint64_t v2 = 0;
  }
  if ((v1 & 2) != 0) {
    v2 += 5;
  }
  if ((v1 & 4) != 0) {
    v2 += 5;
  }
  if ((v1 & 8) != 0) {
    v2 += 5;
  }
  if ((v1 & 0xF) != 0) {
    uint64_t v3 = v2;
  }
  else {
    uint64_t v3 = 0;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v6 + 31) < 0) {
      uint64_t v7 = *(void *)(v6 + 16);
    }
    else {
      uint64_t v7 = *(unsigned __int8 *)(v6 + 31);
    }
    v3 += v7;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

uint64_t sub_130FD3C()
{
  return 1;
}

void *sub_130FD44@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.ClientRankingFeatureMetadata.ClientRankingFeatureFunctionTypeDiscrete");
}

uint64_t sub_130FD54(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_130FDD8((uint64_t (***)())a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

uint64_t (***sub_130FDD8(uint64_t (***result)()))()
{
  if (result != &off_25328C8)
  {
    int v1 = result;
    uint64_t v2 = result[3];
    if (v2)
    {
      sub_130CC70(v2);
      operator delete();
    }
    uint64_t v3 = v1[4];
    if (v3)
    {
      sub_130D218(v3);
      operator delete();
    }
    uint64_t v4 = v1[5];
    if (v4)
    {
      sub_130F480(v4);
      operator delete();
    }
    int v5 = v1[6];
    if (v5)
    {
      sub_130F8A4(v5);
      operator delete();
    }
    uint64_t result = (uint64_t (***)())v1[7];
    if (result)
    {
      sub_130ED8C(result);
      operator delete();
    }
  }
  return result;
}

void sub_130FEC4(uint64_t a1)
{
  sub_130FD54(a1);

  operator delete();
}

uint64_t sub_130FEFC(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 0x1F) != 0)
  {
    if (v2) {
      uint64_t result = sub_130CD1C(*(void *)(result + 24));
    }
    if ((v2 & 2) != 0)
    {
      uint64_t v3 = *(void *)(v1 + 32);
      char v4 = *(unsigned char *)(v3 + 8);
      uint64_t result = v3 + 8;
      *(_DWORD *)(result + 16) = 0;
      *(_DWORD *)(result + 8) = 0;
      if (v4) {
        uint64_t result = sub_188B4AC((uint64_t *)result);
      }
    }
    if ((v2 & 4) != 0)
    {
      uint64_t result = sub_130D864(*(void *)(v1 + 40));
      if ((v2 & 8) == 0)
      {
LABEL_9:
        if ((v2 & 0x10) == 0) {
          goto LABEL_11;
        }
        goto LABEL_10;
      }
    }
    else if ((v2 & 8) == 0)
    {
      goto LABEL_9;
    }
    uint64_t result = sub_130D88C(*(void *)(v1 + 48));
    if ((v2 & 0x10) != 0) {
LABEL_10:
    }
      uint64_t result = sub_130EE44(*(void *)(v1 + 56));
  }
LABEL_11:
  if ((v2 & 0x60) != 0) {
    *(void *)(v1 + 64) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = v1 + 8;
  *(_DWORD *)(v5 + 8) = 0;
  if (v6)
  {
    return sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

char *sub_130FFB8(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v35 = a2;
  if (sub_11947B8((uint64_t)a3, &v35, a3[11].i32[1])) {
    return v35;
  }
  char v6 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v7 = v35 + 1;
    unsigned int v8 = *v35;
    if (*v35 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v35, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v35 + 2;
      }
    }
    uint64_t v35 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 8) {
          goto LABEL_53;
        }
        uint64_t v11 = v7 + 1;
        unint64_t v12 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v13 = *v11;
        int v14 = v12 + (v13 << 7);
        unint64_t v12 = (v14 - 128);
        if (v13 < 0)
        {
          uint64_t v35 = (char *)sub_188C138((uint64_t)v7, (v14 - 128));
          if (!v35) {
            return 0;
          }
          unint64_t v12 = v31;
        }
        else
        {
          uint64_t v11 = v7 + 2;
LABEL_13:
          uint64_t v35 = v11;
        }
        if (v12 <= 3)
        {
          *(_DWORD *)(a1 + 16) |= 0x20u;
          *(_DWORD *)(a1 + 64) = v12;
          goto LABEL_61;
        }
        if (*v6) {
          unint64_t v33 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          unint64_t v33 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v34 = 1;
        goto LABEL_73;
      case 2u:
        if (v8 != 18) {
          goto LABEL_53;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v15 = *(void **)(a1 + 24);
        if (!v15)
        {
          uint64_t v16 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v16 = (void *)*v16;
          }
          uint64_t v15 = sub_131B310((uint64_t)v16);
          *(void *)(a1 + 24) = v15;
          uint64_t v7 = v35;
        }
        BOOL v17 = sub_130DC80(a3, (uint64_t)v15, (unsigned __int8 *)v7);
        goto LABEL_60;
      case 3u:
        if (v8 != 26) {
          goto LABEL_53;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v18 = *(void *)(a1 + 32);
        if (!v18)
        {
          int v19 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            int v19 = (void *)*v19;
          }
          uint64_t v18 = sub_131B388((uint64_t)v19);
          *(void *)(a1 + 32) = v18;
          uint64_t v7 = v35;
        }
        BOOL v17 = sub_130DD10(a3, v18, (unsigned __int8 *)v7);
        goto LABEL_60;
      case 4u:
        if (v8 != 32) {
          goto LABEL_53;
        }
        uint64_t v20 = v7 + 1;
        unint64_t v12 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_32;
        }
        int v21 = *v20;
        int v22 = v12 + (v21 << 7);
        unint64_t v12 = (v22 - 128);
        if (v21 < 0)
        {
          uint64_t v35 = (char *)sub_188C138((uint64_t)v7, (v22 - 128));
          if (!v35) {
            return 0;
          }
          unint64_t v12 = v32;
        }
        else
        {
          uint64_t v20 = v7 + 2;
LABEL_32:
          uint64_t v35 = v20;
        }
        if (v12 > 2)
        {
          if (*v6) {
            unint64_t v33 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            unint64_t v33 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          int v34 = 4;
LABEL_73:
          sub_188C020(v34, v12, v33);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 0x40u;
          *(_DWORD *)(a1 + 68) = v12;
        }
        goto LABEL_61;
      case 5u:
        if (v8 != 42) {
          goto LABEL_53;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v23 = *(void *)(a1 + 40);
        if (!v23)
        {
          int v24 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            int v24 = (void *)*v24;
          }
          uint64_t v23 = sub_131B59C((uint64_t)v24);
          *(void *)(a1 + 40) = v23;
          uint64_t v7 = v35;
        }
        BOOL v17 = sub_130DDA0(a3, v23, (unsigned __int8 *)v7);
        goto LABEL_60;
      case 6u:
        if (v8 != 50) {
          goto LABEL_53;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v25 = *(void **)(a1 + 48);
        if (!v25)
        {
          BOOL v26 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            BOOL v26 = (void *)*v26;
          }
          uint64_t v25 = sub_131B618((uint64_t)v26);
          *(void *)(a1 + 48) = v25;
          uint64_t v7 = v35;
        }
        BOOL v17 = sub_130DE30(a3, (uint64_t)v25, (unsigned __int8 *)v7);
        goto LABEL_60;
      case 7u:
        if (v8 != 58) {
          goto LABEL_53;
        }
        *(_DWORD *)(a1 + 16) |= 0x10u;
        uint64_t v27 = *(void *)(a1 + 56);
        if (!v27)
        {
          unint64_t v28 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            unint64_t v28 = (void *)*v28;
          }
          uint64_t v27 = sub_131B500((uint64_t)v28);
          *(void *)(a1 + 56) = v27;
          uint64_t v7 = v35;
        }
        BOOL v17 = sub_13103DC(a3, v27, (unsigned __int8 *)v7);
        goto LABEL_60;
      default:
LABEL_53:
        if (v8) {
          BOOL v29 = (v8 & 7) == 4;
        }
        else {
          BOOL v29 = 1;
        }
        if (!v29)
        {
          if (*v6)
          {
            uint64_t v30 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v30 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v7 = v35;
          }
          BOOL v17 = (char *)sub_1885AC0(v8, v30, v7, a3);
LABEL_60:
          uint64_t v35 = v17;
          if (!v17) {
            return 0;
          }
LABEL_61:
          if (sub_11947B8((uint64_t)a3, &v35, a3[11].i32[1])) {
            return v35;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return v35;
    }
  }
}

char *sub_13103DC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_130EEC8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_131046C(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 0x20) != 0)
  {
    if (*(void *)a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 64);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 24);
    unsigned char *v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 20);
    v4[1] = v11;
    if (v11 > 0x7F) {
      unint64_t v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      unint64_t v12 = v4 + 2;
    }
    char v4 = sub_130CF9C(v10, (unint64_t)v12, a3);
    if ((v6 & 2) == 0)
    {
LABEL_10:
      if ((v6 & 0x40) == 0) {
        goto LABEL_30;
      }
      goto LABEL_24;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_10;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v13 = *(void *)(a1 + 32);
  unsigned char *v4 = 26;
  unsigned int v14 = *(_DWORD *)(v13 + 20);
  v4[1] = v14;
  if (v14 > 0x7F) {
    uint64_t v15 = sub_188A9CC(v14, v4 + 1);
  }
  else {
    uint64_t v15 = v4 + 2;
  }
  char v4 = sub_130D484(v13, (unint64_t)v15, a3);
  if ((v6 & 0x40) != 0)
  {
LABEL_24:
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v16 = *(int *)(a1 + 68);
    unsigned char *v4 = 32;
    v4[1] = v16;
    if (v16 > 0x7F)
    {
      v4[1] = v16 | 0x80;
      unint64_t v17 = v16 >> 7;
      v4[2] = v16 >> 7;
      v4 += 3;
      if (v16 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v18 = v17 >> 14;
          v17 >>= 7;
          *v4++ = v17;
        }
        while (v18);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_30:
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v19 = *(void *)(a1 + 40);
    unsigned char *v4 = 42;
    unsigned int v20 = *(_DWORD *)(v19 + 20);
    v4[1] = v20;
    if (v20 > 0x7F) {
      int v21 = sub_188A9CC(v20, v4 + 1);
    }
    else {
      int v21 = v4 + 2;
    }
    char v4 = sub_130F6C4(v19, (unint64_t)v21, a3);
    if ((v6 & 8) == 0)
    {
LABEL_32:
      if ((v6 & 0x10) == 0) {
        goto LABEL_52;
      }
      goto LABEL_46;
    }
  }
  else if ((v6 & 8) == 0)
  {
    goto LABEL_32;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v22 = *(void *)(a1 + 48);
  unsigned char *v4 = 50;
  unsigned int v23 = *(_DWORD *)(v22 + 20);
  v4[1] = v23;
  if (v23 > 0x7F) {
    int v24 = sub_188A9CC(v23, v4 + 1);
  }
  else {
    int v24 = v4 + 2;
  }
  char v4 = sub_130FB2C(v22, (unint64_t)v24, a3);
  if ((v6 & 0x10) != 0)
  {
LABEL_46:
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v25 = *(void *)(a1 + 56);
    unsigned char *v4 = 58;
    unsigned int v26 = *(_DWORD *)(v25 + 20);
    v4[1] = v26;
    if (v26 > 0x7F) {
      uint64_t v27 = sub_188A9CC(v26, v4 + 1);
    }
    else {
      uint64_t v27 = v4 + 2;
    }
    char v4 = sub_130F140(v25, v27, a3);
  }
LABEL_52:
  uint64_t v28 = *(void *)(a1 + 8);
  if ((v28 & 1) == 0) {
    return v4;
  }
  unint64_t v30 = v28 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v30 + 31) < 0)
  {
    unint64_t v31 = *(void **)(v30 + 8);
    uint64_t v32 = *(void *)(v30 + 16);
  }
  else
  {
    unint64_t v31 = (void *)(v30 + 8);
    LODWORD(v32) = *(unsigned __int8 *)(v30 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v32)
  {
    uint64_t v33 = (int)v32;
    memcpy(v4, v31, (int)v32);
    v4 += v33;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v31, v32, v4);
}

uint64_t sub_1310828(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0x7F) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_25;
  }
  if (v2)
  {
    uint64_t v4 = sub_130D140(*(void *)(a1 + 24));
    uint64_t v3 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_7:
    uint64_t v5 = sub_130D5AC(*(void *)(a1 + 32));
    v3 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_8:
  if ((v2 & 4) != 0)
  {
    uint64_t v6 = sub_130F824(*(void *)(a1 + 40));
    v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 8) == 0)
    {
LABEL_10:
      if ((v2 & 0x10) == 0) {
        goto LABEL_11;
      }
      goto LABEL_16;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_10;
  }
  uint64_t v7 = sub_130FCC8(*(void *)(a1 + 48));
  v3 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x10) == 0)
  {
LABEL_11:
    if ((v2 & 0x20) == 0) {
      goto LABEL_12;
    }
    goto LABEL_17;
  }
LABEL_16:
  uint64_t v8 = sub_130F2C0(*(void *)(a1 + 56));
  v3 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x20) == 0)
  {
LABEL_12:
    if ((v2 & 0x40) == 0) {
      goto LABEL_25;
    }
    goto LABEL_21;
  }
LABEL_17:
  int v9 = *(_DWORD *)(a1 + 64);
  if (v9 < 0) {
    uint64_t v10 = 11;
  }
  else {
    uint64_t v10 = ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v3 += v10;
  if ((v2 & 0x40) != 0)
  {
LABEL_21:
    int v11 = *(_DWORD *)(a1 + 68);
    if (v11 < 0) {
      uint64_t v12 = 11;
    }
    else {
      uint64_t v12 = ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v3 += v12;
  }
LABEL_25:
  uint64_t v13 = *(void *)(a1 + 8);
  if (v13)
  {
    unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v15 + 31) < 0) {
      uint64_t v16 = *(void *)(v15 + 16);
    }
    else {
      uint64_t v16 = *(unsigned __int8 *)(v15 + 31);
    }
    v3 += v16;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_1310A0C(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0x7F) != 0)
  {
    if (v4)
    {
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::pointer data = (std::string *)result[1].__r_.__value_.__l.__data_;
      if (!data)
      {
        std::string::size_type size = v3->__r_.__value_.__l.__size_;
        uint64_t v8 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
        if (size) {
          uint64_t v8 = (void *)*v8;
        }
        std::string::pointer data = (std::string *)sub_131B310((uint64_t)v8);
        v3[1].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      }
      if (*(void *)(a2 + 24)) {
        int v9 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        int v9 = &off_2532798;
      }
      uint64_t result = sub_117EF04(data, (uint64_t)v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_31;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    uint64_t v10 = (std::string *)v3[1].__r_.__value_.__l.__size_;
    if (!v10)
    {
      std::string::size_type v11 = v3->__r_.__value_.__l.__size_;
      uint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        uint64_t v12 = (void *)*v12;
      }
      uint64_t v10 = (std::string *)sub_131B388((uint64_t)v12);
      v3[1].__r_.__value_.__l.__size_ = (std::string::size_type)v10;
    }
    if (*(void *)(a2 + 32)) {
      uint64_t v13 = *(uint64_t (****)())(a2 + 32);
    }
    else {
      uint64_t v13 = &off_25327B8;
    }
    uint64_t result = sub_11A7934(v10, (uint64_t)v13);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_39;
    }
LABEL_31:
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
    unsigned int v14 = (std::string *)v3[1].__r_.__value_.__r.__words[2];
    if (!v14)
    {
      std::string::size_type v15 = v3->__r_.__value_.__l.__size_;
      uint64_t v16 = (void *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
      if (v15) {
        uint64_t v16 = (void *)*v16;
      }
      unsigned int v14 = (std::string *)sub_131B59C((uint64_t)v16);
      v3[1].__r_.__value_.__r.__words[2] = (std::string::size_type)v14;
    }
    if (*(void *)(a2 + 40)) {
      unint64_t v17 = *(uint64_t (****)())(a2 + 40);
    }
    else {
      unint64_t v17 = &off_2532878;
    }
    uint64_t result = sub_130E594(v14, (uint64_t)v17);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0) {
        goto LABEL_7;
      }
      goto LABEL_47;
    }
LABEL_39:
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 8u;
    unint64_t v18 = (std::string *)v3[2].__r_.__value_.__l.__data_;
    if (!v18)
    {
      std::string::size_type v19 = v3->__r_.__value_.__l.__size_;
      unsigned int v20 = (void *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
      if (v19) {
        unsigned int v20 = (void *)*v20;
      }
      unint64_t v18 = (std::string *)sub_131B618((uint64_t)v20);
      v3[2].__r_.__value_.__r.__words[0] = (std::string::size_type)v18;
    }
    if (*(void *)(a2 + 48)) {
      int v21 = *(uint64_t (****)())(a2 + 48);
    }
    else {
      int v21 = &off_25328A0;
    }
    uint64_t result = sub_130E5F8(v18, (uint64_t)v21);
    if ((v4 & 0x10) == 0)
    {
LABEL_7:
      if ((v4 & 0x20) == 0) {
        goto LABEL_8;
      }
      goto LABEL_55;
    }
LABEL_47:
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x10u;
    uint64_t v22 = (std::string *)v3[2].__r_.__value_.__l.__size_;
    if (!v22)
    {
      std::string::size_type v23 = v3->__r_.__value_.__l.__size_;
      int v24 = (void *)(v23 & 0xFFFFFFFFFFFFFFFCLL);
      if (v23) {
        int v24 = (void *)*v24;
      }
      uint64_t v22 = (std::string *)sub_131B500((uint64_t)v24);
      v3[2].__r_.__value_.__l.__size_ = (std::string::size_type)v22;
    }
    if (*(void *)(a2 + 56)) {
      uint64_t v25 = *(uint64_t (****)())(a2 + 56);
    }
    else {
      uint64_t v25 = &off_2532840;
    }
    uint64_t result = sub_130F37C(v22, (uint64_t)v25);
    if ((v4 & 0x20) == 0)
    {
LABEL_8:
      if ((v4 & 0x40) == 0)
      {
LABEL_10:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
        goto LABEL_11;
      }
LABEL_9:
      HIDWORD(v3[2].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 68);
      goto LABEL_10;
    }
LABEL_55:
    LODWORD(v3[2].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 64);
    if ((v4 & 0x40) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
LABEL_11:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

std::string *sub_1310C34(std::string *result, uint64_t a2)
{
  if ((std::string *)a2 != result)
  {
    int v4 = result;
    sub_130FEFC((uint64_t)result);
    return sub_1310A0C(v4, a2);
  }
  return result;
}

uint64_t sub_1310C80()
{
  return 1;
}

void *sub_1310C88@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.ClientRankingFeatureMetadata");
}

uint64_t sub_1310C98(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_24A8CC0;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  return a1;
}

void sub_1310D14(_Unwind_Exception *a1)
{
  *uint64_t v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_1310D44(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1310DB8(void *a1)
{
  sub_1310D44(a1);

  operator delete();
}

uint64_t sub_1310DF0(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 16) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_1310E08(uint64_t a1, char *a2, int32x2_t *a3)
{
  unsigned int v14 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v14, a3[11].i32[1])) {
    goto LABEL_22;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v14 + 1;
    unsigned int v8 = *v14;
    if (*v14 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v14, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v14 + 2;
      }
    }
    unsigned int v14 = v7;
    if (v8 == 13)
    {
      *(_DWORD *)(a1 + 24) = *(_DWORD *)v7;
      unsigned int v14 = v7 + 4;
      int v5 = 1;
      goto LABEL_17;
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      uint64_t v12 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v12 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = v14;
    }
    unsigned int v14 = (char *)sub_1885AC0(v8, v12, v7, a3);
    if (!v14) {
      goto LABEL_23;
    }
LABEL_17:
    if (sub_11947B8((uint64_t)a3, &v14, a3[11].i32[1])) {
      goto LABEL_22;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    goto LABEL_22;
  }
LABEL_23:
  unsigned int v14 = 0;
LABEL_22:
  *(_DWORD *)(a1 + 16) |= v5;
  return v14;
}

_OWORD *sub_1310F48(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (_OWORD *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    int v6 = *(_DWORD *)(a1 + 24);
    *(unsigned char *)uint64_t v4 = 13;
    *(_DWORD *)((char *)v4 + 1) = v6;
    uint64_t v4 = (_OWORD *)((char *)v4 + 5);
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v9 + 31) < 0)
  {
    unsigned int v10 = *(void **)(v9 + 8);
    uint64_t v11 = *(void *)(v9 + 16);
  }
  else
  {
    unsigned int v10 = (void *)(v9 + 8);
    LODWORD(v11) = *(unsigned __int8 *)(v9 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v11)
  {
    uint64_t v12 = (int)v11;
    memcpy(v4, v10, (int)v11);
    return (_OWORD *)((char *)v4 + v12);
  }

  return (_OWORD *)sub_188A528(a3, (char *)v10, v11, v4);
}

uint64_t sub_131102C(uint64_t a1)
{
  uint64_t v1 = 5;
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    uint64_t v1 = 0;
  }
  uint64_t v2 = *(void *)(a1 + 8);
  if (v2)
  {
    unint64_t v4 = v2 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v5 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v5 = *(unsigned __int8 *)(v4 + 31);
    }
    v1 += v5;
  }
  *(_DWORD *)(a1 + 20) = v1;
  return v1;
}

uint64_t sub_1311074()
{
  return 1;
}

void *sub_131107C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.ServerResultScoreMetadata");
}

void *sub_131108C(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1311100(void *a1)
{
  sub_131108C(a1);

  operator delete();
}

uint64_t sub_1311138(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 3) != 0) {
    *(void *)(a1 + 24) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_131115C(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v25 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    unsigned int v8 = v25 + 1;
    unsigned int v9 = *v25;
    if (*v25 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unsigned int v8 = (char *)sub_188C180((uint64_t)v25, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unsigned int v8 = v25 + 2;
      }
    }
    uint64_t v25 = v8;
    if (v9 >> 3 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_13;
    }
    v5 |= 2u;
    std::string::size_type v15 = v8 + 1;
    int v16 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_25;
    }
    int v17 = *v15;
    int v16 = v16 + (v17 << 7) - 128;
    if ((v17 & 0x80000000) == 0)
    {
      std::string::size_type v15 = v8 + 2;
LABEL_25:
      uint64_t v25 = v15;
      *(_DWORD *)(a1 + 28) = v16;
      goto LABEL_30;
    }
    int v21 = (char *)sub_188C0D0((uint64_t)v8, v16);
    uint64_t v25 = v21;
    *(_DWORD *)(a1 + 28) = v22;
    if (!v21) {
      goto LABEL_39;
    }
LABEL_30:
    if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 >> 3 == 1 && v9 == 8)
  {
    v5 |= 1u;
    unint64_t v18 = v8 + 1;
    int v19 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_29;
    }
    int v20 = *v18;
    int v19 = v19 + (v20 << 7) - 128;
    if ((v20 & 0x80000000) == 0)
    {
      unint64_t v18 = v8 + 2;
LABEL_29:
      uint64_t v25 = v18;
      *(_DWORD *)(a1 + 24) = v19;
      goto LABEL_30;
    }
    std::string::size_type v23 = (char *)sub_188C0D0((uint64_t)v8, v19);
    uint64_t v25 = v23;
    *(_DWORD *)(a1 + 24) = v24;
    if (!v23) {
      goto LABEL_39;
    }
    goto LABEL_30;
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      unsigned int v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unsigned int v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unsigned int v8 = v25;
    }
    uint64_t v25 = (char *)sub_1885AC0(v9, v14, v8, a3);
    if (!v25) {
      goto LABEL_39;
    }
    goto LABEL_30;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_39:
  uint64_t v25 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v25;
}

unsigned char *sub_131134C(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  unint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      unint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 28);
    unsigned char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    int v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    int v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_13114F0(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_8;
  }
  if (v1)
  {
    uint64_t v2 = ((9 * (__clz(*(_DWORD *)(a1 + 24) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v2 = 0;
  if ((v1 & 2) != 0) {
LABEL_7:
  }
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 28) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_8:
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v5 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    v2 += v6;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_1311594()
{
  return 1;
}

void *sub_131159C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.AutocompleteEntry.AutocompleteEntryHighlightSpan");
}

uint64_t sub_13115AC(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  unint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)a1 = off_24A8DC0;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  unint64_t v5 = (std::string *)(a1 + 24);
  *(_DWORD *)(a1 + 44) = 0;
  *(void *)(a1 + 28) = 0;
  *(void *)(a1 + 36) = 0;
  *(void *)(a1 + 20) = 0;
  int v6 = *(_DWORD *)(a2 + 32);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 40);
    unsigned int v8 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_1320670(v5, v8, (uint64_t *)(v7 + 8), v6, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v9 = *(_DWORD *)(a1 + 32) + v6;
    *(_DWORD *)(a1 + 32) = v9;
    unsigned int v10 = *(int **)(a1 + 40);
    if (*v10 < v9) {
      *unsigned int v10 = v9;
    }
  }
  uint64_t v11 = *(void *)(a2 + 8);
  if (v11) {
    sub_188B4F8(v4, (v11 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 48) = &qword_2550250;
  if (*(unsigned char *)(a2 + 16))
  {
    unsigned int v12 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      unsigned int v12 = (uint64_t *)*v12;
    }
    sub_1881DF4((std::string **)(a1 + 48), (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL), v12);
  }
  return a1;
}

void sub_13116D0(_Unwind_Exception *a1)
{
  sub_1320564(v3);
  *int v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_1311714(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  unint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  unint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  sub_1320564((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_13117C0(uint64_t a1)
{
  sub_1311714(a1);

  operator delete();
}

uint64_t sub_13117F8(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_1311138(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  if (*(unsigned char *)(v1 + 16))
  {
    unint64_t v5 = *(void *)(v1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v5 + 23) < 0)
    {
      **(unsigned char **)unint64_t v5 = 0;
      *(void *)(v5 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v5 = 0;
      *(unsigned char *)(v5 + 23) = 0;
    }
  }
  char v7 = *(unsigned char *)(v1 + 8);
  uint64_t v6 = v1 + 8;
  *(_DWORD *)(v6 + 8) = 0;
  if (v7)
  {
    return sub_188B4AC((uint64_t *)v6);
  }
  return result;
}

uint64_t sub_13118A8(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v24 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v24, a3[11].i32[1])) {
    return *(void *)v24;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    char v7 = (char *)(*(void *)v24 + 1);
    unsigned int v8 = **(unsigned char **)v24;
    if ((char)**(unsigned char **)v24 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        char v7 = (char *)sub_188C180(*(uint64_t *)v24, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        char v7 = (char *)(*(void *)v24 + 2);
      }
    }
    *(void *)int v24 = v7;
    if (v8 >> 3 == 2) {
      break;
    }
    if (v8 >> 3 != 1 || v8 != 10) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v21 = *(void *)(a1 + 8);
    int v22 = (uint64_t *)(v21 & 0xFFFFFFFFFFFFFFFCLL);
    if (v21) {
      int v22 = (uint64_t *)*v22;
    }
    std::string::size_type v23 = (std::string *)sub_1880F84((void *)(a1 + 48), v22);
    unsigned int v14 = (void *)sub_188C244(v23, *(char **)v24, (uint64_t)a3);
LABEL_33:
    *(void *)int v24 = v14;
    if (!v14) {
      goto LABEL_39;
    }
LABEL_34:
    if (sub_11947B8((uint64_t)a3, (char **)v24, a3[11].i32[1])) {
      return *(void *)v24;
    }
  }
  if (v8 == 18)
  {
    unint64_t v15 = v7 - 1;
    while (1)
    {
      int v16 = (unsigned __int8 *)(v15 + 1);
      *(void *)int v24 = v15 + 1;
      uint64_t v17 = *(_DWORD **)(a1 + 40);
      if (v17 && (uint64_t v18 = *(int *)(a1 + 32), (int)v18 < *v17))
      {
        *(_DWORD *)(a1 + 32) = v18 + 1;
        uint64_t v19 = *(void *)&v17[2 * v18 + 2];
      }
      else
      {
        int v20 = sub_131B794(*(void *)(a1 + 24));
        uint64_t v19 = sub_188CDC8(a1 + 24, (uint64_t)v20);
        int v16 = *(unsigned __int8 **)v24;
      }
      unint64_t v15 = sub_1311AA8(a3, v19, v16);
      *(void *)int v24 = v15;
      if (!v15) {
        goto LABEL_39;
      }
      if (*(void *)a3 <= (unint64_t)v15 || *v15 != 18) {
        goto LABEL_34;
      }
    }
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      char v7 = *(char **)v24;
    }
    unsigned int v14 = sub_1885AC0(v8, v13, v7, a3);
    goto LABEL_33;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v24;
  }
LABEL_39:
  *(void *)int v24 = 0;
  return *(void *)v24;
}

char *sub_1311AA8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_131115C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_1311B38(uint64_t a1, unsigned char *__dst, void *a3)
{
  uint64_t v4 = __dst;
  if (*(unsigned char *)(a1 + 16)) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  int v6 = *(_DWORD *)(a1 + 32);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      unsigned char *v4 = 18;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      v4[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, v4 + 1);
      }
      else {
        unsigned int v10 = v4 + 2;
      }
      uint64_t v4 = sub_131134C(v8, (unint64_t)v10, a3);
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return v4;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    unsigned int v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    unsigned int v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*a3 - (void)v4 >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(v4, v14, (int)v15);
    v4 += v16;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v14, v15, v4);
}

uint64_t sub_1311CA0(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_13114F0(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v8 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v9 = *(unsigned __int8 *)(v8 + 23);
    uint64_t v10 = *(void *)(v8 + 8);
    if ((v9 & 0x80u) == 0) {
      uint64_t v10 = v9;
    }
    v2 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v13 + 31) < 0) {
      uint64_t v14 = *(void *)(v13 + 16);
    }
    else {
      uint64_t v14 = *(unsigned __int8 *)(v13 + 31);
    }
    v2 += v14;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_1311D98(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = sub_1320670(v3 + 1, v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2] - LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    unint64_t v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *unint64_t v8 = v7;
    }
  }
  if (*(unsigned char *)(a2 + 16))
  {
    uint64_t v9 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
    std::string::size_type size = v3->__r_.__value_.__l.__size_;
    uint64_t v11 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
    if (size) {
      uint64_t v11 = (uint64_t *)*v11;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[2], v9, v11);
  }
  uint64_t v12 = *(void *)(a2 + 8);
  if (v12)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v12 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1311EA0()
{
  return 1;
}

void *sub_1311EA8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.AutocompleteEntry.AutocompleteEntryHighlightLine");
}

uint64_t sub_1311EB8(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_24A8E40;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  if (*(unsigned char *)(a2 + 16)) {
    operator new();
  }
  *(void *)(a1 + 24) = 0;
  return a1;
}

void sub_1311F64()
{
}

uint64_t sub_1311FB4(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  if ((uint64_t (***)())a1 != &off_2532968 && *(void *)(a1 + 24))
  {
    sub_184B078();
    operator delete();
  }
  if (*(void *)(a1 + 8)) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_131206C(uint64_t a1)
{
  sub_1311FB4(a1);

  operator delete();
}

unsigned char *sub_13120A4(unsigned char *result)
{
  uint64_t v1 = result;
  if (result[16]) {
    uint64_t result = sub_16CD894(*((void *)result + 3));
  }
  char v3 = v1[8];
  uint64_t v2 = v1 + 8;
  *((_DWORD *)v2 + 2) = 0;
  if (v3)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v2);
  }
  return result;
}

char *sub_1312100(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v16 = a2;
  if (sub_11947B8((uint64_t)a3, &v16, a3[11].i32[1])) {
    return v16;
  }
  uint64_t v5 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v6 = v16 + 1;
    unsigned int v7 = *v16;
    if (*v16 < 0)
    {
      unsigned int v8 = v7 + (*v6 << 7);
      unsigned int v7 = v8 - 128;
      if (*v6 < 0)
      {
        uint64_t v6 = (char *)sub_188C180((uint64_t)v16, v8 - 128);
        unsigned int v7 = v9;
      }
      else
      {
        uint64_t v6 = v16 + 2;
      }
    }
    uint64_t v16 = v6;
    if (v7 != 10) {
      break;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v13 = *(void *)(a1 + 24);
    if (!v13)
    {
      uint64_t v14 = (void *)(*v5 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v5) {
        uint64_t v14 = (void *)*v14;
      }
      uint64_t v13 = sub_185089C((uint64_t)v14);
      *(void *)(a1 + 24) = v13;
      uint64_t v6 = v16;
    }
    uint64_t v12 = sub_12688D0(a3, v13, (unsigned __int8 *)v6);
LABEL_20:
    uint64_t v16 = v12;
    if (!v12) {
      return 0;
    }
    if (sub_11947B8((uint64_t)a3, &v16, a3[11].i32[1])) {
      return v16;
    }
  }
  if (v7) {
    BOOL v10 = (v7 & 7) == 4;
  }
  else {
    BOOL v10 = 1;
  }
  if (!v10)
  {
    if (*v5)
    {
      uint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v6 = v16;
    }
    uint64_t v12 = (char *)sub_1885AC0(v7, v11, v6, a3);
    goto LABEL_20;
  }
  if (v6)
  {
    a3[10].i32[0] = v7 - 1;
    return v16;
  }
  return 0;
}

char *sub_1312258(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v6 = *(void *)(a1 + 24);
    char *v4 = 10;
    unsigned int v7 = *(_DWORD *)(v6 + 44);
    v4[1] = v7;
    if (v7 > 0x7F) {
      unsigned int v8 = sub_188A9CC(v7, v4 + 1);
    }
    else {
      unsigned int v8 = v4 + 2;
    }
    uint64_t v4 = sub_184B3AC(v6, v8, a3);
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    uint64_t v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    uint64_t v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    v4 += v14;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v12, v13, v4);
}

uint64_t sub_1312368(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    uint64_t v3 = sub_184B568(*(void *)(a1 + 24));
    uint64_t result = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  else
  {
    uint64_t result = 0;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v5 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    result += v6;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

void sub_13123F0(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a2 + 16))
  {
    uint64_t v4 = *(uint64_t (****)())(a2 + 24);
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v5 = *(void *)(a1 + 24);
    if (!v5)
    {
      uint64_t v6 = *(void *)(a1 + 8);
      unsigned int v7 = (void *)(v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (v6) {
        unsigned int v7 = (void *)*v7;
      }
      uint64_t v5 = sub_185089C((uint64_t)v7);
      *(void *)(a1 + 24) = v5;
      uint64_t v4 = *(uint64_t (****)())(a2 + 24);
    }
    if (v4) {
      unsigned int v8 = v4;
    }
    else {
      unsigned int v8 = &off_254D2B0;
    }
    sub_16CE3CC(v5, (uint64_t)v8);
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_1312498(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 1;
  }
  uint64_t result = sub_16CE508(*(void *)(a1 + 24));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_13124C4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.AutocompleteEntry.AutocompleteEntryCollection");
}

uint64_t sub_13124D4(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_24A8EC0;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  if (*(unsigned char *)(a2 + 16)) {
    operator new();
  }
  *(void *)(a1 + 24) = 0;
  return a1;
}

void sub_1312580()
{
}

uint64_t sub_13125D0(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  if ((uint64_t (***)())a1 != &off_2532988 && *(void *)(a1 + 24))
  {
    sub_184B078();
    operator delete();
  }
  if (*(void *)(a1 + 8)) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1312688(uint64_t a1)
{
  sub_13125D0(a1);

  operator delete();
}

unsigned char *sub_13126C0(unsigned char *result)
{
  uint64_t v1 = result;
  if (result[16]) {
    uint64_t result = sub_16CD894(*((void *)result + 3));
  }
  char v3 = v1[8];
  uint64_t v2 = v1 + 8;
  *((_DWORD *)v2 + 2) = 0;
  if (v3)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v2);
  }
  return result;
}

char *sub_131271C(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v16 = a2;
  if (sub_11947B8((uint64_t)a3, &v16, a3[11].i32[1])) {
    return v16;
  }
  uint64_t v5 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v6 = v16 + 1;
    unsigned int v7 = *v16;
    if (*v16 < 0)
    {
      unsigned int v8 = v7 + (*v6 << 7);
      unsigned int v7 = v8 - 128;
      if (*v6 < 0)
      {
        uint64_t v6 = (char *)sub_188C180((uint64_t)v16, v8 - 128);
        unsigned int v7 = v9;
      }
      else
      {
        uint64_t v6 = v16 + 2;
      }
    }
    uint64_t v16 = v6;
    if (v7 != 10) {
      break;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v13 = *(void *)(a1 + 24);
    if (!v13)
    {
      uint64_t v14 = (void *)(*v5 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v5) {
        uint64_t v14 = (void *)*v14;
      }
      uint64_t v13 = sub_185089C((uint64_t)v14);
      *(void *)(a1 + 24) = v13;
      uint64_t v6 = v16;
    }
    uint64_t v12 = sub_12688D0(a3, v13, (unsigned __int8 *)v6);
LABEL_20:
    uint64_t v16 = v12;
    if (!v12) {
      return 0;
    }
    if (sub_11947B8((uint64_t)a3, &v16, a3[11].i32[1])) {
      return v16;
    }
  }
  if (v7) {
    BOOL v10 = (v7 & 7) == 4;
  }
  else {
    BOOL v10 = 1;
  }
  if (!v10)
  {
    if (*v5)
    {
      unint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v6 = v16;
    }
    uint64_t v12 = (char *)sub_1885AC0(v7, v11, v6, a3);
    goto LABEL_20;
  }
  if (v6)
  {
    a3[10].i32[0] = v7 - 1;
    return v16;
  }
  return 0;
}

char *sub_1312874(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v6 = *(void *)(a1 + 24);
    char *v4 = 10;
    unsigned int v7 = *(_DWORD *)(v6 + 44);
    v4[1] = v7;
    if (v7 > 0x7F) {
      unsigned int v8 = sub_188A9CC(v7, v4 + 1);
    }
    else {
      unsigned int v8 = v4 + 2;
    }
    uint64_t v4 = sub_184B3AC(v6, v8, a3);
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    uint64_t v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    uint64_t v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    v4 += v14;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v12, v13, v4);
}

uint64_t sub_1312984(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    uint64_t v3 = sub_184B568(*(void *)(a1 + 24));
    uint64_t result = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  else
  {
    uint64_t result = 0;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v5 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    result += v6;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

uint64_t sub_1312A0C(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 1;
  }
  uint64_t result = sub_16CE508(*(void *)(a1 + 24));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_1312A38@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.AutocompleteEntry.AutocompleteEntryPublisher");
}

uint64_t sub_1312A48(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)a1 = off_24A8F40;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  unint64_t v5 = (uint64_t *)(a1 + 24);
  *(_DWORD *)(a1 + 44) = 0;
  *(void *)(a1 + 28) = 0;
  *(void *)(a1 + 36) = 0;
  *(void *)(a1 + 20) = 0;
  int v6 = *(_DWORD *)(a2 + 32);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 40);
    unsigned int v8 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_122D3C0(v5, v8, (uint64_t *)(v7 + 8), v6, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v9 = *(_DWORD *)(a1 + 32) + v6;
    *(_DWORD *)(a1 + 32) = v9;
    BOOL v10 = *(int **)(a1 + 40);
    if (*v10 < v9) {
      *BOOL v10 = v9;
    }
  }
  uint64_t v11 = *(void *)(a2 + 8);
  if (v11) {
    sub_188B4F8(v4, (v11 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 48) = &qword_2550250;
  int v12 = *(_DWORD *)(a2 + 16);
  if (v12)
  {
    uint64_t v13 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v13 = (uint64_t *)*v13;
    }
    sub_1881DF4((std::string **)(a1 + 48), (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL), v13);
    int v12 = *(_DWORD *)(a2 + 16);
  }
  if ((v12 & 2) != 0) {
    operator new();
  }
  *(void *)(a1 + 56) = 0;
  int v14 = *(_DWORD *)(a2 + 64);
  *(_WORD *)(a1 + 68) = *(_WORD *)(a2 + 68);
  *(_DWORD *)(a1 + 64) = v14;
  return a1;
}