uint64_t sub_171C194(uint64_t a1)
{
  uint64_t result;

  result = sub_18856CC(a1 + 16);
  if (result)
  {
    if ((*(unsigned char *)(a1 + 40) & 8) == 0) {
      return 1;
    }
    result = sub_136AEA0(*(void *)(a1 + 72));
    if (result) {
      return 1;
    }
  }
  return result;
}

void *sub_171C1D8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.CategoryInformation");
}

void *sub_171C1E8(void *a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  a1[1] = v4;
  *a1 = off_24D6398;
  sub_1882BC4((uint64_t)(a1 + 2), a2);
  a1[5] = 0;
  a1[6] = &qword_2550250;
  a1[7] = &qword_2550250;
  a1[8] = 0;
  return a1;
}

void sub_171C25C(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_171C28C(uint64_t a1)
{
  v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_9;
    }
  }
  else if (v4)
  {
    goto LABEL_9;
  }
  v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 56) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 56));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_9:
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_171C34C(uint64_t a1)
{
  sub_171C28C(a1);

  operator delete();
}

unsigned char *sub_171C384(uint64_t a1)
{
  result = sub_18843A4((unsigned char *)(a1 + 16));
  int v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 3) != 0)
  {
    if (v3)
    {
      unint64_t v4 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v4 + 23) < 0)
      {
        **(unsigned char **)unint64_t v4 = 0;
        *(void *)(v4 + 8) = 0;
        if ((v3 & 2) == 0) {
          goto LABEL_11;
        }
        goto LABEL_6;
      }
      *(unsigned char *)unint64_t v4 = 0;
      *(unsigned char *)(v4 + 23) = 0;
    }
    if ((v3 & 2) == 0) {
      goto LABEL_11;
    }
LABEL_6:
    unint64_t v5 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v5 + 23) < 0)
    {
      **(unsigned char **)unint64_t v5 = 0;
      *(void *)(v5 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v5 = 0;
      *(unsigned char *)(v5 + 23) = 0;
    }
  }
LABEL_11:
  char v7 = *(unsigned char *)(a1 + 8);
  uint64_t v6 = a1 + 8;
  *(void *)(v6 + 56) = 0;
  *(_DWORD *)(v6 + 32) = 0;
  if (v7)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v6);
  }
  return result;
}

uint64_t sub_171C444(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)v24 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v24, a3[11].i32[1])) {
    goto LABEL_2;
  }
  char v7 = (void *)(a1 + 8);
  while (1)
  {
    v8 = (char *)(*(void *)v24 + 1);
    unsigned int v9 = **(unsigned char **)v24;
    if ((char)**(unsigned char **)v24 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        v8 = (char *)sub_188C180(*(uint64_t *)v24, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        v8 = (char *)(*(void *)v24 + 2);
      }
    }
    *(void *)v24 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 != 3) {
      break;
    }
    if (v9 != 24) {
      goto LABEL_14;
    }
    v16 = v8 + 1;
    unint64_t v17 = *v8;
    if (*v8 < 0)
    {
      unint64_t v17 = v17 + (*v16 << 7) - 128;
      if (*v16 < 0) {
        v16 = (char *)sub_188C138((uint64_t)v8, v17);
      }
      else {
        v16 = v8 + 2;
      }
    }
    v5 |= 4u;
    *(void *)v24 = v16;
    *(void *)(a1 + 64) = -(uint64_t)(v17 & 1) ^ (v17 >> 1);
    if (!v16) {
      goto LABEL_44;
    }
LABEL_39:
    if (sub_11947B8((uint64_t)a3, (char **)v24, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v12 == 2)
  {
    if (v9 != 18) {
      goto LABEL_14;
    }
    *(_DWORD *)(a1 + 40) |= 2u;
    uint64_t v18 = *(void *)(a1 + 8);
    v19 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
    if (v18) {
      v19 = (uint64_t *)*v19;
    }
    v20 = (void *)(a1 + 56);
LABEL_31:
    v22 = (std::string *)sub_1880F84(v20, v19);
    v15 = (void *)sub_188C244(v22, *(char **)v24, (uint64_t)a3);
    goto LABEL_32;
  }
  if (v12 == 1 && v9 == 10)
  {
    *(_DWORD *)(a1 + 40) |= 1u;
    uint64_t v21 = *(void *)(a1 + 8);
    v19 = (uint64_t *)(v21 & 0xFFFFFFFFFFFFFFFCLL);
    if (v21) {
      v19 = (uint64_t *)*v19;
    }
    v20 = (void *)(a1 + 48);
    goto LABEL_31;
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (v9 - 1600 > 0xF9F)
    {
      if (*v7)
      {
        v23 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        v23 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        v8 = *(char **)v24;
      }
      v15 = sub_1885AC0(v9, v23, v8, a3);
    }
    else
    {
      v15 = sub_18859DC((uint64_t **)(a1 + 16), v9, v8, (uint64_t)&off_2546EB8, (uint64_t *)(a1 + 8), a3);
    }
LABEL_32:
    *(void *)v24 = v15;
    if (!v15) {
      goto LABEL_44;
    }
    goto LABEL_39;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_44:
  *(void *)v24 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 40) |= v5;
  return *(void *)v24;
}

char *sub_171C6A8(uint64_t a1, char *a2, void *a3)
{
  unint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if (v6)
  {
    unint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), a2);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_13;
      }
      goto LABEL_7;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  unint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) == 0) {
    goto LABEL_13;
  }
LABEL_7:
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v7 = *(void *)(a1 + 64);
  *unint64_t v4 = 24;
  unint64_t v8 = (2 * v7) ^ (v7 >> 63);
  v4[1] = v8;
  if (v8 > 0x7F)
  {
    v4[1] = v8 | 0x80;
    unint64_t v9 = v8 >> 7;
    v4[2] = v8 >> 7;
    v4 += 3;
    if (v8 >= 0x4000)
    {
      do
      {
        *(v4 - 1) |= 0x80u;
        unint64_t v10 = v9 >> 14;
        v9 >>= 7;
        *v4++ = v9;
      }
      while (v10);
    }
  }
  else
  {
    v4 += 2;
  }
LABEL_13:
  if (*(_WORD *)(a1 + 26)) {
    unint64_t v4 = sub_1886844(a1 + 16, 200, 700, v4, a3);
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return v4;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    BOOL v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    BOOL v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*a3 - (void)v4 >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(v4, v14, (int)v15);
    v4 += v16;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, v4);
}

uint64_t sub_171C848(uint64_t a1)
{
  uint64_t result = sub_1889280(a1 + 16);
  int v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 7) != 0)
  {
    if (v3)
    {
      unint64_t v5 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
      uint64_t v7 = *(void *)(v5 + 8);
      if ((v6 & 0x80u) == 0) {
        uint64_t v7 = v6;
      }
      result += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v3 & 2) == 0)
      {
LABEL_4:
        if ((v3 & 4) == 0) {
          goto LABEL_6;
        }
        goto LABEL_5;
      }
    }
    else if ((v3 & 2) == 0)
    {
      goto LABEL_4;
    }
    unint64_t v8 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v9 = *(unsigned __int8 *)(v8 + 23);
    uint64_t v10 = *(void *)(v8 + 8);
    if ((v9 & 0x80u) == 0) {
      uint64_t v10 = v9;
    }
    result += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v3 & 4) != 0) {
LABEL_5:
    }
      result += ((9 * (__clz((2 * *(void *)(a1 + 64)) ^ (*(uint64_t *)(a1 + 64) >> 63) | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
LABEL_6:
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v11 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    result += v12;
  }
  *(_DWORD *)(a1 + 44) = result;
  return result;
}

void sub_171C96C(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 40);
  if ((v4 & 7) != 0)
  {
    if (v4)
    {
      uint64_t v6 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 40) |= 1u;
      uint64_t v7 = (std::string **)(a1 + 48);
      uint64_t v8 = *(void *)(a1 + 8);
      uint64_t v9 = (uint64_t *)(v8 & 0xFFFFFFFFFFFFFFFCLL);
      if (v8) {
        uint64_t v9 = (uint64_t *)*v9;
      }
      sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0)
        {
LABEL_6:
          *(_DWORD *)(a1 + 40) |= v4;
          goto LABEL_7;
        }
LABEL_5:
        *(void *)(a1 + 64) = *(void *)(a2 + 64);
        goto LABEL_6;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    uint64_t v10 = (long long *)(*(void *)(a2 + 56) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 40) |= 2u;
    uint64_t v11 = *(void *)(a1 + 8);
    uint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
    if (v11) {
      uint64_t v12 = (uint64_t *)*v12;
    }
    sub_1881DF4((std::string **)(a1 + 56), v10, v12);
    if ((v4 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_7:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_171CA70(uint64_t a1)
{
  return sub_18856CC(a1 + 16);
}

void *sub_171CA78@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.CategoryLookupParameters");
}

uint64_t sub_171CA88(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  *(void *)(a1 + 8) = v4;
  *(void *)a1 = off_24D6418;
  sub_1882BC4(a1 + 16, a2);
  *(_DWORD *)(a1 + 40) = 0;
  return a1;
}

void sub_171CAEC(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_171CB1C(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_171CB98(void *a1)
{
  sub_171CB1C(a1);

  operator delete();
}

unsigned char *sub_171CBD0(uint64_t a1)
{
  uint64_t result = sub_18843A4((unsigned char *)(a1 + 16));
  char v4 = *(unsigned char *)(a1 + 8);
  int v3 = (uint64_t *)(a1 + 8);
  if (v4)
  {
    return (unsigned char *)sub_188B4AC(v3);
  }
  return result;
}

char *sub_171CC20(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v15 = a2;
  if ((sub_11947B8((uint64_t)a3, &v15, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v5 = (uint64_t *)(a1 + 8);
    uint64_t v6 = (uint64_t **)(a1 + 16);
    while (1)
    {
      uint64_t v7 = v15 + 1;
      unsigned int v8 = *v15;
      if (*v15 < 0)
      {
        unsigned int v9 = v8 + (*v7 << 7);
        unsigned int v8 = v9 - 128;
        if (*v7 < 0)
        {
          uint64_t v7 = (char *)sub_188C180((uint64_t)v15, v9 - 128);
          unsigned int v8 = v10;
        }
        else
        {
          uint64_t v7 = v15 + 2;
        }
      }
      uint64_t v15 = v7;
      if (!v8 || (v8 & 7) == 4) {
        break;
      }
      if ((v8 - 8000) >> 6 > 0x7C)
      {
        if (*v5)
        {
          unint64_t v13 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else
        {
          unint64_t v13 = (std::string *)sub_188DBD8(v5);
          uint64_t v7 = v15;
        }
        uint64_t v12 = sub_1885AC0(v8, v13, v7, a3);
      }
      else
      {
        uint64_t v12 = sub_18859DC(v6, v8, v7, (uint64_t)&off_2546F00, v5, a3);
      }
      uint64_t v15 = (char *)v12;
      if (!v12) {
        return 0;
      }
      if (sub_11947B8((uint64_t)a3, &v15, a3[11].i32[1])) {
        return v15;
      }
    }
    if (v7)
    {
      a3[10].i32[0] = v8 - 1;
      return v15;
    }
    return 0;
  }
  return v15;
}

char *sub_171CD70(uint64_t a1, char *a2, _DWORD *a3)
{
  char v4 = a2;
  if (*(_WORD *)(a1 + 26)) {
    char v4 = sub_1886844(a1 + 16, 1000, 2000, a2, a3);
  }
  uint64_t v6 = *(void *)(a1 + 8);
  if ((v6 & 1) == 0) {
    return v4;
  }
  unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v8 + 31) < 0)
  {
    unsigned int v9 = *(void **)(v8 + 8);
    uint64_t v10 = *(void *)(v8 + 16);
  }
  else
  {
    unsigned int v9 = (void *)(v8 + 8);
    LODWORD(v10) = *(unsigned __int8 *)(v8 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v10)
  {
    uint64_t v11 = (int)v10;
    memcpy(v4, v9, (int)v10);
    v4 += v11;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v9, v10, v4);
}

uint64_t sub_171CE3C(uint64_t a1)
{
  uint64_t result = sub_1889280(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v4 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v5 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v5 = *(unsigned __int8 *)(v4 + 31);
    }
    result += v5;
  }
  *(_DWORD *)(a1 + 40) = result;
  return result;
}

uint64_t sub_171CE94(uint64_t a1)
{
  return sub_18856CC(a1 + 16);
}

void *sub_171CE9C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.WalletCategoryInformationFilter");
}

uint64_t sub_171CEAC(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  uint64_t v3 = *(unsigned int *)(a1 + 56);
  if ((int)v3 >= 1)
  {
    unint64_t v4 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = sub_1700B04(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 56) = 0;
  }
  uint64_t v6 = *(unsigned int *)(a1 + 80);
  if ((int)v6 >= 1)
  {
    uint64_t v7 = (uint64_t *)(*(void *)(a1 + 88) + 8);
    do
    {
      uint64_t v8 = *v7++;
      uint64_t result = sub_178F9C8(v8);
      --v6;
    }
    while (v6);
    *(_DWORD *)(a1 + 80) = 0;
  }
  uint64_t v9 = *(unsigned int *)(a1 + 104);
  if ((int)v9 >= 1)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a1 + 112) + 8);
    do
    {
      uint64_t v11 = *v10++;
      uint64_t result = sub_178FF24(v11);
      --v9;
    }
    while (v9);
    *(_DWORD *)(a1 + 104) = 0;
  }
  uint64_t v12 = *(unsigned int *)(a1 + 128);
  if ((int)v12 >= 1)
  {
    unint64_t v13 = (uint64_t *)(*(void *)(a1 + 136) + 8);
    do
    {
      uint64_t v14 = *v13++;
      uint64_t result = sub_15B2C80(v14);
      --v12;
    }
    while (v12);
    *(_DWORD *)(a1 + 128) = 0;
  }
  char v16 = *(unsigned char *)(a1 + 8);
  uint64_t v15 = a1 + 8;
  *(unsigned char *)(v15 + 136) = 0;
  *(_DWORD *)(v15 + 32) = 0;
  if (v16)
  {
    return sub_188B4AC((uint64_t *)v15);
  }
  return result;
}

unsigned char *sub_171CFB0(uint64_t a1)
{
  uint64_t result = sub_18843A4((unsigned char *)(a1 + 16));
  char v4 = *(unsigned char *)(a1 + 8);
  uint64_t v3 = a1 + 8;
  *(_DWORD *)(v3 + 40) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  if (v4)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_171D008(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  uint64_t v3 = *(unsigned int *)(a1 + 56);
  if ((int)v3 >= 1)
  {
    char v4 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = (uint64_t)sub_13627B0(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 56) = 0;
  }
  uint64_t v6 = *(unsigned int *)(a1 + 80);
  if ((int)v6 >= 1)
  {
    uint64_t v7 = (uint64_t *)(*(void *)(a1 + 88) + 8);
    do
    {
      uint64_t v8 = *v7++;
      uint64_t result = (uint64_t)sub_18571AC(v8);
      --v6;
    }
    while (v6);
    *(_DWORD *)(a1 + 80) = 0;
  }
  int v9 = *(_DWORD *)(a1 + 40);
  if ((v9 & 7) != 0)
  {
    if (v9)
    {
      uint64_t result = (uint64_t)sub_1855518(*(void *)(a1 + 96));
      if ((v9 & 2) == 0)
      {
LABEL_12:
        if ((v9 & 4) == 0) {
          goto LABEL_14;
        }
        goto LABEL_13;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_12;
    }
    uint64_t result = sub_18555A8(*(void *)(a1 + 104));
    if ((v9 & 4) != 0) {
LABEL_13:
    }
      uint64_t result = (uint64_t)sub_1855634(*(void *)(a1 + 112));
  }
LABEL_14:
  if ((v9 & 0x38) != 0)
  {
    *(_DWORD *)(a1 + 128) = 0;
    *(void *)(a1 + 120) = 0;
  }
  char v11 = *(unsigned char *)(a1 + 8);
  uint64_t v10 = a1 + 8;
  *(_DWORD *)(v10 + 32) = 0;
  if (v11)
  {
    return sub_188B4AC((uint64_t *)v10);
  }
  return result;
}

uint64_t sub_171D104(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  uint64_t v3 = *(unsigned int *)(a1 + 56);
  if ((int)v3 >= 1)
  {
    char v4 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = sub_1850B0C(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 56) = 0;
  }
  int v6 = *(_DWORD *)(a1 + 40);
  if ((v6 & 3) != 0)
  {
    if (v6) {
      uint64_t result = sub_147BA84(*(void *)(a1 + 72));
    }
    if ((v6 & 2) != 0) {
      uint64_t result = sub_147F26C(*(void *)(a1 + 80));
    }
  }
  char v8 = *(unsigned char *)(a1 + 8);
  uint64_t v7 = a1 + 8;
  *(_DWORD *)(v7 + 80) = 0;
  *(_DWORD *)(v7 + 32) = 0;
  if (v8)
  {
    return sub_188B4AC((uint64_t *)v7);
  }
  return result;
}

uint64_t sub_171D1B4(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 7) == 0) {
    goto LABEL_6;
  }
  if ((v2 & 1) == 0)
  {
    if ((v2 & 2) == 0) {
      goto LABEL_4;
    }
    goto LABEL_14;
  }
  unint64_t v5 = *(void *)(result + 24) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v5 + 23) < 0)
  {
    **(unsigned char **)unint64_t v5 = 0;
    *(void *)(v5 + 8) = 0;
    if ((v2 & 2) != 0) {
      goto LABEL_14;
    }
LABEL_4:
    if ((v2 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  *(unsigned char *)unint64_t v5 = 0;
  *(unsigned char *)(v5 + 23) = 0;
  if ((v2 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_14:
  uint64_t result = sub_18525D4(*(void *)(result + 32));
  if ((v2 & 4) != 0) {
LABEL_5:
  }
    uint64_t result = sub_18525D4(*(void *)(v1 + 40));
LABEL_6:
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_171D260(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  *(void *)(a1 + 8) = v4;
  *(void *)a1 = off_24D6498;
  sub_1882BC4(a1 + 16, a2);
  bzero((void *)(a1 + 64), 0x320uLL);
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0;
  *(_DWORD *)(a1 + 56) = 0;
  return a1;
}

void sub_171D2D4(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_171D304(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  uint64_t v4 = a1 + 16;
  *(void *)a1 = off_24D6498;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 56) = 0;
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v4, a2 + 16);
  int v6 = *(_DWORD *)(a2 + 40);
  if (v6) {
    operator new();
  }
  *(void *)(a1 + 64) = 0;
  if ((v6 & 2) != 0) {
    operator new();
  }
  *(void *)(a1 + 72) = 0;
  if ((v6 & 4) != 0) {
    operator new();
  }
  *(void *)(a1 + 80) = 0;
  if ((v6 & 8) != 0) {
    operator new();
  }
  *(void *)(a1 + 88) = 0;
  if ((v6 & 0x10) != 0) {
    operator new();
  }
  *(void *)(a1 + 96) = 0;
  if ((v6 & 0x20) != 0) {
    operator new();
  }
  *(void *)(a1 + 104) = 0;
  if ((v6 & 0x40) != 0) {
    operator new();
  }
  *(void *)(a1 + 112) = 0;
  if ((v6 & 0x80) != 0) {
    operator new();
  }
  *(void *)(a1 + 120) = 0;
  if ((v6 & 0x100) != 0) {
    operator new();
  }
  *(void *)(a1 + 128) = 0;
  if ((v6 & 0x200) != 0) {
    operator new();
  }
  *(void *)(a1 + 136) = 0;
  if ((v6 & 0x400) != 0) {
    operator new();
  }
  *(void *)(a1 + 144) = 0;
  if ((v6 & 0x800) != 0) {
    operator new();
  }
  *(void *)(a1 + 152) = 0;
  if ((v6 & 0x1000) != 0) {
    operator new();
  }
  *(void *)(a1 + 160) = 0;
  if ((v6 & 0x2000) != 0) {
    operator new();
  }
  *(void *)(a1 + 168) = 0;
  if ((v6 & 0x4000) != 0) {
    operator new();
  }
  *(void *)(a1 + 176) = 0;
  if ((v6 & 0x8000) != 0) {
    operator new();
  }
  *(void *)(a1 + 184) = 0;
  if ((v6 & 0x10000) != 0) {
    operator new();
  }
  *(void *)(a1 + 192) = 0;
  if ((v6 & 0x20000) != 0) {
    operator new();
  }
  *(void *)(a1 + 200) = 0;
  if ((v6 & 0x40000) != 0) {
    operator new();
  }
  *(void *)(a1 + 208) = 0;
  if ((v6 & 0x80000) != 0) {
    operator new();
  }
  *(void *)(a1 + 216) = 0;
  if ((v6 & 0x100000) != 0) {
    operator new();
  }
  *(void *)(a1 + 224) = 0;
  if ((v6 & 0x200000) != 0) {
    operator new();
  }
  *(void *)(a1 + 232) = 0;
  if ((v6 & 0x400000) != 0) {
    operator new();
  }
  *(void *)(a1 + 240) = 0;
  if ((v6 & 0x800000) != 0) {
    operator new();
  }
  *(void *)(a1 + 248) = 0;
  if ((v6 & 0x1000000) != 0) {
    operator new();
  }
  *(void *)(a1 + 256) = 0;
  if ((v6 & 0x2000000) != 0) {
    operator new();
  }
  *(void *)(a1 + 264) = 0;
  if ((v6 & 0x4000000) != 0) {
    operator new();
  }
  *(void *)(a1 + 272) = 0;
  if ((v6 & 0x8000000) != 0) {
    operator new();
  }
  *(void *)(a1 + 280) = 0;
  if ((v6 & 0x10000000) != 0) {
    operator new();
  }
  *(void *)(a1 + 288) = 0;
  if ((v6 & 0x20000000) != 0) {
    operator new();
  }
  *(void *)(a1 + 296) = 0;
  if ((v6 & 0x40000000) != 0) {
    operator new();
  }
  *(void *)(a1 + 304) = 0;
  if (v6 < 0) {
    operator new();
  }
  *(void *)(a1 + 312) = 0;
  int v7 = *(_DWORD *)(a2 + 44);
  if (v7) {
    operator new();
  }
  *(void *)(a1 + 320) = 0;
  if ((v7 & 2) != 0) {
    operator new();
  }
  *(void *)(a1 + 328) = 0;
  if ((v7 & 4) != 0) {
    operator new();
  }
  *(void *)(a1 + 336) = 0;
  if ((v7 & 8) != 0) {
    operator new();
  }
  *(void *)(a1 + 344) = 0;
  if ((v7 & 0x10) != 0) {
    operator new();
  }
  *(void *)(a1 + 352) = 0;
  if ((v7 & 0x20) != 0) {
    operator new();
  }
  *(void *)(a1 + 360) = 0;
  if ((v7 & 0x40) != 0) {
    operator new();
  }
  *(void *)(a1 + 368) = 0;
  if ((v7 & 0x80) != 0) {
    operator new();
  }
  *(void *)(a1 + 376) = 0;
  if ((v7 & 0x100) != 0) {
    operator new();
  }
  *(void *)(a1 + 384) = 0;
  if ((v7 & 0x200) != 0) {
    operator new();
  }
  *(void *)(a1 + 392) = 0;
  if ((v7 & 0x400) != 0) {
    operator new();
  }
  *(void *)(a1 + 400) = 0;
  if ((v7 & 0x800) != 0) {
    operator new();
  }
  *(void *)(a1 + 408) = 0;
  if ((v7 & 0x1000) != 0) {
    operator new();
  }
  *(void *)(a1 + 416) = 0;
  if ((v7 & 0x2000) != 0) {
    operator new();
  }
  *(void *)(a1 + 424) = 0;
  if ((v7 & 0x4000) != 0) {
    operator new();
  }
  *(void *)(a1 + 432) = 0;
  if ((v7 & 0x8000) != 0) {
    operator new();
  }
  *(void *)(a1 + 440) = 0;
  if ((v7 & 0x10000) != 0) {
    operator new();
  }
  *(void *)(a1 + 448) = 0;
  if ((v7 & 0x20000) != 0) {
    operator new();
  }
  *(void *)(a1 + 456) = 0;
  if ((v7 & 0x40000) != 0) {
    operator new();
  }
  *(void *)(a1 + 464) = 0;
  if ((v7 & 0x80000) != 0) {
    operator new();
  }
  *(void *)(a1 + 472) = 0;
  if ((v7 & 0x100000) != 0) {
    operator new();
  }
  *(void *)(a1 + 480) = 0;
  if ((v7 & 0x200000) != 0) {
    operator new();
  }
  *(void *)(a1 + 488) = 0;
  if ((v7 & 0x400000) != 0) {
    operator new();
  }
  *(void *)(a1 + 496) = 0;
  if ((v7 & 0x800000) != 0) {
    operator new();
  }
  *(void *)(a1 + 504) = 0;
  if ((v7 & 0x1000000) != 0) {
    operator new();
  }
  *(void *)(a1 + 512) = 0;
  if ((v7 & 0x2000000) != 0) {
    operator new();
  }
  *(void *)(a1 + 520) = 0;
  if ((v7 & 0x4000000) != 0) {
    operator new();
  }
  *(void *)(a1 + 528) = 0;
  if ((v7 & 0x8000000) != 0) {
    operator new();
  }
  *(void *)(a1 + 536) = 0;
  if ((v7 & 0x10000000) != 0) {
    operator new();
  }
  *(void *)(a1 + 544) = 0;
  if ((v7 & 0x20000000) != 0) {
    operator new();
  }
  *(void *)(a1 + 552) = 0;
  if ((v7 & 0x40000000) != 0) {
    operator new();
  }
  *(void *)(a1 + 560) = 0;
  if (v7 < 0) {
    operator new();
  }
  *(void *)(a1 + 568) = 0;
  int v8 = *(_DWORD *)(a2 + 48);
  if (v8) {
    operator new();
  }
  *(void *)(a1 + 576) = 0;
  if ((v8 & 2) != 0) {
    operator new();
  }
  *(void *)(a1 + 584) = 0;
  if ((v8 & 4) != 0) {
    operator new();
  }
  *(void *)(a1 + 592) = 0;
  if ((v8 & 8) != 0) {
    operator new();
  }
  *(void *)(a1 + 600) = 0;
  if ((v8 & 0x10) != 0) {
    operator new();
  }
  *(void *)(a1 + 608) = 0;
  if ((v8 & 0x20) != 0) {
    operator new();
  }
  *(void *)(a1 + 616) = 0;
  if ((v8 & 0x40) != 0) {
    operator new();
  }
  *(void *)(a1 + 624) = 0;
  if ((v8 & 0x80) != 0) {
    operator new();
  }
  *(void *)(a1 + 632) = 0;
  if ((v8 & 0x100) != 0) {
    operator new();
  }
  *(void *)(a1 + 640) = 0;
  if ((v8 & 0x200) != 0) {
    operator new();
  }
  *(void *)(a1 + 648) = 0;
  if ((v8 & 0x400) != 0) {
    operator new();
  }
  *(void *)(a1 + 656) = 0;
  if ((v8 & 0x800) != 0) {
    operator new();
  }
  *(void *)(a1 + 664) = 0;
  if ((v8 & 0x1000) != 0) {
    operator new();
  }
  *(void *)(a1 + 672) = 0;
  if ((v8 & 0x2000) != 0) {
    operator new();
  }
  *(void *)(a1 + 680) = 0;
  if ((v8 & 0x4000) != 0) {
    operator new();
  }
  *(void *)(a1 + 688) = 0;
  if ((v8 & 0x8000) != 0) {
    operator new();
  }
  *(void *)(a1 + 696) = 0;
  if ((v8 & 0x10000) != 0) {
    operator new();
  }
  *(void *)(a1 + 704) = 0;
  if ((v8 & 0x20000) != 0) {
    operator new();
  }
  *(void *)(a1 + 712) = 0;
  if ((v8 & 0x40000) != 0) {
    operator new();
  }
  *(void *)(a1 + 720) = 0;
  if ((v8 & 0x80000) != 0) {
    operator new();
  }
  *(void *)(a1 + 728) = 0;
  if ((v8 & 0x100000) != 0) {
    operator new();
  }
  *(void *)(a1 + 736) = 0;
  if ((v8 & 0x200000) != 0) {
    operator new();
  }
  *(void *)(a1 + 744) = 0;
  if ((v8 & 0x400000) != 0) {
    operator new();
  }
  *(void *)(a1 + 752) = 0;
  if ((v8 & 0x800000) != 0) {
    operator new();
  }
  *(void *)(a1 + 760) = 0;
  if ((v8 & 0x1000000) != 0) {
    operator new();
  }
  *(void *)(a1 + 768) = 0;
  if ((v8 & 0x2000000) != 0) {
    operator new();
  }
  *(void *)(a1 + 776) = 0;
  if ((v8 & 0x4000000) != 0) {
    operator new();
  }
  *(void *)(a1 + 784) = 0;
  if ((v8 & 0x8000000) != 0) {
    operator new();
  }
  *(void *)(a1 + 792) = 0;
  if ((v8 & 0x10000000) != 0) {
    operator new();
  }
  *(void *)(a1 + 800) = 0;
  if ((v8 & 0x20000000) != 0) {
    operator new();
  }
  *(void *)(a1 + 808) = 0;
  if ((v8 & 0x40000000) != 0) {
    operator new();
  }
  *(void *)(a1 + 816) = 0;
  if (v8 < 0) {
    operator new();
  }
  *(void *)(a1 + 824) = 0;
  int v9 = *(_DWORD *)(a2 + 52);
  if (v9) {
    operator new();
  }
  *(void *)(a1 + 832) = 0;
  if ((v9 & 2) != 0) {
    operator new();
  }
  *(void *)(a1 + 840) = 0;
  if ((v9 & 4) != 0) {
    operator new();
  }
  *(void *)(a1 + 848) = 0;
  if ((v9 & 8) != 0) {
    operator new();
  }
  *(void *)(a1 + 856) = 0;
  return a1;
}

void sub_171E984()
{
}

void *sub_171EFFC(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_171F088((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

uint64_t sub_171F088(uint64_t result)
{
  if ((uint64_t (***)())result != &off_2546F30)
  {
    uint64_t v1 = (void *)result;
    uint64_t v2 = *(void **)(result + 64);
    if (v2)
    {
      sub_16B92F8(v2);
      operator delete();
    }
    uint64_t v3 = (void *)v1[9];
    if (v3)
    {
      sub_16C2B00(v3);
      operator delete();
    }
    uint64_t v4 = (void *)v1[10];
    if (v4)
    {
      sub_16C3F70(v4);
      operator delete();
    }
    uint64_t v5 = v1[11];
    if (v5)
    {
      sub_16C4BF4(v5);
      operator delete();
    }
    int v6 = (void *)v1[12];
    if (v6)
    {
      sub_16C6C58(v6);
      operator delete();
    }
    int v7 = (void *)v1[13];
    if (v7)
    {
      sub_16E340C(v7);
      operator delete();
    }
    uint64_t v8 = v1[14];
    if (v8)
    {
      sub_16E4D44(v8);
      operator delete();
    }
    uint64_t v9 = v1[15];
    if (v9)
    {
      sub_16EB850(v9);
      operator delete();
    }
    uint64_t v10 = v1[16];
    if (v10)
    {
      sub_16E97B4(v10);
      operator delete();
    }
    uint64_t v11 = v1[17];
    if (v11)
    {
      sub_16D78B8(v11);
      operator delete();
    }
    uint64_t v12 = v1[18];
    if (v12)
    {
      sub_16CFB30(v12);
      operator delete();
    }
    uint64_t v13 = v1[19];
    if (v13)
    {
      sub_16ED470(v13);
      operator delete();
    }
    uint64_t v14 = (void *)v1[20];
    if (v14)
    {
      sub_17906E4(v14);
      operator delete();
    }
    uint64_t v15 = v1[21];
    if (v15)
    {
      sub_16EFB7C(v15);
      operator delete();
    }
    char v16 = (void *)v1[22];
    if (v16)
    {
      sub_16F1988(v16);
      operator delete();
    }
    if (v1[23])
    {
      sub_145FE08();
      operator delete();
    }
    unint64_t v17 = (void *)v1[24];
    if (v17)
    {
      sub_16DA8AC(v17);
      operator delete();
    }
    uint64_t v18 = (void *)v1[25];
    if (v18)
    {
      sub_16F3538(v18);
      operator delete();
    }
    uint64_t v19 = v1[26];
    if (v19)
    {
      sub_16F419C(v19);
      operator delete();
    }
    v20 = (void *)v1[27];
    if (v20)
    {
      sub_16F9368(v20);
      operator delete();
    }
    uint64_t v21 = (void *)v1[28];
    if (v21)
    {
      sub_16DB354(v21);
      operator delete();
    }
    uint64_t v22 = v1[29];
    if (v22)
    {
      sub_16E2640(v22);
      operator delete();
    }
    v23 = (void *)v1[30];
    if (v23)
    {
      sub_16FBA2C(v23);
      operator delete();
    }
    v24 = (void *)v1[31];
    if (v24)
    {
      sub_16D5464(v24);
      operator delete();
    }
    uint64_t v25 = v1[32];
    if (v25)
    {
      sub_1700D10(v25);
      operator delete();
    }
    v26 = (void *)v1[33];
    if (v26)
    {
      sub_17022D4(v26);
      operator delete();
    }
    v27 = (void *)v1[34];
    if (v27)
    {
      sub_170864C(v27);
      operator delete();
    }
    uint64_t v28 = v1[35];
    if (v28)
    {
      sub_16C7FE0(v28);
      operator delete();
    }
    v29 = (void *)v1[36];
    if (v29)
    {
      sub_16C92A8(v29);
      operator delete();
    }
    v30 = (void *)v1[37];
    if (v30)
    {
      sub_16CA594(v30);
      operator delete();
    }
    uint64_t v31 = v1[38];
    if (v31)
    {
      sub_16CB034(v31);
      operator delete();
    }
    uint64_t v32 = v1[39];
    if (v32)
    {
      sub_16E6BA8(v32);
      operator delete();
    }
    uint64_t v33 = v1[40];
    if (v33)
    {
      sub_170D1F0(v33);
      operator delete();
    }
    uint64_t v34 = v1[41];
    if (v34)
    {
      sub_170D9EC(v34);
      operator delete();
    }
    uint64_t v35 = v1[42];
    if (v35)
    {
      sub_170E628(v35);
      operator delete();
    }
    v36 = (void *)v1[43];
    if (v36)
    {
      sub_1710AD0(v36);
      operator delete();
    }
    v37 = (void *)v1[44];
    if (v37)
    {
      sub_17915AC(v37);
      operator delete();
    }
    uint64_t v38 = v1[45];
    if (v38)
    {
      sub_1711968(v38);
      operator delete();
    }
    uint64_t v39 = v1[46];
    if (v39)
    {
      sub_1714490(v39);
      operator delete();
    }
    v40 = (void *)v1[47];
    if (v40)
    {
      sub_1714E14(v40);
      operator delete();
    }
    uint64_t v41 = v1[48];
    if (v41)
    {
      sub_1715720(v41);
      operator delete();
    }
    v42 = (void *)v1[49];
    if (v42)
    {
      sub_1712674(v42);
      operator delete();
    }
    v43 = (void *)v1[50];
    if (v43)
    {
      sub_171301C(v43);
      operator delete();
    }
    uint64_t v44 = v1[51];
    if (v44)
    {
      sub_18553D0(v44);
      operator delete();
    }
    v45 = (void *)v1[52];
    if (v45)
    {
      sub_171386C(v45);
      operator delete();
    }
    uint64_t v46 = v1[53];
    if (v46)
    {
      sub_170B4DC(v46);
      operator delete();
    }
    v47 = (void *)v1[54];
    if (v47)
    {
      sub_170C624(v47);
      operator delete();
    }
    uint64_t v48 = v1[55];
    if (v48)
    {
      sub_16EC668(v48);
      operator delete();
    }
    uint64_t v49 = v1[56];
    if (v49)
    {
      sub_16E7E6C(v49);
      operator delete();
    }
    v50 = (void *)v1[57];
    if (v50)
    {
      sub_129ED70(v50);
      operator delete();
    }
    uint64_t v51 = v1[58];
    if (v51)
    {
      sub_1851238(v51);
      operator delete();
    }
    v52 = (void *)v1[59];
    if (v52)
    {
      sub_1716CE8(v52);
      operator delete();
    }
    uint64_t v53 = v1[60];
    if (v53)
    {
      sub_16C150C(v53);
      operator delete();
    }
    uint64_t v54 = v1[61];
    if (v54)
    {
      sub_1718970(v54);
      operator delete();
    }
    uint64_t v55 = v1[62];
    if (v55)
    {
      sub_18524B0(v55);
      operator delete();
    }
    v56 = (void *)v1[63];
    if (v56)
    {
      sub_1779EB4(v56);
      operator delete();
    }
    v57 = (void *)v1[64];
    if (v57)
    {
      sub_177BFC8(v57);
      operator delete();
    }
    v58 = (void *)v1[65];
    if (v58)
    {
      sub_132D438(v58);
      operator delete();
    }
    uint64_t v59 = v1[66];
    if (v59)
    {
      sub_174253C(v59);
      operator delete();
    }
    uint64_t v60 = v1[67];
    if (v60)
    {
      sub_1742F68(v60);
      operator delete();
    }
    v61 = (void *)v1[68];
    if (v61)
    {
      sub_17448B0(v61);
      operator delete();
    }
    v62 = (void *)v1[69];
    if (v62)
    {
      sub_174ACB0(v62);
      operator delete();
    }
    v63 = (void *)v1[70];
    if (v63)
    {
      sub_16DBE6C(v63);
      operator delete();
    }
    v64 = (void *)v1[71];
    if (v64)
    {
      sub_16DC6EC(v64);
      operator delete();
    }
    v65 = (void *)v1[72];
    if (v65)
    {
      sub_16DD4D4(v65);
      operator delete();
    }
    v66 = (void *)v1[73];
    if (v66)
    {
      sub_129ED70(v66);
      operator delete();
    }
    uint64_t v67 = v1[74];
    if (v67)
    {
      sub_177A82C(v67);
      operator delete();
    }
    v68 = (void *)v1[75];
    if (v68)
    {
      sub_1759874(v68);
      operator delete();
    }
    uint64_t v69 = v1[76];
    if (v69)
    {
      sub_161E7F0(v69);
      operator delete();
    }
    uint64_t v70 = v1[77];
    if (v70)
    {
      sub_1747570(v70);
      operator delete();
    }
    v71 = (void *)v1[78];
    if (v71)
    {
      sub_1749D64(v71);
      operator delete();
    }
    uint64_t v72 = v1[79];
    if (v72)
    {
      sub_174A3A0(v72);
      operator delete();
    }
    v73 = (void *)v1[80];
    if (v73)
    {
      sub_16F1988(v73);
      operator delete();
    }
    v74 = (void *)v1[81];
    if (v74)
    {
      sub_16DDFFC(v74);
      operator delete();
    }
    v75 = (void *)v1[82];
    if (v75)
    {
      sub_177C658(v75);
      operator delete();
    }
    uint64_t v76 = v1[83];
    if (v76)
    {
      sub_1748E0C(v76);
      operator delete();
    }
    uint64_t v77 = v1[84];
    if (v77)
    {
      sub_175A254(v77);
      operator delete();
    }
    uint64_t v78 = v1[85];
    if (v78)
    {
      sub_16FD4D4(v78);
      operator delete();
    }
    uint64_t v79 = v1[86];
    if (v79)
    {
      sub_1749680(v79);
      operator delete();
    }
    v80 = (void *)v1[87];
    if (v80)
    {
      sub_16F4E80(v80);
      operator delete();
    }
    v81 = (void *)v1[88];
    if (v81)
    {
      sub_16F73AC(v81);
      operator delete();
    }
    v82 = (void *)v1[89];
    if (v82)
    {
      sub_16F8050(v82);
      operator delete();
    }
    uint64_t v83 = v1[90];
    if (v83)
    {
      sub_17584BC(v83);
      operator delete();
    }
    v84 = (void *)v1[91];
    if (v84)
    {
      sub_17841E0(v84);
      operator delete();
    }
    v85 = (void *)v1[92];
    if (v85)
    {
      sub_16E0994(v85);
      operator delete();
    }
    v86 = (void *)v1[93];
    if (v86)
    {
      sub_17002C8(v86);
      operator delete();
    }
    uint64_t v87 = v1[94];
    if (v87)
    {
      sub_16F5B20(v87);
      operator delete();
    }
    uint64_t v88 = v1[95];
    if (v88)
    {
      sub_1775384(v88);
      operator delete();
    }
    uint64_t v89 = v1[96];
    if (v89)
    {
      sub_17857A4(v89);
      operator delete();
    }
    uint64_t v90 = v1[97];
    if (v90)
    {
      sub_16E177C(v90);
      operator delete();
    }
    uint64_t v91 = v1[98];
    if (v91)
    {
      sub_1767B60(v91);
      operator delete();
    }
    v92 = (void *)v1[99];
    if (v92)
    {
      sub_17530B8(v92);
      operator delete();
    }
    v93 = (void *)v1[100];
    if (v93)
    {
      sub_174B72C(v93);
      operator delete();
    }
    uint64_t v94 = v1[101];
    if (v94)
    {
      sub_174C70C(v94);
      operator delete();
    }
    v95 = (void *)v1[102];
    if (v95)
    {
      sub_1750B8C(v95);
      operator delete();
    }
    uint64_t v96 = v1[103];
    if (v96)
    {
      sub_16FF5A0(v96);
      operator delete();
    }
    uint64_t v97 = v1[104];
    if (v97)
    {
      sub_174D1A4(v97);
      operator delete();
    }
    v98 = (void *)v1[105];
    if (v98)
    {
      sub_174DE9C(v98);
      operator delete();
    }
    uint64_t v99 = v1[106];
    if (v99)
    {
      sub_174ED4C(v99);
      operator delete();
    }
    uint64_t result = v1[107];
    if (result)
    {
      sub_174FBB8(result);
      operator delete();
    }
  }
  return result;
}

void sub_171FD54(void *a1)
{
  sub_171EFFC(a1);

  operator delete();
}

uint64_t sub_171FD8C(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  unsigned int v3 = *(_DWORD *)(a1 + 40);
  if (!(_BYTE)v3) {
    goto LABEL_11;
  }
  if (v3)
  {
    uint64_t result = sub_16B95B4(*(void *)(a1 + 64));
    if ((v3 & 2) == 0)
    {
LABEL_4:
      if ((v3 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_57;
    }
  }
  else if ((v3 & 2) == 0)
  {
    goto LABEL_4;
  }
  uint64_t result = sub_16C2CB0(*(void *)(a1 + 72));
  if ((v3 & 4) == 0)
  {
LABEL_5:
    if ((v3 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_58;
  }
LABEL_57:
  uint64_t result = (uint64_t)sub_16C4028(*(unsigned char **)(a1 + 80));
  if ((v3 & 8) == 0)
  {
LABEL_6:
    if ((v3 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_59;
  }
LABEL_58:
  uint64_t result = sub_16C4D24(*(void *)(a1 + 88));
  if ((v3 & 0x10) == 0)
  {
LABEL_7:
    if ((v3 & 0x20) == 0) {
      goto LABEL_8;
    }
LABEL_60:
    uint64_t result = sub_16E34CC(*(void *)(a1 + 104));
    if ((v3 & 0x40) == 0)
    {
LABEL_9:
      if ((v3 & 0x80) == 0) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
    goto LABEL_61;
  }
LABEL_59:
  uint64_t result = sub_16C6D30(*(void *)(a1 + 96));
  if ((v3 & 0x20) != 0) {
    goto LABEL_60;
  }
LABEL_8:
  if ((v3 & 0x40) == 0) {
    goto LABEL_9;
  }
LABEL_61:
  uint64_t result = sub_16E4E7C(*(void *)(a1 + 112));
  if ((v3 & 0x80) != 0) {
LABEL_10:
  }
    uint64_t result = sub_16BF128(*(void *)(a1 + 120));
LABEL_11:
  if ((v3 & 0xFF00) == 0) {
    goto LABEL_21;
  }
  if ((v3 & 0x100) != 0)
  {
    uint64_t result = sub_16E98C0(*(void *)(a1 + 128));
    if ((v3 & 0x200) == 0)
    {
LABEL_14:
      if ((v3 & 0x400) == 0) {
        goto LABEL_15;
      }
      goto LABEL_65;
    }
  }
  else if ((v3 & 0x200) == 0)
  {
    goto LABEL_14;
  }
  uint64_t result = sub_16D7A30(*(void *)(a1 + 136));
  if ((v3 & 0x400) == 0)
  {
LABEL_15:
    if ((v3 & 0x800) == 0) {
      goto LABEL_16;
    }
    goto LABEL_66;
  }
LABEL_65:
  uint64_t result = sub_16CFC78(*(void *)(a1 + 144));
  if ((v3 & 0x800) == 0)
  {
LABEL_16:
    if ((v3 & 0x1000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_67;
  }
LABEL_66:
  uint64_t result = sub_16ED574(*(void *)(a1 + 152));
  if ((v3 & 0x1000) == 0)
  {
LABEL_17:
    if ((v3 & 0x2000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_68;
  }
LABEL_67:
  uint64_t result = sub_171CEAC(*(void *)(a1 + 160));
  if ((v3 & 0x2000) == 0)
  {
LABEL_18:
    if ((v3 & 0x4000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_69;
  }
LABEL_68:
  uint64_t result = (uint64_t)sub_16EFC74(*(void *)(a1 + 168));
  if ((v3 & 0x4000) == 0)
  {
LABEL_19:
    if ((v3 & 0x8000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_20;
  }
LABEL_69:
  uint64_t result = sub_16F1A54(*(void *)(a1 + 176));
  if ((v3 & 0x8000) != 0) {
LABEL_20:
  }
    uint64_t result = sub_1369BB4(*(void *)(a1 + 184));
LABEL_21:
  if ((v3 & 0xFF0000) == 0) {
    goto LABEL_31;
  }
  if ((v3 & 0x10000) != 0)
  {
    uint64_t result = sub_16DA964(*(void *)(a1 + 192));
    if ((v3 & 0x20000) == 0)
    {
LABEL_24:
      if ((v3 & 0x40000) == 0) {
        goto LABEL_25;
      }
      goto LABEL_73;
    }
  }
  else if ((v3 & 0x20000) == 0)
  {
    goto LABEL_24;
  }
  uint64_t result = (uint64_t)sub_16F35F0(*(unsigned char **)(a1 + 200));
  if ((v3 & 0x40000) == 0)
  {
LABEL_25:
    if ((v3 & 0x80000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_74;
  }
LABEL_73:
  uint64_t result = (uint64_t)sub_16F42A8(*(void *)(a1 + 208));
  if ((v3 & 0x80000) == 0)
  {
LABEL_26:
    if ((v3 & 0x100000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_75;
  }
LABEL_74:
  uint64_t result = sub_16F9518(*(void *)(a1 + 216));
  if ((v3 & 0x100000) == 0)
  {
LABEL_27:
    if ((v3 & 0x200000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_76;
  }
LABEL_75:
  uint64_t result = sub_16DB410(*(void *)(a1 + 224));
  if ((v3 & 0x200000) == 0)
  {
LABEL_28:
    if ((v3 & 0x400000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_77;
  }
LABEL_76:
  uint64_t result = (uint64_t)sub_16E274C(*(void *)(a1 + 232));
  if ((v3 & 0x400000) == 0)
  {
LABEL_29:
    if ((v3 & 0x800000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_30;
  }
LABEL_77:
  uint64_t result = sub_16FBBF0(*(void *)(a1 + 240));
  if ((v3 & 0x800000) != 0) {
LABEL_30:
  }
    uint64_t result = sub_16D5620(*(void *)(a1 + 248));
LABEL_31:
  if (!HIBYTE(v3)) {
    goto LABEL_40;
  }
  if ((v3 & 0x1000000) != 0)
  {
    uint64_t result = sub_1700E54(*(void *)(a1 + 256));
    if ((v3 & 0x2000000) == 0)
    {
LABEL_34:
      if ((v3 & 0x4000000) == 0) {
        goto LABEL_35;
      }
      goto LABEL_208;
    }
  }
  else if ((v3 & 0x2000000) == 0)
  {
    goto LABEL_34;
  }
  uint64_t result = sub_170238C(*(void *)(a1 + 264));
  if ((v3 & 0x4000000) == 0)
  {
LABEL_35:
    if ((v3 & 0x8000000) == 0) {
      goto LABEL_36;
    }
    goto LABEL_209;
  }
LABEL_208:
  uint64_t result = sub_1708814(*(void *)(a1 + 272));
  if ((v3 & 0x8000000) == 0)
  {
LABEL_36:
    if ((v3 & 0x10000000) == 0) {
      goto LABEL_37;
    }
    goto LABEL_210;
  }
LABEL_209:
  uint64_t result = (uint64_t)sub_16C80C0(*(void *)(a1 + 280));
  if ((v3 & 0x10000000) == 0)
  {
LABEL_37:
    if ((v3 & 0x20000000) == 0) {
      goto LABEL_38;
    }
    goto LABEL_211;
  }
LABEL_210:
  uint64_t result = sub_16C9368(*(void *)(a1 + 288));
  if ((v3 & 0x20000000) == 0)
  {
LABEL_38:
    if ((v3 & 0x40000000) == 0) {
      goto LABEL_39;
    }
LABEL_212:
    uint64_t result = sub_16CB144(*(void *)(a1 + 304));
    if ((v3 & 0x80000000) == 0) {
      goto LABEL_40;
    }
    goto LABEL_213;
  }
LABEL_211:
  uint64_t result = sub_16CA64C(*(void *)(a1 + 296));
  if ((v3 & 0x40000000) != 0) {
    goto LABEL_212;
  }
LABEL_39:
  if ((v3 & 0x80000000) == 0) {
    goto LABEL_40;
  }
LABEL_213:
  uint64_t result = sub_16E6CBC(*(void *)(a1 + 312));
LABEL_40:
  unsigned int v4 = *(_DWORD *)(a1 + 44);
  if (!(_BYTE)v4) {
    goto LABEL_50;
  }
  if (v4)
  {
    uint64_t result = sub_170D2C8(*(void *)(a1 + 320));
    if ((v4 & 2) == 0)
    {
LABEL_43:
      if ((v4 & 4) == 0) {
        goto LABEL_44;
      }
      goto LABEL_81;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_43;
  }
  uint64_t result = sub_170DACC(*(void *)(a1 + 328));
  if ((v4 & 4) == 0)
  {
LABEL_44:
    if ((v4 & 8) == 0) {
      goto LABEL_45;
    }
    goto LABEL_82;
  }
LABEL_81:
  uint64_t result = sub_170E784(*(void *)(a1 + 336));
  if ((v4 & 8) == 0)
  {
LABEL_45:
    if ((v4 & 0x10) == 0) {
      goto LABEL_46;
    }
    goto LABEL_83;
  }
LABEL_82:
  uint64_t result = (uint64_t)sub_1710B9C(*(void *)(a1 + 344));
  if ((v4 & 0x10) == 0)
  {
LABEL_46:
    if ((v4 & 0x20) == 0) {
      goto LABEL_47;
    }
    goto LABEL_84;
  }
LABEL_83:
  uint64_t result = (uint64_t)sub_171CFB0(*(void *)(a1 + 352));
  if ((v4 & 0x20) == 0)
  {
LABEL_47:
    if ((v4 & 0x40) == 0) {
      goto LABEL_48;
    }
    goto LABEL_85;
  }
LABEL_84:
  uint64_t result = (uint64_t)sub_1711A7C(*(unsigned char **)(a1 + 360));
  if ((v4 & 0x40) == 0)
  {
LABEL_48:
    if ((v4 & 0x80) == 0) {
      goto LABEL_50;
    }
    goto LABEL_49;
  }
LABEL_85:
  uint64_t result = sub_1714580(*(void *)(a1 + 368));
  if ((v4 & 0x80) != 0) {
LABEL_49:
  }
    uint64_t result = sub_1714EC0(*(void *)(a1 + 376));
LABEL_50:
  if ((v4 & 0xFF00) == 0) {
    goto LABEL_97;
  }
  if ((v4 & 0x100) != 0)
  {
    uint64_t result = (uint64_t)sub_1715824(*(unsigned char **)(a1 + 384));
    if ((v4 & 0x200) == 0)
    {
LABEL_53:
      if ((v4 & 0x400) == 0) {
        goto LABEL_91;
      }
      goto LABEL_89;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_53;
  }
  uint64_t result = sub_171272C(*(void *)(a1 + 392));
  if ((v4 & 0x400) == 0) {
    goto LABEL_91;
  }
LABEL_89:
  uint64_t v5 = *(void *)(a1 + 400);
  char v6 = *(unsigned char *)(v5 + 8);
  uint64_t result = v5 + 8;
  *(_DWORD *)(result + 16) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v6) {
    uint64_t result = sub_188B4AC((uint64_t *)result);
  }
LABEL_91:
  if ((v4 & 0x800) != 0)
  {
    uint64_t result = sub_171D008(*(void *)(a1 + 408));
    if ((v4 & 0x1000) == 0)
    {
LABEL_93:
      if ((v4 & 0x2000) == 0) {
        goto LABEL_94;
      }
      goto LABEL_167;
    }
  }
  else if ((v4 & 0x1000) == 0)
  {
    goto LABEL_93;
  }
  uint64_t result = sub_1713930(*(void *)(a1 + 416));
  if ((v4 & 0x2000) == 0)
  {
LABEL_94:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_95;
    }
    goto LABEL_168;
  }
LABEL_167:
  uint64_t result = sub_170B5EC(*(void *)(a1 + 424));
  if ((v4 & 0x4000) == 0)
  {
LABEL_95:
    if ((v4 & 0x8000) == 0) {
      goto LABEL_97;
    }
    goto LABEL_96;
  }
LABEL_168:
  uint64_t result = sub_170C6D0(*(void *)(a1 + 432));
  if ((v4 & 0x8000) != 0) {
LABEL_96:
  }
    uint64_t result = sub_16EC760(*(void *)(a1 + 440));
LABEL_97:
  if ((v4 & 0xFF0000) == 0) {
    goto LABEL_107;
  }
  if ((v4 & 0x10000) != 0)
  {
    uint64_t result = (uint64_t)sub_16E7F4C(*(void *)(a1 + 448));
    if ((v4 & 0x20000) == 0)
    {
LABEL_100:
      if ((v4 & 0x40000) == 0) {
        goto LABEL_101;
      }
      goto LABEL_172;
    }
  }
  else if ((v4 & 0x20000) == 0)
  {
    goto LABEL_100;
  }
  uint64_t result = sub_129EDAC(*(void *)(a1 + 456));
  if ((v4 & 0x40000) == 0)
  {
LABEL_101:
    if ((v4 & 0x80000) == 0) {
      goto LABEL_102;
    }
    goto LABEL_173;
  }
LABEL_172:
  uint64_t result = sub_171D104(*(void *)(a1 + 464));
  if ((v4 & 0x80000) == 0)
  {
LABEL_102:
    if ((v4 & 0x100000) == 0) {
      goto LABEL_103;
    }
    goto LABEL_174;
  }
LABEL_173:
  uint64_t result = sub_1716DA0(*(void *)(a1 + 472));
  if ((v4 & 0x100000) == 0)
  {
LABEL_103:
    if ((v4 & 0x200000) == 0) {
      goto LABEL_104;
    }
    goto LABEL_175;
  }
LABEL_174:
  uint64_t result = sub_16C1638(*(void *)(a1 + 480));
  if ((v4 & 0x200000) == 0)
  {
LABEL_104:
    if ((v4 & 0x400000) == 0) {
      goto LABEL_105;
    }
    goto LABEL_176;
  }
LABEL_175:
  uint64_t result = sub_1718AD0(*(void *)(a1 + 488));
  if ((v4 & 0x400000) == 0)
  {
LABEL_105:
    if ((v4 & 0x800000) == 0) {
      goto LABEL_107;
    }
    goto LABEL_106;
  }
LABEL_176:
  uint64_t result = sub_171D1B4(*(void *)(a1 + 496));
  if ((v4 & 0x800000) != 0) {
LABEL_106:
  }
    uint64_t result = sub_17204B8(*(void *)(a1 + 504));
LABEL_107:
  if (!HIBYTE(v4)) {
    goto LABEL_116;
  }
  if ((v4 & 0x1000000) != 0)
  {
    uint64_t result = sub_172053C(*(void *)(a1 + 512));
    if ((v4 & 0x2000000) == 0)
    {
LABEL_110:
      if ((v4 & 0x4000000) == 0) {
        goto LABEL_111;
      }
      goto LABEL_216;
    }
  }
  else if ((v4 & 0x2000000) == 0)
  {
    goto LABEL_110;
  }
  uint64_t result = sub_132D474(*(void *)(a1 + 520));
  if ((v4 & 0x4000000) == 0)
  {
LABEL_111:
    if ((v4 & 0x8000000) == 0) {
      goto LABEL_112;
    }
    goto LABEL_217;
  }
LABEL_216:
  uint64_t result = sub_17205C0(*(void *)(a1 + 528));
  if ((v4 & 0x8000000) == 0)
  {
LABEL_112:
    if ((v4 & 0x10000000) == 0) {
      goto LABEL_113;
    }
    goto LABEL_218;
  }
LABEL_217:
  uint64_t result = sub_172066C(*(void *)(a1 + 536));
  if ((v4 & 0x10000000) == 0)
  {
LABEL_113:
    if ((v4 & 0x20000000) == 0) {
      goto LABEL_114;
    }
    goto LABEL_219;
  }
LABEL_218:
  uint64_t result = sub_1720740(*(void *)(a1 + 544));
  if ((v4 & 0x20000000) == 0)
  {
LABEL_114:
    if ((v4 & 0x40000000) == 0) {
      goto LABEL_115;
    }
LABEL_220:
    uint64_t result = sub_16DBF2C(*(void *)(a1 + 560));
    if ((v4 & 0x80000000) == 0) {
      goto LABEL_116;
    }
    goto LABEL_221;
  }
LABEL_219:
  uint64_t result = (uint64_t)sub_1720B1C(*(void *)(a1 + 552));
  if ((v4 & 0x40000000) != 0) {
    goto LABEL_220;
  }
LABEL_115:
  if ((v4 & 0x80000000) == 0) {
    goto LABEL_116;
  }
LABEL_221:
  uint64_t result = sub_16DC7AC(*(void *)(a1 + 568));
LABEL_116:
  unsigned int v7 = *(_DWORD *)(a1 + 48);
  if (!(_BYTE)v7) {
    goto LABEL_126;
  }
  if (v7)
  {
    uint64_t result = sub_16DD59C(*(void *)(a1 + 576));
    if ((v7 & 2) == 0)
    {
LABEL_119:
      if ((v7 & 4) == 0) {
        goto LABEL_120;
      }
      goto LABEL_180;
    }
  }
  else if ((v7 & 2) == 0)
  {
    goto LABEL_119;
  }
  uint64_t result = sub_129EDAC(*(void *)(a1 + 584));
  if ((v7 & 4) == 0)
  {
LABEL_120:
    if ((v7 & 8) == 0) {
      goto LABEL_121;
    }
    goto LABEL_181;
  }
LABEL_180:
  uint64_t result = sub_1720BAC(*(void *)(a1 + 592));
  if ((v7 & 8) == 0)
  {
LABEL_121:
    if ((v7 & 0x10) == 0) {
      goto LABEL_122;
    }
    goto LABEL_182;
  }
LABEL_181:
  uint64_t result = sub_1720CA4(*(void *)(a1 + 600));
  if ((v7 & 0x10) == 0)
  {
LABEL_122:
    if ((v7 & 0x20) == 0) {
      goto LABEL_123;
    }
    goto LABEL_183;
  }
LABEL_182:
  uint64_t result = sub_161E82C(*(void *)(a1 + 608));
  if ((v7 & 0x20) == 0)
  {
LABEL_123:
    if ((v7 & 0x40) == 0) {
      goto LABEL_124;
    }
    goto LABEL_184;
  }
LABEL_183:
  uint64_t result = sub_1720D30(*(void *)(a1 + 616));
  if ((v7 & 0x40) == 0)
  {
LABEL_124:
    if ((v7 & 0x80) == 0) {
      goto LABEL_126;
    }
    goto LABEL_125;
  }
LABEL_184:
  uint64_t result = (uint64_t)sub_1720EBC(*(void *)(a1 + 624));
  if ((v7 & 0x80) != 0) {
LABEL_125:
  }
    uint64_t result = sub_1720F40(*(void *)(a1 + 632));
LABEL_126:
  if ((v7 & 0xFF00) == 0) {
    goto LABEL_136;
  }
  if ((v7 & 0x100) != 0)
  {
    uint64_t result = sub_16F1A54(*(void *)(a1 + 640));
    if ((v7 & 0x200) == 0)
    {
LABEL_129:
      if ((v7 & 0x400) == 0) {
        goto LABEL_130;
      }
      goto LABEL_188;
    }
  }
  else if ((v7 & 0x200) == 0)
  {
    goto LABEL_129;
  }
  uint64_t result = sub_16DE0C8(*(void *)(a1 + 648));
  if ((v7 & 0x400) == 0)
  {
LABEL_130:
    if ((v7 & 0x800) == 0) {
      goto LABEL_131;
    }
    goto LABEL_189;
  }
LABEL_188:
  uint64_t result = sub_1721014(*(void *)(a1 + 656));
  if ((v7 & 0x800) == 0)
  {
LABEL_131:
    if ((v7 & 0x1000) == 0) {
      goto LABEL_132;
    }
    goto LABEL_190;
  }
LABEL_189:
  uint64_t result = sub_1721090(*(void *)(a1 + 664));
  if ((v7 & 0x1000) == 0)
  {
LABEL_132:
    if ((v7 & 0x2000) == 0) {
      goto LABEL_133;
    }
    goto LABEL_191;
  }
LABEL_190:
  uint64_t result = sub_172112C(*(void *)(a1 + 672));
  if ((v7 & 0x2000) == 0)
  {
LABEL_133:
    if ((v7 & 0x4000) == 0) {
      goto LABEL_134;
    }
    goto LABEL_192;
  }
LABEL_191:
  uint64_t result = sub_16FD5CC(*(void *)(a1 + 680));
  if ((v7 & 0x4000) == 0)
  {
LABEL_134:
    if ((v7 & 0x8000) == 0) {
      goto LABEL_136;
    }
    goto LABEL_135;
  }
LABEL_192:
  uint64_t result = sub_17211A4(*(void *)(a1 + 688));
  if ((v7 & 0x8000) != 0) {
LABEL_135:
  }
    uint64_t result = sub_16F4F40(*(void *)(a1 + 696));
LABEL_136:
  if ((v7 & 0xFF0000) == 0) {
    goto LABEL_146;
  }
  if ((v7 & 0x10000) != 0)
  {
    uint64_t result = (uint64_t)sub_16F746C(*(void *)(a1 + 704));
    if ((v7 & 0x20000) == 0)
    {
LABEL_139:
      if ((v7 & 0x40000) == 0) {
        goto LABEL_140;
      }
      goto LABEL_196;
    }
  }
  else if ((v7 & 0x20000) == 0)
  {
    goto LABEL_139;
  }
  uint64_t result = (uint64_t)sub_16F810C(*(void *)(a1 + 712));
  if ((v7 & 0x40000) == 0)
  {
LABEL_140:
    if ((v7 & 0x80000) == 0) {
      goto LABEL_141;
    }
    goto LABEL_197;
  }
LABEL_196:
  uint64_t result = sub_1721238(*(void *)(a1 + 720));
  if ((v7 & 0x80000) == 0)
  {
LABEL_141:
    if ((v7 & 0x100000) == 0) {
      goto LABEL_142;
    }
    goto LABEL_198;
  }
LABEL_197:
  uint64_t result = sub_17212D4(*(void *)(a1 + 728));
  if ((v7 & 0x100000) == 0)
  {
LABEL_142:
    if ((v7 & 0x200000) == 0) {
      goto LABEL_143;
    }
    goto LABEL_199;
  }
LABEL_198:
  uint64_t result = sub_16E0A60(*(void *)(a1 + 736));
  if ((v7 & 0x200000) == 0)
  {
LABEL_143:
    if ((v7 & 0x400000) == 0) {
      goto LABEL_144;
    }
    goto LABEL_200;
  }
LABEL_199:
  uint64_t result = sub_170038C(*(void *)(a1 + 744));
  if ((v7 & 0x400000) == 0)
  {
LABEL_144:
    if ((v7 & 0x800000) == 0) {
      goto LABEL_146;
    }
    goto LABEL_145;
  }
LABEL_200:
  uint64_t result = sub_16F5C4C(*(void *)(a1 + 752));
  if ((v7 & 0x800000) != 0) {
LABEL_145:
  }
    uint64_t result = sub_1721350(*(void *)(a1 + 760));
LABEL_146:
  if (!HIBYTE(v7)) {
    goto LABEL_155;
  }
  if ((v7 & 0x1000000) != 0)
  {
    uint64_t result = sub_17214D8(*(void *)(a1 + 768));
    if ((v7 & 0x2000000) == 0)
    {
LABEL_149:
      if ((v7 & 0x4000000) == 0) {
        goto LABEL_150;
      }
      goto LABEL_224;
    }
  }
  else if ((v7 & 0x2000000) == 0)
  {
    goto LABEL_149;
  }
  uint64_t result = (uint64_t)sub_16E185C(*(void *)(a1 + 776));
  if ((v7 & 0x4000000) == 0)
  {
LABEL_150:
    if ((v7 & 0x8000000) == 0) {
      goto LABEL_151;
    }
    goto LABEL_225;
  }
LABEL_224:
  uint64_t result = sub_1721588(*(void *)(a1 + 784));
  if ((v7 & 0x8000000) == 0)
  {
LABEL_151:
    if ((v7 & 0x10000000) == 0) {
      goto LABEL_152;
    }
    goto LABEL_226;
  }
LABEL_225:
  uint64_t result = sub_1721624(*(void *)(a1 + 792));
  if ((v7 & 0x10000000) == 0)
  {
LABEL_152:
    if ((v7 & 0x20000000) == 0) {
      goto LABEL_153;
    }
    goto LABEL_227;
  }
LABEL_226:
  uint64_t result = sub_17216E4(*(void *)(a1 + 800));
  if ((v7 & 0x20000000) == 0)
  {
LABEL_153:
    if ((v7 & 0x40000000) == 0) {
      goto LABEL_154;
    }
LABEL_228:
    uint64_t result = sub_17217EC(*(void *)(a1 + 816));
    if ((v7 & 0x80000000) == 0) {
      goto LABEL_155;
    }
    goto LABEL_229;
  }
LABEL_227:
  uint64_t result = (uint64_t)sub_1721788(*(void *)(a1 + 808));
  if ((v7 & 0x40000000) != 0) {
    goto LABEL_228;
  }
LABEL_154:
  if ((v7 & 0x80000000) == 0) {
    goto LABEL_155;
  }
LABEL_229:
  uint64_t result = sub_16FF698(*(void *)(a1 + 824));
LABEL_155:
  int v8 = *(_DWORD *)(a1 + 52);
  if ((v8 & 0xF) == 0) {
    goto LABEL_161;
  }
  if (v8)
  {
    uint64_t result = (uint64_t)sub_17218A0(*(void *)(a1 + 832));
    if ((v8 & 2) == 0)
    {
LABEL_158:
      if ((v8 & 4) == 0) {
        goto LABEL_159;
      }
      goto LABEL_204;
    }
  }
  else if ((v8 & 2) == 0)
  {
    goto LABEL_158;
  }
  uint64_t result = (uint64_t)sub_1721938(*(void *)(a1 + 840));
  if ((v8 & 4) == 0)
  {
LABEL_159:
    if ((v8 & 8) == 0) {
      goto LABEL_161;
    }
    goto LABEL_160;
  }
LABEL_204:
  uint64_t result = sub_1721A14(*(void *)(a1 + 848));
  if ((v8 & 8) != 0) {
LABEL_160:
  }
    uint64_t result = (uint64_t)sub_1721A84(*(void *)(a1 + 856));
LABEL_161:
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0;
  char v10 = *(unsigned char *)(a1 + 8);
  uint64_t v9 = (uint64_t *)(a1 + 8);
  if (v10)
  {
    return sub_188B4AC(v9);
  }
  return result;
}

uint64_t sub_17204B8(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  uint64_t v3 = *(unsigned int *)(a1 + 48);
  if ((int)v3 >= 1)
  {
    unsigned int v4 = (uint64_t *)(*(void *)(a1 + 56) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = sub_17791B0(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 48) = 0;
  }
  char v7 = *(unsigned char *)(a1 + 8);
  char v6 = (uint64_t *)(a1 + 8);
  if (v7)
  {
    return sub_188B4AC(v6);
  }
  return result;
}

uint64_t sub_172053C(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  uint64_t v3 = *(unsigned int *)(a1 + 48);
  if ((int)v3 >= 1)
  {
    unsigned int v4 = (uint64_t *)(*(void *)(a1 + 56) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = sub_177B62C(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 48) = 0;
  }
  char v7 = *(unsigned char *)(a1 + 8);
  char v6 = (uint64_t *)(a1 + 8);
  if (v7)
  {
    return sub_188B4AC(v6);
  }
  return result;
}

uint64_t sub_17205C0(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  uint64_t v3 = *(unsigned int *)(a1 + 56);
  if ((int)v3 >= 1)
  {
    unsigned int v4 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = sub_172066C(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 56) = 0;
  }
  int v6 = *(_DWORD *)(a1 + 40);
  if ((v6 & 3) != 0)
  {
    if (v6) {
      uint64_t result = sub_16B95B4(*(void *)(a1 + 72));
    }
    if ((v6 & 2) != 0) {
      uint64_t result = sub_16C2CB0(*(void *)(a1 + 80));
    }
  }
  char v8 = *(unsigned char *)(a1 + 8);
  uint64_t v7 = a1 + 8;
  *(_DWORD *)(v7 + 32) = 0;
  if (v8)
  {
    return sub_188B4AC((uint64_t *)v7);
  }
  return result;
}

uint64_t sub_172066C(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  uint64_t v3 = *(unsigned int *)(a1 + 56);
  if ((int)v3 >= 1)
  {
    unsigned int v4 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = sub_16E98C0(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 56) = 0;
  }
  int v6 = *(_DWORD *)(a1 + 40);
  if ((v6 & 7) != 0)
  {
    if (v6)
    {
      uint64_t result = sub_15B2C80(*(void *)(a1 + 72));
      if ((v6 & 2) == 0)
      {
LABEL_8:
        if ((v6 & 4) == 0) {
          goto LABEL_10;
        }
        goto LABEL_9;
      }
    }
    else if ((v6 & 2) == 0)
    {
      goto LABEL_8;
    }
    uint64_t result = sub_15B2C80(*(void *)(a1 + 80));
    if ((v6 & 4) != 0) {
LABEL_9:
    }
      uint64_t result = (uint64_t)sub_16E995C(*(void *)(a1 + 88));
  }
LABEL_10:
  if ((v6 & 0x38) != 0)
  {
    *(void *)(a1 + 96) = 0;
    *(void *)(a1 + 104) = 0;
    *(_DWORD *)(a1 + 112) = 0;
  }
  char v8 = *(unsigned char *)(a1 + 8);
  uint64_t v7 = a1 + 8;
  *(_DWORD *)(v7 + 32) = 0;
  if (v8)
  {
    return sub_188B4AC((uint64_t *)v7);
  }
  return result;
}

uint64_t sub_1720740(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  uint64_t v3 = *(unsigned int *)(a1 + 56);
  if ((int)v3 >= 1)
  {
    unsigned int v4 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = sub_15B2C80(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 56) = 0;
  }
  uint64_t v6 = *(unsigned int *)(a1 + 80);
  if ((int)v6 >= 1)
  {
    uint64_t v7 = (uint64_t *)(*(void *)(a1 + 88) + 8);
    do
    {
      uint64_t v8 = *v7++;
      uint64_t result = sub_15B2C80(v8);
      --v6;
    }
    while (v6);
    *(_DWORD *)(a1 + 80) = 0;
  }
  uint64_t v9 = *(unsigned int *)(a1 + 104);
  if ((int)v9 >= 1)
  {
    char v10 = (uint64_t *)(*(void *)(a1 + 112) + 8);
    do
    {
      uint64_t v11 = *v10++;
      uint64_t result = sub_16FBBF0(v11);
      --v9;
    }
    while (v9);
    *(_DWORD *)(a1 + 104) = 0;
  }
  uint64_t v12 = *(unsigned int *)(a1 + 128);
  if ((int)v12 >= 1)
  {
    uint64_t v13 = (uint64_t *)(*(void *)(a1 + 136) + 8);
    do
    {
      uint64_t v14 = *v13++;
      uint64_t result = sub_1720D30(v14);
      --v12;
    }
    while (v12);
    *(_DWORD *)(a1 + 128) = 0;
  }
  uint64_t v15 = *(unsigned int *)(a1 + 152);
  if ((int)v15 >= 1)
  {
    char v16 = (uint64_t *)(*(void *)(a1 + 160) + 8);
    do
    {
      uint64_t v17 = *v16++;
      uint64_t result = sub_15B2C80(v17);
      --v15;
    }
    while (v15);
    *(_DWORD *)(a1 + 152) = 0;
  }
  uint64_t v18 = *(unsigned int *)(a1 + 176);
  if ((int)v18 >= 1)
  {
    uint64_t v19 = (uint64_t *)(*(void *)(a1 + 184) + 8);
    do
    {
      uint64_t v20 = *v19++;
      uint64_t result = (uint64_t)sub_16CD894(v20);
      --v18;
    }
    while (v18);
    *(_DWORD *)(a1 + 176) = 0;
  }
  uint64_t v21 = *(unsigned int *)(a1 + 200);
  if ((int)v21 >= 1)
  {
    uint64_t v22 = (uint64_t *)(*(void *)(a1 + 208) + 8);
    do
    {
      uint64_t v23 = *v22++;
      uint64_t result = sub_15B2C80(v23);
      --v21;
    }
    while (v21);
    *(_DWORD *)(a1 + 200) = 0;
  }
  uint64_t v24 = *(unsigned int *)(a1 + 224);
  if ((int)v24 >= 1)
  {
    uint64_t v25 = (uint64_t *)(*(void *)(a1 + 232) + 8);
    do
    {
      uint64_t v26 = *v25++;
      uint64_t result = sub_15B2C80(v26);
      --v24;
    }
    while (v24);
    *(_DWORD *)(a1 + 224) = 0;
  }
  uint64_t v27 = *(unsigned int *)(a1 + 248);
  if ((int)v27 >= 1)
  {
    uint64_t v28 = (uint64_t *)(*(void *)(a1 + 256) + 8);
    do
    {
      uint64_t v29 = *v28++;
      uint64_t result = sub_15B3204(v29);
      --v27;
    }
    while (v27);
    *(_DWORD *)(a1 + 248) = 0;
  }
  uint64_t v30 = *(unsigned int *)(a1 + 272);
  if ((int)v30 >= 1)
  {
    uint64_t v31 = (uint64_t *)(*(void *)(a1 + 280) + 8);
    do
    {
      uint64_t v32 = *v31++;
      uint64_t result = sub_15B2C80(v32);
      --v30;
    }
    while (v30);
    *(_DWORD *)(a1 + 272) = 0;
  }
  uint64_t v33 = *(unsigned int *)(a1 + 296);
  if ((int)v33 >= 1)
  {
    uint64_t v34 = (uint64_t *)(*(void *)(a1 + 304) + 8);
    do
    {
      uint64_t v35 = *v34++;
      uint64_t result = sub_15B2C80(v35);
      --v33;
    }
    while (v33);
    *(_DWORD *)(a1 + 296) = 0;
  }
  uint64_t v36 = *(unsigned int *)(a1 + 320);
  if ((int)v36 >= 1)
  {
    v37 = (uint64_t *)(*(void *)(a1 + 328) + 8);
    do
    {
      uint64_t v38 = *v37++;
      uint64_t result = sub_15B2C80(v38);
      --v36;
    }
    while (v36);
    *(_DWORD *)(a1 + 320) = 0;
  }
  uint64_t v39 = *(unsigned int *)(a1 + 344);
  if ((int)v39 >= 1)
  {
    v40 = (uint64_t *)(*(void *)(a1 + 352) + 8);
    do
    {
      uint64_t v41 = *v40++;
      uint64_t result = sub_15B2C80(v41);
      --v39;
    }
    while (v39);
    *(_DWORD *)(a1 + 344) = 0;
  }
  uint64_t v42 = *(unsigned int *)(a1 + 368);
  if ((int)v42 >= 1)
  {
    v43 = (uint64_t *)(*(void *)(a1 + 376) + 8);
    do
    {
      uint64_t v44 = *v43++;
      uint64_t result = sub_15B2C80(v44);
      --v42;
    }
    while (v42);
    *(_DWORD *)(a1 + 368) = 0;
  }
  uint64_t v45 = *(unsigned int *)(a1 + 392);
  if ((int)v45 >= 1)
  {
    uint64_t v46 = (uint64_t *)(*(void *)(a1 + 400) + 8);
    do
    {
      uint64_t v47 = *v46++;
      uint64_t result = sub_1781CD4(v47);
      --v45;
    }
    while (v45);
    *(_DWORD *)(a1 + 392) = 0;
  }
  uint64_t v48 = *(unsigned int *)(a1 + 416);
  if ((int)v48 >= 1)
  {
    uint64_t v49 = (uint64_t *)(*(void *)(a1 + 424) + 8);
    do
    {
      uint64_t v50 = *v49++;
      uint64_t result = sub_16FBBF0(v50);
      --v48;
    }
    while (v48);
    *(_DWORD *)(a1 + 416) = 0;
  }
  uint64_t v51 = *(unsigned int *)(a1 + 440);
  if ((int)v51 >= 1)
  {
    v52 = (uint64_t *)(*(void *)(a1 + 448) + 8);
    do
    {
      uint64_t v53 = *v52++;
      uint64_t result = sub_15B2C80(v53);
      --v51;
    }
    while (v51);
    *(_DWORD *)(a1 + 440) = 0;
  }
  int v54 = *(_DWORD *)(a1 + 40);
  if ((v54 & 0x3F) == 0) {
    goto LABEL_77;
  }
  if ((v54 & 1) == 0)
  {
    if ((v54 & 2) == 0) {
      goto LABEL_72;
    }
LABEL_89:
    unint64_t v58 = *(void *)(a1 + 464) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v58 + 23) < 0)
    {
      **(unsigned char **)unint64_t v58 = 0;
      *(void *)(v58 + 8) = 0;
      if ((v54 & 4) != 0) {
        goto LABEL_93;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v58 = 0;
      *(unsigned char *)(v58 + 23) = 0;
      if ((v54 & 4) != 0) {
        goto LABEL_93;
      }
    }
LABEL_73:
    if ((v54 & 8) == 0) {
      goto LABEL_74;
    }
LABEL_94:
    uint64_t result = (uint64_t)sub_16CD894(*(void *)(a1 + 480));
    if ((v54 & 0x10) == 0)
    {
LABEL_75:
      if ((v54 & 0x20) == 0) {
        goto LABEL_77;
      }
      goto LABEL_76;
    }
    goto LABEL_95;
  }
  unint64_t v57 = *(void *)(a1 + 456) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v57 + 23) < 0)
  {
    **(unsigned char **)unint64_t v57 = 0;
    *(void *)(v57 + 8) = 0;
    if ((v54 & 2) != 0) {
      goto LABEL_89;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v57 = 0;
    *(unsigned char *)(v57 + 23) = 0;
    if ((v54 & 2) != 0) {
      goto LABEL_89;
    }
  }
LABEL_72:
  if ((v54 & 4) == 0) {
    goto LABEL_73;
  }
LABEL_93:
  uint64_t result = (uint64_t)sub_16CD894(*(void *)(a1 + 472));
  if ((v54 & 8) != 0) {
    goto LABEL_94;
  }
LABEL_74:
  if ((v54 & 0x10) == 0) {
    goto LABEL_75;
  }
LABEL_95:
  uint64_t result = sub_1720BAC(*(void *)(a1 + 488));
  if ((v54 & 0x20) != 0) {
LABEL_76:
  }
    uint64_t result = sub_16FBBF0(*(void *)(a1 + 496));
LABEL_77:
  if ((v54 & 0xC0) != 0)
  {
    *(_DWORD *)(a1 + 512) = 0;
    *(void *)(a1 + 504) = 0;
  }
  if ((v54 & 0x300) != 0) {
    *(void *)(a1 + 516) = 0;
  }
  char v56 = *(unsigned char *)(a1 + 8);
  uint64_t v55 = a1 + 8;
  *(_DWORD *)(v55 + 32) = 0;
  if (v56)
  {
    return sub_188B4AC((uint64_t *)v55);
  }
  return result;
}

unsigned char *sub_1720B1C(uint64_t a1)
{
  uint64_t result = sub_18843A4((unsigned char *)(a1 + 16));
  uint64_t v3 = *(unsigned int *)(a1 + 56);
  if ((int)v3 >= 1)
  {
    unsigned int v4 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = sub_16CD894(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 56) = 0;
  }
  char v7 = *(unsigned char *)(a1 + 8);
  uint64_t v6 = a1 + 8;
  *(_DWORD *)(v6 + 64) = 0;
  *(_DWORD *)(v6 + 80) = 0;
  *(_DWORD *)(v6 + 32) = 0;
  if (v7)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v6);
  }
  return result;
}

uint64_t sub_1720BAC(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  uint64_t v3 = *(unsigned int *)(a1 + 56);
  if ((int)v3 >= 1)
  {
    unsigned int v4 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = (uint64_t)sub_16CD894(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 56) = 0;
  }
  uint64_t v6 = *(unsigned int *)(a1 + 80);
  if ((int)v6 >= 1)
  {
    char v7 = (uint64_t *)(*(void *)(a1 + 88) + 8);
    do
    {
      uint64_t v8 = *v7++;
      uint64_t result = sub_15B2C80(v8);
      --v6;
    }
    while (v6);
    *(_DWORD *)(a1 + 80) = 0;
  }
  int v9 = *(_DWORD *)(a1 + 40);
  if ((v9 & 7) != 0)
  {
    if (v9)
    {
      uint64_t result = (uint64_t)sub_16CD894(*(void *)(a1 + 96));
      if ((v9 & 2) == 0)
      {
LABEL_12:
        if ((v9 & 4) == 0) {
          goto LABEL_14;
        }
        goto LABEL_13;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_12;
    }
    uint64_t result = sub_16FBBF0(*(void *)(a1 + 104));
    if ((v9 & 4) != 0) {
LABEL_13:
    }
      uint64_t result = sub_15B2C80(*(void *)(a1 + 112));
  }
LABEL_14:
  if ((v9 & 0x18) != 0) {
    *(void *)(a1 + 120) = 0;
  }
  char v11 = *(unsigned char *)(a1 + 8);
  uint64_t v10 = a1 + 8;
  *(_DWORD *)(v10 + 32) = 0;
  if (v11)
  {
    return sub_188B4AC((uint64_t *)v10);
  }
  return result;
}

uint64_t sub_1720CA4(uint64_t a1)
{
  sub_18843A4((unsigned char *)(a1 + 16));
  uint64_t v2 = *(unsigned int *)(a1 + 48);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(a1 + 56) + 8);
    do
    {
      uint64_t v4 = *v3++;
      sub_17591D8(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(a1 + 48) = 0;
  }
  uint64_t result = sub_188CC00(a1 + 64);
  char v7 = *(unsigned char *)(a1 + 8);
  uint64_t v6 = (uint64_t *)(a1 + 8);
  if (v7)
  {
    return sub_188B4AC(v6);
  }
  return result;
}

uint64_t sub_1720D30(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  uint64_t v3 = *(unsigned int *)(a1 + 56);
  if ((int)v3 >= 1)
  {
    uint64_t v4 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = sub_16FBBF0(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 56) = 0;
  }
  uint64_t v6 = *(unsigned int *)(a1 + 80);
  if ((int)v6 >= 1)
  {
    char v7 = (uint64_t *)(*(void *)(a1 + 88) + 8);
    do
    {
      uint64_t v8 = *v7++;
      uint64_t result = sub_15B2C80(v8);
      --v6;
    }
    while (v6);
    *(_DWORD *)(a1 + 80) = 0;
  }
  uint64_t v9 = *(unsigned int *)(a1 + 104);
  if ((int)v9 >= 1)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a1 + 112) + 8);
    do
    {
      uint64_t v11 = *v10++;
      uint64_t result = sub_15B2C80(v11);
      --v9;
    }
    while (v9);
    *(_DWORD *)(a1 + 104) = 0;
  }
  uint64_t v12 = *(unsigned int *)(a1 + 128);
  if ((int)v12 >= 1)
  {
    uint64_t v13 = (uint64_t *)(*(void *)(a1 + 136) + 8);
    do
    {
      uint64_t v14 = *v13++;
      uint64_t result = sub_15B3204(v14);
      --v12;
    }
    while (v12);
    *(_DWORD *)(a1 + 128) = 0;
  }
  uint64_t v15 = *(unsigned int *)(a1 + 152);
  if ((int)v15 >= 1)
  {
    char v16 = (uint64_t *)(*(void *)(a1 + 160) + 8);
    do
    {
      uint64_t v17 = *v16++;
      uint64_t result = sub_15B2C80(v17);
      --v15;
    }
    while (v15);
    *(_DWORD *)(a1 + 152) = 0;
  }
  int v18 = *(_DWORD *)(a1 + 40);
  if ((v18 & 7) == 0) {
    goto LABEL_26;
  }
  if ((v18 & 1) == 0)
  {
    if ((v18 & 2) == 0) {
      goto LABEL_24;
    }
    goto LABEL_34;
  }
  unint64_t v21 = *(void *)(a1 + 168) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v21 + 23) < 0)
  {
    **(unsigned char **)unint64_t v21 = 0;
    *(void *)(v21 + 8) = 0;
    if ((v18 & 2) != 0) {
      goto LABEL_34;
    }
LABEL_24:
    if ((v18 & 4) == 0) {
      goto LABEL_26;
    }
    goto LABEL_25;
  }
  *(unsigned char *)unint64_t v21 = 0;
  *(unsigned char *)(v21 + 23) = 0;
  if ((v18 & 2) == 0) {
    goto LABEL_24;
  }
LABEL_34:
  uint64_t result = (uint64_t)sub_16CD894(*(void *)(a1 + 176));
  if ((v18 & 4) != 0) {
LABEL_25:
  }
    uint64_t result = (uint64_t)sub_170FC5C(*(void *)(a1 + 184));
LABEL_26:
  char v20 = *(unsigned char *)(a1 + 8);
  uint64_t v19 = a1 + 8;
  *(_WORD *)(v19 + 184) = 0;
  *(_DWORD *)(v19 + 32) = 0;
  if (v20)
  {
    return sub_188B4AC((uint64_t *)v19);
  }
  return result;
}

unsigned char *sub_1720EBC(uint64_t a1)
{
  uint64_t result = sub_18843A4((unsigned char *)(a1 + 16));
  uint64_t v3 = *(unsigned int *)(a1 + 48);
  if ((int)v3 >= 1)
  {
    uint64_t v4 = (uint64_t *)(*(void *)(a1 + 56) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = sub_16CD894(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 48) = 0;
  }
  char v7 = *(unsigned char *)(a1 + 8);
  uint64_t v6 = (uint64_t *)(a1 + 8);
  if (v7)
  {
    return (unsigned char *)sub_188B4AC(v6);
  }
  return result;
}

uint64_t sub_1720F40(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 7) == 0) {
    goto LABEL_6;
  }
  if ((v2 & 1) == 0)
  {
    if ((v2 & 2) == 0) {
      goto LABEL_4;
    }
    goto LABEL_14;
  }
  unint64_t v5 = *(void *)(result + 24) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v5 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v5 = 0;
    *(unsigned char *)(v5 + 23) = 0;
    if ((v2 & 2) != 0) {
      goto LABEL_14;
    }
LABEL_4:
    if ((v2 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  **(unsigned char **)unint64_t v5 = 0;
  *(void *)(v5 + 8) = 0;
  if ((v2 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_14:
  unint64_t v6 = *(void *)(result + 32) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v6 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v6 = 0;
    *(unsigned char *)(v6 + 23) = 0;
    if ((v2 & 4) == 0) {
      goto LABEL_6;
    }
LABEL_5:
    uint64_t result = sub_15B10F0(*(void *)(result + 40));
    goto LABEL_6;
  }
  **(unsigned char **)unint64_t v6 = 0;
  *(void *)(v6 + 8) = 0;
  if ((v2 & 4) != 0) {
    goto LABEL_5;
  }
LABEL_6:
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(unsigned char *)(v3 + 40) = 0;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_1721014(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 24);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 32) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_18543A0(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 24) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  unint64_t v5 = (uint64_t *)(v1 + 8);
  if (v6)
  {
    return sub_188B4AC(v5);
  }
  return result;
}

uint64_t sub_1721090(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  uint64_t v3 = *(unsigned int *)(a1 + 56);
  if ((int)v3 >= 1)
  {
    uint64_t v4 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = sub_17485D0(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 56) = 0;
  }
  if (*(unsigned char *)(a1 + 40)) {
    uint64_t result = sub_16FBBF0(*(void *)(a1 + 72));
  }
  char v7 = *(unsigned char *)(a1 + 8);
  uint64_t v6 = a1 + 8;
  *(_DWORD *)(v6 + 72) = 0;
  *(_DWORD *)(v6 + 32) = 0;
  if (v7)
  {
    return sub_188B4AC((uint64_t *)v6);
  }
  return result;
}

uint64_t sub_172112C(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  int v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 3) != 0)
  {
    if (v3) {
      uint64_t result = (uint64_t)sub_16CD894(*(void *)(a1 + 48));
    }
    if ((v3 & 2) != 0) {
      uint64_t result = sub_1369E6C(*(void *)(a1 + 56));
    }
  }
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t v4 = a1 + 8;
  *(_DWORD *)(v4 + 32) = 0;
  if (v5)
  {
    return sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

uint64_t sub_17211A4(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 3) != 0)
  {
    if ((v2 & 1) == 0) {
      goto LABEL_5;
    }
    unint64_t v3 = *(void *)(result + 24) & 0xFFFFFFFFFFFFFFFELL;
    if ((*(char *)(v3 + 23) & 0x80000000) == 0)
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
LABEL_5:
      if ((v2 & 2) == 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
    **(unsigned char **)unint64_t v3 = 0;
    *(void *)(v3 + 8) = 0;
    if ((v2 & 2) != 0) {
LABEL_6:
    }
      uint64_t result = sub_1703F30(*(void *)(result + 32));
  }
LABEL_7:
  char v5 = *(unsigned char *)(v1 + 8);
  uint64_t v4 = v1 + 8;
  *(_DWORD *)(v4 + 8) = 0;
  if (v5)
  {
    return sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

uint64_t sub_1721238(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  uint64_t v3 = *(unsigned int *)(a1 + 56);
  if ((int)v3 >= 1)
  {
    uint64_t v4 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = sub_1756CD8(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 56) = 0;
  }
  if (*(unsigned char *)(a1 + 40)) {
    uint64_t result = sub_1757D60(*(void *)(a1 + 72));
  }
  char v7 = *(unsigned char *)(a1 + 8);
  uint64_t v6 = a1 + 8;
  *(_DWORD *)(v6 + 72) = 0;
  *(_DWORD *)(v6 + 32) = 0;
  if (v7)
  {
    return sub_188B4AC((uint64_t *)v6);
  }
  return result;
}

uint64_t sub_17212D4(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 24);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 32) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_16BF128(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 24) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = (uint64_t *)(v1 + 8);
  if (v6)
  {
    return sub_188B4AC(v5);
  }
  return result;
}

uint64_t sub_1721350(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  uint64_t v3 = *(unsigned int *)(a1 + 56);
  if ((int)v3 >= 1)
  {
    uint64_t v4 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = sub_15B2C80(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 56) = 0;
  }
  uint64_t v6 = *(unsigned int *)(a1 + 80);
  if ((int)v6 >= 1)
  {
    char v7 = (uint64_t *)(*(void *)(a1 + 88) + 8);
    do
    {
      uint64_t v8 = *v7++;
      uint64_t result = sub_1774884(v8);
      --v6;
    }
    while (v6);
    *(_DWORD *)(a1 + 80) = 0;
  }
  int v9 = *(_DWORD *)(a1 + 40);
  if ((v9 & 0xF) != 0)
  {
    if ((v9 & 1) == 0)
    {
      if ((v9 & 2) == 0) {
        goto LABEL_12;
      }
LABEL_19:
      unint64_t v11 = *(void *)(a1 + 104) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v11 + 23) < 0)
      {
        **(unsigned char **)unint64_t v11 = 0;
        *(void *)(v11 + 8) = 0;
        if ((v9 & 4) != 0) {
          goto LABEL_23;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v11 = 0;
        *(unsigned char *)(v11 + 23) = 0;
        if ((v9 & 4) != 0) {
          goto LABEL_23;
        }
      }
LABEL_13:
      if ((v9 & 8) == 0) {
        goto LABEL_30;
      }
LABEL_27:
      unint64_t v13 = *(void *)(a1 + 120) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v13 + 23) < 0)
      {
        **(unsigned char **)unint64_t v13 = 0;
        *(void *)(v13 + 8) = 0;
      }
      else
      {
        *(unsigned char *)unint64_t v13 = 0;
        *(unsigned char *)(v13 + 23) = 0;
      }
      goto LABEL_30;
    }
    unint64_t v10 = *(void *)(a1 + 96) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v10 + 23) < 0)
    {
      **(unsigned char **)unint64_t v10 = 0;
      *(void *)(v10 + 8) = 0;
      if ((v9 & 2) != 0) {
        goto LABEL_19;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v10 = 0;
      *(unsigned char *)(v10 + 23) = 0;
      if ((v9 & 2) != 0) {
        goto LABEL_19;
      }
    }
LABEL_12:
    if ((v9 & 4) == 0) {
      goto LABEL_13;
    }
LABEL_23:
    unint64_t v12 = *(void *)(a1 + 112) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v12 + 23) < 0)
    {
      **(unsigned char **)unint64_t v12 = 0;
      *(void *)(v12 + 8) = 0;
      if ((v9 & 8) == 0) {
        goto LABEL_30;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v12 = 0;
      *(unsigned char *)(v12 + 23) = 0;
      if ((v9 & 8) == 0) {
        goto LABEL_30;
      }
    }
    goto LABEL_27;
  }
LABEL_30:
  char v15 = *(unsigned char *)(a1 + 8);
  uint64_t v14 = a1 + 8;
  *(_DWORD *)(v14 + 32) = 0;
  if (v15)
  {
    return sub_188B4AC((uint64_t *)v14);
  }
  return result;
}

uint64_t sub_17214D8(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_1784AC8(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  if (*(unsigned char *)(v1 + 16))
  {
    unint64_t v5 = *(void *)(v1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v5 + 23) < 0)
    {
      **(unsigned char **)unint64_t v5 = 0;
      *(void *)(v5 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v5 = 0;
      *(unsigned char *)(v5 + 23) = 0;
    }
  }
  char v7 = *(unsigned char *)(v1 + 8);
  uint64_t v6 = v1 + 8;
  *(_DWORD *)(v6 + 8) = 0;
  if (v7)
  {
    return sub_188B4AC((uint64_t *)v6);
  }
  return result;
}

uint64_t sub_1721588(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  uint64_t v3 = *(unsigned int *)(a1 + 56);
  if ((int)v3 >= 1)
  {
    uint64_t v4 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = sub_1766C8C(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 56) = 0;
  }
  if (*(unsigned char *)(a1 + 40)) {
    uint64_t result = sub_1765DC0(*(void *)(a1 + 72));
  }
  char v7 = *(unsigned char *)(a1 + 8);
  uint64_t v6 = a1 + 8;
  *(void *)(v6 + 72) = 0;
  *(_DWORD *)(v6 + 32) = 0;
  if (v7)
  {
    return sub_188B4AC((uint64_t *)v6);
  }
  return result;
}

uint64_t sub_1721624(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  uint64_t v3 = *(unsigned int *)(a1 + 56);
  if ((int)v3 >= 1)
  {
    uint64_t v4 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = sub_1751F40(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 56) = 0;
  }
  uint64_t v6 = *(unsigned int *)(a1 + 80);
  if ((int)v6 >= 1)
  {
    char v7 = (uint64_t *)(*(void *)(a1 + 88) + 8);
    do
    {
      uint64_t v8 = *v7++;
      uint64_t result = (uint64_t)sub_16CD894(v8);
      --v6;
    }
    while (v6);
    *(_DWORD *)(a1 + 80) = 0;
  }
  if ((*(unsigned char *)(a1 + 40) & 3) != 0) {
    *(void *)(a1 + 96) = 0;
  }
  char v10 = *(unsigned char *)(a1 + 8);
  uint64_t v9 = a1 + 8;
  *(_DWORD *)(v9 + 32) = 0;
  if (v10)
  {
    return sub_188B4AC((uint64_t *)v9);
  }
  return result;
}

uint64_t sub_17216E4(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  int v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 0xF) == 0) {
    goto LABEL_7;
  }
  if ((v3 & 1) == 0)
  {
    if ((v3 & 2) == 0) {
      goto LABEL_4;
    }
LABEL_12:
    uint64_t result = sub_15B2C80(*(void *)(a1 + 56));
    if ((v3 & 4) == 0)
    {
LABEL_5:
      if ((v3 & 8) == 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
    goto LABEL_13;
  }
  uint64_t result = sub_15B2C80(*(void *)(a1 + 48));
  if ((v3 & 2) != 0) {
    goto LABEL_12;
  }
LABEL_4:
  if ((v3 & 4) == 0) {
    goto LABEL_5;
  }
LABEL_13:
  uint64_t result = sub_15B2C80(*(void *)(a1 + 64));
  if ((v3 & 8) != 0) {
LABEL_6:
  }
    uint64_t result = sub_16BF128(*(void *)(a1 + 72));
LABEL_7:
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t v4 = a1 + 8;
  *(_DWORD *)(v4 + 72) = 0;
  *(_DWORD *)(v4 + 32) = 0;
  if (v5)
  {
    return sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

unsigned char *sub_1721788(uint64_t a1)
{
  uint64_t result = sub_18843A4((unsigned char *)(a1 + 16));
  if (*(unsigned char *)(a1 + 40)) {
    uint64_t result = sub_16CD894(*(void *)(a1 + 48));
  }
  char v4 = *(unsigned char *)(a1 + 8);
  uint64_t v3 = a1 + 8;
  *(_DWORD *)(v3 + 32) = 0;
  if (v4)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_17217EC(uint64_t a1)
{
  sub_18843A4((unsigned char *)(a1 + 16));
  uint64_t result = sub_188CC00(a1 + 40);
  uint64_t v3 = *(unsigned int *)(a1 + 72);
  if ((int)v3 >= 1)
  {
    char v4 = (uint64_t *)(*(void *)(a1 + 80) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = sub_1750490(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 72) = 0;
  }
  uint64_t v6 = *(unsigned int *)(a1 + 96);
  if ((int)v6 >= 1)
  {
    char v7 = (uint64_t *)(*(void *)(a1 + 104) + 8);
    do
    {
      uint64_t v8 = *v7++;
      uint64_t result = sub_1750490(v8);
      --v6;
    }
    while (v6);
    *(_DWORD *)(a1 + 96) = 0;
  }
  char v10 = *(unsigned char *)(a1 + 8);
  uint64_t v9 = (uint64_t *)(a1 + 8);
  if (v10)
  {
    return sub_188B4AC(v9);
  }
  return result;
}

unsigned char *sub_17218A0(uint64_t a1)
{
  uint64_t result = sub_18843A4((unsigned char *)(a1 + 16));
  uint64_t v3 = *(unsigned int *)(a1 + 56);
  if ((int)v3 >= 1)
  {
    char v4 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = sub_16CD894(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 56) = 0;
  }
  if (*(unsigned char *)(a1 + 40)) {
    uint64_t result = sub_16CD894(*(void *)(a1 + 72));
  }
  char v7 = *(unsigned char *)(a1 + 8);
  uint64_t v6 = a1 + 8;
  *(_DWORD *)(v6 + 32) = 0;
  if (v7)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v6);
  }
  return result;
}

unsigned char *sub_1721938(uint64_t a1)
{
  uint64_t result = sub_18843A4((unsigned char *)(a1 + 16));
  uint64_t v3 = *(unsigned int *)(a1 + 56);
  if ((int)v3 >= 1)
  {
    char v4 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = sub_16CD894(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 56) = 0;
  }
  uint64_t v6 = *(unsigned int *)(a1 + 80);
  if ((int)v6 >= 1)
  {
    char v7 = (uint64_t *)(*(void *)(a1 + 88) + 8);
    do
    {
      uint64_t v8 = *v7++;
      uint64_t result = sub_16CD894(v8);
      --v6;
    }
    while (v6);
    *(_DWORD *)(a1 + 80) = 0;
  }
  uint64_t v9 = *(unsigned int *)(a1 + 104);
  if ((int)v9 >= 1)
  {
    char v10 = (uint64_t *)(*(void *)(a1 + 112) + 8);
    do
    {
      uint64_t v11 = *v10++;
      uint64_t result = sub_16CD894(v11);
      --v9;
    }
    while (v9);
    *(_DWORD *)(a1 + 104) = 0;
  }
  char v13 = *(unsigned char *)(a1 + 8);
  uint64_t v12 = a1 + 8;
  *(void *)(v12 + 112) = 0;
  *(_DWORD *)(v12 + 32) = 0;
  if (v13)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v12);
  }
  return result;
}

uint64_t sub_1721A14(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  int v3 = *(_DWORD *)(a1 + 40);
  if (v3) {
    uint64_t result = sub_1369E6C(*(void *)(a1 + 48));
  }
  if ((v3 & 0x1E) != 0)
  {
    *(void *)(a1 + 56) = 0;
    *(void *)(a1 + 64) = 0;
  }
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t v4 = a1 + 8;
  *(_DWORD *)(v4 + 32) = 0;
  if (v5)
  {
    return sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

unsigned char *sub_1721A84(uint64_t a1)
{
  uint64_t result = sub_18843A4((unsigned char *)(a1 + 16));
  if (*(unsigned char *)(a1 + 40))
  {
    unint64_t v3 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)unint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t v4 = a1 + 8;
  *(_DWORD *)(v4 + 32) = 0;
  if (v5)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

char *sub_1721B08(uint64_t a1, char *a2, int32x2_t *a3)
{
  v214 = a2;
  if (sub_11947B8((uint64_t)a3, &v214, a3[11].i32[1])) {
    return v214;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    char v7 = v214 + 1;
    unsigned int v8 = *v214;
    if (*v214 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v10 = sub_188C180((uint64_t)v214, v9 - 128);
        unsigned int v8 = v11;
        char v7 = (char *)v10;
      }
      else
      {
        char v7 = v214 + 2;
      }
    }
    v214 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 10) {
          goto LABEL_609;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        uint64_t v12 = *(void *)(a1 + 64);
        if (!v12)
        {
          char v13 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            char v13 = (void *)*v13;
          }
          uint64_t v12 = sub_1786348((uint64_t)v13);
          *(void *)(a1 + 64) = v12;
          char v7 = v214;
        }
        uint64_t v14 = (char *)sub_15496AC(a3, v12, (unsigned __int8 *)v7);
        goto LABEL_618;
      case 2u:
        if (v8 != 18) {
          goto LABEL_609;
        }
        *(_DWORD *)(a1 + 40) |= 2u;
        uint64_t v15 = *(void *)(a1 + 72);
        if (!v15)
        {
          char v16 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            char v16 = (void *)*v16;
          }
          uint64_t v15 = sub_178672C((uint64_t)v16);
          *(void *)(a1 + 72) = v15;
          char v7 = v214;
        }
        uint64_t v14 = sub_154973C(a3, v15, (unsigned __int8 *)v7);
        goto LABEL_618;
      case 3u:
        if (v8 != 26) {
          goto LABEL_609;
        }
        *(_DWORD *)(a1 + 40) |= 4u;
        uint64_t v17 = *(void *)(a1 + 80);
        if (!v17)
        {
          int v18 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            int v18 = (void *)*v18;
          }
          uint64_t v17 = sub_17867E4((uint64_t)v18);
          *(void *)(a1 + 80) = v17;
          char v7 = v214;
        }
        uint64_t v14 = sub_1723D64(a3, v17, (unsigned __int8 *)v7);
        goto LABEL_618;
      case 4u:
        if (v8 != 34) {
          goto LABEL_609;
        }
        *(_DWORD *)(a1 + 40) |= 8u;
        uint64_t v19 = *(void *)(a1 + 88);
        if (!v19)
        {
          char v20 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            char v20 = (void *)*v20;
          }
          uint64_t v19 = sub_17868E0((uint64_t)v20);
          *(void *)(a1 + 88) = v19;
          char v7 = v214;
        }
        uint64_t v14 = sub_154985C(a3, v19, (unsigned __int8 *)v7);
        goto LABEL_618;
      case 5u:
        if (v8 != 42) {
          goto LABEL_609;
        }
        *(_DWORD *)(a1 + 40) |= 0x10u;
        uint64_t v21 = *(void *)(a1 + 96);
        if (!v21)
        {
          uint64_t v22 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v22 = (void *)*v22;
          }
          uint64_t v21 = sub_1786AA0((uint64_t)v22);
          *(void *)(a1 + 96) = v21;
          char v7 = v214;
        }
        uint64_t v14 = sub_1723DF4(a3, v21, (unsigned __int8 *)v7);
        goto LABEL_618;
      case 6u:
        if (v8 != 50) {
          goto LABEL_609;
        }
        *(_DWORD *)(a1 + 40) |= 0x20u;
        uint64_t v23 = *(void *)(a1 + 104);
        if (!v23)
        {
          uint64_t v24 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v24 = (void *)*v24;
          }
          uint64_t v23 = sub_1788078((uint64_t)v24);
          *(void *)(a1 + 104) = v23;
          char v7 = v214;
        }
        uint64_t v14 = sub_16E5344(a3, v23, (unsigned __int8 *)v7);
        goto LABEL_618;
      case 7u:
        if (v8 != 58) {
          goto LABEL_609;
        }
        *(_DWORD *)(a1 + 40) |= 0x40u;
        uint64_t v25 = *(void **)(a1 + 112);
        if (!v25)
        {
          uint64_t v26 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v26 = (void *)*v26;
          }
          uint64_t v25 = sub_17881B4((uint64_t)v26);
          *(void *)(a1 + 112) = v25;
          char v7 = v214;
        }
        uint64_t v14 = (char *)sub_1723E84(a3, (uint64_t)v25, (unsigned __int8 *)v7);
        goto LABEL_618;
      case 8u:
        if (v8 != 66) {
          goto LABEL_609;
        }
        *(_DWORD *)(a1 + 40) |= 0x80u;
        uint64_t v27 = *(void **)(a1 + 120);
        if (!v27)
        {
          uint64_t v28 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v28 = (void *)*v28;
          }
          uint64_t v27 = sub_1788710((uint64_t)v28);
          *(void *)(a1 + 120) = v27;
          char v7 = v214;
        }
        uint64_t v14 = (char *)sub_1550A68(a3, (uint64_t)v27, (unsigned __int8 *)v7);
        goto LABEL_618;
      case 9u:
        if (v8 != 74) {
          goto LABEL_609;
        }
        *(_DWORD *)(a1 + 40) |= 0x100u;
        uint64_t v29 = *(void **)(a1 + 128);
        if (!v29)
        {
          uint64_t v30 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v30 = (void *)*v30;
          }
          uint64_t v29 = sub_1788574((uint64_t)v30);
          *(void *)(a1 + 128) = v29;
          char v7 = v214;
        }
        uint64_t v14 = sub_12DE6D0(a3, (uint64_t)v29, (unsigned __int8 *)v7);
        goto LABEL_618;
      case 0xAu:
        if (v8 != 82) {
          goto LABEL_609;
        }
        *(_DWORD *)(a1 + 40) |= 0x200u;
        uint64_t v31 = *(void **)(a1 + 136);
        if (!v31)
        {
          uint64_t v32 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v32 = (void *)*v32;
          }
          uint64_t v31 = sub_1787760((uint64_t)v32);
          *(void *)(a1 + 136) = v31;
          char v7 = v214;
        }
        uint64_t v14 = (char *)sub_154946C(a3, (uint64_t)v31, (unsigned __int8 *)v7);
        goto LABEL_618;
      case 0xBu:
        if (v8 != 90) {
          goto LABEL_609;
        }
        *(_DWORD *)(a1 + 40) |= 0x400u;
        uint64_t v33 = *(void *)(a1 + 144);
        if (!v33)
        {
          uint64_t v34 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v34 = (void *)*v34;
          }
          uint64_t v33 = sub_178734C((uint64_t)v34);
          *(void *)(a1 + 144) = v33;
          char v7 = v214;
        }
        uint64_t v14 = sub_154958C(a3, v33, (unsigned __int8 *)v7);
        goto LABEL_618;
      case 0xCu:
        if (v8 != 98) {
          goto LABEL_609;
        }
        *(_DWORD *)(a1 + 40) |= 0x800u;
        uint64_t v35 = *(void *)(a1 + 152);
        if (!v35)
        {
          uint64_t v36 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v36 = (void *)*v36;
          }
          uint64_t v35 = sub_1788880((uint64_t)v36);
          *(void *)(a1 + 152) = v35;
          char v7 = v214;
        }
        uint64_t v14 = sub_1723F14(a3, v35, (unsigned __int8 *)v7);
        goto LABEL_618;
      case 0xDu:
        if (v8 != 106) {
          goto LABEL_609;
        }
        *(_DWORD *)(a1 + 40) |= 0x1000u;
        uint64_t v37 = *(void *)(a1 + 160);
        if (!v37)
        {
          uint64_t v38 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v38 = (void *)*v38;
          }
          uint64_t v37 = sub_17913DC((uint64_t)v38);
          *(void *)(a1 + 160) = v37;
          char v7 = v214;
        }
        uint64_t v14 = sub_130C264(a3, v37, (unsigned __int8 *)v7);
        goto LABEL_618;
      case 0xEu:
        if (v8 != 114) {
          goto LABEL_609;
        }
        *(_DWORD *)(a1 + 40) |= 0x2000u;
        uint64_t v39 = *(void **)(a1 + 168);
        if (!v39)
        {
          v40 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            v40 = (void *)*v40;
          }
          uint64_t v39 = sub_1788A04((uint64_t)v40);
          *(void *)(a1 + 168) = v39;
          char v7 = v214;
        }
        uint64_t v14 = (char *)sub_1723FA4(a3, (uint64_t)v39, (unsigned __int8 *)v7);
        goto LABEL_618;
      case 0xFu:
        if (v8 != 122) {
          goto LABEL_609;
        }
        *(_DWORD *)(a1 + 40) |= 0x4000u;
        uint64_t v41 = *(void *)(a1 + 176);
        if (v41) {
          goto LABEL_446;
        }
        uint64_t v42 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          uint64_t v42 = (void *)*v42;
        }
        uint64_t v41 = sub_1788B18((uint64_t)v42);
        *(void *)(a1 + 176) = v41;
        goto LABEL_445;
      case 0x10u:
        if (v8 != 130) {
          goto LABEL_609;
        }
        *(_DWORD *)(a1 + 40) |= 0x8000u;
        v43 = *(void **)(a1 + 184);
        if (!v43)
        {
          uint64_t v44 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v44 = (void *)*v44;
          }
          v43 = sub_1478C60((uint64_t)v44);
          *(void *)(a1 + 184) = v43;
          char v7 = v214;
        }
        uint64_t v14 = sub_129760C(a3, (uint64_t)v43, (unsigned __int8 *)v7);
        goto LABEL_618;
      case 0x14u:
        if (v8 != 162) {
          goto LABEL_609;
        }
        *(_DWORD *)(a1 + 40) |= 0x10000u;
        uint64_t v45 = *(void *)(a1 + 192);
        if (!v45)
        {
          uint64_t v46 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v46 = (void *)*v46;
          }
          uint64_t v45 = sub_17878EC((uint64_t)v46);
          *(void *)(a1 + 192) = v45;
          char v7 = v214;
        }
        uint64_t v14 = sub_17240C4(a3, v45, (unsigned __int8 *)v7);
        goto LABEL_618;
      case 0x15u:
        if (v8 != 170) {
          goto LABEL_609;
        }
        *(_DWORD *)(a1 + 40) |= 0x20000u;
        uint64_t v47 = *(void **)(a1 + 200);
        if (!v47)
        {
          uint64_t v48 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v48 = (void *)*v48;
          }
          uint64_t v47 = sub_1788D20((uint64_t)v48);
          *(void *)(a1 + 200) = v47;
          char v7 = v214;
        }
        uint64_t v14 = sub_1724154(a3, (uint64_t)v47, (unsigned __int8 *)v7);
        goto LABEL_618;
      case 0x16u:
        if (v8 != 178) {
          goto LABEL_609;
        }
        *(_DWORD *)(a1 + 40) |= 0x40000u;
        uint64_t v49 = *(void **)(a1 + 208);
        if (!v49)
        {
          uint64_t v50 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v50 = (void *)*v50;
          }
          uint64_t v49 = sub_1788E34((uint64_t)v50);
          *(void *)(a1 + 208) = v49;
          char v7 = v214;
        }
        uint64_t v14 = (char *)sub_153C410(a3, (uint64_t)v49, (unsigned __int8 *)v7);
        goto LABEL_618;
      case 0x17u:
        if (v8 != 186) {
          goto LABEL_609;
        }
        *(_DWORD *)(a1 + 40) |= 0x80000u;
        uint64_t v51 = *(void *)(a1 + 216);
        if (!v51)
        {
          v52 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            v52 = (void *)*v52;
          }
          uint64_t v51 = sub_1789374((uint64_t)v52);
          *(void *)(a1 + 216) = v51;
          char v7 = v214;
        }
        uint64_t v14 = (char *)sub_153CB34(a3, v51, (unsigned __int8 *)v7);
        goto LABEL_618;
      case 0x18u:
        if (v8 != 194) {
          goto LABEL_609;
        }
        *(_DWORD *)(a1 + 40) |= 0x100000u;
        uint64_t v53 = *(void *)(a1 + 224);
        if (!v53)
        {
          int v54 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            int v54 = (void *)*v54;
          }
          uint64_t v53 = sub_1787A04((uint64_t)v54);
          *(void *)(a1 + 224) = v53;
          char v7 = v214;
        }
        uint64_t v14 = (char *)sub_154961C(a3, v53, (unsigned __int8 *)v7);
        goto LABEL_618;
      case 0x19u:
        if (v8 != 202) {
          goto LABEL_609;
        }
        *(_DWORD *)(a1 + 40) |= 0x200000u;
        uint64_t v55 = *(void *)(a1 + 232);
        if (!v55)
        {
          char v56 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            char v56 = (void *)*v56;
          }
          uint64_t v55 = sub_1787FA4((uint64_t)v56);
          *(void *)(a1 + 232) = v55;
          char v7 = v214;
        }
        uint64_t v14 = (char *)sub_153D258(a3, v55, (unsigned __int8 *)v7);
        goto LABEL_618;
      case 0x1Au:
        if (v8 != 210) {
          goto LABEL_609;
        }
        *(_DWORD *)(a1 + 40) |= 0x400000u;
        uint64_t v57 = *(void *)(a1 + 240);
        if (!v57)
        {
          unint64_t v58 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            unint64_t v58 = (void *)*v58;
          }
          uint64_t v57 = sub_17894DC((uint64_t)v58);
          *(void *)(a1 + 240) = v57;
          char v7 = v214;
        }
        uint64_t v14 = (char *)sub_15435C4(a3, v57, (unsigned __int8 *)v7);
        goto LABEL_618;
      case 0x1Bu:
        if (v8 != 218) {
          goto LABEL_609;
        }
        *(_DWORD *)(a1 + 40) |= 0x800000u;
        uint64_t v59 = *(void *)(a1 + 248);
        if (!v59)
        {
          uint64_t v60 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v60 = (void *)*v60;
          }
          uint64_t v59 = sub_178760C((uint64_t)v60);
          *(void *)(a1 + 248) = v59;
          char v7 = v214;
        }
        uint64_t v14 = (char *)sub_15494FC(a3, v59, (unsigned __int8 *)v7);
        goto LABEL_618;
      case 0x1Cu:
        if (v8 != 226) {
          goto LABEL_609;
        }
        *(_DWORD *)(a1 + 40) |= 0x1000000u;
        v61 = *(void **)(a1 + 256);
        if (!v61)
        {
          v62 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            v62 = (void *)*v62;
          }
          v61 = sub_1789834((uint64_t)v62);
          *(void *)(a1 + 256) = v61;
          char v7 = v214;
        }
        uint64_t v14 = (char *)sub_17241E4(a3, (uint64_t)v61, (unsigned __int8 *)v7);
        goto LABEL_618;
      case 0x1Du:
        if (v8 != 234) {
          goto LABEL_609;
        }
        *(_DWORD *)(a1 + 40) |= 0x2000000u;
        uint64_t v63 = *(void *)(a1 + 264);
        if (!v63)
        {
          v64 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            v64 = (void *)*v64;
          }
          uint64_t v63 = sub_17899BC((uint64_t)v64);
          *(void *)(a1 + 264) = v63;
          char v7 = v214;
        }
        uint64_t v14 = sub_1724274(a3, v63, (unsigned __int8 *)v7);
        goto LABEL_618;
      case 0x1Eu:
        if (v8 != 242) {
          goto LABEL_609;
        }
        *(_DWORD *)(a1 + 40) |= 0x4000000u;
        uint64_t v65 = *(void *)(a1 + 272);
        if (!v65)
        {
          v66 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            v66 = (void *)*v66;
          }
          uint64_t v65 = sub_1789FF4((uint64_t)v66);
          *(void *)(a1 + 272) = v65;
          char v7 = v214;
        }
        uint64_t v14 = (char *)sub_1724304(a3, v65, (unsigned __int8 *)v7);
        goto LABEL_618;
      case 0x1Fu:
        if (v8 != 250) {
          goto LABEL_609;
        }
        *(_DWORD *)(a1 + 40) |= 0x8000000u;
        uint64_t v67 = *(void **)(a1 + 280);
        if (!v67)
        {
          v68 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            v68 = (void *)*v68;
          }
          uint64_t v67 = sub_1786B58((uint64_t)v68);
          *(void *)(a1 + 280) = v67;
          char v7 = v214;
        }
        uint64_t v14 = (char *)sub_119BB18(a3, (uint64_t)v67, (unsigned __int8 *)v7);
        goto LABEL_618;
      case 0x20u:
        if (v8 != 2) {
          goto LABEL_609;
        }
        *(_DWORD *)(a1 + 40) |= 0x10000000u;
        uint64_t v69 = *(void *)(a1 + 288);
        if (!v69)
        {
          uint64_t v70 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v70 = (void *)*v70;
          }
          uint64_t v69 = sub_1786CF4((uint64_t)v70);
          *(void *)(a1 + 288) = v69;
          char v7 = v214;
        }
        uint64_t v14 = sub_1724394(a3, v69, (unsigned __int8 *)v7);
        goto LABEL_618;
      case 0x21u:
        if (v8 != 10) {
          goto LABEL_609;
        }
        *(_DWORD *)(a1 + 40) |= 0x20000000u;
        uint64_t v71 = *(void *)(a1 + 296);
        if (!v71)
        {
          uint64_t v72 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v72 = (void *)*v72;
          }
          uint64_t v71 = sub_1786E6C((uint64_t)v72);
          *(void *)(a1 + 296) = v71;
          char v7 = v214;
        }
        uint64_t v14 = sub_1724424(a3, v71, (unsigned __int8 *)v7);
        goto LABEL_618;
      case 0x22u:
        if (v8 != 18) {
          goto LABEL_609;
        }
        *(_DWORD *)(a1 + 40) |= 0x40000000u;
        v73 = *(void **)(a1 + 304);
        if (!v73)
        {
          v74 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            v74 = (void *)*v74;
          }
          v73 = sub_1786F84((uint64_t)v74);
          *(void *)(a1 + 304) = v73;
          char v7 = v214;
        }
        uint64_t v14 = sub_17244B4(a3, (uint64_t)v73, (unsigned __int8 *)v7);
        goto LABEL_618;
      case 0x24u:
        if (v8 != 34) {
          goto LABEL_609;
        }
        *(_DWORD *)(a1 + 40) |= 0x80000000;
        v75 = *(void **)(a1 + 312);
        if (!v75)
        {
          uint64_t v76 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v76 = (void *)*v76;
          }
          v75 = sub_17882F0((uint64_t)v76);
          *(void *)(a1 + 312) = v75;
          char v7 = v214;
        }
        uint64_t v14 = (char *)sub_1724544(a3, (uint64_t)v75, (unsigned __int8 *)v7);
        goto LABEL_618;
      case 0x25u:
        if (v8 != 42) {
          goto LABEL_609;
        }
        *(_DWORD *)(a1 + 44) |= 1u;
        uint64_t v77 = *(void **)(a1 + 320);
        if (!v77)
        {
          uint64_t v78 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v78 = (void *)*v78;
          }
          uint64_t v77 = sub_178A2E0((uint64_t)v78);
          *(void *)(a1 + 320) = v77;
          char v7 = v214;
        }
        uint64_t v14 = (char *)sub_17245D4(a3, (uint64_t)v77, (unsigned __int8 *)v7);
        goto LABEL_618;
      case 0x26u:
        if (v8 != 50) {
          goto LABEL_609;
        }
        *(_DWORD *)(a1 + 44) |= 2u;
        uint64_t v79 = *(void **)(a1 + 328);
        if (!v79)
        {
          v80 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            v80 = (void *)*v80;
          }
          uint64_t v79 = sub_178A3DC((uint64_t)v80);
          *(void *)(a1 + 328) = v79;
          char v7 = v214;
        }
        uint64_t v14 = (char *)sub_1724664(a3, (uint64_t)v79, (unsigned __int8 *)v7);
        goto LABEL_618;
      case 0x27u:
        if (v8 != 58) {
          goto LABEL_609;
        }
        *(_DWORD *)(a1 + 44) |= 4u;
        v81 = *(void **)(a1 + 336);
        if (!v81)
        {
          v82 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            v82 = (void *)*v82;
          }
          v81 = sub_178A4F8((uint64_t)v82);
          *(void *)(a1 + 336) = v81;
          char v7 = v214;
        }
        uint64_t v14 = (char *)sub_17246F4(a3, (uint64_t)v81, (unsigned __int8 *)v7);
        goto LABEL_618;
      case 0x28u:
        if (v8 != 66) {
          goto LABEL_609;
        }
        *(_DWORD *)(a1 + 44) |= 8u;
        uint64_t v83 = *(void *)(a1 + 344);
        if (!v83)
        {
          v84 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            v84 = (void *)*v84;
          }
          uint64_t v83 = sub_178A628((uint64_t)v84);
          *(void *)(a1 + 344) = v83;
          char v7 = v214;
        }
        uint64_t v14 = sub_1724784(a3, v83, (unsigned __int8 *)v7);
        goto LABEL_618;
      case 0x29u:
        if (v8 != 74) {
          goto LABEL_609;
        }
        *(_DWORD *)(a1 + 44) |= 0x10u;
        uint64_t v85 = *(void *)(a1 + 352);
        if (!v85)
        {
          v86 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            v86 = (void *)*v86;
          }
          uint64_t v85 = sub_1791CF0((uint64_t)v86);
          *(void *)(a1 + 352) = v85;
          char v7 = v214;
        }
        uint64_t v14 = sub_1724814(a3, v85, (unsigned __int8 *)v7);
        goto LABEL_618;
      case 0x2Au:
        if (v8 != 82) {
          goto LABEL_609;
        }
        *(_DWORD *)(a1 + 44) |= 0x20u;
        uint64_t v87 = *(void *)(a1 + 360);
        if (!v87)
        {
          uint64_t v88 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v88 = (void *)*v88;
          }
          uint64_t v87 = sub_178A700((uint64_t)v88);
          *(void *)(a1 + 360) = v87;
          char v7 = v214;
        }
        uint64_t v14 = sub_17248A4(a3, v87, (unsigned __int8 *)v7);
        goto LABEL_618;
      case 0x2Bu:
        if (v8 != 90) {
          goto LABEL_609;
        }
        *(_DWORD *)(a1 + 44) |= 0x40u;
        uint64_t v89 = *(void **)(a1 + 368);
        if (!v89)
        {
          uint64_t v90 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v90 = (void *)*v90;
          }
          uint64_t v89 = sub_178AB3C((uint64_t)v90);
          *(void *)(a1 + 368) = v89;
          char v7 = v214;
        }
        uint64_t v14 = (char *)sub_1724934(a3, (uint64_t)v89, (unsigned __int8 *)v7);
        goto LABEL_618;
      case 0x2Cu:
        if (v8 != 98) {
          goto LABEL_609;
        }
        *(_DWORD *)(a1 + 44) |= 0x80u;
        uint64_t v91 = *(void **)(a1 + 376);
        if (!v91)
        {
          v92 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            v92 = (void *)*v92;
          }
          uint64_t v91 = sub_178AC3C((uint64_t)v92);
          *(void *)(a1 + 376) = v91;
          char v7 = v214;
        }
        uint64_t v14 = sub_17249C4(a3, (uint64_t)v91, (unsigned __int8 *)v7);
        goto LABEL_618;
      case 0x2Du:
        if (v8 != 106) {
          goto LABEL_609;
        }
        *(_DWORD *)(a1 + 44) |= 0x100u;
        v93 = *(void **)(a1 + 384);
        if (!v93)
        {
          uint64_t v94 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v94 = (void *)*v94;
          }
          v93 = sub_178AD2C((uint64_t)v94);
          *(void *)(a1 + 384) = v93;
          char v7 = v214;
        }
        uint64_t v14 = (char *)sub_1724A54(a3, (uint64_t)v93, (unsigned __int8 *)v7);
        goto LABEL_618;
      case 0x2Eu:
        if (v8 != 114) {
          goto LABEL_609;
        }
        *(_DWORD *)(a1 + 44) |= 0x200u;
        uint64_t v95 = *(void *)(a1 + 392);
        if (!v95)
        {
          uint64_t v96 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v96 = (void *)*v96;
          }
          uint64_t v95 = sub_178A814((uint64_t)v96);
          *(void *)(a1 + 392) = v95;
          char v7 = v214;
        }
        uint64_t v14 = sub_1724AE4(a3, v95, (unsigned __int8 *)v7);
        goto LABEL_618;
      case 0x2Fu:
        if (v8 != 122) {
          goto LABEL_609;
        }
        *(_DWORD *)(a1 + 44) |= 0x400u;
        uint64_t v97 = *(void *)(a1 + 400);
        if (!v97)
        {
          v98 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            v98 = (void *)*v98;
          }
          uint64_t v97 = sub_178A92C((uint64_t)v98);
          *(void *)(a1 + 400) = v97;
          char v7 = v214;
        }
        uint64_t v14 = sub_1724B74(a3, v97, (unsigned __int8 *)v7);
        goto LABEL_618;
      case 0x30u:
        if (v8 != 130) {
          goto LABEL_609;
        }
        *(_DWORD *)(a1 + 44) |= 0x800u;
        uint64_t v99 = *(void *)(a1 + 408);
        if (!v99)
        {
          v100 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            v100 = (void *)*v100;
          }
          uint64_t v99 = sub_185F34C((uint64_t)v100);
          *(void *)(a1 + 408) = v99;
          char v7 = v214;
        }
        uint64_t v14 = sub_1724C04(a3, v99, (unsigned __int8 *)v7);
        goto LABEL_618;
      case 0x31u:
        if (v8 != 138) {
          goto LABEL_609;
        }
        *(_DWORD *)(a1 + 44) |= 0x1000u;
        uint64_t v101 = *(void *)(a1 + 416);
        if (!v101)
        {
          v102 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            v102 = (void *)*v102;
          }
          uint64_t v101 = sub_178AA20((uint64_t)v102);
          *(void *)(a1 + 416) = v101;
          char v7 = v214;
        }
        uint64_t v14 = sub_1724C94(a3, v101, (unsigned __int8 *)v7);
        goto LABEL_618;
      case 0x32u:
        if (v8 != 146) {
          goto LABEL_609;
        }
        *(_DWORD *)(a1 + 44) |= 0x2000u;
        uint64_t v103 = *(void *)(a1 + 424);
        if (!v103)
        {
          v104 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            v104 = (void *)*v104;
          }
          uint64_t v103 = sub_178A150((uint64_t)v104);
          *(void *)(a1 + 424) = v103;
          char v7 = v214;
        }
        uint64_t v14 = sub_1724D24(a3, v103, (unsigned __int8 *)v7);
        goto LABEL_618;
      case 0x33u:
        if (v8 != 154) {
          goto LABEL_609;
        }
        *(_DWORD *)(a1 + 44) |= 0x4000u;
        uint64_t v105 = *(void *)(a1 + 432);
        if (!v105)
        {
          v106 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            v106 = (void *)*v106;
          }
          uint64_t v105 = sub_178A208((uint64_t)v106);
          *(void *)(a1 + 432) = v105;
          char v7 = v214;
        }
        uint64_t v14 = sub_1724DB4(a3, v105, (unsigned __int8 *)v7);
        goto LABEL_618;
      case 0x34u:
        if (v8 != 162) {
          goto LABEL_609;
        }
        *(_DWORD *)(a1 + 44) |= 0x8000u;
        uint64_t v107 = *(void *)(a1 + 440);
        if (!v107)
        {
          v108 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            v108 = (void *)*v108;
          }
          uint64_t v107 = sub_17887C8((uint64_t)v108);
          *(void *)(a1 + 440) = v107;
          char v7 = v214;
        }
        uint64_t v14 = sub_1724E44(a3, v107, (unsigned __int8 *)v7);
        goto LABEL_618;
      case 0x35u:
        if (v8 != 170) {
          goto LABEL_609;
        }
        *(_DWORD *)(a1 + 44) |= 0x10000u;
        v109 = *(void **)(a1 + 448);
        if (!v109)
        {
          v110 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            v110 = (void *)*v110;
          }
          v109 = sub_17883A8((uint64_t)v110);
          *(void *)(a1 + 448) = v109;
          char v7 = v214;
        }
        uint64_t v14 = (char *)sub_1708E90(a3, (uint64_t)v109, (unsigned __int8 *)v7);
        goto LABEL_618;
      case 0x36u:
        if (v8 != 178) {
          goto LABEL_609;
        }
        *(_DWORD *)(a1 + 44) |= 0x20000u;
        uint64_t v111 = *(void *)(a1 + 456);
        if (v111) {
          goto LABEL_403;
        }
        v112 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          v112 = (void *)*v112;
        }
        uint64_t v111 = sub_12BB9E8((uint64_t)v112);
        *(void *)(a1 + 456) = v111;
        goto LABEL_402;
      case 0x37u:
        if (v8 != 186) {
          goto LABEL_609;
        }
        *(_DWORD *)(a1 + 44) |= 0x40000u;
        uint64_t v113 = *(void *)(a1 + 464);
        if (!v113)
        {
          v114 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            v114 = (void *)*v114;
          }
          uint64_t v113 = sub_1854CC4((uint64_t)v114);
          *(void *)(a1 + 464) = v113;
          char v7 = v214;
        }
        uint64_t v14 = sub_12E00E8(a3, v113, (unsigned __int8 *)v7);
        goto LABEL_618;
      case 0x38u:
        if (v8 != 194) {
          goto LABEL_609;
        }
        *(_DWORD *)(a1 + 44) |= 0x80000u;
        v115 = *(void **)(a1 + 472);
        if (!v115)
        {
          v116 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            v116 = (void *)*v116;
          }
          v115 = sub_178AF30((uint64_t)v116);
          *(void *)(a1 + 472) = v115;
          char v7 = v214;
        }
        uint64_t v14 = sub_1724F64(a3, (uint64_t)v115, (unsigned __int8 *)v7);
        goto LABEL_618;
      case 0x39u:
        if (v8 != 202) {
          goto LABEL_609;
        }
        *(_DWORD *)(a1 + 44) |= 0x100000u;
        uint64_t v117 = *(void *)(a1 + 480);
        if (!v117)
        {
          v118 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            v118 = (void *)*v118;
          }
          uint64_t v117 = sub_1786674((uint64_t)v118);
          *(void *)(a1 + 480) = v117;
          char v7 = v214;
        }
        uint64_t v14 = (char *)sub_1724FF4(a3, v117, (unsigned __int8 *)v7);
        goto LABEL_618;
      case 0x3Au:
        if (v8 != 210) {
          goto LABEL_609;
        }
        *(_DWORD *)(a1 + 44) |= 0x200000u;
        uint64_t v119 = *(void *)(a1 + 488);
        if (!v119)
        {
          v120 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            v120 = (void *)*v120;
          }
          uint64_t v119 = sub_178B0F0((uint64_t)v120);
          *(void *)(a1 + 488) = v119;
          char v7 = v214;
        }
        uint64_t v14 = sub_1725084(a3, v119, (unsigned __int8 *)v7);
        goto LABEL_618;
      case 0x3Bu:
        if (v8 != 218) {
          goto LABEL_609;
        }
        *(_DWORD *)(a1 + 44) |= 0x400000u;
        v121 = *(void **)(a1 + 496);
        if (!v121)
        {
          v122 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            v122 = (void *)*v122;
          }
          v121 = sub_1854E88((uint64_t)v122);
          *(void *)(a1 + 496) = v121;
          char v7 = v214;
        }
        uint64_t v14 = (char *)sub_12E0208(a3, (uint64_t)v121, (unsigned __int8 *)v7);
        goto LABEL_618;
      case 0x3Cu:
        if (v8 != 226) {
          goto LABEL_609;
        }
        *(_DWORD *)(a1 + 44) |= 0x800000u;
        uint64_t v123 = *(void *)(a1 + 504);
        if (!v123)
        {
          v124 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            v124 = (void *)*v124;
          }
          uint64_t v123 = sub_178E2FC((uint64_t)v124);
          *(void *)(a1 + 504) = v123;
          char v7 = v214;
        }
        uint64_t v14 = sub_1725114(a3, v123, (unsigned __int8 *)v7);
        goto LABEL_618;
      case 0x3Du:
        if (v8 != 234) {
          goto LABEL_609;
        }
        *(_DWORD *)(a1 + 44) |= 0x1000000u;
        uint64_t v125 = *(void *)(a1 + 512);
        if (!v125)
        {
          v126 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            v126 = (void *)*v126;
          }
          uint64_t v125 = sub_178E410((uint64_t)v126);
          *(void *)(a1 + 512) = v125;
          char v7 = v214;
        }
        uint64_t v14 = sub_17251A4(a3, v125, (unsigned __int8 *)v7);
        goto LABEL_618;
      case 0x3Eu:
        if (v8 != 242) {
          goto LABEL_609;
        }
        *(_DWORD *)(a1 + 44) |= 0x2000000u;
        uint64_t v127 = *(void *)(a1 + 520);
        if (!v127)
        {
          v128 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            v128 = (void *)*v128;
          }
          sub_13325F8((uint64_t)v128);
          uint64_t v127 = v129;
          *(void *)(a1 + 520) = v129;
          char v7 = v214;
        }
        uint64_t v14 = (char *)sub_1725234(a3, v127, (unsigned __int8 *)v7);
        goto LABEL_618;
      case 0x3Fu:
        if (v8 != 250) {
          goto LABEL_609;
        }
        *(_DWORD *)(a1 + 44) |= 0x4000000u;
        uint64_t v130 = *(void *)(a1 + 528);
        if (!v130)
        {
          v131 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            v131 = (void *)*v131;
          }
          uint64_t v130 = sub_178B534((uint64_t)v131);
          *(void *)(a1 + 528) = v130;
          char v7 = v214;
        }
        uint64_t v14 = sub_17252C4(a3, v130, (unsigned __int8 *)v7);
        goto LABEL_618;
      case 0x40u:
        if (v8 != 2) {
          goto LABEL_609;
        }
        *(_DWORD *)(a1 + 44) |= 0x8000000u;
        uint64_t v132 = *(void *)(a1 + 536);
        if (!v132)
        {
          v133 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            v133 = (void *)*v133;
          }
          uint64_t v132 = sub_178B590((uint64_t)v133);
          *(void *)(a1 + 536) = v132;
          char v7 = v214;
        }
        uint64_t v14 = sub_1725354(a3, v132, (unsigned __int8 *)v7);
        goto LABEL_618;
      case 0x41u:
        if (v8 != 10) {
          goto LABEL_609;
        }
        *(_DWORD *)(a1 + 44) |= 0x10000000u;
        uint64_t v134 = *(void *)(a1 + 544);
        if (!v134)
        {
          v135 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            v135 = (void *)*v135;
          }
          uint64_t v134 = sub_178B5EC((uint64_t)v135);
          *(void *)(a1 + 544) = v134;
          char v7 = v214;
        }
        uint64_t v14 = sub_17253E4(a3, v134, (unsigned __int8 *)v7);
        goto LABEL_618;
      case 0x42u:
        if (v8 != 18) {
          goto LABEL_609;
        }
        *(_DWORD *)(a1 + 44) |= 0x20000000u;
        uint64_t v136 = *(void *)(a1 + 552);
        if (!v136)
        {
          v137 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            v137 = (void *)*v137;
          }
          uint64_t v136 = sub_178B8E4((uint64_t)v137);
          *(void *)(a1 + 552) = v136;
          char v7 = v214;
        }
        uint64_t v14 = sub_1725474(a3, v136, (unsigned __int8 *)v7);
        goto LABEL_618;
      case 0x43u:
        if (v8 != 26) {
          goto LABEL_609;
        }
        *(_DWORD *)(a1 + 44) |= 0x40000000u;
        uint64_t v138 = *(void *)(a1 + 560);
        if (!v138)
        {
          v139 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            v139 = (void *)*v139;
          }
          uint64_t v138 = sub_1787AD8((uint64_t)v139);
          *(void *)(a1 + 560) = v138;
          char v7 = v214;
        }
        uint64_t v14 = sub_1725504(a3, v138, (unsigned __int8 *)v7);
        goto LABEL_618;
      case 0x44u:
        if (v8 != 34) {
          goto LABEL_609;
        }
        *(_DWORD *)(a1 + 44) |= 0x80000000;
        uint64_t v140 = *(void *)(a1 + 568);
        if (!v140)
        {
          v141 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            v141 = (void *)*v141;
          }
          uint64_t v140 = sub_1787B34((uint64_t)v141);
          *(void *)(a1 + 568) = v140;
          char v7 = v214;
        }
        uint64_t v14 = sub_1725594(a3, v140, (unsigned __int8 *)v7);
        goto LABEL_618;
      case 0x45u:
        if (v8 != 42) {
          goto LABEL_609;
        }
        *(_DWORD *)(a1 + 48) |= 1u;
        uint64_t v142 = *(void *)(a1 + 576);
        if (!v142)
        {
          v143 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            v143 = (void *)*v143;
          }
          uint64_t v142 = sub_1787C14((uint64_t)v143);
          *(void *)(a1 + 576) = v142;
          char v7 = v214;
        }
        uint64_t v14 = sub_1725624(a3, v142, (unsigned __int8 *)v7);
        goto LABEL_618;
      case 0x46u:
        if (v8 != 50) {
          goto LABEL_609;
        }
        *(_DWORD *)(a1 + 48) |= 2u;
        uint64_t v111 = *(void *)(a1 + 584);
        if (v111) {
          goto LABEL_403;
        }
        v144 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          v144 = (void *)*v144;
        }
        uint64_t v111 = sub_12BB9E8((uint64_t)v144);
        *(void *)(a1 + 584) = v111;
LABEL_402:
        char v7 = v214;
LABEL_403:
        uint64_t v14 = sub_1724ED4(a3, v111, (unsigned __int8 *)v7);
        goto LABEL_618;
      case 0x47u:
        if (v8 != 58) {
          goto LABEL_609;
        }
        *(_DWORD *)(a1 + 48) |= 4u;
        uint64_t v145 = *(void *)(a1 + 592);
        if (!v145)
        {
          v146 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            v146 = (void *)*v146;
          }
          uint64_t v145 = sub_178E358((uint64_t)v146);
          *(void *)(a1 + 592) = v145;
          char v7 = v214;
        }
        uint64_t v14 = sub_17256B4(a3, v145, (unsigned __int8 *)v7);
        goto LABEL_618;
      case 0x48u:
        if (v8 != 66) {
          goto LABEL_609;
        }
        *(_DWORD *)(a1 + 48) |= 8u;
        uint64_t v147 = *(void *)(a1 + 600);
        if (!v147)
        {
          v148 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            v148 = (void *)*v148;
          }
          uint64_t v147 = sub_178C684((uint64_t)v148);
          *(void *)(a1 + 600) = v147;
          char v7 = v214;
        }
        uint64_t v14 = (char *)sub_1725744(a3, v147, (unsigned __int8 *)v7);
        goto LABEL_618;
      case 0x49u:
        if (v8 != 74) {
          goto LABEL_609;
        }
        *(_DWORD *)(a1 + 48) |= 0x10u;
        uint64_t v149 = *(void *)(a1 + 608);
        if (!v149)
        {
          v150 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            v150 = (void *)*v150;
          }
          uint64_t v149 = sub_1621450((uint64_t)v150);
          *(void *)(a1 + 608) = v149;
          char v7 = v214;
        }
        uint64_t v14 = sub_12FEA4C(a3, v149, (unsigned __int8 *)v7);
        goto LABEL_618;
      case 0x4Au:
        if (v8 != 82) {
          goto LABEL_609;
        }
        *(_DWORD *)(a1 + 48) |= 0x20u;
        uint64_t v151 = *(void *)(a1 + 616);
        if (!v151)
        {
          v152 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            v152 = (void *)*v152;
          }
          uint64_t v151 = sub_178B648((uint64_t)v152);
          *(void *)(a1 + 616) = v151;
          char v7 = v214;
        }
        uint64_t v14 = (char *)sub_17257D4(a3, v151, (unsigned __int8 *)v7);
        goto LABEL_618;
      case 0x4Cu:
        if (v8 != 98) {
          goto LABEL_609;
        }
        *(_DWORD *)(a1 + 48) |= 0x40u;
        uint64_t v153 = *(void *)(a1 + 624);
        if (!v153)
        {
          v154 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            v154 = (void *)*v154;
          }
          uint64_t v153 = sub_178B800((uint64_t)v154);
          *(void *)(a1 + 624) = v153;
          char v7 = v214;
        }
        uint64_t v14 = sub_1725864(a3, v153, (unsigned __int8 *)v7);
        goto LABEL_618;
      case 0x4Du:
        if (v8 != 106) {
          goto LABEL_609;
        }
        *(_DWORD *)(a1 + 48) |= 0x80u;
        uint64_t v155 = *(void *)(a1 + 632);
        if (!v155)
        {
          v156 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            v156 = (void *)*v156;
          }
          uint64_t v155 = sub_178B85C((uint64_t)v156);
          *(void *)(a1 + 632) = v155;
          char v7 = v214;
        }
        uint64_t v14 = (char *)sub_17258F4(a3, v155, (unsigned __int8 *)v7);
        goto LABEL_618;
      case 0x4Eu:
        if (v8 != 114) {
          goto LABEL_609;
        }
        *(_DWORD *)(a1 + 48) |= 0x100u;
        uint64_t v41 = *(void *)(a1 + 640);
        if (v41) {
          goto LABEL_446;
        }
        v157 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          v157 = (void *)*v157;
        }
        uint64_t v41 = sub_1788B18((uint64_t)v157);
        *(void *)(a1 + 640) = v41;
LABEL_445:
        char v7 = v214;
LABEL_446:
        uint64_t v14 = sub_1724034(a3, v41, (unsigned __int8 *)v7);
        goto LABEL_618;
      case 0x4Fu:
        if (v8 != 122) {
          goto LABEL_609;
        }
        *(_DWORD *)(a1 + 48) |= 0x200u;
        uint64_t v158 = *(void *)(a1 + 648);
        if (!v158)
        {
          v159 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            v159 = (void *)*v159;
          }
          uint64_t v158 = sub_1787C70((uint64_t)v159);
          *(void *)(a1 + 648) = v158;
          char v7 = v214;
        }
        uint64_t v14 = sub_1725984(a3, v158, (unsigned __int8 *)v7);
        goto LABEL_618;
      case 0x51u:
        if (v8 != 138) {
          goto LABEL_609;
        }
        *(_DWORD *)(a1 + 48) |= 0x400u;
        uint64_t v160 = *(void *)(a1 + 656);
        if (!v160)
        {
          v161 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            v161 = (void *)*v161;
          }
          uint64_t v160 = sub_178E46C((uint64_t)v161);
          *(void *)(a1 + 656) = v160;
          char v7 = v214;
        }
        uint64_t v14 = sub_1725A14(a3, v160, (unsigned __int8 *)v7);
        goto LABEL_618;
      case 0x52u:
        if (v8 != 146) {
          goto LABEL_609;
        }
        *(_DWORD *)(a1 + 48) |= 0x800u;
        uint64_t v162 = *(void *)(a1 + 664);
        if (!v162)
        {
          v163 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            v163 = (void *)*v163;
          }
          uint64_t v162 = sub_178B720((uint64_t)v163);
          *(void *)(a1 + 664) = v162;
          char v7 = v214;
        }
        uint64_t v14 = sub_1725AA4(a3, v162, (unsigned __int8 *)v7);
        goto LABEL_618;
      case 0x53u:
        if (v8 != 154) {
          goto LABEL_609;
        }
        *(_DWORD *)(a1 + 48) |= 0x1000u;
        v164 = *(void **)(a1 + 672);
        if (!v164)
        {
          v165 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            v165 = (void *)*v165;
          }
          v164 = sub_178C6E0((uint64_t)v165);
          *(void *)(a1 + 672) = v164;
          char v7 = v214;
        }
        uint64_t v14 = sub_1725B34(a3, (uint64_t)v164, (unsigned __int8 *)v7);
        goto LABEL_618;
      case 0x54u:
        if (v8 != 162) {
          goto LABEL_609;
        }
        *(_DWORD *)(a1 + 48) |= 0x2000u;
        uint64_t v166 = *(void *)(a1 + 680);
        if (!v166)
        {
          v167 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            v167 = (void *)*v167;
          }
          uint64_t v166 = sub_1789538((uint64_t)v167);
          *(void *)(a1 + 680) = v166;
          char v7 = v214;
        }
        uint64_t v14 = (char *)sub_1725BC4(a3, v166, (unsigned __int8 *)v7);
        goto LABEL_618;
      case 0x55u:
        if (v8 != 170) {
          goto LABEL_609;
        }
        *(_DWORD *)(a1 + 48) |= 0x4000u;
        v168 = *(void **)(a1 + 688);
        if (!v168)
        {
          v169 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            v169 = (void *)*v169;
          }
          v168 = sub_178B77C((uint64_t)v169);
          *(void *)(a1 + 688) = v168;
          char v7 = v214;
        }
        uint64_t v14 = (char *)sub_1725C54(a3, (uint64_t)v168, (unsigned __int8 *)v7);
        goto LABEL_618;
      case 0x56u:
        if (v8 != 178) {
          goto LABEL_609;
        }
        *(_DWORD *)(a1 + 48) |= 0x8000u;
        uint64_t v170 = *(void *)(a1 + 696);
        if (!v170)
        {
          v171 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            v171 = (void *)*v171;
          }
          uint64_t v170 = sub_1788F08((uint64_t)v171);
          *(void *)(a1 + 696) = v170;
          char v7 = v214;
        }
        uint64_t v14 = sub_1725CE4(a3, v170, (unsigned __int8 *)v7);
        goto LABEL_618;
      case 0x57u:
        if (v8 != 186) {
          goto LABEL_609;
        }
        *(_DWORD *)(a1 + 48) |= 0x10000u;
        uint64_t v172 = *(void *)(a1 + 704);
        if (!v172)
        {
          v173 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            v173 = (void *)*v173;
          }
          uint64_t v172 = sub_1789150((uint64_t)v173);
          *(void *)(a1 + 704) = v172;
          char v7 = v214;
        }
        uint64_t v14 = sub_1725D74(a3, v172, (unsigned __int8 *)v7);
        goto LABEL_618;
      case 0x58u:
        if (v8 != 194) {
          goto LABEL_609;
        }
        *(_DWORD *)(a1 + 48) |= 0x20000u;
        v174 = *(void **)(a1 + 712);
        if (!v174)
        {
          v175 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            v175 = (void *)*v175;
          }
          v174 = sub_1789224((uint64_t)v175);
          *(void *)(a1 + 712) = v174;
          char v7 = v214;
        }
        uint64_t v14 = sub_1725E04(a3, (uint64_t)v174, (unsigned __int8 *)v7);
        goto LABEL_618;
      case 0x59u:
        if (v8 != 202) {
          goto LABEL_609;
        }
        *(_DWORD *)(a1 + 48) |= 0x40000u;
        uint64_t v176 = *(void *)(a1 + 720);
        if (!v176)
        {
          v177 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            v177 = (void *)*v177;
          }
          uint64_t v176 = sub_178C554((uint64_t)v177);
          *(void *)(a1 + 720) = v176;
          char v7 = v214;
        }
        uint64_t v14 = sub_1725E94(a3, v176, (unsigned __int8 *)v7);
        goto LABEL_618;
      case 0x5Au:
        if (v8 != 210) {
          goto LABEL_609;
        }
        *(_DWORD *)(a1 + 48) |= 0x80000u;
        uint64_t v178 = *(void *)(a1 + 728);
        if (!v178)
        {
          v179 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            v179 = (void *)*v179;
          }
          uint64_t v178 = sub_178EE28((uint64_t)v179);
          *(void *)(a1 + 728) = v178;
          char v7 = v214;
        }
        uint64_t v14 = sub_1725F24(a3, v178, (unsigned __int8 *)v7);
        goto LABEL_618;
      case 0x5Bu:
        if (v8 != 218) {
          goto LABEL_609;
        }
        *(_DWORD *)(a1 + 48) |= 0x100000u;
        v180 = *(void **)(a1 + 736);
        if (!v180)
        {
          v181 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            v181 = (void *)*v181;
          }
          v180 = sub_1787D84((uint64_t)v181);
          *(void *)(a1 + 736) = v180;
          char v7 = v214;
        }
        uint64_t v14 = sub_1725FB4(a3, (uint64_t)v180, (unsigned __int8 *)v7);
        goto LABEL_618;
      case 0x5Cu:
        if (v8 != 226) {
          goto LABEL_609;
        }
        *(_DWORD *)(a1 + 48) |= 0x200000u;
        uint64_t v182 = *(void *)(a1 + 744);
        if (!v182)
        {
          v183 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            v183 = (void *)*v183;
          }
          uint64_t v182 = sub_1789790((uint64_t)v183);
          *(void *)(a1 + 744) = v182;
          char v7 = v214;
        }
        uint64_t v14 = sub_1726044(a3, v182, (unsigned __int8 *)v7);
        goto LABEL_618;
      case 0x5Du:
        if (v8 != 234) {
          goto LABEL_609;
        }
        *(_DWORD *)(a1 + 48) |= 0x400000u;
        v184 = *(void **)(a1 + 752);
        if (!v184)
        {
          v185 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            v185 = (void *)*v185;
          }
          v184 = sub_1788FDC((uint64_t)v185);
          *(void *)(a1 + 752) = v184;
          char v7 = v214;
        }
        uint64_t v14 = (char *)sub_17260D4(a3, (uint64_t)v184, (unsigned __int8 *)v7);
        goto LABEL_618;
      case 0x5Eu:
        if (v8 != 242) {
          goto LABEL_609;
        }
        *(_DWORD *)(a1 + 48) |= 0x800000u;
        v186 = *(void **)(a1 + 760);
        if (!v186)
        {
          v187 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            v187 = (void *)*v187;
          }
          v186 = sub_178DE50((uint64_t)v187);
          *(void *)(a1 + 760) = v186;
          char v7 = v214;
        }
        uint64_t v14 = (char *)sub_1552220(a3, (uint64_t)v186, (unsigned __int8 *)v7);
        goto LABEL_618;
      case 0x5Fu:
        if (v8 != 250) {
          goto LABEL_609;
        }
        *(_DWORD *)(a1 + 48) |= 0x1000000u;
        v188 = *(void **)(a1 + 768);
        if (!v188)
        {
          v189 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            v189 = (void *)*v189;
          }
          v188 = sub_178EF9C((uint64_t)v189);
          *(void *)(a1 + 768) = v188;
          char v7 = v214;
        }
        uint64_t v14 = (char *)sub_1726164(a3, (uint64_t)v188, (unsigned __int8 *)v7);
        goto LABEL_618;
      case 0x60u:
        if (v8 != 2) {
          goto LABEL_609;
        }
        *(_DWORD *)(a1 + 48) |= 0x2000000u;
        uint64_t v190 = *(void *)(a1 + 776);
        if (!v190)
        {
          v191 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            v191 = (void *)*v191;
          }
          uint64_t v190 = sub_1787E58((uint64_t)v191);
          *(void *)(a1 + 776) = v190;
          char v7 = v214;
        }
        uint64_t v14 = (char *)sub_17261F4(a3, v190, (unsigned __int8 *)v7);
        goto LABEL_618;
      case 0x61u:
        if (v8 != 10) {
          goto LABEL_609;
        }
        *(_DWORD *)(a1 + 48) |= 0x4000000u;
        uint64_t v192 = *(void *)(a1 + 784);
        if (!v192)
        {
          v193 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            v193 = (void *)*v193;
          }
          uint64_t v192 = sub_178D104((uint64_t)v193);
          *(void *)(a1 + 784) = v192;
          char v7 = v214;
        }
        uint64_t v14 = sub_1726284(a3, v192, (unsigned __int8 *)v7);
        goto LABEL_618;
      case 0x62u:
        if (v8 != 18) {
          goto LABEL_609;
        }
        *(_DWORD *)(a1 + 48) |= 0x8000000u;
        v194 = *(void **)(a1 + 792);
        if (!v194)
        {
          v195 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            v195 = (void *)*v195;
          }
          v194 = sub_178C028((uint64_t)v195);
          *(void *)(a1 + 792) = v194;
          char v7 = v214;
        }
        uint64_t v14 = sub_1726314(a3, (uint64_t)v194, (unsigned __int8 *)v7);
        goto LABEL_618;
      case 0x63u:
        if (v8 != 26) {
          goto LABEL_609;
        }
        *(_DWORD *)(a1 + 48) |= 0x10000000u;
        uint64_t v196 = *(void *)(a1 + 800);
        if (!v196)
        {
          v197 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            v197 = (void *)*v197;
          }
          uint64_t v196 = sub_178B940((uint64_t)v197);
          *(void *)(a1 + 800) = v196;
          char v7 = v214;
        }
        uint64_t v14 = sub_17263A4(a3, v196, (unsigned __int8 *)v7);
        goto LABEL_618;
      case 0x64u:
        if (v8 != 34) {
          goto LABEL_609;
        }
        *(_DWORD *)(a1 + 48) |= 0x20000000u;
        v198 = *(void **)(a1 + 808);
        if (!v198)
        {
          v199 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            v199 = (void *)*v199;
          }
          v198 = sub_178B9F8((uint64_t)v199);
          *(void *)(a1 + 808) = v198;
          char v7 = v214;
        }
        uint64_t v14 = sub_1726434(a3, (uint64_t)v198, (unsigned __int8 *)v7);
        goto LABEL_618;
      case 0x65u:
        if (v8 != 42) {
          goto LABEL_609;
        }
        *(_DWORD *)(a1 + 48) |= 0x40000000u;
        uint64_t v200 = *(void *)(a1 + 816);
        if (!v200)
        {
          v201 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            v201 = (void *)*v201;
          }
          uint64_t v200 = sub_178BE14((uint64_t)v201);
          *(void *)(a1 + 816) = v200;
          char v7 = v214;
        }
        uint64_t v14 = (char *)sub_17264C4(a3, v200, (unsigned __int8 *)v7);
        goto LABEL_618;
      case 0x66u:
        if (v8 != 50) {
          goto LABEL_609;
        }
        *(_DWORD *)(a1 + 48) |= 0x80000000;
        v202 = *(void **)(a1 + 824);
        if (!v202)
        {
          v203 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            v203 = (void *)*v203;
          }
          v202 = sub_1789694((uint64_t)v203);
          *(void *)(a1 + 824) = v202;
          char v7 = v214;
        }
        uint64_t v14 = sub_1726554(a3, (uint64_t)v202, (unsigned __int8 *)v7);
        goto LABEL_618;
      case 0x67u:
        if (v8 != 58) {
          goto LABEL_609;
        }
        *(_DWORD *)(a1 + 52) |= 1u;
        v204 = *(void **)(a1 + 832);
        if (!v204)
        {
          v205 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            v205 = (void *)*v205;
          }
          v204 = sub_178BAB0((uint64_t)v205);
          *(void *)(a1 + 832) = v204;
          char v7 = v214;
        }
        uint64_t v14 = sub_17265E4(a3, (uint64_t)v204, (unsigned __int8 *)v7);
        goto LABEL_618;
      case 0x68u:
        if (v8 != 66) {
          goto LABEL_609;
        }
        *(_DWORD *)(a1 + 52) |= 2u;
        v206 = *(void **)(a1 + 840);
        if (!v206)
        {
          v207 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            v207 = (void *)*v207;
          }
          v206 = sub_178BB68((uint64_t)v207);
          *(void *)(a1 + 840) = v206;
          char v7 = v214;
        }
        uint64_t v14 = sub_1726674(a3, (uint64_t)v206, (unsigned __int8 *)v7);
        goto LABEL_618;
      case 0x69u:
        if (v8 != 74) {
          goto LABEL_609;
        }
        *(_DWORD *)(a1 + 52) |= 4u;
        uint64_t v208 = *(void *)(a1 + 848);
        if (!v208)
        {
          v209 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            v209 = (void *)*v209;
          }
          uint64_t v208 = sub_178BC20((uint64_t)v209);
          *(void *)(a1 + 848) = v208;
          char v7 = v214;
        }
        uint64_t v14 = sub_1726704(a3, v208, (unsigned __int8 *)v7);
        goto LABEL_618;
      case 0x6Au:
        if (v8 != 82) {
          goto LABEL_609;
        }
        *(_DWORD *)(a1 + 52) |= 8u;
        v210 = *(void **)(a1 + 856);
        if (!v210)
        {
          v211 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            v211 = (void *)*v211;
          }
          v210 = sub_178BCD8((uint64_t)v211);
          *(void *)(a1 + 856) = v210;
          char v7 = v214;
        }
        uint64_t v14 = (char *)sub_1726794(a3, (uint64_t)v210, (unsigned __int8 *)v7);
        goto LABEL_618;
      default:
LABEL_609:
        if (v8) {
          BOOL v212 = (v8 & 7) == 4;
        }
        else {
          BOOL v212 = 1;
        }
        if (!v212)
        {
          if ((v8 - 8000) >> 7 > 0x7C)
          {
            if (*v6)
            {
              v213 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              v213 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              char v7 = v214;
            }
            uint64_t v14 = (char *)sub_1885AC0(v8, v213, v7, a3);
          }
          else
          {
            uint64_t v14 = (char *)sub_18859DC((uint64_t **)(a1 + 16), v8, v7, (uint64_t)&off_2546F30, (uint64_t *)(a1 + 8), a3);
          }
LABEL_618:
          v214 = v14;
          if (!v14) {
            return 0;
          }
          if (sub_11947B8((uint64_t)a3, &v214, a3[11].i32[1])) {
            return v214;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return v214;
    }
  }
}

char *sub_1723D64(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16C40A4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1723DF4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16C6E0C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_1723E84(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16E4F68(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1723F14(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16ED61C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_1723FA4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16EFD30(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1724034(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16F1B00(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_17240C4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16DA9E0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1724154(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16F3674(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_17241E4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1700F10(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1724274(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1702410(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_1724304(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17089A0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1724394(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16C93EC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1724424(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16CA6C8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_17244B4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16CB1B8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_1724544(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16E6D64(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_17245D4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_170D30C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_1724664(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_170DB50(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_17246F4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_170E908(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1724784(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1710C48(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1724814(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1791660(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_17248A4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1711B20(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_1724934(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1714608(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_17249C4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1714EE4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_1724A54(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17158BC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1724AE4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17127A8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1724B74(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17130E0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1724C04(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_185569C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1724C94(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17139D4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1724D24(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_170B6B0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1724DB4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_170C6F8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1724E44(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16EC7C8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1724ED4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_129EE28(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1724F64(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1716E24(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_1724FF4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16C16F0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1725084(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1718C10(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1725114(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1779F74(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_17251A4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_177C088(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_1725234(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_132D5B8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_17252C4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1742658(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1725354(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17430A4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_17253E4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1744B3C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1725474(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_174AD78(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1725504(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16DBFB0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1725594(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16DC830(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1725624(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16DD624(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_17256B4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_177A974(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_1725744(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_175993C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_17257D4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17476D8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1725864(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1749E24(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_17258F4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_174A4C0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1725984(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16DE174(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1725A14(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_177C710(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1725AA4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1748F10(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1725B34(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_175A364(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_1725BC4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16FD6B0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_1725C54(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1749784(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1725CE4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16F4FC4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1725D74(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16F74F8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1725E04(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16F8174(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1725E94(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17585C0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1725F24(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1784298(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1725FB4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16E0B14(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1726044(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1700430(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_17260D4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16F5DA8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_1726164(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1785888(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_17261F4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16E18E4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1726284(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1767C64(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1726314(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1753184(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_17263A4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_174B8BC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1726434(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_174C804(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_17264C4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1750C60(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1726554(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16FF6FC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_17265E4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_174D2A8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1726674(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_174DF74(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1726704(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_174EE44(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_1726794(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_174FC98(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1726824(uint64_t a1, char *a2, unint64_t *a3)
{
  uint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if (v6)
  {
    if (*a3 <= (unint64_t)a2) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    uint64_t v7 = *(void *)(a1 + 64);
    *uint64_t v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 44);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    uint64_t v4 = sub_16BB104(v7, v9, a3);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_46;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v10 = *(void *)(a1 + 72);
  *uint64_t v4 = 18;
  unsigned int v11 = *(_DWORD *)(v10 + 44);
  v4[1] = v11;
  if (v11 > 0x7F) {
    uint64_t v12 = sub_188A9CC(v11, v4 + 1);
  }
  else {
    uint64_t v12 = v4 + 2;
  }
  uint64_t v4 = sub_16C31C8(v10, v12, a3);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_52;
  }
LABEL_46:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v13 = *(void *)(a1 + 80);
  *uint64_t v4 = 26;
  unsigned int v14 = *(_DWORD *)(v13 + 40);
  v4[1] = v14;
  if (v14 > 0x7F) {
    uint64_t v15 = sub_188A9CC(v14, v4 + 1);
  }
  else {
    uint64_t v15 = v4 + 2;
  }
  uint64_t v4 = sub_16C4244(v13, v15, a3);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_58;
  }
LABEL_52:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v16 = *(void *)(a1 + 88);
  *uint64_t v4 = 34;
  unsigned int v17 = *(_DWORD *)(v16 + 44);
  v4[1] = v17;
  if (v17 > 0x7F) {
    int v18 = sub_188A9CC(v17, v4 + 1);
  }
  else {
    int v18 = v4 + 2;
  }
  uint64_t v4 = sub_16C5108(v16, v18, a3);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_64;
  }
LABEL_58:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v19 = *(void *)(a1 + 96);
  *uint64_t v4 = 42;
  unsigned int v20 = *(_DWORD *)(v19 + 44);
  v4[1] = v20;
  if (v20 > 0x7F) {
    uint64_t v21 = sub_188A9CC(v20, v4 + 1);
  }
  else {
    uint64_t v21 = v4 + 2;
  }
  uint64_t v4 = sub_16C7288(v19, v21, a3);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_70;
  }
LABEL_64:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v22 = *(void *)(a1 + 104);
  *uint64_t v4 = 50;
  unsigned int v23 = *(_DWORD *)(v22 + 44);
  v4[1] = v23;
  if (v23 > 0x7F) {
    uint64_t v24 = sub_188A9CC(v23, v4 + 1);
  }
  else {
    uint64_t v24 = v4 + 2;
  }
  uint64_t v4 = sub_16E38F4(v22, v24, a3);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_76;
  }
LABEL_70:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v25 = *(void *)(a1 + 112);
  *uint64_t v4 = 58;
  unsigned int v26 = *(_DWORD *)(v25 + 44);
  v4[1] = v26;
  if (v26 > 0x7F) {
    uint64_t v27 = sub_188A9CC(v26, v4 + 1);
  }
  else {
    uint64_t v27 = v4 + 2;
  }
  uint64_t v4 = sub_16E53D4(v25, v27, a3);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_82;
  }
LABEL_76:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v28 = *(void *)(a1 + 120);
  *uint64_t v4 = 66;
  unsigned int v29 = *(_DWORD *)(v28 + 44);
  v4[1] = v29;
  if (v29 > 0x7F) {
    uint64_t v30 = sub_188A9CC(v29, v4 + 1);
  }
  else {
    uint64_t v30 = v4 + 2;
  }
  uint64_t v4 = sub_16EBC08(v28, v30, a3);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_88;
  }
LABEL_82:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v31 = *(void *)(a1 + 128);
  *uint64_t v4 = 74;
  unsigned int v32 = *(_DWORD *)(v31 + 44);
  v4[1] = v32;
  if (v32 > 0x7F) {
    uint64_t v33 = sub_188A9CC(v32, v4 + 1);
  }
  else {
    uint64_t v33 = v4 + 2;
  }
  uint64_t v4 = sub_16E9DDC(v31, v33, a3);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_94;
  }
LABEL_88:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v34 = *(void *)(a1 + 136);
  *uint64_t v4 = 82;
  unsigned int v35 = *(_DWORD *)(v34 + 44);
  v4[1] = v35;
  if (v35 > 0x7F) {
    uint64_t v36 = sub_188A9CC(v35, v4 + 1);
  }
  else {
    uint64_t v36 = v4 + 2;
  }
  uint64_t v4 = sub_16D82B8(v34, v36, a3);
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_100;
  }
LABEL_94:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v37 = *(void *)(a1 + 144);
  *uint64_t v4 = 90;
  unsigned int v38 = *(_DWORD *)(v37 + 44);
  v4[1] = v38;
  if (v38 > 0x7F) {
    uint64_t v39 = sub_188A9CC(v38, v4 + 1);
  }
  else {
    uint64_t v39 = v4 + 2;
  }
  uint64_t v4 = sub_16D032C(v37, v39, a3);
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_106;
  }
LABEL_100:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v40 = *(void *)(a1 + 152);
  *uint64_t v4 = 98;
  unsigned int v41 = *(_DWORD *)(v40 + 44);
  v4[1] = v41;
  if (v41 > 0x7F) {
    uint64_t v42 = sub_188A9CC(v41, v4 + 1);
  }
  else {
    uint64_t v42 = v4 + 2;
  }
  uint64_t v4 = sub_16EDB00(v40, v42, a3);
  if ((v6 & 0x1000) == 0)
  {
LABEL_14:
    if ((v6 & 0x2000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_112;
  }
LABEL_106:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v43 = *(void *)(a1 + 160);
  *uint64_t v4 = 106;
  unsigned int v44 = *(_DWORD *)(v43 + 44);
  v4[1] = v44;
  if (v44 > 0x7F) {
    uint64_t v45 = sub_188A9CC(v44, v4 + 1);
  }
  else {
    uint64_t v45 = v4 + 2;
  }
  uint64_t v4 = sub_1790D44(v43, v45, a3);
  if ((v6 & 0x2000) == 0)
  {
LABEL_15:
    if ((v6 & 0x4000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_118;
  }
LABEL_112:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v46 = *(void *)(a1 + 168);
  *uint64_t v4 = 114;
  unsigned int v47 = *(_DWORD *)(v46 + 44);
  v4[1] = v47;
  if (v47 > 0x7F) {
    uint64_t v48 = sub_188A9CC(v47, v4 + 1);
  }
  else {
    uint64_t v48 = v4 + 2;
  }
  uint64_t v4 = sub_16EFF14(v46, v48, a3);
  if ((v6 & 0x4000) == 0)
  {
LABEL_16:
    if ((v6 & 0x8000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_124;
  }
LABEL_118:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v49 = *(void *)(a1 + 176);
  *uint64_t v4 = 122;
  unsigned int v50 = *(_DWORD *)(v49 + 88);
  v4[1] = v50;
  if (v50 > 0x7F) {
    uint64_t v51 = sub_188A9CC(v50, v4 + 1);
  }
  else {
    uint64_t v51 = v4 + 2;
  }
  uint64_t v4 = sub_16F1D84(v49, v51, a3);
  if ((v6 & 0x8000) == 0)
  {
LABEL_17:
    if ((v6 & 0x10000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_130;
  }
LABEL_124:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v52 = *(void *)(a1 + 184);
  *(_WORD *)uint64_t v4 = 386;
  unsigned int v53 = *(_DWORD *)(v52 + 44);
  v4[2] = v53;
  if (v53 > 0x7F) {
    int v54 = sub_188A9CC(v53, v4 + 2);
  }
  else {
    int v54 = v4 + 3;
  }
  uint64_t v4 = sub_1460138(v52, v54, a3);
  if ((v6 & 0x10000) == 0)
  {
LABEL_18:
    if ((v6 & 0x20000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_136;
  }
LABEL_130:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v55 = *(void *)(a1 + 192);
  *(_WORD *)uint64_t v4 = 418;
  unsigned int v56 = *(_DWORD *)(v55 + 40);
  v4[2] = v56;
  if (v56 > 0x7F) {
    uint64_t v57 = sub_188A9CC(v56, v4 + 2);
  }
  else {
    uint64_t v57 = v4 + 3;
  }
  uint64_t v4 = sub_16DAB80(v55, v57, a3);
  if ((v6 & 0x20000) == 0)
  {
LABEL_19:
    if ((v6 & 0x40000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_142;
  }
LABEL_136:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v58 = *(void *)(a1 + 200);
  *(_WORD *)uint64_t v4 = 426;
  unsigned int v59 = *(_DWORD *)(v58 + 20);
  v4[2] = v59;
  if (v59 > 0x7F) {
    uint64_t v60 = sub_188A9CC(v59, v4 + 2);
  }
  else {
    uint64_t v60 = v4 + 3;
  }
  uint64_t v4 = sub_16F392C(v58, v60, a3);
  if ((v6 & 0x40000) == 0)
  {
LABEL_20:
    if ((v6 & 0x80000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_148;
  }
LABEL_142:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v61 = *(void *)(a1 + 208);
  *(_WORD *)uint64_t v4 = 434;
  unsigned int v62 = *(_DWORD *)(v61 + 44);
  v4[2] = v62;
  if (v62 > 0x7F) {
    uint64_t v63 = sub_188A9CC(v62, v4 + 2);
  }
  else {
    uint64_t v63 = v4 + 3;
  }
  uint64_t v4 = sub_16F45D4(v61, v63, a3);
  if ((v6 & 0x80000) == 0)
  {
LABEL_21:
    if ((v6 & 0x100000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_154;
  }
LABEL_148:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v64 = *(void *)(a1 + 216);
  *(_WORD *)uint64_t v4 = 442;
  unsigned int v65 = *(_DWORD *)(v64 + 44);
  v4[2] = v65;
  if (v65 > 0x7F) {
    v66 = sub_188A9CC(v65, v4 + 2);
  }
  else {
    v66 = v4 + 3;
  }
  uint64_t v4 = sub_16F9D14(v64, v66, a3);
  if ((v6 & 0x100000) == 0)
  {
LABEL_22:
    if ((v6 & 0x200000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_160;
  }
LABEL_154:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v67 = *(void *)(a1 + 224);
  *(_WORD *)uint64_t v4 = 450;
  unsigned int v68 = *(_DWORD *)(v67 + 64);
  v4[2] = v68;
  if (v68 > 0x7F) {
    uint64_t v69 = sub_188A9CC(v68, v4 + 2);
  }
  else {
    uint64_t v69 = v4 + 3;
  }
  uint64_t v4 = sub_16DB690(v67, v69, a3);
  if ((v6 & 0x200000) == 0)
  {
LABEL_23:
    if ((v6 & 0x400000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_166;
  }
LABEL_160:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v70 = *(void *)(a1 + 232);
  *(_WORD *)uint64_t v4 = 458;
  unsigned int v71 = *(_DWORD *)(v70 + 44);
  v4[2] = v71;
  if (v71 > 0x7F) {
    uint64_t v72 = sub_188A9CC(v71, v4 + 2);
  }
  else {
    uint64_t v72 = v4 + 3;
  }
  uint64_t v4 = sub_16E2B1C(v70, v72, a3);
  if ((v6 & 0x400000) == 0)
  {
LABEL_24:
    if ((v6 & 0x800000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_172;
  }
LABEL_166:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v73 = *(void *)(a1 + 240);
  *(_WORD *)uint64_t v4 = 466;
  unsigned int v74 = *(_DWORD *)(v73 + 44);
  v4[2] = v74;
  if (v74 > 0x7F) {
    v75 = sub_188A9CC(v74, v4 + 2);
  }
  else {
    v75 = v4 + 3;
  }
  uint64_t v4 = sub_16FC618(v73, v75, a3);
  if ((v6 & 0x800000) == 0)
  {
LABEL_25:
    if ((v6 & 0x1000000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_178;
  }
LABEL_172:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v76 = *(void *)(a1 + 248);
  *(_WORD *)uint64_t v4 = 474;
  unsigned int v77 = *(_DWORD *)(v76 + 44);
  v4[2] = v77;
  if (v77 > 0x7F) {
    uint64_t v78 = sub_188A9CC(v77, v4 + 2);
  }
  else {
    uint64_t v78 = v4 + 3;
  }
  uint64_t v4 = sub_16D5D84(v76, v78, a3);
  if ((v6 & 0x1000000) == 0)
  {
LABEL_26:
    if ((v6 & 0x2000000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_184;
  }
LABEL_178:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v79 = *(void *)(a1 + 256);
  *(_WORD *)uint64_t v4 = 482;
  unsigned int v80 = *(_DWORD *)(v79 + 20);
  v4[2] = v80;
  if (v80 > 0x7F) {
    v81 = sub_188A9CC(v80, v4 + 2);
  }
  else {
    v81 = v4 + 3;
  }
  uint64_t v4 = sub_1701194(v79, (unint64_t)v81, a3);
  if ((v6 & 0x2000000) == 0)
  {
LABEL_27:
    if ((v6 & 0x4000000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_190;
  }
LABEL_184:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v82 = *(void *)(a1 + 264);
  *(_WORD *)uint64_t v4 = 490;
  unsigned int v83 = *(_DWORD *)(v82 + 20);
  v4[2] = v83;
  if (v83 > 0x7F) {
    v84 = sub_188A9CC(v83, v4 + 2);
  }
  else {
    v84 = v4 + 3;
  }
  uint64_t v4 = sub_17026FC(v82, (unint64_t)v84, a3);
  if ((v6 & 0x4000000) == 0)
  {
LABEL_28:
    if ((v6 & 0x8000000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_196;
  }
LABEL_190:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v85 = *(void *)(a1 + 272);
  *(_WORD *)uint64_t v4 = 498;
  unsigned int v86 = *(_DWORD *)(v85 + 44);
  v4[2] = v86;
  if (v86 > 0x7F) {
    uint64_t v87 = sub_188A9CC(v86, v4 + 2);
  }
  else {
    uint64_t v87 = v4 + 3;
  }
  uint64_t v4 = sub_1708FB0(v85, v87, a3);
  if ((v6 & 0x8000000) == 0)
  {
LABEL_29:
    if ((v6 & 0x10000000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_202;
  }
LABEL_196:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v88 = *(void *)(a1 + 280);
  *(_WORD *)uint64_t v4 = 506;
  unsigned int v89 = *(_DWORD *)(v88 + 44);
  v4[2] = v89;
  if (v89 > 0x7F) {
    uint64_t v90 = sub_188A9CC(v89, v4 + 2);
  }
  else {
    uint64_t v90 = v4 + 3;
  }
  uint64_t v4 = sub_16C82D8(v88, v90, a3);
  if ((v6 & 0x10000000) == 0)
  {
LABEL_30:
    if ((v6 & 0x20000000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_208;
  }
LABEL_202:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v91 = *(void *)(a1 + 288);
  *(_WORD *)uint64_t v4 = 642;
  unsigned int v92 = *(_DWORD *)(v91 + 64);
  v4[2] = v92;
  if (v92 > 0x7F) {
    v93 = sub_188A9CC(v92, v4 + 2);
  }
  else {
    v93 = v4 + 3;
  }
  uint64_t v4 = sub_16C9658(v91, v93, a3);
  if ((v6 & 0x20000000) == 0)
  {
LABEL_31:
    if ((v6 & 0x40000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_214;
  }
LABEL_208:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v94 = *(void *)(a1 + 296);
  *(_WORD *)uint64_t v4 = 650;
  unsigned int v95 = *(_DWORD *)(v94 + 40);
  v4[2] = v95;
  if (v95 > 0x7F) {
    uint64_t v96 = sub_188A9CC(v95, v4 + 2);
  }
  else {
    uint64_t v96 = v4 + 3;
  }
  uint64_t v4 = sub_16CA8F8(v94, v96, a3);
  if ((v6 & 0x40000000) == 0)
  {
LABEL_32:
    if ((v6 & 0x80000000) == 0) {
      goto LABEL_226;
    }
    goto LABEL_220;
  }
LABEL_214:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v97 = *(void *)(a1 + 304);
  *(_WORD *)uint64_t v4 = 658;
  unsigned int v98 = *(_DWORD *)(v97 + 20);
  v4[2] = v98;
  if (v98 > 0x7F) {
    uint64_t v99 = sub_188A9CC(v98, v4 + 2);
  }
  else {
    uint64_t v99 = v4 + 3;
  }
  uint64_t v4 = sub_16CB4D0(v97, (unint64_t)v99, a3);
  if (v6 < 0)
  {
LABEL_220:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v100 = *(void *)(a1 + 312);
    *(_WORD *)uint64_t v4 = 674;
    unsigned int v101 = *(_DWORD *)(v100 + 44);
    v4[2] = v101;
    if (v101 > 0x7F) {
      v102 = sub_188A9CC(v101, v4 + 2);
    }
    else {
      v102 = v4 + 3;
    }
    uint64_t v4 = sub_16E7134(v100, v102, a3);
  }
LABEL_226:
  int v103 = *(_DWORD *)(a1 + 44);
  if (v103)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v104 = *(void *)(a1 + 320);
    *(_WORD *)uint64_t v4 = 682;
    unsigned int v105 = *(_DWORD *)(v104 + 20);
    v4[2] = v105;
    if (v105 > 0x7F) {
      v106 = sub_188A9CC(v105, v4 + 2);
    }
    else {
      v106 = v4 + 3;
    }
    uint64_t v4 = sub_170D464(v104, v106, a3);
    if ((v103 & 2) == 0)
    {
LABEL_228:
      if ((v103 & 4) == 0) {
        goto LABEL_229;
      }
      goto LABEL_271;
    }
  }
  else if ((v103 & 2) == 0)
  {
    goto LABEL_228;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v107 = *(void *)(a1 + 328);
  *(_WORD *)uint64_t v4 = 690;
  unsigned int v108 = *(_DWORD *)(v107 + 20);
  v4[2] = v108;
  if (v108 > 0x7F) {
    v109 = sub_188A9CC(v108, v4 + 2);
  }
  else {
    v109 = v4 + 3;
  }
  uint64_t v4 = sub_170DDA4(v107, v109, a3);
  if ((v103 & 4) == 0)
  {
LABEL_229:
    if ((v103 & 8) == 0) {
      goto LABEL_230;
    }
    goto LABEL_277;
  }
LABEL_271:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v110 = *(void *)(a1 + 336);
  *(_WORD *)uint64_t v4 = 698;
  unsigned int v111 = *(_DWORD *)(v110 + 44);
  v4[2] = v111;
  if (v111 > 0x7F) {
    v112 = sub_188A9CC(v111, v4 + 2);
  }
  else {
    v112 = v4 + 3;
  }
  uint64_t v4 = sub_170EDAC(v110, v112, a3);
  if ((v103 & 8) == 0)
  {
LABEL_230:
    if ((v103 & 0x10) == 0) {
      goto LABEL_231;
    }
    goto LABEL_283;
  }
LABEL_277:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v113 = *(void *)(a1 + 344);
  *(_WORD *)uint64_t v4 = 706;
  unsigned int v114 = *(_DWORD *)(v113 + 88);
  v4[2] = v114;
  if (v114 > 0x7F) {
    v115 = sub_188A9CC(v114, v4 + 2);
  }
  else {
    v115 = v4 + 3;
  }
  uint64_t v4 = sub_1710EDC(v113, v115, a3);
  if ((v103 & 0x10) == 0)
  {
LABEL_231:
    if ((v103 & 0x20) == 0) {
      goto LABEL_232;
    }
    goto LABEL_289;
  }
LABEL_283:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v116 = *(void *)(a1 + 352);
  *(_WORD *)uint64_t v4 = 714;
  unsigned int v117 = *(_DWORD *)(v116 + 44);
  v4[2] = v117;
  if (v117 > 0x7F) {
    v118 = sub_188A9CC(v117, v4 + 2);
  }
  else {
    v118 = v4 + 3;
  }
  uint64_t v4 = sub_1791858(v116, v118, a3);
  if ((v103 & 0x20) == 0)
  {
LABEL_232:
    if ((v103 & 0x40) == 0) {
      goto LABEL_233;
    }
    goto LABEL_295;
  }
LABEL_289:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v119 = *(void *)(a1 + 360);
  *(_WORD *)uint64_t v4 = 722;
  unsigned int v120 = *(_DWORD *)(v119 + 20);
  v4[2] = v120;
  if (v120 > 0x7F) {
    v121 = sub_188A9CC(v120, v4 + 2);
  }
  else {
    v121 = v4 + 3;
  }
  uint64_t v4 = sub_1711D74(v119, (unint64_t)v121, a3);
  if ((v103 & 0x40) == 0)
  {
LABEL_233:
    if ((v103 & 0x80) == 0) {
      goto LABEL_234;
    }
    goto LABEL_301;
  }
LABEL_295:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v122 = *(void *)(a1 + 368);
  *(_WORD *)uint64_t v4 = 730;
  unsigned int v123 = *(_DWORD *)(v122 + 20);
  v4[2] = v123;
  if (v123 > 0x7F) {
    v124 = sub_188A9CC(v123, v4 + 2);
  }
  else {
    v124 = v4 + 3;
  }
  uint64_t v4 = sub_1714834(v122, v124, a3);
  if ((v103 & 0x80) == 0)
  {
LABEL_234:
    if ((v103 & 0x100) == 0) {
      goto LABEL_235;
    }
    goto LABEL_307;
  }
LABEL_301:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v125 = *(void *)(a1 + 376);
  *(_WORD *)uint64_t v4 = 738;
  unsigned int v126 = *(_DWORD *)(v125 + 20);
  v4[2] = v126;
  if (v126 > 0x7F) {
    uint64_t v127 = sub_188A9CC(v126, v4 + 2);
  }
  else {
    uint64_t v127 = v4 + 3;
  }
  uint64_t v4 = sub_171512C(v125, (unint64_t)v127, a3);
  if ((v103 & 0x100) == 0)
  {
LABEL_235:
    if ((v103 & 0x200) == 0) {
      goto LABEL_236;
    }
    goto LABEL_313;
  }
LABEL_307:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v128 = *(void *)(a1 + 384);
  *(_WORD *)uint64_t v4 = 746;
  unsigned int v129 = *(_DWORD *)(v128 + 20);
  v4[2] = v129;
  if (v129 > 0x7F) {
    uint64_t v130 = sub_188A9CC(v129, v4 + 2);
  }
  else {
    uint64_t v130 = v4 + 3;
  }
  uint64_t v4 = sub_1715AF0(v128, v130, a3);
  if ((v103 & 0x200) == 0)
  {
LABEL_236:
    if ((v103 & 0x400) == 0) {
      goto LABEL_237;
    }
    goto LABEL_319;
  }
LABEL_313:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v131 = *(void *)(a1 + 392);
  *(_WORD *)uint64_t v4 = 754;
  unsigned int v132 = *(_DWORD *)(v131 + 40);
  v4[2] = v132;
  if (v132 > 0x7F) {
    v133 = sub_188A9CC(v132, v4 + 2);
  }
  else {
    v133 = v4 + 3;
  }
  uint64_t v4 = sub_17129D8(v131, v133, a3);
  if ((v103 & 0x400) == 0)
  {
LABEL_237:
    if ((v103 & 0x800) == 0) {
      goto LABEL_238;
    }
    goto LABEL_325;
  }
LABEL_319:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v134 = *(void *)(a1 + 400);
  *(_WORD *)uint64_t v4 = 762;
  unsigned int v135 = *(_DWORD *)(v134 + 20);
  v4[2] = v135;
  if (v135 > 0x7F) {
    uint64_t v136 = sub_188A9CC(v135, v4 + 2);
  }
  else {
    uint64_t v136 = v4 + 3;
  }
  uint64_t v4 = sub_1713260(v134, (unint64_t)v136, a3);
  if ((v103 & 0x800) == 0)
  {
LABEL_238:
    if ((v103 & 0x1000) == 0) {
      goto LABEL_239;
    }
    goto LABEL_331;
  }
LABEL_325:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v137 = *(void *)(a1 + 408);
  *(_WORD *)uint64_t v4 = 898;
  unsigned int v138 = *(_DWORD *)(v137 + 44);
  v4[2] = v138;
  if (v138 > 0x7F) {
    v139 = sub_188A9CC(v138, v4 + 2);
  }
  else {
    v139 = v4 + 3;
  }
  uint64_t v4 = sub_1855E40(v137, v139, a3);
  if ((v103 & 0x1000) == 0)
  {
LABEL_239:
    if ((v103 & 0x2000) == 0) {
      goto LABEL_240;
    }
    goto LABEL_337;
  }
LABEL_331:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v140 = *(void *)(a1 + 416);
  *(_WORD *)uint64_t v4 = 906;
  unsigned int v141 = *(_DWORD *)(v140 + 64);
  v4[2] = v141;
  if (v141 > 0x7F) {
    uint64_t v142 = sub_188A9CC(v141, v4 + 2);
  }
  else {
    uint64_t v142 = v4 + 3;
  }
  uint64_t v4 = sub_1713CAC(v140, v142, a3);
  if ((v103 & 0x2000) == 0)
  {
LABEL_240:
    if ((v103 & 0x4000) == 0) {
      goto LABEL_241;
    }
    goto LABEL_343;
  }
LABEL_337:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v143 = *(void *)(a1 + 424);
  *(_WORD *)uint64_t v4 = 914;
  unsigned int v144 = *(_DWORD *)(v143 + 44);
  v4[2] = v144;
  if (v144 > 0x7F) {
    uint64_t v145 = sub_188A9CC(v144, v4 + 2);
  }
  else {
    uint64_t v145 = v4 + 3;
  }
  uint64_t v4 = sub_170BAC0(v143, v145, a3);
  if ((v103 & 0x4000) == 0)
  {
LABEL_241:
    if ((v103 & 0x8000) == 0) {
      goto LABEL_242;
    }
    goto LABEL_349;
  }
LABEL_343:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v146 = *(void *)(a1 + 432);
  *(_WORD *)uint64_t v4 = 922;
  unsigned int v147 = *(_DWORD *)(v146 + 20);
  v4[2] = v147;
  if (v147 > 0x7F) {
    v148 = sub_188A9CC(v147, v4 + 2);
  }
  else {
    v148 = v4 + 3;
  }
  uint64_t v4 = sub_170C9D0(v146, (unint64_t)v148, a3);
  if ((v103 & 0x8000) == 0)
  {
LABEL_242:
    if ((v103 & 0x10000) == 0) {
      goto LABEL_243;
    }
    goto LABEL_355;
  }
LABEL_349:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v149 = *(void *)(a1 + 440);
  *(_WORD *)uint64_t v4 = 930;
  unsigned int v150 = *(_DWORD *)(v149 + 44);
  v4[2] = v150;
  if (v150 > 0x7F) {
    uint64_t v151 = sub_188A9CC(v150, v4 + 2);
  }
  else {
    uint64_t v151 = v4 + 3;
  }
  uint64_t v4 = sub_16ECA14(v149, v151, a3);
  if ((v103 & 0x10000) == 0)
  {
LABEL_243:
    if ((v103 & 0x20000) == 0) {
      goto LABEL_244;
    }
    goto LABEL_361;
  }
LABEL_355:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v152 = *(void *)(a1 + 448);
  *(_WORD *)uint64_t v4 = 938;
  unsigned int v153 = *(_DWORD *)(v152 + 44);
  v4[2] = v153;
  if (v153 > 0x7F) {
    v154 = sub_188A9CC(v153, v4 + 2);
  }
  else {
    v154 = v4 + 3;
  }
  uint64_t v4 = sub_16E8164(v152, v154, a3);
  if ((v103 & 0x20000) == 0)
  {
LABEL_244:
    if ((v103 & 0x40000) == 0) {
      goto LABEL_245;
    }
    goto LABEL_367;
  }
LABEL_361:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v155 = *(void *)(a1 + 456);
  *(_WORD *)uint64_t v4 = 946;
  unsigned int v156 = *(_DWORD *)(v155 + 40);
  v4[2] = v156;
  if (v156 > 0x7F) {
    v157 = sub_188A9CC(v156, v4 + 2);
  }
  else {
    v157 = v4 + 3;
  }
  uint64_t v4 = sub_129F058(v155, v157, a3);
  if ((v103 & 0x40000) == 0)
  {
LABEL_245:
    if ((v103 & 0x80000) == 0) {
      goto LABEL_246;
    }
    goto LABEL_373;
  }
LABEL_367:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v158 = *(void *)(a1 + 464);
  *(_WORD *)uint64_t v4 = 954;
  unsigned int v159 = *(_DWORD *)(v158 + 44);
  v4[2] = v159;
  if (v159 > 0x7F) {
    uint64_t v160 = sub_188A9CC(v159, v4 + 2);
  }
  else {
    uint64_t v160 = v4 + 3;
  }
  uint64_t v4 = sub_1851710(v158, v160, a3);
  if ((v103 & 0x80000) == 0)
  {
LABEL_246:
    if ((v103 & 0x100000) == 0) {
      goto LABEL_247;
    }
    goto LABEL_379;
  }
LABEL_373:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v161 = *(void *)(a1 + 472);
  *(_WORD *)uint64_t v4 = 962;
  unsigned int v162 = *(_DWORD *)(v161 + 20);
  v4[2] = v162;
  if (v162 > 0x7F) {
    v163 = sub_188A9CC(v162, v4 + 2);
  }
  else {
    v163 = v4 + 3;
  }
  uint64_t v4 = sub_17170DC(v161, (unint64_t)v163, a3);
  if ((v103 & 0x100000) == 0)
  {
LABEL_247:
    if ((v103 & 0x200000) == 0) {
      goto LABEL_248;
    }
    goto LABEL_385;
  }
LABEL_379:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v164 = *(void *)(a1 + 480);
  *(_WORD *)uint64_t v4 = 970;
  unsigned int v165 = *(_DWORD *)(v164 + 44);
  v4[2] = v165;
  if (v165 > 0x7F) {
    uint64_t v166 = sub_188A9CC(v165, v4 + 2);
  }
  else {
    uint64_t v166 = v4 + 3;
  }
  uint64_t v4 = sub_16C1B34(v164, v166, a3);
  if ((v103 & 0x200000) == 0)
  {
LABEL_248:
    if ((v103 & 0x400000) == 0) {
      goto LABEL_249;
    }
    goto LABEL_391;
  }
LABEL_385:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v167 = *(void *)(a1 + 488);
  *(_WORD *)uint64_t v4 = 978;
  unsigned int v168 = *(_DWORD *)(v167 + 44);
  v4[2] = v168;
  if (v168 > 0x7F) {
    v169 = sub_188A9CC(v168, v4 + 2);
  }
  else {
    v169 = v4 + 3;
  }
  uint64_t v4 = sub_1719270(v167, v169, a3);
  if ((v103 & 0x400000) == 0)
  {
LABEL_249:
    if ((v103 & 0x800000) == 0) {
      goto LABEL_250;
    }
    goto LABEL_397;
  }
LABEL_391:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v170 = *(void *)(a1 + 496);
  *(_WORD *)uint64_t v4 = 986;
  unsigned int v171 = *(_DWORD *)(v170 + 20);
  v4[2] = v171;
  if (v171 > 0x7F) {
    uint64_t v172 = sub_188A9CC(v171, v4 + 2);
  }
  else {
    uint64_t v172 = v4 + 3;
  }
  uint64_t v4 = sub_1852928(v170, (unint64_t)v172, a3);
  if ((v103 & 0x800000) == 0)
  {
LABEL_250:
    if ((v103 & 0x1000000) == 0) {
      goto LABEL_251;
    }
    goto LABEL_403;
  }
LABEL_397:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v173 = *(void *)(a1 + 504);
  *(_WORD *)uint64_t v4 = 994;
  unsigned int v174 = *(_DWORD *)(v173 + 64);
  v4[2] = v174;
  if (v174 > 0x7F) {
    v175 = sub_188A9CC(v174, v4 + 2);
  }
  else {
    v175 = v4 + 3;
  }
  uint64_t v4 = sub_177A1E8(v173, v175, a3);
  if ((v103 & 0x1000000) == 0)
  {
LABEL_251:
    if ((v103 & 0x2000000) == 0) {
      goto LABEL_252;
    }
    goto LABEL_409;
  }
LABEL_403:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v176 = *(void *)(a1 + 512);
  *(_WORD *)uint64_t v4 = 1002;
  unsigned int v177 = *(_DWORD *)(v176 + 64);
  v4[2] = v177;
  if (v177 > 0x7F) {
    uint64_t v178 = sub_188A9CC(v177, v4 + 2);
  }
  else {
    uint64_t v178 = v4 + 3;
  }
  uint64_t v4 = sub_177C308(v176, v178, a3);
  if ((v103 & 0x2000000) == 0)
  {
LABEL_252:
    if ((v103 & 0x4000000) == 0) {
      goto LABEL_253;
    }
    goto LABEL_415;
  }
LABEL_409:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v179 = *(void *)(a1 + 520);
  *(_WORD *)uint64_t v4 = 1010;
  unsigned int v180 = *(_DWORD *)(v179 + 20);
  v4[2] = v180;
  if (v180 > 0x7F) {
    v181 = sub_188A9CC(v180, v4 + 2);
  }
  else {
    v181 = v4 + 3;
  }
  uint64_t v4 = sub_132DAC0(v179, (unint64_t)v181, a3);
  if ((v103 & 0x4000000) == 0)
  {
LABEL_253:
    if ((v103 & 0x8000000) == 0) {
      goto LABEL_254;
    }
    goto LABEL_421;
  }
LABEL_415:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v182 = *(void *)(a1 + 528);
  *(_WORD *)uint64_t v4 = 1018;
  unsigned int v183 = *(_DWORD *)(v182 + 44);
  v4[2] = v183;
  if (v183 > 0x7F) {
    v184 = sub_188A9CC(v183, v4 + 2);
  }
  else {
    v184 = v4 + 3;
  }
  uint64_t v4 = sub_17428FC(v182, v184, a3);
  if ((v103 & 0x8000000) == 0)
  {
LABEL_254:
    if ((v103 & 0x10000000) == 0) {
      goto LABEL_255;
    }
    goto LABEL_427;
  }
LABEL_421:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v185 = *(void *)(a1 + 536);
  *(_WORD *)uint64_t v4 = 1154;
  unsigned int v186 = *(_DWORD *)(v185 + 44);
  v4[2] = v186;
  if (v186 > 0x7F) {
    v187 = sub_188A9CC(v186, v4 + 2);
  }
  else {
    v187 = v4 + 3;
  }
  uint64_t v4 = sub_1743530(v185, v187, a3);
  if ((v103 & 0x10000000) == 0)
  {
LABEL_255:
    if ((v103 & 0x20000000) == 0) {
      goto LABEL_256;
    }
    goto LABEL_433;
  }
LABEL_427:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v188 = *(void *)(a1 + 544);
  *(_WORD *)uint64_t v4 = 1162;
  unsigned int v189 = *(_DWORD *)(v188 + 44);
  v4[2] = v189;
  if (v189 > 0x7F) {
    uint64_t v190 = sub_188A9CC(v189, v4 + 2);
  }
  else {
    uint64_t v190 = v4 + 3;
  }
  uint64_t v4 = sub_1745BB4(v188, v190, a3);
  if ((v103 & 0x20000000) == 0)
  {
LABEL_256:
    if ((v103 & 0x40000000) == 0) {
      goto LABEL_257;
    }
    goto LABEL_439;
  }
LABEL_433:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v191 = *(void *)(a1 + 552);
  *(_WORD *)uint64_t v4 = 1170;
  unsigned int v192 = *(_DWORD *)(v191 + 44);
  v4[2] = v192;
  if (v192 > 0x7F) {
    v193 = sub_188A9CC(v192, v4 + 2);
  }
  else {
    v193 = v4 + 3;
  }
  uint64_t v4 = sub_174B0FC(v191, v193, a3);
  if ((v103 & 0x40000000) == 0)
  {
LABEL_257:
    if ((v103 & 0x80000000) == 0) {
      goto LABEL_451;
    }
    goto LABEL_445;
  }
LABEL_439:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v194 = *(void *)(a1 + 560);
  *(_WORD *)uint64_t v4 = 1178;
  unsigned int v195 = *(_DWORD *)(v194 + 64);
  v4[2] = v195;
  if (v195 > 0x7F) {
    uint64_t v196 = sub_188A9CC(v195, v4 + 2);
  }
  else {
    uint64_t v196 = v4 + 3;
  }
  uint64_t v4 = sub_16DC18C(v194, v196, a3);
  if (v103 < 0)
  {
LABEL_445:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v197 = *(void *)(a1 + 568);
    *(_WORD *)uint64_t v4 = 1186;
    unsigned int v198 = *(_DWORD *)(v197 + 64);
    v4[2] = v198;
    if (v198 > 0x7F) {
      v199 = sub_188A9CC(v198, v4 + 2);
    }
    else {
      v199 = v4 + 3;
    }
    uint64_t v4 = sub_16DCA0C(v197, v199, a3);
  }
LABEL_451:
  int v200 = *(_DWORD *)(a1 + 48);
  if (v200)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v201 = *(void *)(a1 + 576);
    *(_WORD *)uint64_t v4 = 1194;
    unsigned int v202 = *(_DWORD *)(v201 + 80);
    v4[2] = v202;
    if (v202 > 0x7F) {
      v203 = sub_188A9CC(v202, v4 + 2);
    }
    else {
      v203 = v4 + 3;
    }
    uint64_t v4 = sub_16DD98C(v201, v203, a3);
    if ((v200 & 2) == 0)
    {
LABEL_453:
      if ((v200 & 4) == 0) {
        goto LABEL_454;
      }
      goto LABEL_496;
    }
  }
  else if ((v200 & 2) == 0)
  {
    goto LABEL_453;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v204 = *(void *)(a1 + 584);
  *(_WORD *)uint64_t v4 = 1202;
  unsigned int v205 = *(_DWORD *)(v204 + 40);
  v4[2] = v205;
  if (v205 > 0x7F) {
    v206 = sub_188A9CC(v205, v4 + 2);
  }
  else {
    v206 = v4 + 3;
  }
  uint64_t v4 = sub_129F058(v204, v206, a3);
  if ((v200 & 4) == 0)
  {
LABEL_454:
    if ((v200 & 8) == 0) {
      goto LABEL_455;
    }
    goto LABEL_502;
  }
LABEL_496:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v207 = *(void *)(a1 + 592);
  *(_WORD *)uint64_t v4 = 1210;
  unsigned int v208 = *(_DWORD *)(v207 + 44);
  v4[2] = v208;
  if (v208 > 0x7F) {
    v209 = sub_188A9CC(v208, v4 + 2);
  }
  else {
    v209 = v4 + 3;
  }
  uint64_t v4 = sub_177AE40(v207, v209, a3);
  if ((v200 & 8) == 0)
  {
LABEL_455:
    if ((v200 & 0x10) == 0) {
      goto LABEL_456;
    }
    goto LABEL_508;
  }
LABEL_502:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v210 = *(void *)(a1 + 600);
  *(_WORD *)uint64_t v4 = 1218;
  unsigned int v211 = *(_DWORD *)(v210 + 88);
  v4[2] = v211;
  if (v211 > 0x7F) {
    BOOL v212 = sub_188A9CC(v211, v4 + 2);
  }
  else {
    BOOL v212 = v4 + 3;
  }
  uint64_t v4 = sub_1759CAC(v210, v212, a3);
  if ((v200 & 0x10) == 0)
  {
LABEL_456:
    if ((v200 & 0x20) == 0) {
      goto LABEL_457;
    }
    goto LABEL_514;
  }
LABEL_508:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v213 = *(void *)(a1 + 608);
  *(_WORD *)uint64_t v4 = 1226;
  unsigned int v214 = *(_DWORD *)(v213 + 20);
  v4[2] = v214;
  if (v214 > 0x7F) {
    v215 = sub_188A9CC(v214, v4 + 2);
  }
  else {
    v215 = v4 + 3;
  }
  uint64_t v4 = sub_161F088(v213, (unint64_t)v215, a3);
  if ((v200 & 0x20) == 0)
  {
LABEL_457:
    if ((v200 & 0x40) == 0) {
      goto LABEL_458;
    }
    goto LABEL_520;
  }
LABEL_514:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v216 = *(void *)(a1 + 616);
  *(_WORD *)uint64_t v4 = 1234;
  unsigned int v217 = *(_DWORD *)(v216 + 44);
  v4[2] = v217;
  if (v217 > 0x7F) {
    v218 = sub_188A9CC(v217, v4 + 2);
  }
  else {
    v218 = v4 + 3;
  }
  uint64_t v4 = sub_1747D34(v216, v218, a3);
  if ((v200 & 0x40) == 0)
  {
LABEL_458:
    if ((v200 & 0x80) == 0) {
      goto LABEL_459;
    }
    goto LABEL_526;
  }
LABEL_520:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v219 = *(void *)(a1 + 624);
  *(_WORD *)uint64_t v4 = 1250;
  unsigned int v220 = *(_DWORD *)(v219 + 64);
  v4[2] = v220;
  if (v220 > 0x7F) {
    v221 = sub_188A9CC(v220, v4 + 2);
  }
  else {
    v221 = v4 + 3;
  }
  uint64_t v4 = sub_174A008(v219, v221, a3);
  if ((v200 & 0x80) == 0)
  {
LABEL_459:
    if ((v200 & 0x100) == 0) {
      goto LABEL_460;
    }
    goto LABEL_532;
  }
LABEL_526:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v222 = *(void *)(a1 + 632);
  *(_WORD *)uint64_t v4 = 1258;
  unsigned int v223 = *(_DWORD *)(v222 + 20);
  v4[2] = v223;
  if (v223 > 0x7F) {
    v224 = sub_188A9CC(v223, v4 + 2);
  }
  else {
    v224 = v4 + 3;
  }
  uint64_t v4 = sub_174A76C(v222, (unint64_t)v224, a3);
  if ((v200 & 0x100) == 0)
  {
LABEL_460:
    if ((v200 & 0x200) == 0) {
      goto LABEL_461;
    }
    goto LABEL_538;
  }
LABEL_532:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v225 = *(void *)(a1 + 640);
  *(_WORD *)uint64_t v4 = 1266;
  unsigned int v226 = *(_DWORD *)(v225 + 88);
  v4[2] = v226;
  if (v226 > 0x7F) {
    v227 = sub_188A9CC(v226, v4 + 2);
  }
  else {
    v227 = v4 + 3;
  }
  uint64_t v4 = sub_16F1D84(v225, v227, a3);
  if ((v200 & 0x200) == 0)
  {
LABEL_461:
    if ((v200 & 0x400) == 0) {
      goto LABEL_462;
    }
    goto LABEL_544;
  }
LABEL_538:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v228 = *(void *)(a1 + 648);
  *(_WORD *)uint64_t v4 = 1274;
  unsigned int v229 = *(_DWORD *)(v228 + 88);
  v4[2] = v229;
  if (v229 > 0x7F) {
    v230 = sub_188A9CC(v229, v4 + 2);
  }
  else {
    v230 = v4 + 3;
  }
  uint64_t v4 = sub_16DE518(v228, v230, a3);
  if ((v200 & 0x400) == 0)
  {
LABEL_462:
    if ((v200 & 0x800) == 0) {
      goto LABEL_463;
    }
    goto LABEL_550;
  }
LABEL_544:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v231 = *(void *)(a1 + 656);
  *(_WORD *)uint64_t v4 = 1418;
  unsigned int v232 = *(_DWORD *)(v231 + 40);
  v4[2] = v232;
  if (v232 > 0x7F) {
    v233 = sub_188A9CC(v232, v4 + 2);
  }
  else {
    v233 = v4 + 3;
  }
  uint64_t v4 = sub_177C8B0(v231, v233, a3);
  if ((v200 & 0x800) == 0)
  {
LABEL_463:
    if ((v200 & 0x1000) == 0) {
      goto LABEL_464;
    }
    goto LABEL_556;
  }
LABEL_550:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v234 = *(void *)(a1 + 664);
  *(_WORD *)uint64_t v4 = 1426;
  unsigned int v235 = *(_DWORD *)(v234 + 44);
  v4[2] = v235;
  if (v235 > 0x7F) {
    v236 = sub_188A9CC(v235, v4 + 2);
  }
  else {
    v236 = v4 + 3;
  }
  uint64_t v4 = sub_17491D8(v234, v236, a3);
  if ((v200 & 0x1000) == 0)
  {
LABEL_464:
    if ((v200 & 0x2000) == 0) {
      goto LABEL_465;
    }
    goto LABEL_562;
  }
LABEL_556:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v237 = *(void *)(a1 + 672);
  *(_WORD *)uint64_t v4 = 1434;
  unsigned int v238 = *(_DWORD *)(v237 + 44);
  v4[2] = v238;
  if (v238 > 0x7F) {
    v239 = sub_188A9CC(v238, v4 + 2);
  }
  else {
    v239 = v4 + 3;
  }
  uint64_t v4 = sub_175A570(v237, v239, a3);
  if ((v200 & 0x2000) == 0)
  {
LABEL_465:
    if ((v200 & 0x4000) == 0) {
      goto LABEL_466;
    }
    goto LABEL_568;
  }
LABEL_562:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v240 = *(void *)(a1 + 680);
  *(_WORD *)uint64_t v4 = 1442;
  unsigned int v241 = *(_DWORD *)(v240 + 44);
  v4[2] = v241;
  if (v241 > 0x7F) {
    v242 = sub_188A9CC(v241, v4 + 2);
  }
  else {
    v242 = v4 + 3;
  }
  uint64_t v4 = sub_16FDA20(v240, v242, a3);
  if ((v200 & 0x4000) == 0)
  {
LABEL_466:
    if ((v200 & 0x8000) == 0) {
      goto LABEL_467;
    }
    goto LABEL_574;
  }
LABEL_568:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v243 = *(void *)(a1 + 688);
  *(_WORD *)uint64_t v4 = 1450;
  unsigned int v244 = *(_DWORD *)(v243 + 20);
  v4[2] = v244;
  if (v244 > 0x7F) {
    v245 = sub_188A9CC(v244, v4 + 2);
  }
  else {
    v245 = v4 + 3;
  }
  uint64_t v4 = sub_1749944(v243, (unint64_t)v245, a3);
  if ((v200 & 0x8000) == 0)
  {
LABEL_467:
    if ((v200 & 0x10000) == 0) {
      goto LABEL_468;
    }
    goto LABEL_580;
  }
LABEL_574:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v246 = *(void *)(a1 + 696);
  *(_WORD *)uint64_t v4 = 1458;
  unsigned int v247 = *(_DWORD *)(v246 + 64);
  v4[2] = v247;
  if (v247 > 0x7F) {
    v248 = sub_188A9CC(v247, v4 + 2);
  }
  else {
    v248 = v4 + 3;
  }
  uint64_t v4 = sub_16F51A8(v246, v248, a3);
  if ((v200 & 0x10000) == 0)
  {
LABEL_468:
    if ((v200 & 0x20000) == 0) {
      goto LABEL_469;
    }
    goto LABEL_586;
  }
LABEL_580:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v249 = *(void *)(a1 + 704);
  *(_WORD *)uint64_t v4 = 1466;
  unsigned int v250 = *(_DWORD *)(v249 + 44);
  v4[2] = v250;
  if (v250 > 0x7F) {
    v251 = sub_188A9CC(v250, v4 + 2);
  }
  else {
    v251 = v4 + 3;
  }
  uint64_t v4 = sub_16F780C(v249, v251, a3);
  if ((v200 & 0x20000) == 0)
  {
LABEL_469:
    if ((v200 & 0x40000) == 0) {
      goto LABEL_470;
    }
    goto LABEL_592;
  }
LABEL_586:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v252 = *(void *)(a1 + 712);
  *(_WORD *)uint64_t v4 = 1474;
  unsigned int v253 = *(_DWORD *)(v252 + 44);
  v4[2] = v253;
  if (v253 > 0x7F) {
    v254 = sub_188A9CC(v253, v4 + 2);
  }
  else {
    v254 = v4 + 3;
  }
  uint64_t v4 = sub_16F8458(v252, v254, a3);
  if ((v200 & 0x40000) == 0)
  {
LABEL_470:
    if ((v200 & 0x80000) == 0) {
      goto LABEL_471;
    }
    goto LABEL_598;
  }
LABEL_592:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v255 = *(void *)(a1 + 720);
  *(_WORD *)uint64_t v4 = 1482;
  unsigned int v256 = *(_DWORD *)(v255 + 44);
  v4[2] = v256;
  if (v256 > 0x7F) {
    v257 = sub_188A9CC(v256, v4 + 2);
  }
  else {
    v257 = v4 + 3;
  }
  uint64_t v4 = sub_17589A8(v255, v257, a3);
  if ((v200 & 0x80000) == 0)
  {
LABEL_471:
    if ((v200 & 0x100000) == 0) {
      goto LABEL_472;
    }
    goto LABEL_604;
  }
LABEL_598:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v258 = *(void *)(a1 + 728);
  *(_WORD *)uint64_t v4 = 1490;
  unsigned int v259 = *(_DWORD *)(v258 + 40);
  v4[2] = v259;
  if (v259 > 0x7F) {
    v260 = sub_188A9CC(v259, v4 + 2);
  }
  else {
    v260 = v4 + 3;
  }
  uint64_t v4 = sub_1784438(v258, v260, a3);
  if ((v200 & 0x100000) == 0)
  {
LABEL_472:
    if ((v200 & 0x200000) == 0) {
      goto LABEL_473;
    }
    goto LABEL_610;
  }
LABEL_604:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v261 = *(void *)(a1 + 736);
  *(_WORD *)uint64_t v4 = 1498;
  unsigned int v262 = *(_DWORD *)(v261 + 44);
  v4[2] = v262;
  if (v262 > 0x7F) {
    v263 = sub_188A9CC(v262, v4 + 2);
  }
  else {
    v263 = v4 + 3;
  }
  uint64_t v4 = sub_16E0DD8(v261, v263, a3);
  if ((v200 & 0x200000) == 0)
  {
LABEL_473:
    if ((v200 & 0x400000) == 0) {
      goto LABEL_474;
    }
    goto LABEL_616;
  }
LABEL_610:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v264 = *(void *)(a1 + 744);
  *(_WORD *)uint64_t v4 = 1506;
  unsigned int v265 = *(_DWORD *)(v264 + 64);
  v4[2] = v265;
  if (v265 > 0x7F) {
    v266 = sub_188A9CC(v265, v4 + 2);
  }
  else {
    v266 = v4 + 3;
  }
  uint64_t v4 = sub_1700678(v264, v266, a3);
  if ((v200 & 0x400000) == 0)
  {
LABEL_474:
    if ((v200 & 0x800000) == 0) {
      goto LABEL_475;
    }
    goto LABEL_622;
  }
LABEL_616:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v267 = *(void *)(a1 + 752);
  *(_WORD *)uint64_t v4 = 1514;
  unsigned int v268 = *(_DWORD *)(v267 + 44);
  v4[2] = v268;
  if (v268 > 0x7F) {
    v269 = sub_188A9CC(v268, v4 + 2);
  }
  else {
    v269 = v4 + 3;
  }
  uint64_t v4 = sub_16F6208(v267, v269, a3);
  if ((v200 & 0x800000) == 0)
  {
LABEL_475:
    if ((v200 & 0x1000000) == 0) {
      goto LABEL_476;
    }
    goto LABEL_628;
  }
LABEL_622:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v270 = *(void *)(a1 + 760);
  *(_WORD *)uint64_t v4 = 1522;
  unsigned int v271 = *(_DWORD *)(v270 + 44);
  v4[2] = v271;
  if (v271 > 0x7F) {
    v272 = sub_188A9CC(v271, v4 + 2);
  }
  else {
    v272 = v4 + 3;
  }
  uint64_t v4 = sub_1775908(v270, v272, a3);
  if ((v200 & 0x1000000) == 0)
  {
LABEL_476:
    if ((v200 & 0x2000000) == 0) {
      goto LABEL_477;
    }
    goto LABEL_634;
  }
LABEL_628:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v273 = *(void *)(a1 + 768);
  *(_WORD *)uint64_t v4 = 1530;
  unsigned int v274 = *(_DWORD *)(v273 + 20);
  v4[2] = v274;
  if (v274 > 0x7F) {
    v275 = sub_188A9CC(v274, v4 + 2);
  }
  else {
    v275 = v4 + 3;
  }
  uint64_t v4 = sub_1785B18(v273, v275, a3);
  if ((v200 & 0x2000000) == 0)
  {
LABEL_477:
    if ((v200 & 0x4000000) == 0) {
      goto LABEL_478;
    }
    goto LABEL_640;
  }
LABEL_634:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v276 = *(void *)(a1 + 776);
  *(_WORD *)uint64_t v4 = 1666;
  unsigned int v277 = *(_DWORD *)(v276 + 44);
  v4[2] = v277;
  if (v277 > 0x7F) {
    v278 = sub_188A9CC(v277, v4 + 2);
  }
  else {
    v278 = v4 + 3;
  }
  uint64_t v4 = sub_16E1B90(v276, v278, a3);
  if ((v200 & 0x4000000) == 0)
  {
LABEL_478:
    if ((v200 & 0x8000000) == 0) {
      goto LABEL_479;
    }
    goto LABEL_646;
  }
LABEL_640:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v279 = *(void *)(a1 + 784);
  *(_WORD *)uint64_t v4 = 1674;
  unsigned int v280 = *(_DWORD *)(v279 + 44);
  v4[2] = v280;
  if (v280 > 0x7F) {
    v281 = sub_188A9CC(v280, v4 + 2);
  }
  else {
    v281 = v4 + 3;
  }
  uint64_t v4 = sub_1767FBC(v279, v281, a3);
  if ((v200 & 0x8000000) == 0)
  {
LABEL_479:
    if ((v200 & 0x10000000) == 0) {
      goto LABEL_480;
    }
    goto LABEL_652;
  }
LABEL_646:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v282 = *(void *)(a1 + 792);
  *(_WORD *)uint64_t v4 = 1682;
  unsigned int v283 = *(_DWORD *)(v282 + 44);
  v4[2] = v283;
  if (v283 > 0x7F) {
    v284 = sub_188A9CC(v283, v4 + 2);
  }
  else {
    v284 = v4 + 3;
  }
  uint64_t v4 = sub_17535E4(v282, v284, a3);
  if ((v200 & 0x10000000) == 0)
  {
LABEL_480:
    if ((v200 & 0x20000000) == 0) {
      goto LABEL_481;
    }
    goto LABEL_658;
  }
LABEL_652:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v285 = *(void *)(a1 + 800);
  *(_WORD *)uint64_t v4 = 1690;
  unsigned int v286 = *(_DWORD *)(v285 + 44);
  v4[2] = v286;
  if (v286 > 0x7F) {
    v287 = sub_188A9CC(v286, v4 + 2);
  }
  else {
    v287 = v4 + 3;
  }
  uint64_t v4 = sub_174BC24(v285, v287, a3);
  if ((v200 & 0x20000000) == 0)
  {
LABEL_481:
    if ((v200 & 0x40000000) == 0) {
      goto LABEL_482;
    }
    goto LABEL_664;
  }
LABEL_658:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v288 = *(void *)(a1 + 808);
  *(_WORD *)uint64_t v4 = 1698;
  unsigned int v289 = *(_DWORD *)(v288 + 44);
  v4[2] = v289;
  if (v289 > 0x7F) {
    v290 = sub_188A9CC(v289, v4 + 2);
  }
  else {
    v290 = v4 + 3;
  }
  uint64_t v4 = sub_174C9A8(v288, v290, a3);
  if ((v200 & 0x40000000) == 0)
  {
LABEL_482:
    if ((v200 & 0x80000000) == 0) {
      goto LABEL_676;
    }
    goto LABEL_670;
  }
LABEL_664:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v291 = *(void *)(a1 + 816);
  *(_WORD *)uint64_t v4 = 1706;
  unsigned int v292 = *(_DWORD *)(v291 + 112);
  v4[2] = v292;
  if (v292 > 0x7F) {
    v293 = sub_188A9CC(v292, v4 + 2);
  }
  else {
    v293 = v4 + 3;
  }
  uint64_t v4 = sub_1750FD4(v291, v293, a3);
  if (v200 < 0)
  {
LABEL_670:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v294 = *(void *)(a1 + 824);
    *(_WORD *)uint64_t v4 = 1714;
    unsigned int v295 = *(_DWORD *)(v294 + 44);
    v4[2] = v295;
    if (v295 > 0x7F) {
      v296 = sub_188A9CC(v295, v4 + 2);
    }
    else {
      v296 = v4 + 3;
    }
    uint64_t v4 = sub_16FF8A0(v294, v296, a3);
  }
LABEL_676:
  int v297 = *(_DWORD *)(a1 + 52);
  if (v297)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v298 = *(void *)(a1 + 832);
    *(_WORD *)uint64_t v4 = 1722;
    unsigned int v299 = *(_DWORD *)(v298 + 44);
    v4[2] = v299;
    if (v299 > 0x7F) {
      v300 = sub_188A9CC(v299, v4 + 2);
    }
    else {
      v300 = v4 + 3;
    }
    uint64_t v4 = sub_174D4F4(v298, v300, a3);
    if ((v297 & 2) == 0)
    {
LABEL_678:
      if ((v297 & 4) == 0) {
        goto LABEL_679;
      }
      goto LABEL_693;
    }
  }
  else if ((v297 & 2) == 0)
  {
    goto LABEL_678;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v301 = *(void *)(a1 + 840);
  *(_WORD *)uint64_t v4 = 1730;
  unsigned int v302 = *(_DWORD *)(v301 + 44);
  v4[2] = v302;
  if (v302 > 0x7F) {
    v303 = sub_188A9CC(v302, v4 + 2);
  }
  else {
    v303 = v4 + 3;
  }
  uint64_t v4 = sub_174E334(v301, v303, a3);
  if ((v297 & 4) == 0)
  {
LABEL_679:
    if ((v297 & 8) == 0) {
      goto LABEL_705;
    }
    goto LABEL_699;
  }
LABEL_693:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v304 = *(void *)(a1 + 848);
  *(_WORD *)uint64_t v4 = 1738;
  unsigned int v305 = *(_DWORD *)(v304 + 44);
  v4[2] = v305;
  if (v305 > 0x7F) {
    v306 = sub_188A9CC(v305, v4 + 2);
  }
  else {
    v306 = v4 + 3;
  }
  uint64_t v4 = sub_174F1B4(v304, v306, a3);
  if ((v297 & 8) != 0)
  {
LABEL_699:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v307 = *(void *)(a1 + 856);
    *(_WORD *)uint64_t v4 = 1746;
    unsigned int v308 = *(_DWORD *)(v307 + 44);
    v4[2] = v308;
    if (v308 > 0x7F) {
      v309 = sub_188A9CC(v308, v4 + 2);
    }
    else {
      v309 = v4 + 3;
    }
    uint64_t v4 = sub_174FE34(v307, v309, a3);
  }
LABEL_705:
  if (*(_WORD *)(a1 + 26)) {
    uint64_t v4 = sub_1886844(a1 + 16, 1000, 3000, v4, a3);
  }
  uint64_t v310 = *(void *)(a1 + 8);
  if ((v310 & 1) == 0) {
    return v4;
  }
  unint64_t v312 = v310 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v312 + 31) < 0)
  {
    v313 = *(void **)(v312 + 8);
    uint64_t v314 = *(void *)(v312 + 16);
  }
  else
  {
    v313 = (void *)(v312 + 8);
    LODWORD(v314) = *(unsigned __int8 *)(v312 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v314)
  {
    uint64_t v315 = (int)v314;
    memcpy(v4, v313, (int)v314);
    v4 += v315;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v313, v314, v4);
}

uint64_t sub_17291AC(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  unsigned int v3 = *(_DWORD *)(a1 + 40);
  if (!(_BYTE)v3) {
    goto LABEL_11;
  }
  if (v3)
  {
    uint64_t v19 = sub_16BC274(*(void *)(a1 + 64));
    v2 += v19 + ((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v3 & 2) == 0)
    {
LABEL_4:
      if ((v3 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_128;
    }
  }
  else if ((v3 & 2) == 0)
  {
    goto LABEL_4;
  }
  uint64_t v20 = sub_16C35A4(*(void *)(a1 + 72));
  v2 += v20 + ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v3 & 4) == 0)
  {
LABEL_5:
    if ((v3 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_129;
  }
LABEL_128:
  uint64_t v21 = sub_16C4388(*(void *)(a1 + 80));
  v2 += v21 + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v3 & 8) == 0)
  {
LABEL_6:
    if ((v3 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_130;
  }
LABEL_129:
  uint64_t v22 = sub_16C5394(*(void *)(a1 + 88));
  v2 += v22 + ((9 * (__clz(v22 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v3 & 0x10) == 0)
  {
LABEL_7:
    if ((v3 & 0x20) == 0) {
      goto LABEL_8;
    }
LABEL_131:
    uint64_t v24 = sub_16E3BD4(*(void *)(a1 + 104));
    v2 += v24 + ((9 * (__clz(v24 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v3 & 0x40) == 0)
    {
LABEL_9:
      if ((v3 & 0x80) == 0) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
    goto LABEL_132;
  }
LABEL_130:
  uint64_t v23 = sub_16C7578(*(void *)(a1 + 96));
  v2 += v23 + ((9 * (__clz(v23 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v3 & 0x20) != 0) {
    goto LABEL_131;
  }
LABEL_8:
  if ((v3 & 0x40) == 0) {
    goto LABEL_9;
  }
LABEL_132:
  uint64_t v25 = sub_16E5670(*(void *)(a1 + 112));
  v2 += v25 + ((9 * (__clz(v25 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v3 & 0x80) != 0)
  {
LABEL_10:
    uint64_t v4 = sub_16EBD94(*(void *)(a1 + 120));
    v2 += v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_11:
  if ((v3 & 0xFF00) == 0) {
    goto LABEL_21;
  }
  if ((v3 & 0x100) != 0)
  {
    uint64_t v26 = sub_16EA048(*(void *)(a1 + 128));
    v2 += v26 + ((9 * (__clz(v26 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v3 & 0x200) == 0)
    {
LABEL_14:
      if ((v3 & 0x400) == 0) {
        goto LABEL_15;
      }
      goto LABEL_136;
    }
  }
  else if ((v3 & 0x200) == 0)
  {
    goto LABEL_14;
  }
  uint64_t v27 = sub_16D8788(*(void *)(a1 + 136));
  v2 += v27 + ((9 * (__clz(v27 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v3 & 0x400) == 0)
  {
LABEL_15:
    if ((v3 & 0x800) == 0) {
      goto LABEL_16;
    }
    goto LABEL_137;
  }
LABEL_136:
  uint64_t v28 = sub_16D06D4(*(void *)(a1 + 144));
  v2 += v28 + ((9 * (__clz(v28 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v3 & 0x800) == 0)
  {
LABEL_16:
    if ((v3 & 0x1000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_138;
  }
LABEL_137:
  uint64_t v29 = sub_16EDF3C(*(void *)(a1 + 152));
  v2 += v29 + ((9 * (__clz(v29 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v3 & 0x1000) == 0)
  {
LABEL_17:
    if ((v3 & 0x2000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_139;
  }
LABEL_138:
  uint64_t v30 = sub_1791074(*(void *)(a1 + 160));
  v2 += v30 + ((9 * (__clz(v30 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v3 & 0x2000) == 0)
  {
LABEL_18:
    if ((v3 & 0x4000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_140;
  }
LABEL_139:
  uint64_t v31 = sub_16F0024(*(void *)(a1 + 168));
  v2 += v31 + ((9 * (__clz(v31 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v3 & 0x4000) == 0)
  {
LABEL_19:
    if ((v3 & 0x8000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_20;
  }
LABEL_140:
  uint64_t v32 = sub_16F1F70(*(void *)(a1 + 176));
  v2 += v32 + ((9 * (__clz(v32 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v3 & 0x8000) != 0)
  {
LABEL_20:
    uint64_t v5 = sub_1460320(*(void *)(a1 + 184));
    v2 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
LABEL_21:
  if ((v3 & 0xFF0000) == 0) {
    goto LABEL_31;
  }
  if ((v3 & 0x10000) != 0)
  {
    uint64_t v33 = sub_16DACC4(*(void *)(a1 + 192));
    v2 += v33 + ((9 * (__clz(v33 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v3 & 0x20000) == 0)
    {
LABEL_24:
      if ((v3 & 0x40000) == 0) {
        goto LABEL_25;
      }
      goto LABEL_144;
    }
  }
  else if ((v3 & 0x20000) == 0)
  {
    goto LABEL_24;
  }
  uint64_t v34 = sub_16F3AF0(*(void *)(a1 + 200));
  v2 += v34 + ((9 * (__clz(v34 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v3 & 0x40000) == 0)
  {
LABEL_25:
    if ((v3 & 0x80000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_145;
  }
LABEL_144:
  uint64_t v35 = sub_16F4710(*(void *)(a1 + 208));
  v2 += v35 + ((9 * (__clz(v35 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v3 & 0x80000) == 0)
  {
LABEL_26:
    if ((v3 & 0x100000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_146;
  }
LABEL_145:
  uint64_t v36 = sub_16FA150(*(void *)(a1 + 216));
  v2 += v36 + ((9 * (__clz(v36 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v3 & 0x100000) == 0)
  {
LABEL_27:
    if ((v3 & 0x200000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_147;
  }
LABEL_146:
  uint64_t v37 = sub_16DB81C(*(void *)(a1 + 224));
  v2 += v37 + ((9 * (__clz(v37 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v3 & 0x200000) == 0)
  {
LABEL_28:
    if ((v3 & 0x400000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_148;
  }
LABEL_147:
  uint64_t v38 = sub_16E2C94(*(void *)(a1 + 232));
  v2 += v38 + ((9 * (__clz(v38 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v3 & 0x400000) == 0)
  {
LABEL_29:
    if ((v3 & 0x800000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_30;
  }
LABEL_148:
  uint64_t v39 = sub_16FCA60(*(void *)(a1 + 240));
  v2 += v39 + ((9 * (__clz(v39 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v3 & 0x800000) != 0)
  {
LABEL_30:
    uint64_t v6 = sub_16D6250(*(void *)(a1 + 248));
    v2 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
LABEL_31:
  if (!HIBYTE(v3)) {
    goto LABEL_40;
  }
  if ((v3 & 0x1000000) != 0)
  {
    uint64_t v85 = sub_17013A8(*(void *)(a1 + 256));
    v2 += v85 + ((9 * (__clz(v85 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v3 & 0x2000000) == 0)
    {
LABEL_34:
      if ((v3 & 0x4000000) == 0) {
        goto LABEL_35;
      }
      goto LABEL_204;
    }
  }
  else if ((v3 & 0x2000000) == 0)
  {
    goto LABEL_34;
  }
  uint64_t v86 = sub_17028C0(*(void *)(a1 + 264));
  v2 += v86 + ((9 * (__clz(v86 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v3 & 0x4000000) == 0)
  {
LABEL_35:
    if ((v3 & 0x8000000) == 0) {
      goto LABEL_36;
    }
    goto LABEL_205;
  }
LABEL_204:
  uint64_t v87 = sub_17093C0(*(void *)(a1 + 272));
  v2 += v87 + ((9 * (__clz(v87 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v3 & 0x8000000) == 0)
  {
LABEL_36:
    if ((v3 & 0x10000000) == 0) {
      goto LABEL_37;
    }
    goto LABEL_206;
  }
LABEL_205:
  uint64_t v88 = sub_16C83C8(*(void *)(a1 + 280));
  v2 += v88 + ((9 * (__clz(v88 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v3 & 0x10000000) == 0)
  {
LABEL_37:
    if ((v3 & 0x20000000) == 0) {
      goto LABEL_38;
    }
    goto LABEL_207;
  }
LABEL_206:
  uint64_t v89 = sub_16C97C0(*(void *)(a1 + 288));
  v2 += v89 + ((9 * (__clz(v89 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v3 & 0x20000000) == 0)
  {
LABEL_38:
    if ((v3 & 0x40000000) == 0) {
      goto LABEL_39;
    }
LABEL_208:
    uint64_t v91 = sub_16CB6EC(*(void *)(a1 + 304));
    v2 += v91 + ((9 * (__clz(v91 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v3 & 0x80000000) == 0) {
      goto LABEL_40;
    }
    goto LABEL_209;
  }
LABEL_207:
  uint64_t v90 = sub_16CAA3C(*(void *)(a1 + 296));
  v2 += v90 + ((9 * (__clz(v90 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v3 & 0x40000000) != 0) {
    goto LABEL_208;
  }
LABEL_39:
  if ((v3 & 0x80000000) == 0) {
    goto LABEL_40;
  }
LABEL_209:
  uint64_t v92 = sub_16E738C(*(void *)(a1 + 312));
  v2 += v92 + ((9 * (__clz(v92 | 1) ^ 0x1F) + 73) >> 6) + 2;
LABEL_40:
  unsigned int v7 = *(_DWORD *)(a1 + 44);
  if (!(_BYTE)v7) {
    goto LABEL_50;
  }
  if (v7)
  {
    uint64_t v40 = sub_170D530(*(void *)(a1 + 320));
    v2 += v40 + ((9 * (__clz(v40 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v7 & 2) == 0)
    {
LABEL_43:
      if ((v7 & 4) == 0) {
        goto LABEL_44;
      }
      goto LABEL_152;
    }
  }
  else if ((v7 & 2) == 0)
  {
    goto LABEL_43;
  }
  uint64_t v41 = sub_170DF30(*(void *)(a1 + 328));
  v2 += v41 + ((9 * (__clz(v41 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v7 & 4) == 0)
  {
LABEL_44:
    if ((v7 & 8) == 0) {
      goto LABEL_45;
    }
    goto LABEL_153;
  }
LABEL_152:
  uint64_t v42 = sub_170F0CC(*(void *)(a1 + 336));
  v2 += v42 + ((9 * (__clz(v42 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v7 & 8) == 0)
  {
LABEL_45:
    if ((v7 & 0x10) == 0) {
      goto LABEL_46;
    }
    goto LABEL_154;
  }
LABEL_153:
  uint64_t v43 = sub_17110C8(*(void *)(a1 + 344));
  v2 += v43 + ((9 * (__clz(v43 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v7 & 0x10) == 0)
  {
LABEL_46:
    if ((v7 & 0x20) == 0) {
      goto LABEL_47;
    }
    goto LABEL_155;
  }
LABEL_154:
  uint64_t v44 = sub_17919A4(*(void *)(a1 + 352));
  v2 += v44 + ((9 * (__clz(v44 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v7 & 0x20) == 0)
  {
LABEL_47:
    if ((v7 & 0x40) == 0) {
      goto LABEL_48;
    }
    goto LABEL_156;
  }
LABEL_155:
  uint64_t v45 = sub_1711F84(*(void *)(a1 + 360));
  v2 += v45 + ((9 * (__clz(v45 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v7 & 0x40) == 0)
  {
LABEL_48:
    if ((v7 & 0x80) == 0) {
      goto LABEL_50;
    }
    goto LABEL_49;
  }
LABEL_156:
  uint64_t v46 = sub_17149A0(*(void *)(a1 + 368));
  v2 += v46 + ((9 * (__clz(v46 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v7 & 0x80) != 0)
  {
LABEL_49:
    uint64_t v8 = sub_171528C(*(void *)(a1 + 376));
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
LABEL_50:
  if ((v7 & 0xFF00) == 0) {
    goto LABEL_60;
  }
  if ((v7 & 0x100) != 0)
  {
    uint64_t v47 = sub_1715C9C(*(void *)(a1 + 384));
    v2 += v47 + ((9 * (__clz(v47 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v7 & 0x200) == 0)
    {
LABEL_53:
      if ((v7 & 0x400) == 0) {
        goto LABEL_54;
      }
      goto LABEL_160;
    }
  }
  else if ((v7 & 0x200) == 0)
  {
    goto LABEL_53;
  }
  uint64_t v48 = sub_1712B1C(*(void *)(a1 + 392));
  v2 += v48 + ((9 * (__clz(v48 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v7 & 0x400) == 0)
  {
LABEL_54:
    if ((v7 & 0x800) == 0) {
      goto LABEL_55;
    }
    goto LABEL_161;
  }
LABEL_160:
  uint64_t v49 = sub_1713388(*(void *)(a1 + 400));
  v2 += v49 + ((9 * (__clz(v49 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v7 & 0x800) == 0)
  {
LABEL_55:
    if ((v7 & 0x1000) == 0) {
      goto LABEL_56;
    }
    goto LABEL_162;
  }
LABEL_161:
  uint64_t v50 = sub_18562DC(*(void *)(a1 + 408));
  v2 += v50 + ((9 * (__clz(v50 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v7 & 0x1000) == 0)
  {
LABEL_56:
    if ((v7 & 0x2000) == 0) {
      goto LABEL_57;
    }
    goto LABEL_163;
  }
LABEL_162:
  uint64_t v51 = sub_1713E74(*(void *)(a1 + 416));
  v2 += v51 + ((9 * (__clz(v51 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v7 & 0x2000) == 0)
  {
LABEL_57:
    if ((v7 & 0x4000) == 0) {
      goto LABEL_58;
    }
    goto LABEL_164;
  }
LABEL_163:
  uint64_t v52 = sub_170BD90(*(void *)(a1 + 424));
  v2 += v52 + ((9 * (__clz(v52 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v7 & 0x4000) == 0)
  {
LABEL_58:
    if ((v7 & 0x8000) == 0) {
      goto LABEL_60;
    }
    goto LABEL_59;
  }
LABEL_164:
  uint64_t v53 = sub_170CBF0(*(void *)(a1 + 432));
  v2 += v53 + ((9 * (__clz(v53 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v7 & 0x8000) != 0)
  {
LABEL_59:
    uint64_t v9 = sub_16ECBD0(*(void *)(a1 + 440));
    v2 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
LABEL_60:
  if ((v7 & 0xFF0000) == 0) {
    goto LABEL_70;
  }
  if ((v7 & 0x10000) != 0)
  {
    uint64_t v54 = sub_16E8254(*(void *)(a1 + 448));
    v2 += v54 + ((9 * (__clz(v54 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v7 & 0x20000) == 0)
    {
LABEL_63:
      if ((v7 & 0x40000) == 0) {
        goto LABEL_64;
      }
      goto LABEL_168;
    }
  }
  else if ((v7 & 0x20000) == 0)
  {
    goto LABEL_63;
  }
  uint64_t v55 = sub_129F19C(*(void *)(a1 + 456));
  v2 += v55 + ((9 * (__clz(v55 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v7 & 0x40000) == 0)
  {
LABEL_64:
    if ((v7 & 0x80000) == 0) {
      goto LABEL_65;
    }
    goto LABEL_169;
  }
LABEL_168:
  uint64_t v56 = sub_18519CC(*(void *)(a1 + 464));
  v2 += v56 + ((9 * (__clz(v56 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v7 & 0x80000) == 0)
  {
LABEL_65:
    if ((v7 & 0x100000) == 0) {
      goto LABEL_66;
    }
    goto LABEL_170;
  }
LABEL_169:
  uint64_t v57 = sub_17172A0(*(void *)(a1 + 472));
  v2 += v57 + ((9 * (__clz(v57 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v7 & 0x100000) == 0)
  {
LABEL_66:
    if ((v7 & 0x200000) == 0) {
      goto LABEL_67;
    }
    goto LABEL_171;
  }
LABEL_170:
  uint64_t v58 = sub_16C1D84(*(void *)(a1 + 480));
  v2 += v58 + ((9 * (__clz(v58 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v7 & 0x200000) == 0)
  {
LABEL_67:
    if ((v7 & 0x400000) == 0) {
      goto LABEL_68;
    }
    goto LABEL_172;
  }
LABEL_171:
  uint64_t v59 = sub_1719710(*(void *)(a1 + 488));
  v2 += v59 + ((9 * (__clz(v59 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v7 & 0x400000) == 0)
  {
LABEL_68:
    if ((v7 & 0x800000) == 0) {
      goto LABEL_70;
    }
    goto LABEL_69;
  }
LABEL_172:
  uint64_t v60 = sub_1852AD4(*(void *)(a1 + 496));
  v2 += v60 + ((9 * (__clz(v60 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v7 & 0x800000) != 0)
  {
LABEL_69:
    uint64_t v10 = sub_177A350(*(void *)(a1 + 504));
    v2 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
LABEL_70:
  if (!HIBYTE(v7)) {
    goto LABEL_79;
  }
  if ((v7 & 0x1000000) != 0)
  {
    uint64_t v93 = sub_177C470(*(void *)(a1 + 512));
    v2 += v93 + ((9 * (__clz(v93 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v7 & 0x2000000) == 0)
    {
LABEL_73:
      if ((v7 & 0x4000000) == 0) {
        goto LABEL_74;
      }
      goto LABEL_212;
    }
  }
  else if ((v7 & 0x2000000) == 0)
  {
    goto LABEL_73;
  }
  uint64_t v94 = sub_132DEF0(*(void *)(a1 + 520));
  v2 += v94 + ((9 * (__clz(v94 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v7 & 0x4000000) == 0)
  {
LABEL_74:
    if ((v7 & 0x8000000) == 0) {
      goto LABEL_75;
    }
    goto LABEL_213;
  }
LABEL_212:
  uint64_t v95 = sub_1742B30(*(void *)(a1 + 528));
  v2 += v95 + ((9 * (__clz(v95 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v7 & 0x8000000) == 0)
  {
LABEL_75:
    if ((v7 & 0x10000000) == 0) {
      goto LABEL_76;
    }
    goto LABEL_214;
  }
LABEL_213:
  uint64_t v96 = sub_1743948(*(void *)(a1 + 536));
  v2 += v96 + ((9 * (__clz(v96 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v7 & 0x10000000) == 0)
  {
LABEL_76:
    if ((v7 & 0x20000000) == 0) {
      goto LABEL_77;
    }
    goto LABEL_215;
  }
LABEL_214:
  uint64_t v97 = sub_17468B4(*(void *)(a1 + 544));
  v2 += v97 + ((9 * (__clz(v97 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v7 & 0x20000000) == 0)
  {
LABEL_77:
    if ((v7 & 0x40000000) == 0) {
      goto LABEL_78;
    }
LABEL_216:
    uint64_t v99 = sub_16DC2F4(*(void *)(a1 + 560));
    v2 += v99 + ((9 * (__clz(v99 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v7 & 0x80000000) == 0) {
      goto LABEL_79;
    }
    goto LABEL_217;
  }
LABEL_215:
  uint64_t v98 = sub_174B380(*(void *)(a1 + 552));
  v2 += v98 + ((9 * (__clz(v98 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v7 & 0x40000000) != 0) {
    goto LABEL_216;
  }
LABEL_78:
  if ((v7 & 0x80000000) == 0) {
    goto LABEL_79;
  }
LABEL_217:
  uint64_t v100 = sub_16DCB74(*(void *)(a1 + 568));
  v2 += v100 + ((9 * (__clz(v100 | 1) ^ 0x1F) + 73) >> 6) + 2;
LABEL_79:
  unsigned int v11 = *(_DWORD *)(a1 + 48);
  if (!(_BYTE)v11) {
    goto LABEL_89;
  }
  if (v11)
  {
    uint64_t v61 = sub_16DDB90(*(void *)(a1 + 576));
    v2 += v61 + ((9 * (__clz(v61 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v11 & 2) == 0)
    {
LABEL_82:
      if ((v11 & 4) == 0) {
        goto LABEL_83;
      }
      goto LABEL_176;
    }
  }
  else if ((v11 & 2) == 0)
  {
    goto LABEL_82;
  }
  uint64_t v62 = sub_129F19C(*(void *)(a1 + 584));
  v2 += v62 + ((9 * (__clz(v62 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v11 & 4) == 0)
  {
LABEL_83:
    if ((v11 & 8) == 0) {
      goto LABEL_84;
    }
    goto LABEL_177;
  }
LABEL_176:
  uint64_t v63 = sub_177B260(*(void *)(a1 + 592));
  v2 += v63 + ((9 * (__clz(v63 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v11 & 8) == 0)
  {
LABEL_84:
    if ((v11 & 0x10) == 0) {
      goto LABEL_85;
    }
    goto LABEL_178;
  }
LABEL_177:
  uint64_t v64 = sub_1759EBC(*(void *)(a1 + 600));
  v2 += v64 + ((9 * (__clz(v64 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v11 & 0x10) == 0)
  {
LABEL_85:
    if ((v11 & 0x20) == 0) {
      goto LABEL_86;
    }
    goto LABEL_179;
  }
LABEL_178:
  uint64_t v65 = sub_161F474(*(void *)(a1 + 608));
  v2 += v65 + ((9 * (__clz(v65 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v11 & 0x20) == 0)
  {
LABEL_86:
    if ((v11 & 0x40) == 0) {
      goto LABEL_87;
    }
    goto LABEL_180;
  }
LABEL_179:
  uint64_t v66 = sub_1748208(*(void *)(a1 + 616));
  v2 += v66 + ((9 * (__clz(v66 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v11 & 0x40) == 0)
  {
LABEL_87:
    if ((v11 & 0x80) == 0) {
      goto LABEL_89;
    }
    goto LABEL_88;
  }
LABEL_180:
  uint64_t v67 = sub_174A170(*(void *)(a1 + 624));
  v2 += v67 + ((9 * (__clz(v67 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v11 & 0x80) != 0)
  {
LABEL_88:
    uint64_t v12 = sub_174A910(*(void *)(a1 + 632));
    v2 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
LABEL_89:
  if ((v11 & 0xFF00) == 0) {
    goto LABEL_99;
  }
  if ((v11 & 0x100) != 0)
  {
    uint64_t v68 = sub_16F1F70(*(void *)(a1 + 640));
    v2 += v68 + ((9 * (__clz(v68 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v11 & 0x200) == 0)
    {
LABEL_92:
      if ((v11 & 0x400) == 0) {
        goto LABEL_93;
      }
      goto LABEL_184;
    }
  }
  else if ((v11 & 0x200) == 0)
  {
    goto LABEL_92;
  }
  uint64_t v69 = sub_16DE704(*(void *)(a1 + 648));
  v2 += v69 + ((9 * (__clz(v69 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v11 & 0x400) == 0)
  {
LABEL_93:
    if ((v11 & 0x800) == 0) {
      goto LABEL_94;
    }
    goto LABEL_185;
  }
LABEL_184:
  uint64_t v70 = sub_177C9F4(*(void *)(a1 + 656));
  v2 += v70 + ((9 * (__clz(v70 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v11 & 0x800) == 0)
  {
LABEL_94:
    if ((v11 & 0x1000) == 0) {
      goto LABEL_95;
    }
    goto LABEL_186;
  }
LABEL_185:
  uint64_t v71 = sub_1749424(*(void *)(a1 + 664));
  v2 += v71 + ((9 * (__clz(v71 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v11 & 0x1000) == 0)
  {
LABEL_95:
    if ((v11 & 0x2000) == 0) {
      goto LABEL_96;
    }
    goto LABEL_187;
  }
LABEL_186:
  uint64_t v72 = sub_175A714(*(void *)(a1 + 672));
  v2 += v72 + ((9 * (__clz(v72 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v11 & 0x2000) == 0)
  {
LABEL_96:
    if ((v11 & 0x4000) == 0) {
      goto LABEL_97;
    }
    goto LABEL_188;
  }
LABEL_187:
  uint64_t v73 = sub_16FDCAC(*(void *)(a1 + 680));
  v2 += v73 + ((9 * (__clz(v73 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v11 & 0x4000) == 0)
  {
LABEL_97:
    if ((v11 & 0x8000) == 0) {
      goto LABEL_99;
    }
    goto LABEL_98;
  }
LABEL_188:
  uint64_t v74 = sub_1749A80(*(void *)(a1 + 688));
  v2 += v74 + ((9 * (__clz(v74 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v11 & 0x8000) != 0)
  {
LABEL_98:
    uint64_t v13 = sub_16F5310(*(void *)(a1 + 696));
    v2 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
LABEL_99:
  if ((v11 & 0xFF0000) == 0) {
    goto LABEL_109;
  }
  if ((v11 & 0x10000) != 0)
  {
    uint64_t v75 = sub_16F79B0(*(void *)(a1 + 704));
    v2 += v75 + ((9 * (__clz(v75 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v11 & 0x20000) == 0)
    {
LABEL_102:
      if ((v11 & 0x40000) == 0) {
        goto LABEL_103;
      }
      goto LABEL_192;
    }
  }
  else if ((v11 & 0x20000) == 0)
  {
    goto LABEL_102;
  }
  uint64_t v76 = sub_16F8684(*(void *)(a1 + 712));
  v2 += v76 + ((9 * (__clz(v76 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v11 & 0x40000) == 0)
  {
LABEL_103:
    if ((v11 & 0x80000) == 0) {
      goto LABEL_104;
    }
    goto LABEL_193;
  }
LABEL_192:
  uint64_t v77 = sub_1758BF4(*(void *)(a1 + 720));
  v2 += v77 + ((9 * (__clz(v77 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v11 & 0x80000) == 0)
  {
LABEL_104:
    if ((v11 & 0x100000) == 0) {
      goto LABEL_105;
    }
    goto LABEL_194;
  }
LABEL_193:
  uint64_t v78 = sub_178457C(*(void *)(a1 + 728));
  v2 += v78 + ((9 * (__clz(v78 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v11 & 0x100000) == 0)
  {
LABEL_105:
    if ((v11 & 0x200000) == 0) {
      goto LABEL_106;
    }
    goto LABEL_195;
  }
LABEL_194:
  uint64_t v79 = sub_16E1000(*(void *)(a1 + 736));
  v2 += v79 + ((9 * (__clz(v79 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v11 & 0x200000) == 0)
  {
LABEL_106:
    if ((v11 & 0x400000) == 0) {
      goto LABEL_107;
    }
    goto LABEL_196;
  }
LABEL_195:
  uint64_t v80 = sub_1700840(*(void *)(a1 + 744));
  v2 += v80 + ((9 * (__clz(v80 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v11 & 0x400000) == 0)
  {
LABEL_107:
    if ((v11 & 0x800000) == 0) {
      goto LABEL_109;
    }
    goto LABEL_108;
  }
LABEL_196:
  uint64_t v81 = sub_16F650C(*(void *)(a1 + 752));
  v2 += v81 + ((9 * (__clz(v81 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v11 & 0x800000) != 0)
  {
LABEL_108:
    uint64_t v14 = sub_1775B84(*(void *)(a1 + 760));
    v2 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
LABEL_109:
  if (!HIBYTE(v11)) {
    goto LABEL_118;
  }
  if ((v11 & 0x1000000) != 0)
  {
    uint64_t v101 = sub_1785C80(*(void *)(a1 + 768));
    v2 += v101 + ((9 * (__clz(v101 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v11 & 0x2000000) == 0)
    {
LABEL_112:
      if ((v11 & 0x4000000) == 0) {
        goto LABEL_113;
      }
      goto LABEL_220;
    }
  }
  else if ((v11 & 0x2000000) == 0)
  {
    goto LABEL_112;
  }
  uint64_t v102 = sub_16E1CFC(*(void *)(a1 + 776));
  v2 += v102 + ((9 * (__clz(v102 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v11 & 0x4000000) == 0)
  {
LABEL_113:
    if ((v11 & 0x8000000) == 0) {
      goto LABEL_114;
    }
    goto LABEL_221;
  }
LABEL_220:
  uint64_t v103 = sub_1768208(*(void *)(a1 + 784));
  v2 += v103 + ((9 * (__clz(v103 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v11 & 0x8000000) == 0)
  {
LABEL_114:
    if ((v11 & 0x10000000) == 0) {
      goto LABEL_115;
    }
    goto LABEL_222;
  }
LABEL_221:
  uint64_t v104 = sub_17538CC(*(void *)(a1 + 792));
  v2 += v104 + ((9 * (__clz(v104 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v11 & 0x10000000) == 0)
  {
LABEL_115:
    if ((v11 & 0x20000000) == 0) {
      goto LABEL_116;
    }
    goto LABEL_223;
  }
LABEL_222:
  uint64_t v105 = sub_174BF20(*(void *)(a1 + 800));
  v2 += v105 + ((9 * (__clz(v105 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v11 & 0x20000000) == 0)
  {
LABEL_116:
    if ((v11 & 0x40000000) == 0) {
      goto LABEL_117;
    }
LABEL_224:
    uint64_t v107 = sub_1751268(*(void *)(a1 + 816));
    v2 += v107 + ((9 * (__clz(v107 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v11 & 0x80000000) == 0) {
      goto LABEL_118;
    }
    goto LABEL_225;
  }
LABEL_223:
  uint64_t v106 = sub_174CADC(*(void *)(a1 + 808));
  v2 += v106 + ((9 * (__clz(v106 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v11 & 0x40000000) != 0) {
    goto LABEL_224;
  }
LABEL_117:
  if ((v11 & 0x80000000) == 0) {
    goto LABEL_118;
  }
LABEL_225:
  uint64_t v108 = sub_16FF9D4(*(void *)(a1 + 824));
  v2 += v108 + ((9 * (__clz(v108 | 1) ^ 0x1F) + 73) >> 6) + 2;
LABEL_118:
  int v15 = *(_DWORD *)(a1 + 52);
  if ((v15 & 0xF) == 0) {
    goto LABEL_124;
  }
  if (v15)
  {
    uint64_t v82 = sub_174D6C4(*(void *)(a1 + 832));
    v2 += v82 + ((9 * (__clz(v82 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v15 & 2) == 0)
    {
LABEL_121:
      if ((v15 & 4) == 0) {
        goto LABEL_122;
      }
      goto LABEL_200;
    }
  }
  else if ((v15 & 2) == 0)
  {
    goto LABEL_121;
  }
  uint64_t v83 = sub_174E624(*(void *)(a1 + 840));
  v2 += v83 + ((9 * (__clz(v83 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v15 & 4) == 0)
  {
LABEL_122:
    if ((v15 & 8) == 0) {
      goto LABEL_124;
    }
    goto LABEL_123;
  }
LABEL_200:
  uint64_t v84 = sub_174F4D8(*(void *)(a1 + 848));
  v2 += v84 + ((9 * (__clz(v84 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v15 & 8) != 0)
  {
LABEL_123:
    uint64_t v16 = sub_174FF24(*(void *)(a1 + 856));
    v2 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
LABEL_124:
  uint64_t v17 = *(void *)(a1 + 8);
  if (v17)
  {
    unint64_t v109 = v17 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v109 + 31) < 0) {
      uint64_t v110 = *(void *)(v109 + 16);
    }
    else {
      uint64_t v110 = *(unsigned __int8 *)(v109 + 31);
    }
    v2 += v110;
  }
  *(_DWORD *)(a1 + 56) = v2;
  return v2;
}

void sub_172A6DC(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(_DWORD *)(a2 + 40);
  if (!(_BYTE)v4) {
    goto LABEL_75;
  }
  if (v4)
  {
    *(_DWORD *)(a1 + 40) |= 1u;
    uint64_t v5 = *(void *)(a1 + 64);
    if (!v5)
    {
      uint64_t v6 = *(void *)(a1 + 8);
      unsigned int v7 = (void *)(v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (v6) {
        unsigned int v7 = (void *)*v7;
      }
      uint64_t v5 = sub_1786348((uint64_t)v7);
      *(void *)(a1 + 64) = v5;
    }
    if (*(void *)(a2 + 64)) {
      uint64_t v8 = *(uint64_t (****)())(a2 + 64);
    }
    else {
      uint64_t v8 = &off_25444D8;
    }
    sub_16BCBA4(v5, (uint64_t)v8);
    if ((v4 & 2) == 0)
    {
LABEL_4:
      if ((v4 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_27;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_4;
  }
  *(_DWORD *)(a1 + 40) |= 2u;
  uint64_t v9 = *(void *)(a1 + 72);
  if (!v9)
  {
    uint64_t v10 = *(void *)(a1 + 8);
    unsigned int v11 = (void *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
    if (v10) {
      unsigned int v11 = (void *)*v11;
    }
    uint64_t v9 = sub_178672C((uint64_t)v11);
    *(void *)(a1 + 72) = v9;
  }
  if (*(void *)(a2 + 72)) {
    uint64_t v12 = *(uint64_t (****)())(a2 + 72);
  }
  else {
    uint64_t v12 = &off_25448E8;
  }
  sub_16C3764(v9, (uint64_t)v12);
  if ((v4 & 4) == 0)
  {
LABEL_5:
    if ((v4 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_35;
  }
LABEL_27:
  *(_DWORD *)(a1 + 40) |= 4u;
  uint64_t v13 = *(void *)(a1 + 80);
  if (!v13)
  {
    uint64_t v14 = *(void *)(a1 + 8);
    int v15 = (void *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
    if (v14) {
      int v15 = (void *)*v15;
    }
    uint64_t v13 = sub_17867E4((uint64_t)v15);
    *(void *)(a1 + 80) = v13;
  }
  if (*(void *)(a2 + 80)) {
    uint64_t v16 = *(uint64_t (****)())(a2 + 80);
  }
  else {
    uint64_t v16 = &off_2544980;
  }
  sub_16C4438(v13, (uint64_t)v16);
  if ((v4 & 8) == 0)
  {
LABEL_6:
    if ((v4 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_43;
  }
LABEL_35:
  *(_DWORD *)(a1 + 40) |= 8u;
  uint64_t v17 = *(void *)(a1 + 88);
  if (!v17)
  {
    uint64_t v18 = *(void *)(a1 + 8);
    uint64_t v19 = (void *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
    if (v18) {
      uint64_t v19 = (void *)*v19;
    }
    uint64_t v17 = sub_17868E0((uint64_t)v19);
    *(void *)(a1 + 88) = v17;
  }
  if (*(void *)(a2 + 88)) {
    uint64_t v20 = *(uint64_t (****)())(a2 + 88);
  }
  else {
    uint64_t v20 = &off_25449E0;
  }
  sub_16C54BC(v17, (uint64_t)v20);
  if ((v4 & 0x10) == 0)
  {
LABEL_7:
    if ((v4 & 0x20) == 0) {
      goto LABEL_8;
    }
    goto LABEL_51;
  }
LABEL_43:
  *(_DWORD *)(a1 + 40) |= 0x10u;
  uint64_t v21 = *(void *)(a1 + 96);
  if (!v21)
  {
    uint64_t v22 = *(void *)(a1 + 8);
    uint64_t v23 = (void *)(v22 & 0xFFFFFFFFFFFFFFFCLL);
    if (v22) {
      uint64_t v23 = (void *)*v23;
    }
    uint64_t v21 = sub_1786AA0((uint64_t)v23);
    *(void *)(a1 + 96) = v21;
  }
  if (*(void *)(a2 + 96)) {
    uint64_t v24 = *(uint64_t (****)())(a2 + 96);
  }
  else {
    uint64_t v24 = &off_2544AB0;
  }
  sub_16C7704(v21, (uint64_t)v24);
  if ((v4 & 0x20) == 0)
  {
LABEL_8:
    if ((v4 & 0x40) == 0) {
      goto LABEL_9;
    }
    goto LABEL_59;
  }
LABEL_51:
  *(_DWORD *)(a1 + 40) |= 0x20u;
  uint64_t v25 = *(void *)(a1 + 104);
  if (!v25)
  {
    uint64_t v26 = *(void *)(a1 + 8);
    uint64_t v27 = (void *)(v26 & 0xFFFFFFFFFFFFFFFCLL);
    if (v26) {
      uint64_t v27 = (void *)*v27;
    }
    uint64_t v25 = sub_1788078((uint64_t)v27);
    *(void *)(a1 + 104) = v25;
  }
  if (*(void *)(a2 + 104)) {
    uint64_t v28 = *(uint64_t (****)())(a2 + 104);
  }
  else {
    uint64_t v28 = &off_25456A8;
  }
  sub_16E3D14(v25, (uint64_t)v28);
  if ((v4 & 0x40) == 0)
  {
LABEL_9:
    if ((v4 & 0x80) == 0) {
      goto LABEL_75;
    }
    goto LABEL_67;
  }
LABEL_59:
  *(_DWORD *)(a1 + 40) |= 0x40u;
  uint64_t v29 = *(void **)(a1 + 112);
  if (!v29)
  {
    uint64_t v30 = *(void *)(a1 + 8);
    uint64_t v31 = (void *)(v30 & 0xFFFFFFFFFFFFFFFCLL);
    if (v30) {
      uint64_t v31 = (void *)*v31;
    }
    uint64_t v29 = sub_17881B4((uint64_t)v31);
    *(void *)(a1 + 112) = v29;
  }
  if (*(void *)(a2 + 112)) {
    uint64_t v32 = *(uint64_t (****)())(a2 + 112);
  }
  else {
    uint64_t v32 = &off_2545760;
  }
  sub_16E57EC((uint64_t)v29, (uint64_t)v32);
  if ((v4 & 0x80) != 0)
  {
LABEL_67:
    *(_DWORD *)(a1 + 40) |= 0x80u;
    uint64_t v33 = *(void **)(a1 + 120);
    if (!v33)
    {
      uint64_t v34 = *(void *)(a1 + 8);
      uint64_t v35 = (void *)(v34 & 0xFFFFFFFFFFFFFFFCLL);
      if (v34) {
        uint64_t v35 = (void *)*v35;
      }
      uint64_t v33 = sub_1788710((uint64_t)v35);
      *(void *)(a1 + 120) = v33;
    }
    if (*(void *)(a2 + 120)) {
      uint64_t v36 = *(uint64_t (****)())(a2 + 120);
    }
    else {
      uint64_t v36 = &off_2545A18;
    }
    sub_16BF9C4((uint64_t)v33, (uint64_t)v36);
  }
LABEL_75:
  if ((v4 & 0xFF00) == 0) {
    goto LABEL_149;
  }
  if ((v4 & 0x100) != 0)
  {
    *(_DWORD *)(a1 + 40) |= 0x100u;
    uint64_t v37 = *(void **)(a1 + 128);
    if (!v37)
    {
      uint64_t v38 = *(void *)(a1 + 8);
      uint64_t v39 = (void *)(v38 & 0xFFFFFFFFFFFFFFFCLL);
      if (v38) {
        uint64_t v39 = (void *)*v39;
      }
      uint64_t v37 = sub_1788574((uint64_t)v39);
      *(void *)(a1 + 128) = v37;
    }
    if (*(void *)(a2 + 128)) {
      uint64_t v40 = *(uint64_t (****)())(a2 + 128);
    }
    else {
      uint64_t v40 = &off_2545950;
    }
    sub_16EA18C((uint64_t)v37, (uint64_t)v40);
    if ((v4 & 0x200) == 0)
    {
LABEL_78:
      if ((v4 & 0x400) == 0) {
        goto LABEL_79;
      }
      goto LABEL_101;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_78;
  }
  *(_DWORD *)(a1 + 40) |= 0x200u;
  uint64_t v41 = *(void **)(a1 + 136);
  if (!v41)
  {
    uint64_t v42 = *(void *)(a1 + 8);
    uint64_t v43 = (void *)(v42 & 0xFFFFFFFFFFFFFFFCLL);
    if (v42) {
      uint64_t v43 = (void *)*v43;
    }
    uint64_t v41 = sub_1787760((uint64_t)v43);
    *(void *)(a1 + 136) = v41;
  }
  if (*(void *)(a2 + 136)) {
    uint64_t v44 = *(uint64_t (****)())(a2 + 136);
  }
  else {
    uint64_t v44 = &off_25450F8;
  }
  sub_16D8ABC((uint64_t)v41, (uint64_t)v44);
  if ((v4 & 0x400) == 0)
  {
LABEL_79:
    if ((v4 & 0x800) == 0) {
      goto LABEL_80;
    }
    goto LABEL_109;
  }
LABEL_101:
  *(_DWORD *)(a1 + 40) |= 0x400u;
  uint64_t v45 = *(void *)(a1 + 144);
  if (!v45)
  {
    uint64_t v46 = *(void *)(a1 + 8);
    uint64_t v47 = (void *)(v46 & 0xFFFFFFFFFFFFFFFCLL);
    if (v46) {
      uint64_t v47 = (void *)*v47;
    }
    uint64_t v45 = sub_178734C((uint64_t)v47);
    *(void *)(a1 + 144) = v45;
  }
  if (*(void *)(a2 + 144)) {
    uint64_t v48 = *(uint64_t (****)())(a2 + 144);
  }
  else {
    uint64_t v48 = &off_2544E18;
  }
  sub_16D08A8(v45, (uint64_t)v48);
  if ((v4 & 0x800) == 0)
  {
LABEL_80:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_81;
    }
    goto LABEL_117;
  }
LABEL_109:
  *(_DWORD *)(a1 + 40) |= 0x800u;
  uint64_t v49 = *(void *)(a1 + 152);
  if (!v49)
  {
    uint64_t v50 = *(void *)(a1 + 8);
    uint64_t v51 = (void *)(v50 & 0xFFFFFFFFFFFFFFFCLL);
    if (v50) {
      uint64_t v51 = (void *)*v51;
    }
    uint64_t v49 = sub_1788880((uint64_t)v51);
    *(void *)(a1 + 152) = v49;
  }
  if (*(void *)(a2 + 152)) {
    uint64_t v52 = *(uint64_t (****)())(a2 + 152);
  }
  else {
    uint64_t v52 = &off_2545B20;
  }
  sub_16EE124(v49, (uint64_t)v52);
  if ((v4 & 0x1000) == 0)
  {
LABEL_81:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_82;
    }
    goto LABEL_125;
  }
LABEL_117:
  *(_DWORD *)(a1 + 40) |= 0x1000u;
  uint64_t v53 = *(void *)(a1 + 160);
  if (!v53)
  {
    uint64_t v54 = *(void *)(a1 + 8);
    uint64_t v55 = (void *)(v54 & 0xFFFFFFFFFFFFFFFCLL);
    if (v54) {
      uint64_t v55 = (void *)*v55;
    }
    uint64_t v53 = sub_17913DC((uint64_t)v55);
    *(void *)(a1 + 160) = v53;
  }
  if (*(void *)(a2 + 160)) {
    uint64_t v56 = *(uint64_t (****)())(a2 + 160);
  }
  else {
    uint64_t v56 = &off_2549718;
  }
  sub_172C700(v53, (uint64_t)v56);
  if ((v4 & 0x2000) == 0)
  {
LABEL_82:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_83;
    }
    goto LABEL_133;
  }
LABEL_125:
  *(_DWORD *)(a1 + 40) |= 0x2000u;
  uint64_t v57 = *(void **)(a1 + 168);
  if (!v57)
  {
    uint64_t v58 = *(void *)(a1 + 8);
    uint64_t v59 = (void *)(v58 & 0xFFFFFFFFFFFFFFFCLL);
    if (v58) {
      uint64_t v59 = (void *)*v59;
    }
    uint64_t v57 = sub_1788A04((uint64_t)v59);
    *(void *)(a1 + 168) = v57;
  }
  if (*(void *)(a2 + 168)) {
    uint64_t v60 = *(uint64_t (****)())(a2 + 168);
  }
  else {
    uint64_t v60 = &off_2545BF8;
  }
  sub_134F47C((uint64_t)v57, (uint64_t)v60);
  if ((v4 & 0x4000) == 0)
  {
LABEL_83:
    if ((v4 & 0x8000) == 0) {
      goto LABEL_149;
    }
    goto LABEL_141;
  }
LABEL_133:
  *(_DWORD *)(a1 + 40) |= 0x4000u;
  uint64_t v61 = *(void *)(a1 + 176);
  if (!v61)
  {
    uint64_t v62 = *(void *)(a1 + 8);
    uint64_t v63 = (void *)(v62 & 0xFFFFFFFFFFFFFFFCLL);
    if (v62) {
      uint64_t v63 = (void *)*v63;
    }
    uint64_t v61 = sub_1788B18((uint64_t)v63);
    *(void *)(a1 + 176) = v61;
  }
  if (*(void *)(a2 + 176)) {
    uint64_t v64 = *(uint64_t (****)())(a2 + 176);
  }
  else {
    uint64_t v64 = &off_2545CE8;
  }
  sub_16F2074(v61, (uint64_t)v64);
  if ((v4 & 0x8000) != 0)
  {
LABEL_141:
    *(_DWORD *)(a1 + 40) |= 0x8000u;
    uint64_t v65 = *(void **)(a1 + 184);
    if (!v65)
    {
      uint64_t v66 = *(void *)(a1 + 8);
      uint64_t v67 = (void *)(v66 & 0xFFFFFFFFFFFFFFFCLL);
      if (v66) {
        uint64_t v67 = (void *)*v67;
      }
      uint64_t v65 = sub_1478C60((uint64_t)v67);
      *(void *)(a1 + 184) = v65;
    }
    if (*(void *)(a2 + 184)) {
      uint64_t v68 = *(uint64_t (****)())(a2 + 184);
    }
    else {
      uint64_t v68 = &off_2539400;
    }
    sub_136AC4C((uint64_t)v65, (uint64_t)v68);
  }
LABEL_149:
  if ((v4 & 0xFF0000) == 0) {
    goto LABEL_223;
  }
  if ((v4 & 0x10000) != 0)
  {
    *(_DWORD *)(a1 + 40) |= 0x10000u;
    uint64_t v69 = *(void *)(a1 + 192);
    if (!v69)
    {
      uint64_t v70 = *(void *)(a1 + 8);
      uint64_t v71 = (void *)(v70 & 0xFFFFFFFFFFFFFFFCLL);
      if (v70) {
        uint64_t v71 = (void *)*v71;
      }
      uint64_t v69 = sub_17878EC((uint64_t)v71);
      *(void *)(a1 + 192) = v69;
    }
    if (*(void *)(a2 + 192)) {
      uint64_t v72 = *(uint64_t (****)())(a2 + 192);
    }
    else {
      uint64_t v72 = &off_2545288;
    }
    sub_16DAD74(v69, (uint64_t)v72);
    if ((v4 & 0x20000) == 0)
    {
LABEL_152:
      if ((v4 & 0x40000) == 0) {
        goto LABEL_153;
      }
      goto LABEL_175;
    }
  }
  else if ((v4 & 0x20000) == 0)
  {
    goto LABEL_152;
  }
  *(_DWORD *)(a1 + 40) |= 0x20000u;
  uint64_t v73 = *(void **)(a1 + 200);
  if (!v73)
  {
    uint64_t v74 = *(void *)(a1 + 8);
    uint64_t v75 = (void *)(v74 & 0xFFFFFFFFFFFFFFFCLL);
    if (v74) {
      uint64_t v75 = (void *)*v75;
    }
    uint64_t v73 = sub_1788D20((uint64_t)v75);
    *(void *)(a1 + 200) = v73;
  }
  if (*(void *)(a2 + 200)) {
    uint64_t v76 = *(uint64_t (****)())(a2 + 200);
  }
  else {
    uint64_t v76 = &off_2545DF0;
  }
  sub_16F3BC8((uint64_t)v73, (uint64_t)v76);
  if ((v4 & 0x40000) == 0)
  {
LABEL_153:
    if ((v4 & 0x80000) == 0) {
      goto LABEL_154;
    }
    goto LABEL_183;
  }
LABEL_175:
  *(_DWORD *)(a1 + 40) |= 0x40000u;
  uint64_t v77 = *(void **)(a1 + 208);
  if (!v77)
  {
    uint64_t v78 = *(void *)(a1 + 8);
    uint64_t v79 = (void *)(v78 & 0xFFFFFFFFFFFFFFFCLL);
    if (v78) {
      uint64_t v79 = (void *)*v79;
    }
    uint64_t v77 = sub_1788E34((uint64_t)v79);
    *(void *)(a1 + 208) = v77;
  }
  if (*(void *)(a2 + 208)) {
    uint64_t v80 = *(uint64_t (****)())(a2 + 208);
  }
  else {
    uint64_t v80 = &off_2545E40;
  }
  sub_16F484C((uint64_t)v77, (uint64_t)v80);
  if ((v4 & 0x80000) == 0)
  {
LABEL_154:
    if ((v4 & 0x100000) == 0) {
      goto LABEL_155;
    }
    goto LABEL_191;
  }
LABEL_183:
  *(_DWORD *)(a1 + 40) |= 0x80000u;
  uint64_t v81 = *(void *)(a1 + 216);
  if (!v81)
  {
    uint64_t v82 = *(void *)(a1 + 8);
    uint64_t v83 = (void *)(v82 & 0xFFFFFFFFFFFFFFFCLL);
    if (v82) {
      uint64_t v83 = (void *)*v83;
    }
    uint64_t v81 = sub_1789374((uint64_t)v83);
    *(void *)(a1 + 216) = v81;
  }
  if (*(void *)(a2 + 216)) {
    uint64_t v84 = *(uint64_t (****)())(a2 + 216);
  }
  else {
    uint64_t v84 = &off_2546098;
  }
  sub_16FA420(v81, (uint64_t)v84);
  if ((v4 & 0x100000) == 0)
  {
LABEL_155:
    if ((v4 & 0x200000) == 0) {
      goto LABEL_156;
    }
    goto LABEL_199;
  }
LABEL_191:
  *(_DWORD *)(a1 + 40) |= 0x100000u;
  uint64_t v85 = *(void *)(a1 + 224);
  if (!v85)
  {
    uint64_t v86 = *(void *)(a1 + 8);
    uint64_t v87 = (void *)(v86 & 0xFFFFFFFFFFFFFFFCLL);
    if (v86) {
      uint64_t v87 = (void *)*v87;
    }
    uint64_t v85 = sub_1787A04((uint64_t)v87);
    *(void *)(a1 + 224) = v85;
  }
  if (*(void *)(a2 + 224)) {
    uint64_t v88 = *(uint64_t (****)())(a2 + 224);
  }
  else {
    uint64_t v88 = &off_25452D0;
  }
  sub_16DB8CC(v85, (uint64_t)v88);
  if ((v4 & 0x200000) == 0)
  {
LABEL_156:
    if ((v4 & 0x400000) == 0) {
      goto LABEL_157;
    }
    goto LABEL_207;
  }
LABEL_199:
  *(_DWORD *)(a1 + 40) |= 0x200000u;
  uint64_t v89 = *(void *)(a1 + 232);
  if (!v89)
  {
    uint64_t v90 = *(void *)(a1 + 8);
    uint64_t v91 = (void *)(v90 & 0xFFFFFFFFFFFFFFFCLL);
    if (v90) {
      uint64_t v91 = (void *)*v91;
    }
    uint64_t v89 = sub_1787FA4((uint64_t)v91);
    *(void *)(a1 + 232) = v89;
  }
  if (*(void *)(a2 + 232)) {
    uint64_t v92 = *(uint64_t (****)())(a2 + 232);
  }
  else {
    uint64_t v92 = &off_2545640;
  }
  sub_16E2DDC(v89, (uint64_t)v92);
  if ((v4 & 0x400000) == 0)
  {
LABEL_157:
    if ((v4 & 0x800000) == 0) {
      goto LABEL_223;
    }
    goto LABEL_215;
  }
LABEL_207:
  *(_DWORD *)(a1 + 40) |= 0x400000u;
  uint64_t v93 = *(void *)(a1 + 240);
  if (!v93)
  {
    uint64_t v94 = *(void *)(a1 + 8);
    uint64_t v95 = (void *)(v94 & 0xFFFFFFFFFFFFFFFCLL);
    if (v94) {
      uint64_t v95 = (void *)*v95;
    }
    uint64_t v93 = sub_17894DC((uint64_t)v95);
    *(void *)(a1 + 240) = v93;
  }
  if (*(void *)(a2 + 240)) {
    uint64_t v96 = *(uint64_t (****)())(a2 + 240);
  }
  else {
    uint64_t v96 = &off_2546190;
  }
  sub_16FCCEC(v93, (uint64_t)v96);
  if ((v4 & 0x800000) != 0)
  {
LABEL_215:
    *(_DWORD *)(a1 + 40) |= 0x800000u;
    uint64_t v97 = *(void *)(a1 + 248);
    if (!v97)
    {
      uint64_t v98 = *(void *)(a1 + 8);
      uint64_t v99 = (void *)(v98 & 0xFFFFFFFFFFFFFFFCLL);
      if (v98) {
        uint64_t v99 = (void *)*v99;
      }
      uint64_t v97 = sub_178760C((uint64_t)v99);
      *(void *)(a1 + 248) = v97;
    }
    if (*(void *)(a2 + 248)) {
      uint64_t v100 = *(uint64_t (****)())(a2 + 248);
    }
    else {
      uint64_t v100 = &off_2545000;
    }
    sub_16D6518(v97, (uint64_t)v100);
  }
LABEL_223:
  if (!HIBYTE(v4)) {
    goto LABEL_297;
  }
  if ((v4 & 0x1000000) != 0)
  {
    *(_DWORD *)(a1 + 40) |= 0x1000000u;
    uint64_t v101 = *(void **)(a1 + 256);
    if (!v101)
    {
      uint64_t v102 = *(void *)(a1 + 8);
      uint64_t v103 = (void *)(v102 & 0xFFFFFFFFFFFFFFFCLL);
      if (v102) {
        uint64_t v103 = (void *)*v103;
      }
      uint64_t v101 = sub_1789834((uint64_t)v103);
      *(void *)(a1 + 256) = v101;
    }
    if (*(void *)(a2 + 256)) {
      uint64_t v104 = *(uint64_t (****)())(a2 + 256);
    }
    else {
      uint64_t v104 = &off_25463C0;
    }
    sub_17014FC((uint64_t)v101, (uint64_t)v104);
    if ((v4 & 0x2000000) == 0)
    {
LABEL_226:
      if ((v4 & 0x4000000) == 0) {
        goto LABEL_227;
      }
      goto LABEL_249;
    }
  }
  else if ((v4 & 0x2000000) == 0)
  {
    goto LABEL_226;
  }
  *(_DWORD *)(a1 + 40) |= 0x2000000u;
  uint64_t v105 = *(std::string **)(a1 + 264);
  if (!v105)
  {
    uint64_t v106 = *(void *)(a1 + 8);
    uint64_t v107 = (void *)(v106 & 0xFFFFFFFFFFFFFFFCLL);
    if (v106) {
      uint64_t v107 = (void *)*v107;
    }
    uint64_t v105 = (std::string *)sub_17899BC((uint64_t)v107);
    *(void *)(a1 + 264) = v105;
  }
  if (*(void *)(a2 + 264)) {
    uint64_t v108 = *(uint64_t (****)())(a2 + 264);
  }
  else {
    uint64_t v108 = &off_2546410;
  }
  sub_17029A8(v105, (uint64_t)v108);
  if ((v4 & 0x4000000) == 0)
  {
LABEL_227:
    if ((v4 & 0x8000000) == 0) {
      goto LABEL_228;
    }
    goto LABEL_257;
  }
LABEL_249:
  *(_DWORD *)(a1 + 40) |= 0x4000000u;
  uint64_t v109 = *(void *)(a1 + 272);
  if (!v109)
  {
    uint64_t v110 = *(void *)(a1 + 8);
    unsigned int v111 = (void *)(v110 & 0xFFFFFFFFFFFFFFFCLL);
    if (v110) {
      unsigned int v111 = (void *)*v111;
    }
    uint64_t v109 = sub_1789FF4((uint64_t)v111);
    *(void *)(a1 + 272) = v109;
  }
  if (*(void *)(a2 + 272)) {
    v112 = *(uint64_t (****)())(a2 + 272);
  }
  else {
    v112 = &off_2546640;
  }
  sub_1709670(v109, (uint64_t)v112);
  if ((v4 & 0x8000000) == 0)
  {
LABEL_228:
    if ((v4 & 0x10000000) == 0) {
      goto LABEL_229;
    }
    goto LABEL_265;
  }
LABEL_257:
  *(_DWORD *)(a1 + 40) |= 0x8000000u;
  uint64_t v113 = *(void **)(a1 + 280);
  if (!v113)
  {
    uint64_t v114 = *(void *)(a1 + 8);
    v115 = (void *)(v114 & 0xFFFFFFFFFFFFFFFCLL);
    if (v114) {
      v115 = (void *)*v115;
    }
    uint64_t v113 = sub_1786B58((uint64_t)v115);
    *(void *)(a1 + 280) = v113;
  }
  if (*(void *)(a2 + 280)) {
    uint64_t v116 = *(uint64_t (****)())(a2 + 280);
  }
  else {
    uint64_t v116 = &off_2544B60;
  }
  sub_16C1200((uint64_t)v113, (uint64_t)v116);
  if ((v4 & 0x10000000) == 0)
  {
LABEL_229:
    if ((v4 & 0x20000000) == 0) {
      goto LABEL_230;
    }
    goto LABEL_273;
  }
LABEL_265:
  *(_DWORD *)(a1 + 40) |= 0x10000000u;
  uint64_t v117 = *(void *)(a1 + 288);
  if (!v117)
  {
    uint64_t v118 = *(void *)(a1 + 8);
    uint64_t v119 = (void *)(v118 & 0xFFFFFFFFFFFFFFFCLL);
    if (v118) {
      uint64_t v119 = (void *)*v119;
    }
    uint64_t v117 = sub_1786CF4((uint64_t)v119);
    *(void *)(a1 + 288) = v117;
  }
  if (*(void *)(a2 + 288)) {
    unsigned int v120 = *(uint64_t (****)())(a2 + 288);
  }
  else {
    unsigned int v120 = &off_2544BD0;
  }
  sub_16C9874(v117, (uint64_t)v120);
  if ((v4 & 0x20000000) == 0)
  {
LABEL_230:
    if ((v4 & 0x40000000) == 0) {
      goto LABEL_231;
    }
    goto LABEL_281;
  }
LABEL_273:
  *(_DWORD *)(a1 + 40) |= 0x20000000u;
  v121 = *(std::string **)(a1 + 296);
  if (!v121)
  {
    uint64_t v122 = *(void *)(a1 + 8);
    unsigned int v123 = (void *)(v122 & 0xFFFFFFFFFFFFFFFCLL);
    if (v122) {
      unsigned int v123 = (void *)*v123;
    }
    v121 = (std::string *)sub_1786E6C((uint64_t)v123);
    *(void *)(a1 + 296) = v121;
  }
  if (*(void *)(a2 + 296)) {
    v124 = *(uint64_t (****)())(a2 + 296);
  }
  else {
    v124 = &off_2544C30;
  }
  sub_16CAAEC(v121, (uint64_t)v124);
  if ((v4 & 0x40000000) == 0)
  {
LABEL_231:
    if ((v4 & 0x80000000) == 0) {
      goto LABEL_297;
    }
    goto LABEL_289;
  }
LABEL_281:
  *(_DWORD *)(a1 + 40) |= 0x40000000u;
  uint64_t v125 = *(void **)(a1 + 304);
  if (!v125)
  {
    uint64_t v126 = *(void *)(a1 + 8);
    uint64_t v127 = (void *)(v126 & 0xFFFFFFFFFFFFFFFCLL);
    if (v126) {
      uint64_t v127 = (void *)*v127;
    }
    uint64_t v125 = sub_1786F84((uint64_t)v127);
    *(void *)(a1 + 304) = v125;
  }
  if (*(void *)(a2 + 304)) {
    uint64_t v128 = *(uint64_t (****)())(a2 + 304);
  }
  else {
    uint64_t v128 = &off_2544C78;
  }
  sub_16CB80C((uint64_t)v125, (uint64_t)v128);
  if ((v4 & 0x80000000) != 0)
  {
LABEL_289:
    *(_DWORD *)(a1 + 40) |= 0x80000000;
    unsigned int v129 = *(void **)(a1 + 312);
    if (!v129)
    {
      uint64_t v130 = *(void *)(a1 + 8);
      uint64_t v131 = (void *)(v130 & 0xFFFFFFFFFFFFFFFCLL);
      if (v130) {
        uint64_t v131 = (void *)*v131;
      }
      unsigned int v129 = sub_17882F0((uint64_t)v131);
      *(void *)(a1 + 312) = v129;
    }
    if (*(void *)(a2 + 312)) {
      unsigned int v132 = *(uint64_t (****)())(a2 + 312);
    }
    else {
      unsigned int v132 = &off_2545840;
    }
    sub_16E74D4((uint64_t)v129, (uint64_t)v132);
  }
LABEL_297:
  unsigned int v133 = *(_DWORD *)(a2 + 44);
  if (!(_BYTE)v133) {
    goto LABEL_371;
  }
  if (v133)
  {
    *(_DWORD *)(a1 + 44) |= 1u;
    uint64_t v134 = *(std::string **)(a1 + 320);
    if (!v134)
    {
      uint64_t v135 = *(void *)(a1 + 8);
      uint64_t v136 = (void *)(v135 & 0xFFFFFFFFFFFFFFFCLL);
      if (v135) {
        uint64_t v136 = (void *)*v136;
      }
      uint64_t v134 = (std::string *)sub_178A2E0((uint64_t)v136);
      *(void *)(a1 + 320) = v134;
    }
    if (*(void *)(a2 + 320)) {
      uint64_t v137 = *(uint64_t (****)())(a2 + 320);
    }
    else {
      uint64_t v137 = &off_2546860;
    }
    sub_12329D0(v134, (uint64_t)v137);
    if ((v133 & 2) == 0)
    {
LABEL_300:
      if ((v133 & 4) == 0) {
        goto LABEL_301;
      }
      goto LABEL_323;
    }
  }
  else if ((v133 & 2) == 0)
  {
    goto LABEL_300;
  }
  *(_DWORD *)(a1 + 44) |= 2u;
  unsigned int v138 = *(std::string **)(a1 + 328);
  if (!v138)
  {
    uint64_t v139 = *(void *)(a1 + 8);
    uint64_t v140 = (void *)(v139 & 0xFFFFFFFFFFFFFFFCLL);
    if (v139) {
      uint64_t v140 = (void *)*v140;
    }
    unsigned int v138 = (std::string *)sub_178A3DC((uint64_t)v140);
    *(void *)(a1 + 328) = v138;
  }
  if (*(void *)(a2 + 328)) {
    unsigned int v141 = *(uint64_t (****)())(a2 + 328);
  }
  else {
    unsigned int v141 = &off_2546898;
  }
  sub_1196F3C(v138, (uint64_t)v141);
  if ((v133 & 4) == 0)
  {
LABEL_301:
    if ((v133 & 8) == 0) {
      goto LABEL_302;
    }
    goto LABEL_331;
  }
LABEL_323:
  *(_DWORD *)(a1 + 44) |= 4u;
  uint64_t v142 = *(void **)(a1 + 336);
  if (!v142)
  {
    uint64_t v143 = *(void *)(a1 + 8);
    unsigned int v144 = (void *)(v143 & 0xFFFFFFFFFFFFFFFCLL);
    if (v143) {
      unsigned int v144 = (void *)*v144;
    }
    uint64_t v142 = sub_178A4F8((uint64_t)v144);
    *(void *)(a1 + 336) = v142;
  }
  if (*(void *)(a2 + 336)) {
    uint64_t v145 = *(uint64_t (****)())(a2 + 336);
  }
  else {
    uint64_t v145 = &off_25468E8;
  }
  sub_170F324((uint64_t)v142, (uint64_t)v145);
  if ((v133 & 8) == 0)
  {
LABEL_302:
    if ((v133 & 0x10) == 0) {
      goto LABEL_303;
    }
    goto LABEL_339;
  }
LABEL_331:
  *(_DWORD *)(a1 + 44) |= 8u;
  uint64_t v146 = *(void *)(a1 + 344);
  if (!v146)
  {
    uint64_t v147 = *(void *)(a1 + 8);
    v148 = (void *)(v147 & 0xFFFFFFFFFFFFFFFCLL);
    if (v147) {
      v148 = (void *)*v148;
    }
    uint64_t v146 = sub_178A628((uint64_t)v148);
    *(void *)(a1 + 344) = v146;
  }
  if (*(void *)(a2 + 344)) {
    uint64_t v149 = *(uint64_t (****)())(a2 + 344);
  }
  else {
    uint64_t v149 = &off_25469D8;
  }
  sub_17111CC(v146, (uint64_t)v149);
  if ((v133 & 0x10) == 0)
  {
LABEL_303:
    if ((v133 & 0x20) == 0) {
      goto LABEL_304;
    }
    goto LABEL_347;
  }
LABEL_339:
  *(_DWORD *)(a1 + 44) |= 0x10u;
  uint64_t v150 = *(void *)(a1 + 352);
  if (!v150)
  {
    uint64_t v151 = *(void *)(a1 + 8);
    uint64_t v152 = (void *)(v151 & 0xFFFFFFFFFFFFFFFCLL);
    if (v151) {
      uint64_t v152 = (void *)*v152;
    }
    uint64_t v150 = sub_1791CF0((uint64_t)v152);
    *(void *)(a1 + 352) = v150;
  }
  if (*(void *)(a2 + 352)) {
    unsigned int v153 = *(uint64_t (****)())(a2 + 352);
  }
  else {
    unsigned int v153 = &off_25497B0;
  }
  sub_133D204(v150, (uint64_t)v153);
  if ((v133 & 0x20) == 0)
  {
LABEL_304:
    if ((v133 & 0x40) == 0) {
      goto LABEL_305;
    }
    goto LABEL_355;
  }
LABEL_347:
  *(_DWORD *)(a1 + 44) |= 0x20u;
  uint64_t v154 = *(void *)(a1 + 360);
  if (!v154)
  {
    uint64_t v155 = *(void *)(a1 + 8);
    unsigned int v156 = (void *)(v155 & 0xFFFFFFFFFFFFFFFCLL);
    if (v155) {
      unsigned int v156 = (void *)*v156;
    }
    uint64_t v154 = sub_178A700((uint64_t)v156);
    *(void *)(a1 + 360) = v154;
  }
  if (*(void *)(a2 + 360)) {
    v157 = *(uint64_t (****)())(a2 + 360);
  }
  else {
    v157 = &off_2546A58;
  }
  sub_17120A0(v154, (uint64_t)v157);
  if ((v133 & 0x40) == 0)
  {
LABEL_305:
    if ((v133 & 0x80) == 0) {
      goto LABEL_371;
    }
    goto LABEL_363;
  }
LABEL_355:
  *(_DWORD *)(a1 + 44) |= 0x40u;
  uint64_t v158 = *(std::string **)(a1 + 368);
  if (!v158)
  {
    uint64_t v159 = *(void *)(a1 + 8);
    uint64_t v160 = (void *)(v159 & 0xFFFFFFFFFFFFFFFCLL);
    if (v159) {
      uint64_t v160 = (void *)*v160;
    }
    uint64_t v158 = (std::string *)sub_178AB3C((uint64_t)v160);
    *(void *)(a1 + 368) = v158;
  }
  if (*(void *)(a2 + 368)) {
    uint64_t v161 = *(uint64_t (****)())(a2 + 368);
  }
  else {
    uint64_t v161 = &off_2546B90;
  }
  sub_1186F14(v158, (uint64_t)v161);
  if ((v133 & 0x80) != 0)
  {
LABEL_363:
    *(_DWORD *)(a1 + 44) |= 0x80u;
    unsigned int v162 = *(std::string **)(a1 + 376);
    if (!v162)
    {
      uint64_t v163 = *(void *)(a1 + 8);
      uint64_t v164 = (void *)(v163 & 0xFFFFFFFFFFFFFFFCLL);
      if (v163) {
        uint64_t v164 = (void *)*v164;
      }
      unsigned int v162 = (std::string *)sub_178AC3C((uint64_t)v164);
      *(void *)(a1 + 376) = v162;
    }
    if (*(void *)(a2 + 376)) {
      unsigned int v165 = *(uint64_t (****)())(a2 + 376);
    }
    else {
      unsigned int v165 = &off_2546BE0;
    }
    sub_11B4D00(v162, (uint64_t)v165);
  }
LABEL_371:
  if ((v133 & 0xFF00) == 0) {
    goto LABEL_445;
  }
  if ((v133 & 0x100) != 0)
  {
    *(_DWORD *)(a1 + 44) |= 0x100u;
    uint64_t v166 = *(void **)(a1 + 384);
    if (!v166)
    {
      uint64_t v167 = *(void *)(a1 + 8);
      unsigned int v168 = (void *)(v167 & 0xFFFFFFFFFFFFFFFCLL);
      if (v167) {
        unsigned int v168 = (void *)*v168;
      }
      uint64_t v166 = sub_178AD2C((uint64_t)v168);
      *(void *)(a1 + 384) = v166;
    }
    if (*(void *)(a2 + 384)) {
      v169 = *(uint64_t (****)())(a2 + 384);
    }
    else {
      v169 = &off_2546C18;
    }
    sub_1295A64((uint64_t)v166, (uint64_t)v169);
    if ((v133 & 0x200) == 0)
    {
LABEL_374:
      if ((v133 & 0x400) == 0) {
        goto LABEL_375;
      }
      goto LABEL_397;
    }
  }
  else if ((v133 & 0x200) == 0)
  {
    goto LABEL_374;
  }
  *(_DWORD *)(a1 + 44) |= 0x200u;
  uint64_t v170 = *(void *)(a1 + 392);
  if (!v170)
  {
    uint64_t v171 = *(void *)(a1 + 8);
    uint64_t v172 = (void *)(v171 & 0xFFFFFFFFFFFFFFFCLL);
    if (v171) {
      uint64_t v172 = (void *)*v172;
    }
    uint64_t v170 = sub_178A814((uint64_t)v172);
    *(void *)(a1 + 392) = v170;
  }
  if (*(void *)(a2 + 392)) {
    uint64_t v173 = *(uint64_t (****)())(a2 + 392);
  }
  else {
    uint64_t v173 = &off_2546AB0;
  }
  sub_1712BCC(v170, (uint64_t)v173);
  if ((v133 & 0x400) == 0)
  {
LABEL_375:
    if ((v133 & 0x800) == 0) {
      goto LABEL_376;
    }
    goto LABEL_405;
  }
LABEL_397:
  *(_DWORD *)(a1 + 44) |= 0x400u;
  unsigned int v174 = *(std::string **)(a1 + 400);
  if (!v174)
  {
    uint64_t v175 = *(void *)(a1 + 8);
    uint64_t v176 = (void *)(v175 & 0xFFFFFFFFFFFFFFFCLL);
    if (v175) {
      uint64_t v176 = (void *)*v176;
    }
    unsigned int v174 = (std::string *)sub_178A92C((uint64_t)v176);
    *(void *)(a1 + 400) = v174;
  }
  if (*(void *)(a2 + 400)) {
    unsigned int v177 = *(uint64_t (****)())(a2 + 400);
  }
  else {
    unsigned int v177 = &off_2546AF8;
  }
  sub_11A7934(v174, (uint64_t)v177);
  if ((v133 & 0x800) == 0)
  {
LABEL_376:
    if ((v133 & 0x1000) == 0) {
      goto LABEL_377;
    }
    goto LABEL_413;
  }
LABEL_405:
  *(_DWORD *)(a1 + 44) |= 0x800u;
  uint64_t v178 = *(void *)(a1 + 408);
  if (!v178)
  {
    uint64_t v179 = *(void *)(a1 + 8);
    unsigned int v180 = (void *)(v179 & 0xFFFFFFFFFFFFFFFCLL);
    if (v179) {
      unsigned int v180 = (void *)*v180;
    }
    uint64_t v178 = sub_185F34C((uint64_t)v180);
    *(void *)(a1 + 408) = v178;
  }
  if (*(void *)(a2 + 408)) {
    v181 = *(uint64_t (****)())(a2 + 408);
  }
  else {
    v181 = &off_254D6C8;
  }
  sub_172C924(v178, (uint64_t)v181);
  if ((v133 & 0x1000) == 0)
  {
LABEL_377:
    if ((v133 & 0x2000) == 0) {
      goto LABEL_378;
    }
    goto LABEL_421;
  }
LABEL_413:
  *(_DWORD *)(a1 + 44) |= 0x1000u;
  uint64_t v182 = *(void *)(a1 + 416);
  if (!v182)
  {
    uint64_t v183 = *(void *)(a1 + 8);
    v184 = (void *)(v183 & 0xFFFFFFFFFFFFFFFCLL);
    if (v183) {
      v184 = (void *)*v184;
    }
    uint64_t v182 = sub_178AA20((uint64_t)v184);
    *(void *)(a1 + 416) = v182;
  }
  if (*(void *)(a2 + 416)) {
    uint64_t v185 = *(uint64_t (****)())(a2 + 416);
  }
  else {
    uint64_t v185 = &off_2546B30;
  }
  sub_1713F74(v182, (uint64_t)v185);
  if ((v133 & 0x2000) == 0)
  {
LABEL_378:
    if ((v133 & 0x4000) == 0) {
      goto LABEL_379;
    }
    goto LABEL_429;
  }
LABEL_421:
  *(_DWORD *)(a1 + 44) |= 0x2000u;
  uint64_t v186 = *(void *)(a1 + 424);
  if (!v186)
  {
    uint64_t v187 = *(void *)(a1 + 8);
    uint64_t v188 = (void *)(v187 & 0xFFFFFFFFFFFFFFFCLL);
    if (v187) {
      uint64_t v188 = (void *)*v188;
    }
    uint64_t v186 = sub_178A150((uint64_t)v188);
    *(void *)(a1 + 424) = v186;
  }
  if (*(void *)(a2 + 424)) {
    unsigned int v189 = *(uint64_t (****)())(a2 + 424);
  }
  else {
    unsigned int v189 = &off_2546768;
  }
  sub_170BEF4(v186, (uint64_t)v189);
  if ((v133 & 0x4000) == 0)
  {
LABEL_379:
    if ((v133 & 0x8000) == 0) {
      goto LABEL_445;
    }
    goto LABEL_437;
  }
LABEL_429:
  *(_DWORD *)(a1 + 44) |= 0x4000u;
  uint64_t v190 = *(std::string **)(a1 + 432);
  if (!v190)
  {
    uint64_t v191 = *(void *)(a1 + 8);
    unsigned int v192 = (void *)(v191 & 0xFFFFFFFFFFFFFFFCLL);
    if (v191) {
      unsigned int v192 = (void *)*v192;
    }
    uint64_t v190 = (std::string *)sub_178A208((uint64_t)v192);
    *(void *)(a1 + 432) = v190;
  }
  if (*(void *)(a2 + 432)) {
    v193 = *(uint64_t (****)())(a2 + 432);
  }
  else {
    v193 = &off_2546808;
  }
  sub_117EF50(v190, (uint64_t)v193);
  if ((v133 & 0x8000) != 0)
  {
LABEL_437:
    *(_DWORD *)(a1 + 44) |= 0x8000u;
    uint64_t v194 = *(void *)(a1 + 440);
    if (!v194)
    {
      uint64_t v195 = *(void *)(a1 + 8);
      uint64_t v196 = (void *)(v195 & 0xFFFFFFFFFFFFFFFCLL);
      if (v195) {
        uint64_t v196 = (void *)*v196;
      }
      uint64_t v194 = sub_17887C8((uint64_t)v196);
      *(void *)(a1 + 440) = v194;
    }
    if (*(void *)(a2 + 440)) {
      uint64_t v197 = *(uint64_t (****)())(a2 + 440);
    }
    else {
      uint64_t v197 = &off_2545AB0;
    }
    sub_16ECCA8(v194, (uint64_t)v197);
  }
LABEL_445:
  if ((v133 & 0xFF0000) == 0) {
    goto LABEL_519;
  }
  if ((v133 & 0x10000) != 0)
  {
    *(_DWORD *)(a1 + 44) |= 0x10000u;
    unsigned int v198 = *(void **)(a1 + 448);
    if (!v198)
    {
      uint64_t v199 = *(void *)(a1 + 8);
      int v200 = (void *)(v199 & 0xFFFFFFFFFFFFFFFCLL);
      if (v199) {
        int v200 = (void *)*v200;
      }
      unsigned int v198 = sub_17883A8((uint64_t)v200);
      *(void *)(a1 + 448) = v198;
    }
    if (*(void *)(a2 + 448)) {
      uint64_t v201 = *(uint64_t (****)())(a2 + 448);
    }
    else {
      uint64_t v201 = &off_25458E8;
    }
    sub_16C1200((uint64_t)v198, (uint64_t)v201);
    if ((v133 & 0x20000) == 0)
    {
LABEL_448:
      if ((v133 & 0x40000) == 0) {
        goto LABEL_449;
      }
      goto LABEL_471;
    }
  }
  else if ((v133 & 0x20000) == 0)
  {
    goto LABEL_448;
  }
  *(_DWORD *)(a1 + 44) |= 0x20000u;
  uint64_t v202 = *(void *)(a1 + 456);
  if (!v202)
  {
    uint64_t v203 = *(void *)(a1 + 8);
    uint64_t v204 = (void *)(v203 & 0xFFFFFFFFFFFFFFFCLL);
    if (v203) {
      uint64_t v204 = (void *)*v204;
    }
    uint64_t v202 = sub_12BB9E8((uint64_t)v204);
    *(void *)(a1 + 456) = v202;
  }
  if (*(void *)(a2 + 456)) {
    unsigned int v205 = *(uint64_t (****)())(a2 + 456);
  }
  else {
    unsigned int v205 = &off_25307A0;
  }
  sub_129F24C(v202, (uint64_t)v205);
  if ((v133 & 0x40000) == 0)
  {
LABEL_449:
    if ((v133 & 0x80000) == 0) {
      goto LABEL_450;
    }
    goto LABEL_479;
  }
LABEL_471:
  *(_DWORD *)(a1 + 44) |= 0x40000u;
  uint64_t v206 = *(void *)(a1 + 464);
  if (!v206)
  {
    uint64_t v207 = *(void *)(a1 + 8);
    unsigned int v208 = (void *)(v207 & 0xFFFFFFFFFFFFFFFCLL);
    if (v207) {
      unsigned int v208 = (void *)*v208;
    }
    uint64_t v206 = sub_1854CC4((uint64_t)v208);
    *(void *)(a1 + 464) = v206;
  }
  if (*(void *)(a2 + 464)) {
    v209 = *(uint64_t (****)())(a2 + 464);
  }
  else {
    v209 = &off_254D510;
  }
  sub_172CB9C(v206, (uint64_t)v209);
  if ((v133 & 0x80000) == 0)
  {
LABEL_450:
    if ((v133 & 0x100000) == 0) {
      goto LABEL_451;
    }
    goto LABEL_487;
  }
LABEL_479:
  *(_DWORD *)(a1 + 44) |= 0x80000u;
  uint64_t v210 = *(std::string **)(a1 + 472);
  if (!v210)
  {
    uint64_t v211 = *(void *)(a1 + 8);
    BOOL v212 = (void *)(v211 & 0xFFFFFFFFFFFFFFFCLL);
    if (v211) {
      BOOL v212 = (void *)*v212;
    }
    uint64_t v210 = (std::string *)sub_178AF30((uint64_t)v212);
    *(void *)(a1 + 472) = v210;
  }
  if (*(void *)(a2 + 472)) {
    uint64_t v213 = *(uint64_t (****)())(a2 + 472);
  }
  else {
    uint64_t v213 = &off_2546C78;
  }
  sub_1717378(v210, (uint64_t)v213);
  if ((v133 & 0x100000) == 0)
  {
LABEL_451:
    if ((v133 & 0x200000) == 0) {
      goto LABEL_452;
    }
    goto LABEL_495;
  }
LABEL_487:
  *(_DWORD *)(a1 + 44) |= 0x100000u;
  uint64_t v214 = *(void *)(a1 + 480);
  if (!v214)
  {
    uint64_t v215 = *(void *)(a1 + 8);
    uint64_t v216 = (void *)(v215 & 0xFFFFFFFFFFFFFFFCLL);
    if (v215) {
      uint64_t v216 = (void *)*v216;
    }
    uint64_t v214 = sub_1786674((uint64_t)v216);
    *(void *)(a1 + 480) = v214;
  }
  if (*(void *)(a2 + 480)) {
    unsigned int v217 = *(uint64_t (****)())(a2 + 480);
  }
  else {
    unsigned int v217 = &off_2544850;
  }
  sub_16C1EE0(v214, (uint64_t)v217);
  if ((v133 & 0x200000) == 0)
  {
LABEL_452:
    if ((v133 & 0x400000) == 0) {
      goto LABEL_453;
    }
    goto LABEL_503;
  }
LABEL_495:
  *(_DWORD *)(a1 + 44) |= 0x200000u;
  uint64_t v218 = *(void *)(a1 + 488);
  if (!v218)
  {
    uint64_t v219 = *(void *)(a1 + 8);
    unsigned int v220 = (void *)(v219 & 0xFFFFFFFFFFFFFFFCLL);
    if (v219) {
      unsigned int v220 = (void *)*v220;
    }
    uint64_t v218 = sub_178B0F0((uint64_t)v220);
    *(void *)(a1 + 488) = v218;
  }
  if (*(void *)(a2 + 488)) {
    v221 = *(uint64_t (****)())(a2 + 488);
  }
  else {
    v221 = &off_2546CE8;
  }
  sub_1719994(v218, (uint64_t)v221);
  if ((v133 & 0x400000) == 0)
  {
LABEL_453:
    if ((v133 & 0x800000) == 0) {
      goto LABEL_519;
    }
    goto LABEL_511;
  }
LABEL_503:
  *(_DWORD *)(a1 + 44) |= 0x400000u;
  uint64_t v222 = *(void **)(a1 + 496);
  if (!v222)
  {
    uint64_t v223 = *(void *)(a1 + 8);
    v224 = (void *)(v223 & 0xFFFFFFFFFFFFFFFCLL);
    if (v223) {
      v224 = (void *)*v224;
    }
    uint64_t v222 = sub_1854E88((uint64_t)v224);
    *(void *)(a1 + 496) = v222;
  }
  if (*(void *)(a2 + 496)) {
    uint64_t v225 = *(uint64_t (****)())(a2 + 496);
  }
  else {
    uint64_t v225 = &off_254D5B8;
  }
  sub_172CD40((uint64_t)v222, (uint64_t)v225);
  if ((v133 & 0x800000) != 0)
  {
LABEL_511:
    *(_DWORD *)(a1 + 44) |= 0x800000u;
    uint64_t v226 = *(void *)(a1 + 504);
    if (!v226)
    {
      uint64_t v227 = *(void *)(a1 + 8);
      uint64_t v228 = (void *)(v227 & 0xFFFFFFFFFFFFFFFCLL);
      if (v227) {
        uint64_t v228 = (void *)*v228;
      }
      uint64_t v226 = sub_178E2FC((uint64_t)v228);
      *(void *)(a1 + 504) = v226;
    }
    if (*(void *)(a2 + 504)) {
      unsigned int v229 = *(uint64_t (****)())(a2 + 504);
    }
    else {
      unsigned int v229 = &off_2548FF0;
    }
    sub_172CE70(v226, (uint64_t)v229);
  }
LABEL_519:
  if (!HIBYTE(v133)) {
    goto LABEL_593;
  }
  if ((v133 & 0x1000000) != 0)
  {
    *(_DWORD *)(a1 + 44) |= 0x1000000u;
    uint64_t v230 = *(void *)(a1 + 512);
    if (!v230)
    {
      uint64_t v231 = *(void *)(a1 + 8);
      unsigned int v232 = (void *)(v231 & 0xFFFFFFFFFFFFFFFCLL);
      if (v231) {
        unsigned int v232 = (void *)*v232;
      }
      uint64_t v230 = sub_178E410((uint64_t)v232);
      *(void *)(a1 + 512) = v230;
    }
    if (*(void *)(a2 + 512)) {
      v233 = *(uint64_t (****)())(a2 + 512);
    }
    else {
      v233 = &off_2549110;
    }
    sub_172CF4C(v230, (uint64_t)v233);
    if ((v133 & 0x2000000) == 0)
    {
LABEL_522:
      if ((v133 & 0x4000000) == 0) {
        goto LABEL_523;
      }
      goto LABEL_545;
    }
  }
  else if ((v133 & 0x2000000) == 0)
  {
    goto LABEL_522;
  }
  *(_DWORD *)(a1 + 44) |= 0x2000000u;
  uint64_t v234 = *(void *)(a1 + 520);
  if (!v234)
  {
    uint64_t v235 = *(void *)(a1 + 8);
    v236 = (void *)(v235 & 0xFFFFFFFFFFFFFFFCLL);
    if (v235) {
      v236 = (void *)*v236;
    }
    sub_13325F8((uint64_t)v236);
    *(void *)(a1 + 520) = v234;
  }
  if (*(void *)(a2 + 520)) {
    uint64_t v237 = *(uint64_t (****)())(a2 + 520);
  }
  else {
    uint64_t v237 = &off_2533288;
  }
  sub_132E174(v234, (uint64_t)v237);
  if ((v133 & 0x4000000) == 0)
  {
LABEL_523:
    if ((v133 & 0x8000000) == 0) {
      goto LABEL_524;
    }
    goto LABEL_553;
  }
LABEL_545:
  *(_DWORD *)(a1 + 44) |= 0x4000000u;
  uint64_t v238 = *(void *)(a1 + 528);
  if (!v238)
  {
    uint64_t v239 = *(void *)(a1 + 8);
    uint64_t v240 = (void *)(v239 & 0xFFFFFFFFFFFFFFFCLL);
    if (v239) {
      uint64_t v240 = (void *)*v240;
    }
    uint64_t v238 = sub_178B534((uint64_t)v240);
    *(void *)(a1 + 528) = v238;
  }
  if (*(void *)(a2 + 528)) {
    unsigned int v241 = *(uint64_t (****)())(a2 + 528);
  }
  else {
    unsigned int v241 = &off_25476C8;
  }
  sub_172D028(v238, (uint64_t)v241);
  if ((v133 & 0x8000000) == 0)
  {
LABEL_524:
    if ((v133 & 0x10000000) == 0) {
      goto LABEL_525;
    }
    goto LABEL_561;
  }
LABEL_553:
  *(_DWORD *)(a1 + 44) |= 0x8000000u;
  uint64_t v242 = *(void *)(a1 + 536);
  if (!v242)
  {
    uint64_t v243 = *(void *)(a1 + 8);
    unsigned int v244 = (void *)(v243 & 0xFFFFFFFFFFFFFFFCLL);
    if (v243) {
      unsigned int v244 = (void *)*v244;
    }
    uint64_t v242 = sub_178B590((uint64_t)v244);
    *(void *)(a1 + 536) = v242;
  }
  if (*(void *)(a2 + 536)) {
    v245 = *(uint64_t (****)())(a2 + 536);
  }
  else {
    v245 = &off_2547720;
  }
  sub_172D1A8(v242, (uint64_t)v245);
  if ((v133 & 0x10000000) == 0)
  {
LABEL_525:
    if ((v133 & 0x20000000) == 0) {
      goto LABEL_526;
    }
    goto LABEL_569;
  }
LABEL_561:
  *(_DWORD *)(a1 + 44) |= 0x10000000u;
  uint64_t v246 = *(void *)(a1 + 544);
  if (!v246)
  {
    uint64_t v247 = *(void *)(a1 + 8);
    v248 = (void *)(v247 & 0xFFFFFFFFFFFFFFFCLL);
    if (v247) {
      v248 = (void *)*v248;
    }
    uint64_t v246 = sub_178B5EC((uint64_t)v248);
    *(void *)(a1 + 544) = v246;
  }
  if (*(void *)(a2 + 544)) {
    uint64_t v249 = *(uint64_t (****)())(a2 + 544);
  }
  else {
    uint64_t v249 = &off_2547798;
  }
  sub_172D3B4(v246, (uint64_t)v249);
  if ((v133 & 0x20000000) == 0)
  {
LABEL_526:
    if ((v133 & 0x40000000) == 0) {
      goto LABEL_527;
    }
    goto LABEL_577;
  }
LABEL_569:
  *(_DWORD *)(a1 + 44) |= 0x20000000u;
  uint64_t v250 = *(void *)(a1 + 552);
  if (!v250)
  {
    uint64_t v251 = *(void *)(a1 + 8);
    uint64_t v252 = (void *)(v251 & 0xFFFFFFFFFFFFFFFCLL);
    if (v251) {
      uint64_t v252 = (void *)*v252;
    }
    uint64_t v250 = sub_178B8E4((uint64_t)v252);
    *(void *)(a1 + 552) = v250;
  }
  if (*(void *)(a2 + 552)) {
    unsigned int v253 = *(uint64_t (****)())(a2 + 552);
  }
  else {
    unsigned int v253 = &off_2547B98;
  }
  sub_172DCD4(v250, (uint64_t)v253);
  if ((v133 & 0x40000000) == 0)
  {
LABEL_527:
    if ((v133 & 0x80000000) == 0) {
      goto LABEL_593;
    }
    goto LABEL_585;
  }
LABEL_577:
  *(_DWORD *)(a1 + 44) |= 0x40000000u;
  uint64_t v254 = *(void *)(a1 + 560);
  if (!v254)
  {
    uint64_t v255 = *(void *)(a1 + 8);
    unsigned int v256 = (void *)(v255 & 0xFFFFFFFFFFFFFFFCLL);
    if (v255) {
      unsigned int v256 = (void *)*v256;
    }
    uint64_t v254 = sub_1787AD8((uint64_t)v256);
    *(void *)(a1 + 560) = v254;
  }
  if (*(void *)(a2 + 560)) {
    v257 = *(uint64_t (****)())(a2 + 560);
  }
  else {
    v257 = &off_2545330;
  }
  sub_16DC3A8(v254, (uint64_t)v257);
  if ((v133 & 0x80000000) != 0)
  {
LABEL_585:
    *(_DWORD *)(a1 + 44) |= 0x80000000;
    uint64_t v258 = *(void *)(a1 + 568);
    if (!v258)
    {
      uint64_t v259 = *(void *)(a1 + 8);
      v260 = (void *)(v259 & 0xFFFFFFFFFFFFFFFCLL);
      if (v259) {
        v260 = (void *)*v260;
      }
      uint64_t v258 = sub_1787B34((uint64_t)v260);
      *(void *)(a1 + 568) = v258;
    }
    if (*(void *)(a2 + 568)) {
      uint64_t v261 = *(uint64_t (****)())(a2 + 568);
    }
    else {
      uint64_t v261 = &off_2545378;
    }
    sub_16DCC28(v258, (uint64_t)v261);
  }
LABEL_593:
  unsigned int v262 = *(_DWORD *)(a2 + 48);
  if (!(_BYTE)v262) {
    goto LABEL_667;
  }
  if (v262)
  {
    *(_DWORD *)(a1 + 48) |= 1u;
    uint64_t v263 = *(void *)(a1 + 576);
    if (!v263)
    {
      uint64_t v264 = *(void *)(a1 + 8);
      unsigned int v265 = (void *)(v264 & 0xFFFFFFFFFFFFFFFCLL);
      if (v264) {
        unsigned int v265 = (void *)*v265;
      }
      uint64_t v263 = sub_1787C14((uint64_t)v265);
      *(void *)(a1 + 576) = v263;
    }
    if (*(void *)(a2 + 576)) {
      v266 = *(uint64_t (****)())(a2 + 576);
    }
    else {
      v266 = &off_25453C0;
    }
    sub_16DDC54(v263, (uint64_t)v266);
    if ((v262 & 2) == 0)
    {
LABEL_596:
      if ((v262 & 4) == 0) {
        goto LABEL_597;
      }
      goto LABEL_619;
    }
  }
  else if ((v262 & 2) == 0)
  {
    goto LABEL_596;
  }
  *(_DWORD *)(a1 + 48) |= 2u;
  uint64_t v267 = *(void *)(a1 + 584);
  if (!v267)
  {
    uint64_t v268 = *(void *)(a1 + 8);
    v269 = (void *)(v268 & 0xFFFFFFFFFFFFFFFCLL);
    if (v268) {
      v269 = (void *)*v269;
    }
    uint64_t v267 = sub_12BB9E8((uint64_t)v269);
    *(void *)(a1 + 584) = v267;
  }
  if (*(void *)(a2 + 584)) {
    uint64_t v270 = *(uint64_t (****)())(a2 + 584);
  }
  else {
    uint64_t v270 = &off_25307A0;
  }
  sub_129F24C(v267, (uint64_t)v270);
  if ((v262 & 4) == 0)
  {
LABEL_597:
    if ((v262 & 8) == 0) {
      goto LABEL_598;
    }
    goto LABEL_627;
  }
LABEL_619:
  *(_DWORD *)(a1 + 48) |= 4u;
  uint64_t v271 = *(void *)(a1 + 592);
  if (!v271)
  {
    uint64_t v272 = *(void *)(a1 + 8);
    uint64_t v273 = (void *)(v272 & 0xFFFFFFFFFFFFFFFCLL);
    if (v272) {
      uint64_t v273 = (void *)*v273;
    }
    uint64_t v271 = sub_178E358((uint64_t)v273);
    *(void *)(a1 + 592) = v271;
  }
  if (*(void *)(a2 + 592)) {
    unsigned int v274 = *(uint64_t (****)())(a2 + 592);
  }
  else {
    unsigned int v274 = &off_2549038;
  }
  sub_172DE10(v271, (uint64_t)v274);
  if ((v262 & 8) == 0)
  {
LABEL_598:
    if ((v262 & 0x10) == 0) {
      goto LABEL_599;
    }
    goto LABEL_635;
  }
LABEL_627:
  *(_DWORD *)(a1 + 48) |= 8u;
  uint64_t v275 = *(void *)(a1 + 600);
  if (!v275)
  {
    uint64_t v276 = *(void *)(a1 + 8);
    unsigned int v277 = (void *)(v276 & 0xFFFFFFFFFFFFFFFCLL);
    if (v276) {
      unsigned int v277 = (void *)*v277;
    }
    uint64_t v275 = sub_178C684((uint64_t)v277);
    *(void *)(a1 + 600) = v275;
  }
  if (*(void *)(a2 + 600)) {
    v278 = *(uint64_t (****)())(a2 + 600);
  }
  else {
    v278 = &off_2548338;
  }
  sub_172E078(v275, (uint64_t)v278);
  if ((v262 & 0x10) == 0)
  {
LABEL_599:
    if ((v262 & 0x20) == 0) {
      goto LABEL_600;
    }
    goto LABEL_643;
  }
LABEL_635:
  *(_DWORD *)(a1 + 48) |= 0x10u;
  uint64_t v279 = *(void *)(a1 + 608);
  if (!v279)
  {
    uint64_t v280 = *(void *)(a1 + 8);
    v281 = (void *)(v280 & 0xFFFFFFFFFFFFFFFCLL);
    if (v280) {
      v281 = (void *)*v281;
    }
    uint64_t v279 = sub_1621450((uint64_t)v281);
    *(void *)(a1 + 608) = v279;
  }
  if (*(void *)(a2 + 608)) {
    uint64_t v282 = *(uint64_t (****)())(a2 + 608);
  }
  else {
    uint64_t v282 = &off_2541830;
  }
  sub_161F630(v279, (uint64_t)v282);
  if ((v262 & 0x20) == 0)
  {
LABEL_600:
    if ((v262 & 0x40) == 0) {
      goto LABEL_601;
    }
    goto LABEL_651;
  }
LABEL_643:
  *(_DWORD *)(a1 + 48) |= 0x20u;
  uint64_t v283 = *(void *)(a1 + 616);
  if (!v283)
  {
    uint64_t v284 = *(void *)(a1 + 8);
    uint64_t v285 = (void *)(v284 & 0xFFFFFFFFFFFFFFFCLL);
    if (v284) {
      uint64_t v285 = (void *)*v285;
    }
    uint64_t v283 = sub_178B648((uint64_t)v285);
    *(void *)(a1 + 616) = v283;
  }
  if (*(void *)(a2 + 616)) {
    unsigned int v286 = *(uint64_t (****)())(a2 + 616);
  }
  else {
    unsigned int v286 = &off_25479A8;
  }
  sub_172E1B8(v283, (uint64_t)v286);
  if ((v262 & 0x40) == 0)
  {
LABEL_601:
    if ((v262 & 0x80) == 0) {
      goto LABEL_667;
    }
    goto LABEL_659;
  }
LABEL_651:
  *(_DWORD *)(a1 + 48) |= 0x40u;
  uint64_t v287 = *(void *)(a1 + 624);
  if (!v287)
  {
    uint64_t v288 = *(void *)(a1 + 8);
    unsigned int v289 = (void *)(v288 & 0xFFFFFFFFFFFFFFFCLL);
    if (v288) {
      unsigned int v289 = (void *)*v289;
    }
    uint64_t v287 = sub_178B800((uint64_t)v289);
    *(void *)(a1 + 624) = v287;
  }
  if (*(void *)(a2 + 624)) {
    v290 = *(uint64_t (****)())(a2 + 624);
  }
  else {
    v290 = &off_2547B18;
  }
  sub_172E534(v287, (uint64_t)v290);
  if ((v262 & 0x80) != 0)
  {
LABEL_659:
    *(_DWORD *)(a1 + 48) |= 0x80u;
    uint64_t v291 = *(std::string **)(a1 + 632);
    if (!v291)
    {
      uint64_t v292 = *(void *)(a1 + 8);
      v293 = (void *)(v292 & 0xFFFFFFFFFFFFFFFCLL);
      if (v292) {
        v293 = (void *)*v293;
      }
      uint64_t v291 = (std::string *)sub_178B85C((uint64_t)v293);
      *(void *)(a1 + 632) = v291;
    }
    if (*(void *)(a2 + 632)) {
      uint64_t v294 = *(uint64_t (****)())(a2 + 632);
    }
    else {
      uint64_t v294 = &off_2547B60;
    }
    sub_172E610(v291, (uint64_t)v294);
  }
LABEL_667:
  if ((v262 & 0xFF00) == 0) {
    goto LABEL_741;
  }
  if ((v262 & 0x100) != 0)
  {
    *(_DWORD *)(a1 + 48) |= 0x100u;
    uint64_t v295 = *(void *)(a1 + 640);
    if (!v295)
    {
      uint64_t v296 = *(void *)(a1 + 8);
      int v297 = (void *)(v296 & 0xFFFFFFFFFFFFFFFCLL);
      if (v296) {
        int v297 = (void *)*v297;
      }
      uint64_t v295 = sub_1788B18((uint64_t)v297);
      *(void *)(a1 + 640) = v295;
    }
    if (*(void *)(a2 + 640)) {
      uint64_t v298 = *(uint64_t (****)())(a2 + 640);
    }
    else {
      uint64_t v298 = &off_2545CE8;
    }
    sub_16F2074(v295, (uint64_t)v298);
    if ((v262 & 0x200) == 0)
    {
LABEL_670:
      if ((v262 & 0x400) == 0) {
        goto LABEL_671;
      }
      goto LABEL_693;
    }
  }
  else if ((v262 & 0x200) == 0)
  {
    goto LABEL_670;
  }
  *(_DWORD *)(a1 + 48) |= 0x200u;
  uint64_t v299 = *(void *)(a1 + 648);
  if (!v299)
  {
    uint64_t v300 = *(void *)(a1 + 8);
    uint64_t v301 = (void *)(v300 & 0xFFFFFFFFFFFFFFFCLL);
    if (v300) {
      uint64_t v301 = (void *)*v301;
    }
    uint64_t v299 = sub_1787C70((uint64_t)v301);
    *(void *)(a1 + 648) = v299;
  }
  if (*(void *)(a2 + 648)) {
    unsigned int v302 = *(uint64_t (****)())(a2 + 648);
  }
  else {
    unsigned int v302 = &off_2545418;
  }
  sub_16DE808(v299, (uint64_t)v302);
  if ((v262 & 0x400) == 0)
  {
LABEL_671:
    if ((v262 & 0x800) == 0) {
      goto LABEL_672;
    }
    goto LABEL_701;
  }
LABEL_693:
  *(_DWORD *)(a1 + 48) |= 0x400u;
  uint64_t v303 = *(void *)(a1 + 656);
  if (!v303)
  {
    uint64_t v304 = *(void *)(a1 + 8);
    unsigned int v305 = (void *)(v304 & 0xFFFFFFFFFFFFFFFCLL);
    if (v304) {
      unsigned int v305 = (void *)*v305;
    }
    uint64_t v303 = sub_178E46C((uint64_t)v305);
    *(void *)(a1 + 656) = v303;
  }
  if (*(void *)(a2 + 656)) {
    v306 = *(uint64_t (****)())(a2 + 656);
  }
  else {
    v306 = &off_2549158;
  }
  sub_172E758(v303, (uint64_t)v306);
  if ((v262 & 0x800) == 0)
  {
LABEL_672:
    if ((v262 & 0x1000) == 0) {
      goto LABEL_673;
    }
    goto LABEL_709;
  }
LABEL_701:
  *(_DWORD *)(a1 + 48) |= 0x800u;
  uint64_t v307 = *(void *)(a1 + 664);
  if (!v307)
  {
    uint64_t v308 = *(void *)(a1 + 8);
    v309 = (void *)(v308 & 0xFFFFFFFFFFFFFFFCLL);
    if (v308) {
      v309 = (void *)*v309;
    }
    uint64_t v307 = sub_178B720((uint64_t)v309);
    *(void *)(a1 + 664) = v307;
  }
  if (*(void *)(a2 + 664)) {
    uint64_t v310 = *(uint64_t (****)())(a2 + 664);
  }
  else {
    uint64_t v310 = &off_2547A98;
  }
  sub_172E828(v307, (uint64_t)v310);
  if ((v262 & 0x1000) == 0)
  {
LABEL_673:
    if ((v262 & 0x2000) == 0) {
      goto LABEL_674;
    }
    goto LABEL_717;
  }
LABEL_709:
  *(_DWORD *)(a1 + 48) |= 0x1000u;
  v311 = *(void **)(a1 + 672);
  if (!v311)
  {
    uint64_t v312 = *(void *)(a1 + 8);
    v313 = (void *)(v312 & 0xFFFFFFFFFFFFFFFCLL);
    if (v312) {
      v313 = (void *)*v313;
    }
    v311 = sub_178C6E0((uint64_t)v313);
    *(void *)(a1 + 672) = v311;
  }
  if (*(void *)(a2 + 672)) {
    uint64_t v314 = *(uint64_t (****)())(a2 + 672);
  }
  else {
    uint64_t v314 = &off_2548398;
  }
  sub_172E974((uint64_t)v311, (uint64_t)v314);
  if ((v262 & 0x2000) == 0)
  {
LABEL_674:
    if ((v262 & 0x4000) == 0) {
      goto LABEL_675;
    }
    goto LABEL_725;
  }
LABEL_717:
  *(_DWORD *)(a1 + 48) |= 0x2000u;
  uint64_t v315 = *(void *)(a1 + 680);
  if (!v315)
  {
    uint64_t v316 = *(void *)(a1 + 8);
    v317 = (void *)(v316 & 0xFFFFFFFFFFFFFFFCLL);
    if (v316) {
      v317 = (void *)*v317;
    }
    uint64_t v315 = sub_1789538((uint64_t)v317);
    *(void *)(a1 + 680) = v315;
  }
  if (*(void *)(a2 + 680)) {
    v318 = *(uint64_t (****)())(a2 + 680);
  }
  else {
    v318 = &off_2546208;
  }
  sub_16FDE34(v315, (uint64_t)v318);
  if ((v262 & 0x4000) == 0)
  {
LABEL_675:
    if ((v262 & 0x8000) == 0) {
      goto LABEL_741;
    }
    goto LABEL_733;
  }
LABEL_725:
  *(_DWORD *)(a1 + 48) |= 0x4000u;
  v319 = *(void **)(a1 + 688);
  if (!v319)
  {
    uint64_t v320 = *(void *)(a1 + 8);
    v321 = (void *)(v320 & 0xFFFFFFFFFFFFFFFCLL);
    if (v320) {
      v321 = (void *)*v321;
    }
    v319 = sub_178B77C((uint64_t)v321);
    *(void *)(a1 + 688) = v319;
  }
  if (*(void *)(a2 + 688)) {
    v322 = *(uint64_t (****)())(a2 + 688);
  }
  else {
    v322 = &off_2547AF0;
  }
  sub_172EA84((uint64_t)v319, (uint64_t)v322);
  if ((v262 & 0x8000) != 0)
  {
LABEL_733:
    *(_DWORD *)(a1 + 48) |= 0x8000u;
    uint64_t v323 = *(void *)(a1 + 696);
    if (!v323)
    {
      uint64_t v324 = *(void *)(a1 + 8);
      v325 = (void *)(v324 & 0xFFFFFFFFFFFFFFFCLL);
      if (v324) {
        v325 = (void *)*v325;
      }
      uint64_t v323 = sub_1788F08((uint64_t)v325);
      *(void *)(a1 + 696) = v323;
    }
    if (*(void *)(a2 + 696)) {
      v326 = *(uint64_t (****)())(a2 + 696);
    }
    else {
      v326 = &off_2545EA0;
    }
    sub_16F53C4(v323, (uint64_t)v326);
  }
LABEL_741:
  if ((v262 & 0xFF0000) == 0) {
    goto LABEL_815;
  }
  if ((v262 & 0x10000) != 0)
  {
    *(_DWORD *)(a1 + 48) |= 0x10000u;
    uint64_t v327 = *(void *)(a1 + 704);
    if (!v327)
    {
      uint64_t v328 = *(void *)(a1 + 8);
      v329 = (void *)(v328 & 0xFFFFFFFFFFFFFFFCLL);
      if (v328) {
        v329 = (void *)*v329;
      }
      uint64_t v327 = sub_1789150((uint64_t)v329);
      *(void *)(a1 + 704) = v327;
    }
    if (*(void *)(a2 + 704)) {
      v330 = *(uint64_t (****)())(a2 + 704);
    }
    else {
      v330 = &off_2545FA8;
    }
    sub_16F7A70(v327, (uint64_t)v330);
    if ((v262 & 0x20000) == 0)
    {
LABEL_744:
      if ((v262 & 0x40000) == 0) {
        goto LABEL_745;
      }
      goto LABEL_767;
    }
  }
  else if ((v262 & 0x20000) == 0)
  {
    goto LABEL_744;
  }
  *(_DWORD *)(a1 + 48) |= 0x20000u;
  v331 = *(void **)(a1 + 712);
  if (!v331)
  {
    uint64_t v332 = *(void *)(a1 + 8);
    v333 = (void *)(v332 & 0xFFFFFFFFFFFFFFFCLL);
    if (v332) {
      v333 = (void *)*v333;
    }
    v331 = sub_1789224((uint64_t)v333);
    *(void *)(a1 + 712) = v331;
  }
  if (*(void *)(a2 + 712)) {
    v334 = *(uint64_t (****)())(a2 + 712);
  }
  else {
    v334 = &off_2546010;
  }
  sub_16F8724((uint64_t)v331, (uint64_t)v334);
  if ((v262 & 0x40000) == 0)
  {
LABEL_745:
    if ((v262 & 0x80000) == 0) {
      goto LABEL_746;
    }
    goto LABEL_775;
  }
LABEL_767:
  *(_DWORD *)(a1 + 48) |= 0x40000u;
  uint64_t v335 = *(void *)(a1 + 720);
  if (!v335)
  {
    uint64_t v336 = *(void *)(a1 + 8);
    v337 = (void *)(v336 & 0xFFFFFFFFFFFFFFFCLL);
    if (v336) {
      v337 = (void *)*v337;
    }
    uint64_t v335 = sub_178C554((uint64_t)v337);
    *(void *)(a1 + 720) = v335;
  }
  if (*(void *)(a2 + 720)) {
    v338 = *(uint64_t (****)())(a2 + 720);
  }
  else {
    v338 = &off_2548290;
  }
  sub_172EB70(v335, (uint64_t)v338);
  if ((v262 & 0x80000) == 0)
  {
LABEL_746:
    if ((v262 & 0x100000) == 0) {
      goto LABEL_747;
    }
    goto LABEL_783;
  }
LABEL_775:
  *(_DWORD *)(a1 + 48) |= 0x80000u;
  uint64_t v339 = *(void *)(a1 + 728);
  if (!v339)
  {
    uint64_t v340 = *(void *)(a1 + 8);
    v341 = (void *)(v340 & 0xFFFFFFFFFFFFFFFCLL);
    if (v340) {
      v341 = (void *)*v341;
    }
    uint64_t v339 = sub_178EE28((uint64_t)v341);
    *(void *)(a1 + 728) = v339;
  }
  if (*(void *)(a2 + 728)) {
    v342 = *(uint64_t (****)())(a2 + 728);
  }
  else {
    v342 = &off_25495B0;
  }
  sub_172ECBC(v339, (uint64_t)v342);
  if ((v262 & 0x100000) == 0)
  {
LABEL_747:
    if ((v262 & 0x200000) == 0) {
      goto LABEL_748;
    }
    goto LABEL_791;
  }
LABEL_783:
  *(_DWORD *)(a1 + 48) |= 0x100000u;
  v343 = *(void **)(a1 + 736);
  if (!v343)
  {
    uint64_t v344 = *(void *)(a1 + 8);
    v345 = (void *)(v344 & 0xFFFFFFFFFFFFFFFCLL);
    if (v344) {
      v345 = (void *)*v345;
    }
    v343 = sub_1787D84((uint64_t)v345);
    *(void *)(a1 + 736) = v343;
  }
  if (*(void *)(a2 + 736)) {
    v346 = *(uint64_t (****)())(a2 + 736);
  }
  else {
    v346 = &off_2545550;
  }
  sub_16E1110((uint64_t)v343, (uint64_t)v346);
  if ((v262 & 0x200000) == 0)
  {
LABEL_748:
    if ((v262 & 0x400000) == 0) {
      goto LABEL_749;
    }
    goto LABEL_799;
  }
LABEL_791:
  *(_DWORD *)(a1 + 48) |= 0x200000u;
  uint64_t v347 = *(void *)(a1 + 744);
  if (!v347)
  {
    uint64_t v348 = *(void *)(a1 + 8);
    v349 = (void *)(v348 & 0xFFFFFFFFFFFFFFFCLL);
    if (v348) {
      v349 = (void *)*v349;
    }
    uint64_t v347 = sub_1789790((uint64_t)v349);
    *(void *)(a1 + 744) = v347;
  }
  if (*(void *)(a2 + 744)) {
    v350 = *(uint64_t (****)())(a2 + 744);
  }
  else {
    v350 = &off_2546378;
  }
  sub_1700940(v347, (uint64_t)v350);
  if ((v262 & 0x400000) == 0)
  {
LABEL_749:
    if ((v262 & 0x800000) == 0) {
      goto LABEL_815;
    }
    goto LABEL_807;
  }
LABEL_799:
  *(_DWORD *)(a1 + 48) |= 0x400000u;
  v351 = *(void **)(a1 + 752);
  if (!v351)
  {
    uint64_t v352 = *(void *)(a1 + 8);
    v353 = (void *)(v352 & 0xFFFFFFFFFFFFFFFCLL);
    if (v352) {
      v353 = (void *)*v353;
    }
    v351 = sub_1788FDC((uint64_t)v353);
    *(void *)(a1 + 752) = v351;
  }
  if (*(void *)(a2 + 752)) {
    v354 = *(uint64_t (****)())(a2 + 752);
  }
  else {
    v354 = &off_2545F00;
  }
  sub_16F6748((uint64_t)v351, (uint64_t)v354);
  if ((v262 & 0x800000) != 0)
  {
LABEL_807:
    *(_DWORD *)(a1 + 48) |= 0x800000u;
    v355 = *(void **)(a1 + 760);
    if (!v355)
    {
      uint64_t v356 = *(void *)(a1 + 8);
      v357 = (void *)(v356 & 0xFFFFFFFFFFFFFFFCLL);
      if (v356) {
        v357 = (void *)*v357;
      }
      v355 = sub_178DE50((uint64_t)v357);
      *(void *)(a1 + 760) = v355;
    }
    if (*(void *)(a2 + 760)) {
      v358 = *(uint64_t (****)())(a2 + 760);
    }
    else {
      v358 = &off_2548E18;
    }
    sub_172ED8C((uint64_t)v355, (uint64_t)v358);
  }
LABEL_815:
  if (!HIBYTE(v262)) {
    goto LABEL_889;
  }
  if ((v262 & 0x1000000) != 0)
  {
    *(_DWORD *)(a1 + 48) |= 0x1000000u;
    v359 = *(void **)(a1 + 768);
    if (!v359)
    {
      uint64_t v360 = *(void *)(a1 + 8);
      v361 = (void *)(v360 & 0xFFFFFFFFFFFFFFFCLL);
      if (v360) {
        v361 = (void *)*v361;
      }
      v359 = sub_178EF9C((uint64_t)v361);
      *(void *)(a1 + 768) = v359;
    }
    if (*(void *)(a2 + 768)) {
      v362 = *(uint64_t (****)())(a2 + 768);
    }
    else {
      v362 = &off_2549660;
    }
    sub_172EFB8((uint64_t)v359, (uint64_t)v362);
    if ((v262 & 0x2000000) == 0)
    {
LABEL_818:
      if ((v262 & 0x4000000) == 0) {
        goto LABEL_819;
      }
      goto LABEL_841;
    }
  }
  else if ((v262 & 0x2000000) == 0)
  {
    goto LABEL_818;
  }
  *(_DWORD *)(a1 + 48) |= 0x2000000u;
  uint64_t v363 = *(void *)(a1 + 776);
  if (!v363)
  {
    uint64_t v364 = *(void *)(a1 + 8);
    v365 = (void *)(v364 & 0xFFFFFFFFFFFFFFFCLL);
    if (v364) {
      v365 = (void *)*v365;
    }
    uint64_t v363 = sub_1787E58((uint64_t)v365);
    *(void *)(a1 + 776) = v363;
  }
  if (*(void *)(a2 + 776)) {
    v366 = *(uint64_t (****)())(a2 + 776);
  }
  else {
    v366 = &off_25455D0;
  }
  sub_16E1DBC(v363, (uint64_t)v366);
  if ((v262 & 0x4000000) == 0)
  {
LABEL_819:
    if ((v262 & 0x8000000) == 0) {
      goto LABEL_820;
    }
    goto LABEL_849;
  }
LABEL_841:
  *(_DWORD *)(a1 + 48) |= 0x4000000u;
  uint64_t v367 = *(void *)(a1 + 784);
  if (!v367)
  {
    uint64_t v368 = *(void *)(a1 + 8);
    v369 = (void *)(v368 & 0xFFFFFFFFFFFFFFFCLL);
    if (v368) {
      v369 = (void *)*v369;
    }
    uint64_t v367 = sub_178D104((uint64_t)v369);
    *(void *)(a1 + 784) = v367;
  }
  if (*(void *)(a2 + 784)) {
    v370 = *(uint64_t (****)())(a2 + 784);
  }
  else {
    v370 = &off_2548888;
  }
  sub_172F0C0(v367, (uint64_t)v370);
  if ((v262 & 0x8000000) == 0)
  {
LABEL_820:
    if ((v262 & 0x10000000) == 0) {
      goto LABEL_821;
    }
    goto LABEL_857;
  }
LABEL_849:
  *(_DWORD *)(a1 + 48) |= 0x8000000u;
  v371 = *(void **)(a1 + 792);
  if (!v371)
  {
    uint64_t v372 = *(void *)(a1 + 8);
    v373 = (void *)(v372 & 0xFFFFFFFFFFFFFFFCLL);
    if (v372) {
      v373 = (void *)*v373;
    }
    v371 = sub_178C028((uint64_t)v373);
    *(void *)(a1 + 792) = v371;
  }
  if (*(void *)(a2 + 792)) {
    v374 = *(uint64_t (****)())(a2 + 792);
  }
  else {
    v374 = &off_2548048;
  }
  sub_172F20C((uint64_t)v371, (uint64_t)v374);
  if ((v262 & 0x10000000) == 0)
  {
LABEL_821:
    if ((v262 & 0x20000000) == 0) {
      goto LABEL_822;
    }
    goto LABEL_865;
  }
LABEL_857:
  *(_DWORD *)(a1 + 48) |= 0x10000000u;
  uint64_t v375 = *(void *)(a1 + 800);
  if (!v375)
  {
    uint64_t v376 = *(void *)(a1 + 8);
    v377 = (void *)(v376 & 0xFFFFFFFFFFFFFFFCLL);
    if (v376) {
      v377 = (void *)*v377;
    }
    uint64_t v375 = sub_178B940((uint64_t)v377);
    *(void *)(a1 + 800) = v375;
  }
  if (*(void *)(a2 + 800)) {
    v378 = *(uint64_t (****)())(a2 + 800);
  }
  else {
    v378 = &off_2547BF8;
  }
  sub_172F37C(v375, (uint64_t)v378);
  if ((v262 & 0x20000000) == 0)
  {
LABEL_822:
    if ((v262 & 0x40000000) == 0) {
      goto LABEL_823;
    }
    goto LABEL_873;
  }
LABEL_865:
  *(_DWORD *)(a1 + 48) |= 0x20000000u;
  v379 = *(void **)(a1 + 808);
  if (!v379)
  {
    uint64_t v380 = *(void *)(a1 + 8);
    v381 = (void *)(v380 & 0xFFFFFFFFFFFFFFFCLL);
    if (v380) {
      v381 = (void *)*v381;
    }
    v379 = sub_178B9F8((uint64_t)v381);
    *(void *)(a1 + 808) = v379;
  }
  if (*(void *)(a2 + 808)) {
    v382 = *(uint64_t (****)())(a2 + 808);
  }
  else {
    v382 = &off_2547C88;
  }
  sub_172F540((uint64_t)v379, (uint64_t)v382);
  if ((v262 & 0x40000000) == 0)
  {
LABEL_823:
    if ((v262 & 0x80000000) == 0) {
      goto LABEL_889;
    }
    goto LABEL_881;
  }
LABEL_873:
  *(_DWORD *)(a1 + 48) |= 0x40000000u;
  uint64_t v383 = *(void *)(a1 + 816);
  if (!v383)
  {
    uint64_t v384 = *(void *)(a1 + 8);
    v385 = (void *)(v384 & 0xFFFFFFFFFFFFFFFCLL);
    if (v384) {
      v385 = (void *)*v385;
    }
    uint64_t v383 = sub_178BE14((uint64_t)v385);
    *(void *)(a1 + 816) = v383;
  }
  if (*(void *)(a2 + 816)) {
    v386 = *(uint64_t (****)())(a2 + 816);
  }
  else {
    v386 = &off_2547F00;
  }
  sub_172F5F4(v383, (uint64_t)v386);
  if ((v262 & 0x80000000) != 0)
  {
LABEL_881:
    *(_DWORD *)(a1 + 48) |= 0x80000000;
    v387 = *(void **)(a1 + 824);
    if (!v387)
    {
      uint64_t v388 = *(void *)(a1 + 8);
      v389 = (void *)(v388 & 0xFFFFFFFFFFFFFFFCLL);
      if (v388) {
        v389 = (void *)*v389;
      }
      v387 = sub_1789694((uint64_t)v389);
      *(void *)(a1 + 824) = v387;
    }
    if (*(void *)(a2 + 824)) {
      v390 = *(uint64_t (****)())(a2 + 824);
    }
    else {
      v390 = &off_2546310;
    }
    sub_16FFA68((uint64_t)v387, (uint64_t)v390);
  }
LABEL_889:
  int v391 = *(_DWORD *)(a2 + 52);
  if ((v391 & 0xF) == 0) {
    goto LABEL_927;
  }
  if (v391)
  {
    *(_DWORD *)(a1 + 52) |= 1u;
    v392 = *(void **)(a1 + 832);
    if (!v392)
    {
      uint64_t v393 = *(void *)(a1 + 8);
      v394 = (void *)(v393 & 0xFFFFFFFFFFFFFFFCLL);
      if (v393) {
        v394 = (void *)*v394;
      }
      v392 = sub_178BAB0((uint64_t)v394);
      *(void *)(a1 + 832) = v392;
    }
    if (*(void *)(a2 + 832)) {
      v395 = *(uint64_t (****)())(a2 + 832);
    }
    else {
      v395 = &off_2547CF0;
    }
    sub_172F798((uint64_t)v392, (uint64_t)v395);
    if ((v391 & 2) == 0)
    {
LABEL_892:
      if ((v391 & 4) == 0) {
        goto LABEL_893;
      }
      goto LABEL_911;
    }
  }
  else if ((v391 & 2) == 0)
  {
    goto LABEL_892;
  }
  *(_DWORD *)(a1 + 52) |= 2u;
  v396 = *(void **)(a1 + 840);
  if (!v396)
  {
    uint64_t v397 = *(void *)(a1 + 8);
    v398 = (void *)(v397 & 0xFFFFFFFFFFFFFFFCLL);
    if (v397) {
      v398 = (void *)*v398;
    }
    v396 = sub_178BB68((uint64_t)v398);
    *(void *)(a1 + 840) = v396;
  }
  if (*(void *)(a2 + 840)) {
    v399 = *(uint64_t (****)())(a2 + 840);
  }
  else {
    v399 = &off_2547D70;
  }
  sub_172F8C8((uint64_t)v396, (uint64_t)v399);
  if ((v391 & 4) == 0)
  {
LABEL_893:
    if ((v391 & 8) == 0) {
      goto LABEL_927;
    }
    goto LABEL_919;
  }
LABEL_911:
  *(_DWORD *)(a1 + 52) |= 4u;
  uint64_t v400 = *(void *)(a1 + 848);
  if (!v400)
  {
    uint64_t v401 = *(void *)(a1 + 8);
    v402 = (void *)(v401 & 0xFFFFFFFFFFFFFFFCLL);
    if (v401) {
      v402 = (void *)*v402;
    }
    uint64_t v400 = sub_178BC20((uint64_t)v402);
    *(void *)(a1 + 848) = v400;
  }
  if (*(void *)(a2 + 848)) {
    v403 = *(uint64_t (****)())(a2 + 848);
  }
  else {
    v403 = &off_2547E20;
  }
  sub_172FA88(v400, (uint64_t)v403);
  if ((v391 & 8) != 0)
  {
LABEL_919:
    *(_DWORD *)(a1 + 52) |= 8u;
    v404 = *(void **)(a1 + 856);
    if (!v404)
    {
      uint64_t v405 = *(void *)(a1 + 8);
      v406 = (void *)(v405 & 0xFFFFFFFFFFFFFFFCLL);
      if (v405) {
        v406 = (void *)*v406;
      }
      v404 = sub_178BCD8((uint64_t)v406);
      *(void *)(a1 + 856) = v404;
    }
    if (*(void *)(a2 + 856)) {
      v407 = *(uint64_t (****)())(a2 + 856);
    }
    else {
      v407 = &off_2547E98;
    }
    sub_16C1200((uint64_t)v404, (uint64_t)v407);
  }
LABEL_927:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v408 = *(void *)(a2 + 8);
  if (v408)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v408 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_172C700(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 56);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_1876CBC((uint64_t *)(a1 + 48), v6, v5, v4, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v7 = *(_DWORD *)(a1 + 56) + v4;
    *(_DWORD *)(a1 + 56) = v7;
    uint64_t v8 = *(int **)(a1 + 64);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 80);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 88) + 8);
    unsigned int v11 = (std::string **)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_1876D48((uint64_t *)(a1 + 72), v11, v10, v9, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v12 = *(_DWORD *)(a1 + 80) + v9;
    *(_DWORD *)(a1 + 80) = v12;
    uint64_t v13 = *(int **)(a1 + 88);
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 104);
  if (v14)
  {
    int v15 = (uint64_t *)(*(void *)(a2 + 112) + 8);
    uint64_t v16 = (std::string **)sub_188CCE4(a1 + 96, *(_DWORD *)(a2 + 104));
    sub_1876DD4((uint64_t *)(a1 + 96), v16, v15, v14, **(_DWORD **)(a1 + 112) - *(_DWORD *)(a1 + 104));
    int v17 = *(_DWORD *)(a1 + 104) + v14;
    *(_DWORD *)(a1 + 104) = v17;
    uint64_t v18 = *(int **)(a1 + 112);
    if (*v18 < v17) {
      *uint64_t v18 = v17;
    }
  }
  int v19 = *(_DWORD *)(a2 + 128);
  if (v19)
  {
    uint64_t v20 = (uint64_t *)(*(void *)(a2 + 136) + 8);
    uint64_t v21 = (std::string **)sub_188CCE4(a1 + 120, *(_DWORD *)(a2 + 128));
    sub_12C1E38((std::string *)(a1 + 120), v21, v20, v19, **(_DWORD **)(a1 + 136) - *(_DWORD *)(a1 + 128));
    int v22 = *(_DWORD *)(a1 + 128) + v19;
    *(_DWORD *)(a1 + 128) = v22;
    uint64_t v23 = *(int **)(a1 + 136);
    if (*v23 < v22) {
      int *v23 = v22;
    }
  }
  if (*(unsigned char *)(a2 + 40))
  {
    char v24 = *(unsigned char *)(a2 + 144);
    *(_DWORD *)(a1 + 40) |= 1u;
    *(unsigned char *)(a1 + 144) = v24;
  }
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v25 = *(void *)(a2 + 8);
  if (v25)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v25 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_172C924(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 56);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_187B91C((uint64_t *)(a1 + 48), v6, v5, v4, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v7 = *(_DWORD *)(a1 + 56) + v4;
    *(_DWORD *)(a1 + 56) = v7;
    uint64_t v8 = *(int **)(a1 + 64);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 80);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 88) + 8);
    unsigned int v11 = (uint64_t *)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_187B9A8((uint64_t *)(a1 + 72), v11, v10, v9, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v12 = *(_DWORD *)(a1 + 80) + v9;
    *(_DWORD *)(a1 + 80) = v12;
    uint64_t v13 = *(int **)(a1 + 88);
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 40);
  if ((v14 & 0x3F) != 0)
  {
    if (v14)
    {
      *(_DWORD *)(a1 + 40) |= 1u;
      uint64_t v16 = *(void *)(a1 + 96);
      if (!v16)
      {
        uint64_t v17 = *(void *)(a1 + 8);
        uint64_t v18 = (void *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
        if (v17) {
          uint64_t v18 = (void *)*v18;
        }
        uint64_t v16 = sub_185F4D8((uint64_t)v18);
        *(void *)(a1 + 96) = v16;
      }
      if (*(void *)(a2 + 96)) {
        int v19 = *(uint64_t (****)())(a2 + 96);
      }
      else {
        int v19 = &off_254D7F8;
      }
      sub_1856530(v16, (uint64_t)v19);
      if ((v14 & 2) == 0)
      {
LABEL_10:
        if ((v14 & 4) == 0) {
          goto LABEL_11;
        }
        goto LABEL_36;
      }
    }
    else if ((v14 & 2) == 0)
    {
      goto LABEL_10;
    }
    *(_DWORD *)(a1 + 40) |= 2u;
    uint64_t v20 = *(void **)(a1 + 104);
    if (!v20)
    {
      uint64_t v21 = *(void *)(a1 + 8);
      int v22 = (void *)(v21 & 0xFFFFFFFFFFFFFFFCLL);
      if (v21) {
        int v22 = (void *)*v22;
      }
      uint64_t v20 = sub_185F814((uint64_t)v22);
      *(void *)(a1 + 104) = v20;
    }
    if (*(void *)(a2 + 104)) {
      uint64_t v23 = *(uint64_t (****)())(a2 + 104);
    }
    else {
      uint64_t v23 = &off_254DB00;
    }
    sub_1856698((uint64_t)v20, (uint64_t)v23);
    if ((v14 & 4) == 0)
    {
LABEL_11:
      if ((v14 & 8) == 0) {
        goto LABEL_12;
      }
      goto LABEL_44;
    }
LABEL_36:
    *(_DWORD *)(a1 + 40) |= 4u;
    uint64_t v24 = *(void *)(a1 + 112);
    if (!v24)
    {
      uint64_t v25 = *(void *)(a1 + 8);
      uint64_t v26 = (void *)(v25 & 0xFFFFFFFFFFFFFFFCLL);
      if (v25) {
        uint64_t v26 = (void *)*v26;
      }
      uint64_t v24 = sub_185F3A8((uint64_t)v26);
      *(void *)(a1 + 112) = v24;
    }
    if (*(void *)(a2 + 112)) {
      uint64_t v27 = *(uint64_t (****)())(a2 + 112);
    }
    else {
      uint64_t v27 = &off_254D750;
    }
    sub_18567AC(v24, (uint64_t)v27);
    if ((v14 & 8) == 0)
    {
LABEL_12:
      if ((v14 & 0x10) == 0) {
        goto LABEL_13;
      }
      goto LABEL_45;
    }
LABEL_44:
    *(_DWORD *)(a1 + 120) = *(_DWORD *)(a2 + 120);
    if ((v14 & 0x10) == 0)
    {
LABEL_13:
      if ((v14 & 0x20) == 0)
      {
LABEL_15:
        *(_DWORD *)(a1 + 40) |= v14;
        goto LABEL_16;
      }
LABEL_14:
      *(_DWORD *)(a1 + 128) = *(_DWORD *)(a2 + 128);
      goto LABEL_15;
    }
LABEL_45:
    *(_DWORD *)(a1 + 124) = *(_DWORD *)(a2 + 124);
    if ((v14 & 0x20) == 0) {
      goto LABEL_15;
    }
    goto LABEL_14;
  }
LABEL_16:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v15 = *(void *)(a2 + 8);
  if (v15)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v15 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_172CB9C(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 56);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_187B4D0((std::string *)(a1 + 48), v6, v5, v4, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v7 = *(_DWORD *)(a1 + 56) + v4;
    *(_DWORD *)(a1 + 56) = v7;
    uint64_t v8 = *(int **)(a1 + 64);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 40);
  if ((v9 & 7) != 0)
  {
    if (v9)
    {
      *(_DWORD *)(a1 + 40) |= 1u;
      unsigned int v11 = *(std::string **)(a1 + 72);
      if (!v11)
      {
        uint64_t v12 = *(void *)(a1 + 8);
        uint64_t v13 = (void *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          uint64_t v13 = (void *)*v13;
        }
        sub_1481D2C((uint64_t)v13);
        *(void *)(a1 + 72) = v11;
      }
      if (*(void *)(a2 + 72)) {
        int v14 = *(uint64_t (****)())(a2 + 72);
      }
      else {
        int v14 = &off_2539D48;
      }
      sub_147BF78(v11, (uint64_t)v14);
      if ((v9 & 2) == 0)
      {
LABEL_7:
        if ((v9 & 4) == 0)
        {
LABEL_9:
          *(_DWORD *)(a1 + 40) |= v9;
          goto LABEL_10;
        }
LABEL_8:
        *(_DWORD *)(a1 + 88) = *(_DWORD *)(a2 + 88);
        goto LABEL_9;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_7;
    }
    *(_DWORD *)(a1 + 40) |= 2u;
    uint64_t v15 = *(std::string **)(a1 + 80);
    if (!v15)
    {
      uint64_t v16 = *(void *)(a1 + 8);
      uint64_t v17 = (void *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
      if (v16) {
        uint64_t v17 = (void *)*v17;
      }
      uint64_t v15 = (std::string *)sub_148206C((uint64_t)v17);
      *(void *)(a1 + 80) = v15;
    }
    if (*(void *)(a2 + 80)) {
      uint64_t v18 = *(uint64_t (****)())(a2 + 80);
    }
    else {
      uint64_t v18 = &off_2539ED0;
    }
    sub_1480504(v15, (uint64_t)v18);
    if ((v9 & 4) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
LABEL_10:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_172CD40(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 7) != 0)
  {
    if (v4)
    {
      uint64_t v5 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v6 = (std::string **)(a1 + 24);
      uint64_t v7 = *(void *)(a1 + 8);
      uint64_t v8 = (uint64_t *)(v7 & 0xFFFFFFFFFFFFFFFCLL);
      if (v7) {
        uint64_t v8 = (uint64_t *)*v8;
      }
      sub_1881DF4(v6, v5, v8);
    }
    if ((v4 & 2) != 0)
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      uint64_t v9 = *(void *)(a1 + 32);
      if (!v9)
      {
        uint64_t v10 = *(void *)(a1 + 8);
        unsigned int v11 = (void *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
        if (v10) {
          unsigned int v11 = (void *)*v11;
        }
        uint64_t v9 = sub_1854F10((uint64_t)v11);
        *(void *)(a1 + 32) = v9;
      }
      if (*(void *)(a2 + 32)) {
        uint64_t v12 = *(uint64_t (****)())(a2 + 32);
      }
      else {
        uint64_t v12 = &off_254D5E8;
      }
      sub_1852BF0(v9, (uint64_t)v12);
    }
    if ((v4 & 4) != 0)
    {
      *(_DWORD *)(a1 + 16) |= 4u;
      uint64_t v13 = *(void *)(a1 + 40);
      if (!v13)
      {
        uint64_t v14 = *(void *)(a1 + 8);
        uint64_t v15 = (void *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
        if (v14) {
          uint64_t v15 = (void *)*v15;
        }
        uint64_t v13 = sub_1854F10((uint64_t)v15);
        *(void *)(a1 + 40) = v13;
      }
      if (*(void *)(a2 + 40)) {
        uint64_t v16 = *(uint64_t (****)())(a2 + 40);
      }
      else {
        uint64_t v16 = &off_254D5E8;
      }
      sub_1852BF0(v13, (uint64_t)v16);
    }
  }
  uint64_t v17 = *(void *)(a2 + 8);
  if (v17)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v17 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_172CE70(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 48);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 56) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 40, *(_DWORD *)(a2 + 48));
    sub_1872CA8((uint64_t *)(a1 + 40), v6, v5, v4, **(_DWORD **)(a1 + 56) - *(_DWORD *)(a1 + 48));
    int v7 = *(_DWORD *)(a1 + 48) + v4;
    *(_DWORD *)(a1 + 48) = v7;
    uint64_t v8 = *(int **)(a1 + 56);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_172CF4C(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 48);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 56) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 40, *(_DWORD *)(a2 + 48));
    sub_1872D34((uint64_t *)(a1 + 40), v6, v5, v4, **(_DWORD **)(a1 + 56) - *(_DWORD *)(a1 + 48));
    int v7 = *(_DWORD *)(a1 + 48) + v4;
    *(_DWORD *)(a1 + 48) = v7;
    uint64_t v8 = *(int **)(a1 + 56);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_172D028(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 56);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_187237C((uint64_t *)(a1 + 48), v6, v5, v4, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v7 = *(_DWORD *)(a1 + 56) + v4;
    *(_DWORD *)(a1 + 56) = v7;
    uint64_t v8 = *(int **)(a1 + 64);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 40);
  if ((v9 & 3) != 0)
  {
    if (v9)
    {
      *(_DWORD *)(a1 + 40) |= 1u;
      uint64_t v10 = *(void *)(a1 + 72);
      if (!v10)
      {
        uint64_t v11 = *(void *)(a1 + 8);
        uint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
        if (v11) {
          uint64_t v12 = (void *)*v12;
        }
        uint64_t v10 = sub_1786348((uint64_t)v12);
        *(void *)(a1 + 72) = v10;
      }
      if (*(void *)(a2 + 72)) {
        uint64_t v13 = *(uint64_t (****)())(a2 + 72);
      }
      else {
        uint64_t v13 = &off_25444D8;
      }
      sub_16BCBA4(v10, (uint64_t)v13);
    }
    if ((v9 & 2) != 0)
    {
      *(_DWORD *)(a1 + 40) |= 2u;
      uint64_t v14 = *(void *)(a1 + 80);
      if (!v14)
      {
        uint64_t v15 = *(void *)(a1 + 8);
        uint64_t v16 = (void *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          uint64_t v16 = (void *)*v16;
        }
        uint64_t v14 = sub_178672C((uint64_t)v16);
        *(void *)(a1 + 80) = v14;
      }
      if (*(void *)(a2 + 80)) {
        uint64_t v17 = *(uint64_t (****)())(a2 + 80);
      }
      else {
        uint64_t v17 = &off_25448E8;
      }
      sub_16C3764(v14, (uint64_t)v17);
    }
  }
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v18 = *(void *)(a2 + 8);
  if (v18)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v18 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_172D1A8(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 56);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_1301BB0((uint64_t *)(a1 + 48), v6, v5, v4, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v7 = *(_DWORD *)(a1 + 56) + v4;
    *(_DWORD *)(a1 + 56) = v7;
    uint64_t v8 = *(int **)(a1 + 64);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 40);
  if ((v9 & 0x3F) != 0)
  {
    if (v9)
    {
      *(_DWORD *)(a1 + 40) |= 1u;
      uint64_t v11 = *(std::string **)(a1 + 72);
      if (!v11)
      {
        uint64_t v12 = *(void *)(a1 + 8);
        uint64_t v13 = (void *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          uint64_t v13 = (void *)*v13;
        }
        uint64_t v11 = (std::string *)sub_15C1B30((uint64_t)v13);
        *(void *)(a1 + 72) = v11;
      }
      if (*(void *)(a2 + 72)) {
        uint64_t v14 = *(uint64_t (****)())(a2 + 72);
      }
      else {
        uint64_t v14 = &off_253F2A0;
      }
      sub_11EC100(v11, (uint64_t)v14);
      if ((v9 & 2) == 0)
      {
LABEL_7:
        if ((v9 & 4) == 0) {
          goto LABEL_8;
        }
        goto LABEL_33;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_7;
    }
    *(_DWORD *)(a1 + 40) |= 2u;
    uint64_t v15 = *(std::string **)(a1 + 80);
    if (!v15)
    {
      uint64_t v16 = *(void *)(a1 + 8);
      uint64_t v17 = (void *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
      if (v16) {
        uint64_t v17 = (void *)*v17;
      }
      uint64_t v15 = (std::string *)sub_15C1B30((uint64_t)v17);
      *(void *)(a1 + 80) = v15;
    }
    if (*(void *)(a2 + 80)) {
      uint64_t v18 = *(uint64_t (****)())(a2 + 80);
    }
    else {
      uint64_t v18 = &off_253F2A0;
    }
    sub_11EC100(v15, (uint64_t)v18);
    if ((v9 & 4) == 0)
    {
LABEL_8:
      if ((v9 & 8) == 0) {
        goto LABEL_9;
      }
      goto LABEL_41;
    }
LABEL_33:
    *(_DWORD *)(a1 + 40) |= 4u;
    int v19 = *(void **)(a1 + 88);
    if (!v19)
    {
      uint64_t v20 = *(void *)(a1 + 8);
      uint64_t v21 = (void *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
      if (v20) {
        uint64_t v21 = (void *)*v21;
      }
      int v19 = sub_17885D0((uint64_t)v21);
      *(void *)(a1 + 88) = v19;
    }
    if (*(void *)(a2 + 88)) {
      int v22 = *(uint64_t (****)())(a2 + 88);
    }
    else {
      int v22 = &off_25459B0;
    }
    sub_1305F18((uint64_t)v19, (uint64_t)v22);
    if ((v9 & 8) == 0)
    {
LABEL_9:
      if ((v9 & 0x10) == 0) {
        goto LABEL_10;
      }
      goto LABEL_42;
    }
LABEL_41:
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    if ((v9 & 0x10) == 0)
    {
LABEL_10:
      if ((v9 & 0x20) == 0)
      {
LABEL_12:
        *(_DWORD *)(a1 + 40) |= v9;
        goto LABEL_13;
      }
LABEL_11:
      *(_DWORD *)(a1 + 112) = *(_DWORD *)(a2 + 112);
      goto LABEL_12;
    }
LABEL_42:
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    if ((v9 & 0x20) == 0) {
      goto LABEL_12;
    }
    goto LABEL_11;
  }
LABEL_13:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_172D3B4(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 56);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_12C1E38((std::string *)(a1 + 48), v6, v5, v4, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v7 = *(_DWORD *)(a1 + 56) + v4;
    *(_DWORD *)(a1 + 56) = v7;
    uint64_t v8 = *(int **)(a1 + 64);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 80);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 88) + 8);
    uint64_t v11 = (std::string **)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_12C1E38((std::string *)(a1 + 72), v11, v10, v9, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v12 = *(_DWORD *)(a1 + 80) + v9;
    *(_DWORD *)(a1 + 80) = v12;
    uint64_t v13 = *(int **)(a1 + 88);
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 104);
  if (v14)
  {
    uint64_t v15 = (uint64_t *)(*(void *)(a2 + 112) + 8);
    uint64_t v16 = (uint64_t *)sub_188CCE4(a1 + 96, *(_DWORD *)(a2 + 104));
    sub_154B658((uint64_t *)(a1 + 96), v16, v15, v14, **(_DWORD **)(a1 + 112) - *(_DWORD *)(a1 + 104));
    int v17 = *(_DWORD *)(a1 + 104) + v14;
    *(_DWORD *)(a1 + 104) = v17;
    uint64_t v18 = *(int **)(a1 + 112);
    if (*v18 < v17) {
      *uint64_t v18 = v17;
    }
  }
  int v19 = *(_DWORD *)(a2 + 128);
  if (v19)
  {
    uint64_t v20 = (uint64_t *)(*(void *)(a2 + 136) + 8);
    uint64_t v21 = (uint64_t *)sub_188CCE4(a1 + 120, *(_DWORD *)(a2 + 128));
    sub_1872408((uint64_t *)(a1 + 120), v21, v20, v19, **(_DWORD **)(a1 + 136) - *(_DWORD *)(a1 + 128));
    int v22 = *(_DWORD *)(a1 + 128) + v19;
    *(_DWORD *)(a1 + 128) = v22;
    uint64_t v23 = *(int **)(a1 + 136);
    if (*v23 < v22) {
      int *v23 = v22;
    }
  }
  int v24 = *(_DWORD *)(a2 + 152);
  if (v24)
  {
    uint64_t v25 = (uint64_t *)(*(void *)(a2 + 160) + 8);
    uint64_t v26 = (std::string **)sub_188CCE4(a1 + 144, *(_DWORD *)(a2 + 152));
    sub_12C1E38((std::string *)(a1 + 144), v26, v25, v24, **(_DWORD **)(a1 + 160) - *(_DWORD *)(a1 + 152));
    int v27 = *(_DWORD *)(a1 + 152) + v24;
    *(_DWORD *)(a1 + 152) = v27;
    uint64_t v28 = *(int **)(a1 + 160);
    if (*v28 < v27) {
      *uint64_t v28 = v27;
    }
  }
  int v29 = *(_DWORD *)(a2 + 176);
  if (v29)
  {
    uint64_t v30 = (uint64_t *)(*(void *)(a2 + 184) + 8);
    uint64_t v31 = (uint64_t *)sub_188CCE4(a1 + 168, *(_DWORD *)(a2 + 176));
    sub_12C4B74((uint64_t *)(a1 + 168), v31, v30, v29, **(_DWORD **)(a1 + 184) - *(_DWORD *)(a1 + 176));
    int v32 = *(_DWORD *)(a1 + 176) + v29;
    *(_DWORD *)(a1 + 176) = v32;
    uint64_t v33 = *(int **)(a1 + 184);
    if (*v33 < v32) {
      *uint64_t v33 = v32;
    }
  }
  int v34 = *(_DWORD *)(a2 + 200);
  if (v34)
  {
    uint64_t v35 = (uint64_t *)(*(void *)(a2 + 208) + 8);
    uint64_t v36 = (std::string **)sub_188CCE4(a1 + 192, *(_DWORD *)(a2 + 200));
    sub_12C1E38((std::string *)(a1 + 192), v36, v35, v34, **(_DWORD **)(a1 + 208) - *(_DWORD *)(a1 + 200));
    int v37 = *(_DWORD *)(a1 + 200) + v34;
    *(_DWORD *)(a1 + 200) = v37;
    uint64_t v38 = *(int **)(a1 + 208);
    if (*v38 < v37) {
      *uint64_t v38 = v37;
    }
  }
  int v39 = *(_DWORD *)(a2 + 224);
  if (v39)
  {
    uint64_t v40 = (uint64_t *)(*(void *)(a2 + 232) + 8);
    uint64_t v41 = (std::string **)sub_188CCE4(a1 + 216, *(_DWORD *)(a2 + 224));
    sub_12C1E38((std::string *)(a1 + 216), v41, v40, v39, **(_DWORD **)(a1 + 232) - *(_DWORD *)(a1 + 224));
    int v42 = *(_DWORD *)(a1 + 224) + v39;
    *(_DWORD *)(a1 + 224) = v42;
    uint64_t v43 = *(int **)(a1 + 232);
    if (*v43 < v42) {
      int *v43 = v42;
    }
  }
  int v44 = *(_DWORD *)(a2 + 248);
  if (v44)
  {
    uint64_t v45 = (uint64_t *)(*(void *)(a2 + 256) + 8);
    uint64_t v46 = (std::string **)sub_188CCE4(a1 + 240, *(_DWORD *)(a2 + 248));
    sub_1872494((std::string *)(a1 + 240), v46, v45, v44, **(_DWORD **)(a1 + 256) - *(_DWORD *)(a1 + 248));
    int v47 = *(_DWORD *)(a1 + 248) + v44;
    *(_DWORD *)(a1 + 248) = v47;
    uint64_t v48 = *(int **)(a1 + 256);
    if (*v48 < v47) {
      *uint64_t v48 = v47;
    }
  }
  int v49 = *(_DWORD *)(a2 + 272);
  if (v49)
  {
    uint64_t v50 = (uint64_t *)(*(void *)(a2 + 280) + 8);
    uint64_t v51 = (std::string **)sub_188CCE4(a1 + 264, *(_DWORD *)(a2 + 272));
    sub_12C1E38((std::string *)(a1 + 264), v51, v50, v49, **(_DWORD **)(a1 + 280) - *(_DWORD *)(a1 + 272));
    int v52 = *(_DWORD *)(a1 + 272) + v49;
    *(_DWORD *)(a1 + 272) = v52;
    uint64_t v53 = *(int **)(a1 + 280);
    if (*v53 < v52) {
      *uint64_t v53 = v52;
    }
  }
  int v54 = *(_DWORD *)(a2 + 296);
  if (v54)
  {
    uint64_t v55 = (uint64_t *)(*(void *)(a2 + 304) + 8);
    uint64_t v56 = (std::string **)sub_188CCE4(a1 + 288, *(_DWORD *)(a2 + 296));
    sub_12C1E38((std::string *)(a1 + 288), v56, v55, v54, **(_DWORD **)(a1 + 304) - *(_DWORD *)(a1 + 296));
    int v57 = *(_DWORD *)(a1 + 296) + v54;
    *(_DWORD *)(a1 + 296) = v57;
    uint64_t v58 = *(int **)(a1 + 304);
    if (*v58 < v57) {
      int *v58 = v57;
    }
  }
  int v59 = *(_DWORD *)(a2 + 320);
  if (v59)
  {
    uint64_t v60 = (uint64_t *)(*(void *)(a2 + 328) + 8);
    uint64_t v61 = (std::string **)sub_188CCE4(a1 + 312, *(_DWORD *)(a2 + 320));
    sub_12C1E38((std::string *)(a1 + 312), v61, v60, v59, **(_DWORD **)(a1 + 328) - *(_DWORD *)(a1 + 320));
    int v62 = *(_DWORD *)(a1 + 320) + v59;
    *(_DWORD *)(a1 + 320) = v62;
    uint64_t v63 = *(int **)(a1 + 328);
    if (*v63 < v62) {
      int *v63 = v62;
    }
  }
  int v64 = *(_DWORD *)(a2 + 344);
  if (v64)
  {
    uint64_t v65 = (uint64_t *)(*(void *)(a2 + 352) + 8);
    uint64_t v66 = (std::string **)sub_188CCE4(a1 + 336, *(_DWORD *)(a2 + 344));
    sub_12C1E38((std::string *)(a1 + 336), v66, v65, v64, **(_DWORD **)(a1 + 352) - *(_DWORD *)(a1 + 344));
    int v67 = *(_DWORD *)(a1 + 344) + v64;
    *(_DWORD *)(a1 + 344) = v67;
    uint64_t v68 = *(int **)(a1 + 352);
    if (*v68 < v67) {
      int *v68 = v67;
    }
  }
  int v69 = *(_DWORD *)(a2 + 368);
  if (v69)
  {
    uint64_t v70 = (uint64_t *)(*(void *)(a2 + 376) + 8);
    uint64_t v71 = (std::string **)sub_188CCE4(a1 + 360, *(_DWORD *)(a2 + 368));
    sub_12C1E38((std::string *)(a1 + 360), v71, v70, v69, **(_DWORD **)(a1 + 376) - *(_DWORD *)(a1 + 368));
    int v72 = *(_DWORD *)(a1 + 368) + v69;
    *(_DWORD *)(a1 + 368) = v72;
    uint64_t v73 = *(int **)(a1 + 376);
    if (*v73 < v72) {
      int *v73 = v72;
    }
  }
  int v74 = *(_DWORD *)(a2 + 392);
  if (v74)
  {
    uint64_t v75 = (uint64_t *)(*(void *)(a2 + 400) + 8);
    uint64_t v76 = (std::string **)sub_188CCE4(a1 + 384, *(_DWORD *)(a2 + 392));
    sub_1872510((std::string *)(a1 + 384), v76, v75, v74, **(_DWORD **)(a1 + 400) - *(_DWORD *)(a1 + 392));
    int v77 = *(_DWORD *)(a1 + 392) + v74;
    *(_DWORD *)(a1 + 392) = v77;
    uint64_t v78 = *(int **)(a1 + 400);
    if (*v78 < v77) {
      *uint64_t v78 = v77;
    }
  }
  int v79 = *(_DWORD *)(a2 + 416);
  if (v79)
  {
    uint64_t v80 = (uint64_t *)(*(void *)(a2 + 424) + 8);
    uint64_t v81 = (uint64_t *)sub_188CCE4(a1 + 408, *(_DWORD *)(a2 + 416));
    sub_154B658((uint64_t *)(a1 + 408), v81, v80, v79, **(_DWORD **)(a1 + 424) - *(_DWORD *)(a1 + 416));
    int v82 = *(_DWORD *)(a1 + 416) + v79;
    *(_DWORD *)(a1 + 416) = v82;
    uint64_t v83 = *(int **)(a1 + 424);
    if (*v83 < v82) {
      *uint64_t v83 = v82;
    }
  }
  int v84 = *(_DWORD *)(a2 + 440);
  if (v84)
  {
    uint64_t v85 = (uint64_t *)(*(void *)(a2 + 448) + 8);
    uint64_t v86 = (std::string **)sub_188CCE4(a1 + 432, *(_DWORD *)(a2 + 440));
    sub_12C1E38((std::string *)(a1 + 432), v86, v85, v84, **(_DWORD **)(a1 + 448) - *(_DWORD *)(a1 + 440));
    int v87 = *(_DWORD *)(a1 + 440) + v84;
    *(_DWORD *)(a1 + 440) = v87;
    uint64_t v88 = *(int **)(a1 + 448);
    if (*v88 < v87) {
      *uint64_t v88 = v87;
    }
  }
  int v89 = *(_DWORD *)(a2 + 40);
  if ((_BYTE)v89)
  {
    if (v89)
    {
      uint64_t v90 = (long long *)(*(void *)(a2 + 456) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 40) |= 1u;
      uint64_t v91 = *(void *)(a1 + 8);
      uint64_t v92 = (uint64_t *)(v91 & 0xFFFFFFFFFFFFFFFCLL);
      if (v91) {
        uint64_t v92 = (uint64_t *)*v92;
      }
      sub_1881DF4((std::string **)(a1 + 456), v90, v92);
    }
    if ((v89 & 2) != 0)
    {
      uint64_t v93 = (long long *)(*(void *)(a2 + 464) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 40) |= 2u;
      uint64_t v94 = *(void *)(a1 + 8);
      uint64_t v95 = (uint64_t *)(v94 & 0xFFFFFFFFFFFFFFFCLL);
      if (v94) {
        uint64_t v95 = (uint64_t *)*v95;
      }
      sub_1881DF4((std::string **)(a1 + 464), v93, v95);
    }
    if ((v89 & 4) != 0)
    {
      *(_DWORD *)(a1 + 40) |= 4u;
      uint64_t v97 = *(void *)(a1 + 472);
      if (!v97)
      {
        uint64_t v98 = *(void *)(a1 + 8);
        uint64_t v99 = (void *)(v98 & 0xFFFFFFFFFFFFFFFCLL);
        if (v98) {
          uint64_t v99 = (void *)*v99;
        }
        uint64_t v97 = sub_185089C((uint64_t)v99);
        *(void *)(a1 + 472) = v97;
      }
      if (*(void *)(a2 + 472)) {
        uint64_t v100 = *(uint64_t (****)())(a2 + 472);
      }
      else {
        uint64_t v100 = &off_254D2B0;
      }
      sub_16CE3CC(v97, (uint64_t)v100);
      if ((v89 & 8) == 0)
      {
LABEL_63:
        if ((v89 & 0x10) == 0) {
          goto LABEL_64;
        }
        goto LABEL_95;
      }
    }
    else if ((v89 & 8) == 0)
    {
      goto LABEL_63;
    }
    *(_DWORD *)(a1 + 40) |= 8u;
    uint64_t v101 = *(void *)(a1 + 480);
    if (!v101)
    {
      uint64_t v102 = *(void *)(a1 + 8);
      uint64_t v103 = (void *)(v102 & 0xFFFFFFFFFFFFFFFCLL);
      if (v102) {
        uint64_t v103 = (void *)*v103;
      }
      uint64_t v101 = sub_185089C((uint64_t)v103);
      *(void *)(a1 + 480) = v101;
    }
    if (*(void *)(a2 + 480)) {
      uint64_t v104 = *(uint64_t (****)())(a2 + 480);
    }
    else {
      uint64_t v104 = &off_254D2B0;
    }
    sub_16CE3CC(v101, (uint64_t)v104);
    if ((v89 & 0x10) == 0)
    {
LABEL_64:
      if ((v89 & 0x20) == 0) {
        goto LABEL_65;
      }
      goto LABEL_103;
    }
LABEL_95:
    *(_DWORD *)(a1 + 40) |= 0x10u;
    uint64_t v105 = *(void *)(a1 + 488);
    if (!v105)
    {
      uint64_t v106 = *(void *)(a1 + 8);
      uint64_t v107 = (void *)(v106 & 0xFFFFFFFFFFFFFFFCLL);
      if (v106) {
        uint64_t v107 = (void *)*v107;
      }
      uint64_t v105 = sub_178E358((uint64_t)v107);
      *(void *)(a1 + 488) = v105;
    }
    if (*(void *)(a2 + 488)) {
      uint64_t v108 = *(uint64_t (****)())(a2 + 488);
    }
    else {
      uint64_t v108 = &off_2549038;
    }
    sub_172DE10(v105, (uint64_t)v108);
    if ((v89 & 0x20) == 0)
    {
LABEL_65:
      if ((v89 & 0x40) == 0) {
        goto LABEL_66;
      }
      goto LABEL_111;
    }
LABEL_103:
    *(_DWORD *)(a1 + 40) |= 0x20u;
    uint64_t v109 = *(void *)(a1 + 496);
    if (!v109)
    {
      uint64_t v110 = *(void *)(a1 + 8);
      unsigned int v111 = (void *)(v110 & 0xFFFFFFFFFFFFFFFCLL);
      if (v110) {
        unsigned int v111 = (void *)*v111;
      }
      uint64_t v109 = sub_17894DC((uint64_t)v111);
      *(void *)(a1 + 496) = v109;
    }
    if (*(void *)(a2 + 496)) {
      v112 = *(uint64_t (****)())(a2 + 496);
    }
    else {
      v112 = &off_2546190;
    }
    sub_16FCCEC(v109, (uint64_t)v112);
    if ((v89 & 0x40) == 0)
    {
LABEL_66:
      if ((v89 & 0x80) == 0)
      {
LABEL_68:
        *(_DWORD *)(a1 + 40) |= v89;
        goto LABEL_69;
      }
LABEL_67:
      *(_DWORD *)(a1 + 512) = *(_DWORD *)(a2 + 512);
      goto LABEL_68;
    }
LABEL_111:
    *(void *)(a1 + 504) = *(void *)(a2 + 504);
    if ((v89 & 0x80) == 0) {
      goto LABEL_68;
    }
    goto LABEL_67;
  }
LABEL_69:
  if ((v89 & 0x300) != 0)
  {
    if ((v89 & 0x100) != 0) {
      *(unsigned char *)(a1 + 516) = *(unsigned char *)(a2 + 516);
    }
    if ((v89 & 0x200) != 0) {
      *(_DWORD *)(a1 + 520) = *(_DWORD *)(a2 + 520);
    }
    *(_DWORD *)(a1 + 40) |= v89;
  }
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v96 = *(void *)(a2 + 8);
  if (v96)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v96 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_172DCD4(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 56);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_12C4B74((uint64_t *)(a1 + 48), v6, v5, v4, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v7 = *(_DWORD *)(a1 + 56) + v4;
    *(_DWORD *)(a1 + 56) = v7;
    uint64_t v8 = *(int **)(a1 + 64);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 72);
  if (v9)
  {
    uint64_t v10 = *(int *)(a1 + 72);
    sub_188C80C((unsigned int *)(a1 + 72), v10 + v9);
    uint64_t v11 = *(void *)(a1 + 80);
    *(_DWORD *)(a1 + 72) += *(_DWORD *)(a2 + 72);
    memcpy((void *)(v11 + 4 * v10), *(const void **)(a2 + 80), 4 * *(int *)(a2 + 72));
  }
  if (*(unsigned char *)(a2 + 40))
  {
    int v12 = *(_DWORD *)(a2 + 88);
    *(_DWORD *)(a1 + 40) |= 1u;
    *(_DWORD *)(a1 + 88) = v12;
  }
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v13 = *(void *)(a2 + 8);
  if (v13)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v13 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_172DE10(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 56);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_12C4B74((uint64_t *)(a1 + 48), v6, v5, v4, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v7 = *(_DWORD *)(a1 + 56) + v4;
    *(_DWORD *)(a1 + 56) = v7;
    uint64_t v8 = *(int **)(a1 + 64);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 80);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 88) + 8);
    uint64_t v11 = (std::string **)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_12C1E38((std::string *)(a1 + 72), v11, v10, v9, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v12 = *(_DWORD *)(a1 + 80) + v9;
    *(_DWORD *)(a1 + 80) = v12;
    uint64_t v13 = *(int **)(a1 + 88);
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 40);
  if ((v14 & 0x1F) != 0)
  {
    if (v14)
    {
      *(_DWORD *)(a1 + 40) |= 1u;
      uint64_t v16 = *(void *)(a1 + 96);
      if (!v16)
      {
        uint64_t v17 = *(void *)(a1 + 8);
        uint64_t v18 = (void *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
        if (v17) {
          uint64_t v18 = (void *)*v18;
        }
        uint64_t v16 = sub_185089C((uint64_t)v18);
        *(void *)(a1 + 96) = v16;
      }
      if (*(void *)(a2 + 96)) {
        int v19 = *(uint64_t (****)())(a2 + 96);
      }
      else {
        int v19 = &off_254D2B0;
      }
      sub_16CE3CC(v16, (uint64_t)v19);
      if ((v14 & 2) == 0)
      {
LABEL_10:
        if ((v14 & 4) == 0) {
          goto LABEL_11;
        }
        goto LABEL_35;
      }
    }
    else if ((v14 & 2) == 0)
    {
      goto LABEL_10;
    }
    *(_DWORD *)(a1 + 40) |= 2u;
    uint64_t v20 = *(void *)(a1 + 104);
    if (!v20)
    {
      uint64_t v21 = *(void *)(a1 + 8);
      int v22 = (void *)(v21 & 0xFFFFFFFFFFFFFFFCLL);
      if (v21) {
        int v22 = (void *)*v22;
      }
      uint64_t v20 = sub_17894DC((uint64_t)v22);
      *(void *)(a1 + 104) = v20;
    }
    if (*(void *)(a2 + 104)) {
      uint64_t v23 = *(uint64_t (****)())(a2 + 104);
    }
    else {
      uint64_t v23 = &off_2546190;
    }
    sub_16FCCEC(v20, (uint64_t)v23);
    if ((v14 & 4) == 0)
    {
LABEL_11:
      if ((v14 & 8) == 0) {
        goto LABEL_12;
      }
      goto LABEL_43;
    }
LABEL_35:
    *(_DWORD *)(a1 + 40) |= 4u;
    int v24 = *(std::string **)(a1 + 112);
    if (!v24)
    {
      uint64_t v25 = *(void *)(a1 + 8);
      uint64_t v26 = (void *)(v25 & 0xFFFFFFFFFFFFFFFCLL);
      if (v25) {
        uint64_t v26 = (void *)*v26;
      }
      int v24 = (std::string *)sub_15C1B30((uint64_t)v26);
      *(void *)(a1 + 112) = v24;
    }
    if (*(void *)(a2 + 112)) {
      int v27 = *(uint64_t (****)())(a2 + 112);
    }
    else {
      int v27 = &off_253F2A0;
    }
    sub_11EC100(v24, (uint64_t)v27);
    if ((v14 & 8) == 0)
    {
LABEL_12:
      if ((v14 & 0x10) == 0)
      {
LABEL_14:
        *(_DWORD *)(a1 + 40) |= v14;
        goto LABEL_15;
      }
LABEL_13:
      *(_DWORD *)(a1 + 124) = *(_DWORD *)(a2 + 124);
      goto LABEL_14;
    }
LABEL_43:
    *(_DWORD *)(a1 + 120) = *(_DWORD *)(a2 + 120);
    if ((v14 & 0x10) == 0) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }
LABEL_15:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v15 = *(void *)(a2 + 8);
  if (v15)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v15 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_172E078(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 48);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 56) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 40, *(_DWORD *)(a2 + 48));
    sub_18727CC((uint64_t *)(a1 + 40), v6, v5, v4, **(_DWORD **)(a1 + 56) - *(_DWORD *)(a1 + 48));
    int v7 = *(_DWORD *)(a1 + 48) + v4;
    *(_DWORD *)(a1 + 48) = v7;
    uint64_t v8 = *(int **)(a1 + 56);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 72);
  if (v9)
  {
    uint64_t v10 = (const std::string **)(*(void *)(a2 + 80) + 8);
    uint64_t v11 = (std::string **)sub_188CCE4(a1 + 64, *(_DWORD *)(a2 + 72));
    sub_188FB98(a1 + 64, v11, v10, v9, **(_DWORD **)(a1 + 80) - *(_DWORD *)(a1 + 72));
    int v12 = *(_DWORD *)(a1 + 72) + v9;
    *(_DWORD *)(a1 + 72) = v12;
    uint64_t v13 = *(int **)(a1 + 80);
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v14 = *(void *)(a2 + 8);
  if (v14)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v14 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_172E1B8(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 56);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_154B658((uint64_t *)(a1 + 48), v6, v5, v4, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v7 = *(_DWORD *)(a1 + 56) + v4;
    *(_DWORD *)(a1 + 56) = v7;
    uint64_t v8 = *(int **)(a1 + 64);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 80);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 88) + 8);
    uint64_t v11 = (std::string **)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_12C1E38((std::string *)(a1 + 72), v11, v10, v9, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v12 = *(_DWORD *)(a1 + 80) + v9;
    *(_DWORD *)(a1 + 80) = v12;
    uint64_t v13 = *(int **)(a1 + 88);
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 104);
  if (v14)
  {
    uint64_t v15 = (uint64_t *)(*(void *)(a2 + 112) + 8);
    uint64_t v16 = (std::string **)sub_188CCE4(a1 + 96, *(_DWORD *)(a2 + 104));
    sub_12C1E38((std::string *)(a1 + 96), v16, v15, v14, **(_DWORD **)(a1 + 112) - *(_DWORD *)(a1 + 104));
    int v17 = *(_DWORD *)(a1 + 104) + v14;
    *(_DWORD *)(a1 + 104) = v17;
    uint64_t v18 = *(int **)(a1 + 112);
    if (*v18 < v17) {
      *uint64_t v18 = v17;
    }
  }
  int v19 = *(_DWORD *)(a2 + 128);
  if (v19)
  {
    uint64_t v20 = (uint64_t *)(*(void *)(a2 + 136) + 8);
    uint64_t v21 = (std::string **)sub_188CCE4(a1 + 120, *(_DWORD *)(a2 + 128));
    sub_1872494((std::string *)(a1 + 120), v21, v20, v19, **(_DWORD **)(a1 + 136) - *(_DWORD *)(a1 + 128));
    int v22 = *(_DWORD *)(a1 + 128) + v19;
    *(_DWORD *)(a1 + 128) = v22;
    uint64_t v23 = *(int **)(a1 + 136);
    if (*v23 < v22) {
      int *v23 = v22;
    }
  }
  int v24 = *(_DWORD *)(a2 + 152);
  if (v24)
  {
    uint64_t v25 = (uint64_t *)(*(void *)(a2 + 160) + 8);
    uint64_t v26 = (std::string **)sub_188CCE4(a1 + 144, *(_DWORD *)(a2 + 152));
    sub_12C1E38((std::string *)(a1 + 144), v26, v25, v24, **(_DWORD **)(a1 + 160) - *(_DWORD *)(a1 + 152));
    int v27 = *(_DWORD *)(a1 + 152) + v24;
    *(_DWORD *)(a1 + 152) = v27;
    uint64_t v28 = *(int **)(a1 + 160);
    if (*v28 < v27) {
      *uint64_t v28 = v27;
    }
  }
  int v29 = *(_DWORD *)(a2 + 40);
  if ((v29 & 0x1F) != 0)
  {
    if (v29)
    {
      uint64_t v31 = (long long *)(*(void *)(a2 + 168) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 40) |= 1u;
      uint64_t v32 = *(void *)(a1 + 8);
      uint64_t v33 = (uint64_t *)(v32 & 0xFFFFFFFFFFFFFFFCLL);
      if (v32) {
        uint64_t v33 = (uint64_t *)*v33;
      }
      sub_1881DF4((std::string **)(a1 + 168), v31, v33);
      if ((v29 & 2) == 0)
      {
LABEL_19:
        if ((v29 & 4) == 0) {
          goto LABEL_20;
        }
        goto LABEL_39;
      }
    }
    else if ((v29 & 2) == 0)
    {
      goto LABEL_19;
    }
    *(_DWORD *)(a1 + 40) |= 2u;
    uint64_t v34 = *(void *)(a1 + 176);
    if (!v34)
    {
      uint64_t v35 = *(void *)(a1 + 8);
      uint64_t v36 = (void *)(v35 & 0xFFFFFFFFFFFFFFFCLL);
      if (v35) {
        uint64_t v36 = (void *)*v36;
      }
      uint64_t v34 = sub_185089C((uint64_t)v36);
      *(void *)(a1 + 176) = v34;
    }
    if (*(void *)(a2 + 176)) {
      int v37 = *(uint64_t (****)())(a2 + 176);
    }
    else {
      int v37 = &off_254D2B0;
    }
    sub_16CE3CC(v34, (uint64_t)v37);
    if ((v29 & 4) == 0)
    {
LABEL_20:
      if ((v29 & 8) == 0) {
        goto LABEL_21;
      }
      goto LABEL_47;
    }
LABEL_39:
    *(_DWORD *)(a1 + 40) |= 4u;
    uint64_t v38 = *(void **)(a1 + 184);
    if (!v38)
    {
      uint64_t v39 = *(void *)(a1 + 8);
      uint64_t v40 = (void *)(v39 & 0xFFFFFFFFFFFFFFFCLL);
      if (v39) {
        uint64_t v40 = (void *)*v40;
      }
      uint64_t v38 = sub_178A5CC((uint64_t)v40);
      *(void *)(a1 + 184) = v38;
    }
    if (*(void *)(a2 + 184)) {
      uint64_t v41 = *(uint64_t (****)())(a2 + 184);
    }
    else {
      uint64_t v41 = &off_2546978;
    }
    sub_171068C((uint64_t)v38, (uint64_t)v41);
    if ((v29 & 8) == 0)
    {
LABEL_21:
      if ((v29 & 0x10) == 0)
      {
LABEL_23:
        *(_DWORD *)(a1 + 40) |= v29;
        goto LABEL_24;
      }
LABEL_22:
      *(unsigned char *)(a1 + 193) = *(unsigned char *)(a2 + 193);
      goto LABEL_23;
    }
LABEL_47:
    *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
    if ((v29 & 0x10) == 0) {
      goto LABEL_23;
    }
    goto LABEL_22;
  }
LABEL_24:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v30 = *(void *)(a2 + 8);
  if (v30)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v30 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_172E534(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 48);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 56) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 40, *(_DWORD *)(a2 + 48));
    sub_12C4B74((uint64_t *)(a1 + 40), v6, v5, v4, **(_DWORD **)(a1 + 56) - *(_DWORD *)(a1 + 48));
    int v7 = *(_DWORD *)(a1 + 48) + v4;
    *(_DWORD *)(a1 + 48) = v7;
    uint64_t v8 = *(int **)(a1 + 56);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

std::string *sub_172E610(std::string *result, uint64_t a2)
{
  unsigned int v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0xF) != 0)
  {
    if (v4)
    {
      uint64_t v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      int v7 = (std::string **)&result[1];
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v9 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v9 = (uint64_t *)*v9;
      }
      uint64_t result = sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_18;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    uint64_t v10 = (long long *)(*(void *)(a2 + 32) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    std::string::size_type v11 = v3->__r_.__value_.__l.__size_;
    int v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
    if (v11) {
      int v12 = (uint64_t *)*v12;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[1].__r_.__value_.__l.__size_, v10, v12);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0)
      {
LABEL_7:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
        goto LABEL_8;
      }
LABEL_6:
      v3[2].__r_.__value_.__s.__data_[0] = *(unsigned char *)(a2 + 48);
      goto LABEL_7;
    }
LABEL_18:
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
    uint64_t v13 = (std::string *)v3[1].__r_.__value_.__r.__words[2];
    if (!v13)
    {
      std::string::size_type v14 = v3->__r_.__value_.__l.__size_;
      uint64_t v15 = (void *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
      if (v14) {
        uint64_t v15 = (void *)*v15;
      }
      uint64_t v13 = (std::string *)sub_15C1974((uint64_t)v15);
      v3[1].__r_.__value_.__r.__words[2] = (std::string::size_type)v13;
    }
    if (*(void *)(a2 + 40)) {
      uint64_t v16 = *(uint64_t (****)())(a2 + 40);
    }
    else {
      uint64_t v16 = &off_253F1E8;
    }
    uint64_t result = sub_117EF04(v13, (uint64_t)v16);
    if ((v4 & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_8:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

void sub_172E758(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 32) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 16, *(_DWORD *)(a2 + 24));
    sub_154F638((uint64_t *)(a1 + 16), v6, v5, v4, **(_DWORD **)(a1 + 32) - *(_DWORD *)(a1 + 24));
    int v7 = *(_DWORD *)(a1 + 24) + v4;
    *(_DWORD *)(a1 + 24) = v7;
    uint64_t v8 = *(int **)(a1 + 32);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_172E828(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 56);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_1871CEC((uint64_t *)(a1 + 48), v6, v5, v4, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v7 = *(_DWORD *)(a1 + 56) + v4;
    *(_DWORD *)(a1 + 56) = v7;
    uint64_t v8 = *(int **)(a1 + 64);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 40);
  if ((v9 & 3) != 0)
  {
    if (v9)
    {
      *(_DWORD *)(a1 + 40) |= 1u;
      uint64_t v10 = *(void *)(a1 + 72);
      if (!v10)
      {
        uint64_t v11 = *(void *)(a1 + 8);
        int v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
        if (v11) {
          int v12 = (void *)*v12;
        }
        uint64_t v10 = sub_17894DC((uint64_t)v12);
        *(void *)(a1 + 72) = v10;
      }
      if (*(void *)(a2 + 72)) {
        uint64_t v13 = *(uint64_t (****)())(a2 + 72);
      }
      else {
        uint64_t v13 = &off_2546190;
      }
      sub_16FCCEC(v10, (uint64_t)v13);
    }
    if ((v9 & 2) != 0) {
      *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
    }
    *(_DWORD *)(a1 + 40) |= v9;
  }
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v14 = *(void *)(a2 + 8);
  if (v14)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v14 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_172E974(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 40);
  if ((v4 & 3) != 0)
  {
    if (v4)
    {
      *(_DWORD *)(a1 + 40) |= 1u;
      uint64_t v5 = *(void *)(a1 + 48);
      if (!v5)
      {
        uint64_t v6 = *(void *)(a1 + 8);
        int v7 = (void *)(v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (v6) {
          int v7 = (void *)*v7;
        }
        uint64_t v5 = sub_185089C((uint64_t)v7);
        *(void *)(a1 + 48) = v5;
      }
      if (*(void *)(a2 + 48)) {
        uint64_t v8 = *(uint64_t (****)())(a2 + 48);
      }
      else {
        uint64_t v8 = &off_254D2B0;
      }
      sub_16CE3CC(v5, (uint64_t)v8);
    }
    if ((v4 & 2) != 0)
    {
      *(_DWORD *)(a1 + 40) |= 2u;
      uint64_t v9 = *(void *)(a1 + 56);
      if (!v9)
      {
        uint64_t v10 = *(void *)(a1 + 8);
        uint64_t v11 = (void *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
        if (v10) {
          uint64_t v11 = (void *)*v11;
        }
        sub_13D6A1C((uint64_t)v11);
        *(void *)(a1 + 56) = v9;
      }
      if (*(void *)(a2 + 56)) {
        int v12 = *(uint64_t (****)())(a2 + 56);
      }
      else {
        int v12 = &off_2534750;
      }
      sub_136A7DC(v9, (uint64_t)v12);
    }
  }
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v13 = *(void *)(a2 + 8);
  if (v13)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v13 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_172EA84(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 3) != 0)
  {
    if (v4)
    {
      uint64_t v5 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v6 = (std::string **)(a1 + 24);
      uint64_t v7 = *(void *)(a1 + 8);
      uint64_t v8 = (uint64_t *)(v7 & 0xFFFFFFFFFFFFFFFCLL);
      if (v7) {
        uint64_t v8 = (uint64_t *)*v8;
      }
      sub_1881DF4(v6, v5, v8);
    }
    if ((v4 & 2) != 0)
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      uint64_t v9 = *(void *)(a1 + 32);
      if (!v9)
      {
        uint64_t v10 = *(void *)(a1 + 8);
        uint64_t v11 = (void *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
        if (v10) {
          uint64_t v11 = (void *)*v11;
        }
        sub_1789B90((uint64_t)v11);
        *(void *)(a1 + 32) = v9;
      }
      if (*(void *)(a2 + 32)) {
        int v12 = *(uint64_t (****)())(a2 + 32);
      }
      else {
        int v12 = &off_25464B0;
      }
      sub_1704A90(v9, (uint64_t)v12);
    }
  }
  uint64_t v13 = *(void *)(a2 + 8);
  if (v13)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v13 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_172EB70(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 56);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_1872740((uint64_t *)(a1 + 48), v6, v5, v4, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v7 = *(_DWORD *)(a1 + 56) + v4;
    *(_DWORD *)(a1 + 56) = v7;
    uint64_t v8 = *(int **)(a1 + 64);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 40);
  if ((v9 & 3) != 0)
  {
    if (v9)
    {
      *(_DWORD *)(a1 + 40) |= 1u;
      uint64_t v10 = *(std::string **)(a1 + 72);
      if (!v10)
      {
        uint64_t v11 = *(void *)(a1 + 8);
        int v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
        if (v11) {
          int v12 = (void *)*v12;
        }
        uint64_t v10 = (std::string *)sub_178C4DC((uint64_t)v12);
        *(void *)(a1 + 72) = v10;
      }
      if (*(void *)(a2 + 72)) {
        uint64_t v13 = *(uint64_t (****)())(a2 + 72);
      }
      else {
        uint64_t v13 = &off_2548270;
      }
      sub_117EF04(v10, (uint64_t)v13);
    }
    if ((v9 & 2) != 0) {
      *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
    }
    *(_DWORD *)(a1 + 40) |= v9;
  }
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v14 = *(void *)(a2 + 8);
  if (v14)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v14 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_172ECBC(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 32) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 16, *(_DWORD *)(a2 + 24));
    sub_1872E3C((uint64_t *)(a1 + 16), v6, v5, v4, **(_DWORD **)(a1 + 32) - *(_DWORD *)(a1 + 24));
    int v7 = *(_DWORD *)(a1 + 24) + v4;
    *(_DWORD *)(a1 + 24) = v7;
    uint64_t v8 = *(int **)(a1 + 32);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_172ED8C(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 56);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_12C1E38((std::string *)(a1 + 48), v6, v5, v4, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v7 = *(_DWORD *)(a1 + 56) + v4;
    *(_DWORD *)(a1 + 56) = v7;
    uint64_t v8 = *(int **)(a1 + 64);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 80);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 88) + 8);
    uint64_t v11 = (uint64_t *)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_1872B90((uint64_t *)(a1 + 72), v11, v10, v9, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v12 = *(_DWORD *)(a1 + 80) + v9;
    *(_DWORD *)(a1 + 80) = v12;
    uint64_t v13 = *(int **)(a1 + 88);
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 40);
  if ((v14 & 0xF) == 0) {
    goto LABEL_25;
  }
  if ((v14 & 1) == 0)
  {
    if ((v14 & 2) == 0) {
      goto LABEL_10;
    }
LABEL_16:
    uint64_t v18 = (long long *)(*(void *)(a2 + 104) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 40) |= 2u;
    uint64_t v19 = *(void *)(a1 + 8);
    uint64_t v20 = (uint64_t *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
    if (v19) {
      uint64_t v20 = (uint64_t *)*v20;
    }
    sub_1881DF4((std::string **)(a1 + 104), v18, v20);
    if ((v14 & 4) == 0)
    {
LABEL_11:
      if ((v14 & 8) == 0) {
        goto LABEL_25;
      }
      goto LABEL_22;
    }
    goto LABEL_19;
  }
  uint64_t v15 = (long long *)(*(void *)(a2 + 96) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 40) |= 1u;
  uint64_t v16 = *(void *)(a1 + 8);
  int v17 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
  if (v16) {
    int v17 = (uint64_t *)*v17;
  }
  sub_1881DF4((std::string **)(a1 + 96), v15, v17);
  if ((v14 & 2) != 0) {
    goto LABEL_16;
  }
LABEL_10:
  if ((v14 & 4) == 0) {
    goto LABEL_11;
  }
LABEL_19:
  uint64_t v21 = (long long *)(*(void *)(a2 + 112) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 40) |= 4u;
  uint64_t v22 = *(void *)(a1 + 8);
  uint64_t v23 = (uint64_t *)(v22 & 0xFFFFFFFFFFFFFFFCLL);
  if (v22) {
    uint64_t v23 = (uint64_t *)*v23;
  }
  sub_1881DF4((std::string **)(a1 + 112), v21, v23);
  if ((v14 & 8) != 0)
  {
LABEL_22:
    int v24 = (long long *)(*(void *)(a2 + 120) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 40) |= 8u;
    uint64_t v25 = *(void *)(a1 + 8);
    uint64_t v26 = (uint64_t *)(v25 & 0xFFFFFFFFFFFFFFFCLL);
    if (v25) {
      uint64_t v26 = (uint64_t *)*v26;
    }
    sub_1881DF4((std::string **)(a1 + 120), v24, v26);
  }
LABEL_25:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v27 = *(void *)(a2 + 8);
  if (v27)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v27 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_172EFB8(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_1872EC8((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    uint64_t v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  if (*(unsigned char *)(a2 + 16))
  {
    int v9 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v10 = *(void *)(a1 + 8);
    uint64_t v11 = (uint64_t *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
    if (v10) {
      uint64_t v11 = (uint64_t *)*v11;
    }
    sub_1881DF4((std::string **)(a1 + 48), v9, v11);
  }
  uint64_t v12 = *(void *)(a2 + 8);
  if (v12)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v12 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_172F0C0(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 56);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_1872858((uint64_t *)(a1 + 48), v6, v5, v4, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v7 = *(_DWORD *)(a1 + 56) + v4;
    *(_DWORD *)(a1 + 56) = v7;
    uint64_t v8 = *(int **)(a1 + 64);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 40);
  if ((v9 & 3) != 0)
  {
    if (v9)
    {
      *(_DWORD *)(a1 + 40) |= 1u;
      uint64_t v10 = *(std::string **)(a1 + 72);
      if (!v10)
      {
        uint64_t v11 = *(void *)(a1 + 8);
        uint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
        if (v11) {
          uint64_t v12 = (void *)*v12;
        }
        uint64_t v10 = (std::string *)sub_178CF88((uint64_t)v12);
        *(void *)(a1 + 72) = v10;
      }
      if (*(void *)(a2 + 72)) {
        uint64_t v13 = *(uint64_t (****)())(a2 + 72);
      }
      else {
        uint64_t v13 = &off_25487C0;
      }
      sub_117EF50(v10, (uint64_t)v13);
    }
    if ((v9 & 2) != 0) {
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
    }
    *(_DWORD *)(a1 + 40) |= v9;
  }
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v14 = *(void *)(a2 + 8);
  if (v14)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v14 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_172F20C(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 56);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_1872628((uint64_t *)(a1 + 48), v6, v5, v4, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v7 = *(_DWORD *)(a1 + 56) + v4;
    *(_DWORD *)(a1 + 56) = v7;
    uint64_t v8 = *(int **)(a1 + 64);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 80);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 88) + 8);
    uint64_t v11 = (uint64_t *)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_12C4B74((uint64_t *)(a1 + 72), v11, v10, v9, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v12 = *(_DWORD *)(a1 + 80) + v9;
    *(_DWORD *)(a1 + 80) = v12;
    uint64_t v13 = *(int **)(a1 + 88);
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 40);
  if ((v14 & 3) != 0)
  {
    if (v14) {
      *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
    }
    if ((v14 & 2) != 0) {
      *(_DWORD *)(a1 + 100) = *(_DWORD *)(a2 + 100);
    }
    *(_DWORD *)(a1 + 40) |= v14;
  }
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v15 = *(void *)(a2 + 8);
  if (v15)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v15 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_172F37C(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 40);
  if ((v4 & 0x1F) != 0)
  {
    if (v4)
    {
      *(_DWORD *)(a1 + 40) |= 1u;
      uint64_t v6 = *(std::string **)(a1 + 48);
      if (!v6)
      {
        uint64_t v7 = *(void *)(a1 + 8);
        uint64_t v8 = (void *)(v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (v7) {
          uint64_t v8 = (void *)*v8;
        }
        uint64_t v6 = (std::string *)sub_15C1B30((uint64_t)v8);
        *(void *)(a1 + 48) = v6;
      }
      if (*(void *)(a2 + 48)) {
        int v9 = *(uint64_t (****)())(a2 + 48);
      }
      else {
        int v9 = &off_253F2A0;
      }
      sub_11EC100(v6, (uint64_t)v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_29;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    *(_DWORD *)(a1 + 40) |= 2u;
    uint64_t v10 = *(std::string **)(a1 + 56);
    if (!v10)
    {
      uint64_t v11 = *(void *)(a1 + 8);
      int v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        int v12 = (void *)*v12;
      }
      uint64_t v10 = (std::string *)sub_15C1B30((uint64_t)v12);
      *(void *)(a1 + 56) = v10;
    }
    if (*(void *)(a2 + 56)) {
      uint64_t v13 = *(uint64_t (****)())(a2 + 56);
    }
    else {
      uint64_t v13 = &off_253F2A0;
    }
    sub_11EC100(v10, (uint64_t)v13);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_37;
    }
LABEL_29:
    *(_DWORD *)(a1 + 40) |= 4u;
    int v14 = *(std::string **)(a1 + 64);
    if (!v14)
    {
      uint64_t v15 = *(void *)(a1 + 8);
      uint64_t v16 = (void *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
      if (v15) {
        uint64_t v16 = (void *)*v16;
      }
      int v14 = (std::string *)sub_15C1B30((uint64_t)v16);
      *(void *)(a1 + 64) = v14;
    }
    if (*(void *)(a2 + 64)) {
      int v17 = *(uint64_t (****)())(a2 + 64);
    }
    else {
      int v17 = &off_253F2A0;
    }
    sub_11EC100(v14, (uint64_t)v17);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0)
      {
LABEL_8:
        *(_DWORD *)(a1 + 40) |= v4;
        goto LABEL_9;
      }
LABEL_7:
      *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
      goto LABEL_8;
    }
LABEL_37:
    *(_DWORD *)(a1 + 40) |= 8u;
    uint64_t v18 = *(void **)(a1 + 72);
    if (!v18)
    {
      uint64_t v19 = *(void *)(a1 + 8);
      uint64_t v20 = (void *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
      if (v19) {
        uint64_t v20 = (void *)*v20;
      }
      uint64_t v18 = sub_1788710((uint64_t)v20);
      *(void *)(a1 + 72) = v18;
    }
    if (*(void *)(a2 + 72)) {
      uint64_t v21 = *(uint64_t (****)())(a2 + 72);
    }
    else {
      uint64_t v21 = &off_2545A18;
    }
    sub_16BF9C4((uint64_t)v18, (uint64_t)v21);
    if ((v4 & 0x10) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
LABEL_9:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_172F540(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a2 + 40))
  {
    int v4 = *(uint64_t (****)())(a2 + 48);
    *(_DWORD *)(a1 + 40) |= 1u;
    uint64_t v5 = *(void *)(a1 + 48);
    if (!v5)
    {
      uint64_t v6 = *(void *)(a1 + 8);
      uint64_t v7 = (void *)(v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (v6) {
        uint64_t v7 = (void *)*v7;
      }
      uint64_t v5 = sub_185089C((uint64_t)v7);
      *(void *)(a1 + 48) = v5;
      int v4 = *(uint64_t (****)())(a2 + 48);
    }
    if (v4) {
      uint64_t v8 = v4;
    }
    else {
      uint64_t v8 = &off_254D2B0;
    }
    sub_16CE3CC(v5, (uint64_t)v8);
  }
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_172F5F4(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 48);
  if (v4)
  {
    uint64_t v5 = (const std::string **)(*(void *)(a2 + 56) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4(a1 + 40, *(_DWORD *)(a2 + 48));
    sub_188FB98(a1 + 40, v6, v5, v4, **(_DWORD **)(a1 + 56) - *(_DWORD *)(a1 + 48));
    int v7 = *(_DWORD *)(a1 + 48) + v4;
    *(_DWORD *)(a1 + 48) = v7;
    uint64_t v8 = *(int **)(a1 + 56);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 72);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 80) + 8);
    uint64_t v11 = (std::string **)sub_188CCE4(a1 + 64, *(_DWORD *)(a2 + 72));
    sub_122B128((std::string *)(a1 + 64), v11, v10, v9, **(_DWORD **)(a1 + 80) - *(_DWORD *)(a1 + 72));
    int v12 = *(_DWORD *)(a1 + 72) + v9;
    *(_DWORD *)(a1 + 72) = v12;
    uint64_t v13 = *(int **)(a1 + 80);
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 96);
  if (v14)
  {
    uint64_t v15 = (uint64_t *)(*(void *)(a2 + 104) + 8);
    uint64_t v16 = (std::string **)sub_188CCE4(a1 + 88, *(_DWORD *)(a2 + 96));
    sub_122B128((std::string *)(a1 + 88), v16, v15, v14, **(_DWORD **)(a1 + 104) - *(_DWORD *)(a1 + 96));
    int v17 = *(_DWORD *)(a1 + 96) + v14;
    *(_DWORD *)(a1 + 96) = v17;
    uint64_t v18 = *(int **)(a1 + 104);
    if (*v18 < v17) {
      *uint64_t v18 = v17;
    }
  }
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v19 = *(void *)(a2 + 8);
  if (v19)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v19 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_172F798(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 56);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_12C4B74((uint64_t *)(a1 + 48), v6, v5, v4, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v7 = *(_DWORD *)(a1 + 56) + v4;
    *(_DWORD *)(a1 + 56) = v7;
    uint64_t v8 = *(int **)(a1 + 64);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  if (*(unsigned char *)(a2 + 40))
  {
    int v9 = *(uint64_t (****)())(a2 + 72);
    *(_DWORD *)(a1 + 40) |= 1u;
    uint64_t v10 = *(void *)(a1 + 72);
    if (!v10)
    {
      uint64_t v11 = *(void *)(a1 + 8);
      int v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        int v12 = (void *)*v12;
      }
      uint64_t v10 = sub_185089C((uint64_t)v12);
      *(void *)(a1 + 72) = v10;
      int v9 = *(uint64_t (****)())(a2 + 72);
    }
    if (v9) {
      uint64_t v13 = v9;
    }
    else {
      uint64_t v13 = &off_254D2B0;
    }
    sub_16CE3CC(v10, (uint64_t)v13);
  }
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v14 = *(void *)(a2 + 8);
  if (v14)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v14 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_172F8C8(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 56);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_12C4B74((uint64_t *)(a1 + 48), v6, v5, v4, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v7 = *(_DWORD *)(a1 + 56) + v4;
    *(_DWORD *)(a1 + 56) = v7;
    uint64_t v8 = *(int **)(a1 + 64);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 80);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 88) + 8);
    uint64_t v11 = (uint64_t *)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_12C4B74((uint64_t *)(a1 + 72), v11, v10, v9, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v12 = *(_DWORD *)(a1 + 80) + v9;
    *(_DWORD *)(a1 + 80) = v12;
    uint64_t v13 = *(int **)(a1 + 88);
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 104);
  if (v14)
  {
    uint64_t v15 = (uint64_t *)(*(void *)(a2 + 112) + 8);
    uint64_t v16 = (uint64_t *)sub_188CCE4(a1 + 96, *(_DWORD *)(a2 + 104));
    sub_12C4B74((uint64_t *)(a1 + 96), v16, v15, v14, **(_DWORD **)(a1 + 112) - *(_DWORD *)(a1 + 104));
    int v17 = *(_DWORD *)(a1 + 104) + v14;
    *(_DWORD *)(a1 + 104) = v17;
    uint64_t v18 = *(int **)(a1 + 112);
    if (*v18 < v17) {
      *uint64_t v18 = v17;
    }
  }
  if (*(unsigned char *)(a2 + 40))
  {
    uint64_t v19 = *(void *)(a2 + 120);
    *(_DWORD *)(a1 + 40) |= 1u;
    *(void *)(a1 + 120) = v19;
  }
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v20 = *(void *)(a2 + 8);
  if (v20)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v20 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_172FA88(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 40);
  if ((v4 & 0x1F) != 0)
  {
    if (v4)
    {
      *(_DWORD *)(a1 + 40) |= 1u;
      uint64_t v6 = *(void *)(a1 + 48);
      if (!v6)
      {
        uint64_t v7 = *(void *)(a1 + 8);
        uint64_t v8 = (void *)(v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (v7) {
          uint64_t v8 = (void *)*v8;
        }
        sub_13D6A1C((uint64_t)v8);
        *(void *)(a1 + 48) = v6;
      }
      if (*(void *)(a2 + 48)) {
        int v9 = *(uint64_t (****)())(a2 + 48);
      }
      else {
        int v9 = &off_2534750;
      }
      sub_136A7DC(v6, (uint64_t)v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_22;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_23;
    }
LABEL_22:
    *(_DWORD *)(a1 + 60) = *(_DWORD *)(a2 + 60);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0)
      {
LABEL_8:
        *(_DWORD *)(a1 + 40) |= v4;
        goto LABEL_9;
      }
LABEL_7:
      *(_DWORD *)(a1 + 68) = *(_DWORD *)(a2 + 68);
      goto LABEL_8;
    }
LABEL_23:
    *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
    if ((v4 & 0x10) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
LABEL_9:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_172FB9C(uint64_t a1, uint64_t a2)
{
  if (a2 != a1)
  {
    sub_171FD8C(a1);
    sub_172A6DC(a1, a2);
  }
}

uint64_t sub_172FBE8(uint64_t a1)
{
  uint64_t result = sub_18856CC(a1 + 16);
  if (result)
  {
    int v3 = *(_DWORD *)(a1 + 40);
    if (v3)
    {
      uint64_t result = sub_16BD4F8(*(void *)(a1 + 64));
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 2) != 0)
    {
      uint64_t result = sub_16C3998(*(void *)(a1 + 72));
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 4) != 0)
    {
      uint64_t v4 = *(void *)(a1 + 80);
      uint64_t v5 = *(unsigned int *)(v4 + 24);
      while ((int)v5 >= 1)
      {
        uint64_t v6 = v5 - 1;
        char v7 = sub_15BC024(*(void *)(*(void *)(v4 + 32) + 8 * v5));
        uint64_t v5 = v6;
        if ((v7 & 1) == 0) {
          return 0;
        }
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 8) != 0)
    {
      uint64_t result = sub_16C5790(*(void *)(a1 + 88));
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 0x10) != 0)
    {
      uint64_t result = sub_16C78C4(*(void *)(a1 + 96));
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 0x20) != 0)
    {
      uint64_t result = sub_18856CC(*(void *)(a1 + 104) + 16);
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 0x40) != 0)
    {
      uint64_t result = sub_16E59C8(*(void *)(a1 + 112));
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 0x80) != 0)
    {
      uint64_t result = sub_18856CC(*(void *)(a1 + 120) + 16);
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 0x100) != 0)
    {
      uint64_t result = sub_16EA300(*(void *)(a1 + 128));
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 0x200) != 0)
    {
      uint64_t result = sub_16D8E48(*(void *)(a1 + 136));
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 0x400) != 0)
    {
      uint64_t result = sub_16D0AF8(*(void *)(a1 + 144));
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 0x800) != 0)
    {
      uint64_t result = sub_16EE2B8(*(void *)(a1 + 152));
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 0x1000) != 0)
    {
      uint64_t result = sub_18856CC(*(void *)(a1 + 160) + 16);
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 0x2000) != 0)
    {
      uint64_t result = sub_18856CC(*(void *)(a1 + 168) + 16);
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 0x4000) != 0)
    {
      uint64_t result = sub_16F21B4(*(void *)(a1 + 176));
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 0x8000) != 0)
    {
      uint64_t result = sub_136AEA0(*(void *)(a1 + 184));
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 0x10000) != 0)
    {
      uint64_t v8 = *(void *)(a1 + 192);
      uint64_t v9 = *(unsigned int *)(v8 + 24);
      while ((int)v9 >= 1)
      {
        uint64_t v10 = v9 - 1;
        char v11 = sub_132C244(*(void *)(*(void *)(v8 + 32) + 8 * v9));
        uint64_t result = 0;
        uint64_t v9 = v10;
        if ((v11 & 1) == 0) {
          return result;
        }
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 0x20000) != 0)
    {
      uint64_t result = sub_11A0A80(*(void *)(a1 + 200) + 24);
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 0x40000) != 0)
    {
      uint64_t result = sub_18856CC(*(void *)(a1 + 208) + 16);
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 0x80000) != 0)
    {
      uint64_t result = sub_16FA6E0(*(void *)(a1 + 216));
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 0x100000) != 0)
    {
      uint64_t result = sub_18856CC(*(void *)(a1 + 224) + 16);
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 0x200000) != 0)
    {
      uint64_t result = sub_18856CC(*(void *)(a1 + 232) + 16);
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 0x400000) != 0)
    {
      uint64_t result = sub_16FD18C(*(void *)(a1 + 240));
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 0x800000) != 0)
    {
      uint64_t result = sub_16D6854(*(void *)(a1 + 248));
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 0x1000000) != 0)
    {
      uint64_t result = sub_1701770(*(void *)(a1 + 256));
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 0x4000000) != 0)
    {
      uint64_t result = sub_1709970(*(void *)(a1 + 272));
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 0x8000000) != 0)
    {
      uint64_t result = sub_18856CC(*(void *)(a1 + 280) + 16);
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 0x10000000) != 0)
    {
      uint64_t result = sub_18856CC(*(void *)(a1 + 288) + 16);
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 0x40000000) != 0)
    {
      uint64_t result = sub_16CB954(*(void *)(a1 + 304));
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 0x80000000) == 0 || (uint64_t result = sub_16E7660(*(void *)(a1 + 312)), result))
    {
      int v12 = *(_DWORD *)(a1 + 44);
      if ((v12 & 4) != 0)
      {
        uint64_t result = sub_170F568(*(void *)(a1 + 336));
        if (!result) {
          return result;
        }
        int v12 = *(_DWORD *)(a1 + 44);
      }
      if ((v12 & 8) != 0)
      {
        uint64_t result = sub_171130C(*(void *)(a1 + 344));
        if (!result) {
          return result;
        }
        int v12 = *(_DWORD *)(a1 + 44);
      }
      if ((v12 & 0x10) != 0)
      {
        uint64_t result = sub_18856CC(*(void *)(a1 + 352) + 16);
        if (!result) {
          return result;
        }
        int v12 = *(_DWORD *)(a1 + 44);
      }
      if ((v12 & 0x20) != 0)
      {
        uint64_t result = sub_171220C(*(void *)(a1 + 360));
        if (!result) {
          return result;
        }
        int v12 = *(_DWORD *)(a1 + 44);
      }
      if ((v12 & 0x100) != 0)
      {
        uint64_t v13 = *(void *)(a1 + 384);
        if ((*(unsigned char *)(v13 + 16) & 2) != 0)
        {
          uint64_t result = sub_15B0F18(*(void *)(v13 + 32));
          if (!result) {
            return result;
          }
          int v12 = *(_DWORD *)(a1 + 44);
        }
      }
      if ((v12 & 0x800) != 0)
      {
        uint64_t result = sub_173049C(*(void *)(a1 + 408));
        if (!result) {
          return result;
        }
        int v12 = *(_DWORD *)(a1 + 44);
      }
      if ((v12 & 0x2000) != 0)
      {
        uint64_t result = sub_170C0A4(*(void *)(a1 + 424));
        if (!result) {
          return result;
        }
        int v12 = *(_DWORD *)(a1 + 44);
      }
      if ((v12 & 0x8000) != 0)
      {
        uint64_t result = sub_16ECD84(*(void *)(a1 + 440));
        if (!result) {
          return result;
        }
        int v12 = *(_DWORD *)(a1 + 44);
      }
      if ((v12 & 0x10000) != 0)
      {
        uint64_t result = sub_18856CC(*(void *)(a1 + 448) + 16);
        if (!result) {
          return result;
        }
        int v12 = *(_DWORD *)(a1 + 44);
      }
      if ((v12 & 0x20000) != 0)
      {
        uint64_t result = sub_129F31C(*(void *)(a1 + 456));
        if (!result) {
          return result;
        }
        int v12 = *(_DWORD *)(a1 + 44);
      }
      if ((v12 & 0x40000) != 0)
      {
        uint64_t result = sub_18856CC(*(void *)(a1 + 464) + 16);
        if (!result) {
          return result;
        }
        int v12 = *(_DWORD *)(a1 + 44);
      }
      if ((v12 & 0x100000) != 0)
      {
        uint64_t result = sub_16C204C(*(void *)(a1 + 480));
        if (!result) {
          return result;
        }
        int v12 = *(_DWORD *)(a1 + 44);
      }
      if ((v12 & 0x200000) != 0)
      {
        uint64_t result = sub_1719CB4(*(void *)(a1 + 488));
        if (!result) {
          return result;
        }
        int v12 = *(_DWORD *)(a1 + 44);
      }
      if ((v12 & 0x400000) != 0)
      {
        uint64_t result = sub_173056C(*(void *)(a1 + 496));
        if (!result) {
          return result;
        }
        int v12 = *(_DWORD *)(a1 + 44);
      }
      if ((v12 & 0x800000) != 0)
      {
        uint64_t v14 = *(void *)(a1 + 504);
        uint64_t result = sub_18856CC(v14 + 16);
        if (!result) {
          return result;
        }
        uint64_t result = sub_177A404(v14 + 40);
        if (!result) {
          return result;
        }
        int v12 = *(_DWORD *)(a1 + 44);
      }
      if ((v12 & 0x1000000) != 0)
      {
        uint64_t result = sub_173060C(*(void *)(a1 + 512));
        if (!result) {
          return result;
        }
        int v12 = *(_DWORD *)(a1 + 44);
      }
      if ((v12 & 0x2000000) != 0)
      {
        uint64_t result = sub_132E428(*(void *)(a1 + 520));
        if (!result) {
          return result;
        }
        int v12 = *(_DWORD *)(a1 + 44);
      }
      if ((v12 & 0x4000000) != 0)
      {
        uint64_t result = sub_1730678(*(void *)(a1 + 528));
        if (!result) {
          return result;
        }
        int v12 = *(_DWORD *)(a1 + 44);
      }
      if ((v12 & 0x8000000) != 0)
      {
        uint64_t result = sub_17306FC(*(void *)(a1 + 536));
        if (!result) {
          return result;
        }
        int v12 = *(_DWORD *)(a1 + 44);
      }
      if ((v12 & 0x10000000) != 0)
      {
        uint64_t result = sub_1730770(*(void *)(a1 + 544));
        if (!result) {
          return result;
        }
        int v12 = *(_DWORD *)(a1 + 44);
      }
      if ((v12 & 0x20000000) != 0)
      {
        uint64_t result = sub_1730894(*(void *)(a1 + 552));
        if (!result) {
          return result;
        }
        int v12 = *(_DWORD *)(a1 + 44);
      }
      if ((v12 & 0x40000000) != 0)
      {
        uint64_t result = sub_16DC484(*(void *)(a1 + 560));
        if (!result) {
          return result;
        }
        int v12 = *(_DWORD *)(a1 + 44);
      }
      if ((v12 & 0x80000000) == 0 || (uint64_t result = sub_16DCD04(*(void *)(a1 + 568)), result))
      {
        int v15 = *(_DWORD *)(a1 + 48);
        if (v15)
        {
          uint64_t result = sub_18856CC(*(void *)(a1 + 576) + 16);
          if (!result) {
            return result;
          }
          int v15 = *(_DWORD *)(a1 + 48);
        }
        if ((v15 & 2) != 0)
        {
          uint64_t result = sub_129F31C(*(void *)(a1 + 584));
          if (!result) {
            return result;
          }
          int v15 = *(_DWORD *)(a1 + 48);
        }
        if ((v15 & 4) != 0)
        {
          uint64_t result = sub_17308FC(*(void *)(a1 + 592));
          if (!result) {
            return result;
          }
          int v15 = *(_DWORD *)(a1 + 48);
        }
        if ((v15 & 8) != 0)
        {
          uint64_t v16 = *(void *)(a1 + 600);
          uint64_t result = sub_18856CC(v16 + 16);
          if (!result) {
            return result;
          }
          uint64_t result = sub_1759FC4(v16 + 40);
          if (!result) {
            return result;
          }
          int v15 = *(_DWORD *)(a1 + 48);
        }
        if ((v15 & 0x10) != 0)
        {
          uint64_t result = sub_161FA88(*(void *)(a1 + 608));
          if (!result) {
            return result;
          }
          int v15 = *(_DWORD *)(a1 + 48);
        }
        if ((v15 & 0x20) != 0)
        {
          uint64_t result = sub_17309CC(*(void *)(a1 + 616));
          if (!result) {
            return result;
          }
          int v15 = *(_DWORD *)(a1 + 48);
        }
        if ((v15 & 0x40) != 0)
        {
          uint64_t result = sub_1730A54(*(void *)(a1 + 624));
          if (!result) {
            return result;
          }
          int v15 = *(_DWORD *)(a1 + 48);
        }
        if ((v15 & 0x80) != 0)
        {
          uint64_t v17 = *(void *)(a1 + 632);
          if ((*(unsigned char *)(v17 + 16) & 4) != 0)
          {
            uint64_t result = sub_15B1450(*(void *)(v17 + 40));
            if (!result) {
              return result;
            }
            int v15 = *(_DWORD *)(a1 + 48);
          }
        }
        if ((v15 & 0x100) != 0)
        {
          uint64_t result = sub_16F21B4(*(void *)(a1 + 640));
          if (!result) {
            return result;
          }
          int v15 = *(_DWORD *)(a1 + 48);
        }
        if ((v15 & 0x200) != 0)
        {
          uint64_t result = sub_16DE948(*(void *)(a1 + 648));
          if (!result) {
            return result;
          }
          int v15 = *(_DWORD *)(a1 + 48);
        }
        if ((v15 & 0x400) != 0)
        {
          uint64_t v18 = *(void *)(a1 + 656);
          uint64_t v19 = *(unsigned int *)(v18 + 24);
          while ((int)v19 >= 1)
          {
            uint64_t v20 = v19 - 1;
            char v21 = sub_18856CC(*(void *)(*(void *)(v18 + 32) + 8 * v19) + 16);
            uint64_t result = 0;
            uint64_t v19 = v20;
            if ((v21 & 1) == 0) {
              return result;
            }
          }
          int v15 = *(_DWORD *)(a1 + 48);
        }
        if ((v15 & 0x800) != 0)
        {
          uint64_t result = sub_1730B44(*(void *)(a1 + 664));
          if (!result) {
            return result;
          }
          int v15 = *(_DWORD *)(a1 + 48);
        }
        if ((v15 & 0x1000) != 0)
        {
          uint64_t result = sub_1730B94(*(void *)(a1 + 672));
          if (!result) {
            return result;
          }
          int v15 = *(_DWORD *)(a1 + 48);
        }
        if ((v15 & 0x2000) != 0)
        {
          uint64_t result = sub_16FDFCC(*(void *)(a1 + 680));
          if (!result) {
            return result;
          }
          int v15 = *(_DWORD *)(a1 + 48);
        }
        if ((v15 & 0x4000) != 0)
        {
          uint64_t v22 = *(void *)(a1 + 688);
          if ((*(unsigned char *)(v22 + 16) & 2) != 0)
          {
            uint64_t result = sub_1704CAC(*(void *)(v22 + 32));
            if (!result) {
              return result;
            }
            int v15 = *(_DWORD *)(a1 + 48);
          }
        }
        if ((v15 & 0x8000) != 0)
        {
          uint64_t result = sub_18856CC(*(void *)(a1 + 696) + 16);
          if (!result) {
            return result;
          }
          int v15 = *(_DWORD *)(a1 + 48);
        }
        if ((v15 & 0x10000) != 0)
        {
          uint64_t v23 = *(void *)(a1 + 704);
          uint64_t result = sub_18856CC(v23 + 16);
          if (!result) {
            return result;
          }
          uint64_t result = sub_168448C(v23 + 48);
          if (!result) {
            return result;
          }
          int v15 = *(_DWORD *)(a1 + 48);
          if ((v15 & 0x20000) == 0) {
            goto LABEL_228;
          }
        }
        else if ((v15 & 0x20000) == 0)
        {
          goto LABEL_228;
        }
        uint64_t result = sub_18856CC(*(void *)(a1 + 712) + 16);
        if (!result) {
          return result;
        }
        int v15 = *(_DWORD *)(a1 + 48);
LABEL_228:
        if ((v15 & 0x40000) != 0)
        {
          uint64_t result = sub_1730C18(*(void *)(a1 + 720));
          if (!result) {
            return result;
          }
          int v15 = *(_DWORD *)(a1 + 48);
        }
        if ((v15 & 0x80000) != 0)
        {
          uint64_t v24 = *(void *)(a1 + 728);
          uint64_t v25 = *(unsigned int *)(v24 + 24);
          while ((int)v25 >= 1)
          {
            uint64_t v26 = v25 - 1;
            char v27 = sub_18856CC(*(void *)(*(void *)(v24 + 32) + 8 * v25) + 16);
            uint64_t result = 0;
            uint64_t v25 = v26;
            if ((v27 & 1) == 0) {
              return result;
            }
          }
          int v15 = *(_DWORD *)(a1 + 48);
        }
        if ((v15 & 0x100000) != 0)
        {
          uint64_t result = sub_16E126C(*(void *)(a1 + 736));
          if (!result) {
            return result;
          }
          int v15 = *(_DWORD *)(a1 + 48);
        }
        if ((v15 & 0x200000) != 0)
        {
          uint64_t result = sub_1700A74(*(void *)(a1 + 744));
          if (!result) {
            return result;
          }
          int v15 = *(_DWORD *)(a1 + 48);
        }
        if ((v15 & 0x400000) != 0)
        {
          uint64_t result = sub_18856CC(*(void *)(a1 + 752) + 16);
          if (!result) {
            return result;
          }
          int v15 = *(_DWORD *)(a1 + 48);
        }
        if ((v15 & 0x800000) != 0)
        {
          uint64_t result = sub_1730CDC(*(void *)(a1 + 760));
          if (!result) {
            return result;
          }
          int v15 = *(_DWORD *)(a1 + 48);
        }
        if ((v15 & 0x1000000) != 0)
        {
          uint64_t v28 = *(void *)(a1 + 768);
          uint64_t v29 = *(unsigned int *)(v28 + 32);
          while ((int)v29 >= 1)
          {
            uint64_t v30 = v29 - 1;
            char v31 = sub_17855E4(*(void *)(*(void *)(v28 + 40) + 8 * v29));
            uint64_t result = 0;
            uint64_t v29 = v30;
            if ((v31 & 1) == 0) {
              return result;
            }
          }
          int v15 = *(_DWORD *)(a1 + 48);
        }
        if ((v15 & 0x2000000) != 0)
        {
          uint64_t result = sub_18856CC(*(void *)(a1 + 776) + 16);
          if (!result) {
            return result;
          }
          int v15 = *(_DWORD *)(a1 + 48);
        }
        if ((v15 & 0x4000000) != 0)
        {
          uint64_t result = sub_1730D9C(*(void *)(a1 + 784));
          if (!result) {
            return result;
          }
          int v15 = *(_DWORD *)(a1 + 48);
        }
        if ((v15 & 0x8000000) != 0)
        {
          uint64_t result = sub_1730E08(*(void *)(a1 + 792));
          if (!result) {
            return result;
          }
          int v15 = *(_DWORD *)(a1 + 48);
        }
        if ((v15 & 0x10000000) != 0)
        {
          uint64_t result = sub_1730E94(*(void *)(a1 + 800));
          if (!result) {
            return result;
          }
          int v15 = *(_DWORD *)(a1 + 48);
        }
        if ((v15 & 0x20000000) != 0)
        {
          uint64_t result = sub_1730EDC(*(void *)(a1 + 808));
          if (!result) {
            return result;
          }
          int v15 = *(_DWORD *)(a1 + 48);
        }
        if ((v15 & 0x40000000) != 0)
        {
          uint64_t result = sub_18856CC(*(void *)(a1 + 816) + 16);
          if (!result) {
            return result;
          }
          int v15 = *(_DWORD *)(a1 + 48);
        }
        if ((v15 & 0x80000000) == 0 || (uint64_t result = sub_16FFB1C(*(void *)(a1 + 824)), result))
        {
          int v32 = *(_DWORD *)(a1 + 52);
          if (v32)
          {
            uint64_t result = sub_1730F28(*(void *)(a1 + 832));
            if (!result) {
              return result;
            }
            int v32 = *(_DWORD *)(a1 + 52);
          }
          if ((v32 & 2) != 0)
          {
            uint64_t result = sub_1730F98(*(void *)(a1 + 840));
            if (!result) {
              return result;
            }
            int v32 = *(_DWORD *)(a1 + 52);
          }
          if ((v32 & 4) != 0)
          {
            uint64_t result = sub_173104C(*(void *)(a1 + 848));
            if (!result) {
              return result;
            }
            int v32 = *(_DWORD *)(a1 + 52);
          }
          if ((v32 & 8) == 0) {
            return 1;
          }
          uint64_t result = sub_18856CC(*(void *)(a1 + 856) + 16);
          if (result) {
            return 1;
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_173048C(uint64_t a1)
{
  return sub_18856CC(a1 + 16);
}

uint64_t sub_1730494(uint64_t a1)
{
  return sub_18856CC(a1 + 16);
}

uint64_t sub_173049C(uint64_t a1)
{
  uint64_t result = sub_18856CC(a1 + 16);
  if (result)
  {
    uint64_t v3 = *(unsigned int *)(a1 + 56);
    while ((int)v3 >= 1)
    {
      uint64_t v4 = v3 - 1;
      char v5 = sub_1363A30(*(void *)(*(void *)(a1 + 64) + 8 * v3));
      uint64_t v3 = v4;
      if ((v5 & 1) == 0) {
        return 0;
      }
    }
    uint64_t v6 = *(unsigned int *)(a1 + 80);
    while ((int)v6 >= 1)
    {
      uint64_t v7 = v6 - 1;
      char v8 = sub_1857A00(*(void *)(*(void *)(a1 + 88) + 8 * v6));
      uint64_t v6 = v7;
      if ((v8 & 1) == 0) {
        return 0;
      }
    }
    int v9 = *(_DWORD *)(a1 + 40);
    if (v9)
    {
      uint64_t result = sub_185683C(*(void *)(a1 + 96));
      if (!result) {
        return result;
      }
      int v9 = *(_DWORD *)(a1 + 40);
    }
    if ((v9 & 2) != 0)
    {
      uint64_t result = sub_18856CC(*(void *)(a1 + 104) + 16);
      if (!result) {
        return result;
      }
      int v9 = *(_DWORD *)(a1 + 40);
    }
    if ((v9 & 4) == 0) {
      return 1;
    }
    uint64_t result = sub_18856CC(*(void *)(a1 + 112) + 16);
    if (result) {
      return 1;
    }
  }
  return result;
}

uint64_t sub_1730564(uint64_t a1)
{
  return sub_18856CC(a1 + 16);
}

uint64_t sub_173056C(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 2) != 0)
  {
    uint64_t result = sub_18856CC(*(void *)(a1 + 32) + 16);
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 4) == 0) {
    return 1;
  }
  uint64_t result = sub_18856CC(*(void *)(a1 + 40) + 16);
  if (result) {
    return 1;
  }
  return result;
}

uint64_t sub_17305C0(uint64_t a1)
{
  uint64_t result = sub_18856CC(a1 + 16);
  if (result)
  {
    return sub_177A404(a1 + 40);
  }
  return result;
}

BOOL sub_173060C(uint64_t a1)
{
  if (!sub_18856CC(a1 + 16)) {
    return 0;
  }
  uint64_t v2 = *(unsigned int *)(a1 + 48);
  do
  {
    BOOL v3 = (int)v2 < 1;
    if ((int)v2 < 1) {
      break;
    }
    uint64_t v4 = v2 - 1;
    char v5 = sub_18856CC(*(void *)(*(void *)(a1 + 56) + 8 * v2) + 16);
    uint64_t v2 = v4;
  }
  while ((v5 & 1) != 0);
  return v3;
}

uint64_t sub_1730678(uint64_t a1)
{
  uint64_t result = sub_18856CC(a1 + 16);
  if (result)
  {
    uint64_t v3 = *(unsigned int *)(a1 + 56);
    while ((int)v3 >= 1)
    {
      uint64_t v4 = v3 - 1;
      char v5 = sub_17306FC(*(void *)(*(void *)(a1 + 64) + 8 * v3));
      uint64_t v3 = v4;
      if ((v5 & 1) == 0) {
        return 0;
      }
    }
    int v6 = *(_DWORD *)(a1 + 40);
    if (v6)
    {
      uint64_t result = sub_16BD4F8(*(void *)(a1 + 72));
      if (!result) {
        return result;
      }
      int v6 = *(_DWORD *)(a1 + 40);
    }
    if ((v6 & 2) == 0) {
      return 1;
    }
    uint64_t result = sub_16C3998(*(void *)(a1 + 80));
    if (result) {
      return 1;
    }
  }
  return result;
}

uint64_t sub_17306FC(uint64_t a1)
{
  uint64_t result = sub_18856CC(a1 + 16);
  if (result)
  {
    uint64_t v3 = *(unsigned int *)(a1 + 56);
    while ((int)v3 >= 1)
    {
      uint64_t v4 = v3 - 1;
      char v5 = sub_16EA300(*(void *)(*(void *)(a1 + 64) + 8 * v3));
      uint64_t v3 = v4;
      if ((v5 & 1) == 0) {
        return 0;
      }
    }
    if ((*(unsigned char *)(a1 + 40) & 4) == 0) {
      return 1;
    }
    uint64_t result = sub_18856CC(*(void *)(a1 + 88) + 16);
    if (result) {
      return 1;
    }
  }
  return result;
}

uint64_t sub_1730770(uint64_t a1)
{
  uint64_t result = sub_18856CC(a1 + 16);
  if (result)
  {
    uint64_t v3 = *(unsigned int *)(a1 + 104);
    while ((int)v3 >= 1)
    {
      uint64_t v4 = v3 - 1;
      char v5 = sub_16FD18C(*(void *)(*(void *)(a1 + 112) + 8 * v3));
      uint64_t v3 = v4;
      if ((v5 & 1) == 0) {
        return 0;
      }
    }
    uint64_t v6 = *(unsigned int *)(a1 + 128);
    while ((int)v6 >= 1)
    {
      uint64_t v7 = v6 - 1;
      char v8 = sub_17309CC(*(void *)(*(void *)(a1 + 136) + 8 * v6));
      uint64_t v6 = v7;
      if ((v8 & 1) == 0) {
        return 0;
      }
    }
    uint64_t v9 = *(unsigned int *)(a1 + 176);
    while ((int)v9 >= 1)
    {
      uint64_t v10 = v9 - 1;
      char v11 = sub_16CE508(*(void *)(*(void *)(a1 + 184) + 8 * v9));
      uint64_t v9 = v10;
      if ((v11 & 1) == 0) {
        return 0;
      }
    }
    uint64_t v12 = *(unsigned int *)(a1 + 416);
    while ((int)v12 >= 1)
    {
      uint64_t v13 = v12 - 1;
      char v14 = sub_16FD18C(*(void *)(*(void *)(a1 + 424) + 8 * v12));
      uint64_t v12 = v13;
      if ((v14 & 1) == 0) {
        return 0;
      }
    }
    int v15 = *(_DWORD *)(a1 + 40);
    if ((v15 & 4) != 0)
    {
      uint64_t result = sub_16CE508(*(void *)(a1 + 472));
      if (!result) {
        return result;
      }
      int v15 = *(_DWORD *)(a1 + 40);
    }
    if ((v15 & 8) != 0)
    {
      uint64_t result = sub_16CE508(*(void *)(a1 + 480));
      if (!result) {
        return result;
      }
      int v15 = *(_DWORD *)(a1 + 40);
    }
    if ((v15 & 0x10) != 0)
    {
      uint64_t result = sub_17308FC(*(void *)(a1 + 488));
      if (!result) {
        return result;
      }
      int v15 = *(_DWORD *)(a1 + 40);
    }
    if ((v15 & 0x20) == 0) {
      return 1;
    }
    uint64_t result = sub_16FD18C(*(void *)(a1 + 496));
    if (result) {
      return 1;
    }
  }
  return result;
}

BOOL sub_1730894(uint64_t a1)
{
  if (!sub_18856CC(a1 + 16)) {
    return 0;
  }
  uint64_t v2 = *(unsigned int *)(a1 + 56);
  do
  {
    BOOL v3 = (int)v2 < 1;
    if ((int)v2 < 1) {
      break;
    }
    uint64_t v4 = v2 - 1;
    char v5 = sub_16CE508(*(void *)(*(void *)(a1 + 64) + 8 * v2));
    uint64_t v2 = v4;
  }
  while ((v5 & 1) != 0);
  return v3;
}

uint64_t sub_17308FC(uint64_t a1)
{
  uint64_t result = sub_18856CC(a1 + 16);
  if (result)
  {
    uint64_t v3 = *(unsigned int *)(a1 + 56);
    while ((int)v3 >= 1)
    {
      uint64_t v4 = v3 - 1;
      char v5 = sub_16CE508(*(void *)(*(void *)(a1 + 64) + 8 * v3));
      uint64_t v3 = v4;
      if ((v5 & 1) == 0) {
        return 0;
      }
    }
    int v6 = *(_DWORD *)(a1 + 40);
    if (v6)
    {
      uint64_t result = sub_16CE508(*(void *)(a1 + 96));
      if (!result) {
        return result;
      }
      int v6 = *(_DWORD *)(a1 + 40);
    }
    if ((v6 & 2) == 0) {
      return 1;
    }
    uint64_t result = sub_16FD18C(*(void *)(a1 + 104));
    if (result) {
      return 1;
    }
  }
  return result;
}

uint64_t sub_1730980(uint64_t a1)
{
  uint64_t result = sub_18856CC(a1 + 16);
  if (result)
  {
    return sub_1759FC4(a1 + 40);
  }
  return result;
}

uint64_t sub_17309CC(uint64_t a1)
{
  uint64_t result = sub_18856CC(a1 + 16);
  if (result)
  {
    uint64_t v3 = *(unsigned int *)(a1 + 56);
    while ((int)v3 >= 1)
    {
      uint64_t v4 = v3 - 1;
      char v5 = sub_16FD18C(*(void *)(*(void *)(a1 + 64) + 8 * v3));
      uint64_t v3 = v4;
      if ((v5 & 1) == 0) {
        return 0;
      }
    }
    int v6 = *(_DWORD *)(a1 + 40);
    if ((v6 & 2) != 0)
    {
      uint64_t result = sub_16CE508(*(void *)(a1 + 176));
      if (!result) {
        return result;
      }
      int v6 = *(_DWORD *)(a1 + 40);
    }
    if ((v6 & 4) == 0) {
      return 1;
    }
    uint64_t result = sub_18856CC(*(void *)(a1 + 184) + 16);
    if (result) {
      return 1;
    }
  }
  return result;
}

BOOL sub_1730A54(uint64_t a1)
{
  if (!sub_18856CC(a1 + 16)) {
    return 0;
  }
  uint64_t v2 = *(unsigned int *)(a1 + 48);
  do
  {
    BOOL v3 = (int)v2 < 1;
    if ((int)v2 < 1) {
      break;
    }
    uint64_t v4 = v2 - 1;
    char v5 = sub_16CE508(*(void *)(*(void *)(a1 + 56) + 8 * v2));
    uint64_t v2 = v4;
  }
  while ((v5 & 1) != 0);
  return v3;
}

BOOL sub_1730ABC(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 4) == 0) {
    return 1;
  }
  BOOL result = sub_15B1450(*(void *)(a1 + 40));
  if (result) {
    return 1;
  }
  return result;
}

BOOL sub_1730AE8(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 24);
  do
  {
    int v3 = v2;
    if ((int)v2 < 1) {
      break;
    }
    uint64_t v4 = v2 - 1;
    char v5 = sub_18856CC(*(void *)(*(void *)(a1 + 32) + 8 * v2) + 16);
    uint64_t v2 = v4;
  }
  while ((v5 & 1) != 0);
  return v3 < 1;
}

uint64_t sub_1730B44(uint64_t a1)
{
  uint64_t result = sub_18856CC(a1 + 16);
  if (result)
  {
    uint64_t result = sub_1703ADC(a1 + 48);
    if (result)
    {
      if ((*(unsigned char *)(a1 + 40) & 1) == 0) {
        return 1;
      }
      uint64_t result = sub_16FD18C(*(void *)(a1 + 72));
      if (result) {
        return 1;
      }
    }
  }
  return result;
}

uint64_t sub_1730B94(uint64_t a1)
{
  uint64_t result = sub_18856CC(a1 + 16);
  if (result)
  {
    int v3 = *(_DWORD *)(a1 + 40);
    if (v3)
    {
      uint64_t result = sub_16CE508(*(void *)(a1 + 48));
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 2) == 0) {
      return 1;
    }
    uint64_t result = sub_136ADBC(*(void *)(a1 + 56));
    if (result) {
      return 1;
    }
  }
  return result;
}

uint64_t sub_1730BEC(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 2) == 0) {
    return 1;
  }
  uint64_t result = sub_1704CAC(*(void *)(a1 + 32));
  if (result) {
    return 1;
  }
  return result;
}

BOOL sub_1730C18(uint64_t a1)
{
  if (!sub_18856CC(a1 + 16)) {
    return 0;
  }
  uint64_t v2 = *(unsigned int *)(a1 + 56);
  do
  {
    BOOL v3 = (int)v2 < 1;
    if ((int)v2 < 1) {
      break;
    }
    uint64_t v4 = v2 - 1;
    char v5 = sub_1757B58(*(void *)(*(void *)(a1 + 64) + 8 * v2));
    uint64_t v2 = v4;
  }
  while ((v5 & 1) != 0);
  return v3;
}

BOOL sub_1730C80(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 24);
  do
  {
    int v3 = v2;
    if ((int)v2 < 1) {
      break;
    }
    uint64_t v4 = v2 - 1;
    char v5 = sub_18856CC(*(void *)(*(void *)(a1 + 32) + 8 * v2) + 16);
    uint64_t v2 = v4;
  }
  while ((v5 & 1) != 0);
  return v3 < 1;
}

BOOL sub_1730CDC(uint64_t a1)
{
  if (!sub_18856CC(a1 + 16)) {
    return 0;
  }
  uint64_t v2 = *(unsigned int *)(a1 + 80);
  do
  {
    BOOL v3 = (int)v2 < 1;
    if ((int)v2 < 1) {
      break;
    }
    uint64_t v4 = v2 - 1;
    BOOL v5 = sub_1774FB4(*(void *)(*(void *)(a1 + 88) + 8 * v2));
    uint64_t v2 = v4;
  }
  while (v5);
  return v3;
}

BOOL sub_1730D44(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  do
  {
    int v3 = v2;
    if ((int)v2 < 1) {
      break;
    }
    uint64_t v4 = v2 - 1;
    char v5 = sub_17855E4(*(void *)(*(void *)(a1 + 40) + 8 * v2));
    uint64_t v2 = v4;
  }
  while ((v5 & 1) != 0);
  return v3 < 1;
}

BOOL sub_1730D9C(uint64_t a1)
{
  if (!sub_18856CC(a1 + 16)) {
    return 0;
  }
  uint64_t v2 = *(unsigned int *)(a1 + 56);
  do
  {
    BOOL v3 = (int)v2 < 1;
    if ((int)v2 < 1) {
      break;
    }
    uint64_t v4 = v2 - 1;
    char v5 = sub_18856CC(*(void *)(*(void *)(a1 + 64) + 8 * v2) + 16);
    uint64_t v2 = v4;
  }
  while ((v5 & 1) != 0);
  return v3;
}

BOOL sub_1730E08(uint64_t a1)
{
  if (!sub_18856CC(a1 + 16)) {
    return 0;
  }
  uint64_t v2 = *(unsigned int *)(a1 + 56);
  while ((int)v2 >= 1)
  {
    uint64_t v3 = v2 - 1;
    char v4 = sub_1752D28(*(void *)(*(void *)(a1 + 64) + 8 * v2));
    uint64_t v2 = v3;
    if ((v4 & 1) == 0) {
      return 0;
    }
  }
  uint64_t v7 = *(unsigned int *)(a1 + 80);
  do
  {
    BOOL v5 = (int)v7 < 1;
    if ((int)v7 < 1) {
      break;
    }
    uint64_t v8 = v7 - 1;
    char v9 = sub_16CE508(*(void *)(*(void *)(a1 + 88) + 8 * v7));
    uint64_t v7 = v8;
  }
  while ((v9 & 1) != 0);
  return v5;
}

uint64_t sub_1730E94(uint64_t a1)
{
  uint64_t result = sub_18856CC(a1 + 16);
  if (result)
  {
    if ((*(unsigned char *)(a1 + 40) & 8) == 0) {
      return 1;
    }
    uint64_t result = sub_18856CC(*(void *)(a1 + 72) + 16);
    if (result) {
      return 1;
    }
  }
  return result;
}

uint64_t sub_1730EDC(uint64_t a1)
{
  uint64_t result = sub_18856CC(a1 + 16);
  if (result)
  {
    if ((*(unsigned char *)(a1 + 40) & 1) == 0) {
      return 1;
    }
    uint64_t result = sub_16CE508(*(void *)(a1 + 48));
    if (result) {
      return 1;
    }
  }
  return result;
}

uint64_t sub_1730F20(uint64_t a1)
{
  return sub_18856CC(a1 + 16);
}

uint64_t sub_1730F28(uint64_t a1)
{
  uint64_t result = sub_18856CC(a1 + 16);
  if (result)
  {
    uint64_t v3 = *(unsigned int *)(a1 + 56);
    while ((int)v3 >= 1)
    {
      uint64_t v4 = v3 - 1;
      char v5 = sub_16CE508(*(void *)(*(void *)(a1 + 64) + 8 * v3));
      uint64_t v3 = v4;
      if ((v5 & 1) == 0) {
        return 0;
      }
    }
    if ((*(unsigned char *)(a1 + 40) & 1) == 0) {
      return 1;
    }
    uint64_t result = sub_16CE508(*(void *)(a1 + 72));
    if (result) {
      return 1;
    }
  }
  return result;
}

BOOL sub_1730F98(uint64_t a1)
{
  if (!sub_18856CC(a1 + 16)) {
    return 0;
  }
  uint64_t v2 = *(unsigned int *)(a1 + 56);
  while ((int)v2 >= 1)
  {
    uint64_t v3 = v2 - 1;
    char v4 = sub_16CE508(*(void *)(*(void *)(a1 + 64) + 8 * v2));
    uint64_t v2 = v3;
    if ((v4 & 1) == 0) {
      return 0;
    }
  }
  uint64_t v5 = *(unsigned int *)(a1 + 80);
  while ((int)v5 >= 1)
  {
    uint64_t v6 = v5 - 1;
    char v7 = sub_16CE508(*(void *)(*(void *)(a1 + 88) + 8 * v5));
    uint64_t v5 = v6;
    if ((v7 & 1) == 0) {
      return 0;
    }
  }
  uint64_t v10 = *(unsigned int *)(a1 + 104);
  do
  {
    BOOL v8 = (int)v10 < 1;
    if ((int)v10 < 1) {
      break;
    }
    uint64_t v11 = v10 - 1;
    char v12 = sub_16CE508(*(void *)(*(void *)(a1 + 112) + 8 * v10));
    uint64_t v10 = v11;
  }
  while ((v12 & 1) != 0);
  return v8;
}

uint64_t sub_173104C(uint64_t a1)
{
  uint64_t result = sub_18856CC(a1 + 16);
  if (result)
  {
    if ((*(unsigned char *)(a1 + 40) & 1) == 0) {
      return 1;
    }
    uint64_t result = sub_136ADBC(*(void *)(a1 + 48));
    if (result) {
      return 1;
    }
  }
  return result;
}

uint64_t sub_1731090(uint64_t a1)
{
  return sub_18856CC(a1 + 16);
}

void *sub_1731098@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.ComponentValue");
}

uint64_t *sub_17310A8(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = (uint64_t *)(a1 + 8);
  if (v2) {
    return (uint64_t *)sub_188B4AC(result);
  }
  return result;
}

uint64_t *sub_17310B8(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = (uint64_t *)(a1 + 8);
  if (v2) {
    return (uint64_t *)sub_188B4AC(result);
  }
  return result;
}

uint64_t *sub_17310C8(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = (uint64_t *)(a1 + 8);
  if (v2) {
    return (uint64_t *)sub_188B4AC(result);
  }
  return result;
}

uint64_t *sub_17310D8(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = (uint64_t *)(a1 + 8);
  if (v2) {
    return (uint64_t *)sub_188B4AC(result);
  }
  return result;
}

uint64_t *sub_17310E8(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = (uint64_t *)(a1 + 8);
  if (v2) {
    return (uint64_t *)sub_188B4AC(result);
  }
  return result;
}

uint64_t sub_17310F8(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  *(void *)(a1 + 8) = v4;
  *(void *)a1 = off_24D6518;
  sub_1882BC4(a1 + 16, a2);
  bzero((void *)(a1 + 64), 0x308uLL);
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0;
  *(_DWORD *)(a1 + 56) = 0;
  return a1;
}

void sub_173116C(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_173119C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_1731228((uint64_t (***)())a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

uint64_t (***sub_1731228(uint64_t (***result)()))()
{
  if (result != &off_2547290)
  {
    uint64_t v1 = result;
    uint64_t v2 = result[8];
    if (v2)
    {
      sub_16BD7F8(v2);
      operator delete();
    }
    uint64_t v3 = v1[9];
    if (v3)
    {
      sub_16C3ABC(v3);
      operator delete();
    }
    uint64_t v4 = v1[10];
    if (v4)
    {
      sub_16C4604(v4);
      operator delete();
    }
    uint64_t v5 = v1[11];
    if (v5)
    {
      sub_16C588C(v5);
      operator delete();
    }
    uint64_t v6 = v1[12];
    if (v6)
    {
      sub_16C7AA4(v6);
      operator delete();
    }
    char v7 = v1[13];
    if (v7)
    {
      sub_16E3EF4(v7);
      operator delete();
    }
    BOOL v8 = v1[14];
    if (v8)
    {
      sub_16E5AE4(v8);
      operator delete();
    }
    char v9 = v1[15];
    if (v9)
    {
      sub_16EBF40(v9);
      operator delete();
    }
    uint64_t v10 = v1[16];
    if (v10)
    {
      sub_16EAAD0(v10);
      operator delete();
    }
    uint64_t v11 = v1[17];
    if (v11)
    {
      sub_16DA4CC(v11);
      operator delete();
    }
    uint64_t v12 = (uint64_t)v1[18];
    if (v12)
    {
      sub_16D0C08(v12);
      operator delete();
    }
    uint64_t v13 = (uint64_t)v1[19];
    if (v13)
    {
      sub_16EE610(v13);
      operator delete();
    }
    char v14 = v1[20];
    if (v14)
    {
      sub_16EF6E4(v14);
      operator delete();
    }
    int v15 = v1[21];
    if (v15)
    {
      sub_16F01C8(v15);
      operator delete();
    }
    uint64_t v16 = v1[22];
    if (v16)
    {
      sub_16F22F0(v16);
      operator delete();
    }
    uint64_t v17 = v1[23];
    if (v17)
    {
      sub_16F2B7C(v17);
      operator delete();
    }
    uint64_t v18 = v1[24];
    if (v18)
    {
      sub_16DAEAC(v18);
      operator delete();
    }
    uint64_t v19 = v1[25];
    if (v19)
    {
      sub_16F3CCC(v19);
      operator delete();
    }
    uint64_t v20 = v1[26];
    if (v20)
    {
      sub_16F4984(v20);
      operator delete();
    }
    char v21 = v1[27];
    if (v21)
    {
      sub_16FA734(v21);
      operator delete();
    }
    uint64_t v22 = v1[28];
    if (v22)
    {
      sub_16DB9C0(v22);
      operator delete();
    }
    uint64_t v23 = v1[29];
    if (v23)
    {
      sub_16E2F30(v23);
      operator delete();
    }
    uint64_t v24 = (uint64_t)v1[30];
    if (v24)
    {
      sub_16FE044(v24);
      operator delete();
    }
    uint64_t v25 = v1[31];
    if (v25)
    {
      sub_16D6924(v25);
      operator delete();
    }
    uint64_t v26 = v1[32];
    if (v26)
    {
      sub_17017CC(v26);
      operator delete();
    }
    char v27 = v1[33];
    if (v27)
    {
      sub_1702AAC(v27);
      operator delete();
    }
    uint64_t v28 = v1[34];
    if (v28)
    {
      sub_1709A48(v28);
      operator delete();
    }
    uint64_t v29 = v1[35];
    if (v29)
    {
      sub_16C8480(v29);
      operator delete();
    }
    uint64_t v30 = v1[36];
    if (v30)
    {
      sub_16C9968(v30);
      operator delete();
    }
    char v31 = v1[37];
    if (v31)
    {
      sub_16CABD4(v31);
      operator delete();
    }
    int v32 = v1[38];
    if (v32)
    {
      sub_16CF500(v32);
      operator delete();
    }
    uint64_t v33 = v1[39];
    if (v33)
    {
      sub_16E7764(v33);
      operator delete();
    }
    uint64_t v34 = v1[40];
    if (v34)
    {
      sub_170D5CC(v34);
      operator delete();
    }
    uint64_t v35 = v1[41];
    if (v35)
    {
      sub_170E028(v35);
      operator delete();
    }
    uint64_t v36 = v1[42];
    if (v36)
    {
      sub_170F5E8(v36);
      operator delete();
    }
    int v37 = v1[43];
    if (v37)
    {
      sub_17113B0(v37);
      operator delete();
    }
    uint64_t v38 = v1[44];
    if (v38)
    {
      sub_1791A44(v38);
      operator delete();
    }
    uint64_t v39 = v1[45];
    if (v39)
    {
      sub_1712294(v39);
      operator delete();
    }
    uint64_t v40 = v1[46];
    if (v40)
    {
      sub_1714AAC(v40);
      operator delete();
    }
    uint64_t v41 = v1[47];
    if (v41)
    {
      sub_171532C(v41);
      operator delete();
    }
    int v42 = v1[48];
    if (v42)
    {
      sub_1715DE8(v42);
      operator delete();
    }
    uint64_t v43 = v1[49];
    if (v43)
    {
      sub_1712CB4(v43);
      operator delete();
    }
    int v44 = v1[50];
    if (v44)
    {
      sub_1713408(v44);
      operator delete();
    }
    uint64_t v45 = v1[51];
    if (v45)
    {
      sub_1857A8C(v45);
      operator delete();
    }
    uint64_t v46 = v1[52];
    if (v46)
    {
      sub_17140C0(v46);
      operator delete();
    }
    int v47 = v1[53];
    if (v47)
    {
      sub_170C1E0(v47);
      operator delete();
    }
    uint64_t v48 = v1[54];
    if (v48)
    {
      sub_170CD84(v48);
      operator delete();
    }
    int v49 = v1[55];
    if (v49)
    {
      sub_16ECE70(v49);
      operator delete();
    }
    uint64_t v50 = v1[56];
    if (v50)
    {
      sub_16E83A0(v50);
      operator delete();
    }
    uint64_t v51 = v1[57];
    if (v51)
    {
      sub_129F4EC(v51);
      operator delete();
    }
    int v52 = v1[58];
    if (v52)
    {
      sub_1851B3C(v52);
      operator delete();
    }
    uint64_t v53 = v1[59];
    if (v53)
    {
      sub_17160A4(v53);
      operator delete();
    }
    int v54 = v1[60];
    if (v54)
    {
      sub_16C2154(v54);
      operator delete();
    }
    uint64_t v55 = v1[61];
    if (v55)
    {
      sub_1719DE0(v55);
      operator delete();
    }
    uint64_t v56 = v1[62];
    if (v56)
    {
      sub_1851DE8(v56);
      operator delete();
    }
    int v57 = v1[63];
    if (v57)
    {
      sub_177CB48(v57);
      operator delete();
    }
    uint64_t v58 = v1[64];
    if (v58)
    {
      sub_177CF14(v58);
      operator delete();
    }
    int v59 = v1[65];
    if (v59)
    {
      sub_177D2E0(v59);
      operator delete();
    }
    uint64_t v60 = v1[66];
    if (v60)
    {
      sub_177D6AC(v60);
      operator delete();
    }
    uint64_t v61 = v1[67];
    if (v61)
    {
      sub_177DA78(v61);
      operator delete();
    }
    int v62 = v1[68];
    if (v62)
    {
      sub_177DE48(v62);
      operator delete();
    }
    uint64_t v63 = v1[69];
    if (v63)
    {
      sub_177F3BC(v63);
      operator delete();
    }
    int v64 = v1[70];
    if (v64)
    {
      sub_177F97C(v64);
      operator delete();
    }
    uint64_t v65 = (uint64_t)v1[71];
    if (v65)
    {
      sub_177FD54(v65);
      operator delete();
    }
    uint64_t v66 = v1[72];
    if (v66)
    {
      sub_1780590(v66);
      operator delete();
    }
    int v67 = v1[73];
    if (v67)
    {
      sub_171CB1C(v67);
      operator delete();
    }
    uint64_t v68 = v1[74];
    if (v68)
    {
      sub_1780960(v68);
      operator delete();
    }
    int v69 = v1[75];
    if (v69)
    {
      sub_1782D0C(v69);
      operator delete();
    }
    uint64_t v70 = v1[76];
    if (v70)
    {
      sub_177E730(v70);
      operator delete();
    }
    uint64_t v71 = v1[77];
    if (v71)
    {
      sub_1780DFC(v71);
      operator delete();
    }
    int v72 = v1[78];
    if (v72)
    {
      sub_17829CC(v72);
      operator delete();
    }
    uint64_t v73 = v1[79];
    if (v73)
    {
      sub_16F27EC(v73);
      operator delete();
    }
    int v74 = v1[80];
    if (v74)
    {
      sub_1852094(v74);
      operator delete();
    }
    uint64_t v75 = v1[81];
    if (v75)
    {
      sub_177EC20(v75);
      operator delete();
    }
    uint64_t v76 = v1[82];
    if (v76)
    {
      sub_175A88C(v76);
      operator delete();
    }
    uint64_t v77 = (uint64_t)v1[83];
    if (v77)
    {
      sub_16FE808(v77);
      operator delete();
    }
    uint64_t v78 = v1[84];
    if (v78)
    {
      sub_177EFEC(v78);
      operator delete();
    }
    int v79 = v1[85];
    if (v79)
    {
      sub_16F54B8(v79);
      operator delete();
    }
    uint64_t v80 = v1[86];
    if (v80)
    {
      sub_16F7BC4(v80);
      operator delete();
    }
    uint64_t v81 = v1[87];
    if (v81)
    {
      sub_16F8834(v81);
      operator delete();
    }
    int v82 = v1[88];
    if (v82)
    {
      sub_1758DB0(v82);
      operator delete();
    }
    uint64_t v83 = v1[89];
    if (v83)
    {
      sub_178463C(v83);
      operator delete();
    }
    int v84 = v1[90];
    if (v84)
    {
      sub_16E1308(v84);
      operator delete();
    }
    uint64_t v85 = v1[91];
    if (v85)
    {
      sub_16F69B8(v85);
      operator delete();
    }
    uint64_t v86 = v1[92];
    if (v86)
    {
      sub_1775DC4(v86);
      operator delete();
    }
    int v87 = v1[93];
    if (v87)
    {
      sub_1785D88(v87);
      operator delete();
    }
    uint64_t v88 = v1[94];
    if (v88)
    {
      sub_16E1EB0(v88);
      operator delete();
    }
    int v89 = v1[95];
    if (v89)
    {
      sub_16E216C(v89);
      operator delete();
    }
    uint64_t v90 = v1[96];
    if (v90)
    {
      sub_1753AE0(v90);
      operator delete();
    }
    uint64_t v91 = v1[97];
    if (v91)
    {
      sub_174CC14(v91);
      operator delete();
    }
    uint64_t v92 = v1[98];
    if (v92)
    {
      sub_1751468(v92);
      operator delete();
    }
    uint64_t v93 = v1[99];
    if (v93)
    {
      sub_16FFB70(v93);
      operator delete();
    }
    uint64_t v94 = v1[100];
    if (v94)
    {
      sub_174D850(v94);
      operator delete();
    }
    uint64_t v95 = v1[101];
    if (v95)
    {
      sub_174E844(v95);
      operator delete();
    }
    uint64_t v96 = v1[102];
    if (v96)
    {
      sub_174F6D4(v96);
      operator delete();
    }
    uint64_t v97 = v1[103];
    if (v97)
    {
      sub_1750068(v97);
      operator delete();
    }
    uint64_t result = (uint64_t (***)())v1[104];
    if (result)
    {
      sub_174C144(result);
      operator delete();
    }
  }
  return result;
}

void sub_1731E94(uint64_t a1)
{
  sub_173119C(a1);

  operator delete();
}

uint64_t sub_1731ECC(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  unsigned int v3 = *(_DWORD *)(a1 + 40);
  if (!(_BYTE)v3) {
    goto LABEL_11;
  }
  if (v3)
  {
    uint64_t result = (uint64_t)sub_16BD8AC(*(void *)(a1 + 64));
    if ((v3 & 2) == 0)
    {
LABEL_4:
      if ((v3 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_23;
    }
  }
  else if ((v3 & 2) == 0)
  {
    goto LABEL_4;
  }
  uint64_t result = (uint64_t)sub_16C3B70(*(void *)(a1 + 72));
  if ((v3 & 4) == 0)
  {
LABEL_5:
    if ((v3 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_24;
  }
LABEL_23:
  uint64_t result = (uint64_t)sub_16C46B8(*(void *)(a1 + 80));
  if ((v3 & 8) == 0)
  {
LABEL_6:
    if ((v3 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_25;
  }
LABEL_24:
  uint64_t result = (uint64_t)sub_16C5940(*(void *)(a1 + 88));
  if ((v3 & 0x10) == 0)
  {
LABEL_7:
    if ((v3 & 0x20) == 0) {
      goto LABEL_8;
    }
LABEL_26:
    uint64_t result = (uint64_t)sub_16E3FA8(*(void *)(a1 + 104));
    if ((v3 & 0x40) == 0)
    {
LABEL_9:
      if ((v3 & 0x80) == 0) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
    goto LABEL_27;
  }
LABEL_25:
  uint64_t result = (uint64_t)sub_16C7B58(*(void *)(a1 + 96));
  if ((v3 & 0x20) != 0) {
    goto LABEL_26;
  }
LABEL_8:
  if ((v3 & 0x40) == 0) {
    goto LABEL_9;
  }
LABEL_27:
  uint64_t result = sub_16E5BA4(*(void *)(a1 + 112));
  if ((v3 & 0x80) != 0) {
LABEL_10:
  }
    uint64_t result = sub_16EC000(*(void *)(a1 + 120));
LABEL_11:
  if ((v3 & 0xFF00) == 0) {
    goto LABEL_41;
  }
  if ((v3 & 0x100) != 0) {
    uint64_t result = (uint64_t)sub_16EAB84(*(void *)(a1 + 128));
  }
  if ((v3 & 0x200) != 0)
  {
    uint64_t v4 = *(void *)(a1 + 136);
    char v5 = *(unsigned char *)(v4 + 8);
    uint64_t result = v4 + 8;
    if (v5) {
      uint64_t result = sub_188B4AC((uint64_t *)result);
    }
  }
  if ((v3 & 0x400) != 0)
  {
    uint64_t result = sub_16D0D30(*(void *)(a1 + 144));
    if ((v3 & 0x800) == 0)
    {
LABEL_19:
      if ((v3 & 0x1000) == 0) {
        goto LABEL_33;
      }
      goto LABEL_31;
    }
  }
  else if ((v3 & 0x800) == 0)
  {
    goto LABEL_19;
  }
  uint64_t result = sub_16EE7C0(*(void *)(a1 + 152));
  if ((v3 & 0x1000) == 0) {
    goto LABEL_33;
  }
LABEL_31:
  uint64_t v6 = *(void *)(a1 + 160);
  char v7 = *(unsigned char *)(v6 + 8);
  uint64_t result = v6 + 8;
  if (v7) {
    uint64_t result = sub_188B4AC((uint64_t *)result);
  }
LABEL_33:
  if ((v3 & 0x2000) != 0)
  {
    uint64_t result = sub_16F0284(*(void *)(a1 + 168));
    if ((v3 & 0x4000) == 0)
    {
LABEL_35:
      if ((v3 & 0x8000) == 0) {
        goto LABEL_41;
      }
      goto LABEL_39;
    }
  }
  else if ((v3 & 0x4000) == 0)
  {
    goto LABEL_35;
  }
  uint64_t result = (uint64_t)sub_16F23A4(*(void *)(a1 + 176));
  if ((v3 & 0x8000) == 0) {
    goto LABEL_41;
  }
LABEL_39:
  uint64_t v8 = *(void *)(a1 + 184);
  char v9 = *(unsigned char *)(v8 + 8);
  uint64_t result = v8 + 8;
  if (v9) {
    uint64_t result = sub_188B4AC((uint64_t *)result);
  }
LABEL_41:
  if ((v3 & 0xFF0000) != 0)
  {
    if ((v3 & 0x10000) != 0)
    {
      uint64_t v10 = *(void *)(a1 + 192);
      char v11 = *(unsigned char *)(v10 + 8);
      uint64_t result = v10 + 8;
      if (v11) {
        uint64_t result = sub_188B4AC((uint64_t *)result);
      }
    }
    if ((v3 & 0x20000) != 0)
    {
      uint64_t v12 = *(void *)(a1 + 200);
      char v13 = *(unsigned char *)(v12 + 8);
      uint64_t result = v12 + 8;
      if (v13) {
        uint64_t result = sub_188B4AC((uint64_t *)result);
      }
    }
    if ((v3 & 0x40000) != 0)
    {
      uint64_t v14 = *(void *)(a1 + 208);
      char v15 = *(unsigned char *)(v14 + 8);
      uint64_t result = v14 + 8;
      if (v15) {
        uint64_t result = sub_188B4AC((uint64_t *)result);
      }
    }
    if ((v3 & 0x80000) != 0)
    {
      uint64_t v16 = *(void *)(a1 + 216);
      char v17 = *(unsigned char *)(v16 + 8);
      uint64_t result = v16 + 8;
      *(unsigned char *)(result + 16) = 0;
      *(_DWORD *)(result + 8) = 0;
      if (v17) {
        uint64_t result = sub_188B4AC((uint64_t *)result);
      }
    }
    if ((v3 & 0x100000) != 0)
    {
      uint64_t v18 = *(void *)(a1 + 224);
      char v19 = *(unsigned char *)(v18 + 8);
      uint64_t result = v18 + 8;
      if (v19) {
        uint64_t result = sub_188B4AC((uint64_t *)result);
      }
    }
    if ((v3 & 0x200000) != 0)
    {
      uint64_t v20 = *(void *)(a1 + 232);
      char v21 = *(unsigned char *)(v20 + 8);
      uint64_t result = v20 + 8;
      if (v21) {
        uint64_t result = sub_188B4AC((uint64_t *)result);
      }
    }
    if ((v3 & 0x400000) != 0) {
      uint64_t result = sub_16FE128(*(void *)(a1 + 240));
    }
    if ((v3 & 0x800000) != 0)
    {
      uint64_t v22 = *(void *)(a1 + 248);
      char v23 = *(unsigned char *)(v22 + 8);
      uint64_t result = v22 + 8;
      if (v23) {
        uint64_t result = sub_188B4AC((uint64_t *)result);
      }
    }
  }
  if (HIBYTE(v3))
  {
    if ((v3 & 0x1000000) != 0)
    {
      uint64_t v24 = *(void *)(a1 + 256);
      char v25 = *(unsigned char *)(v24 + 8);
      uint64_t result = v24 + 8;
      if (v25) {
        uint64_t result = sub_188B4AC((uint64_t *)result);
      }
    }
    if ((v3 & 0x2000000) != 0)
    {
      uint64_t v26 = *(void *)(a1 + 264);
      char v27 = *(unsigned char *)(v26 + 8);
      uint64_t result = v26 + 8;
      *(_DWORD *)(result + 8) = 0;
      if (v27) {
        uint64_t result = sub_188B4AC((uint64_t *)result);
      }
    }
    if ((v3 & 0x4000000) != 0)
    {
      uint64_t result = sub_1709AFC(*(void *)(a1 + 272));
      if ((v3 & 0x8000000) == 0)
      {
LABEL_74:
        if ((v3 & 0x10000000) == 0)
        {
LABEL_80:
          if ((v3 & 0x20000000) != 0)
          {
            uint64_t v30 = *(void *)(a1 + 296);
            char v31 = *(unsigned char *)(v30 + 8);
            uint64_t result = v30 + 8;
            if (v31) {
              uint64_t result = sub_188B4AC((uint64_t *)result);
            }
          }
          if ((v3 & 0x40000000) != 0)
          {
            uint64_t v32 = *(void *)(a1 + 304);
            char v33 = *(unsigned char *)(v32 + 8);
            uint64_t result = v32 + 8;
            if (v33) {
              uint64_t result = sub_188B4AC((uint64_t *)result);
            }
          }
          if ((v3 & 0x80000000) != 0) {
            uint64_t result = sub_16E7824(*(void *)(a1 + 312));
          }
          goto LABEL_88;
        }
LABEL_78:
        uint64_t v28 = *(void *)(a1 + 288);
        char v29 = *(unsigned char *)(v28 + 8);
        uint64_t result = v28 + 8;
        if (v29) {
          uint64_t result = sub_188B4AC((uint64_t *)result);
        }
        goto LABEL_80;
      }
    }
    else if ((v3 & 0x8000000) == 0)
    {
      goto LABEL_74;
    }
    uint64_t result = sub_16C8534(*(void *)(a1 + 280));
    if ((v3 & 0x10000000) == 0) {
      goto LABEL_80;
    }
    goto LABEL_78;
  }
LABEL_88:
  unsigned int v34 = *(_DWORD *)(a1 + 44);
  if ((_BYTE)v34)
  {
    if (v34)
    {
      uint64_t v35 = *(void *)(a1 + 320);
      char v36 = *(unsigned char *)(v35 + 8);
      uint64_t result = v35 + 8;
      if (v36) {
        uint64_t result = sub_188B4AC((uint64_t *)result);
      }
    }
    if ((v34 & 2) != 0)
    {
      uint64_t v37 = *(void *)(a1 + 328);
      char v38 = *(unsigned char *)(v37 + 8);
      uint64_t result = v37 + 8;
      if (v38) {
        uint64_t result = sub_188B4AC((uint64_t *)result);
      }
    }
    if ((v34 & 4) != 0)
    {
      uint64_t v39 = *(void *)(a1 + 336);
      char v40 = *(unsigned char *)(v39 + 8);
      uint64_t result = v39 + 8;
      if (v40) {
        uint64_t result = sub_188B4AC((uint64_t *)result);
      }
    }
    if ((v34 & 8) != 0)
    {
      uint64_t v41 = *(void *)(a1 + 344);
      char v42 = *(unsigned char *)(v41 + 8);
      uint64_t result = v41 + 8;
      *(_DWORD *)(result + 16) = 0;
      *(_DWORD *)(result + 8) = 0;
      if (v42) {
        uint64_t result = sub_188B4AC((uint64_t *)result);
      }
    }
    if ((v34 & 0x10) != 0)
    {
      uint64_t v43 = *(void *)(a1 + 352);
      char v44 = *(unsigned char *)(v43 + 8);
      uint64_t result = v43 + 8;
      if (v44) {
        uint64_t result = sub_188B4AC((uint64_t *)result);
      }
    }
    if ((v34 & 0x20) != 0)
    {
      uint64_t v45 = *(void *)(a1 + 360);
      char v46 = *(unsigned char *)(v45 + 8);
      uint64_t result = v45 + 8;
      if (v46) {
        uint64_t result = sub_188B4AC((uint64_t *)result);
      }
    }
    if ((v34 & 0x40) != 0)
    {
      uint64_t v47 = *(void *)(a1 + 368);
      char v48 = *(unsigned char *)(v47 + 8);
      uint64_t result = v47 + 8;
      if (v48) {
        uint64_t result = sub_188B4AC((uint64_t *)result);
      }
    }
    if ((v34 & 0x80) != 0)
    {
      uint64_t v49 = *(void *)(a1 + 376);
      char v50 = *(unsigned char *)(v49 + 8);
      uint64_t result = v49 + 8;
      if (v50) {
        uint64_t result = sub_188B4AC((uint64_t *)result);
      }
    }
  }
  if ((v34 & 0xFF00) != 0)
  {
    if ((v34 & 0x100) != 0)
    {
      uint64_t v51 = *(void *)(a1 + 384);
      char v52 = *(unsigned char *)(v51 + 8);
      uint64_t result = v51 + 8;
      if (v52) {
        uint64_t result = sub_188B4AC((uint64_t *)result);
      }
    }
    if ((v34 & 0x200) != 0)
    {
      uint64_t v53 = *(void *)(a1 + 392);
      char v54 = *(unsigned char *)(v53 + 8);
      uint64_t result = v53 + 8;
      if (v54) {
        uint64_t result = sub_188B4AC((uint64_t *)result);
      }
    }
    if ((v34 & 0x400) != 0)
    {
      uint64_t v55 = *(void *)(a1 + 400);
      char v56 = *(unsigned char *)(v55 + 8);
      uint64_t result = v55 + 8;
      if (v56) {
        uint64_t result = sub_188B4AC((uint64_t *)result);
      }
    }
    if ((v34 & 0x800) != 0)
    {
      uint64_t v57 = *(void *)(a1 + 408);
      char v58 = *(unsigned char *)(v57 + 8);
      uint64_t result = v57 + 8;
      if (v58) {
        uint64_t result = sub_188B4AC((uint64_t *)result);
      }
    }
    if ((v34 & 0x1000) != 0)
    {
      uint64_t v59 = *(void *)(a1 + 416);
      char v60 = *(unsigned char *)(v59 + 8);
      uint64_t result = v59 + 8;
      if (v60) {
        uint64_t result = sub_188B4AC((uint64_t *)result);
      }
    }
    if ((v34 & 0x2000) != 0)
    {
      uint64_t result = (uint64_t)sub_170C294(*(void *)(a1 + 424));
      if ((v34 & 0x4000) == 0)
      {
LABEL_131:
        if ((v34 & 0x8000) == 0) {
          goto LABEL_133;
        }
        goto LABEL_132;
      }
    }
    else if ((v34 & 0x4000) == 0)
    {
      goto LABEL_131;
    }
    uint64_t result = (uint64_t)sub_170CE38(*(void *)(a1 + 432));
    if ((v34 & 0x8000) != 0) {
LABEL_132:
    }
      uint64_t result = (uint64_t)sub_16ECF24(*(void *)(a1 + 440));
  }
LABEL_133:
  if ((v34 & 0xFF0000) == 0) {
    goto LABEL_158;
  }
  if ((v34 & 0x10000) == 0)
  {
    if ((v34 & 0x20000) == 0) {
      goto LABEL_136;
    }
LABEL_142:
    uint64_t result = (uint64_t)sub_129F528(*(void *)(a1 + 456));
    if ((v34 & 0x40000) == 0) {
      goto LABEL_145;
    }
    goto LABEL_143;
  }
  uint64_t result = (uint64_t)sub_16E8454(*(void *)(a1 + 448));
  if ((v34 & 0x20000) != 0) {
    goto LABEL_142;
  }
LABEL_136:
  if ((v34 & 0x40000) == 0) {
    goto LABEL_145;
  }
LABEL_143:
  uint64_t v61 = *(void *)(a1 + 464);
  char v62 = *(unsigned char *)(v61 + 8);
  uint64_t result = v61 + 8;
  if (v62) {
    uint64_t result = sub_188B4AC((uint64_t *)result);
  }
LABEL_145:
  if ((v34 & 0x80000) != 0)
  {
    uint64_t v63 = *(void *)(a1 + 472);
    char v64 = *(unsigned char *)(v63 + 8);
    uint64_t result = v63 + 8;
    if (v64) {
      uint64_t result = sub_188B4AC((uint64_t *)result);
    }
  }
  if ((v34 & 0x100000) == 0)
  {
    if ((v34 & 0x200000) == 0) {
      goto LABEL_150;
    }
LABEL_153:
    uint64_t result = (uint64_t)sub_1719E94(*(void *)(a1 + 488));
    if ((v34 & 0x400000) == 0) {
      goto LABEL_156;
    }
LABEL_154:
    uint64_t v65 = *(void *)(a1 + 496);
    char v66 = *(unsigned char *)(v65 + 8);
    uint64_t result = v65 + 8;
    if (v66) {
      uint64_t result = sub_188B4AC((uint64_t *)result);
    }
    goto LABEL_156;
  }
  uint64_t result = sub_16C2214(*(void *)(a1 + 480));
  if ((v34 & 0x200000) != 0) {
    goto LABEL_153;
  }
LABEL_150:
  if ((v34 & 0x400000) != 0) {
    goto LABEL_154;
  }
LABEL_156:
  if ((v34 & 0x800000) != 0) {
    uint64_t result = (uint64_t)sub_1732674(*(void *)(a1 + 504));
  }
LABEL_158:
  if (!HIBYTE(v34)) {
    goto LABEL_167;
  }
  if ((v34 & 0x1000000) != 0)
  {
    uint64_t result = (uint64_t)sub_17326C4(*(void *)(a1 + 512));
    if ((v34 & 0x2000000) == 0)
    {
LABEL_161:
      if ((v34 & 0x4000000) == 0) {
        goto LABEL_162;
      }
      goto LABEL_249;
    }
  }
  else if ((v34 & 0x2000000) == 0)
  {
    goto LABEL_161;
  }
  uint64_t result = (uint64_t)sub_1732714(*(void *)(a1 + 520));
  if ((v34 & 0x4000000) == 0)
  {
LABEL_162:
    if ((v34 & 0x8000000) == 0) {
      goto LABEL_163;
    }
    goto LABEL_250;
  }
LABEL_249:
  uint64_t result = (uint64_t)sub_1732764(*(void *)(a1 + 528));
  if ((v34 & 0x8000000) == 0)
  {
LABEL_163:
    if ((v34 & 0x10000000) == 0) {
      goto LABEL_164;
    }
    goto LABEL_251;
  }
LABEL_250:
  uint64_t result = (uint64_t)sub_17327B4(*(void *)(a1 + 536));
  if ((v34 & 0x10000000) == 0)
  {
LABEL_164:
    if ((v34 & 0x20000000) == 0) {
      goto LABEL_165;
    }
    goto LABEL_252;
  }
LABEL_251:
  uint64_t result = (uint64_t)sub_1732804(*(void *)(a1 + 544));
  if ((v34 & 0x20000000) == 0)
  {
LABEL_165:
    if ((v34 & 0x40000000) == 0) {
      goto LABEL_166;
    }
LABEL_253:
    uint64_t result = (uint64_t)sub_17328D4(*(void *)(a1 + 560));
    if ((v34 & 0x80000000) == 0) {
      goto LABEL_167;
    }
    goto LABEL_254;
  }
LABEL_252:
  uint64_t result = (uint64_t)sub_173286C(*(void *)(a1 + 552));
  if ((v34 & 0x40000000) != 0) {
    goto LABEL_253;
  }
LABEL_166:
  if ((v34 & 0x80000000) == 0) {
    goto LABEL_167;
  }
LABEL_254:
  uint64_t result = sub_1732924(*(void *)(a1 + 568));
LABEL_167:
  unsigned int v67 = *(_DWORD *)(a1 + 48);
  if (!(_BYTE)v67) {
    goto LABEL_186;
  }
  if (v67)
  {
    uint64_t result = (uint64_t)sub_17329B8(*(void *)(a1 + 576));
    if ((v67 & 2) == 0)
    {
LABEL_170:
      if ((v67 & 4) == 0) {
        goto LABEL_171;
      }
      goto LABEL_178;
    }
  }
  else if ((v67 & 2) == 0)
  {
    goto LABEL_170;
  }
  uint64_t result = (uint64_t)sub_171CBD0(*(void *)(a1 + 584));
  if ((v67 & 4) == 0)
  {
LABEL_171:
    if ((v67 & 8) == 0) {
      goto LABEL_172;
    }
    goto LABEL_179;
  }
LABEL_178:
  uint64_t result = (uint64_t)sub_1732A08(*(void *)(a1 + 592));
  if ((v67 & 8) == 0)
  {
LABEL_172:
    if ((v67 & 0x10) == 0) {
      goto LABEL_173;
    }
    goto LABEL_180;
  }
LABEL_179:
  uint64_t result = (uint64_t)sub_1732A60(*(void *)(a1 + 600));
  if ((v67 & 0x10) == 0)
  {
LABEL_173:
    if ((v67 & 0x20) == 0) {
      goto LABEL_174;
    }
LABEL_181:
    uint64_t result = (uint64_t)sub_1732B2C(*(void *)(a1 + 616));
    if ((v67 & 0x40) == 0) {
      goto LABEL_184;
    }
LABEL_182:
    uint64_t v68 = *(void *)(a1 + 624);
    char v69 = *(unsigned char *)(v68 + 8);
    uint64_t result = v68 + 8;
    if (v69) {
      uint64_t result = sub_188B4AC((uint64_t *)result);
    }
    goto LABEL_184;
  }
LABEL_180:
  uint64_t result = (uint64_t)sub_1732AB0(*(unsigned char **)(a1 + 608));
  if ((v67 & 0x20) != 0) {
    goto LABEL_181;
  }
LABEL_174:
  if ((v67 & 0x40) != 0) {
    goto LABEL_182;
  }
LABEL_184:
  if ((v67 & 0x80) != 0) {
    uint64_t result = (uint64_t)sub_16F28A0(*(void *)(a1 + 632));
  }
LABEL_186:
  if ((v67 & 0xFF00) == 0) {
    goto LABEL_208;
  }
  if ((v67 & 0x100) != 0)
  {
    uint64_t v70 = *(void *)(a1 + 640);
    char v71 = *(unsigned char *)(v70 + 8);
    uint64_t result = v70 + 8;
    if (v71) {
      uint64_t result = sub_188B4AC((uint64_t *)result);
    }
  }
  if ((v67 & 0x200) != 0)
  {
    uint64_t result = (uint64_t)sub_1732B8C(*(void *)(a1 + 648));
    if ((v67 & 0x400) == 0)
    {
LABEL_192:
      if ((v67 & 0x800) == 0) {
        goto LABEL_193;
      }
      goto LABEL_198;
    }
  }
  else if ((v67 & 0x400) == 0)
  {
    goto LABEL_192;
  }
  uint64_t result = (uint64_t)sub_1732BDC(*(void *)(a1 + 656));
  if ((v67 & 0x800) == 0)
  {
LABEL_193:
    if ((v67 & 0x1000) == 0) {
      goto LABEL_194;
    }
LABEL_199:
    uint64_t result = (uint64_t)sub_1732C2C(*(void *)(a1 + 672));
    if ((v67 & 0x2000) == 0) {
      goto LABEL_202;
    }
LABEL_200:
    uint64_t v72 = *(void *)(a1 + 680);
    char v73 = *(unsigned char *)(v72 + 8);
    uint64_t result = v72 + 8;
    if (v73) {
      uint64_t result = sub_188B4AC((uint64_t *)result);
    }
    goto LABEL_202;
  }
LABEL_198:
  uint64_t result = sub_16FE8F4(*(void *)(a1 + 664));
  if ((v67 & 0x1000) != 0) {
    goto LABEL_199;
  }
LABEL_194:
  if ((v67 & 0x2000) != 0) {
    goto LABEL_200;
  }
LABEL_202:
  if ((v67 & 0x4000) != 0)
  {
    uint64_t v74 = *(void *)(a1 + 688);
    char v75 = *(unsigned char *)(v74 + 8);
    uint64_t result = v74 + 8;
    if (v75) {
      uint64_t result = sub_188B4AC((uint64_t *)result);
    }
  }
  if ((v67 & 0x8000) != 0)
  {
    uint64_t v76 = *(void *)(a1 + 696);
    char v77 = *(unsigned char *)(v76 + 8);
    uint64_t result = v76 + 8;
    if (v77) {
      uint64_t result = sub_188B4AC((uint64_t *)result);
    }
  }
LABEL_208:
  if ((v67 & 0xFF0000) != 0)
  {
    if ((v67 & 0x10000) != 0) {
      uint64_t result = (uint64_t)sub_1732C7C(*(void *)(a1 + 704));
    }
    if ((v67 & 0x20000) != 0)
    {
      uint64_t v78 = *(void *)(a1 + 712);
      char v79 = *(unsigned char *)(v78 + 8);
      uint64_t result = v78 + 8;
      if (v79) {
        uint64_t result = sub_188B4AC((uint64_t *)result);
      }
    }
    if ((v67 & 0x40000) != 0)
    {
      uint64_t v80 = *(void *)(a1 + 720);
      char v81 = *(unsigned char *)(v80 + 8);
      uint64_t result = v80 + 8;
      if (v81) {
        uint64_t result = sub_188B4AC((uint64_t *)result);
      }
    }
    if ((v67 & 0x80000) != 0)
    {
      uint64_t v82 = *(void *)(a1 + 728);
      char v83 = *(unsigned char *)(v82 + 8);
      uint64_t result = v82 + 8;
      if (v83) {
        uint64_t result = sub_188B4AC((uint64_t *)result);
      }
    }
    if ((v67 & 0x100000) != 0)
    {
      uint64_t v84 = *(void *)(a1 + 736);
      char v85 = *(unsigned char *)(v84 + 8);
      uint64_t result = v84 + 8;
      *(_DWORD *)(result + 8) = 0;
      if (v85) {
        uint64_t result = sub_188B4AC((uint64_t *)result);
      }
    }
    if ((v67 & 0x200000) != 0)
    {
      uint64_t v86 = *(void *)(a1 + 744);
      char v87 = *(unsigned char *)(v86 + 8);
      uint64_t result = v86 + 8;
      if (v87) {
        uint64_t result = sub_188B4AC((uint64_t *)result);
      }
    }
    if ((v67 & 0x400000) != 0)
    {
      uint64_t v88 = *(void *)(a1 + 752);
      char v89 = *(unsigned char *)(v88 + 8);
      uint64_t result = v88 + 8;
      if (v89) {
        uint64_t result = sub_188B4AC((uint64_t *)result);
      }
    }
    if ((v67 & 0x800000) != 0)
    {
      uint64_t v90 = *(void *)(a1 + 760);
      char v91 = *(unsigned char *)(v90 + 8);
      uint64_t result = v90 + 8;
      if (v91) {
        uint64_t result = sub_188B4AC((uint64_t *)result);
      }
    }
  }
  if (HIBYTE(v67))
  {
    if ((v67 & 0x1000000) != 0)
    {
      uint64_t result = (uint64_t)sub_1732D00(*(void *)(a1 + 768));
      if ((v67 & 0x2000000) == 0)
      {
LABEL_235:
        if ((v67 & 0x4000000) == 0) {
          goto LABEL_236;
        }
        goto LABEL_257;
      }
    }
    else if ((v67 & 0x2000000) == 0)
    {
      goto LABEL_235;
    }
    uint64_t result = (uint64_t)sub_1732D58(*(void *)(a1 + 776));
    if ((v67 & 0x4000000) == 0)
    {
LABEL_236:
      if ((v67 & 0x8000000) == 0) {
        goto LABEL_237;
      }
      goto LABEL_258;
    }
LABEL_257:
    uint64_t result = (uint64_t)sub_1732DA8(*(void *)(a1 + 784));
    if ((v67 & 0x8000000) == 0)
    {
LABEL_237:
      if ((v67 & 0x10000000) == 0) {
        goto LABEL_238;
      }
      goto LABEL_259;
    }
LABEL_258:
    uint64_t result = sub_16FFC28(*(void *)(a1 + 792));
    if ((v67 & 0x10000000) == 0)
    {
LABEL_238:
      if ((v67 & 0x20000000) == 0) {
        goto LABEL_239;
      }
      goto LABEL_260;
    }
LABEL_259:
    uint64_t result = (uint64_t)sub_1732DF8(*(void *)(a1 + 800));
    if ((v67 & 0x20000000) == 0)
    {
LABEL_239:
      if ((v67 & 0x40000000) == 0) {
        goto LABEL_240;
      }
      goto LABEL_261;
    }
LABEL_260:
    uint64_t result = (uint64_t)sub_1732E48(*(void *)(a1 + 808));
    if ((v67 & 0x40000000) == 0)
    {
LABEL_240:
      if ((v67 & 0x80000000) == 0) {
        goto LABEL_241;
      }
LABEL_262:
      uint64_t result = (uint64_t)sub_1732EE8(*(void *)(a1 + 824));
      goto LABEL_241;
    }
LABEL_261:
    uint64_t result = (uint64_t)sub_1732E98(*(void *)(a1 + 816));
    if ((v67 & 0x80000000) == 0) {
      goto LABEL_241;
    }
    goto LABEL_262;
  }
LABEL_241:
  if (*(unsigned char *)(a1 + 52)) {
    uint64_t result = (uint64_t)sub_1732F38(*(void *)(a1 + 832));
  }
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0;
  char v93 = *(unsigned char *)(a1 + 8);
  uint64_t v92 = (uint64_t *)(a1 + 8);
  if (v93)
  {
    return sub_188B4AC(v92);
  }
  return result;
}

unsigned char *sub_1732674(uint64_t a1)
{
  uint64_t result = sub_18843A4((unsigned char *)(a1 + 16));
  char v4 = *(unsigned char *)(a1 + 8);
  unsigned int v3 = (uint64_t *)(a1 + 8);
  if (v4)
  {
    return (unsigned char *)sub_188B4AC(v3);
  }
  return result;
}

unsigned char *sub_17326C4(uint64_t a1)
{
  uint64_t result = sub_18843A4((unsigned char *)(a1 + 16));
  char v4 = *(unsigned char *)(a1 + 8);
  unsigned int v3 = (uint64_t *)(a1 + 8);
  if (v4)
  {
    return (unsigned char *)sub_188B4AC(v3);
  }
  return result;
}

unsigned char *sub_1732714(uint64_t a1)
{
  uint64_t result = sub_18843A4((unsigned char *)(a1 + 16));
  char v4 = *(unsigned char *)(a1 + 8);
  unsigned int v3 = (uint64_t *)(a1 + 8);
  if (v4)
  {
    return (unsigned char *)sub_188B4AC(v3);
  }
  return result;
}

unsigned char *sub_1732764(uint64_t a1)
{
  uint64_t result = sub_18843A4((unsigned char *)(a1 + 16));
  char v4 = *(unsigned char *)(a1 + 8);
  unsigned int v3 = (uint64_t *)(a1 + 8);
  if (v4)
  {
    return (unsigned char *)sub_188B4AC(v3);
  }
  return result;
}

unsigned char *sub_17327B4(uint64_t a1)
{
  uint64_t result = sub_18843A4((unsigned char *)(a1 + 16));
  char v4 = *(unsigned char *)(a1 + 8);
  unsigned int v3 = (uint64_t *)(a1 + 8);
  if (v4)
  {
    return (unsigned char *)sub_188B4AC(v3);
  }
  return result;
}

unsigned char *sub_1732804(uint64_t a1)
{
  uint64_t result = sub_18843A4((unsigned char *)(a1 + 16));
  if ((*(unsigned char *)(a1 + 40) & 0x7F) != 0)
  {
    *(_WORD *)(a1 + 56) = 0;
    *(void *)(a1 + 48) = 0;
  }
  char v4 = *(unsigned char *)(a1 + 8);
  uint64_t v3 = a1 + 8;
  *(_DWORD *)(v3 + 32) = 0;
  if (v4)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

unsigned char *sub_173286C(uint64_t a1)
{
  uint64_t result = sub_18843A4((unsigned char *)(a1 + 16));
  if ((*(unsigned char *)(a1 + 40) & 3) != 0)
  {
    *(unsigned char *)(a1 + 52) = 0;
    *(_DWORD *)(a1 + 48) = 0;
  }
  char v4 = *(unsigned char *)(a1 + 8);
  uint64_t v3 = a1 + 8;
  *(_DWORD *)(v3 + 32) = 0;
  if (v4)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

unsigned char *sub_17328D4(uint64_t a1)
{
  uint64_t result = sub_18843A4((unsigned char *)(a1 + 16));
  char v4 = *(unsigned char *)(a1 + 8);
  uint64_t v3 = (uint64_t *)(a1 + 8);
  if (v4)
  {
    return (unsigned char *)sub_188B4AC(v3);
  }
  return result;
}

uint64_t sub_1732924(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  int v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 7) != 0)
  {
    if (v3)
    {
      uint64_t result = sub_16B5DB0(*(void *)(a1 + 48));
      if ((v3 & 2) == 0)
      {
LABEL_4:
        if ((v3 & 4) == 0) {
          goto LABEL_6;
        }
        goto LABEL_5;
      }
    }
    else if ((v3 & 2) == 0)
    {
      goto LABEL_4;
    }
    uint64_t result = sub_16B5DB0(*(void *)(a1 + 56));
    if ((v3 & 4) != 0) {
LABEL_5:
    }
      uint64_t result = sub_16B5E18(*(void *)(a1 + 64));
  }
LABEL_6:
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t v4 = a1 + 8;
  *(unsigned char *)(v4 + 64) = 0;
  *(_DWORD *)(v4 + 32) = 0;
  if (v5)
  {
    return sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

unsigned char *sub_17329B8(uint64_t a1)
{
  uint64_t result = sub_18843A4((unsigned char *)(a1 + 16));
  char v4 = *(unsigned char *)(a1 + 8);
  int v3 = (uint64_t *)(a1 + 8);
  if (v4)
  {
    return (unsigned char *)sub_188B4AC(v3);
  }
  return result;
}

unsigned char *sub_1732A08(uint64_t a1)
{
  uint64_t result = sub_18843A4((unsigned char *)(a1 + 16));
  char v4 = *(unsigned char *)(a1 + 8);
  uint64_t v3 = a1 + 8;
  *(unsigned char *)(v3 + 40) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  if (v4)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

unsigned char *sub_1732A60(uint64_t a1)
{
  uint64_t result = sub_18843A4((unsigned char *)(a1 + 16));
  char v4 = *(unsigned char *)(a1 + 8);
  uint64_t v3 = (uint64_t *)(a1 + 8);
  if (v4)
  {
    return (unsigned char *)sub_188B4AC(v3);
  }
  return result;
}

unsigned char *sub_1732AB0(unsigned char *result)
{
  uint64_t v1 = result;
  uint64_t v2 = *((unsigned int *)result + 6);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*((void *)result + 4) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_16CD894(v4);
      --v2;
    }
    while (v2);
    *((_DWORD *)v1 + 6) = 0;
  }
  char v6 = v1[8];
  char v5 = (uint64_t *)(v1 + 8);
  if (v6)
  {
    return (unsigned char *)sub_188B4AC(v5);
  }
  return result;
}

unsigned char *sub_1732B2C(uint64_t a1)
{
  uint64_t result = sub_18843A4((unsigned char *)(a1 + 16));
  char v4 = *(unsigned char *)(a1 + 8);
  uint64_t v3 = (uint64_t *)(a1 + 8);
  if (v4)
  {
    return (unsigned char *)sub_188B4AC(v3);
  }
  return result;
}

uint64_t *sub_1732B7C(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = (uint64_t *)(a1 + 8);
  if (v2) {
    return (uint64_t *)sub_188B4AC(result);
  }
  return result;
}

unsigned char *sub_1732B8C(uint64_t a1)
{
  uint64_t result = sub_18843A4((unsigned char *)(a1 + 16));
  char v4 = *(unsigned char *)(a1 + 8);
  uint64_t v3 = (uint64_t *)(a1 + 8);
  if (v4)
  {
    return (unsigned char *)sub_188B4AC(v3);
  }
  return result;
}

unsigned char *sub_1732BDC(uint64_t a1)
{
  uint64_t result = sub_18843A4((unsigned char *)(a1 + 16));
  char v4 = *(unsigned char *)(a1 + 8);
  uint64_t v3 = (uint64_t *)(a1 + 8);
  if (v4)
  {
    return (unsigned char *)sub_188B4AC(v3);
  }
  return result;
}

unsigned char *sub_1732C2C(uint64_t a1)
{
  uint64_t result = sub_18843A4((unsigned char *)(a1 + 16));
  char v4 = *(unsigned char *)(a1 + 8);
  uint64_t v3 = (uint64_t *)(a1 + 8);
  if (v4)
  {
    return (unsigned char *)sub_188B4AC(v3);
  }
  return result;
}

unsigned char *sub_1732C7C(uint64_t a1)
{
  uint64_t result = sub_18843A4((unsigned char *)(a1 + 16));
  char v4 = *(unsigned char *)(a1 + 8);
  uint64_t v3 = (uint64_t *)(a1 + 8);
  if (v4)
  {
    return (unsigned char *)sub_188B4AC(v3);
  }
  return result;
}

uint64_t *sub_1732CCC(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = (uint64_t *)(a1 + 8);
  if (v2) {
    return (uint64_t *)sub_188B4AC(result);
  }
  return result;
}

uint64_t sub_1732CDC(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t *sub_1732CF0(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = (uint64_t *)(a1 + 8);
  if (v2) {
    return (uint64_t *)sub_188B4AC(result);
  }
  return result;
}

unsigned char *sub_1732D00(uint64_t a1)
{
  uint64_t result = sub_18843A4((unsigned char *)(a1 + 16));
  char v4 = *(unsigned char *)(a1 + 8);
  uint64_t v3 = a1 + 8;
  *(_DWORD *)(v3 + 40) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  if (v4)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

unsigned char *sub_1732D58(uint64_t a1)
{
  uint64_t result = sub_18843A4((unsigned char *)(a1 + 16));
  char v4 = *(unsigned char *)(a1 + 8);
  uint64_t v3 = (uint64_t *)(a1 + 8);
  if (v4)
  {
    return (unsigned char *)sub_188B4AC(v3);
  }
  return result;
}

unsigned char *sub_1732DA8(uint64_t a1)
{
  uint64_t result = sub_18843A4((unsigned char *)(a1 + 16));
  char v4 = *(unsigned char *)(a1 + 8);
  uint64_t v3 = (uint64_t *)(a1 + 8);
  if (v4)
  {
    return (unsigned char *)sub_188B4AC(v3);
  }
  return result;
}

unsigned char *sub_1732DF8(uint64_t a1)
{
  uint64_t result = sub_18843A4((unsigned char *)(a1 + 16));
  char v4 = *(unsigned char *)(a1 + 8);
  uint64_t v3 = (uint64_t *)(a1 + 8);
  if (v4)
  {
    return (unsigned char *)sub_188B4AC(v3);
  }
  return result;
}

unsigned char *sub_1732E48(uint64_t a1)
{
  uint64_t result = sub_18843A4((unsigned char *)(a1 + 16));
  char v4 = *(unsigned char *)(a1 + 8);
  uint64_t v3 = (uint64_t *)(a1 + 8);
  if (v4)
  {
    return (unsigned char *)sub_188B4AC(v3);
  }
  return result;
}

unsigned char *sub_1732E98(uint64_t a1)
{
  uint64_t result = sub_18843A4((unsigned char *)(a1 + 16));
  char v4 = *(unsigned char *)(a1 + 8);
  uint64_t v3 = (uint64_t *)(a1 + 8);
  if (v4)
  {
    return (unsigned char *)sub_188B4AC(v3);
  }
  return result;
}

unsigned char *sub_1732EE8(uint64_t a1)
{
  uint64_t result = sub_18843A4((unsigned char *)(a1 + 16));
  char v4 = *(unsigned char *)(a1 + 8);
  uint64_t v3 = (uint64_t *)(a1 + 8);
  if (v4)
  {
    return (unsigned char *)sub_188B4AC(v3);
  }
  return result;
}

unsigned char *sub_1732F38(uint64_t a1)
{
  uint64_t result = sub_18843A4((unsigned char *)(a1 + 16));
  char v4 = *(unsigned char *)(a1 + 8);
  uint64_t v3 = a1 + 8;
  *(unsigned char *)(v3 + 40) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  if (v4)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_1732F90(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v211 = a2;
  if (sub_11947B8((uint64_t)a3, &v211, a3[11].i32[1])) {
    return v211;
  }
  char v6 = (void *)(a1 + 8);
  while (2)
  {
    char v7 = v211 + 1;
    unsigned int v8 = *v211;
    if (*v211 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        char v7 = (char *)sub_188C180((uint64_t)v211, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        char v7 = v211 + 2;
      }
    }
    uint64_t v211 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 10) {
          goto LABEL_591;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        uint64_t v11 = *(void *)(a1 + 64);
        if (!v11)
        {
          uint64_t v12 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v12 = (void *)*v12;
          }
          uint64_t v11 = sub_17863A4((uint64_t)v12);
          *(void *)(a1 + 64) = v11;
          char v7 = v211;
        }
        char v13 = sub_1735118(a3, v11, (unsigned __int8 *)v7);
        goto LABEL_600;
      case 2u:
        if (v8 != 18) {
          goto LABEL_591;
        }
        *(_DWORD *)(a1 + 40) |= 2u;
        uint64_t v14 = *(void *)(a1 + 72);
        if (!v14)
        {
          char v15 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            char v15 = (void *)*v15;
          }
          uint64_t v14 = sub_1786788((uint64_t)v15);
          *(void *)(a1 + 72) = v14;
          char v7 = v211;
        }
        char v13 = sub_17351A8(a3, v14, (unsigned __int8 *)v7);
        goto LABEL_600;
      case 3u:
        if (v8 != 26) {
          goto LABEL_591;
        }
        *(_DWORD *)(a1 + 40) |= 4u;
        uint64_t v16 = *(void *)(a1 + 80);
        if (!v16)
        {
          char v17 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            char v17 = (void *)*v17;
          }
          uint64_t v16 = sub_1786884((uint64_t)v17);
          *(void *)(a1 + 80) = v16;
          char v7 = v211;
        }
        char v13 = sub_1735238(a3, v16, (unsigned __int8 *)v7);
        goto LABEL_600;
      case 4u:
        if (v8 != 34) {
          goto LABEL_591;
        }
        *(_DWORD *)(a1 + 40) |= 8u;
        uint64_t v18 = *(void *)(a1 + 88);
        if (!v18)
        {
          char v19 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            char v19 = (void *)*v19;
          }
          uint64_t v18 = sub_178693C((uint64_t)v19);
          *(void *)(a1 + 88) = v18;
          char v7 = v211;
        }
        char v13 = sub_17352C8(a3, v18, (unsigned __int8 *)v7);
        goto LABEL_600;
      case 5u:
        if (v8 != 42) {
          goto LABEL_591;
        }
        *(_DWORD *)(a1 + 40) |= 0x10u;
        uint64_t v20 = *(void *)(a1 + 96);
        if (!v20)
        {
          char v21 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            char v21 = (void *)*v21;
          }
          uint64_t v20 = sub_1786AFC((uint64_t)v21);
          *(void *)(a1 + 96) = v20;
          char v7 = v211;
        }
        char v13 = sub_1735358(a3, v20, (unsigned __int8 *)v7);
        goto LABEL_600;
      case 6u:
        if (v8 != 50) {
          goto LABEL_591;
        }
        *(_DWORD *)(a1 + 40) |= 0x20u;
        uint64_t v22 = *(void *)(a1 + 104);
        if (!v22)
        {
          char v23 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            char v23 = (void *)*v23;
          }
          uint64_t v22 = sub_17880D4((uint64_t)v23);
          *(void *)(a1 + 104) = v22;
          char v7 = v211;
        }
        char v13 = sub_17353E8(a3, v22, (unsigned __int8 *)v7);
        goto LABEL_600;
      case 7u:
        if (v8 != 58) {
          goto LABEL_591;
        }
        *(_DWORD *)(a1 + 40) |= 0x40u;
        uint64_t v24 = *(void *)(a1 + 112);
        if (!v24)
        {
          char v25 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            char v25 = (void *)*v25;
          }
          uint64_t v24 = sub_1788210((uint64_t)v25);
          *(void *)(a1 + 112) = v24;
          char v7 = v211;
        }
        char v13 = sub_1735478(a3, v24, (unsigned __int8 *)v7);
        goto LABEL_600;
      case 8u:
        if (v8 != 66) {
          goto LABEL_591;
        }
        *(_DWORD *)(a1 + 40) |= 0x80u;
        uint64_t v26 = *(void *)(a1 + 120);
        if (!v26)
        {
          char v27 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            char v27 = (void *)*v27;
          }
          uint64_t v26 = sub_178876C((uint64_t)v27);
          *(void *)(a1 + 120) = v26;
          char v7 = v211;
        }
        char v13 = sub_1735508(a3, v26, (unsigned __int8 *)v7);
        goto LABEL_600;
      case 9u:
        if (v8 != 74) {
          goto LABEL_591;
        }
        *(_DWORD *)(a1 + 40) |= 0x100u;
        uint64_t v28 = *(void *)(a1 + 128);
        if (!v28)
        {
          char v29 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            char v29 = (void *)*v29;
          }
          uint64_t v28 = sub_178862C((uint64_t)v29);
          *(void *)(a1 + 128) = v28;
          char v7 = v211;
        }
        char v13 = sub_1735598(a3, v28, (unsigned __int8 *)v7);
        goto LABEL_600;
      case 0xAu:
        if (v8 != 82) {
          goto LABEL_591;
        }
        *(_DWORD *)(a1 + 40) |= 0x200u;
        uint64_t v30 = *(void *)(a1 + 136);
        if (!v30)
        {
          char v31 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            char v31 = (void *)*v31;
          }
          uint64_t v30 = sub_1787874((uint64_t)v31);
          *(void *)(a1 + 136) = v30;
          char v7 = v211;
        }
        char v13 = sub_1735628(a3, v30, (unsigned __int8 *)v7);
        goto LABEL_600;
      case 0xBu:
        if (v8 != 90) {
          goto LABEL_591;
        }
        *(_DWORD *)(a1 + 40) |= 0x400u;
        uint64_t v32 = *(void *)(a1 + 144);
        if (!v32)
        {
          char v33 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            char v33 = (void *)*v33;
          }
          sub_17873A8((uint64_t)v33);
          uint64_t v32 = v34;
          *(void *)(a1 + 144) = v34;
          char v7 = v211;
        }
        char v13 = sub_17356B8(a3, v32, (unsigned __int8 *)v7);
        goto LABEL_600;
      case 0xCu:
        if (v8 != 98) {
          goto LABEL_591;
        }
        *(_DWORD *)(a1 + 40) |= 0x800u;
        uint64_t v35 = *(void *)(a1 + 152);
        if (!v35)
        {
          char v36 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            char v36 = (void *)*v36;
          }
          sub_17888DC((uint64_t)v36);
          uint64_t v35 = v37;
          *(void *)(a1 + 152) = v37;
          char v7 = v211;
        }
        char v13 = sub_1735748(a3, v35, (unsigned __int8 *)v7);
        goto LABEL_600;
      case 0xDu:
        if (v8 != 106) {
          goto LABEL_591;
        }
        *(_DWORD *)(a1 + 40) |= 0x1000u;
        uint64_t v38 = *(void *)(a1 + 160);
        if (!v38)
        {
          uint64_t v39 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v39 = (void *)*v39;
          }
          uint64_t v38 = sub_178898C((uint64_t)v39);
          *(void *)(a1 + 160) = v38;
          char v7 = v211;
        }
        char v13 = sub_17357D8(a3, v38, (unsigned __int8 *)v7);
        goto LABEL_600;
      case 0xEu:
        if (v8 != 114) {
          goto LABEL_591;
        }
        *(_DWORD *)(a1 + 40) |= 0x2000u;
        uint64_t v40 = *(void *)(a1 + 168);
        if (!v40)
        {
          uint64_t v41 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v41 = (void *)*v41;
          }
          uint64_t v40 = sub_1788A60((uint64_t)v41);
          *(void *)(a1 + 168) = v40;
          char v7 = v211;
        }
        char v13 = (char *)sub_1735868(a3, v40, (unsigned __int8 *)v7);
        goto LABEL_600;
      case 0xFu:
        if (v8 != 122) {
          goto LABEL_591;
        }
        *(_DWORD *)(a1 + 40) |= 0x4000u;
        uint64_t v42 = *(void *)(a1 + 176);
        if (!v42)
        {
          uint64_t v43 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v43 = (void *)*v43;
          }
          uint64_t v42 = sub_1788B74((uint64_t)v43);
          *(void *)(a1 + 176) = v42;
          char v7 = v211;
        }
        char v13 = sub_17358F8(a3, v42, (unsigned __int8 *)v7);
        goto LABEL_600;
      case 0x10u:
        if (v8 != 130) {
          goto LABEL_591;
        }
        *(_DWORD *)(a1 + 40) |= 0x8000u;
        uint64_t v44 = *(void *)(a1 + 184);
        if (!v44)
        {
          uint64_t v45 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v45 = (void *)*v45;
          }
          uint64_t v44 = sub_1788C2C((uint64_t)v45);
          *(void *)(a1 + 184) = v44;
          char v7 = v211;
        }
        char v13 = sub_1735988(a3, v44, (unsigned __int8 *)v7);
        goto LABEL_600;
      case 0x14u:
        if (v8 != 162) {
          goto LABEL_591;
        }
        *(_DWORD *)(a1 + 40) |= 0x10000u;
        uint64_t v46 = *(void *)(a1 + 192);
        if (!v46)
        {
          uint64_t v47 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v47 = (void *)*v47;
          }
          uint64_t v46 = sub_178798C((uint64_t)v47);
          *(void *)(a1 + 192) = v46;
          char v7 = v211;
        }
        char v13 = sub_1735A18(a3, v46, (unsigned __int8 *)v7);
        goto LABEL_600;
      case 0x15u:
        if (v8 != 170) {
          goto LABEL_591;
        }
        *(_DWORD *)(a1 + 40) |= 0x20000u;
        uint64_t v48 = *(void *)(a1 + 200);
        if (!v48)
        {
          uint64_t v49 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v49 = (void *)*v49;
          }
          uint64_t v48 = sub_1788DBC((uint64_t)v49);
          *(void *)(a1 + 200) = v48;
          char v7 = v211;
        }
        char v13 = sub_1735AA8(a3, v48, (unsigned __int8 *)v7);
        goto LABEL_600;
      case 0x16u:
        if (v8 != 178) {
          goto LABEL_591;
        }
        *(_DWORD *)(a1 + 40) |= 0x40000u;
        uint64_t v50 = *(void *)(a1 + 208);
        if (!v50)
        {
          uint64_t v51 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v51 = (void *)*v51;
          }
          uint64_t v50 = sub_1788E90((uint64_t)v51);
          *(void *)(a1 + 208) = v50;
          char v7 = v211;
        }
        char v13 = sub_1735B38(a3, v50, (unsigned __int8 *)v7);
        goto LABEL_600;
      case 0x17u:
        if (v8 != 186) {
          goto LABEL_591;
        }
        *(_DWORD *)(a1 + 40) |= 0x80000u;
        uint64_t v52 = *(void *)(a1 + 216);
        if (!v52)
        {
          uint64_t v53 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v53 = (void *)*v53;
          }
          uint64_t v52 = sub_17893D0((uint64_t)v53);
          *(void *)(a1 + 216) = v52;
          char v7 = v211;
        }
        char v13 = sub_1735BC8(a3, v52, (unsigned __int8 *)v7);
        goto LABEL_600;
      case 0x18u:
        if (v8 != 194) {
          goto LABEL_591;
        }
        *(_DWORD *)(a1 + 40) |= 0x100000u;
        uint64_t v54 = *(void *)(a1 + 224);
        if (!v54)
        {
          uint64_t v55 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v55 = (void *)*v55;
          }
          uint64_t v54 = sub_1787A60((uint64_t)v55);
          *(void *)(a1 + 224) = v54;
          char v7 = v211;
        }
        char v13 = sub_1735C58(a3, v54, (unsigned __int8 *)v7);
        goto LABEL_600;
      case 0x19u:
        if (v8 != 202) {
          goto LABEL_591;
        }
        *(_DWORD *)(a1 + 40) |= 0x200000u;
        uint64_t v56 = *(void *)(a1 + 232);
        if (!v56)
        {
          uint64_t v57 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v57 = (void *)*v57;
          }
          uint64_t v56 = sub_1788000((uint64_t)v57);
          *(void *)(a1 + 232) = v56;
          char v7 = v211;
        }
        char v13 = sub_1735CE8(a3, v56, (unsigned __int8 *)v7);
        goto LABEL_600;
      case 0x1Au:
        if (v8 != 210) {
          goto LABEL_591;
        }
        *(_DWORD *)(a1 + 40) |= 0x400000u;
        char v58 = *(void **)(a1 + 240);
        if (!v58)
        {
          uint64_t v59 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v59 = (void *)*v59;
          }
          char v58 = sub_1789594((uint64_t)v59);
          *(void *)(a1 + 240) = v58;
          char v7 = v211;
        }
        char v13 = (char *)sub_1735D78(a3, (uint64_t)v58, (unsigned __int8 *)v7);
        goto LABEL_600;
      case 0x1Bu:
        if (v8 != 218) {
          goto LABEL_591;
        }
        *(_DWORD *)(a1 + 40) |= 0x800000u;
        uint64_t v60 = *(void *)(a1 + 248);
        if (!v60)
        {
          uint64_t v61 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v61 = (void *)*v61;
          }
          uint64_t v60 = sub_1787668((uint64_t)v61);
          *(void *)(a1 + 248) = v60;
          char v7 = v211;
        }
        char v13 = sub_1735E08(a3, v60, (unsigned __int8 *)v7);
        goto LABEL_600;
      case 0x1Cu:
        if (v8 != 226) {
          goto LABEL_591;
        }
        *(_DWORD *)(a1 + 40) |= 0x1000000u;
        uint64_t v62 = *(void *)(a1 + 256);
        if (!v62)
        {
          uint64_t v63 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v63 = (void *)*v63;
          }
          uint64_t v62 = sub_17898BC((uint64_t)v63);
          *(void *)(a1 + 256) = v62;
          char v7 = v211;
        }
        char v13 = sub_1735E98(a3, v62, (unsigned __int8 *)v7);
        goto LABEL_600;
      case 0x1Du:
        if (v8 != 234) {
          goto LABEL_591;
        }
        *(_DWORD *)(a1 + 40) |= 0x2000000u;
        uint64_t v64 = *(void *)(a1 + 264);
        if (!v64)
        {
          uint64_t v65 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v65 = (void *)*v65;
          }
          uint64_t v64 = sub_1789A58((uint64_t)v65);
          *(void *)(a1 + 264) = v64;
          char v7 = v211;
        }
        char v13 = sub_1735F28(a3, v64, (unsigned __int8 *)v7);
        goto LABEL_600;
      case 0x1Eu:
        if (v8 != 242) {
          goto LABEL_591;
        }
        *(_DWORD *)(a1 + 40) |= 0x4000000u;
        uint64_t v66 = *(void *)(a1 + 272);
        if (!v66)
        {
          unsigned int v67 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            unsigned int v67 = (void *)*v67;
          }
          sub_178A050((uint64_t)v67);
          uint64_t v66 = v68;
          *(void *)(a1 + 272) = v68;
          char v7 = v211;
        }
        char v13 = sub_1735FB8(a3, v66, (unsigned __int8 *)v7);
        goto LABEL_600;
      case 0x1Fu:
        if (v8 != 250) {
          goto LABEL_591;
        }
        *(_DWORD *)(a1 + 40) |= 0x8000000u;
        uint64_t v69 = *(void *)(a1 + 280);
        if (!v69)
        {
          uint64_t v70 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v70 = (void *)*v70;
          }
          uint64_t v69 = sub_1786BB4((uint64_t)v70);
          *(void *)(a1 + 280) = v69;
          char v7 = v211;
        }
        char v13 = (char *)sub_1736048(a3, v69, (unsigned __int8 *)v7);
        goto LABEL_600;
      case 0x20u:
        if (v8 != 2) {
          goto LABEL_591;
        }
        *(_DWORD *)(a1 + 40) |= 0x10000000u;
        uint64_t v71 = *(void *)(a1 + 288);
        if (!v71)
        {
          uint64_t v72 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v72 = (void *)*v72;
          }
          uint64_t v71 = sub_1786D50((uint64_t)v72);
          *(void *)(a1 + 288) = v71;
          char v7 = v211;
        }
        char v13 = sub_17360D8(a3, v71, (unsigned __int8 *)v7);
        goto LABEL_600;
      case 0x21u:
        if (v8 != 10) {
          goto LABEL_591;
        }
        *(_DWORD *)(a1 + 40) |= 0x20000000u;
        uint64_t v73 = *(void *)(a1 + 296);
        if (!v73)
        {
          uint64_t v74 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v74 = (void *)*v74;
          }
          uint64_t v73 = sub_1786F0C((uint64_t)v74);
          *(void *)(a1 + 296) = v73;
          char v7 = v211;
        }
        char v13 = sub_1736168(a3, v73, (unsigned __int8 *)v7);
        goto LABEL_600;
      case 0x22u:
        if (v8 != 18) {
          goto LABEL_591;
        }
        *(_DWORD *)(a1 + 40) |= 0x40000000u;
        uint64_t v75 = *(void *)(a1 + 304);
        if (!v75)
        {
          uint64_t v76 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v76 = (void *)*v76;
          }
          uint64_t v75 = sub_17872D4((uint64_t)v76);
          *(void *)(a1 + 304) = v75;
          char v7 = v211;
        }
        char v13 = sub_17361F8(a3, v75, (unsigned __int8 *)v7);
        goto LABEL_600;
      case 0x24u:
        if (v8 != 34) {
          goto LABEL_591;
        }
        *(_DWORD *)(a1 + 40) |= 0x80000000;
        uint64_t v77 = *(void *)(a1 + 312);
        if (!v77)
        {
          uint64_t v78 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v78 = (void *)*v78;
          }
          uint64_t v77 = sub_178834C((uint64_t)v78);
          *(void *)(a1 + 312) = v77;
          char v7 = v211;
        }
        char v13 = sub_1736288(a3, v77, (unsigned __int8 *)v7);
        goto LABEL_600;
      case 0x25u:
        if (v8 != 42) {
          goto LABEL_591;
        }
        *(_DWORD *)(a1 + 44) |= 1u;
        uint64_t v79 = *(void *)(a1 + 320);
        if (!v79)
        {
          uint64_t v80 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v80 = (void *)*v80;
          }
          uint64_t v79 = sub_178A364((uint64_t)v80);
          *(void *)(a1 + 320) = v79;
          char v7 = v211;
        }
        char v13 = sub_1736318(a3, v79, (unsigned __int8 *)v7);
        goto LABEL_600;
      case 0x26u:
        if (v8 != 50) {
          goto LABEL_591;
        }
        *(_DWORD *)(a1 + 44) |= 2u;
        uint64_t v81 = *(void *)(a1 + 328);
        if (!v81)
        {
          uint64_t v82 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v82 = (void *)*v82;
          }
          uint64_t v81 = sub_178A480((uint64_t)v82);
          *(void *)(a1 + 328) = v81;
          char v7 = v211;
        }
        char v13 = sub_17363A8(a3, v81, (unsigned __int8 *)v7);
        goto LABEL_600;
      case 0x27u:
        if (v8 != 58) {
          goto LABEL_591;
        }
        *(_DWORD *)(a1 + 44) |= 4u;
        uint64_t v83 = *(void *)(a1 + 336);
        if (!v83)
        {
          uint64_t v84 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v84 = (void *)*v84;
          }
          uint64_t v83 = sub_178A554((uint64_t)v84);
          *(void *)(a1 + 336) = v83;
          char v7 = v211;
        }
        char v13 = sub_1736438(a3, v83, (unsigned __int8 *)v7);
        goto LABEL_600;
      case 0x28u:
        if (v8 != 66) {
          goto LABEL_591;
        }
        *(_DWORD *)(a1 + 44) |= 8u;
        uint64_t v85 = *(void *)(a1 + 344);
        if (!v85)
        {
          uint64_t v86 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v86 = (void *)*v86;
          }
          uint64_t v85 = sub_178A684((uint64_t)v86);
          *(void *)(a1 + 344) = v85;
          char v7 = v211;
        }
        char v13 = sub_17364C8(a3, v85, (unsigned __int8 *)v7);
        goto LABEL_600;
      case 0x29u:
        if (v8 != 74) {
          goto LABEL_591;
        }
        *(_DWORD *)(a1 + 44) |= 0x10u;
        uint64_t v87 = *(void *)(a1 + 352);
        if (!v87)
        {
          uint64_t v88 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v88 = (void *)*v88;
          }
          uint64_t v87 = sub_1791D4C((uint64_t)v88);
          *(void *)(a1 + 352) = v87;
          char v7 = v211;
        }
        char v13 = sub_1736558(a3, v87, (unsigned __int8 *)v7);
        goto LABEL_600;
      case 0x2Au:
        if (v8 != 82) {
          goto LABEL_591;
        }
        *(_DWORD *)(a1 + 44) |= 0x20u;
        uint64_t v89 = *(void *)(a1 + 360);
        if (!v89)
        {
          uint64_t v90 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v90 = (void *)*v90;
          }
          uint64_t v89 = sub_178A79C((uint64_t)v90);
          *(void *)(a1 + 360) = v89;
          char v7 = v211;
        }
        char v13 = sub_17365E8(a3, v89, (unsigned __int8 *)v7);
        goto LABEL_600;
      case 0x2Bu:
        if (v8 != 90) {
          goto LABEL_591;
        }
        *(_DWORD *)(a1 + 44) |= 0x40u;
        uint64_t v91 = *(void *)(a1 + 368);
        if (!v91)
        {
          uint64_t v92 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v92 = (void *)*v92;
          }
          uint64_t v91 = sub_178ABC4((uint64_t)v92);
          *(void *)(a1 + 368) = v91;
          char v7 = v211;
        }
        char v13 = sub_1736678(a3, v91, (unsigned __int8 *)v7);
        goto LABEL_600;
      case 0x2Cu:
        if (v8 != 98) {
          goto LABEL_591;
        }
        *(_DWORD *)(a1 + 44) |= 0x80u;
        uint64_t v93 = *(void *)(a1 + 376);
        if (!v93)
        {
          uint64_t v94 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v94 = (void *)*v94;
          }
          uint64_t v93 = sub_178ACB4((uint64_t)v94);
          *(void *)(a1 + 376) = v93;
          char v7 = v211;
        }
        char v13 = sub_1736708(a3, v93, (unsigned __int8 *)v7);
        goto LABEL_600;
      case 0x2Du:
        if (v8 != 106) {
          goto LABEL_591;
        }
        *(_DWORD *)(a1 + 44) |= 0x100u;
        uint64_t v95 = *(void *)(a1 + 384);
        if (!v95)
        {
          uint64_t v96 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v96 = (void *)*v96;
          }
          uint64_t v95 = sub_178ADB4((uint64_t)v96);
          *(void *)(a1 + 384) = v95;
          char v7 = v211;
        }
        char v13 = sub_1736798(a3, v95, (unsigned __int8 *)v7);
        goto LABEL_600;
      case 0x2Eu:
        if (v8 != 114) {
          goto LABEL_591;
        }
        *(_DWORD *)(a1 + 44) |= 0x200u;
        uint64_t v97 = *(void *)(a1 + 392);
        if (!v97)
        {
          uint64_t v98 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v98 = (void *)*v98;
          }
          uint64_t v97 = sub_178A8B4((uint64_t)v98);
          *(void *)(a1 + 392) = v97;
          char v7 = v211;
        }
        char v13 = sub_1736828(a3, v97, (unsigned __int8 *)v7);
        goto LABEL_600;
      case 0x2Fu:
        if (v8 != 122) {
          goto LABEL_591;
        }
        *(_DWORD *)(a1 + 44) |= 0x400u;
        uint64_t v99 = *(void *)(a1 + 400);
        if (!v99)
        {
          uint64_t v100 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v100 = (void *)*v100;
          }
          uint64_t v99 = sub_178A9A8((uint64_t)v100);
          *(void *)(a1 + 400) = v99;
          char v7 = v211;
        }
        char v13 = sub_17368B8(a3, v99, (unsigned __int8 *)v7);
        goto LABEL_600;
      case 0x30u:
        if (v8 != 130) {
          goto LABEL_591;
        }
        *(_DWORD *)(a1 + 44) |= 0x800u;
        uint64_t v101 = *(void *)(a1 + 408);
        if (!v101)
        {
          uint64_t v102 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v102 = (void *)*v102;
          }
          uint64_t v101 = sub_185F460((uint64_t)v102);
          *(void *)(a1 + 408) = v101;
          char v7 = v211;
        }
        char v13 = sub_1736948(a3, v101, (unsigned __int8 *)v7);
        goto LABEL_600;
      case 0x31u:
        if (v8 != 138) {
          goto LABEL_591;
        }
        *(_DWORD *)(a1 + 44) |= 0x1000u;
        uint64_t v103 = *(void *)(a1 + 416);
        if (!v103)
        {
          uint64_t v104 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v104 = (void *)*v104;
          }
          uint64_t v103 = sub_178AAC4((uint64_t)v104);
          *(void *)(a1 + 416) = v103;
          char v7 = v211;
        }
        char v13 = sub_17369D8(a3, v103, (unsigned __int8 *)v7);
        goto LABEL_600;
      case 0x32u:
        if (v8 != 146) {
          goto LABEL_591;
        }
        *(_DWORD *)(a1 + 44) |= 0x2000u;
        uint64_t v105 = *(void *)(a1 + 424);
        if (!v105)
        {
          uint64_t v106 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v106 = (void *)*v106;
          }
          uint64_t v105 = sub_178A1AC((uint64_t)v106);
          *(void *)(a1 + 424) = v105;
          char v7 = v211;
        }
        char v13 = sub_1736A68(a3, v105, (unsigned __int8 *)v7);
        goto LABEL_600;
      case 0x33u:
        if (v8 != 154) {
          goto LABEL_591;
        }
        *(_DWORD *)(a1 + 44) |= 0x4000u;
        uint64_t v107 = *(void *)(a1 + 432);
        if (!v107)
        {
          uint64_t v108 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v108 = (void *)*v108;
          }
          uint64_t v107 = sub_178A284((uint64_t)v108);
          *(void *)(a1 + 432) = v107;
          char v7 = v211;
        }
        char v13 = sub_1736AF8(a3, v107, (unsigned __int8 *)v7);
        goto LABEL_600;
      case 0x34u:
        if (v8 != 162) {
          goto LABEL_591;
        }
        *(_DWORD *)(a1 + 44) |= 0x8000u;
        uint64_t v109 = *(void *)(a1 + 440);
        if (!v109)
        {
          uint64_t v110 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v110 = (void *)*v110;
          }
          uint64_t v109 = sub_1788824((uint64_t)v110);
          *(void *)(a1 + 440) = v109;
          char v7 = v211;
        }
        char v13 = sub_1736B88(a3, v109, (unsigned __int8 *)v7);
        goto LABEL_600;
      case 0x35u:
        if (v8 != 170) {
          goto LABEL_591;
        }
        *(_DWORD *)(a1 + 44) |= 0x10000u;
        uint64_t v111 = *(void *)(a1 + 448);
        if (!v111)
        {
          v112 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            v112 = (void *)*v112;
          }
          uint64_t v111 = sub_1788404((uint64_t)v112);
          *(void *)(a1 + 448) = v111;
          char v7 = v211;
        }
        char v13 = sub_1736C18(a3, v111, (unsigned __int8 *)v7);
        goto LABEL_600;
      case 0x36u:
        if (v8 != 178) {
          goto LABEL_591;
        }
        *(_DWORD *)(a1 + 44) |= 0x20000u;
        uint64_t v113 = *(void *)(a1 + 456);
        if (!v113)
        {
          uint64_t v114 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v114 = (void *)*v114;
          }
          uint64_t v113 = sub_12BBA88((uint64_t)v114);
          *(void *)(a1 + 456) = v113;
          char v7 = v211;
        }
        char v13 = sub_1736CA8(a3, v113, (unsigned __int8 *)v7);
        goto LABEL_600;
      case 0x37u:
        if (v8 != 186) {
          goto LABEL_591;
        }
        *(_DWORD *)(a1 + 44) |= 0x40000u;
        uint64_t v115 = *(void *)(a1 + 464);
        if (!v115)
        {
          uint64_t v116 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v116 = (void *)*v116;
          }
          uint64_t v115 = sub_1854D20((uint64_t)v116);
          *(void *)(a1 + 464) = v115;
          char v7 = v211;
        }
        char v13 = sub_1736D38(a3, v115, (unsigned __int8 *)v7);
        goto LABEL_600;
      case 0x38u:
        if (v8 != 194) {
          goto LABEL_591;
        }
        *(_DWORD *)(a1 + 44) |= 0x80000u;
        uint64_t v117 = *(void *)(a1 + 472);
        if (!v117)
        {
          uint64_t v118 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v118 = (void *)*v118;
          }
          uint64_t v117 = sub_178AE2C((uint64_t)v118);
          *(void *)(a1 + 472) = v117;
          char v7 = v211;
        }
        char v13 = sub_1736DC8(a3, v117, (unsigned __int8 *)v7);
        goto LABEL_600;
      case 0x39u:
        if (v8 != 202) {
          goto LABEL_591;
        }
        *(_DWORD *)(a1 + 44) |= 0x100000u;
        uint64_t v119 = *(void *)(a1 + 480);
        if (!v119)
        {
          unsigned int v120 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            unsigned int v120 = (void *)*v120;
          }
          uint64_t v119 = sub_17866D0((uint64_t)v120);
          *(void *)(a1 + 480) = v119;
          char v7 = v211;
        }
        char v13 = sub_1736E58(a3, v119, (unsigned __int8 *)v7);
        goto LABEL_600;
      case 0x3Au:
        if (v8 != 210) {
          goto LABEL_591;
        }
        *(_DWORD *)(a1 + 44) |= 0x200000u;
        uint64_t v121 = *(void *)(a1 + 488);
        if (!v121)
        {
          uint64_t v122 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v122 = (void *)*v122;
          }
          uint64_t v121 = sub_178B14C((uint64_t)v122);
          *(void *)(a1 + 488) = v121;
          char v7 = v211;
        }
        char v13 = sub_1736EE8(a3, v121, (unsigned __int8 *)v7);
        goto LABEL_600;
      case 0x3Bu:
        if (v8 != 218) {
          goto LABEL_591;
        }
        *(_DWORD *)(a1 + 44) |= 0x400000u;
        uint64_t v123 = *(void *)(a1 + 496);
        if (!v123)
        {
          v124 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            v124 = (void *)*v124;
          }
          uint64_t v123 = sub_1854D98((uint64_t)v124);
          *(void *)(a1 + 496) = v123;
          char v7 = v211;
        }
        char v13 = sub_1736F78(a3, v123, (unsigned __int8 *)v7);
        goto LABEL_600;
      case 0x3Cu:
        if (v8 != 226) {
          goto LABEL_591;
        }
        *(_DWORD *)(a1 + 44) |= 0x800000u;
        uint64_t v125 = *(void *)(a1 + 504);
        if (!v125)
        {
          uint64_t v126 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v126 = (void *)*v126;
          }
          uint64_t v125 = sub_178E50C((uint64_t)v126);
          *(void *)(a1 + 504) = v125;
          char v7 = v211;
        }
        char v13 = sub_1737008(a3, v125, (unsigned __int8 *)v7);
        goto LABEL_600;
      case 0x3Du:
        if (v8 != 234) {
          goto LABEL_591;
        }
        *(_DWORD *)(a1 + 44) |= 0x1000000u;
        uint64_t v127 = *(void *)(a1 + 512);
        if (!v127)
        {
          uint64_t v128 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v128 = (void *)*v128;
          }
          uint64_t v127 = sub_178E568((uint64_t)v128);
          *(void *)(a1 + 512) = v127;
          char v7 = v211;
        }
        char v13 = sub_1737098(a3, v127, (unsigned __int8 *)v7);
        goto LABEL_600;
      case 0x3Eu:
        if (v8 != 242) {
          goto LABEL_591;
        }
        *(_DWORD *)(a1 + 44) |= 0x2000000u;
        uint64_t v129 = *(void *)(a1 + 520);
        if (!v129)
        {
          uint64_t v130 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v130 = (void *)*v130;
          }
          uint64_t v129 = sub_178E5C4((uint64_t)v130);
          *(void *)(a1 + 520) = v129;
          char v7 = v211;
        }
        char v13 = sub_1737128(a3, v129, (unsigned __int8 *)v7);
        goto LABEL_600;
      case 0x3Fu:
        if (v8 != 250) {
          goto LABEL_591;
        }
        *(_DWORD *)(a1 + 44) |= 0x4000000u;
        uint64_t v131 = *(void *)(a1 + 528);
        if (!v131)
        {
          unsigned int v132 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            unsigned int v132 = (void *)*v132;
          }
          uint64_t v131 = sub_178E620((uint64_t)v132);
          *(void *)(a1 + 528) = v131;
          char v7 = v211;
        }
        char v13 = sub_17371B8(a3, v131, (unsigned __int8 *)v7);
        goto LABEL_600;
      case 0x40u:
        if (v8 != 2) {
          goto LABEL_591;
        }
        *(_DWORD *)(a1 + 44) |= 0x8000000u;
        uint64_t v133 = *(void *)(a1 + 536);
        if (!v133)
        {
          uint64_t v134 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v134 = (void *)*v134;
          }
          uint64_t v133 = sub_178E67C((uint64_t)v134);
          *(void *)(a1 + 536) = v133;
          char v7 = v211;
        }
        char v13 = sub_1737248(a3, v133, (unsigned __int8 *)v7);
        goto LABEL_600;
      case 0x41u:
        if (v8 != 10) {
          goto LABEL_591;
        }
        *(_DWORD *)(a1 + 44) |= 0x10000000u;
        uint64_t v135 = *(void *)(a1 + 544);
        if (!v135)
        {
          uint64_t v136 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v136 = (void *)*v136;
          }
          uint64_t v135 = sub_178E6D8((uint64_t)v136);
          *(void *)(a1 + 544) = v135;
          char v7 = v211;
        }
        char v13 = sub_17372D8(a3, v135, (unsigned __int8 *)v7);
        goto LABEL_600;
      case 0x42u:
        if (v8 != 18) {
          goto LABEL_591;
        }
        *(_DWORD *)(a1 + 44) |= 0x20000000u;
        uint64_t v137 = *(void **)(a1 + 552);
        if (!v137)
        {
          unsigned int v138 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            unsigned int v138 = (void *)*v138;
          }
          uint64_t v137 = sub_178E88C((uint64_t)v138);
          *(void *)(a1 + 552) = v137;
          char v7 = v211;
        }
        char v13 = sub_1737368(a3, (uint64_t)v137, (unsigned __int8 *)v7);
        goto LABEL_600;
      case 0x43u:
        if (v8 != 26) {
          goto LABEL_591;
        }
        *(_DWORD *)(a1 + 44) |= 0x40000000u;
        uint64_t v139 = *(void *)(a1 + 560);
        if (!v139)
        {
          uint64_t v140 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v140 = (void *)*v140;
          }
          uint64_t v139 = sub_178E8E8((uint64_t)v140);
          *(void *)(a1 + 560) = v139;
          char v7 = v211;
        }
        char v13 = sub_17373F8(a3, v139, (unsigned __int8 *)v7);
        goto LABEL_600;
      case 0x44u:
        if (v8 != 34) {
          goto LABEL_591;
        }
        *(_DWORD *)(a1 + 44) |= 0x80000000;
        uint64_t v141 = *(void *)(a1 + 568);
        if (!v141)
        {
          uint64_t v142 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v142 = (void *)*v142;
          }
          uint64_t v141 = sub_178E944((uint64_t)v142);
          *(void *)(a1 + 568) = v141;
          char v7 = v211;
        }
        char v13 = sub_1737488(a3, v141, (unsigned __int8 *)v7);
        goto LABEL_600;
      case 0x45u:
        if (v8 != 42) {
          goto LABEL_591;
        }
        *(_DWORD *)(a1 + 48) |= 1u;
        uint64_t v143 = *(void *)(a1 + 576);
        if (!v143)
        {
          unsigned int v144 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            unsigned int v144 = (void *)*v144;
          }
          uint64_t v143 = sub_178E9A0((uint64_t)v144);
          *(void *)(a1 + 576) = v143;
          char v7 = v211;
        }
        char v13 = sub_1737518(a3, v143, (unsigned __int8 *)v7);
        goto LABEL_600;
      case 0x46u:
        if (v8 != 50) {
          goto LABEL_591;
        }
        *(_DWORD *)(a1 + 48) |= 2u;
        uint64_t v145 = *(void *)(a1 + 584);
        if (!v145)
        {
          uint64_t v146 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v146 = (void *)*v146;
          }
          uint64_t v145 = sub_178B344((uint64_t)v146);
          *(void *)(a1 + 584) = v145;
          char v7 = v211;
        }
        char v13 = sub_17375A8(a3, v145, (unsigned __int8 *)v7);
        goto LABEL_600;
      case 0x47u:
        if (v8 != 58) {
          goto LABEL_591;
        }
        *(_DWORD *)(a1 + 48) |= 4u;
        uint64_t v147 = *(void *)(a1 + 592);
        if (!v147)
        {
          v148 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            v148 = (void *)*v148;
          }
          uint64_t v147 = sub_178E9FC((uint64_t)v148);
          *(void *)(a1 + 592) = v147;
          char v7 = v211;
        }
        char v13 = sub_1737638(a3, v147, (unsigned __int8 *)v7);
        goto LABEL_600;
      case 0x49u:
        if (v8 != 74) {
          goto LABEL_591;
        }
        *(_DWORD *)(a1 + 48) |= 8u;
        uint64_t v149 = *(void *)(a1 + 600);
        if (!v149)
        {
          uint64_t v150 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v150 = (void *)*v150;
          }
          uint64_t v149 = sub_178ECD0((uint64_t)v150);
          *(void *)(a1 + 600) = v149;
          char v7 = v211;
        }
        char v13 = sub_17376C8(a3, v149, (unsigned __int8 *)v7);
        goto LABEL_600;
      case 0x4Au:
        if (v8 != 82) {
          goto LABEL_591;
        }
        *(_DWORD *)(a1 + 48) |= 0x10u;
        uint64_t v151 = *(void *)(a1 + 608);
        if (!v151)
        {
          uint64_t v152 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v152 = (void *)*v152;
          }
          uint64_t v151 = sub_178E734((uint64_t)v152);
          *(void *)(a1 + 608) = v151;
          char v7 = v211;
        }
        char v13 = sub_1737758(a3, v151, (unsigned __int8 *)v7);
        goto LABEL_600;
      case 0x4Cu:
        if (v8 != 98) {
          goto LABEL_591;
        }
        *(_DWORD *)(a1 + 48) |= 0x20u;
        uint64_t v153 = *(void *)(a1 + 616);
        if (!v153)
        {
          uint64_t v154 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v154 = (void *)*v154;
          }
          uint64_t v153 = sub_178EA58((uint64_t)v154);
          *(void *)(a1 + 616) = v153;
          char v7 = v211;
        }
        char v13 = sub_17377E8(a3, v153, (unsigned __int8 *)v7);
        goto LABEL_600;
      case 0x4Du:
        if (v8 != 106) {
          goto LABEL_591;
        }
        *(_DWORD *)(a1 + 48) |= 0x40u;
        uint64_t v155 = *(void *)(a1 + 624);
        if (!v155)
        {
          unsigned int v156 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            unsigned int v156 = (void *)*v156;
          }
          uint64_t v155 = sub_178EC58((uint64_t)v156);
          *(void *)(a1 + 624) = v155;
          char v7 = v211;
        }
        char v13 = sub_1737878(a3, v155, (unsigned __int8 *)v7);
        goto LABEL_600;
      case 0x4Eu:
        if (v8 != 114) {
          goto LABEL_591;
        }
        *(_DWORD *)(a1 + 48) |= 0x80u;
        uint64_t v157 = *(void *)(a1 + 632);
        if (!v157)
        {
          uint64_t v158 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v158 = (void *)*v158;
          }
          uint64_t v157 = sub_1788BD0((uint64_t)v158);
          *(void *)(a1 + 632) = v157;
          char v7 = v211;
        }
        char v13 = sub_1737908(a3, v157, (unsigned __int8 *)v7);
        goto LABEL_600;
      case 0x51u:
        if (v8 != 138) {
          goto LABEL_591;
        }
        *(_DWORD *)(a1 + 48) |= 0x100u;
        uint64_t v159 = *(void *)(a1 + 640);
        if (!v159)
        {
          uint64_t v160 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v160 = (void *)*v160;
          }
          uint64_t v159 = sub_1854E10((uint64_t)v160);
          *(void *)(a1 + 640) = v159;
          char v7 = v211;
        }
        char v13 = sub_1737998(a3, v159, (unsigned __int8 *)v7);
        goto LABEL_600;
      case 0x52u:
        if (v8 != 146) {
          goto LABEL_591;
        }
        *(_DWORD *)(a1 + 48) |= 0x200u;
        uint64_t v161 = *(void *)(a1 + 648);
        if (!v161)
        {
          unsigned int v162 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            unsigned int v162 = (void *)*v162;
          }
          uint64_t v161 = sub_178E7D4((uint64_t)v162);
          *(void *)(a1 + 648) = v161;
          char v7 = v211;
        }
        char v13 = sub_1737A28(a3, v161, (unsigned __int8 *)v7);
        goto LABEL_600;
      case 0x53u:
        if (v8 != 154) {
          goto LABEL_591;
        }
        *(_DWORD *)(a1 + 48) |= 0x400u;
        uint64_t v163 = *(void *)(a1 + 656);
        if (!v163)
        {
          uint64_t v164 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v164 = (void *)*v164;
          }
          uint64_t v163 = sub_178C73C((uint64_t)v164);
          *(void *)(a1 + 656) = v163;
          char v7 = v211;
        }
        char v13 = sub_1737AB8(a3, v163, (unsigned __int8 *)v7);
        goto LABEL_600;
      case 0x54u:
        if (v8 != 162) {
          goto LABEL_591;
        }
        *(_DWORD *)(a1 + 48) |= 0x800u;
        uint64_t v165 = *(void *)(a1 + 664);
        if (!v165)
        {
          uint64_t v166 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v166 = (void *)*v166;
          }
          uint64_t v165 = sub_1789638((uint64_t)v166);
          *(void *)(a1 + 664) = v165;
          char v7 = v211;
        }
        char v13 = (char *)sub_1737B48(a3, v165, (unsigned __int8 *)v7);
        goto LABEL_600;
      case 0x55u:
        if (v8 != 170) {
          goto LABEL_591;
        }
        *(_DWORD *)(a1 + 48) |= 0x1000u;
        uint64_t v167 = *(void *)(a1 + 672);
        if (!v167)
        {
          unsigned int v168 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            unsigned int v168 = (void *)*v168;
          }
          uint64_t v167 = sub_178E830((uint64_t)v168);
          *(void *)(a1 + 672) = v167;
          char v7 = v211;
        }
        char v13 = sub_1737BD8(a3, v167, (unsigned __int8 *)v7);
        goto LABEL_600;
      case 0x56u:
        if (v8 != 178) {
          goto LABEL_591;
        }
        *(_DWORD *)(a1 + 48) |= 0x2000u;
        uint64_t v169 = *(void *)(a1 + 680);
        if (!v169)
        {
          uint64_t v170 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v170 = (void *)*v170;
          }
          uint64_t v169 = sub_1788F64((uint64_t)v170);
          *(void *)(a1 + 680) = v169;
          char v7 = v211;
        }
        char v13 = sub_1737C68(a3, v169, (unsigned __int8 *)v7);
        goto LABEL_600;
      case 0x57u:
        if (v8 != 186) {
          goto LABEL_591;
        }
        *(_DWORD *)(a1 + 48) |= 0x4000u;
        uint64_t v171 = *(void *)(a1 + 688);
        if (!v171)
        {
          uint64_t v172 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v172 = (void *)*v172;
          }
          uint64_t v171 = sub_17891AC((uint64_t)v172);
          *(void *)(a1 + 688) = v171;
          char v7 = v211;
        }
        char v13 = sub_1737CF8(a3, v171, (unsigned __int8 *)v7);
        goto LABEL_600;
      case 0x58u:
        if (v8 != 194) {
          goto LABEL_591;
        }
        *(_DWORD *)(a1 + 48) |= 0x8000u;
        uint64_t v173 = *(void *)(a1 + 696);
        if (!v173)
        {
          unsigned int v174 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            unsigned int v174 = (void *)*v174;
          }
          uint64_t v173 = sub_1789280((uint64_t)v174);
          *(void *)(a1 + 696) = v173;
          char v7 = v211;
        }
        char v13 = sub_1737D88(a3, v173, (unsigned __int8 *)v7);
        goto LABEL_600;
      case 0x59u:
        if (v8 != 202) {
          goto LABEL_591;
        }
        *(_DWORD *)(a1 + 48) |= 0x10000u;
        uint64_t v175 = *(void *)(a1 + 704);
        if (!v175)
        {
          uint64_t v176 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v176 = (void *)*v176;
          }
          uint64_t v175 = sub_178C5B0((uint64_t)v176);
          *(void *)(a1 + 704) = v175;
          char v7 = v211;
        }
        char v13 = sub_1737E18(a3, v175, (unsigned __int8 *)v7);
        goto LABEL_600;
      case 0x5Au:
        if (v8 != 210) {
          goto LABEL_591;
        }
        *(_DWORD *)(a1 + 48) |= 0x20000u;
        uint64_t v177 = *(void *)(a1 + 712);
        if (!v177)
        {
          uint64_t v178 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v178 = (void *)*v178;
          }
          uint64_t v177 = sub_178EEC8((uint64_t)v178);
          *(void *)(a1 + 712) = v177;
          char v7 = v211;
        }
        char v13 = sub_1737EA8(a3, v177, (unsigned __int8 *)v7);
        goto LABEL_600;
      case 0x5Bu:
        if (v8 != 218) {
          goto LABEL_591;
        }
        *(_DWORD *)(a1 + 48) |= 0x40000u;
        uint64_t v179 = *(void *)(a1 + 720);
        if (!v179)
        {
          unsigned int v180 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            unsigned int v180 = (void *)*v180;
          }
          uint64_t v179 = sub_1787DE0((uint64_t)v180);
          *(void *)(a1 + 720) = v179;
          char v7 = v211;
        }
        char v13 = sub_1737F38(a3, v179, (unsigned __int8 *)v7);
        goto LABEL_600;
      case 0x5Du:
        if (v8 != 234) {
          goto LABEL_591;
        }
        *(_DWORD *)(a1 + 48) |= 0x80000u;
        uint64_t v181 = *(void *)(a1 + 728);
        if (!v181)
        {
          uint64_t v182 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v182 = (void *)*v182;
          }
          uint64_t v181 = sub_1789038((uint64_t)v182);
          *(void *)(a1 + 728) = v181;
          char v7 = v211;
        }
        char v13 = sub_1737FC8(a3, v181, (unsigned __int8 *)v7);
        goto LABEL_600;
      case 0x5Eu:
        if (v8 != 242) {
          goto LABEL_591;
        }
        *(_DWORD *)(a1 + 48) |= 0x100000u;
        uint64_t v183 = *(void *)(a1 + 736);
        if (!v183)
        {
          v184 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            v184 = (void *)*v184;
          }
          uint64_t v183 = sub_178DEAC((uint64_t)v184);
          *(void *)(a1 + 736) = v183;
          char v7 = v211;
        }
        char v13 = sub_1738058(a3, v183, (unsigned __int8 *)v7);
        goto LABEL_600;
      case 0x5Fu:
        if (v8 != 250) {
          goto LABEL_591;
        }
        *(_DWORD *)(a1 + 48) |= 0x200000u;
        uint64_t v185 = *(void *)(a1 + 744);
        if (!v185)
        {
          uint64_t v186 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v186 = (void *)*v186;
          }
          uint64_t v185 = sub_178F040((uint64_t)v186);
          *(void *)(a1 + 744) = v185;
          char v7 = v211;
        }
        char v13 = sub_17380E8(a3, v185, (unsigned __int8 *)v7);
        goto LABEL_600;
      case 0x60u:
        if (v8 != 2) {
          goto LABEL_591;
        }
        *(_DWORD *)(a1 + 48) |= 0x400000u;
        uint64_t v187 = *(void *)(a1 + 752);
        if (!v187)
        {
          uint64_t v188 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v188 = (void *)*v188;
          }
          uint64_t v187 = sub_1787EB4((uint64_t)v188);
          *(void *)(a1 + 752) = v187;
          char v7 = v211;
        }
        char v13 = sub_1738178(a3, v187, (unsigned __int8 *)v7);
        goto LABEL_600;
      case 0x61u:
        if (v8 != 10) {
          goto LABEL_591;
        }
        *(_DWORD *)(a1 + 48) |= 0x800000u;
        uint64_t v189 = *(void *)(a1 + 760);
        if (!v189)
        {
          uint64_t v190 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v190 = (void *)*v190;
          }
          uint64_t v189 = sub_1787F2C((uint64_t)v190);
          *(void *)(a1 + 760) = v189;
          char v7 = v211;
        }
        char v13 = sub_1738208(a3, v189, (unsigned __int8 *)v7);
        goto LABEL_600;
      case 0x62u:
        if (v8 != 18) {
          goto LABEL_591;
        }
        *(_DWORD *)(a1 + 48) |= 0x1000000u;
        uint64_t v191 = *(void *)(a1 + 768);
        if (!v191)
        {
          unsigned int v192 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            unsigned int v192 = (void *)*v192;
          }
          uint64_t v191 = sub_178C084((uint64_t)v192);
          *(void *)(a1 + 768) = v191;
          char v7 = v211;
        }
        char v13 = sub_1738298(a3, v191, (unsigned __int8 *)v7);
        goto LABEL_600;
      case 0x64u:
        if (v8 != 34) {
          goto LABEL_591;
        }
        *(_DWORD *)(a1 + 48) |= 0x2000000u;
        uint64_t v193 = *(void *)(a1 + 776);
        if (!v193)
        {
          uint64_t v194 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v194 = (void *)*v194;
          }
          uint64_t v193 = sub_178BA54((uint64_t)v194);
          *(void *)(a1 + 776) = v193;
          char v7 = v211;
        }
        char v13 = sub_1738328(a3, v193, (unsigned __int8 *)v7);
        goto LABEL_600;
      case 0x65u:
        if (v8 != 42) {
          goto LABEL_591;
        }
        *(_DWORD *)(a1 + 48) |= 0x4000000u;
        uint64_t v195 = *(void *)(a1 + 784);
        if (!v195)
        {
          uint64_t v196 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v196 = (void *)*v196;
          }
          uint64_t v195 = sub_178BE70((uint64_t)v196);
          *(void *)(a1 + 784) = v195;
          char v7 = v211;
        }
        char v13 = sub_17383B8(a3, v195, (unsigned __int8 *)v7);
        goto LABEL_600;
      case 0x66u:
        if (v8 != 50) {
          goto LABEL_591;
        }
        *(_DWORD *)(a1 + 48) |= 0x8000000u;
        uint64_t v197 = *(void *)(a1 + 792);
        if (!v197)
        {
          unsigned int v198 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            unsigned int v198 = (void *)*v198;
          }
          uint64_t v197 = sub_17896F0((uint64_t)v198);
          *(void *)(a1 + 792) = v197;
          char v7 = v211;
        }
        char v13 = sub_1738448(a3, v197, (unsigned __int8 *)v7);
        goto LABEL_600;
      case 0x67u:
        if (v8 != 58) {
          goto LABEL_591;
        }
        *(_DWORD *)(a1 + 48) |= 0x10000000u;
        uint64_t v199 = *(void *)(a1 + 800);
        if (!v199)
        {
          int v200 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            int v200 = (void *)*v200;
          }
          uint64_t v199 = sub_178BB0C((uint64_t)v200);
          *(void *)(a1 + 800) = v199;
          char v7 = v211;
        }
        char v13 = sub_17384D8(a3, v199, (unsigned __int8 *)v7);
        goto LABEL_600;
      case 0x68u:
        if (v8 != 66) {
          goto LABEL_591;
        }
        *(_DWORD *)(a1 + 48) |= 0x20000000u;
        uint64_t v201 = *(void *)(a1 + 808);
        if (!v201)
        {
          uint64_t v202 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v202 = (void *)*v202;
          }
          uint64_t v201 = sub_178BBC4((uint64_t)v202);
          *(void *)(a1 + 808) = v201;
          char v7 = v211;
        }
        char v13 = sub_1738568(a3, v201, (unsigned __int8 *)v7);
        goto LABEL_600;
      case 0x69u:
        if (v8 != 74) {
          goto LABEL_591;
        }
        *(_DWORD *)(a1 + 48) |= 0x40000000u;
        uint64_t v203 = *(void *)(a1 + 816);
        if (!v203)
        {
          uint64_t v204 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v204 = (void *)*v204;
          }
          uint64_t v203 = sub_178BC7C((uint64_t)v204);
          *(void *)(a1 + 816) = v203;
          char v7 = v211;
        }
        char v13 = sub_17385F8(a3, v203, (unsigned __int8 *)v7);
        goto LABEL_600;
      case 0x6Au:
        if (v8 != 82) {
          goto LABEL_591;
        }
        *(_DWORD *)(a1 + 48) |= 0x80000000;
        uint64_t v205 = *(void *)(a1 + 824);
        if (!v205)
        {
          uint64_t v206 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v206 = (void *)*v206;
          }
          uint64_t v205 = sub_178BD34((uint64_t)v206);
          *(void *)(a1 + 824) = v205;
          char v7 = v211;
        }
        char v13 = sub_1738688(a3, v205, (unsigned __int8 *)v7);
        goto LABEL_600;
      case 0x6Bu:
        if (v8 != 90) {
          goto LABEL_591;
        }
        *(_DWORD *)(a1 + 52) |= 1u;
        uint64_t v207 = *(void *)(a1 + 832);
        if (!v207)
        {
          unsigned int v208 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            unsigned int v208 = (void *)*v208;
          }
          uint64_t v207 = sub_178B99C((uint64_t)v208);
          *(void *)(a1 + 832) = v207;
          char v7 = v211;
        }
        char v13 = sub_1738718(a3, v207, (unsigned __int8 *)v7);
        goto LABEL_600;
      default:
LABEL_591:
        if (v8) {
          BOOL v209 = (v8 & 7) == 4;
        }
        else {
          BOOL v209 = 1;
        }
        if (!v209)
        {
          if ((v8 - 8000) >> 6 > 0x7C)
          {
            if (*v6)
            {
              uint64_t v210 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              uint64_t v210 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              char v7 = v211;
            }
            char v13 = (char *)sub_1885AC0(v8, v210, v7, a3);
          }
          else
          {
            char v13 = (char *)sub_18859DC((uint64_t **)(a1 + 16), v8, v7, (uint64_t)&off_2547290, (uint64_t *)(a1 + 8), a3);
          }
LABEL_600:
          uint64_t v211 = v13;
          if (!v13) {
            return 0;
          }
          if (sub_11947B8((uint64_t)a3, &v211, a3[11].i32[1])) {
            return v211;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return v211;
    }
  }
}

char *sub_1735118(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16BD904(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_17351A8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16C3BC0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1735238(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16C4708(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_17352C8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16C5990(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1735358(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16C7BA8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_17353E8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16E3FF8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1735478(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16E5C30(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1735508(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16EC084(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1735598(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16EABD4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1735628(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16DA588(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_17356B8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16D0DBC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1735748(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16EE874(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_17357D8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16EF7A0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_1735868(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16F02DC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_17358F8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16F23FC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1735988(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16F2C38(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1735A18(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16DAF68(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1735AA8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16F3D88(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1735B38(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16F4A40(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1735BC8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16FA7F8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1735C58(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16DBA7C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1735CE8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16E2FEC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_1735D78(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16FE1D8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1735E08(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16D69E0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1735E98(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1701888(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1735F28(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1702B74(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1735FB8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1709B2C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_1736048(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16C858C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_17360D8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16C9A24(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1736168(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16CAC90(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_17361F8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16CF5BC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1736288(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16E78A8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1736318(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_170D688(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_17363A8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_170E0E4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1736438(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_170F6A4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_17364C8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1711474(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1736558(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1791AF0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_17365E8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1712350(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1736678(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1714B68(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1736708(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17153E8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1736798(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1715EA4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1736828(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1712D70(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_17368B8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17134C4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1736948(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1857B38(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_17369D8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_171417C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1736A68(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_170C2E4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1736AF8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_170CE88(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1736B88(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16ECF74(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1736C18(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16E84A4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1736CA8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_129F580(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1736D38(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1851BE8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1736DC8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1716160(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1736E58(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16C2298(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1736EE8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1719EEC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1736F78(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1851E94(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1737008(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_177CBFC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1737098(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_177CFC8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1737128(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_177D394(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_17371B8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_177D760(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1737248(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_177DB2C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_17372D8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_177DEFC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1737368(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_177F470(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_17373F8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_177FA30(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1737488(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_177FE84(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1737518(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1780644(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_17375A8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_171CC20(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1737638(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1780A14(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_17376C8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1782DC0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1737758(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_177E7E8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_17377E8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1780EB0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1737878(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1782A78(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1737908(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16F28F0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1737998(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1852140(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1737A28(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_177ECD4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1737AB8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_175A940(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_1737B48(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16FE9BC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1737BD8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_177F0A0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1737C68(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16F5574(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1737CF8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16F7C80(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1737D88(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16F88F0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1737E18(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1758E64(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1737EA8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17846E8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1737F38(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16E13C4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1737FC8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16F6A74(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1738058(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1775E78(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_17380E8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1785E34(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1738178(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16E1F6C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1738208(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16E2228(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1738298(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1753B94(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1738328(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_174CCC8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_17383B8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_175151C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1738448(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16FFCA4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_17384D8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_174D904(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1738568(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_174E8F8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_17385F8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_174F788(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1738688(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_175011C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1738718(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_174C1F8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_17387A8(uint64_t a1, char *a2, unint64_t *a3)
{
  char v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if (v6)
  {
    if (*a3 <= (unint64_t)a2) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    uint64_t v7 = *(void *)(a1 + 64);
    *char v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 44);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    char v4 = sub_16BDC60(v7, v9, a3);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_46;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v10 = *(void *)(a1 + 72);
  *char v4 = 18;
  unsigned int v11 = *(_DWORD *)(v10 + 40);
  v4[1] = v11;
  if (v11 > 0x7F) {
    uint64_t v12 = sub_188A9CC(v11, v4 + 1);
  }
  else {
    uint64_t v12 = v4 + 2;
  }
  char v4 = sub_16C3D10(v10, v12, a3);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_52;
  }
LABEL_46:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v13 = *(void *)(a1 + 80);
  *char v4 = 26;
  unsigned int v14 = *(_DWORD *)(v13 + 40);
  v4[1] = v14;
  if (v14 > 0x7F) {
    char v15 = sub_188A9CC(v14, v4 + 1);
  }
  else {
    char v15 = v4 + 2;
  }
  char v4 = sub_16C4858(v13, v15, a3);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_58;
  }
LABEL_52:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v16 = *(void *)(a1 + 88);
  *char v4 = 34;
  unsigned int v17 = *(_DWORD *)(v16 + 40);
  v4[1] = v17;
  if (v17 > 0x7F) {
    uint64_t v18 = sub_188A9CC(v17, v4 + 1);
  }
  else {
    uint64_t v18 = v4 + 2;
  }
  char v4 = sub_16C5AE0(v16, v18, a3);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_64;
  }
LABEL_58:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v19 = *(void *)(a1 + 96);
  *char v4 = 42;
  unsigned int v20 = *(_DWORD *)(v19 + 40);
  v4[1] = v20;
  if (v20 > 0x7F) {
    char v21 = sub_188A9CC(v20, v4 + 1);
  }
  else {
    char v21 = v4 + 2;
  }
  char v4 = sub_16C7CF8(v19, v21, a3);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_70;
  }
LABEL_64:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v22 = *(void *)(a1 + 104);
  *char v4 = 50;
  unsigned int v23 = *(_DWORD *)(v22 + 40);
  v4[1] = v23;
  if (v23 > 0x7F) {
    uint64_t v24 = sub_188A9CC(v23, v4 + 1);
  }
  else {
    uint64_t v24 = v4 + 2;
  }
  char v4 = sub_16E4148(v22, v24, a3);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_76;
  }
LABEL_70:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v25 = *(void *)(a1 + 112);
  *char v4 = 58;
  unsigned int v26 = *(_DWORD *)(v25 + 44);
  v4[1] = v26;
  if (v26 > 0x7F) {
    char v27 = sub_188A9CC(v26, v4 + 1);
  }
  else {
    char v27 = v4 + 2;
  }
  char v4 = sub_16E5EB4(v25, v27, a3);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_82;
  }
LABEL_76:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v28 = *(void *)(a1 + 120);
  *char v4 = 66;
  unsigned int v29 = *(_DWORD *)(v28 + 64);
  v4[1] = v29;
  if (v29 > 0x7F) {
    uint64_t v30 = sub_188A9CC(v29, v4 + 1);
  }
  else {
    uint64_t v30 = v4 + 2;
  }
  char v4 = sub_16EC268(v28, v30, a3);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_88;
  }
LABEL_82:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v31 = *(void *)(a1 + 128);
  *char v4 = 74;
  unsigned int v32 = *(_DWORD *)(v31 + 40);
  v4[1] = v32;
  if (v32 > 0x7F) {
    char v33 = sub_188A9CC(v32, v4 + 1);
  }
  else {
    char v33 = v4 + 2;
  }
  char v4 = sub_16EAD24(v31, v33, a3);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_94;
  }
LABEL_88:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v34 = *(void *)(a1 + 136);
  *char v4 = 82;
  unsigned int v35 = *(_DWORD *)(v34 + 16);
  v4[1] = v35;
  if (v35 > 0x7F) {
    char v36 = sub_188A9CC(v35, v4 + 1);
  }
  else {
    char v36 = v4 + 2;
  }
  char v4 = sub_16DA688(v34, v36, a3);
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_100;
  }
LABEL_94:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v37 = *(void *)(a1 + 144);
  *char v4 = 90;
  unsigned int v38 = *(_DWORD *)(v37 + 20);
  v4[1] = v38;
  if (v38 > 0x7F) {
    uint64_t v39 = sub_188A9CC(v38, v4 + 1);
  }
  else {
    uint64_t v39 = v4 + 2;
  }
  char v4 = sub_16D1074(v37, (unint64_t)v39, a3);
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_106;
  }
LABEL_100:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v40 = *(void *)(a1 + 152);
  *char v4 = 98;
  unsigned int v41 = *(_DWORD *)(v40 + 20);
  v4[1] = v41;
  if (v41 > 0x7F) {
    uint64_t v42 = sub_188A9CC(v41, v4 + 1);
  }
  else {
    uint64_t v42 = v4 + 2;
  }
  char v4 = sub_16EEE18(v40, v42, a3);
  if ((v6 & 0x1000) == 0)
  {
LABEL_14:
    if ((v6 & 0x2000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_112;
  }
LABEL_106:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v43 = *(void *)(a1 + 160);
  *char v4 = 106;
  unsigned int v44 = *(_DWORD *)(v43 + 16);
  v4[1] = v44;
  if (v44 > 0x7F) {
    uint64_t v45 = sub_188A9CC(v44, v4 + 1);
  }
  else {
    uint64_t v45 = v4 + 2;
  }
  char v4 = sub_16EF8A0(v43, v45, a3);
  if ((v6 & 0x2000) == 0)
  {
LABEL_15:
    if ((v6 & 0x4000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_118;
  }
LABEL_112:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v46 = *(void *)(a1 + 168);
  *char v4 = 114;
  unsigned int v47 = *(_DWORD *)(v46 + 64);
  v4[1] = v47;
  if (v47 > 0x7F) {
    uint64_t v48 = sub_188A9CC(v47, v4 + 1);
  }
  else {
    uint64_t v48 = v4 + 2;
  }
  char v4 = sub_16F0514(v46, v48, a3);
  if ((v6 & 0x4000) == 0)
  {
LABEL_16:
    if ((v6 & 0x8000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_124;
  }
LABEL_118:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v49 = *(void *)(a1 + 176);
  *char v4 = 122;
  unsigned int v50 = *(_DWORD *)(v49 + 44);
  v4[1] = v50;
  if (v50 > 0x7F) {
    uint64_t v51 = sub_188A9CC(v50, v4 + 1);
  }
  else {
    uint64_t v51 = v4 + 2;
  }
  char v4 = sub_16F25D0(v49, v51, a3);
  if ((v6 & 0x8000) == 0)
  {
LABEL_17:
    if ((v6 & 0x10000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_130;
  }
LABEL_124:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v52 = *(void *)(a1 + 184);
  *(_WORD *)char v4 = 386;
  unsigned int v53 = *(_DWORD *)(v52 + 16);
  v4[2] = v53;
  if (v53 > 0x7F) {
    uint64_t v54 = sub_188A9CC(v53, v4 + 2);
  }
  else {
    uint64_t v54 = v4 + 3;
  }
  char v4 = sub_16F2D38(v52, v54, a3);
  if ((v6 & 0x10000) == 0)
  {
LABEL_18:
    if ((v6 & 0x20000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_136;
  }
LABEL_130:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v55 = *(void *)(a1 + 192);
  *(_WORD *)char v4 = 418;
  unsigned int v56 = *(_DWORD *)(v55 + 16);
  v4[2] = v56;
  if (v56 > 0x7F) {
    uint64_t v57 = sub_188A9CC(v56, v4 + 2);
  }
  else {
    uint64_t v57 = v4 + 3;
  }
  char v4 = sub_16DB068(v55, v57, a3);
  if ((v6 & 0x20000) == 0)
  {
LABEL_19:
    if ((v6 & 0x40000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_142;
  }
LABEL_136:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v58 = *(void *)(a1 + 200);
  *(_WORD *)char v4 = 426;
  unsigned int v59 = *(_DWORD *)(v58 + 16);
  v4[2] = v59;
  if (v59 > 0x7F) {
    uint64_t v60 = sub_188A9CC(v59, v4 + 2);
  }
  else {
    uint64_t v60 = v4 + 3;
  }
  char v4 = sub_16F3E88(v58, v60, a3);
  if ((v6 & 0x40000) == 0)
  {
LABEL_20:
    if ((v6 & 0x80000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_148;
  }
LABEL_142:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v61 = *(void *)(a1 + 208);
  *(_WORD *)char v4 = 434;
  unsigned int v62 = *(_DWORD *)(v61 + 16);
  v4[2] = v62;
  if (v62 > 0x7F) {
    uint64_t v63 = sub_188A9CC(v62, v4 + 2);
  }
  else {
    uint64_t v63 = v4 + 3;
  }
  char v4 = sub_16F4B40(v61, v63, a3);
  if ((v6 & 0x80000) == 0)
  {
LABEL_21:
    if ((v6 & 0x100000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_154;
  }
LABEL_148:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v64 = *(void *)(a1 + 216);
  *(_WORD *)char v4 = 442;
  unsigned int v65 = *(_DWORD *)(v64 + 20);
  v4[2] = v65;
  if (v65 > 0x7F) {
    uint64_t v66 = sub_188A9CC(v65, v4 + 2);
  }
  else {
    uint64_t v66 = v4 + 3;
  }
  char v4 = sub_16FA988(v64, (unint64_t)v66, a3);
  if ((v6 & 0x100000) == 0)
  {
LABEL_22:
    if ((v6 & 0x200000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_160;
  }
LABEL_154:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v67 = *(void *)(a1 + 224);
  *(_WORD *)char v4 = 450;
  unsigned int v68 = *(_DWORD *)(v67 + 16);
  v4[2] = v68;
  if (v68 > 0x7F) {
    uint64_t v69 = sub_188A9CC(v68, v4 + 2);
  }
  else {
    uint64_t v69 = v4 + 3;
  }
  char v4 = sub_16DBB7C(v67, v69, a3);
  if ((v6 & 0x200000) == 0)
  {
LABEL_23:
    if ((v6 & 0x400000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_166;
  }
LABEL_160:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v70 = *(void *)(a1 + 232);
  *(_WORD *)char v4 = 458;
  unsigned int v71 = *(_DWORD *)(v70 + 16);
  v4[2] = v71;
  if (v71 > 0x7F) {
    uint64_t v72 = sub_188A9CC(v71, v4 + 2);
  }
  else {
    uint64_t v72 = v4 + 3;
  }
  char v4 = sub_16E30EC(v70, v72, a3);
  if ((v6 & 0x400000) == 0)
  {
LABEL_24:
    if ((v6 & 0x800000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_172;
  }
LABEL_166:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v73 = *(void *)(a1 + 240);
  *(_WORD *)char v4 = 466;
  unsigned int v74 = *(_DWORD *)(v73 + 20);
  v4[2] = v74;
  if (v74 > 0x7F) {
    uint64_t v75 = sub_188A9CC(v74, v4 + 2);
  }
  else {
    uint64_t v75 = v4 + 3;
  }
  char v4 = sub_16FE3D8(v73, v75, a3);
  if ((v6 & 0x800000) == 0)
  {
LABEL_25:
    if ((v6 & 0x1000000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_178;
  }
LABEL_172:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v76 = *(void *)(a1 + 248);
  *(_WORD *)char v4 = 474;
  unsigned int v77 = *(_DWORD *)(v76 + 16);
  v4[2] = v77;
  if (v77 > 0x7F) {
    uint64_t v78 = sub_188A9CC(v77, v4 + 2);
  }
  else {
    uint64_t v78 = v4 + 3;
  }
  char v4 = sub_16D6AE0(v76, v78, a3);
  if ((v6 & 0x1000000) == 0)
  {
LABEL_26:
    if ((v6 & 0x2000000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_184;
  }
LABEL_178:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v79 = *(void *)(a1 + 256);
  *(_WORD *)char v4 = 482;
  unsigned int v80 = *(_DWORD *)(v79 + 16);
  v4[2] = v80;
  if (v80 > 0x7F) {
    uint64_t v81 = sub_188A9CC(v80, v4 + 2);
  }
  else {
    uint64_t v81 = v4 + 3;
  }
  char v4 = sub_1701988(v79, v81, a3);
  if ((v6 & 0x2000000) == 0)
  {
LABEL_27:
    if ((v6 & 0x4000000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_190;
  }
LABEL_184:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v82 = *(void *)(a1 + 264);
  *(_WORD *)char v4 = 490;
  unsigned int v83 = *(_DWORD *)(v82 + 32);
  v4[2] = v83;
  if (v83 > 0x7F) {
    uint64_t v84 = sub_188A9CC(v83, v4 + 2);
  }
  else {
    uint64_t v84 = v4 + 3;
  }
  char v4 = sub_1702DC8(v82, v84, a3);
  if ((v6 & 0x4000000) == 0)
  {
LABEL_28:
    if ((v6 & 0x8000000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_196;
  }
LABEL_190:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v85 = *(void *)(a1 + 272);
  *(_WORD *)char v4 = 498;
  unsigned int v86 = *(_DWORD *)(v85 + 20);
  v4[2] = v86;
  if (v86 > 0x7F) {
    uint64_t v87 = sub_188A9CC(v86, v4 + 2);
  }
  else {
    uint64_t v87 = v4 + 3;
  }
  char v4 = sub_1709EEC(v85, (unint64_t)v87, a3);
  if ((v6 & 0x8000000) == 0)
  {
LABEL_29:
    if ((v6 & 0x10000000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_202;
  }
LABEL_196:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v88 = *(void *)(a1 + 280);
  *(_WORD *)char v4 = 506;
  unsigned int v89 = *(_DWORD *)(v88 + 20);
  v4[2] = v89;
  if (v89 > 0x7F) {
    uint64_t v90 = sub_188A9CC(v89, v4 + 2);
  }
  else {
    uint64_t v90 = v4 + 3;
  }
  char v4 = sub_16C8818(v88, v90, a3);
  if ((v6 & 0x10000000) == 0)
  {
LABEL_30:
    if ((v6 & 0x20000000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_208;
  }
LABEL_202:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v91 = *(void *)(a1 + 288);
  *(_WORD *)char v4 = 642;
  unsigned int v92 = *(_DWORD *)(v91 + 16);
  v4[2] = v92;
  if (v92 > 0x7F) {
    uint64_t v93 = sub_188A9CC(v92, v4 + 2);
  }
  else {
    uint64_t v93 = v4 + 3;
  }
  char v4 = sub_16C9B24(v91, v93, a3);
  if ((v6 & 0x20000000) == 0)
  {
LABEL_31:
    if ((v6 & 0x40000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_214;
  }
LABEL_208:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v94 = *(void *)(a1 + 296);
  *(_WORD *)char v4 = 650;
  unsigned int v95 = *(_DWORD *)(v94 + 16);
  v4[2] = v95;
  if (v95 > 0x7F) {
    uint64_t v96 = sub_188A9CC(v95, v4 + 2);
  }
  else {
    uint64_t v96 = v4 + 3;
  }
  char v4 = sub_16CAD90(v94, v96, a3);
  if ((v6 & 0x40000000) == 0)
  {
LABEL_32:
    if ((v6 & 0x80000000) == 0) {
      goto LABEL_226;
    }
    goto LABEL_220;
  }
LABEL_214:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v97 = *(void *)(a1 + 304);
  *(_WORD *)char v4 = 658;
  unsigned int v98 = *(_DWORD *)(v97 + 16);
  v4[2] = v98;
  if (v98 > 0x7F) {
    uint64_t v99 = sub_188A9CC(v98, v4 + 2);
  }
  else {
    uint64_t v99 = v4 + 3;
  }
  char v4 = sub_16CF6BC(v97, v99, a3);
  if (v6 < 0)
  {
LABEL_220:
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v100 = *(void *)(a1 + 312);
    *(_WORD *)char v4 = 674;
    unsigned int v101 = *(_DWORD *)(v100 + 64);
    v4[2] = v101;
    if (v101 > 0x7F) {
      uint64_t v102 = sub_188A9CC(v101, v4 + 2);
    }
    else {
      uint64_t v102 = v4 + 3;
    }
    char v4 = sub_16E7A8C(v100, v102, a3);
  }
LABEL_226:
  int v103 = *(_DWORD *)(a1 + 44);
  if (v103)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v104 = *(void *)(a1 + 320);
    *(_WORD *)char v4 = 682;
    unsigned int v105 = *(_DWORD *)(v104 + 16);
    v4[2] = v105;
    if (v105 > 0x7F) {
      uint64_t v106 = sub_188A9CC(v105, v4 + 2);
    }
    else {
      uint64_t v106 = v4 + 3;
    }
    char v4 = sub_170D788(v104, v106, a3);
    if ((v103 & 2) == 0)
    {
LABEL_228:
      if ((v103 & 4) == 0) {
        goto LABEL_229;
      }
      goto LABEL_271;
    }
  }
  else if ((v103 & 2) == 0)
  {
    goto LABEL_228;
  }
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v107 = *(void *)(a1 + 328);
  *(_WORD *)char v4 = 690;
  unsigned int v108 = *(_DWORD *)(v107 + 16);
  v4[2] = v108;
  if (v108 > 0x7F) {
    uint64_t v109 = sub_188A9CC(v108, v4 + 2);
  }
  else {
    uint64_t v109 = v4 + 3;
  }
  char v4 = sub_170E1E4(v107, v109, a3);
  if ((v103 & 4) == 0)
  {
LABEL_229:
    if ((v103 & 8) == 0) {
      goto LABEL_230;
    }
    goto LABEL_277;
  }
LABEL_271:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v110 = *(void *)(a1 + 336);
  *(_WORD *)char v4 = 698;
  unsigned int v111 = *(_DWORD *)(v110 + 16);
  v4[2] = v111;
  if (v111 > 0x7F) {
    v112 = sub_188A9CC(v111, v4 + 2);
  }
  else {
    v112 = v4 + 3;
  }
  char v4 = sub_170F7A4(v110, v112, a3);
  if ((v103 & 8) == 0)
  {
LABEL_230:
    if ((v103 & 0x10) == 0) {
      goto LABEL_231;
    }
    goto LABEL_283;
  }
LABEL_277:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v113 = *(void *)(a1 + 344);
  *(_WORD *)char v4 = 706;
  unsigned int v114 = *(_DWORD *)(v113 + 20);
  v4[2] = v114;
  if (v114 > 0x7F) {
    uint64_t v115 = sub_188A9CC(v114, v4 + 2);
  }
  else {
    uint64_t v115 = v4 + 3;
  }
  char v4 = sub_17115F0(v113, (unint64_t)v115, a3);
  if ((v103 & 0x10) == 0)
  {
LABEL_231:
    if ((v103 & 0x20) == 0) {
      goto LABEL_232;
    }
    goto LABEL_289;
  }
LABEL_283:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v116 = *(void *)(a1 + 352);
  *(_WORD *)char v4 = 714;
  unsigned int v117 = *(_DWORD *)(v116 + 16);
  v4[2] = v117;
  if (v117 > 0x7F) {
    uint64_t v118 = sub_188A9CC(v117, v4 + 2);
  }
  else {
    uint64_t v118 = v4 + 3;
  }
  char v4 = sub_1791BF0(v116, v118, a3);
  if ((v103 & 0x20) == 0)
  {
LABEL_232:
    if ((v103 & 0x40) == 0) {
      goto LABEL_233;
    }
    goto LABEL_295;
  }
LABEL_289:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v119 = *(void *)(a1 + 360);
  *(_WORD *)char v4 = 722;
  unsigned int v120 = *(_DWORD *)(v119 + 16);
  v4[2] = v120;
  if (v120 > 0x7F) {
    uint64_t v121 = sub_188A9CC(v120, v4 + 2);
  }
  else {
    uint64_t v121 = v4 + 3;
  }
  char v4 = sub_1712450(v119, v121, a3);
  if ((v103 & 0x40) == 0)
  {
LABEL_233:
    if ((v103 & 0x80) == 0) {
      goto LABEL_234;
    }
    goto LABEL_301;
  }
LABEL_295:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v122 = *(void *)(a1 + 368);
  *(_WORD *)char v4 = 730;
  unsigned int v123 = *(_DWORD *)(v122 + 16);
  v4[2] = v123;
  if (v123 > 0x7F) {
    v124 = sub_188A9CC(v123, v4 + 2);
  }
  else {
    v124 = v4 + 3;
  }
  char v4 = sub_1714C68(v122, v124, a3);
  if ((v103 & 0x80) == 0)
  {
LABEL_234:
    if ((v103 & 0x100) == 0) {
      goto LABEL_235;
    }
    goto LABEL_307;
  }
LABEL_301:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v125 = *(void *)(a1 + 376);
  *(_WORD *)char v4 = 738;
  unsigned int v126 = *(_DWORD *)(v125 + 16);
  v4[2] = v126;
  if (v126 > 0x7F) {
    uint64_t v127 = sub_188A9CC(v126, v4 + 2);
  }
  else {
    uint64_t v127 = v4 + 3;
  }
  char v4 = sub_17154E8(v125, v127, a3);
  if ((v103 & 0x100) == 0)
  {
LABEL_235:
    if ((v103 & 0x200) == 0) {
      goto LABEL_236;
    }
    goto LABEL_313;
  }
LABEL_307:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v128 = *(void *)(a1 + 384);
  *(_WORD *)char v4 = 746;
  unsigned int v129 = *(_DWORD *)(v128 + 16);
  v4[2] = v129;
  if (v129 > 0x7F) {
    uint64_t v130 = sub_188A9CC(v129, v4 + 2);
  }
  else {
    uint64_t v130 = v4 + 3;
  }
  char v4 = sub_1715FA4(v128, v130, a3);
  if ((v103 & 0x200) == 0)
  {
LABEL_236:
    if ((v103 & 0x400) == 0) {
      goto LABEL_237;
    }
    goto LABEL_319;
  }
LABEL_313:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v131 = *(void *)(a1 + 392);
  *(_WORD *)char v4 = 754;
  unsigned int v132 = *(_DWORD *)(v131 + 16);
  v4[2] = v132;
  if (v132 > 0x7F) {
    uint64_t v133 = sub_188A9CC(v132, v4 + 2);
  }
  else {
    uint64_t v133 = v4 + 3;
  }
  char v4 = sub_1712E70(v131, v133, a3);
  if ((v103 & 0x400) == 0)
  {
LABEL_237:
    if ((v103 & 0x800) == 0) {
      goto LABEL_238;
    }
    goto LABEL_325;
  }
LABEL_319:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v134 = *(void *)(a1 + 400);
  *(_WORD *)char v4 = 762;
  unsigned int v135 = *(_DWORD *)(v134 + 16);
  v4[2] = v135;
  if (v135 > 0x7F) {
    uint64_t v136 = sub_188A9CC(v135, v4 + 2);
  }
  else {
    uint64_t v136 = v4 + 3;
  }
  char v4 = sub_17135C4(v134, v136, a3);
  if ((v103 & 0x800) == 0)
  {
LABEL_238:
    if ((v103 & 0x1000) == 0) {
      goto LABEL_239;
    }
    goto LABEL_331;
  }
LABEL_325:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v137 = *(void *)(a1 + 408);
  *(_WORD *)char v4 = 898;
  unsigned int v138 = *(_DWORD *)(v137 + 16);
  v4[2] = v138;
  if (v138 > 0x7F) {
    uint64_t v139 = sub_188A9CC(v138, v4 + 2);
  }
  else {
    uint64_t v139 = v4 + 3;
  }
  char v4 = sub_1857C38(v137, v139, a3);
  if ((v103 & 0x1000) == 0)
  {
LABEL_239:
    if ((v103 & 0x2000) == 0) {
      goto LABEL_240;
    }
    goto LABEL_337;
  }
LABEL_331:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v140 = *(void *)(a1 + 416);
  *(_WORD *)char v4 = 906;
  unsigned int v141 = *(_DWORD *)(v140 + 16);
  v4[2] = v141;
  if (v141 > 0x7F) {
    uint64_t v142 = sub_188A9CC(v141, v4 + 2);
  }
  else {
    uint64_t v142 = v4 + 3;
  }
  char v4 = sub_171427C(v140, v142, a3);
  if ((v103 & 0x2000) == 0)
  {
LABEL_240:
    if ((v103 & 0x4000) == 0) {
      goto LABEL_241;
    }
    goto LABEL_343;
  }
LABEL_337:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v143 = *(void *)(a1 + 424);
  *(_WORD *)char v4 = 914;
  unsigned int v144 = *(_DWORD *)(v143 + 40);
  v4[2] = v144;
  if (v144 > 0x7F) {
    uint64_t v145 = sub_188A9CC(v144, v4 + 2);
  }
  else {
    uint64_t v145 = v4 + 3;
  }
  char v4 = sub_170C434(v143, v145, a3);
  if ((v103 & 0x4000) == 0)
  {
LABEL_241:
    if ((v103 & 0x8000) == 0) {
      goto LABEL_242;
    }
    goto LABEL_349;
  }
LABEL_343:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v146 = *(void *)(a1 + 432);
  *(_WORD *)char v4 = 922;
  unsigned int v147 = *(_DWORD *)(v146 + 40);
  v4[2] = v147;
  if (v147 > 0x7F) {
    v148 = sub_188A9CC(v147, v4 + 2);
  }
  else {
    v148 = v4 + 3;
  }
  char v4 = sub_170CFD8(v146, v148, a3);
  if ((v103 & 0x8000) == 0)
  {
LABEL_242:
    if ((v103 & 0x10000) == 0) {
      goto LABEL_243;
    }
    goto LABEL_355;
  }
LABEL_349:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v149 = *(void *)(a1 + 440);
  *(_WORD *)char v4 = 930;
  unsigned int v150 = *(_DWORD *)(v149 + 40);
  v4[2] = v150;
  if (v150 > 0x7F) {
    uint64_t v151 = sub_188A9CC(v150, v4 + 2);
  }
  else {
    uint64_t v151 = v4 + 3;
  }
  char v4 = sub_16ED0C4(v149, v151, a3);
  if ((v103 & 0x10000) == 0)
  {
LABEL_243:
    if ((v103 & 0x20000) == 0) {
      goto LABEL_244;
    }
    goto LABEL_361;
  }
LABEL_355:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v152 = *(void *)(a1 + 448);
  *(_WORD *)char v4 = 938;
  unsigned int v153 = *(_DWORD *)(v152 + 40);
  v4[2] = v153;
  if (v153 > 0x7F) {
    uint64_t v154 = sub_188A9CC(v153, v4 + 2);
  }
  else {
    uint64_t v154 = v4 + 3;
  }
  char v4 = sub_16E85F4(v152, v154, a3);
  if ((v103 & 0x20000) == 0)
  {
LABEL_244:
    if ((v103 & 0x40000) == 0) {
      goto LABEL_245;
    }
    goto LABEL_367;
  }
LABEL_361:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v155 = *(void *)(a1 + 456);
  *(_WORD *)char v4 = 946;
  unsigned int v156 = *(_DWORD *)(v155 + 44);
  v4[2] = v156;
  if (v156 > 0x7F) {
    uint64_t v157 = sub_188A9CC(v156, v4 + 2);
  }
  else {
    uint64_t v157 = v4 + 3;
  }
  char v4 = sub_129F754(v155, v157, a3);
  if ((v103 & 0x40000) == 0)
  {
LABEL_245:
    if ((v103 & 0x80000) == 0) {
      goto LABEL_246;
    }
    goto LABEL_373;
  }
LABEL_367:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v158 = *(void *)(a1 + 464);
  *(_WORD *)char v4 = 954;
  unsigned int v159 = *(_DWORD *)(v158 + 16);
  v4[2] = v159;
  if (v159 > 0x7F) {
    uint64_t v160 = sub_188A9CC(v159, v4 + 2);
  }
  else {
    uint64_t v160 = v4 + 3;
  }
  char v4 = sub_1851CE8(v158, v160, a3);
  if ((v103 & 0x80000) == 0)
  {
LABEL_246:
    if ((v103 & 0x100000) == 0) {
      goto LABEL_247;
    }
    goto LABEL_379;
  }
LABEL_373:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v161 = *(void *)(a1 + 472);
  *(_WORD *)char v4 = 962;
  unsigned int v162 = *(_DWORD *)(v161 + 16);
  v4[2] = v162;
  if (v162 > 0x7F) {
    uint64_t v163 = sub_188A9CC(v162, v4 + 2);
  }
  else {
    uint64_t v163 = v4 + 3;
  }
  char v4 = sub_1716260(v161, v163, a3);
  if ((v103 & 0x100000) == 0)
  {
LABEL_247:
    if ((v103 & 0x200000) == 0) {
      goto LABEL_248;
    }
    goto LABEL_385;
  }
LABEL_379:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v164 = *(void *)(a1 + 480);
  *(_WORD *)char v4 = 970;
  unsigned int v165 = *(_DWORD *)(v164 + 64);
  v4[2] = v165;
  if (v165 > 0x7F) {
    uint64_t v166 = sub_188A9CC(v165, v4 + 2);
  }
  else {
    uint64_t v166 = v4 + 3;
  }
  char v4 = sub_16C250C(v164, v166, a3);
  if ((v103 & 0x200000) == 0)
  {
LABEL_248:
    if ((v103 & 0x400000) == 0) {
      goto LABEL_249;
    }
    goto LABEL_391;
  }
LABEL_385:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v167 = *(void *)(a1 + 488);
  *(_WORD *)char v4 = 978;
  unsigned int v168 = *(_DWORD *)(v167 + 44);
  v4[2] = v168;
  if (v168 > 0x7F) {
    uint64_t v169 = sub_188A9CC(v168, v4 + 2);
  }
  else {
    uint64_t v169 = v4 + 3;
  }
  char v4 = sub_171A0C0(v167, v169, a3);
  if ((v103 & 0x400000) == 0)
  {
LABEL_249:
    if ((v103 & 0x800000) == 0) {
      goto LABEL_250;
    }
    goto LABEL_397;
  }
LABEL_391:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v170 = *(void *)(a1 + 496);
  *(_WORD *)char v4 = 986;
  unsigned int v171 = *(_DWORD *)(v170 + 16);
  v4[2] = v171;
  if (v171 > 0x7F) {
    uint64_t v172 = sub_188A9CC(v171, v4 + 2);
  }
  else {
    uint64_t v172 = v4 + 3;
  }
  char v4 = sub_1851F94(v170, v172, a3);
  if ((v103 & 0x800000) == 0)
  {
LABEL_250:
    if ((v103 & 0x1000000) == 0) {
      goto LABEL_251;
    }
    goto LABEL_403;
  }
LABEL_397:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v173 = *(void *)(a1 + 504);
  *(_WORD *)char v4 = 994;
  unsigned int v174 = *(_DWORD *)(v173 + 40);
  v4[2] = v174;
  if (v174 > 0x7F) {
    uint64_t v175 = sub_188A9CC(v174, v4 + 2);
  }
  else {
    uint64_t v175 = v4 + 3;
  }
  char v4 = sub_177CD4C(v173, v175, a3);
  if ((v103 & 0x1000000) == 0)
  {
LABEL_251:
    if ((v103 & 0x2000000) == 0) {
      goto LABEL_252;
    }
    goto LABEL_409;
  }
LABEL_403:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v176 = *(void *)(a1 + 512);
  *(_WORD *)char v4 = 1002;
  unsigned int v177 = *(_DWORD *)(v176 + 40);
  v4[2] = v177;
  if (v177 > 0x7F) {
    uint64_t v178 = sub_188A9CC(v177, v4 + 2);
  }
  else {
    uint64_t v178 = v4 + 3;
  }
  char v4 = sub_177D118(v176, v178, a3);
  if ((v103 & 0x2000000) == 0)
  {
LABEL_252:
    if ((v103 & 0x4000000) == 0) {
      goto LABEL_253;
    }
    goto LABEL_415;
  }
LABEL_409:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v179 = *(void *)(a1 + 520);
  *(_WORD *)char v4 = 1010;
  unsigned int v180 = *(_DWORD *)(v179 + 40);
  v4[2] = v180;
  if (v180 > 0x7F) {
    uint64_t v181 = sub_188A9CC(v180, v4 + 2);
  }
  else {
    uint64_t v181 = v4 + 3;
  }
  char v4 = sub_177D4E4(v179, v181, a3);
  if ((v103 & 0x4000000) == 0)
  {
LABEL_253:
    if ((v103 & 0x8000000) == 0) {
      goto LABEL_254;
    }
    goto LABEL_421;
  }
LABEL_415:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v182 = *(void *)(a1 + 528);
  *(_WORD *)char v4 = 1018;
  unsigned int v183 = *(_DWORD *)(v182 + 40);
  v4[2] = v183;
  if (v183 > 0x7F) {
    v184 = sub_188A9CC(v183, v4 + 2);
  }
  else {
    v184 = v4 + 3;
  }
  char v4 = sub_177D8B0(v182, v184, a3);
  if ((v103 & 0x8000000) == 0)
  {
LABEL_254:
    if ((v103 & 0x10000000) == 0) {
      goto LABEL_255;
    }
    goto LABEL_427;
  }
LABEL_421:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v185 = *(void *)(a1 + 536);
  *(_WORD *)char v4 = 1154;
  unsigned int v186 = *(_DWORD *)(v185 + 40);
  v4[2] = v186;
  if (v186 > 0x7F) {
    uint64_t v187 = sub_188A9CC(v186, v4 + 2);
  }
  else {
    uint64_t v187 = v4 + 3;
  }
  char v4 = sub_177DC7C(v185, v187, a3);
  if ((v103 & 0x10000000) == 0)
  {
LABEL_255:
    if ((v103 & 0x20000000) == 0) {
      goto LABEL_256;
    }
    goto LABEL_433;
  }
LABEL_427:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v188 = *(void *)(a1 + 544);
  *(_WORD *)char v4 = 1162;
  unsigned int v189 = *(_DWORD *)(v188 + 44);
  v4[2] = v189;
  if (v189 > 0x7F) {
    uint64_t v190 = sub_188A9CC(v189, v4 + 2);
  }
  else {
    uint64_t v190 = v4 + 3;
  }
  char v4 = sub_177E398(v188, v190, a3);
  if ((v103 & 0x20000000) == 0)
  {
LABEL_256:
    if ((v103 & 0x40000000) == 0) {
      goto LABEL_257;
    }
    goto LABEL_439;
  }
LABEL_433:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v191 = *(void *)(a1 + 552);
  *(_WORD *)char v4 = 1170;
  unsigned int v192 = *(_DWORD *)(v191 + 44);
  v4[2] = v192;
  if (v192 > 0x7F) {
    uint64_t v193 = sub_188A9CC(v192, v4 + 2);
  }
  else {
    uint64_t v193 = v4 + 3;
  }
  char v4 = sub_177F6B0(v191, v193, a3);
  if ((v103 & 0x40000000) == 0)
  {
LABEL_257:
    if ((v103 & 0x80000000) == 0) {
      goto LABEL_451;
    }
    goto LABEL_445;
  }
LABEL_439:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v194 = *(void *)(a1 + 560);
  *(_WORD *)char v4 = 1178;
  unsigned int v195 = *(_DWORD *)(v194 + 40);
  v4[2] = v195;
  if (v195 > 0x7F) {
    uint64_t v196 = sub_188A9CC(v195, v4 + 2);
  }
  else {
    uint64_t v196 = v4 + 3;
  }
  char v4 = sub_177FB80(v194, v196, a3);
  if (v103 < 0)
  {
LABEL_445:
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v197 = *(void *)(a1 + 568);
    *(_WORD *)char v4 = 1186;
    unsigned int v198 = *(_DWORD *)(v197 + 44);
    v4[2] = v198;
    if (v198 > 0x7F) {
      uint64_t v199 = sub_188A9CC(v198, v4 + 2);
    }
    else {
      uint64_t v199 = v4 + 3;
    }
    char v4 = sub_1780180(v197, v199, a3);
  }
LABEL_451:
  int v200 = *(_DWORD *)(a1 + 48);
  if (v200)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v201 = *(void *)(a1 + 576);
    *(_WORD *)char v4 = 1194;
    unsigned int v202 = *(_DWORD *)(v201 + 40);
    v4[2] = v202;
    if (v202 > 0x7F) {
      uint64_t v203 = sub_188A9CC(v202, v4 + 2);
    }
    else {
      uint64_t v203 = v4 + 3;
    }
    char v4 = sub_1780794(v201, v203, a3);
    if ((v200 & 2) == 0)
    {
LABEL_453:
      if ((v200 & 4) == 0) {
        goto LABEL_454;
      }
      goto LABEL_496;
    }
  }
  else if ((v200 & 2) == 0)
  {
    goto LABEL_453;
  }
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v204 = *(void *)(a1 + 584);
  *(_WORD *)char v4 = 1202;
  unsigned int v205 = *(_DWORD *)(v204 + 40);
  v4[2] = v205;
  if (v205 > 0x7F) {
    uint64_t v206 = sub_188A9CC(v205, v4 + 2);
  }
  else {
    uint64_t v206 = v4 + 3;
  }
  char v4 = sub_171CD70(v204, v206, a3);
  if ((v200 & 4) == 0)
  {
LABEL_454:
    if ((v200 & 8) == 0) {
      goto LABEL_455;
    }
    goto LABEL_502;
  }
LABEL_496:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v207 = *(void *)(a1 + 592);
  *(_WORD *)char v4 = 1210;
  unsigned int v208 = *(_DWORD *)(v207 + 44);
  v4[2] = v208;
  if (v208 > 0x7F) {
    BOOL v209 = sub_188A9CC(v208, v4 + 2);
  }
  else {
    BOOL v209 = v4 + 3;
  }
  char v4 = sub_1780BE8(v207, v209, a3);
  if ((v200 & 8) == 0)
  {
LABEL_455:
    if ((v200 & 0x10) == 0) {
      goto LABEL_456;
    }
    goto LABEL_508;
  }
LABEL_502:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v210 = *(void *)(a1 + 600);
  *(_WORD *)char v4 = 1226;
  unsigned int v211 = *(_DWORD *)(v210 + 40);
  v4[2] = v211;
  if (v211 > 0x7F) {
    BOOL v212 = sub_188A9CC(v211, v4 + 2);
  }
  else {
    BOOL v212 = v4 + 3;
  }
  char v4 = sub_1782F10(v210, v212, a3);
  if ((v200 & 0x10) == 0)
  {
LABEL_456:
    if ((v200 & 0x20) == 0) {
      goto LABEL_457;
    }
    goto LABEL_514;
  }
LABEL_508:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v213 = *(void *)(a1 + 608);
  *(_WORD *)char v4 = 1234;
  unsigned int v214 = *(_DWORD *)(v213 + 40);
  v4[2] = v214;
  if (v214 > 0x7F) {
    uint64_t v215 = sub_188A9CC(v214, v4 + 2);
  }
  else {
    uint64_t v215 = v4 + 3;
  }
  char v4 = sub_177E988(v213, v215, a3);
  if ((v200 & 0x20) == 0)
  {
LABEL_457:
    if ((v200 & 0x40) == 0) {
      goto LABEL_458;
    }
    goto LABEL_520;
  }
LABEL_514:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v216 = *(void *)(a1 + 616);
  *(_WORD *)char v4 = 1250;
  unsigned int v217 = *(_DWORD *)(v216 + 40);
  v4[2] = v217;
  if (v217 > 0x7F) {
    uint64_t v218 = sub_188A9CC(v217, v4 + 2);
  }
  else {
    uint64_t v218 = v4 + 3;
  }
  char v4 = sub_1781000(v216, v218, a3);
  if ((v200 & 0x40) == 0)
  {
LABEL_458:
    if ((v200 & 0x80) == 0) {
      goto LABEL_459;
    }
    goto LABEL_526;
  }
LABEL_520:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v219 = *(void *)(a1 + 624);
  *(_WORD *)char v4 = 1258;
  unsigned int v220 = *(_DWORD *)(v219 + 16);
  v4[2] = v220;
  if (v220 > 0x7F) {
    v221 = sub_188A9CC(v220, v4 + 2);
  }
  else {
    v221 = v4 + 3;
  }
  char v4 = sub_1782B78(v219, v221, a3);
  if ((v200 & 0x80) == 0)
  {
LABEL_459:
    if ((v200 & 0x100) == 0) {
      goto LABEL_460;
    }
    goto LABEL_532;
  }
LABEL_526:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v222 = *(void *)(a1 + 632);
  *(_WORD *)char v4 = 1266;
  unsigned int v223 = *(_DWORD *)(v222 + 40);
  v4[2] = v223;
  if (v223 > 0x7F) {
    v224 = sub_188A9CC(v223, v4 + 2);
  }
  else {
    v224 = v4 + 3;
  }
  char v4 = sub_16F2A40(v222, v224, a3);
  if ((v200 & 0x100) == 0)
  {
LABEL_460:
    if ((v200 & 0x200) == 0) {
      goto LABEL_461;
    }
    goto LABEL_538;
  }
LABEL_532:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v225 = *(void *)(a1 + 640);
  *(_WORD *)char v4 = 1418;
  unsigned int v226 = *(_DWORD *)(v225 + 16);
  v4[2] = v226;
  if (v226 > 0x7F) {
    uint64_t v227 = sub_188A9CC(v226, v4 + 2);
  }
  else {
    uint64_t v227 = v4 + 3;
  }
  char v4 = sub_1852240(v225, v227, a3);
  if ((v200 & 0x200) == 0)
  {
LABEL_461:
    if ((v200 & 0x400) == 0) {
      goto LABEL_462;
    }
    goto LABEL_544;
  }
LABEL_538:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v228 = *(void *)(a1 + 648);
  *(_WORD *)char v4 = 1426;
  unsigned int v229 = *(_DWORD *)(v228 + 40);
  v4[2] = v229;
  if (v229 > 0x7F) {
    uint64_t v230 = sub_188A9CC(v229, v4 + 2);
  }
  else {
    uint64_t v230 = v4 + 3;
  }
  char v4 = sub_177EE24(v228, v230, a3);
  if ((v200 & 0x400) == 0)
  {
LABEL_462:
    if ((v200 & 0x800) == 0) {
      goto LABEL_463;
    }
    goto LABEL_550;
  }
LABEL_544:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v231 = *(void *)(a1 + 656);
  *(_WORD *)char v4 = 1434;
  unsigned int v232 = *(_DWORD *)(v231 + 40);
  v4[2] = v232;
  if (v232 > 0x7F) {
    v233 = sub_188A9CC(v232, v4 + 2);
  }
  else {
    v233 = v4 + 3;
  }
  char v4 = sub_175AA90(v231, v233, a3);
  if ((v200 & 0x800) == 0)
  {
LABEL_463:
    if ((v200 & 0x1000) == 0) {
      goto LABEL_464;
    }
    goto LABEL_556;
  }
LABEL_550:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v234 = *(void *)(a1 + 664);
  *(_WORD *)char v4 = 1442;
  unsigned int v235 = *(_DWORD *)(v234 + 44);
  v4[2] = v235;
  if (v235 > 0x7F) {
    v236 = sub_188A9CC(v235, v4 + 2);
  }
  else {
    v236 = v4 + 3;
  }
  char v4 = sub_16FEDD8(v234, v236, a3);
  if ((v200 & 0x1000) == 0)
  {
LABEL_464:
    if ((v200 & 0x2000) == 0) {
      goto LABEL_465;
    }
    goto LABEL_562;
  }
LABEL_556:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v237 = *(void *)(a1 + 672);
  *(_WORD *)char v4 = 1450;
  unsigned int v238 = *(_DWORD *)(v237 + 40);
  v4[2] = v238;
  if (v238 > 0x7F) {
    uint64_t v239 = sub_188A9CC(v238, v4 + 2);
  }
  else {
    uint64_t v239 = v4 + 3;
  }
  char v4 = sub_177F1F0(v237, v239, a3);
  if ((v200 & 0x2000) == 0)
  {
LABEL_465:
    if ((v200 & 0x4000) == 0) {
      goto LABEL_466;
    }
    goto LABEL_568;
  }
LABEL_562:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v240 = *(void *)(a1 + 680);
  *(_WORD *)char v4 = 1458;
  unsigned int v241 = *(_DWORD *)(v240 + 16);
  v4[2] = v241;
  if (v241 > 0x7F) {
    uint64_t v242 = sub_188A9CC(v241, v4 + 2);
  }
  else {
    uint64_t v242 = v4 + 3;
  }
  char v4 = sub_16F5674(v240, v242, a3);
  if ((v200 & 0x4000) == 0)
  {
LABEL_466:
    if ((v200 & 0x8000) == 0) {
      goto LABEL_467;
    }
    goto LABEL_574;
  }
LABEL_568:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v243 = *(void *)(a1 + 688);
  *(_WORD *)char v4 = 1466;
  unsigned int v244 = *(_DWORD *)(v243 + 16);
  v4[2] = v244;
  if (v244 > 0x7F) {
    v245 = sub_188A9CC(v244, v4 + 2);
  }
  else {
    v245 = v4 + 3;
  }
  char v4 = sub_16F7D80(v243, v245, a3);
  if ((v200 & 0x8000) == 0)
  {
LABEL_467:
    if ((v200 & 0x10000) == 0) {
      goto LABEL_468;
    }
    goto LABEL_580;
  }
LABEL_574:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v246 = *(void *)(a1 + 696);
  *(_WORD *)char v4 = 1474;
  unsigned int v247 = *(_DWORD *)(v246 + 16);
  v4[2] = v247;
  if (v247 > 0x7F) {
    v248 = sub_188A9CC(v247, v4 + 2);
  }
  else {
    v248 = v4 + 3;
  }
  char v4 = sub_16F89F0(v246, v248, a3);
  if ((v200 & 0x10000) == 0)
  {
LABEL_468:
    if ((v200 & 0x20000) == 0) {
      goto LABEL_469;
    }
    goto LABEL_586;
  }
LABEL_580:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v249 = *(void *)(a1 + 704);
  *(_WORD *)char v4 = 1482;
  unsigned int v250 = *(_DWORD *)(v249 + 40);
  v4[2] = v250;
  if (v250 > 0x7F) {
    uint64_t v251 = sub_188A9CC(v250, v4 + 2);
  }
  else {
    uint64_t v251 = v4 + 3;
  }
  char v4 = sub_1758FB4(v249, v251, a3);
  if ((v200 & 0x20000) == 0)
  {
LABEL_469:
    if ((v200 & 0x40000) == 0) {
      goto LABEL_470;
    }
    goto LABEL_592;
  }
LABEL_586:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v252 = *(void *)(a1 + 712);
  *(_WORD *)char v4 = 1490;
  unsigned int v253 = *(_DWORD *)(v252 + 16);
  v4[2] = v253;
  if (v253 > 0x7F) {
    uint64_t v254 = sub_188A9CC(v253, v4 + 2);
  }
  else {
    uint64_t v254 = v4 + 3;
  }
  char v4 = sub_17847E8(v252, v254, a3);
  if ((v200 & 0x40000) == 0)
  {
LABEL_470:
    if ((v200 & 0x80000) == 0) {
      goto LABEL_471;
    }
    goto LABEL_598;
  }
LABEL_592:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v255 = *(void *)(a1 + 720);
  *(_WORD *)char v4 = 1498;
  unsigned int v256 = *(_DWORD *)(v255 + 16);
  v4[2] = v256;
  if (v256 > 0x7F) {
    v257 = sub_188A9CC(v256, v4 + 2);
  }
  else {
    v257 = v4 + 3;
  }
  char v4 = sub_16E14C4(v255, v257, a3);
  if ((v200 & 0x80000) == 0)
  {
LABEL_471:
    if ((v200 & 0x100000) == 0) {
      goto LABEL_472;
    }
    goto LABEL_604;
  }
LABEL_598:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v258 = *(void *)(a1 + 728);
  *(_WORD *)char v4 = 1514;
  unsigned int v259 = *(_DWORD *)(v258 + 16);
  v4[2] = v259;
  if (v259 > 0x7F) {
    v260 = sub_188A9CC(v259, v4 + 2);
  }
  else {
    v260 = v4 + 3;
  }
  char v4 = sub_16F6B74(v258, v260, a3);
  if ((v200 & 0x100000) == 0)
  {
LABEL_472:
    if ((v200 & 0x200000) == 0) {
      goto LABEL_473;
    }
    goto LABEL_610;
  }
LABEL_604:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v261 = *(void *)(a1 + 736);
  *(_WORD *)char v4 = 1522;
  unsigned int v262 = *(_DWORD *)(v261 + 32);
  v4[2] = v262;
  if (v262 > 0x7F) {
    uint64_t v263 = sub_188A9CC(v262, v4 + 2);
  }
  else {
    uint64_t v263 = v4 + 3;
  }
  char v4 = sub_17760C8(v261, v263, a3);
  if ((v200 & 0x200000) == 0)
  {
LABEL_473:
    if ((v200 & 0x400000) == 0) {
      goto LABEL_474;
    }
    goto LABEL_616;
  }
LABEL_610:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v264 = *(void *)(a1 + 744);
  *(_WORD *)char v4 = 1530;
  unsigned int v265 = *(_DWORD *)(v264 + 16);
  v4[2] = v265;
  if (v265 > 0x7F) {
    v266 = sub_188A9CC(v265, v4 + 2);
  }
  else {
    v266 = v4 + 3;
  }
  char v4 = sub_1785F34(v264, v266, a3);
  if ((v200 & 0x400000) == 0)
  {
LABEL_474:
    if ((v200 & 0x800000) == 0) {
      goto LABEL_475;
    }
    goto LABEL_622;
  }
LABEL_616:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v267 = *(void *)(a1 + 752);
  *(_WORD *)char v4 = 1666;
  unsigned int v268 = *(_DWORD *)(v267 + 16);
  v4[2] = v268;
  if (v268 > 0x7F) {
    v269 = sub_188A9CC(v268, v4 + 2);
  }
  else {
    v269 = v4 + 3;
  }
  char v4 = sub_16E206C(v267, v269, a3);
  if ((v200 & 0x800000) == 0)
  {
LABEL_475:
    if ((v200 & 0x1000000) == 0) {
      goto LABEL_476;
    }
    goto LABEL_628;
  }
LABEL_622:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v270 = *(void *)(a1 + 760);
  *(_WORD *)char v4 = 1674;
  unsigned int v271 = *(_DWORD *)(v270 + 16);
  v4[2] = v271;
  if (v271 > 0x7F) {
    uint64_t v272 = sub_188A9CC(v271, v4 + 2);
  }
  else {
    uint64_t v272 = v4 + 3;
  }
  char v4 = sub_16E2328(v270, v272, a3);
  if ((v200 & 0x1000000) == 0)
  {
LABEL_476:
    if ((v200 & 0x2000000) == 0) {
      goto LABEL_477;
    }
    goto LABEL_634;
  }
LABEL_628:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v273 = *(void *)(a1 + 768);
  *(_WORD *)char v4 = 1682;
  unsigned int v274 = *(_DWORD *)(v273 + 44);
  v4[2] = v274;
  if (v274 > 0x7F) {
    uint64_t v275 = sub_188A9CC(v274, v4 + 2);
  }
  else {
    uint64_t v275 = v4 + 3;
  }
  char v4 = sub_1753D58(v273, v275, a3);
  if ((v200 & 0x2000000) == 0)
  {
LABEL_477:
    if ((v200 & 0x4000000) == 0) {
      goto LABEL_478;
    }
    goto LABEL_640;
  }
LABEL_634:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v276 = *(void *)(a1 + 776);
  *(_WORD *)char v4 = 1698;
  unsigned int v277 = *(_DWORD *)(v276 + 40);
  v4[2] = v277;
  if (v277 > 0x7F) {
    v278 = sub_188A9CC(v277, v4 + 2);
  }
  else {
    v278 = v4 + 3;
  }
  char v4 = sub_174CE18(v276, v278, a3);
  if ((v200 & 0x4000000) == 0)
  {
LABEL_478:
    if ((v200 & 0x8000000) == 0) {
      goto LABEL_479;
    }
    goto LABEL_646;
  }
LABEL_640:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v279 = *(void *)(a1 + 784);
  *(_WORD *)char v4 = 1706;
  unsigned int v280 = *(_DWORD *)(v279 + 40);
  v4[2] = v280;
  if (v280 > 0x7F) {
    v281 = sub_188A9CC(v280, v4 + 2);
  }
  else {
    v281 = v4 + 3;
  }
  char v4 = sub_175166C(v279, v281, a3);
  if ((v200 & 0x8000000) == 0)
  {
LABEL_479:
    if ((v200 & 0x10000000) == 0) {
      goto LABEL_480;
    }
    goto LABEL_652;
  }
LABEL_646:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v282 = *(void *)(a1 + 792);
  *(_WORD *)char v4 = 1714;
  unsigned int v283 = *(_DWORD *)(v282 + 40);
  v4[2] = v283;
  if (v283 > 0x7F) {
    uint64_t v284 = sub_188A9CC(v283, v4 + 2);
  }
  else {
    uint64_t v284 = v4 + 3;
  }
  char v4 = sub_16FFE44(v282, v284, a3);
  if ((v200 & 0x10000000) == 0)
  {
LABEL_480:
    if ((v200 & 0x20000000) == 0) {
      goto LABEL_481;
    }
    goto LABEL_658;
  }
LABEL_652:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v285 = *(void *)(a1 + 800);
  *(_WORD *)char v4 = 1722;
  unsigned int v286 = *(_DWORD *)(v285 + 40);
  v4[2] = v286;
  if (v286 > 0x7F) {
    uint64_t v287 = sub_188A9CC(v286, v4 + 2);
  }
  else {
    uint64_t v287 = v4 + 3;
  }
  char v4 = sub_174DA54(v285, v287, a3);
  if ((v200 & 0x20000000) == 0)
  {
LABEL_481:
    if ((v200 & 0x40000000) == 0) {
      goto LABEL_482;
    }
    goto LABEL_664;
  }
LABEL_658:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v288 = *(void *)(a1 + 808);
  *(_WORD *)char v4 = 1730;
  unsigned int v289 = *(_DWORD *)(v288 + 40);
  v4[2] = v289;
  if (v289 > 0x7F) {
    v290 = sub_188A9CC(v289, v4 + 2);
  }
  else {
    v290 = v4 + 3;
  }
  char v4 = sub_174EA48(v288, v290, a3);
  if ((v200 & 0x40000000) == 0)
  {
LABEL_482:
    if ((v200 & 0x80000000) == 0) {
      goto LABEL_676;
    }
    goto LABEL_670;
  }
LABEL_664:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v291 = *(void *)(a1 + 816);
  *(_WORD *)char v4 = 1738;
  unsigned int v292 = *(_DWORD *)(v291 + 40);
  v4[2] = v292;
  if (v292 > 0x7F) {
    v293 = sub_188A9CC(v292, v4 + 2);
  }
  else {
    v293 = v4 + 3;
  }
  char v4 = sub_174F8D8(v291, v293, a3);
  if (v200 < 0)
  {
LABEL_670:
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v294 = *(void *)(a1 + 824);
    *(_WORD *)char v4 = 1746;
    unsigned int v295 = *(_DWORD *)(v294 + 40);
    v4[2] = v295;
    if (v295 > 0x7F) {
      uint64_t v296 = sub_188A9CC(v295, v4 + 2);
    }
    else {
      uint64_t v296 = v4 + 3;
    }
    char v4 = sub_175026C(v294, v296, a3);
  }
LABEL_676:
  if (*(unsigned char *)(a1 + 52))
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v297 = *(void *)(a1 + 832);
    *(_WORD *)char v4 = 1754;
    unsigned int v298 = *(_DWORD *)(v297 + 44);
    v4[2] = v298;
    if (v298 > 0x7F) {
      uint64_t v299 = sub_188A9CC(v298, v4 + 2);
    }
    else {
      uint64_t v299 = v4 + 3;
    }
    char v4 = sub_174C3CC(v297, v299, a3);
  }
  if (*(_WORD *)(a1 + 26)) {
    char v4 = sub_1886844(a1 + 16, 1000, 2000, v4, a3);
  }
  uint64_t v300 = *(void *)(a1 + 8);
  if ((v300 & 1) == 0) {
    return v4;
  }
  unint64_t v302 = v300 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v302 + 31) < 0)
  {
    uint64_t v303 = *(void **)(v302 + 8);
    uint64_t v304 = *(void *)(v302 + 16);
  }
  else
  {
    uint64_t v303 = (void *)(v302 + 8);
    LODWORD(v304) = *(unsigned __int8 *)(v302 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v304)
  {
    uint64_t v305 = (int)v304;
    memcpy(v4, v303, (int)v304);
    v4 += v305;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v303, v304, v4);
}

uint64_t sub_173AFF4(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  unsigned int v3 = *(_DWORD *)(a1 + 40);
  if (!(_BYTE)v3) {
    goto LABEL_11;
  }
  if (v3)
  {
    uint64_t v5 = sub_16BDE20(*(void *)(a1 + 64));
    v2 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v3 & 2) == 0)
    {
LABEL_4:
      if ((v3 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_23;
    }
  }
  else if ((v3 & 2) == 0)
  {
    goto LABEL_4;
  }
  uint64_t v6 = sub_16C3DDC(*(void *)(a1 + 72));
  v2 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v3 & 4) == 0)
  {
LABEL_5:
    if ((v3 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_24;
  }
LABEL_23:
  uint64_t v7 = sub_16C4924(*(void *)(a1 + 80));
  v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v3 & 8) == 0)
  {
LABEL_6:
    if ((v3 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_25;
  }
LABEL_24:
  uint64_t v8 = sub_16C5BAC(*(void *)(a1 + 88));
  v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v3 & 0x10) == 0)
  {
LABEL_7:
    if ((v3 & 0x20) == 0) {
      goto LABEL_8;
    }
LABEL_26:
    uint64_t v10 = sub_16E4214(*(void *)(a1 + 104));
    v2 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v3 & 0x40) == 0)
    {
LABEL_9:
      if ((v3 & 0x80) == 0) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
    goto LABEL_27;
  }
LABEL_25:
  uint64_t v9 = sub_16C7DC4(*(void *)(a1 + 96));
  v2 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v3 & 0x20) != 0) {
    goto LABEL_26;
  }
LABEL_8:
  if ((v3 & 0x40) == 0) {
    goto LABEL_9;
  }
LABEL_27:
  uint64_t v11 = sub_16E6058(*(void *)(a1 + 112));
  v2 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v3 & 0x80) != 0)
  {
LABEL_10:
    uint64_t v4 = sub_16EC3D0(*(void *)(a1 + 120));
    v2 += v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_11:
  if ((v3 & 0xFF00) == 0) {
    goto LABEL_43;
  }
  if ((v3 & 0x100) != 0)
  {
    uint64_t v12 = sub_16EADF0(*(void *)(a1 + 128));
    v2 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v3 & 0x200) == 0)
    {
LABEL_14:
      if ((v3 & 0x400) == 0) {
        goto LABEL_15;
      }
      goto LABEL_33;
    }
  }
  else if ((v3 & 0x200) == 0)
  {
    goto LABEL_14;
  }
  uint64_t v13 = *(void *)(a1 + 136);
  uint64_t v14 = *(void *)(v13 + 8);
  if (v14)
  {
    unint64_t v187 = v14 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v187 + 31) < 0) {
      uint64_t v15 = *(void *)(v187 + 16);
    }
    else {
      uint64_t v15 = *(unsigned __int8 *)(v187 + 31);
    }
  }
  else
  {
    uint64_t v15 = 0;
  }
  *(_DWORD *)(v13 + 16) = v15;
  v2 += v15 + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v3 & 0x400) == 0)
  {
LABEL_15:
    if ((v3 & 0x800) == 0) {
      goto LABEL_16;
    }
    goto LABEL_34;
  }
LABEL_33:
  uint64_t v16 = sub_16D12A0(*(void *)(a1 + 144));
  v2 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v3 & 0x800) == 0)
  {
LABEL_16:
    if ((v3 & 0x1000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_35;
  }
LABEL_34:
  uint64_t v17 = sub_16EF228(*(void *)(a1 + 152));
  v2 += v17 + ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v3 & 0x1000) == 0)
  {
LABEL_17:
    if ((v3 & 0x2000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_38;
  }
LABEL_35:
  uint64_t v18 = *(void *)(a1 + 160);
  uint64_t v19 = *(void *)(v18 + 8);
  if (v19)
  {
    unint64_t v188 = v19 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v188 + 31) < 0) {
      uint64_t v20 = *(void *)(v188 + 16);
    }
    else {
      uint64_t v20 = *(unsigned __int8 *)(v188 + 31);
    }
  }
  else
  {
    uint64_t v20 = 0;
  }
  *(_DWORD *)(v18 + 16) = v20;
  v2 += v20 + ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v3 & 0x2000) == 0)
  {
LABEL_18:
    if ((v3 & 0x4000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_39;
  }
LABEL_38:
  uint64_t v21 = sub_16F06A0(*(void *)(a1 + 168));
  v2 += v21 + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v3 & 0x4000) == 0)
  {
LABEL_19:
    if ((v3 & 0x8000) == 0) {
      goto LABEL_43;
    }
    goto LABEL_40;
  }
LABEL_39:
  uint64_t v22 = sub_16F26D8(*(void *)(a1 + 176));
  v2 += v22 + ((9 * (__clz(v22 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v3 & 0x8000) == 0) {
    goto LABEL_43;
  }
LABEL_40:
  uint64_t v23 = *(void *)(a1 + 184);
  uint64_t v24 = *(void *)(v23 + 8);
  if (v24)
  {
    unint64_t v189 = v24 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v189 + 31) < 0) {
      uint64_t v25 = *(void *)(v189 + 16);
    }
    else {
      uint64_t v25 = *(unsigned __int8 *)(v189 + 31);
    }
  }
  else
  {
    uint64_t v25 = 0;
  }
  *(_DWORD *)(v23 + 16) = v25;
  v2 += v25 + ((9 * (__clz(v25 | 1) ^ 0x1F) + 73) >> 6) + 2;
LABEL_43:
  if ((v3 & 0xFF0000) == 0) {
    goto LABEL_74;
  }
  if ((v3 & 0x10000) != 0)
  {
    uint64_t v26 = *(void *)(a1 + 192);
    uint64_t v27 = *(void *)(v26 + 8);
    if (v27)
    {
      unint64_t v190 = v27 & 0xFFFFFFFFFFFFFFFCLL;
      if (*(char *)(v190 + 31) < 0) {
        uint64_t v28 = *(void *)(v190 + 16);
      }
      else {
        uint64_t v28 = *(unsigned __int8 *)(v190 + 31);
      }
    }
    else
    {
      uint64_t v28 = 0;
    }
    *(_DWORD *)(v26 + 16) = v28;
    v2 += v28 + ((9 * (__clz(v28 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v3 & 0x20000) == 0)
    {
LABEL_46:
      if ((v3 & 0x40000) == 0) {
        goto LABEL_47;
      }
      goto LABEL_59;
    }
  }
  else if ((v3 & 0x20000) == 0)
  {
    goto LABEL_46;
  }
  uint64_t v29 = *(void *)(a1 + 200);
  uint64_t v30 = *(void *)(v29 + 8);
  if (v30)
  {
    unint64_t v191 = v30 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v191 + 31) < 0) {
      uint64_t v31 = *(void *)(v191 + 16);
    }
    else {
      uint64_t v31 = *(unsigned __int8 *)(v191 + 31);
    }
  }
  else
  {
    uint64_t v31 = 0;
  }
  *(_DWORD *)(v29 + 16) = v31;
  v2 += v31 + ((9 * (__clz(v31 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v3 & 0x40000) == 0)
  {
LABEL_47:
    if ((v3 & 0x80000) == 0) {
      goto LABEL_48;
    }
    goto LABEL_62;
  }
LABEL_59:
  uint64_t v32 = *(void *)(a1 + 208);
  uint64_t v33 = *(void *)(v32 + 8);
  if (v33)
  {
    unint64_t v192 = v33 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v192 + 31) < 0) {
      uint64_t v34 = *(void *)(v192 + 16);
    }
    else {
      uint64_t v34 = *(unsigned __int8 *)(v192 + 31);
    }
  }
  else
  {
    uint64_t v34 = 0;
  }
  *(_DWORD *)(v32 + 16) = v34;
  v2 += v34 + ((9 * (__clz(v34 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v3 & 0x80000) == 0)
  {
LABEL_48:
    if ((v3 & 0x100000) == 0) {
      goto LABEL_49;
    }
    goto LABEL_64;
  }
LABEL_62:
  uint64_t v35 = *(void *)(a1 + 216);
  uint64_t v36 = 2 * (*(_DWORD *)(v35 + 16) & 1);
  uint64_t v37 = *(void *)(v35 + 8);
  if (v37)
  {
    unint64_t v193 = v37 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v193 + 31) < 0) {
      uint64_t v194 = *(void *)(v193 + 16);
    }
    else {
      uint64_t v194 = *(unsigned __int8 *)(v193 + 31);
    }
    v36 += v194;
  }
  *(_DWORD *)(v35 + 20) = v36;
  v2 += v36 + ((9 * (__clz(v36 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v3 & 0x100000) == 0)
  {
LABEL_49:
    if ((v3 & 0x200000) == 0) {
      goto LABEL_50;
    }
    goto LABEL_67;
  }
LABEL_64:
  uint64_t v38 = *(void *)(a1 + 224);
  uint64_t v39 = *(void *)(v38 + 8);
  if (v39)
  {
    unint64_t v195 = v39 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v195 + 31) < 0) {
      uint64_t v40 = *(void *)(v195 + 16);
    }
    else {
      uint64_t v40 = *(unsigned __int8 *)(v195 + 31);
    }
  }
  else
  {
    uint64_t v40 = 0;
  }
  *(_DWORD *)(v38 + 16) = v40;
  v2 += v40 + ((9 * (__clz(v40 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v3 & 0x200000) == 0)
  {
LABEL_50:
    if ((v3 & 0x400000) == 0) {
      goto LABEL_51;
    }
    goto LABEL_70;
  }
LABEL_67:
  uint64_t v41 = *(void *)(a1 + 232);
  uint64_t v42 = *(void *)(v41 + 8);
  if (v42)
  {
    unint64_t v196 = v42 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v196 + 31) < 0) {
      uint64_t v43 = *(void *)(v196 + 16);
    }
    else {
      uint64_t v43 = *(unsigned __int8 *)(v196 + 31);
    }
  }
  else
  {
    uint64_t v43 = 0;
  }
  *(_DWORD *)(v41 + 16) = v43;
  v2 += v43 + ((9 * (__clz(v43 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v3 & 0x400000) == 0)
  {
LABEL_51:
    if ((v3 & 0x800000) == 0) {
      goto LABEL_74;
    }
    goto LABEL_71;
  }
LABEL_70:
  uint64_t v44 = sub_16FE540(*(void *)(a1 + 240));
  v2 += v44 + ((9 * (__clz(v44 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v3 & 0x800000) == 0) {
    goto LABEL_74;
  }
LABEL_71:
  uint64_t v45 = *(void *)(a1 + 248);
  uint64_t v46 = *(void *)(v45 + 8);
  if (v46)
  {
    unint64_t v197 = v46 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v197 + 31) < 0) {
      uint64_t v47 = *(void *)(v197 + 16);
    }
    else {
      uint64_t v47 = *(unsigned __int8 *)(v197 + 31);
    }
  }
  else
  {
    uint64_t v47 = 0;
  }
  *(_DWORD *)(v45 + 16) = v47;
  v2 += v47 + ((9 * (__clz(v47 | 1) ^ 0x1F) + 73) >> 6) + 2;
LABEL_74:
  if (!HIBYTE(v3)) {
    goto LABEL_83;
  }
  if ((v3 & 0x1000000) != 0)
  {
    uint64_t v153 = *(void *)(a1 + 256);
    uint64_t v154 = *(void *)(v153 + 8);
    if (v154)
    {
      unint64_t v224 = v154 & 0xFFFFFFFFFFFFFFFCLL;
      if (*(char *)(v224 + 31) < 0) {
        uint64_t v155 = *(void *)(v224 + 16);
      }
      else {
        uint64_t v155 = *(unsigned __int8 *)(v224 + 31);
      }
    }
    else
    {
      uint64_t v155 = 0;
    }
    *(_DWORD *)(v153 + 16) = v155;
    v2 += v155 + ((9 * (__clz(v155 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v3 & 0x2000000) == 0)
    {
LABEL_77:
      if ((v3 & 0x4000000) == 0) {
        goto LABEL_78;
      }
      goto LABEL_269;
    }
  }
  else if ((v3 & 0x2000000) == 0)
  {
    goto LABEL_77;
  }
  uint64_t v156 = sub_1702F18(*(void *)(a1 + 264));
  v2 += v156 + ((9 * (__clz(v156 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v3 & 0x4000000) == 0)
  {
LABEL_78:
    if ((v3 & 0x8000000) == 0) {
      goto LABEL_79;
    }
    goto LABEL_270;
  }
LABEL_269:
  uint64_t v157 = sub_170A170(*(void *)(a1 + 272));
  v2 += v157 + ((9 * (__clz(v157 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v3 & 0x8000000) == 0)
  {
LABEL_79:
    if ((v3 & 0x10000000) == 0) {
      goto LABEL_80;
    }
    goto LABEL_271;
  }
LABEL_270:
  uint64_t v158 = sub_16C89BC(*(void *)(a1 + 280));
  v2 += v158 + ((9 * (__clz(v158 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v3 & 0x10000000) == 0)
  {
LABEL_80:
    if ((v3 & 0x20000000) == 0) {
      goto LABEL_81;
    }
    goto LABEL_274;
  }
LABEL_271:
  uint64_t v159 = *(void *)(a1 + 288);
  uint64_t v160 = *(void *)(v159 + 8);
  if (v160)
  {
    unint64_t v225 = v160 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v225 + 31) < 0) {
      uint64_t v161 = *(void *)(v225 + 16);
    }
    else {
      uint64_t v161 = *(unsigned __int8 *)(v225 + 31);
    }
  }
  else
  {
    uint64_t v161 = 0;
  }
  *(_DWORD *)(v159 + 16) = v161;
  v2 += v161 + ((9 * (__clz(v161 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v3 & 0x20000000) == 0)
  {
LABEL_81:
    if ((v3 & 0x40000000) == 0) {
      goto LABEL_82;
    }
    goto LABEL_277;
  }
LABEL_274:
  uint64_t v162 = *(void *)(a1 + 296);
  uint64_t v163 = *(void *)(v162 + 8);
  if (v163)
  {
    unint64_t v226 = v163 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v226 + 31) < 0) {
      uint64_t v164 = *(void *)(v226 + 16);
    }
    else {
      uint64_t v164 = *(unsigned __int8 *)(v226 + 31);
    }
  }
  else
  {
    uint64_t v164 = 0;
  }
  *(_DWORD *)(v162 + 16) = v164;
  v2 += v164 + ((9 * (__clz(v164 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v3 & 0x40000000) == 0)
  {
LABEL_82:
    if ((v3 & 0x80000000) == 0) {
      goto LABEL_83;
    }
    goto LABEL_280;
  }
LABEL_277:
  uint64_t v165 = *(void *)(a1 + 304);
  uint64_t v166 = *(void *)(v165 + 8);
  if (v166)
  {
    unint64_t v227 = v166 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v227 + 31) < 0) {
      uint64_t v167 = *(void *)(v227 + 16);
    }
    else {
      uint64_t v167 = *(unsigned __int8 *)(v227 + 31);
    }
  }
  else
  {
    uint64_t v167 = 0;
  }
  *(_DWORD *)(v165 + 16) = v167;
  v2 += v167 + ((9 * (__clz(v167 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v3 & 0x80000000) != 0)
  {
LABEL_280:
    uint64_t v168 = sub_16E7BF4(*(void *)(a1 + 312));
    v2 += v168 + ((9 * (__clz(v168 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
LABEL_83:
  unsigned int v48 = *(_DWORD *)(a1 + 44);
  if (!(_BYTE)v48) {
    goto LABEL_115;
  }
  if (v48)
  {
    uint64_t v49 = *(void *)(a1 + 320);
    uint64_t v50 = *(void *)(v49 + 8);
    if (v50)
    {
      unint64_t v198 = v50 & 0xFFFFFFFFFFFFFFFCLL;
      if (*(char *)(v198 + 31) < 0) {
        uint64_t v51 = *(void *)(v198 + 16);
      }
      else {
        uint64_t v51 = *(unsigned __int8 *)(v198 + 31);
      }
    }
    else
    {
      uint64_t v51 = 0;
    }
    *(_DWORD *)(v49 + 16) = v51;
    v2 += v51 + ((9 * (__clz(v51 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v48 & 2) == 0)
    {
LABEL_86:
      if ((v48 & 4) == 0) {
        goto LABEL_87;
      }
      goto LABEL_99;
    }
  }
  else if ((v48 & 2) == 0)
  {
    goto LABEL_86;
  }
  uint64_t v52 = *(void *)(a1 + 328);
  uint64_t v53 = *(void *)(v52 + 8);
  if (v53)
  {
    unint64_t v199 = v53 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v199 + 31) < 0) {
      uint64_t v54 = *(void *)(v199 + 16);
    }
    else {
      uint64_t v54 = *(unsigned __int8 *)(v199 + 31);
    }
  }
  else
  {
    uint64_t v54 = 0;
  }
  *(_DWORD *)(v52 + 16) = v54;
  v2 += v54 + ((9 * (__clz(v54 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v48 & 4) == 0)
  {
LABEL_87:
    if ((v48 & 8) == 0) {
      goto LABEL_88;
    }
    goto LABEL_102;
  }
LABEL_99:
  uint64_t v55 = *(void *)(a1 + 336);
  uint64_t v56 = *(void *)(v55 + 8);
  if (v56)
  {
    unint64_t v200 = v56 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v200 + 31) < 0) {
      uint64_t v57 = *(void *)(v200 + 16);
    }
    else {
      uint64_t v57 = *(unsigned __int8 *)(v200 + 31);
    }
  }
  else
  {
    uint64_t v57 = 0;
  }
  *(_DWORD *)(v55 + 16) = v57;
  v2 += v57 + ((9 * (__clz(v57 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v48 & 8) == 0)
  {
LABEL_88:
    if ((v48 & 0x10) == 0) {
      goto LABEL_89;
    }
    goto LABEL_103;
  }
LABEL_102:
  uint64_t v58 = sub_1711718(*(void *)(a1 + 344));
  v2 += v58 + ((9 * (__clz(v58 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v48 & 0x10) == 0)
  {
LABEL_89:
    if ((v48 & 0x20) == 0) {
      goto LABEL_90;
    }
    goto LABEL_106;
  }
LABEL_103:
  uint64_t v59 = *(void *)(a1 + 352);
  uint64_t v60 = *(void *)(v59 + 8);
  if (v60)
  {
    unint64_t v201 = v60 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v201 + 31) < 0) {
      uint64_t v61 = *(void *)(v201 + 16);
    }
    else {
      uint64_t v61 = *(unsigned __int8 *)(v201 + 31);
    }
  }
  else
  {
    uint64_t v61 = 0;
  }
  *(_DWORD *)(v59 + 16) = v61;
  v2 += v61 + ((9 * (__clz(v61 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v48 & 0x20) == 0)
  {
LABEL_90:
    if ((v48 & 0x40) == 0) {
      goto LABEL_91;
    }
    goto LABEL_109;
  }
LABEL_106:
  uint64_t v62 = *(void *)(a1 + 360);
  uint64_t v63 = *(void *)(v62 + 8);
  if (v63)
  {
    unint64_t v202 = v63 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v202 + 31) < 0) {
      uint64_t v64 = *(void *)(v202 + 16);
    }
    else {
      uint64_t v64 = *(unsigned __int8 *)(v202 + 31);
    }
  }
  else
  {
    uint64_t v64 = 0;
  }
  *(_DWORD *)(v62 + 16) = v64;
  v2 += v64 + ((9 * (__clz(v64 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v48 & 0x40) == 0)
  {
LABEL_91:
    if ((v48 & 0x80) == 0) {
      goto LABEL_115;
    }
    goto LABEL_112;
  }
LABEL_109:
  uint64_t v65 = *(void *)(a1 + 368);
  uint64_t v66 = *(void *)(v65 + 8);
  if (v66)
  {
    unint64_t v203 = v66 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v203 + 31) < 0) {
      uint64_t v67 = *(void *)(v203 + 16);
    }
    else {
      uint64_t v67 = *(unsigned __int8 *)(v203 + 31);
    }
  }
  else
  {
    uint64_t v67 = 0;
  }
  *(_DWORD *)(v65 + 16) = v67;
  v2 += v67 + ((9 * (__clz(v67 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v48 & 0x80) != 0)
  {
LABEL_112:
    uint64_t v68 = *(void *)(a1 + 376);
    uint64_t v69 = *(void *)(v68 + 8);
    if (v69)
    {
      unint64_t v204 = v69 & 0xFFFFFFFFFFFFFFFCLL;
      if (*(char *)(v204 + 31) < 0) {
        uint64_t v70 = *(void *)(v204 + 16);
      }
      else {
        uint64_t v70 = *(unsigned __int8 *)(v204 + 31);
      }
    }
    else
    {
      uint64_t v70 = 0;
    }
    *(_DWORD *)(v68 + 16) = v70;
    v2 += v70 + ((9 * (__clz(v70 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
LABEL_115:
  if ((v48 & 0xFF00) == 0) {
    goto LABEL_125;
  }
  if ((v48 & 0x100) != 0)
  {
    uint64_t v75 = *(void *)(a1 + 384);
    uint64_t v76 = *(void *)(v75 + 8);
    if (v76)
    {
      unint64_t v205 = v76 & 0xFFFFFFFFFFFFFFFCLL;
      if (*(char *)(v205 + 31) < 0) {
        uint64_t v77 = *(void *)(v205 + 16);
      }
      else {
        uint64_t v77 = *(unsigned __int8 *)(v205 + 31);
      }
    }
    else
    {
      uint64_t v77 = 0;
    }
    *(_DWORD *)(v75 + 16) = v77;
    v2 += v77 + ((9 * (__clz(v77 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v48 & 0x200) == 0)
    {
LABEL_118:
      if ((v48 & 0x400) == 0) {
        goto LABEL_119;
      }
      goto LABEL_170;
    }
  }
  else if ((v48 & 0x200) == 0)
  {
    goto LABEL_118;
  }
  uint64_t v78 = *(void *)(a1 + 392);
  uint64_t v79 = *(void *)(v78 + 8);
  if (v79)
  {
    unint64_t v206 = v79 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v206 + 31) < 0) {
      uint64_t v80 = *(void *)(v206 + 16);
    }
    else {
      uint64_t v80 = *(unsigned __int8 *)(v206 + 31);
    }
  }
  else
  {
    uint64_t v80 = 0;
  }
  *(_DWORD *)(v78 + 16) = v80;
  v2 += v80 + ((9 * (__clz(v80 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v48 & 0x400) == 0)
  {
LABEL_119:
    if ((v48 & 0x800) == 0) {
      goto LABEL_120;
    }
    goto LABEL_173;
  }
LABEL_170:
  uint64_t v81 = *(void *)(a1 + 400);
  uint64_t v82 = *(void *)(v81 + 8);
  if (v82)
  {
    unint64_t v207 = v82 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v207 + 31) < 0) {
      uint64_t v83 = *(void *)(v207 + 16);
    }
    else {
      uint64_t v83 = *(unsigned __int8 *)(v207 + 31);
    }
  }
  else
  {
    uint64_t v83 = 0;
  }
  *(_DWORD *)(v81 + 16) = v83;
  v2 += v83 + ((9 * (__clz(v83 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v48 & 0x800) == 0)
  {
LABEL_120:
    if ((v48 & 0x1000) == 0) {
      goto LABEL_121;
    }
    goto LABEL_176;
  }
LABEL_173:
  uint64_t v84 = *(void *)(a1 + 408);
  uint64_t v85 = *(void *)(v84 + 8);
  if (v85)
  {
    unint64_t v208 = v85 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v208 + 31) < 0) {
      uint64_t v86 = *(void *)(v208 + 16);
    }
    else {
      uint64_t v86 = *(unsigned __int8 *)(v208 + 31);
    }
  }
  else
  {
    uint64_t v86 = 0;
  }
  *(_DWORD *)(v84 + 16) = v86;
  v2 += v86 + ((9 * (__clz(v86 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v48 & 0x1000) == 0)
  {
LABEL_121:
    if ((v48 & 0x2000) == 0) {
      goto LABEL_122;
    }
    goto LABEL_179;
  }
LABEL_176:
  uint64_t v87 = *(void *)(a1 + 416);
  uint64_t v88 = *(void *)(v87 + 8);
  if (v88)
  {
    unint64_t v209 = v88 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v209 + 31) < 0) {
      uint64_t v89 = *(void *)(v209 + 16);
    }
    else {
      uint64_t v89 = *(unsigned __int8 *)(v209 + 31);
    }
  }
  else
  {
    uint64_t v89 = 0;
  }
  *(_DWORD *)(v87 + 16) = v89;
  v2 += v89 + ((9 * (__clz(v89 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v48 & 0x2000) == 0)
  {
LABEL_122:
    if ((v48 & 0x4000) == 0) {
      goto LABEL_123;
    }
    goto LABEL_180;
  }
LABEL_179:
  uint64_t v90 = sub_170C500(*(void *)(a1 + 424));
  v2 += v90 + ((9 * (__clz(v90 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v48 & 0x4000) == 0)
  {
LABEL_123:
    if ((v48 & 0x8000) == 0) {
      goto LABEL_125;
    }
    goto LABEL_124;
  }
LABEL_180:
  uint64_t v91 = sub_170D0A4(*(void *)(a1 + 432));
  v2 += v91 + ((9 * (__clz(v91 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v48 & 0x8000) != 0)
  {
LABEL_124:
    uint64_t v71 = sub_16ED190(*(void *)(a1 + 440));
    v2 += v71 + ((9 * (__clz(v71 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
LABEL_125:
  if ((v48 & 0xFF0000) == 0) {
    goto LABEL_135;
  }
  if ((v48 & 0x10000) != 0)
  {
    uint64_t v92 = sub_16E86C0(*(void *)(a1 + 448));
    v2 += v92 + ((9 * (__clz(v92 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v48 & 0x20000) == 0)
    {
LABEL_128:
      if ((v48 & 0x40000) == 0) {
        goto LABEL_129;
      }
      goto LABEL_184;
    }
  }
  else if ((v48 & 0x20000) == 0)
  {
    goto LABEL_128;
  }
  uint64_t v93 = sub_129F85C(*(void *)(a1 + 456));
  v2 += v93 + ((9 * (__clz(v93 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v48 & 0x40000) == 0)
  {
LABEL_129:
    if ((v48 & 0x80000) == 0) {
      goto LABEL_130;
    }
    goto LABEL_187;
  }
LABEL_184:
  uint64_t v94 = *(void *)(a1 + 464);
  uint64_t v95 = *(void *)(v94 + 8);
  if (v95)
  {
    unint64_t v210 = v95 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v210 + 31) < 0) {
      uint64_t v96 = *(void *)(v210 + 16);
    }
    else {
      uint64_t v96 = *(unsigned __int8 *)(v210 + 31);
    }
  }
  else
  {
    uint64_t v96 = 0;
  }
  *(_DWORD *)(v94 + 16) = v96;
  v2 += v96 + ((9 * (__clz(v96 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v48 & 0x80000) == 0)
  {
LABEL_130:
    if ((v48 & 0x100000) == 0) {
      goto LABEL_131;
    }
    goto LABEL_190;
  }
LABEL_187:
  uint64_t v97 = *(void *)(a1 + 472);
  uint64_t v98 = *(void *)(v97 + 8);
  if (v98)
  {
    unint64_t v211 = v98 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v211 + 31) < 0) {
      uint64_t v99 = *(void *)(v211 + 16);
    }
    else {
      uint64_t v99 = *(unsigned __int8 *)(v211 + 31);
    }
  }
  else
  {
    uint64_t v99 = 0;
  }
  *(_DWORD *)(v97 + 16) = v99;
  v2 += v99 + ((9 * (__clz(v99 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v48 & 0x100000) == 0)
  {
LABEL_131:
    if ((v48 & 0x200000) == 0) {
      goto LABEL_132;
    }
    goto LABEL_191;
  }
LABEL_190:
  uint64_t v100 = sub_16C2674(*(void *)(a1 + 480));
  v2 += v100 + ((9 * (__clz(v100 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v48 & 0x200000) == 0)
  {
LABEL_132:
    if ((v48 & 0x400000) == 0) {
      goto LABEL_133;
    }
    goto LABEL_192;
  }
LABEL_191:
  uint64_t v101 = sub_171A1C8(*(void *)(a1 + 488));
  v2 += v101 + ((9 * (__clz(v101 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v48 & 0x400000) == 0)
  {
LABEL_133:
    if ((v48 & 0x800000) == 0) {
      goto LABEL_135;
    }
    goto LABEL_134;
  }
LABEL_192:
  uint64_t v102 = *(void *)(a1 + 496);
  uint64_t v103 = *(void *)(v102 + 8);
  if (v103)
  {
    unint64_t v212 = v103 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v212 + 31) < 0) {
      uint64_t v104 = *(void *)(v212 + 16);
    }
    else {
      uint64_t v104 = *(unsigned __int8 *)(v212 + 31);
    }
  }
  else
  {
    uint64_t v104 = 0;
  }
  *(_DWORD *)(v102 + 16) = v104;
  v2 += v104 + ((9 * (__clz(v104 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v48 & 0x800000) != 0)
  {
LABEL_134:
    uint64_t v72 = sub_177CE18(*(void *)(a1 + 504));
    v2 += v72 + ((9 * (__clz(v72 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
LABEL_135:
  if (!HIBYTE(v48)) {
    goto LABEL_144;
  }
  if ((v48 & 0x1000000) != 0)
  {
    uint64_t v169 = sub_177D1E4(*(void *)(a1 + 512));
    v2 += v169 + ((9 * (__clz(v169 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v48 & 0x2000000) == 0)
    {
LABEL_138:
      if ((v48 & 0x4000000) == 0) {
        goto LABEL_139;
      }
      goto LABEL_283;
    }
  }
  else if ((v48 & 0x2000000) == 0)
  {
    goto LABEL_138;
  }
  uint64_t v170 = sub_177D5B0(*(void *)(a1 + 520));
  v2 += v170 + ((9 * (__clz(v170 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v48 & 0x4000000) == 0)
  {
LABEL_139:
    if ((v48 & 0x8000000) == 0) {
      goto LABEL_140;
    }
    goto LABEL_284;
  }
LABEL_283:
  uint64_t v171 = sub_177D97C(*(void *)(a1 + 528));
  v2 += v171 + ((9 * (__clz(v171 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v48 & 0x8000000) == 0)
  {
LABEL_140:
    if ((v48 & 0x10000000) == 0) {
      goto LABEL_141;
    }
    goto LABEL_285;
  }
LABEL_284:
  uint64_t v172 = sub_177DD48(*(void *)(a1 + 536));
  v2 += v172 + ((9 * (__clz(v172 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v48 & 0x10000000) == 0)
  {
LABEL_141:
    if ((v48 & 0x20000000) == 0) {
      goto LABEL_142;
    }
    goto LABEL_286;
  }
LABEL_285:
  uint64_t v173 = sub_177E64C(*(void *)(a1 + 544));
  v2 += v173 + ((9 * (__clz(v173 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v48 & 0x20000000) == 0)
  {
LABEL_142:
    if ((v48 & 0x40000000) == 0) {
      goto LABEL_143;
    }
LABEL_287:
    uint64_t v175 = sub_177FC4C(*(void *)(a1 + 560));
    v2 += v175 + ((9 * (__clz(v175 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v48 & 0x80000000) == 0) {
      goto LABEL_144;
    }
    goto LABEL_288;
  }
LABEL_286:
  uint64_t v174 = sub_177F834(*(void *)(a1 + 552));
  v2 += v174 + ((9 * (__clz(v174 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v48 & 0x40000000) != 0) {
    goto LABEL_287;
  }
LABEL_143:
  if ((v48 & 0x80000000) == 0) {
    goto LABEL_144;
  }
LABEL_288:
  uint64_t v176 = sub_17803D0(*(void *)(a1 + 568));
  v2 += v176 + ((9 * (__clz(v176 | 1) ^ 0x1F) + 73) >> 6) + 2;
LABEL_144:
  unsigned int v73 = *(_DWORD *)(a1 + 48);
  if (!(_BYTE)v73) {
    goto LABEL_154;
  }
  if (v73)
  {
    uint64_t v105 = sub_1780860(*(void *)(a1 + 576));
    v2 += v105 + ((9 * (__clz(v105 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v73 & 2) == 0)
    {
LABEL_147:
      if ((v73 & 4) == 0) {
        goto LABEL_148;
      }
      goto LABEL_198;
    }
  }
  else if ((v73 & 2) == 0)
  {
    goto LABEL_147;
  }
  uint64_t v106 = sub_171CE3C(*(void *)(a1 + 584));
  v2 += v106 + ((9 * (__clz(v106 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v73 & 4) == 0)
  {
LABEL_148:
    if ((v73 & 8) == 0) {
      goto LABEL_149;
    }
    goto LABEL_199;
  }
LABEL_198:
  uint64_t v107 = sub_1780CF0(*(void *)(a1 + 592));
  v2 += v107 + ((9 * (__clz(v107 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v73 & 8) == 0)
  {
LABEL_149:
    if ((v73 & 0x10) == 0) {
      goto LABEL_150;
    }
    goto LABEL_200;
  }
LABEL_199:
  uint64_t v108 = sub_1782FDC(*(void *)(a1 + 600));
  v2 += v108 + ((9 * (__clz(v108 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v73 & 0x10) == 0)
  {
LABEL_150:
    if ((v73 & 0x20) == 0) {
      goto LABEL_151;
    }
    goto LABEL_201;
  }
LABEL_200:
  uint64_t v109 = sub_177EACC(*(void *)(a1 + 608));
  v2 += v109 + ((9 * (__clz(v109 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v73 & 0x20) == 0)
  {
LABEL_151:
    if ((v73 & 0x40) == 0) {
      goto LABEL_152;
    }
    goto LABEL_202;
  }
LABEL_201:
  uint64_t v110 = sub_17810CC(*(void *)(a1 + 616));
  v2 += v110 + ((9 * (__clz(v110 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v73 & 0x40) == 0)
  {
LABEL_152:
    if ((v73 & 0x80) == 0) {
      goto LABEL_154;
    }
    goto LABEL_153;
  }
LABEL_202:
  uint64_t v111 = *(void *)(a1 + 624);
  uint64_t v112 = *(void *)(v111 + 8);
  if (v112)
  {
    unint64_t v213 = v112 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v213 + 31) < 0) {
      uint64_t v113 = *(void *)(v213 + 16);
    }
    else {
      uint64_t v113 = *(unsigned __int8 *)(v213 + 31);
    }
  }
  else
  {
    uint64_t v113 = 0;
  }
  *(_DWORD *)(v111 + 16) = v113;
  v2 += v113 + ((9 * (__clz(v113 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v73 & 0x80) != 0)
  {
LABEL_153:
    uint64_t v74 = sub_16F2B0C(*(void *)(a1 + 632));
    v2 += v74 + ((9 * (__clz(v74 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
LABEL_154:
  if ((v73 & 0xFF00) == 0) {
    goto LABEL_222;
  }
  if ((v73 & 0x100) != 0)
  {
    uint64_t v114 = *(void *)(a1 + 640);
    uint64_t v115 = *(void *)(v114 + 8);
    if (v115)
    {
      unint64_t v214 = v115 & 0xFFFFFFFFFFFFFFFCLL;
      if (*(char *)(v214 + 31) < 0) {
        uint64_t v116 = *(void *)(v214 + 16);
      }
      else {
        uint64_t v116 = *(unsigned __int8 *)(v214 + 31);
      }
    }
    else
    {
      uint64_t v116 = 0;
    }
    *(_DWORD *)(v114 + 16) = v116;
    v2 += v116 + ((9 * (__clz(v116 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v73 & 0x200) == 0)
    {
LABEL_157:
      if ((v73 & 0x400) == 0) {
        goto LABEL_158;
      }
      goto LABEL_210;
    }
  }
  else if ((v73 & 0x200) == 0)
  {
    goto LABEL_157;
  }
  uint64_t v117 = sub_177EEF0(*(void *)(a1 + 648));
  v2 += v117 + ((9 * (__clz(v117 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v73 & 0x400) == 0)
  {
LABEL_158:
    if ((v73 & 0x800) == 0) {
      goto LABEL_159;
    }
    goto LABEL_211;
  }
LABEL_210:
  uint64_t v118 = sub_175AB5C(*(void *)(a1 + 656));
  v2 += v118 + ((9 * (__clz(v118 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v73 & 0x800) == 0)
  {
LABEL_159:
    if ((v73 & 0x1000) == 0) {
      goto LABEL_160;
    }
    goto LABEL_212;
  }
LABEL_211:
  uint64_t v119 = sub_16FF0CC(*(void *)(a1 + 664));
  v2 += v119 + ((9 * (__clz(v119 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v73 & 0x1000) == 0)
  {
LABEL_160:
    if ((v73 & 0x2000) == 0) {
      goto LABEL_161;
    }
    goto LABEL_213;
  }
LABEL_212:
  uint64_t v120 = sub_177F2BC(*(void *)(a1 + 672));
  v2 += v120 + ((9 * (__clz(v120 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v73 & 0x2000) == 0)
  {
LABEL_161:
    if ((v73 & 0x4000) == 0) {
      goto LABEL_162;
    }
    goto LABEL_216;
  }
LABEL_213:
  uint64_t v121 = *(void *)(a1 + 680);
  uint64_t v122 = *(void *)(v121 + 8);
  if (v122)
  {
    unint64_t v215 = v122 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v215 + 31) < 0) {
      uint64_t v123 = *(void *)(v215 + 16);
    }
    else {
      uint64_t v123 = *(unsigned __int8 *)(v215 + 31);
    }
  }
  else
  {
    uint64_t v123 = 0;
  }
  *(_DWORD *)(v121 + 16) = v123;
  v2 += v123 + ((9 * (__clz(v123 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v73 & 0x4000) == 0)
  {
LABEL_162:
    if ((v73 & 0x8000) == 0) {
      goto LABEL_222;
    }
    goto LABEL_219;
  }
LABEL_216:
  uint64_t v124 = *(void *)(a1 + 688);
  uint64_t v125 = *(void *)(v124 + 8);
  if (v125)
  {
    unint64_t v216 = v125 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v216 + 31) < 0) {
      uint64_t v126 = *(void *)(v216 + 16);
    }
    else {
      uint64_t v126 = *(unsigned __int8 *)(v216 + 31);
    }
  }
  else
  {
    uint64_t v126 = 0;
  }
  *(_DWORD *)(v124 + 16) = v126;
  v2 += v126 + ((9 * (__clz(v126 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v73 & 0x8000) != 0)
  {
LABEL_219:
    uint64_t v127 = *(void *)(a1 + 696);
    uint64_t v128 = *(void *)(v127 + 8);
    if (v128)
    {
      unint64_t v217 = v128 & 0xFFFFFFFFFFFFFFFCLL;
      if (*(char *)(v217 + 31) < 0) {
        uint64_t v129 = *(void *)(v217 + 16);
      }
      else {
        uint64_t v129 = *(unsigned __int8 *)(v217 + 31);
      }
    }
    else
    {
      uint64_t v129 = 0;
    }
    *(_DWORD *)(v127 + 16) = v129;
    v2 += v129 + ((9 * (__clz(v129 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
LABEL_222:
  if ((v73 & 0xFF0000) == 0) {
    goto LABEL_252;
  }
  if ((v73 & 0x10000) != 0)
  {
    uint64_t v130 = sub_1759080(*(void *)(a1 + 704));
    v2 += v130 + ((9 * (__clz(v130 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v73 & 0x20000) == 0)
    {
LABEL_225:
      if ((v73 & 0x40000) == 0) {
        goto LABEL_226;
      }
      goto LABEL_236;
    }
  }
  else if ((v73 & 0x20000) == 0)
  {
    goto LABEL_225;
  }
  uint64_t v131 = *(void *)(a1 + 712);
  uint64_t v132 = *(void *)(v131 + 8);
  if (v132)
  {
    unint64_t v218 = v132 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v218 + 31) < 0) {
      uint64_t v133 = *(void *)(v218 + 16);
    }
    else {
      uint64_t v133 = *(unsigned __int8 *)(v218 + 31);
    }
  }
  else
  {
    uint64_t v133 = 0;
  }
  *(_DWORD *)(v131 + 16) = v133;
  v2 += v133 + ((9 * (__clz(v133 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v73 & 0x40000) == 0)
  {
LABEL_226:
    if ((v73 & 0x80000) == 0) {
      goto LABEL_227;
    }
    goto LABEL_239;
  }
LABEL_236:
  uint64_t v134 = *(void *)(a1 + 720);
  uint64_t v135 = *(void *)(v134 + 8);
  if (v135)
  {
    unint64_t v219 = v135 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v219 + 31) < 0) {
      uint64_t v136 = *(void *)(v219 + 16);
    }
    else {
      uint64_t v136 = *(unsigned __int8 *)(v219 + 31);
    }
  }
  else
  {
    uint64_t v136 = 0;
  }
  *(_DWORD *)(v134 + 16) = v136;
  v2 += v136 + ((9 * (__clz(v136 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v73 & 0x80000) == 0)
  {
LABEL_227:
    if ((v73 & 0x100000) == 0) {
      goto LABEL_228;
    }
    goto LABEL_242;
  }
LABEL_239:
  uint64_t v137 = *(void *)(a1 + 728);
  uint64_t v138 = *(void *)(v137 + 8);
  if (v138)
  {
    unint64_t v220 = v138 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v220 + 31) < 0) {
      uint64_t v139 = *(void *)(v220 + 16);
    }
    else {
      uint64_t v139 = *(unsigned __int8 *)(v220 + 31);
    }
  }
  else
  {
    uint64_t v139 = 0;
  }
  *(_DWORD *)(v137 + 16) = v139;
  v2 += v139 + ((9 * (__clz(v139 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v73 & 0x100000) == 0)
  {
LABEL_228:
    if ((v73 & 0x200000) == 0) {
      goto LABEL_229;
    }
    goto LABEL_243;
  }
LABEL_242:
  uint64_t v140 = sub_1776218(*(void *)(a1 + 736));
  v2 += v140 + ((9 * (__clz(v140 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v73 & 0x200000) == 0)
  {
LABEL_229:
    if ((v73 & 0x400000) == 0) {
      goto LABEL_230;
    }
    goto LABEL_246;
  }
LABEL_243:
  uint64_t v141 = *(void *)(a1 + 744);
  uint64_t v142 = *(void *)(v141 + 8);
  if (v142)
  {
    unint64_t v221 = v142 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v221 + 31) < 0) {
      uint64_t v143 = *(void *)(v221 + 16);
    }
    else {
      uint64_t v143 = *(unsigned __int8 *)(v221 + 31);
    }
  }
  else
  {
    uint64_t v143 = 0;
  }
  *(_DWORD *)(v141 + 16) = v143;
  v2 += v143 + ((9 * (__clz(v143 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v73 & 0x400000) == 0)
  {
LABEL_230:
    if ((v73 & 0x800000) == 0) {
      goto LABEL_252;
    }
    goto LABEL_249;
  }
LABEL_246:
  uint64_t v144 = *(void *)(a1 + 752);
  uint64_t v145 = *(void *)(v144 + 8);
  if (v145)
  {
    unint64_t v222 = v145 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v222 + 31) < 0) {
      uint64_t v146 = *(void *)(v222 + 16);
    }
    else {
      uint64_t v146 = *(unsigned __int8 *)(v222 + 31);
    }
  }
  else
  {
    uint64_t v146 = 0;
  }
  *(_DWORD *)(v144 + 16) = v146;
  v2 += v146 + ((9 * (__clz(v146 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v73 & 0x800000) != 0)
  {
LABEL_249:
    uint64_t v147 = *(void *)(a1 + 760);
    uint64_t v148 = *(void *)(v147 + 8);
    if (v148)
    {
      unint64_t v223 = v148 & 0xFFFFFFFFFFFFFFFCLL;
      if (*(char *)(v223 + 31) < 0) {
        uint64_t v149 = *(void *)(v223 + 16);
      }
      else {
        uint64_t v149 = *(unsigned __int8 *)(v223 + 31);
      }
    }
    else
    {
      uint64_t v149 = 0;
    }
    *(_DWORD *)(v147 + 16) = v149;
    v2 += v149 + ((9 * (__clz(v149 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
LABEL_252:
  if (!HIBYTE(v73)) {
    goto LABEL_261;
  }
  if ((v73 & 0x1000000) != 0)
  {
    uint64_t v177 = sub_1753EA4(*(void *)(a1 + 768));
    v2 += v177 + ((9 * (__clz(v177 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v73 & 0x2000000) == 0)
    {
LABEL_255:
      if ((v73 & 0x4000000) == 0) {
        goto LABEL_256;
      }
      goto LABEL_291;
    }
  }
  else if ((v73 & 0x2000000) == 0)
  {
    goto LABEL_255;
  }
  uint64_t v178 = sub_174CEE4(*(void *)(a1 + 776));
  v2 += v178 + ((9 * (__clz(v178 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v73 & 0x4000000) == 0)
  {
LABEL_256:
    if ((v73 & 0x8000000) == 0) {
      goto LABEL_257;
    }
    goto LABEL_292;
  }
LABEL_291:
  uint64_t v179 = sub_1751738(*(void *)(a1 + 784));
  v2 += v179 + ((9 * (__clz(v179 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v73 & 0x8000000) == 0)
  {
LABEL_257:
    if ((v73 & 0x10000000) == 0) {
      goto LABEL_258;
    }
    goto LABEL_293;
  }
LABEL_292:
  uint64_t v180 = sub_16FFF88(*(void *)(a1 + 792));
  v2 += v180 + ((9 * (__clz(v180 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v73 & 0x10000000) == 0)
  {
LABEL_258:
    if ((v73 & 0x20000000) == 0) {
      goto LABEL_259;
    }
    goto LABEL_294;
  }
LABEL_293:
  uint64_t v181 = sub_174DB20(*(void *)(a1 + 800));
  v2 += v181 + ((9 * (__clz(v181 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v73 & 0x20000000) == 0)
  {
LABEL_259:
    if ((v73 & 0x40000000) == 0) {
      goto LABEL_260;
    }
LABEL_295:
    uint64_t v183 = sub_174F9A4(*(void *)(a1 + 816));
    v2 += v183 + ((9 * (__clz(v183 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v73 & 0x80000000) == 0) {
      goto LABEL_261;
    }
    goto LABEL_296;
  }
LABEL_294:
  uint64_t v182 = sub_174EB14(*(void *)(a1 + 808));
  v2 += v182 + ((9 * (__clz(v182 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v73 & 0x40000000) != 0) {
    goto LABEL_295;
  }
LABEL_260:
  if ((v73 & 0x80000000) == 0) {
    goto LABEL_261;
  }
LABEL_296:
  uint64_t v184 = sub_1750338(*(void *)(a1 + 824));
  v2 += v184 + ((9 * (__clz(v184 | 1) ^ 0x1F) + 73) >> 6) + 2;
LABEL_261:
  if (*(unsigned char *)(a1 + 52))
  {
    uint64_t v150 = sub_174C4D4(*(void *)(a1 + 832));
    v2 += v150 + ((9 * (__clz(v150 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
  uint64_t v151 = *(void *)(a1 + 8);
  if (v151)
  {
    unint64_t v185 = v151 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v185 + 31) < 0) {
      uint64_t v186 = *(void *)(v185 + 16);
    }
    else {
      uint64_t v186 = *(unsigned __int8 *)(v185 + 31);
    }
    v2 += v186;
  }
  *(_DWORD *)(a1 + 56) = v2;
  return v2;
}

void sub_173CAC4(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(_DWORD *)(a2 + 40);
  if (!(_BYTE)v4) {
    goto LABEL_75;
  }
  if (v4)
  {
    *(_DWORD *)(a1 + 40) |= 1u;
    uint64_t v5 = *(void *)(a1 + 64);
    if (!v5)
    {
      uint64_t v6 = *(void *)(a1 + 8);
      uint64_t v7 = (void *)(v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (v6) {
        uint64_t v7 = (void *)*v7;
      }
      uint64_t v5 = sub_17863A4((uint64_t)v7);
      *(void *)(a1 + 64) = v5;
    }
    if (*(void *)(a2 + 64)) {
      uint64_t v8 = *(uint64_t (****)())(a2 + 64);
    }
    else {
      uint64_t v8 = &off_25446B0;
    }
    sub_16BDEB4(v5, (uint64_t)v8);
    if ((v4 & 2) == 0)
    {
LABEL_4:
      if ((v4 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_27;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_4;
  }
  *(_DWORD *)(a1 + 40) |= 2u;
  uint64_t v9 = *(void *)(a1 + 72);
  if (!v9)
  {
    uint64_t v10 = *(void *)(a1 + 8);
    uint64_t v11 = (void *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
    if (v10) {
      uint64_t v11 = (void *)*v11;
    }
    uint64_t v9 = sub_1786788((uint64_t)v11);
    *(void *)(a1 + 72) = v9;
  }
  if (*(void *)(a2 + 72)) {
    uint64_t v12 = *(uint64_t (****)())(a2 + 72);
  }
  else {
    uint64_t v12 = &off_2544950;
  }
  sub_129AF38(v9, (uint64_t)v12);
  if ((v4 & 4) == 0)
  {
LABEL_5:
    if ((v4 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_35;
  }
LABEL_27:
  *(_DWORD *)(a1 + 40) |= 4u;
  uint64_t v13 = *(void *)(a1 + 80);
  if (!v13)
  {
    uint64_t v14 = *(void *)(a1 + 8);
    uint64_t v15 = (void *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
    if (v14) {
      uint64_t v15 = (void *)*v15;
    }
    uint64_t v13 = sub_1786884((uint64_t)v15);
    *(void *)(a1 + 80) = v13;
  }
  if (*(void *)(a2 + 80)) {
    uint64_t v16 = *(uint64_t (****)())(a2 + 80);
  }
  else {
    uint64_t v16 = &off_25449B0;
  }
  sub_129AF38(v13, (uint64_t)v16);
  if ((v4 & 8) == 0)
  {
LABEL_6:
    if ((v4 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_43;
  }
LABEL_35:
  *(_DWORD *)(a1 + 40) |= 8u;
  uint64_t v17 = *(void *)(a1 + 88);
  if (!v17)
  {
    uint64_t v18 = *(void *)(a1 + 8);
    uint64_t v19 = (void *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
    if (v18) {
      uint64_t v19 = (void *)*v19;
    }
    uint64_t v17 = sub_178693C((uint64_t)v19);
    *(void *)(a1 + 88) = v17;
  }
  if (*(void *)(a2 + 88)) {
    uint64_t v20 = *(uint64_t (****)())(a2 + 88);
  }
  else {
    uint64_t v20 = &off_2544A30;
  }
  sub_129AF38(v17, (uint64_t)v20);
  if ((v4 & 0x10) == 0)
  {
LABEL_7:
    if ((v4 & 0x20) == 0) {
      goto LABEL_8;
    }
    goto LABEL_51;
  }
LABEL_43:
  *(_DWORD *)(a1 + 40) |= 0x10u;
  uint64_t v21 = *(void *)(a1 + 96);
  if (!v21)
  {
    uint64_t v22 = *(void *)(a1 + 8);
    uint64_t v23 = (void *)(v22 & 0xFFFFFFFFFFFFFFFCLL);
    if (v22) {
      uint64_t v23 = (void *)*v23;
    }
    uint64_t v21 = sub_1786AFC((uint64_t)v23);
    *(void *)(a1 + 96) = v21;
  }
  if (*(void *)(a2 + 96)) {
    uint64_t v24 = *(uint64_t (****)())(a2 + 96);
  }
  else {
    uint64_t v24 = &off_2544B30;
  }
  sub_129AF38(v21, (uint64_t)v24);
  if ((v4 & 0x20) == 0)
  {
LABEL_8:
    if ((v4 & 0x40) == 0) {
      goto LABEL_9;
    }
    goto LABEL_59;
  }
LABEL_51:
  *(_DWORD *)(a1 + 40) |= 0x20u;
  uint64_t v25 = *(void *)(a1 + 104);
  if (!v25)
  {
    uint64_t v26 = *(void *)(a1 + 8);
    uint64_t v27 = (void *)(v26 & 0xFFFFFFFFFFFFFFFCLL);
    if (v26) {
      uint64_t v27 = (void *)*v27;
    }
    uint64_t v25 = sub_17880D4((uint64_t)v27);
    *(void *)(a1 + 104) = v25;
  }
  if (*(void *)(a2 + 104)) {
    uint64_t v28 = *(uint64_t (****)())(a2 + 104);
  }
  else {
    uint64_t v28 = &off_2545708;
  }
  sub_129AF38(v25, (uint64_t)v28);
  if ((v4 & 0x40) == 0)
  {
LABEL_9:
    if ((v4 & 0x80) == 0) {
      goto LABEL_75;
    }
    goto LABEL_67;
  }
LABEL_59:
  *(_DWORD *)(a1 + 40) |= 0x40u;
  uint64_t v29 = *(void *)(a1 + 112);
  if (!v29)
  {
    uint64_t v30 = *(void *)(a1 + 8);
    uint64_t v31 = (void *)(v30 & 0xFFFFFFFFFFFFFFFCLL);
    if (v30) {
      uint64_t v31 = (void *)*v31;
    }
    uint64_t v29 = sub_1788210((uint64_t)v31);
    *(void *)(a1 + 112) = v29;
  }
  if (*(void *)(a2 + 112)) {
    uint64_t v32 = *(uint64_t (****)())(a2 + 112);
  }
  else {
    uint64_t v32 = &off_25457C8;
  }
  sub_16E6118(v29, (uint64_t)v32);
  if ((v4 & 0x80) != 0)
  {
LABEL_67:
    *(_DWORD *)(a1 + 40) |= 0x80u;
    uint64_t v33 = *(void *)(a1 + 120);
    if (!v33)
    {
      uint64_t v34 = *(void *)(a1 + 8);
      uint64_t v35 = (void *)(v34 & 0xFFFFFFFFFFFFFFFCLL);
      if (v34) {
        uint64_t v35 = (void *)*v35;
      }
      uint64_t v33 = sub_178876C((uint64_t)v35);
      *(void *)(a1 + 120) = v33;
    }
    if (*(void *)(a2 + 120)) {
      uint64_t v36 = *(uint64_t (****)())(a2 + 120);
    }
    else {
      uint64_t v36 = &off_2545A68;
    }
    sub_16C2728(v33, (uint64_t)v36);
  }
LABEL_75:
  if ((v4 & 0xFF00) == 0) {
    goto LABEL_150;
  }
  if ((v4 & 0x100) != 0)
  {
    *(_DWORD *)(a1 + 40) |= 0x100u;
    uint64_t v37 = *(void *)(a1 + 128);
    if (!v37)
    {
      uint64_t v38 = *(void *)(a1 + 8);
      uint64_t v39 = (void *)(v38 & 0xFFFFFFFFFFFFFFFCLL);
      if (v38) {
        uint64_t v39 = (void *)*v39;
      }
      uint64_t v37 = sub_178862C((uint64_t)v39);
      *(void *)(a1 + 128) = v37;
    }
    if (*(void *)(a2 + 128)) {
      uint64_t v40 = *(uint64_t (****)())(a2 + 128);
    }
    else {
      uint64_t v40 = &off_25459E8;
    }
    sub_129AF38(v37, (uint64_t)v40);
  }
  if ((v4 & 0x200) != 0)
  {
    *(_DWORD *)(a1 + 40) |= 0x200u;
    uint64_t v41 = *(void *)(a1 + 136);
    if (!v41)
    {
      uint64_t v42 = *(void *)(a1 + 8);
      uint64_t v43 = (void *)(v42 & 0xFFFFFFFFFFFFFFFCLL);
      if (v42) {
        uint64_t v43 = (void *)*v43;
      }
      uint64_t v41 = sub_1787874((uint64_t)v43);
      *(void *)(a1 + 136) = v41;
    }
    uint64_t v44 = *(uint64_t (****)())(a2 + 136);
    if (!v44) {
      uint64_t v44 = &off_2545270;
    }
    unint64_t v45 = (unint64_t)v44[1];
    if (v45) {
      sub_188B4F8((uint64_t *)(v41 + 8), (v45 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
  }
  if ((v4 & 0x400) != 0)
  {
    *(_DWORD *)(a1 + 40) |= 0x400u;
    uint64_t v46 = *(std::string **)(a1 + 144);
    if (!v46)
    {
      uint64_t v47 = *(void *)(a1 + 8);
      unsigned int v48 = (void *)(v47 & 0xFFFFFFFFFFFFFFFCLL);
      if (v47) {
        unsigned int v48 = (void *)*v48;
      }
      sub_17873A8((uint64_t)v48);
      *(void *)(a1 + 144) = v46;
    }
    if (*(void *)(a2 + 144)) {
      uint64_t v49 = *(uint64_t (****)())(a2 + 144);
    }
    else {
      uint64_t v49 = &off_2544E98;
    }
    sub_16D13B0(v46, (uint64_t)v49);
    if ((v4 & 0x800) == 0)
    {
LABEL_96:
      if ((v4 & 0x1000) == 0) {
        goto LABEL_122;
      }
      goto LABEL_114;
    }
  }
  else if ((v4 & 0x800) == 0)
  {
    goto LABEL_96;
  }
  *(_DWORD *)(a1 + 40) |= 0x800u;
  uint64_t v50 = *(void *)(a1 + 152);
  if (!v50)
  {
    uint64_t v51 = *(void *)(a1 + 8);
    uint64_t v52 = (void *)(v51 & 0xFFFFFFFFFFFFFFFCLL);
    if (v51) {
      uint64_t v52 = (void *)*v52;
    }
    sub_17888DC((uint64_t)v52);
    *(void *)(a1 + 152) = v50;
  }
  if (*(void *)(a2 + 152)) {
    uint64_t v53 = *(uint64_t (****)())(a2 + 152);
  }
  else {
    uint64_t v53 = &off_2545B88;
  }
  sub_16EF40C(v50, (uint64_t)v53);
  if ((v4 & 0x1000) != 0)
  {
LABEL_114:
    *(_DWORD *)(a1 + 40) |= 0x1000u;
    uint64_t v54 = *(void *)(a1 + 160);
    if (!v54)
    {
      uint64_t v55 = *(void *)(a1 + 8);
      uint64_t v56 = (void *)(v55 & 0xFFFFFFFFFFFFFFFCLL);
      if (v55) {
        uint64_t v56 = (void *)*v56;
      }
      uint64_t v54 = sub_178898C((uint64_t)v56);
      *(void *)(a1 + 160) = v54;
    }
    uint64_t v57 = *(uint64_t (****)())(a2 + 160);
    if (!v57) {
      uint64_t v57 = &off_2545BE0;
    }
    unint64_t v58 = (unint64_t)v57[1];
    if (v58) {
      sub_188B4F8((uint64_t *)(v54 + 8), (v58 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
  }
LABEL_122:
  if ((v4 & 0x2000) != 0)
  {
    *(_DWORD *)(a1 + 40) |= 0x2000u;
    uint64_t v59 = *(void *)(a1 + 168);
    if (!v59)
    {
      uint64_t v60 = *(void *)(a1 + 8);
      uint64_t v61 = (void *)(v60 & 0xFFFFFFFFFFFFFFFCLL);
      if (v60) {
        uint64_t v61 = (void *)*v61;
      }
      uint64_t v59 = sub_1788A60((uint64_t)v61);
      *(void *)(a1 + 168) = v59;
    }
    if (*(void *)(a2 + 168)) {
      uint64_t v62 = *(uint64_t (****)())(a2 + 168);
    }
    else {
      uint64_t v62 = &off_2545C38;
    }
    sub_16DB8CC(v59, (uint64_t)v62);
    if ((v4 & 0x4000) == 0)
    {
LABEL_124:
      if ((v4 & 0x8000) == 0) {
        goto LABEL_150;
      }
      goto LABEL_142;
    }
  }
  else if ((v4 & 0x4000) == 0)
  {
    goto LABEL_124;
  }
  *(_DWORD *)(a1 + 40) |= 0x4000u;
  uint64_t v63 = *(void *)(a1 + 176);
  if (!v63)
  {
    uint64_t v64 = *(void *)(a1 + 8);
    uint64_t v65 = (void *)(v64 & 0xFFFFFFFFFFFFFFFCLL);
    if (v64) {
      uint64_t v65 = (void *)*v65;
    }
    uint64_t v63 = sub_1788B74((uint64_t)v65);
    *(void *)(a1 + 176) = v63;
  }
  if (*(void *)(a2 + 176)) {
    uint64_t v66 = *(uint64_t (****)())(a2 + 176);
  }
  else {
    uint64_t v66 = &off_2545D48;
  }
  sub_129F8C4(v63, (uint64_t)v66);
  if ((v4 & 0x8000) != 0)
  {
LABEL_142:
    *(_DWORD *)(a1 + 40) |= 0x8000u;
    uint64_t v67 = *(void *)(a1 + 184);
    if (!v67)
    {
      uint64_t v68 = *(void *)(a1 + 8);
      uint64_t v69 = (void *)(v68 & 0xFFFFFFFFFFFFFFFCLL);
      if (v68) {
        uint64_t v69 = (void *)*v69;
      }
      uint64_t v67 = sub_1788C2C((uint64_t)v69);
      *(void *)(a1 + 184) = v67;
    }
    uint64_t v70 = *(uint64_t (****)())(a2 + 184);
    if (!v70) {
      uint64_t v70 = &off_2545DB0;
    }
    unint64_t v71 = (unint64_t)v70[1];
    if (v71) {
      sub_188B4F8((uint64_t *)(v67 + 8), (v71 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
  }
LABEL_150:
  if ((v4 & 0xFF0000) != 0)
  {
    if ((v4 & 0x10000) != 0)
    {
      *(_DWORD *)(a1 + 40) |= 0x10000u;
      uint64_t v72 = *(void *)(a1 + 192);
      if (!v72)
      {
        uint64_t v73 = *(void *)(a1 + 8);
        uint64_t v74 = (void *)(v73 & 0xFFFFFFFFFFFFFFFCLL);
        if (v73) {
          uint64_t v74 = (void *)*v74;
        }
        uint64_t v72 = sub_178798C((uint64_t)v74);
        *(void *)(a1 + 192) = v72;
      }
      uint64_t v75 = *(uint64_t (****)())(a2 + 192);
      if (!v75) {
        uint64_t v75 = &off_25452B8;
      }
      unint64_t v76 = (unint64_t)v75[1];
      if (v76) {
        sub_188B4F8((uint64_t *)(v72 + 8), (v76 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
    }
    if ((v4 & 0x20000) != 0)
    {
      *(_DWORD *)(a1 + 40) |= 0x20000u;
      uint64_t v77 = *(void *)(a1 + 200);
      if (!v77)
      {
        uint64_t v78 = *(void *)(a1 + 8);
        uint64_t v79 = (void *)(v78 & 0xFFFFFFFFFFFFFFFCLL);
        if (v78) {
          uint64_t v79 = (void *)*v79;
        }
        uint64_t v77 = sub_1788DBC((uint64_t)v79);
        *(void *)(a1 + 200) = v77;
      }
      uint64_t v80 = *(uint64_t (****)())(a2 + 200);
      if (!v80) {
        uint64_t v80 = &off_2545E28;
      }
      unint64_t v81 = (unint64_t)v80[1];
      if (v81) {
        sub_188B4F8((uint64_t *)(v77 + 8), (v81 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
    }
    if ((v4 & 0x40000) != 0)
    {
      *(_DWORD *)(a1 + 40) |= 0x40000u;
      uint64_t v82 = *(void *)(a1 + 208);
      if (!v82)
      {
        uint64_t v83 = *(void *)(a1 + 8);
        uint64_t v84 = (void *)(v83 & 0xFFFFFFFFFFFFFFFCLL);
        if (v83) {
          uint64_t v84 = (void *)*v84;
        }
        uint64_t v82 = sub_1788E90((uint64_t)v84);
        *(void *)(a1 + 208) = v82;
      }
      uint64_t v85 = *(uint64_t (****)())(a2 + 208);
      if (!v85) {
        uint64_t v85 = &off_2545E88;
      }
      unint64_t v86 = (unint64_t)v85[1];
      if (v86) {
        sub_188B4F8((uint64_t *)(v82 + 8), (v86 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
    }
    if ((v4 & 0x80000) != 0)
    {
      *(_DWORD *)(a1 + 40) |= 0x80000u;
      uint64_t v87 = *(std::string **)(a1 + 216);
      if (!v87)
      {
        uint64_t v88 = *(void *)(a1 + 8);
        uint64_t v89 = (void *)(v88 & 0xFFFFFFFFFFFFFFFCLL);
        if (v88) {
          uint64_t v89 = (void *)*v89;
        }
        uint64_t v87 = (std::string *)sub_17893D0((uint64_t)v89);
        *(void *)(a1 + 216) = v87;
      }
      if (*(void *)(a2 + 216)) {
        uint64_t v90 = *(uint64_t (****)())(a2 + 216);
      }
      else {
        uint64_t v90 = &off_2546128;
      }
      sub_13221BC(v87, (uint64_t)v90);
    }
    if ((v4 & 0x100000) != 0)
    {
      *(_DWORD *)(a1 + 40) |= 0x100000u;
      uint64_t v91 = *(void *)(a1 + 224);
      if (!v91)
      {
        uint64_t v92 = *(void *)(a1 + 8);
        uint64_t v93 = (void *)(v92 & 0xFFFFFFFFFFFFFFFCLL);
        if (v92) {
          uint64_t v93 = (void *)*v93;
        }
        uint64_t v91 = sub_1787A60((uint64_t)v93);
        *(void *)(a1 + 224) = v91;
      }
      uint64_t v94 = *(uint64_t (****)())(a2 + 224);
      if (!v94) {
        uint64_t v94 = &off_2545318;
      }
      unint64_t v95 = (unint64_t)v94[1];
      if (v95) {
        sub_188B4F8((uint64_t *)(v91 + 8), (v95 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
    }
    if ((v4 & 0x200000) != 0)
    {
      *(_DWORD *)(a1 + 40) |= 0x200000u;
      uint64_t v96 = *(void *)(a1 + 232);
      if (!v96)
      {
        uint64_t v97 = *(void *)(a1 + 8);
        uint64_t v98 = (void *)(v97 & 0xFFFFFFFFFFFFFFFCLL);
        if (v97) {
          uint64_t v98 = (void *)*v98;
        }
        uint64_t v96 = sub_1788000((uint64_t)v98);
        *(void *)(a1 + 232) = v96;
      }
      uint64_t v99 = *(uint64_t (****)())(a2 + 232);
      if (!v99) {
        uint64_t v99 = &off_2545690;
      }
      unint64_t v100 = (unint64_t)v99[1];
      if (v100) {
        sub_188B4F8((uint64_t *)(v96 + 8), (v100 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
    }
    if ((v4 & 0x400000) != 0)
    {
      *(_DWORD *)(a1 + 40) |= 0x400000u;
      uint64_t v101 = *(std::string **)(a1 + 240);
      if (!v101)
      {
        uint64_t v102 = *(void *)(a1 + 8);
        uint64_t v103 = (void *)(v102 & 0xFFFFFFFFFFFFFFFCLL);
        if (v102) {
          uint64_t v103 = (void *)*v103;
        }
        uint64_t v101 = (std::string *)sub_1789594((uint64_t)v103);
        *(void *)(a1 + 240) = v101;
      }
      if (*(void *)(a2 + 240)) {
        uint64_t v104 = *(uint64_t (****)())(a2 + 240);
      }
      else {
        uint64_t v104 = &off_2546278;
      }
      sub_16FE638(v101, (uint64_t)v104);
    }
    if ((v4 & 0x800000) != 0)
    {
      *(_DWORD *)(a1 + 40) |= 0x800000u;
      uint64_t v105 = *(void *)(a1 + 248);
      if (!v105)
      {
        uint64_t v106 = *(void *)(a1 + 8);
        uint64_t v107 = (void *)(v106 & 0xFFFFFFFFFFFFFFFCLL);
        if (v106) {
          uint64_t v107 = (void *)*v107;
        }
        uint64_t v105 = sub_1787668((uint64_t)v107);
        *(void *)(a1 + 248) = v105;
      }
      uint64_t v108 = *(uint64_t (****)())(a2 + 248);
      if (!v108) {
        uint64_t v108 = &off_25450B0;
      }
      unint64_t v109 = (unint64_t)v108[1];
      if (v109) {
        sub_188B4F8((uint64_t *)(v105 + 8), (v109 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
    }
  }
  if (HIBYTE(v4))
  {
    if ((v4 & 0x1000000) != 0)
    {
      *(_DWORD *)(a1 + 40) |= 0x1000000u;
      uint64_t v110 = *(void *)(a1 + 256);
      if (!v110)
      {
        uint64_t v111 = *(void *)(a1 + 8);
        uint64_t v112 = (void *)(v111 & 0xFFFFFFFFFFFFFFFCLL);
        if (v111) {
          uint64_t v112 = (void *)*v112;
        }
        uint64_t v110 = sub_17898BC((uint64_t)v112);
        *(void *)(a1 + 256) = v110;
      }
      uint64_t v113 = *(uint64_t (****)())(a2 + 256);
      if (!v113) {
        uint64_t v113 = &off_25463F8;
      }
      unint64_t v114 = (unint64_t)v113[1];
      if (v114) {
        sub_188B4F8((uint64_t *)(v110 + 8), (v114 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
    }
    if ((v4 & 0x2000000) != 0)
    {
      *(_DWORD *)(a1 + 40) |= 0x2000000u;
      uint64_t v115 = *(std::string **)(a1 + 264);
      if (!v115)
      {
        uint64_t v116 = *(void *)(a1 + 8);
        uint64_t v117 = (void *)(v116 & 0xFFFFFFFFFFFFFFFCLL);
        if (v116) {
          uint64_t v117 = (void *)*v117;
        }
        uint64_t v115 = (std::string *)sub_1789A58((uint64_t)v117);
        *(void *)(a1 + 264) = v115;
      }
      if (*(void *)(a2 + 264)) {
        uint64_t v118 = *(uint64_t (****)())(a2 + 264);
      }
      else {
        uint64_t v118 = &off_2546448;
      }
      sub_11E43C0(v115, (uint64_t)v118);
      if ((v4 & 0x4000000) == 0)
      {
LABEL_235:
        if ((v4 & 0x8000000) == 0) {
          goto LABEL_236;
        }
        goto LABEL_254;
      }
    }
    else if ((v4 & 0x4000000) == 0)
    {
      goto LABEL_235;
    }
    *(_DWORD *)(a1 + 40) |= 0x4000000u;
    uint64_t v119 = *(std::string **)(a1 + 272);
    if (!v119)
    {
      uint64_t v120 = *(void *)(a1 + 8);
      uint64_t v121 = (void *)(v120 & 0xFFFFFFFFFFFFFFFCLL);
      if (v120) {
        uint64_t v121 = (void *)*v121;
      }
      sub_178A050((uint64_t)v121);
      *(void *)(a1 + 272) = v119;
    }
    if (*(void *)(a2 + 272)) {
      uint64_t v122 = *(uint64_t (****)())(a2 + 272);
    }
    else {
      uint64_t v122 = &off_25466D8;
    }
    sub_170A280(v119, (uint64_t)v122);
    if ((v4 & 0x8000000) == 0)
    {
LABEL_236:
      if ((v4 & 0x10000000) == 0)
      {
LABEL_270:
        if ((v4 & 0x20000000) != 0)
        {
          *(_DWORD *)(a1 + 40) |= 0x20000000u;
          uint64_t v132 = *(void *)(a1 + 296);
          if (!v132)
          {
            uint64_t v133 = *(void *)(a1 + 8);
            uint64_t v134 = (void *)(v133 & 0xFFFFFFFFFFFFFFFCLL);
            if (v133) {
              uint64_t v134 = (void *)*v134;
            }
            uint64_t v132 = sub_1786F0C((uint64_t)v134);
            *(void *)(a1 + 296) = v132;
          }
          uint64_t v135 = *(uint64_t (****)())(a2 + 296);
          if (!v135) {
            uint64_t v135 = &off_2544C60;
          }
          unint64_t v136 = (unint64_t)v135[1];
          if (v136) {
            sub_188B4F8((uint64_t *)(v132 + 8), (v136 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
        }
        if ((v4 & 0x40000000) != 0)
        {
          *(_DWORD *)(a1 + 40) |= 0x40000000u;
          uint64_t v137 = *(void *)(a1 + 304);
          if (!v137)
          {
            uint64_t v138 = *(void *)(a1 + 8);
            uint64_t v139 = (void *)(v138 & 0xFFFFFFFFFFFFFFFCLL);
            if (v138) {
              uint64_t v139 = (void *)*v139;
            }
            uint64_t v137 = sub_17872D4((uint64_t)v139);
            *(void *)(a1 + 304) = v137;
          }
          uint64_t v140 = *(uint64_t (****)())(a2 + 304);
          if (!v140) {
            uint64_t v140 = &off_2544E00;
          }
          unint64_t v141 = (unint64_t)v140[1];
          if (v141) {
            sub_188B4F8((uint64_t *)(v137 + 8), (v141 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
        }
        if ((v4 & 0x80000000) != 0)
        {
          *(_DWORD *)(a1 + 40) |= 0x80000000;
          uint64_t v142 = *(void *)(a1 + 312);
          if (!v142)
          {
            uint64_t v143 = *(void *)(a1 + 8);
            uint64_t v144 = (void *)(v143 & 0xFFFFFFFFFFFFFFFCLL);
            if (v143) {
              uint64_t v144 = (void *)*v144;
            }
            uint64_t v142 = sub_178834C((uint64_t)v144);
            *(void *)(a1 + 312) = v142;
          }
          if (*(void *)(a2 + 312)) {
            uint64_t v145 = *(uint64_t (****)())(a2 + 312);
          }
          else {
            uint64_t v145 = &off_25458A0;
          }
          sub_16C2728(v142, (uint64_t)v145);
        }
        goto LABEL_297;
      }
LABEL_262:
      *(_DWORD *)(a1 + 40) |= 0x10000000u;
      uint64_t v127 = *(void *)(a1 + 288);
      if (!v127)
      {
        uint64_t v128 = *(void *)(a1 + 8);
        uint64_t v129 = (void *)(v128 & 0xFFFFFFFFFFFFFFFCLL);
        if (v128) {
          uint64_t v129 = (void *)*v129;
        }
        uint64_t v127 = sub_1786D50((uint64_t)v129);
        *(void *)(a1 + 288) = v127;
      }
      uint64_t v130 = *(uint64_t (****)())(a2 + 288);
      if (!v130) {
        uint64_t v130 = &off_2544C18;
      }
      unint64_t v131 = (unint64_t)v130[1];
      if (v131) {
        sub_188B4F8((uint64_t *)(v127 + 8), (v131 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      goto LABEL_270;
    }
LABEL_254:
    *(_DWORD *)(a1 + 40) |= 0x8000000u;
    uint64_t v123 = *(std::string **)(a1 + 280);
    if (!v123)
    {
      uint64_t v124 = *(void *)(a1 + 8);
      uint64_t v125 = (void *)(v124 & 0xFFFFFFFFFFFFFFFCLL);
      if (v124) {
        uint64_t v125 = (void *)*v125;
      }
      uint64_t v123 = (std::string *)sub_1786BB4((uint64_t)v125);
      *(void *)(a1 + 280) = v123;
    }
    if (*(void *)(a2 + 280)) {
      uint64_t v126 = *(uint64_t (****)())(a2 + 280);
    }
    else {
      uint64_t v126 = &off_2544B98;
    }
    sub_135D8C8(v123, (uint64_t)v126);
    if ((v4 & 0x10000000) == 0) {
      goto LABEL_270;
    }
    goto LABEL_262;
  }
LABEL_297:
  unsigned int v146 = *(_DWORD *)(a2 + 44);
  if ((_BYTE)v146)
  {
    if (v146)
    {
      *(_DWORD *)(a1 + 44) |= 1u;
      uint64_t v147 = *(void *)(a1 + 320);
      if (!v147)
      {
        uint64_t v148 = *(void *)(a1 + 8);
        uint64_t v149 = (void *)(v148 & 0xFFFFFFFFFFFFFFFCLL);
        if (v148) {
          uint64_t v149 = (void *)*v149;
        }
        uint64_t v147 = sub_178A364((uint64_t)v149);
        *(void *)(a1 + 320) = v147;
      }
      uint64_t v150 = *(uint64_t (****)())(a2 + 320);
      if (!v150) {
        uint64_t v150 = &off_2546880;
      }
      unint64_t v151 = (unint64_t)v150[1];
      if (v151) {
        sub_188B4F8((uint64_t *)(v147 + 8), (v151 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
    }
    if ((v146 & 2) != 0)
    {
      *(_DWORD *)(a1 + 44) |= 2u;
      uint64_t v152 = *(void *)(a1 + 328);
      if (!v152)
      {
        uint64_t v153 = *(void *)(a1 + 8);
        uint64_t v154 = (void *)(v153 & 0xFFFFFFFFFFFFFFFCLL);
        if (v153) {
          uint64_t v154 = (void *)*v154;
        }
        uint64_t v152 = sub_178A480((uint64_t)v154);
        *(void *)(a1 + 328) = v152;
      }
      uint64_t v155 = *(uint64_t (****)())(a2 + 328);
      if (!v155) {
        uint64_t v155 = &off_25468D0;
      }
      unint64_t v156 = (unint64_t)v155[1];
      if (v156) {
        sub_188B4F8((uint64_t *)(v152 + 8), (v156 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
    }
    if ((v146 & 4) != 0)
    {
      *(_DWORD *)(a1 + 44) |= 4u;
      uint64_t v157 = *(void *)(a1 + 336);
      if (!v157)
      {
        uint64_t v158 = *(void *)(a1 + 8);
        uint64_t v159 = (void *)(v158 & 0xFFFFFFFFFFFFFFFCLL);
        if (v158) {
          uint64_t v159 = (void *)*v159;
        }
        uint64_t v157 = sub_178A554((uint64_t)v159);
        *(void *)(a1 + 336) = v157;
      }
      uint64_t v160 = *(uint64_t (****)())(a2 + 336);
      if (!v160) {
        uint64_t v160 = &off_2546960;
      }
      unint64_t v161 = (unint64_t)v160[1];
      if (v161) {
        sub_188B4F8((uint64_t *)(v157 + 8), (v161 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
    }
    if ((v146 & 8) != 0)
    {
      *(_DWORD *)(a1 + 44) |= 8u;
      uint64_t v162 = *(std::string **)(a1 + 344);
      if (!v162)
      {
        uint64_t v163 = *(void *)(a1 + 8);
        uint64_t v164 = (void *)(v163 & 0xFFFFFFFFFFFFFFFCLL);
        if (v163) {
          uint64_t v164 = (void *)*v164;
        }
        uint64_t v162 = (std::string *)sub_178A684((uint64_t)v164);
        *(void *)(a1 + 344) = v162;
      }
      if (*(void *)(a2 + 344)) {
        uint64_t v165 = *(uint64_t (****)())(a2 + 344);
      }
      else {
        uint64_t v165 = &off_2546A38;
      }
      sub_11A7934(v162, (uint64_t)v165);
    }
    if ((v146 & 0x10) != 0)
    {
      *(_DWORD *)(a1 + 44) |= 0x10u;
      uint64_t v166 = *(void *)(a1 + 352);
      if (!v166)
      {
        uint64_t v167 = *(void *)(a1 + 8);
        uint64_t v168 = (void *)(v167 & 0xFFFFFFFFFFFFFFFCLL);
        if (v167) {
          uint64_t v168 = (void *)*v168;
        }
        uint64_t v166 = sub_1791D4C((uint64_t)v168);
        *(void *)(a1 + 352) = v166;
      }
      uint64_t v169 = *(uint64_t (****)())(a2 + 352);
      if (!v169) {
        uint64_t v169 = &off_25497E8;
      }
      unint64_t v170 = (unint64_t)v169[1];
      if (v170) {
        sub_188B4F8((uint64_t *)(v166 + 8), (v170 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
    }
    if ((v146 & 0x20) != 0)
    {
      *(_DWORD *)(a1 + 44) |= 0x20u;
      uint64_t v171 = *(void *)(a1 + 360);
      if (!v171)
      {
        uint64_t v172 = *(void *)(a1 + 8);
        uint64_t v173 = (void *)(v172 & 0xFFFFFFFFFFFFFFFCLL);
        if (v172) {
          uint64_t v173 = (void *)*v173;
        }
        uint64_t v171 = sub_178A79C((uint64_t)v173);
        *(void *)(a1 + 360) = v171;
      }
      uint64_t v174 = *(uint64_t (****)())(a2 + 360);
      if (!v174) {
        uint64_t v174 = &off_2546A98;
      }
      unint64_t v175 = (unint64_t)v174[1];
      if (v175) {
        sub_188B4F8((uint64_t *)(v171 + 8), (v175 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
    }
    if ((v146 & 0x40) != 0)
    {
      *(_DWORD *)(a1 + 44) |= 0x40u;
      uint64_t v176 = *(void *)(a1 + 368);
      if (!v176)
      {
        uint64_t v177 = *(void *)(a1 + 8);
        uint64_t v178 = (void *)(v177 & 0xFFFFFFFFFFFFFFFCLL);
        if (v177) {
          uint64_t v178 = (void *)*v178;
        }
        uint64_t v176 = sub_178ABC4((uint64_t)v178);
        *(void *)(a1 + 368) = v176;
      }
      uint64_t v179 = *(uint64_t (****)())(a2 + 368);
      if (!v179) {
        uint64_t v179 = &off_2546BC8;
      }
      unint64_t v180 = (unint64_t)v179[1];
      if (v180) {
        sub_188B4F8((uint64_t *)(v176 + 8), (v180 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
    }
    if ((v146 & 0x80) != 0)
    {
      *(_DWORD *)(a1 + 44) |= 0x80u;
      uint64_t v181 = *(void *)(a1 + 376);
      if (!v181)
      {
        uint64_t v182 = *(void *)(a1 + 8);
        uint64_t v183 = (void *)(v182 & 0xFFFFFFFFFFFFFFFCLL);
        if (v182) {
          uint64_t v183 = (void *)*v183;
        }
        uint64_t v181 = sub_178ACB4((uint64_t)v183);
        *(void *)(a1 + 376) = v181;
      }
      uint64_t v184 = *(uint64_t (****)())(a2 + 376);
      if (!v184) {
        uint64_t v184 = &off_2546C00;
      }
      unint64_t v185 = (unint64_t)v184[1];
      if (v185) {
        sub_188B4F8((uint64_t *)(v181 + 8), (v185 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
    }
  }
  if ((v146 & 0xFF00) != 0)
  {
    if ((v146 & 0x100) != 0)
    {
      *(_DWORD *)(a1 + 44) |= 0x100u;
      uint64_t v186 = *(void *)(a1 + 384);
      if (!v186)
      {
        uint64_t v187 = *(void *)(a1 + 8);
        unint64_t v188 = (void *)(v187 & 0xFFFFFFFFFFFFFFFCLL);
        if (v187) {
          unint64_t v188 = (void *)*v188;
        }
        uint64_t v186 = sub_178ADB4((uint64_t)v188);
        *(void *)(a1 + 384) = v186;
      }
      unint64_t v189 = *(uint64_t (****)())(a2 + 384);
      if (!v189) {
        unint64_t v189 = &off_2546C48;
      }
      unint64_t v190 = (unint64_t)v189[1];
      if (v190) {
        sub_188B4F8((uint64_t *)(v186 + 8), (v190 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
    }
    if ((v146 & 0x200) != 0)
    {
      *(_DWORD *)(a1 + 44) |= 0x200u;
      uint64_t v191 = *(void *)(a1 + 392);
      if (!v191)
      {
        uint64_t v192 = *(void *)(a1 + 8);
        unint64_t v193 = (void *)(v192 & 0xFFFFFFFFFFFFFFFCLL);
        if (v192) {
          unint64_t v193 = (void *)*v193;
        }
        uint64_t v191 = sub_178A8B4((uint64_t)v193);
        *(void *)(a1 + 392) = v191;
      }
      uint64_t v194 = *(uint64_t (****)())(a2 + 392);
      if (!v194) {
        uint64_t v194 = &off_2546AE0;
      }
      unint64_t v195 = (unint64_t)v194[1];
      if (v195) {
        sub_188B4F8((uint64_t *)(v191 + 8), (v195 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
    }
    if ((v146 & 0x400) != 0)
    {
      *(_DWORD *)(a1 + 44) |= 0x400u;
      uint64_t v196 = *(void *)(a1 + 400);
      if (!v196)
      {
        uint64_t v197 = *(void *)(a1 + 8);
        unint64_t v198 = (void *)(v197 & 0xFFFFFFFFFFFFFFFCLL);
        if (v197) {
          unint64_t v198 = (void *)*v198;
        }
        uint64_t v196 = sub_178A9A8((uint64_t)v198);
        *(void *)(a1 + 400) = v196;
      }
      unint64_t v199 = *(uint64_t (****)())(a2 + 400);
      if (!v199) {
        unint64_t v199 = &off_2546B18;
      }
      unint64_t v200 = (unint64_t)v199[1];
      if (v200) {
        sub_188B4F8((uint64_t *)(v196 + 8), (v200 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
    }
    if ((v146 & 0x800) != 0)
    {
      *(_DWORD *)(a1 + 44) |= 0x800u;
      uint64_t v201 = *(void *)(a1 + 408);
      if (!v201)
      {
        uint64_t v202 = *(void *)(a1 + 8);
        unint64_t v203 = (void *)(v202 & 0xFFFFFFFFFFFFFFFCLL);
        if (v202) {
          unint64_t v203 = (void *)*v203;
        }
        uint64_t v201 = sub_185F460((uint64_t)v203);
        *(void *)(a1 + 408) = v201;
      }
      unint64_t v204 = *(uint64_t (****)())(a2 + 408);
      if (!v204) {
        unint64_t v204 = &off_254D7E0;
      }
      unint64_t v205 = (unint64_t)v204[1];
      if (v205) {
        sub_188B4F8((uint64_t *)(v201 + 8), (v205 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
    }
    if ((v146 & 0x1000) != 0)
    {
      *(_DWORD *)(a1 + 44) |= 0x1000u;
      uint64_t v206 = *(void *)(a1 + 416);
      if (!v206)
      {
        uint64_t v207 = *(void *)(a1 + 8);
        unint64_t v208 = (void *)(v207 & 0xFFFFFFFFFFFFFFFCLL);
        if (v207) {
          unint64_t v208 = (void *)*v208;
        }
        uint64_t v206 = sub_178AAC4((uint64_t)v208);
        *(void *)(a1 + 416) = v206;
      }
      unint64_t v209 = *(uint64_t (****)())(a2 + 416);
      if (!v209) {
        unint64_t v209 = &off_2546B78;
      }
      unint64_t v210 = (unint64_t)v209[1];
      if (v210) {
        sub_188B4F8((uint64_t *)(v206 + 8), (v210 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
    }
    if ((v146 & 0x2000) != 0)
    {
      *(_DWORD *)(a1 + 44) |= 0x2000u;
      uint64_t v211 = *(void *)(a1 + 424);
      if (!v211)
      {
        uint64_t v212 = *(void *)(a1 + 8);
        unint64_t v213 = (void *)(v212 & 0xFFFFFFFFFFFFFFFCLL);
        if (v212) {
          unint64_t v213 = (void *)*v213;
        }
        uint64_t v211 = sub_178A1AC((uint64_t)v213);
        *(void *)(a1 + 424) = v211;
      }
      if (*(void *)(a2 + 424)) {
        unint64_t v214 = *(uint64_t (****)())(a2 + 424);
      }
      else {
        unint64_t v214 = &off_25467D8;
      }
      sub_129AF38(v211, (uint64_t)v214);
      if ((v146 & 0x4000) == 0)
      {
LABEL_418:
        if ((v146 & 0x8000) == 0) {
          goto LABEL_444;
        }
        goto LABEL_436;
      }
    }
    else if ((v146 & 0x4000) == 0)
    {
      goto LABEL_418;
    }
    *(_DWORD *)(a1 + 44) |= 0x4000u;
    uint64_t v215 = *(void *)(a1 + 432);
    if (!v215)
    {
      uint64_t v216 = *(void *)(a1 + 8);
      unint64_t v217 = (void *)(v216 & 0xFFFFFFFFFFFFFFFCLL);
      if (v216) {
        unint64_t v217 = (void *)*v217;
      }
      uint64_t v215 = sub_178A284((uint64_t)v217);
      *(void *)(a1 + 432) = v215;
    }
    if (*(void *)(a2 + 432)) {
      unint64_t v218 = *(uint64_t (****)())(a2 + 432);
    }
    else {
      unint64_t v218 = &off_2546830;
    }
    sub_129AF38(v215, (uint64_t)v218);
    if ((v146 & 0x8000) != 0)
    {
LABEL_436:
      *(_DWORD *)(a1 + 44) |= 0x8000u;
      uint64_t v219 = *(void *)(a1 + 440);
      if (!v219)
      {
        uint64_t v220 = *(void *)(a1 + 8);
        unint64_t v221 = (void *)(v220 & 0xFFFFFFFFFFFFFFFCLL);
        if (v220) {
          unint64_t v221 = (void *)*v221;
        }
        uint64_t v219 = sub_1788824((uint64_t)v221);
        *(void *)(a1 + 440) = v219;
      }
      if (*(void *)(a2 + 440)) {
        unint64_t v222 = *(uint64_t (****)())(a2 + 440);
      }
      else {
        unint64_t v222 = &off_2545AF0;
      }
      sub_129AF38(v219, (uint64_t)v222);
    }
  }
LABEL_444:
  if ((v146 & 0xFF0000) == 0) {
    goto LABEL_519;
  }
  if ((v146 & 0x10000) != 0)
  {
    *(_DWORD *)(a1 + 44) |= 0x10000u;
    uint64_t v223 = *(void *)(a1 + 448);
    if (!v223)
    {
      uint64_t v224 = *(void *)(a1 + 8);
      unint64_t v225 = (void *)(v224 & 0xFFFFFFFFFFFFFFFCLL);
      if (v224) {
        unint64_t v225 = (void *)*v225;
      }
      uint64_t v223 = sub_1788404((uint64_t)v225);
      *(void *)(a1 + 448) = v223;
    }
    if (*(void *)(a2 + 448)) {
      unint64_t v226 = *(uint64_t (****)())(a2 + 448);
    }
    else {
      unint64_t v226 = &off_2545920;
    }
    sub_129AF38(v223, (uint64_t)v226);
    if ((v146 & 0x20000) == 0)
    {
LABEL_447:
      if ((v146 & 0x40000) == 0) {
        goto LABEL_473;
      }
      goto LABEL_465;
    }
  }
  else if ((v146 & 0x20000) == 0)
  {
    goto LABEL_447;
  }
  *(_DWORD *)(a1 + 44) |= 0x20000u;
  uint64_t v227 = *(void *)(a1 + 456);
  if (!v227)
  {
    uint64_t v228 = *(void *)(a1 + 8);
    unsigned int v229 = (void *)(v228 & 0xFFFFFFFFFFFFFFFCLL);
    if (v228) {
      unsigned int v229 = (void *)*v229;
    }
    uint64_t v227 = sub_12BBA88((uint64_t)v229);
    *(void *)(a1 + 456) = v227;
  }
  if (*(void *)(a2 + 456)) {
    uint64_t v230 = *(uint64_t (****)())(a2 + 456);
  }
  else {
    uint64_t v230 = &off_25307D0;
  }
  sub_129F8C4(v227, (uint64_t)v230);
  if ((v146 & 0x40000) != 0)
  {
LABEL_465:
    *(_DWORD *)(a1 + 44) |= 0x40000u;
    uint64_t v231 = *(void *)(a1 + 464);
    if (!v231)
    {
      uint64_t v232 = *(void *)(a1 + 8);
      v233 = (void *)(v232 & 0xFFFFFFFFFFFFFFFCLL);
      if (v232) {
        v233 = (void *)*v233;
      }
      uint64_t v231 = sub_1854D20((uint64_t)v233);
      *(void *)(a1 + 464) = v231;
    }
    uint64_t v234 = *(uint64_t (****)())(a2 + 464);
    if (!v234) {
      uint64_t v234 = &off_254D570;
    }
    unint64_t v235 = (unint64_t)v234[1];
    if (v235) {
      sub_188B4F8((uint64_t *)(v231 + 8), (v235 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
  }
LABEL_473:
  if ((v146 & 0x80000) != 0)
  {
    *(_DWORD *)(a1 + 44) |= 0x80000u;
    uint64_t v236 = *(void *)(a1 + 472);
    if (!v236)
    {
      uint64_t v237 = *(void *)(a1 + 8);
      unsigned int v238 = (void *)(v237 & 0xFFFFFFFFFFFFFFFCLL);
      if (v237) {
        unsigned int v238 = (void *)*v238;
      }
      uint64_t v236 = sub_178AE2C((uint64_t)v238);
      *(void *)(a1 + 472) = v236;
    }
    uint64_t v239 = *(uint64_t (****)())(a2 + 472);
    if (!v239) {
      uint64_t v239 = &off_2546C60;
    }
    unint64_t v240 = (unint64_t)v239[1];
    if (v240) {
      sub_188B4F8((uint64_t *)(v236 + 8), (v240 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
  }
  if ((v146 & 0x100000) == 0)
  {
    if ((v146 & 0x200000) == 0) {
      goto LABEL_484;
    }
LABEL_494:
    *(_DWORD *)(a1 + 44) |= 0x200000u;
    uint64_t v245 = *(void *)(a1 + 488);
    if (!v245)
    {
      uint64_t v246 = *(void *)(a1 + 8);
      unsigned int v247 = (void *)(v246 & 0xFFFFFFFFFFFFFFFCLL);
      if (v246) {
        unsigned int v247 = (void *)*v247;
      }
      uint64_t v245 = sub_178B14C((uint64_t)v247);
      *(void *)(a1 + 488) = v245;
    }
    if (*(void *)(a2 + 488)) {
      v248 = *(uint64_t (****)())(a2 + 488);
    }
    else {
      v248 = &off_2546D98;
    }
    sub_129F8C4(v245, (uint64_t)v248);
    if ((v146 & 0x400000) == 0) {
      goto LABEL_510;
    }
    goto LABEL_502;
  }
  *(_DWORD *)(a1 + 44) |= 0x100000u;
  uint64_t v241 = *(void *)(a1 + 480);
  if (!v241)
  {
    uint64_t v242 = *(void *)(a1 + 8);
    uint64_t v243 = (void *)(v242 & 0xFFFFFFFFFFFFFFFCLL);
    if (v242) {
      uint64_t v243 = (void *)*v243;
    }
    uint64_t v241 = sub_17866D0((uint64_t)v243);
    *(void *)(a1 + 480) = v241;
  }
  if (*(void *)(a2 + 480)) {
    unsigned int v244 = *(uint64_t (****)())(a2 + 480);
  }
  else {
    unsigned int v244 = &off_25448A0;
  }
  sub_16C2728(v241, (uint64_t)v244);
  if ((v146 & 0x200000) != 0) {
    goto LABEL_494;
  }
LABEL_484:
  if ((v146 & 0x400000) != 0)
  {
LABEL_502:
    *(_DWORD *)(a1 + 44) |= 0x400000u;
    uint64_t v249 = *(void *)(a1 + 496);
    if (!v249)
    {
      uint64_t v250 = *(void *)(a1 + 8);
      uint64_t v251 = (void *)(v250 & 0xFFFFFFFFFFFFFFFCLL);
      if (v250) {
        uint64_t v251 = (void *)*v251;
      }
      uint64_t v249 = sub_1854D98((uint64_t)v251);
      *(void *)(a1 + 496) = v249;
    }
    uint64_t v252 = *(uint64_t (****)())(a2 + 496);
    if (!v252) {
      uint64_t v252 = &off_254D588;
    }
    unint64_t v253 = (unint64_t)v252[1];
    if (v253) {
      sub_188B4F8((uint64_t *)(v249 + 8), (v253 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
  }
LABEL_510:
  if ((v146 & 0x800000) != 0)
  {
    *(_DWORD *)(a1 + 44) |= 0x800000u;
    uint64_t v254 = *(void *)(a1 + 504);
    if (!v254)
    {
      uint64_t v255 = *(void *)(a1 + 8);
      unsigned int v256 = (void *)(v255 & 0xFFFFFFFFFFFFFFFCLL);
      if (v255) {
        unsigned int v256 = (void *)*v256;
      }
      uint64_t v254 = sub_178E50C((uint64_t)v256);
      *(void *)(a1 + 504) = v254;
    }
    if (*(void *)(a2 + 504)) {
      v257 = *(uint64_t (****)())(a2 + 504);
    }
    else {
      v257 = &off_2549188;
    }
    sub_129AF38(v254, (uint64_t)v257);
  }
LABEL_519:
  if (!HIBYTE(v146)) {
    goto LABEL_593;
  }
  if ((v146 & 0x1000000) != 0)
  {
    *(_DWORD *)(a1 + 44) |= 0x1000000u;
    uint64_t v258 = *(void *)(a1 + 512);
    if (!v258)
    {
      uint64_t v259 = *(void *)(a1 + 8);
      v260 = (void *)(v259 & 0xFFFFFFFFFFFFFFFCLL);
      if (v259) {
        v260 = (void *)*v260;
      }
      uint64_t v258 = sub_178E568((uint64_t)v260);
      *(void *)(a1 + 512) = v258;
    }
    if (*(void *)(a2 + 512)) {
      uint64_t v261 = *(uint64_t (****)())(a2 + 512);
    }
    else {
      uint64_t v261 = &off_25491B8;
    }
    sub_129AF38(v258, (uint64_t)v261);
    if ((v146 & 0x2000000) == 0)
    {
LABEL_522:
      if ((v146 & 0x4000000) == 0) {
        goto LABEL_523;
      }
      goto LABEL_545;
    }
  }
  else if ((v146 & 0x2000000) == 0)
  {
    goto LABEL_522;
  }
  *(_DWORD *)(a1 + 44) |= 0x2000000u;
  uint64_t v262 = *(void *)(a1 + 520);
  if (!v262)
  {
    uint64_t v263 = *(void *)(a1 + 8);
    uint64_t v264 = (void *)(v263 & 0xFFFFFFFFFFFFFFFCLL);
    if (v263) {
      uint64_t v264 = (void *)*v264;
    }
    uint64_t v262 = sub_178E5C4((uint64_t)v264);
    *(void *)(a1 + 520) = v262;
  }
  if (*(void *)(a2 + 520)) {
    unsigned int v265 = *(uint64_t (****)())(a2 + 520);
  }
  else {
    unsigned int v265 = &off_25491E8;
  }
  sub_129AF38(v262, (uint64_t)v265);
  if ((v146 & 0x4000000) == 0)
  {
LABEL_523:
    if ((v146 & 0x8000000) == 0) {
      goto LABEL_524;
    }
    goto LABEL_553;
  }
LABEL_545:
  *(_DWORD *)(a1 + 44) |= 0x4000000u;
  uint64_t v266 = *(void *)(a1 + 528);
  if (!v266)
  {
    uint64_t v267 = *(void *)(a1 + 8);
    unsigned int v268 = (void *)(v267 & 0xFFFFFFFFFFFFFFFCLL);
    if (v267) {
      unsigned int v268 = (void *)*v268;
    }
    uint64_t v266 = sub_178E620((uint64_t)v268);
    *(void *)(a1 + 528) = v266;
  }
  if (*(void *)(a2 + 528)) {
    v269 = *(uint64_t (****)())(a2 + 528);
  }
  else {
    v269 = &off_2549218;
  }
  sub_129AF38(v266, (uint64_t)v269);
  if ((v146 & 0x8000000) == 0)
  {
LABEL_524:
    if ((v146 & 0x10000000) == 0) {
      goto LABEL_525;
    }
    goto LABEL_561;
  }
LABEL_553:
  *(_DWORD *)(a1 + 44) |= 0x8000000u;
  uint64_t v270 = *(void *)(a1 + 536);
  if (!v270)
  {
    uint64_t v271 = *(void *)(a1 + 8);
    uint64_t v272 = (void *)(v271 & 0xFFFFFFFFFFFFFFFCLL);
    if (v271) {
      uint64_t v272 = (void *)*v272;
    }
    uint64_t v270 = sub_178E67C((uint64_t)v272);
    *(void *)(a1 + 536) = v270;
  }
  if (*(void *)(a2 + 536)) {
    uint64_t v273 = *(uint64_t (****)())(a2 + 536);
  }
  else {
    uint64_t v273 = &off_2549248;
  }
  sub_129AF38(v270, (uint64_t)v273);
  if ((v146 & 0x10000000) == 0)
  {
LABEL_525:
    if ((v146 & 0x20000000) == 0) {
      goto LABEL_526;
    }
    goto LABEL_569;
  }
LABEL_561:
  *(_DWORD *)(a1 + 44) |= 0x10000000u;
  uint64_t v274 = *(void *)(a1 + 544);
  if (!v274)
  {
    uint64_t v275 = *(void *)(a1 + 8);
    uint64_t v276 = (void *)(v275 & 0xFFFFFFFFFFFFFFFCLL);
    if (v275) {
      uint64_t v276 = (void *)*v276;
    }
    uint64_t v274 = sub_178E6D8((uint64_t)v276);
    *(void *)(a1 + 544) = v274;
  }
  if (*(void *)(a2 + 544)) {
    unsigned int v277 = *(uint64_t (****)())(a2 + 544);
  }
  else {
    unsigned int v277 = &off_2549278;
  }
  sub_173EC58(v274, (uint64_t)v277);
  if ((v146 & 0x20000000) == 0)
  {
LABEL_526:
    if ((v146 & 0x40000000) == 0) {
      goto LABEL_527;
    }
    goto LABEL_577;
  }
LABEL_569:
  *(_DWORD *)(a1 + 44) |= 0x20000000u;
  v278 = *(void **)(a1 + 552);
  if (!v278)
  {
    uint64_t v279 = *(void *)(a1 + 8);
    unsigned int v280 = (void *)(v279 & 0xFFFFFFFFFFFFFFFCLL);
    if (v279) {
      unsigned int v280 = (void *)*v280;
    }
    v278 = sub_178E88C((uint64_t)v280);
    *(void *)(a1 + 552) = v278;
  }
  if (*(void *)(a2 + 552)) {
    v281 = *(uint64_t (****)())(a2 + 552);
  }
  else {
    v281 = &off_2549348;
  }
  sub_173ED40((uint64_t)v278, (uint64_t)v281);
  if ((v146 & 0x40000000) == 0)
  {
LABEL_527:
    if ((v146 & 0x80000000) == 0) {
      goto LABEL_593;
    }
    goto LABEL_585;
  }
LABEL_577:
  *(_DWORD *)(a1 + 44) |= 0x40000000u;
  uint64_t v282 = *(void *)(a1 + 560);
  if (!v282)
  {
    uint64_t v283 = *(void *)(a1 + 8);
    uint64_t v284 = (void *)(v283 & 0xFFFFFFFFFFFFFFFCLL);
    if (v283) {
      uint64_t v284 = (void *)*v284;
    }
    uint64_t v282 = sub_178E8E8((uint64_t)v284);
    *(void *)(a1 + 560) = v282;
  }
  if (*(void *)(a2 + 560)) {
    uint64_t v285 = *(uint64_t (****)())(a2 + 560);
  }
  else {
    uint64_t v285 = &off_2549380;
  }
  sub_129AF38(v282, (uint64_t)v285);
  if ((v146 & 0x80000000) != 0)
  {
LABEL_585:
    *(_DWORD *)(a1 + 44) |= 0x80000000;
    uint64_t v286 = *(void *)(a1 + 568);
    if (!v286)
    {
      uint64_t v287 = *(void *)(a1 + 8);
      uint64_t v288 = (void *)(v287 & 0xFFFFFFFFFFFFFFFCLL);
      if (v287) {
        uint64_t v288 = (void *)*v288;
      }
      uint64_t v286 = sub_178E944((uint64_t)v288);
      *(void *)(a1 + 568) = v286;
    }
    if (*(void *)(a2 + 568)) {
      unsigned int v289 = *(uint64_t (****)())(a2 + 568);
    }
    else {
      unsigned int v289 = &off_25493B0;
    }
    sub_173EDD0(v286, (uint64_t)v289);
  }
LABEL_593:
  unsigned int v290 = *(_DWORD *)(a2 + 48);
  if (!(_BYTE)v290) {
    goto LABEL_667;
  }
  if (v290)
  {
    *(_DWORD *)(a1 + 48) |= 1u;
    uint64_t v291 = *(void *)(a1 + 576);
    if (!v291)
    {
      uint64_t v292 = *(void *)(a1 + 8);
      v293 = (void *)(v292 & 0xFFFFFFFFFFFFFFFCLL);
      if (v292) {
        v293 = (void *)*v293;
      }
      uint64_t v291 = sub_178E9A0((uint64_t)v293);
      *(void *)(a1 + 576) = v291;
    }
    if (*(void *)(a2 + 576)) {
      uint64_t v294 = *(uint64_t (****)())(a2 + 576);
    }
    else {
      uint64_t v294 = &off_2549400;
    }
    sub_129AF38(v291, (uint64_t)v294);
    if ((v290 & 2) == 0)
    {
LABEL_596:
      if ((v290 & 4) == 0) {
        goto LABEL_597;
      }
      goto LABEL_618;
    }
  }
  else if ((v290 & 2) == 0)
  {
    goto LABEL_596;
  }
  *(_DWORD *)(a1 + 48) |= 2u;
  uint64_t v295 = *(void *)(a1 + 584);
  if (!v295)
  {
    uint64_t v296 = *(void *)(a1 + 8);
    uint64_t v297 = (void *)(v296 & 0xFFFFFFFFFFFFFFFCLL);
    if (v296) {
      uint64_t v297 = (void *)*v297;
    }
    uint64_t v295 = sub_178B344((uint64_t)v297);
    *(void *)(a1 + 584) = v295;
  }
  if (*(void *)(a2 + 584)) {
    unsigned int v298 = *(uint64_t (****)())(a2 + 584);
  }
  else {
    unsigned int v298 = &off_2546F00;
  }
  sub_129AF38(v295, (uint64_t)v298);
  if ((v290 & 4) == 0)
  {
LABEL_597:
    if ((v290 & 8) == 0) {
      goto LABEL_598;
    }
    goto LABEL_626;
  }
LABEL_618:
  *(_DWORD *)(a1 + 48) |= 4u;
  uint64_t v299 = *(void *)(a1 + 592);
  if (!v299)
  {
    uint64_t v300 = *(void *)(a1 + 8);
    uint64_t v301 = (void *)(v300 & 0xFFFFFFFFFFFFFFFCLL);
    if (v300) {
      uint64_t v301 = (void *)*v301;
    }
    uint64_t v299 = sub_178E9FC((uint64_t)v301);
    *(void *)(a1 + 592) = v299;
  }
  if (*(void *)(a2 + 592)) {
    unint64_t v302 = *(uint64_t (****)())(a2 + 592);
  }
  else {
    unint64_t v302 = &off_2549430;
  }
  sub_129F8C4(v299, (uint64_t)v302);
  if ((v290 & 8) == 0)
  {
LABEL_598:
    if ((v290 & 0x10) == 0) {
      goto LABEL_599;
    }
    goto LABEL_634;
  }
LABEL_626:
  *(_DWORD *)(a1 + 48) |= 8u;
  uint64_t v303 = *(void *)(a1 + 600);
  if (!v303)
  {
    uint64_t v304 = *(void *)(a1 + 8);
    uint64_t v305 = (void *)(v304 & 0xFFFFFFFFFFFFFFFCLL);
    if (v304) {
      uint64_t v305 = (void *)*v305;
    }
    uint64_t v303 = sub_178ECD0((uint64_t)v305);
    *(void *)(a1 + 600) = v303;
  }
  if (*(void *)(a2 + 600)) {
    v306 = *(uint64_t (****)())(a2 + 600);
  }
  else {
    v306 = &off_2549520;
  }
  sub_129AF38(v303, (uint64_t)v306);
  if ((v290 & 0x10) == 0)
  {
LABEL_599:
    if ((v290 & 0x20) == 0) {
      goto LABEL_600;
    }
LABEL_642:
    *(_DWORD *)(a1 + 48) |= 0x20u;
    uint64_t v311 = *(void *)(a1 + 616);
    if (!v311)
    {
      uint64_t v312 = *(void *)(a1 + 8);
      v313 = (void *)(v312 & 0xFFFFFFFFFFFFFFFCLL);
      if (v312) {
        v313 = (void *)*v313;
      }
      uint64_t v311 = sub_178EA58((uint64_t)v313);
      *(void *)(a1 + 616) = v311;
    }
    if (*(void *)(a2 + 616)) {
      uint64_t v314 = *(uint64_t (****)())(a2 + 616);
    }
    else {
      uint64_t v314 = &off_2549468;
    }
    sub_129AF38(v311, (uint64_t)v314);
    if ((v290 & 0x40) == 0) {
      goto LABEL_658;
    }
    goto LABEL_650;
  }
LABEL_634:
  *(_DWORD *)(a1 + 48) |= 0x10u;
  uint64_t v307 = *(void *)(a1 + 608);
  if (!v307)
  {
    uint64_t v308 = *(void *)(a1 + 8);
    v309 = (void *)(v308 & 0xFFFFFFFFFFFFFFFCLL);
    if (v308) {
      v309 = (void *)*v309;
    }
    uint64_t v307 = sub_178E734((uint64_t)v309);
    *(void *)(a1 + 608) = v307;
  }
  if (*(void *)(a2 + 608)) {
    uint64_t v310 = *(uint64_t (****)())(a2 + 608);
  }
  else {
    uint64_t v310 = &off_25492B8;
  }
  sub_12A372C(v307, (uint64_t)v310);
  if ((v290 & 0x20) != 0) {
    goto LABEL_642;
  }
LABEL_600:
  if ((v290 & 0x40) != 0)
  {
LABEL_650:
    *(_DWORD *)(a1 + 48) |= 0x40u;
    uint64_t v315 = *(void *)(a1 + 624);
    if (!v315)
    {
      uint64_t v316 = *(void *)(a1 + 8);
      v317 = (void *)(v316 & 0xFFFFFFFFFFFFFFFCLL);
      if (v316) {
        v317 = (void *)*v317;
      }
      uint64_t v315 = sub_178EC58((uint64_t)v317);
      *(void *)(a1 + 624) = v315;
    }
    v318 = *(uint64_t (****)())(a2 + 624);
    if (!v318) {
      v318 = &off_2549508;
    }
    unint64_t v319 = (unint64_t)v318[1];
    if (v319) {
      sub_188B4F8((uint64_t *)(v315 + 8), (v319 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
  }
LABEL_658:
  if ((v290 & 0x80) != 0)
  {
    *(_DWORD *)(a1 + 48) |= 0x80u;
    uint64_t v320 = *(void *)(a1 + 632);
    if (!v320)
    {
      uint64_t v321 = *(void *)(a1 + 8);
      v322 = (void *)(v321 & 0xFFFFFFFFFFFFFFFCLL);
      if (v321) {
        v322 = (void *)*v322;
      }
      uint64_t v320 = sub_1788BD0((uint64_t)v322);
      *(void *)(a1 + 632) = v320;
    }
    if (*(void *)(a2 + 632)) {
      uint64_t v323 = *(uint64_t (****)())(a2 + 632);
    }
    else {
      uint64_t v323 = &off_2545D80;
    }
    sub_129AF38(v320, (uint64_t)v323);
  }
LABEL_667:
  if ((v290 & 0xFF00) == 0) {
    goto LABEL_741;
  }
  if ((v290 & 0x100) != 0)
  {
    *(_DWORD *)(a1 + 48) |= 0x100u;
    uint64_t v324 = *(void *)(a1 + 640);
    if (!v324)
    {
      uint64_t v325 = *(void *)(a1 + 8);
      v326 = (void *)(v325 & 0xFFFFFFFFFFFFFFFCLL);
      if (v325) {
        v326 = (void *)*v326;
      }
      uint64_t v324 = sub_1854E10((uint64_t)v326);
      *(void *)(a1 + 640) = v324;
    }
    uint64_t v327 = *(uint64_t (****)())(a2 + 640);
    if (!v327) {
      uint64_t v327 = &off_254D5A0;
    }
    unint64_t v328 = (unint64_t)v327[1];
    if (v328) {
      sub_188B4F8((uint64_t *)(v324 + 8), (v328 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
  }
  if ((v290 & 0x200) != 0)
  {
    *(_DWORD *)(a1 + 48) |= 0x200u;
    uint64_t v329 = *(void *)(a1 + 648);
    if (!v329)
    {
      uint64_t v330 = *(void *)(a1 + 8);
      v331 = (void *)(v330 & 0xFFFFFFFFFFFFFFFCLL);
      if (v330) {
        v331 = (void *)*v331;
      }
      uint64_t v329 = sub_178E7D4((uint64_t)v331);
      *(void *)(a1 + 648) = v329;
    }
    if (*(void *)(a2 + 648)) {
      uint64_t v332 = *(uint64_t (****)())(a2 + 648);
    }
    else {
      uint64_t v332 = &off_25492E8;
    }
    sub_129AF38(v329, (uint64_t)v332);
    if ((v290 & 0x400) == 0)
    {
LABEL_679:
      if ((v290 & 0x800) == 0) {
        goto LABEL_680;
      }
      goto LABEL_699;
    }
  }
  else if ((v290 & 0x400) == 0)
  {
    goto LABEL_679;
  }
  *(_DWORD *)(a1 + 48) |= 0x400u;
  uint64_t v333 = *(void *)(a1 + 656);
  if (!v333)
  {
    uint64_t v334 = *(void *)(a1 + 8);
    uint64_t v335 = (void *)(v334 & 0xFFFFFFFFFFFFFFFCLL);
    if (v334) {
      uint64_t v335 = (void *)*v335;
    }
    uint64_t v333 = sub_178C73C((uint64_t)v335);
    *(void *)(a1 + 656) = v333;
  }
  if (*(void *)(a2 + 656)) {
    uint64_t v336 = *(uint64_t (****)())(a2 + 656);
  }
  else {
    uint64_t v336 = &off_25483D8;
  }
  sub_129AF38(v333, (uint64_t)v336);
  if ((v290 & 0x800) == 0)
  {
LABEL_680:
    if ((v290 & 0x1000) == 0) {
      goto LABEL_681;
    }
LABEL_707:
    *(_DWORD *)(a1 + 48) |= 0x1000u;
    uint64_t v341 = *(void *)(a1 + 672);
    if (!v341)
    {
      uint64_t v342 = *(void *)(a1 + 8);
      v343 = (void *)(v342 & 0xFFFFFFFFFFFFFFFCLL);
      if (v342) {
        v343 = (void *)*v343;
      }
      uint64_t v341 = sub_178E830((uint64_t)v343);
      *(void *)(a1 + 672) = v341;
    }
    if (*(void *)(a2 + 672)) {
      uint64_t v344 = *(uint64_t (****)())(a2 + 672);
    }
    else {
      uint64_t v344 = &off_2549318;
    }
    sub_129AF38(v341, (uint64_t)v344);
    if ((v290 & 0x2000) == 0) {
      goto LABEL_723;
    }
    goto LABEL_715;
  }
LABEL_699:
  *(_DWORD *)(a1 + 48) |= 0x800u;
  uint64_t v337 = *(void *)(a1 + 664);
  if (!v337)
  {
    uint64_t v338 = *(void *)(a1 + 8);
    uint64_t v339 = (void *)(v338 & 0xFFFFFFFFFFFFFFFCLL);
    if (v338) {
      uint64_t v339 = (void *)*v339;
    }
    uint64_t v337 = sub_1789638((uint64_t)v339);
    *(void *)(a1 + 664) = v337;
  }
  if (*(void *)(a2 + 664)) {
    uint64_t v340 = *(uint64_t (****)())(a2 + 664);
  }
  else {
    uint64_t v340 = &off_25462B0;
  }
  sub_16FF25C(v337, (uint64_t)v340);
  if ((v290 & 0x1000) != 0) {
    goto LABEL_707;
  }
LABEL_681:
  if ((v290 & 0x2000) != 0)
  {
LABEL_715:
    *(_DWORD *)(a1 + 48) |= 0x2000u;
    uint64_t v345 = *(void *)(a1 + 680);
    if (!v345)
    {
      uint64_t v346 = *(void *)(a1 + 8);
      uint64_t v347 = (void *)(v346 & 0xFFFFFFFFFFFFFFFCLL);
      if (v346) {
        uint64_t v347 = (void *)*v347;
      }
      uint64_t v345 = sub_1788F64((uint64_t)v347);
      *(void *)(a1 + 680) = v345;
    }
    uint64_t v348 = *(uint64_t (****)())(a2 + 680);
    if (!v348) {
      uint64_t v348 = &off_2545EE8;
    }
    unint64_t v349 = (unint64_t)v348[1];
    if (v349) {
      sub_188B4F8((uint64_t *)(v345 + 8), (v349 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
  }
LABEL_723:
  if ((v290 & 0x4000) != 0)
  {
    *(_DWORD *)(a1 + 48) |= 0x4000u;
    uint64_t v350 = *(void *)(a1 + 688);
    if (!v350)
    {
      uint64_t v351 = *(void *)(a1 + 8);
      uint64_t v352 = (void *)(v351 & 0xFFFFFFFFFFFFFFFCLL);
      if (v351) {
        uint64_t v352 = (void *)*v352;
      }
      uint64_t v350 = sub_17891AC((uint64_t)v352);
      *(void *)(a1 + 688) = v350;
    }
    v353 = *(uint64_t (****)())(a2 + 688);
    if (!v353) {
      v353 = &off_2545FF8;
    }
    unint64_t v354 = (unint64_t)v353[1];
    if (v354) {
      sub_188B4F8((uint64_t *)(v350 + 8), (v354 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
  }
  if ((v290 & 0x8000) != 0)
  {
    *(_DWORD *)(a1 + 48) |= 0x8000u;
    uint64_t v355 = *(void *)(a1 + 696);
    if (!v355)
    {
      uint64_t v356 = *(void *)(a1 + 8);
      v357 = (void *)(v356 & 0xFFFFFFFFFFFFFFFCLL);
      if (v356) {
        v357 = (void *)*v357;
      }
      uint64_t v355 = sub_1789280((uint64_t)v357);
      *(void *)(a1 + 696) = v355;
    }
    v358 = *(uint64_t (****)())(a2 + 696);
    if (!v358) {
      v358 = &off_2546060;
    }
    unint64_t v359 = (unint64_t)v358[1];
    if (v359) {
      sub_188B4F8((uint64_t *)(v355 + 8), (v359 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
  }
LABEL_741:
  if ((v290 & 0xFF0000) != 0)
  {
    if ((v290 & 0x10000) != 0)
    {
      *(_DWORD *)(a1 + 48) |= 0x10000u;
      uint64_t v360 = *(void *)(a1 + 704);
      if (!v360)
      {
        uint64_t v361 = *(void *)(a1 + 8);
        v362 = (void *)(v361 & 0xFFFFFFFFFFFFFFFCLL);
        if (v361) {
          v362 = (void *)*v362;
        }
        uint64_t v360 = sub_178C5B0((uint64_t)v362);
        *(void *)(a1 + 704) = v360;
      }
      if (*(void *)(a2 + 704)) {
        uint64_t v363 = *(uint64_t (****)())(a2 + 704);
      }
      else {
        uint64_t v363 = &off_25482E8;
      }
      sub_129AF38(v360, (uint64_t)v363);
    }
    if ((v290 & 0x20000) != 0)
    {
      *(_DWORD *)(a1 + 48) |= 0x20000u;
      uint64_t v364 = *(void *)(a1 + 712);
      if (!v364)
      {
        uint64_t v365 = *(void *)(a1 + 8);
        v366 = (void *)(v365 & 0xFFFFFFFFFFFFFFFCLL);
        if (v365) {
          v366 = (void *)*v366;
        }
        uint64_t v364 = sub_178EEC8((uint64_t)v366);
        *(void *)(a1 + 712) = v364;
      }
      uint64_t v367 = *(uint64_t (****)())(a2 + 712);
      if (!v367) {
        uint64_t v367 = &off_25495E0;
      }
      unint64_t v368 = (unint64_t)v367[1];
      if (v368) {
        sub_188B4F8((uint64_t *)(v364 + 8), (v368 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
    }
    if ((v290 & 0x40000) != 0)
    {
      *(_DWORD *)(a1 + 48) |= 0x40000u;
      uint64_t v369 = *(void *)(a1 + 720);
      if (!v369)
      {
        uint64_t v370 = *(void *)(a1 + 8);
        v371 = (void *)(v370 & 0xFFFFFFFFFFFFFFFCLL);
        if (v370) {
          v371 = (void *)*v371;
        }
        uint64_t v369 = sub_1787DE0((uint64_t)v371);
        *(void *)(a1 + 720) = v369;
      }
      uint64_t v372 = *(uint64_t (****)())(a2 + 720);
      if (!v372) {
        uint64_t v372 = &off_25455B8;
      }
      unint64_t v373 = (unint64_t)v372[1];
      if (v373) {
        sub_188B4F8((uint64_t *)(v369 + 8), (v373 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
    }
    if ((v290 & 0x80000) != 0)
    {
      *(_DWORD *)(a1 + 48) |= 0x80000u;
      uint64_t v374 = *(void *)(a1 + 728);
      if (!v374)
      {
        uint64_t v375 = *(void *)(a1 + 8);
        uint64_t v376 = (void *)(v375 & 0xFFFFFFFFFFFFFFFCLL);
        if (v375) {
          uint64_t v376 = (void *)*v376;
        }
        uint64_t v374 = sub_1789038((uint64_t)v376);
        *(void *)(a1 + 728) = v374;
      }
      v377 = *(uint64_t (****)())(a2 + 728);
      if (!v377) {
        v377 = &off_2545F90;
      }
      unint64_t v378 = (unint64_t)v377[1];
      if (v378) {
        sub_188B4F8((uint64_t *)(v374 + 8), (v378 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
    }
    if ((v290 & 0x100000) != 0)
    {
      *(_DWORD *)(a1 + 48) |= 0x100000u;
      v379 = *(std::string **)(a1 + 736);
      if (!v379)
      {
        uint64_t v380 = *(void *)(a1 + 8);
        v381 = (void *)(v380 & 0xFFFFFFFFFFFFFFFCLL);
        if (v380) {
          v381 = (void *)*v381;
        }
        v379 = (std::string *)sub_178DEAC((uint64_t)v381);
        *(void *)(a1 + 736) = v379;
      }
      if (*(void *)(a2 + 736)) {
        v382 = *(uint64_t (****)())(a2 + 736);
      }
      else {
        v382 = &off_2548E98;
      }
      sub_11E43C0(v379, (uint64_t)v382);
    }
    if ((v290 & 0x200000) != 0)
    {
      *(_DWORD *)(a1 + 48) |= 0x200000u;
      uint64_t v383 = *(void *)(a1 + 744);
      if (!v383)
      {
        uint64_t v384 = *(void *)(a1 + 8);
        v385 = (void *)(v384 & 0xFFFFFFFFFFFFFFFCLL);
        if (v384) {
          v385 = (void *)*v385;
        }
        uint64_t v383 = sub_178F040((uint64_t)v385);
        *(void *)(a1 + 744) = v383;
      }
      v386 = *(uint64_t (****)())(a2 + 744);
      if (!v386) {
        v386 = &off_2549698;
      }
      unint64_t v387 = (unint64_t)v386[1];
      if (v387) {
        sub_188B4F8((uint64_t *)(v383 + 8), (v387 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
    }
    if ((v290 & 0x400000) != 0)
    {
      *(_DWORD *)(a1 + 48) |= 0x400000u;
      uint64_t v388 = *(void *)(a1 + 752);
      if (!v388)
      {
        uint64_t v389 = *(void *)(a1 + 8);
        v390 = (void *)(v389 & 0xFFFFFFFFFFFFFFFCLL);
        if (v389) {
          v390 = (void *)*v390;
        }
        uint64_t v388 = sub_1787EB4((uint64_t)v390);
        *(void *)(a1 + 752) = v388;
      }
      int v391 = *(uint64_t (****)())(a2 + 752);
      if (!v391) {
        int v391 = &off_2545610;
      }
      unint64_t v392 = (unint64_t)v391[1];
      if (v392) {
        sub_188B4F8((uint64_t *)(v388 + 8), (v392 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
    }
    if ((v290 & 0x800000) != 0)
    {
      *(_DWORD *)(a1 + 48) |= 0x800000u;
      uint64_t v393 = *(void *)(a1 + 760);
      if (!v393)
      {
        uint64_t v394 = *(void *)(a1 + 8);
        v395 = (void *)(v394 & 0xFFFFFFFFFFFFFFFCLL);
        if (v394) {
          v395 = (void *)*v395;
        }
        uint64_t v393 = sub_1787F2C((uint64_t)v395);
        *(void *)(a1 + 760) = v393;
      }
      v396 = *(uint64_t (****)())(a2 + 760);
      if (!v396) {
        v396 = &off_2545628;
      }
      unint64_t v397 = (unint64_t)v396[1];
      if (v397) {
        sub_188B4F8((uint64_t *)(v393 + 8), (v397 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
    }
  }
  if (!HIBYTE(v290)) {
    goto LABEL_888;
  }
  if ((v290 & 0x1000000) != 0)
  {
    *(_DWORD *)(a1 + 48) |= 0x1000000u;
    uint64_t v398 = *(void *)(a1 + 768);
    if (!v398)
    {
      uint64_t v399 = *(void *)(a1 + 8);
      uint64_t v400 = (void *)(v399 & 0xFFFFFFFFFFFFFFFCLL);
      if (v399) {
        uint64_t v400 = (void *)*v400;
      }
      uint64_t v398 = sub_178C084((uint64_t)v400);
      *(void *)(a1 + 768) = v398;
    }
    if (*(void *)(a2 + 768)) {
      uint64_t v401 = *(uint64_t (****)())(a2 + 768);
    }
    else {
      uint64_t v401 = &off_25480B0;
    }
    sub_133D204(v398, (uint64_t)v401);
    if ((v290 & 0x2000000) == 0)
    {
LABEL_817:
      if ((v290 & 0x4000000) == 0) {
        goto LABEL_818;
      }
      goto LABEL_840;
    }
  }
  else if ((v290 & 0x2000000) == 0)
  {
    goto LABEL_817;
  }
  *(_DWORD *)(a1 + 48) |= 0x2000000u;
  uint64_t v402 = *(void *)(a1 + 776);
  if (!v402)
  {
    uint64_t v403 = *(void *)(a1 + 8);
    v404 = (void *)(v403 & 0xFFFFFFFFFFFFFFFCLL);
    if (v403) {
      v404 = (void *)*v404;
    }
    uint64_t v402 = sub_178BA54((uint64_t)v404);
    *(void *)(a1 + 776) = v402;
  }
  if (*(void *)(a2 + 776)) {
    uint64_t v405 = *(uint64_t (****)())(a2 + 776);
  }
  else {
    uint64_t v405 = &off_2547CC0;
  }
  sub_129AF38(v402, (uint64_t)v405);
  if ((v290 & 0x4000000) == 0)
  {
LABEL_818:
    if ((v290 & 0x8000000) == 0) {
      goto LABEL_819;
    }
    goto LABEL_848;
  }
LABEL_840:
  *(_DWORD *)(a1 + 48) |= 0x4000000u;
  uint64_t v406 = *(void *)(a1 + 784);
  if (!v406)
  {
    uint64_t v407 = *(void *)(a1 + 8);
    uint64_t v408 = (void *)(v407 & 0xFFFFFFFFFFFFFFFCLL);
    if (v407) {
      uint64_t v408 = (void *)*v408;
    }
    uint64_t v406 = sub_178BE70((uint64_t)v408);
    *(void *)(a1 + 784) = v406;
  }
  if (*(void *)(a2 + 784)) {
    v409 = *(uint64_t (****)())(a2 + 784);
  }
  else {
    v409 = &off_2547F78;
  }
  sub_129AF38(v406, (uint64_t)v409);
  if ((v290 & 0x8000000) == 0)
  {
LABEL_819:
    if ((v290 & 0x10000000) == 0) {
      goto LABEL_820;
    }
    goto LABEL_856;
  }
LABEL_848:
  *(_DWORD *)(a1 + 48) |= 0x8000000u;
  v410 = *(std::string **)(a1 + 792);
  if (!v410)
  {
    uint64_t v411 = *(void *)(a1 + 8);
    v412 = (void *)(v411 & 0xFFFFFFFFFFFFFFFCLL);
    if (v411) {
      v412 = (void *)*v412;
    }
    v410 = (std::string *)sub_17896F0((uint64_t)v412);
    *(void *)(a1 + 792) = v410;
  }
  if (*(void *)(a2 + 792)) {
    v413 = *(uint64_t (****)())(a2 + 792);
  }
  else {
    v413 = &off_2546348;
  }
  sub_1700038(v410, (uint64_t)v413);
  if ((v290 & 0x10000000) == 0)
  {
LABEL_820:
    if ((v290 & 0x20000000) == 0) {
      goto LABEL_821;
    }
LABEL_864:
    *(_DWORD *)(a1 + 48) |= 0x20000000u;
    uint64_t v418 = *(void *)(a1 + 808);
    if (!v418)
    {
      uint64_t v419 = *(void *)(a1 + 8);
      v420 = (void *)(v419 & 0xFFFFFFFFFFFFFFFCLL);
      if (v419) {
        v420 = (void *)*v420;
      }
      uint64_t v418 = sub_178BBC4((uint64_t)v420);
      *(void *)(a1 + 808) = v418;
    }
    if (*(void *)(a2 + 808)) {
      v421 = *(uint64_t (****)())(a2 + 808);
    }
    else {
      v421 = &off_2547DF0;
    }
    sub_129AF38(v418, (uint64_t)v421);
    if ((v290 & 0x40000000) == 0)
    {
LABEL_822:
      if ((v290 & 0x80000000) == 0) {
        goto LABEL_888;
      }
      goto LABEL_880;
    }
    goto LABEL_872;
  }
LABEL_856:
  *(_DWORD *)(a1 + 48) |= 0x10000000u;
  uint64_t v414 = *(void *)(a1 + 800);
  if (!v414)
  {
    uint64_t v415 = *(void *)(a1 + 8);
    v416 = (void *)(v415 & 0xFFFFFFFFFFFFFFFCLL);
    if (v415) {
      v416 = (void *)*v416;
    }
    uint64_t v414 = sub_178BB0C((uint64_t)v416);
    *(void *)(a1 + 800) = v414;
  }
  if (*(void *)(a2 + 800)) {
    v417 = *(uint64_t (****)())(a2 + 800);
  }
  else {
    v417 = &off_2547D40;
  }
  sub_129AF38(v414, (uint64_t)v417);
  if ((v290 & 0x20000000) != 0) {
    goto LABEL_864;
  }
LABEL_821:
  if ((v290 & 0x40000000) == 0) {
    goto LABEL_822;
  }
LABEL_872:
  *(_DWORD *)(a1 + 48) |= 0x40000000u;
  uint64_t v422 = *(void *)(a1 + 816);
  if (!v422)
  {
    uint64_t v423 = *(void *)(a1 + 8);
    v424 = (void *)(v423 & 0xFFFFFFFFFFFFFFFCLL);
    if (v423) {
      v424 = (void *)*v424;
    }
    uint64_t v422 = sub_178BC7C((uint64_t)v424);
    *(void *)(a1 + 816) = v422;
  }
  if (*(void *)(a2 + 816)) {
    v425 = *(uint64_t (****)())(a2 + 816);
  }
  else {
    v425 = &off_2547E68;
  }
  sub_129AF38(v422, (uint64_t)v425);
  if ((v290 & 0x80000000) != 0)
  {
LABEL_880:
    *(_DWORD *)(a1 + 48) |= 0x80000000;
    uint64_t v426 = *(void *)(a1 + 824);
    if (!v426)
    {
      uint64_t v427 = *(void *)(a1 + 8);
      v428 = (void *)(v427 & 0xFFFFFFFFFFFFFFFCLL);
      if (v427) {
        v428 = (void *)*v428;
      }
      uint64_t v426 = sub_178BD34((uint64_t)v428);
      *(void *)(a1 + 824) = v426;
    }
    if (*(void *)(a2 + 824)) {
      v429 = *(uint64_t (****)())(a2 + 824);
    }
    else {
      v429 = &off_2547ED0;
    }
    sub_129AF38(v426, (uint64_t)v429);
  }
LABEL_888:
  if (*(unsigned char *)(a2 + 52))
  {
    v430 = *(uint64_t (****)())(a2 + 832);
    *(_DWORD *)(a1 + 52) |= 1u;
    uint64_t v431 = *(void *)(a1 + 832);
    if (!v431)
    {
      uint64_t v432 = *(void *)(a1 + 8);
      v433 = (void *)(v432 & 0xFFFFFFFFFFFFFFFCLL);
      if (v432) {
        v433 = (void *)*v433;
      }
      uint64_t v431 = sub_178B99C((uint64_t)v433);
      *(void *)(a1 + 832) = v431;
      v430 = *(uint64_t (****)())(a2 + 832);
    }
    if (v430) {
      v434 = v430;
    }
    else {
      v434 = &off_2547C50;
    }
    sub_129F8C4(v431, (uint64_t)v434);
  }
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v435 = *(void *)(a2 + 8);
  if (v435)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v435 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_173EC58(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 40);
  if ((v4 & 0x7F) != 0)
  {
    if (v4)
    {
      *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_17;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    *(unsigned char *)(a1 + 52) = *(unsigned char *)(a2 + 52);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_18;
    }
LABEL_17:
    *(unsigned char *)(a1 + 53) = *(unsigned char *)(a2 + 53);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0) {
        goto LABEL_7;
      }
      goto LABEL_19;
    }
LABEL_18:
    *(unsigned char *)(a1 + 54) = *(unsigned char *)(a2 + 54);
    if ((v4 & 0x10) == 0)
    {
LABEL_7:
      if ((v4 & 0x20) == 0) {
        goto LABEL_8;
      }
      goto LABEL_20;
    }
LABEL_19:
    *(unsigned char *)(a1 + 55) = *(unsigned char *)(a2 + 55);
    if ((v4 & 0x20) == 0)
    {
LABEL_8:
      if ((v4 & 0x40) == 0)
      {
LABEL_10:
        *(_DWORD *)(a1 + 40) |= v4;
        goto LABEL_11;
      }
LABEL_9:
      *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
      goto LABEL_10;
    }
LABEL_20:
    *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
    if ((v4 & 0x40) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
LABEL_11:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_173ED40(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 40);
  if ((v4 & 3) != 0)
  {
    if (v4) {
      *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
    }
    if ((v4 & 2) != 0) {
      *(unsigned char *)(a1 + 52) = *(unsigned char *)(a2 + 52);
    }
    *(_DWORD *)(a1 + 40) |= v4;
  }
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_173EDD0(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 40);
  if ((v4 & 0xF) != 0)
  {
    if (v4)
    {
      *(_DWORD *)(a1 + 40) |= 1u;
      uint64_t v6 = *(std::string **)(a1 + 48);
      if (!v6)
      {
        uint64_t v7 = *(void *)(a1 + 8);
        uint64_t v8 = (void *)(v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (v7) {
          uint64_t v8 = (void *)*v8;
        }
        uint64_t v6 = (std::string *)sub_1786034((uint64_t)v8);
        *(void *)(a1 + 48) = v6;
      }
      if (*(void *)(a2 + 48)) {
        uint64_t v9 = *(uint64_t (****)())(a2 + 48);
      }
      else {
        uint64_t v9 = &off_2544448;
      }
      sub_16B6414(v6, (uint64_t)v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_28;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    *(_DWORD *)(a1 + 40) |= 2u;
    uint64_t v10 = *(std::string **)(a1 + 56);
    if (!v10)
    {
      uint64_t v11 = *(void *)(a1 + 8);
      uint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        uint64_t v12 = (void *)*v12;
      }
      uint64_t v10 = (std::string *)sub_1786034((uint64_t)v12);
      *(void *)(a1 + 56) = v10;
    }
    if (*(void *)(a2 + 56)) {
      uint64_t v13 = *(uint64_t (****)())(a2 + 56);
    }
    else {
      uint64_t v13 = &off_2544448;
    }
    sub_16B6414(v10, (uint64_t)v13);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0)
      {
LABEL_7:
        *(_DWORD *)(a1 + 40) |= v4;
        goto LABEL_8;
      }
LABEL_6:
      *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
      goto LABEL_7;
    }
LABEL_28:
    *(_DWORD *)(a1 + 40) |= 4u;
    uint64_t v14 = *(std::string **)(a1 + 64);
    if (!v14)
    {
      uint64_t v15 = *(void *)(a1 + 8);
      uint64_t v16 = (void *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
      if (v15) {
        uint64_t v16 = (void *)*v16;
      }
      uint64_t v14 = (std::string *)sub_17860B0((uint64_t)v16);
      *(void *)(a1 + 64) = v14;
    }
    if (*(void *)(a2 + 64)) {
      uint64_t v17 = *(uint64_t (****)())(a2 + 64);
    }
    else {
      uint64_t v17 = &off_2544470;
    }
    sub_117EF04(v14, (uint64_t)v17);
    if ((v4 & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_8:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_173EF4C(uint64_t a1)
{
  uint64_t result = sub_18856CC(a1 + 16);
  if (result)
  {
    int v3 = *(_DWORD *)(a1 + 40);
    if (v3)
    {
      uint64_t result = sub_18856CC(*(void *)(a1 + 64) + 16);
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 2) != 0)
    {
      uint64_t result = sub_18856CC(*(void *)(a1 + 72) + 16);
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 4) != 0)
    {
      uint64_t result = sub_18856CC(*(void *)(a1 + 80) + 16);
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 8) != 0)
    {
      uint64_t result = sub_18856CC(*(void *)(a1 + 88) + 16);
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 0x10) != 0)
    {
      uint64_t result = sub_18856CC(*(void *)(a1 + 96) + 16);
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 0x20) != 0)
    {
      uint64_t result = sub_18856CC(*(void *)(a1 + 104) + 16);
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 0x40) != 0)
    {
      uint64_t result = sub_18856CC(*(void *)(a1 + 112) + 16);
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 0x80) != 0)
    {
      uint64_t result = sub_18856CC(*(void *)(a1 + 120) + 16);
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 0x100) != 0)
    {
      uint64_t result = sub_18856CC(*(void *)(a1 + 128) + 16);
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 0x800) != 0)
    {
      uint64_t result = sub_16EF688(*(void *)(a1 + 152));
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 0x2000) != 0)
    {
      uint64_t result = sub_18856CC(*(void *)(a1 + 168) + 16);
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 0x4000) != 0)
    {
      uint64_t result = sub_18856CC(*(void *)(a1 + 176) + 16);
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 0x80000000) == 0 || (uint64_t result = sub_18856CC(*(void *)(a1 + 312) + 16), result))
    {
      int v4 = *(_DWORD *)(a1 + 44);
      if ((v4 & 0x2000) != 0)
      {
        uint64_t result = sub_18856CC(*(void *)(a1 + 424) + 16);
        if (!result) {
          return result;
        }
        int v4 = *(_DWORD *)(a1 + 44);
      }
      if ((v4 & 0x4000) != 0)
      {
        uint64_t result = sub_18856CC(*(void *)(a1 + 432) + 16);
        if (!result) {
          return result;
        }
        int v4 = *(_DWORD *)(a1 + 44);
      }
      if ((v4 & 0x8000) != 0)
      {
        uint64_t result = sub_18856CC(*(void *)(a1 + 440) + 16);
        if (!result) {
          return result;
        }
        int v4 = *(_DWORD *)(a1 + 44);
      }
      if ((v4 & 0x10000) != 0)
      {
        uint64_t result = sub_18856CC(*(void *)(a1 + 448) + 16);
        if (!result) {
          return result;
        }
        int v4 = *(_DWORD *)(a1 + 44);
      }
      if ((v4 & 0x20000) != 0)
      {
        uint64_t result = sub_129F940(*(void *)(a1 + 456));
        if (!result) {
          return result;
        }
        int v4 = *(_DWORD *)(a1 + 44);
      }
      if ((v4 & 0x100000) != 0)
      {
        uint64_t result = sub_18856CC(*(void *)(a1 + 480) + 16);
        if (!result) {
          return result;
        }
        int v4 = *(_DWORD *)(a1 + 44);
      }
      if ((v4 & 0x200000) != 0)
      {
        uint64_t result = sub_18856CC(*(void *)(a1 + 488) + 16);
        if (!result) {
          return result;
        }
        int v4 = *(_DWORD *)(a1 + 44);
      }
      if ((v4 & 0x800000) != 0)
      {
        uint64_t result = sub_18856CC(*(void *)(a1 + 504) + 16);
        if (!result) {
          return result;
        }
        int v4 = *(_DWORD *)(a1 + 44);
      }
      if ((v4 & 0x1000000) != 0)
      {
        uint64_t result = sub_18856CC(*(void *)(a1 + 512) + 16);
        if (!result) {
          return result;
        }
        int v4 = *(_DWORD *)(a1 + 44);
      }
      if ((v4 & 0x2000000) != 0)
      {
        uint64_t result = sub_18856CC(*(void *)(a1 + 520) + 16);
        if (!result) {
          return result;
        }
        int v4 = *(_DWORD *)(a1 + 44);
      }
      if ((v4 & 0x4000000) != 0)
      {
        uint64_t result = sub_18856CC(*(void *)(a1 + 528) + 16);
        if (!result) {
          return result;
        }
        int v4 = *(_DWORD *)(a1 + 44);
      }
      if ((v4 & 0x8000000) != 0)
      {
        uint64_t result = sub_18856CC(*(void *)(a1 + 536) + 16);
        if (!result) {
          return result;
        }
        int v4 = *(_DWORD *)(a1 + 44);
      }
      if ((v4 & 0x10000000) != 0)
      {
        uint64_t result = sub_18856CC(*(void *)(a1 + 544) + 16);
        if (!result) {
          return result;
        }
        int v4 = *(_DWORD *)(a1 + 44);
      }
      if ((v4 & 0x20000000) != 0)
      {
        uint64_t result = sub_18856CC(*(void *)(a1 + 552) + 16);
        if (!result) {
          return result;
        }
        int v4 = *(_DWORD *)(a1 + 44);
      }
      if ((v4 & 0x40000000) != 0)
      {
        uint64_t result = sub_18856CC(*(void *)(a1 + 560) + 16);
        if (!result) {
          return result;
        }
        int v4 = *(_DWORD *)(a1 + 44);
      }
      if ((v4 & 0x80000000) == 0 || (uint64_t result = sub_18856CC(*(void *)(a1 + 568) + 16), result))
      {
        int v5 = *(_DWORD *)(a1 + 48);
        if (v5)
        {
          uint64_t result = sub_18856CC(*(void *)(a1 + 576) + 16);
          if (!result) {
            return result;
          }
          int v5 = *(_DWORD *)(a1 + 48);
        }
        if ((v5 & 2) != 0)
        {
          uint64_t result = sub_18856CC(*(void *)(a1 + 584) + 16);
          if (!result) {
            return result;
          }
          int v5 = *(_DWORD *)(a1 + 48);
        }
        if ((v5 & 4) != 0)
        {
          uint64_t result = sub_18856CC(*(void *)(a1 + 592) + 16);
          if (!result) {
            return result;
          }
          int v5 = *(_DWORD *)(a1 + 48);
        }
        if ((v5 & 8) != 0)
        {
          uint64_t result = sub_18856CC(*(void *)(a1 + 600) + 16);
          if (!result) {
            return result;
          }
          int v5 = *(_DWORD *)(a1 + 48);
        }
        if ((v5 & 0x10) != 0)
        {
          uint64_t v6 = *(void *)(a1 + 608);
          uint64_t v7 = *(unsigned int *)(v6 + 24);
          while ((int)v7 >= 1)
          {
            uint64_t v8 = v7 - 1;
            char v9 = sub_16CE508(*(void *)(*(void *)(v6 + 32) + 8 * v7));
            uint64_t result = 0;
            uint64_t v7 = v8;
            if ((v9 & 1) == 0) {
              return result;
            }
          }
          int v5 = *(_DWORD *)(a1 + 48);
        }
        if ((v5 & 0x20) != 0)
        {
          uint64_t result = sub_18856CC(*(void *)(a1 + 616) + 16);
          if (!result) {
            return result;
          }
          int v5 = *(_DWORD *)(a1 + 48);
        }
        if ((v5 & 0x80) != 0)
        {
          uint64_t result = sub_18856CC(*(void *)(a1 + 632) + 16);
          if (!result) {
            return result;
          }
          int v5 = *(_DWORD *)(a1 + 48);
        }
        if ((v5 & 0x200) != 0)
        {
          uint64_t result = sub_18856CC(*(void *)(a1 + 648) + 16);
          if (!result) {
            return result;
          }
          int v5 = *(_DWORD *)(a1 + 48);
        }
        if ((v5 & 0x400) != 0)
        {
          uint64_t result = sub_18856CC(*(void *)(a1 + 656) + 16);
          if (!result) {
            return result;
          }
          int v5 = *(_DWORD *)(a1 + 48);
        }
        if ((v5 & 0x800) != 0)
        {
          uint64_t result = sub_18856CC(*(void *)(a1 + 664) + 16);
          if (!result) {
            return result;
          }
          int v5 = *(_DWORD *)(a1 + 48);
        }
        if ((v5 & 0x1000) != 0)
        {
          uint64_t result = sub_18856CC(*(void *)(a1 + 672) + 16);
          if (!result) {
            return result;
          }
          int v5 = *(_DWORD *)(a1 + 48);
        }
        if ((v5 & 0x10000) != 0)
        {
          uint64_t result = sub_18856CC(*(void *)(a1 + 704) + 16);
          if (!result) {
            return result;
          }
          int v5 = *(_DWORD *)(a1 + 48);
        }
        if ((v5 & 0x1000000) != 0)
        {
          uint64_t result = sub_18856CC(*(void *)(a1 + 768) + 16);
          if (!result) {
            return result;
          }
          int v5 = *(_DWORD *)(a1 + 48);
        }
        if ((v5 & 0x2000000) != 0)
        {
          uint64_t result = sub_18856CC(*(void *)(a1 + 776) + 16);
          if (!result) {
            return result;
          }
          int v5 = *(_DWORD *)(a1 + 48);
        }
        if ((v5 & 0x4000000) != 0)
        {
          uint64_t result = sub_18856CC(*(void *)(a1 + 784) + 16);
          if (!result) {
            return result;
          }
          int v5 = *(_DWORD *)(a1 + 48);
        }
        if ((v5 & 0x10000000) != 0)
        {
          uint64_t result = sub_18856CC(*(void *)(a1 + 800) + 16);
          if (!result) {
            return result;
          }
          int v5 = *(_DWORD *)(a1 + 48);
        }
        if ((v5 & 0x20000000) != 0)
        {
          uint64_t result = sub_18856CC(*(void *)(a1 + 808) + 16);
          if (!result) {
            return result;
          }
          int v5 = *(_DWORD *)(a1 + 48);
        }
        if ((v5 & 0x40000000) != 0)
        {
          uint64_t result = sub_18856CC(*(void *)(a1 + 816) + 16);
          if (!result) {
            return result;
          }
          int v5 = *(_DWORD *)(a1 + 48);
        }
        if ((v5 & 0x80000000) == 0 || (uint64_t result = sub_18856CC(*(void *)(a1 + 824) + 16), result))
        {
          if ((*(unsigned char *)(a1 + 52) & 1) == 0) {
            return 1;
          }
          uint64_t result = sub_18856CC(*(void *)(a1 + 832) + 16);
          if (result) {
            return 1;
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_173F438(uint64_t a1)
{
  return sub_18856CC(a1 + 16);
}

uint64_t sub_173F440(uint64_t a1)
{
  return sub_18856CC(a1 + 16);
}

uint64_t sub_173F448(uint64_t a1)
{
  return sub_18856CC(a1 + 16);
}

uint64_t sub_173F450(uint64_t a1)
{
  return sub_18856CC(a1 + 16);
}

uint64_t sub_173F458(uint64_t a1)
{
  return sub_18856CC(a1 + 16);
}

uint64_t sub_173F460(uint64_t a1)
{
  return sub_18856CC(a1 + 16);
}

uint64_t sub_173F468(uint64_t a1)
{
  return sub_18856CC(a1 + 16);
}

uint64_t sub_173F470(uint64_t a1)
{
  return sub_18856CC(a1 + 16);
}

uint64_t sub_173F478(uint64_t a1)
{
  return sub_18856CC(a1 + 16);
}

uint64_t sub_173F480(uint64_t a1)
{
  return sub_18856CC(a1 + 16);
}

uint64_t sub_173F488(uint64_t a1)
{
  return sub_18856CC(a1 + 16);
}

uint64_t sub_173F490(uint64_t a1)
{
  return sub_18856CC(a1 + 16);
}

BOOL sub_173F498(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 24);
  do
  {
    int v3 = v2;
    if ((int)v2 < 1) {
      break;
    }
    uint64_t v4 = v2 - 1;
    char v5 = sub_16CE508(*(void *)(*(void *)(a1 + 32) + 8 * v2));
    uint64_t v2 = v4;
  }
  while ((v5 & 1) != 0);
  return v3 < 1;
}

uint64_t sub_173F4F0(uint64_t a1)
{
  return sub_18856CC(a1 + 16);
}

uint64_t sub_173F4F8(uint64_t a1)
{
  return sub_18856CC(a1 + 16);
}

uint64_t sub_173F500(uint64_t a1)
{
  return sub_18856CC(a1 + 16);
}

uint64_t sub_173F508(uint64_t a1)
{
  return sub_18856CC(a1 + 16);
}

uint64_t sub_173F510(uint64_t a1)
{
  return sub_18856CC(a1 + 16);
}

uint64_t sub_173F518(uint64_t a1)
{
  return sub_18856CC(a1 + 16);
}

uint64_t sub_173F520(uint64_t a1)
{
  return sub_18856CC(a1 + 16);
}

uint64_t sub_173F528(uint64_t a1)
{
  return sub_18856CC(a1 + 16);
}

uint64_t sub_173F530(uint64_t a1)
{
  return sub_18856CC(a1 + 16);
}

uint64_t sub_173F538(uint64_t a1)
{
  return sub_18856CC(a1 + 16);
}

uint64_t sub_173F540(uint64_t a1)
{
  return sub_18856CC(a1 + 16);
}

uint64_t sub_173F548(uint64_t a1)
{
  return sub_18856CC(a1 + 16);
}

uint64_t sub_173F550(uint64_t a1)
{
  return sub_18856CC(a1 + 16);
}

void *sub_173F558@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.ComponentFilter");
}

uint64_t sub_173F568(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  *(void *)(a1 + 8) = v5;
  *(void *)a1 = off_24D6598;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = a2;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = a2;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = a2;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  *(_OWORD *)(a1 + 164) = 0u;
  return a1;
}

void sub_173F5F4(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_173F628(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = a1 + 16;
  *(void *)a1 = off_24D6598;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  uint64_t v6 = (uint64_t *)(a1 + 48);
  *(_DWORD *)(a1 + 68) = 0;
  *(void *)(a1 + 52) = 0;
  *(void *)(a1 + 60) = 0;
  *(void *)(a1 + 44) = 0;
  int v7 = *(_DWORD *)(a2 + 56);
  if (v7)
  {
    uint64_t v8 = *(void *)(a2 + 64);
    char v9 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_1872264(v6, v9, (uint64_t *)(v8 + 8), v7, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v10 = *(_DWORD *)(a1 + 56) + v7;
    *(_DWORD *)(a1 + 56) = v10;
    uint64_t v11 = *(int **)(a1 + 64);
    if (*v11 < v10) {
      *uint64_t v11 = v10;
    }
  }
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0;
  int v12 = *(_DWORD *)(a2 + 80);
  if (v12)
  {
    uint64_t v13 = *(void *)(a2 + 88);
    uint64_t v14 = (std::string **)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_188FB98(a1 + 72, v14, (const std::string **)(v13 + 8), v12, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v15 = *(_DWORD *)(a1 + 80) + v12;
    *(_DWORD *)(a1 + 80) = v15;
    uint64_t v16 = *(int **)(a1 + 88);
    if (*v16 < v15) {
      int *v16 = v15;
    }
  }
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 104) = 0;
  *(void *)(a1 + 112) = 0;
  int v17 = *(_DWORD *)(a2 + 104);
  if (v17)
  {
    uint64_t v18 = *(void *)(a2 + 112);
    uint64_t v19 = (uint64_t *)sub_188CCE4(a1 + 96, *(_DWORD *)(a2 + 104));
    sub_18722F0((uint64_t *)(a1 + 96), v19, (uint64_t *)(v18 + 8), v17, **(_DWORD **)(a1 + 112) - *(_DWORD *)(a1 + 104));
    int v20 = *(_DWORD *)(a1 + 104) + v17;
    *(_DWORD *)(a1 + 104) = v20;
    uint64_t v21 = *(int **)(a1 + 112);
    if (*v21 < v20) {
      *uint64_t v21 = v20;
    }
  }
  uint64_t v22 = *(void *)(a2 + 8);
  if (v22) {
    sub_188B4F8(v4, (v22 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v5, a2 + 16);
  int v23 = *(_DWORD *)(a2 + 40);
  if (v23) {
    operator new();
  }
  *(void *)(a1 + 120) = 0;
  if ((v23 & 2) != 0) {
    operator new();
  }
  *(void *)(a1 + 128) = 0;
  long long v24 = *(_OWORD *)(a2 + 136);
  long long v25 = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 164) = *(_OWORD *)(a2 + 164);
  *(_OWORD *)(a1 + 152) = v25;
  *(_OWORD *)(a1 + 136) = v24;
  return a1;
}

void sub_173F898()
{
}

uint64_t sub_173F94C(uint64_t a1)
{
  int v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  if ((uint64_t (***)())a1 != &off_25475D8)
  {
    uint64_t v5 = *(void *)(a1 + 120);
    if (v5)
    {
      sub_171A51C(v5);
      operator delete();
    }
    uint64_t v6 = *(void *)(a1 + 128);
    if (v6)
    {
      sub_171AF1C(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  sub_18704BC((void *)(a1 + 96));
  sub_1889DE8((void *)(a1 + 72));
  sub_187043C((void *)(a1 + 48));
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_173FA44(uint64_t a1)
{
  sub_173F94C(a1);

  operator delete();
}

uint64_t sub_173FA7C(uint64_t a1)
{
  sub_18843A4((unsigned char *)(a1 + 16));
  uint64_t v2 = *(unsigned int *)(a1 + 56);
  if ((int)v2 >= 1)
  {
    int v3 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v4 = *v3++;
      sub_171FD8C(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(a1 + 56) = 0;
  }
  uint64_t result = sub_188CC00(a1 + 72);
  uint64_t v6 = *(unsigned int *)(a1 + 104);
  if ((int)v6 >= 1)
  {
    int v7 = (uint64_t *)(*(void *)(a1 + 112) + 8);
    do
    {
      uint64_t v8 = *v7++;
      uint64_t result = sub_16FBD64(v8);
      --v6;
    }
    while (v6);
    *(_DWORD *)(a1 + 104) = 0;
  }
  int v9 = *(_DWORD *)(a1 + 40);
  if ((v9 & 3) != 0)
  {
    if (v9) {
      uint64_t result = sub_16FBD64(*(void *)(a1 + 120));
    }
    if ((v9 & 2) != 0) {
      uint64_t result = sub_171B00C(*(void *)(a1 + 128));
    }
  }
  if ((v9 & 0xFC) != 0)
  {
    *(void *)(a1 + 136) = 0;
    *(void *)(a1 + 144) = 0;
    *(_DWORD *)(a1 + 160) = 0;
    *(void *)(a1 + 152) = 0;
  }
  if ((v9 & 0xF00) != 0)
  {
    *(void *)(a1 + 172) = 0;
    *(void *)(a1 + 164) = 0;
  }
  char v11 = *(unsigned char *)(a1 + 8);
  uint64_t v10 = a1 + 8;
  *(_DWORD *)(v10 + 32) = 0;
  if (v11)
  {
    return sub_188B4AC((uint64_t *)v10);
  }
  return result;
}

uint64_t sub_173FB7C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v83 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v83, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  uint64_t v8 = (uint64_t **)(a1 + 72);
  while (2)
  {
    int v9 = (unsigned __int8 *)(*(void *)v83 + 1);
    unsigned int v10 = **(unsigned char **)v83;
    if ((char)**(unsigned char **)v83 < 0)
    {
      unsigned int v11 = v10 + (*v9 << 7);
      unsigned int v10 = v11 - 128;
      if ((char)*v9 < 0)
      {
        int v9 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v83, v11 - 128);
        unsigned int v10 = v12;
      }
      else
      {
        int v9 = (unsigned __int8 *)(*(void *)v83 + 2);
      }
    }
    *(void *)uint64_t v83 = v9;
    switch(v10 >> 3)
    {
      case 1u:
        if (v10 != 8) {
          goto LABEL_108;
        }
        uint64_t v13 = (char *)(v9 + 1);
        unint64_t v14 = *v9;
        if (((char)*v9 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v15 = *v13;
        int v16 = v14 + (v15 << 7);
        unint64_t v14 = (v16 - 128);
        if (v15 < 0)
        {
          *(void *)uint64_t v83 = sub_188C138((uint64_t)v9, (v16 - 128));
          if (!*(void *)v83) {
            goto LABEL_158;
          }
          unint64_t v14 = v67;
        }
        else
        {
          uint64_t v13 = (char *)(v9 + 2);
LABEL_13:
          *(void *)uint64_t v83 = v13;
        }
        if (sub_16B59C0())
        {
          *(_DWORD *)(a1 + 40) |= 4u;
          *(_DWORD *)(a1 + 136) = v14;
          goto LABEL_118;
        }
        if (*v7) {
          unint64_t v81 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          unint64_t v81 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v82 = 1;
        goto LABEL_150;
      case 2u:
        if (v10 != 16) {
          goto LABEL_108;
        }
        int v17 = (char *)(v9 + 1);
        unint64_t v14 = *v9;
        if (((char)*v9 & 0x80000000) == 0) {
          goto LABEL_20;
        }
        int v18 = *v17;
        int v19 = v14 + (v18 << 7);
        unint64_t v14 = (v19 - 128);
        if (v18 < 0)
        {
          *(void *)uint64_t v83 = sub_188C138((uint64_t)v9, (v19 - 128));
          if (!*(void *)v83) {
            goto LABEL_158;
          }
          unint64_t v14 = v68;
        }
        else
        {
          int v17 = (char *)(v9 + 2);
LABEL_20:
          *(void *)uint64_t v83 = v17;
        }
        if (sub_13E78E4(v14))
        {
          *(_DWORD *)(a1 + 40) |= 8u;
          *(_DWORD *)(a1 + 140) = v14;
          goto LABEL_118;
        }
        if (*v7) {
          unint64_t v81 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          unint64_t v81 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v82 = 2;
        goto LABEL_150;
      case 3u:
        if (v10 != 25) {
          goto LABEL_108;
        }
        v5 |= 0x10u;
        *(void *)(a1 + 144) = *(void *)v9;
        *(void *)uint64_t v83 = v9 + 8;
        goto LABEL_118;
      case 4u:
        if (v10 != 32) {
          goto LABEL_108;
        }
        v5 |= 0x20u;
        int v20 = (char *)(v9 + 1);
        int v21 = *v9;
        if (((char)*v9 & 0x80000000) == 0) {
          goto LABEL_29;
        }
        int v22 = *v20;
        int v21 = v21 + (v22 << 7) - 128;
        if (v22 < 0)
        {
          uint64_t v69 = sub_188C0D0((uint64_t)v9, v21);
          *(void *)uint64_t v83 = v69;
          *(_DWORD *)(a1 + 152) = v70;
          if (!v69) {
            goto LABEL_158;
          }
        }
        else
        {
          int v20 = (char *)(v9 + 2);
LABEL_29:
          *(void *)uint64_t v83 = v20;
          *(_DWORD *)(a1 + 152) = v21;
        }
        goto LABEL_118;
      case 5u:
        if (v10 != 40) {
          goto LABEL_108;
        }
        v5 |= 0x40u;
        long long v24 = (char *)(v9 + 1);
        LODWORD(v23) = *v9;
        if ((v23 & 0x80) == 0) {
          goto LABEL_34;
        }
        int v25 = *v24;
        uint64_t v23 = v23 + (v25 << 7) - 128;
        if (v25 < 0)
        {
          uint64_t v71 = sub_188C138((uint64_t)v9, v23);
          *(void *)uint64_t v83 = v71;
          *(_DWORD *)(a1 + 156) = v72;
          if (!v71) {
            goto LABEL_158;
          }
        }
        else
        {
          long long v24 = (char *)(v9 + 2);
LABEL_34:
          *(void *)uint64_t v83 = v24;
          *(_DWORD *)(a1 + 156) = v23;
        }
        goto LABEL_118;
      case 6u:
        if (v10 != 48) {
          goto LABEL_108;
        }
        v5 |= 0x80u;
        uint64_t v27 = (char *)(v9 + 1);
        LODWORD(v26) = *v9;
        if ((v26 & 0x80) == 0) {
          goto LABEL_39;
        }
        int v28 = *v27;
        uint64_t v26 = v26 + (v28 << 7) - 128;
        if (v28 < 0)
        {
          uint64_t v73 = sub_188C138((uint64_t)v9, v26);
          *(void *)uint64_t v83 = v73;
          *(_DWORD *)(a1 + 160) = v74;
          if (!v73) {
            goto LABEL_158;
          }
        }
        else
        {
          uint64_t v27 = (char *)(v9 + 2);
LABEL_39:
          *(void *)uint64_t v83 = v27;
          *(_DWORD *)(a1 + 160) = v26;
        }
        goto LABEL_118;
      case 7u:
        if (v10 != 58) {
          goto LABEL_108;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        uint64_t v29 = *(void **)(a1 + 120);
        if (!v29)
        {
          uint64_t v30 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v30 = (void *)*v30;
          }
          uint64_t v29 = sub_178B1A8((uint64_t)v30);
          *(void *)(a1 + 120) = v29;
          int v9 = *(unsigned __int8 **)v83;
        }
        uint64_t v31 = sub_16FC588(a3, (uint64_t)v29, v9);
        goto LABEL_117;
      case 8u:
        if (v10 != 66) {
          goto LABEL_108;
        }
        uint64_t v32 = (char *)(v9 - 1);
        while (1)
        {
          uint64_t v33 = (unsigned __int8 *)(v32 + 1);
          *(void *)uint64_t v83 = v32 + 1;
          uint64_t v34 = *(_DWORD **)(a1 + 64);
          if (v34 && (uint64_t v35 = *(int *)(a1 + 56), (int)v35 < *v34))
          {
            *(_DWORD *)(a1 + 56) = v35 + 1;
            uint64_t v36 = *(void *)&v34[2 * v35 + 2];
          }
          else
          {
            uint64_t v37 = sub_178B3A0(*(void *)(a1 + 48));
            uint64_t v36 = sub_188CDC8(a1 + 48, v37);
            uint64_t v33 = *(unsigned __int8 **)v83;
          }
          uint64_t v32 = sub_1740448(a3, v36, v33);
          *(void *)uint64_t v83 = v32;
          if (!v32) {
            goto LABEL_158;
          }
          if (*(void *)a3 <= (unint64_t)v32 || *v32 != 66) {
            goto LABEL_118;
          }
        }
      case 9u:
        if (v10 != 74) {
          goto LABEL_108;
        }
        uint64_t v38 = (const std::string::value_type *)(v9 - 1);
        while (1)
        {
          uint64_t v39 = (char *)(v38 + 1);
          *(void *)uint64_t v83 = v38 + 1;
          uint64_t v40 = *(_DWORD **)(a1 + 88);
          if (v40 && (uint64_t v41 = *(int *)(a1 + 80), (int)v41 < *v40))
          {
            *(_DWORD *)(a1 + 80) = v41 + 1;
            uint64_t v42 = *(std::string **)&v40[2 * v41 + 2];
          }
          else
          {
            if (!*v8) {
              operator new();
            }
            *uint64_t v44 = v43;
            v44[1] = sub_3A6EDC;
            void *v43 = 0;
            v43[1] = 0;
            v43[2] = 0;
            uint64_t v42 = (std::string *)sub_188CDC8(a1 + 72, (uint64_t)v43);
            uint64_t v39 = *(char **)v83;
          }
          uint64_t v38 = sub_188C244(v42, v39, (uint64_t)a3);
          *(void *)uint64_t v83 = v38;
          if (!v38) {
            goto LABEL_158;
          }
          if (*(void *)a3 <= (unint64_t)v38 || *v38 != 74) {
            goto LABEL_118;
          }
        }
      case 0xAu:
        if (v10 != 80) {
          goto LABEL_108;
        }
        v5 |= 0x100u;
        unint64_t v45 = (char *)(v9 + 1);
        int v46 = *v9;
        if (((char)*v9 & 0x80000000) == 0) {
          goto LABEL_72;
        }
        int v47 = *v45;
        int v46 = v46 + (v47 << 7) - 128;
        if (v47 < 0)
        {
          uint64_t v75 = sub_188C0D0((uint64_t)v9, v46);
          *(void *)uint64_t v83 = v75;
          *(_DWORD *)(a1 + 164) = v76;
          if (!v75) {
            goto LABEL_158;
          }
        }
        else
        {
          unint64_t v45 = (char *)(v9 + 2);
LABEL_72:
          *(void *)uint64_t v83 = v45;
          *(_DWORD *)(a1 + 164) = v46;
        }
        goto LABEL_118;
      case 0xBu:
        if (v10 != 90) {
          goto LABEL_108;
        }
        *(_DWORD *)(a1 + 40) |= 2u;
        uint64_t v48 = *(void *)(a1 + 128);
        if (!v48)
        {
          uint64_t v49 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v49 = (void *)*v49;
          }
          uint64_t v48 = sub_178B204((uint64_t)v49);
          *(void *)(a1 + 128) = v48;
          int v9 = *(unsigned __int8 **)v83;
        }
        uint64_t v31 = sub_17404D8(a3, v48, v9);
        goto LABEL_117;
      case 0xCu:
        if (v10 != 96) {
          goto LABEL_108;
        }
        uint64_t v50 = (char *)(v9 + 1);
        unint64_t v14 = *v9;
        if (((char)*v9 & 0x80000000) == 0) {
          goto LABEL_83;
        }
        int v51 = *v50;
        int v52 = v14 + (v51 << 7);
        unint64_t v14 = (v52 - 128);
        if (v51 < 0)
        {
          *(void *)uint64_t v83 = sub_188C138((uint64_t)v9, (v52 - 128));
          if (!*(void *)v83) {
            goto LABEL_158;
          }
          unint64_t v14 = v77;
        }
        else
        {
          uint64_t v50 = (char *)(v9 + 2);
LABEL_83:
          *(void *)uint64_t v83 = v50;
        }
        if (v14 <= 2)
        {
          *(_DWORD *)(a1 + 40) |= 0x200u;
          *(_DWORD *)(a1 + 168) = v14;
          goto LABEL_118;
        }
        if (*v7) {
          unint64_t v81 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          unint64_t v81 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v82 = 12;
        goto LABEL_150;
      case 0xDu:
        if (v10 != 104) {
          goto LABEL_108;
        }
        v5 |= 0x400u;
        uint64_t v54 = (char *)(v9 + 1);
        LODWORD(v53) = *v9;
        if ((v53 & 0x80) == 0) {
          goto LABEL_90;
        }
        int v55 = *v54;
        uint64_t v53 = v53 + (v55 << 7) - 128;
        if (v55 < 0)
        {
          uint64_t v78 = sub_188C138((uint64_t)v9, v53);
          *(void *)uint64_t v83 = v78;
          *(_DWORD *)(a1 + 172) = v79;
          if (!v78) {
            goto LABEL_158;
          }
        }
        else
        {
          uint64_t v54 = (char *)(v9 + 2);
LABEL_90:
          *(void *)uint64_t v83 = v54;
          *(_DWORD *)(a1 + 172) = v53;
        }
        goto LABEL_118;
      case 0xEu:
        if (v10 != 114) {
          goto LABEL_108;
        }
        uint64_t v56 = v9 - 1;
        while (1)
        {
          uint64_t v57 = v56 + 1;
          *(void *)uint64_t v83 = v56 + 1;
          unint64_t v58 = *(_DWORD **)(a1 + 112);
          if (v58 && (uint64_t v59 = *(int *)(a1 + 104), (int)v59 < *v58))
          {
            *(_DWORD *)(a1 + 104) = v59 + 1;
            uint64_t v60 = *(void *)&v58[2 * v59 + 2];
          }
          else
          {
            uint64_t v61 = sub_178B1A8(*(void *)(a1 + 96));
            uint64_t v60 = sub_188CDC8(a1 + 96, (uint64_t)v61);
            uint64_t v57 = *(unsigned __int8 **)v83;
          }
          uint64_t v56 = (unsigned __int8 *)sub_16FC588(a3, v60, v57);
          *(void *)uint64_t v83 = v56;
          if (!v56) {
            goto LABEL_158;
          }
          if (*(void *)a3 <= (unint64_t)v56 || *v56 != 114) {
            goto LABEL_118;
          }
        }
      case 0xFu:
        if (v10 != 120) {
          goto LABEL_108;
        }
        uint64_t v62 = (char *)(v9 + 1);
        unint64_t v14 = *v9;
        if (((char)*v9 & 0x80000000) == 0) {
          goto LABEL_105;
        }
        int v63 = *v62;
        int v64 = v14 + (v63 << 7);
        unint64_t v14 = (v64 - 128);
        if (v63 < 0)
        {
          *(void *)uint64_t v83 = sub_188C138((uint64_t)v9, (v64 - 128));
          if (!*(void *)v83) {
            goto LABEL_158;
          }
          unint64_t v14 = v80;
        }
        else
        {
          uint64_t v62 = (char *)(v9 + 2);
LABEL_105:
          *(void *)uint64_t v83 = v62;
        }
        if (sub_15B0788(v14))
        {
          *(_DWORD *)(a1 + 40) |= 0x800u;
          *(_DWORD *)(a1 + 176) = v14;
        }
        else
        {
          if (*v7) {
            unint64_t v81 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            unint64_t v81 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          int v82 = 15;
LABEL_150:
          sub_188C020(v82, v14, v81);
        }
        goto LABEL_118;
      default:
LABEL_108:
        if (v10) {
          BOOL v65 = (v10 & 7) == 4;
        }
        else {
          BOOL v65 = 1;
        }
        if (!v65)
        {
          if ((v10 - 8000) >> 5 > 0x112)
          {
            if (*v7)
            {
              uint64_t v66 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              uint64_t v66 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              int v9 = *(unsigned __int8 **)v83;
            }
            uint64_t v31 = (uint64_t)sub_1885AC0(v10, v66, (char *)v9, a3);
          }
          else
          {
            uint64_t v31 = (uint64_t)sub_18859DC((uint64_t **)(a1 + 16), v10, (char *)v9, (uint64_t)&off_25475D8, (uint64_t *)(a1 + 8), a3);
          }
LABEL_117:
          *(void *)uint64_t v83 = v31;
          if (!v31) {
            goto LABEL_158;
          }
LABEL_118:
          if (sub_11947B8((uint64_t)a3, (char **)v83, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v9) {
          a3[10].i32[0] = v10 - 1;
        }
        else {
LABEL_158:
        }
          *(void *)uint64_t v83 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 40) |= v5;
        return *(void *)v83;
    }
  }
}

char *sub_1740448(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1721B08(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_17404D8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_171B08C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1740568(uint64_t a1, char *a2, unint64_t *a3)
{
  uint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unint64_t v7 = *(int *)(a1 + 136);
    *uint64_t v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 140);
    *uint64_t v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v13 = *(void *)(a1 + 144);
    *uint64_t v4 = 25;
    *(void *)(v4 + 1) = v13;
    v4 += 9;
  }
  if ((v6 & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v14 = *(_DWORD *)(a1 + 152);
    *uint64_t v4 = 32;
    v4[1] = v14;
    if (v14 > 0x7F)
    {
      v4[1] = v14 | 0x80;
      unsigned int v15 = v14 >> 7;
      v4[2] = v14 >> 7;
      v4 += 3;
      if (v14 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v16 = v15 >> 14;
          v15 >>= 7;
          *v4++ = v15;
        }
        while (v16);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x40) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v17 = *(int *)(a1 + 156);
    *uint64_t v4 = 40;
    v4[1] = v17;
    if (v17 > 0x7F)
    {
      v4[1] = v17 | 0x80;
      unint64_t v18 = v17 >> 7;
      v4[2] = v17 >> 7;
      v4 += 3;
      if (v17 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v19 = v18 >> 14;
          v18 >>= 7;
          *v4++ = v18;
        }
        while (v19);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x80) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v20 = *(int *)(a1 + 160);
    *uint64_t v4 = 48;
    v4[1] = v20;
    if (v20 > 0x7F)
    {
      v4[1] = v20 | 0x80;
      unint64_t v21 = v20 >> 7;
      v4[2] = v20 >> 7;
      v4 += 3;
      if (v20 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v22 = v21 >> 14;
          v21 >>= 7;
          *v4++ = v21;
        }
        while (v22);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v23 = *(void *)(a1 + 120);
    *uint64_t v4 = 58;
    unsigned int v24 = *(_DWORD *)(v23 + 44);
    v4[1] = v24;
    if (v24 > 0x7F) {
      int v25 = sub_188A9CC(v24, v4 + 1);
    }
    else {
      int v25 = v4 + 2;
    }
    uint64_t v4 = sub_171A9B4(v23, v25, a3);
  }
  int v26 = *(_DWORD *)(a1 + 56);
  if (v26)
  {
    for (int i = 0; i != v26; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v28 = *(void *)(*(void *)(a1 + 64) + 8 * i + 8);
      *uint64_t v4 = 66;
      unsigned int v29 = *(_DWORD *)(v28 + 56);
      v4[1] = v29;
      if (v29 > 0x7F) {
        uint64_t v30 = sub_188A9CC(v29, v4 + 1);
      }
      else {
        uint64_t v30 = v4 + 2;
      }
      uint64_t v4 = sub_1726824(v28, v30, a3);
    }
  }
  uint64_t v31 = *(unsigned int *)(a1 + 80);
  if ((int)v31 >= 1)
  {
    uint64_t v32 = 0;
    uint64_t v33 = 8 * v31;
    do
    {
      uint64_t v34 = *(void **)(*(void *)(a1 + 88) + v32 + 8);
      if (*((char *)v34 + 23) < 0)
      {
        int64_t v35 = v34[1];
        if (v35 > 127) {
          goto LABEL_66;
        }
      }
      else
      {
        int64_t v35 = *((unsigned __int8 *)v34 + 23);
      }
      if ((uint64_t)(*a3 - (void)v4 + 14) >= v35)
      {
        *uint64_t v4 = 74;
        v4[1] = v35;
        if (*((char *)v34 + 23) < 0) {
          uint64_t v34 = (void *)*v34;
        }
        uint64_t v36 = v4 + 2;
        memcpy(v36, v34, v35);
        uint64_t v4 = &v36[v35];
        goto LABEL_64;
      }
LABEL_66:
      uint64_t v4 = (char *)sub_188A868(a3, 9, (uint64_t)v34, v4);
LABEL_64:
      v32 += 8;
    }
    while (v33 != v32);
  }
  if ((v6 & 0x100) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v37 = *(_DWORD *)(a1 + 164);
    *uint64_t v4 = 80;
    v4[1] = v37;
    if (v37 > 0x7F)
    {
      v4[1] = v37 | 0x80;
      unsigned int v38 = v37 >> 7;
      v4[2] = v37 >> 7;
      v4 += 3;
      if (v37 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v39 = v38 >> 14;
          v38 >>= 7;
          *v4++ = v38;
        }
        while (v39);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v40 = *(void *)(a1 + 128);
    *uint64_t v4 = 90;
    unsigned int v41 = *(_DWORD *)(v40 + 20);
    v4[1] = v41;
    if (v41 > 0x7F) {
      uint64_t v42 = sub_188A9CC(v41, v4 + 1);
    }
    else {
      uint64_t v42 = v4 + 2;
    }
    uint64_t v4 = sub_171B2AC(v40, (unint64_t)v42, a3);
  }
  if ((v6 & 0x200) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v43 = *(int *)(a1 + 168);
    *uint64_t v4 = 96;
    v4[1] = v43;
    if (v43 > 0x7F)
    {
      v4[1] = v43 | 0x80;
      unint64_t v44 = v43 >> 7;
      v4[2] = v43 >> 7;
      v4 += 3;
      if (v43 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v45 = v44 >> 14;
          v44 >>= 7;
          *v4++ = v44;
        }
        while (v45);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x400) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v46 = *(int *)(a1 + 172);
    *uint64_t v4 = 104;
    v4[1] = v46;
    if (v46 > 0x7F)
    {
      v4[1] = v46 | 0x80;
      unint64_t v47 = v46 >> 7;
      v4[2] = v46 >> 7;
      v4 += 3;
      if (v46 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v48 = v47 >> 14;
          v47 >>= 7;
          *v4++ = v47;
        }
        while (v48);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v49 = *(_DWORD *)(a1 + 104);
  if (v49)
  {
    for (int j = 0; j != v49; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v51 = *(void *)(*(void *)(a1 + 112) + 8 * j + 8);
      *uint64_t v4 = 114;
      unsigned int v52 = *(_DWORD *)(v51 + 44);
      v4[1] = v52;
      if (v52 > 0x7F) {
        uint64_t v53 = sub_188A9CC(v52, v4 + 1);
      }
      else {
        uint64_t v53 = v4 + 2;
      }
      uint64_t v4 = sub_171A9B4(v51, v53, a3);
    }
  }
  if ((v6 & 0x800) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v54 = *(int *)(a1 + 176);
    *uint64_t v4 = 120;
    v4[1] = v54;
    if (v54 > 0x7F)
    {
      v4[1] = v54 | 0x80;
      unint64_t v55 = v54 >> 7;
      v4[2] = v54 >> 7;
      v4 += 3;
      if (v54 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v56 = v55 >> 14;
          v55 >>= 7;
          *v4++ = v55;
        }
        while (v56);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (*(_WORD *)(a1 + 26)) {
    uint64_t v4 = sub_1886844(a1 + 16, 1000, 2100, v4, a3);
  }
  uint64_t v57 = *(void *)(a1 + 8);
  if ((v57 & 1) == 0) {
    return v4;
  }
  unint64_t v59 = v57 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v59 + 31) < 0)
  {
    uint64_t v60 = *(void **)(v59 + 8);
    uint64_t v61 = *(void *)(v59 + 16);
  }
  else
  {
    uint64_t v60 = (void *)(v59 + 8);
    LODWORD(v61) = *(unsigned __int8 *)(v59 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v61)
  {
    uint64_t v62 = (int)v61;
    memcpy(v4, v60, (int)v61);
    v4 += v62;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v60, v61, v4);
}

uint64_t sub_1740D5C(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(int *)(a1 + 56);
  uint64_t v4 = v2 + v3;
  uint64_t v5 = *(void *)(a1 + 64);
  if (v5) {
    int v6 = (uint64_t *)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = sub_17291AC(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  uint64_t v10 = *(unsigned int *)(a1 + 80);
  uint64_t v11 = v4 + v10;
  if ((int)v10 >= 1)
  {
    unint64_t v12 = (uint64_t *)(*(void *)(a1 + 88) + 8);
    do
    {
      uint64_t v13 = *v12++;
      uint64_t v14 = *(unsigned __int8 *)(v13 + 23);
      uint64_t v15 = *(void *)(v13 + 8);
      if ((v14 & 0x80u) == 0) {
        uint64_t v15 = v14;
      }
      v11 += v15 + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6);
      --v10;
    }
    while (v10);
  }
  uint64_t v16 = *(int *)(a1 + 104);
  uint64_t v17 = v11 + v16;
  uint64_t v18 = *(void *)(a1 + 112);
  if (v18) {
    unint64_t v19 = (uint64_t *)(v18 + 8);
  }
  else {
    unint64_t v19 = 0;
  }
  if (v16)
  {
    uint64_t v20 = 8 * v16;
    do
    {
      uint64_t v21 = *v19++;
      uint64_t v22 = sub_171ABD0(v21);
      v17 += v22 + ((9 * (__clz(v22 | 1) ^ 0x1F) + 73) >> 6);
      v20 -= 8;
    }
    while (v20);
  }
  int v23 = *(_DWORD *)(a1 + 40);
  if (!(_BYTE)v23) {
    goto LABEL_36;
  }
  if (v23)
  {
    uint64_t v35 = sub_171ABD0(*(void *)(a1 + 120));
    v17 += v35 + ((9 * (__clz(v35 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v23 & 2) == 0)
    {
LABEL_21:
      if ((v23 & 4) == 0) {
        goto LABEL_22;
      }
LABEL_49:
      int v37 = *(_DWORD *)(a1 + 136);
      uint64_t v38 = (9 * (__clz(v37 | 1) ^ 0x1F) + 73) >> 6;
      if (v37 >= 0) {
        uint64_t v39 = v38;
      }
      else {
        uint64_t v39 = 10;
      }
      v17 += v39 + 1;
      if ((v23 & 8) == 0) {
        goto LABEL_27;
      }
      goto LABEL_23;
    }
  }
  else if ((v23 & 2) == 0)
  {
    goto LABEL_21;
  }
  uint64_t v36 = sub_171B414(*(void *)(a1 + 128));
  v17 += v36 + ((9 * (__clz(v36 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v23 & 4) != 0) {
    goto LABEL_49;
  }
LABEL_22:
  if ((v23 & 8) != 0)
  {
LABEL_23:
    int v24 = *(_DWORD *)(a1 + 140);
    uint64_t v25 = (9 * (__clz(v24 | 1) ^ 0x1F) + 73) >> 6;
    if (v24 >= 0) {
      uint64_t v26 = v25;
    }
    else {
      uint64_t v26 = 10;
    }
    v17 += v26 + 1;
  }
LABEL_27:
  if ((v23 & 0x10) != 0) {
    v17 += 9;
  }
  if ((v23 & 0x20) != 0)
  {
    v17 += ((9 * (__clz(*(_DWORD *)(a1 + 152) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v23 & 0x40) == 0)
    {
LABEL_31:
      if ((v23 & 0x80) == 0) {
        goto LABEL_36;
      }
      goto LABEL_32;
    }
  }
  else if ((v23 & 0x40) == 0)
  {
    goto LABEL_31;
  }
  int v40 = *(_DWORD *)(a1 + 156);
  uint64_t v41 = ((9 * (__clz(v40 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if (v40 >= 0) {
    uint64_t v42 = v41;
  }
  else {
    uint64_t v42 = 11;
  }
  v17 += v42;
  if ((v23 & 0x80) != 0)
  {
LABEL_32:
    int v27 = *(_DWORD *)(a1 + 160);
    uint64_t v28 = ((9 * (__clz(v27 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if (v27 >= 0) {
      uint64_t v29 = v28;
    }
    else {
      uint64_t v29 = 11;
    }
    v17 += v29;
  }
LABEL_36:
  if ((v23 & 0xF00) == 0) {
    goto LABEL_45;
  }
  if ((v23 & 0x100) != 0)
  {
    v17 += ((9 * (__clz(*(_DWORD *)(a1 + 164) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v23 & 0x200) == 0)
    {
LABEL_39:
      if ((v23 & 0x400) == 0) {
        goto LABEL_40;
      }
      goto LABEL_65;
    }
  }
  else if ((v23 & 0x200) == 0)
  {
    goto LABEL_39;
  }
  int v43 = *(_DWORD *)(a1 + 168);
  uint64_t v44 = ((9 * (__clz(v43 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if (v43 >= 0) {
    uint64_t v45 = v44;
  }
  else {
    uint64_t v45 = 11;
  }
  v17 += v45;
  if ((v23 & 0x400) == 0)
  {
LABEL_40:
    if ((v23 & 0x800) == 0) {
      goto LABEL_45;
    }
    goto LABEL_41;
  }
LABEL_65:
  int v46 = *(_DWORD *)(a1 + 172);
  uint64_t v47 = ((9 * (__clz(v46 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if (v46 >= 0) {
    uint64_t v48 = v47;
  }
  else {
    uint64_t v48 = 11;
  }
  v17 += v48;
  if ((v23 & 0x800) != 0)
  {
LABEL_41:
    int v30 = *(_DWORD *)(a1 + 176);
    uint64_t v31 = ((9 * (__clz(v30 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if (v30 >= 0) {
      uint64_t v32 = v31;
    }
    else {
      uint64_t v32 = 11;
    }
    v17 += v32;
  }
LABEL_45:
  uint64_t v33 = *(void *)(a1 + 8);
  if (v33)
  {
    unint64_t v49 = v33 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v49 + 31) < 0) {
      uint64_t v50 = *(void *)(v49 + 16);
    }
    else {
      uint64_t v50 = *(unsigned __int8 *)(v49 + 31);
    }
    v17 += v50;
  }
  *(_DWORD *)(a1 + 44) = v17;
  return v17;
}

void sub_1741120(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 56);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    int v6 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_1872264((uint64_t *)(a1 + 48), v6, v5, v4, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v7 = *(_DWORD *)(a1 + 56) + v4;
    *(_DWORD *)(a1 + 56) = v7;
    uint64_t v8 = *(int **)(a1 + 64);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 80);
  if (v9)
  {
    uint64_t v10 = (const std::string **)(*(void *)(a2 + 88) + 8);
    uint64_t v11 = (std::string **)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_188FB98(a1 + 72, v11, v10, v9, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v12 = *(_DWORD *)(a1 + 80) + v9;
    *(_DWORD *)(a1 + 80) = v12;
    uint64_t v13 = *(int **)(a1 + 88);
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 104);
  if (v14)
  {
    uint64_t v15 = (uint64_t *)(*(void *)(a2 + 112) + 8);
    uint64_t v16 = (uint64_t *)sub_188CCE4(a1 + 96, *(_DWORD *)(a2 + 104));
    sub_18722F0((uint64_t *)(a1 + 96), v16, v15, v14, **(_DWORD **)(a1 + 112) - *(_DWORD *)(a1 + 104));
    int v17 = *(_DWORD *)(a1 + 104) + v14;
    *(_DWORD *)(a1 + 104) = v17;
    uint64_t v18 = *(int **)(a1 + 112);
    if (*v18 < v17) {
      *uint64_t v18 = v17;
    }
  }
  int v19 = *(_DWORD *)(a2 + 40);
  if ((_BYTE)v19)
  {
    if (v19)
    {
      *(_DWORD *)(a1 + 40) |= 1u;
      uint64_t v21 = *(void **)(a1 + 120);
      if (!v21)
      {
        uint64_t v22 = *(void *)(a1 + 8);
        int v23 = (void *)(v22 & 0xFFFFFFFFFFFFFFFCLL);
        if (v22) {
          int v23 = (void *)*v23;
        }
        uint64_t v21 = sub_178B1A8((uint64_t)v23);
        *(void *)(a1 + 120) = v21;
      }
      if (*(void *)(a2 + 120)) {
        int v24 = *(uint64_t (****)())(a2 + 120);
      }
      else {
        int v24 = &off_2546DD0;
      }
      sub_16FCFC4((uint64_t)v21, (uint64_t)v24);
      if ((v19 & 2) == 0)
      {
LABEL_13:
        if ((v19 & 4) == 0) {
          goto LABEL_14;
        }
        goto LABEL_48;
      }
    }
    else if ((v19 & 2) == 0)
    {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 40) |= 2u;
    uint64_t v25 = *(std::string **)(a1 + 128);
    if (!v25)
    {
      uint64_t v26 = *(void *)(a1 + 8);
      int v27 = (void *)(v26 & 0xFFFFFFFFFFFFFFFCLL);
      if (v26) {
        int v27 = (void *)*v27;
      }
      uint64_t v25 = (std::string *)sub_178B204((uint64_t)v27);
      *(void *)(a1 + 128) = v25;
    }
    if (*(void *)(a2 + 128)) {
      uint64_t v28 = *(uint64_t (****)())(a2 + 128);
    }
    else {
      uint64_t v28 = &off_2546E38;
    }
    sub_117DA78(v25, (uint64_t)v28);
    if ((v19 & 4) == 0)
    {
LABEL_14:
      if ((v19 & 8) == 0) {
        goto LABEL_15;
      }
      goto LABEL_49;
    }
LABEL_48:
    *(_DWORD *)(a1 + 136) = *(_DWORD *)(a2 + 136);
    if ((v19 & 8) == 0)
    {
LABEL_15:
      if ((v19 & 0x10) == 0) {
        goto LABEL_16;
      }
      goto LABEL_50;
    }
LABEL_49:
    *(_DWORD *)(a1 + 140) = *(_DWORD *)(a2 + 140);
    if ((v19 & 0x10) == 0)
    {
LABEL_16:
      if ((v19 & 0x20) == 0) {
        goto LABEL_17;
      }
      goto LABEL_51;
    }
LABEL_50:
    *(void *)(a1 + 144) = *(void *)(a2 + 144);
    if ((v19 & 0x20) == 0)
    {
LABEL_17:
      if ((v19 & 0x40) == 0) {
        goto LABEL_18;
      }
      goto LABEL_52;
    }
LABEL_51:
    *(_DWORD *)(a1 + 152) = *(_DWORD *)(a2 + 152);
    if ((v19 & 0x40) == 0)
    {
LABEL_18:
      if ((v19 & 0x80) == 0)
      {
LABEL_20:
        *(_DWORD *)(a1 + 40) |= v19;
        goto LABEL_21;
      }
LABEL_19:
      *(_DWORD *)(a1 + 160) = *(_DWORD *)(a2 + 160);
      goto LABEL_20;
    }
LABEL_52:
    *(_DWORD *)(a1 + 156) = *(_DWORD *)(a2 + 156);
    if ((v19 & 0x80) == 0) {
      goto LABEL_20;
    }
    goto LABEL_19;
  }
LABEL_21:
  if ((v19 & 0xF00) == 0) {
    goto LABEL_28;
  }
  if ((v19 & 0x100) != 0)
  {
    *(_DWORD *)(a1 + 164) = *(_DWORD *)(a2 + 164);
    if ((v19 & 0x200) == 0)
    {
LABEL_24:
      if ((v19 & 0x400) == 0) {
        goto LABEL_25;
      }
LABEL_56:
      *(_DWORD *)(a1 + 172) = *(_DWORD *)(a2 + 172);
      if ((v19 & 0x800) == 0) {
        goto LABEL_27;
      }
      goto LABEL_26;
    }
  }
  else if ((v19 & 0x200) == 0)
  {
    goto LABEL_24;
  }
  *(_DWORD *)(a1 + 168) = *(_DWORD *)(a2 + 168);
  if ((v19 & 0x400) != 0) {
    goto LABEL_56;
  }
LABEL_25:
  if ((v19 & 0x800) != 0) {
LABEL_26:
  }
    *(_DWORD *)(a1 + 176) = *(_DWORD *)(a2 + 176);
LABEL_27:
  *(_DWORD *)(a1 + 40) |= v19;
LABEL_28:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v20 = *(void *)(a2 + 8);
  if (v20)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v20 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_1741430(uint64_t a1, uint64_t a2)
{
  if (a2 != a1)
  {
    sub_173FA7C(a1);
    sub_1741120(a1, a2);
  }
}

uint64_t sub_174147C(uint64_t a1)
{
  uint64_t result = sub_18856CC(a1 + 16);
  if (result)
  {
    uint64_t v3 = *(unsigned int *)(a1 + 56);
    while ((int)v3 >= 1)
    {
      uint64_t v4 = v3 - 1;
      char v5 = sub_172FBE8(*(void *)(*(void *)(a1 + 64) + 8 * v3));
      uint64_t v3 = v4;
      if ((v5 & 1) == 0) {
        return 0;
      }
    }
    uint64_t v6 = *(unsigned int *)(a1 + 104);
    while ((int)v6 >= 1)
    {
      uint64_t v7 = v6 - 1;
      char v8 = sub_18856CC(*(void *)(*(void *)(a1 + 112) + 8 * v6) + 16);
      uint64_t v6 = v7;
      if ((v8 & 1) == 0) {
        return 0;
      }
    }
    if ((*(unsigned char *)(a1 + 40) & 1) == 0) {
      return 1;
    }
    uint64_t result = sub_18856CC(*(void *)(a1 + 120) + 16);
    if (result) {
      return 1;
    }
  }
  return result;
}

__n128 sub_174151C(uint64_t a1, uint64_t a2)
{
  sub_1885338((uint64_t *)(a1 + 16), (uint64_t *)(a2 + 16));
  uint64_t v4 = *(void *)(a1 + 8);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a2 + 8) = v4;
  LODWORD(v4) = *(_DWORD *)(a1 + 40);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a2 + 40) = v4;
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(a1 + 56);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(void *)(a2 + 48) = v5;
  *(void *)(a2 + 56) = v6;
  uint64_t v7 = *(void *)(a1 + 64);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a2 + 64) = v7;
  uint64_t v8 = *(void *)(a1 + 72);
  uint64_t v9 = *(void *)(a1 + 80);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(void *)(a2 + 72) = v8;
  *(void *)(a2 + 80) = v9;
  uint64_t v10 = *(void *)(a1 + 88);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a2 + 88) = v10;
  uint64_t v11 = *(void *)(a1 + 96);
  uint64_t v12 = *(void *)(a1 + 104);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(void *)(a2 + 96) = v11;
  *(void *)(a2 + 104) = v12;
  uint64_t v13 = *(void *)(a1 + 112);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a2 + 112) = v13;
  uint64_t v14 = *(void *)(a1 + 120);
  uint64_t v15 = *(void *)(a1 + 128);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(void *)(a2 + 120) = v14;
  *(void *)(a2 + 128) = v15;
  uint64_t v16 = *(void *)(a1 + 136);
  uint64_t v17 = *(void *)(a1 + 144);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(void *)(a2 + 136) = v16;
  *(void *)(a2 + 144) = v17;
  uint64_t v18 = *(void *)(a1 + 152);
  uint64_t v19 = *(void *)(a1 + 160);
  __n128 result = *(__n128 *)(a2 + 152);
  *(__n128 *)(a1 + 152) = result;
  *(void *)(a2 + 152) = v18;
  *(void *)(a2 + 160) = v19;
  uint64_t v21 = *(void *)(a1 + 168);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a2 + 168) = v21;
  LODWORD(v21) = *(_DWORD *)(a1 + 176);
  *(_DWORD *)(a1 + 176) = *(_DWORD *)(a2 + 176);
  *(_DWORD *)(a2 + 176) = v21;
  return result;
}

void *sub_174161C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.Component");
}

uint64_t sub_174162C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_2547690)
  {
    uint64_t v6 = *(void *)(a1 + 24);
    if (v6)
    {
      sub_173119C(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17416E4(uint64_t a1)
{
  sub_174162C(a1);

  operator delete();
}

uint64_t sub_174171C(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if (v2) {
    __n128 result = sub_1731ECC(*(void *)(result + 24));
  }
  if ((v2 & 0x3E) != 0)
  {
    *(void *)(v1 + 32) = 0;
    *(void *)(v1 + 40) = 0;
    *(_DWORD *)(v1 + 48) = 0;
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_1741788(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v43 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v43, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = v43 + 1;
    unsigned int v9 = *v43;
    if (*v43 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v43, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v43 + 2;
      }
    }
    int v43 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_44;
        }
        uint64_t v12 = v8 + 1;
        unint64_t v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        int v15 = v13 + (v14 << 7);
        unint64_t v13 = (v15 - 128);
        if (v14 < 0)
        {
          int v43 = (char *)sub_188C138((uint64_t)v8, (v15 - 128));
          if (!v43) {
            goto LABEL_76;
          }
          unint64_t v13 = v33;
        }
        else
        {
          uint64_t v12 = v8 + 2;
LABEL_13:
          int v43 = v12;
        }
        if (sub_16B59C0())
        {
          *(_DWORD *)(a1 + 16) |= 2u;
          *(_DWORD *)(a1 + 32) = v13;
          goto LABEL_52;
        }
        if (*v7) {
          uint64_t v41 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          uint64_t v41 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v42 = 1;
        goto LABEL_70;
      case 2u:
        if (v9 != 16) {
          goto LABEL_44;
        }
        v5 |= 4u;
        uint64_t v16 = v8 + 1;
        int v17 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_20;
        }
        int v18 = *v16;
        int v17 = v17 + (v18 << 7) - 128;
        if (v18 < 0)
        {
          uint64_t v34 = (char *)sub_188C0D0((uint64_t)v8, v17);
          int v43 = v34;
          *(_DWORD *)(a1 + 36) = v35;
          if (!v34) {
            goto LABEL_76;
          }
        }
        else
        {
          uint64_t v16 = v8 + 2;
LABEL_20:
          int v43 = v16;
          *(_DWORD *)(a1 + 36) = v17;
        }
        goto LABEL_52;
      case 3u:
        if (v9 != 24) {
          goto LABEL_44;
        }
        v5 |= 8u;
        uint64_t v19 = v8 + 1;
        int v20 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_25;
        }
        int v21 = *v19;
        int v20 = v20 + (v21 << 7) - 128;
        if (v21 < 0)
        {
          uint64_t v36 = (char *)sub_188C0D0((uint64_t)v8, v20);
          int v43 = v36;
          *(_DWORD *)(a1 + 40) = v37;
          if (!v36) {
            goto LABEL_76;
          }
        }
        else
        {
          uint64_t v19 = v8 + 2;
LABEL_25:
          int v43 = v19;
          *(_DWORD *)(a1 + 40) = v20;
        }
        goto LABEL_52;
      case 5u:
        if (v9 != 42) {
          goto LABEL_44;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v22 = *(void *)(a1 + 24);
        if (!v22)
        {
          int v23 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            int v23 = (void *)*v23;
          }
          uint64_t v22 = sub_178B3FC((uint64_t)v23);
          *(void *)(a1 + 24) = v22;
          uint64_t v8 = v43;
        }
        int v24 = sub_1741BAC(a3, v22, (unsigned __int8 *)v8);
        goto LABEL_51;
      case 6u:
        if (v9 != 48) {
          goto LABEL_44;
        }
        v5 |= 0x10u;
        uint64_t v25 = v8 + 1;
        uint64_t v26 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_36;
        }
        int v27 = *v25;
        uint64_t v26 = v26 + (v27 << 7) - 128;
        if (v27 < 0)
        {
          uint64_t v38 = (char *)sub_188C138((uint64_t)v8, v26);
          int v43 = v38;
          *(unsigned char *)(a1 + 44) = v39 != 0;
          if (!v38) {
            goto LABEL_76;
          }
        }
        else
        {
          uint64_t v25 = v8 + 2;
LABEL_36:
          int v43 = v25;
          *(unsigned char *)(a1 + 44) = v26 != 0;
        }
        goto LABEL_52;
      case 7u:
        if (v9 != 56) {
          goto LABEL_44;
        }
        uint64_t v28 = v8 + 1;
        unint64_t v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_41;
        }
        int v29 = *v28;
        int v30 = v13 + (v29 << 7);
        unint64_t v13 = (v30 - 128);
        if (v29 < 0)
        {
          int v43 = (char *)sub_188C138((uint64_t)v8, (v30 - 128));
          if (!v43) {
            goto LABEL_76;
          }
          unint64_t v13 = v40;
        }
        else
        {
          uint64_t v28 = v8 + 2;
LABEL_41:
          int v43 = v28;
        }
        if (v13 > 1)
        {
          if (*v7) {
            uint64_t v41 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v41 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          int v42 = 7;
LABEL_70:
          sub_188C020(v42, v13, v41);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 0x20u;
          *(_DWORD *)(a1 + 48) = v13;
        }
        goto LABEL_52;
      default:
LABEL_44:
        if (v9) {
          BOOL v31 = (v9 & 7) == 4;
        }
        else {
          BOOL v31 = 1;
        }
        if (!v31)
        {
          if (*v7)
          {
            uint64_t v32 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v32 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = v43;
          }
          int v24 = (char *)sub_1885AC0(v9, v32, v8, a3);
LABEL_51:
          int v43 = v24;
          if (!v24) {
            goto LABEL_76;
          }
LABEL_52:
          if (sub_11947B8((uint64_t)a3, &v43, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_76:
        }
          int v43 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v43;
    }
  }
}

char *sub_1741BAC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  __n128 result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    __n128 result = sub_1732F90(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1741C3C(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*a3 <= __dst) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 32);
    *char v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 36);
    *char v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v13 = *(_DWORD *)(a1 + 40);
    *char v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unsigned int v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v16 = *(void *)(a1 + 24);
    *char v4 = 42;
    unsigned int v17 = *(_DWORD *)(v16 + 56);
    v4[1] = v17;
    if (v17 > 0x7F) {
      int v18 = sub_188A9CC(v17, v4 + 1);
    }
    else {
      int v18 = v4 + 2;
    }
    char v4 = sub_17387A8(v16, v18, a3);
    if ((v6 & 0x10) == 0)
    {
LABEL_24:
      if ((v6 & 0x20) == 0) {
        goto LABEL_41;
      }
      goto LABEL_35;
    }
  }
  else if ((v6 & 0x10) == 0)
  {
    goto LABEL_24;
  }
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v19 = *(unsigned char *)(a1 + 44);
  *char v4 = 48;
  v4[1] = v19;
  v4 += 2;
  if ((v6 & 0x20) != 0)
  {
LABEL_35:
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v20 = *(int *)(a1 + 48);
    *char v4 = 56;
    v4[1] = v20;
    if (v20 > 0x7F)
    {
      v4[1] = v20 | 0x80;
      unint64_t v21 = v20 >> 7;
      v4[2] = v20 >> 7;
      v4 += 3;
      if (v20 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v22 = v21 >> 14;
          v21 >>= 7;
          *v4++ = v21;
        }
        while (v22);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_41:
  uint64_t v23 = *(void *)(a1 + 8);
  if ((v23 & 1) == 0) {
    return v4;
  }
  unint64_t v25 = v23 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v25 + 31) < 0)
  {
    uint64_t v26 = *(void **)(v25 + 8);
    uint64_t v27 = *(void *)(v25 + 16);
  }
  else
  {
    uint64_t v26 = (void *)(v25 + 8);
    LODWORD(v27) = *(unsigned __int8 *)(v25 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v27)
  {
    uint64_t v28 = (int)v27;
    memcpy(v4, v26, (int)v27);
    v4 += v28;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v26, v27, v4);
}

uint64_t sub_1741F8C(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0x3F) == 0)
  {
    uint64_t result = 0;
    goto LABEL_22;
  }
  if (v2)
  {
    uint64_t v5 = sub_173AFF4(*(void *)(a1 + 24));
    uint64_t v3 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_11;
    }
  }
  else
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_11;
    }
  }
  int v6 = *(_DWORD *)(a1 + 32);
  if (v6 < 0) {
    uint64_t v7 = 11;
  }
  else {
    uint64_t v7 = ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v3 += v7;
LABEL_11:
  if ((v2 & 4) == 0)
  {
    if ((v2 & 8) == 0) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  v3 += ((9 * (__clz(*(_DWORD *)(a1 + 36) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 8) != 0) {
LABEL_13:
  }
    v3 += ((9 * (__clz(*(_DWORD *)(a1 + 40) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_14:
  if ((v2 & 0x10) != 0) {
    uint64_t result = v3 + 2;
  }
  else {
    uint64_t result = v3;
  }
  if ((v2 & 0x20) != 0)
  {
    int v8 = *(_DWORD *)(a1 + 48);
    uint64_t v9 = ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if (v8 >= 0) {
      uint64_t v10 = v9;
    }
    else {
      uint64_t v10 = 11;
    }
    result += v10;
  }
LABEL_22:
  uint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    unint64_t v12 = v11 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v12 + 31) < 0) {
      uint64_t v13 = *(void *)(v12 + 16);
    }
    else {
      uint64_t v13 = *(unsigned __int8 *)(v12 + 31);
    }
    result += v13;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

void sub_17420F4(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0x3F) != 0)
  {
    if (v4)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v6 = *(void *)(a1 + 24);
      if (!v6)
      {
        uint64_t v7 = *(void *)(a1 + 8);
        int v8 = (void *)(v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (v7) {
          int v8 = (void *)*v8;
        }
        uint64_t v6 = sub_178B3FC((uint64_t)v8);
        *(void *)(a1 + 24) = v6;
      }
      if (*(void *)(a2 + 24)) {
        uint64_t v9 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        uint64_t v9 = &off_2547290;
      }
      sub_173CAC4(v6, (uint64_t)v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_23;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_24;
    }
LABEL_23:
    *(_DWORD *)(a1 + 36) = *(_DWORD *)(a2 + 36);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0) {
        goto LABEL_7;
      }
      goto LABEL_25;
    }
LABEL_24:
    *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
    if ((v4 & 0x10) == 0)
    {
LABEL_7:
      if ((v4 & 0x20) == 0)
      {
LABEL_9:
        *(_DWORD *)(a1 + 16) |= v4;
        goto LABEL_10;
      }
LABEL_8:
      *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
      goto LABEL_9;
    }
LABEL_25:
    *(unsigned char *)(a1 + 44) = *(unsigned char *)(a2 + 44);
    if ((v4 & 0x20) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
LABEL_10:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_174220C(uint64_t a1, uint64_t a2)
{
  if (a2 != a1)
  {
    sub_174171C(a1);
    sub_17420F4(a1, a2);
  }
}

uint64_t sub_1742258(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 1;
  }
  uint64_t result = sub_173EF4C(*(void *)(a1 + 24));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_1742284@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.ComponentInfo");
}

uint64_t sub_1742294(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  *(void *)(a1 + 8) = v5;
  *(void *)a1 = off_24D6698;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = a2;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  return a1;
}

void sub_1742308(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_1742338(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = a1 + 16;
  *(void *)a1 = off_24D6698;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  uint64_t v6 = (uint64_t *)(a1 + 48);
  *(_DWORD *)(a1 + 68) = 0;
  *(void *)(a1 + 52) = 0;
  *(void *)(a1 + 60) = 0;
  *(void *)(a1 + 44) = 0;
  int v7 = *(_DWORD *)(a2 + 56);
  if (v7)
  {
    uint64_t v8 = *(void *)(a2 + 64);
    uint64_t v9 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_187237C(v6, v9, (uint64_t *)(v8 + 8), v7, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v10 = *(_DWORD *)(a1 + 56) + v7;
    *(_DWORD *)(a1 + 56) = v10;
    uint64_t v11 = *(int **)(a1 + 64);
    if (*v11 < v10) {
      *uint64_t v11 = v10;
    }
  }
  uint64_t v12 = *(void *)(a2 + 8);
  if (v12) {
    sub_188B4F8(v4, (v12 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v5, a2 + 16);
  int v13 = *(_DWORD *)(a2 + 40);
  if (v13) {
    operator new();
  }
  *(void *)(a1 + 72) = 0;
  if ((v13 & 2) != 0) {
    operator new();
  }
  *(void *)(a1 + 80) = 0;
  return a1;
}

void sub_17424B8()
{
}

uint64_t sub_174253C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  if ((uint64_t (***)())a1 != &off_25476C8)
  {
    uint64_t v5 = *(void **)(a1 + 72);
    if (v5)
    {
      sub_16B92F8(v5);
      operator delete();
    }
    uint64_t v6 = *(void **)(a1 + 80);
    if (v6)
    {
      sub_16C2B00(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  sub_187053C((void *)(a1 + 48));
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1742620(uint64_t a1)
{
  sub_174253C(a1);

  operator delete();
}

char *sub_1742658(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v26 = a2;
  if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
    return v26;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    int v7 = v26 + 1;
    unsigned int v8 = *v26;
    if (*v26 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        int v7 = (char *)sub_188C180((uint64_t)v26, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        int v7 = v26 + 2;
      }
    }
    uint64_t v26 = v7;
    unsigned int v11 = v8 >> 3;
    if (v8 >> 3 == 3) {
      break;
    }
    if (v11 == 2)
    {
      if (v8 != 18) {
        goto LABEL_14;
      }
      *(_DWORD *)(a1 + 40) |= 2u;
      uint64_t v21 = *(void *)(a1 + 80);
      if (!v21)
      {
        unint64_t v22 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          unint64_t v22 = (void *)*v22;
        }
        uint64_t v21 = sub_178672C((uint64_t)v22);
        *(void *)(a1 + 80) = v21;
        int v7 = v26;
      }
      unsigned int v14 = sub_154973C(a3, v21, (unsigned __int8 *)v7);
    }
    else
    {
      if (v11 != 1 || v8 != 10) {
        goto LABEL_14;
      }
      *(_DWORD *)(a1 + 40) |= 1u;
      uint64_t v23 = *(void *)(a1 + 72);
      if (!v23)
      {
        int v24 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          int v24 = (void *)*v24;
        }
        uint64_t v23 = sub_1786348((uint64_t)v24);
        *(void *)(a1 + 72) = v23;
        int v7 = v26;
      }
      unsigned int v14 = (char *)sub_15496AC(a3, v23, (unsigned __int8 *)v7);
    }
LABEL_44:
    uint64_t v26 = v14;
    if (!v14) {
      return 0;
    }
LABEL_45:
    if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
      return v26;
    }
  }
  if (v8 == 26)
  {
    unsigned int v15 = v7 - 1;
    while (1)
    {
      uint64_t v16 = (unsigned __int8 *)(v15 + 1);
      uint64_t v26 = v15 + 1;
      unsigned int v17 = *(_DWORD **)(a1 + 64);
      if (v17 && (uint64_t v18 = *(int *)(a1 + 56), (int)v18 < *v17))
      {
        *(_DWORD *)(a1 + 56) = v18 + 1;
        uint64_t v19 = *(void *)&v17[2 * v18 + 2];
      }
      else
      {
        uint64_t v20 = sub_178B590(*(void *)(a1 + 48));
        uint64_t v19 = sub_188CDC8(a1 + 48, v20);
        uint64_t v16 = (unsigned __int8 *)v26;
      }
      unsigned int v15 = sub_1725354(a3, v19, v16);
      uint64_t v26 = v15;
      if (!v15) {
        return 0;
      }
      if (*(void *)a3 <= (unint64_t)v15 || *v15 != 26) {
        goto LABEL_45;
      }
    }
  }
LABEL_14:
  if (v8) {
    BOOL v13 = (v8 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if ((v8 - 8000) >> 6 > 0x7C)
    {
      if (*v6)
      {
        unint64_t v25 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        unint64_t v25 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        int v7 = v26;
      }
      unsigned int v14 = (char *)sub_1885AC0(v8, v25, v7, a3);
    }
    else
    {
      unsigned int v14 = (char *)sub_18859DC((uint64_t **)(a1 + 16), v8, v7, (uint64_t)&off_25476C8, (uint64_t *)(a1 + 8), a3);
    }
    goto LABEL_44;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v26;
  }
  return 0;
}

char *sub_17428FC(uint64_t a1, char *a2, unint64_t *a3)
{
  int v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if (v6)
  {
    if (*a3 <= (unint64_t)a2) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    uint64_t v7 = *(void *)(a1 + 72);
    *int v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 44);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    int v4 = sub_16BB104(v7, v9, a3);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 80);
    *int v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 44);
    v4[1] = v11;
    if (v11 > 0x7F) {
      uint64_t v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      uint64_t v12 = v4 + 2;
    }
    int v4 = sub_16C31C8(v10, v12, a3);
  }
  int v13 = *(_DWORD *)(a1 + 56);
  if (v13)
  {
    for (int i = 0; i != v13; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v15 = *(void *)(*(void *)(a1 + 64) + 8 * i + 8);
      *int v4 = 26;
      unsigned int v16 = *(_DWORD *)(v15 + 44);
      v4[1] = v16;
      if (v16 > 0x7F) {
        unsigned int v17 = sub_188A9CC(v16, v4 + 1);
      }
      else {
        unsigned int v17 = v4 + 2;
      }
      int v4 = sub_1743530(v15, v17, a3);
    }
  }
  if (*(_WORD *)(a1 + 26)) {
    int v4 = sub_1886844(a1 + 16, 1000, 2000, v4, a3);
  }
  uint64_t v18 = *(void *)(a1 + 8);
  if ((v18 & 1) == 0) {
    return v4;
  }
  unint64_t v20 = v18 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v20 + 31) < 0)
  {
    uint64_t v21 = *(void **)(v20 + 8);
    uint64_t v22 = *(void *)(v20 + 16);
  }
  else
  {
    uint64_t v21 = (void *)(v20 + 8);
    LODWORD(v22) = *(unsigned __int8 *)(v20 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v22)
  {
    uint64_t v23 = (int)v22;
    memcpy(v4, v21, (int)v22);
    v4 += v23;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v21, v22, v4);
}

uint64_t sub_1742B30(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(int *)(a1 + 56);
  uint64_t v4 = v2 + v3;
  uint64_t v5 = *(void *)(a1 + 64);
  if (v5) {
    int v6 = (uint64_t *)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = sub_1743948(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  int v10 = *(_DWORD *)(a1 + 40);
  if ((v10 & 3) != 0)
  {
    if (v10)
    {
      uint64_t v11 = sub_16BC274(*(void *)(a1 + 72));
      v4 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v10 & 2) != 0)
    {
      uint64_t v12 = sub_16C35A4(*(void *)(a1 + 80));
      v4 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if (v13)
  {
    unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v15 + 31) < 0) {
      uint64_t v16 = *(void *)(v15 + 16);
    }
    else {
      uint64_t v16 = *(unsigned __int8 *)(v15 + 31);
    }
    v4 += v16;
  }
  *(_DWORD *)(a1 + 44) = v4;
  return v4;
}

void *sub_1742C50@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.LinkedService");
}

uint64_t sub_1742C60(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  *(void *)(a1 + 8) = v5;
  *(void *)a1 = off_24D6718;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = a2;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 100) = 0u;
  return a1;
}

void sub_1742CDC(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_1742D10(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = a1 + 16;
  *(void *)a1 = off_24D6718;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  int v6 = (uint64_t *)(a1 + 48);
  *(_DWORD *)(a1 + 68) = 0;
  *(void *)(a1 + 52) = 0;
  *(void *)(a1 + 60) = 0;
  *(void *)(a1 + 44) = 0;
  int v7 = *(_DWORD *)(a2 + 56);
  if (v7)
  {
    uint64_t v8 = *(void *)(a2 + 64);
    uint64_t v9 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_1301BB0(v6, v9, (uint64_t *)(v8 + 8), v7, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v10 = *(_DWORD *)(a1 + 56) + v7;
    *(_DWORD *)(a1 + 56) = v10;
    uint64_t v11 = *(int **)(a1 + 64);
    if (*v11 < v10) {
      *uint64_t v11 = v10;
    }
  }
  uint64_t v12 = *(void *)(a2 + 8);
  if (v12) {
    sub_188B4F8(v4, (v12 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v5, a2 + 16);
  int v13 = *(_DWORD *)(a2 + 40);
  if (v13) {
    operator new();
  }
  *(void *)(a1 + 72) = 0;
  if ((v13 & 2) != 0) {
    operator new();
  }
  *(void *)(a1 + 80) = 0;
  if ((v13 & 4) != 0) {
    operator new();
  }
  *(void *)(a1 + 88) = 0;
  long long v14 = *(_OWORD *)(a2 + 96);
  *(_DWORD *)(a1 + 112) = *(_DWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = v14;
  return a1;
}

void sub_1742ED8()
{
}

uint64_t sub_1742F68(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_12;
    }
  }
  else if (v4)
  {
    goto LABEL_12;
  }
  if ((uint64_t (***)())a1 != &off_2547720)
  {
    if (*(void *)(a1 + 72))
    {
      sub_15B2C44();
      operator delete();
    }
    if (*(void *)(a1 + 80))
    {
      sub_15B2C44();
      operator delete();
    }
    uint64_t v5 = *(void **)(a1 + 88);
    if (v5)
    {
      sub_16EA4D0(v5);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_12:
  sub_13016A8((void *)(a1 + 48));
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_174306C(uint64_t a1)
{
  sub_1742F68(a1);

  operator delete();
}

char *sub_17430A4(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v42 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v42, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = v42 + 1;
    unsigned int v9 = *v42;
    if (*v42 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v42, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v42 + 2;
      }
    }
    int v42 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_54;
        }
        uint64_t v12 = v8 - 1;
        while (1)
        {
          int v13 = (unsigned __int8 *)(v12 + 1);
          int v42 = v12 + 1;
          long long v14 = *(_DWORD **)(a1 + 64);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 56), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 56) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            unsigned int v17 = sub_1788574(*(void *)(a1 + 48));
            uint64_t v16 = sub_188CDC8(a1 + 48, (uint64_t)v17);
            int v13 = (unsigned __int8 *)v42;
          }
          uint64_t v12 = sub_12DE6D0(a3, v16, v13);
          int v42 = v12;
          if (!v12) {
            goto LABEL_79;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_64;
          }
        }
      case 2u:
        if (v9 != 16) {
          goto LABEL_54;
        }
        v5 |= 8u;
        uint64_t v18 = v8 + 1;
        uint64_t v19 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_23;
        }
        int v20 = *v18;
        uint64_t v19 = v19 + (v20 << 7) - 128;
        if (v20 < 0)
        {
          uint64_t v36 = (char *)sub_188C138((uint64_t)v8, v19);
          int v42 = v36;
          *(void *)(a1 + 96) = v37;
          if (!v36) {
            goto LABEL_79;
          }
        }
        else
        {
          uint64_t v18 = v8 + 2;
LABEL_23:
          int v42 = v18;
          *(void *)(a1 + 96) = v19;
        }
        goto LABEL_64;
      case 3u:
        if (v9 != 24) {
          goto LABEL_54;
        }
        v5 |= 0x10u;
        uint64_t v21 = v8 + 1;
        uint64_t v22 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_28;
        }
        int v23 = *v21;
        uint64_t v22 = v22 + (v23 << 7) - 128;
        if (v23 < 0)
        {
          uint64_t v38 = (char *)sub_188C138((uint64_t)v8, v22);
          int v42 = v38;
          *(void *)(a1 + 104) = v39;
          if (!v38) {
            goto LABEL_79;
          }
        }
        else
        {
          uint64_t v21 = v8 + 2;
LABEL_28:
          int v42 = v21;
          *(void *)(a1 + 104) = v22;
        }
        goto LABEL_64;
      case 4u:
        if (v9 != 34) {
          goto LABEL_54;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        int v24 = *(void **)(a1 + 72);
        if (v24) {
          goto LABEL_40;
        }
        unint64_t v25 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          unint64_t v25 = (void *)*v25;
        }
        int v24 = sub_15C1B30((uint64_t)v25);
        *(void *)(a1 + 72) = v24;
        goto LABEL_39;
      case 5u:
        if (v9 != 42) {
          goto LABEL_54;
        }
        *(_DWORD *)(a1 + 40) |= 2u;
        int v24 = *(void **)(a1 + 80);
        if (v24) {
          goto LABEL_40;
        }
        uint64_t v26 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          uint64_t v26 = (void *)*v26;
        }
        int v24 = sub_15C1B30((uint64_t)v26);
        *(void *)(a1 + 80) = v24;
LABEL_39:
        uint64_t v8 = v42;
LABEL_40:
        uint64_t v27 = (char *)sub_125CF74(a3, (uint64_t)v24, (unsigned __int8 *)v8);
        goto LABEL_63;
      case 6u:
        if (v9 != 48) {
          goto LABEL_54;
        }
        uint64_t v28 = v8 + 1;
        unint64_t v29 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_45;
        }
        int v30 = *v28;
        int v31 = v29 + (v30 << 7);
        unint64_t v29 = (v31 - 128);
        if (v30 < 0)
        {
          int v42 = (char *)sub_188C138((uint64_t)v8, (v31 - 128));
          if (!v42) {
            goto LABEL_79;
          }
          unint64_t v29 = v40;
        }
        else
        {
          uint64_t v28 = v8 + 2;
LABEL_45:
          int v42 = v28;
        }
        if (v29 > 4)
        {
          if (*v7) {
            uint64_t v41 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v41 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(6, v29, v41);
        }
        else
        {
          *(_DWORD *)(a1 + 40) |= 0x20u;
          *(_DWORD *)(a1 + 112) = v29;
        }
        goto LABEL_64;
      case 7u:
        if (v9 != 58) {
          goto LABEL_54;
        }
        *(_DWORD *)(a1 + 40) |= 4u;
        uint64_t v32 = *(void **)(a1 + 88);
        if (!v32)
        {
          unint64_t v33 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            unint64_t v33 = (void *)*v33;
          }
          uint64_t v32 = sub_17885D0((uint64_t)v33);
          *(void *)(a1 + 88) = v32;
          uint64_t v8 = v42;
        }
        uint64_t v27 = sub_16E9D4C(a3, (uint64_t)v32, (unsigned __int8 *)v8);
        goto LABEL_63;
      default:
LABEL_54:
        if (v9) {
          BOOL v34 = (v9 & 7) == 4;
        }
        else {
          BOOL v34 = 1;
        }
        if (!v34)
        {
          if ((v9 - 8000) >> 6 > 0x7C)
          {
            if (*v7)
            {
              int v35 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              int v35 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              uint64_t v8 = v42;
            }
            uint64_t v27 = (char *)sub_1885AC0(v9, v35, v8, a3);
          }
          else
          {
            uint64_t v27 = (char *)sub_18859DC((uint64_t **)(a1 + 16), v9, v8, (uint64_t)&off_2547720, (uint64_t *)(a1 + 8), a3);
          }
LABEL_63:
          int v42 = v27;
          if (!v27) {
            goto LABEL_79;
          }
LABEL_64:
          if (sub_11947B8((uint64_t)a3, &v42, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_79:
        }
          int v42 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 40) |= v5;
        return v42;
    }
  }
}

char *sub_1743530(uint64_t a1, char *a2, _DWORD *a3)
{
  int v6 = *(_DWORD *)(a1 + 56);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 64) + 8 * i + 8);
      *a2 = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 44);
      a2[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, a2 + 1);
      }
      else {
        unsigned int v10 = a2 + 2;
      }
      a2 = sub_16E9DDC(v8, v10, a3);
    }
  }
  int v11 = *(_DWORD *)(a1 + 40);
  if ((v11 & 8) != 0)
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unint64_t v12 = *(void *)(a1 + 96);
    *a2 = 16;
    a2[1] = v12;
    if (v12 > 0x7F)
    {
      a2[1] = v12 | 0x80;
      unint64_t v13 = v12 >> 7;
      a2[2] = v12 >> 7;
      a2 += 3;
      if (v12 >= 0x4000)
      {
        do
        {
          *(a2 - 1) |= 0x80u;
          unint64_t v14 = v13 >> 14;
          v13 >>= 7;
          *a2++ = v13;
        }
        while (v14);
      }
    }
    else
    {
      a2 += 2;
    }
  }
  if ((v11 & 0x10) != 0)
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unint64_t v15 = *(void *)(a1 + 104);
    *a2 = 24;
    a2[1] = v15;
    if (v15 > 0x7F)
    {
      a2[1] = v15 | 0x80;
      unint64_t v16 = v15 >> 7;
      a2[2] = v15 >> 7;
      a2 += 3;
      if (v15 >= 0x4000)
      {
        do
        {
          *(a2 - 1) |= 0x80u;
          unint64_t v17 = v16 >> 14;
          v16 >>= 7;
          *a2++ = v16;
        }
        while (v17);
      }
    }
    else
    {
      a2 += 2;
    }
  }
  if (v11)
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    uint64_t v18 = *(void *)(a1 + 72);
    *a2 = 34;
    unsigned int v19 = *(_DWORD *)(v18 + 20);
    a2[1] = v19;
    if (v19 > 0x7F) {
      int v20 = sub_188A9CC(v19, a2 + 1);
    }
    else {
      int v20 = a2 + 2;
    }
    a2 = sub_15B2EA4(v18, v20, a3);
    if ((v11 & 2) == 0)
    {
LABEL_25:
      if ((v11 & 0x20) == 0) {
        goto LABEL_45;
      }
      goto LABEL_39;
    }
  }
  else if ((v11 & 2) == 0)
  {
    goto LABEL_25;
  }
  if (*(void *)a3 <= (unint64_t)a2) {
    a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
  }
  uint64_t v21 = *(void *)(a1 + 80);
  *a2 = 42;
  unsigned int v22 = *(_DWORD *)(v21 + 20);
  a2[1] = v22;
  if (v22 > 0x7F) {
    int v23 = sub_188A9CC(v22, a2 + 1);
  }
  else {
    int v23 = a2 + 2;
  }
  a2 = sub_15B2EA4(v21, v23, a3);
  if ((v11 & 0x20) != 0)
  {
LABEL_39:
    if (*(void *)a3 <= (unint64_t)a2) {
      a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unint64_t v24 = *(int *)(a1 + 112);
    *a2 = 48;
    a2[1] = v24;
    if (v24 > 0x7F)
    {
      a2[1] = v24 | 0x80;
      unint64_t v25 = v24 >> 7;
      a2[2] = v24 >> 7;
      a2 += 3;
      if (v24 >= 0x4000)
      {
        do
        {
          *(a2 - 1) |= 0x80u;
          unint64_t v26 = v25 >> 14;
          v25 >>= 7;
          *a2++ = v25;
        }
        while (v26);
      }
    }
    else
    {
      a2 += 2;
    }
  }
LABEL_45:
  if ((v11 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    uint64_t v27 = *(void *)(a1 + 88);
    *a2 = 58;
    unsigned int v28 = *(_DWORD *)(v27 + 44);
    a2[1] = v28;
    if (v28 > 0x7F) {
      unint64_t v29 = sub_188A9CC(v28, a2 + 1);
    }
    else {
      unint64_t v29 = a2 + 2;
    }
    a2 = sub_16EA7B0(v27, v29, a3);
  }
  if (*(_WORD *)(a1 + 26)) {
    a2 = sub_1886844(a1 + 16, 1000, 2000, a2, a3);
  }
  uint64_t v30 = *(void *)(a1 + 8);
  if ((v30 & 1) == 0) {
    return a2;
  }
  unint64_t v32 = v30 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v32 + 31) < 0)
  {
    unint64_t v33 = *(void **)(v32 + 8);
    uint64_t v34 = *(void *)(v32 + 16);
  }
  else
  {
    unint64_t v33 = (void *)(v32 + 8);
    LODWORD(v34) = *(unsigned __int8 *)(v32 + 31);
  }
  if (*(void *)a3 - (void)a2 >= (int)v34)
  {
    uint64_t v35 = (int)v34;
    memcpy(a2, v33, (int)v34);
    a2 += v35;
    return a2;
  }

  return (char *)sub_188A528(a3, (char *)v33, v34, a2);
}

uint64_t sub_1743948(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(int *)(a1 + 56);
  uint64_t v4 = v2 + v3;
  uint64_t v5 = *(void *)(a1 + 64);
  if (v5) {
    int v6 = (uint64_t *)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = sub_16EA048(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  int v10 = *(_DWORD *)(a1 + 40);
  if ((v10 & 0x3F) != 0)
  {
    if (v10)
    {
      uint64_t v11 = sub_15B2F90(*(void *)(a1 + 72));
      v4 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v10 & 2) == 0)
      {
LABEL_10:
        if ((v10 & 4) == 0) {
          goto LABEL_11;
        }
        goto LABEL_17;
      }
    }
    else if ((v10 & 2) == 0)
    {
      goto LABEL_10;
    }
    uint64_t v12 = sub_15B2F90(*(void *)(a1 + 80));
    v4 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v10 & 4) == 0)
    {
LABEL_11:
      if ((v10 & 8) == 0) {
        goto LABEL_12;
      }
      goto LABEL_18;
    }
LABEL_17:
    uint64_t v13 = sub_16EA978(*(void *)(a1 + 88));
    v4 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v10 & 8) == 0)
    {
LABEL_12:
      if ((v10 & 0x10) == 0) {
        goto LABEL_13;
      }
      goto LABEL_19;
    }
LABEL_18:
    v4 += ((9 * (__clz(*(void *)(a1 + 96) | 1) ^ 0x3F) + 73) >> 6) + 1;
    if ((v10 & 0x10) == 0)
    {
LABEL_13:
      if ((v10 & 0x20) == 0) {
        goto LABEL_24;
      }
      goto LABEL_20;
    }
LABEL_19:
    v4 += ((9 * (__clz(*(void *)(a1 + 104) | 1) ^ 0x3F) + 73) >> 6) + 1;
    if ((v10 & 0x20) == 0) {
      goto LABEL_24;
    }
LABEL_20:
    int v14 = *(_DWORD *)(a1 + 112);
    if (v14 < 0) {
      uint64_t v15 = 11;
    }
    else {
      uint64_t v15 = ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v4 += v15;
  }
LABEL_24:
  uint64_t v16 = *(void *)(a1 + 8);
  if (v16)
  {
    unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v18 + 31) < 0) {
      uint64_t v19 = *(void *)(v18 + 16);
    }
    else {
      uint64_t v19 = *(unsigned __int8 *)(v18 + 31);
    }
    v4 += v19;
  }
  *(_DWORD *)(a1 + 44) = v4;
  return v4;
}

void sub_1743B2C(uint64_t a1, uint64_t a2)
{
  if (a2 != a1)
  {
    sub_172066C(a1);
    sub_172D1A8(a1, a2);
  }
}

__n128 sub_1743B78(uint64_t a1, uint64_t a2)
{
  sub_1885338((uint64_t *)(a1 + 16), (uint64_t *)(a2 + 16));
  uint64_t v4 = *(void *)(a1 + 8);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a2 + 8) = v4;
  LODWORD(v4) = *(_DWORD *)(a1 + 40);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a2 + 40) = v4;
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(a1 + 56);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(void *)(a2 + 48) = v5;
  *(void *)(a2 + 56) = v6;
  uint64_t v7 = *(void *)(a1 + 64);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a2 + 64) = v7;
  uint64_t v8 = *(void *)(a1 + 72);
  uint64_t v9 = *(void *)(a1 + 80);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(void *)(a2 + 72) = v8;
  *(void *)(a2 + 80) = v9;
  uint64_t v10 = *(void *)(a1 + 88);
  uint64_t v11 = *(void *)(a1 + 96);
  __n128 result = *(__n128 *)(a2 + 88);
  *(__n128 *)(a1 + 88) = result;
  *(void *)(a2 + 88) = v10;
  *(void *)(a2 + 96) = v11;
  uint64_t v13 = *(void *)(a1 + 104);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a2 + 104) = v13;
  LODWORD(v13) = *(_DWORD *)(a1 + 112);
  *(_DWORD *)(a1 + 112) = *(_DWORD *)(a2 + 112);
  *(_DWORD *)(a2 + 112) = v13;
  return result;
}

void *sub_1743C28@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.BusinessHours");
}

uint64_t sub_1743C38(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  *(void *)(a1 + 8) = v5;
  *(void *)a1 = off_24D6798;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = a2;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = a2;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = a2;
  *(void *)(a1 + 104) = 0;
  *(void *)(a1 + 112) = 0;
  *(void *)(a1 + 120) = a2;
  *(void *)(a1 + 128) = 0;
  *(void *)(a1 + 136) = 0;
  *(void *)(a1 + 144) = a2;
  *(void *)(a1 + 152) = 0;
  *(void *)(a1 + 160) = 0;
  *(void *)(a1 + 168) = a2;
  *(void *)(a1 + 176) = 0;
  *(void *)(a1 + 184) = 0;
  *(void *)(a1 + 192) = a2;
  *(void *)(a1 + 200) = 0;
  *(void *)(a1 + 208) = 0;
  *(void *)(a1 + 216) = a2;
  *(void *)(a1 + 224) = 0;
  *(void *)(a1 + 232) = 0;
  *(void *)(a1 + 240) = a2;
  *(void *)(a1 + 248) = 0;
  *(void *)(a1 + 256) = 0;
  *(void *)(a1 + 264) = a2;
  *(void *)(a1 + 272) = 0;
  *(void *)(a1 + 280) = 0;
  *(void *)(a1 + 288) = a2;
  *(void *)(a1 + 296) = 0;
  *(void *)(a1 + 304) = 0;
  *(void *)(a1 + 312) = a2;
  *(void *)(a1 + 320) = 0;
  *(void *)(a1 + 328) = 0;
  *(void *)(a1 + 336) = a2;
  *(void *)(a1 + 344) = 0;
  *(void *)(a1 + 352) = 0;
  *(void *)(a1 + 360) = a2;
  *(void *)(a1 + 368) = 0;
  *(void *)(a1 + 376) = 0;
  *(void *)(a1 + 384) = a2;
  *(void *)(a1 + 392) = 0;
  *(void *)(a1 + 400) = 0;
  *(void *)(a1 + 408) = a2;
  *(void *)(a1 + 416) = 0;
  *(void *)(a1 + 424) = 0;
  *(void *)(a1 + 432) = a2;
  *(void *)(a1 + 440) = 0;
  *(void *)(a1 + 448) = 0;
  *(void *)(a1 + 456) = &qword_2550250;
  *(void *)(a1 + 464) = &qword_2550250;
  *(_DWORD *)(a1 + 520) = 0;
  *(_OWORD *)(a1 + 488) = 0u;
  *(_OWORD *)(a1 + 504) = 0u;
  *(_OWORD *)(a1 + 472) = 0u;
  return a1;
}

void sub_1743D28(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_1743D58(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v102 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v101 = a1 + 16;
  *(void *)a1 = off_24D6798;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  uint64_t v4 = (std::string *)(a1 + 48);
  *(_DWORD *)(a1 + 68) = 0;
  *(void *)(a1 + 52) = 0;
  *(void *)(a1 + 60) = 0;
  *(void *)(a1 + 44) = 0;
  int v5 = *(_DWORD *)(a2 + 56);
  if (v5)
  {
    uint64_t v6 = *(void *)(a2 + 64);
    uint64_t v7 = (std::string **)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_12C1E38(v4, v7, (uint64_t *)(v6 + 8), v5, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v8 = *(_DWORD *)(a1 + 56) + v5;
    *(_DWORD *)(a1 + 56) = v8;
    uint64_t v9 = *(int **)(a1 + 64);
    if (*v9 < v8) {
      *uint64_t v9 = v8;
    }
  }
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0;
  int v10 = *(_DWORD *)(a2 + 80);
  if (v10)
  {
    uint64_t v11 = *(void *)(a2 + 88);
    uint64_t v12 = (std::string **)sub_188CCE4(a1 + 72, v10);
    sub_12C1E38((std::string *)(a1 + 72), v12, (uint64_t *)(v11 + 8), v10, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v13 = *(_DWORD *)(a1 + 80) + v10;
    *(_DWORD *)(a1 + 80) = v13;
    int v14 = *(int **)(a1 + 88);
    if (*v14 < v13) {
      *int v14 = v13;
    }
  }
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 104) = 0;
  *(void *)(a1 + 112) = 0;
  int v15 = *(_DWORD *)(a2 + 104);
  if (v15)
  {
    uint64_t v16 = *(void *)(a2 + 112);
    unint64_t v17 = (uint64_t *)sub_188CCE4(a1 + 96, v15);
    sub_154B658((uint64_t *)(a1 + 96), v17, (uint64_t *)(v16 + 8), v15, **(_DWORD **)(a1 + 112) - *(_DWORD *)(a1 + 104));
    int v18 = *(_DWORD *)(a1 + 104) + v15;
    *(_DWORD *)(a1 + 104) = v18;
    uint64_t v19 = *(int **)(a1 + 112);
    if (*v19 < v18) {
      int *v19 = v18;
    }
  }
  *(void *)(a1 + 120) = 0;
  *(void *)(a1 + 128) = 0;
  *(void *)(a1 + 136) = 0;
  int v20 = *(_DWORD *)(a2 + 128);
  if (v20)
  {
    uint64_t v21 = *(void *)(a2 + 136);
    unsigned int v22 = (uint64_t *)sub_188CCE4(a1 + 120, v20);
    sub_1872408((uint64_t *)(a1 + 120), v22, (uint64_t *)(v21 + 8), v20, **(_DWORD **)(a1 + 136) - *(_DWORD *)(a1 + 128));
    int v23 = *(_DWORD *)(a1 + 128) + v20;
    *(_DWORD *)(a1 + 128) = v23;
    unint64_t v24 = *(int **)(a1 + 136);
    if (*v24 < v23) {
      int *v24 = v23;
    }
  }
  *(void *)(a1 + 144) = 0;
  *(void *)(a1 + 152) = 0;
  *(void *)(a1 + 160) = 0;
  int v25 = *(_DWORD *)(a2 + 152);
  if (v25)
  {
    uint64_t v26 = *(void *)(a2 + 160);
    uint64_t v27 = (std::string **)sub_188CCE4(a1 + 144, v25);
    sub_12C1E38((std::string *)(a1 + 144), v27, (uint64_t *)(v26 + 8), v25, **(_DWORD **)(a1 + 160) - *(_DWORD *)(a1 + 152));
    int v28 = *(_DWORD *)(a1 + 152) + v25;
    *(_DWORD *)(a1 + 152) = v28;
    unint64_t v29 = *(int **)(a1 + 160);
    if (*v29 < v28) {
      int *v29 = v28;
    }
  }
  *(void *)(a1 + 168) = 0;
  *(void *)(a1 + 176) = 0;
  *(void *)(a1 + 184) = 0;
  int v30 = *(_DWORD *)(a2 + 176);
  if (v30)
  {
    uint64_t v31 = *(void *)(a2 + 184);
    unint64_t v32 = (uint64_t *)sub_188CCE4(a1 + 168, *(_DWORD *)(a2 + 176));
    sub_12C4B74((uint64_t *)(a1 + 168), v32, (uint64_t *)(v31 + 8), v30, **(_DWORD **)(a1 + 184) - *(_DWORD *)(a1 + 176));
    int v33 = *(_DWORD *)(a1 + 176) + v30;
    *(_DWORD *)(a1 + 176) = v33;
    uint64_t v34 = *(int **)(a1 + 184);
    if (*v34 < v33) {
      *uint64_t v34 = v33;
    }
  }
  *(void *)(a1 + 192) = 0;
  *(void *)(a1 + 200) = 0;
  *(void *)(a1 + 208) = 0;
  int v35 = *(_DWORD *)(a2 + 200);
  if (v35)
  {
    uint64_t v36 = *(void *)(a2 + 208);
    uint64_t v37 = (std::string **)sub_188CCE4(a1 + 192, v35);
    sub_12C1E38((std::string *)(a1 + 192), v37, (uint64_t *)(v36 + 8), v35, **(_DWORD **)(a1 + 208) - *(_DWORD *)(a1 + 200));
    int v38 = *(_DWORD *)(a1 + 200) + v35;
    *(_DWORD *)(a1 + 200) = v38;
    uint64_t v39 = *(int **)(a1 + 208);
    if (*v39 < v38) {
      *uint64_t v39 = v38;
    }
  }
  *(void *)(a1 + 216) = 0;
  *(void *)(a1 + 224) = 0;
  *(void *)(a1 + 232) = 0;
  int v40 = *(_DWORD *)(a2 + 224);
  if (v40)
  {
    uint64_t v41 = *(void *)(a2 + 232);
    int v42 = (std::string **)sub_188CCE4(a1 + 216, *(_DWORD *)(a2 + 224));
    sub_12C1E38((std::string *)(a1 + 216), v42, (uint64_t *)(v41 + 8), v40, **(_DWORD **)(a1 + 232) - *(_DWORD *)(a1 + 224));
    int v43 = *(_DWORD *)(a1 + 224) + v40;
    *(_DWORD *)(a1 + 224) = v43;
    uint64_t v44 = *(int **)(a1 + 232);
    if (*v44 < v43) {
      *uint64_t v44 = v43;
    }
  }
  *(void *)(a1 + 240) = 0;
  *(void *)(a1 + 248) = 0;
  *(void *)(a1 + 256) = 0;
  int v45 = *(_DWORD *)(a2 + 248);
  if (v45)
  {
    uint64_t v46 = *(void *)(a2 + 256);
    uint64_t v47 = (std::string **)sub_188CCE4(a1 + 240, *(_DWORD *)(a2 + 248));
    sub_1872494((std::string *)(a1 + 240), v47, (uint64_t *)(v46 + 8), v45, **(_DWORD **)(a1 + 256) - *(_DWORD *)(a1 + 248));
    int v48 = *(_DWORD *)(a1 + 248) + v45;
    *(_DWORD *)(a1 + 248) = v48;
    unint64_t v49 = *(int **)(a1 + 256);
    if (*v49 < v48) {
      *unint64_t v49 = v48;
    }
  }
  unint64_t v100 = (std::string *)(a1 + 264);
  *(void *)(a1 + 264) = 0;
  *(void *)(a1 + 272) = 0;
  *(void *)(a1 + 280) = 0;
  int v50 = *(_DWORD *)(a2 + 272);
  if (v50)
  {
    uint64_t v51 = *(void *)(a2 + 280);
    unsigned int v52 = (std::string **)sub_188CCE4((uint64_t)v100, *(_DWORD *)(a2 + 272));
    sub_12C1E38(v100, v52, (uint64_t *)(v51 + 8), v50, **(_DWORD **)(a1 + 280) - *(_DWORD *)(a1 + 272));
    int v53 = *(_DWORD *)(a1 + 272) + v50;
    *(_DWORD *)(a1 + 272) = v53;
    unint64_t v54 = *(int **)(a1 + 280);
    if (*v54 < v53) {
      *unint64_t v54 = v53;
    }
  }
  *(void *)(a1 + 288) = 0;
  *(void *)(a1 + 296) = 0;
  *(void *)(a1 + 304) = 0;
  int v55 = *(_DWORD *)(a2 + 296);
  if (v55)
  {
    uint64_t v56 = *(void *)(a2 + 304);
    uint64_t v57 = (std::string **)sub_188CCE4(a1 + 288, *(_DWORD *)(a2 + 296));
    sub_12C1E38((std::string *)(a1 + 288), v57, (uint64_t *)(v56 + 8), v55, **(_DWORD **)(a1 + 304) - *(_DWORD *)(a1 + 296));
    int v58 = *(_DWORD *)(a1 + 296) + v55;
    *(_DWORD *)(a1 + 296) = v58;
    unint64_t v59 = *(int **)(a1 + 304);
    if (*v59 < v58) {
      *unint64_t v59 = v58;
    }
  }
  uint64_t v99 = (std::string *)(a1 + 312);
  *(void *)(a1 + 312) = 0;
  *(void *)(a1 + 320) = 0;
  *(void *)(a1 + 328) = 0;
  int v60 = *(_DWORD *)(a2 + 320);
  if (v60)
  {
    uint64_t v61 = *(void *)(a2 + 328);
    uint64_t v62 = (std::string **)sub_188CCE4((uint64_t)v99, *(_DWORD *)(a2 + 320));
    sub_12C1E38(v99, v62, (uint64_t *)(v61 + 8), v60, **(_DWORD **)(a1 + 328) - *(_DWORD *)(a1 + 320));
    int v63 = *(_DWORD *)(a1 + 320) + v60;
    *(_DWORD *)(a1 + 320) = v63;
    int v64 = *(int **)(a1 + 328);
    if (*v64 < v63) {
      int *v64 = v63;
    }
  }
  uint64_t v98 = (std::string *)(a1 + 336);
  *(void *)(a1 + 336) = 0;
  *(void *)(a1 + 344) = 0;
  *(void *)(a1 + 352) = 0;
  int v65 = *(_DWORD *)(a2 + 344);
  if (v65)
  {
    uint64_t v66 = *(void *)(a2 + 352);
    unint64_t v67 = (std::string **)sub_188CCE4((uint64_t)v98, *(_DWORD *)(a2 + 344));
    sub_12C1E38(v98, v67, (uint64_t *)(v66 + 8), v65, **(_DWORD **)(a1 + 352) - *(_DWORD *)(a1 + 344));
    int v68 = *(_DWORD *)(a1 + 344) + v65;
    *(_DWORD *)(a1 + 344) = v68;
    uint64_t v69 = *(int **)(a1 + 352);
    if (*v69 < v68) {
      *uint64_t v69 = v68;
    }
  }
  uint64_t v97 = (std::string *)(a1 + 360);
  *(void *)(a1 + 360) = 0;
  *(void *)(a1 + 368) = 0;
  *(void *)(a1 + 376) = 0;
  int v70 = *(_DWORD *)(a2 + 368);
  if (v70)
  {
    uint64_t v71 = *(void *)(a2 + 376);
    int v72 = (std::string **)sub_188CCE4((uint64_t)v97, *(_DWORD *)(a2 + 368));
    sub_12C1E38(v97, v72, (uint64_t *)(v71 + 8), v70, **(_DWORD **)(a1 + 376) - *(_DWORD *)(a1 + 368));
    int v73 = *(_DWORD *)(a1 + 368) + v70;
    *(_DWORD *)(a1 + 368) = v73;
    int v74 = *(int **)(a1 + 376);
    if (*v74 < v73) {
      int *v74 = v73;
    }
  }
  uint64_t v96 = (std::string *)(a1 + 384);
  *(void *)(a1 + 384) = 0;
  *(void *)(a1 + 392) = 0;
  *(void *)(a1 + 400) = 0;
  int v75 = *(_DWORD *)(a2 + 392);
  if (v75)
  {
    uint64_t v76 = *(void *)(a2 + 400);
    unint64_t v77 = (std::string **)sub_188CCE4((uint64_t)v96, *(_DWORD *)(a2 + 392));
    sub_1872510(v96, v77, (uint64_t *)(v76 + 8), v75, **(_DWORD **)(a1 + 400) - *(_DWORD *)(a1 + 392));
    int v78 = *(_DWORD *)(a1 + 392) + v75;
    *(_DWORD *)(a1 + 392) = v78;
    int v79 = *(int **)(a1 + 400);
    if (*v79 < v78) {
      *int v79 = v78;
    }
  }
  *(void *)(a1 + 408) = 0;
  *(void *)(a1 + 416) = 0;
  *(void *)(a1 + 424) = 0;
  int v80 = *(_DWORD *)(a2 + 416);
  if (v80)
  {
    uint64_t v81 = *(void *)(a2 + 424);
    int v82 = (uint64_t *)sub_188CCE4(a1 + 408, *(_DWORD *)(a2 + 416));
    sub_154B658((uint64_t *)(a1 + 408), v82, (uint64_t *)(v81 + 8), v80, **(_DWORD **)(a1 + 424) - *(_DWORD *)(a1 + 416));
    int v83 = *(_DWORD *)(a1 + 416) + v80;
    *(_DWORD *)(a1 + 416) = v83;
    uint64_t v84 = *(int **)(a1 + 424);
    if (*v84 < v83) {
      int *v84 = v83;
    }
  }
  *(void *)(a1 + 432) = 0;
  *(void *)(a1 + 440) = 0;
  *(void *)(a1 + 448) = 0;
  int v85 = *(_DWORD *)(a2 + 440);
  if (v85)
  {
    uint64_t v86 = *(void *)(a2 + 448);
    uint64_t v87 = (std::string **)sub_188CCE4(a1 + 432, *(_DWORD *)(a2 + 440));
    sub_12C1E38((std::string *)(a1 + 432), v87, (uint64_t *)(v86 + 8), v85, **(_DWORD **)(a1 + 448) - *(_DWORD *)(a1 + 440));
    int v88 = *(_DWORD *)(a1 + 440) + v85;
    *(_DWORD *)(a1 + 440) = v88;
    uint64_t v89 = *(int **)(a1 + 448);
    if (*v89 < v88) {
      *uint64_t v89 = v88;
    }
  }
  uint64_t v90 = *(void *)(a2 + 8);
  if (v90) {
    sub_188B4F8(v102, (v90 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v101, a2 + 16);
  *(void *)(a1 + 456) = &qword_2550250;
  int v91 = *(_DWORD *)(a2 + 40);
  if (v91)
  {
    uint64_t v92 = (uint64_t *)(*v102 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v102) {
      uint64_t v92 = (uint64_t *)*v92;
    }
    sub_1881DF4((std::string **)(a1 + 456), (long long *)(*(void *)(a2 + 456) & 0xFFFFFFFFFFFFFFFELL), v92);
    int v91 = *(_DWORD *)(a2 + 40);
  }
  *(void *)(a1 + 464) = &qword_2550250;
  if ((v91 & 2) != 0)
  {
    uint64_t v93 = (uint64_t *)(*v102 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v102) {
      uint64_t v93 = (uint64_t *)*v93;
    }
    sub_1881DF4((std::string **)(a1 + 464), (long long *)(*(void *)(a2 + 464) & 0xFFFFFFFFFFFFFFFELL), v93);
    int v91 = *(_DWORD *)(a2 + 40);
  }
  if ((v91 & 4) != 0) {
    operator new();
  }
  *(void *)(a1 + 472) = 0;
  if ((v91 & 8) != 0) {
    operator new();
  }
  *(void *)(a1 + 480) = 0;
  if ((v91 & 0x10) != 0) {
    operator new();
  }
  *(void *)(a1 + 488) = 0;
  if ((v91 & 0x20) != 0) {
    operator new();
  }
  *(void *)(a1 + 496) = 0;
  long long v94 = *(_OWORD *)(a2 + 504);
  *(_DWORD *)(a1 + 520) = *(_DWORD *)(a2 + 520);
  *(_OWORD *)(a1 + 504) = v94;
  return a1;
}

void sub_17446B0()
{
}

void *sub_17448B0(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_1744A08((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  sub_12C1DB8(a1 + 54);
  sub_154B128(a1 + 51);
  sub_18706BC(a1 + 48);
  sub_12C1DB8(a1 + 45);
  sub_12C1DB8(a1 + 42);
  sub_12C1DB8(a1 + 39);
  sub_12C1DB8(a1 + 36);
  sub_12C1DB8(a1 + 33);
  sub_187063C(a1 + 30);
  sub_12C1DB8(a1 + 27);
  sub_12C1DB8(a1 + 24);
  sub_12C45E8(a1 + 21);
  sub_12C1DB8(a1 + 18);
  sub_18705BC(a1 + 15);
  sub_154B128(a1 + 12);
  sub_12C1DB8(a1 + 9);
  sub_12C1DB8(a1 + 6);
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

uint64_t sub_1744A08(uint64_t result)
{
  uint64_t v1 = (void *)result;
  if (*(uint64_t **)(result + 456) != &qword_2550250) {
    sub_1881C6C((void ***)(result + 456));
  }
  if (*(uint64_t **)(result + 464) != &qword_2550250) {
    sub_1881C6C((void ***)(result + 464));
  }
  if ((uint64_t (***)())result != &off_2547798)
  {
    uint64_t v2 = *(void *)(result + 472);
    if (v2)
    {
      sub_184AFBC(v2);
      operator delete();
    }
    uint64_t v3 = v1[60];
    if (v3)
    {
      sub_184AFBC(v3);
      operator delete();
    }
    uint64_t v4 = v1[61];
    if (v4)
    {
      sub_177A82C(v4);
      operator delete();
    }
    __n128 result = v1[62];
    if (result)
    {
      sub_16FBA2C((void *)result);
      operator delete();
    }
  }
  return result;
}

void sub_1744B04(void *a1)
{
  sub_17448B0(a1);

  operator delete();
}

char *sub_1744B3C(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v155 = a2;
  if (sub_11947B8((uint64_t)a3, &v155, a3[11].i32[1]))
  {
    int v144 = 0;
    goto LABEL_3;
  }
  int v144 = 0;
  uint64_t v154 = (uint64_t *)(a1 + 432);
  uint64_t v152 = (uint64_t *)(a1 + 384);
  uint64_t v153 = (uint64_t *)(a1 + 408);
  uint64_t v150 = (uint64_t *)(a1 + 336);
  unint64_t v151 = (uint64_t *)(a1 + 360);
  uint64_t v148 = (uint64_t *)(a1 + 288);
  uint64_t v149 = (uint64_t *)(a1 + 312);
  unsigned int v146 = (uint64_t *)(a1 + 240);
  uint64_t v147 = (uint64_t *)(a1 + 264);
  uint64_t v143 = (uint64_t *)(a1 + 8);
  uint64_t v145 = (uint64_t *)(a1 + 216);
  while (2)
  {
    uint64_t v6 = v155 + 1;
    unsigned int v7 = *v155;
    if (*v155 < 0)
    {
      unsigned int v8 = v7 + (*v6 << 7);
      unsigned int v7 = v8 - 128;
      if (*v6 < 0)
      {
        uint64_t v6 = (char *)sub_188C180((uint64_t)v155, v8 - 128);
        unsigned int v7 = v9;
      }
      else
      {
        uint64_t v6 = v155 + 2;
      }
    }
    uint64_t v155 = v6;
    switch(v7 >> 3)
    {
      case 1u:
        if (v7 != 10) {
          goto LABEL_232;
        }
        int v10 = v6 - 1;
        while (1)
        {
          uint64_t v11 = (unsigned __int8 *)(v10 + 1);
          uint64_t v155 = v10 + 1;
          uint64_t v12 = *(_DWORD **)(a1 + 64);
          if (v12 && (uint64_t v13 = *(int *)(a1 + 56), (int)v13 < *v12))
          {
            *(_DWORD *)(a1 + 56) = v13 + 1;
            uint64_t v14 = *(void *)&v12[2 * v13 + 2];
          }
          else
          {
            int v15 = sub_15C1B30(*(void *)(a1 + 48));
            uint64_t v14 = sub_188CDC8(a1 + 48, (uint64_t)v15);
            uint64_t v11 = (unsigned __int8 *)v155;
          }
          int v10 = (char *)sub_125CF74(a3, v14, v11);
          uint64_t v155 = v10;
          if (!v10) {
            goto LABEL_257;
          }
          if (*(void *)a3 <= (unint64_t)v10 || *v10 != 10) {
            goto LABEL_242;
          }
        }
      case 2u:
        if (v7 != 18) {
          goto LABEL_232;
        }
        uint64_t v16 = v6 - 1;
        while (1)
        {
          unint64_t v17 = (unsigned __int8 *)(v16 + 1);
          uint64_t v155 = v16 + 1;
          int v18 = *(_DWORD **)(a1 + 88);
          if (v18 && (uint64_t v19 = *(int *)(a1 + 80), (int)v19 < *v18))
          {
            *(_DWORD *)(a1 + 80) = v19 + 1;
            uint64_t v20 = *(void *)&v18[2 * v19 + 2];
          }
          else
          {
            uint64_t v21 = sub_15C1B30(*(void *)(a1 + 72));
            uint64_t v20 = sub_188CDC8(a1 + 72, (uint64_t)v21);
            unint64_t v17 = (unsigned __int8 *)v155;
          }
          uint64_t v16 = (char *)sub_125CF74(a3, v20, v17);
          uint64_t v155 = v16;
          if (!v16) {
            goto LABEL_257;
          }
          if (*(void *)a3 <= (unint64_t)v16 || *v16 != 18) {
            goto LABEL_242;
          }
        }
      case 3u:
        if (v7 != 26) {
          goto LABEL_232;
        }
        unsigned int v22 = v6 - 1;
        while (1)
        {
          int v23 = (unsigned __int8 *)(v22 + 1);
          uint64_t v155 = v22 + 1;
          unint64_t v24 = *(_DWORD **)(a1 + 112);
          if (v24 && (uint64_t v25 = *(int *)(a1 + 104), (int)v25 < *v24))
          {
            *(_DWORD *)(a1 + 104) = v25 + 1;
            uint64_t v26 = *(void *)&v24[2 * v25 + 2];
          }
          else
          {
            uint64_t v27 = sub_17894DC(*(void *)(a1 + 96));
            uint64_t v26 = sub_188CDC8(a1 + 96, v27);
            int v23 = (unsigned __int8 *)v155;
          }
          unsigned int v22 = (char *)sub_15435C4(a3, v26, v23);
          uint64_t v155 = v22;
          if (!v22) {
            goto LABEL_257;
          }
          if (*(void *)a3 <= (unint64_t)v22 || *v22 != 26) {
            goto LABEL_242;
          }
        }
      case 4u:
        if (v7 != 34) {
          goto LABEL_232;
        }
        *(_DWORD *)(a1 + 40) |= 4u;
        uint64_t v28 = *(void *)(a1 + 472);
        if (v28) {
          goto LABEL_51;
        }
        unint64_t v29 = (void *)(*v143 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v143) {
          unint64_t v29 = (void *)*v29;
        }
        uint64_t v28 = sub_185089C((uint64_t)v29);
        *(void *)(a1 + 472) = v28;
        goto LABEL_50;
      case 5u:
        if (v7 != 42) {
          goto LABEL_232;
        }
        *(_DWORD *)(a1 + 40) |= 8u;
        uint64_t v28 = *(void *)(a1 + 480);
        if (v28) {
          goto LABEL_51;
        }
        int v30 = (void *)(*v143 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v143) {
          int v30 = (void *)*v30;
        }
        uint64_t v28 = sub_185089C((uint64_t)v30);
        *(void *)(a1 + 480) = v28;
LABEL_50:
        uint64_t v6 = v155;
LABEL_51:
        uint64_t v31 = sub_12688D0(a3, v28, (unsigned __int8 *)v6);
        goto LABEL_241;
      case 6u:
        if (v7 != 50) {
          goto LABEL_232;
        }
        unint64_t v32 = v6 - 1;
        while (1)
        {
          int v33 = (unsigned __int8 *)(v32 + 1);
          uint64_t v155 = v32 + 1;
          uint64_t v34 = *(_DWORD **)(a1 + 136);
          if (v34 && (uint64_t v35 = *(int *)(a1 + 128), (int)v35 < *v34))
          {
            *(_DWORD *)(a1 + 128) = v35 + 1;
            uint64_t v36 = *(void *)&v34[2 * v35 + 2];
          }
          else
          {
            uint64_t v37 = sub_178B648(*(void *)(a1 + 120));
            uint64_t v36 = sub_188CDC8(a1 + 120, v37);
            int v33 = (unsigned __int8 *)v155;
          }
          unint64_t v32 = (char *)sub_17257D4(a3, v36, v33);
          uint64_t v155 = v32;
          if (!v32) {
            goto LABEL_257;
          }
          if (*(void *)a3 <= (unint64_t)v32 || *v32 != 50) {
            goto LABEL_242;
          }
        }
      case 7u:
        if (v7 != 58) {
          goto LABEL_232;
        }
        int v38 = v6 - 1;
        while (1)
        {
          uint64_t v39 = (unsigned __int8 *)(v38 + 1);
          uint64_t v155 = v38 + 1;
          int v40 = *(_DWORD **)(a1 + 160);
          if (v40 && (uint64_t v41 = *(int *)(a1 + 152), (int)v41 < *v40))
          {
            *(_DWORD *)(a1 + 152) = v41 + 1;
            uint64_t v42 = *(void *)&v40[2 * v41 + 2];
          }
          else
          {
            int v43 = sub_15C1B30(*(void *)(a1 + 144));
            uint64_t v42 = sub_188CDC8(a1 + 144, (uint64_t)v43);
            uint64_t v39 = (unsigned __int8 *)v155;
          }
          int v38 = (char *)sub_125CF74(a3, v42, v39);
          uint64_t v155 = v38;
          if (!v38) {
            goto LABEL_257;
          }
          if (*(void *)a3 <= (unint64_t)v38 || *v38 != 58) {
            goto LABEL_242;
          }
        }
      case 8u:
        if (v7 != 66) {
          goto LABEL_232;
        }
        uint64_t v44 = v6 - 1;
        while (1)
        {
          int v45 = (unsigned __int8 *)(v44 + 1);
          uint64_t v155 = v44 + 1;
          uint64_t v46 = *(_DWORD **)(a1 + 184);
          if (v46 && (uint64_t v47 = *(int *)(a1 + 176), (int)v47 < *v46))
          {
            *(_DWORD *)(a1 + 176) = v47 + 1;
            uint64_t v48 = *(void *)&v46[2 * v47 + 2];
          }
          else
          {
            uint64_t v49 = sub_185089C(*(void *)(a1 + 168));
            uint64_t v48 = sub_188CDC8(a1 + 168, v49);
            int v45 = (unsigned __int8 *)v155;
          }
          uint64_t v44 = sub_12688D0(a3, v48, v45);
          uint64_t v155 = v44;
          if (!v44) {
            goto LABEL_257;
          }
          if (*(void *)a3 <= (unint64_t)v44 || *v44 != 66) {
            goto LABEL_242;
          }
        }
      case 9u:
        if (v7 != 72) {
          goto LABEL_232;
        }
        v144 |= 0x80u;
        int v50 = v6 + 1;
        int v51 = *v6;
        if ((*v6 & 0x80000000) == 0) {
          goto LABEL_86;
        }
        int v52 = *v50;
        int v51 = v51 + (v52 << 7) - 128;
        if (v52 < 0)
        {
          uint64_t v137 = (char *)sub_188C0D0((uint64_t)v6, v51);
          uint64_t v155 = v137;
          *(_DWORD *)(a1 + 512) = v138;
          if (!v137) {
            goto LABEL_257;
          }
        }
        else
        {
          int v50 = v6 + 2;
LABEL_86:
          uint64_t v155 = v50;
          *(_DWORD *)(a1 + 512) = v51;
        }
        goto LABEL_242;
      case 0xAu:
        if (v7 != 82) {
          goto LABEL_232;
        }
        int v53 = v6 - 1;
        while (1)
        {
          unint64_t v54 = (unsigned __int8 *)(v53 + 1);
          uint64_t v155 = v53 + 1;
          int v55 = *(_DWORD **)(a1 + 208);
          if (v55 && (uint64_t v56 = *(int *)(a1 + 200), (int)v56 < *v55))
          {
            *(_DWORD *)(a1 + 200) = v56 + 1;
            uint64_t v57 = *(void *)&v55[2 * v56 + 2];
          }
          else
          {
            int v58 = sub_15C1B30(*(void *)(a1 + 192));
            uint64_t v57 = sub_188CDC8(a1 + 192, (uint64_t)v58);
            unint64_t v54 = (unsigned __int8 *)v155;
          }
          int v53 = (char *)sub_125CF74(a3, v57, v54);
          uint64_t v155 = v53;
          if (!v53) {
            goto LABEL_257;
          }
          if (*(void *)a3 <= (unint64_t)v53 || *v53 != 82) {
            goto LABEL_242;
          }
        }
      case 0xBu:
        if (v7 != 90) {
          goto LABEL_232;
        }
        unint64_t v59 = v6 - 1;
        while (1)
        {
          int v60 = (unsigned __int8 *)(v59 + 1);
          uint64_t v155 = v59 + 1;
          uint64_t v61 = *(_DWORD **)(a1 + 232);
          if (v61 && (uint64_t v62 = *(int *)(a1 + 224), (int)v62 < *v61))
          {
            *(_DWORD *)(a1 + 224) = v62 + 1;
            uint64_t v63 = *(void *)&v61[2 * v62 + 2];
          }
          else
          {
            int v64 = sub_15C1B30(*v145);
            uint64_t v63 = sub_188CDC8((uint64_t)v145, (uint64_t)v64);
            int v60 = (unsigned __int8 *)v155;
          }
          unint64_t v59 = (char *)sub_125CF74(a3, v63, v60);
          uint64_t v155 = v59;
          if (!v59) {
            goto LABEL_257;
          }
          if (*(void *)a3 <= (unint64_t)v59 || *v59 != 90) {
            goto LABEL_242;
          }
        }
      case 0xCu:
        if (v7 != 97) {
          goto LABEL_232;
        }
        v144 |= 0x40u;
        *(void *)(a1 + 504) = *(void *)v6;
        uint64_t v155 = v6 + 8;
        goto LABEL_242;
      case 0xDu:
        if (v7 != 106) {
          goto LABEL_232;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        uint64_t v65 = *(void *)(a1 + 8);
        uint64_t v66 = (uint64_t *)(v65 & 0xFFFFFFFFFFFFFFFCLL);
        if (v65) {
          uint64_t v66 = (uint64_t *)*v66;
        }
        unint64_t v67 = (void *)(a1 + 456);
        goto LABEL_117;
      case 0xEu:
        if (v7 != 114) {
          goto LABEL_232;
        }
        *(_DWORD *)(a1 + 40) |= 2u;
        uint64_t v68 = *(void *)(a1 + 8);
        uint64_t v66 = (uint64_t *)(v68 & 0xFFFFFFFFFFFFFFFCLL);
        if (v68) {
          uint64_t v66 = (uint64_t *)*v66;
        }
        unint64_t v67 = (void *)(a1 + 464);
LABEL_117:
        uint64_t v69 = (std::string *)sub_1880F84(v67, v66);
        uint64_t v31 = (char *)sub_188C244(v69, v155, (uint64_t)a3);
        goto LABEL_241;
      case 0xFu:
        if (v7 != 122) {
          goto LABEL_232;
        }
        *(_DWORD *)(a1 + 40) |= 0x10u;
        uint64_t v70 = *(void *)(a1 + 488);
        if (!v70)
        {
          uint64_t v71 = (void *)(*v143 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v143) {
            uint64_t v71 = (void *)*v71;
          }
          uint64_t v70 = sub_178E358((uint64_t)v71);
          *(void *)(a1 + 488) = v70;
          uint64_t v6 = v155;
        }
        uint64_t v31 = sub_17256B4(a3, v70, (unsigned __int8 *)v6);
        goto LABEL_241;
      case 0x10u:
        if (v7 != 128) {
          goto LABEL_232;
        }
        v144 |= 0x100u;
        int v72 = v6 + 1;
        uint64_t v73 = *v6;
        if ((*v6 & 0x80000000) == 0) {
          goto LABEL_128;
        }
        int v74 = *v72;
        uint64_t v73 = v73 + (v74 << 7) - 128;
        if (v74 < 0)
        {
          uint64_t v139 = (char *)sub_188C138((uint64_t)v6, v73);
          uint64_t v155 = v139;
          *(unsigned char *)(a1 + 516) = v140 != 0;
          if (!v139) {
            goto LABEL_257;
          }
        }
        else
        {
          int v72 = v6 + 2;
LABEL_128:
          uint64_t v155 = v72;
          *(unsigned char *)(a1 + 516) = v73 != 0;
        }
        goto LABEL_242;
      case 0x11u:
        if (v7 != 138) {
          goto LABEL_232;
        }
        *(_DWORD *)(a1 + 40) |= 0x20u;
        uint64_t v75 = *(void *)(a1 + 496);
        if (!v75)
        {
          uint64_t v76 = (void *)(*v143 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v143) {
            uint64_t v76 = (void *)*v76;
          }
          uint64_t v75 = sub_17894DC((uint64_t)v76);
          *(void *)(a1 + 496) = v75;
          uint64_t v6 = v155;
        }
        uint64_t v31 = (char *)sub_15435C4(a3, v75, (unsigned __int8 *)v6);
        goto LABEL_241;
      case 0x12u:
        if (v7 != 144) {
          goto LABEL_232;
        }
        unint64_t v77 = v6 + 1;
        unint64_t v78 = *v6;
        if ((*v6 & 0x80000000) == 0) {
          goto LABEL_139;
        }
        int v79 = *v77;
        int v80 = v78 + (v79 << 7);
        unint64_t v78 = (v80 - 128);
        if (v79 < 0)
        {
          uint64_t v155 = (char *)sub_188C138((uint64_t)v6, (v80 - 128));
          if (!v155) {
            goto LABEL_257;
          }
          unint64_t v78 = v141;
        }
        else
        {
          unint64_t v77 = v6 + 2;
LABEL_139:
          uint64_t v155 = v77;
        }
        if (v78 > 2)
        {
          if (*v143) {
            uint64_t v142 = (std::string *)((*v143 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v142 = (std::string *)sub_188DBD8(v143);
          }
          sub_188C020(18, v78, v142);
        }
        else
        {
          *(_DWORD *)(a1 + 40) |= 0x200u;
          *(_DWORD *)(a1 + 520) = v78;
        }
        goto LABEL_242;
      case 0x13u:
        if (v7 != 154) {
          goto LABEL_232;
        }
        uint64_t v81 = v6 - 2;
        while (1)
        {
          int v82 = (unsigned __int8 *)(v81 + 2);
          uint64_t v155 = v81 + 2;
          int v83 = *(_DWORD **)(a1 + 256);
          if (v83 && (uint64_t v84 = *(int *)(a1 + 248), (int)v84 < *v83))
          {
            *(_DWORD *)(a1 + 248) = v84 + 1;
            uint64_t v85 = *(void *)&v83[2 * v84 + 2];
          }
          else
          {
            uint64_t v86 = sub_15C1BB4(*v146);
            uint64_t v85 = sub_188CDC8((uint64_t)v146, (uint64_t)v86);
            int v82 = (unsigned __int8 *)v155;
          }
          uint64_t v81 = (char *)sub_1745A94(a3, v85, v82);
          uint64_t v155 = v81;
          if (!v81) {
            goto LABEL_257;
          }
          if (*(void *)a3 <= (unint64_t)v81 || *(_WORD *)v81 != 410) {
            goto LABEL_242;
          }
        }
      case 0x14u:
        if (v7 != 162) {
          goto LABEL_232;
        }
        uint64_t v87 = v6 - 2;
        while (1)
        {
          int v88 = (unsigned __int8 *)(v87 + 2);
          uint64_t v155 = v87 + 2;
          uint64_t v89 = *(_DWORD **)(a1 + 280);
          if (v89 && (uint64_t v90 = *(int *)(a1 + 272), (int)v90 < *v89))
          {
            *(_DWORD *)(a1 + 272) = v90 + 1;
            uint64_t v91 = *(void *)&v89[2 * v90 + 2];
          }
          else
          {
            uint64_t v92 = sub_15C1B30(*v147);
            uint64_t v91 = sub_188CDC8((uint64_t)v147, (uint64_t)v92);
            int v88 = (unsigned __int8 *)v155;
          }
          uint64_t v87 = (char *)sub_125CF74(a3, v91, v88);
          uint64_t v155 = v87;
          if (!v87) {
            goto LABEL_257;
          }
          if (*(void *)a3 <= (unint64_t)v87 || *(_WORD *)v87 != 418) {
            goto LABEL_242;
          }
        }
      case 0x15u:
        if (v7 != 170) {
          goto LABEL_232;
        }
        uint64_t v93 = v6 - 2;
        while (1)
        {
          long long v94 = (unsigned __int8 *)(v93 + 2);
          uint64_t v155 = v93 + 2;
          unint64_t v95 = *(_DWORD **)(a1 + 304);
          if (v95 && (uint64_t v96 = *(int *)(a1 + 296), (int)v96 < *v95))
          {
            *(_DWORD *)(a1 + 296) = v96 + 1;
            uint64_t v97 = *(void *)&v95[2 * v96 + 2];
          }
          else
          {
            uint64_t v98 = sub_15C1B30(*v148);
            uint64_t v97 = sub_188CDC8((uint64_t)v148, (uint64_t)v98);
            long long v94 = (unsigned __int8 *)v155;
          }
          uint64_t v93 = (char *)sub_125CF74(a3, v97, v94);
          uint64_t v155 = v93;
          if (!v93) {
            goto LABEL_257;
          }
          if (*(void *)a3 <= (unint64_t)v93 || *(_WORD *)v93 != 426) {
            goto LABEL_242;
          }
        }
      case 0x16u:
        if (v7 != 178) {
          goto LABEL_232;
        }
        uint64_t v99 = v6 - 2;
        while (1)
        {
          unint64_t v100 = (unsigned __int8 *)(v99 + 2);
          uint64_t v155 = v99 + 2;
          uint64_t v101 = *(_DWORD **)(a1 + 328);
          if (v101 && (uint64_t v102 = *(int *)(a1 + 320), (int)v102 < *v101))
          {
            *(_DWORD *)(a1 + 320) = v102 + 1;
            uint64_t v103 = *(void *)&v101[2 * v102 + 2];
          }
          else
          {
            uint64_t v104 = sub_15C1B30(*v149);
            uint64_t v103 = sub_188CDC8((uint64_t)v149, (uint64_t)v104);
            unint64_t v100 = (unsigned __int8 *)v155;
          }
          uint64_t v99 = (char *)sub_125CF74(a3, v103, v100);
          uint64_t v155 = v99;
          if (!v99) {
            goto LABEL_257;
          }
          if (*(void *)a3 <= (unint64_t)v99 || *(_WORD *)v99 != 434) {
            goto LABEL_242;
          }
        }
      case 0x17u:
        if (v7 != 186) {
          goto LABEL_232;
        }
        uint64_t v105 = v6 - 2;
        while (1)
        {
          uint64_t v106 = (unsigned __int8 *)(v105 + 2);
          uint64_t v155 = v105 + 2;
          uint64_t v107 = *(_DWORD **)(a1 + 352);
          if (v107 && (uint64_t v108 = *(int *)(a1 + 344), (int)v108 < *v107))
          {
            *(_DWORD *)(a1 + 344) = v108 + 1;
            uint64_t v109 = *(void *)&v107[2 * v108 + 2];
          }
          else
          {
            uint64_t v110 = sub_15C1B30(*v150);
            uint64_t v109 = sub_188CDC8((uint64_t)v150, (uint64_t)v110);
            uint64_t v106 = (unsigned __int8 *)v155;
          }
          uint64_t v105 = (char *)sub_125CF74(a3, v109, v106);
          uint64_t v155 = v105;
          if (!v105) {
            goto LABEL_257;
          }
          if (*(void *)a3 <= (unint64_t)v105 || *(_WORD *)v105 != 442) {
            goto LABEL_242;
          }
        }
      case 0x18u:
        if (v7 != 194) {
          goto LABEL_232;
        }
        uint64_t v111 = v6 - 2;
        while (1)
        {
          uint64_t v112 = (unsigned __int8 *)(v111 + 2);
          uint64_t v155 = v111 + 2;
          uint64_t v113 = *(_DWORD **)(a1 + 376);
          if (v113 && (uint64_t v114 = *(int *)(a1 + 368), (int)v114 < *v113))
          {
            *(_DWORD *)(a1 + 368) = v114 + 1;
            uint64_t v115 = *(void *)&v113[2 * v114 + 2];
          }
          else
          {
            uint64_t v116 = sub_15C1B30(*v151);
            uint64_t v115 = sub_188CDC8((uint64_t)v151, (uint64_t)v116);
            uint64_t v112 = (unsigned __int8 *)v155;
          }
          uint64_t v111 = (char *)sub_125CF74(a3, v115, v112);
          uint64_t v155 = v111;
          if (!v111) {
            goto LABEL_257;
          }
          if (*(void *)a3 <= (unint64_t)v111 || *(_WORD *)v111 != 450) {
            goto LABEL_242;
          }
        }
      case 0x19u:
        if (v7 != 202) {
          goto LABEL_232;
        }
        uint64_t v117 = v6 - 2;
        while (1)
        {
          uint64_t v118 = (unsigned __int8 *)(v117 + 2);
          uint64_t v155 = v117 + 2;
          uint64_t v119 = *(_DWORD **)(a1 + 400);
          if (v119 && (uint64_t v120 = *(int *)(a1 + 392), (int)v120 < *v119))
          {
            *(_DWORD *)(a1 + 392) = v120 + 1;
            uint64_t v121 = *(void *)&v119[2 * v120 + 2];
          }
          else
          {
            uint64_t v122 = sub_178EBB0(*v152);
            uint64_t v121 = sub_188CDC8((uint64_t)v152, (uint64_t)v122);
            uint64_t v118 = (unsigned __int8 *)v155;
          }
          uint64_t v117 = (char *)sub_1745B24(a3, v121, v118);
          uint64_t v155 = v117;
          if (!v117) {
            goto LABEL_257;
          }
          if (*(void *)a3 <= (unint64_t)v117 || *(_WORD *)v117 != 458) {
            goto LABEL_242;
          }
        }
      case 0x1Au:
        if (v7 != 210) {
          goto LABEL_232;
        }
        uint64_t v123 = v6 - 2;
        while (1)
        {
          uint64_t v124 = (unsigned __int8 *)(v123 + 2);
          uint64_t v155 = v123 + 2;
          uint64_t v125 = *(_DWORD **)(a1 + 424);
          if (v125 && (uint64_t v126 = *(int *)(a1 + 416), (int)v126 < *v125))
          {
            *(_DWORD *)(a1 + 416) = v126 + 1;
            uint64_t v127 = *(void *)&v125[2 * v126 + 2];
          }
          else
          {
            uint64_t v128 = sub_17894DC(*v153);
            uint64_t v127 = sub_188CDC8((uint64_t)v153, v128);
            uint64_t v124 = (unsigned __int8 *)v155;
          }
          uint64_t v123 = (char *)sub_15435C4(a3, v127, v124);
          uint64_t v155 = v123;
          if (!v123) {
            goto LABEL_257;
          }
          if (*(void *)a3 <= (unint64_t)v123 || *(_WORD *)v123 != 466) {
            goto LABEL_242;
          }
        }
      case 0x1Bu:
        if (v7 != 218) {
          goto LABEL_232;
        }
        uint64_t v129 = v6 - 2;
        while (1)
        {
          uint64_t v130 = (unsigned __int8 *)(v129 + 2);
          uint64_t v155 = v129 + 2;
          unint64_t v131 = *(_DWORD **)(a1 + 448);
          if (v131 && (uint64_t v132 = *(int *)(a1 + 440), (int)v132 < *v131))
          {
            *(_DWORD *)(a1 + 440) = v132 + 1;
            uint64_t v133 = *(void *)&v131[2 * v132 + 2];
          }
          else
          {
            uint64_t v134 = sub_15C1B30(*v154);
            uint64_t v133 = sub_188CDC8((uint64_t)v154, (uint64_t)v134);
            uint64_t v130 = (unsigned __int8 *)v155;
          }
          uint64_t v129 = (char *)sub_125CF74(a3, v133, v130);
          uint64_t v155 = v129;
          if (!v129) {
            goto LABEL_257;
          }
          if (*(void *)a3 <= (unint64_t)v129 || *(_WORD *)v129 != 474) {
            goto LABEL_242;
          }
        }
      default:
LABEL_232:
        if (v7) {
          BOOL v135 = (v7 & 7) == 4;
        }
        else {
          BOOL v135 = 1;
        }
        if (!v135)
        {
          if ((v7 - 8000) >> 6 > 0x7C)
          {
            if (*v143)
            {
              unint64_t v136 = (std::string *)((*v143 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              unint64_t v136 = (std::string *)sub_188DBD8(v143);
              uint64_t v6 = v155;
            }
            uint64_t v31 = (char *)sub_1885AC0(v7, v136, v6, a3);
          }
          else
          {
            uint64_t v31 = (char *)sub_18859DC((uint64_t **)(a1 + 16), v7, v6, (uint64_t)&off_2547798, v143, a3);
          }
LABEL_241:
          uint64_t v155 = v31;
          if (!v31) {
            goto LABEL_257;
          }
LABEL_242:
          if (sub_11947B8((uint64_t)a3, &v155, a3[11].i32[1])) {
            goto LABEL_3;
          }
          continue;
        }
        if (v6) {
          a3[10].i32[0] = v7 - 1;
        }
        else {
LABEL_257:
        }
          uint64_t v155 = 0;
LABEL_3:
        *(_DWORD *)(a1 + 40) |= v144;
        return v155;
    }
  }
}

uint64_t sub_1745A94(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_15B3280(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_1745B24(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1781DE4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_1745BB4(uint64_t a1, unsigned char *a2, unint64_t *a3)
{
  int v6 = *(_DWORD *)(a1 + 56);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)a2) {
        a2 = sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 64) + 8 * i + 8);
      *a2 = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      a2[1] = v9;
      if (v9 > 0x7F) {
        int v10 = sub_188A9CC(v9, a2 + 1);
      }
      else {
        int v10 = a2 + 2;
      }
      a2 = sub_15B2EA4(v8, v10, a3);
    }
  }
  int v11 = *(_DWORD *)(a1 + 80);
  if (v11)
  {
    for (int j = 0; j != v11; ++j)
    {
      if (*a3 <= (unint64_t)a2) {
        a2 = sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v13 = *(void *)(*(void *)(a1 + 88) + 8 * j + 8);
      *a2 = 18;
      unsigned int v14 = *(_DWORD *)(v13 + 20);
      a2[1] = v14;
      if (v14 > 0x7F) {
        int v15 = sub_188A9CC(v14, a2 + 1);
      }
      else {
        int v15 = a2 + 2;
      }
      a2 = sub_15B2EA4(v13, v15, a3);
    }
  }
  int v16 = *(_DWORD *)(a1 + 104);
  if (v16)
  {
    for (int k = 0; k != v16; ++k)
    {
      if (*a3 <= (unint64_t)a2) {
        a2 = sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v18 = *(void *)(*(void *)(a1 + 112) + 8 * k + 8);
      *a2 = 26;
      unsigned int v19 = *(_DWORD *)(v18 + 44);
      a2[1] = v19;
      if (v19 > 0x7F) {
        uint64_t v20 = sub_188A9CC(v19, a2 + 1);
      }
      else {
        uint64_t v20 = a2 + 2;
      }
      a2 = sub_16FC618(v18, v20, a3);
    }
  }
  int v21 = *(_DWORD *)(a1 + 40);
  if ((v21 & 4) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      a2 = sub_188A3FC((uint64_t)a3, (int)a2);
    }
    uint64_t v22 = *(void *)(a1 + 472);
    *a2 = 34;
    unsigned int v23 = *(_DWORD *)(v22 + 44);
    a2[1] = v23;
    if (v23 > 0x7F) {
      unint64_t v24 = sub_188A9CC(v23, a2 + 1);
    }
    else {
      unint64_t v24 = a2 + 2;
    }
    a2 = sub_184B3AC(v22, v24, a3);
  }
  if ((v21 & 8) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      a2 = sub_188A3FC((uint64_t)a3, (int)a2);
    }
    uint64_t v25 = *(void *)(a1 + 480);
    *a2 = 42;
    unsigned int v26 = *(_DWORD *)(v25 + 44);
    a2[1] = v26;
    if (v26 > 0x7F) {
      uint64_t v27 = sub_188A9CC(v26, a2 + 1);
    }
    else {
      uint64_t v27 = a2 + 2;
    }
    a2 = sub_184B3AC(v25, v27, a3);
  }
  int v28 = *(_DWORD *)(a1 + 128);
  if (v28)
  {
    for (int m = 0; m != v28; ++m)
    {
      if (*a3 <= (unint64_t)a2) {
        a2 = sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v30 = *(void *)(*(void *)(a1 + 136) + 8 * m + 8);
      *a2 = 50;
      unsigned int v31 = *(_DWORD *)(v30 + 44);
      a2[1] = v31;
      if (v31 > 0x7F) {
        unint64_t v32 = sub_188A9CC(v31, a2 + 1);
      }
      else {
        unint64_t v32 = a2 + 2;
      }
      a2 = sub_1747D34(v30, v32, a3);
    }
  }
  int v33 = *(_DWORD *)(a1 + 152);
  if (v33)
  {
    for (int n = 0; n != v33; ++n)
    {
      if (*a3 <= (unint64_t)a2) {
        a2 = sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v35 = *(void *)(*(void *)(a1 + 160) + 8 * n + 8);
      *a2 = 58;
      unsigned int v36 = *(_DWORD *)(v35 + 20);
      a2[1] = v36;
      if (v36 > 0x7F) {
        uint64_t v37 = sub_188A9CC(v36, a2 + 1);
      }
      else {
        uint64_t v37 = a2 + 2;
      }
      a2 = sub_15B2EA4(v35, v37, a3);
    }
  }
  int v38 = *(_DWORD *)(a1 + 176);
  if (v38)
  {
    for (iint i = 0; ii != v38; ++ii)
    {
      if (*a3 <= (unint64_t)a2) {
        a2 = sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v40 = *(void *)(*(void *)(a1 + 184) + 8 * ii + 8);
      *a2 = 66;
      unsigned int v41 = *(_DWORD *)(v40 + 44);
      a2[1] = v41;
      if (v41 > 0x7F) {
        uint64_t v42 = sub_188A9CC(v41, a2 + 1);
      }
      else {
        uint64_t v42 = a2 + 2;
      }
      a2 = sub_184B3AC(v40, v42, a3);
    }
  }
  if ((v21 & 0x80) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      a2 = sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unsigned int v43 = *(_DWORD *)(a1 + 512);
    *a2 = 72;
    a2[1] = v43;
    if (v43 > 0x7F)
    {
      a2[1] = v43 | 0x80;
      unsigned int v44 = v43 >> 7;
      a2[2] = v43 >> 7;
      a2 += 3;
      if (v43 >= 0x4000)
      {
        do
        {
          *(a2 - 1) |= 0x80u;
          unsigned int v45 = v44 >> 14;
          v44 >>= 7;
          *a2++ = v44;
        }
        while (v45);
      }
    }
    else
    {
      a2 += 2;
    }
  }
  int v46 = *(_DWORD *)(a1 + 200);
  if (v46)
  {
    for (jint j = 0; jj != v46; ++jj)
    {
      if (*a3 <= (unint64_t)a2) {
        a2 = sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v48 = *(void *)(*(void *)(a1 + 208) + 8 * jj + 8);
      *a2 = 82;
      unsigned int v49 = *(_DWORD *)(v48 + 20);
      a2[1] = v49;
      if (v49 > 0x7F) {
        int v50 = sub_188A9CC(v49, a2 + 1);
      }
      else {
        int v50 = a2 + 2;
      }
      a2 = sub_15B2EA4(v48, v50, a3);
    }
  }
  int v51 = *(_DWORD *)(a1 + 224);
  if (v51)
  {
    for (kint k = 0; kk != v51; ++kk)
    {
      if (*a3 <= (unint64_t)a2) {
        a2 = sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v53 = *(void *)(*(void *)(a1 + 232) + 8 * kk + 8);
      *a2 = 90;
      unsigned int v54 = *(_DWORD *)(v53 + 20);
      a2[1] = v54;
      if (v54 > 0x7F) {
        int v55 = sub_188A9CC(v54, a2 + 1);
      }
      else {
        int v55 = a2 + 2;
      }
      a2 = sub_15B2EA4(v53, v55, a3);
    }
  }
  if ((v21 & 0x40) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      a2 = sub_188A3FC((uint64_t)a3, (int)a2);
    }
    uint64_t v56 = *(void *)(a1 + 504);
    *a2 = 97;
    *(void *)(a2 + 1) = v56;
    a2 += 9;
    if ((v21 & 1) == 0)
    {
LABEL_88:
      if ((v21 & 2) == 0) {
        goto LABEL_89;
      }
      goto LABEL_98;
    }
  }
  else if ((v21 & 1) == 0)
  {
    goto LABEL_88;
  }
  a2 = sub_117A0AC(a3, 13, (const void **)(*(void *)(a1 + 456) & 0xFFFFFFFFFFFFFFFELL), a2);
  if ((v21 & 2) == 0)
  {
LABEL_89:
    if ((v21 & 0x10) == 0) {
      goto LABEL_90;
    }
    goto LABEL_99;
  }
LABEL_98:
  a2 = sub_117A0AC(a3, 14, (const void **)(*(void *)(a1 + 464) & 0xFFFFFFFFFFFFFFFELL), a2);
  if ((v21 & 0x10) == 0)
  {
LABEL_90:
    if ((v21 & 0x100) == 0) {
      goto LABEL_91;
    }
    goto LABEL_105;
  }
LABEL_99:
  if (*a3 <= (unint64_t)a2) {
    a2 = sub_188A3FC((uint64_t)a3, (int)a2);
  }
  uint64_t v57 = *(void *)(a1 + 488);
  *a2 = 122;
  unsigned int v58 = *(_DWORD *)(v57 + 44);
  a2[1] = v58;
  if (v58 > 0x7F) {
    unint64_t v59 = sub_188A9CC(v58, a2 + 1);
  }
  else {
    unint64_t v59 = a2 + 2;
  }
  a2 = sub_177AE40(v57, v59, a3);
  if ((v21 & 0x100) == 0)
  {
LABEL_91:
    if ((v21 & 0x20) == 0) {
      goto LABEL_92;
    }
    goto LABEL_108;
  }
LABEL_105:
  if (*a3 <= (unint64_t)a2) {
    a2 = sub_188A3FC((uint64_t)a3, (int)a2);
  }
  char v60 = *(unsigned char *)(a1 + 516);
  *(_WORD *)a2 = 384;
  a2[2] = v60;
  a2 += 3;
  if ((v21 & 0x20) == 0)
  {
LABEL_92:
    if ((v21 & 0x200) == 0) {
      goto LABEL_120;
    }
    goto LABEL_114;
  }
LABEL_108:
  if (*a3 <= (unint64_t)a2) {
    a2 = sub_188A3FC((uint64_t)a3, (int)a2);
  }
  uint64_t v61 = *(void *)(a1 + 496);
  *(_WORD *)a2 = 394;
  unsigned int v62 = *(_DWORD *)(v61 + 44);
  a2[2] = v62;
  if (v62 > 0x7F) {
    uint64_t v63 = sub_188A9CC(v62, a2 + 2);
  }
  else {
    uint64_t v63 = a2 + 3;
  }
  a2 = sub_16FC618(v61, v63, a3);
  if ((v21 & 0x200) != 0)
  {
LABEL_114:
    if (*a3 <= (unint64_t)a2) {
      a2 = sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unint64_t v64 = *(int *)(a1 + 520);
    *(_WORD *)a2 = 400;
    a2[2] = v64;
    if (v64 > 0x7F)
    {
      a2[2] = v64 | 0x80;
      unint64_t v65 = v64 >> 7;
      a2[3] = v64 >> 7;
      a2 += 4;
      if (v64 >= 0x4000)
      {
        do
        {
          *(a2 - 1) |= 0x80u;
          unint64_t v66 = v65 >> 14;
          v65 >>= 7;
          *a2++ = v65;
        }
        while (v66);
      }
    }
    else
    {
      a2 += 3;
    }
  }
LABEL_120:
  int v67 = *(_DWORD *)(a1 + 248);
  if (v67)
  {
    for (mint m = 0; mm != v67; ++mm)
    {
      if (*a3 <= (unint64_t)a2) {
        a2 = sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v69 = *(void *)(*(void *)(a1 + 256) + 8 * mm + 8);
      *(_WORD *)a2 = 410;
      unsigned int v70 = *(_DWORD *)(v69 + 20);
      a2[2] = v70;
      if (v70 > 0x7F) {
        uint64_t v71 = sub_188A9CC(v70, a2 + 2);
      }
      else {
        uint64_t v71 = a2 + 3;
      }
      a2 = sub_15B3428(v69, v71, a3);
    }
  }
  int v72 = *(_DWORD *)(a1 + 272);
  if (v72)
  {
    for (nint n = 0; nn != v72; ++nn)
    {
      if (*a3 <= (unint64_t)a2) {
        a2 = sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v74 = *(void *)(*(void *)(a1 + 280) + 8 * nn + 8);
      *(_WORD *)a2 = 418;
      unsigned int v75 = *(_DWORD *)(v74 + 20);
      a2[2] = v75;
      if (v75 > 0x7F) {
        uint64_t v76 = sub_188A9CC(v75, a2 + 2);
      }
      else {
        uint64_t v76 = a2 + 3;
      }
      a2 = sub_15B2EA4(v74, v76, a3);
    }
  }
  int v77 = *(_DWORD *)(a1 + 296);
  if (v77)
  {
    for (int i1 = 0; i1 != v77; ++i1)
    {
      if (*a3 <= (unint64_t)a2) {
        a2 = sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v79 = *(void *)(*(void *)(a1 + 304) + 8 * i1 + 8);
      *(_WORD *)a2 = 426;
      unsigned int v80 = *(_DWORD *)(v79 + 20);
      a2[2] = v80;
      if (v80 > 0x7F) {
        uint64_t v81 = sub_188A9CC(v80, a2 + 2);
      }
      else {
        uint64_t v81 = a2 + 3;
      }
      a2 = sub_15B2EA4(v79, v81, a3);
    }
  }
  int v82 = *(_DWORD *)(a1 + 320);
  if (v82)
  {
    for (int i2 = 0; i2 != v82; ++i2)
    {
      if (*a3 <= (unint64_t)a2) {
        a2 = sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v84 = *(void *)(*(void *)(a1 + 328) + 8 * i2 + 8);
      *(_WORD *)a2 = 434;
      unsigned int v85 = *(_DWORD *)(v84 + 20);
      a2[2] = v85;
      if (v85 > 0x7F) {
        uint64_t v86 = sub_188A9CC(v85, a2 + 2);
      }
      else {
        uint64_t v86 = a2 + 3;
      }
      a2 = sub_15B2EA4(v84, v86, a3);
    }
  }
  int v87 = *(_DWORD *)(a1 + 344);
  if (v87)
  {
    for (int i3 = 0; i3 != v87; ++i3)
    {
      if (*a3 <= (unint64_t)a2) {
        a2 = sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v89 = *(void *)(*(void *)(a1 + 352) + 8 * i3 + 8);
      *(_WORD *)a2 = 442;
      unsigned int v90 = *(_DWORD *)(v89 + 20);
      a2[2] = v90;
      if (v90 > 0x7F) {
        uint64_t v91 = sub_188A9CC(v90, a2 + 2);
      }
      else {
        uint64_t v91 = a2 + 3;
      }
      a2 = sub_15B2EA4(v89, v91, a3);
    }
  }
  int v92 = *(_DWORD *)(a1 + 368);
  if (v92)
  {
    for (int i4 = 0; i4 != v92; ++i4)
    {
      if (*a3 <= (unint64_t)a2) {
        a2 = sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v94 = *(void *)(*(void *)(a1 + 376) + 8 * i4 + 8);
      *(_WORD *)a2 = 450;
      unsigned int v95 = *(_DWORD *)(v94 + 20);
      a2[2] = v95;
      if (v95 > 0x7F) {
        uint64_t v96 = sub_188A9CC(v95, a2 + 2);
      }
      else {
        uint64_t v96 = a2 + 3;
      }
      a2 = sub_15B2EA4(v94, v96, a3);
    }
  }
  int v97 = *(_DWORD *)(a1 + 392);
  if (v97)
  {
    for (int i5 = 0; i5 != v97; ++i5)
    {
      if (*a3 <= (unint64_t)a2) {
        a2 = sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v99 = *(void *)(*(void *)(a1 + 400) + 8 * i5 + 8);
      *(_WORD *)a2 = 458;
      unsigned int v100 = *(_DWORD *)(v99 + 20);
      a2[2] = v100;
      if (v100 > 0x7F) {
        uint64_t v101 = sub_188A9CC(v100, a2 + 2);
      }
      else {
        uint64_t v101 = a2 + 3;
      }
      a2 = sub_178230C(v99, v101, a3);
    }
  }
  int v102 = *(_DWORD *)(a1 + 416);
  if (v102)
  {
    for (int i6 = 0; i6 != v102; ++i6)
    {
      if (*a3 <= (unint64_t)a2) {
        a2 = sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v104 = *(void *)(*(void *)(a1 + 424) + 8 * i6 + 8);
      *(_WORD *)a2 = 466;
      unsigned int v105 = *(_DWORD *)(v104 + 44);
      a2[2] = v105;
      if (v105 > 0x7F) {
        uint64_t v106 = sub_188A9CC(v105, a2 + 2);
      }
      else {
        uint64_t v106 = a2 + 3;
      }
      a2 = sub_16FC618(v104, v106, a3);
    }
  }
  int v107 = *(_DWORD *)(a1 + 440);
  if (v107)
  {
    for (int i7 = 0; i7 != v107; ++i7)
    {
      if (*a3 <= (unint64_t)a2) {
        a2 = sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v109 = *(void *)(*(void *)(a1 + 448) + 8 * i7 + 8);
      *(_WORD *)a2 = 474;
      unsigned int v110 = *(_DWORD *)(v109 + 20);
      a2[2] = v110;
      if (v110 > 0x7F) {
        uint64_t v111 = sub_188A9CC(v110, a2 + 2);
      }
      else {
        uint64_t v111 = a2 + 3;
      }
      a2 = sub_15B2EA4(v109, v111, a3);
    }
  }
  if (*(_WORD *)(a1 + 26)) {
    a2 = sub_1886844(a1 + 16, 1000, 2000, a2, a3);
  }
  uint64_t v112 = *(void *)(a1 + 8);
  if ((v112 & 1) == 0) {
    return a2;
  }
  unint64_t v114 = v112 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v114 + 31) < 0)
  {
    uint64_t v115 = *(void **)(v114 + 8);
    uint64_t v116 = *(void *)(v114 + 16);
  }
  else
  {
    uint64_t v115 = (void *)(v114 + 8);
    LODWORD(v116) = *(unsigned __int8 *)(v114 + 31);
  }
  if ((uint64_t)(*a3 - (void)a2) >= (int)v116)
  {
    uint64_t v117 = (int)v116;
    memcpy(a2, v115, (int)v116);
    a2 += v117;
    return a2;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v115, v116, a2);
}

uint64_t sub_17468B4(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(int *)(a1 + 56);
  uint64_t v4 = v2 + v3;
  uint64_t v5 = *(void *)(a1 + 64);
  if (v5) {
    int v6 = (uint64_t *)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = sub_15B2F90(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  uint64_t v10 = *(int *)(a1 + 80);
  uint64_t v11 = v4 + v10;
  uint64_t v12 = *(void *)(a1 + 88);
  if (v12) {
    uint64_t v13 = (uint64_t *)(v12 + 8);
  }
  else {
    uint64_t v13 = 0;
  }
  if (v10)
  {
    uint64_t v14 = 8 * v10;
    do
    {
      uint64_t v15 = *v13++;
      uint64_t v16 = sub_15B2F90(v15);
      v11 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6);
      v14 -= 8;
    }
    while (v14);
  }
  uint64_t v17 = *(int *)(a1 + 104);
  uint64_t v18 = v11 + v17;
  uint64_t v19 = *(void *)(a1 + 112);
  if (v19) {
    uint64_t v20 = (uint64_t *)(v19 + 8);
  }
  else {
    uint64_t v20 = 0;
  }
  if (v17)
  {
    uint64_t v21 = 8 * v17;
    do
    {
      uint64_t v22 = *v20++;
      uint64_t v23 = sub_16FCA60(v22);
      v18 += v23 + ((9 * (__clz(v23 | 1) ^ 0x1F) + 73) >> 6);
      v21 -= 8;
    }
    while (v21);
  }
  uint64_t v24 = *(int *)(a1 + 128);
  uint64_t v25 = v18 + v24;
  uint64_t v26 = *(void *)(a1 + 136);
  if (v26) {
    uint64_t v27 = (uint64_t *)(v26 + 8);
  }
  else {
    uint64_t v27 = 0;
  }
  if (v24)
  {
    uint64_t v28 = 8 * v24;
    do
    {
      uint64_t v29 = *v27++;
      uint64_t v30 = sub_1748208(v29);
      v25 += v30 + ((9 * (__clz(v30 | 1) ^ 0x1F) + 73) >> 6);
      v28 -= 8;
    }
    while (v28);
  }
  uint64_t v31 = *(int *)(a1 + 152);
  uint64_t v32 = v25 + v31;
  uint64_t v33 = *(void *)(a1 + 160);
  if (v33) {
    uint64_t v34 = (uint64_t *)(v33 + 8);
  }
  else {
    uint64_t v34 = 0;
  }
  if (v31)
  {
    uint64_t v35 = 8 * v31;
    do
    {
      uint64_t v36 = *v34++;
      uint64_t v37 = sub_15B2F90(v36);
      v32 += v37 + ((9 * (__clz(v37 | 1) ^ 0x1F) + 73) >> 6);
      v35 -= 8;
    }
    while (v35);
  }
  uint64_t v38 = *(int *)(a1 + 176);
  uint64_t v39 = v32 + v38;
  uint64_t v40 = *(void *)(a1 + 184);
  if (v40) {
    unsigned int v41 = (uint64_t *)(v40 + 8);
  }
  else {
    unsigned int v41 = 0;
  }
  if (v38)
  {
    uint64_t v42 = 8 * v38;
    do
    {
      uint64_t v43 = *v41++;
      uint64_t v44 = sub_184B568(v43);
      v39 += v44 + ((9 * (__clz(v44 | 1) ^ 0x1F) + 73) >> 6);
      v42 -= 8;
    }
    while (v42);
  }
  uint64_t v45 = *(int *)(a1 + 200);
  uint64_t v46 = v39 + v45;
  uint64_t v47 = *(void *)(a1 + 208);
  if (v47) {
    uint64_t v48 = (uint64_t *)(v47 + 8);
  }
  else {
    uint64_t v48 = 0;
  }
  if (v45)
  {
    uint64_t v49 = 8 * v45;
    do
    {
      uint64_t v50 = *v48++;
      uint64_t v51 = sub_15B2F90(v50);
      v46 += v51 + ((9 * (__clz(v51 | 1) ^ 0x1F) + 73) >> 6);
      v49 -= 8;
    }
    while (v49);
  }
  uint64_t v52 = *(int *)(a1 + 224);
  uint64_t v53 = v46 + v52;
  uint64_t v54 = *(void *)(a1 + 232);
  if (v54) {
    int v55 = (uint64_t *)(v54 + 8);
  }
  else {
    int v55 = 0;
  }
  if (v52)
  {
    uint64_t v56 = 8 * v52;
    do
    {
      uint64_t v57 = *v55++;
      uint64_t v58 = sub_15B2F90(v57);
      v53 += v58 + ((9 * (__clz(v58 | 1) ^ 0x1F) + 73) >> 6);
      v56 -= 8;
    }
    while (v56);
  }
  uint64_t v59 = *(int *)(a1 + 248);
  uint64_t v60 = v53 + 2 * v59;
  uint64_t v61 = *(void *)(a1 + 256);
  if (v61) {
    unsigned int v62 = (uint64_t *)(v61 + 8);
  }
  else {
    unsigned int v62 = 0;
  }
  if (v59)
  {
    uint64_t v63 = 8 * v59;
    do
    {
      uint64_t v64 = *v62++;
      uint64_t v65 = sub_15B3514(v64);
      v60 += v65 + ((9 * (__clz(v65 | 1) ^ 0x1F) + 73) >> 6);
      v63 -= 8;
    }
    while (v63);
  }
  uint64_t v66 = *(int *)(a1 + 272);
  uint64_t v67 = v60 + 2 * v66;
  uint64_t v68 = *(void *)(a1 + 280);
  if (v68) {
    uint64_t v69 = (uint64_t *)(v68 + 8);
  }
  else {
    uint64_t v69 = 0;
  }
  if (v66)
  {
    uint64_t v70 = 8 * v66;
    do
    {
      uint64_t v71 = *v69++;
      uint64_t v72 = sub_15B2F90(v71);
      v67 += v72 + ((9 * (__clz(v72 | 1) ^ 0x1F) + 73) >> 6);
      v70 -= 8;
    }
    while (v70);
  }
  uint64_t v73 = *(int *)(a1 + 296);
  uint64_t v74 = v67 + 2 * v73;
  uint64_t v75 = *(void *)(a1 + 304);
  if (v75) {
    uint64_t v76 = (uint64_t *)(v75 + 8);
  }
  else {
    uint64_t v76 = 0;
  }
  if (v73)
  {
    uint64_t v77 = 8 * v73;
    do
    {
      uint64_t v78 = *v76++;
      uint64_t v79 = sub_15B2F90(v78);
      v74 += v79 + ((9 * (__clz(v79 | 1) ^ 0x1F) + 73) >> 6);
      v77 -= 8;
    }
    while (v77);
  }
  uint64_t v80 = *(int *)(a1 + 320);
  uint64_t v81 = v74 + 2 * v80;
  uint64_t v82 = *(void *)(a1 + 328);
  if (v82) {
    int v83 = (uint64_t *)(v82 + 8);
  }
  else {
    int v83 = 0;
  }
  if (v80)
  {
    uint64_t v84 = 8 * v80;
    do
    {
      uint64_t v85 = *v83++;
      uint64_t v86 = sub_15B2F90(v85);
      v81 += v86 + ((9 * (__clz(v86 | 1) ^ 0x1F) + 73) >> 6);
      v84 -= 8;
    }
    while (v84);
  }
  uint64_t v87 = *(int *)(a1 + 344);
  uint64_t v88 = v81 + 2 * v87;
  uint64_t v89 = *(void *)(a1 + 352);
  if (v89) {
    unsigned int v90 = (uint64_t *)(v89 + 8);
  }
  else {
    unsigned int v90 = 0;
  }
  if (v87)
  {
    uint64_t v91 = 8 * v87;
    do
    {
      uint64_t v92 = *v90++;
      uint64_t v93 = sub_15B2F90(v92);
      v88 += v93 + ((9 * (__clz(v93 | 1) ^ 0x1F) + 73) >> 6);
      v91 -= 8;
    }
    while (v91);
  }
  uint64_t v94 = *(int *)(a1 + 368);
  uint64_t v95 = v88 + 2 * v94;
  uint64_t v96 = *(void *)(a1 + 376);
  if (v96) {
    int v97 = (uint64_t *)(v96 + 8);
  }
  else {
    int v97 = 0;
  }
  if (v94)
  {
    uint64_t v98 = 8 * v94;
    do
    {
      uint64_t v99 = *v97++;
      uint64_t v100 = sub_15B2F90(v99);
      v95 += v100 + ((9 * (__clz(v100 | 1) ^ 0x1F) + 73) >> 6);
      v98 -= 8;
    }
    while (v98);
  }
  uint64_t v101 = *(int *)(a1 + 392);
  uint64_t v102 = v95 + 2 * v101;
  uint64_t v103 = *(void *)(a1 + 400);
  if (v103) {
    uint64_t v104 = (uint64_t *)(v103 + 8);
  }
  else {
    uint64_t v104 = 0;
  }
  if (v101)
  {
    uint64_t v105 = 8 * v101;
    do
    {
      uint64_t v106 = *v104++;
      uint64_t v107 = sub_17825FC(v106);
      v102 += v107 + ((9 * (__clz(v107 | 1) ^ 0x1F) + 73) >> 6);
      v105 -= 8;
    }
    while (v105);
  }
  uint64_t v108 = *(int *)(a1 + 416);
  uint64_t v109 = v102 + 2 * v108;
  uint64_t v110 = *(void *)(a1 + 424);
  if (v110) {
    uint64_t v111 = (uint64_t *)(v110 + 8);
  }
  else {
    uint64_t v111 = 0;
  }
  if (v108)
  {
    uint64_t v112 = 8 * v108;
    do
    {
      uint64_t v113 = *v111++;
      uint64_t v114 = sub_16FCA60(v113);
      v109 += v114 + ((9 * (__clz(v114 | 1) ^ 0x1F) + 73) >> 6);
      v112 -= 8;
    }
    while (v112);
  }
  uint64_t v115 = *(int *)(a1 + 440);
  uint64_t v116 = v109 + 2 * v115;
  uint64_t v117 = *(void *)(a1 + 448);
  if (v117) {
    uint64_t v118 = (uint64_t *)(v117 + 8);
  }
  else {
    uint64_t v118 = 0;
  }
  if (v115)
  {
    uint64_t v119 = 8 * v115;
    do
    {
      uint64_t v120 = *v118++;
      uint64_t v121 = sub_15B2F90(v120);
      v116 += v121 + ((9 * (__clz(v121 | 1) ^ 0x1F) + 73) >> 6);
      v119 -= 8;
    }
    while (v119);
  }
  int v122 = *(_DWORD *)(a1 + 40);
  if ((_BYTE)v122)
  {
    if (v122)
    {
      unint64_t v129 = *(void *)(a1 + 456) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v130 = *(unsigned __int8 *)(v129 + 23);
      uint64_t v131 = *(void *)(v129 + 8);
      if ((v130 & 0x80u) == 0) {
        uint64_t v131 = v130;
      }
      v116 += v131 + ((9 * (__clz(v131 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v122 & 2) == 0)
      {
LABEL_106:
        if ((v122 & 4) == 0) {
          goto LABEL_107;
        }
        goto LABEL_131;
      }
    }
    else if ((v122 & 2) == 0)
    {
      goto LABEL_106;
    }
    unint64_t v132 = *(void *)(a1 + 464) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v133 = *(unsigned __int8 *)(v132 + 23);
    uint64_t v134 = *(void *)(v132 + 8);
    if ((v133 & 0x80u) == 0) {
      uint64_t v134 = v133;
    }
    v116 += v134 + ((9 * (__clz(v134 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v122 & 4) == 0)
    {
LABEL_107:
      if ((v122 & 8) == 0) {
        goto LABEL_108;
      }
      goto LABEL_132;
    }
LABEL_131:
    uint64_t v135 = sub_184B568(*(void *)(a1 + 472));
    v116 += v135 + ((9 * (__clz(v135 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v122 & 8) == 0)
    {
LABEL_108:
      if ((v122 & 0x10) == 0) {
        goto LABEL_109;
      }
      goto LABEL_133;
    }
LABEL_132:
    uint64_t v136 = sub_184B568(*(void *)(a1 + 480));
    v116 += v136 + ((9 * (__clz(v136 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v122 & 0x10) == 0)
    {
LABEL_109:
      if ((v122 & 0x20) == 0)
      {
LABEL_111:
        if ((v122 & 0x40) != 0) {
          v116 += 9;
        }
        if ((v122 & 0x80) != 0) {
          v116 += ((9 * (__clz(*(_DWORD *)(a1 + 512) | 1) ^ 0x1F) + 73) >> 6) + 1;
        }
        goto LABEL_115;
      }
LABEL_110:
      uint64_t v123 = sub_16FCA60(*(void *)(a1 + 496));
      v116 += v123 + ((9 * (__clz(v123 | 1) ^ 0x1F) + 73) >> 6) + 2;
      goto LABEL_111;
    }
LABEL_133:
    uint64_t v137 = sub_177B260(*(void *)(a1 + 488));
    v116 += v137 + ((9 * (__clz(v137 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v122 & 0x20) == 0) {
      goto LABEL_111;
    }
    goto LABEL_110;
  }
LABEL_115:
  if ((v122 & 0x300) != 0)
  {
    if ((v122 & 0x100) != 0) {
      v116 += 3;
    }
    if ((v122 & 0x200) != 0)
    {
      int v124 = *(_DWORD *)(a1 + 520);
      uint64_t v125 = ((9 * (__clz(v124 | 1) ^ 0x1F) + 73) >> 6) + 2;
      if (v124 >= 0) {
        uint64_t v126 = v125;
      }
      else {
        uint64_t v126 = 12;
      }
      v116 += v126;
    }
  }
  uint64_t v127 = *(void *)(a1 + 8);
  if (v127)
  {
    unint64_t v138 = v127 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v138 + 31) < 0) {
      uint64_t v139 = *(void *)(v138 + 16);
    }
    else {
      uint64_t v139 = *(unsigned __int8 *)(v138 + 31);
    }
    v116 += v139;
  }
  *(_DWORD *)(a1 + 44) = v116;
  return v116;
}

void *sub_1747050@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PlaceCollection");
}

uint64_t sub_1747060(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  *(void *)(a1 + 8) = v5;
  *(void *)a1 = off_24D6818;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = a2;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = a2;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = a2;
  *(void *)(a1 + 104) = 0;
  *(void *)(a1 + 112) = 0;
  *(void *)(a1 + 120) = a2;
  *(void *)(a1 + 128) = 0;
  *(void *)(a1 + 136) = 0;
  *(void *)(a1 + 144) = a2;
  *(void *)(a1 + 152) = 0;
  *(void *)(a1 + 160) = 0;
  *(void *)(a1 + 168) = &qword_2550250;
  *(void *)(a1 + 176) = 0;
  *(void *)(a1 + 184) = 0;
  *(_WORD *)(a1 + 192) = 0;
  return a1;
}

void sub_17470F8(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_1747128(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = a1 + 16;
  *(void *)a1 = off_24D6818;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  int v6 = (uint64_t *)(a1 + 48);
  *(_DWORD *)(a1 + 68) = 0;
  *(void *)(a1 + 52) = 0;
  *(void *)(a1 + 60) = 0;
  *(void *)(a1 + 44) = 0;
  int v7 = *(_DWORD *)(a2 + 56);
  if (v7)
  {
    uint64_t v8 = *(void *)(a2 + 64);
    uint64_t v9 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_154B658(v6, v9, (uint64_t *)(v8 + 8), v7, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v10 = *(_DWORD *)(a1 + 56) + v7;
    *(_DWORD *)(a1 + 56) = v10;
    uint64_t v11 = *(int **)(a1 + 64);
    if (*v11 < v10) {
      *uint64_t v11 = v10;
    }
  }
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0;
  int v12 = *(_DWORD *)(a2 + 80);
  if (v12)
  {
    uint64_t v13 = *(void *)(a2 + 88);
    uint64_t v14 = (std::string **)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_12C1E38((std::string *)(a1 + 72), v14, (uint64_t *)(v13 + 8), v12, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v15 = *(_DWORD *)(a1 + 80) + v12;
    *(_DWORD *)(a1 + 80) = v15;
    uint64_t v16 = *(int **)(a1 + 88);
    if (*v16 < v15) {
      int *v16 = v15;
    }
  }
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 104) = 0;
  *(void *)(a1 + 112) = 0;
  int v17 = *(_DWORD *)(a2 + 104);
  if (v17)
  {
    uint64_t v18 = *(void *)(a2 + 112);
    uint64_t v19 = (std::string **)sub_188CCE4(a1 + 96, *(_DWORD *)(a2 + 104));
    sub_12C1E38((std::string *)(a1 + 96), v19, (uint64_t *)(v18 + 8), v17, **(_DWORD **)(a1 + 112) - *(_DWORD *)(a1 + 104));
    int v20 = *(_DWORD *)(a1 + 104) + v17;
    *(_DWORD *)(a1 + 104) = v20;
    uint64_t v21 = *(int **)(a1 + 112);
    if (*v21 < v20) {
      *uint64_t v21 = v20;
    }
  }
  *(void *)(a1 + 120) = 0;
  *(void *)(a1 + 128) = 0;
  *(void *)(a1 + 136) = 0;
  int v22 = *(_DWORD *)(a2 + 128);
  if (v22)
  {
    uint64_t v23 = *(void *)(a2 + 136);
    uint64_t v24 = (std::string **)sub_188CCE4(a1 + 120, *(_DWORD *)(a2 + 128));
    sub_1872494((std::string *)(a1 + 120), v24, (uint64_t *)(v23 + 8), v22, **(_DWORD **)(a1 + 136) - *(_DWORD *)(a1 + 128));
    int v25 = *(_DWORD *)(a1 + 128) + v22;
    *(_DWORD *)(a1 + 128) = v25;
    uint64_t v26 = *(int **)(a1 + 136);
    if (*v26 < v25) {
      int *v26 = v25;
    }
  }
  *(void *)(a1 + 144) = 0;
  *(void *)(a1 + 152) = 0;
  *(void *)(a1 + 160) = 0;
  int v27 = *(_DWORD *)(a2 + 152);
  if (v27)
  {
    uint64_t v28 = *(void *)(a2 + 160);
    uint64_t v29 = (std::string **)sub_188CCE4(a1 + 144, *(_DWORD *)(a2 + 152));
    sub_12C1E38((std::string *)(a1 + 144), v29, (uint64_t *)(v28 + 8), v27, **(_DWORD **)(a1 + 160) - *(_DWORD *)(a1 + 152));
    int v30 = *(_DWORD *)(a1 + 152) + v27;
    *(_DWORD *)(a1 + 152) = v30;
    uint64_t v31 = *(int **)(a1 + 160);
    if (*v31 < v30) {
      *uint64_t v31 = v30;
    }
  }
  uint64_t v32 = *(void *)(a2 + 8);
  if (v32) {
    sub_188B4F8(v4, (v32 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v5, a2 + 16);
  *(void *)(a1 + 168) = &qword_2550250;
  int v33 = *(_DWORD *)(a2 + 40);
  if (v33)
  {
    uint64_t v34 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v34 = (uint64_t *)*v34;
    }
    sub_1881DF4((std::string **)(a1 + 168), (long long *)(*(void *)(a2 + 168) & 0xFFFFFFFFFFFFFFFELL), v34);
    int v33 = *(_DWORD *)(a2 + 40);
  }
  if ((v33 & 2) != 0) {
    operator new();
  }
  *(void *)(a1 + 176) = 0;
  if ((v33 & 4) != 0) {
    operator new();
  }
  *(void *)(a1 + 184) = 0;
  *(_WORD *)(a1 + 192) = *(_WORD *)(a2 + 192);
  return a1;
}

void sub_174749C()
{
}

uint64_t sub_1747570(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_12;
    }
  }
  else if (v4)
  {
    goto LABEL_12;
  }
  uint64_t v5 = (void ***)(a1 + 168);
  if (*(uint64_t **)(a1 + 168) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_25479A8)
  {
    uint64_t v6 = *(void *)(a1 + 176);
    if (v6)
    {
      sub_184AFBC(v6);
      operator delete();
    }
    uint64_t v7 = *(void *)(a1 + 184);
    if (v7)
    {
      sub_170FB28(v7);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_12:
  sub_12C1DB8((void *)(a1 + 144));
  sub_187063C((void *)(a1 + 120));
  sub_12C1DB8((void *)(a1 + 96));
  sub_12C1DB8((void *)(a1 + 72));
  sub_154B128((void *)(a1 + 48));
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17476A0(uint64_t a1)
{
  sub_1747570(a1);

  operator delete();
}

uint64_t sub_17476D8(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unsigned int v62 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v62, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (unsigned __int8 *)(*(void *)v62 + 1);
    unsigned int v9 = **(unsigned char **)v62;
    if ((char)**(unsigned char **)v62 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        uint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v62, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (unsigned __int8 *)(*(void *)v62 + 2);
      }
    }
    *(void *)unsigned int v62 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_85;
        }
        *(_DWORD *)(a1 + 40) |= 2u;
        uint64_t v12 = *(void *)(a1 + 176);
        if (!v12)
        {
          uint64_t v13 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v13 = (void *)*v13;
          }
          uint64_t v12 = sub_185089C((uint64_t)v13);
          *(void *)(a1 + 176) = v12;
          uint64_t v8 = *(unsigned __int8 **)v62;
        }
        uint64_t v14 = (uint64_t)sub_12688D0(a3, v12, v8);
        goto LABEL_94;
      case 2u:
        if (v9 != 18) {
          goto LABEL_85;
        }
        int v15 = v8 - 1;
        while (1)
        {
          uint64_t v16 = v15 + 1;
          *(void *)unsigned int v62 = v15 + 1;
          int v17 = *(_DWORD **)(a1 + 64);
          if (v17 && (uint64_t v18 = *(int *)(a1 + 56), (int)v18 < *v17))
          {
            *(_DWORD *)(a1 + 56) = v18 + 1;
            uint64_t v19 = *(void *)&v17[2 * v18 + 2];
          }
          else
          {
            uint64_t v20 = sub_17894DC(*(void *)(a1 + 48));
            uint64_t v19 = sub_188CDC8(a1 + 48, v20);
            uint64_t v16 = *(unsigned __int8 **)v62;
          }
          int v15 = (unsigned __int8 *)sub_15435C4(a3, v19, v16);
          *(void *)unsigned int v62 = v15;
          if (!v15) {
            goto LABEL_104;
          }
          if (*(void *)a3 <= (unint64_t)v15 || *v15 != 18) {
            goto LABEL_95;
          }
        }
      case 3u:
        if (v9 != 26) {
          goto LABEL_85;
        }
        uint64_t v21 = v8 - 1;
        while (1)
        {
          int v22 = v21 + 1;
          *(void *)unsigned int v62 = v21 + 1;
          uint64_t v23 = *(_DWORD **)(a1 + 88);
          if (v23 && (uint64_t v24 = *(int *)(a1 + 80), (int)v24 < *v23))
          {
            *(_DWORD *)(a1 + 80) = v24 + 1;
            uint64_t v25 = *(void *)&v23[2 * v24 + 2];
          }
          else
          {
            uint64_t v26 = sub_15C1B30(*(void *)(a1 + 72));
            uint64_t v25 = sub_188CDC8(a1 + 72, (uint64_t)v26);
            int v22 = *(unsigned __int8 **)v62;
          }
          uint64_t v21 = (unsigned __int8 *)sub_125CF74(a3, v25, v22);
          *(void *)unsigned int v62 = v21;
          if (!v21) {
            goto LABEL_104;
          }
          if (*(void *)a3 <= (unint64_t)v21 || *v21 != 26) {
            goto LABEL_95;
          }
        }
      case 4u:
        if (v9 != 34) {
          goto LABEL_85;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        uint64_t v27 = *(void *)(a1 + 8);
        uint64_t v28 = (uint64_t *)(v27 & 0xFFFFFFFFFFFFFFFCLL);
        if (v27) {
          uint64_t v28 = (uint64_t *)*v28;
        }
        uint64_t v29 = (std::string *)sub_1880F84((void *)(a1 + 168), v28);
        uint64_t v14 = (uint64_t)sub_188C244(v29, *(char **)v62, (uint64_t)a3);
        goto LABEL_94;
      case 5u:
        if (v9 != 40) {
          goto LABEL_85;
        }
        v5 |= 8u;
        int v30 = (char *)(v8 + 1);
        uint64_t v31 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_43;
        }
        int v32 = *v30;
        uint64_t v31 = v31 + (v32 << 7) - 128;
        if (v32 < 0)
        {
          uint64_t v58 = sub_188C138((uint64_t)v8, v31);
          *(void *)unsigned int v62 = v58;
          *(unsigned char *)(a1 + 192) = v59 != 0;
          if (!v58) {
            goto LABEL_104;
          }
        }
        else
        {
          int v30 = (char *)(v8 + 2);
LABEL_43:
          *(void *)unsigned int v62 = v30;
          *(unsigned char *)(a1 + 192) = v31 != 0;
        }
        goto LABEL_95;
      case 6u:
        if (v9 != 50) {
          goto LABEL_85;
        }
        int v33 = v8 - 1;
        while (1)
        {
          uint64_t v34 = v33 + 1;
          *(void *)unsigned int v62 = v33 + 1;
          uint64_t v35 = *(_DWORD **)(a1 + 112);
          if (v35 && (uint64_t v36 = *(int *)(a1 + 104), (int)v36 < *v35))
          {
            *(_DWORD *)(a1 + 104) = v36 + 1;
            uint64_t v37 = *(void *)&v35[2 * v36 + 2];
          }
          else
          {
            uint64_t v38 = sub_15C1B30(*(void *)(a1 + 96));
            uint64_t v37 = sub_188CDC8(a1 + 96, (uint64_t)v38);
            uint64_t v34 = *(unsigned __int8 **)v62;
          }
          int v33 = (unsigned __int8 *)sub_125CF74(a3, v37, v34);
          *(void *)unsigned int v62 = v33;
          if (!v33) {
            goto LABEL_104;
          }
          if (*(void *)a3 <= (unint64_t)v33 || *v33 != 50) {
            goto LABEL_95;
          }
        }
      case 7u:
        if (v9 != 58) {
          goto LABEL_85;
        }
        uint64_t v39 = v8 - 1;
        while (1)
        {
          uint64_t v40 = v39 + 1;
          *(void *)unsigned int v62 = v39 + 1;
          unsigned int v41 = *(_DWORD **)(a1 + 136);
          if (v41 && (uint64_t v42 = *(int *)(a1 + 128), (int)v42 < *v41))
          {
            *(_DWORD *)(a1 + 128) = v42 + 1;
            uint64_t v43 = *(void *)&v41[2 * v42 + 2];
          }
          else
          {
            uint64_t v44 = sub_15C1BB4(*(void *)(a1 + 120));
            uint64_t v43 = sub_188CDC8(a1 + 120, (uint64_t)v44);
            uint64_t v40 = *(unsigned __int8 **)v62;
          }
          uint64_t v39 = (unsigned __int8 *)sub_1745A94(a3, v43, v40);
          *(void *)unsigned int v62 = v39;
          if (!v39) {
            goto LABEL_104;
          }
          if (*(void *)a3 <= (unint64_t)v39 || *v39 != 58) {
            goto LABEL_95;
          }
        }
      case 8u:
        if (v9 != 66) {
          goto LABEL_85;
        }
        uint64_t v45 = v8 - 1;
        while (1)
        {
          uint64_t v46 = v45 + 1;
          *(void *)unsigned int v62 = v45 + 1;
          uint64_t v47 = *(_DWORD **)(a1 + 160);
          if (v47 && (uint64_t v48 = *(int *)(a1 + 152), (int)v48 < *v47))
          {
            *(_DWORD *)(a1 + 152) = v48 + 1;
            uint64_t v49 = *(void *)&v47[2 * v48 + 2];
          }
          else
          {
            uint64_t v50 = sub_15C1B30(*(void *)(a1 + 144));
            uint64_t v49 = sub_188CDC8(a1 + 144, (uint64_t)v50);
            uint64_t v46 = *(unsigned __int8 **)v62;
          }
          uint64_t v45 = (unsigned __int8 *)sub_125CF74(a3, v49, v46);
          *(void *)unsigned int v62 = v45;
          if (!v45) {
            goto LABEL_104;
          }
          if (*(void *)a3 <= (unint64_t)v45 || *v45 != 66) {
            goto LABEL_95;
          }
        }
      case 9u:
        if (v9 != 74) {
          goto LABEL_85;
        }
        *(_DWORD *)(a1 + 40) |= 4u;
        uint64_t v51 = *(void **)(a1 + 184);
        if (!v51)
        {
          uint64_t v52 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v52 = (void *)*v52;
          }
          uint64_t v51 = sub_178A5CC((uint64_t)v52);
          *(void *)(a1 + 184) = v51;
          uint64_t v8 = *(unsigned __int8 **)v62;
        }
        uint64_t v14 = sub_1543654(a3, (uint64_t)v51, v8);
        goto LABEL_94;
      case 0xAu:
        if (v9 != 80) {
          goto LABEL_85;
        }
        v5 |= 0x10u;
        uint64_t v53 = (char *)(v8 + 1);
        uint64_t v54 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_84;
        }
        int v55 = *v53;
        uint64_t v54 = v54 + (v55 << 7) - 128;
        if (v55 < 0)
        {
          uint64_t v60 = sub_188C138((uint64_t)v8, v54);
          *(void *)unsigned int v62 = v60;
          *(unsigned char *)(a1 + 193) = v61 != 0;
          if (!v60) {
            goto LABEL_104;
          }
        }
        else
        {
          uint64_t v53 = (char *)(v8 + 2);
LABEL_84:
          *(void *)unsigned int v62 = v53;
          *(unsigned char *)(a1 + 193) = v54 != 0;
        }
        goto LABEL_95;
      default:
LABEL_85:
        if (v9) {
          BOOL v56 = (v9 & 7) == 4;
        }
        else {
          BOOL v56 = 1;
        }
        if (!v56)
        {
          if ((v9 - 8000) >> 6 > 0x7C)
          {
            if (*v7)
            {
              uint64_t v57 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              uint64_t v57 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              uint64_t v8 = *(unsigned __int8 **)v62;
            }
            uint64_t v14 = (uint64_t)sub_1885AC0(v9, v57, (char *)v8, a3);
          }
          else
          {
            uint64_t v14 = (uint64_t)sub_18859DC((uint64_t **)(a1 + 16), v9, (char *)v8, (uint64_t)&off_25479A8, (uint64_t *)(a1 + 8), a3);
          }
LABEL_94:
          *(void *)unsigned int v62 = v14;
          if (!v14) {
            goto LABEL_104;
          }
LABEL_95:
          if (sub_11947B8((uint64_t)a3, (char **)v62, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_104:
        }
          *(void *)unsigned int v62 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 40) |= v5;
        return *(void *)v62;
    }
  }
}

char *sub_1747D34(uint64_t a1, char *a2, unint64_t *a3)
{
  uint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    uint64_t v7 = *(void *)(a1 + 176);
    *uint64_t v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 44);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    uint64_t v4 = sub_184B3AC(v7, v9, a3);
  }
  int v10 = *(_DWORD *)(a1 + 56);
  if (v10)
  {
    for (int i = 0; i != v10; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v12 = *(void *)(*(void *)(a1 + 64) + 8 * i + 8);
      *uint64_t v4 = 18;
      unsigned int v13 = *(_DWORD *)(v12 + 44);
      v4[1] = v13;
      if (v13 > 0x7F) {
        uint64_t v14 = sub_188A9CC(v13, v4 + 1);
      }
      else {
        uint64_t v14 = v4 + 2;
      }
      uint64_t v4 = sub_16FC618(v12, v14, a3);
    }
  }
  int v15 = *(_DWORD *)(a1 + 80);
  if (v15)
  {
    for (int j = 0; j != v15; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v17 = *(void *)(*(void *)(a1 + 88) + 8 * j + 8);
      *uint64_t v4 = 26;
      unsigned int v18 = *(_DWORD *)(v17 + 20);
      v4[1] = v18;
      if (v18 > 0x7F) {
        uint64_t v19 = sub_188A9CC(v18, v4 + 1);
      }
      else {
        uint64_t v19 = v4 + 2;
      }
      uint64_t v4 = sub_15B2EA4(v17, v19, a3);
    }
  }
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 168) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v20 = *(unsigned char *)(a1 + 192);
    *uint64_t v4 = 40;
    v4[1] = v20;
    v4 += 2;
  }
  int v21 = *(_DWORD *)(a1 + 104);
  if (v21)
  {
    for (int k = 0; k != v21; ++k)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v23 = *(void *)(*(void *)(a1 + 112) + 8 * k + 8);
      *uint64_t v4 = 50;
      unsigned int v24 = *(_DWORD *)(v23 + 20);
      v4[1] = v24;
      if (v24 > 0x7F) {
        uint64_t v25 = sub_188A9CC(v24, v4 + 1);
      }
      else {
        uint64_t v25 = v4 + 2;
      }
      uint64_t v4 = sub_15B2EA4(v23, v25, a3);
    }
  }
  int v26 = *(_DWORD *)(a1 + 128);
  if (v26)
  {
    for (int m = 0; m != v26; ++m)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v28 = *(void *)(*(void *)(a1 + 136) + 8 * m + 8);
      *uint64_t v4 = 58;
      unsigned int v29 = *(_DWORD *)(v28 + 20);
      v4[1] = v29;
      if (v29 > 0x7F) {
        int v30 = sub_188A9CC(v29, v4 + 1);
      }
      else {
        int v30 = v4 + 2;
      }
      uint64_t v4 = sub_15B3428(v28, v30, a3);
    }
  }
  int v31 = *(_DWORD *)(a1 + 152);
  if (v31)
  {
    for (int n = 0; n != v31; ++n)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v33 = *(void *)(*(void *)(a1 + 160) + 8 * n + 8);
      *uint64_t v4 = 66;
      unsigned int v34 = *(_DWORD *)(v33 + 20);
      v4[1] = v34;
      if (v34 > 0x7F) {
        uint64_t v35 = sub_188A9CC(v34, v4 + 1);
      }
      else {
        uint64_t v35 = v4 + 2;
      }
      uint64_t v4 = sub_15B2EA4(v33, v35, a3);
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v36 = *(void *)(a1 + 184);
    *uint64_t v4 = 74;
    unsigned int v37 = *(_DWORD *)(v36 + 44);
    v4[1] = v37;
    if (v37 > 0x7F) {
      uint64_t v38 = sub_188A9CC(v37, v4 + 1);
    }
    else {
      uint64_t v38 = v4 + 2;
    }
    uint64_t v4 = sub_17101D4(v36, v38, a3);
  }
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v39 = *(unsigned char *)(a1 + 193);
    *uint64_t v4 = 80;
    v4[1] = v39;
    v4 += 2;
  }
  if (*(_WORD *)(a1 + 26)) {
    uint64_t v4 = sub_1886844(a1 + 16, 1000, 2000, v4, a3);
  }
  uint64_t v40 = *(void *)(a1 + 8);
  if ((v40 & 1) == 0) {
    return v4;
  }
  unint64_t v42 = v40 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v42 + 31) < 0)
  {
    uint64_t v43 = *(void **)(v42 + 8);
    uint64_t v44 = *(void *)(v42 + 16);
  }
  else
  {
    uint64_t v43 = (void *)(v42 + 8);
    LODWORD(v44) = *(unsigned __int8 *)(v42 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v44)
  {
    uint64_t v45 = (int)v44;
    memcpy(v4, v43, (int)v44);
    v4 += v45;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v43, v44, v4);
}

uint64_t sub_1748208(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(int *)(a1 + 56);
  uint64_t v4 = v2 + v3;
  uint64_t v5 = *(void *)(a1 + 64);
  if (v5) {
    int v6 = (uint64_t *)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = sub_16FCA60(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  uint64_t v10 = *(int *)(a1 + 80);
  uint64_t v11 = v4 + v10;
  uint64_t v12 = *(void *)(a1 + 88);
  if (v12) {
    unsigned int v13 = (uint64_t *)(v12 + 8);
  }
  else {
    unsigned int v13 = 0;
  }
  if (v10)
  {
    uint64_t v14 = 8 * v10;
    do
    {
      uint64_t v15 = *v13++;
      uint64_t v16 = sub_15B2F90(v15);
      v11 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6);
      v14 -= 8;
    }
    while (v14);
  }
  uint64_t v17 = *(int *)(a1 + 104);
  uint64_t v18 = v11 + v17;
  uint64_t v19 = *(void *)(a1 + 112);
  if (v19) {
    char v20 = (uint64_t *)(v19 + 8);
  }
  else {
    char v20 = 0;
  }
  if (v17)
  {
    uint64_t v21 = 8 * v17;
    do
    {
      uint64_t v22 = *v20++;
      uint64_t v23 = sub_15B2F90(v22);
      v18 += v23 + ((9 * (__clz(v23 | 1) ^ 0x1F) + 73) >> 6);
      v21 -= 8;
    }
    while (v21);
  }
  uint64_t v24 = *(int *)(a1 + 128);
  uint64_t v25 = v18 + v24;
  uint64_t v26 = *(void *)(a1 + 136);
  if (v26) {
    uint64_t v27 = (uint64_t *)(v26 + 8);
  }
  else {
    uint64_t v27 = 0;
  }
  if (v24)
  {
    uint64_t v28 = 8 * v24;
    do
    {
      uint64_t v29 = *v27++;
      uint64_t v30 = sub_15B3514(v29);
      v25 += v30 + ((9 * (__clz(v30 | 1) ^ 0x1F) + 73) >> 6);
      v28 -= 8;
    }
    while (v28);
  }
  uint64_t v31 = *(int *)(a1 + 152);
  uint64_t v32 = v25 + v31;
  uint64_t v33 = *(void *)(a1 + 160);
  if (v33) {
    unsigned int v34 = (uint64_t *)(v33 + 8);
  }
  else {
    unsigned int v34 = 0;
  }
  if (v31)
  {
    uint64_t v35 = 8 * v31;
    do
    {
      uint64_t v36 = *v34++;
      uint64_t v37 = sub_15B2F90(v36);
      v32 += v37 + ((9 * (__clz(v37 | 1) ^ 0x1F) + 73) >> 6);
      v35 -= 8;
    }
    while (v35);
  }
  int v38 = *(_DWORD *)(a1 + 40);
  if ((v38 & 0x1F) != 0)
  {
    if (v38)
    {
      unint64_t v43 = *(void *)(a1 + 168) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v44 = *(unsigned __int8 *)(v43 + 23);
      uint64_t v45 = *(void *)(v43 + 8);
      if ((v44 & 0x80u) == 0) {
        uint64_t v45 = v44;
      }
      v32 += v45 + ((9 * (__clz(v45 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v38 & 2) == 0)
      {
LABEL_34:
        if ((v38 & 4) == 0)
        {
LABEL_36:
          uint64_t v40 = v32 + 2;
          if ((v38 & 8) == 0) {
            uint64_t v40 = v32;
          }
          if ((v38 & 0x10) != 0) {
            uint64_t v32 = v40 + 2;
          }
          else {
            uint64_t v32 = v40;
          }
          goto LABEL_41;
        }
LABEL_35:
        uint64_t v39 = sub_1710450(*(void *)(a1 + 184));
        v32 += v39 + ((9 * (__clz(v39 | 1) ^ 0x1F) + 73) >> 6) + 1;
        goto LABEL_36;
      }
    }
    else if ((v38 & 2) == 0)
    {
      goto LABEL_34;
    }
    uint64_t v46 = sub_184B568(*(void *)(a1 + 176));
    v32 += v46 + ((9 * (__clz(v46 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v38 & 4) == 0) {
      goto LABEL_36;
    }
    goto LABEL_35;
  }
LABEL_41:
  uint64_t v41 = *(void *)(a1 + 8);
  if (v41)
  {
    unint64_t v47 = v41 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v47 + 31) < 0) {
      uint64_t v48 = *(void *)(v47 + 16);
    }
    else {
      uint64_t v48 = *(unsigned __int8 *)(v47 + 31);
    }
    v32 += v48;
  }
  *(_DWORD *)(a1 + 44) = v32;
  return v32;
}

void *sub_17484D0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PlaceCollectionItem");
}

uint64_t sub_17484E0(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_2547A70)
  {
    int v6 = *(void **)(a1 + 24);
    if (v6)
    {
      sub_16FBA2C(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1748598(uint64_t a1)
{
  sub_17484E0(a1);

  operator delete();
}

uint64_t sub_17485D0(uint64_t result)
{
  uint64_t v1 = result;
  if (*(unsigned char *)(result + 16)) {
    uint64_t result = sub_16FBBF0(*(void *)(result + 24));
  }
  char v3 = *(unsigned char *)(v1 + 8);
  uint64_t v2 = v1 + 8;
  *(_DWORD *)(v2 + 24) = 0;
  *(_DWORD *)(v2 + 8) = 0;
  if (v3)
  {
    return sub_188B4AC((uint64_t *)v2);
  }
  return result;
}

char *sub_1748630(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v23 = a2;
  if (sub_11947B8((uint64_t)a3, &v23, a3[11].i32[1])) {
    return v23;
  }
  int v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v23 + 1;
    unsigned int v8 = *v23;
    if (*v23 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v23, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v23 + 2;
      }
    }
    uint64_t v23 = v7;
    if (v8 >> 3 != 2) {
      break;
    }
    if (v8 != 18) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v15 = *(void *)(a1 + 24);
    if (!v15)
    {
      uint64_t v16 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        uint64_t v16 = (void *)*v16;
      }
      uint64_t v15 = sub_17894DC((uint64_t)v16);
      *(void *)(a1 + 24) = v15;
      uint64_t v7 = v23;
    }
    uint64_t v14 = (char *)sub_15435C4(a3, v15, (unsigned __int8 *)v7);
LABEL_26:
    uint64_t v23 = v14;
    if (!v14) {
      return 0;
    }
LABEL_34:
    if (sub_11947B8((uint64_t)a3, &v23, a3[11].i32[1])) {
      return v23;
    }
  }
  if (v8 >> 3 == 1 && v8 == 8)
  {
    uint64_t v17 = v7 + 1;
    unint64_t v18 = *v7;
    if ((*v7 & 0x80000000) == 0) {
      goto LABEL_31;
    }
    int v19 = *v17;
    int v20 = v18 + (v19 << 7);
    unint64_t v18 = (v20 - 128);
    if (v19 < 0)
    {
      uint64_t v23 = (char *)sub_188C138((uint64_t)v7, (v20 - 128));
      if (!v23) {
        return 0;
      }
      unint64_t v18 = v21;
    }
    else
    {
      uint64_t v17 = v7 + 2;
LABEL_31:
      uint64_t v23 = v17;
    }
    if (v18 > 2)
    {
      if (*v6) {
        uint64_t v22 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        uint64_t v22 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      sub_188C020(1, v18, v22);
    }
    else
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      *(_DWORD *)(a1 + 32) = v18;
    }
    goto LABEL_34;
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      unsigned int v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unsigned int v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = v23;
    }
    uint64_t v14 = (char *)sub_1885AC0(v8, v13, v7, a3);
    goto LABEL_26;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v23;
  }
  return 0;
}

unsigned char *sub_1748840(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 32);
    *uint64_t v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 24);
    *uint64_t v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 44);
    v4[1] = v11;
    if (v11 > 0x7F) {
      BOOL v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      BOOL v12 = v4 + 2;
    }
    uint64_t v4 = sub_16FC618(v10, v12, a3);
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    uint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    uint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_17489CC(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 3) == 0)
  {
    uint64_t result = 0;
    goto LABEL_11;
  }
  if (v2)
  {
    uint64_t v4 = sub_16FCA60(*(void *)(a1 + 24));
    uint64_t result = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_11;
    }
  }
  else
  {
    uint64_t result = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_11;
    }
  }
  int v5 = *(_DWORD *)(a1 + 32);
  if (v5 < 0) {
    uint64_t v6 = 11;
  }
  else {
    uint64_t v6 = ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  result += v6;
LABEL_11:
  uint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    unint64_t v8 = v7 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v8 + 31) < 0) {
      uint64_t v9 = *(void *)(v8 + 16);
    }
    else {
      uint64_t v9 = *(unsigned __int8 *)(v8 + 31);
    }
    result += v9;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

void sub_1748A9C(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 3) != 0)
  {
    if (v4)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v5 = *(void *)(a1 + 24);
      if (!v5)
      {
        uint64_t v6 = *(void *)(a1 + 8);
        uint64_t v7 = (void *)(v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (v6) {
          uint64_t v7 = (void *)*v7;
        }
        uint64_t v5 = sub_17894DC((uint64_t)v7);
        *(void *)(a1 + 24) = v5;
      }
      if (*(void *)(a2 + 24)) {
        unint64_t v8 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        unint64_t v8 = &off_2546190;
      }
      sub_16FCCEC(v5, (uint64_t)v8);
    }
    if ((v4 & 2) != 0) {
      *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
    }
    *(_DWORD *)(a1 + 16) |= v4;
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_1748B6C(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 1;
  }
  uint64_t result = sub_16FD18C(*(void *)(a1 + 24));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_1748B98@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.GuideLocationImage");
}

uint64_t sub_1748BA8(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  *(void *)(a1 + 8) = v5;
  *(void *)a1 = off_24D6918;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = a2;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = 0;
  *(_DWORD *)(a1 + 80) = 0;
  return a1;
}

void sub_1748C1C(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_1748C4C(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = a1 + 16;
  *(void *)a1 = off_24D6918;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  uint64_t v6 = (uint64_t *)(a1 + 48);
  *(_DWORD *)(a1 + 68) = 0;
  *(void *)(a1 + 52) = 0;
  *(void *)(a1 + 60) = 0;
  *(void *)(a1 + 44) = 0;
  int v7 = *(_DWORD *)(a2 + 56);
  if (v7)
  {
    uint64_t v8 = *(void *)(a2 + 64);
    uint64_t v9 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_1871CEC(v6, v9, (uint64_t *)(v8 + 8), v7, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v10 = *(_DWORD *)(a1 + 56) + v7;
    *(_DWORD *)(a1 + 56) = v10;
    unsigned int v11 = *(int **)(a1 + 64);
    if (*v11 < v10) {
      *unsigned int v11 = v10;
    }
  }
  uint64_t v12 = *(void *)(a2 + 8);
  if (v12) {
    sub_188B4F8(v4, (v12 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v5, a2 + 16);
  if (*(unsigned char *)(a2 + 40)) {
    operator new();
  }
  *(void *)(a1 + 72) = 0;
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  return a1;
}

void sub_1748D9C()
{
}

uint64_t sub_1748E0C(uint64_t a1)
{
  char v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_2547A98)
  {
    uint64_t v6 = *(void **)(a1 + 72);
    if (v6)
    {
      sub_16FBA2C(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  sub_186FF3C((void *)(a1 + 48));
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1748ED8(uint64_t a1)
{
  sub_1748E0C(a1);

  operator delete();
}

char *sub_1748F10(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v30 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v30, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v30 + 1;
    unsigned int v9 = *v30;
    if (*v30 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v30, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v30 + 2;
      }
    }
    uint64_t v30 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 == 3) {
      break;
    }
    if (v12 != 2)
    {
      if (v12 != 1 || v9 != 10) {
        goto LABEL_14;
      }
      *(_DWORD *)(a1 + 40) |= 1u;
      uint64_t v25 = *(void *)(a1 + 72);
      if (!v25)
      {
        uint64_t v26 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          uint64_t v26 = (void *)*v26;
        }
        uint64_t v25 = sub_17894DC((uint64_t)v26);
        *(void *)(a1 + 72) = v25;
        uint64_t v8 = v30;
      }
      unint64_t v15 = (char *)sub_15435C4(a3, v25, (unsigned __int8 *)v8);
LABEL_43:
      uint64_t v30 = v15;
      if (!v15) {
        goto LABEL_51;
      }
      goto LABEL_44;
    }
    if (v9 != 16) {
      goto LABEL_14;
    }
    v5 |= 2u;
    uint64_t v22 = v8 + 1;
    int v23 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_34;
    }
    int v24 = *v22;
    int v23 = v23 + (v24 << 7) - 128;
    if ((v24 & 0x80000000) == 0)
    {
      uint64_t v22 = v8 + 2;
LABEL_34:
      uint64_t v30 = v22;
      *(_DWORD *)(a1 + 80) = v23;
      goto LABEL_44;
    }
    uint64_t v28 = (char *)sub_188C0D0((uint64_t)v8, v23);
    uint64_t v30 = v28;
    *(_DWORD *)(a1 + 80) = v29;
    if (!v28) {
      goto LABEL_51;
    }
LABEL_44:
    if (sub_11947B8((uint64_t)a3, &v30, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 == 26)
  {
    uint64_t v16 = v8 - 1;
    while (1)
    {
      uint64_t v17 = (unsigned __int8 *)(v16 + 1);
      uint64_t v30 = v16 + 1;
      uint64_t v18 = *(_DWORD **)(a1 + 64);
      if (v18 && (uint64_t v19 = *(int *)(a1 + 56), (int)v19 < *v18))
      {
        *(_DWORD *)(a1 + 56) = v19 + 1;
        uint64_t v20 = *(void *)&v18[2 * v19 + 2];
      }
      else
      {
        uint64_t v21 = sub_178B6A4(*(void *)(a1 + 48));
        uint64_t v20 = sub_188CDC8(a1 + 48, v21);
        uint64_t v17 = (unsigned __int8 *)v30;
      }
      uint64_t v16 = sub_17035B0(a3, v20, v17);
      uint64_t v30 = v16;
      if (!v16) {
        goto LABEL_51;
      }
      if (*(void *)a3 <= (unint64_t)v16 || *v16 != 26) {
        goto LABEL_44;
      }
    }
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if ((v9 - 8000) >> 6 > 0x7C)
    {
      if (*v7)
      {
        uint64_t v27 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        uint64_t v27 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        uint64_t v8 = v30;
      }
      unint64_t v15 = (char *)sub_1885AC0(v9, v27, v8, a3);
    }
    else
    {
      unint64_t v15 = (char *)sub_18859DC((uint64_t **)(a1 + 16), v9, v8, (uint64_t)&off_2547A98, (uint64_t *)(a1 + 8), a3);
    }
    goto LABEL_43;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_51:
  uint64_t v30 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 40) |= v5;
  return v30;
}

char *sub_17491D8(uint64_t a1, char *a2, unint64_t *a3)
{
  int v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if (v6)
  {
    if (*a3 <= (unint64_t)a2) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    uint64_t v7 = *(void *)(a1 + 72);
    *int v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 44);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    int v4 = sub_16FC618(v7, v9, a3);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 80);
    *int v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v13 = *(_DWORD *)(a1 + 56);
  if (v13)
  {
    for (int i = 0; i != v13; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v15 = *(void *)(*(void *)(a1 + 64) + 8 * i + 8);
      *int v4 = 26;
      unsigned int v16 = *(_DWORD *)(v15 + 20);
      v4[1] = v16;
      if (v16 > 0x7F) {
        uint64_t v17 = sub_188A9CC(v16, v4 + 1);
      }
      else {
        uint64_t v17 = v4 + 2;
      }
      int v4 = sub_1748840(v15, (unint64_t)v17, a3);
    }
  }
  if (*(_WORD *)(a1 + 26)) {
    int v4 = sub_1886844(a1 + 16, 1000, 2000, v4, a3);
  }
  uint64_t v18 = *(void *)(a1 + 8);
  if ((v18 & 1) == 0) {
    return v4;
  }
  unint64_t v20 = v18 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v20 + 31) < 0)
  {
    uint64_t v21 = *(void **)(v20 + 8);
    uint64_t v22 = *(void *)(v20 + 16);
  }
  else
  {
    uint64_t v21 = (void *)(v20 + 8);
    LODWORD(v22) = *(unsigned __int8 *)(v20 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v22)
  {
    uint64_t v23 = (int)v22;
    memcpy(v4, v21, (int)v22);
    v4 += v23;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v21, v22, v4);
}

uint64_t sub_1749424(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(int *)(a1 + 56);
  uint64_t v4 = v2 + v3;
  uint64_t v5 = *(void *)(a1 + 64);
  if (v5) {
    int v6 = (uint64_t *)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = sub_17489CC(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  int v10 = *(_DWORD *)(a1 + 40);
  if ((v10 & 3) != 0)
  {
    if (v10)
    {
      uint64_t v11 = sub_16FCA60(*(void *)(a1 + 72));
      v4 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v10 & 2) != 0) {
      v4 += ((9 * (__clz(*(_DWORD *)(a1 + 80) | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  uint64_t v12 = *(void *)(a1 + 8);
  if (v12)
  {
    unint64_t v14 = v12 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v14 + 31) < 0) {
      uint64_t v15 = *(void *)(v14 + 16);
    }
    else {
      uint64_t v15 = *(unsigned __int8 *)(v14 + 31);
    }
    v4 += v15;
  }
  *(_DWORD *)(a1 + 44) = v4;
  return v4;
}

void *sub_174953C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.GuideGroup");
}

uint64_t sub_174954C(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (void *)(a1 + 8);
  *(void *)a1 = off_24D6998;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 24) = &qword_2550250;
  int v6 = *(_DWORD *)(a2 + 16);
  if (v6)
  {
    uint64_t v7 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v7 = (uint64_t *)*v7;
    }
    sub_1881DF4((std::string **)(a1 + 24), (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL), v7);
    int v6 = *(_DWORD *)(a2 + 16);
  }
  if ((v6 & 2) != 0) {
    operator new();
  }
  *(void *)(a1 + 32) = 0;
  return a1;
}

void sub_1749630()
{
}

uint64_t sub_1749680(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_2547AF0)
  {
    uint64_t v6 = *(void *)(a1 + 32);
    if (v6)
    {
      sub_1703DA0(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_174974C(uint64_t a1)
{
  sub_1749680(a1);

  operator delete();
}

uint64_t sub_1749784(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v21 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v21, a3[11].i32[1])) {
    return *(void *)v21;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = (unsigned __int8 *)(*(void *)v21 + 1);
    unsigned int v8 = **(unsigned char **)v21;
    if ((char)**(unsigned char **)v21 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if ((char)*v7 < 0)
      {
        uint64_t v7 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v21, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (unsigned __int8 *)(*(void *)v21 + 2);
      }
    }
    *(void *)uint64_t v21 = v7;
    if (v8 >> 3 != 2) {
      break;
    }
    if (v8 != 18) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v15 = *(void *)(a1 + 8);
    unsigned int v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
    if (v15) {
      unsigned int v16 = (uint64_t *)*v16;
    }
    uint64_t v17 = (std::string *)sub_1880F84((void *)(a1 + 24), v16);
    unint64_t v14 = (void *)sub_188C244(v17, *(char **)v21, (uint64_t)a3);
LABEL_29:
    *(void *)uint64_t v21 = v14;
    if (!v14) {
      goto LABEL_35;
    }
    if (sub_11947B8((uint64_t)a3, (char **)v21, a3[11].i32[1])) {
      return *(void *)v21;
    }
  }
  if (v8 >> 3 == 1 && v8 == 10)
  {
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v18 = *(void *)(a1 + 32);
    if (!v18)
    {
      uint64_t v19 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        uint64_t v19 = (void *)*v19;
      }
      sub_1789B90((uint64_t)v19);
      uint64_t v18 = v20;
      *(void *)(a1 + 32) = v20;
      uint64_t v7 = *(unsigned __int8 **)v21;
    }
    unint64_t v14 = sub_1706220(a3, v18, v7);
    goto LABEL_29;
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      int v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      int v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = *(unsigned __int8 **)v21;
    }
    unint64_t v14 = sub_1885AC0(v8, v13, (char *)v7, a3);
    goto LABEL_29;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v21;
  }
LABEL_35:
  *(void *)uint64_t v21 = 0;
  return *(void *)v21;
}

unsigned char *sub_1749944(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 32);
    *uint64_t v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    uint64_t v4 = sub_17044FC(v7, (unint64_t)v9, a3);
  }
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v10 = *(void *)(a1 + 8);
  if ((v10 & 1) == 0) {
    return v4;
  }
  unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v12 + 31) < 0)
  {
    int v13 = *(void **)(v12 + 8);
    uint64_t v14 = *(void *)(v12 + 16);
  }
  else
  {
    int v13 = (void *)(v12 + 8);
    LODWORD(v14) = *(unsigned __int8 *)(v12 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v14)
  {
    uint64_t v15 = (int)v14;
    memcpy(v4, v13, (int)v14);
    v4 += v15;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v13, v14, v4);
}

uint64_t sub_1749A80(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 3) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_10;
  }
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_10;
    }
LABEL_9:
    uint64_t v7 = sub_17048E4(*(void *)(a1 + 32));
    v3 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    goto LABEL_10;
  }
  unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
  uint64_t v6 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    uint64_t v6 = v5;
  }
  uint64_t v3 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 2) != 0) {
    goto LABEL_9;
  }
LABEL_10:
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v3 += v11;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

void *sub_1749B64@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.ExploreGuides");
}

uint64_t sub_1749B74(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  *(void *)(a1 + 8) = v5;
  *(void *)a1 = off_24D6A18;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 40) = a2;
  *(_DWORD *)(a1 + 64) = 0;
  return a1;
}

void sub_1749BE4(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_1749C14(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  unint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = a1 + 16;
  *(void *)a1 = off_24D6A18;
  *(_DWORD *)(a1 + 24) = 0;
  uint64_t v6 = (uint64_t *)(a1 + 40);
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  int v7 = *(_DWORD *)(a2 + 48);
  if (v7)
  {
    uint64_t v8 = *(void *)(a2 + 56);
    unsigned int v9 = (uint64_t *)sub_188CCE4(a1 + 40, *(_DWORD *)(a2 + 48));
    sub_12C4B74(v6, v9, (uint64_t *)(v8 + 8), v7, **(_DWORD **)(a1 + 56) - *(_DWORD *)(a1 + 48));
    int v10 = *(_DWORD *)(a1 + 48) + v7;
    *(_DWORD *)(a1 + 48) = v10;
    uint64_t v11 = *(int **)(a1 + 56);
    if (*v11 < v10) {
      *uint64_t v11 = v10;
    }
  }
  *(_DWORD *)(a1 + 64) = 0;
  uint64_t v12 = *(void *)(a2 + 8);
  if (v12) {
    sub_188B4F8(v4, (v12 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v5, a2 + 16);
  return a1;
}

void sub_1749D14(_Unwind_Exception *a1)
{
  sub_1882CC0(v3);
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_1749D64(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_12C45E8(a1 + 5);
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1749DEC(void *a1)
{
  sub_1749D64(a1);

  operator delete();
}

char *sub_1749E24(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v20 = a2;
  if ((sub_11947B8((uint64_t)a3, &v20, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v5 = (void *)(a1 + 8);
    while (1)
    {
      uint64_t v6 = v20 + 1;
      unsigned int v7 = *v20;
      if (*v20 < 0)
      {
        unsigned int v8 = v7 + (*v6 << 7);
        unsigned int v7 = v8 - 128;
        if (*v6 < 0)
        {
          uint64_t v6 = (char *)sub_188C180((uint64_t)v20, v8 - 128);
          unsigned int v7 = v9;
        }
        else
        {
          uint64_t v6 = v20 + 2;
        }
      }
      uint64_t v20 = v6;
      if (v7 == 10)
      {
        uint64_t v12 = v6 - 1;
        while (1)
        {
          int v13 = (unsigned __int8 *)(v12 + 1);
          uint64_t v20 = v12 + 1;
          uint64_t v14 = *(_DWORD **)(a1 + 56);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 48), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 48) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            uint64_t v17 = sub_185089C(*(void *)(a1 + 40));
            uint64_t v16 = sub_188CDC8(a1 + 40, v17);
            int v13 = (unsigned __int8 *)v20;
          }
          uint64_t v12 = sub_12688D0(a3, v16, v13);
          uint64_t v20 = v12;
          if (!v12) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_27;
          }
        }
      }
      if (!v7 || (v7 & 7) == 4) {
        break;
      }
      if ((v7 - 8000) >> 6 > 0x7C)
      {
        if (*v5)
        {
          uint64_t v18 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else
        {
          uint64_t v18 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          uint64_t v6 = v20;
        }
        uint64_t v11 = sub_1885AC0(v7, v18, v6, a3);
      }
      else
      {
        uint64_t v11 = sub_18859DC((uint64_t **)(a1 + 16), v7, v6, (uint64_t)&off_2547B18, (uint64_t *)(a1 + 8), a3);
      }
      uint64_t v20 = (char *)v11;
      if (!v11) {
        return 0;
      }
LABEL_27:
      if (sub_11947B8((uint64_t)a3, &v20, a3[11].i32[1])) {
        return v20;
      }
    }
    if (v6)
    {
      a3[10].i32[0] = v7 - 1;
      return v20;
    }
    return 0;
  }
  return v20;
}

char *sub_174A008(uint64_t a1, char *a2, _DWORD *a3)
{
  int v6 = *(_DWORD *)(a1 + 48);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 56) + 8 * i + 8);
      *a2 = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 44);
      a2[1] = v9;
      if (v9 > 0x7F) {
        int v10 = sub_188A9CC(v9, a2 + 1);
      }
      else {
        int v10 = a2 + 2;
      }
      a2 = sub_184B3AC(v8, v10, a3);
    }
  }
  if (*(_WORD *)(a1 + 26)) {
    a2 = sub_1886844(a1 + 16, 1000, 2000, a2, a3);
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return a2;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    uint64_t v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    uint64_t v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*(void *)a3 - (void)a2 >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(a2, v14, (int)v15);
    a2 += v16;
    return a2;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, a2);
}

uint64_t sub_174A170(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(int *)(a1 + 48);
  uint64_t v4 = v2 + v3;
  uint64_t v5 = *(void *)(a1 + 56);
  if (v5) {
    int v6 = (uint64_t *)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = sub_184B568(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  uint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v12 + 31) < 0) {
      uint64_t v13 = *(void *)(v12 + 16);
    }
    else {
      uint64_t v13 = *(unsigned __int8 *)(v12 + 31);
    }
    v4 += v13;
  }
  *(_DWORD *)(a1 + 64) = v4;
  return v4;
}

void *sub_174A224@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.CollectionIds");
}

uint64_t sub_174A234(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (void *)(a1 + 8);
  *(void *)a1 = off_24D6A98;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 24) = &qword_2550250;
  int v6 = *(_DWORD *)(a2 + 16);
  if (v6)
  {
    uint64_t v7 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v7 = (uint64_t *)*v7;
    }
    sub_1881DF4((std::string **)(a1 + 24), (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL), v7);
    int v6 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 32) = &qword_2550250;
  if ((v6 & 2) != 0)
  {
    uint64_t v8 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v8 = (uint64_t *)*v8;
    }
    sub_1881DF4((std::string **)(a1 + 32), (long long *)(*(void *)(a2 + 32) & 0xFFFFFFFFFFFFFFFELL), v8);
    int v6 = *(_DWORD *)(a2 + 16);
  }
  if ((v6 & 4) != 0) {
    operator new();
  }
  *(void *)(a1 + 40) = 0;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  return a1;
}

void sub_174A350()
{
}

uint64_t sub_174A3A0(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_12;
    }
  }
  else if (v4)
  {
    goto LABEL_12;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if ((uint64_t (***)())a1 != &off_2547B60 && *(void *)(a1 + 40))
  {
    sub_15B10B4();
    operator delete();
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_12:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_174A488(uint64_t a1)
{
  sub_174A3A0(a1);

  operator delete();
}

uint64_t sub_174A4C0(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v27 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v27, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (unsigned __int8 *)(*(void *)v27 + 1);
    unsigned int v9 = **(unsigned char **)v27;
    if ((char)**(unsigned char **)v27 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        uint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v27, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (unsigned __int8 *)(*(void *)v27 + 2);
      }
    }
    *(void *)uint64_t v27 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_29;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        unint64_t v12 = *(void **)(a1 + 40);
        if (!v12)
        {
          uint64_t v13 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v13 = (void *)*v13;
          }
          unint64_t v12 = sub_15C1974((uint64_t)v13);
          *(void *)(a1 + 40) = v12;
          uint64_t v8 = *(unsigned __int8 **)v27;
        }
        uint64_t v14 = sub_11FF4E8(a3, (uint64_t)v12, v8);
        goto LABEL_36;
      case 2u:
        if (v9 != 18) {
          goto LABEL_29;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v15 = *(void *)(a1 + 8);
        uint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          uint64_t v16 = (uint64_t *)*v16;
        }
        uint64_t v17 = (void *)(a1 + 24);
        goto LABEL_23;
      case 3u:
        if (v9 != 26) {
          goto LABEL_29;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v18 = *(void *)(a1 + 8);
        uint64_t v16 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
        if (v18) {
          uint64_t v16 = (uint64_t *)*v16;
        }
        uint64_t v17 = (void *)(a1 + 32);
LABEL_23:
        uint64_t v19 = (std::string *)sub_1880F84(v17, v16);
        uint64_t v14 = (void *)sub_188C244(v19, *(char **)v27, (uint64_t)a3);
        goto LABEL_36;
      case 4u:
        if (v9 != 32) {
          goto LABEL_29;
        }
        v5 |= 8u;
        uint64_t v20 = (char *)(v8 + 1);
        uint64_t v21 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_28;
        }
        int v22 = *v20;
        uint64_t v21 = v21 + (v22 << 7) - 128;
        if (v22 < 0)
        {
          uint64_t v25 = sub_188C138((uint64_t)v8, v21);
          *(void *)uint64_t v27 = v25;
          *(unsigned char *)(a1 + 48) = v26 != 0;
          if (!v25) {
            goto LABEL_44;
          }
        }
        else
        {
          uint64_t v20 = (char *)(v8 + 2);
LABEL_28:
          *(void *)uint64_t v27 = v20;
          *(unsigned char *)(a1 + 48) = v21 != 0;
        }
        goto LABEL_37;
      default:
LABEL_29:
        if (v9) {
          BOOL v23 = (v9 & 7) == 4;
        }
        else {
          BOOL v23 = 1;
        }
        if (!v23)
        {
          if (*v7)
          {
            int v24 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            int v24 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = *(unsigned __int8 **)v27;
          }
          uint64_t v14 = sub_1885AC0(v9, v24, (char *)v8, a3);
LABEL_36:
          *(void *)uint64_t v27 = v14;
          if (!v14) {
            goto LABEL_44;
          }
LABEL_37:
          if (sub_11947B8((uint64_t)a3, (char **)v27, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_44:
        }
          *(void *)uint64_t v27 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v27;
    }
  }
}

unsigned char *sub_174A76C(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 40);
    *uint64_t v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    uint64_t v4 = sub_15B1284(v7, (unint64_t)v9, a3);
    if ((v6 & 1) == 0)
    {
LABEL_3:
      if ((v6 & 2) == 0) {
        goto LABEL_4;
      }
      goto LABEL_13;
    }
  }
  else if ((v6 & 1) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 2) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_17;
    }
    goto LABEL_14;
  }
LABEL_13:
  uint64_t v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 8) == 0) {
    goto LABEL_17;
  }
LABEL_14:
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v10 = *(unsigned char *)(a1 + 48);
  *uint64_t v4 = 32;
  v4[1] = v10;
  v4 += 2;
LABEL_17:
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return v4;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    uint64_t v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    uint64_t v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(v4, v14, (int)v15);
    v4 += v16;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v14, v15, v4);
}

uint64_t sub_174A910(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0xF) == 0)
  {
    uint64_t result = 0;
    goto LABEL_17;
  }
  if (v2)
  {
    unint64_t v5 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
    uint64_t v7 = *(void *)(v5 + 8);
    if ((v6 & 0x80u) == 0) {
      uint64_t v7 = v6;
    }
    uint64_t v3 = v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_9:
    unint64_t v8 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v9 = *(unsigned __int8 *)(v8 + 23);
    uint64_t v10 = *(void *)(v8 + 8);
    if ((v9 & 0x80u) == 0) {
      uint64_t v10 = v9;
    }
    v3 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v2 & 4) != 0)
  {
    uint64_t v11 = sub_15B13A0(*(void *)(a1 + 40));
    v3 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  if ((v2 & 8) != 0) {
    uint64_t result = v3 + 2;
  }
  else {
    uint64_t result = v3;
  }
LABEL_17:
  uint64_t v12 = *(void *)(a1 + 8);
  if (v12)
  {
    unint64_t v13 = v12 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v13 + 31) < 0) {
      uint64_t v14 = *(void *)(v13 + 16);
    }
    else {
      uint64_t v14 = *(unsigned __int8 *)(v13 + 31);
    }
    result += v14;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

void *sub_174AA48@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.ISO3166Code");
}

uint64_t sub_174AA58(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  *(void *)(a1 + 8) = v5;
  *(void *)a1 = off_24D6B18;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = a2;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = a2;
  *(_DWORD *)(a1 + 88) = 0;
  return a1;
}

void sub_174AACC(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_174AAFC(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = a1 + 16;
  *(void *)a1 = off_24D6B18;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  uint64_t v6 = (uint64_t *)(a1 + 48);
  *(_DWORD *)(a1 + 68) = 0;
  *(void *)(a1 + 52) = 0;
  *(void *)(a1 + 60) = 0;
  *(void *)(a1 + 44) = 0;
  int v7 = *(_DWORD *)(a2 + 56);
  if (v7)
  {
    uint64_t v8 = *(void *)(a2 + 64);
    uint64_t v9 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_12C4B74(v6, v9, (uint64_t *)(v8 + 8), v7, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v10 = *(_DWORD *)(a1 + 56) + v7;
    *(_DWORD *)(a1 + 56) = v10;
    uint64_t v11 = *(int **)(a1 + 64);
    if (*v11 < v10) {
      *uint64_t v11 = v10;
    }
  }
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0;
  int v12 = *(_DWORD *)(a2 + 72);
  if (v12)
  {
    sub_188C80C((unsigned int *)(a1 + 72), v12);
    unint64_t v13 = *(void **)(a1 + 80);
    *(_DWORD *)(a1 + 72) += *(_DWORD *)(a2 + 72);
    memcpy(v13, *(const void **)(a2 + 80), 4 * *(int *)(a2 + 72));
  }
  uint64_t v14 = *(void *)(a2 + 8);
  if (v14) {
    sub_188B4F8(v4, (v14 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v5, a2 + 16);
  *(_DWORD *)(a1 + 88) = *(_DWORD *)(a2 + 88);
  return a1;
}

void sub_174AC50(_Unwind_Exception *a1)
{
  sub_12C45E8(v4);
  sub_1882CC0(v3);
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_174ACB0(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1889DA8((uint64_t)(a1 + 9));
  sub_12C45E8(a1 + 6);
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_174AD40(void *a1)
{
  sub_174ACB0(a1);

  operator delete();
}

char *sub_174AD78(uint64_t a1, char *a2, int32x2_t *a3)
{
  unsigned int v34 = a2;
  if (sub_11947B8((uint64_t)a3, &v34, a3[11].i32[1])) {
    return v34;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    int v7 = v34 + 1;
    unsigned int v8 = *v34;
    if (*v34 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        int v7 = (char *)sub_188C180((uint64_t)v34, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        int v7 = v34 + 2;
      }
    }
    unsigned int v34 = v7;
    unsigned int v11 = v8 >> 3;
    if (v8 >> 3 != 3)
    {
      if (v11 != 2)
      {
        if (v11 == 1 && v8 == 10)
        {
          uint64_t v25 = v7 - 1;
          while (1)
          {
            uint64_t v26 = (unsigned __int8 *)(v25 + 1);
            unsigned int v34 = v25 + 1;
            uint64_t v27 = *(_DWORD **)(a1 + 64);
            if (v27 && (uint64_t v28 = *(int *)(a1 + 56), (int)v28 < *v27))
            {
              *(_DWORD *)(a1 + 56) = v28 + 1;
              uint64_t v29 = *(void *)&v27[2 * v28 + 2];
            }
            else
            {
              uint64_t v30 = sub_185089C(*(void *)(a1 + 48));
              uint64_t v29 = sub_188CDC8(a1 + 48, v30);
              uint64_t v26 = (unsigned __int8 *)v34;
            }
            uint64_t v25 = sub_12688D0(a3, v29, v26);
            unsigned int v34 = v25;
            if (!v25) {
              return 0;
            }
            if (*(void *)a3 <= (unint64_t)v25 || *v25 != 10) {
              goto LABEL_54;
            }
          }
        }
        goto LABEL_14;
      }
      if (v8 != 16) {
        goto LABEL_14;
      }
      uint64_t v21 = v7 + 1;
      unint64_t v22 = *v7;
      if (*v7 < 0)
      {
        int v23 = *v21;
        int v24 = v22 + (v23 << 7);
        unint64_t v22 = (v24 - 128);
        if (v23 < 0)
        {
          unsigned int v34 = (char *)sub_188C138((uint64_t)v7, (v24 - 128));
          if (!v34) {
            return 0;
          }
          unint64_t v22 = v32;
          goto LABEL_39;
        }
        uint64_t v21 = v7 + 2;
      }
      unsigned int v34 = v21;
LABEL_39:
      if (v22 > 4)
      {
        if (*v6) {
          uint64_t v33 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          uint64_t v33 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        sub_188C020(2, v22, v33);
      }
      else
      {
        *(_DWORD *)(a1 + 40) |= 1u;
        *(_DWORD *)(a1 + 88) = v22;
      }
      goto LABEL_54;
    }
    if (v8 == 24)
    {
      uint64_t v15 = v7 - 1;
      while (1)
      {
        unsigned int v34 = v15 + 1;
        int v16 = v15[1];
        if (v15[1] < 0)
        {
          int v17 = v16 + (v15[2] << 7);
          int v16 = v17 - 128;
          if (v15[2] < 0)
          {
            uint64_t v15 = (char *)sub_188C0D0((uint64_t)(v15 + 1), v17 - 128);
            int v16 = v18;
          }
          else
          {
            v15 += 3;
          }
        }
        else
        {
          v15 += 2;
        }
        unsigned int v34 = v15;
        uint64_t v19 = *(unsigned int *)(a1 + 72);
        if (v19 == *(_DWORD *)(a1 + 76))
        {
          int v20 = v19 + 1;
          sub_188C80C((unsigned int *)(a1 + 72), v19 + 1);
          *(_DWORD *)(*(void *)(a1 + 80) + 4 * v19) = v16;
          uint64_t v15 = v34;
        }
        else
        {
          *(_DWORD *)(*(void *)(a1 + 80) + 4 * v19) = v16;
          int v20 = v19 + 1;
        }
        *(_DWORD *)(a1 + 72) = v20;
        if (!v15) {
          return 0;
        }
        if (*(void *)a3 <= (unint64_t)v15 || *v15 != 24) {
          goto LABEL_54;
        }
      }
    }
    if (v8 == 26)
    {
      uint64_t v14 = sub_188C2CC((unsigned int *)(a1 + 72), (unsigned __int8 *)v7, (uint64_t)a3);
      goto LABEL_53;
    }
LABEL_14:
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if ((v8 - 8000) >> 6 > 0x7C)
    {
      if (*v6)
      {
        uint64_t v31 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        uint64_t v31 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        int v7 = v34;
      }
      uint64_t v14 = sub_1885AC0(v8, v31, v7, a3);
    }
    else
    {
      uint64_t v14 = sub_18859DC((uint64_t **)(a1 + 16), v8, v7, (uint64_t)&off_2547B98, (uint64_t *)(a1 + 8), a3);
    }
LABEL_53:
    unsigned int v34 = (char *)v14;
    if (!v14) {
      return 0;
    }
LABEL_54:
    if (sub_11947B8((uint64_t)a3, &v34, a3[11].i32[1])) {
      return v34;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v34;
  }
  return 0;
}

char *sub_174B0FC(uint64_t a1, char *a2, _DWORD *a3)
{
  int v6 = *(_DWORD *)(a1 + 56);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 64) + 8 * i + 8);
      *a2 = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 44);
      a2[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, a2 + 1);
      }
      else {
        unsigned int v10 = a2 + 2;
      }
      a2 = sub_184B3AC(v8, v10, a3);
    }
  }
  if (*(unsigned char *)(a1 + 40))
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unint64_t v11 = *(int *)(a1 + 88);
    *a2 = 16;
    a2[1] = v11;
    if (v11 > 0x7F)
    {
      a2[1] = v11 | 0x80;
      unint64_t v12 = v11 >> 7;
      a2[2] = v11 >> 7;
      a2 += 3;
      if (v11 >= 0x4000)
      {
        do
        {
          *(a2 - 1) |= 0x80u;
          unint64_t v13 = v12 >> 14;
          v12 >>= 7;
          *a2++ = v12;
        }
        while (v13);
      }
    }
    else
    {
      a2 += 2;
    }
  }
  uint64_t v14 = *(unsigned int *)(a1 + 72);
  if ((int)v14 >= 1)
  {
    for (uint64_t j = 0; j != v14; ++j)
    {
      if (*(void *)a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      unsigned int v16 = *(_DWORD *)(*(void *)(a1 + 80) + 4 * j);
      *a2 = 24;
      a2[1] = v16;
      if (v16 > 0x7F)
      {
        a2[1] = v16 | 0x80;
        unsigned int v17 = v16 >> 7;
        a2[2] = v16 >> 7;
        a2 += 3;
        if (v16 >= 0x4000)
        {
          do
          {
            *(a2 - 1) |= 0x80u;
            unsigned int v18 = v17 >> 14;
            v17 >>= 7;
            *a2++ = v17;
          }
          while (v18);
        }
      }
      else
      {
        a2 += 2;
      }
    }
  }
  if (*(_WORD *)(a1 + 26)) {
    a2 = sub_1886844(a1 + 16, 1000, 2000, a2, a3);
  }
  uint64_t v19 = *(void *)(a1 + 8);
  if ((v19 & 1) == 0) {
    return a2;
  }
  unint64_t v21 = v19 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v21 + 31) < 0)
  {
    unint64_t v22 = *(void **)(v21 + 8);
    uint64_t v23 = *(void *)(v21 + 16);
  }
  else
  {
    unint64_t v22 = (void *)(v21 + 8);
    LODWORD(v23) = *(unsigned __int8 *)(v21 + 31);
  }
  if (*(void *)a3 - (void)a2 >= (int)v23)
  {
    uint64_t v24 = (int)v23;
    memcpy(a2, v22, (int)v23);
    a2 += v24;
    return a2;
  }

  return (char *)sub_188A528(a3, (char *)v22, v23, a2);
}

uint64_t sub_174B380(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(int *)(a1 + 56);
  uint64_t v4 = v2 + v3;
  uint64_t v5 = *(void *)(a1 + 64);
  if (v5) {
    int v6 = (uint64_t *)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = sub_184B568(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  uint64_t result = sub_188D4F0((unsigned int *)(a1 + 72)) + v4 + *(unsigned int *)(a1 + 72);
  if (*(unsigned char *)(a1 + 40))
  {
    int v11 = *(_DWORD *)(a1 + 88);
    uint64_t v12 = ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if (v11 >= 0) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 11;
    }
    result += v13;
  }
  uint64_t v14 = *(void *)(a1 + 8);
  if (v14)
  {
    unint64_t v15 = v14 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v15 + 31) < 0) {
      uint64_t v16 = *(void *)(v15 + 16);
    }
    else {
      uint64_t v16 = *(unsigned __int8 *)(v15 + 31);
    }
    result += v16;
  }
  *(_DWORD *)(a1 + 44) = result;
  return result;
}

void *sub_174B47C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.RelatedPlace");
}

uint64_t sub_174B48C(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  *(void *)(a1 + 8) = v4;
  *(void *)a1 = off_24D6B98;
  sub_1882BC4(a1 + 16, a2);
  *(_OWORD *)(a1 + 68) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  return a1;
}

void sub_174B4FC(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_174B52C(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  uint64_t v4 = a1 + 16;
  *(void *)a1 = off_24D6B98;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 44) = 0;
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v4, a2 + 16);
  int v6 = *(_DWORD *)(a2 + 40);
  if (v6) {
    operator new();
  }
  *(void *)(a1 + 48) = 0;
  if ((v6 & 2) != 0) {
    operator new();
  }
  *(void *)(a1 + 56) = 0;
  if ((v6 & 4) != 0) {
    operator new();
  }
  *(void *)(a1 + 64) = 0;
  if ((v6 & 8) != 0) {
    operator new();
  }
  *(void *)(a1 + 72) = 0;
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  return a1;
}

void sub_174B6AC()
{
}

void *sub_174B72C(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_174B7B8((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

uint64_t sub_174B7B8(uint64_t result)
{
  if ((uint64_t (***)())result != &off_2547BF8)
  {
    if (*(void *)(result + 48))
    {
      sub_15B2C44();
      operator delete();
    }
    if (*(void *)(result + 56))
    {
      sub_15B2C44();
      operator delete();
    }
    if (*(void *)(result + 64))
    {
      sub_15B2C44();
      operator delete();
    }
    uint64_t result = *(void *)(result + 72);
    if (result)
    {
      sub_16EB850(result);
      operator delete();
    }
  }
  return result;
}

void sub_174B884(void *a1)
{
  sub_174B72C(a1);

  operator delete();
}

char *sub_174B8BC(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v26 = a2;
  if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
    return v26;
  }
  int v6 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v7 = v26 + 1;
    unsigned int v8 = *v26;
    if (*v26 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v26, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v26 + 2;
      }
    }
    uint64_t v26 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 10) {
          goto LABEL_39;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        int v11 = *(void **)(a1 + 48);
        if (v11) {
          goto LABEL_25;
        }
        uint64_t v12 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          uint64_t v12 = (void *)*v12;
        }
        int v11 = sub_15C1B30((uint64_t)v12);
        *(void *)(a1 + 48) = v11;
        goto LABEL_24;
      case 2u:
        if (v8 != 18) {
          goto LABEL_39;
        }
        *(_DWORD *)(a1 + 40) |= 2u;
        int v11 = *(void **)(a1 + 56);
        if (v11) {
          goto LABEL_25;
        }
        uint64_t v13 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          uint64_t v13 = (void *)*v13;
        }
        int v11 = sub_15C1B30((uint64_t)v13);
        *(void *)(a1 + 56) = v11;
        goto LABEL_24;
      case 3u:
        if (v8 != 26) {
          goto LABEL_39;
        }
        *(_DWORD *)(a1 + 40) |= 4u;
        int v11 = *(void **)(a1 + 64);
        if (v11) {
          goto LABEL_25;
        }
        uint64_t v14 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          uint64_t v14 = (void *)*v14;
        }
        int v11 = sub_15C1B30((uint64_t)v14);
        *(void *)(a1 + 64) = v11;
LABEL_24:
        uint64_t v7 = v26;
LABEL_25:
        unint64_t v15 = (char *)sub_125CF74(a3, (uint64_t)v11, (unsigned __int8 *)v7);
        goto LABEL_48;
      case 4u:
        if (v8 != 34) {
          goto LABEL_39;
        }
        *(_DWORD *)(a1 + 40) |= 8u;
        uint64_t v16 = *(void **)(a1 + 72);
        if (!v16)
        {
          unsigned int v17 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            unsigned int v17 = (void *)*v17;
          }
          uint64_t v16 = sub_1788710((uint64_t)v17);
          *(void *)(a1 + 72) = v16;
          uint64_t v7 = v26;
        }
        unint64_t v15 = (char *)sub_1550A68(a3, (uint64_t)v16, (unsigned __int8 *)v7);
        goto LABEL_48;
      case 5u:
        if (v8 != 40) {
          goto LABEL_39;
        }
        unsigned int v18 = v7 + 1;
        unint64_t v19 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_36;
        }
        int v20 = *v18;
        int v21 = v19 + (v20 << 7);
        unint64_t v19 = (v21 - 128);
        if (v20 < 0)
        {
          uint64_t v26 = (char *)sub_188C138((uint64_t)v7, (v21 - 128));
          if (!v26) {
            return 0;
          }
          unint64_t v19 = v24;
        }
        else
        {
          unsigned int v18 = v7 + 2;
LABEL_36:
          uint64_t v26 = v18;
        }
        if (v19 > 1)
        {
          if (*v6) {
            uint64_t v25 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v25 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(5, v19, v25);
        }
        else
        {
          *(_DWORD *)(a1 + 40) |= 0x10u;
          *(_DWORD *)(a1 + 80) = v19;
        }
        goto LABEL_49;
      default:
LABEL_39:
        if (v8) {
          BOOL v22 = (v8 & 7) == 4;
        }
        else {
          BOOL v22 = 1;
        }
        if (!v22)
        {
          if ((v8 - 8000) >> 6 > 0x7C)
          {
            if (*v6)
            {
              uint64_t v23 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              uint64_t v23 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              uint64_t v7 = v26;
            }
            unint64_t v15 = (char *)sub_1885AC0(v8, v23, v7, a3);
          }
          else
          {
            unint64_t v15 = (char *)sub_18859DC((uint64_t **)(a1 + 16), v8, v7, (uint64_t)&off_2547BF8, (uint64_t *)(a1 + 8), a3);
          }
LABEL_48:
          uint64_t v26 = v15;
          if (!v15) {
            return 0;
          }
LABEL_49:
          if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
            return v26;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return v26;
    }
  }
}

char *sub_174BC24(uint64_t a1, char *a2, unint64_t *a3)
{
  uint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if (v6)
  {
    if (*a3 <= (unint64_t)a2) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    uint64_t v7 = *(void *)(a1 + 48);
    *uint64_t v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    uint64_t v4 = sub_15B2EA4(v7, v9, a3);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_19;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v10 = *(void *)(a1 + 56);
  *uint64_t v4 = 18;
  unsigned int v11 = *(_DWORD *)(v10 + 20);
  v4[1] = v11;
  if (v11 > 0x7F) {
    uint64_t v12 = sub_188A9CC(v11, v4 + 1);
  }
  else {
    uint64_t v12 = v4 + 2;
  }
  uint64_t v4 = sub_15B2EA4(v10, v12, a3);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_25;
  }
LABEL_19:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v13 = *(void *)(a1 + 64);
  *uint64_t v4 = 26;
  unsigned int v14 = *(_DWORD *)(v13 + 20);
  v4[1] = v14;
  if (v14 > 0x7F) {
    unint64_t v15 = sub_188A9CC(v14, v4 + 1);
  }
  else {
    unint64_t v15 = v4 + 2;
  }
  uint64_t v4 = sub_15B2EA4(v13, v15, a3);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_37;
    }
    goto LABEL_31;
  }
LABEL_25:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v16 = *(void *)(a1 + 72);
  *uint64_t v4 = 34;
  unsigned int v17 = *(_DWORD *)(v16 + 44);
  v4[1] = v17;
  if (v17 > 0x7F) {
    unsigned int v18 = sub_188A9CC(v17, v4 + 1);
  }
  else {
    unsigned int v18 = v4 + 2;
  }
  uint64_t v4 = sub_16EBC08(v16, v18, a3);
  if ((v6 & 0x10) != 0)
  {
LABEL_31:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v19 = *(int *)(a1 + 80);
    *uint64_t v4 = 40;
    v4[1] = v19;
    if (v19 > 0x7F)
    {
      v4[1] = v19 | 0x80;
      unint64_t v20 = v19 >> 7;
      v4[2] = v19 >> 7;
      v4 += 3;
      if (v19 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v21 = v20 >> 14;
          v20 >>= 7;
          *v4++ = v20;
        }
        while (v21);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_37:
  if (*(_WORD *)(a1 + 26)) {
    uint64_t v4 = sub_1886844(a1 + 16, 1000, 2000, v4, a3);
  }
  uint64_t v22 = *(void *)(a1 + 8);
  if ((v22 & 1) == 0) {
    return v4;
  }
  unint64_t v24 = v22 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v24 + 31) < 0)
  {
    uint64_t v25 = *(void **)(v24 + 8);
    uint64_t v26 = *(void *)(v24 + 16);
  }
  else
  {
    uint64_t v25 = (void *)(v24 + 8);
    LODWORD(v26) = *(unsigned __int8 *)(v24 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v26)
  {
    uint64_t v27 = (int)v26;
    memcpy(v4, v25, (int)v26);
    v4 += v27;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v25, v26, v4);
}

uint64_t sub_174BF20(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  int v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 0x1F) == 0) {
    goto LABEL_16;
  }
  if (v3)
  {
    uint64_t v4 = sub_15B2F90(*(void *)(a1 + 48));
    v2 += v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v3 & 2) == 0)
    {
LABEL_4:
      if ((v3 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_10;
    }
  }
  else if ((v3 & 2) == 0)
  {
    goto LABEL_4;
  }
  uint64_t v5 = sub_15B2F90(*(void *)(a1 + 56));
  v2 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v3 & 4) == 0)
  {
LABEL_5:
    if ((v3 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_11;
  }
LABEL_10:
  uint64_t v6 = sub_15B2F90(*(void *)(a1 + 64));
  v2 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v3 & 8) == 0)
  {
LABEL_6:
    if ((v3 & 0x10) == 0) {
      goto LABEL_16;
    }
    goto LABEL_12;
  }
LABEL_11:
  uint64_t v7 = sub_16EBD94(*(void *)(a1 + 72));
  v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v3 & 0x10) == 0) {
    goto LABEL_16;
  }
LABEL_12:
  int v8 = *(_DWORD *)(a1 + 80);
  if (v8 < 0) {
    uint64_t v9 = 11;
  }
  else {
    uint64_t v9 = ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v2 += v9;
LABEL_16:
  uint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v12 + 31) < 0) {
      uint64_t v13 = *(void *)(v12 + 16);
    }
    else {
      uint64_t v13 = *(unsigned __int8 *)(v12 + 31);
    }
    v2 += v13;
  }
  *(_DWORD *)(a1 + 44) = v2;
  return v2;
}

void *sub_174C09C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.Tooltip");
}

uint64_t sub_174C0AC(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  *(void *)(a1 + 8) = v4;
  *(void *)a1 = off_24D6C18;
  sub_1882BC4(a1 + 16, a2);
  *(unsigned char *)(a1 + 48) = 0;
  *(void *)(a1 + 40) = 0;
  return a1;
}

void sub_174C114(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_174C144(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_174C1C0(void *a1)
{
  sub_174C144(a1);

  operator delete();
}

char *sub_174C1F8(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v20 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v20, a3[11].i32[1])) {
    goto LABEL_29;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v20 + 1;
    unsigned int v8 = *v20;
    if (*v20 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v20, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v20 + 2;
      }
    }
    unint64_t v20 = v7;
    if (v8 != 8) {
      break;
    }
    uint64_t v13 = v7 + 1;
    uint64_t v14 = *v7;
    if ((*v7 & 0x80000000) == 0) {
      goto LABEL_17;
    }
    int v15 = *v13;
    uint64_t v14 = v14 + (v15 << 7) - 128;
    if ((v15 & 0x80000000) == 0)
    {
      uint64_t v13 = v7 + 2;
LABEL_17:
      unint64_t v20 = v13;
      *(unsigned char *)(a1 + 48) = v14 != 0;
      int v5 = 1;
      goto LABEL_22;
    }
    unsigned int v17 = (char *)sub_188C138((uint64_t)v7, v14);
    unint64_t v20 = v17;
    *(unsigned char *)(a1 + 48) = v18 != 0;
    int v5 = 1;
    if (!v17) {
      goto LABEL_30;
    }
LABEL_22:
    if (sub_11947B8((uint64_t)a3, &v20, a3[11].i32[1])) {
      goto LABEL_29;
    }
  }
  if (v8) {
    BOOL v11 = (v8 & 7) == 4;
  }
  else {
    BOOL v11 = 1;
  }
  if (!v11)
  {
    if ((v8 - 8000) >> 6 > 0x7C)
    {
      if (*v6)
      {
        uint64_t v16 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        uint64_t v16 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        uint64_t v7 = v20;
      }
      unint64_t v12 = sub_1885AC0(v8, v16, v7, a3);
    }
    else
    {
      unint64_t v12 = sub_18859DC((uint64_t **)(a1 + 16), v8, v7, (uint64_t)&off_2547C50, (uint64_t *)(a1 + 8), a3);
    }
    unint64_t v20 = (char *)v12;
    if (!v12) {
      goto LABEL_30;
    }
    goto LABEL_22;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    goto LABEL_29;
  }
LABEL_30:
  unint64_t v20 = 0;
LABEL_29:
  *(_DWORD *)(a1 + 40) |= v5;
  return v20;
}

char *sub_174C3CC(uint64_t a1, char *a2, _DWORD *a3)
{
  uint64_t v4 = a2;
  if (*(unsigned char *)(a1 + 40))
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    char v6 = *(unsigned char *)(a1 + 48);
    *uint64_t v4 = 8;
    v4[1] = v6;
    v4 += 2;
  }
  if (*(_WORD *)(a1 + 26)) {
    uint64_t v4 = sub_1886844(a1 + 16, 1000, 2000, v4, a3);
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v9 + 31) < 0)
  {
    unsigned int v10 = *(void **)(v9 + 8);
    uint64_t v11 = *(void *)(v9 + 16);
  }
  else
  {
    unsigned int v10 = (void *)(v9 + 8);
    LODWORD(v11) = *(unsigned __int8 *)(v9 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v11)
  {
    uint64_t v12 = (int)v11;
    memcpy(v4, v10, (int)v11);
    v4 += v12;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v10, v11, v4);
}

uint64_t sub_174C4D4(uint64_t a1)
{
  uint64_t result = sub_1889280(a1 + 16);
  if (*(unsigned char *)(a1 + 40)) {
    result += 2;
  }
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v4 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v5 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v5 = *(unsigned __int8 *)(v4 + 31);
    }
    result += v5;
  }
  *(_DWORD *)(a1 + 44) = result;
  return result;
}

void *sub_174C53C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.TooltipFilter");
}

void *sub_174C54C(void *a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  a1[1] = v4;
  *a1 = off_24D6C98;
  sub_1882BC4((uint64_t)(a1 + 2), a2);
  a1[5] = 0;
  a1[6] = 0;
  return a1;
}

void sub_174C5B0(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_174C5E0(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  uint64_t v4 = a1 + 16;
  *(void *)a1 = off_24D6C98;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 44) = 0;
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v4, a2 + 16);
  if (*(unsigned char *)(a2 + 40)) {
    operator new();
  }
  *(void *)(a1 + 48) = 0;
  return a1;
}

void sub_174C6B0()
{
}

uint64_t sub_174C70C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_2547C88)
  {
    uint64_t v6 = *(void *)(a1 + 48);
    if (v6)
    {
      sub_184AFBC(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_174C7CC(uint64_t a1)
{
  sub_174C70C(a1);

  operator delete();
}

char *sub_174C804(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v16 = a2;
  if (sub_11947B8((uint64_t)a3, &v16, a3[11].i32[1])) {
    return v16;
  }
  uint64_t v5 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v6 = v16 + 1;
    unsigned int v7 = *v16;
    if (*v16 < 0)
    {
      unsigned int v8 = v7 + (*v6 << 7);
      unsigned int v7 = v8 - 128;
      if (*v6 < 0)
      {
        uint64_t v6 = (char *)sub_188C180((uint64_t)v16, v8 - 128);
        unsigned int v7 = v9;
      }
      else
      {
        uint64_t v6 = v16 + 2;
      }
    }
    uint64_t v16 = v6;
    if (v7 != 10) {
      break;
    }
    *(_DWORD *)(a1 + 40) |= 1u;
    uint64_t v12 = *(void *)(a1 + 48);
    if (!v12)
    {
      uint64_t v13 = (void *)(*v5 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v5) {
        uint64_t v13 = (void *)*v13;
      }
      uint64_t v12 = sub_185089C((uint64_t)v13);
      *(void *)(a1 + 48) = v12;
      uint64_t v6 = v16;
    }
    uint64_t v11 = sub_12688D0(a3, v12, (unsigned __int8 *)v6);
LABEL_22:
    uint64_t v16 = v11;
    if (!v11) {
      return 0;
    }
    if (sub_11947B8((uint64_t)a3, &v16, a3[11].i32[1])) {
      return v16;
    }
  }
  if (v7) {
    BOOL v10 = (v7 & 7) == 4;
  }
  else {
    BOOL v10 = 1;
  }
  if (!v10)
  {
    if ((v7 - 8000) >> 6 > 0x7C)
    {
      if (*v5)
      {
        uint64_t v14 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        uint64_t v6 = v16;
      }
      uint64_t v11 = (char *)sub_1885AC0(v7, v14, v6, a3);
    }
    else
    {
      uint64_t v11 = (char *)sub_18859DC((uint64_t **)(a1 + 16), v7, v6, (uint64_t)&off_2547C88, (uint64_t *)(a1 + 8), a3);
    }
    goto LABEL_22;
  }
  if (v6)
  {
    a3[10].i32[0] = v7 - 1;
    return v16;
  }
  return 0;
}

char *sub_174C9A8(uint64_t a1, char *a2, _DWORD *a3)
{
  uint64_t v4 = a2;
  if (*(unsigned char *)(a1 + 40))
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    uint64_t v6 = *(void *)(a1 + 48);
    *uint64_t v4 = 10;
    unsigned int v7 = *(_DWORD *)(v6 + 44);
    v4[1] = v7;
    if (v7 > 0x7F) {
      unsigned int v8 = sub_188A9CC(v7, v4 + 1);
    }
    else {
      unsigned int v8 = v4 + 2;
    }
    uint64_t v4 = sub_184B3AC(v6, v8, a3);
  }
  if (*(_WORD *)(a1 + 26)) {
    uint64_t v4 = sub_1886844(a1 + 16, 1000, 2000, v4, a3);
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    uint64_t v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    uint64_t v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    v4 += v14;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v12, v13, v4);
}

uint64_t sub_174CADC(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  if (*(unsigned char *)(a1 + 40))
  {
    uint64_t v3 = sub_184B568(*(void *)(a1 + 48));
    v2 += v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v6 + 31) < 0) {
      uint64_t v7 = *(void *)(v6 + 16);
    }
    else {
      uint64_t v7 = *(unsigned __int8 *)(v6 + 31);
    }
    v2 += v7;
  }
  *(_DWORD *)(a1 + 44) = v2;
  return v2;
}

void *sub_174CB70@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.RefreshId");
}

uint64_t sub_174CB80(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  *(void *)(a1 + 8) = v4;
  *(void *)a1 = off_24D6D18;
  sub_1882BC4(a1 + 16, a2);
  *(_DWORD *)(a1 + 40) = 0;
  return a1;
}

void sub_174CBE4(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_174CC14(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_174CC90(void *a1)
{
  sub_174CC14(a1);

  operator delete();
}

char *sub_174CCC8(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v15 = a2;
  if ((sub_11947B8((uint64_t)a3, &v15, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v5 = (uint64_t *)(a1 + 8);
    unint64_t v6 = (uint64_t **)(a1 + 16);
    while (1)
    {
      uint64_t v7 = v15 + 1;
      unsigned int v8 = *v15;
      if (*v15 < 0)
      {
        unsigned int v9 = v8 + (*v7 << 7);
        unsigned int v8 = v9 - 128;
        if (*v7 < 0)
        {
          uint64_t v7 = (char *)sub_188C180((uint64_t)v15, v9 - 128);
          unsigned int v8 = v10;
        }
        else
        {
          uint64_t v7 = v15 + 2;
        }
      }
      int v15 = v7;
      if (!v8 || (v8 & 7) == 4) {
        break;
      }
      if ((v8 - 8000) >> 6 > 0x7C)
      {
        if (*v5)
        {
          uint64_t v13 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else
        {
          uint64_t v13 = (std::string *)sub_188DBD8(v5);
          uint64_t v7 = v15;
        }
        uint64_t v12 = sub_1885AC0(v8, v13, v7, a3);
      }
      else
      {
        uint64_t v12 = sub_18859DC(v6, v8, v7, (uint64_t)&off_2547CC0, v5, a3);
      }
      int v15 = (char *)v12;
      if (!v12) {
        return 0;
      }
      if (sub_11947B8((uint64_t)a3, &v15, a3[11].i32[1])) {
        return v15;
      }
    }
    if (v7)
    {
      a3[10].i32[0] = v8 - 1;
      return v15;
    }
    return 0;
  }
  return v15;
}

char *sub_174CE18(uint64_t a1, char *a2, _DWORD *a3)
{
  uint64_t v4 = a2;
  if (*(_WORD *)(a1 + 26)) {
    uint64_t v4 = sub_1886844(a1 + 16, 1000, 2000, a2, a3);
  }
  uint64_t v6 = *(void *)(a1 + 8);
  if ((v6 & 1) == 0) {
    return v4;
  }
  unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v8 + 31) < 0)
  {
    unsigned int v9 = *(void **)(v8 + 8);
    uint64_t v10 = *(void *)(v8 + 16);
  }
  else
  {
    unsigned int v9 = (void *)(v8 + 8);
    LODWORD(v10) = *(unsigned __int8 *)(v8 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v10)
  {
    uint64_t v11 = (int)v10;
    memcpy(v4, v9, (int)v10);
    v4 += v11;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v9, v10, v4);
}

uint64_t sub_174CEE4(uint64_t a1)
{
  uint64_t result = sub_1889280(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v4 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v5 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v5 = *(unsigned __int8 *)(v4 + 31);
    }
    result += v5;
  }
  *(_DWORD *)(a1 + 40) = result;
  return result;
}

void *sub_174CF3C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.RefreshIdFilter");
}

void *sub_174CF4C(void *a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  a1[1] = v5;
  *a1 = off_24D6D98;
  sub_1882BC4((uint64_t)(a1 + 2), a2);
  a1[5] = 0;
  a1[6] = a2;
  a1[7] = 0;
  a1[8] = 0;
  a1[9] = 0;
  return a1;
}

void sub_174CFBC(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_174CFEC(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  unint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = a1 + 16;
  *(void *)a1 = off_24D6D98;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  uint64_t v6 = (uint64_t *)(a1 + 48);
  *(_DWORD *)(a1 + 68) = 0;
  *(void *)(a1 + 52) = 0;
  *(void *)(a1 + 60) = 0;
  *(void *)(a1 + 44) = 0;
  int v7 = *(_DWORD *)(a2 + 56);
  if (v7)
  {
    uint64_t v8 = *(void *)(a2 + 64);
    unsigned int v9 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_12C4B74(v6, v9, (uint64_t *)(v8 + 8), v7, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v10 = *(_DWORD *)(a1 + 56) + v7;
    *(_DWORD *)(a1 + 56) = v10;
    uint64_t v11 = *(int **)(a1 + 64);
    if (*v11 < v10) {
      *uint64_t v11 = v10;
    }
  }
  uint64_t v12 = *(void *)(a2 + 8);
  if (v12) {
    sub_188B4F8(v4, (v12 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v5, a2 + 16);
  if (*(unsigned char *)(a2 + 40)) {
    operator new();
  }
  *(void *)(a1 + 72) = 0;
  return a1;
}

void sub_174D134()
{
}

uint64_t sub_174D1A4(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  unint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_2547CF0)
  {
    uint64_t v6 = *(void *)(a1 + 72);
    if (v6)
    {
      sub_184AFBC(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  sub_12C45E8((void *)(a1 + 48));
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_174D270(uint64_t a1)
{
  sub_174D1A4(a1);

  operator delete();
}

char *sub_174D2A8(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v23 = a2;
  if (sub_11947B8((uint64_t)a3, &v23, a3[11].i32[1])) {
    return v23;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    int v7 = v23 + 1;
    unsigned int v8 = *v23;
    if (*v23 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        int v7 = (char *)sub_188C180((uint64_t)v23, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        int v7 = v23 + 2;
      }
    }
    uint64_t v23 = v7;
    if (v8 >> 3 == 2) {
      break;
    }
    if (v8 >> 3 != 1 || v8 != 10) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 40) |= 1u;
    uint64_t v20 = *(void *)(a1 + 72);
    if (!v20)
    {
      unint64_t v21 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        unint64_t v21 = (void *)*v21;
      }
      uint64_t v20 = sub_185089C((uint64_t)v21);
      *(void *)(a1 + 72) = v20;
      int v7 = v23;
    }
    uint64_t v13 = sub_12688D0(a3, v20, (unsigned __int8 *)v7);
LABEL_37:
    uint64_t v23 = v13;
    if (!v13) {
      return 0;
    }
LABEL_38:
    if (sub_11947B8((uint64_t)a3, &v23, a3[11].i32[1])) {
      return v23;
    }
  }
  if (v8 == 18)
  {
    uint64_t v14 = v7 - 1;
    while (1)
    {
      int v15 = (unsigned __int8 *)(v14 + 1);
      uint64_t v23 = v14 + 1;
      uint64_t v16 = *(_DWORD **)(a1 + 64);
      if (v16 && (uint64_t v17 = *(int *)(a1 + 56), (int)v17 < *v16))
      {
        *(_DWORD *)(a1 + 56) = v17 + 1;
        uint64_t v18 = *(void *)&v16[2 * v17 + 2];
      }
      else
      {
        uint64_t v19 = sub_185089C(*(void *)(a1 + 48));
        uint64_t v18 = sub_188CDC8(a1 + 48, v19);
        int v15 = (unsigned __int8 *)v23;
      }
      uint64_t v14 = sub_12688D0(a3, v18, v15);
      uint64_t v23 = v14;
      if (!v14) {
        return 0;
      }
      if (*(void *)a3 <= (unint64_t)v14 || *v14 != 18) {
        goto LABEL_38;
      }
    }
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if ((v8 - 8000) >> 6 > 0x7C)
    {
      if (*v6)
      {
        uint64_t v22 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        uint64_t v22 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        int v7 = v23;
      }
      uint64_t v13 = (char *)sub_1885AC0(v8, v22, v7, a3);
    }
    else
    {
      uint64_t v13 = (char *)sub_18859DC((uint64_t **)(a1 + 16), v8, v7, (uint64_t)&off_2547CF0, (uint64_t *)(a1 + 8), a3);
    }
    goto LABEL_37;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v23;
  }
  return 0;
}

char *sub_174D4F4(uint64_t a1, char *a2, _DWORD *a3)
{
  unint64_t v4 = a2;
  if (*(unsigned char *)(a1 + 40))
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    uint64_t v6 = *(void *)(a1 + 72);
    *unint64_t v4 = 10;
    unsigned int v7 = *(_DWORD *)(v6 + 44);
    v4[1] = v7;
    if (v7 > 0x7F) {
      unsigned int v8 = sub_188A9CC(v7, v4 + 1);
    }
    else {
      unsigned int v8 = v4 + 2;
    }
    unint64_t v4 = sub_184B3AC(v6, v8, a3);
  }
  int v9 = *(_DWORD *)(a1 + 56);
  if (v9)
  {
    for (int i = 0; i != v9; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v11 = *(void *)(*(void *)(a1 + 64) + 8 * i + 8);
      *unint64_t v4 = 18;
      unsigned int v12 = *(_DWORD *)(v11 + 44);
      v4[1] = v12;
      if (v12 > 0x7F) {
        uint64_t v13 = sub_188A9CC(v12, v4 + 1);
      }
      else {
        uint64_t v13 = v4 + 2;
      }
      unint64_t v4 = sub_184B3AC(v11, v13, a3);
    }
  }
  if (*(_WORD *)(a1 + 26)) {
    unint64_t v4 = sub_1886844(a1 + 16, 1000, 2000, v4, a3);
  }
  uint64_t v14 = *(void *)(a1 + 8);
  if ((v14 & 1) == 0) {
    return v4;
  }
  unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v16 + 31) < 0)
  {
    uint64_t v17 = *(void **)(v16 + 8);
    uint64_t v18 = *(void *)(v16 + 16);
  }
  else
  {
    uint64_t v17 = (void *)(v16 + 8);
    LODWORD(v18) = *(unsigned __int8 *)(v16 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v18)
  {
    uint64_t v19 = (int)v18;
    memcpy(v4, v17, (int)v18);
    v4 += v19;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v17, v18, v4);
}

uint64_t sub_174D6C4(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(int *)(a1 + 56);
  uint64_t v4 = v2 + v3;
  uint64_t v5 = *(void *)(a1 + 64);
  if (v5) {
    uint64_t v6 = (uint64_t *)(v5 + 8);
  }
  else {
    uint64_t v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = sub_184B568(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  if (*(unsigned char *)(a1 + 40))
  {
    uint64_t v10 = sub_184B568(*(void *)(a1 + 72));
    v4 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v13 + 31) < 0) {
      uint64_t v14 = *(void *)(v13 + 16);
    }
    else {
      uint64_t v14 = *(unsigned __int8 *)(v13 + 31);
    }
    v4 += v14;
  }
  *(_DWORD *)(a1 + 44) = v4;
  return v4;
}

void *sub_174D7AC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.ForwardInfo");
}

uint64_t sub_174D7BC(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  *(void *)(a1 + 8) = v4;
  *(void *)a1 = off_24D6E18;
  sub_1882BC4(a1 + 16, a2);
  *(_DWORD *)(a1 + 40) = 0;
  return a1;
}

void sub_174D820(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_174D850(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_174D8CC(void *a1)
{
  sub_174D850(a1);

  operator delete();
}

char *sub_174D904(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v15 = a2;
  if ((sub_11947B8((uint64_t)a3, &v15, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v5 = (uint64_t *)(a1 + 8);
    uint64_t v6 = (uint64_t **)(a1 + 16);
    while (1)
    {
      uint64_t v7 = v15 + 1;
      unsigned int v8 = *v15;
      if (*v15 < 0)
      {
        unsigned int v9 = v8 + (*v7 << 7);
        unsigned int v8 = v9 - 128;
        if (*v7 < 0)
        {
          uint64_t v7 = (char *)sub_188C180((uint64_t)v15, v9 - 128);
          unsigned int v8 = v10;
        }
        else
        {
          uint64_t v7 = v15 + 2;
        }
      }
      int v15 = v7;
      if (!v8 || (v8 & 7) == 4) {
        break;
      }
      if ((v8 - 8000) >> 6 > 0x7C)
      {
        if (*v5)
        {
          unint64_t v13 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else
        {
          unint64_t v13 = (std::string *)sub_188DBD8(v5);
          uint64_t v7 = v15;
        }
        unsigned int v12 = sub_1885AC0(v8, v13, v7, a3);
      }
      else
      {
        unsigned int v12 = sub_18859DC(v6, v8, v7, (uint64_t)&off_2547D40, v5, a3);
      }
      int v15 = (char *)v12;
      if (!v12) {
        return 0;
      }
      if (sub_11947B8((uint64_t)a3, &v15, a3[11].i32[1])) {
        return v15;
      }
    }
    if (v7)
    {
      a3[10].i32[0] = v8 - 1;
      return v15;
    }
    return 0;
  }
  return v15;
}

char *sub_174DA54(uint64_t a1, char *a2, _DWORD *a3)
{
  uint64_t v4 = a2;
  if (*(_WORD *)(a1 + 26)) {
    uint64_t v4 = sub_1886844(a1 + 16, 1000, 2000, a2, a3);
  }
  uint64_t v6 = *(void *)(a1 + 8);
  if ((v6 & 1) == 0) {
    return v4;
  }
  unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v8 + 31) < 0)
  {
    unsigned int v9 = *(void **)(v8 + 8);
    uint64_t v10 = *(void *)(v8 + 16);
  }
  else
  {
    unsigned int v9 = (void *)(v8 + 8);
    LODWORD(v10) = *(unsigned __int8 *)(v8 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v10)
  {
    uint64_t v11 = (int)v10;
    memcpy(v4, v9, (int)v10);
    v4 += v11;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v9, v10, v4);
}

uint64_t sub_174DB20(uint64_t a1)
{
  uint64_t result = sub_1889280(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v4 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v5 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v5 = *(unsigned __int8 *)(v4 + 31);
    }
    result += v5;
  }
  *(_DWORD *)(a1 + 40) = result;
  return result;
}

void *sub_174DB78@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.ForwardInfoFilter");
}

void *sub_174DB88(void *a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  a1[1] = v5;
  *a1 = off_24D6E98;
  sub_1882BC4((uint64_t)(a1 + 2), a2);
  a1[5] = 0;
  a1[6] = a2;
  a1[7] = 0;
  a1[8] = 0;
  a1[9] = a2;
  a1[10] = 0;
  a1[11] = 0;
  a1[12] = a2;
  a1[13] = 0;
  a1[14] = 0;
  a1[15] = 0;
  return a1;
}

void sub_174DC04(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_174DC34(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  unint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = a1 + 16;
  *(void *)a1 = off_24D6E98;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  uint64_t v6 = (uint64_t *)(a1 + 48);
  *(_DWORD *)(a1 + 68) = 0;
  *(void *)(a1 + 52) = 0;
  *(void *)(a1 + 60) = 0;
  *(void *)(a1 + 44) = 0;
  int v7 = *(_DWORD *)(a2 + 56);
  if (v7)
  {
    uint64_t v8 = *(void *)(a2 + 64);
    unsigned int v9 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_12C4B74(v6, v9, (uint64_t *)(v8 + 8), v7, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v10 = *(_DWORD *)(a1 + 56) + v7;
    *(_DWORD *)(a1 + 56) = v10;
    uint64_t v11 = *(int **)(a1 + 64);
    if (*v11 < v10) {
      *uint64_t v11 = v10;
    }
  }
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0;
  int v12 = *(_DWORD *)(a2 + 80);
  if (v12)
  {
    uint64_t v13 = *(void *)(a2 + 88);
    uint64_t v14 = (uint64_t *)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_12C4B74((uint64_t *)(a1 + 72), v14, (uint64_t *)(v13 + 8), v12, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v15 = *(_DWORD *)(a1 + 80) + v12;
    *(_DWORD *)(a1 + 80) = v15;
    unint64_t v16 = *(int **)(a1 + 88);
    if (*v16 < v15) {
      int *v16 = v15;
    }
  }
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 104) = 0;
  *(void *)(a1 + 112) = 0;
  int v17 = *(_DWORD *)(a2 + 104);
  if (v17)
  {
    uint64_t v18 = *(void *)(a2 + 112);
    uint64_t v19 = (uint64_t *)sub_188CCE4(a1 + 96, *(_DWORD *)(a2 + 104));
    sub_12C4B74((uint64_t *)(a1 + 96), v19, (uint64_t *)(v18 + 8), v17, **(_DWORD **)(a1 + 112) - *(_DWORD *)(a1 + 104));
    int v20 = *(_DWORD *)(a1 + 104) + v17;
    *(_DWORD *)(a1 + 104) = v20;
    unint64_t v21 = *(int **)(a1 + 112);
    if (*v21 < v20) {
      *unint64_t v21 = v20;
    }
  }
  uint64_t v22 = *(void *)(a2 + 8);
  if (v22) {
    sub_188B4F8(v4, (v22 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v5, a2 + 16);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  return a1;
}

void sub_174DE24(_Unwind_Exception *a1)
{
  sub_12C45E8(v5);
  sub_12C45E8(v4);
  sub_1882CC0(v3);
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_174DE9C(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_12C45E8(a1 + 12);
  sub_12C45E8(a1 + 9);
  sub_12C45E8(a1 + 6);
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_174DF3C(void *a1)
{
  sub_174DE9C(a1);

  operator delete();
}

char *sub_174DF74(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v38 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v38, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = v38 + 1;
    unsigned int v9 = *v38;
    if (*v38 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v38, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v38 + 2;
      }
    }
    int v38 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_44;
        }
        int v12 = v8 + 1;
        uint64_t v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        uint64_t v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          int v12 = v8 + 2;
LABEL_13:
          int v38 = v12;
          *(void *)(a1 + 120) = v13;
          int v5 = 1;
          goto LABEL_54;
        }
        uint64_t v36 = (char *)sub_188C138((uint64_t)v8, v13);
        int v38 = v36;
        *(void *)(a1 + 120) = v37;
        int v5 = 1;
        if (v36) {
          goto LABEL_54;
        }
        goto LABEL_61;
      case 2u:
        if (v9 != 18) {
          goto LABEL_44;
        }
        int v15 = v8 - 1;
        while (1)
        {
          unint64_t v16 = (unsigned __int8 *)(v15 + 1);
          int v38 = v15 + 1;
          int v17 = *(_DWORD **)(a1 + 64);
          if (v17 && (uint64_t v18 = *(int *)(a1 + 56), (int)v18 < *v17))
          {
            *(_DWORD *)(a1 + 56) = v18 + 1;
            uint64_t v19 = *(void *)&v17[2 * v18 + 2];
          }
          else
          {
            uint64_t v20 = sub_185089C(*(void *)(a1 + 48));
            uint64_t v19 = sub_188CDC8(a1 + 48, v20);
            unint64_t v16 = (unsigned __int8 *)v38;
          }
          int v15 = sub_12688D0(a3, v19, v16);
          int v38 = v15;
          if (!v15) {
            goto LABEL_61;
          }
          if (*(void *)a3 <= (unint64_t)v15 || *v15 != 18) {
            goto LABEL_54;
          }
        }
      case 3u:
        if (v9 != 26) {
          goto LABEL_44;
        }
        unint64_t v21 = v8 - 1;
        while (1)
        {
          uint64_t v22 = (unsigned __int8 *)(v21 + 1);
          int v38 = v21 + 1;
          uint64_t v23 = *(_DWORD **)(a1 + 88);
          if (v23 && (uint64_t v24 = *(int *)(a1 + 80), (int)v24 < *v23))
          {
            *(_DWORD *)(a1 + 80) = v24 + 1;
            uint64_t v25 = *(void *)&v23[2 * v24 + 2];
          }
          else
          {
            uint64_t v26 = sub_185089C(*(void *)(a1 + 72));
            uint64_t v25 = sub_188CDC8(a1 + 72, v26);
            uint64_t v22 = (unsigned __int8 *)v38;
          }
          unint64_t v21 = sub_12688D0(a3, v25, v22);
          int v38 = v21;
          if (!v21) {
            goto LABEL_61;
          }
          if (*(void *)a3 <= (unint64_t)v21 || *v21 != 26) {
            goto LABEL_54;
          }
        }
      case 4u:
        if (v9 != 34) {
          goto LABEL_44;
        }
        uint64_t v27 = v8 - 1;
        while (1)
        {
          uint64_t v28 = (unsigned __int8 *)(v27 + 1);
          int v38 = v27 + 1;
          uint64_t v29 = *(_DWORD **)(a1 + 112);
          if (v29 && (uint64_t v30 = *(int *)(a1 + 104), (int)v30 < *v29))
          {
            *(_DWORD *)(a1 + 104) = v30 + 1;
            uint64_t v31 = *(void *)&v29[2 * v30 + 2];
          }
          else
          {
            uint64_t v32 = sub_185089C(*(void *)(a1 + 96));
            uint64_t v31 = sub_188CDC8(a1 + 96, v32);
            uint64_t v28 = (unsigned __int8 *)v38;
          }
          uint64_t v27 = sub_12688D0(a3, v31, v28);
          int v38 = v27;
          if (!v27) {
            goto LABEL_61;
          }
          if (*(void *)a3 <= (unint64_t)v27 || *v27 != 34) {
            goto LABEL_54;
          }
        }
      default:
LABEL_44:
        if (v9) {
          BOOL v33 = (v9 & 7) == 4;
        }
        else {
          BOOL v33 = 1;
        }
        if (!v33)
        {
          if ((v9 - 8000) >> 6 > 0x7C)
          {
            if (*v7)
            {
              uint64_t v35 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              uint64_t v35 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              uint64_t v8 = v38;
            }
            unsigned int v34 = sub_1885AC0(v9, v35, v8, a3);
          }
          else
          {
            unsigned int v34 = sub_18859DC((uint64_t **)(a1 + 16), v9, v8, (uint64_t)&off_2547D70, (uint64_t *)(a1 + 8), a3);
          }
          int v38 = (char *)v34;
          if (!v34) {
            goto LABEL_61;
          }
LABEL_54:
          if (sub_11947B8((uint64_t)a3, &v38, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_61:
        }
          int v38 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 40) |= v5;
        return v38;
    }
  }
}

char *sub_174E334(uint64_t a1, char *a2, _DWORD *a3)
{
  unint64_t v4 = a2;
  if (*(unsigned char *)(a1 + 40))
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unint64_t v6 = *(void *)(a1 + 120);
    *unint64_t v4 = 8;
    v4[1] = v6;
    if (v6 > 0x7F)
    {
      v4[1] = v6 | 0x80;
      unint64_t v7 = v6 >> 7;
      v4[2] = v6 >> 7;
      v4 += 3;
      if (v6 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v8 = v7 >> 14;
          v7 >>= 7;
          *v4++ = v7;
        }
        while (v8);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v9 = *(_DWORD *)(a1 + 56);
  if (v9)
  {
    for (int i = 0; i != v9; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v11 = *(void *)(*(void *)(a1 + 64) + 8 * i + 8);
      *unint64_t v4 = 18;
      unsigned int v12 = *(_DWORD *)(v11 + 44);
      v4[1] = v12;
      if (v12 > 0x7F) {
        uint64_t v13 = sub_188A9CC(v12, v4 + 1);
      }
      else {
        uint64_t v13 = v4 + 2;
      }
      unint64_t v4 = sub_184B3AC(v11, v13, a3);
    }
  }
  int v14 = *(_DWORD *)(a1 + 80);
  if (v14)
  {
    for (int j = 0; j != v14; ++j)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v16 = *(void *)(*(void *)(a1 + 88) + 8 * j + 8);
      *unint64_t v4 = 26;
      unsigned int v17 = *(_DWORD *)(v16 + 44);
      v4[1] = v17;
      if (v17 > 0x7F) {
        uint64_t v18 = sub_188A9CC(v17, v4 + 1);
      }
      else {
        uint64_t v18 = v4 + 2;
      }
      unint64_t v4 = sub_184B3AC(v16, v18, a3);
    }
  }
  int v19 = *(_DWORD *)(a1 + 104);
  if (v19)
  {
    for (int k = 0; k != v19; ++k)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v21 = *(void *)(*(void *)(a1 + 112) + 8 * k + 8);
      *unint64_t v4 = 34;
      unsigned int v22 = *(_DWORD *)(v21 + 44);
      v4[1] = v22;
      if (v22 > 0x7F) {
        uint64_t v23 = sub_188A9CC(v22, v4 + 1);
      }
      else {
        uint64_t v23 = v4 + 2;
      }
      unint64_t v4 = sub_184B3AC(v21, v23, a3);
    }
  }
  if (*(_WORD *)(a1 + 26)) {
    unint64_t v4 = sub_1886844(a1 + 16, 1000, 2000, v4, a3);
  }
  uint64_t v24 = *(void *)(a1 + 8);
  if ((v24 & 1) == 0) {
    return v4;
  }
  unint64_t v26 = v24 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v26 + 31) < 0)
  {
    uint64_t v27 = *(void **)(v26 + 8);
    uint64_t v28 = *(void *)(v26 + 16);
  }
  else
  {
    uint64_t v27 = (void *)(v26 + 8);
    LODWORD(v28) = *(unsigned __int8 *)(v26 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v28)
  {
    uint64_t v29 = (int)v28;
    memcpy(v4, v27, (int)v28);
    v4 += v29;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v27, v28, v4);
}

uint64_t sub_174E624(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(int *)(a1 + 56);
  uint64_t v4 = v2 + v3;
  uint64_t v5 = *(void *)(a1 + 64);
  if (v5) {
    unint64_t v6 = (uint64_t *)(v5 + 8);
  }
  else {
    unint64_t v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = sub_184B568(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  uint64_t v10 = *(int *)(a1 + 80);
  uint64_t v11 = v4 + v10;
  uint64_t v12 = *(void *)(a1 + 88);
  if (v12) {
    uint64_t v13 = (uint64_t *)(v12 + 8);
  }
  else {
    uint64_t v13 = 0;
  }
  if (v10)
  {
    uint64_t v14 = 8 * v10;
    do
    {
      uint64_t v15 = *v13++;
      uint64_t v16 = sub_184B568(v15);
      v11 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6);
      v14 -= 8;
    }
    while (v14);
  }
  uint64_t v17 = *(int *)(a1 + 104);
  uint64_t v18 = v11 + v17;
  uint64_t v19 = *(void *)(a1 + 112);
  if (v19) {
    uint64_t v20 = (uint64_t *)(v19 + 8);
  }
  else {
    uint64_t v20 = 0;
  }
  if (v17)
  {
    uint64_t v21 = 8 * v17;
    do
    {
      uint64_t v22 = *v20++;
      uint64_t v23 = sub_184B568(v22);
      v18 += v23 + ((9 * (__clz(v23 | 1) ^ 0x1F) + 73) >> 6);
      v21 -= 8;
    }
    while (v21);
  }
  if (*(unsigned char *)(a1 + 40)) {
    v18 += ((9 * (__clz(*(void *)(a1 + 120) | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
  uint64_t v24 = *(void *)(a1 + 8);
  if (v24)
  {
    unint64_t v26 = v24 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v26 + 31) < 0) {
      uint64_t v27 = *(void *)(v26 + 16);
    }
    else {
      uint64_t v27 = *(unsigned __int8 *)(v26 + 31);
    }
    v18 += v27;
  }
  *(_DWORD *)(a1 + 44) = v18;
  return v18;
}

void *sub_174E7A0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.HikeAssociatedInfo");
}

uint64_t sub_174E7B0(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  *(void *)(a1 + 8) = v4;
  *(void *)a1 = off_24D6F18;
  sub_1882BC4(a1 + 16, a2);
  *(_DWORD *)(a1 + 40) = 0;
  return a1;
}

void sub_174E814(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_174E844(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_174E8C0(void *a1)
{
  sub_174E844(a1);

  operator delete();
}

char *sub_174E8F8(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v15 = a2;
  if ((sub_11947B8((uint64_t)a3, &v15, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v5 = (uint64_t *)(a1 + 8);
    unint64_t v6 = (uint64_t **)(a1 + 16);
    while (1)
    {
      uint64_t v7 = v15 + 1;
      unsigned int v8 = *v15;
      if (*v15 < 0)
      {
        unsigned int v9 = v8 + (*v7 << 7);
        unsigned int v8 = v9 - 128;
        if (*v7 < 0)
        {
          uint64_t v7 = (char *)sub_188C180((uint64_t)v15, v9 - 128);
          unsigned int v8 = v10;
        }
        else
        {
          uint64_t v7 = v15 + 2;
        }
      }
      uint64_t v15 = v7;
      if (!v8 || (v8 & 7) == 4) {
        break;
      }
      if ((v8 - 8000) >> 6 > 0x7C)
      {
        if (*v5)
        {
          uint64_t v13 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else
        {
          uint64_t v13 = (std::string *)sub_188DBD8(v5);
          uint64_t v7 = v15;
        }
        uint64_t v12 = sub_1885AC0(v8, v13, v7, a3);
      }
      else
      {
        uint64_t v12 = sub_18859DC(v6, v8, v7, (uint64_t)&off_2547DF0, v5, a3);
      }
      uint64_t v15 = (char *)v12;
      if (!v12) {
        return 0;
      }
      if (sub_11947B8((uint64_t)a3, &v15, a3[11].i32[1])) {
        return v15;
      }
    }
    if (v7)
    {
      a3[10].i32[0] = v8 - 1;
      return v15;
    }
    return 0;
  }
  return v15;
}

char *sub_174EA48(uint64_t a1, char *a2, _DWORD *a3)
{
  uint64_t v4 = a2;
  if (*(_WORD *)(a1 + 26)) {
    uint64_t v4 = sub_1886844(a1 + 16, 1000, 2000, a2, a3);
  }
  uint64_t v6 = *(void *)(a1 + 8);
  if ((v6 & 1) == 0) {
    return v4;
  }
  unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v8 + 31) < 0)
  {
    unsigned int v9 = *(void **)(v8 + 8);
    uint64_t v10 = *(void *)(v8 + 16);
  }
  else
  {
    unsigned int v9 = (void *)(v8 + 8);
    LODWORD(v10) = *(unsigned __int8 *)(v8 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v10)
  {
    uint64_t v11 = (int)v10;
    memcpy(v4, v9, (int)v10);
    v4 += v11;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v9, v10, v4);
}

uint64_t sub_174EB14(uint64_t a1)
{
  uint64_t result = sub_1889280(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v4 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v5 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v5 = *(unsigned __int8 *)(v4 + 31);
    }
    result += v5;
  }
  *(_DWORD *)(a1 + 40) = result;
  return result;
}

void *sub_174EB6C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.HikeAssociatedInfoFilter");
}

uint64_t sub_174EB7C(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  *(void *)(a1 + 8) = v4;
  *(void *)a1 = off_24D6F98;
  sub_1882BC4(a1 + 16, a2);
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  return a1;
}

void sub_174EBE8(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_174EC18(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  uint64_t v4 = a1 + 16;
  *(void *)a1 = off_24D6F98;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 44) = 0;
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v4, a2 + 16);
  if (*(unsigned char *)(a2 + 40)) {
    operator new();
  }
  *(void *)(a1 + 48) = 0;
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  return a1;
}

void sub_174ECF0()
{
}

uint64_t sub_174ED4C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  if ((uint64_t (***)())a1 != &off_2547E20 && *(void *)(a1 + 48))
  {
    sub_1374318();
    operator delete();
  }
  if (*(void *)(a1 + 8)) {
    sub_10E4F74(v3);
  }
LABEL_8:
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_174EE0C(uint64_t a1)
{
  sub_174ED4C(a1);

  operator delete();
}

char *sub_174EE44(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v38 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v38, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    unint64_t v8 = v38 + 1;
    unsigned int v9 = *v38;
    if (*v38 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unint64_t v8 = (char *)sub_188C180((uint64_t)v38, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unint64_t v8 = v38 + 2;
      }
    }
    int v38 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_35;
        }
        v5 |= 2u;
        uint64_t v12 = v8 + 1;
        int v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        int v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          uint64_t v12 = v8 + 2;
LABEL_13:
          int v38 = v12;
          *(_DWORD *)(a1 + 56) = v13;
          goto LABEL_45;
        }
        uint64_t v30 = (char *)sub_188C0D0((uint64_t)v8, v13);
        int v38 = v30;
        *(_DWORD *)(a1 + 56) = v31;
        if (v30) {
          goto LABEL_45;
        }
        goto LABEL_58;
      case 2u:
        if (v9 != 16) {
          goto LABEL_35;
        }
        v5 |= 4u;
        uint64_t v15 = v8 + 1;
        int v16 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_18;
        }
        int v17 = *v15;
        int v16 = v16 + (v17 << 7) - 128;
        if (v17 < 0)
        {
          uint64_t v32 = (char *)sub_188C0D0((uint64_t)v8, v16);
          int v38 = v32;
          *(_DWORD *)(a1 + 60) = v33;
          if (!v32) {
            goto LABEL_58;
          }
        }
        else
        {
          uint64_t v15 = v8 + 2;
LABEL_18:
          int v38 = v15;
          *(_DWORD *)(a1 + 60) = v16;
        }
        goto LABEL_45;
      case 3u:
        if (v9 != 24) {
          goto LABEL_35;
        }
        v5 |= 8u;
        uint64_t v18 = v8 + 1;
        int v19 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_23;
        }
        int v20 = *v18;
        int v19 = v19 + (v20 << 7) - 128;
        if (v20 < 0)
        {
          unsigned int v34 = (char *)sub_188C0D0((uint64_t)v8, v19);
          int v38 = v34;
          *(_DWORD *)(a1 + 64) = v35;
          if (!v34) {
            goto LABEL_58;
          }
        }
        else
        {
          uint64_t v18 = v8 + 2;
LABEL_23:
          int v38 = v18;
          *(_DWORD *)(a1 + 64) = v19;
        }
        goto LABEL_45;
      case 4u:
        if (v9 != 32) {
          goto LABEL_35;
        }
        v5 |= 0x10u;
        uint64_t v21 = v8 + 1;
        int v22 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_28;
        }
        int v23 = *v21;
        int v22 = v22 + (v23 << 7) - 128;
        if (v23 < 0)
        {
          uint64_t v36 = (char *)sub_188C0D0((uint64_t)v8, v22);
          int v38 = v36;
          *(_DWORD *)(a1 + 68) = v37;
          if (!v36) {
            goto LABEL_58;
          }
        }
        else
        {
          uint64_t v21 = v8 + 2;
LABEL_28:
          int v38 = v21;
          *(_DWORD *)(a1 + 68) = v22;
        }
        goto LABEL_45;
      case 5u:
        if (v9 != 42) {
          goto LABEL_35;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        uint64_t v24 = *(void *)(a1 + 48);
        if (!v24)
        {
          uint64_t v25 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v25 = (void *)*v25;
          }
          sub_13D6A1C((uint64_t)v25);
          uint64_t v24 = v26;
          *(void *)(a1 + 48) = v26;
          unint64_t v8 = v38;
        }
        uint64_t v27 = (char *)sub_13319DC(a3, v24, (unsigned __int8 *)v8);
        goto LABEL_44;
      default:
LABEL_35:
        if (v9) {
          BOOL v28 = (v9 & 7) == 4;
        }
        else {
          BOOL v28 = 1;
        }
        if (!v28)
        {
          if ((v9 - 8000) >> 6 > 0x7C)
          {
            if (*v7)
            {
              uint64_t v29 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              uint64_t v29 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              unint64_t v8 = v38;
            }
            uint64_t v27 = (char *)sub_1885AC0(v9, v29, v8, a3);
          }
          else
          {
            uint64_t v27 = (char *)sub_18859DC((uint64_t **)(a1 + 16), v9, v8, (uint64_t)&off_2547E20, (uint64_t *)(a1 + 8), a3);
          }
LABEL_44:
          int v38 = v27;
          if (!v27) {
            goto LABEL_58;
          }
LABEL_45:
          if (sub_11947B8((uint64_t)a3, &v38, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_58:
        }
          int v38 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 40) |= v5;
        return v38;
    }
  }
}

char *sub_174F1B4(uint64_t a1, char *a2, unint64_t *a3)
{
  uint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 56);
    *uint64_t v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 60);
    *uint64_t v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v13 = *(_DWORD *)(a1 + 64);
    *uint64_t v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unsigned int v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v16 = *(_DWORD *)(a1 + 68);
    *uint64_t v4 = 32;
    v4[1] = v16;
    if (v16 > 0x7F)
    {
      v4[1] = v16 | 0x80;
      unsigned int v17 = v16 >> 7;
      v4[2] = v16 >> 7;
      v4 += 3;
      if (v16 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v18 = v17 >> 14;
          v17 >>= 7;
          *v4++ = v17;
        }
        while (v18);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v19 = *(void *)(a1 + 48);
    *uint64_t v4 = 42;
    unsigned int v20 = *(_DWORD *)(v19 + 20);
    v4[1] = v20;
    if (v20 > 0x7F) {
      uint64_t v21 = sub_188A9CC(v20, v4 + 1);
    }
    else {
      uint64_t v21 = v4 + 2;
    }
    uint64_t v4 = sub_1374B08(v19, v21, a3);
  }
  if (*(_WORD *)(a1 + 26)) {
    uint64_t v4 = sub_1886844(a1 + 16, 1000, 2000, v4, a3);
  }
  uint64_t v22 = *(void *)(a1 + 8);
  if ((v22 & 1) == 0) {
    return v4;
  }
  unint64_t v24 = v22 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v24 + 31) < 0)
  {
    uint64_t v25 = *(void **)(v24 + 8);
    uint64_t v26 = *(void *)(v24 + 16);
  }
  else
  {
    uint64_t v25 = (void *)(v24 + 8);
    LODWORD(v26) = *(unsigned __int8 *)(v24 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v26)
  {
    uint64_t v27 = (int)v26;
    memcpy(v4, v25, (int)v26);
    v4 += v27;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v25, v26, v4);
}

uint64_t sub_174F4D8(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  int v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 0x1F) == 0) {
    goto LABEL_8;
  }
  if (v3)
  {
    uint64_t v6 = sub_1374EEC(*(void *)(a1 + 48));
    v2 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v3 & 2) == 0)
    {
LABEL_4:
      if ((v3 & 4) == 0) {
        goto LABEL_5;
      }
LABEL_12:
      v2 += ((9 * (__clz(*(_DWORD *)(a1 + 60) | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v3 & 8) == 0)
      {
LABEL_6:
        if ((v3 & 0x10) == 0) {
          goto LABEL_8;
        }
        goto LABEL_7;
      }
      goto LABEL_13;
    }
  }
  else if ((v3 & 2) == 0)
  {
    goto LABEL_4;
  }
  v2 += ((9 * (__clz(*(_DWORD *)(a1 + 56) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v3 & 4) != 0) {
    goto LABEL_12;
  }
LABEL_5:
  if ((v3 & 8) == 0) {
    goto LABEL_6;
  }
LABEL_13:
  v2 += ((9 * (__clz(*(_DWORD *)(a1 + 64) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v3 & 0x10) != 0) {
LABEL_7:
  }
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 68) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_8:
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v7 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v7 + 31) < 0) {
      uint64_t v8 = *(void *)(v7 + 16);
    }
    else {
      uint64_t v8 = *(unsigned __int8 *)(v7 + 31);
    }
    v2 += v8;
  }
  *(_DWORD *)(a1 + 44) = v2;
  return v2;
}

void *sub_174F630@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.HikeSummary");
}

uint64_t sub_174F640(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  *(void *)(a1 + 8) = v4;
  *(void *)a1 = off_24D7018;
  sub_1882BC4(a1 + 16, a2);
  *(_DWORD *)(a1 + 40) = 0;
  return a1;
}

void sub_174F6A4(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_174F6D4(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_174F750(void *a1)
{
  sub_174F6D4(a1);

  operator delete();
}

char *sub_174F788(uint64_t a1, char *a2, int32x2_t *a3)
{
  unsigned int v15 = a2;
  if ((sub_11947B8((uint64_t)a3, &v15, a3[11].i32[1]) & 1) == 0)
  {
    int v5 = (uint64_t *)(a1 + 8);
    uint64_t v6 = (uint64_t **)(a1 + 16);
    while (1)
    {
      unint64_t v7 = v15 + 1;
      unsigned int v8 = *v15;
      if (*v15 < 0)
      {
        unsigned int v9 = v8 + (*v7 << 7);
        unsigned int v8 = v9 - 128;
        if (*v7 < 0)
        {
          unint64_t v7 = (char *)sub_188C180((uint64_t)v15, v9 - 128);
          unsigned int v8 = v10;
        }
        else
        {
          unint64_t v7 = v15 + 2;
        }
      }
      unsigned int v15 = v7;
      if (!v8 || (v8 & 7) == 4) {
        break;
      }
      if ((v8 - 8000) >> 6 > 0x7C)
      {
        if (*v5)
        {
          unsigned int v13 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else
        {
          unsigned int v13 = (std::string *)sub_188DBD8(v5);
          unint64_t v7 = v15;
        }
        unsigned int v12 = sub_1885AC0(v8, v13, v7, a3);
      }
      else
      {
        unsigned int v12 = sub_18859DC(v6, v8, v7, (uint64_t)&off_2547E68, v5, a3);
      }
      unsigned int v15 = (char *)v12;
      if (!v12) {
        return 0;
      }
      if (sub_11947B8((uint64_t)a3, &v15, a3[11].i32[1])) {
        return v15;
      }
    }
    if (v7)
    {
      a3[10].i32[0] = v8 - 1;
      return v15;
    }
    return 0;
  }
  return v15;
}

char *sub_174F8D8(uint64_t a1, char *a2, _DWORD *a3)
{
  uint64_t v4 = a2;
  if (*(_WORD *)(a1 + 26)) {
    uint64_t v4 = sub_1886844(a1 + 16, 1000, 2000, a2, a3);
  }
  uint64_t v6 = *(void *)(a1 + 8);
  if ((v6 & 1) == 0) {
    return v4;
  }
  unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v8 + 31) < 0)
  {
    unsigned int v9 = *(void **)(v8 + 8);
    uint64_t v10 = *(void *)(v8 + 16);
  }
  else
  {
    unsigned int v9 = (void *)(v8 + 8);
    LODWORD(v10) = *(unsigned __int8 *)(v8 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v10)
  {
    uint64_t v11 = (int)v10;
    memcpy(v4, v9, (int)v10);
    v4 += v11;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v9, v10, v4);
}

uint64_t sub_174F9A4(uint64_t a1)
{
  uint64_t result = sub_1889280(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v4 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v5 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v5 = *(unsigned __int8 *)(v4 + 31);
    }
    result += v5;
  }
  *(_DWORD *)(a1 + 40) = result;
  return result;
}

void *sub_174F9FC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.HikeSummaryFilter");
}

void *sub_174FA0C(void *a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  a1[1] = v4;
  *a1 = off_24D7098;
  sub_1882BC4((uint64_t)(a1 + 2), a2);
  a1[5] = 0;
  a1[6] = &qword_2550250;
  return a1;
}

void sub_174FA7C(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_174FAAC(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (void *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = a1 + 16;
  *(void *)a1 = off_24D7098;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 44) = 0;
  uint64_t v6 = *(void *)(a2 + 8);
  if (v6) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v5, a2 + 16);
  *(void *)(a1 + 48) = &qword_2550250;
  if (*(unsigned char *)(a2 + 40))
  {
    unint64_t v7 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      unint64_t v7 = (uint64_t *)*v7;
    }
    sub_1881DF4((std::string **)(a1 + 48), (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL), v7);
  }
  return a1;
}

void sub_174FB7C(_Unwind_Exception *a1)
{
  sub_1882CC0(v3);
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_174FBB8(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_174FC60(uint64_t a1)
{
  sub_174FBB8(a1);

  operator delete();
}

uint64_t sub_174FC98(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unsigned int v17 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v17, a3[11].i32[1])) {
    return *(void *)v17;
  }
  uint64_t v5 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v6 = (char *)(*(void *)v17 + 1);
    unsigned int v7 = **(unsigned char **)v17;
    if ((char)**(unsigned char **)v17 < 0)
    {
      unsigned int v8 = v7 + (*v6 << 7);
      unsigned int v7 = v8 - 128;
      if (*v6 < 0)
      {
        uint64_t v6 = (char *)sub_188C180(*(uint64_t *)v17, v8 - 128);
        unsigned int v7 = v9;
      }
      else
      {
        uint64_t v6 = (char *)(*(void *)v17 + 2);
      }
    }
    *(void *)unsigned int v17 = v6;
    if (v7 != 10) {
      break;
    }
    *(_DWORD *)(a1 + 40) |= 1u;
    uint64_t v12 = *(void *)(a1 + 8);
    unsigned int v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
    if (v12) {
      unsigned int v13 = (uint64_t *)*v13;
    }
    unsigned int v14 = (std::string *)sub_1880F84((void *)(a1 + 48), v13);
    uint64_t v11 = (void *)sub_188C244(v14, *(char **)v17, (uint64_t)a3);
LABEL_20:
    *(void *)unsigned int v17 = v11;
    if (!v11) {
      goto LABEL_27;
    }
    if (sub_11947B8((uint64_t)a3, (char **)v17, a3[11].i32[1])) {
      return *(void *)v17;
    }
  }
  if (v7) {
    BOOL v10 = (v7 & 7) == 4;
  }
  else {
    BOOL v10 = 1;
  }
  if (!v10)
  {
    if ((v7 - 8000) >> 6 > 0x7C)
    {
      if (*v5)
      {
        unsigned int v15 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        unsigned int v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        uint64_t v6 = *(char **)v17;
      }
      uint64_t v11 = sub_1885AC0(v7, v15, v6, a3);
    }
    else
    {
      uint64_t v11 = sub_18859DC((uint64_t **)(a1 + 16), v7, v6, (uint64_t)&off_2547E98, (uint64_t *)(a1 + 8), a3);
    }
    goto LABEL_20;
  }
  if (v6)
  {
    a3[10].i32[0] = v7 - 1;
    return *(void *)v17;
  }
LABEL_27:
  *(void *)unsigned int v17 = 0;
  return *(void *)v17;
}

char *sub_174FE34(uint64_t a1, char *a2, void *a3)
{
  uint64_t v4 = a2;
  if (*(unsigned char *)(a1 + 40)) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), a2);
  }
  if (*(_WORD *)(a1 + 26)) {
    uint64_t v4 = sub_1886844(a1 + 16, 1000, 2000, v4, a3);
  }
  uint64_t v6 = *(void *)(a1 + 8);
  if ((v6 & 1) == 0) {
    return v4;
  }
  unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v8 + 31) < 0)
  {
    unsigned int v9 = *(void **)(v8 + 8);
    uint64_t v10 = *(void *)(v8 + 16);
  }
  else
  {
    unsigned int v9 = (void *)(v8 + 8);
    LODWORD(v10) = *(unsigned __int8 *)(v8 + 31);
  }
  if (*a3 - (void)v4 >= (int)v10)
  {
    uint64_t v11 = (int)v10;
    memcpy(v4, v9, (int)v10);
    v4 += v11;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v9, v10, v4);
}

uint64_t sub_174FF24(uint64_t a1)
{
  uint64_t result = sub_1889280(a1 + 16);
  if (*(unsigned char *)(a1 + 40))
  {
    unint64_t v3 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
    uint64_t v5 = *(void *)(v3 + 8);
    if ((v4 & 0x80u) == 0) {
      uint64_t v5 = v4;
    }
    result += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v6 = *(void *)(a1 + 8);
  if (v6)
  {
    unint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v7 + 31) < 0) {
      uint64_t v8 = *(void *)(v7 + 16);
    }
    else {
      uint64_t v8 = *(unsigned __int8 *)(v7 + 31);
    }
    result += v8;
  }
  *(_DWORD *)(a1 + 44) = result;
  return result;
}

void *sub_174FFC4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.HikeGeometry");
}

uint64_t sub_174FFD4(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  *(void *)(a1 + 8) = v4;
  *(void *)a1 = off_24D7118;
  sub_1882BC4(a1 + 16, a2);
  *(_DWORD *)(a1 + 40) = 0;
  return a1;
}

void sub_1750038(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_1750068(void *a1)
{
  unint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17500E4(void *a1)
{
  sub_1750068(a1);

  operator delete();
}

char *sub_175011C(uint64_t a1, char *a2, int32x2_t *a3)
{
  unsigned int v15 = a2;
  if ((sub_11947B8((uint64_t)a3, &v15, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v5 = (uint64_t *)(a1 + 8);
    uint64_t v6 = (uint64_t **)(a1 + 16);
    while (1)
    {
      unint64_t v7 = v15 + 1;
      unsigned int v8 = *v15;
      if (*v15 < 0)
      {
        unsigned int v9 = v8 + (*v7 << 7);
        unsigned int v8 = v9 - 128;
        if (*v7 < 0)
        {
          unint64_t v7 = (char *)sub_188C180((uint64_t)v15, v9 - 128);
          unsigned int v8 = v10;
        }
        else
        {
          unint64_t v7 = v15 + 2;
        }
      }
      unsigned int v15 = v7;
      if (!v8 || (v8 & 7) == 4) {
        break;
      }
      if ((v8 - 8000) >> 6 > 0x7C)
      {
        if (*v5)
        {
          unsigned int v13 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else
        {
          unsigned int v13 = (std::string *)sub_188DBD8(v5);
          unint64_t v7 = v15;
        }
        uint64_t v12 = sub_1885AC0(v8, v13, v7, a3);
      }
      else
      {
        uint64_t v12 = sub_18859DC(v6, v8, v7, (uint64_t)&off_2547ED0, v5, a3);
      }
      unsigned int v15 = (char *)v12;
      if (!v12) {
        return 0;
      }
      if (sub_11947B8((uint64_t)a3, &v15, a3[11].i32[1])) {
        return v15;
      }
    }
    if (v7)
    {
      a3[10].i32[0] = v8 - 1;
      return v15;
    }
    return 0;
  }
  return v15;
}

char *sub_175026C(uint64_t a1, char *a2, _DWORD *a3)
{
  uint64_t v4 = a2;
  if (*(_WORD *)(a1 + 26)) {
    uint64_t v4 = sub_1886844(a1 + 16, 1000, 2000, a2, a3);
  }
  uint64_t v6 = *(void *)(a1 + 8);
  if ((v6 & 1) == 0) {
    return v4;
  }
  unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v8 + 31) < 0)
  {
    unsigned int v9 = *(void **)(v8 + 8);
    uint64_t v10 = *(void *)(v8 + 16);
  }
  else
  {
    unsigned int v9 = (void *)(v8 + 8);
    LODWORD(v10) = *(unsigned __int8 *)(v8 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v10)
  {
    uint64_t v11 = (int)v10;
    memcpy(v4, v9, (int)v10);
    v4 += v11;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v9, v10, v4);
}

uint64_t sub_1750338(uint64_t a1)
{
  uint64_t result = sub_1889280(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v4 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v5 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v5 = *(unsigned __int8 *)(v4 + 31);
    }
    result += v5;
  }
  *(_DWORD *)(a1 + 40) = result;
  return result;
}

void *sub_1750390@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.HikeGeometryFilter");
}

uint64_t sub_17503A0(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  unint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_9;
    }
  }
  else if (v4)
  {
    goto LABEL_9;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_9:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1750458(uint64_t a1)
{
  sub_17503A0(a1);

  operator delete();
}

uint64_t sub_1750490(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0) {
    goto LABEL_11;
  }
  if ((v1 & 1) == 0)
  {
LABEL_5:
    if ((v1 & 2) != 0) {
      goto LABEL_6;
    }
    goto LABEL_11;
  }
  unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v2 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v2 = 0;
    *(unsigned char *)(v2 + 23) = 0;
    goto LABEL_5;
  }
  **(unsigned char **)unint64_t v2 = 0;
  *(void *)(v2 + 8) = 0;
  if ((v1 & 2) != 0)
  {
LABEL_6:
    unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)unint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
LABEL_11:
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v5) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_175050C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unsigned int v20 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
    return *(void *)v20;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    unint64_t v7 = (char *)(*(void *)v20 + 1);
    unsigned int v8 = **(unsigned char **)v20;
    if ((char)**(unsigned char **)v20 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        unint64_t v7 = (char *)sub_188C180(*(uint64_t *)v20, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        unint64_t v7 = (char *)(*(void *)v20 + 2);
      }
    }
    *(void *)unsigned int v20 = v7;
    if (v8 >> 3 == 2)
    {
      if (v8 == 18)
      {
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v15 = *(void *)(a1 + 8);
        unsigned int v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          unsigned int v16 = (uint64_t *)*v16;
        }
        unsigned int v17 = (void *)(a1 + 32);
        goto LABEL_27;
      }
    }
    else if (v8 >> 3 == 1 && v8 == 10)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v18 = *(void *)(a1 + 8);
      unsigned int v16 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
      if (v18) {
        unsigned int v16 = (uint64_t *)*v16;
      }
      unsigned int v17 = (void *)(a1 + 24);
LABEL_27:
      uint64_t v19 = (std::string *)sub_1880F84(v17, v16);
      unsigned int v14 = (void *)sub_188C244(v19, *(char **)v20, (uint64_t)a3);
      goto LABEL_28;
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      unsigned int v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unsigned int v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unint64_t v7 = *(char **)v20;
    }
    unsigned int v14 = sub_1885AC0(v8, v13, v7, a3);
LABEL_28:
    *(void *)unsigned int v20 = v14;
    if (!v14) {
      goto LABEL_34;
    }
    if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
      return *(void *)v20;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v20;
  }
LABEL_34:
  *(void *)unsigned int v20 = 0;
  return *(void *)v20;
}

char *sub_17506B4(uint64_t a1, char *__dst, void *a3)
{
  unint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    unint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 2) != 0) {
    unint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v9 + 31) < 0)
  {
    unsigned int v10 = *(void **)(v9 + 8);
    uint64_t v11 = *(void *)(v9 + 16);
  }
  else
  {
    unsigned int v10 = (void *)(v9 + 8);
    LODWORD(v11) = *(unsigned __int8 *)(v9 + 31);
  }
  if (*a3 - (void)v4 >= (int)v11)
  {
    uint64_t v12 = (int)v11;
    memcpy(v4, v10, (int)v11);
    v4 += v12;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v10, v11, v4);
}

uint64_t sub_17507A0(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_12;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
  uint64_t v5 = *(void *)(v3 + 8);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = v4;
  }
  uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    unint64_t v6 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    v2 += v12;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_175087C()
{
  return 1;
}

void *sub_1750884@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.AddressComponent");
}

uint64_t sub_1750894(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  *(void *)(a1 + 8) = v5;
  *(void *)a1 = off_24D7218;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = a2;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = a2;
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 104) = 0;
  *(void *)(a1 + 88) = a2;
  *(_DWORD *)(a1 + 112) = 0;
  return a1;
}

void sub_1750910(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_1750940(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = a1 + 16;
  *(void *)a1 = off_24D7218;
  *(_DWORD *)(a1 + 24) = 0;
  uint64_t v6 = a1 + 40;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  int v7 = *(_DWORD *)(a2 + 48);
  if (v7)
  {
    uint64_t v8 = *(void *)(a2 + 56);
    uint64_t v9 = (std::string **)sub_188CCE4(a1 + 40, *(_DWORD *)(a2 + 48));
    sub_188FB98(v6, v9, (const std::string **)(v8 + 8), v7, **(_DWORD **)(a1 + 56) - *(_DWORD *)(a1 + 48));
    int v10 = *(_DWORD *)(a1 + 48) + v7;
    *(_DWORD *)(a1 + 48) = v10;
    unint64_t v11 = *(int **)(a1 + 56);
    if (*v11 < v10) {
      *unint64_t v11 = v10;
    }
  }
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0;
  int v12 = *(_DWORD *)(a2 + 72);
  if (v12)
  {
    uint64_t v13 = *(void *)(a2 + 80);
    unsigned int v14 = (std::string **)sub_188CCE4(a1 + 64, *(_DWORD *)(a2 + 72));
    sub_122B128((std::string *)(a1 + 64), v14, (uint64_t *)(v13 + 8), v12, **(_DWORD **)(a1 + 80) - *(_DWORD *)(a1 + 72));
    int v15 = *(_DWORD *)(a1 + 72) + v12;
    *(_DWORD *)(a1 + 72) = v15;
    unsigned int v16 = *(int **)(a1 + 80);
    if (*v16 < v15) {
      int *v16 = v15;
    }
  }
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 104) = 0;
  int v17 = *(_DWORD *)(a2 + 96);
  if (v17)
  {
    uint64_t v18 = *(void *)(a2 + 104);
    uint64_t v19 = (std::string **)sub_188CCE4(a1 + 88, *(_DWORD *)(a2 + 96));
    sub_122B128((std::string *)(a1 + 88), v19, (uint64_t *)(v18 + 8), v17, **(_DWORD **)(a1 + 104) - *(_DWORD *)(a1 + 96));
    int v20 = *(_DWORD *)(a1 + 96) + v17;
    *(_DWORD *)(a1 + 96) = v20;
    uint64_t v21 = *(int **)(a1 + 104);
    if (*v21 < v20) {
      *uint64_t v21 = v20;
    }
  }
  *(_DWORD *)(a1 + 112) = 0;
  uint64_t v22 = *(void *)(a2 + 8);
  if (v22) {
    sub_188B4F8(v4, (v22 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v5, a2 + 16);
  return a1;
}

void sub_1750B18(_Unwind_Exception *a1)
{
  sub_122AC28(v5);
  sub_1889DE8(v4);
  sub_1882CC0(v3);
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_1750B8C(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_122AC28(a1 + 11);
  sub_122AC28(a1 + 8);
  sub_1889DE8(a1 + 5);
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1750C28(void *a1)
{
  sub_1750B8C(a1);

  operator delete();
}

uint64_t sub_1750C60(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v36 = a2;
  if ((sub_11947B8((uint64_t)a3, (char **)v36, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v6 = (uint64_t **)(a1 + 40);
    int v7 = (void *)(a1 + 8);
    while (1)
    {
      uint64_t v8 = (char *)(*(void *)v36 + 1);
      unsigned int v9 = **(unsigned char **)v36;
      if ((char)**(unsigned char **)v36 < 0)
      {
        unsigned int v10 = v9 + (*v8 << 7);
        unsigned int v9 = v10 - 128;
        if (*v8 < 0)
        {
          uint64_t v8 = (char *)sub_188C180(*(uint64_t *)v36, v10 - 128);
          unsigned int v9 = v11;
        }
        else
        {
          uint64_t v8 = (char *)(*(void *)v36 + 2);
        }
      }
      *(void *)uint64_t v36 = v8;
      unsigned int v12 = v9 >> 3;
      if (v9 >> 3 == 3)
      {
        if (v9 == 26)
        {
          unsigned int v16 = v8 - 1;
          while (1)
          {
            int v17 = (unsigned __int8 *)(v16 + 1);
            *(void *)uint64_t v36 = v16 + 1;
            uint64_t v18 = *(_DWORD **)(a1 + 104);
            if (v18 && (uint64_t v19 = *(int *)(a1 + 96), (int)v19 < *v18))
            {
              *(_DWORD *)(a1 + 96) = v19 + 1;
              uint64_t v20 = *(void *)&v18[2 * v19 + 2];
            }
            else
            {
              uint64_t v21 = sub_178BD90(*(void *)(a1 + 88));
              uint64_t v20 = sub_188CDC8(a1 + 88, (uint64_t)v21);
              int v17 = *(unsigned __int8 **)v36;
            }
            unsigned int v16 = (char *)sub_11DFC50(a3, v20, v17);
            *(void *)uint64_t v36 = v16;
            if (!v16) {
              goto LABEL_60;
            }
            if (*(void *)a3 <= (unint64_t)v16 || *v16 != 26) {
              goto LABEL_55;
            }
          }
        }
      }
      else if (v12 == 2)
      {
        if (v9 == 18)
        {
          uint64_t v22 = v8 - 1;
          while (1)
          {
            int v23 = (unsigned __int8 *)(v22 + 1);
            *(void *)uint64_t v36 = v22 + 1;
            unint64_t v24 = *(_DWORD **)(a1 + 80);
            if (v24 && (uint64_t v25 = *(int *)(a1 + 72), (int)v25 < *v24))
            {
              *(_DWORD *)(a1 + 72) = v25 + 1;
              uint64_t v26 = *(void *)&v24[2 * v25 + 2];
            }
            else
            {
              uint64_t v27 = sub_178BD90(*(void *)(a1 + 64));
              uint64_t v26 = sub_188CDC8(a1 + 64, (uint64_t)v27);
              int v23 = *(unsigned __int8 **)v36;
            }
            uint64_t v22 = (char *)sub_11DFC50(a3, v26, v23);
            *(void *)uint64_t v36 = v22;
            if (!v22) {
              goto LABEL_60;
            }
            if (*(void *)a3 <= (unint64_t)v22 || *v22 != 18) {
              goto LABEL_55;
            }
          }
        }
      }
      else if (v12 == 1 && v9 == 10)
      {
        BOOL v28 = v8 - 1;
        while (1)
        {
          uint64_t v29 = (char *)(v28 + 1);
          *(void *)uint64_t v36 = v28 + 1;
          uint64_t v30 = *(_DWORD **)(a1 + 56);
          if (v30 && (uint64_t v31 = *(int *)(a1 + 48), (int)v31 < *v30))
          {
            *(_DWORD *)(a1 + 48) = v31 + 1;
            uint64_t v32 = *(std::string **)&v30[2 * v31 + 2];
          }
          else
          {
            if (!*v6) {
              operator new();
            }
            *unsigned int v34 = v33;
            v34[1] = sub_3A6EDC;
            *int v33 = 0;
            v33[1] = 0;
            v33[2] = 0;
            uint64_t v32 = (std::string *)sub_188CDC8(a1 + 40, (uint64_t)v33);
            uint64_t v29 = *(char **)v36;
          }
          BOOL v28 = sub_188C244(v32, v29, (uint64_t)a3);
          *(void *)uint64_t v36 = v28;
          if (!v28) {
            goto LABEL_60;
          }
          if (*(void *)a3 <= (unint64_t)v28 || *v28 != 10) {
            goto LABEL_55;
          }
        }
      }
      if (!v9 || (v9 & 7) == 4) {
        break;
      }
      if ((v9 - 8000) >> 6 > 0x7C)
      {
        if (*v7)
        {
          int v35 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else
        {
          int v35 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          uint64_t v8 = *(char **)v36;
        }
        int v15 = sub_1885AC0(v9, v35, v8, a3);
      }
      else
      {
        int v15 = sub_18859DC((uint64_t **)(a1 + 16), v9, v8, (uint64_t)&off_2547F00, (uint64_t *)(a1 + 8), a3);
      }
      *(void *)uint64_t v36 = v15;
      if (!v15) {
        goto LABEL_60;
      }
LABEL_55:
      if (sub_11947B8((uint64_t)a3, (char **)v36, a3[11].i32[1])) {
        return *(void *)v36;
      }
    }
    if (v8)
    {
      a3[10].i32[0] = v9 - 1;
      return *(void *)v36;
    }
LABEL_60:
    *(void *)uint64_t v36 = 0;
  }
  return *(void *)v36;
}

char *sub_1750FD4(uint64_t a1, char *a2, _DWORD *a3)
{
  uint64_t v6 = *(unsigned int *)(a1 + 48);
  if ((int)v6 >= 1)
  {
    uint64_t v7 = 0;
    uint64_t v8 = 8 * v6;
    do
    {
      unsigned int v9 = *(void **)(*(void *)(a1 + 56) + v7 + 8);
      if (*((char *)v9 + 23) < 0)
      {
        int64_t v10 = v9[1];
        if (v10 > 127) {
          goto LABEL_12;
        }
      }
      else
      {
        int64_t v10 = *((unsigned __int8 *)v9 + 23);
      }
      if (*(void *)a3 - (void)a2 + 14 >= v10)
      {
        *a2 = 10;
        a2[1] = v10;
        if (*((char *)v9 + 23) < 0) {
          unsigned int v9 = (void *)*v9;
        }
        unsigned int v11 = a2 + 2;
        memcpy(v11, v9, v10);
        a2 = &v11[v10];
        goto LABEL_10;
      }
LABEL_12:
      a2 = (char *)sub_188A868(a3, 1, (uint64_t)v9, a2);
LABEL_10:
      v7 += 8;
    }
    while (v8 != v7);
  }
  int v12 = *(_DWORD *)(a1 + 72);
  if (v12)
  {
    for (int i = 0; i != v12; ++i)
    {
      if (*(void *)a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v14 = *(void *)(*(void *)(a1 + 80) + 8 * i + 8);
      *a2 = 18;
      unsigned int v15 = *(_DWORD *)(v14 + 20);
      a2[1] = v15;
      if (v15 > 0x7F) {
        unsigned int v16 = sub_188A9CC(v15, a2 + 1);
      }
      else {
        unsigned int v16 = a2 + 2;
      }
      a2 = sub_17506B4(v14, v16, a3);
    }
  }
  int v17 = *(_DWORD *)(a1 + 96);
  if (v17)
  {
    for (int j = 0; j != v17; ++j)
    {
      if (*(void *)a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v19 = *(void *)(*(void *)(a1 + 104) + 8 * j + 8);
      *a2 = 26;
      unsigned int v20 = *(_DWORD *)(v19 + 20);
      a2[1] = v20;
      if (v20 > 0x7F) {
        uint64_t v21 = sub_188A9CC(v20, a2 + 1);
      }
      else {
        uint64_t v21 = a2 + 2;
      }
      a2 = sub_17506B4(v19, v21, a3);
    }
  }
  if (*(_WORD *)(a1 + 26)) {
    a2 = sub_1886844(a1 + 16, 1000, 2000, a2, a3);
  }
  uint64_t v22 = *(void *)(a1 + 8);
  if ((v22 & 1) == 0) {
    return a2;
  }
  unint64_t v24 = v22 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v24 + 31) < 0)
  {
    uint64_t v25 = *(void **)(v24 + 8);
    uint64_t v26 = *(void *)(v24 + 16);
  }
  else
  {
    uint64_t v25 = (void *)(v24 + 8);
    LODWORD(v26) = *(unsigned __int8 *)(v24 + 31);
  }
  if (*(void *)a3 - (void)a2 >= (int)v26)
  {
    uint64_t v27 = (int)v26;
    memcpy(a2, v25, (int)v26);
    a2 += v27;
    return a2;
  }

  return (char *)sub_188A528(a3, (char *)v25, v26, a2);
}

uint64_t sub_1751268(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(unsigned int *)(a1 + 48);
  uint64_t v4 = v2 + v3;
  if ((int)v3 >= 1)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a1 + 56) + 8);
    do
    {
      uint64_t v6 = *v5++;
      uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
      uint64_t v8 = *(void *)(v6 + 8);
      if ((v7 & 0x80u) == 0) {
        uint64_t v8 = v7;
      }
      v4 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6);
      --v3;
    }
    while (v3);
  }
  uint64_t v9 = *(int *)(a1 + 72);
  uint64_t v10 = v4 + v9;
  uint64_t v11 = *(void *)(a1 + 80);
  if (v11) {
    int v12 = (uint64_t *)(v11 + 8);
  }
  else {
    int v12 = 0;
  }
  if (v9)
  {
    uint64_t v13 = 8 * v9;
    do
    {
      uint64_t v14 = *v12++;
      uint64_t v15 = sub_17507A0(v14);
      v10 += v15 + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6);
      v13 -= 8;
    }
    while (v13);
  }
  uint64_t v16 = *(int *)(a1 + 96);
  uint64_t v17 = v10 + v16;
  uint64_t v18 = *(void *)(a1 + 104);
  if (v18) {
    uint64_t v19 = (uint64_t *)(v18 + 8);
  }
  else {
    uint64_t v19 = 0;
  }
  if (v16)
  {
    uint64_t v20 = 8 * v16;
    do
    {
      uint64_t v21 = *v19++;
      uint64_t v22 = sub_17507A0(v21);
      v17 += v22 + ((9 * (__clz(v22 | 1) ^ 0x1F) + 73) >> 6);
      v20 -= 8;
    }
    while (v20);
  }
  uint64_t v23 = *(void *)(a1 + 8);
  if (v23)
  {
    unint64_t v25 = v23 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v25 + 31) < 0) {
      uint64_t v26 = *(void *)(v25 + 16);
    }
    else {
      uint64_t v26 = *(unsigned __int8 *)(v25 + 31);
    }
    v17 += v26;
  }
  *(_DWORD *)(a1 + 112) = v17;
  return v17;
}

void *sub_17513C4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.AddressWithComponents");
}

uint64_t sub_17513D4(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  *(void *)(a1 + 8) = v4;
  *(void *)a1 = off_24D7298;
  sub_1882BC4(a1 + 16, a2);
  *(_DWORD *)(a1 + 40) = 0;
  return a1;
}

void sub_1751438(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_1751468(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17514E4(void *a1)
{
  sub_1751468(a1);

  operator delete();
}

char *sub_175151C(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v15 = a2;
  if ((sub_11947B8((uint64_t)a3, &v15, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v5 = (uint64_t *)(a1 + 8);
    uint64_t v6 = (uint64_t **)(a1 + 16);
    while (1)
    {
      uint64_t v7 = v15 + 1;
      unsigned int v8 = *v15;
      if (*v15 < 0)
      {
        unsigned int v9 = v8 + (*v7 << 7);
        unsigned int v8 = v9 - 128;
        if (*v7 < 0)
        {
          uint64_t v7 = (char *)sub_188C180((uint64_t)v15, v9 - 128);
          unsigned int v8 = v10;
        }
        else
        {
          uint64_t v7 = v15 + 2;
        }
      }
      uint64_t v15 = v7;
      if (!v8 || (v8 & 7) == 4) {
        break;
      }
      if ((v8 - 8000) >> 6 > 0x7C)
      {
        if (*v5)
        {
          uint64_t v13 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else
        {
          uint64_t v13 = (std::string *)sub_188DBD8(v5);
          uint64_t v7 = v15;
        }
        int v12 = sub_1885AC0(v8, v13, v7, a3);
      }
      else
      {
        int v12 = sub_18859DC(v6, v8, v7, (uint64_t)&off_2547F78, v5, a3);
      }
      uint64_t v15 = (char *)v12;
      if (!v12) {
        return 0;
      }
      if (sub_11947B8((uint64_t)a3, &v15, a3[11].i32[1])) {
        return v15;
      }
    }
    if (v7)
    {
      a3[10].i32[0] = v8 - 1;
      return v15;
    }
    return 0;
  }
  return v15;
}

char *sub_175166C(uint64_t a1, char *a2, _DWORD *a3)
{
  uint64_t v4 = a2;
  if (*(_WORD *)(a1 + 26)) {
    uint64_t v4 = sub_1886844(a1 + 16, 1000, 2000, a2, a3);
  }
  uint64_t v6 = *(void *)(a1 + 8);
  if ((v6 & 1) == 0) {
    return v4;
  }
  unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v8 + 31) < 0)
  {
    unsigned int v9 = *(void **)(v8 + 8);
    uint64_t v10 = *(void *)(v8 + 16);
  }
  else
  {
    unsigned int v9 = (void *)(v8 + 8);
    LODWORD(v10) = *(unsigned __int8 *)(v8 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v10)
  {
    uint64_t v11 = (int)v10;
    memcpy(v4, v9, (int)v10);
    v4 += v11;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v9, v10, v4);
}

uint64_t sub_1751738(uint64_t a1)
{
  uint64_t result = sub_1889280(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v4 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v5 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v5 = *(unsigned __int8 *)(v4 + 31);
    }
    result += v5;
  }
  *(_DWORD *)(a1 + 40) = result;
  return result;
}

void *sub_1751790@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.AddressWithComponentsFilter");
}

void *sub_17517A0(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_187073C(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1751820(void *a1)
{
  sub_17517A0(a1);

  operator delete();
}

uint64_t sub_1751858(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 24);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 32) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_16F9518(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 24) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = (uint64_t *)(v1 + 8);
  if (v6)
  {
    return sub_188B4AC(v5);
  }
  return result;
}

char *sub_17518D4(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v19 = a2;
  if ((sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v5 = (void *)(a1 + 8);
    while (1)
    {
      char v6 = v19 + 1;
      unsigned int v7 = *v19;
      if (*v19 < 0)
      {
        unsigned int v8 = v7 + (*v6 << 7);
        unsigned int v7 = v8 - 128;
        if (*v6 < 0)
        {
          char v6 = (char *)sub_188C180((uint64_t)v19, v8 - 128);
          unsigned int v7 = v9;
        }
        else
        {
          char v6 = v19 + 2;
        }
      }
      uint64_t v19 = v6;
      if (v7 == 10)
      {
        int v12 = v6 - 1;
        while (1)
        {
          uint64_t v13 = (unsigned __int8 *)(v12 + 1);
          uint64_t v19 = v12 + 1;
          uint64_t v14 = *(_DWORD **)(a1 + 32);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 24), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 24) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            uint64_t v17 = sub_1789374(*(void *)(a1 + 16));
            uint64_t v16 = sub_188CDC8(a1 + 16, v17);
            uint64_t v13 = (unsigned __int8 *)v19;
          }
          int v12 = (char *)sub_153CB34(a3, v16, v13);
          uint64_t v19 = v12;
          if (!v12) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_24;
          }
        }
      }
      if (!v7 || (v7 & 7) == 4) {
        break;
      }
      if (*v5)
      {
        uint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        uint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        char v6 = v19;
      }
      uint64_t v19 = (char *)sub_1885AC0(v7, v11, v6, a3);
      if (!v19) {
        return 0;
      }
LABEL_24:
      if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
        return v19;
      }
    }
    if (v6)
    {
      a3[10].i32[0] = v7 - 1;
      return v19;
    }
    return 0;
  }
  return v19;
}

char *sub_1751A74(uint64_t a1, char *__dst, void *a3)
{
  int v6 = *(_DWORD *)(a1 + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 44);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        uint64_t v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        uint64_t v10 = __dst + 2;
      }
      __dst = sub_16F9D14(v8, v10, a3);
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return __dst;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    uint64_t v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    uint64_t v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*a3 - (void)__dst >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(__dst, v14, (int)v15);
    __dst += v16;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, __dst);
}

uint64_t sub_1751BB8(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_16FA150(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 40) = v2;
  return v2;
}

void sub_1751C68(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 32) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 16, *(_DWORD *)(a2 + 24));
    sub_187259C((uint64_t *)(a1 + 16), v6, v5, v4, **(_DWORD **)(a1 + 32) - *(_DWORD *)(a1 + 24));
    int v7 = *(_DWORD *)(a1 + 24) + v4;
    *(_DWORD *)(a1 + 24) = v7;
    uint64_t v8 = *(int **)(a1 + 32);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

BOOL sub_1751D38(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 24);
  do
  {
    int v3 = v2;
    if ((int)v2 < 1) {
      break;
    }
    uint64_t v4 = v2 - 1;
    char v5 = sub_16FA6E0(*(void *)(*(void *)(a1 + 32) + 8 * v2));
    uint64_t v2 = v4;
  }
  while ((v5 & 1) != 0);
  return v3 < 1;
}

void *sub_1751D90@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.TrailHead.Trail.FactoidData");
}

void *sub_1751DA0(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_1751E3C((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  sub_13016A8(a1 + 6);
  sub_12C45E8(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

uint64_t sub_1751E3C(uint64_t result)
{
  if ((uint64_t (***)())result != &off_2547FD8)
  {
    uint64_t v1 = (void *)result;
    uint64_t v2 = *(void **)(result + 72);
    if (v2)
    {
      sub_16B92F8(v2);
      operator delete();
    }
    int v3 = (void *)v1[10];
    if (v3)
    {
      sub_17517A0(v3);
      operator delete();
    }
    uint64_t v4 = v1[11];
    if (v4)
    {
      sub_16EB850(v4);
      operator delete();
    }
    uint64_t result = v1[12];
    if (result)
    {
      sub_1742F68(result);
      operator delete();
    }
  }
  return result;
}

void sub_1751F08(void *a1)
{
  sub_1751DA0(a1);

  operator delete();
}

uint64_t sub_1751F40(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    int v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = (uint64_t)sub_16CD894(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  uint64_t v5 = *(unsigned int *)(v1 + 56);
  if ((int)v5 >= 1)
  {
    uint64_t v6 = (uint64_t *)(*(void *)(v1 + 64) + 8);
    do
    {
      uint64_t v7 = *v6++;
      uint64_t result = sub_16E98C0(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(v1 + 56) = 0;
  }
  int v8 = *(_DWORD *)(v1 + 16);
  if ((v8 & 0xF) == 0) {
    goto LABEL_15;
  }
  if ((v8 & 1) == 0)
  {
    if ((v8 & 2) == 0) {
      goto LABEL_12;
    }
LABEL_20:
    uint64_t result = sub_1751858(*(void *)(v1 + 80));
    if ((v8 & 4) == 0)
    {
LABEL_13:
      if ((v8 & 8) == 0) {
        goto LABEL_15;
      }
      goto LABEL_14;
    }
    goto LABEL_21;
  }
  uint64_t result = sub_16B95B4(*(void *)(v1 + 72));
  if ((v8 & 2) != 0) {
    goto LABEL_20;
  }
LABEL_12:
  if ((v8 & 4) == 0) {
    goto LABEL_13;
  }
LABEL_21:
  uint64_t result = sub_16BF128(*(void *)(v1 + 88));
  if ((v8 & 8) != 0) {
LABEL_14:
  }
    uint64_t result = sub_172066C(*(void *)(v1 + 96));
LABEL_15:
  char v10 = *(unsigned char *)(v1 + 8);
  uint64_t v9 = v1 + 8;
  *(unsigned char *)(v9 + 96) = 0;
  *(_DWORD *)(v9 + 8) = 0;
  if (v10)
  {
    return sub_188B4AC((uint64_t *)v9);
  }
  return result;
}

char *sub_1752038(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v40 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v40, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    int v8 = v40 + 1;
    unsigned int v9 = *v40;
    if (*v40 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        int v8 = (char *)sub_188C180((uint64_t)v40, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        int v8 = v40 + 2;
      }
    }
    uint64_t v40 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_58;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 72);
        if (!v12)
        {
          unint64_t v13 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            unint64_t v13 = (void *)*v13;
          }
          uint64_t v12 = sub_1786348((uint64_t)v13);
          *(void *)(a1 + 72) = v12;
          int v8 = v40;
        }
        uint64_t v14 = (char *)sub_15496AC(a3, v12, (unsigned __int8 *)v8);
        goto LABEL_65;
      case 2u:
        if (v9 != 18) {
          goto LABEL_58;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v15 = *(void *)(a1 + 80);
        if (!v15)
        {
          uint64_t v16 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v16 = (void *)*v16;
          }
          uint64_t v15 = sub_178BECC((uint64_t)v16);
          *(void *)(a1 + 80) = v15;
          int v8 = v40;
        }
        uint64_t v14 = sub_1752480(a3, v15, (unsigned __int8 *)v8);
        goto LABEL_65;
      case 3u:
        if (v9 != 26) {
          goto LABEL_58;
        }
        uint64_t v17 = v8 - 1;
        while (1)
        {
          uint64_t v18 = (unsigned __int8 *)(v17 + 1);
          uint64_t v40 = v17 + 1;
          uint64_t v19 = *(_DWORD **)(a1 + 40);
          if (v19 && (uint64_t v20 = *(int *)(a1 + 32), (int)v20 < *v19))
          {
            *(_DWORD *)(a1 + 32) = v20 + 1;
            uint64_t v21 = *(void *)&v19[2 * v20 + 2];
          }
          else
          {
            uint64_t v22 = sub_185089C(*(void *)(a1 + 24));
            uint64_t v21 = sub_188CDC8(a1 + 24, v22);
            uint64_t v18 = (unsigned __int8 *)v40;
          }
          uint64_t v17 = sub_12688D0(a3, v21, v18);
          uint64_t v40 = v17;
          if (!v17) {
            goto LABEL_73;
          }
          if (*(void *)a3 <= (unint64_t)v17 || *v17 != 26) {
            goto LABEL_66;
          }
        }
      case 4u:
        if (v9 != 34) {
          goto LABEL_58;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v23 = *(void **)(a1 + 88);
        if (!v23)
        {
          unint64_t v24 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            unint64_t v24 = (void *)*v24;
          }
          uint64_t v23 = sub_1788710((uint64_t)v24);
          *(void *)(a1 + 88) = v23;
          int v8 = v40;
        }
        uint64_t v14 = (char *)sub_1550A68(a3, (uint64_t)v23, (unsigned __int8 *)v8);
        goto LABEL_65;
      case 5u:
        if (v9 != 40) {
          goto LABEL_58;
        }
        v5 |= 0x10u;
        unint64_t v25 = v8 + 1;
        uint64_t v26 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_41;
        }
        int v27 = *v25;
        uint64_t v26 = v26 + (v27 << 7) - 128;
        if (v27 < 0)
        {
          int v38 = (char *)sub_188C138((uint64_t)v8, v26);
          uint64_t v40 = v38;
          *(unsigned char *)(a1 + 104) = v39 != 0;
          if (!v38) {
            goto LABEL_73;
          }
        }
        else
        {
          unint64_t v25 = v8 + 2;
LABEL_41:
          uint64_t v40 = v25;
          *(unsigned char *)(a1 + 104) = v26 != 0;
        }
        goto LABEL_66;
      case 6u:
        if (v9 != 50) {
          goto LABEL_58;
        }
        BOOL v28 = v8 - 1;
        while (1)
        {
          uint64_t v29 = (unsigned __int8 *)(v28 + 1);
          uint64_t v40 = v28 + 1;
          uint64_t v30 = *(_DWORD **)(a1 + 64);
          if (v30 && (uint64_t v31 = *(int *)(a1 + 56), (int)v31 < *v30))
          {
            *(_DWORD *)(a1 + 56) = v31 + 1;
            uint64_t v32 = *(void *)&v30[2 * v31 + 2];
          }
          else
          {
            int v33 = sub_1788574(*(void *)(a1 + 48));
            uint64_t v32 = sub_188CDC8(a1 + 48, (uint64_t)v33);
            uint64_t v29 = (unsigned __int8 *)v40;
          }
          BOOL v28 = sub_12DE6D0(a3, v32, v29);
          uint64_t v40 = v28;
          if (!v28) {
            goto LABEL_73;
          }
          if (*(void *)a3 <= (unint64_t)v28 || *v28 != 50) {
            goto LABEL_66;
          }
        }
      case 7u:
        if (v9 != 58) {
          goto LABEL_58;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v34 = *(void *)(a1 + 96);
        if (!v34)
        {
          int v35 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            int v35 = (void *)*v35;
          }
          uint64_t v34 = sub_178B590((uint64_t)v35);
          *(void *)(a1 + 96) = v34;
          int v8 = v40;
        }
        uint64_t v14 = sub_1725354(a3, v34, (unsigned __int8 *)v8);
        goto LABEL_65;
      default:
LABEL_58:
        if (v9) {
          BOOL v36 = (v9 & 7) == 4;
        }
        else {
          BOOL v36 = 1;
        }
        if (!v36)
        {
          if (*v7)
          {
            int v37 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            int v37 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            int v8 = v40;
          }
          uint64_t v14 = (char *)sub_1885AC0(v9, v37, v8, a3);
LABEL_65:
          uint64_t v40 = v14;
          if (!v14) {
            goto LABEL_73;
          }
LABEL_66:
          if (sub_11947B8((uint64_t)a3, &v40, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_73:
        }
          uint64_t v40 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v40;
    }
  }
}

char *sub_1752480(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17518D4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1752510(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 72);
    *uint64_t v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 44);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    uint64_t v4 = sub_16BB104(v7, v9, a3);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 80);
    *uint64_t v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 40);
    v4[1] = v11;
    if (v11 > 0x7F) {
      uint64_t v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      uint64_t v12 = v4 + 2;
    }
    uint64_t v4 = sub_1751A74(v10, v12, a3);
  }
  int v13 = *(_DWORD *)(a1 + 32);
  if (v13)
  {
    for (int i = 0; i != v13; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v15 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *uint64_t v4 = 26;
      unsigned int v16 = *(_DWORD *)(v15 + 44);
      v4[1] = v16;
      if (v16 > 0x7F) {
        uint64_t v17 = sub_188A9CC(v16, v4 + 1);
      }
      else {
        uint64_t v17 = v4 + 2;
      }
      uint64_t v4 = sub_184B3AC(v15, v17, a3);
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v18 = *(void *)(a1 + 88);
    *uint64_t v4 = 34;
    unsigned int v19 = *(_DWORD *)(v18 + 44);
    v4[1] = v19;
    if (v19 > 0x7F) {
      uint64_t v20 = sub_188A9CC(v19, v4 + 1);
    }
    else {
      uint64_t v20 = v4 + 2;
    }
    uint64_t v4 = sub_16EBC08(v18, v20, a3);
  }
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v21 = *(unsigned char *)(a1 + 104);
    *uint64_t v4 = 40;
    v4[1] = v21;
    v4 += 2;
  }
  int v22 = *(_DWORD *)(a1 + 56);
  if (v22)
  {
    for (int j = 0; j != v22; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v24 = *(void *)(*(void *)(a1 + 64) + 8 * j + 8);
      *uint64_t v4 = 50;
      unsigned int v25 = *(_DWORD *)(v24 + 44);
      v4[1] = v25;
      if (v25 > 0x7F) {
        uint64_t v26 = sub_188A9CC(v25, v4 + 1);
      }
      else {
        uint64_t v26 = v4 + 2;
      }
      uint64_t v4 = sub_16E9DDC(v24, v26, a3);
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v27 = *(void *)(a1 + 96);
    *uint64_t v4 = 58;
    unsigned int v28 = *(_DWORD *)(v27 + 44);
    v4[1] = v28;
    if (v28 > 0x7F) {
      uint64_t v29 = sub_188A9CC(v28, v4 + 1);
    }
    else {
      uint64_t v29 = v4 + 2;
    }
    uint64_t v4 = sub_1743530(v27, v29, a3);
  }
  uint64_t v30 = *(void *)(a1 + 8);
  if ((v30 & 1) == 0) {
    return v4;
  }
  unint64_t v32 = v30 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v32 + 31) < 0)
  {
    int v33 = *(void **)(v32 + 8);
    uint64_t v34 = *(void *)(v32 + 16);
  }
  else
  {
    int v33 = (void *)(v32 + 8);
    LODWORD(v34) = *(unsigned __int8 *)(v32 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v34)
  {
    uint64_t v35 = (int)v34;
    memcpy(v4, v33, (int)v34);
    v4 += v35;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v33, v34, v4);
}

uint64_t sub_17528A4(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_184B568(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(int *)(a1 + 56);
  uint64_t v9 = v2 + v8;
  uint64_t v10 = *(void *)(a1 + 64);
  if (v10) {
    unsigned int v11 = (uint64_t *)(v10 + 8);
  }
  else {
    unsigned int v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_16EA048(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  int v15 = *(_DWORD *)(a1 + 16);
  if ((v15 & 0x1F) != 0)
  {
    if (v15)
    {
      uint64_t v19 = sub_16BC274(*(void *)(a1 + 72));
      v9 += v19 + ((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v15 & 2) == 0)
      {
LABEL_18:
        if ((v15 & 4) == 0) {
          goto LABEL_19;
        }
        goto LABEL_27;
      }
    }
    else if ((v15 & 2) == 0)
    {
      goto LABEL_18;
    }
    uint64_t v20 = sub_1751BB8(*(void *)(a1 + 80));
    v9 += v20 + ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v15 & 4) == 0)
    {
LABEL_19:
      if ((v15 & 8) == 0) {
        goto LABEL_21;
      }
      goto LABEL_20;
    }
LABEL_27:
    uint64_t v21 = sub_16EBD94(*(void *)(a1 + 88));
    v9 += v21 + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v15 & 8) == 0)
    {
LABEL_21:
      if ((v15 & 0x10) != 0) {
        v9 += 2;
      }
      goto LABEL_23;
    }
LABEL_20:
    uint64_t v16 = sub_1743948(*(void *)(a1 + 96));
    v9 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
    goto LABEL_21;
  }
LABEL_23:
  uint64_t v17 = *(void *)(a1 + 8);
  if (v17)
  {
    unint64_t v22 = v17 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v22 + 31) < 0) {
      uint64_t v23 = *(void *)(v22 + 16);
    }
    else {
      uint64_t v23 = *(unsigned __int8 *)(v22 + 31);
    }
    v9 += v23;
  }
  *(_DWORD *)(a1 + 20) = v9;
  return v9;
}

void sub_1752A8C(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_12C4B74((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    uint64_t v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    unsigned int v11 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_1301BB0((uint64_t *)(a1 + 48), v11, v10, v9, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v12 = *(_DWORD *)(a1 + 56) + v9;
    *(_DWORD *)(a1 + 56) = v12;
    uint64_t v13 = *(int **)(a1 + 64);
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 16);
  if ((v14 & 0x1F) != 0)
  {
    if (v14)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v16 = *(void *)(a1 + 72);
      if (!v16)
      {
        uint64_t v17 = *(void *)(a1 + 8);
        uint64_t v18 = (void *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
        if (v17) {
          uint64_t v18 = (void *)*v18;
        }
        uint64_t v16 = sub_1786348((uint64_t)v18);
        *(void *)(a1 + 72) = v16;
      }
      if (*(void *)(a2 + 72)) {
        uint64_t v19 = *(uint64_t (****)())(a2 + 72);
      }
      else {
        uint64_t v19 = &off_25444D8;
      }
      sub_16BCBA4(v16, (uint64_t)v19);
      if ((v14 & 2) == 0)
      {
LABEL_10:
        if ((v14 & 4) == 0) {
          goto LABEL_11;
        }
        goto LABEL_35;
      }
    }
    else if ((v14 & 2) == 0)
    {
      goto LABEL_10;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v20 = *(void *)(a1 + 80);
    if (!v20)
    {
      uint64_t v21 = *(void *)(a1 + 8);
      unint64_t v22 = (void *)(v21 & 0xFFFFFFFFFFFFFFFCLL);
      if (v21) {
        unint64_t v22 = (void *)*v22;
      }
      uint64_t v20 = sub_178BECC((uint64_t)v22);
      *(void *)(a1 + 80) = v20;
    }
    if (*(void *)(a2 + 80)) {
      uint64_t v23 = *(uint64_t (****)())(a2 + 80);
    }
    else {
      uint64_t v23 = &off_2547FA8;
    }
    sub_1751C68(v20, (uint64_t)v23);
    if ((v14 & 4) == 0)
    {
LABEL_11:
      if ((v14 & 8) == 0) {
        goto LABEL_12;
      }
      goto LABEL_43;
    }
LABEL_35:
    *(_DWORD *)(a1 + 16) |= 4u;
    uint64_t v24 = *(void **)(a1 + 88);
    if (!v24)
    {
      uint64_t v25 = *(void *)(a1 + 8);
      uint64_t v26 = (void *)(v25 & 0xFFFFFFFFFFFFFFFCLL);
      if (v25) {
        uint64_t v26 = (void *)*v26;
      }
      uint64_t v24 = sub_1788710((uint64_t)v26);
      *(void *)(a1 + 88) = v24;
    }
    if (*(void *)(a2 + 88)) {
      uint64_t v27 = *(uint64_t (****)())(a2 + 88);
    }
    else {
      uint64_t v27 = &off_2545A18;
    }
    sub_16BF9C4((uint64_t)v24, (uint64_t)v27);
    if ((v14 & 8) == 0)
    {
LABEL_12:
      if ((v14 & 0x10) == 0)
      {
LABEL_14:
        *(_DWORD *)(a1 + 16) |= v14;
        goto LABEL_15;
      }
LABEL_13:
      *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
      goto LABEL_14;
    }
LABEL_43:
    *(_DWORD *)(a1 + 16) |= 8u;
    uint64_t v28 = *(void *)(a1 + 96);
    if (!v28)
    {
      uint64_t v29 = *(void *)(a1 + 8);
      uint64_t v30 = (void *)(v29 & 0xFFFFFFFFFFFFFFFCLL);
      if (v29) {
        uint64_t v30 = (void *)*v30;
      }
      uint64_t v28 = sub_178B590((uint64_t)v30);
      *(void *)(a1 + 96) = v28;
    }
    if (*(void *)(a2 + 96)) {
      uint64_t v31 = *(uint64_t (****)())(a2 + 96);
    }
    else {
      uint64_t v31 = &off_2547720;
    }
    sub_172D1A8(v28, (uint64_t)v31);
    if ((v14 & 0x10) == 0) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }
LABEL_15:
  uint64_t v15 = *(void *)(a2 + 8);
  if (v15)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v15 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_1752D28(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  while ((int)v2 >= 1)
  {
    uint64_t v3 = v2 - 1;
    char v4 = sub_16CE508(*(void *)(*(void *)(a1 + 40) + 8 * v2));
    uint64_t v2 = v3;
    if ((v4 & 1) == 0) {
      return 0;
    }
  }
  uint64_t v5 = *(unsigned int *)(a1 + 56);
  while ((int)v5 >= 1)
  {
    uint64_t v6 = v5 - 1;
    char v7 = sub_16EA300(*(void *)(*(void *)(a1 + 64) + 8 * v5));
    uint64_t v5 = v6;
    if ((v7 & 1) == 0) {
      return 0;
    }
  }
  int v9 = *(_DWORD *)(a1 + 16);
  if (v9)
  {
    uint64_t result = sub_16BD4F8(*(void *)(a1 + 72));
    if (!result) {
      return result;
    }
    int v9 = *(_DWORD *)(a1 + 16);
  }
  if ((v9 & 2) != 0)
  {
    uint64_t v10 = *(void *)(a1 + 80);
    uint64_t v11 = *(unsigned int *)(v10 + 24);
    while ((int)v11 >= 1)
    {
      uint64_t v12 = v11 - 1;
      char v13 = sub_16FA6E0(*(void *)(*(void *)(v10 + 32) + 8 * v11));
      uint64_t v11 = v12;
      if ((v13 & 1) == 0) {
        return 0;
      }
    }
    int v9 = *(_DWORD *)(a1 + 16);
  }
  if ((v9 & 4) != 0)
  {
    uint64_t result = sub_18856CC(*(void *)(a1 + 88) + 16);
    if (!result) {
      return result;
    }
    int v9 = *(_DWORD *)(a1 + 16);
  }
  if ((v9 & 8) == 0) {
    return 1;
  }
  uint64_t result = sub_17306FC(*(void *)(a1 + 96));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_1752E1C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.TrailHead.Trail");
}

void *sub_1752E2C(void *a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  a1[1] = v5;
  *a1 = off_24D7418;
  sub_1882BC4((uint64_t)(a1 + 2), a2);
  a1[5] = 0;
  a1[6] = a2;
  a1[7] = 0;
  a1[8] = 0;
  a1[9] = a2;
  a1[10] = 0;
  a1[11] = 0;
  a1[12] = 0;
  return a1;
}

void sub_1752EA0(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_1752ED4(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  char v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = a1 + 16;
  *(void *)a1 = off_24D7418;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  uint64_t v6 = (uint64_t *)(a1 + 48);
  *(_DWORD *)(a1 + 68) = 0;
  *(void *)(a1 + 52) = 0;
  *(void *)(a1 + 60) = 0;
  *(void *)(a1 + 44) = 0;
  int v7 = *(_DWORD *)(a2 + 56);
  if (v7)
  {
    uint64_t v8 = *(void *)(a2 + 64);
    int v9 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_1872628(v6, v9, (uint64_t *)(v8 + 8), v7, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v10 = *(_DWORD *)(a1 + 56) + v7;
    *(_DWORD *)(a1 + 56) = v10;
    uint64_t v11 = *(int **)(a1 + 64);
    if (*v11 < v10) {
      *uint64_t v11 = v10;
    }
  }
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0;
  int v12 = *(_DWORD *)(a2 + 80);
  if (v12)
  {
    uint64_t v13 = *(void *)(a2 + 88);
    int v14 = (uint64_t *)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_12C4B74((uint64_t *)(a1 + 72), v14, (uint64_t *)(v13 + 8), v12, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v15 = *(_DWORD *)(a1 + 80) + v12;
    *(_DWORD *)(a1 + 80) = v15;
    uint64_t v16 = *(int **)(a1 + 88);
    if (*v16 < v15) {
      int *v16 = v15;
    }
  }
  uint64_t v17 = *(void *)(a2 + 8);
  if (v17) {
    sub_188B4F8(v4, (v17 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v5, a2 + 16);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  return a1;
}

void sub_1753054(_Unwind_Exception *a1)
{
  sub_18707BC(v4);
  sub_1882CC0(v3);
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_17530B8(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_12C45E8(a1 + 9);
  sub_18707BC(a1 + 6);
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_175314C(void *a1)
{
  sub_17530B8(a1);

  operator delete();
}

char *sub_1753184(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v38 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v38, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = v38 + 1;
    unsigned int v9 = *v38;
    if (*v38 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v38, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v38 + 2;
      }
    }
    int v38 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_41;
        }
        int v12 = v8 - 1;
        while (1)
        {
          uint64_t v13 = (unsigned __int8 *)(v12 + 1);
          int v38 = v12 + 1;
          int v14 = *(_DWORD **)(a1 + 64);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 56), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 56) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            sub_178BF6C(*(void *)(a1 + 48));
            uint64_t v16 = sub_188CDC8(a1 + 48, v17);
            uint64_t v13 = (unsigned __int8 *)v38;
          }
          int v12 = sub_1753554(a3, v16, v13);
          int v38 = v12;
          if (!v12) {
            goto LABEL_64;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_51;
          }
        }
      case 2u:
        if (v9 != 18) {
          goto LABEL_41;
        }
        uint64_t v18 = v8 - 1;
        while (1)
        {
          uint64_t v19 = (unsigned __int8 *)(v18 + 1);
          int v38 = v18 + 1;
          uint64_t v20 = *(_DWORD **)(a1 + 88);
          if (v20 && (uint64_t v21 = *(int *)(a1 + 80), (int)v21 < *v20))
          {
            *(_DWORD *)(a1 + 80) = v21 + 1;
            uint64_t v22 = *(void *)&v20[2 * v21 + 2];
          }
          else
          {
            uint64_t v23 = sub_185089C(*(void *)(a1 + 72));
            uint64_t v22 = sub_188CDC8(a1 + 72, v23);
            uint64_t v19 = (unsigned __int8 *)v38;
          }
          uint64_t v18 = sub_12688D0(a3, v22, v19);
          int v38 = v18;
          if (!v18) {
            goto LABEL_64;
          }
          if (*(void *)a3 <= (unint64_t)v18 || *v18 != 18) {
            goto LABEL_51;
          }
        }
      case 3u:
        if (v9 != 24) {
          goto LABEL_41;
        }
        uint64_t v24 = v8 + 1;
        unint64_t v25 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_33;
        }
        int v26 = *v24;
        int v27 = v25 + (v26 << 7);
        unint64_t v25 = (v27 - 128);
        if (v26 < 0)
        {
          int v38 = (char *)sub_188C138((uint64_t)v8, (v27 - 128));
          if (!v38) {
            goto LABEL_64;
          }
          unint64_t v25 = v34;
        }
        else
        {
          uint64_t v24 = v8 + 2;
LABEL_33:
          int v38 = v24;
        }
        if (v25 > 1)
        {
          if (*v7) {
            int v37 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            int v37 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(3, v25, v37);
        }
        else
        {
          *(_DWORD *)(a1 + 40) |= 1u;
          *(_DWORD *)(a1 + 96) = v25;
        }
        goto LABEL_51;
      case 4u:
        if (v9 != 32) {
          goto LABEL_41;
        }
        v5 |= 2u;
        uint64_t v28 = v8 + 1;
        int v29 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_40;
        }
        int v30 = *v28;
        int v29 = v29 + (v30 << 7) - 128;
        if (v30 < 0)
        {
          uint64_t v35 = (char *)sub_188C0D0((uint64_t)v8, v29);
          int v38 = v35;
          *(_DWORD *)(a1 + 100) = v36;
          if (!v35) {
            goto LABEL_64;
          }
        }
        else
        {
          uint64_t v28 = v8 + 2;
LABEL_40:
          int v38 = v28;
          *(_DWORD *)(a1 + 100) = v29;
        }
        goto LABEL_51;
      default:
LABEL_41:
        if (v9) {
          BOOL v31 = (v9 & 7) == 4;
        }
        else {
          BOOL v31 = 1;
        }
        if (!v31)
        {
          if ((v9 - 8000) >> 6 > 0x7C)
          {
            if (*v7)
            {
              int v33 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              int v33 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              uint64_t v8 = v38;
            }
            unint64_t v32 = sub_1885AC0(v9, v33, v8, a3);
          }
          else
          {
            unint64_t v32 = sub_18859DC((uint64_t **)(a1 + 16), v9, v8, (uint64_t)&off_2548048, (uint64_t *)(a1 + 8), a3);
          }
          int v38 = (char *)v32;
          if (!v32) {
            goto LABEL_64;
          }
LABEL_51:
          if (sub_11947B8((uint64_t)a3, &v38, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_64:
        }
          int v38 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 40) |= v5;
        return v38;
    }
  }
}

char *sub_1753554(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1752038(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_17535E4(uint64_t a1, char *a2, unint64_t *a3)
{
  int v6 = *(_DWORD *)(a1 + 56);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 64) + 8 * i + 8);
      *a2 = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      a2[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, a2 + 1);
      }
      else {
        unsigned int v10 = a2 + 2;
      }
      a2 = sub_1752510(v8, (unint64_t)v10, a3);
    }
  }
  int v11 = *(_DWORD *)(a1 + 80);
  if (v11)
  {
    for (int j = 0; j != v11; ++j)
    {
      if (*a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v13 = *(void *)(*(void *)(a1 + 88) + 8 * j + 8);
      *a2 = 18;
      unsigned int v14 = *(_DWORD *)(v13 + 44);
      a2[1] = v14;
      if (v14 > 0x7F) {
        uint64_t v15 = sub_188A9CC(v14, a2 + 1);
      }
      else {
        uint64_t v15 = a2 + 2;
      }
      a2 = sub_184B3AC(v13, v15, a3);
    }
  }
  int v16 = *(_DWORD *)(a1 + 40);
  if (v16)
  {
    if (*a3 <= (unint64_t)a2) {
      a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unint64_t v17 = *(int *)(a1 + 96);
    *a2 = 24;
    a2[1] = v17;
    if (v17 > 0x7F)
    {
      a2[1] = v17 | 0x80;
      unint64_t v18 = v17 >> 7;
      a2[2] = v17 >> 7;
      a2 += 3;
      if (v17 >= 0x4000)
      {
        do
        {
          *(a2 - 1) |= 0x80u;
          unint64_t v19 = v18 >> 14;
          v18 >>= 7;
          *a2++ = v18;
        }
        while (v19);
      }
    }
    else
    {
      a2 += 2;
    }
  }
  if ((v16 & 2) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unsigned int v20 = *(_DWORD *)(a1 + 100);
    *a2 = 32;
    a2[1] = v20;
    if (v20 > 0x7F)
    {
      a2[1] = v20 | 0x80;
      unsigned int v21 = v20 >> 7;
      a2[2] = v20 >> 7;
      a2 += 3;
      if (v20 >= 0x4000)
      {
        do
        {
          *(a2 - 1) |= 0x80u;
          unsigned int v22 = v21 >> 14;
          v21 >>= 7;
          *a2++ = v21;
        }
        while (v22);
      }
    }
    else
    {
      a2 += 2;
    }
  }
  if (*(_WORD *)(a1 + 26)) {
    a2 = sub_1886844(a1 + 16, 1000, 2000, a2, a3);
  }
  uint64_t v23 = *(void *)(a1 + 8);
  if ((v23 & 1) == 0) {
    return a2;
  }
  unint64_t v25 = v23 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v25 + 31) < 0)
  {
    int v26 = *(void **)(v25 + 8);
    uint64_t v27 = *(void *)(v25 + 16);
  }
  else
  {
    int v26 = (void *)(v25 + 8);
    LODWORD(v27) = *(unsigned __int8 *)(v25 + 31);
  }
  if ((uint64_t)(*a3 - (void)a2) >= (int)v27)
  {
    uint64_t v28 = (int)v27;
    memcpy(a2, v26, (int)v27);
    a2 += v28;
    return a2;
  }

  return (char *)sub_188A528(a3, (char *)v26, v27, a2);
}

uint64_t sub_17538CC(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(int *)(a1 + 56);
  uint64_t v4 = v2 + v3;
  uint64_t v5 = *(void *)(a1 + 64);
  if (v5) {
    int v6 = (uint64_t *)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = sub_17528A4(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  uint64_t v10 = *(int *)(a1 + 80);
  uint64_t v11 = v4 + v10;
  uint64_t v12 = *(void *)(a1 + 88);
  if (v12) {
    uint64_t v13 = (uint64_t *)(v12 + 8);
  }
  else {
    uint64_t v13 = 0;
  }
  if (v10)
  {
    uint64_t v14 = 8 * v10;
    do
    {
      uint64_t v15 = *v13++;
      uint64_t v16 = sub_184B568(v15);
      v11 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6);
      v14 -= 8;
    }
    while (v14);
  }
  int v17 = *(_DWORD *)(a1 + 40);
  if ((v17 & 3) != 0)
  {
    if (v17)
    {
      int v18 = *(_DWORD *)(a1 + 96);
      uint64_t v19 = ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if (v18 >= 0) {
        uint64_t v20 = v19;
      }
      else {
        uint64_t v20 = 11;
      }
      v11 += v20;
    }
    if ((v17 & 2) != 0) {
      v11 += ((9 * (__clz(*(_DWORD *)(a1 + 100) | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  uint64_t v21 = *(void *)(a1 + 8);
  if (v21)
  {
    unint64_t v23 = v21 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v23 + 31) < 0) {
      uint64_t v24 = *(void *)(v23 + 16);
    }
    else {
      uint64_t v24 = *(unsigned __int8 *)(v23 + 31);
    }
    v11 += v24;
  }
  *(_DWORD *)(a1 + 44) = v11;
  return v11;
}

void *sub_1753A38@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.TrailHead");
}

uint64_t sub_1753A48(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  *(void *)(a1 + 8) = v4;
  *(void *)a1 = off_24D7498;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = 0;
  *(_DWORD *)(a1 + 48) = 0;
  return a1;
}

void sub_1753AB0(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_1753AE0(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1753B5C(void *a1)
{
  sub_1753AE0(a1);

  operator delete();
}

char *sub_1753B94(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v20 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v20, a3[11].i32[1])) {
    goto LABEL_29;
  }
  int v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v20 + 1;
    unsigned int v8 = *v20;
    if (*v20 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v20, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v20 + 2;
      }
    }
    uint64_t v20 = v7;
    if (v8 != 8) {
      break;
    }
    uint64_t v13 = v7 + 1;
    int v14 = *v7;
    if ((*v7 & 0x80000000) == 0) {
      goto LABEL_17;
    }
    int v15 = *v13;
    int v14 = v14 + (v15 << 7) - 128;
    if ((v15 & 0x80000000) == 0)
    {
      uint64_t v13 = v7 + 2;
LABEL_17:
      uint64_t v20 = v13;
      *(_DWORD *)(a1 + 48) = v14;
      int v5 = 1;
      goto LABEL_22;
    }
    int v17 = (char *)sub_188C0D0((uint64_t)v7, v14);
    uint64_t v20 = v17;
    *(_DWORD *)(a1 + 48) = v18;
    int v5 = 1;
    if (!v17) {
      goto LABEL_30;
    }
LABEL_22:
    if (sub_11947B8((uint64_t)a3, &v20, a3[11].i32[1])) {
      goto LABEL_29;
    }
  }
  if (v8) {
    BOOL v11 = (v8 & 7) == 4;
  }
  else {
    BOOL v11 = 1;
  }
  if (!v11)
  {
    if ((v8 - 8000) >> 6 > 0x7C)
    {
      if (*v6)
      {
        uint64_t v16 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        uint64_t v16 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        uint64_t v7 = v20;
      }
      uint64_t v12 = sub_1885AC0(v8, v16, v7, a3);
    }
    else
    {
      uint64_t v12 = sub_18859DC((uint64_t **)(a1 + 16), v8, v7, (uint64_t)&off_25480B0, (uint64_t *)(a1 + 8), a3);
    }
    uint64_t v20 = (char *)v12;
    if (!v12) {
      goto LABEL_30;
    }
    goto LABEL_22;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    goto LABEL_29;
  }
LABEL_30:
  uint64_t v20 = 0;
LABEL_29:
  *(_DWORD *)(a1 + 40) |= v5;
  return v20;
}

char *sub_1753D58(uint64_t a1, char *a2, _DWORD *a3)
{
  uint64_t v4 = a2;
  if (*(unsigned char *)(a1 + 40))
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unsigned int v6 = *(_DWORD *)(a1 + 48);
    *uint64_t v4 = 8;
    v4[1] = v6;
    if (v6 > 0x7F)
    {
      v4[1] = v6 | 0x80;
      unsigned int v7 = v6 >> 7;
      v4[2] = v6 >> 7;
      v4 += 3;
      if (v6 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v8 = v7 >> 14;
          v7 >>= 7;
          *v4++ = v7;
        }
        while (v8);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (*(_WORD *)(a1 + 26)) {
    uint64_t v4 = sub_1886844(a1 + 16, 1000, 2000, v4, a3);
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    uint64_t v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    uint64_t v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    v4 += v14;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v12, v13, v4);
}

uint64_t sub_1753EA4(uint64_t a1)
{
  uint64_t result = sub_1889280(a1 + 16);
  if (*(unsigned char *)(a1 + 40)) {
    result += ((9 * (__clz(*(_DWORD *)(a1 + 48) | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v4 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v5 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v5 = *(unsigned __int8 *)(v4 + 31);
    }
    result += v5;
  }
  *(_DWORD *)(a1 + 44) = result;
  return result;
}

void *sub_1753F28@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.TrailHeadFilter");
}

uint64_t sub_1753F38(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  unint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  sub_187083C((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1753FE4(uint64_t a1)
{
  sub_1753F38(a1);

  operator delete();
}

uint64_t sub_175401C(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_16E34CC(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  if (*(unsigned char *)(v1 + 16))
  {
    unint64_t v5 = *(void *)(v1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v5 + 23) < 0)
    {
      **(unsigned char **)unint64_t v5 = 0;
      *(void *)(v5 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v5 = 0;
      *(unsigned char *)(v5 + 23) = 0;
    }
  }
  char v7 = *(unsigned char *)(v1 + 8);
  uint64_t v6 = v1 + 8;
  *(_DWORD *)(v6 + 8) = 0;
  if (v7)
  {
    return sub_188B4AC((uint64_t *)v6);
  }
  return result;
}

uint64_t sub_17540CC(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v24 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v24, a3[11].i32[1])) {
    return *(void *)v24;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    char v7 = (char *)(*(void *)v24 + 1);
    unsigned int v8 = **(unsigned char **)v24;
    if ((char)**(unsigned char **)v24 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        char v7 = (char *)sub_188C180(*(uint64_t *)v24, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        char v7 = (char *)(*(void *)v24 + 2);
      }
    }
    *(void *)uint64_t v24 = v7;
    if (v8 >> 3 != 2) {
      break;
    }
    if (v8 != 18) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v15 = *(void *)(a1 + 8);
    uint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
    if (v15) {
      uint64_t v16 = (uint64_t *)*v16;
    }
    int v17 = (std::string *)sub_1880F84((void *)(a1 + 48), v16);
    uint64_t v14 = (void *)sub_188C244(v17, *(char **)v24, (uint64_t)a3);
LABEL_24:
    *(void *)uint64_t v24 = v14;
    if (!v14) {
      goto LABEL_39;
    }
LABEL_25:
    if (sub_11947B8((uint64_t)a3, (char **)v24, a3[11].i32[1])) {
      return *(void *)v24;
    }
  }
  if (v8 >> 3 == 1 && v8 == 10)
  {
    int v18 = v7 - 1;
    while (1)
    {
      uint64_t v19 = (unsigned __int8 *)(v18 + 1);
      *(void *)uint64_t v24 = v18 + 1;
      uint64_t v20 = *(_DWORD **)(a1 + 40);
      if (v20 && (uint64_t v21 = *(int *)(a1 + 32), (int)v21 < *v20))
      {
        *(_DWORD *)(a1 + 32) = v21 + 1;
        uint64_t v22 = *(void *)&v20[2 * v21 + 2];
      }
      else
      {
        uint64_t v23 = sub_1788078(*(void *)(a1 + 24));
        uint64_t v22 = sub_188CDC8(a1 + 24, v23);
        uint64_t v19 = *(unsigned __int8 **)v24;
      }
      int v18 = sub_16E5344(a3, v22, v19);
      *(void *)uint64_t v24 = v18;
      if (!v18) {
        goto LABEL_39;
      }
      if (*(void *)a3 <= (unint64_t)v18 || *v18 != 10) {
        goto LABEL_25;
      }
    }
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      char v7 = *(char **)v24;
    }
    uint64_t v14 = sub_1885AC0(v8, v13, v7, a3);
    goto LABEL_24;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v24;
  }
LABEL_39:
  *(void *)uint64_t v24 = 0;
  return *(void *)v24;
}

char *sub_17542CC(uint64_t a1, char *__dst, void *a3)
{
  int v6 = *(_DWORD *)(a1 + 32);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 44);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unsigned int v10 = __dst + 2;
      }
      __dst = sub_16E38F4(v8, v10, a3);
    }
  }
  if (*(unsigned char *)(a1 + 16)) {
    __dst = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return __dst;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    uint64_t v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    uint64_t v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*a3 - (void)__dst >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(__dst, v14, (int)v15);
    __dst += v16;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, __dst);
}

uint64_t sub_1754434(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_16E3BD4(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v8 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v9 = *(unsigned __int8 *)(v8 + 23);
    uint64_t v10 = *(void *)(v8 + 8);
    if ((v9 & 0x80u) == 0) {
      uint64_t v10 = v9;
    }
    v2 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v13 + 31) < 0) {
      uint64_t v14 = *(void *)(v13 + 16);
    }
    else {
      uint64_t v14 = *(unsigned __int8 *)(v13 + 31);
    }
    v2 += v14;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

void sub_175452C(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_18726B4((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    unint64_t v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  if (*(unsigned char *)(a2 + 16))
  {
    uint64_t v9 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v10 = *(void *)(a1 + 8);
    uint64_t v11 = (uint64_t *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
    if (v10) {
      uint64_t v11 = (uint64_t *)*v11;
    }
    sub_1881DF4((std::string **)(a1 + 48), v9, v11);
  }
  uint64_t v12 = *(void *)(a2 + 8);
  if (v12)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v12 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

BOOL sub_1754634(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  do
  {
    int v3 = v2;
    if ((int)v2 < 1) {
      break;
    }
    uint64_t v4 = v2 - 1;
    char v5 = sub_18856CC(*(void *)(*(void *)(a1 + 40) + 8 * v2) + 16);
    uint64_t v2 = v4;
  }
  while ((v5 & 1) != 0);
  return v3 < 1;
}

void *sub_1754690@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.TemplatePlace.TemplateData.DataItem.RatingData");
}

void *sub_17546A0(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_12C1DB8(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1754720(void *a1)
{
  sub_17546A0(a1);

  operator delete();
}

uint64_t sub_1754758(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 24);
  if ((int)v2 >= 1)
  {
    int v3 = (uint64_t *)(*(void *)(result + 32) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_15B2C80(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 24) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  char v5 = (uint64_t *)(v1 + 8);
  if (v6)
  {
    return sub_188B4AC(v5);
  }
  return result;
}

char *sub_17547D4(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v19 = a2;
  if ((sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1]) & 1) == 0)
  {
    char v5 = (void *)(a1 + 8);
    while (1)
    {
      char v6 = v19 + 1;
      unsigned int v7 = *v19;
      if (*v19 < 0)
      {
        unsigned int v8 = v7 + (*v6 << 7);
        unsigned int v7 = v8 - 128;
        if (*v6 < 0)
        {
          char v6 = (char *)sub_188C180((uint64_t)v19, v8 - 128);
          unsigned int v7 = v9;
        }
        else
        {
          char v6 = v19 + 2;
        }
      }
      uint64_t v19 = v6;
      if (v7 == 10)
      {
        uint64_t v12 = v6 - 1;
        while (1)
        {
          unint64_t v13 = (unsigned __int8 *)(v12 + 1);
          uint64_t v19 = v12 + 1;
          uint64_t v14 = *(_DWORD **)(a1 + 32);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 24), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 24) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            int v17 = sub_15C1B30(*(void *)(a1 + 16));
            uint64_t v16 = sub_188CDC8(a1 + 16, (uint64_t)v17);
            unint64_t v13 = (unsigned __int8 *)v19;
          }
          uint64_t v12 = (char *)sub_125CF74(a3, v16, v13);
          uint64_t v19 = v12;
          if (!v12) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_24;
          }
        }
      }
      if (!v7 || (v7 & 7) == 4) {
        break;
      }
      if (*v5)
      {
        uint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        uint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        char v6 = v19;
      }
      uint64_t v19 = (char *)sub_1885AC0(v7, v11, v6, a3);
      if (!v19) {
        return 0;
      }
LABEL_24:
      if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
        return v19;
      }
    }
    if (v6)
    {
      a3[10].i32[0] = v7 - 1;
      return v19;
    }
    return 0;
  }
  return v19;
}

char *sub_1754974(uint64_t a1, char *__dst, void *a3)
{
  int v6 = *(_DWORD *)(a1 + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        uint64_t v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        uint64_t v10 = __dst + 2;
      }
      __dst = sub_15B2EA4(v8, v10, a3);
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return __dst;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    uint64_t v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    uint64_t v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*a3 - (void)__dst >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(__dst, v14, (int)v15);
    __dst += v16;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, __dst);
}

uint64_t sub_1754AB8(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_15B2F90(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 40) = v2;
  return v2;
}

uint64_t sub_1754B68()
{
  return 1;
}

void *sub_1754B70@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.TemplatePlace.TemplateData.DataItem.CategoryData");
}

uint64_t sub_1754B80(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_2548150)
  {
    uint64_t v6 = *(void **)(a1 + 24);
    if (v6)
    {
      sub_16F9368(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1754C38(uint64_t a1)
{
  sub_1754B80(a1);

  operator delete();
}

uint64_t sub_1754C70(uint64_t result)
{
  uint64_t v1 = result;
  if (*(unsigned char *)(result + 16)) {
    uint64_t result = sub_16F9518(*(void *)(result + 24));
  }
  char v3 = *(unsigned char *)(v1 + 8);
  uint64_t v2 = v1 + 8;
  *(_DWORD *)(v2 + 8) = 0;
  if (v3)
  {
    return sub_188B4AC((uint64_t *)v2);
  }
  return result;
}

char *sub_1754CCC(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v16 = a2;
  if (sub_11947B8((uint64_t)a3, &v16, a3[11].i32[1])) {
    return v16;
  }
  uint64_t v5 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v6 = v16 + 1;
    unsigned int v7 = *v16;
    if (*v16 < 0)
    {
      unsigned int v8 = v7 + (*v6 << 7);
      unsigned int v7 = v8 - 128;
      if (*v6 < 0)
      {
        uint64_t v6 = (char *)sub_188C180((uint64_t)v16, v8 - 128);
        unsigned int v7 = v9;
      }
      else
      {
        uint64_t v6 = v16 + 2;
      }
    }
    uint64_t v16 = v6;
    if (v7 != 10) {
      break;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v13 = *(void *)(a1 + 24);
    if (!v13)
    {
      uint64_t v14 = (void *)(*v5 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v5) {
        uint64_t v14 = (void *)*v14;
      }
      uint64_t v13 = sub_1789374((uint64_t)v14);
      *(void *)(a1 + 24) = v13;
      uint64_t v6 = v16;
    }
    uint64_t v12 = (char *)sub_153CB34(a3, v13, (unsigned __int8 *)v6);
LABEL_20:
    uint64_t v16 = v12;
    if (!v12) {
      return 0;
    }
    if (sub_11947B8((uint64_t)a3, &v16, a3[11].i32[1])) {
      return v16;
    }
  }
  if (v7) {
    BOOL v10 = (v7 & 7) == 4;
  }
  else {
    BOOL v10 = 1;
  }
  if (!v10)
  {
    if (*v5)
    {
      uint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v6 = v16;
    }
    uint64_t v12 = (char *)sub_1885AC0(v7, v11, v6, a3);
    goto LABEL_20;
  }
  if (v6)
  {
    a3[10].i32[0] = v7 - 1;
    return v16;
  }
  return 0;
}

unsigned char *sub_1754E24(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v6 = *(void *)(a1 + 24);
    *uint64_t v4 = 10;
    unsigned int v7 = *(_DWORD *)(v6 + 44);
    v4[1] = v7;
    if (v7 > 0x7F) {
      unsigned int v8 = sub_188A9CC(v7, v4 + 1);
    }
    else {
      unsigned int v8 = v4 + 2;
    }
    uint64_t v4 = sub_16F9D14(v6, v8, a3);
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    uint64_t v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    uint64_t v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    v4 += v14;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v12, v13, v4);
}

uint64_t sub_1754F34(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    uint64_t v3 = sub_16FA150(*(void *)(a1 + 24));
    uint64_t result = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  else
  {
    uint64_t result = 0;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v5 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    result += v6;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

void sub_1754FBC(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a2 + 16))
  {
    uint64_t v4 = *(uint64_t (****)())(a2 + 24);
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v5 = *(void *)(a1 + 24);
    if (!v5)
    {
      uint64_t v6 = *(void *)(a1 + 8);
      unsigned int v7 = (void *)(v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (v6) {
        unsigned int v7 = (void *)*v7;
      }
      uint64_t v5 = sub_1789374((uint64_t)v7);
      *(void *)(a1 + 24) = v5;
      uint64_t v4 = *(uint64_t (****)())(a2 + 24);
    }
    if (v4) {
      unsigned int v8 = v4;
    }
    else {
      unsigned int v8 = &off_2546098;
    }
    sub_16FA420(v5, (uint64_t)v8);
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_1755064(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 1;
  }
  uint64_t result = sub_16FA6E0(*(void *)(a1 + 24));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_1755090@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.TemplatePlace.TemplateData.DataItem.FactoidData");
}

uint64_t sub_17550A0(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_2548170)
  {
    uint64_t v6 = *(void *)(a1 + 24);
    if (v6)
    {
      sub_1742F68(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1755158(uint64_t a1)
{
  sub_17550A0(a1);

  operator delete();
}

uint64_t sub_1755190(uint64_t result)
{
  uint64_t v1 = result;
  if (*(unsigned char *)(result + 16)) {
    uint64_t result = sub_172066C(*(void *)(result + 24));
  }
  char v3 = *(unsigned char *)(v1 + 8);
  uint64_t v2 = v1 + 8;
  *(_DWORD *)(v2 + 8) = 0;
  if (v3)
  {
    return sub_188B4AC((uint64_t *)v2);
  }
  return result;
}

char *sub_17551EC(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v16 = a2;
  if (sub_11947B8((uint64_t)a3, &v16, a3[11].i32[1])) {
    return v16;
  }
  uint64_t v5 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v6 = v16 + 1;
    unsigned int v7 = *v16;
    if (*v16 < 0)
    {
      unsigned int v8 = v7 + (*v6 << 7);
      unsigned int v7 = v8 - 128;
      if (*v6 < 0)
      {
        uint64_t v6 = (char *)sub_188C180((uint64_t)v16, v8 - 128);
        unsigned int v7 = v9;
      }
      else
      {
        uint64_t v6 = v16 + 2;
      }
    }
    uint64_t v16 = v6;
    if (v7 != 10) {
      break;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v13 = *(void *)(a1 + 24);
    if (!v13)
    {
      uint64_t v14 = (void *)(*v5 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v5) {
        uint64_t v14 = (void *)*v14;
      }
      uint64_t v13 = sub_178B590((uint64_t)v14);
      *(void *)(a1 + 24) = v13;
      uint64_t v6 = v16;
    }
    uint64_t v12 = sub_1725354(a3, v13, (unsigned __int8 *)v6);
LABEL_20:
    uint64_t v16 = v12;
    if (!v12) {
      return 0;
    }
    if (sub_11947B8((uint64_t)a3, &v16, a3[11].i32[1])) {
      return v16;
    }
  }
  if (v7) {
    BOOL v10 = (v7 & 7) == 4;
  }
  else {
    BOOL v10 = 1;
  }
  if (!v10)
  {
    if (*v5)
    {
      unint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v6 = v16;
    }
    uint64_t v12 = (char *)sub_1885AC0(v7, v11, v6, a3);
    goto LABEL_20;
  }
  if (v6)
  {
    a3[10].i32[0] = v7 - 1;
    return v16;
  }
  return 0;
}

char *sub_1755344(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v6 = *(void *)(a1 + 24);
    *uint64_t v4 = 10;
    unsigned int v7 = *(_DWORD *)(v6 + 44);
    v4[1] = v7;
    if (v7 > 0x7F) {
      unsigned int v8 = sub_188A9CC(v7, v4 + 1);
    }
    else {
      unsigned int v8 = v4 + 2;
    }
    uint64_t v4 = sub_1743530(v6, v8, a3);
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    uint64_t v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    uint64_t v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    v4 += v14;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v12, v13, v4);
}

uint64_t sub_1755454(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    uint64_t v3 = sub_1743948(*(void *)(a1 + 24));
    uint64_t result = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  else
  {
    uint64_t result = 0;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v5 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    result += v6;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

void sub_17554DC(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a2 + 16))
  {
    uint64_t v4 = *(uint64_t (****)())(a2 + 24);
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v5 = *(void *)(a1 + 24);
    if (!v5)
    {
      uint64_t v6 = *(void *)(a1 + 8);
      unsigned int v7 = (void *)(v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (v6) {
        unsigned int v7 = (void *)*v7;
      }
      uint64_t v5 = sub_178B590((uint64_t)v7);
      *(void *)(a1 + 24) = v5;
      uint64_t v4 = *(uint64_t (****)())(a2 + 24);
    }
    if (v4) {
      unsigned int v8 = v4;
    }
    else {
      unsigned int v8 = &off_2547720;
    }
    sub_172D1A8(v5, (uint64_t)v8);
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_1755584(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 1;
  }
  uint64_t result = sub_17306FC(*(void *)(a1 + 24));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_17555B0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.TemplatePlace.TemplateData.DataItem.BusinessHoursData");
}

void *sub_17555C0(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_12C1DB8(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1755640(void *a1)
{
  sub_17555C0(a1);

  operator delete();
}

uint64_t sub_1755678(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 24);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 32) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_15B2C80(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 24) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = (uint64_t *)(v1 + 8);
  if (v6)
  {
    return sub_188B4AC(v5);
  }
  return result;
}

char *sub_17556F4(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v19 = a2;
  if ((sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v5 = (void *)(a1 + 8);
    while (1)
    {
      char v6 = v19 + 1;
      unsigned int v7 = *v19;
      if (*v19 < 0)
      {
        unsigned int v8 = v7 + (*v6 << 7);
        unsigned int v7 = v8 - 128;
        if (*v6 < 0)
        {
          char v6 = (char *)sub_188C180((uint64_t)v19, v8 - 128);
          unsigned int v7 = v9;
        }
        else
        {
          char v6 = v19 + 2;
        }
      }
      uint64_t v19 = v6;
      if (v7 == 10)
      {
        uint64_t v12 = v6 - 1;
        while (1)
        {
          uint64_t v13 = (unsigned __int8 *)(v12 + 1);
          uint64_t v19 = v12 + 1;
          uint64_t v14 = *(_DWORD **)(a1 + 32);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 24), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 24) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            int v17 = sub_15C1B30(*(void *)(a1 + 16));
            uint64_t v16 = sub_188CDC8(a1 + 16, (uint64_t)v17);
            uint64_t v13 = (unsigned __int8 *)v19;
          }
          uint64_t v12 = (char *)sub_125CF74(a3, v16, v13);
          uint64_t v19 = v12;
          if (!v12) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_24;
          }
        }
      }
      if (!v7 || (v7 & 7) == 4) {
        break;
      }
      if (*v5)
      {
        unint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        unint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        char v6 = v19;
      }
      uint64_t v19 = (char *)sub_1885AC0(v7, v11, v6, a3);
      if (!v19) {
        return 0;
      }
LABEL_24:
      if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
        return v19;
      }
    }
    if (v6)
    {
      a3[10].i32[0] = v7 - 1;
      return v19;
    }
    return 0;
  }
  return v19;
}

char *sub_1755894(uint64_t a1, char *__dst, void *a3)
{
  int v6 = *(_DWORD *)(a1 + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        BOOL v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        BOOL v10 = __dst + 2;
      }
      __dst = sub_15B2EA4(v8, v10, a3);
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return __dst;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    uint64_t v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    uint64_t v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*a3 - (void)__dst >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(__dst, v14, (int)v15);
    __dst += v16;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, __dst);
}

uint64_t sub_17559D8(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_15B2F90(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 40) = v2;
  return v2;
}

uint64_t sub_1755A88()
{
  return 1;
}

void *sub_1755A90@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.TemplatePlace.TemplateData.DataItem.LocationData");
}

uint64_t sub_1755AA0(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_1755B24((uint64_t (***)())a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

uint64_t (***sub_1755B24(uint64_t (***result)()))()
{
  if (result != &off_25481C0)
  {
    uint64_t v1 = result;
    uint64_t v2 = (uint64_t)result[3];
    if (v2)
    {
      sub_1753F38(v2);
      operator delete();
    }
    uint64_t v3 = v1[4];
    if (v3)
    {
      sub_17546A0(v3);
      operator delete();
    }
    uint64_t v4 = (uint64_t)v1[5];
    if (v4)
    {
      sub_1754B80(v4);
      operator delete();
    }
    uint64_t v5 = (uint64_t)v1[6];
    if (v5)
    {
      sub_17550A0(v5);
      operator delete();
    }
    uint64_t result = (uint64_t (***)())v1[7];
    if (result)
    {
      sub_17555C0(result);
      operator delete();
    }
  }
  return result;
}

void sub_1755C10(uint64_t a1)
{
  sub_1755AA0(a1);

  operator delete();
}

uint64_t sub_1755C48(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 0x1F) == 0) {
    goto LABEL_8;
  }
  if (v2)
  {
    uint64_t result = sub_175401C(*(void *)(result + 24));
    if ((v2 & 2) == 0)
    {
LABEL_4:
      if ((v2 & 4) == 0) {
        goto LABEL_5;
      }
LABEL_14:
      uint64_t result = sub_1754C70(*(void *)(v1 + 40));
      if ((v2 & 8) == 0)
      {
LABEL_6:
        if ((v2 & 0x10) == 0) {
          goto LABEL_8;
        }
        goto LABEL_7;
      }
      goto LABEL_15;
    }
  }
  else if ((v2 & 2) == 0)
  {
    goto LABEL_4;
  }
  uint64_t result = sub_1754758(*(void *)(v1 + 32));
  if ((v2 & 4) != 0) {
    goto LABEL_14;
  }
LABEL_5:
  if ((v2 & 8) == 0) {
    goto LABEL_6;
  }
LABEL_15:
  uint64_t result = sub_1755190(*(void *)(v1 + 48));
  if ((v2 & 0x10) != 0) {
LABEL_7:
  }
    uint64_t result = sub_1755678(*(void *)(v1 + 56));
LABEL_8:
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 56) = 0;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_1755CF4(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v30 = a2;
  if (sub_11947B8((uint64_t)a3, &v30, a3[11].i32[1])) {
    return v30;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v7 = v30 + 1;
    unsigned int v8 = *v30;
    if (*v30 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v30, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v30 + 2;
      }
    }
    int v30 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 8) {
          goto LABEL_46;
        }
        uint64_t v11 = v7 + 1;
        unint64_t v12 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v13 = *v11;
        int v14 = v12 + (v13 << 7);
        unint64_t v12 = (v14 - 128);
        if (v13 < 0)
        {
          int v30 = (char *)sub_188C138((uint64_t)v7, (v14 - 128));
          if (!v30) {
            return 0;
          }
          unint64_t v12 = v28;
        }
        else
        {
          uint64_t v11 = v7 + 2;
LABEL_13:
          int v30 = v11;
        }
        if (v12 > 6)
        {
          if (*v6) {
            int v29 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            int v29 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(1, v12, v29);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 0x20u;
          *(_DWORD *)(a1 + 64) = v12;
        }
        goto LABEL_54;
      case 2u:
        if (v8 != 18) {
          goto LABEL_46;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v15 = *(void **)(a1 + 24);
        if (!v15)
        {
          uint64_t v16 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v16 = (void *)*v16;
          }
          uint64_t v15 = sub_178C0E0((uint64_t)v16);
          *(void *)(a1 + 24) = v15;
          uint64_t v7 = v30;
        }
        int v17 = (char *)sub_175607C(a3, (uint64_t)v15, (unsigned __int8 *)v7);
        goto LABEL_53;
      case 3u:
        if (v8 != 26) {
          goto LABEL_46;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v18 = *(void *)(a1 + 32);
        if (!v18)
        {
          uint64_t v19 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v19 = (void *)*v19;
          }
          uint64_t v18 = sub_178C184((uint64_t)v19);
          *(void *)(a1 + 32) = v18;
          uint64_t v7 = v30;
        }
        int v17 = sub_175610C(a3, v18, (unsigned __int8 *)v7);
        goto LABEL_53;
      case 4u:
        if (v8 != 34) {
          goto LABEL_46;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v20 = *(void **)(a1 + 40);
        if (!v20)
        {
          uint64_t v21 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v21 = (void *)*v21;
          }
          uint64_t v20 = sub_178C224((uint64_t)v21);
          *(void *)(a1 + 40) = v20;
          uint64_t v7 = v30;
        }
        int v17 = sub_175619C(a3, (uint64_t)v20, (unsigned __int8 *)v7);
        goto LABEL_53;
      case 5u:
        if (v8 != 42) {
          goto LABEL_46;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v22 = *(void **)(a1 + 48);
        if (!v22)
        {
          uint64_t v23 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v23 = (void *)*v23;
          }
          uint64_t v22 = sub_178C29C((uint64_t)v23);
          *(void *)(a1 + 48) = v22;
          uint64_t v7 = v30;
        }
        int v17 = sub_175622C(a3, (uint64_t)v22, (unsigned __int8 *)v7);
        goto LABEL_53;
      case 6u:
        if (v8 != 50) {
          goto LABEL_46;
        }
        *(_DWORD *)(a1 + 16) |= 0x10u;
        uint64_t v24 = *(void *)(a1 + 56);
        if (!v24)
        {
          unint64_t v25 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            unint64_t v25 = (void *)*v25;
          }
          uint64_t v24 = sub_178C314((uint64_t)v25);
          *(void *)(a1 + 56) = v24;
          uint64_t v7 = v30;
        }
        int v17 = sub_17562BC(a3, v24, (unsigned __int8 *)v7);
        goto LABEL_53;
      default:
LABEL_46:
        if (v8) {
          BOOL v26 = (v8 & 7) == 4;
        }
        else {
          BOOL v26 = 1;
        }
        if (!v26)
        {
          if (*v6)
          {
            uint64_t v27 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v27 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v7 = v30;
          }
          int v17 = (char *)sub_1885AC0(v8, v27, v7, a3);
LABEL_53:
          int v30 = v17;
          if (!v17) {
            return 0;
          }
LABEL_54:
          if (sub_11947B8((uint64_t)a3, &v30, a3[11].i32[1])) {
            return v30;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return v30;
    }
  }
}

uint64_t sub_175607C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17540CC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_175610C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17547D4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_175619C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1754CCC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_175622C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17551EC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_17562BC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17556F4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_175634C(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 0x20) != 0)
  {
    if (*a3 <= __dst) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 64);
    *char v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 24);
    *char v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 20);
    v4[1] = v11;
    if (v11 > 0x7F) {
      unint64_t v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      unint64_t v12 = v4 + 2;
    }
    char v4 = sub_17542CC(v10, v12, a3);
    if ((v6 & 2) == 0)
    {
LABEL_10:
      if ((v6 & 4) == 0) {
        goto LABEL_11;
      }
      goto LABEL_26;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_10;
  }
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v13 = *(void *)(a1 + 32);
  *char v4 = 26;
  unsigned int v14 = *(_DWORD *)(v13 + 40);
  v4[1] = v14;
  if (v14 > 0x7F) {
    uint64_t v15 = sub_188A9CC(v14, v4 + 1);
  }
  else {
    uint64_t v15 = v4 + 2;
  }
  char v4 = sub_1754974(v13, v15, a3);
  if ((v6 & 4) == 0)
  {
LABEL_11:
    if ((v6 & 8) == 0) {
      goto LABEL_12;
    }
    goto LABEL_32;
  }
LABEL_26:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v16 = *(void *)(a1 + 40);
  *char v4 = 34;
  unsigned int v17 = *(_DWORD *)(v16 + 20);
  v4[1] = v17;
  if (v17 > 0x7F) {
    uint64_t v18 = sub_188A9CC(v17, v4 + 1);
  }
  else {
    uint64_t v18 = v4 + 2;
  }
  char v4 = sub_1754E24(v16, (unint64_t)v18, a3);
  if ((v6 & 8) == 0)
  {
LABEL_12:
    if ((v6 & 0x10) == 0) {
      goto LABEL_44;
    }
    goto LABEL_38;
  }
LABEL_32:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v19 = *(void *)(a1 + 48);
  *char v4 = 42;
  unsigned int v20 = *(_DWORD *)(v19 + 20);
  v4[1] = v20;
  if (v20 > 0x7F) {
    uint64_t v21 = sub_188A9CC(v20, v4 + 1);
  }
  else {
    uint64_t v21 = v4 + 2;
  }
  char v4 = sub_1755344(v19, (unint64_t)v21, a3);
  if ((v6 & 0x10) != 0)
  {
LABEL_38:
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v22 = *(void *)(a1 + 56);
    *char v4 = 50;
    unsigned int v23 = *(_DWORD *)(v22 + 40);
    v4[1] = v23;
    if (v23 > 0x7F) {
      uint64_t v24 = sub_188A9CC(v23, v4 + 1);
    }
    else {
      uint64_t v24 = v4 + 2;
    }
    char v4 = sub_1755894(v22, v24, a3);
  }
LABEL_44:
  uint64_t v25 = *(void *)(a1 + 8);
  if ((v25 & 1) == 0) {
    return v4;
  }
  unint64_t v27 = v25 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v27 + 31) < 0)
  {
    unint64_t v28 = *(void **)(v27 + 8);
    uint64_t v29 = *(void *)(v27 + 16);
  }
  else
  {
    unint64_t v28 = (void *)(v27 + 8);
    LODWORD(v29) = *(unsigned __int8 *)(v27 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v29)
  {
    uint64_t v30 = (int)v29;
    memcpy(v4, v28, (int)v29);
    v4 += v30;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v28, v29, v4);
}

uint64_t sub_1756688(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0x3F) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_20;
  }
  if (v2)
  {
    uint64_t v4 = sub_1754434(*(void *)(a1 + 24));
    uint64_t v3 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_7:
    uint64_t v5 = sub_1754AB8(*(void *)(a1 + 32));
    v3 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_8:
  if ((v2 & 4) != 0)
  {
    uint64_t v6 = sub_1754F34(*(void *)(a1 + 40));
    v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 8) == 0)
    {
LABEL_10:
      if ((v2 & 0x10) == 0) {
        goto LABEL_11;
      }
      goto LABEL_15;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_10;
  }
  uint64_t v7 = sub_1755454(*(void *)(a1 + 48));
  v3 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x10) == 0)
  {
LABEL_11:
    if ((v2 & 0x20) == 0) {
      goto LABEL_20;
    }
    goto LABEL_16;
  }
LABEL_15:
  uint64_t v8 = sub_17559D8(*(void *)(a1 + 56));
  v3 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x20) == 0) {
    goto LABEL_20;
  }
LABEL_16:
  int v9 = *(_DWORD *)(a1 + 64);
  if (v9 < 0) {
    uint64_t v10 = 11;
  }
  else {
    uint64_t v10 = ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v3 += v10;
LABEL_20:
  uint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v13 + 31) < 0) {
      uint64_t v14 = *(void *)(v13 + 16);
    }
    else {
      uint64_t v14 = *(unsigned __int8 *)(v13 + 31);
    }
    v3 += v14;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

void sub_1756834(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0x3F) != 0)
  {
    if (v4)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v6 = *(void **)(a1 + 24);
      if (!v6)
      {
        uint64_t v7 = *(void *)(a1 + 8);
        uint64_t v8 = (void *)(v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (v7) {
          uint64_t v8 = (void *)*v8;
        }
        uint64_t v6 = sub_178C0E0((uint64_t)v8);
        *(void *)(a1 + 24) = v6;
      }
      if (*(void *)(a2 + 24)) {
        int v9 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        int v9 = &off_25480E8;
      }
      sub_175452C((uint64_t)v6, (uint64_t)v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_30;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v10 = *(std::string **)(a1 + 32);
    if (!v10)
    {
      uint64_t v11 = *(void *)(a1 + 8);
      unint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        unint64_t v12 = (void *)*v12;
      }
      uint64_t v10 = (std::string *)sub_178C184((uint64_t)v12);
      *(void *)(a1 + 32) = v10;
    }
    if (*(void *)(a2 + 32)) {
      unint64_t v13 = *(uint64_t (****)())(a2 + 32);
    }
    else {
      unint64_t v13 = &off_2548120;
    }
    sub_15374C8(v10, (uint64_t)v13);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_38;
    }
LABEL_30:
    *(_DWORD *)(a1 + 16) |= 4u;
    uint64_t v14 = *(void **)(a1 + 40);
    if (!v14)
    {
      uint64_t v15 = *(void *)(a1 + 8);
      uint64_t v16 = (void *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
      if (v15) {
        uint64_t v16 = (void *)*v16;
      }
      uint64_t v14 = sub_178C224((uint64_t)v16);
      *(void *)(a1 + 40) = v14;
    }
    if (*(void *)(a2 + 40)) {
      unsigned int v17 = *(uint64_t (****)())(a2 + 40);
    }
    else {
      unsigned int v17 = &off_2548150;
    }
    sub_1754FBC((uint64_t)v14, (uint64_t)v17);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0) {
        goto LABEL_7;
      }
      goto LABEL_46;
    }
LABEL_38:
    *(_DWORD *)(a1 + 16) |= 8u;
    uint64_t v18 = *(void **)(a1 + 48);
    if (!v18)
    {
      uint64_t v19 = *(void *)(a1 + 8);
      unsigned int v20 = (void *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
      if (v19) {
        unsigned int v20 = (void *)*v20;
      }
      uint64_t v18 = sub_178C29C((uint64_t)v20);
      *(void *)(a1 + 48) = v18;
    }
    if (*(void *)(a2 + 48)) {
      uint64_t v21 = *(uint64_t (****)())(a2 + 48);
    }
    else {
      uint64_t v21 = &off_2548170;
    }
    sub_17554DC((uint64_t)v18, (uint64_t)v21);
    if ((v4 & 0x10) == 0)
    {
LABEL_7:
      if ((v4 & 0x20) == 0)
      {
LABEL_9:
        *(_DWORD *)(a1 + 16) |= v4;
        goto LABEL_10;
      }
LABEL_8:
      *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
      goto LABEL_9;
    }
LABEL_46:
    *(_DWORD *)(a1 + 16) |= 0x10u;
    uint64_t v22 = *(std::string **)(a1 + 56);
    if (!v22)
    {
      uint64_t v23 = *(void *)(a1 + 8);
      uint64_t v24 = (void *)(v23 & 0xFFFFFFFFFFFFFFFCLL);
      if (v23) {
        uint64_t v24 = (void *)*v24;
      }
      uint64_t v22 = (std::string *)sub_178C314((uint64_t)v24);
      *(void *)(a1 + 56) = v22;
    }
    if (*(void *)(a2 + 56)) {
      uint64_t v25 = *(uint64_t (****)())(a2 + 56);
    }
    else {
      uint64_t v25 = &off_2548190;
    }
    sub_15374C8(v22, (uint64_t)v25);
    if ((v4 & 0x20) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
LABEL_10:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_1756A4C(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if (v2)
  {
    uint64_t v3 = *(void *)(a1 + 24);
    uint64_t v4 = *(unsigned int *)(v3 + 32);
    while ((int)v4 >= 1)
    {
      uint64_t v5 = v4 - 1;
      char v6 = sub_18856CC(*(void *)(*(void *)(v3 + 40) + 8 * v4) + 16);
      uint64_t v4 = v5;
      if ((v6 & 1) == 0) {
        return 0;
      }
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 4) != 0)
  {
    uint64_t v8 = *(void *)(a1 + 40);
    if (*(unsigned char *)(v8 + 16))
    {
      uint64_t result = sub_16FA6E0(*(void *)(v8 + 24));
      if (!result) {
        return result;
      }
      int v2 = *(_DWORD *)(a1 + 16);
    }
  }
  if ((v2 & 8) == 0) {
    return 1;
  }
  uint64_t v9 = *(void *)(a1 + 48);
  if ((*(unsigned char *)(v9 + 16) & 1) == 0) {
    return 1;
  }
  uint64_t result = sub_17306FC(*(void *)(v9 + 24));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_1756AF4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.TemplatePlace.TemplateData.DataItem");
}

uint64_t sub_1756B04(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_1756B94((uint64_t (***)())a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  sub_12C1DB8((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

uint64_t (***sub_1756B94(uint64_t (***result)()))()
{
  if (result != &off_2548208)
  {
    uint64_t v1 = result;
    uint64_t v2 = (uint64_t)result[6];
    if (v2)
    {
      sub_184AFBC(v2);
      operator delete();
    }
    uint64_t v3 = (uint64_t)v1[7];
    if (v3)
    {
      sub_1755AA0(v3);
      operator delete();
    }
    if (v1[8])
    {
      sub_145FE08();
      operator delete();
    }
    uint64_t v4 = (uint64_t)v1[9];
    if (v4)
    {
      sub_16EB850(v4);
      operator delete();
    }
    uint64_t v5 = (uint64_t)v1[10];
    if (v5)
    {
      sub_1755AA0(v5);
      operator delete();
    }
    uint64_t result = (uint64_t (***)())v1[11];
    if (result)
    {
      sub_15BC200();
      operator delete();
    }
  }
  return result;
}

void sub_1756CA0(uint64_t a1)
{
  sub_1756B04(a1);

  operator delete();
}

uint64_t sub_1756CD8(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_15B2C80(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  int v5 = *(_DWORD *)(v1 + 16);
  if ((v5 & 0x3F) == 0) {
    goto LABEL_13;
  }
  if (v5)
  {
    uint64_t result = (uint64_t)sub_16CD894(*(void *)(v1 + 48));
    if ((v5 & 2) == 0)
    {
LABEL_8:
      if ((v5 & 4) == 0) {
        goto LABEL_9;
      }
      goto LABEL_19;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_8;
  }
  uint64_t result = sub_1755C48(*(void *)(v1 + 56));
  if ((v5 & 4) == 0)
  {
LABEL_9:
    if ((v5 & 8) == 0) {
      goto LABEL_10;
    }
LABEL_20:
    uint64_t result = sub_16BF128(*(void *)(v1 + 72));
    if ((v5 & 0x10) == 0)
    {
LABEL_11:
      if ((v5 & 0x20) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }
    goto LABEL_21;
  }
LABEL_19:
  uint64_t result = sub_1369BB4(*(void *)(v1 + 64));
  if ((v5 & 8) != 0) {
    goto LABEL_20;
  }
LABEL_10:
  if ((v5 & 0x10) == 0) {
    goto LABEL_11;
  }
LABEL_21:
  uint64_t result = sub_1755C48(*(void *)(v1 + 80));
  if ((v5 & 0x20) != 0) {
LABEL_12:
  }
    uint64_t result = sub_15BC23C(*(void *)(v1 + 88));
LABEL_13:
  char v7 = *(unsigned char *)(v1 + 8);
  uint64_t v6 = v1 + 8;
  *(unsigned char *)(v6 + 88) = 0;
  *(_DWORD *)(v6 + 8) = 0;
  if (v7)
  {
    return sub_188B4AC((uint64_t *)v6);
  }
  return result;
}

char *sub_1756DC8(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v39 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v39, a3[11].i32[1])) {
    goto LABEL_2;
  }
  char v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = v39 + 1;
    unsigned int v9 = *v39;
    if (*v39 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v39, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v39 + 2;
      }
    }
    uint64_t v39 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_60;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 48);
        if (!v12)
        {
          unint64_t v13 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            unint64_t v13 = (void *)*v13;
          }
          uint64_t v12 = sub_185089C((uint64_t)v13);
          *(void *)(a1 + 48) = v12;
          uint64_t v8 = v39;
        }
        uint64_t v14 = sub_12688D0(a3, v12, (unsigned __int8 *)v8);
        goto LABEL_67;
      case 2u:
        if (v9 != 16) {
          goto LABEL_60;
        }
        v5 |= 0x40u;
        uint64_t v15 = v8 + 1;
        uint64_t v16 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_19;
        }
        int v17 = *v15;
        uint64_t v16 = v16 + (v17 << 7) - 128;
        if (v17 < 0)
        {
          int v37 = (char *)sub_188C138((uint64_t)v8, v16);
          uint64_t v39 = v37;
          *(unsigned char *)(a1 + 96) = v38 != 0;
          if (!v37) {
            goto LABEL_75;
          }
        }
        else
        {
          uint64_t v15 = v8 + 2;
LABEL_19:
          uint64_t v39 = v15;
          *(unsigned char *)(a1 + 96) = v16 != 0;
        }
        goto LABEL_68;
      case 3u:
        if (v9 != 26) {
          goto LABEL_60;
        }
        uint64_t v18 = v8 - 1;
        while (1)
        {
          uint64_t v19 = (unsigned __int8 *)(v18 + 1);
          uint64_t v39 = v18 + 1;
          unsigned int v20 = *(_DWORD **)(a1 + 40);
          if (v20 && (uint64_t v21 = *(int *)(a1 + 32), (int)v21 < *v20))
          {
            *(_DWORD *)(a1 + 32) = v21 + 1;
            uint64_t v22 = *(void *)&v20[2 * v21 + 2];
          }
          else
          {
            uint64_t v23 = sub_15C1B30(*(void *)(a1 + 24));
            uint64_t v22 = sub_188CDC8(a1 + 24, (uint64_t)v23);
            uint64_t v19 = (unsigned __int8 *)v39;
          }
          uint64_t v18 = (char *)sub_125CF74(a3, v22, v19);
          uint64_t v39 = v18;
          if (!v18) {
            goto LABEL_75;
          }
          if (*(void *)a3 <= (unint64_t)v18 || *v18 != 26) {
            goto LABEL_68;
          }
        }
      case 4u:
        if (v9 != 34) {
          goto LABEL_60;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v24 = *(void *)(a1 + 56);
        if (v24) {
          goto LABEL_53;
        }
        uint64_t v25 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          uint64_t v25 = (void *)*v25;
        }
        sub_178C3B4((uint64_t)v25);
        uint64_t v24 = v26;
        *(void *)(a1 + 56) = v26;
        goto LABEL_52;
      case 5u:
        if (v9 != 42) {
          goto LABEL_60;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        unint64_t v27 = *(void **)(a1 + 64);
        if (!v27)
        {
          unint64_t v28 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            unint64_t v28 = (void *)*v28;
          }
          unint64_t v27 = sub_1478C60((uint64_t)v28);
          *(void *)(a1 + 64) = v27;
          uint64_t v8 = v39;
        }
        uint64_t v14 = sub_129760C(a3, (uint64_t)v27, (unsigned __int8 *)v8);
        goto LABEL_67;
      case 6u:
        if (v9 != 50) {
          goto LABEL_60;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v29 = *(void **)(a1 + 72);
        if (!v29)
        {
          uint64_t v30 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v30 = (void *)*v30;
          }
          uint64_t v29 = sub_1788710((uint64_t)v30);
          *(void *)(a1 + 72) = v29;
          uint64_t v8 = v39;
        }
        uint64_t v14 = (char *)sub_1550A68(a3, (uint64_t)v29, (unsigned __int8 *)v8);
        goto LABEL_67;
      case 7u:
        if (v9 != 58) {
          goto LABEL_60;
        }
        *(_DWORD *)(a1 + 16) |= 0x10u;
        uint64_t v24 = *(void *)(a1 + 80);
        if (v24) {
          goto LABEL_53;
        }
        BOOL v31 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          BOOL v31 = (void *)*v31;
        }
        sub_178C3B4((uint64_t)v31);
        uint64_t v24 = v32;
        *(void *)(a1 + 80) = v32;
LABEL_52:
        uint64_t v8 = v39;
LABEL_53:
        uint64_t v14 = sub_1757210(a3, v24, (unsigned __int8 *)v8);
        goto LABEL_67;
      case 8u:
        if (v9 != 66) {
          goto LABEL_60;
        }
        *(_DWORD *)(a1 + 16) |= 0x20u;
        int v33 = *(void **)(a1 + 88);
        if (!v33)
        {
          unint64_t v34 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            unint64_t v34 = (void *)*v34;
          }
          int v33 = sub_15C221C((uint64_t)v34);
          *(void *)(a1 + 88) = v33;
          uint64_t v8 = v39;
        }
        uint64_t v14 = (char *)sub_123B1B4(a3, (uint64_t)v33, (unsigned __int8 *)v8);
        goto LABEL_67;
      default:
LABEL_60:
        if (v9) {
          BOOL v35 = (v9 & 7) == 4;
        }
        else {
          BOOL v35 = 1;
        }
        if (!v35)
        {
          if (*v7)
          {
            int v36 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            int v36 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = v39;
          }
          uint64_t v14 = (char *)sub_1885AC0(v9, v36, v8, a3);
LABEL_67:
          uint64_t v39 = v14;
          if (!v14) {
            goto LABEL_75;
          }
LABEL_68:
          if (sub_11947B8((uint64_t)a3, &v39, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_75:
        }
          uint64_t v39 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v39;
    }
  }
}

char *sub_1757210(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1755CF4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_17572A0(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 48);
    *uint64_t v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 44);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    uint64_t v4 = sub_184B3AC(v7, v9, a3);
  }
  if ((v6 & 0x40) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v10 = *(unsigned char *)(a1 + 96);
    *uint64_t v4 = 16;
    v4[1] = v10;
    v4 += 2;
  }
  int v11 = *(_DWORD *)(a1 + 32);
  if (v11)
  {
    for (int i = 0; i != v11; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v13 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *uint64_t v4 = 26;
      unsigned int v14 = *(_DWORD *)(v13 + 20);
      v4[1] = v14;
      if (v14 > 0x7F) {
        uint64_t v15 = sub_188A9CC(v14, v4 + 1);
      }
      else {
        uint64_t v15 = v4 + 2;
      }
      uint64_t v4 = sub_15B2EA4(v13, v15, a3);
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v16 = *(void *)(a1 + 56);
    *uint64_t v4 = 34;
    unsigned int v17 = *(_DWORD *)(v16 + 20);
    v4[1] = v17;
    if (v17 > 0x7F) {
      uint64_t v18 = sub_188A9CC(v17, v4 + 1);
    }
    else {
      uint64_t v18 = v4 + 2;
    }
    uint64_t v4 = sub_175634C(v16, (unint64_t)v18, a3);
    if ((v6 & 4) == 0)
    {
LABEL_22:
      if ((v6 & 8) == 0) {
        goto LABEL_23;
      }
      goto LABEL_38;
    }
  }
  else if ((v6 & 4) == 0)
  {
    goto LABEL_22;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v19 = *(void *)(a1 + 64);
  *uint64_t v4 = 42;
  unsigned int v20 = *(_DWORD *)(v19 + 44);
  v4[1] = v20;
  if (v20 > 0x7F) {
    uint64_t v21 = sub_188A9CC(v20, v4 + 1);
  }
  else {
    uint64_t v21 = v4 + 2;
  }
  uint64_t v4 = sub_1460138(v19, v21, a3);
  if ((v6 & 8) == 0)
  {
LABEL_23:
    if ((v6 & 0x10) == 0) {
      goto LABEL_24;
    }
    goto LABEL_44;
  }
LABEL_38:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v22 = *(void *)(a1 + 72);
  *uint64_t v4 = 50;
  unsigned int v23 = *(_DWORD *)(v22 + 44);
  v4[1] = v23;
  if (v23 > 0x7F) {
    uint64_t v24 = sub_188A9CC(v23, v4 + 1);
  }
  else {
    uint64_t v24 = v4 + 2;
  }
  uint64_t v4 = sub_16EBC08(v22, v24, a3);
  if ((v6 & 0x10) == 0)
  {
LABEL_24:
    if ((v6 & 0x20) == 0) {
      goto LABEL_56;
    }
    goto LABEL_50;
  }
LABEL_44:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v25 = *(void *)(a1 + 80);
  *uint64_t v4 = 58;
  unsigned int v26 = *(_DWORD *)(v25 + 20);
  v4[1] = v26;
  if (v26 > 0x7F) {
    unint64_t v27 = sub_188A9CC(v26, v4 + 1);
  }
  else {
    unint64_t v27 = v4 + 2;
  }
  uint64_t v4 = sub_175634C(v25, (unint64_t)v27, a3);
  if ((v6 & 0x20) != 0)
  {
LABEL_50:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v28 = *(void *)(a1 + 88);
    *uint64_t v4 = 66;
    unsigned int v29 = *(_DWORD *)(v28 + 20);
    v4[1] = v29;
    if (v29 > 0x7F) {
      uint64_t v30 = sub_188A9CC(v29, v4 + 1);
    }
    else {
      uint64_t v30 = v4 + 2;
    }
    uint64_t v4 = sub_15BC3D8(v28, v30, a3);
  }
LABEL_56:
  uint64_t v31 = *(void *)(a1 + 8);
  if ((v31 & 1) == 0) {
    return v4;
  }
  unint64_t v33 = v31 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v33 + 31) < 0)
  {
    unint64_t v34 = *(void **)(v33 + 8);
    uint64_t v35 = *(void *)(v33 + 16);
  }
  else
  {
    unint64_t v34 = (void *)(v33 + 8);
    LODWORD(v35) = *(unsigned __int8 *)(v33 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v35)
  {
    uint64_t v36 = (int)v35;
    memcpy(v4, v34, (int)v35);
    v4 += v36;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v34, v35, v4);
}

uint64_t sub_175768C(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_15B2F90(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 0x7F) == 0) {
    goto LABEL_19;
  }
  if (v8)
  {
    uint64_t v12 = sub_184B568(*(void *)(a1 + 48));
    v2 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v8 & 2) == 0)
    {
LABEL_12:
      if ((v8 & 4) == 0) {
        goto LABEL_13;
      }
      goto LABEL_23;
    }
  }
  else if ((v8 & 2) == 0)
  {
    goto LABEL_12;
  }
  uint64_t v13 = sub_1756688(*(void *)(a1 + 56));
  v2 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 4) == 0)
  {
LABEL_13:
    if ((v8 & 8) == 0) {
      goto LABEL_14;
    }
    goto LABEL_24;
  }
LABEL_23:
  uint64_t v14 = sub_1460320(*(void *)(a1 + 64));
  v2 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 8) == 0)
  {
LABEL_14:
    if ((v8 & 0x10) == 0) {
      goto LABEL_15;
    }
    goto LABEL_25;
  }
LABEL_24:
  uint64_t v15 = sub_16EBD94(*(void *)(a1 + 72));
  v2 += v15 + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 0x10) == 0)
  {
LABEL_15:
    if ((v8 & 0x20) == 0) {
      goto LABEL_17;
    }
    goto LABEL_16;
  }
LABEL_25:
  uint64_t v16 = sub_1756688(*(void *)(a1 + 80));
  v2 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 0x20) != 0)
  {
LABEL_16:
    uint64_t v9 = sub_15BC4A4(*(void *)(a1 + 88));
    v2 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_17:
  if ((v8 & 0x40) != 0) {
    v2 += 2;
  }
LABEL_19:
  uint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    unint64_t v17 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v17 + 31) < 0) {
      uint64_t v18 = *(void *)(v17 + 16);
    }
    else {
      uint64_t v18 = *(unsigned __int8 *)(v17 + 31);
    }
    v2 += v18;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

void sub_175788C(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_12C1E38((std::string *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    int v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 0x7F) != 0)
  {
    if (v9)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v10 = *(void *)(a1 + 48);
      if (!v10)
      {
        uint64_t v11 = *(void *)(a1 + 8);
        uint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
        if (v11) {
          uint64_t v12 = (void *)*v12;
        }
        uint64_t v10 = sub_185089C((uint64_t)v12);
        *(void *)(a1 + 48) = v10;
      }
      if (*(void *)(a2 + 48)) {
        uint64_t v13 = *(uint64_t (****)())(a2 + 48);
      }
      else {
        uint64_t v13 = &off_254D2B0;
      }
      sub_16CE3CC(v10, (uint64_t)v13);
    }
    if ((v9 & 2) != 0)
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      uint64_t v15 = *(void *)(a1 + 56);
      if (!v15)
      {
        uint64_t v16 = *(void *)(a1 + 8);
        unint64_t v17 = (void *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
        if (v16) {
          unint64_t v17 = (void *)*v17;
        }
        sub_178C3B4((uint64_t)v17);
        *(void *)(a1 + 56) = v15;
      }
      if (*(void *)(a2 + 56)) {
        uint64_t v18 = *(uint64_t (****)())(a2 + 56);
      }
      else {
        uint64_t v18 = &off_25481C0;
      }
      sub_1756834(v15, (uint64_t)v18);
      if ((v9 & 4) == 0)
      {
LABEL_16:
        if ((v9 & 8) == 0) {
          goto LABEL_17;
        }
        goto LABEL_42;
      }
    }
    else if ((v9 & 4) == 0)
    {
      goto LABEL_16;
    }
    *(_DWORD *)(a1 + 16) |= 4u;
    uint64_t v19 = *(void **)(a1 + 64);
    if (!v19)
    {
      uint64_t v20 = *(void *)(a1 + 8);
      uint64_t v21 = (void *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
      if (v20) {
        uint64_t v21 = (void *)*v21;
      }
      uint64_t v19 = sub_1478C60((uint64_t)v21);
      *(void *)(a1 + 64) = v19;
    }
    if (*(void *)(a2 + 64)) {
      uint64_t v22 = *(uint64_t (****)())(a2 + 64);
    }
    else {
      uint64_t v22 = &off_2539400;
    }
    sub_136AC4C((uint64_t)v19, (uint64_t)v22);
    if ((v9 & 8) == 0)
    {
LABEL_17:
      if ((v9 & 0x10) == 0) {
        goto LABEL_18;
      }
      goto LABEL_50;
    }
LABEL_42:
    *(_DWORD *)(a1 + 16) |= 8u;
    unsigned int v23 = *(void **)(a1 + 72);
    if (!v23)
    {
      uint64_t v24 = *(void *)(a1 + 8);
      uint64_t v25 = (void *)(v24 & 0xFFFFFFFFFFFFFFFCLL);
      if (v24) {
        uint64_t v25 = (void *)*v25;
      }
      unsigned int v23 = sub_1788710((uint64_t)v25);
      *(void *)(a1 + 72) = v23;
    }
    if (*(void *)(a2 + 72)) {
      unsigned int v26 = *(uint64_t (****)())(a2 + 72);
    }
    else {
      unsigned int v26 = &off_2545A18;
    }
    sub_16BF9C4((uint64_t)v23, (uint64_t)v26);
    if ((v9 & 0x10) == 0)
    {
LABEL_18:
      if ((v9 & 0x20) == 0) {
        goto LABEL_19;
      }
      goto LABEL_58;
    }
LABEL_50:
    *(_DWORD *)(a1 + 16) |= 0x10u;
    uint64_t v27 = *(void *)(a1 + 80);
    if (!v27)
    {
      uint64_t v28 = *(void *)(a1 + 8);
      unsigned int v29 = (void *)(v28 & 0xFFFFFFFFFFFFFFFCLL);
      if (v28) {
        unsigned int v29 = (void *)*v29;
      }
      sub_178C3B4((uint64_t)v29);
      *(void *)(a1 + 80) = v27;
    }
    if (*(void *)(a2 + 80)) {
      uint64_t v30 = *(uint64_t (****)())(a2 + 80);
    }
    else {
      uint64_t v30 = &off_25481C0;
    }
    sub_1756834(v27, (uint64_t)v30);
    if ((v9 & 0x20) == 0)
    {
LABEL_19:
      if ((v9 & 0x40) == 0)
      {
LABEL_21:
        *(_DWORD *)(a1 + 16) |= v9;
        goto LABEL_22;
      }
LABEL_20:
      *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
      goto LABEL_21;
    }
LABEL_58:
    *(_DWORD *)(a1 + 16) |= 0x20u;
    uint64_t v31 = *(std::string **)(a1 + 88);
    if (!v31)
    {
      uint64_t v32 = *(void *)(a1 + 8);
      unint64_t v33 = (void *)(v32 & 0xFFFFFFFFFFFFFFFCLL);
      if (v32) {
        unint64_t v33 = (void *)*v33;
      }
      uint64_t v31 = (std::string *)sub_15C221C((uint64_t)v33);
      *(void *)(a1 + 88) = v31;
    }
    if (*(void *)(a2 + 88)) {
      unint64_t v34 = *(uint64_t (****)())(a2 + 88);
    }
    else {
      unint64_t v34 = &off_253F5C0;
    }
    sub_12329D0(v31, (uint64_t)v34);
    if ((v9 & 0x40) == 0) {
      goto LABEL_21;
    }
    goto LABEL_20;
  }
LABEL_22:
  uint64_t v14 = *(void *)(a2 + 8);
  if (v14)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v14 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_1757B58(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if (v2)
  {
    uint64_t result = sub_16CE508(*(void *)(a1 + 48));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 2) != 0)
  {
    uint64_t result = sub_1756A4C(*(void *)(a1 + 56));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 4) != 0)
  {
    uint64_t result = sub_136AEA0(*(void *)(a1 + 64));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 8) != 0)
  {
    uint64_t result = sub_18856CC(*(void *)(a1 + 72) + 16);
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 0x10) != 0)
  {
    uint64_t result = sub_1756A4C(*(void *)(a1 + 80));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 0x20) == 0) {
    return 1;
  }
  uint64_t result = sub_15BC528(*(void *)(a1 + 88));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_1757BF8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.TemplatePlace.TemplateData");
}

uint64_t sub_1757C08(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_24D7898;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  return a1;
}

void sub_1757C84(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_1757CB4(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1757D28(void *a1)
{
  sub_1757CB4(a1);

  operator delete();
}

uint64_t sub_1757D60(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 3) != 0) {
    *(void *)(a1 + 24) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_1757D84(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v25 = a2;
  if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
    return v25;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    int v7 = v25 + 1;
    unsigned int v8 = *v25;
    if (*v25 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        int v7 = (char *)sub_188C180((uint64_t)v25, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        int v7 = v25 + 2;
      }
    }
    uint64_t v25 = v7;
    if (v8 >> 3 != 2) {
      break;
    }
    if (v8 != 16) {
      goto LABEL_13;
    }
    uint64_t v14 = v7 + 1;
    unint64_t v15 = *v7;
    if (*v7 < 0)
    {
      int v16 = *v14;
      int v17 = v15 + (v16 << 7);
      unint64_t v15 = (v17 - 128);
      if (v16 < 0)
      {
        uint64_t v25 = (char *)sub_188C138((uint64_t)v7, (v17 - 128));
        if (!v25) {
          return 0;
        }
        unint64_t v15 = v21;
        goto LABEL_26;
      }
      uint64_t v14 = v7 + 2;
    }
    uint64_t v25 = v14;
LABEL_26:
    if (v15 > 1)
    {
      if (*v6) {
        unsigned int v23 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        unsigned int v23 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      int v24 = 2;
      goto LABEL_46;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    *(_DWORD *)(a1 + 28) = v15;
LABEL_34:
    if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
      return v25;
    }
  }
  if (v8 >> 3 == 1 && v8 == 8)
  {
    uint64_t v18 = v7 + 1;
    unint64_t v15 = *v7;
    if ((*v7 & 0x80000000) == 0) {
      goto LABEL_31;
    }
    int v19 = *v18;
    int v20 = v15 + (v19 << 7);
    unint64_t v15 = (v20 - 128);
    if (v19 < 0)
    {
      uint64_t v25 = (char *)sub_188C138((uint64_t)v7, (v20 - 128));
      if (!v25) {
        return 0;
      }
      unint64_t v15 = v22;
    }
    else
    {
      uint64_t v18 = v7 + 2;
LABEL_31:
      uint64_t v25 = v18;
    }
    if (v15 <= 1)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      *(_DWORD *)(a1 + 24) = v15;
      goto LABEL_34;
    }
    if (*v6) {
      unsigned int v23 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else {
      unsigned int v23 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
    }
    int v24 = 1;
LABEL_46:
    sub_188C020(v24, v15, v23);
    goto LABEL_34;
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v7 = v25;
    }
    uint64_t v25 = (char *)sub_1885AC0(v8, v13, v7, a3);
    if (!v25) {
      return 0;
    }
    goto LABEL_34;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v25;
  }
  return 0;
}

unsigned char *sub_1757FDC(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 24);
    *uint64_t v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 28);
    *uint64_t v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    int v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    int v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_1758180(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_14;
  }
  if (v1)
  {
    int v3 = *(_DWORD *)(a1 + 24);
    if (v3 < 0)
    {
      uint64_t v2 = 11;
      if ((v1 & 2) == 0) {
        goto LABEL_14;
      }
    }
    else
    {
      uint64_t v2 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v1 & 2) == 0) {
        goto LABEL_14;
      }
    }
  }
  else
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_14;
    }
  }
  int v4 = *(_DWORD *)(a1 + 28);
  if (v4 < 0) {
    uint64_t v5 = 11;
  }
  else {
    uint64_t v5 = ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v2 += v5;
LABEL_14:
  uint64_t v6 = *(void *)(a1 + 8);
  if (v6)
  {
    unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v8 + 31) < 0) {
      uint64_t v9 = *(void *)(v8 + 16);
    }
    else {
      uint64_t v9 = *(unsigned __int8 *)(v8 + 31);
    }
    v2 += v9;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_1758240()
{
  return 1;
}

void *sub_1758248@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.TemplatePlace.FollowUpRequestMetadata");
}

uint64_t sub_1758258(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  *(void *)(a1 + 8) = v5;
  *(void *)a1 = off_24D7918;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = a2;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = 0;
  *(_DWORD *)(a1 + 80) = 0;
  return a1;
}

void sub_17582CC(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_17582FC(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = a1 + 16;
  *(void *)a1 = off_24D7918;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  uint64_t v6 = (uint64_t *)(a1 + 48);
  *(_DWORD *)(a1 + 68) = 0;
  *(void *)(a1 + 52) = 0;
  *(void *)(a1 + 60) = 0;
  *(void *)(a1 + 44) = 0;
  int v7 = *(_DWORD *)(a2 + 56);
  if (v7)
  {
    uint64_t v8 = *(void *)(a2 + 64);
    uint64_t v9 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_1872740(v6, v9, (uint64_t *)(v8 + 8), v7, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v10 = *(_DWORD *)(a1 + 56) + v7;
    *(_DWORD *)(a1 + 56) = v10;
    unint64_t v11 = *(int **)(a1 + 64);
    if (*v11 < v10) {
      *unint64_t v11 = v10;
    }
  }
  uint64_t v12 = *(void *)(a2 + 8);
  if (v12) {
    sub_188B4F8(v4, (v12 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v5, a2 + 16);
  if (*(unsigned char *)(a2 + 40)) {
    operator new();
  }
  *(void *)(a1 + 72) = 0;
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  return a1;
}

void sub_175844C()
{
}

uint64_t sub_17584BC(uint64_t a1)
{
  int v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_2548290)
  {
    uint64_t v6 = *(void **)(a1 + 72);
    if (v6)
    {
      sub_1757CB4(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  sub_18708BC((void *)(a1 + 48));
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1758588(uint64_t a1)
{
  sub_17584BC(a1);

  operator delete();
}

char *sub_17585C0(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v30 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v30, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v30 + 1;
    unsigned int v9 = *v30;
    if (*v30 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v30, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v30 + 2;
      }
    }
    uint64_t v30 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 == 3)
    {
      if (v9 != 26) {
        goto LABEL_14;
      }
      *(_DWORD *)(a1 + 40) |= 1u;
      int v16 = *(void **)(a1 + 72);
      if (!v16)
      {
        uint64_t v17 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          uint64_t v17 = (void *)*v17;
        }
        int v16 = sub_178C4DC((uint64_t)v17);
        *(void *)(a1 + 72) = v16;
        uint64_t v8 = v30;
      }
      unint64_t v15 = sub_1758918(a3, (uint64_t)v16, (unsigned __int8 *)v8);
LABEL_43:
      uint64_t v30 = v15;
      if (!v15) {
        goto LABEL_51;
      }
      goto LABEL_44;
    }
    if (v12 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_14;
    }
    v5 |= 2u;
    uint64_t v18 = v8 + 1;
    int v19 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_30;
    }
    int v20 = *v18;
    int v19 = v19 + (v20 << 7) - 128;
    if ((v20 & 0x80000000) == 0)
    {
      uint64_t v18 = v8 + 2;
LABEL_30:
      uint64_t v30 = v18;
      *(_DWORD *)(a1 + 80) = v19;
      goto LABEL_44;
    }
    uint64_t v28 = (char *)sub_188C0D0((uint64_t)v8, v19);
    uint64_t v30 = v28;
    *(_DWORD *)(a1 + 80) = v29;
    if (!v28) {
      goto LABEL_51;
    }
LABEL_44:
    if (sub_11947B8((uint64_t)a3, &v30, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v12 == 1 && v9 == 10)
  {
    unint64_t v21 = v8 - 1;
    while (1)
    {
      unint64_t v22 = (unsigned __int8 *)(v21 + 1);
      uint64_t v30 = v21 + 1;
      unsigned int v23 = *(_DWORD **)(a1 + 64);
      if (v23 && (uint64_t v24 = *(int *)(a1 + 56), (int)v24 < *v23))
      {
        *(_DWORD *)(a1 + 56) = v24 + 1;
        uint64_t v25 = *(void *)&v23[2 * v24 + 2];
      }
      else
      {
        uint64_t v26 = sub_178C438(*(void *)(a1 + 48));
        uint64_t v25 = sub_188CDC8(a1 + 48, v26);
        unint64_t v22 = (unsigned __int8 *)v30;
      }
      unint64_t v21 = sub_1758888(a3, v25, v22);
      uint64_t v30 = v21;
      if (!v21) {
        goto LABEL_51;
      }
      if (*(void *)a3 <= (unint64_t)v21 || *v21 != 10) {
        goto LABEL_44;
      }
    }
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if ((v9 - 8000) >> 6 > 0x7C)
    {
      if (*v7)
      {
        uint64_t v27 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        uint64_t v27 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        uint64_t v8 = v30;
      }
      unint64_t v15 = (char *)sub_1885AC0(v9, v27, v8, a3);
    }
    else
    {
      unint64_t v15 = (char *)sub_18859DC((uint64_t **)(a1 + 16), v9, v8, (uint64_t)&off_2548290, (uint64_t *)(a1 + 8), a3);
    }
    goto LABEL_43;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_51:
  uint64_t v30 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 40) |= v5;
  return v30;
}

char *sub_1758888(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1756DC8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1758918(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1757D84(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_17589A8(uint64_t a1, char *a2, unint64_t *a3)
{
  int v6 = *(_DWORD *)(a1 + 56);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 64) + 8 * i + 8);
      *a2 = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      a2[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, a2 + 1);
      }
      else {
        unsigned int v10 = a2 + 2;
      }
      a2 = sub_17572A0(v8, (unint64_t)v10, a3);
    }
  }
  int v11 = *(_DWORD *)(a1 + 40);
  if ((v11 & 2) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unsigned int v12 = *(_DWORD *)(a1 + 80);
    *a2 = 16;
    a2[1] = v12;
    if (v12 > 0x7F)
    {
      a2[1] = v12 | 0x80;
      unsigned int v13 = v12 >> 7;
      a2[2] = v12 >> 7;
      a2 += 3;
      if (v12 >= 0x4000)
      {
        do
        {
          *(a2 - 1) |= 0x80u;
          unsigned int v14 = v13 >> 14;
          v13 >>= 7;
          *a2++ = v13;
        }
        while (v14);
      }
    }
    else
    {
      a2 += 2;
    }
  }
  if (v11)
  {
    if (*a3 <= (unint64_t)a2) {
      a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    uint64_t v15 = *(void *)(a1 + 72);
    *a2 = 26;
    unsigned int v16 = *(_DWORD *)(v15 + 20);
    a2[1] = v16;
    if (v16 > 0x7F) {
      uint64_t v17 = sub_188A9CC(v16, a2 + 1);
    }
    else {
      uint64_t v17 = a2 + 2;
    }
    a2 = sub_1757FDC(v15, (unint64_t)v17, a3);
  }
  if (*(_WORD *)(a1 + 26)) {
    a2 = sub_1886844(a1 + 16, 1000, 2000, a2, a3);
  }
  uint64_t v18 = *(void *)(a1 + 8);
  if ((v18 & 1) == 0) {
    return a2;
  }
  unint64_t v20 = v18 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v20 + 31) < 0)
  {
    unint64_t v21 = *(void **)(v20 + 8);
    uint64_t v22 = *(void *)(v20 + 16);
  }
  else
  {
    unint64_t v21 = (void *)(v20 + 8);
    LODWORD(v22) = *(unsigned __int8 *)(v20 + 31);
  }
  if ((uint64_t)(*a3 - (void)a2) >= (int)v22)
  {
    uint64_t v23 = (int)v22;
    memcpy(a2, v21, (int)v22);
    a2 += v23;
    return a2;
  }

  return (char *)sub_188A528(a3, (char *)v21, v22, a2);
}

uint64_t sub_1758BF4(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(int *)(a1 + 56);
  uint64_t v4 = v2 + v3;
  uint64_t v5 = *(void *)(a1 + 64);
  if (v5) {
    int v6 = (uint64_t *)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = sub_175768C(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  int v10 = *(_DWORD *)(a1 + 40);
  if ((v10 & 3) != 0)
  {
    if (v10)
    {
      uint64_t v11 = sub_1758180(*(void *)(a1 + 72));
      v4 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v10 & 2) != 0) {
      v4 += ((9 * (__clz(*(_DWORD *)(a1 + 80) | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  uint64_t v12 = *(void *)(a1 + 8);
  if (v12)
  {
    unint64_t v14 = v12 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v14 + 31) < 0) {
      uint64_t v15 = *(void *)(v14 + 16);
    }
    else {
      uint64_t v15 = *(unsigned __int8 *)(v14 + 31);
    }
    v4 += v15;
  }
  *(_DWORD *)(a1 + 44) = v4;
  return v4;
}

void *sub_1758D0C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.TemplatePlace");
}

uint64_t sub_1758D1C(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  *(void *)(a1 + 8) = v4;
  *(void *)a1 = off_24D7998;
  sub_1882BC4(a1 + 16, a2);
  *(_DWORD *)(a1 + 40) = 0;
  return a1;
}

void sub_1758D80(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_1758DB0(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1758E2C(void *a1)
{
  sub_1758DB0(a1);

  operator delete();
}

char *sub_1758E64(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v15 = a2;
  if ((sub_11947B8((uint64_t)a3, &v15, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v5 = (uint64_t *)(a1 + 8);
    int v6 = (uint64_t **)(a1 + 16);
    while (1)
    {
      uint64_t v7 = v15 + 1;
      unsigned int v8 = *v15;
      if (*v15 < 0)
      {
        unsigned int v9 = v8 + (*v7 << 7);
        unsigned int v8 = v9 - 128;
        if (*v7 < 0)
        {
          uint64_t v7 = (char *)sub_188C180((uint64_t)v15, v9 - 128);
          unsigned int v8 = v10;
        }
        else
        {
          uint64_t v7 = v15 + 2;
        }
      }
      uint64_t v15 = v7;
      if (!v8 || (v8 & 7) == 4) {
        break;
      }
      if ((v8 - 8000) >> 6 > 0x7C)
      {
        if (*v5)
        {
          unsigned int v13 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else
        {
          unsigned int v13 = (std::string *)sub_188DBD8(v5);
          uint64_t v7 = v15;
        }
        uint64_t v12 = sub_1885AC0(v8, v13, v7, a3);
      }
      else
      {
        uint64_t v12 = sub_18859DC(v6, v8, v7, (uint64_t)&off_25482E8, v5, a3);
      }
      uint64_t v15 = (char *)v12;
      if (!v12) {
        return 0;
      }
      if (sub_11947B8((uint64_t)a3, &v15, a3[11].i32[1])) {
        return v15;
      }
    }
    if (v7)
    {
      a3[10].i32[0] = v8 - 1;
      return v15;
    }
    return 0;
  }
  return v15;
}

char *sub_1758FB4(uint64_t a1, char *a2, _DWORD *a3)
{
  uint64_t v4 = a2;
  if (*(_WORD *)(a1 + 26)) {
    uint64_t v4 = sub_1886844(a1 + 16, 1000, 2000, a2, a3);
  }
  uint64_t v6 = *(void *)(a1 + 8);
  if ((v6 & 1) == 0) {
    return v4;
  }
  unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v8 + 31) < 0)
  {
    unsigned int v9 = *(void **)(v8 + 8);
    uint64_t v10 = *(void *)(v8 + 16);
  }
  else
  {
    unsigned int v9 = (void *)(v8 + 8);
    LODWORD(v10) = *(unsigned __int8 *)(v8 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v10)
  {
    uint64_t v11 = (int)v10;
    memcpy(v4, v9, (int)v10);
    v4 += v11;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v9, v10, v4);
}

uint64_t sub_1759080(uint64_t a1)
{
  uint64_t result = sub_1889280(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v4 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v5 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v5 = *(unsigned __int8 *)(v4 + 31);
    }
    result += v5;
  }
  *(_DWORD *)(a1 + 40) = result;
  return result;
}

void *sub_17590D8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.TemplatePlaceFilter");
}

uint64_t sub_17590E8(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  unint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  if ((uint64_t (***)())a1 != &off_2548318 && *(void *)(a1 + 24))
  {
    sub_145FE08();
    operator delete();
  }
  if (*(void *)(a1 + 8)) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17591A0(uint64_t a1)
{
  sub_17590E8(a1);

  operator delete();
}

uint64_t sub_17591D8(uint64_t result)
{
  uint64_t v1 = result;
  if (*(unsigned char *)(result + 16)) {
    uint64_t result = sub_1369BB4(*(void *)(result + 24));
  }
  char v3 = *(unsigned char *)(v1 + 8);
  uint64_t v2 = v1 + 8;
  *(_DWORD *)(v2 + 8) = 0;
  if (v3)
  {
    return sub_188B4AC((uint64_t *)v2);
  }
  return result;
}

char *sub_1759234(uint64_t a1, char *a2, int32x2_t *a3)
{
  unsigned int v16 = a2;
  if (sub_11947B8((uint64_t)a3, &v16, a3[11].i32[1])) {
    return v16;
  }
  uint64_t v5 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v6 = v16 + 1;
    unsigned int v7 = *v16;
    if (*v16 < 0)
    {
      unsigned int v8 = v7 + (*v6 << 7);
      unsigned int v7 = v8 - 128;
      if (*v6 < 0)
      {
        uint64_t v6 = (char *)sub_188C180((uint64_t)v16, v8 - 128);
        unsigned int v7 = v9;
      }
      else
      {
        uint64_t v6 = v16 + 2;
      }
    }
    unsigned int v16 = v6;
    if (v7 != 10) {
      break;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    unsigned int v13 = *(void **)(a1 + 24);
    if (!v13)
    {
      unint64_t v14 = (void *)(*v5 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v5) {
        unint64_t v14 = (void *)*v14;
      }
      unsigned int v13 = sub_1478C60((uint64_t)v14);
      *(void *)(a1 + 24) = v13;
      uint64_t v6 = v16;
    }
    uint64_t v12 = sub_129760C(a3, (uint64_t)v13, (unsigned __int8 *)v6);
LABEL_20:
    unsigned int v16 = v12;
    if (!v12) {
      return 0;
    }
    if (sub_11947B8((uint64_t)a3, &v16, a3[11].i32[1])) {
      return v16;
    }
  }
  if (v7) {
    BOOL v10 = (v7 & 7) == 4;
  }
  else {
    BOOL v10 = 1;
  }
  if (!v10)
  {
    if (*v5)
    {
      uint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v6 = v16;
    }
    uint64_t v12 = (char *)sub_1885AC0(v7, v11, v6, a3);
    goto LABEL_20;
  }
  if (v6)
  {
    a3[10].i32[0] = v7 - 1;
    return v16;
  }
  return 0;
}

char *sub_175938C(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  unint64_t v4 = (char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= __dst) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v6 = *(void *)(a1 + 24);
    *unint64_t v4 = 10;
    unsigned int v7 = *(_DWORD *)(v6 + 44);
    v4[1] = v7;
    if (v7 > 0x7F) {
      unsigned int v8 = sub_188A9CC(v7, v4 + 1);
    }
    else {
      unsigned int v8 = v4 + 2;
    }
    unint64_t v4 = sub_1460138(v6, v8, a3);
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    uint64_t v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    uint64_t v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    v4 += v14;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v12, v13, v4);
}

uint64_t sub_175949C(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    uint64_t v3 = sub_1460320(*(void *)(a1 + 24));
    uint64_t result = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  else
  {
    uint64_t result = 0;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v5 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    result += v6;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

void sub_1759524(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a2 + 16))
  {
    uint64_t v4 = *(uint64_t (****)())(a2 + 24);
    *(_DWORD *)(a1 + 16) |= 1u;
    unint64_t v5 = *(void **)(a1 + 24);
    if (!v5)
    {
      uint64_t v6 = *(void *)(a1 + 8);
      unsigned int v7 = (void *)(v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (v6) {
        unsigned int v7 = (void *)*v7;
      }
      unint64_t v5 = sub_1478C60((uint64_t)v7);
      *(void *)(a1 + 24) = v5;
      uint64_t v4 = *(uint64_t (****)())(a2 + 24);
    }
    if (v4) {
      unsigned int v8 = v4;
    }
    else {
      unsigned int v8 = &off_2539400;
    }
    sub_136AC4C((uint64_t)v5, (uint64_t)v8);
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_17595CC(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 1;
  }
  uint64_t result = sub_136AEA0(*(void *)(a1 + 24));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_17595F8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.MiniBrowseCategories.MiniBrowseCategory");
}

uint64_t sub_1759608(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  *(void *)(a1 + 8) = v5;
  *(void *)a1 = off_24D7A98;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = a2;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = a2;
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0;
  *(_DWORD *)(a1 + 88) = 0;
  return a1;
}

void sub_175967C(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_17596AC(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = a1 + 16;
  *(void *)a1 = off_24D7A98;
  *(_DWORD *)(a1 + 24) = 0;
  uint64_t v6 = (uint64_t *)(a1 + 40);
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  int v7 = *(_DWORD *)(a2 + 48);
  if (v7)
  {
    uint64_t v8 = *(void *)(a2 + 56);
    uint64_t v9 = (uint64_t *)sub_188CCE4(a1 + 40, *(_DWORD *)(a2 + 48));
    sub_18727CC(v6, v9, (uint64_t *)(v8 + 8), v7, **(_DWORD **)(a1 + 56) - *(_DWORD *)(a1 + 48));
    int v10 = *(_DWORD *)(a1 + 48) + v7;
    *(_DWORD *)(a1 + 48) = v10;
    unint64_t v11 = *(int **)(a1 + 56);
    if (*v11 < v10) {
      *unint64_t v11 = v10;
    }
  }
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0;
  int v12 = *(_DWORD *)(a2 + 72);
  if (v12)
  {
    uint64_t v13 = *(void *)(a2 + 80);
    uint64_t v14 = (std::string **)sub_188CCE4(a1 + 64, *(_DWORD *)(a2 + 72));
    sub_188FB98(a1 + 64, v14, (const std::string **)(v13 + 8), v12, **(_DWORD **)(a1 + 80) - *(_DWORD *)(a1 + 72));
    int v15 = *(_DWORD *)(a1 + 72) + v12;
    *(_DWORD *)(a1 + 72) = v15;
    unsigned int v16 = *(int **)(a1 + 80);
    if (*v16 < v15) {
      int *v16 = v15;
    }
  }
  *(_DWORD *)(a1 + 88) = 0;
  uint64_t v17 = *(void *)(a2 + 8);
  if (v17) {
    sub_188B4F8(v4, (v17 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v5, a2 + 16);
  return a1;
}

void sub_1759814(_Unwind_Exception *a1)
{
  sub_187093C(v4);
  sub_1882CC0(v3);
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_1759874(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1889DE8(a1 + 8);
  sub_187093C(a1 + 5);
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1759904(void *a1)
{
  sub_1759874(a1);

  operator delete();
}

uint64_t sub_175993C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v29 = a2;
  if ((sub_11947B8((uint64_t)a3, (char **)v29, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v6 = (uint64_t **)(a1 + 64);
    int v7 = (void *)(a1 + 8);
    while (1)
    {
      uint64_t v8 = (char *)(*(void *)v29 + 1);
      unsigned int v9 = **(unsigned char **)v29;
      if ((char)**(unsigned char **)v29 < 0)
      {
        unsigned int v10 = v9 + (*v8 << 7);
        unsigned int v9 = v10 - 128;
        if (*v8 < 0)
        {
          uint64_t v8 = (char *)sub_188C180(*(uint64_t *)v29, v10 - 128);
          unsigned int v9 = v11;
        }
        else
        {
          uint64_t v8 = (char *)(*(void *)v29 + 2);
        }
      }
      *(void *)int v29 = v8;
      if (v9 >> 3 == 2)
      {
        if (v9 == 18)
        {
          int v15 = v8 - 1;
          while (1)
          {
            unsigned int v16 = (char *)(v15 + 1);
            *(void *)int v29 = v15 + 1;
            uint64_t v17 = *(_DWORD **)(a1 + 80);
            if (v17 && (uint64_t v18 = *(int *)(a1 + 72), (int)v18 < *v17))
            {
              *(_DWORD *)(a1 + 72) = v18 + 1;
              int v19 = *(std::string **)&v17[2 * v18 + 2];
            }
            else
            {
              if (!*v6) {
                operator new();
              }
              *unint64_t v21 = v20;
              v21[1] = sub_3A6EDC;
              void *v20 = 0;
              v20[1] = 0;
              int v20[2] = 0;
              int v19 = (std::string *)sub_188CDC8(a1 + 64, (uint64_t)v20);
              unsigned int v16 = *(char **)v29;
            }
            int v15 = sub_188C244(v19, v16, (uint64_t)a3);
            *(void *)int v29 = v15;
            if (!v15) {
              goto LABEL_49;
            }
            if (*(void *)a3 <= (unint64_t)v15 || *v15 != 18) {
              goto LABEL_44;
            }
          }
        }
      }
      else if (v9 >> 3 == 1 && v9 == 10)
      {
        uint64_t v22 = v8 - 1;
        while (1)
        {
          uint64_t v23 = (unsigned __int8 *)(v22 + 1);
          *(void *)int v29 = v22 + 1;
          uint64_t v24 = *(_DWORD **)(a1 + 56);
          if (v24 && (uint64_t v25 = *(int *)(a1 + 48), (int)v25 < *v24))
          {
            *(_DWORD *)(a1 + 48) = v25 + 1;
            uint64_t v26 = *(void *)&v24[2 * v25 + 2];
          }
          else
          {
            uint64_t v27 = sub_178C60C(*(void *)(a1 + 40));
            uint64_t v26 = sub_188CDC8(a1 + 40, (uint64_t)v27);
            uint64_t v23 = *(unsigned __int8 **)v29;
          }
          uint64_t v22 = sub_1759C1C(a3, v26, v23);
          *(void *)int v29 = v22;
          if (!v22) {
            goto LABEL_49;
          }
          if (*(void *)a3 <= (unint64_t)v22 || *v22 != 10) {
            goto LABEL_44;
          }
        }
      }
      if (!v9 || (v9 & 7) == 4) {
        break;
      }
      if ((v9 - 8000) >> 6 > 0x7C)
      {
        if (*v7)
        {
          uint64_t v28 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else
        {
          uint64_t v28 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          uint64_t v8 = *(char **)v29;
        }
        uint64_t v14 = sub_1885AC0(v9, v28, v8, a3);
      }
      else
      {
        uint64_t v14 = sub_18859DC((uint64_t **)(a1 + 16), v9, v8, (uint64_t)&off_2548338, (uint64_t *)(a1 + 8), a3);
      }
      *(void *)int v29 = v14;
      if (!v14) {
        goto LABEL_49;
      }
LABEL_44:
      if (sub_11947B8((uint64_t)a3, (char **)v29, a3[11].i32[1])) {
        return *(void *)v29;
      }
    }
    if (v8)
    {
      a3[10].i32[0] = v9 - 1;
      return *(void *)v29;
    }
LABEL_49:
    *(void *)int v29 = 0;
  }
  return *(void *)v29;
}

char *sub_1759C1C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1759234(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1759CAC(uint64_t a1, char *a2, _DWORD *a3)
{
  int v6 = *(_DWORD *)(a1 + 48);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 56) + 8 * i + 8);
      *a2 = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      a2[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, a2 + 1);
      }
      else {
        unsigned int v10 = a2 + 2;
      }
      a2 = sub_175938C(v8, (unint64_t)v10, a3);
    }
  }
  uint64_t v11 = *(unsigned int *)(a1 + 72);
  if ((int)v11 >= 1)
  {
    uint64_t v12 = 0;
    uint64_t v13 = 8 * v11;
    do
    {
      uint64_t v14 = *(void **)(*(void *)(a1 + 80) + v12 + 8);
      if (*((char *)v14 + 23) < 0)
      {
        int64_t v15 = v14[1];
        if (v15 > 127) {
          goto LABEL_20;
        }
      }
      else
      {
        int64_t v15 = *((unsigned __int8 *)v14 + 23);
      }
      if (*(void *)a3 - (void)a2 + 14 >= v15)
      {
        *a2 = 18;
        a2[1] = v15;
        if (*((char *)v14 + 23) < 0) {
          uint64_t v14 = (void *)*v14;
        }
        unsigned int v16 = a2 + 2;
        memcpy(v16, v14, v15);
        a2 = &v16[v15];
        goto LABEL_18;
      }
LABEL_20:
      a2 = (char *)sub_188A868(a3, 2, (uint64_t)v14, a2);
LABEL_18:
      v12 += 8;
    }
    while (v13 != v12);
  }
  if (*(_WORD *)(a1 + 26)) {
    a2 = sub_1886844(a1 + 16, 1000, 2000, a2, a3);
  }
  uint64_t v17 = *(void *)(a1 + 8);
  if ((v17 & 1) == 0) {
    return a2;
  }
  unint64_t v19 = v17 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v19 + 31) < 0)
  {
    unint64_t v20 = *(void **)(v19 + 8);
    uint64_t v21 = *(void *)(v19 + 16);
  }
  else
  {
    unint64_t v20 = (void *)(v19 + 8);
    LODWORD(v21) = *(unsigned __int8 *)(v19 + 31);
  }
  if (*(void *)a3 - (void)a2 >= (int)v21)
  {
    uint64_t v22 = (int)v21;
    memcpy(a2, v20, (int)v21);
    a2 += v22;
    return a2;
  }

  return (char *)sub_188A528(a3, (char *)v20, v21, a2);
}

uint64_t sub_1759EBC(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(int *)(a1 + 48);
  uint64_t v4 = v2 + v3;
  uint64_t v5 = *(void *)(a1 + 56);
  if (v5) {
    int v6 = (uint64_t *)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = sub_175949C(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  uint64_t v10 = *(unsigned int *)(a1 + 72);
  uint64_t result = v4 + v10;
  if ((int)v10 >= 1)
  {
    uint64_t v12 = (uint64_t *)(*(void *)(a1 + 80) + 8);
    do
    {
      uint64_t v13 = *v12++;
      uint64_t v14 = *(unsigned __int8 *)(v13 + 23);
      uint64_t v15 = *(void *)(v13 + 8);
      if ((v14 & 0x80u) == 0) {
        uint64_t v15 = v14;
      }
      result += v15 + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6);
      --v10;
    }
    while (v10);
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if (v16)
  {
    unint64_t v17 = v16 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v17 + 31) < 0) {
      uint64_t v18 = *(void *)(v17 + 16);
    }
    else {
      uint64_t v18 = *(unsigned __int8 *)(v17 + 31);
    }
    result += v18;
  }
  *(_DWORD *)(a1 + 88) = result;
  return result;
}

uint64_t sub_1759FC4(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 8);
  if ((int)v1 < 1) {
    return 1;
  }
  uint64_t v3 = v1 + 1;
  for (unsigned int i = v1 - 1; ; --i)
  {
    uint64_t v5 = *(void *)(*(void *)(a1 + 16) + 8 * i + 8);
    if (*(unsigned char *)(v5 + 16))
    {
      uint64_t result = sub_136AEA0(*(void *)(v5 + 24));
      if (!result) {
        break;
      }
    }
    if (--v3 <= 1) {
      return 1;
    }
  }
  return result;
}

void *sub_175A034@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.MiniBrowseCategories");
}

void *sub_175A044(void *a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  a1[1] = v4;
  *a1 = off_24D7B18;
  sub_1882BC4((uint64_t)(a1 + 2), a2);
  a1[5] = 0;
  a1[6] = 0;
  a1[7] = 0;
  return a1;
}

void sub_175A0AC(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_175A0DC(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  uint64_t v4 = a1 + 16;
  *(void *)a1 = off_24D7B18;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 44) = 0;
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v4, a2 + 16);
  int v6 = *(_DWORD *)(a2 + 40);
  if (v6) {
    operator new();
  }
  *(void *)(a1 + 48) = 0;
  if ((v6 & 2) != 0) {
    operator new();
  }
  *(void *)(a1 + 56) = 0;
  return a1;
}

void sub_175A1E4()
{
}

uint64_t sub_175A254(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  if ((uint64_t (***)())a1 != &off_2548398)
  {
    uint64_t v5 = *(void *)(a1 + 48);
    if (v5)
    {
      sub_184AFBC(v5);
      operator delete();
    }
    if (*(void *)(a1 + 56))
    {
      sub_1374318();
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_175A32C(uint64_t a1)
{
  sub_175A254(a1);

  operator delete();
}

char *sub_175A364(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v20 = a2;
  if (sub_11947B8((uint64_t)a3, &v20, a3[11].i32[1])) {
    return v20;
  }
  int v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v20 + 1;
    unsigned int v8 = *v20;
    if (*v20 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v20, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v20 + 2;
      }
    }
    unint64_t v20 = v7;
    if (v8 >> 3 != 2) {
      break;
    }
    if (v8 != 18) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 40) |= 2u;
    uint64_t v14 = *(void *)(a1 + 56);
    if (!v14)
    {
      uint64_t v15 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        uint64_t v15 = (void *)*v15;
      }
      sub_13D6A1C((uint64_t)v15);
      uint64_t v14 = v16;
      *(void *)(a1 + 56) = v16;
      uint64_t v7 = v20;
    }
    uint64_t v13 = (char *)sub_13319DC(a3, v14, (unsigned __int8 *)v7);
LABEL_33:
    unint64_t v20 = v13;
    if (!v13) {
      return 0;
    }
    if (sub_11947B8((uint64_t)a3, &v20, a3[11].i32[1])) {
      return v20;
    }
  }
  if (v8 >> 3 == 1 && v8 == 10)
  {
    *(_DWORD *)(a1 + 40) |= 1u;
    uint64_t v17 = *(void *)(a1 + 48);
    if (!v17)
    {
      uint64_t v18 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        uint64_t v18 = (void *)*v18;
      }
      uint64_t v17 = sub_185089C((uint64_t)v18);
      *(void *)(a1 + 48) = v17;
      uint64_t v7 = v20;
    }
    uint64_t v13 = sub_12688D0(a3, v17, (unsigned __int8 *)v7);
    goto LABEL_33;
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if ((v8 - 8000) >> 6 > 0x7C)
    {
      if (*v6)
      {
        unint64_t v19 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        unint64_t v19 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        uint64_t v7 = v20;
      }
      uint64_t v13 = (char *)sub_1885AC0(v8, v19, v7, a3);
    }
    else
    {
      uint64_t v13 = (char *)sub_18859DC((uint64_t **)(a1 + 16), v8, v7, (uint64_t)&off_2548398, (uint64_t *)(a1 + 8), a3);
    }
    goto LABEL_33;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v20;
  }
  return 0;
}

char *sub_175A570(uint64_t a1, char *a2, unint64_t *a3)
{
  uint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if (v6)
  {
    if (*a3 <= (unint64_t)a2) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    uint64_t v7 = *(void *)(a1 + 48);
    *uint64_t v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 44);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    uint64_t v4 = sub_184B3AC(v7, v9, a3);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 56);
    *uint64_t v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 20);
    v4[1] = v11;
    if (v11 > 0x7F) {
      BOOL v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      BOOL v12 = v4 + 2;
    }
    uint64_t v4 = sub_1374B08(v10, v12, a3);
  }
  if (*(_WORD *)(a1 + 26)) {
    uint64_t v4 = sub_1886844(a1 + 16, 1000, 2000, v4, a3);
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    uint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    uint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_175A714(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  int v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 3) != 0)
  {
    if (v3)
    {
      uint64_t v4 = sub_184B568(*(void *)(a1 + 48));
      v2 += v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v3 & 2) != 0)
    {
      uint64_t v5 = sub_1374EEC(*(void *)(a1 + 56));
      v2 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  uint64_t v6 = *(void *)(a1 + 8);
  if (v6)
  {
    unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v8 + 31) < 0) {
      uint64_t v9 = *(void *)(v8 + 16);
    }
    else {
      uint64_t v9 = *(unsigned __int8 *)(v8 + 31);
    }
    v2 += v9;
  }
  *(_DWORD *)(a1 + 44) = v2;
  return v2;
}

void *sub_175A7E8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.ContainmentPlace");
}

uint64_t sub_175A7F8(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  *(void *)(a1 + 8) = v4;
  *(void *)a1 = off_24D7B98;
  sub_1882BC4(a1 + 16, a2);
  *(_DWORD *)(a1 + 40) = 0;
  return a1;
}

void sub_175A85C(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_175A88C(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_175A908(void *a1)
{
  sub_175A88C(a1);

  operator delete();
}

char *sub_175A940(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v15 = a2;
  if ((sub_11947B8((uint64_t)a3, &v15, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v5 = (uint64_t *)(a1 + 8);
    uint64_t v6 = (uint64_t **)(a1 + 16);
    while (1)
    {
      uint64_t v7 = v15 + 1;
      unsigned int v8 = *v15;
      if (*v15 < 0)
      {
        unsigned int v9 = v8 + (*v7 << 7);
        unsigned int v8 = v9 - 128;
        if (*v7 < 0)
        {
          uint64_t v7 = (char *)sub_188C180((uint64_t)v15, v9 - 128);
          unsigned int v8 = v10;
        }
        else
        {
          uint64_t v7 = v15 + 2;
        }
      }
      unint64_t v15 = v7;
      if (!v8 || (v8 & 7) == 4) {
        break;
      }
      if ((v8 - 8000) >> 6 > 0x7C)
      {
        if (*v5)
        {
          uint64_t v13 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else
        {
          uint64_t v13 = (std::string *)sub_188DBD8(v5);
          uint64_t v7 = v15;
        }
        BOOL v12 = sub_1885AC0(v8, v13, v7, a3);
      }
      else
      {
        BOOL v12 = sub_18859DC(v6, v8, v7, (uint64_t)&off_25483D8, v5, a3);
      }
      unint64_t v15 = (char *)v12;
      if (!v12) {
        return 0;
      }
      if (sub_11947B8((uint64_t)a3, &v15, a3[11].i32[1])) {
        return v15;
      }
    }
    if (v7)
    {
      a3[10].i32[0] = v8 - 1;
      return v15;
    }
    return 0;
  }
  return v15;
}

char *sub_175AA90(uint64_t a1, char *a2, _DWORD *a3)
{
  uint64_t v4 = a2;
  if (*(_WORD *)(a1 + 26)) {
    uint64_t v4 = sub_1886844(a1 + 16, 1000, 2000, a2, a3);
  }
  uint64_t v6 = *(void *)(a1 + 8);
  if ((v6 & 1) == 0) {
    return v4;
  }
  unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v8 + 31) < 0)
  {
    unsigned int v9 = *(void **)(v8 + 8);
    uint64_t v10 = *(void *)(v8 + 16);
  }
  else
  {
    unsigned int v9 = (void *)(v8 + 8);
    LODWORD(v10) = *(unsigned __int8 *)(v8 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v10)
  {
    uint64_t v11 = (int)v10;
    memcpy(v4, v9, (int)v10);
    v4 += v11;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v9, v10, v4);
}

uint64_t sub_175AB5C(uint64_t a1)
{
  uint64_t result = sub_1889280(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v4 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v5 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v5 = *(unsigned __int8 *)(v4 + 31);
    }
    result += v5;
  }
  *(_DWORD *)(a1 + 40) = result;
  return result;
}

void *sub_175ABB4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.ContainmentPlaceFilter");
}

uint64_t sub_175ABC4(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  unint64_t v4 = (void *)(a1 + 8);
  *(void *)a1 = off_24D7C18;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 24) = &qword_2550250;
  int v6 = *(_DWORD *)(a2 + 16);
  if (v6)
  {
    uint64_t v7 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v7 = (uint64_t *)*v7;
    }
    sub_1881DF4((std::string **)(a1 + 24), (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL), v7);
    int v6 = *(_DWORD *)(a2 + 16);
  }
  if ((v6 & 2) != 0) {
    operator new();
  }
  *(void *)(a1 + 32) = 0;
  if ((v6 & 4) != 0) {
    operator new();
  }
  *(void *)(a1 + 40) = 0;
  if ((v6 & 8) != 0) {
    operator new();
  }
  *(void *)(a1 + 48) = 0;
  return a1;
}

void sub_175AD18()
{
}

uint64_t sub_175AD94(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  unint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_14;
    }
  }
  else if (v4)
  {
    goto LABEL_14;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_2548408)
  {
    uint64_t v6 = *(void *)(a1 + 32);
    if (v6)
    {
      sub_184AFBC(v6);
      operator delete();
    }
    if (*(void *)(a1 + 40))
    {
      sub_15B0994();
      operator delete();
    }
    if (*(void *)(a1 + 48))
    {
      sub_145FE08();
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_14:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_175AEA0(uint64_t a1)
{
  sub_175AD94(a1);

  operator delete();
}

uint64_t sub_175AED8(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 0xF) == 0) {
    goto LABEL_7;
  }
  if ((v2 & 1) == 0)
  {
    if ((v2 & 2) == 0) {
      goto LABEL_4;
    }
LABEL_15:
    uint64_t result = (uint64_t)sub_16CD894(*(void *)(result + 32));
    if ((v2 & 4) == 0)
    {
LABEL_5:
      if ((v2 & 8) == 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
    goto LABEL_16;
  }
  unint64_t v5 = *(void *)(result + 24) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v5 + 23) < 0)
  {
    **(unsigned char **)unint64_t v5 = 0;
    *(void *)(v5 + 8) = 0;
    if ((v2 & 2) != 0) {
      goto LABEL_15;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v5 = 0;
    *(unsigned char *)(v5 + 23) = 0;
    if ((v2 & 2) != 0) {
      goto LABEL_15;
    }
  }
LABEL_4:
  if ((v2 & 4) == 0) {
    goto LABEL_5;
  }
LABEL_16:
  uint64_t result = (uint64_t)sub_15B09D0(*(void *)(v1 + 40));
  if ((v2 & 8) != 0) {
LABEL_6:
  }
    uint64_t result = sub_1369BB4(*(void *)(v1 + 48));
LABEL_7:
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_175AF94(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v23 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v23, a3[11].i32[1])) {
    return *(void *)v23;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v7 = (unsigned __int8 *)(*(void *)v23 + 1);
    unsigned int v8 = **(unsigned char **)v23;
    if ((char)**(unsigned char **)v23 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if ((char)*v7 < 0)
      {
        uint64_t v7 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v23, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (unsigned __int8 *)(*(void *)v23 + 2);
      }
    }
    *(void *)uint64_t v23 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 10) {
          goto LABEL_31;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v11 = *(void *)(a1 + 32);
        if (!v11)
        {
          BOOL v12 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            BOOL v12 = (void *)*v12;
          }
          uint64_t v11 = sub_185089C((uint64_t)v12);
          *(void *)(a1 + 32) = v11;
          uint64_t v7 = *(unsigned __int8 **)v23;
        }
        uint64_t v13 = sub_12688D0(a3, v11, v7);
        goto LABEL_38;
      case 2u:
        if (v8 != 18) {
          goto LABEL_31;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v14 = *(void *)(a1 + 40);
        if (!v14)
        {
          unint64_t v15 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            unint64_t v15 = (void *)*v15;
          }
          uint64_t v14 = sub_15C1918((uint64_t)v15);
          *(void *)(a1 + 40) = v14;
          uint64_t v7 = *(unsigned __int8 **)v23;
        }
        uint64_t v13 = sub_1198F14(a3, v14, v7);
        goto LABEL_38;
      case 3u:
        if (v8 != 26) {
          goto LABEL_31;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v16 = *(void **)(a1 + 48);
        if (!v16)
        {
          uint64_t v17 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v17 = (void *)*v17;
          }
          uint64_t v16 = sub_1478C60((uint64_t)v17);
          *(void *)(a1 + 48) = v16;
          uint64_t v7 = *(unsigned __int8 **)v23;
        }
        uint64_t v13 = sub_129760C(a3, (uint64_t)v16, v7);
        goto LABEL_38;
      case 4u:
        if (v8 != 34) {
          goto LABEL_31;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v18 = *(void *)(a1 + 8);
        unint64_t v19 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
        if (v18) {
          unint64_t v19 = (uint64_t *)*v19;
        }
        unint64_t v20 = (std::string *)sub_1880F84((void *)(a1 + 24), v19);
        uint64_t v13 = (void *)sub_188C244(v20, *(char **)v23, (uint64_t)a3);
        goto LABEL_38;
      default:
LABEL_31:
        if (v8) {
          BOOL v21 = (v8 & 7) == 4;
        }
        else {
          BOOL v21 = 1;
        }
        if (!v21)
        {
          if (*v6)
          {
            uint64_t v22 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v22 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v7 = *(unsigned __int8 **)v23;
          }
          uint64_t v13 = sub_1885AC0(v8, v22, (char *)v7, a3);
LABEL_38:
          *(void *)uint64_t v23 = v13;
          if (!v13) {
            return 0;
          }
          if (sub_11947B8((uint64_t)a3, (char **)v23, a3[11].i32[1])) {
            return *(void *)v23;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return *(void *)v23;
    }
  }
}

char *sub_175B224(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  char v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= __dst) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v9 = *(void *)(a1 + 32);
    *char v4 = 10;
    unsigned int v10 = *(_DWORD *)(v9 + 44);
    v4[1] = v10;
    if (v10 > 0x7F) {
      uint64_t v11 = sub_188A9CC(v10, v4 + 1);
    }
    else {
      uint64_t v11 = v4 + 2;
    }
    char v4 = sub_184B3AC(v9, v11, a3);
    if ((v6 & 4) == 0)
    {
LABEL_3:
      if ((v6 & 8) == 0) {
        goto LABEL_4;
      }
      goto LABEL_20;
    }
  }
  else if ((v6 & 4) == 0)
  {
    goto LABEL_3;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v12 = *(void *)(a1 + 40);
  *char v4 = 18;
  unsigned int v13 = *(_DWORD *)(v12 + 44);
  v4[1] = v13;
  if (v13 > 0x7F) {
    uint64_t v14 = sub_188A9CC(v13, v4 + 1);
  }
  else {
    uint64_t v14 = v4 + 2;
  }
  char v4 = sub_15B0C0C(v12, v14, a3);
  if ((v6 & 8) == 0)
  {
LABEL_4:
    if ((v6 & 1) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_20:
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v15 = *(void *)(a1 + 48);
  *char v4 = 26;
  unsigned int v16 = *(_DWORD *)(v15 + 44);
  v4[1] = v16;
  if (v16 > 0x7F) {
    uint64_t v17 = sub_188A9CC(v16, v4 + 1);
  }
  else {
    uint64_t v17 = v4 + 2;
  }
  char v4 = sub_1460138(v15, v17, a3);
  if (v6) {
LABEL_5:
  }
    char v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
LABEL_6:
  uint64_t v7 = *(void *)(a1 + 8);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v18 = v7 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    unint64_t v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    unint64_t v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(v4, v19, (int)v20);
    v4 += v21;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v19, v20, v4);
}

uint64_t sub_175B438(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0xF) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_13;
  }
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_10;
    }
LABEL_9:
    uint64_t v7 = sub_184B568(*(void *)(a1 + 32));
    v3 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    goto LABEL_10;
  }
  unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
  uint64_t v6 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    uint64_t v6 = v5;
  }
  uint64_t v3 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 2) != 0) {
    goto LABEL_9;
  }
LABEL_10:
  if ((v2 & 4) == 0)
  {
    if ((v2 & 8) == 0) {
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  uint64_t v11 = sub_15B0D90(*(void *)(a1 + 40));
  v3 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 8) != 0)
  {
LABEL_12:
    uint64_t v8 = sub_1460320(*(void *)(a1 + 48));
    v3 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_13:
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v12 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v12 + 31) < 0) {
      uint64_t v13 = *(void *)(v12 + 16);
    }
    else {
      uint64_t v13 = *(unsigned __int8 *)(v12 + 31);
    }
    v3 += v13;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

void sub_175B58C(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0xF) == 0) {
    goto LABEL_34;
  }
  if (v4)
  {
    uint64_t v5 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v6 = (std::string **)(a1 + 24);
    uint64_t v7 = *(void *)(a1 + 8);
    uint64_t v8 = (uint64_t *)(v7 & 0xFFFFFFFFFFFFFFFCLL);
    if (v7) {
      uint64_t v8 = (uint64_t *)*v8;
    }
    sub_1881DF4(v6, v5, v8);
    if ((v4 & 2) == 0)
    {
LABEL_4:
      if ((v4 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_18;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_4;
  }
  *(_DWORD *)(a1 + 16) |= 2u;
  uint64_t v9 = *(void *)(a1 + 32);
  if (!v9)
  {
    uint64_t v10 = *(void *)(a1 + 8);
    uint64_t v11 = (void *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
    if (v10) {
      uint64_t v11 = (void *)*v11;
    }
    uint64_t v9 = sub_185089C((uint64_t)v11);
    *(void *)(a1 + 32) = v9;
  }
  if (*(void *)(a2 + 32)) {
    unint64_t v12 = *(uint64_t (****)())(a2 + 32);
  }
  else {
    unint64_t v12 = &off_254D2B0;
  }
  sub_16CE3CC(v9, (uint64_t)v12);
  if ((v4 & 4) == 0)
  {
LABEL_5:
    if ((v4 & 8) == 0) {
      goto LABEL_34;
    }
    goto LABEL_26;
  }
LABEL_18:
  *(_DWORD *)(a1 + 16) |= 4u;
  uint64_t v13 = *(void *)(a1 + 40);
  if (!v13)
  {
    uint64_t v14 = *(void *)(a1 + 8);
    uint64_t v15 = (void *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
    if (v14) {
      uint64_t v15 = (void *)*v15;
    }
    uint64_t v13 = sub_15C1918((uint64_t)v15);
    *(void *)(a1 + 40) = v13;
  }
  if (*(void *)(a2 + 40)) {
    unsigned int v16 = *(uint64_t (****)())(a2 + 40);
  }
  else {
    unsigned int v16 = &off_253F1A0;
  }
  sub_15B0E24(v13, (uint64_t)v16);
  if ((v4 & 8) != 0)
  {
LABEL_26:
    *(_DWORD *)(a1 + 16) |= 8u;
    uint64_t v17 = *(void **)(a1 + 48);
    if (!v17)
    {
      uint64_t v18 = *(void *)(a1 + 8);
      unint64_t v19 = (void *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
      if (v18) {
        unint64_t v19 = (void *)*v19;
      }
      uint64_t v17 = sub_1478C60((uint64_t)v19);
      *(void *)(a1 + 48) = v17;
    }
    if (*(void *)(a2 + 48)) {
      uint64_t v20 = *(uint64_t (****)())(a2 + 48);
    }
    else {
      uint64_t v20 = &off_2539400;
    }
    sub_136AC4C((uint64_t)v17, (uint64_t)v20);
  }
LABEL_34:
  uint64_t v21 = *(void *)(a2 + 8);
  if (v21)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v21 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_175B720(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 2) != 0)
  {
    uint64_t result = sub_16CE508(*(void *)(a1 + 32));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 4) != 0)
  {
    uint64_t result = sub_15B0F18(*(void *)(a1 + 40));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 8) == 0) {
    return 1;
  }
  uint64_t result = sub_136AEA0(*(void *)(a1 + 48));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_175B780@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.DotPlace");
}

void *sub_175B790(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1889DE8(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_175B80C(void *a1)
{
  sub_175B790(a1);

  operator delete();
}

uint64_t sub_175B844(uint64_t a1)
{
  uint64_t result = sub_188CC00(a1 + 24);
  if ((*(unsigned char *)(a1 + 16) & 0x1F) != 0)
  {
    *(_DWORD *)(a1 + 55) = 0;
    *(void *)(a1 + 48) = 0;
  }
  char v4 = *(unsigned char *)(a1 + 8);
  uint64_t v3 = a1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_175B8AC(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unint64_t v47 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v47, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (uint64_t **)(a1 + 24);
  uint64_t v8 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v9 = (char *)(*(void *)v47 + 1);
    unsigned int v10 = **(unsigned char **)v47;
    if ((char)**(unsigned char **)v47 < 0)
    {
      unsigned int v11 = v10 + (*v9 << 7);
      unsigned int v10 = v11 - 128;
      if (*v9 < 0)
      {
        uint64_t v9 = (char *)sub_188C180(*(uint64_t *)v47, v11 - 128);
        unsigned int v10 = v12;
      }
      else
      {
        uint64_t v9 = (char *)(*(void *)v47 + 2);
      }
    }
    *(void *)unint64_t v47 = v9;
    switch(v10 >> 3)
    {
      case 1u:
        if (v10 != 10) {
          goto LABEL_46;
        }
        uint64_t v13 = v9 - 1;
        while (1)
        {
          uint64_t v14 = (char *)(v13 + 1);
          *(void *)unint64_t v47 = v13 + 1;
          uint64_t v15 = *(_DWORD **)(a1 + 40);
          if (v15 && (uint64_t v16 = *(int *)(a1 + 32), (int)v16 < *v15))
          {
            *(_DWORD *)(a1 + 32) = v16 + 1;
            uint64_t v17 = *(std::string **)&v15[2 * v16 + 2];
          }
          else
          {
            if (!*v7) {
              operator new();
            }
            void *v19 = v18;
            v19[1] = sub_3A6EDC;
            *uint64_t v18 = 0;
            v18[1] = 0;
            v18[2] = 0;
            uint64_t v17 = (std::string *)sub_188CDC8(a1 + 24, (uint64_t)v18);
            uint64_t v14 = *(char **)v47;
          }
          uint64_t v13 = sub_188C244(v17, v14, (uint64_t)a3);
          *(void *)unint64_t v47 = v13;
          if (!v13) {
            goto LABEL_68;
          }
          if (*(void *)a3 <= (unint64_t)v13 || *v13 != 10) {
            goto LABEL_53;
          }
        }
      case 2u:
        if (v10 != 16) {
          goto LABEL_46;
        }
        v5 |= 1u;
        uint64_t v20 = v9 + 1;
        int v21 = *v9;
        if ((*v9 & 0x80000000) == 0) {
          goto LABEL_25;
        }
        int v22 = *v20;
        int v21 = v21 + (v22 << 7) - 128;
        if (v22 < 0)
        {
          uint64_t v37 = sub_188C0D0((uint64_t)v9, v21);
          *(void *)unint64_t v47 = v37;
          *(_DWORD *)(a1 + 48) = v38;
          if (!v37) {
            goto LABEL_68;
          }
        }
        else
        {
          uint64_t v20 = v9 + 2;
LABEL_25:
          *(void *)unint64_t v47 = v20;
          *(_DWORD *)(a1 + 48) = v21;
        }
        goto LABEL_53;
      case 3u:
        if (v10 != 24) {
          goto LABEL_46;
        }
        v5 |= 2u;
        uint64_t v23 = v9 + 1;
        int v24 = *v9;
        if ((*v9 & 0x80000000) == 0) {
          goto LABEL_30;
        }
        int v25 = *v23;
        int v24 = v24 + (v25 << 7) - 128;
        if (v25 < 0)
        {
          uint64_t v39 = sub_188C0D0((uint64_t)v9, v24);
          *(void *)unint64_t v47 = v39;
          *(_DWORD *)(a1 + 52) = v40;
          if (!v39) {
            goto LABEL_68;
          }
        }
        else
        {
          uint64_t v23 = v9 + 2;
LABEL_30:
          *(void *)unint64_t v47 = v23;
          *(_DWORD *)(a1 + 52) = v24;
        }
        goto LABEL_53;
      case 4u:
        if (v10 != 32) {
          goto LABEL_46;
        }
        v5 |= 4u;
        uint64_t v26 = v9 + 1;
        uint64_t v27 = *v9;
        if ((*v9 & 0x80000000) == 0) {
          goto LABEL_35;
        }
        int v28 = *v26;
        uint64_t v27 = v27 + (v28 << 7) - 128;
        if (v28 < 0)
        {
          uint64_t v41 = sub_188C138((uint64_t)v9, v27);
          *(void *)unint64_t v47 = v41;
          *(unsigned char *)(a1 + 56) = v42 != 0;
          if (!v41) {
            goto LABEL_68;
          }
        }
        else
        {
          uint64_t v26 = v9 + 2;
LABEL_35:
          *(void *)unint64_t v47 = v26;
          *(unsigned char *)(a1 + 56) = v27 != 0;
        }
        goto LABEL_53;
      case 5u:
        if (v10 != 40) {
          goto LABEL_46;
        }
        v5 |= 8u;
        int v29 = v9 + 1;
        uint64_t v30 = *v9;
        if ((*v9 & 0x80000000) == 0) {
          goto LABEL_40;
        }
        int v31 = *v29;
        uint64_t v30 = v30 + (v31 << 7) - 128;
        if (v31 < 0)
        {
          uint64_t v43 = sub_188C138((uint64_t)v9, v30);
          *(void *)unint64_t v47 = v43;
          *(unsigned char *)(a1 + 57) = v44 != 0;
          if (!v43) {
            goto LABEL_68;
          }
        }
        else
        {
          int v29 = v9 + 2;
LABEL_40:
          *(void *)unint64_t v47 = v29;
          *(unsigned char *)(a1 + 57) = v30 != 0;
        }
        goto LABEL_53;
      case 6u:
        if (v10 != 48) {
          goto LABEL_46;
        }
        v5 |= 0x10u;
        uint64_t v32 = v9 + 1;
        uint64_t v33 = *v9;
        if ((*v9 & 0x80000000) == 0) {
          goto LABEL_45;
        }
        int v34 = *v32;
        uint64_t v33 = v33 + (v34 << 7) - 128;
        if (v34 < 0)
        {
          uint64_t v45 = sub_188C138((uint64_t)v9, v33);
          *(void *)unint64_t v47 = v45;
          *(unsigned char *)(a1 + 58) = v46 != 0;
          if (!v45) {
            goto LABEL_68;
          }
        }
        else
        {
          uint64_t v32 = v9 + 2;
LABEL_45:
          *(void *)unint64_t v47 = v32;
          *(unsigned char *)(a1 + 58) = v33 != 0;
        }
        goto LABEL_53;
      default:
LABEL_46:
        if (v10) {
          BOOL v35 = (v10 & 7) == 4;
        }
        else {
          BOOL v35 = 1;
        }
        if (!v35)
        {
          if (*v8)
          {
            uint64_t v36 = (std::string *)((*v8 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v36 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v9 = *(char **)v47;
          }
          *(void *)unint64_t v47 = sub_1885AC0(v10, v36, v9, a3);
          if (!*(void *)v47) {
            goto LABEL_68;
          }
LABEL_53:
          if (sub_11947B8((uint64_t)a3, (char **)v47, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v9) {
          a3[10].i32[0] = v10 - 1;
        }
        else {
LABEL_68:
        }
          *(void *)unint64_t v47 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v47;
    }
  }
}

char *sub_175BCFC(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v6 = *(unsigned int *)(a1 + 32);
  if ((int)v6 >= 1)
  {
    uint64_t v7 = 0;
    uint64_t v8 = 8 * v6;
    do
    {
      uint64_t v9 = *(void **)(*(void *)(a1 + 40) + v7 + 8);
      if (*((char *)v9 + 23) < 0)
      {
        int64_t v10 = v9[1];
        if (v10 > 127) {
          goto LABEL_12;
        }
      }
      else
      {
        int64_t v10 = *((unsigned __int8 *)v9 + 23);
      }
      if (*(void *)a3 - (void)__dst + 14 >= v10)
      {
        *__dst = 10;
        __dst[1] = v10;
        if (*((char *)v9 + 23) < 0) {
          uint64_t v9 = (void *)*v9;
        }
        unsigned int v11 = __dst + 2;
        memcpy(v11, v9, v10);
        __dst = &v11[v10];
        goto LABEL_10;
      }
LABEL_12:
      __dst = (char *)sub_188A868(a3, 1, (uint64_t)v9, __dst);
LABEL_10:
      v7 += 8;
    }
    while (v8 != v7);
  }
  int v12 = *(_DWORD *)(a1 + 16);
  if (v12)
  {
    if (*(void *)a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unsigned int v13 = *(_DWORD *)(a1 + 48);
    *__dst = 16;
    __dst[1] = v13;
    if (v13 > 0x7F)
    {
      __dst[1] = v13 | 0x80;
      unsigned int v14 = v13 >> 7;
      __dst[2] = v13 >> 7;
      __dst += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unsigned int v15 = v14 >> 14;
          v14 >>= 7;
          *__dst++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      __dst += 2;
    }
  }
  if ((v12 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unsigned int v16 = *(_DWORD *)(a1 + 52);
    *__dst = 24;
    __dst[1] = v16;
    if (v16 > 0x7F)
    {
      __dst[1] = v16 | 0x80;
      unsigned int v17 = v16 >> 7;
      __dst[2] = v16 >> 7;
      __dst += 3;
      if (v16 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unsigned int v18 = v17 >> 14;
          v17 >>= 7;
          *__dst++ = v17;
        }
        while (v18);
      }
    }
    else
    {
      __dst += 2;
    }
  }
  if ((v12 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    char v19 = *(unsigned char *)(a1 + 56);
    *__dst = 32;
    __dst[1] = v19;
    __dst += 2;
    if ((v12 & 8) == 0)
    {
LABEL_29:
      if ((v12 & 0x10) == 0) {
        goto LABEL_40;
      }
      goto LABEL_37;
    }
  }
  else if ((v12 & 8) == 0)
  {
    goto LABEL_29;
  }
  if (*(void *)a3 <= (unint64_t)__dst) {
    __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
  }
  char v20 = *(unsigned char *)(a1 + 57);
  *__dst = 40;
  __dst[1] = v20;
  __dst += 2;
  if ((v12 & 0x10) != 0)
  {
LABEL_37:
    if (*(void *)a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    char v21 = *(unsigned char *)(a1 + 58);
    *__dst = 48;
    __dst[1] = v21;
    __dst += 2;
  }
LABEL_40:
  uint64_t v22 = *(void *)(a1 + 8);
  if ((v22 & 1) == 0) {
    return __dst;
  }
  unint64_t v24 = v22 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v24 + 31) < 0)
  {
    int v25 = *(void **)(v24 + 8);
    uint64_t v26 = *(void *)(v24 + 16);
  }
  else
  {
    int v25 = (void *)(v24 + 8);
    LODWORD(v26) = *(unsigned __int8 *)(v24 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v26)
  {
    uint64_t v27 = (int)v26;
    memcpy(__dst, v25, (int)v26);
    __dst += v27;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v25, v26, __dst);
}

uint64_t sub_175C014(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 32);
  if ((int)v1 < 1)
  {
    uint64_t v3 = *(unsigned int *)(a1 + 32);
  }
  else
  {
    uint64_t v2 = (uint64_t *)(*(void *)(a1 + 40) + 8);
    uint64_t v3 = *(unsigned int *)(a1 + 32);
    do
    {
      uint64_t v4 = *v2++;
      uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
      uint64_t v6 = *(void *)(v4 + 8);
      if ((v5 & 0x80u) == 0) {
        uint64_t v6 = v5;
      }
      v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6);
      --v1;
    }
    while (v1);
  }
  int v7 = *(_DWORD *)(a1 + 16);
  if ((v7 & 0x1F) != 0)
  {
    if (v7) {
      v3 += ((9 * (__clz(*(_DWORD *)(a1 + 48) | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v7 & 2) != 0) {
      v3 += ((9 * (__clz(*(_DWORD *)(a1 + 52) | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v7 & 4) != 0) {
      v3 += 2;
    }
    if ((v7 & 8) != 0) {
      v3 += 2;
    }
    if ((v7 & 0x10) != 0) {
      v3 += 2;
    }
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v3 += v11;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_175C12C(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (const std::string **)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = (std::string *)sub_188FB98((uint64_t)&v3[1], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2]- LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    uint64_t v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 0x1F) != 0)
  {
    if (v9)
    {
      LODWORD(v3[2].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 48);
      if ((v9 & 2) == 0)
      {
LABEL_7:
        if ((v9 & 4) == 0) {
          goto LABEL_8;
        }
        goto LABEL_18;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_7;
    }
    HIDWORD(v3[2].__r_.__value_.__r.__words[0]) = *(_DWORD *)(a2 + 52);
    if ((v9 & 4) == 0)
    {
LABEL_8:
      if ((v9 & 8) == 0) {
        goto LABEL_9;
      }
      goto LABEL_19;
    }
LABEL_18:
    v3[2].__r_.__value_.__s.__data_[8] = *(unsigned char *)(a2 + 56);
    if ((v9 & 8) == 0)
    {
LABEL_9:
      if ((v9 & 0x10) == 0)
      {
LABEL_11:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v9;
        goto LABEL_12;
      }
LABEL_10:
      v3[2].__r_.__value_.__s.__data_[10] = *(unsigned char *)(a2 + 58);
      goto LABEL_11;
    }
LABEL_19:
    v3[2].__r_.__value_.__s.__data_[9] = *(unsigned char *)(a2 + 57);
    if ((v9 & 0x10) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
LABEL_12:
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_175C264()
{
  return 1;
}

void *sub_175C26C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PlaceContextMetadata.SearchPlaceContextMetadata.ContextualPhotoMetadata");
}

void *sub_175C27C(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1889DA8((uint64_t)(a1 + 2));
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_175C2F8(void *a1)
{
  sub_175C27C(a1);

  operator delete();
}

uint64_t sub_175C330(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_175C344(uint64_t a1, char *a2, int32x2_t *a3)
{
  char v20 = a2;
  if (sub_11947B8((uint64_t)a3, &v20, a3[11].i32[1])) {
    return v20;
  }
  uint64_t v5 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v6 = v20 + 1;
    unsigned int v7 = *v20;
    if (*v20 < 0)
    {
      unsigned int v8 = v7 + (*v6 << 7);
      unsigned int v7 = v8 - 128;
      if (*v6 < 0)
      {
        uint64_t v6 = (char *)sub_188C180((uint64_t)v20, v8 - 128);
        unsigned int v7 = v9;
      }
      else
      {
        uint64_t v6 = v20 + 2;
      }
    }
    char v20 = v6;
    if ((v7 & 0xFFFFFFF8) == 8)
    {
      if (v7 == 8)
      {
        uint64_t v10 = v6 - 1;
        while (1)
        {
          char v20 = v10 + 1;
          uint64_t v11 = v10[1];
          if (v10[1] < 0)
          {
            int v12 = v11 + (v10[2] << 7);
            uint64_t v11 = (v12 - 128);
            if (v10[2] < 0)
            {
              uint64_t v10 = (char *)sub_188C138((uint64_t)(v10 + 1), (v12 - 128));
              uint64_t v11 = v13;
            }
            else
            {
              v10 += 3;
            }
          }
          else
          {
            v10 += 2;
          }
          char v20 = v10;
          uint64_t v14 = *(unsigned int *)(a1 + 16);
          if (v14 == *(_DWORD *)(a1 + 20))
          {
            int v15 = v14 + 1;
            sub_188CA54((unsigned int *)(a1 + 16), v14 + 1);
            *(void *)(*(void *)(a1 + 24) + 8 * v14) = v11;
            uint64_t v10 = v20;
          }
          else
          {
            *(void *)(*(void *)(a1 + 24) + 8 * v14) = v11;
            int v15 = v14 + 1;
          }
          *(_DWORD *)(a1 + 16) = v15;
          if (!v10) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v10 || *v10 != 8) {
            goto LABEL_32;
          }
        }
      }
      if (v7 == 10)
      {
        unsigned int v16 = sub_188C2EC((unsigned int *)(a1 + 16), (unsigned __int8 *)v6, (uint64_t)a3);
        goto LABEL_31;
      }
    }
    if (!v7 || (v7 & 7) == 4) {
      break;
    }
    if (*v5)
    {
      unsigned int v18 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unsigned int v18 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v6 = v20;
    }
    unsigned int v16 = sub_1885AC0(v7, v18, v6, a3);
LABEL_31:
    char v20 = (char *)v16;
    if (!v16) {
      return 0;
    }
LABEL_32:
    if (sub_11947B8((uint64_t)a3, &v20, a3[11].i32[1])) {
      return v20;
    }
  }
  if (v6)
  {
    a3[10].i32[0] = v7 - 1;
    return v20;
  }
  return 0;
}

char *sub_175C544(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v6 = *(unsigned int *)(a1 + 16);
  if ((int)v6 >= 1)
  {
    for (uint64_t i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      unint64_t v8 = *(void *)(*(void *)(a1 + 24) + 8 * i);
      *__dst = 8;
      __dst[1] = v8;
      if (v8 > 0x7F)
      {
        __dst[1] = v8 | 0x80;
        unint64_t v9 = v8 >> 7;
        __dst[2] = v8 >> 7;
        __dst += 3;
        if (v8 >= 0x4000)
        {
          do
          {
            *(__dst - 1) |= 0x80u;
            unint64_t v10 = v9 >> 14;
            v9 >>= 7;
            *__dst++ = v9;
          }
          while (v10);
        }
      }
      else
      {
        __dst += 2;
      }
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return __dst;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    uint64_t v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    uint64_t v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(__dst, v14, (int)v15);
    __dst += v16;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, __dst);
}

uint64_t sub_175C694(uint64_t a1)
{
  uint64_t result = sub_188D5A8((unsigned int *)(a1 + 16)) + *(unsigned int *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v4 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v5 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v5 = *(unsigned __int8 *)(v4 + 31);
    }
    result += v5;
  }
  *(_DWORD *)(a1 + 32) = result;
  return result;
}

uint64_t sub_175C6F4()
{
  return 1;
}

void *sub_175C6FC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PlaceContextMetadata.SearchPlaceContextMetadata.NearbyPlacesMetadata");
}

void *sub_175C70C(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  unint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_175C79C((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  sub_12C1DB8(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void ***sub_175C79C(uint64_t a1)
{
  uint64_t v3 = *(uint64_t **)(a1 + 48);
  uint64_t v2 = (void ***)(a1 + 48);
  if (v3 != &qword_2550250) {
    sub_1881C6C(v2);
  }
  if (*(uint64_t **)(a1 + 56) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 56));
  }
  if (*(uint64_t **)(a1 + 64) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 64));
  }
  if (*(uint64_t **)(a1 + 72) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 72));
  }
  uint64_t result = (void ***)(a1 + 80);
  if (*(uint64_t **)(a1 + 80) != &qword_2550250) {
    sub_1881C6C(result);
  }
  if ((uint64_t (***)())a1 != &off_25484A8)
  {
    uint64_t v5 = *(void **)(a1 + 88);
    if (v5)
    {
      sub_175B790(v5);
      operator delete();
    }
    uint64_t result = *(void ****)(a1 + 96);
    if (result)
    {
      sub_175C27C(result);
      operator delete();
    }
  }
  return result;
}

void sub_175C890(void *a1)
{
  sub_175C70C(a1);

  operator delete();
}

uint64_t sub_175C8C8(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_15B2C80(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  int v5 = *(_DWORD *)(v1 + 16);
  if ((v5 & 0x7F) != 0)
  {
    if ((v5 & 1) == 0)
    {
      if ((v5 & 2) == 0) {
        goto LABEL_8;
      }
LABEL_18:
      unint64_t v7 = *(void *)(v1 + 56) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v7 + 23) < 0)
      {
        **(unsigned char **)unint64_t v7 = 0;
        *(void *)(v7 + 8) = 0;
        if ((v5 & 4) != 0) {
          goto LABEL_22;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v7 = 0;
        *(unsigned char *)(v7 + 23) = 0;
        if ((v5 & 4) != 0) {
          goto LABEL_22;
        }
      }
LABEL_9:
      if ((v5 & 8) == 0) {
        goto LABEL_10;
      }
LABEL_26:
      unint64_t v9 = *(void *)(v1 + 72) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v9 + 23) < 0)
      {
        **(unsigned char **)unint64_t v9 = 0;
        *(void *)(v9 + 8) = 0;
        if ((v5 & 0x10) != 0) {
          goto LABEL_30;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v9 = 0;
        *(unsigned char *)(v9 + 23) = 0;
        if ((v5 & 0x10) != 0) {
          goto LABEL_30;
        }
      }
LABEL_11:
      if ((v5 & 0x20) == 0) {
        goto LABEL_12;
      }
LABEL_34:
      uint64_t result = sub_175B844(*(void *)(v1 + 88));
      if ((v5 & 0x40) == 0) {
        goto LABEL_37;
      }
LABEL_35:
      uint64_t v11 = *(void *)(v1 + 96);
      char v12 = *(unsigned char *)(v11 + 8);
      uint64_t result = v11 + 8;
      *(_DWORD *)(result + 8) = 0;
      if (v12) {
        uint64_t result = sub_188B4AC((uint64_t *)result);
      }
      goto LABEL_37;
    }
    unint64_t v6 = *(void *)(v1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v6 + 23) < 0)
    {
      **(unsigned char **)unint64_t v6 = 0;
      *(void *)(v6 + 8) = 0;
      if ((v5 & 2) != 0) {
        goto LABEL_18;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v6 = 0;
      *(unsigned char *)(v6 + 23) = 0;
      if ((v5 & 2) != 0) {
        goto LABEL_18;
      }
    }
LABEL_8:
    if ((v5 & 4) == 0) {
      goto LABEL_9;
    }
LABEL_22:
    unint64_t v8 = *(void *)(v1 + 64) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v8 + 23) < 0)
    {
      **(unsigned char **)unint64_t v8 = 0;
      *(void *)(v8 + 8) = 0;
      if ((v5 & 8) != 0) {
        goto LABEL_26;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v8 = 0;
      *(unsigned char *)(v8 + 23) = 0;
      if ((v5 & 8) != 0) {
        goto LABEL_26;
      }
    }
LABEL_10:
    if ((v5 & 0x10) == 0) {
      goto LABEL_11;
    }
LABEL_30:
    unint64_t v10 = *(void *)(v1 + 80) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v10 + 23) < 0)
    {
      **(unsigned char **)unint64_t v10 = 0;
      *(void *)(v10 + 8) = 0;
      if ((v5 & 0x20) != 0) {
        goto LABEL_34;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v10 = 0;
      *(unsigned char *)(v10 + 23) = 0;
      if ((v5 & 0x20) != 0) {
        goto LABEL_34;
      }
    }
LABEL_12:
    if ((v5 & 0x40) == 0) {
      goto LABEL_37;
    }
    goto LABEL_35;
  }
LABEL_37:
  *(unsigned char *)(v1 + 104) = 0;
  if ((v5 & 0x300) != 0)
  {
    *(_DWORD *)(v1 + 108) = 0;
    *(_DWORD *)(v1 + 105) = 0;
  }
  char v14 = *(unsigned char *)(v1 + 8);
  uint64_t v13 = v1 + 8;
  *(_DWORD *)(v13 + 8) = 0;
  if (v14)
  {
    return sub_188B4AC((uint64_t *)v13);
  }
  return result;
}

uint64_t sub_175CA98(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v49 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v49, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    unint64_t v8 = (unsigned __int8 *)(*(void *)v49 + 1);
    unsigned int v9 = **(unsigned char **)v49;
    if ((char)**(unsigned char **)v49 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        unint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v49, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unint64_t v8 = (unsigned __int8 *)(*(void *)v49 + 2);
      }
    }
    *(void *)uint64_t v49 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_72;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        char v14 = (void *)(a1 + 48);
        goto LABEL_44;
      case 2u:
        if (v9 != 16) {
          goto LABEL_72;
        }
        v5 |= 0x80u;
        uint64_t v15 = (char *)(v8 + 1);
        uint64_t v16 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_17;
        }
        int v17 = *v15;
        uint64_t v16 = v16 + (v17 << 7) - 128;
        if (v17 < 0)
        {
          uint64_t v43 = sub_188C138((uint64_t)v8, v16);
          *(void *)uint64_t v49 = v43;
          *(unsigned char *)(a1 + 104) = v44 != 0;
          if (!v43) {
            goto LABEL_92;
          }
        }
        else
        {
          uint64_t v15 = (char *)(v8 + 2);
LABEL_17:
          *(void *)uint64_t v49 = v15;
          *(unsigned char *)(a1 + 104) = v16 != 0;
        }
        goto LABEL_46;
      case 3u:
        if (v9 != 26) {
          goto LABEL_72;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v18 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
        if (v18) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        char v14 = (void *)(a1 + 56);
        goto LABEL_44;
      case 4u:
        if (v9 != 34) {
          goto LABEL_72;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v19 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
        if (v19) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        char v14 = (void *)(a1 + 64);
        goto LABEL_44;
      case 5u:
        if (v9 != 42) {
          goto LABEL_72;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v20 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
        if (v20) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        char v14 = (void *)(a1 + 72);
        goto LABEL_44;
      case 6u:
        if (v9 != 50) {
          goto LABEL_72;
        }
        char v21 = v8 - 1;
        while (1)
        {
          uint64_t v22 = v21 + 1;
          *(void *)uint64_t v49 = v21 + 1;
          uint64_t v23 = *(_DWORD **)(a1 + 40);
          if (v23 && (uint64_t v24 = *(int *)(a1 + 32), (int)v24 < *v23))
          {
            *(_DWORD *)(a1 + 32) = v24 + 1;
            uint64_t v25 = *(void *)&v23[2 * v24 + 2];
          }
          else
          {
            uint64_t v26 = sub_15C1B30(*(void *)(a1 + 24));
            uint64_t v25 = sub_188CDC8(a1 + 24, (uint64_t)v26);
            uint64_t v22 = *(unsigned __int8 **)v49;
          }
          char v21 = (unsigned __int8 *)sub_125CF74(a3, v25, v22);
          *(void *)uint64_t v49 = v21;
          if (!v21) {
            goto LABEL_92;
          }
          if (*(void *)a3 <= (unint64_t)v21 || *v21 != 50) {
            goto LABEL_46;
          }
        }
      case 7u:
        if (v9 != 58) {
          goto LABEL_72;
        }
        *(_DWORD *)(a1 + 16) |= 0x10u;
        uint64_t v27 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v27 & 0xFFFFFFFFFFFFFFFCLL);
        if (v27) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        char v14 = (void *)(a1 + 80);
LABEL_44:
        int v28 = (std::string *)sub_1880F84(v14, v13);
        uint64_t v29 = (uint64_t)sub_188C244(v28, *(char **)v49, (uint64_t)a3);
        goto LABEL_45;
      case 8u:
        if (v9 != 64) {
          goto LABEL_72;
        }
        uint64_t v30 = (char *)(v8 + 1);
        unint64_t v31 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_52;
        }
        int v32 = *v30;
        int v33 = v31 + (v32 << 7);
        unint64_t v31 = (v33 - 128);
        if (v32 < 0)
        {
          *(void *)uint64_t v49 = sub_188C138((uint64_t)v8, (v33 - 128));
          if (!*(void *)v49) {
            goto LABEL_92;
          }
          unint64_t v31 = v45;
        }
        else
        {
          uint64_t v30 = (char *)(v8 + 2);
LABEL_52:
          *(void *)uint64_t v49 = v30;
        }
        if (v31 > 1)
        {
          if (*v7) {
            uint64_t v48 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v48 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(8, v31, v48);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 0x200u;
          *(_DWORD *)(a1 + 108) = v31;
        }
        goto LABEL_46;
      case 9u:
        if (v9 != 74) {
          goto LABEL_72;
        }
        *(_DWORD *)(a1 + 16) |= 0x20u;
        uint64_t v34 = *(void *)(a1 + 88);
        if (!v34)
        {
          BOOL v35 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            BOOL v35 = (void *)*v35;
          }
          uint64_t v34 = sub_178C820((uint64_t)v35);
          *(void *)(a1 + 88) = v34;
          unint64_t v8 = *(unsigned __int8 **)v49;
        }
        uint64_t v29 = sub_175D000(a3, v34, v8);
        goto LABEL_45;
      case 0xAu:
        if (v9 != 82) {
          goto LABEL_72;
        }
        *(_DWORD *)(a1 + 16) |= 0x40u;
        uint64_t v36 = *(void *)(a1 + 96);
        if (!v36)
        {
          uint64_t v37 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v37 = (void *)*v37;
          }
          uint64_t v36 = sub_178C8C4((uint64_t)v37);
          *(void *)(a1 + 96) = v36;
          unint64_t v8 = *(unsigned __int8 **)v49;
        }
        uint64_t v29 = (uint64_t)sub_175D090(a3, v36, v8);
        goto LABEL_45;
      case 0xBu:
        if (v9 != 88) {
          goto LABEL_72;
        }
        v5 |= 0x100u;
        int v38 = (char *)(v8 + 1);
        uint64_t v39 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_71;
        }
        int v40 = *v38;
        uint64_t v39 = v39 + (v40 << 7) - 128;
        if (v40 < 0)
        {
          uint64_t v46 = sub_188C138((uint64_t)v8, v39);
          *(void *)uint64_t v49 = v46;
          *(unsigned char *)(a1 + 105) = v47 != 0;
          if (!v46) {
            goto LABEL_92;
          }
        }
        else
        {
          int v38 = (char *)(v8 + 2);
LABEL_71:
          *(void *)uint64_t v49 = v38;
          *(unsigned char *)(a1 + 105) = v39 != 0;
        }
        goto LABEL_46;
      default:
LABEL_72:
        if (v9) {
          BOOL v41 = (v9 & 7) == 4;
        }
        else {
          BOOL v41 = 1;
        }
        if (!v41)
        {
          if (*v7)
          {
            uint64_t v42 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v42 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unint64_t v8 = *(unsigned __int8 **)v49;
          }
          uint64_t v29 = (uint64_t)sub_1885AC0(v9, v42, (char *)v8, a3);
LABEL_45:
          *(void *)uint64_t v49 = v29;
          if (!v29) {
            goto LABEL_92;
          }
LABEL_46:
          if (sub_11947B8((uint64_t)a3, (char **)v49, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_92:
        }
          *(void *)uint64_t v49 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v49;
    }
  }
}

uint64_t sub_175D000(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_175B8AC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_175D090(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_175C344(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_175D120(uint64_t a1, char *__dst, void *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 0x80) == 0)
    {
LABEL_3:
      if ((v6 & 2) == 0) {
        goto LABEL_4;
      }
      goto LABEL_26;
    }
  }
  else if ((v6 & 0x80) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v13 = *(unsigned char *)(a1 + 104);
  *uint64_t v4 = 16;
  v4[1] = v13;
  v4 += 2;
  if ((v6 & 2) == 0)
  {
LABEL_4:
    if ((v6 & 4) == 0) {
      goto LABEL_5;
    }
    goto LABEL_27;
  }
LABEL_26:
  uint64_t v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) == 0)
  {
LABEL_5:
    if ((v6 & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_27:
  uint64_t v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 8) != 0) {
LABEL_6:
  }
    uint64_t v4 = sub_117A0AC(a3, 5, (const void **)(*(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL), v4);
LABEL_7:
  int v7 = *(_DWORD *)(a1 + 32);
  if (v7)
  {
    for (int i = 0; i != v7; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *uint64_t v4 = 50;
      unsigned int v10 = *(_DWORD *)(v9 + 20);
      v4[1] = v10;
      if (v10 > 0x7F) {
        unsigned int v11 = sub_188A9CC(v10, v4 + 1);
      }
      else {
        unsigned int v11 = v4 + 2;
      }
      uint64_t v4 = sub_15B2EA4(v9, v11, a3);
    }
  }
  if ((v6 & 0x10) != 0) {
    uint64_t v4 = sub_117A0AC(a3, 7, (const void **)(*(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  if ((v6 & 0x200) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v12 = *(int *)(a1 + 108);
    *uint64_t v4 = 64;
    v4[1] = v12;
    if (v12 > 0x7F)
    {
      v4[1] = v12 | 0x80;
      unint64_t v14 = v12 >> 7;
      v4[2] = v12 >> 7;
      v4 += 3;
      if (v12 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v16 = *(void *)(a1 + 88);
    *uint64_t v4 = 74;
    unsigned int v17 = *(_DWORD *)(v16 + 20);
    v4[1] = v17;
    if (v17 > 0x7F) {
      uint64_t v18 = sub_188A9CC(v17, v4 + 1);
    }
    else {
      uint64_t v18 = v4 + 2;
    }
    uint64_t v4 = sub_175BCFC(v16, v18, a3);
    if ((v6 & 0x40) == 0)
    {
LABEL_33:
      if ((v6 & 0x100) == 0) {
        goto LABEL_50;
      }
      goto LABEL_47;
    }
  }
  else if ((v6 & 0x40) == 0)
  {
    goto LABEL_33;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v19 = *(void *)(a1 + 96);
  *uint64_t v4 = 82;
  unsigned int v20 = *(_DWORD *)(v19 + 32);
  v4[1] = v20;
  if (v20 > 0x7F) {
    char v21 = sub_188A9CC(v20, v4 + 1);
  }
  else {
    char v21 = v4 + 2;
  }
  uint64_t v4 = sub_175C544(v19, v21, a3);
  if ((v6 & 0x100) != 0)
  {
LABEL_47:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v22 = *(unsigned char *)(a1 + 105);
    *uint64_t v4 = 88;
    v4[1] = v22;
    v4 += 2;
  }
LABEL_50:
  uint64_t v23 = *(void *)(a1 + 8);
  if ((v23 & 1) == 0) {
    return v4;
  }
  unint64_t v25 = v23 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v25 + 31) < 0)
  {
    uint64_t v26 = *(void **)(v25 + 8);
    uint64_t v27 = *(void *)(v25 + 16);
  }
  else
  {
    uint64_t v26 = (void *)(v25 + 8);
    LODWORD(v27) = *(unsigned __int8 *)(v25 + 31);
  }
  if (*a3 - (void)v4 >= (int)v27)
  {
    uint64_t v28 = (int)v27;
    memcpy(v4, v26, (int)v27);
    v4 += v28;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v26, v27, v4);
}

uint64_t sub_175D4DC(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_15B2F90(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if (!(_BYTE)v8) {
    goto LABEL_20;
  }
  if (v8)
  {
    unint64_t v12 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v13 = *(unsigned __int8 *)(v12 + 23);
    uint64_t v14 = *(void *)(v12 + 8);
    if ((v13 & 0x80u) == 0) {
      uint64_t v14 = v13;
    }
    v2 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v8 & 2) == 0)
    {
LABEL_12:
      if ((v8 & 4) == 0) {
        goto LABEL_13;
      }
      goto LABEL_32;
    }
  }
  else if ((v8 & 2) == 0)
  {
    goto LABEL_12;
  }
  unint64_t v15 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v16 = *(unsigned __int8 *)(v15 + 23);
  uint64_t v17 = *(void *)(v15 + 8);
  if ((v16 & 0x80u) == 0) {
    uint64_t v17 = v16;
  }
  v2 += v17 + ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 4) == 0)
  {
LABEL_13:
    if ((v8 & 8) == 0) {
      goto LABEL_14;
    }
    goto LABEL_35;
  }
LABEL_32:
  unint64_t v18 = *(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v19 = *(unsigned __int8 *)(v18 + 23);
  uint64_t v20 = *(void *)(v18 + 8);
  if ((v19 & 0x80u) == 0) {
    uint64_t v20 = v19;
  }
  v2 += v20 + ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 8) == 0)
  {
LABEL_14:
    if ((v8 & 0x10) == 0) {
      goto LABEL_15;
    }
    goto LABEL_38;
  }
LABEL_35:
  unint64_t v21 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v22 = *(unsigned __int8 *)(v21 + 23);
  uint64_t v23 = *(void *)(v21 + 8);
  if ((v22 & 0x80u) == 0) {
    uint64_t v23 = v22;
  }
  v2 += v23 + ((9 * (__clz(v23 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 0x10) == 0)
  {
LABEL_15:
    if ((v8 & 0x20) == 0) {
      goto LABEL_16;
    }
    goto LABEL_41;
  }
LABEL_38:
  unint64_t v24 = *(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v25 = *(unsigned __int8 *)(v24 + 23);
  uint64_t v26 = *(void *)(v24 + 8);
  if ((v25 & 0x80u) == 0) {
    uint64_t v26 = v25;
  }
  v2 += v26 + ((9 * (__clz(v26 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 0x20) == 0)
  {
LABEL_16:
    if ((v8 & 0x40) == 0) {
      goto LABEL_18;
    }
    goto LABEL_17;
  }
LABEL_41:
  uint64_t v27 = sub_175C014(*(void *)(a1 + 88));
  v2 += v27 + ((9 * (__clz(v27 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 0x40) != 0)
  {
LABEL_17:
    uint64_t v9 = sub_175C694(*(void *)(a1 + 96));
    v2 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_18:
  if ((v8 & 0x80) != 0) {
    v2 += 2;
  }
LABEL_20:
  if ((v8 & 0x300) != 0)
  {
    if ((v8 & 0x100) != 0) {
      v2 += 2;
    }
    if ((v8 & 0x200) != 0)
    {
      int v10 = *(_DWORD *)(a1 + 108);
      if (v10 < 0) {
        uint64_t v11 = 11;
      }
      else {
        uint64_t v11 = ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
      v2 += v11;
    }
  }
  uint64_t v28 = *(void *)(a1 + 8);
  if (v28)
  {
    unint64_t v30 = v28 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v30 + 31) < 0) {
      uint64_t v31 = *(void *)(v30 + 16);
    }
    else {
      uint64_t v31 = *(unsigned __int8 *)(v30 + 31);
    }
    v2 += v31;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_175D7BC(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = sub_12C1E38(v3 + 1, v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2] - LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    int v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((_BYTE)v9)
  {
    if (v9)
    {
      uint64_t v11 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v13 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v13 = (uint64_t *)*v13;
      }
      uint64_t result = sub_1881DF4((std::string **)&v3[2], v11, v13);
      if ((v9 & 2) == 0)
      {
LABEL_7:
        if ((v9 & 4) == 0) {
          goto LABEL_8;
        }
        goto LABEL_31;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_7;
    }
    uint64_t v14 = (long long *)(*(void *)(a2 + 56) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    std::string::size_type v15 = v3->__r_.__value_.__l.__size_;
    uint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
    if (v15) {
      uint64_t v16 = (uint64_t *)*v16;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[2].__r_.__value_.__l.__size_, v14, v16);
    if ((v9 & 4) == 0)
    {
LABEL_8:
      if ((v9 & 8) == 0) {
        goto LABEL_9;
      }
      goto LABEL_34;
    }
LABEL_31:
    uint64_t v17 = (long long *)(*(void *)(a2 + 64) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
    std::string::size_type v18 = v3->__r_.__value_.__l.__size_;
    uint64_t v19 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
    if (v18) {
      uint64_t v19 = (uint64_t *)*v19;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[2].__r_.__value_.__r.__words[2], v17, v19);
    if ((v9 & 8) == 0)
    {
LABEL_9:
      if ((v9 & 0x10) == 0) {
        goto LABEL_10;
      }
      goto LABEL_37;
    }
LABEL_34:
    uint64_t v20 = (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 8u;
    std::string::size_type v21 = v3->__r_.__value_.__l.__size_;
    uint64_t v22 = (uint64_t *)(v21 & 0xFFFFFFFFFFFFFFFCLL);
    if (v21) {
      uint64_t v22 = (uint64_t *)*v22;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[3], v20, v22);
    if ((v9 & 0x10) == 0)
    {
LABEL_10:
      if ((v9 & 0x20) == 0) {
        goto LABEL_11;
      }
      goto LABEL_40;
    }
LABEL_37:
    uint64_t v23 = (long long *)(*(void *)(a2 + 80) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x10u;
    std::string::size_type v24 = v3->__r_.__value_.__l.__size_;
    uint64_t v25 = (uint64_t *)(v24 & 0xFFFFFFFFFFFFFFFCLL);
    if (v24) {
      uint64_t v25 = (uint64_t *)*v25;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[3].__r_.__value_.__l.__size_, v23, v25);
    if ((v9 & 0x20) == 0)
    {
LABEL_11:
      if ((v9 & 0x40) == 0) {
        goto LABEL_12;
      }
      goto LABEL_48;
    }
LABEL_40:
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x20u;
    uint64_t v26 = (std::string *)v3[3].__r_.__value_.__r.__words[2];
    if (!v26)
    {
      std::string::size_type v27 = v3->__r_.__value_.__l.__size_;
      uint64_t v28 = (void *)(v27 & 0xFFFFFFFFFFFFFFFCLL);
      if (v27) {
        uint64_t v28 = (void *)*v28;
      }
      uint64_t v26 = (std::string *)sub_178C820((uint64_t)v28);
      v3[3].__r_.__value_.__r.__words[2] = (std::string::size_type)v26;
    }
    if (*(void *)(a2 + 88)) {
      uint64_t v29 = *(uint64_t (****)())(a2 + 88);
    }
    else {
      uint64_t v29 = &off_2548440;
    }
    uint64_t result = sub_175C12C(v26, (uint64_t)v29);
    if ((v9 & 0x40) == 0)
    {
LABEL_12:
      if ((v9 & 0x80) == 0)
      {
LABEL_14:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v9;
        goto LABEL_15;
      }
LABEL_13:
      v3[4].__r_.__value_.__s.__data_[8] = *(unsigned char *)(a2 + 104);
      goto LABEL_14;
    }
LABEL_48:
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x40u;
    data = (std::string *)v3[4].__r_.__value_.__l.__data_;
    if (!data)
    {
      std::string::size_type v31 = v3->__r_.__value_.__l.__size_;
      int v32 = (void *)(v31 & 0xFFFFFFFFFFFFFFFCLL);
      if (v31) {
        int v32 = (void *)*v32;
      }
      data = (std::string *)sub_178C8C4((uint64_t)v32);
      v3[4].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
    }
    if (*(void *)(a2 + 96)) {
      int v33 = *(uint64_t (****)())(a2 + 96);
    }
    else {
      int v33 = &off_2548480;
    }
    uint64_t result = sub_132C740(data, (uint64_t)v33);
    if ((v9 & 0x80) == 0) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }
LABEL_15:
  if ((v9 & 0x300) != 0)
  {
    if ((v9 & 0x100) != 0) {
      v3[4].__r_.__value_.__s.__data_[9] = *(unsigned char *)(a2 + 105);
    }
    if ((v9 & 0x200) != 0) {
      HIDWORD(v3[4].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 108);
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= v9;
  }
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_175DA98()
{
  return 1;
}

void *sub_175DAA0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PlaceContextMetadata.SearchPlaceContextMetadata");
}

uint64_t sub_175DAB0(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_11;
    }
  }
  else if (v4)
  {
    goto LABEL_11;
  }
  uint64_t v5 = (void ***)(a1 + 64);
  if (*(uint64_t **)(a1 + 64) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 72) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 72));
  }
  if (*(uint64_t **)(a1 + 80) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 80));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_11:
  sub_12C1DB8((void *)(a1 + 40));
  sub_1889DA8(a1 + 24);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_175DB90(uint64_t a1)
{
  sub_175DAB0(a1);

  operator delete();
}

uint64_t sub_175DBC8(uint64_t result)
{
  uint64_t v1 = result;
  *(_DWORD *)(result + 24) = 0;
  uint64_t v2 = *(unsigned int *)(result + 48);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 56) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_15B2C80(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 48) = 0;
  }
  int v5 = *(_DWORD *)(v1 + 16);
  if ((v5 & 7) != 0)
  {
    if ((v5 & 1) == 0)
    {
      if ((v5 & 2) == 0) {
        goto LABEL_8;
      }
LABEL_14:
      unint64_t v7 = *(void *)(v1 + 72) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v7 + 23) < 0)
      {
        **(unsigned char **)unint64_t v7 = 0;
        *(void *)(v7 + 8) = 0;
        if ((v5 & 4) == 0) {
          goto LABEL_21;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v7 = 0;
        *(unsigned char *)(v7 + 23) = 0;
        if ((v5 & 4) == 0) {
          goto LABEL_21;
        }
      }
      goto LABEL_18;
    }
    unint64_t v6 = *(void *)(v1 + 64) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v6 + 23) < 0)
    {
      **(unsigned char **)unint64_t v6 = 0;
      *(void *)(v6 + 8) = 0;
      if ((v5 & 2) != 0) {
        goto LABEL_14;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v6 = 0;
      *(unsigned char *)(v6 + 23) = 0;
      if ((v5 & 2) != 0) {
        goto LABEL_14;
      }
    }
LABEL_8:
    if ((v5 & 4) == 0) {
      goto LABEL_21;
    }
LABEL_18:
    unint64_t v8 = *(void *)(v1 + 80) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v8 + 23) < 0)
    {
      **(unsigned char **)unint64_t v8 = 0;
      *(void *)(v8 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v8 = 0;
      *(unsigned char *)(v8 + 23) = 0;
    }
  }
LABEL_21:
  if ((v5 & 0xF8) != 0) {
    *(void *)(v1 + 88) = 0;
  }
  if ((v5 & 0x3F00) != 0)
  {
    *(_DWORD *)(v1 + 104) = 0;
    *(void *)(v1 + 96) = 0;
  }
  char v10 = *(unsigned char *)(v1 + 8);
  uint64_t v9 = v1 + 8;
  *(_DWORD *)(v9 + 8) = 0;
  if (v10)
  {
    return sub_188B4AC((uint64_t *)v9);
  }
  return result;
}

uint64_t sub_175DD0C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v93 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v93, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v92 = (uint64_t *)(a1 + 8);
  while (2)
  {
    unint64_t v7 = (char *)(*(void *)v93 + 1);
    unsigned int v8 = **(unsigned char **)v93;
    if ((char)**(unsigned char **)v93 < 0)
    {
      int v9 = *v7;
      unsigned int v10 = v8 + (v9 << 7);
      unsigned int v8 = v10 - 128;
      if (v9 < 0)
      {
        unint64_t v7 = (char *)sub_188C180(*(uint64_t *)v93, v10 - 128);
        unsigned int v8 = v11;
      }
      else
      {
        unint64_t v7 = (char *)(*(void *)v93 + 2);
      }
    }
    *(void *)uint64_t v93 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 10) {
          goto LABEL_135;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        uint64_t v14 = (void *)(a1 + 64);
        goto LABEL_103;
      case 2u:
        if (v8 != 16) {
          goto LABEL_135;
        }
        v5 |= 8u;
        std::string::size_type v15 = v7 + 1;
        uint64_t v16 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_17;
        }
        int v17 = *v15;
        uint64_t v16 = v16 + (v17 << 7) - 128;
        if (v17 < 0)
        {
          uint64_t v68 = sub_188C138((uint64_t)v7, v16);
          *(void *)uint64_t v93 = v68;
          *(unsigned char *)(a1 + 88) = v69 != 0;
          if (!v68) {
            goto LABEL_157;
          }
        }
        else
        {
          std::string::size_type v15 = v7 + 2;
LABEL_17:
          *(void *)uint64_t v93 = v15;
          *(unsigned char *)(a1 + 88) = v16 != 0;
        }
        goto LABEL_143;
      case 3u:
        if (v8 != 24) {
          goto LABEL_135;
        }
        v5 |= 0x10u;
        std::string::size_type v18 = v7 + 1;
        uint64_t v19 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_22;
        }
        int v20 = *v18;
        uint64_t v19 = v19 + (v20 << 7) - 128;
        if (v20 < 0)
        {
          uint64_t v70 = sub_188C138((uint64_t)v7, v19);
          *(void *)uint64_t v93 = v70;
          *(unsigned char *)(a1 + 89) = v71 != 0;
          if (!v70) {
            goto LABEL_157;
          }
        }
        else
        {
          std::string::size_type v18 = v7 + 2;
LABEL_22:
          *(void *)uint64_t v93 = v18;
          *(unsigned char *)(a1 + 89) = v19 != 0;
        }
        goto LABEL_143;
      case 4u:
        if (v8 == 32)
        {
          uint64_t v21 = (uint64_t)(v7 - 1);
          while (1)
          {
            *(void *)uint64_t v93 = v21 + 1;
            unint64_t v22 = *(unsigned __int8 *)(v21 + 1);
            uint64_t v23 = (char *)(v21 + 2);
            if (*(char *)(v21 + 1) < 0)
            {
              int v24 = *v23;
              int v25 = v22 + (v24 << 7);
              unint64_t v22 = (v25 - 128);
              if (v24 < 0)
              {
                *(void *)uint64_t v93 = sub_188C138(v21 + 1, (v25 - 128));
                if (!*(void *)v93) {
                  goto LABEL_157;
                }
                unint64_t v22 = v28;
                goto LABEL_29;
              }
              uint64_t v23 = (char *)(v21 + 3);
            }
            *(void *)uint64_t v93 = v23;
LABEL_29:
            if (v22 > 4)
            {
              if (*v92) {
                uint64_t v29 = (std::string *)((*v92 & 0xFFFFFFFFFFFFFFFCLL) + 8);
              }
              else {
                uint64_t v29 = (std::string *)sub_188DBD8(v92);
              }
              sub_188C020(4, v22, v29);
            }
            else
            {
              uint64_t v26 = *(unsigned int *)(a1 + 24);
              if (v26 == *(_DWORD *)(a1 + 28))
              {
                int v27 = v26 + 1;
                sub_188C80C((unsigned int *)(a1 + 24), v26 + 1);
                *(_DWORD *)(*(void *)(a1 + 32) + 4 * v26) = v22;
              }
              else
              {
                *(_DWORD *)(*(void *)(a1 + 32) + 4 * v26) = v22;
                int v27 = v26 + 1;
              }
              *(_DWORD *)(a1 + 24) = v27;
            }
            uint64_t v21 = *(void *)v93;
            if (*(void *)a3 <= *(void *)v93 || **(unsigned char **)v93 != 32) {
              goto LABEL_143;
            }
          }
        }
        if (v8 == 34)
        {
          *(void *)&long long v94 = a1 + 24;
          *((void *)&v94 + 1) = sub_16B5984;
          uint64_t v95 = a1 + 8;
          int v96 = 4;
          uint64_t v64 = sub_1112E88((uint64_t)a3, v7, &v94);
LABEL_142:
          *(void *)uint64_t v93 = v64;
          if (!v64) {
            goto LABEL_157;
          }
LABEL_143:
          if (sub_11947B8((uint64_t)a3, (char **)v93, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
LABEL_135:
        if (v8) {
          BOOL v88 = (v8 & 7) == 4;
        }
        else {
          BOOL v88 = 1;
        }
        if (!v88)
        {
          if (*v92)
          {
            uint64_t v89 = (std::string *)((*v92 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v89 = (std::string *)sub_188DBD8(v92);
            unint64_t v7 = *(char **)v93;
          }
          uint64_t v64 = sub_1885AC0(v8, v89, v7, a3);
          goto LABEL_142;
        }
        if (v7) {
          a3[10].i32[0] = v8 - 1;
        }
        else {
LABEL_157:
        }
          *(void *)uint64_t v93 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v93;
      case 5u:
        if (v8 != 42) {
          goto LABEL_135;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v30 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v30 & 0xFFFFFFFFFFFFFFFCLL);
        if (v30) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        uint64_t v14 = (void *)(a1 + 72);
        goto LABEL_103;
      case 6u:
        if (v8 != 48) {
          goto LABEL_135;
        }
        v5 |= 0x20u;
        std::string::size_type v31 = v7 + 1;
        uint64_t v32 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_51;
        }
        int v33 = *v31;
        uint64_t v32 = v32 + (v33 << 7) - 128;
        if (v33 < 0)
        {
          uint64_t v72 = sub_188C138((uint64_t)v7, v32);
          *(void *)uint64_t v93 = v72;
          *(unsigned char *)(a1 + 90) = v73 != 0;
          if (!v72) {
            goto LABEL_157;
          }
        }
        else
        {
          std::string::size_type v31 = v7 + 2;
LABEL_51:
          *(void *)uint64_t v93 = v31;
          *(unsigned char *)(a1 + 90) = v32 != 0;
        }
        goto LABEL_143;
      case 7u:
        if (v8 != 56) {
          goto LABEL_135;
        }
        v5 |= 0x40u;
        uint64_t v34 = v7 + 1;
        uint64_t v35 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_56;
        }
        int v36 = *v34;
        uint64_t v35 = v35 + (v36 << 7) - 128;
        if (v36 < 0)
        {
          uint64_t v74 = sub_188C138((uint64_t)v7, v35);
          *(void *)uint64_t v93 = v74;
          *(unsigned char *)(a1 + 91) = v75 != 0;
          if (!v74) {
            goto LABEL_157;
          }
        }
        else
        {
          uint64_t v34 = v7 + 2;
LABEL_56:
          *(void *)uint64_t v93 = v34;
          *(unsigned char *)(a1 + 91) = v35 != 0;
        }
        goto LABEL_143;
      case 8u:
        if (v8 != 66) {
          goto LABEL_135;
        }
        uint64_t v37 = v7 - 1;
        while (1)
        {
          int v38 = (unsigned __int8 *)(v37 + 1);
          *(void *)uint64_t v93 = v37 + 1;
          uint64_t v39 = *(_DWORD **)(a1 + 56);
          if (v39 && (uint64_t v40 = *(int *)(a1 + 48), (int)v40 < *v39))
          {
            *(_DWORD *)(a1 + 48) = v40 + 1;
            uint64_t v41 = *(void *)&v39[2 * v40 + 2];
          }
          else
          {
            uint64_t v42 = sub_15C1B30(*(void *)(a1 + 40));
            uint64_t v41 = sub_188CDC8(a1 + 40, (uint64_t)v42);
            int v38 = *(unsigned __int8 **)v93;
          }
          uint64_t v37 = (char *)sub_125CF74(a3, v41, v38);
          *(void *)uint64_t v93 = v37;
          if (!v37) {
            goto LABEL_157;
          }
          if (*(void *)a3 <= (unint64_t)v37 || *v37 != 66) {
            goto LABEL_143;
          }
        }
      case 9u:
        if (v8 != 72) {
          goto LABEL_135;
        }
        v5 |= 0x80u;
        uint64_t v43 = v7 + 1;
        int v44 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_71;
        }
        int v45 = *v43;
        int v44 = v44 + (v45 << 7) - 128;
        if (v45 < 0)
        {
          uint64_t v76 = sub_188C0D0((uint64_t)v7, v44);
          *(void *)uint64_t v93 = v76;
          *(_DWORD *)(a1 + 92) = v77;
          if (!v76) {
            goto LABEL_157;
          }
        }
        else
        {
          uint64_t v43 = v7 + 2;
LABEL_71:
          *(void *)uint64_t v93 = v43;
          *(_DWORD *)(a1 + 92) = v44;
        }
        goto LABEL_143;
      case 0xAu:
        if (v8 != 80) {
          goto LABEL_135;
        }
        v5 |= 0x200u;
        uint64_t v46 = v7 + 1;
        uint64_t v47 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_76;
        }
        int v48 = *v46;
        uint64_t v47 = v47 + (v48 << 7) - 128;
        if (v48 < 0)
        {
          uint64_t v78 = sub_188C138((uint64_t)v7, v47);
          *(void *)uint64_t v93 = v78;
          *(unsigned char *)(a1 + 100) = v79 != 0;
          if (!v78) {
            goto LABEL_157;
          }
        }
        else
        {
          uint64_t v46 = v7 + 2;
LABEL_76:
          *(void *)uint64_t v93 = v46;
          *(unsigned char *)(a1 + 100) = v47 != 0;
        }
        goto LABEL_143;
      case 0xBu:
        if (v8 != 88) {
          goto LABEL_135;
        }
        v5 |= 0x400u;
        uint64_t v49 = v7 + 1;
        uint64_t v50 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_81;
        }
        int v51 = *v49;
        uint64_t v50 = v50 + (v51 << 7) - 128;
        if (v51 < 0)
        {
          uint64_t v80 = sub_188C138((uint64_t)v7, v50);
          *(void *)uint64_t v93 = v80;
          *(unsigned char *)(a1 + 101) = v81 != 0;
          if (!v80) {
            goto LABEL_157;
          }
        }
        else
        {
          uint64_t v49 = v7 + 2;
LABEL_81:
          *(void *)uint64_t v93 = v49;
          *(unsigned char *)(a1 + 101) = v50 != 0;
        }
        goto LABEL_143;
      case 0xCu:
        if (v8 != 96) {
          goto LABEL_135;
        }
        uint64_t v52 = v7 + 1;
        unint64_t v53 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_86;
        }
        int v54 = *v52;
        int v55 = v53 + (v54 << 7);
        unint64_t v53 = (v55 - 128);
        if (v54 < 0)
        {
          *(void *)uint64_t v93 = sub_188C138((uint64_t)v7, (v55 - 128));
          if (!*(void *)v93) {
            goto LABEL_157;
          }
          unint64_t v53 = v82;
        }
        else
        {
          uint64_t v52 = v7 + 2;
LABEL_86:
          *(void *)uint64_t v93 = v52;
        }
        if (sub_125D180(v53))
        {
          *(_DWORD *)(a1 + 16) |= 0x100u;
          *(_DWORD *)(a1 + 96) = v53;
          goto LABEL_143;
        }
        if (*v92) {
          unsigned int v90 = (std::string *)((*v92 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          unsigned int v90 = (std::string *)sub_188DBD8(v92);
        }
        int v91 = 12;
        goto LABEL_151;
      case 0xDu:
        if (v8 != 104) {
          goto LABEL_135;
        }
        v5 |= 0x800u;
        BOOL v56 = v7 + 1;
        uint64_t v57 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_93;
        }
        int v58 = *v56;
        uint64_t v57 = v57 + (v58 << 7) - 128;
        if (v58 < 0)
        {
          uint64_t v83 = sub_188C138((uint64_t)v7, v57);
          *(void *)uint64_t v93 = v83;
          *(unsigned char *)(a1 + 102) = v84 != 0;
          if (!v83) {
            goto LABEL_157;
          }
        }
        else
        {
          BOOL v56 = v7 + 2;
LABEL_93:
          *(void *)uint64_t v93 = v56;
          *(unsigned char *)(a1 + 102) = v57 != 0;
        }
        goto LABEL_143;
      case 0xEu:
        if (v8 != 112) {
          goto LABEL_135;
        }
        v5 |= 0x1000u;
        uint64_t v59 = v7 + 1;
        uint64_t v60 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_98;
        }
        int v61 = *v59;
        uint64_t v60 = v60 + (v61 << 7) - 128;
        if (v61 < 0)
        {
          uint64_t v85 = sub_188C138((uint64_t)v7, v60);
          *(void *)uint64_t v93 = v85;
          *(unsigned char *)(a1 + 103) = v86 != 0;
          if (!v85) {
            goto LABEL_157;
          }
        }
        else
        {
          uint64_t v59 = v7 + 2;
LABEL_98:
          *(void *)uint64_t v93 = v59;
          *(unsigned char *)(a1 + 103) = v60 != 0;
        }
        goto LABEL_143;
      case 0xFu:
        if (v8 != 122) {
          goto LABEL_135;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v62 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v62 & 0xFFFFFFFFFFFFFFFCLL);
        if (v62) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        uint64_t v14 = (void *)(a1 + 80);
LABEL_103:
        uint64_t v63 = (std::string *)sub_1880F84(v14, v13);
        uint64_t v64 = (void *)sub_188C244(v63, *(char **)v93, (uint64_t)a3);
        goto LABEL_142;
      case 0x10u:
        if (v8 != 128) {
          goto LABEL_135;
        }
        uint64_t v65 = v7 + 1;
        unint64_t v53 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_108;
        }
        int v66 = *v65;
        int v67 = v53 + (v66 << 7);
        unint64_t v53 = (v67 - 128);
        if (v66 < 0)
        {
          *(void *)uint64_t v93 = sub_188C138((uint64_t)v7, (v67 - 128));
          if (!*(void *)v93) {
            goto LABEL_157;
          }
          unint64_t v53 = v87;
        }
        else
        {
          uint64_t v65 = v7 + 2;
LABEL_108:
          *(void *)uint64_t v93 = v65;
        }
        if (v53 > 1)
        {
          if (*v92) {
            unsigned int v90 = (std::string *)((*v92 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            unsigned int v90 = (std::string *)sub_188DBD8(v92);
          }
          int v91 = 16;
LABEL_151:
          sub_188C020(v91, v53, v90);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 0x2000u;
          *(_DWORD *)(a1 + 104) = v53;
        }
        goto LABEL_143;
      default:
        goto LABEL_135;
    }
  }
}

unsigned char *sub_175E638(uint64_t a1, unsigned char *__dst, void *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 8) == 0)
    {
LABEL_3:
      if ((v6 & 0x10) == 0) {
        goto LABEL_12;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 8) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v7 = *(unsigned char *)(a1 + 88);
  *uint64_t v4 = 16;
  v4[1] = v7;
  v4 += 2;
  if ((v6 & 0x10) != 0)
  {
LABEL_9:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v8 = *(unsigned char *)(a1 + 89);
    *uint64_t v4 = 24;
    v4[1] = v8;
    v4 += 2;
  }
LABEL_12:
  uint64_t v9 = *(unsigned int *)(a1 + 24);
  if ((int)v9 >= 1)
  {
    for (uint64_t i = 0; i != v9; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v11 = *(int *)(*(void *)(a1 + 32) + 4 * i);
      *uint64_t v4 = 32;
      v4[1] = v11;
      if (v11 > 0x7F)
      {
        v4[1] = v11 | 0x80;
        unint64_t v12 = v11 >> 7;
        v4[2] = v11 >> 7;
        v4 += 3;
        if (v11 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v13 = v12 >> 14;
            v12 >>= 7;
            *v4++ = v12;
          }
          while (v13);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  if ((v6 & 2) != 0)
  {
    uint64_t v4 = sub_117A0AC(a3, 5, (const void **)(*(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL), v4);
    if ((v6 & 0x20) == 0)
    {
LABEL_23:
      if ((v6 & 0x40) == 0) {
        goto LABEL_32;
      }
      goto LABEL_29;
    }
  }
  else if ((v6 & 0x20) == 0)
  {
    goto LABEL_23;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v14 = *(unsigned char *)(a1 + 90);
  *uint64_t v4 = 48;
  v4[1] = v14;
  v4 += 2;
  if ((v6 & 0x40) != 0)
  {
LABEL_29:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v15 = *(unsigned char *)(a1 + 91);
    *uint64_t v4 = 56;
    v4[1] = v15;
    v4 += 2;
  }
LABEL_32:
  int v16 = *(_DWORD *)(a1 + 48);
  if (v16)
  {
    for (int j = 0; j != v16; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v18 = *(void *)(*(void *)(a1 + 56) + 8 * j + 8);
      *uint64_t v4 = 66;
      unsigned int v19 = *(_DWORD *)(v18 + 20);
      v4[1] = v19;
      if (v19 > 0x7F) {
        int v20 = sub_188A9CC(v19, v4 + 1);
      }
      else {
        int v20 = v4 + 2;
      }
      uint64_t v4 = sub_15B2EA4(v18, v20, a3);
    }
  }
  if ((v6 & 0x80) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v21 = *(_DWORD *)(a1 + 92);
    *uint64_t v4 = 72;
    v4[1] = v21;
    if (v21 > 0x7F)
    {
      v4[1] = v21 | 0x80;
      unsigned int v22 = v21 >> 7;
      v4[2] = v21 >> 7;
      v4 += 3;
      if (v21 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v23 = v22 >> 14;
          v22 >>= 7;
          *v4++ = v22;
        }
        while (v23);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x200) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v24 = *(unsigned char *)(a1 + 100);
    *uint64_t v4 = 80;
    v4[1] = v24;
    v4 += 2;
    if ((v6 & 0x400) == 0)
    {
LABEL_49:
      if ((v6 & 0x100) == 0) {
        goto LABEL_63;
      }
      goto LABEL_57;
    }
  }
  else if ((v6 & 0x400) == 0)
  {
    goto LABEL_49;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v25 = *(unsigned char *)(a1 + 101);
  *uint64_t v4 = 88;
  v4[1] = v25;
  v4 += 2;
  if ((v6 & 0x100) != 0)
  {
LABEL_57:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v26 = *(int *)(a1 + 96);
    *uint64_t v4 = 96;
    v4[1] = v26;
    if (v26 > 0x7F)
    {
      v4[1] = v26 | 0x80;
      unint64_t v27 = v26 >> 7;
      v4[2] = v26 >> 7;
      v4 += 3;
      if (v26 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v28 = v27 >> 14;
          v27 >>= 7;
          *v4++ = v27;
        }
        while (v28);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_63:
  if ((v6 & 0x800) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v29 = *(unsigned char *)(a1 + 102);
    *uint64_t v4 = 104;
    v4[1] = v29;
    v4 += 2;
    if ((v6 & 0x1000) == 0)
    {
LABEL_65:
      if ((v6 & 4) == 0) {
        goto LABEL_66;
      }
      goto LABEL_74;
    }
  }
  else if ((v6 & 0x1000) == 0)
  {
    goto LABEL_65;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v30 = *(unsigned char *)(a1 + 103);
  *uint64_t v4 = 112;
  v4[1] = v30;
  v4 += 2;
  if ((v6 & 4) == 0)
  {
LABEL_66:
    if ((v6 & 0x2000) == 0) {
      goto LABEL_81;
    }
    goto LABEL_75;
  }
LABEL_74:
  uint64_t v4 = sub_117A0AC(a3, 15, (const void **)(*(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x2000) == 0) {
    goto LABEL_81;
  }
LABEL_75:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  unint64_t v31 = *(int *)(a1 + 104);
  *(_WORD *)uint64_t v4 = 384;
  v4[2] = v31;
  if (v31 > 0x7F)
  {
    v4[2] = v31 | 0x80;
    unint64_t v32 = v31 >> 7;
    v4[3] = v31 >> 7;
    v4 += 4;
    if (v31 >= 0x4000)
    {
      do
      {
        *(v4 - 1) |= 0x80u;
        unint64_t v33 = v32 >> 14;
        v32 >>= 7;
        *v4++ = v32;
      }
      while (v33);
    }
  }
  else
  {
    v4 += 3;
  }
LABEL_81:
  uint64_t v34 = *(void *)(a1 + 8);
  if ((v34 & 1) == 0) {
    return v4;
  }
  unint64_t v36 = v34 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v36 + 31) < 0)
  {
    uint64_t v37 = *(void **)(v36 + 8);
    uint64_t v38 = *(void *)(v36 + 16);
  }
  else
  {
    uint64_t v37 = (void *)(v36 + 8);
    LODWORD(v38) = *(unsigned __int8 *)(v36 + 31);
  }
  if (*a3 - (void)v4 >= (int)v38)
  {
    uint64_t v39 = (int)v38;
    memcpy(v4, v37, (int)v38);
    v4 += v39;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v37, v38, v4);
}

uint64_t sub_175EBE4(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 24);
  if (v2)
  {
    uint64_t v3 = 0;
    int v4 = 0;
    do
    {
      int v5 = *(_DWORD *)(*(void *)(a1 + 32) + 4 * v4);
      if (v5 < 0) {
        uint64_t v6 = 10;
      }
      else {
        uint64_t v6 = (9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6;
      }
      v3 += v6;
      ++v4;
    }
    while (v2 != v4);
  }
  else
  {
    uint64_t v3 = 0;
  }
  uint64_t v7 = v3 + v2;
  uint64_t v8 = *(int *)(a1 + 48);
  uint64_t v9 = v7 + v8;
  uint64_t v10 = *(void *)(a1 + 56);
  if (v10) {
    unint64_t v11 = (uint64_t *)(v10 + 8);
  }
  else {
    unint64_t v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_15B2F90(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  int v15 = *(_DWORD *)(a1 + 16);
  if ((_BYTE)v15)
  {
    if (v15)
    {
      unint64_t v29 = *(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v30 = *(unsigned __int8 *)(v29 + 23);
      uint64_t v31 = *(void *)(v29 + 8);
      if ((v30 & 0x80u) == 0) {
        uint64_t v31 = v30;
      }
      v9 += v31 + ((9 * (__clz(v31 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v15 & 2) == 0)
      {
LABEL_18:
        if ((v15 & 4) == 0)
        {
LABEL_22:
          uint64_t v19 = v9 + 2;
          if ((v15 & 8) == 0) {
            uint64_t v19 = v9;
          }
          if ((v15 & 0x10) != 0) {
            v19 += 2;
          }
          if ((v15 & 0x20) != 0) {
            v19 += 2;
          }
          if ((v15 & 0x40) != 0) {
            uint64_t v9 = v19 + 2;
          }
          else {
            uint64_t v9 = v19;
          }
          if ((v15 & 0x80) != 0) {
            v9 += ((9 * (__clz(*(_DWORD *)(a1 + 92) | 1) ^ 0x1F) + 73) >> 6) + 1;
          }
          goto LABEL_33;
        }
LABEL_19:
        unint64_t v16 = *(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL;
        uint64_t v17 = *(unsigned __int8 *)(v16 + 23);
        uint64_t v18 = *(void *)(v16 + 8);
        if ((v17 & 0x80u) == 0) {
          uint64_t v18 = v17;
        }
        v9 += v18 + ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6) + 1;
        goto LABEL_22;
      }
    }
    else if ((v15 & 2) == 0)
    {
      goto LABEL_18;
    }
    unint64_t v32 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v33 = *(unsigned __int8 *)(v32 + 23);
    uint64_t v34 = *(void *)(v32 + 8);
    if ((v33 & 0x80u) == 0) {
      uint64_t v34 = v33;
    }
    v9 += v34 + ((9 * (__clz(v34 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v15 & 4) == 0) {
      goto LABEL_22;
    }
    goto LABEL_19;
  }
LABEL_33:
  if ((v15 & 0x3F00) != 0)
  {
    if ((v15 & 0x100) != 0)
    {
      int v20 = *(_DWORD *)(a1 + 96);
      uint64_t v21 = ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if (v20 >= 0) {
        uint64_t v22 = v21;
      }
      else {
        uint64_t v22 = 11;
      }
      v9 += v22;
    }
    uint64_t v23 = v9 + 2;
    if ((v15 & 0x200) == 0) {
      uint64_t v23 = v9;
    }
    if ((v15 & 0x400) != 0) {
      v23 += 2;
    }
    if ((v15 & 0x800) != 0) {
      v23 += 2;
    }
    if ((v15 & 0x1000) != 0) {
      uint64_t v9 = v23 + 2;
    }
    else {
      uint64_t v9 = v23;
    }
    if ((v15 & 0x2000) != 0)
    {
      int v24 = *(_DWORD *)(a1 + 104);
      uint64_t v25 = ((9 * (__clz(v24 | 1) ^ 0x1F) + 73) >> 6) + 2;
      if (v24 >= 0) {
        uint64_t v26 = v25;
      }
      else {
        uint64_t v26 = 12;
      }
      v9 += v26;
    }
  }
  uint64_t v27 = *(void *)(a1 + 8);
  if (v27)
  {
    unint64_t v35 = v27 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v35 + 31) < 0) {
      uint64_t v36 = *(void *)(v35 + 16);
    }
    else {
      uint64_t v36 = *(unsigned __int8 *)(v35 + 31);
    }
    v9 += v36;
  }
  *(_DWORD *)(a1 + 20) = v9;
  return v9;
}

std::string *sub_175EEC4(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    int v5 = result + 1;
    uint64_t data_low = SLODWORD(result[1].__r_.__value_.__l.__data_);
    sub_188C80C((unsigned int *)&result[1], data_low + v4);
    std::string::size_type size = v3[1].__r_.__value_.__l.__size_;
    LODWORD(v5->__r_.__value_.__l.__data_) += *(_DWORD *)(a2 + 24);
    uint64_t result = (std::string *)memcpy((void *)(size + 4 * data_low), *(const void **)(a2 + 32), 4 * *(int *)(a2 + 24));
  }
  int v8 = *(_DWORD *)(a2 + 48);
  if (v8)
  {
    uint64_t v9 = (uint64_t *)(*(void *)(a2 + 56) + 8);
    uint64_t v10 = (std::string **)sub_188CCE4((uint64_t)&v3[1].__r_.__value_.__r.__words[2], *(_DWORD *)(a2 + 48));
    uint64_t result = sub_12C1E38((std::string *)((char *)v3 + 40), v10, v9, v8, *(_DWORD *)v3[2].__r_.__value_.__l.__size_ - LODWORD(v3[2].__r_.__value_.__l.__data_));
    int v11 = LODWORD(v3[2].__r_.__value_.__l.__data_) + v8;
    LODWORD(v3[2].__r_.__value_.__l.__data_) = v11;
    uint64_t v12 = (int *)v3[2].__r_.__value_.__l.__size_;
    if (*v12 < v11) {
      *uint64_t v12 = v11;
    }
  }
  int v13 = *(_DWORD *)(a2 + 16);
  if ((_BYTE)v13)
  {
    if (v13)
    {
      int v15 = (long long *)(*(void *)(a2 + 64) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::size_type v16 = v3->__r_.__value_.__l.__size_;
      uint64_t v17 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
      if (v16) {
        uint64_t v17 = (uint64_t *)*v17;
      }
      uint64_t result = sub_1881DF4((std::string **)&v3[2].__r_.__value_.__r.__words[2], v15, v17);
      if ((v13 & 2) == 0)
      {
LABEL_9:
        if ((v13 & 4) == 0) {
          goto LABEL_10;
        }
        goto LABEL_36;
      }
    }
    else if ((v13 & 2) == 0)
    {
      goto LABEL_9;
    }
    uint64_t v18 = (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    std::string::size_type v19 = v3->__r_.__value_.__l.__size_;
    int v20 = (uint64_t *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
    if (v19) {
      int v20 = (uint64_t *)*v20;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[3], v18, v20);
    if ((v13 & 4) == 0)
    {
LABEL_10:
      if ((v13 & 8) == 0) {
        goto LABEL_11;
      }
      goto LABEL_39;
    }
LABEL_36:
    uint64_t v21 = (long long *)(*(void *)(a2 + 80) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
    std::string::size_type v22 = v3->__r_.__value_.__l.__size_;
    uint64_t v23 = (uint64_t *)(v22 & 0xFFFFFFFFFFFFFFFCLL);
    if (v22) {
      uint64_t v23 = (uint64_t *)*v23;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[3].__r_.__value_.__l.__size_, v21, v23);
    if ((v13 & 8) == 0)
    {
LABEL_11:
      if ((v13 & 0x10) == 0) {
        goto LABEL_12;
      }
      goto LABEL_40;
    }
LABEL_39:
    v3[3].__r_.__value_.__s.__data_[16] = *(unsigned char *)(a2 + 88);
    if ((v13 & 0x10) == 0)
    {
LABEL_12:
      if ((v13 & 0x20) == 0) {
        goto LABEL_13;
      }
      goto LABEL_41;
    }
LABEL_40:
    v3[3].__r_.__value_.__s.__data_[17] = *(unsigned char *)(a2 + 89);
    if ((v13 & 0x20) == 0)
    {
LABEL_13:
      if ((v13 & 0x40) == 0) {
        goto LABEL_14;
      }
      goto LABEL_42;
    }
LABEL_41:
    v3[3].__r_.__value_.__s.__data_[18] = *(unsigned char *)(a2 + 90);
    if ((v13 & 0x40) == 0)
    {
LABEL_14:
      if ((v13 & 0x80) == 0)
      {
LABEL_16:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v13;
        goto LABEL_17;
      }
LABEL_15:
      HIDWORD(v3[3].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 92);
      goto LABEL_16;
    }
LABEL_42:
    v3[3].__r_.__value_.__s.__data_[19] = *(unsigned char *)(a2 + 91);
    if ((v13 & 0x80) == 0) {
      goto LABEL_16;
    }
    goto LABEL_15;
  }
LABEL_17:
  if ((v13 & 0x3F00) == 0) {
    goto LABEL_26;
  }
  if ((v13 & 0x100) != 0)
  {
    LODWORD(v3[4].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 96);
    if ((v13 & 0x200) == 0)
    {
LABEL_20:
      if ((v13 & 0x400) == 0) {
        goto LABEL_21;
      }
      goto LABEL_46;
    }
  }
  else if ((v13 & 0x200) == 0)
  {
    goto LABEL_20;
  }
  v3[4].__r_.__value_.__s.__data_[4] = *(unsigned char *)(a2 + 100);
  if ((v13 & 0x400) == 0)
  {
LABEL_21:
    if ((v13 & 0x800) == 0) {
      goto LABEL_22;
    }
    goto LABEL_47;
  }
LABEL_46:
  v3[4].__r_.__value_.__s.__data_[5] = *(unsigned char *)(a2 + 101);
  if ((v13 & 0x800) == 0)
  {
LABEL_22:
    if ((v13 & 0x1000) == 0) {
      goto LABEL_23;
    }
LABEL_48:
    v3[4].__r_.__value_.__s.__data_[7] = *(unsigned char *)(a2 + 103);
    if ((v13 & 0x2000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_24;
  }
LABEL_47:
  v3[4].__r_.__value_.__s.__data_[6] = *(unsigned char *)(a2 + 102);
  if ((v13 & 0x1000) != 0) {
    goto LABEL_48;
  }
LABEL_23:
  if ((v13 & 0x2000) != 0) {
LABEL_24:
  }
    LODWORD(v3[4].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 104);
LABEL_25:
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= v13;
LABEL_26:
  uint64_t v14 = *(void *)(a2 + 8);
  if (v14)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v14 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_175F15C()
{
  return 1;
}

void *sub_175F164@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PlaceContextMetadata.AutocompletePlaceContextMetadata");
}

uint64_t sub_175F174(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  if ((uint64_t (***)())a1 != &off_2548588)
  {
    int v5 = *(void **)(a1 + 24);
    if (v5)
    {
      sub_175C70C(v5);
      operator delete();
    }
    uint64_t v6 = *(void *)(a1 + 32);
    if (v6)
    {
      sub_175DAB0(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_175F244(uint64_t a1)
{
  sub_175F174(a1);

  operator delete();
}

uint64_t sub_175F27C(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 3) != 0)
  {
    if (v2) {
      uint64_t result = sub_175C8C8(*(void *)(result + 24));
    }
    if ((v2 & 2) != 0) {
      uint64_t result = sub_175DBC8(*(void *)(v1 + 32));
    }
  }
  if ((v2 & 0xC) != 0)
  {
    *(_DWORD *)(v1 + 48) = 0;
    *(void *)(v1 + 40) = 0;
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_175F2FC(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v30 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v30, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    int v8 = v30 + 1;
    unsigned int v9 = *v30;
    if (*v30 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        int v8 = (char *)sub_188C180((uint64_t)v30, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        int v8 = v30 + 2;
      }
    }
    uint64_t v30 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_33;
        }
        v5 |= 4u;
        uint64_t v12 = v8 + 1;
        uint64_t v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        uint64_t v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          uint64_t v12 = v8 + 2;
LABEL_13:
          uint64_t v30 = v12;
          *(void *)(a1 + 40) = v13;
          goto LABEL_41;
        }
        uint64_t v26 = (char *)sub_188C138((uint64_t)v8, v13);
        uint64_t v30 = v26;
        *(void *)(a1 + 40) = v27;
        if (v26) {
          goto LABEL_41;
        }
        goto LABEL_54;
      case 2u:
        if (v9 != 16) {
          goto LABEL_33;
        }
        int v15 = v8 + 1;
        unint64_t v16 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_18;
        }
        int v17 = *v15;
        int v18 = v16 + (v17 << 7);
        unint64_t v16 = (v18 - 128);
        if (v17 < 0)
        {
          uint64_t v30 = (char *)sub_188C138((uint64_t)v8, (v18 - 128));
          if (!v30) {
            goto LABEL_54;
          }
          unint64_t v16 = v28;
        }
        else
        {
          int v15 = v8 + 2;
LABEL_18:
          uint64_t v30 = v15;
        }
        if (v16 > 2)
        {
          if (*v7) {
            unint64_t v29 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            unint64_t v29 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(2, v16, v29);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 8u;
          *(_DWORD *)(a1 + 48) = v16;
        }
        goto LABEL_41;
      case 3u:
        if (v9 != 26) {
          goto LABEL_33;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        std::string::size_type v19 = *(void **)(a1 + 24);
        if (!v19)
        {
          int v20 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            int v20 = (void *)*v20;
          }
          std::string::size_type v19 = sub_178C958((uint64_t)v20);
          *(void *)(a1 + 24) = v19;
          int v8 = v30;
        }
        uint64_t v21 = (char *)sub_175F600(a3, (uint64_t)v19, (unsigned __int8 *)v8);
        goto LABEL_40;
      case 4u:
        if (v9 != 34) {
          goto LABEL_33;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v22 = *(void *)(a1 + 32);
        if (!v22)
        {
          uint64_t v23 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v23 = (void *)*v23;
          }
          uint64_t v22 = sub_178CA08((uint64_t)v23);
          *(void *)(a1 + 32) = v22;
          int v8 = v30;
        }
        uint64_t v21 = (char *)sub_175F690(a3, v22, (unsigned __int8 *)v8);
        goto LABEL_40;
      default:
LABEL_33:
        if (v9) {
          BOOL v24 = (v9 & 7) == 4;
        }
        else {
          BOOL v24 = 1;
        }
        if (!v24)
        {
          if (*v7)
          {
            uint64_t v25 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v25 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            int v8 = v30;
          }
          uint64_t v21 = (char *)sub_1885AC0(v9, v25, v8, a3);
LABEL_40:
          uint64_t v30 = v21;
          if (!v21) {
            goto LABEL_54;
          }
LABEL_41:
          if (sub_11947B8((uint64_t)a3, &v30, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_54:
        }
          uint64_t v30 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v30;
    }
  }
}

uint64_t sub_175F600(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_175CA98(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_175F690(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_175DD0C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_175F720(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 4) != 0)
  {
    if (*a3 <= __dst) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(void *)(a1 + 40);
    *char v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 48);
    *char v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v13 = *(void *)(a1 + 24);
    *char v4 = 26;
    unsigned int v14 = *(_DWORD *)(v13 + 20);
    v4[1] = v14;
    if (v14 > 0x7F) {
      int v15 = sub_188A9CC(v14, v4 + 1);
    }
    else {
      int v15 = v4 + 2;
    }
    char v4 = sub_175D120(v13, v15, a3);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v16 = *(void *)(a1 + 32);
    *char v4 = 34;
    unsigned int v17 = *(_DWORD *)(v16 + 20);
    v4[1] = v17;
    if (v17 > 0x7F) {
      int v18 = sub_188A9CC(v17, v4 + 1);
    }
    else {
      int v18 = v4 + 2;
    }
    char v4 = sub_175E638(v16, v18, a3);
  }
  uint64_t v19 = *(void *)(a1 + 8);
  if ((v19 & 1) == 0) {
    return v4;
  }
  unint64_t v21 = v19 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v21 + 31) < 0)
  {
    uint64_t v22 = *(void **)(v21 + 8);
    uint64_t v23 = *(void *)(v21 + 16);
  }
  else
  {
    uint64_t v22 = (void *)(v21 + 8);
    LODWORD(v23) = *(unsigned __int8 *)(v21 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v23)
  {
    uint64_t v24 = (int)v23;
    memcpy(v4, v22, (int)v23);
    v4 += v24;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v22, v23, v4);
}

uint64_t sub_175F998(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0xF) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_16;
  }
  if (v2)
  {
    uint64_t v4 = sub_175D4DC(*(void *)(a1 + 24));
    uint64_t v3 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_7:
    uint64_t v5 = sub_175EBE4(*(void *)(a1 + 32));
    v3 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_8:
  if ((v2 & 4) != 0)
  {
    v3 += ((9 * (__clz(*(void *)(a1 + 40) | 1) ^ 0x3F) + 73) >> 6) + 1;
    if ((v2 & 8) == 0) {
      goto LABEL_16;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_16;
  }
  int v6 = *(_DWORD *)(a1 + 48);
  if (v6 < 0) {
    uint64_t v7 = 11;
  }
  else {
    uint64_t v7 = ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v3 += v7;
LABEL_16:
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v3 += v11;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_175FAD0(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0xF) != 0)
  {
    if (v4)
    {
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      data = (std::string *)result[1].__r_.__value_.__l.__data_;
      if (!data)
      {
        std::string::size_type size = v3->__r_.__value_.__l.__size_;
        uint64_t v8 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
        if (size) {
          uint64_t v8 = (void *)*v8;
        }
        data = (std::string *)sub_178C958((uint64_t)v8);
        v3[1].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      }
      if (*(void *)(a2 + 24)) {
        unint64_t v9 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        unint64_t v9 = &off_25484A8;
      }
      uint64_t result = sub_175D7BC(data, (uint64_t)v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_28;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    unint64_t v10 = (std::string *)v3[1].__r_.__value_.__l.__size_;
    if (!v10)
    {
      std::string::size_type v11 = v3->__r_.__value_.__l.__size_;
      unint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        unint64_t v12 = (void *)*v12;
      }
      unint64_t v10 = (std::string *)sub_178CA08((uint64_t)v12);
      v3[1].__r_.__value_.__l.__size_ = (std::string::size_type)v10;
    }
    if (*(void *)(a2 + 32)) {
      uint64_t v13 = *(uint64_t (****)())(a2 + 32);
    }
    else {
      uint64_t v13 = &off_2548518;
    }
    uint64_t result = sub_175EEC4(v10, (uint64_t)v13);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0)
      {
LABEL_7:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
        goto LABEL_8;
      }
LABEL_6:
      LODWORD(v3[2].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 48);
      goto LABEL_7;
    }
LABEL_28:
    v3[1].__r_.__value_.__r.__words[2] = *(void *)(a2 + 40);
    if ((v4 & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_8:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_175FC08()
{
  return 1;
}

void *sub_175FC10@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PlaceContextMetadata");
}

void *sub_175FC24(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_175FCA8((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

uint64_t sub_175FCA8(uint64_t result)
{
  if ((uint64_t (***)())result != &off_25485C0)
  {
    uint64_t v1 = (void *)result;
    uint64_t v2 = *(void *)(result + 24);
    if (v2)
    {
      sub_1762B94(v2);
      operator delete();
    }
    uint64_t v3 = v1[4];
    if (v3)
    {
      sub_1761494(v3);
      operator delete();
    }
    uint64_t v4 = v1[5];
    if (v4)
    {
      sub_1761B9C(v4);
      operator delete();
    }
    uint64_t v5 = v1[6];
    if (v5)
    {
      sub_161E7F0(v5);
      operator delete();
    }
    uint64_t result = v1[7];
    if (result)
    {
      sub_17622A4(result);
      operator delete();
    }
  }
  return result;
}

void sub_175FD94(void *a1)
{
  sub_175FC24(a1);

  operator delete();
}

uint64_t sub_175FDCC(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 0x1F) == 0) {
    goto LABEL_8;
  }
  if (v2)
  {
    uint64_t result = sub_175FE78(*(void *)(result + 24));
    if ((v2 & 2) == 0)
    {
LABEL_4:
      if ((v2 & 4) == 0) {
        goto LABEL_5;
      }
LABEL_14:
      uint64_t result = sub_175FFE4(*(void *)(v1 + 40));
      if ((v2 & 8) == 0)
      {
LABEL_6:
        if ((v2 & 0x10) == 0) {
          goto LABEL_8;
        }
        goto LABEL_7;
      }
      goto LABEL_15;
    }
  }
  else if ((v2 & 2) == 0)
  {
    goto LABEL_4;
  }
  uint64_t result = sub_175FF50(*(void *)(v1 + 32));
  if ((v2 & 4) != 0) {
    goto LABEL_14;
  }
LABEL_5:
  if ((v2 & 8) == 0) {
    goto LABEL_6;
  }
LABEL_15:
  uint64_t result = sub_161E82C(*(void *)(v1 + 48));
  if ((v2 & 0x10) != 0) {
LABEL_7:
  }
    uint64_t result = sub_1760078(*(void *)(v1 + 56));
LABEL_8:
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 56) = 0;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_175FE78(uint64_t a1)
{
  sub_18843A4((unsigned char *)(a1 + 16));
  uint64_t v2 = *(unsigned int *)(a1 + 56);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v4 = *v3++;
      sub_173FA7C(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(a1 + 56) = 0;
  }
  uint64_t result = sub_188CC00(a1 + 72);
  int v6 = *(_DWORD *)(a1 + 40);
  if ((v6 & 3) != 0)
  {
    if (v6) {
      uint64_t result = (uint64_t)sub_16CD894(*(void *)(a1 + 96));
    }
    if ((v6 & 2) != 0) {
      uint64_t result = sub_1762CB8(*(void *)(a1 + 104));
    }
  }
  if ((v6 & 0xFC) != 0)
  {
    *(void *)(a1 + 144) = 0;
    *(_OWORD *)(a1 + 112) = 0u;
    *(_OWORD *)(a1 + 128) = 0u;
  }
  if ((v6 & 0x700) != 0)
  {
    *(_DWORD *)(a1 + 160) = 0;
    *(void *)(a1 + 152) = 0;
  }
  char v8 = *(unsigned char *)(a1 + 8);
  uint64_t v7 = a1 + 8;
  *(_DWORD *)(v7 + 32) = 0;
  if (v8)
  {
    return sub_188B4AC((uint64_t *)v7);
  }
  return result;
}

uint64_t sub_175FF50(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_173FA7C(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  if (*(unsigned char *)(v1 + 16)) {
    uint64_t result = (uint64_t)sub_16CD894(*(void *)(v1 + 48));
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = v1 + 8;
  *(_DWORD *)(v5 + 48) = 0;
  *(_DWORD *)(v5 + 8) = 0;
  if (v6)
  {
    return sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

uint64_t sub_175FFE4(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_173FA7C(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  if (*(unsigned char *)(v1 + 16)) {
    uint64_t result = (uint64_t)sub_16CD894(*(void *)(v1 + 48));
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = v1 + 8;
  *(_DWORD *)(v5 + 48) = 0;
  *(_DWORD *)(v5 + 8) = 0;
  if (v6)
  {
    return sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

uint64_t sub_1760078(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_175FE78(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  if (*(unsigned char *)(v1 + 16)) {
    uint64_t result = sub_175FE78(*(void *)(v1 + 48));
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = v1 + 8;
  *(_DWORD *)(v5 + 8) = 0;
  if (v6)
  {
    return sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

char *sub_1760108(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v31 = a2;
  if (sub_11947B8((uint64_t)a3, &v31, a3[11].i32[1])) {
    return v31;
  }
  char v6 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v7 = v31 + 1;
    unsigned int v8 = *v31;
    if (*v31 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v31, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v31 + 2;
      }
    }
    uint64_t v31 = v7;
    unsigned int v11 = v8 >> 3;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 8) {
          goto LABEL_48;
        }
        unint64_t v12 = v7 + 1;
        unint64_t v13 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        int v15 = v13 + (v14 << 7);
        unint64_t v13 = (v15 - 128);
        if (v14 < 0)
        {
          uint64_t v31 = (char *)sub_188C138((uint64_t)v7, (v15 - 128));
          if (!v31) {
            return 0;
          }
          unint64_t v13 = v29;
        }
        else
        {
          unint64_t v12 = v7 + 2;
LABEL_13:
          uint64_t v31 = v12;
        }
        if (sub_1479AA4(v13))
        {
          *(_DWORD *)(a1 + 16) |= 0x20u;
          *(_DWORD *)(a1 + 64) = v13;
        }
        else
        {
          if (*v6) {
            uint64_t v30 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v30 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(1, v13, v30);
        }
        goto LABEL_56;
      case 2u:
        if (v8 != 18) {
          goto LABEL_48;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v19 = *(void *)(a1 + 24);
        if (!v19)
        {
          int v20 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            int v20 = (void *)*v20;
          }
          uint64_t v19 = sub_178CDA8((uint64_t)v20);
          *(void *)(a1 + 24) = v19;
          uint64_t v7 = v31;
        }
        int v18 = (char *)sub_1265F8C(a3, v19, (unsigned __int8 *)v7);
        goto LABEL_55;
      case 3u:
        if (v8 != 26) {
          goto LABEL_48;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v21 = *(void *)(a1 + 32);
        if (!v21)
        {
          uint64_t v22 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v22 = (void *)*v22;
          }
          uint64_t v21 = sub_178CBC4((uint64_t)v22);
          *(void *)(a1 + 32) = v21;
          uint64_t v7 = v31;
        }
        int v18 = sub_176049C(a3, v21, (unsigned __int8 *)v7);
        goto LABEL_55;
      case 4u:
        if (v8 != 34) {
          goto LABEL_48;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v23 = *(void *)(a1 + 40);
        if (!v23)
        {
          uint64_t v24 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v24 = (void *)*v24;
          }
          uint64_t v23 = sub_178CC68((uint64_t)v24);
          *(void *)(a1 + 40) = v23;
          uint64_t v7 = v31;
        }
        int v18 = sub_176052C(a3, v23, (unsigned __int8 *)v7);
        goto LABEL_55;
      default:
        if (v11 == 100)
        {
          if (v8 == 34)
          {
            *(_DWORD *)(a1 + 16) |= 8u;
            uint64_t v25 = *(void *)(a1 + 48);
            if (!v25)
            {
              uint64_t v26 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
              if (*v6) {
                uint64_t v26 = (void *)*v26;
              }
              uint64_t v25 = sub_1621450((uint64_t)v26);
              *(void *)(a1 + 48) = v25;
              uint64_t v7 = v31;
            }
            int v18 = sub_12FEA4C(a3, v25, (unsigned __int8 *)v7);
            goto LABEL_55;
          }
        }
        else if (v11 == 101 && v8 == 42)
        {
          *(_DWORD *)(a1 + 16) |= 0x10u;
          uint64_t v16 = *(void **)(a1 + 56);
          if (!v16)
          {
            unsigned int v17 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v6) {
              unsigned int v17 = (void *)*v17;
            }
            uint64_t v16 = sub_178CD0C((uint64_t)v17);
            *(void *)(a1 + 56) = v16;
            uint64_t v7 = v31;
          }
          int v18 = sub_17605BC(a3, (uint64_t)v16, (unsigned __int8 *)v7);
          goto LABEL_55;
        }
LABEL_48:
        if (v8) {
          BOOL v27 = (v8 & 7) == 4;
        }
        else {
          BOOL v27 = 1;
        }
        if (!v27)
        {
          if (*v6)
          {
            unint64_t v28 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            unint64_t v28 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v7 = v31;
          }
          int v18 = (char *)sub_1885AC0(v8, v28, v7, a3);
LABEL_55:
          uint64_t v31 = v18;
          if (!v18) {
            return 0;
          }
LABEL_56:
          if (sub_11947B8((uint64_t)a3, &v31, a3[11].i32[1])) {
            return v31;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return v31;
    }
  }
}

char *sub_176049C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1761590(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_176052C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1761C98(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_17605BC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17623A0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_176064C(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 0x20) != 0)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 64);
    *uint64_t v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 24);
    *uint64_t v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 44);
    v4[1] = v11;
    if (v11 > 0x7F) {
      unint64_t v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      unint64_t v12 = v4 + 2;
    }
    uint64_t v4 = sub_1763540(v10, v12, a3);
    if ((v6 & 2) == 0)
    {
LABEL_10:
      if ((v6 & 4) == 0) {
        goto LABEL_11;
      }
      goto LABEL_26;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_10;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v13 = *(void *)(a1 + 32);
  *uint64_t v4 = 26;
  unsigned int v14 = *(_DWORD *)(v13 + 20);
  v4[1] = v14;
  if (v14 > 0x7F) {
    int v15 = sub_188A9CC(v14, v4 + 1);
  }
  else {
    int v15 = v4 + 2;
  }
  uint64_t v4 = sub_1761844(v13, (unint64_t)v15, a3);
  if ((v6 & 4) == 0)
  {
LABEL_11:
    if ((v6 & 8) == 0) {
      goto LABEL_12;
    }
    goto LABEL_32;
  }
LABEL_26:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v16 = *(void *)(a1 + 40);
  *uint64_t v4 = 34;
  unsigned int v17 = *(_DWORD *)(v16 + 20);
  v4[1] = v17;
  if (v17 > 0x7F) {
    int v18 = sub_188A9CC(v17, v4 + 1);
  }
  else {
    int v18 = v4 + 2;
  }
  uint64_t v4 = sub_1761F4C(v16, (unint64_t)v18, a3);
  if ((v6 & 8) == 0)
  {
LABEL_12:
    if ((v6 & 0x10) == 0) {
      goto LABEL_44;
    }
    goto LABEL_38;
  }
LABEL_32:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v19 = *(void *)(a1 + 48);
  *(_WORD *)uint64_t v4 = 1698;
  unsigned int v20 = *(_DWORD *)(v19 + 20);
  v4[2] = v20;
  if (v20 > 0x7F) {
    uint64_t v21 = sub_188A9CC(v20, v4 + 2);
  }
  else {
    uint64_t v21 = v4 + 3;
  }
  uint64_t v4 = sub_161F088(v19, (unint64_t)v21, a3);
  if ((v6 & 0x10) != 0)
  {
LABEL_38:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v22 = *(void *)(a1 + 56);
    *(_WORD *)uint64_t v4 = 1706;
    unsigned int v23 = *(_DWORD *)(v22 + 20);
    v4[2] = v23;
    if (v23 > 0x7F) {
      uint64_t v24 = sub_188A9CC(v23, v4 + 2);
    }
    else {
      uint64_t v24 = v4 + 3;
    }
    uint64_t v4 = sub_17625A8(v22, (unint64_t)v24, a3);
  }
LABEL_44:
  uint64_t v25 = *(void *)(a1 + 8);
  if ((v25 & 1) == 0) {
    return v4;
  }
  unint64_t v27 = v25 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v27 + 31) < 0)
  {
    unint64_t v28 = *(void **)(v27 + 8);
    uint64_t v29 = *(void *)(v27 + 16);
  }
  else
  {
    unint64_t v28 = (void *)(v27 + 8);
    LODWORD(v29) = *(unsigned __int8 *)(v27 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v29)
  {
    uint64_t v30 = (int)v29;
    memcpy(v4, v28, (int)v29);
    v4 += v30;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v28, v29, v4);
}

uint64_t sub_1760988(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0x3F) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_20;
  }
  if (v2)
  {
    uint64_t v4 = sub_1763C40(*(void *)(a1 + 24));
    uint64_t v3 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_7:
    uint64_t v5 = sub_1761A6C(*(void *)(a1 + 32));
    v3 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_8:
  if ((v2 & 4) != 0)
  {
    uint64_t v6 = sub_1762174(*(void *)(a1 + 40));
    v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 8) == 0)
    {
LABEL_10:
      if ((v2 & 0x10) == 0) {
        goto LABEL_11;
      }
      goto LABEL_15;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_10;
  }
  uint64_t v7 = sub_161F474(*(void *)(a1 + 48));
  v3 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v2 & 0x10) == 0)
  {
LABEL_11:
    if ((v2 & 0x20) == 0) {
      goto LABEL_20;
    }
    goto LABEL_16;
  }
LABEL_15:
  uint64_t v8 = sub_1762754(*(void *)(a1 + 56));
  v3 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v2 & 0x20) == 0) {
    goto LABEL_20;
  }
LABEL_16:
  int v9 = *(_DWORD *)(a1 + 64);
  if (v9 < 0) {
    uint64_t v10 = 11;
  }
  else {
    uint64_t v10 = ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v3 += v10;
LABEL_20:
  uint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v13 + 31) < 0) {
      uint64_t v14 = *(void *)(v13 + 16);
    }
    else {
      uint64_t v14 = *(unsigned __int8 *)(v13 + 31);
    }
    v3 += v14;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

void sub_1760B34(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0x3F) != 0)
  {
    if (v4)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v6 = *(void *)(a1 + 24);
      if (!v6)
      {
        uint64_t v7 = *(void *)(a1 + 8);
        uint64_t v8 = (void *)(v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (v7) {
          uint64_t v8 = (void *)*v8;
        }
        uint64_t v6 = sub_178CDA8((uint64_t)v8);
        *(void *)(a1 + 24) = v6;
      }
      if (*(void *)(a2 + 24)) {
        int v9 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        int v9 = &off_25486C0;
      }
      sub_1760D4C(v6, (uint64_t)v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_30;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v10 = *(void *)(a1 + 32);
    if (!v10)
    {
      uint64_t v11 = *(void *)(a1 + 8);
      unint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        unint64_t v12 = (void *)*v12;
      }
      uint64_t v10 = sub_178CBC4((uint64_t)v12);
      *(void *)(a1 + 32) = v10;
    }
    if (*(void *)(a2 + 32)) {
      unint64_t v13 = *(uint64_t (****)())(a2 + 32);
    }
    else {
      unint64_t v13 = &off_2548608;
    }
    sub_1760FE8(v10, (uint64_t)v13);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_38;
    }
LABEL_30:
    *(_DWORD *)(a1 + 16) |= 4u;
    uint64_t v14 = *(void *)(a1 + 40);
    if (!v14)
    {
      uint64_t v15 = *(void *)(a1 + 8);
      uint64_t v16 = (void *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
      if (v15) {
        uint64_t v16 = (void *)*v16;
      }
      uint64_t v14 = sub_178CC68((uint64_t)v16);
      *(void *)(a1 + 40) = v14;
    }
    if (*(void *)(a2 + 40)) {
      unsigned int v17 = *(uint64_t (****)())(a2 + 40);
    }
    else {
      unsigned int v17 = &off_2548648;
    }
    sub_1760FE8(v14, (uint64_t)v17);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0) {
        goto LABEL_7;
      }
      goto LABEL_46;
    }
LABEL_38:
    *(_DWORD *)(a1 + 16) |= 8u;
    uint64_t v18 = *(void *)(a1 + 48);
    if (!v18)
    {
      uint64_t v19 = *(void *)(a1 + 8);
      unsigned int v20 = (void *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
      if (v19) {
        unsigned int v20 = (void *)*v20;
      }
      uint64_t v18 = sub_1621450((uint64_t)v20);
      *(void *)(a1 + 48) = v18;
    }
    if (*(void *)(a2 + 48)) {
      uint64_t v21 = *(uint64_t (****)())(a2 + 48);
    }
    else {
      uint64_t v21 = &off_2541830;
    }
    sub_161F630(v18, (uint64_t)v21);
    if ((v4 & 0x10) == 0)
    {
LABEL_7:
      if ((v4 & 0x20) == 0)
      {
LABEL_9:
        *(_DWORD *)(a1 + 16) |= v4;
        goto LABEL_10;
      }
LABEL_8:
      *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
      goto LABEL_9;
    }
LABEL_46:
    *(_DWORD *)(a1 + 16) |= 0x10u;
    uint64_t v22 = *(void **)(a1 + 56);
    if (!v22)
    {
      uint64_t v23 = *(void *)(a1 + 8);
      uint64_t v24 = (void *)(v23 & 0xFFFFFFFFFFFFFFFCLL);
      if (v23) {
        uint64_t v24 = (void *)*v24;
      }
      uint64_t v22 = sub_178CD0C((uint64_t)v24);
      *(void *)(a1 + 56) = v22;
    }
    if (*(void *)(a2 + 56)) {
      uint64_t v25 = *(uint64_t (****)())(a2 + 56);
    }
    else {
      uint64_t v25 = &off_2548688;
    }
    sub_1761128((uint64_t)v22, (uint64_t)v25);
    if ((v4 & 0x20) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
LABEL_10:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_1760D4C(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 56);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_124EA70((uint64_t *)(a1 + 48), v6, v5, v4, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v7 = *(_DWORD *)(a1 + 56) + v4;
    *(_DWORD *)(a1 + 56) = v7;
    uint64_t v8 = *(int **)(a1 + 64);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 80);
  if (v9)
  {
    uint64_t v10 = (const std::string **)(*(void *)(a2 + 88) + 8);
    uint64_t v11 = (std::string **)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_188FB98(a1 + 72, v11, v10, v9, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v12 = *(_DWORD *)(a1 + 80) + v9;
    *(_DWORD *)(a1 + 80) = v12;
    unint64_t v13 = *(int **)(a1 + 88);
    if (*v13 < v12) {
      *unint64_t v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 40);
  if ((_BYTE)v14)
  {
    if (v14)
    {
      *(_DWORD *)(a1 + 40) |= 1u;
      uint64_t v16 = *(void *)(a1 + 96);
      if (!v16)
      {
        uint64_t v17 = *(void *)(a1 + 8);
        uint64_t v18 = (void *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
        if (v17) {
          uint64_t v18 = (void *)*v18;
        }
        uint64_t v16 = sub_185089C((uint64_t)v18);
        *(void *)(a1 + 96) = v16;
      }
      if (*(void *)(a2 + 96)) {
        uint64_t v19 = *(uint64_t (****)())(a2 + 96);
      }
      else {
        uint64_t v19 = &off_254D2B0;
      }
      sub_16CE3CC(v16, (uint64_t)v19);
      if ((v14 & 2) == 0)
      {
LABEL_10:
        if ((v14 & 4) == 0) {
          goto LABEL_11;
        }
        goto LABEL_44;
      }
    }
    else if ((v14 & 2) == 0)
    {
      goto LABEL_10;
    }
    *(_DWORD *)(a1 + 40) |= 2u;
    unsigned int v20 = *(void **)(a1 + 104);
    if (!v20)
    {
      uint64_t v21 = *(void *)(a1 + 8);
      uint64_t v22 = (void *)(v21 & 0xFFFFFFFFFFFFFFFCLL);
      if (v21) {
        uint64_t v22 = (void *)*v22;
      }
      unsigned int v20 = sub_178D160((uint64_t)v22);
      *(void *)(a1 + 104) = v20;
    }
    if (*(void *)(a2 + 104)) {
      uint64_t v23 = *(uint64_t (****)())(a2 + 104);
    }
    else {
      uint64_t v23 = &off_25488E0;
    }
    sub_1763F4C((uint64_t)v20, (uint64_t)v23);
    if ((v14 & 4) == 0)
    {
LABEL_11:
      if ((v14 & 8) == 0) {
        goto LABEL_12;
      }
      goto LABEL_45;
    }
LABEL_44:
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    if ((v14 & 8) == 0)
    {
LABEL_12:
      if ((v14 & 0x10) == 0) {
        goto LABEL_13;
      }
      goto LABEL_46;
    }
LABEL_45:
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    if ((v14 & 0x10) == 0)
    {
LABEL_13:
      if ((v14 & 0x20) == 0) {
        goto LABEL_14;
      }
      goto LABEL_47;
    }
LABEL_46:
    *(_DWORD *)(a1 + 128) = *(_DWORD *)(a2 + 128);
    if ((v14 & 0x20) == 0)
    {
LABEL_14:
      if ((v14 & 0x40) == 0) {
        goto LABEL_15;
      }
      goto LABEL_48;
    }
LABEL_47:
    *(_DWORD *)(a1 + 132) = *(_DWORD *)(a2 + 132);
    if ((v14 & 0x40) == 0)
    {
LABEL_15:
      if ((v14 & 0x80) == 0)
      {
LABEL_17:
        *(_DWORD *)(a1 + 40) |= v14;
        goto LABEL_18;
      }
LABEL_16:
      *(void *)(a1 + 144) = *(void *)(a2 + 144);
      goto LABEL_17;
    }
LABEL_48:
    *(void *)(a1 + 136) = *(void *)(a2 + 136);
    if ((v14 & 0x80) == 0) {
      goto LABEL_17;
    }
    goto LABEL_16;
  }
LABEL_18:
  if ((v14 & 0x700) == 0) {
    goto LABEL_24;
  }
  if ((v14 & 0x100) == 0)
  {
    if ((v14 & 0x200) == 0) {
      goto LABEL_21;
    }
LABEL_51:
    *(_DWORD *)(a1 + 156) = *(_DWORD *)(a2 + 156);
    if ((v14 & 0x400) == 0) {
      goto LABEL_23;
    }
    goto LABEL_22;
  }
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  if ((v14 & 0x200) != 0) {
    goto LABEL_51;
  }
LABEL_21:
  if ((v14 & 0x400) != 0) {
LABEL_22:
  }
    *(_DWORD *)(a1 + 160) = *(_DWORD *)(a2 + 160);
LABEL_23:
  *(_DWORD *)(a1 + 40) |= v14;
LABEL_24:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v15 = *(void *)(a2 + 8);
  if (v15)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v15 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_1760FE8(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_124EA70((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    uint64_t v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 3) != 0)
  {
    if (v9)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v10 = *(void *)(a1 + 48);
      if (!v10)
      {
        uint64_t v11 = *(void *)(a1 + 8);
        int v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
        if (v11) {
          int v12 = (void *)*v12;
        }
        uint64_t v10 = sub_185089C((uint64_t)v12);
        *(void *)(a1 + 48) = v10;
      }
      if (*(void *)(a2 + 48)) {
        unint64_t v13 = *(uint64_t (****)())(a2 + 48);
      }
      else {
        unint64_t v13 = &off_254D2B0;
      }
      sub_16CE3CC(v10, (uint64_t)v13);
    }
    if ((v9 & 2) != 0) {
      *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
    }
    *(_DWORD *)(a1 + 16) |= v9;
  }
  uint64_t v14 = *(void *)(a2 + 8);
  if (v14)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v14 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_1761128(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_12C3474((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    uint64_t v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  if (*(unsigned char *)(a2 + 16))
  {
    int v9 = *(uint64_t (****)())(a2 + 48);
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v10 = *(void *)(a1 + 48);
    if (!v10)
    {
      uint64_t v11 = *(void *)(a1 + 8);
      int v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        int v12 = (void *)*v12;
      }
      uint64_t v10 = sub_178CDA8((uint64_t)v12);
      *(void *)(a1 + 48) = v10;
      int v9 = *(uint64_t (****)())(a2 + 48);
    }
    if (v9) {
      unint64_t v13 = v9;
    }
    else {
      unint64_t v13 = &off_25486C0;
    }
    sub_1760D4C(v10, (uint64_t)v13);
  }
  uint64_t v14 = *(void *)(a2 + 8);
  if (v14)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v14 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_176124C(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if (v2)
  {
    uint64_t result = sub_17612D4(*(void *)(a1 + 24));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 2) != 0)
  {
    uint64_t result = sub_1761358(*(void *)(a1 + 32));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 4) != 0)
  {
    uint64_t result = sub_17613BC(*(void *)(a1 + 40));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 8) != 0)
  {
    uint64_t result = sub_161FA88(*(void *)(a1 + 48));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 0x10) == 0) {
    return 1;
  }
  uint64_t result = sub_1761420(*(void *)(a1 + 56));
  if (result) {
    return 1;
  }
  return result;
}

uint64_t sub_17612D4(uint64_t a1)
{
  uint64_t result = sub_18856CC(a1 + 16);
  if (result)
  {
    uint64_t v3 = *(unsigned int *)(a1 + 56);
    while ((int)v3 >= 1)
    {
      uint64_t v4 = v3 - 1;
      char v5 = sub_174147C(*(void *)(*(void *)(a1 + 64) + 8 * v3));
      uint64_t v3 = v4;
      if ((v5 & 1) == 0) {
        return 0;
      }
    }
    int v6 = *(_DWORD *)(a1 + 40);
    if (v6)
    {
      uint64_t result = sub_16CE508(*(void *)(a1 + 96));
      if (!result) {
        return result;
      }
      int v6 = *(_DWORD *)(a1 + 40);
    }
    if ((v6 & 2) == 0) {
      return 1;
    }
    uint64_t result = sub_17640BC(*(void *)(a1 + 104));
    if (result) {
      return 1;
    }
  }
  return result;
}

uint64_t sub_1761358(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  while ((int)v2 >= 1)
  {
    uint64_t v3 = v2 - 1;
    char v4 = sub_174147C(*(void *)(*(void *)(a1 + 40) + 8 * v2));
    uint64_t v2 = v3;
    if ((v4 & 1) == 0) {
      return 0;
    }
  }
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 1;
  }
  uint64_t result = sub_16CE508(*(void *)(a1 + 48));
  if (result) {
    return 1;
  }
  return result;
}

uint64_t sub_17613BC(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  while ((int)v2 >= 1)
  {
    uint64_t v3 = v2 - 1;
    char v4 = sub_174147C(*(void *)(*(void *)(a1 + 40) + 8 * v2));
    uint64_t v2 = v3;
    if ((v4 & 1) == 0) {
      return 0;
    }
  }
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 1;
  }
  uint64_t result = sub_16CE508(*(void *)(a1 + 48));
  if (result) {
    return 1;
  }
  return result;
}

uint64_t sub_1761420(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  while ((int)v2 >= 1)
  {
    uint64_t v3 = v2 - 1;
    char v4 = sub_17612D4(*(void *)(*(void *)(a1 + 40) + 8 * v2));
    uint64_t v2 = v3;
    if ((v4 & 1) == 0) {
      return 0;
    }
  }
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 1;
  }
  uint64_t result = sub_17612D4(*(void *)(a1 + 48));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_1761484@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.MapsResult");
}

uint64_t sub_1761494(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  char v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_2548608)
  {
    uint64_t v6 = *(void *)(a1 + 48);
    if (v6)
    {
      sub_184AFBC(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  sub_124DECC((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1761558(uint64_t a1)
{
  sub_1761494(a1);

  operator delete();
}

char *sub_1761590(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v30 = a2;
  if (sub_11947B8((uint64_t)a3, &v30, a3[11].i32[1])) {
    return v30;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    int v7 = v30 + 1;
    unsigned int v8 = *v30;
    if (*v30 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        int v7 = (char *)sub_188C180((uint64_t)v30, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        int v7 = v30 + 2;
      }
    }
    uint64_t v30 = v7;
    unsigned int v11 = v8 >> 3;
    if (v8 >> 3 == 3)
    {
      if (v8 == 26)
      {
        uint64_t v16 = v7 - 1;
        while (1)
        {
          uint64_t v17 = (unsigned __int8 *)(v16 + 1);
          uint64_t v30 = v16 + 1;
          uint64_t v18 = *(_DWORD **)(a1 + 40);
          if (v18 && (uint64_t v19 = *(int *)(a1 + 32), (int)v19 < *v18))
          {
            *(_DWORD *)(a1 + 32) = v19 + 1;
            uint64_t v20 = *(void *)&v18[2 * v19 + 2];
          }
          else
          {
            uint64_t v21 = sub_178B458(*(void *)(a1 + 24));
            uint64_t v20 = sub_188CDC8(a1 + 24, v21);
            uint64_t v17 = (unsigned __int8 *)v30;
          }
          uint64_t v16 = (char *)sub_123B124(a3, v20, v17);
          uint64_t v30 = v16;
          if (!v16) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v16 || *v16 != 26) {
            goto LABEL_44;
          }
        }
      }
      goto LABEL_14;
    }
    if (v11 == 2) {
      break;
    }
    if (v11 != 1 || v8 != 10) {
      goto LABEL_14;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v26 = *(void *)(a1 + 48);
    if (!v26)
    {
      unint64_t v27 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        unint64_t v27 = (void *)*v27;
      }
      uint64_t v26 = sub_185089C((uint64_t)v27);
      *(void *)(a1 + 48) = v26;
      int v7 = v30;
    }
    uint64_t v15 = sub_12688D0(a3, v26, (unsigned __int8 *)v7);
LABEL_43:
    uint64_t v30 = v15;
    if (!v15) {
      return 0;
    }
LABEL_44:
    if (sub_11947B8((uint64_t)a3, &v30, a3[11].i32[1])) {
      return v30;
    }
  }
  if (v8 == 16)
  {
    uint64_t v22 = v7 + 1;
    unint64_t v23 = *v7;
    if ((*v7 & 0x80000000) == 0) {
      goto LABEL_35;
    }
    int v24 = *v22;
    int v25 = v23 + (v24 << 7);
    unint64_t v23 = (v25 - 128);
    if (v24 < 0)
    {
      uint64_t v30 = (char *)sub_188C138((uint64_t)v7, (v25 - 128));
      if (!v30) {
        return 0;
      }
      unint64_t v23 = v28;
    }
    else
    {
      uint64_t v22 = v7 + 2;
LABEL_35:
      uint64_t v30 = v22;
    }
    if (sub_13E78E4(v23))
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      *(_DWORD *)(a1 + 56) = v23;
    }
    else
    {
      if (*v6) {
        uint64_t v29 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        uint64_t v29 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      sub_188C020(2, v23, v29);
    }
    goto LABEL_44;
  }
LABEL_14:
  if (v8) {
    BOOL v13 = (v8 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v6)
    {
      uint64_t v14 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v7 = v30;
    }
    uint64_t v15 = (char *)sub_1885AC0(v8, v14, v7, a3);
    goto LABEL_43;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v30;
  }
  return 0;
}

char *sub_1761844(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*a3 <= __dst) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 48);
    *char v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 44);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    char v4 = sub_184B3AC(v7, v9, a3);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 56);
    *char v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v13 = *(_DWORD *)(a1 + 32);
  if (v13)
  {
    for (int i = 0; i != v13; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v15 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *char v4 = 26;
      unsigned int v16 = *(_DWORD *)(v15 + 44);
      v4[1] = v16;
      if (v16 > 0x7F) {
        uint64_t v17 = sub_188A9CC(v16, v4 + 1);
      }
      else {
        uint64_t v17 = v4 + 2;
      }
      char v4 = sub_1740568(v15, v17, a3);
    }
  }
  uint64_t v18 = *(void *)(a1 + 8);
  if ((v18 & 1) == 0) {
    return v4;
  }
  unint64_t v20 = v18 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v20 + 31) < 0)
  {
    uint64_t v21 = *(void **)(v20 + 8);
    uint64_t v22 = *(void *)(v20 + 16);
  }
  else
  {
    uint64_t v21 = (void *)(v20 + 8);
    LODWORD(v22) = *(unsigned __int8 *)(v20 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v22)
  {
    uint64_t v23 = (int)v22;
    memcpy(v4, v21, (int)v22);
    v4 += v23;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v21, v22, v4);
}

uint64_t sub_1761A6C(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    char v4 = (uint64_t *)(v3 + 8);
  }
  else {
    char v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_1740D5C(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 3) != 0)
  {
    if (v8)
    {
      uint64_t v9 = sub_184B568(*(void *)(a1 + 48));
      v2 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v8 & 2) != 0)
    {
      int v10 = *(_DWORD *)(a1 + 56);
      if (v10 < 0) {
        uint64_t v11 = 11;
      }
      else {
        uint64_t v11 = ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
      v2 += v11;
    }
  }
  uint64_t v12 = *(void *)(a1 + 8);
  if (v12)
  {
    unint64_t v14 = v12 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v14 + 31) < 0) {
      uint64_t v15 = *(void *)(v14 + 16);
    }
    else {
      uint64_t v15 = *(unsigned __int8 *)(v14 + 31);
    }
    v2 += v15;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

void *sub_1761B8C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.CollectionResult");
}

uint64_t sub_1761B9C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  char v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_2548648)
  {
    uint64_t v6 = *(void *)(a1 + 48);
    if (v6)
    {
      sub_184AFBC(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  sub_124DECC((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1761C60(uint64_t a1)
{
  sub_1761B9C(a1);

  operator delete();
}

char *sub_1761C98(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v30 = a2;
  if (sub_11947B8((uint64_t)a3, &v30, a3[11].i32[1])) {
    return v30;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v30 + 1;
    unsigned int v8 = *v30;
    if (*v30 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v30, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v30 + 2;
      }
    }
    uint64_t v30 = v7;
    unsigned int v11 = v8 >> 3;
    if (v8 >> 3 == 3)
    {
      if (v8 == 26)
      {
        unsigned int v16 = v7 - 1;
        while (1)
        {
          uint64_t v17 = (unsigned __int8 *)(v16 + 1);
          uint64_t v30 = v16 + 1;
          uint64_t v18 = *(_DWORD **)(a1 + 40);
          if (v18 && (uint64_t v19 = *(int *)(a1 + 32), (int)v19 < *v18))
          {
            *(_DWORD *)(a1 + 32) = v19 + 1;
            uint64_t v20 = *(void *)&v18[2 * v19 + 2];
          }
          else
          {
            uint64_t v21 = sub_178B458(*(void *)(a1 + 24));
            uint64_t v20 = sub_188CDC8(a1 + 24, v21);
            uint64_t v17 = (unsigned __int8 *)v30;
          }
          unsigned int v16 = (char *)sub_123B124(a3, v20, v17);
          uint64_t v30 = v16;
          if (!v16) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v16 || *v16 != 26) {
            goto LABEL_44;
          }
        }
      }
      goto LABEL_14;
    }
    if (v11 == 2) {
      break;
    }
    if (v11 != 1 || v8 != 10) {
      goto LABEL_14;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v26 = *(void *)(a1 + 48);
    if (!v26)
    {
      unint64_t v27 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        unint64_t v27 = (void *)*v27;
      }
      uint64_t v26 = sub_185089C((uint64_t)v27);
      *(void *)(a1 + 48) = v26;
      uint64_t v7 = v30;
    }
    uint64_t v15 = sub_12688D0(a3, v26, (unsigned __int8 *)v7);
LABEL_43:
    uint64_t v30 = v15;
    if (!v15) {
      return 0;
    }
LABEL_44:
    if (sub_11947B8((uint64_t)a3, &v30, a3[11].i32[1])) {
      return v30;
    }
  }
  if (v8 == 16)
  {
    uint64_t v22 = v7 + 1;
    unint64_t v23 = *v7;
    if ((*v7 & 0x80000000) == 0) {
      goto LABEL_35;
    }
    int v24 = *v22;
    int v25 = v23 + (v24 << 7);
    unint64_t v23 = (v25 - 128);
    if (v24 < 0)
    {
      uint64_t v30 = (char *)sub_188C138((uint64_t)v7, (v25 - 128));
      if (!v30) {
        return 0;
      }
      unint64_t v23 = v28;
    }
    else
    {
      uint64_t v22 = v7 + 2;
LABEL_35:
      uint64_t v30 = v22;
    }
    if (sub_13E78E4(v23))
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      *(_DWORD *)(a1 + 56) = v23;
    }
    else
    {
      if (*v6) {
        uint64_t v29 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        uint64_t v29 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      sub_188C020(2, v23, v29);
    }
    goto LABEL_44;
  }
LABEL_14:
  if (v8) {
    BOOL v13 = (v8 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v6)
    {
      unint64_t v14 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = v30;
    }
    uint64_t v15 = (char *)sub_1885AC0(v8, v14, v7, a3);
    goto LABEL_43;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v30;
  }
  return 0;
}

char *sub_1761F4C(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*a3 <= __dst) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 48);
    *char v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 44);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    char v4 = sub_184B3AC(v7, v9, a3);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 56);
    *char v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v13 = *(_DWORD *)(a1 + 32);
  if (v13)
  {
    for (int i = 0; i != v13; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v15 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *char v4 = 26;
      unsigned int v16 = *(_DWORD *)(v15 + 44);
      v4[1] = v16;
      if (v16 > 0x7F) {
        uint64_t v17 = sub_188A9CC(v16, v4 + 1);
      }
      else {
        uint64_t v17 = v4 + 2;
      }
      char v4 = sub_1740568(v15, v17, a3);
    }
  }
  uint64_t v18 = *(void *)(a1 + 8);
  if ((v18 & 1) == 0) {
    return v4;
  }
  unint64_t v20 = v18 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v20 + 31) < 0)
  {
    uint64_t v21 = *(void **)(v20 + 8);
    uint64_t v22 = *(void *)(v20 + 16);
  }
  else
  {
    uint64_t v21 = (void *)(v20 + 8);
    LODWORD(v22) = *(unsigned __int8 *)(v20 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v22)
  {
    uint64_t v23 = (int)v22;
    memcpy(v4, v21, (int)v22);
    v4 += v23;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v21, v22, v4);
}

uint64_t sub_1762174(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    char v4 = (uint64_t *)(v3 + 8);
  }
  else {
    char v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_1740D5C(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 3) != 0)
  {
    if (v8)
    {
      uint64_t v9 = sub_184B568(*(void *)(a1 + 48));
      v2 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v8 & 2) != 0)
    {
      int v10 = *(_DWORD *)(a1 + 56);
      if (v10 < 0) {
        uint64_t v11 = 11;
      }
      else {
        uint64_t v11 = ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
      v2 += v11;
    }
  }
  uint64_t v12 = *(void *)(a1 + 8);
  if (v12)
  {
    unint64_t v14 = v12 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v14 + 31) < 0) {
      uint64_t v15 = *(void *)(v14 + 16);
    }
    else {
      uint64_t v15 = *(unsigned __int8 *)(v14 + 31);
    }
    v2 += v15;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

void *sub_1762294@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PublisherResult");
}

uint64_t sub_17622A4(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  char v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_2548688)
  {
    uint64_t v6 = *(void *)(a1 + 48);
    if (v6)
    {
      sub_1762B94(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  sub_12C28B4((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1762368(uint64_t a1)
{
  sub_17622A4(a1);

  operator delete();
}

char *sub_17623A0(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v23 = a2;
  if (sub_11947B8((uint64_t)a3, &v23, a3[11].i32[1])) {
    return v23;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v23 + 1;
    unsigned int v8 = *v23;
    if (*v23 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v23, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v23 + 2;
      }
    }
    uint64_t v23 = v7;
    if (v8 >> 3 == 2) {
      break;
    }
    if (v8 >> 3 != 1 || v8 != 10) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v21 = *(void *)(a1 + 48);
    if (!v21)
    {
      uint64_t v22 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        uint64_t v22 = (void *)*v22;
      }
      uint64_t v21 = sub_178CDA8((uint64_t)v22);
      *(void *)(a1 + 48) = v21;
      uint64_t v7 = v23;
    }
    unint64_t v14 = (char *)sub_1265F8C(a3, v21, (unsigned __int8 *)v7);
LABEL_35:
    uint64_t v23 = v14;
    if (!v14) {
      return 0;
    }
LABEL_36:
    if (sub_11947B8((uint64_t)a3, &v23, a3[11].i32[1])) {
      return v23;
    }
  }
  if (v8 == 18)
  {
    uint64_t v15 = v7 - 1;
    while (1)
    {
      unsigned int v16 = (unsigned __int8 *)(v15 + 1);
      uint64_t v23 = v15 + 1;
      uint64_t v17 = *(_DWORD **)(a1 + 40);
      if (v17 && (uint64_t v18 = *(int *)(a1 + 32), (int)v18 < *v17))
      {
        *(_DWORD *)(a1 + 32) = v18 + 1;
        uint64_t v19 = *(void *)&v17[2 * v18 + 2];
      }
      else
      {
        uint64_t v20 = sub_178CDA8(*(void *)(a1 + 24));
        uint64_t v19 = sub_188CDC8(a1 + 24, v20);
        unsigned int v16 = (unsigned __int8 *)v23;
      }
      uint64_t v15 = (char *)sub_1265F8C(a3, v19, v16);
      uint64_t v23 = v15;
      if (!v15) {
        return 0;
      }
      if (*(void *)a3 <= (unint64_t)v15 || *v15 != 18) {
        goto LABEL_36;
      }
    }
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      int v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      int v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = v23;
    }
    unint64_t v14 = (char *)sub_1885AC0(v8, v13, v7, a3);
    goto LABEL_35;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v23;
  }
  return 0;
}

char *sub_17625A8(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*a3 <= __dst) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v6 = *(void *)(a1 + 48);
    *char v4 = 10;
    unsigned int v7 = *(_DWORD *)(v6 + 44);
    v4[1] = v7;
    if (v7 > 0x7F) {
      unsigned int v8 = sub_188A9CC(v7, v4 + 1);
    }
    else {
      unsigned int v8 = v4 + 2;
    }
    char v4 = sub_1763540(v6, v8, a3);
  }
  int v9 = *(_DWORD *)(a1 + 32);
  if (v9)
  {
    for (int i = 0; i != v9; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v11 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *char v4 = 18;
      unsigned int v12 = *(_DWORD *)(v11 + 44);
      v4[1] = v12;
      if (v12 > 0x7F) {
        int v13 = sub_188A9CC(v12, v4 + 1);
      }
      else {
        int v13 = v4 + 2;
      }
      char v4 = sub_1763540(v11, v13, a3);
    }
  }
  uint64_t v14 = *(void *)(a1 + 8);
  if ((v14 & 1) == 0) {
    return v4;
  }
  unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v16 + 31) < 0)
  {
    uint64_t v17 = *(void **)(v16 + 8);
    uint64_t v18 = *(void *)(v16 + 16);
  }
  else
  {
    uint64_t v17 = (void *)(v16 + 8);
    LODWORD(v18) = *(unsigned __int8 *)(v16 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v18)
  {
    uint64_t v19 = (int)v18;
    memcpy(v4, v17, (int)v18);
    v4 += v19;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v17, v18, v4);
}

uint64_t sub_1762754(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    char v4 = (uint64_t *)(v3 + 8);
  }
  else {
    char v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_1763C40(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  if (*(unsigned char *)(a1 + 16))
  {
    uint64_t v8 = sub_1763C40(*(void *)(a1 + 48));
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    v2 += v12;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

void *sub_1762838@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.BatchReverseGeocodeResult");
}

uint64_t sub_1762848(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  *(void *)(a1 + 8) = v5;
  *(void *)a1 = off_24D8118;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = a2;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = a2;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_DWORD *)(a1 + 160) = 0;
  return a1;
}

void sub_17628CC(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_1762900(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  char v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = a1 + 16;
  *(void *)a1 = off_24D8118;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  uint64_t v6 = (uint64_t *)(a1 + 48);
  *(_DWORD *)(a1 + 68) = 0;
  *(void *)(a1 + 52) = 0;
  *(void *)(a1 + 60) = 0;
  *(void *)(a1 + 44) = 0;
  int v7 = *(_DWORD *)(a2 + 56);
  if (v7)
  {
    uint64_t v8 = *(void *)(a2 + 64);
    uint64_t v9 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_124EA70(v6, v9, (uint64_t *)(v8 + 8), v7, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v10 = *(_DWORD *)(a1 + 56) + v7;
    *(_DWORD *)(a1 + 56) = v10;
    unint64_t v11 = *(int **)(a1 + 64);
    if (*v11 < v10) {
      *unint64_t v11 = v10;
    }
  }
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0;
  int v12 = *(_DWORD *)(a2 + 80);
  if (v12)
  {
    uint64_t v13 = *(void *)(a2 + 88);
    uint64_t v14 = (std::string **)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_188FB98(a1 + 72, v14, (const std::string **)(v13 + 8), v12, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v15 = *(_DWORD *)(a1 + 80) + v12;
    *(_DWORD *)(a1 + 80) = v15;
    unint64_t v16 = *(int **)(a1 + 88);
    if (*v16 < v15) {
      int *v16 = v15;
    }
  }
  uint64_t v17 = *(void *)(a2 + 8);
  if (v17) {
    sub_188B4F8(v4, (v17 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v5, a2 + 16);
  int v18 = *(_DWORD *)(a2 + 40);
  if (v18) {
    operator new();
  }
  *(void *)(a1 + 96) = 0;
  if ((v18 & 2) != 0) {
    operator new();
  }
  *(void *)(a1 + 104) = 0;
  long long v19 = *(_OWORD *)(a2 + 112);
  long long v20 = *(_OWORD *)(a2 + 128);
  long long v21 = *(_OWORD *)(a2 + 144);
  *(_DWORD *)(a1 + 160) = *(_DWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 128) = v20;
  *(_OWORD *)(a1 + 144) = v21;
  *(_OWORD *)(a1 + 112) = v19;
  return a1;
}

void sub_1762B00()
{
}

uint64_t sub_1762B94(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  char v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  if ((uint64_t (***)())a1 != &off_25486C0)
  {
    uint64_t v5 = *(void *)(a1 + 96);
    if (v5)
    {
      sub_184AFBC(v5);
      operator delete();
    }
    uint64_t v6 = *(void *)(a1 + 104);
    if (v6)
    {
      sub_17684B4(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  sub_1889DE8((void *)(a1 + 72));
  sub_124DECC((void *)(a1 + 48));
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1762C80(uint64_t a1)
{
  sub_1762B94(a1);

  operator delete();
}

uint64_t sub_1762CB8(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_1768BD8(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  if (*(unsigned char *)(v1 + 16)) {
    uint64_t result = sub_17204B8(*(void *)(v1 + 48));
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = v1 + 8;
  *(_DWORD *)(v5 + 8) = 0;
  if (v6)
  {
    return sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

uint64_t sub_1762D48(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v78 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v78, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  uint64_t v8 = (uint64_t **)(a1 + 72);
  while (2)
  {
    uint64_t v9 = (unsigned __int8 *)(*(void *)v78 + 1);
    unsigned int v10 = **(unsigned char **)v78;
    if ((char)**(unsigned char **)v78 < 0)
    {
      unsigned int v11 = v10 + (*v9 << 7);
      unsigned int v10 = v11 - 128;
      if ((char)*v9 < 0)
      {
        uint64_t v9 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v78, v11 - 128);
        unsigned int v10 = v12;
      }
      else
      {
        uint64_t v9 = (unsigned __int8 *)(*(void *)v78 + 2);
      }
    }
    *(void *)uint64_t v78 = v9;
    switch(v10 >> 3)
    {
      case 1u:
        if (v10 != 8) {
          goto LABEL_94;
        }
        v5 |= 4u;
        uint64_t v13 = (char *)(v9 + 1);
        uint64_t v14 = *v9;
        if (((char)*v9 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v15 = *v13;
        uint64_t v14 = v14 + (v15 << 7) - 128;
        if ((v15 & 0x80000000) == 0)
        {
          uint64_t v13 = (char *)(v9 + 2);
LABEL_13:
          *(void *)uint64_t v78 = v13;
          *(void *)(a1 + 112) = v14;
          goto LABEL_105;
        }
        uint64_t v61 = sub_188C138((uint64_t)v9, v14);
        *(void *)uint64_t v78 = v61;
        *(void *)(a1 + 112) = v62;
        if (v61) {
          goto LABEL_105;
        }
        goto LABEL_141;
      case 2u:
        if (v10 != 16) {
          goto LABEL_94;
        }
        unint64_t v16 = (char *)(v9 + 1);
        unint64_t v17 = *v9;
        if (((char)*v9 & 0x80000000) == 0) {
          goto LABEL_18;
        }
        int v18 = *v16;
        int v19 = v17 + (v18 << 7);
        unint64_t v17 = (v19 - 128);
        if (v18 < 0)
        {
          *(void *)uint64_t v78 = sub_188C138((uint64_t)v9, (v19 - 128));
          if (!*(void *)v78) {
            goto LABEL_141;
          }
          unint64_t v17 = v63;
        }
        else
        {
          unint64_t v16 = (char *)(v9 + 2);
LABEL_18:
          *(void *)uint64_t v78 = v16;
        }
        if (sub_13E78E4(v17))
        {
          *(_DWORD *)(a1 + 40) |= 0x10u;
          *(_DWORD *)(a1 + 128) = v17;
          goto LABEL_105;
        }
        if (*v7) {
          uint64_t v76 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          uint64_t v76 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v77 = 2;
        goto LABEL_134;
      case 3u:
        if (v10 != 24) {
          goto LABEL_94;
        }
        v5 |= 8u;
        long long v20 = (char *)(v9 + 1);
        uint64_t v21 = *v9;
        if (((char)*v9 & 0x80000000) == 0) {
          goto LABEL_25;
        }
        int v22 = *v20;
        uint64_t v21 = v21 + (v22 << 7) - 128;
        if (v22 < 0)
        {
          uint64_t v64 = sub_188C138((uint64_t)v9, v21);
          *(void *)uint64_t v78 = v64;
          *(void *)(a1 + 120) = v65;
          if (!v64) {
            goto LABEL_141;
          }
        }
        else
        {
          long long v20 = (char *)(v9 + 2);
LABEL_25:
          *(void *)uint64_t v78 = v20;
          *(void *)(a1 + 120) = v21;
        }
        goto LABEL_105;
      case 4u:
        if (v10 != 34) {
          goto LABEL_94;
        }
        uint64_t v23 = v9 - 1;
        while (1)
        {
          int v24 = v23 + 1;
          *(void *)uint64_t v78 = v23 + 1;
          int v25 = *(_DWORD **)(a1 + 64);
          if (v25 && (uint64_t v26 = *(int *)(a1 + 56), (int)v26 < *v25))
          {
            *(_DWORD *)(a1 + 56) = v26 + 1;
            uint64_t v27 = *(void *)&v25[2 * v26 + 2];
          }
          else
          {
            uint64_t v28 = sub_178B458(*(void *)(a1 + 48));
            uint64_t v27 = sub_188CDC8(a1 + 48, v28);
            int v24 = *(unsigned __int8 **)v78;
          }
          uint64_t v23 = (unsigned __int8 *)sub_123B124(a3, v27, v24);
          *(void *)uint64_t v78 = v23;
          if (!v23) {
            goto LABEL_141;
          }
          if (*(void *)a3 <= (unint64_t)v23 || *v23 != 34) {
            goto LABEL_105;
          }
        }
      case 5u:
        if (v10 != 40) {
          goto LABEL_94;
        }
        v5 |= 0x20u;
        uint64_t v30 = (char *)(v9 + 1);
        LODWORD(v29) = *v9;
        if ((v29 & 0x80) == 0) {
          goto LABEL_40;
        }
        int v31 = *v30;
        uint64_t v29 = v29 + (v31 << 7) - 128;
        if (v31 < 0)
        {
          uint64_t v66 = sub_188C138((uint64_t)v9, v29);
          *(void *)uint64_t v78 = v66;
          *(_DWORD *)(a1 + 132) = v67;
          if (!v66) {
            goto LABEL_141;
          }
        }
        else
        {
          uint64_t v30 = (char *)(v9 + 2);
LABEL_40:
          *(void *)uint64_t v78 = v30;
          *(_DWORD *)(a1 + 132) = v29;
        }
        goto LABEL_105;
      case 6u:
        if (v10 != 48) {
          goto LABEL_94;
        }
        v5 |= 0x40u;
        unint64_t v32 = (char *)(v9 + 1);
        uint64_t v33 = *v9;
        if (((char)*v9 & 0x80000000) == 0) {
          goto LABEL_45;
        }
        int v34 = *v32;
        uint64_t v33 = v33 + (v34 << 7) - 128;
        if (v34 < 0)
        {
          uint64_t v68 = sub_188C138((uint64_t)v9, v33);
          *(void *)uint64_t v78 = v68;
          *(void *)(a1 + 136) = v69;
          if (!v68) {
            goto LABEL_141;
          }
        }
        else
        {
          unint64_t v32 = (char *)(v9 + 2);
LABEL_45:
          *(void *)uint64_t v78 = v32;
          *(void *)(a1 + 136) = v33;
        }
        goto LABEL_105;
      case 7u:
        if (v10 != 58) {
          goto LABEL_94;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        uint64_t v35 = *(void *)(a1 + 96);
        if (!v35)
        {
          uint64_t v36 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v36 = (void *)*v36;
          }
          uint64_t v35 = sub_185089C((uint64_t)v36);
          *(void *)(a1 + 96) = v35;
          uint64_t v9 = *(unsigned __int8 **)v78;
        }
        uint64_t v37 = sub_12688D0(a3, v35, v9);
        goto LABEL_104;
      case 8u:
        if (v10 != 64) {
          goto LABEL_94;
        }
        v5 |= 0x80u;
        uint64_t v38 = (char *)(v9 + 1);
        uint64_t v39 = *v9;
        if (((char)*v9 & 0x80000000) == 0) {
          goto LABEL_56;
        }
        int v40 = *v38;
        uint64_t v39 = v39 + (v40 << 7) - 128;
        if (v40 < 0)
        {
          uint64_t v70 = sub_188C138((uint64_t)v9, v39);
          *(void *)uint64_t v78 = v70;
          *(void *)(a1 + 144) = v71;
          if (!v70) {
            goto LABEL_141;
          }
        }
        else
        {
          uint64_t v38 = (char *)(v9 + 2);
LABEL_56:
          *(void *)uint64_t v78 = v38;
          *(void *)(a1 + 144) = v39;
        }
        goto LABEL_105;
      case 9u:
        if (v10 != 74) {
          goto LABEL_94;
        }
        *(_DWORD *)(a1 + 40) |= 2u;
        uint64_t v41 = *(void **)(a1 + 104);
        if (!v41)
        {
          uint64_t v42 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v42 = (void *)*v42;
          }
          uint64_t v41 = sub_178D160((uint64_t)v42);
          *(void *)(a1 + 104) = v41;
          uint64_t v9 = *(unsigned __int8 **)v78;
        }
        uint64_t v37 = sub_15522B0(a3, (uint64_t)v41, v9);
        goto LABEL_104;
      case 0xAu:
        if (v10 != 80) {
          goto LABEL_94;
        }
        v5 |= 0x100u;
        uint64_t v43 = (char *)(v9 + 1);
        uint64_t v44 = *v9;
        if (((char)*v9 & 0x80000000) == 0) {
          goto LABEL_67;
        }
        int v45 = *v43;
        uint64_t v44 = v44 + (v45 << 7) - 128;
        if (v45 < 0)
        {
          uint64_t v72 = sub_188C138((uint64_t)v9, v44);
          *(void *)uint64_t v78 = v72;
          *(unsigned char *)(a1 + 152) = v73 != 0;
          if (!v72) {
            goto LABEL_141;
          }
        }
        else
        {
          uint64_t v43 = (char *)(v9 + 2);
LABEL_67:
          *(void *)uint64_t v78 = v43;
          *(unsigned char *)(a1 + 152) = v44 != 0;
        }
        goto LABEL_105;
      case 0xBu:
        if (v10 != 88) {
          goto LABEL_94;
        }
        uint64_t v46 = (char *)(v9 + 1);
        unint64_t v17 = *v9;
        if (((char)*v9 & 0x80000000) == 0) {
          goto LABEL_72;
        }
        int v47 = *v46;
        int v48 = v17 + (v47 << 7);
        unint64_t v17 = (v48 - 128);
        if (v47 < 0)
        {
          *(void *)uint64_t v78 = sub_188C138((uint64_t)v9, (v48 - 128));
          if (!*(void *)v78) {
            goto LABEL_141;
          }
          unint64_t v17 = v74;
        }
        else
        {
          uint64_t v46 = (char *)(v9 + 2);
LABEL_72:
          *(void *)uint64_t v78 = v46;
        }
        if (sub_15B077C(v17))
        {
          *(_DWORD *)(a1 + 40) |= 0x200u;
          *(_DWORD *)(a1 + 156) = v17;
          goto LABEL_105;
        }
        if (*v7) {
          uint64_t v76 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          uint64_t v76 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v77 = 11;
        goto LABEL_134;
      case 0xCu:
        if (v10 != 98) {
          goto LABEL_94;
        }
        uint64_t v49 = (const std::string::value_type *)(v9 - 1);
        while (1)
        {
          uint64_t v50 = (char *)(v49 + 1);
          *(void *)uint64_t v78 = v49 + 1;
          int v51 = *(_DWORD **)(a1 + 88);
          if (v51 && (uint64_t v52 = *(int *)(a1 + 80), (int)v52 < *v51))
          {
            *(_DWORD *)(a1 + 80) = v52 + 1;
            unint64_t v53 = *(std::string **)&v51[2 * v52 + 2];
          }
          else
          {
            if (!*v8) {
              operator new();
            }
            *int v55 = v54;
            v55[1] = sub_3A6EDC;
            *int v54 = 0;
            v54[1] = 0;
            v54[2] = 0;
            unint64_t v53 = (std::string *)sub_188CDC8(a1 + 72, (uint64_t)v54);
            uint64_t v50 = *(char **)v78;
          }
          uint64_t v49 = sub_188C244(v53, v50, (uint64_t)a3);
          *(void *)uint64_t v78 = v49;
          if (!v49) {
            goto LABEL_141;
          }
          if (*(void *)a3 <= (unint64_t)v49 || *v49 != 98) {
            goto LABEL_105;
          }
        }
      case 0xDu:
        if (v10 != 104) {
          goto LABEL_94;
        }
        BOOL v56 = (char *)(v9 + 1);
        unint64_t v17 = *v9;
        if (((char)*v9 & 0x80000000) == 0) {
          goto LABEL_91;
        }
        int v57 = *v56;
        int v58 = v17 + (v57 << 7);
        unint64_t v17 = (v58 - 128);
        if (v57 < 0)
        {
          *(void *)uint64_t v78 = sub_188C138((uint64_t)v9, (v58 - 128));
          if (!*(void *)v78) {
            goto LABEL_141;
          }
          unint64_t v17 = v75;
        }
        else
        {
          BOOL v56 = (char *)(v9 + 2);
LABEL_91:
          *(void *)uint64_t v78 = v56;
        }
        if (v17 > 7)
        {
          if (*v7) {
            uint64_t v76 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v76 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          int v77 = 13;
LABEL_134:
          sub_188C020(v77, v17, v76);
        }
        else
        {
          *(_DWORD *)(a1 + 40) |= 0x400u;
          *(_DWORD *)(a1 + 160) = v17;
        }
        goto LABEL_105;
      default:
LABEL_94:
        if (v10) {
          BOOL v59 = (v10 & 7) == 4;
        }
        else {
          BOOL v59 = 1;
        }
        if (!v59)
        {
          if (v10 - 1600 < 0xFA0 || (v10 - 8000) >> 6 <= 0x7C)
          {
            uint64_t v37 = sub_18859DC((uint64_t **)(a1 + 16), v10, (char *)v9, (uint64_t)&off_25486C0, (uint64_t *)(a1 + 8), a3);
          }
          else
          {
            if (*v7)
            {
              uint64_t v60 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              uint64_t v60 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              uint64_t v9 = *(unsigned __int8 **)v78;
            }
            uint64_t v37 = sub_1885AC0(v10, v60, (char *)v9, a3);
          }
LABEL_104:
          *(void *)uint64_t v78 = v37;
          if (!v37) {
            goto LABEL_141;
          }
LABEL_105:
          if (sub_11947B8((uint64_t)a3, (char **)v78, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v9) {
          a3[10].i32[0] = v10 - 1;
        }
        else {
LABEL_141:
        }
          *(void *)uint64_t v78 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 40) |= v5;
        return *(void *)v78;
    }
  }
}

char *sub_1763540(uint64_t a1, char *a2, unint64_t *a3)
{
  uint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unint64_t v7 = *(void *)(a1 + 112);
    *uint64_t v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 128);
    *uint64_t v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v13 = *(void *)(a1 + 120);
    *uint64_t v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unint64_t v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v16 = *(_DWORD *)(a1 + 56);
  if (v16)
  {
    for (int i = 0; i != v16; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v18 = *(void *)(*(void *)(a1 + 64) + 8 * i + 8);
      *uint64_t v4 = 34;
      unsigned int v19 = *(_DWORD *)(v18 + 44);
      v4[1] = v19;
      if (v19 > 0x7F) {
        long long v20 = sub_188A9CC(v19, v4 + 1);
      }
      else {
        long long v20 = v4 + 2;
      }
      uint64_t v4 = sub_1740568(v18, v20, a3);
    }
  }
  if ((v6 & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v21 = *(int *)(a1 + 132);
    *uint64_t v4 = 40;
    v4[1] = v21;
    if (v21 > 0x7F)
    {
      v4[1] = v21 | 0x80;
      unint64_t v22 = v21 >> 7;
      v4[2] = v21 >> 7;
      v4 += 3;
      if (v21 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v23 = v22 >> 14;
          v22 >>= 7;
          *v4++ = v22;
        }
        while (v23);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x40) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v24 = *(void *)(a1 + 136);
    *uint64_t v4 = 48;
    v4[1] = v24;
    if (v24 > 0x7F)
    {
      v4[1] = v24 | 0x80;
      unint64_t v25 = v24 >> 7;
      v4[2] = v24 >> 7;
      v4 += 3;
      if (v24 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v26 = v25 >> 14;
          v25 >>= 7;
          *v4++ = v25;
        }
        while (v26);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v27 = *(void *)(a1 + 96);
    *uint64_t v4 = 58;
    unsigned int v28 = *(_DWORD *)(v27 + 44);
    v4[1] = v28;
    if (v28 > 0x7F) {
      uint64_t v29 = sub_188A9CC(v28, v4 + 1);
    }
    else {
      uint64_t v29 = v4 + 2;
    }
    uint64_t v4 = sub_184B3AC(v27, v29, a3);
  }
  if ((v6 & 0x80) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v30 = *(void *)(a1 + 144);
    *uint64_t v4 = 64;
    v4[1] = v30;
    if (v30 > 0x7F)
    {
      v4[1] = v30 | 0x80;
      unint64_t v31 = v30 >> 7;
      v4[2] = v30 >> 7;
      v4 += 3;
      if (v30 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v32 = v31 >> 14;
          v31 >>= 7;
          *v4++ = v31;
        }
        while (v32);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v33 = *(void *)(a1 + 104);
    *uint64_t v4 = 74;
    unsigned int v34 = *(_DWORD *)(v33 + 20);
    v4[1] = v34;
    if (v34 > 0x7F) {
      uint64_t v35 = sub_188A9CC(v34, v4 + 1);
    }
    else {
      uint64_t v35 = v4 + 2;
    }
    uint64_t v4 = sub_1768848(v33, v35, a3);
    if ((v6 & 0x100) == 0)
    {
LABEL_60:
      if ((v6 & 0x200) == 0) {
        goto LABEL_77;
      }
      goto LABEL_71;
    }
  }
  else if ((v6 & 0x100) == 0)
  {
    goto LABEL_60;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v36 = *(unsigned char *)(a1 + 152);
  *uint64_t v4 = 80;
  v4[1] = v36;
  v4 += 2;
  if ((v6 & 0x200) != 0)
  {
LABEL_71:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v37 = *(int *)(a1 + 156);
    *uint64_t v4 = 88;
    v4[1] = v37;
    if (v37 > 0x7F)
    {
      v4[1] = v37 | 0x80;
      unint64_t v38 = v37 >> 7;
      v4[2] = v37 >> 7;
      v4 += 3;
      if (v37 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v39 = v38 >> 14;
          v38 >>= 7;
          *v4++ = v38;
        }
        while (v39);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_77:
  uint64_t v40 = *(unsigned int *)(a1 + 80);
  if ((int)v40 >= 1)
  {
    uint64_t v41 = 0;
    uint64_t v42 = 8 * v40;
    do
    {
      uint64_t v43 = *(void **)(*(void *)(a1 + 88) + v41 + 8);
      if (*((char *)v43 + 23) < 0)
      {
        int64_t v44 = v43[1];
        if (v44 > 127) {
          goto LABEL_88;
        }
      }
      else
      {
        int64_t v44 = *((unsigned __int8 *)v43 + 23);
      }
      if ((uint64_t)(*a3 - (void)v4 + 14) >= v44)
      {
        *uint64_t v4 = 98;
        v4[1] = v44;
        if (*((char *)v43 + 23) < 0) {
          uint64_t v43 = (void *)*v43;
        }
        int v45 = v4 + 2;
        memcpy(v45, v43, v44);
        uint64_t v4 = &v45[v44];
        goto LABEL_86;
      }
LABEL_88:
      uint64_t v4 = (char *)sub_188A868(a3, 12, (uint64_t)v43, v4);
LABEL_86:
      v41 += 8;
    }
    while (v42 != v41);
  }
  if ((v6 & 0x400) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v46 = *(int *)(a1 + 160);
    *uint64_t v4 = 104;
    v4[1] = v46;
    if (v46 > 0x7F)
    {
      v4[1] = v46 | 0x80;
      unint64_t v47 = v46 >> 7;
      v4[2] = v46 >> 7;
      v4 += 3;
      if (v46 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v48 = v47 >> 14;
          v47 >>= 7;
          *v4++ = v47;
        }
        while (v48);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (*(_WORD *)(a1 + 26)) {
    uint64_t v4 = sub_1886844(a1 + 16, 200, 2000, v4, a3);
  }
  uint64_t v49 = *(void *)(a1 + 8);
  if ((v49 & 1) == 0) {
    return v4;
  }
  unint64_t v51 = v49 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v51 + 31) < 0)
  {
    uint64_t v52 = *(void **)(v51 + 8);
    uint64_t v53 = *(void *)(v51 + 16);
  }
  else
  {
    uint64_t v52 = (void *)(v51 + 8);
    LODWORD(v53) = *(unsigned __int8 *)(v51 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v53)
  {
    uint64_t v54 = (int)v53;
    memcpy(v4, v52, (int)v53);
    v4 += v54;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v52, v53, v4);
}

uint64_t sub_1763C40(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(int *)(a1 + 56);
  uint64_t v4 = v2 + v3;
  uint64_t v5 = *(void *)(a1 + 64);
  if (v5) {
    int v6 = (uint64_t *)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = sub_1740D5C(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  uint64_t v10 = *(unsigned int *)(a1 + 80);
  uint64_t v11 = v4 + v10;
  if ((int)v10 >= 1)
  {
    unint64_t v12 = (uint64_t *)(*(void *)(a1 + 88) + 8);
    do
    {
      uint64_t v13 = *v12++;
      uint64_t v14 = *(unsigned __int8 *)(v13 + 23);
      uint64_t v15 = *(void *)(v13 + 8);
      if ((v14 & 0x80u) == 0) {
        uint64_t v15 = v14;
      }
      v11 += v15 + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6);
      --v10;
    }
    while (v10);
  }
  int v16 = *(_DWORD *)(a1 + 40);
  if (!(_BYTE)v16) {
    goto LABEL_22;
  }
  if (v16)
  {
    uint64_t v25 = sub_184B568(*(void *)(a1 + 96));
    v11 += v25 + ((9 * (__clz(v25 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v16 & 2) == 0)
    {
LABEL_15:
      if ((v16 & 4) == 0) {
        goto LABEL_16;
      }
      goto LABEL_39;
    }
  }
  else if ((v16 & 2) == 0)
  {
    goto LABEL_15;
  }
  uint64_t v26 = sub_17689F4(*(void *)(a1 + 104));
  v11 += v26 + ((9 * (__clz(v26 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v16 & 4) == 0)
  {
LABEL_16:
    if ((v16 & 8) == 0) {
      goto LABEL_17;
    }
    goto LABEL_40;
  }
LABEL_39:
  v11 += ((9 * (__clz(*(void *)(a1 + 112) | 1) ^ 0x3F) + 73) >> 6) + 1;
  if ((v16 & 8) == 0)
  {
LABEL_17:
    if ((v16 & 0x10) == 0) {
      goto LABEL_18;
    }
    goto LABEL_41;
  }
LABEL_40:
  v11 += ((9 * (__clz(*(void *)(a1 + 120) | 1) ^ 0x3F) + 73) >> 6) + 1;
  if ((v16 & 0x10) == 0)
  {
LABEL_18:
    if ((v16 & 0x20) == 0) {
      goto LABEL_19;
    }
LABEL_45:
    int v30 = *(_DWORD *)(a1 + 132);
    uint64_t v31 = ((9 * (__clz(v30 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if (v30 >= 0) {
      uint64_t v32 = v31;
    }
    else {
      uint64_t v32 = 11;
    }
    v11 += v32;
    if ((v16 & 0x40) == 0)
    {
LABEL_20:
      if ((v16 & 0x80) == 0) {
        goto LABEL_22;
      }
      goto LABEL_21;
    }
    goto LABEL_49;
  }
LABEL_41:
  int v27 = *(_DWORD *)(a1 + 128);
  uint64_t v28 = ((9 * (__clz(v27 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if (v27 >= 0) {
    uint64_t v29 = v28;
  }
  else {
    uint64_t v29 = 11;
  }
  v11 += v29;
  if ((v16 & 0x20) != 0) {
    goto LABEL_45;
  }
LABEL_19:
  if ((v16 & 0x40) == 0) {
    goto LABEL_20;
  }
LABEL_49:
  v11 += ((9 * (__clz(*(void *)(a1 + 136) | 1) ^ 0x3F) + 73) >> 6) + 1;
  if ((v16 & 0x80) != 0) {
LABEL_21:
  }
    v11 += ((9 * (__clz(*(void *)(a1 + 144) | 1) ^ 0x3F) + 73) >> 6) + 1;
LABEL_22:
  if ((v16 & 0x700) != 0)
  {
    if ((v16 & 0x100) != 0) {
      v11 += 2;
    }
    if ((v16 & 0x200) != 0)
    {
      int v17 = *(_DWORD *)(a1 + 156);
      uint64_t v18 = ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if (v17 >= 0) {
        uint64_t v19 = v18;
      }
      else {
        uint64_t v19 = 11;
      }
      v11 += v19;
    }
    if ((v16 & 0x400) != 0)
    {
      int v20 = *(_DWORD *)(a1 + 160);
      uint64_t v21 = ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if (v20 >= 0) {
        uint64_t v22 = v21;
      }
      else {
        uint64_t v22 = 11;
      }
      v11 += v22;
    }
  }
  uint64_t v23 = *(void *)(a1 + 8);
  if (v23)
  {
    unint64_t v33 = v23 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v33 + 31) < 0) {
      uint64_t v34 = *(void *)(v33 + 16);
    }
    else {
      uint64_t v34 = *(unsigned __int8 *)(v33 + 31);
    }
    v11 += v34;
  }
  *(_DWORD *)(a1 + 44) = v11;
  return v11;
}

void sub_1763F4C(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    int v6 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_18728E4((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    uint64_t v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  if (*(unsigned char *)(a2 + 16))
  {
    uint64_t v9 = *(uint64_t (****)())(a2 + 48);
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v10 = *(void *)(a1 + 48);
    if (!v10)
    {
      uint64_t v11 = *(void *)(a1 + 8);
      unint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        unint64_t v12 = (void *)*v12;
      }
      uint64_t v10 = sub_178E2FC((uint64_t)v12);
      *(void *)(a1 + 48) = v10;
      uint64_t v9 = *(uint64_t (****)())(a2 + 48);
    }
    if (v9) {
      uint64_t v13 = v9;
    }
    else {
      uint64_t v13 = &off_2548FF0;
    }
    sub_172CE70(v10, (uint64_t)v13);
  }
  uint64_t v14 = *(void *)(a2 + 8);
  if (v14)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v14 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_1764070(uint64_t a1, uint64_t a2)
{
  if (a2 != a1)
  {
    sub_175FE78(a1);
    sub_1760D4C(a1, a2);
  }
}

uint64_t sub_17640BC(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 1;
  }
  uint64_t v1 = *(void *)(a1 + 48);
  uint64_t result = sub_18856CC(v1 + 16);
  if (result)
  {
    uint64_t result = sub_177A404(v1 + 40);
    if (result) {
      return 1;
    }
  }
  return result;
}

__n128 sub_1764100(uint64_t a1, uint64_t a2)
{
  sub_1885338((uint64_t *)(a1 + 16), (uint64_t *)(a2 + 16));
  uint64_t v4 = *(void *)(a1 + 8);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a2 + 8) = v4;
  LODWORD(v4) = *(_DWORD *)(a1 + 40);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a2 + 40) = v4;
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(a1 + 56);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(void *)(a2 + 48) = v5;
  *(void *)(a2 + 56) = v6;
  uint64_t v7 = *(void *)(a1 + 64);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a2 + 64) = v7;
  uint64_t v8 = *(void *)(a1 + 72);
  uint64_t v9 = *(void *)(a1 + 80);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(void *)(a2 + 72) = v8;
  *(void *)(a2 + 80) = v9;
  uint64_t v10 = *(void *)(a1 + 88);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a2 + 88) = v10;
  uint64_t v11 = *(void *)(a1 + 96);
  uint64_t v12 = *(void *)(a1 + 104);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(void *)(a2 + 96) = v11;
  *(void *)(a2 + 104) = v12;
  uint64_t v13 = *(void *)(a1 + 112);
  uint64_t v14 = *(void *)(a1 + 120);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(void *)(a2 + 112) = v13;
  *(void *)(a2 + 120) = v14;
  uint64_t v15 = *(void *)(a1 + 128);
  uint64_t v16 = *(void *)(a1 + 136);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(void *)(a2 + 128) = v15;
  *(void *)(a2 + 136) = v16;
  uint64_t v17 = *(void *)(a1 + 144);
  uint64_t v18 = *(void *)(a1 + 152);
  __n128 result = *(__n128 *)(a2 + 144);
  *(__n128 *)(a1 + 144) = result;
  *(void *)(a2 + 144) = v17;
  *(void *)(a2 + 152) = v18;
  LODWORD(v17) = *(_DWORD *)(a1 + 160);
  *(_DWORD *)(a1 + 160) = *(_DWORD *)(a2 + 160);
  *(_DWORD *)(a2 + 160) = v17;
  return result;
}

void *sub_17641E0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.Place");
}

uint64_t sub_17641F0(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_24D8198;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  int v5 = *(_DWORD *)(a2 + 16);
  if (v5) {
    operator new();
  }
  *(void *)(a1 + 24) = 0;
  if ((v5 & 2) != 0) {
    operator new();
  }
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  return a1;
}

void sub_17642DC()
{
}

uint64_t sub_1764334(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  if ((uint64_t (***)())a1 != &off_2548768)
  {
    uint64_t v5 = *(void *)(a1 + 24);
    if (v5)
    {
      sub_1764C90(v5);
      operator delete();
    }
    uint64_t v6 = *(void *)(a1 + 32);
    if (v6)
    {
      sub_1764C90(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1764404(uint64_t a1)
{
  sub_1764334(a1);

  operator delete();
}

uint64_t sub_176443C(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 3) != 0)
  {
    if (v2) {
      __n128 result = sub_17644B0(*(void *)(result + 24));
    }
    if ((v2 & 2) != 0) {
      __n128 result = sub_17644B0(*(void *)(v1 + 32));
    }
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 32) = 0;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_17644B0(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if (v1)
  {
    unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)unint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
    }
  }
  if ((v1 & 6) != 0) {
    *(void *)(a1 + 32) = 0;
  }
  char v4 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v4) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_1764500(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v25 = a2;
  if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
    return v25;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v25 + 1;
    unsigned int v8 = *v25;
    if (*v25 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v25, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v25 + 2;
      }
    }
    uint64_t v25 = v7;
    unsigned int v11 = v8 >> 3;
    if (v8 >> 3 == 3)
    {
      if (v8 != 24) {
        goto LABEL_14;
      }
      uint64_t v16 = v7 + 1;
      unint64_t v17 = *v7;
      if (*v7 < 0)
      {
        int v18 = *v16;
        int v19 = v17 + (v18 << 7);
        unint64_t v17 = (v19 - 128);
        if (v18 < 0)
        {
          uint64_t v25 = (char *)sub_188C138((uint64_t)v7, (v19 - 128));
          if (!v25) {
            return 0;
          }
          unint64_t v17 = v23;
          goto LABEL_26;
        }
        uint64_t v16 = v7 + 2;
      }
      uint64_t v25 = v16;
LABEL_26:
      if (sub_138DE04(v17))
      {
        *(_DWORD *)(a1 + 16) |= 4u;
        *(_DWORD *)(a1 + 40) = v17;
      }
      else
      {
        if (*v6) {
          unint64_t v24 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          unint64_t v24 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        sub_188C020(3, v17, v24);
      }
      goto LABEL_40;
    }
    if (v11 == 2)
    {
      if (v8 == 18)
      {
        *(_DWORD *)(a1 + 16) |= 2u;
        int v20 = *(void **)(a1 + 32);
        if (!v20)
        {
          uint64_t v21 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v21 = (void *)*v21;
          }
          int v20 = sub_178CE84((uint64_t)v21);
          *(void *)(a1 + 32) = v20;
LABEL_37:
          uint64_t v7 = v25;
        }
LABEL_38:
        uint64_t v15 = (char *)sub_129757C(a3, (uint64_t)v20, (unsigned __int8 *)v7);
        goto LABEL_39;
      }
    }
    else if (v11 == 1 && v8 == 10)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      int v20 = *(void **)(a1 + 24);
      if (!v20)
      {
        uint64_t v22 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          uint64_t v22 = (void *)*v22;
        }
        int v20 = sub_178CE84((uint64_t)v22);
        *(void *)(a1 + 24) = v20;
        goto LABEL_37;
      }
      goto LABEL_38;
    }
LABEL_14:
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      uint64_t v14 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = v25;
    }
    uint64_t v15 = (char *)sub_1885AC0(v8, v14, v7, a3);
LABEL_39:
    uint64_t v25 = v15;
    if (!v15) {
      return 0;
    }
LABEL_40:
    if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
      return v25;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v25;
  }
  return 0;
}

unsigned char *sub_1764760(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    *char v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    char v4 = sub_1764FF8(v7, v9, a3);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_23;
      }
      goto LABEL_17;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v10 = *(void *)(a1 + 32);
  *char v4 = 18;
  unsigned int v11 = *(_DWORD *)(v10 + 20);
  v4[1] = v11;
  if (v11 > 0x7F) {
    uint64_t v12 = sub_188A9CC(v11, v4 + 1);
  }
  else {
    uint64_t v12 = v4 + 2;
  }
  char v4 = sub_1764FF8(v10, v12, a3);
  if ((v6 & 4) != 0)
  {
LABEL_17:
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v13 = *(int *)(a1 + 40);
    *char v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unint64_t v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_23:
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return v4;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    int v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    int v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(v4, v19, (int)v20);
    v4 += v21;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v19, v20, v4);
}

uint64_t sub_1764968(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 7) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_13;
  }
  if (v2)
  {
    uint64_t v4 = sub_17651BC(*(void *)(a1 + 24));
    uint64_t v3 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_7:
    uint64_t v5 = sub_17651BC(*(void *)(a1 + 32));
    v3 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_8:
  if ((v2 & 4) != 0)
  {
    int v6 = *(_DWORD *)(a1 + 40);
    if (v6 < 0) {
      uint64_t v7 = 11;
    }
    else {
      uint64_t v7 = ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v3 += v7;
  }
LABEL_13:
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v3 += v11;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_1764A74(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 7) != 0)
  {
    if (v4)
    {
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      data = (std::string *)result[1].__r_.__value_.__l.__data_;
      if (!data)
      {
        std::string::size_type size = v3->__r_.__value_.__l.__size_;
        uint64_t v8 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
        if (size) {
          uint64_t v8 = (void *)*v8;
        }
        data = (std::string *)sub_178CE84((uint64_t)v8);
        v3[1].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      }
      if (*(void *)(a2 + 24)) {
        unsigned int v9 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        unsigned int v9 = &off_2548798;
      }
      uint64_t result = sub_11EB228(data, (uint64_t)v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0)
        {
LABEL_6:
          LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
          goto LABEL_7;
        }
LABEL_5:
        LODWORD(v3[1].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 40);
        goto LABEL_6;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    unint64_t v10 = (std::string *)v3[1].__r_.__value_.__l.__size_;
    if (!v10)
    {
      std::string::size_type v11 = v3->__r_.__value_.__l.__size_;
      uint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        uint64_t v12 = (void *)*v12;
      }
      unint64_t v10 = (std::string *)sub_178CE84((uint64_t)v12);
      v3[1].__r_.__value_.__l.__size_ = (std::string::size_type)v10;
    }
    if (*(void *)(a2 + 32)) {
      unint64_t v13 = *(uint64_t (****)())(a2 + 32);
    }
    else {
      unint64_t v13 = &off_2548798;
    }
    uint64_t result = sub_11EB228(v10, (uint64_t)v13);
    if ((v4 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_7:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1764B94()
{
  return 1;
}

void *sub_1764B9C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.DirectionIntent");
}

uint64_t sub_1764BAC(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (void *)(a1 + 8);
  *(void *)a1 = off_24D8218;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 24) = &qword_2550250;
  if (*(unsigned char *)(a2 + 16))
  {
    int v6 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      int v6 = (uint64_t *)*v6;
    }
    sub_1881DF4((std::string **)(a1 + 24), (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL), v6);
  }
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

void sub_1764C60(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_1764C90(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1764D30(uint64_t a1)
{
  sub_1764C90(a1);

  operator delete();
}

uint64_t sub_1764D68(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v31 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v31, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = (char *)(*(void *)v31 + 1);
    unsigned int v9 = **(unsigned char **)v31;
    if ((char)**(unsigned char **)v31 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180(*(uint64_t *)v31, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (char *)(*(void *)v31 + 2);
      }
    }
    *(void *)uint64_t v31 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 != 3) {
      break;
    }
    if (v9 != 24) {
      goto LABEL_14;
    }
    v5 |= 4u;
    unint64_t v17 = v8 + 1;
    int v18 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_25;
    }
    int v19 = *v17;
    int v18 = v18 + (v19 << 7) - 128;
    if ((v19 & 0x80000000) == 0)
    {
      unint64_t v17 = v8 + 2;
LABEL_25:
      *(void *)uint64_t v31 = v17;
      *(_DWORD *)(a1 + 36) = v18;
      goto LABEL_37;
    }
    uint64_t v27 = sub_188C0D0((uint64_t)v8, v18);
    *(void *)uint64_t v31 = v27;
    *(_DWORD *)(a1 + 36) = v28;
    if (!v27) {
      goto LABEL_50;
    }
LABEL_37:
    if (sub_11947B8((uint64_t)a3, (char **)v31, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v12 == 2)
  {
    if (v9 != 16) {
      goto LABEL_14;
    }
    uint64_t v20 = v8 + 1;
    unint64_t v21 = *v8;
    if (*v8 < 0)
    {
      int v22 = *v20;
      int v23 = v21 + (v22 << 7);
      unint64_t v21 = (v23 - 128);
      if (v22 < 0)
      {
        *(void *)uint64_t v31 = sub_188C138((uint64_t)v8, (v23 - 128));
        if (!*(void *)v31) {
          goto LABEL_50;
        }
        unint64_t v21 = v29;
        goto LABEL_31;
      }
      uint64_t v20 = v8 + 2;
    }
    *(void *)uint64_t v31 = v20;
LABEL_31:
    if (v21 > 6)
    {
      if (*v7) {
        int v30 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        int v30 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      sub_188C020(2, v21, v30);
    }
    else
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      *(_DWORD *)(a1 + 32) = v21;
    }
    goto LABEL_37;
  }
  if (v12 == 1 && v9 == 10)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v24 = *(void *)(a1 + 8);
    uint64_t v25 = (uint64_t *)(v24 & 0xFFFFFFFFFFFFFFFCLL);
    if (v24) {
      uint64_t v25 = (uint64_t *)*v25;
    }
    uint64_t v26 = (std::string *)sub_1880F84((void *)(a1 + 24), v25);
    uint64_t v16 = (void *)sub_188C244(v26, *(char **)v31, (uint64_t)a3);
LABEL_36:
    *(void *)uint64_t v31 = v16;
    if (!v16) {
      goto LABEL_50;
    }
    goto LABEL_37;
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (*v7)
    {
      unint64_t v15 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = *(char **)v31;
    }
    uint64_t v16 = sub_1885AC0(v9, v15, v8, a3);
    goto LABEL_36;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_50:
  *(void *)uint64_t v31 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return *(void *)v31;
}

BOOL sub_1764FEC(unsigned int a1)
{
  return a1 < 7;
}

unsigned char *sub_1764FF8(uint64_t a1, unsigned char *__dst, void *a3)
{
  int v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    int v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v7 = *(int *)(a1 + 32);
    *int v4 = 16;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 36);
    *int v4 = 24;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    uint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    uint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_17651BC(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 7) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_15;
  }
  if (v1)
  {
    unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
    uint64_t v5 = *(void *)(v3 + 8);
    if ((v4 & 0x80u) == 0) {
      uint64_t v5 = v4;
    }
    uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_13;
    }
  }
  else
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_13;
    }
  }
  int v6 = *(_DWORD *)(a1 + 32);
  if (v6 < 0) {
    uint64_t v7 = 11;
  }
  else {
    uint64_t v7 = ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v2 += v7;
LABEL_13:
  if ((v1 & 4) != 0) {
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 36) | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_15:
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_17652B0()
{
  return 1;
}

void *sub_17652B8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.ResolvedItem");
}

void *sub_17652C8(void *a1)
{
  unint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_176533C(void *a1)
{
  sub_17652C8(a1);

  operator delete();
}

uint64_t sub_1765374(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 0x1F) != 0)
  {
    *(void *)(a1 + 24) = 0;
    *(void *)(a1 + 32) = 0;
    *(_DWORD *)(a1 + 40) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_176539C(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v38 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v38, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = v38 + 1;
    unsigned int v9 = *v38;
    if (*v38 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v38, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v38 + 2;
      }
    }
    unint64_t v38 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_42;
        }
        unsigned int v12 = v8 + 1;
        unint64_t v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        int v15 = v13 + (v14 << 7);
        unint64_t v13 = (v15 - 128);
        if (v14 < 0)
        {
          unint64_t v38 = (char *)sub_188C138((uint64_t)v8, (v15 - 128));
          if (!v38) {
            goto LABEL_81;
          }
          unint64_t v13 = v30;
        }
        else
        {
          unsigned int v12 = v8 + 2;
LABEL_13:
          unint64_t v38 = v12;
        }
        if (v13 <= 8)
        {
          *(_DWORD *)(a1 + 16) |= 1u;
          *(_DWORD *)(a1 + 24) = v13;
          goto LABEL_49;
        }
        if (*v7) {
          char v36 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          char v36 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v37 = 1;
        goto LABEL_73;
      case 2u:
        if (v9 != 16) {
          goto LABEL_42;
        }
        uint64_t v16 = v8 + 1;
        unint64_t v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_20;
        }
        int v17 = *v16;
        int v18 = v13 + (v17 << 7);
        unint64_t v13 = (v18 - 128);
        if (v17 < 0)
        {
          unint64_t v38 = (char *)sub_188C138((uint64_t)v8, (v18 - 128));
          if (!v38) {
            goto LABEL_81;
          }
          unint64_t v13 = v31;
        }
        else
        {
          uint64_t v16 = v8 + 2;
LABEL_20:
          unint64_t v38 = v16;
        }
        if (v13 <= 3)
        {
          *(_DWORD *)(a1 + 16) |= 2u;
          *(_DWORD *)(a1 + 28) = v13;
          goto LABEL_49;
        }
        if (*v7) {
          char v36 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          char v36 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v37 = 2;
        goto LABEL_73;
      case 3u:
        if (v9 != 24) {
          goto LABEL_42;
        }
        v5 |= 4u;
        int v19 = v8 + 1;
        int v20 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_27;
        }
        int v21 = *v19;
        int v20 = v20 + (v21 << 7) - 128;
        if (v21 < 0)
        {
          uint64_t v32 = (char *)sub_188C0D0((uint64_t)v8, v20);
          unint64_t v38 = v32;
          *(_DWORD *)(a1 + 32) = v33;
          if (!v32) {
            goto LABEL_81;
          }
        }
        else
        {
          int v19 = v8 + 2;
LABEL_27:
          unint64_t v38 = v19;
          *(_DWORD *)(a1 + 32) = v20;
        }
        goto LABEL_49;
      case 4u:
        if (v9 != 32) {
          goto LABEL_42;
        }
        int v22 = v8 + 1;
        unint64_t v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_32;
        }
        int v23 = *v22;
        int v24 = v13 + (v23 << 7);
        unint64_t v13 = (v24 - 128);
        if (v23 < 0)
        {
          unint64_t v38 = (char *)sub_188C138((uint64_t)v8, (v24 - 128));
          if (!v38) {
            goto LABEL_81;
          }
          unint64_t v13 = v34;
        }
        else
        {
          int v22 = v8 + 2;
LABEL_32:
          unint64_t v38 = v22;
        }
        if (sub_13942C0(v13))
        {
          *(_DWORD *)(a1 + 16) |= 8u;
          *(_DWORD *)(a1 + 36) = v13;
          goto LABEL_49;
        }
        if (*v7) {
          char v36 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          char v36 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v37 = 4;
        goto LABEL_73;
      case 5u:
        if (v9 != 40) {
          goto LABEL_42;
        }
        uint64_t v25 = v8 + 1;
        unint64_t v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_39;
        }
        int v26 = *v25;
        int v27 = v13 + (v26 << 7);
        unint64_t v13 = (v27 - 128);
        if (v26 < 0)
        {
          unint64_t v38 = (char *)sub_188C138((uint64_t)v8, (v27 - 128));
          if (!v38) {
            goto LABEL_81;
          }
          unint64_t v13 = v35;
        }
        else
        {
          uint64_t v25 = v8 + 2;
LABEL_39:
          unint64_t v38 = v25;
        }
        if (sub_125D180(v13))
        {
          *(_DWORD *)(a1 + 16) |= 0x10u;
          *(_DWORD *)(a1 + 40) = v13;
        }
        else
        {
          if (*v7) {
            char v36 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            char v36 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          int v37 = 5;
LABEL_73:
          sub_188C020(v37, v13, v36);
        }
        goto LABEL_49;
      default:
LABEL_42:
        if (v9) {
          BOOL v28 = (v9 & 7) == 4;
        }
        else {
          BOOL v28 = 1;
        }
        if (!v28)
        {
          if (*v7)
          {
            unint64_t v29 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            unint64_t v29 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = v38;
          }
          unint64_t v38 = (char *)sub_1885AC0(v9, v29, v8, a3);
          if (!v38) {
            goto LABEL_81;
          }
LABEL_49:
          if (sub_11947B8((uint64_t)a3, &v38, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_81:
        }
          unint64_t v38 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v38;
    }
  }
}

unsigned char *sub_17657D4(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 24);
    *uint64_t v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 28);
    *uint64_t v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v13 = *(_DWORD *)(a1 + 32);
    *uint64_t v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unsigned int v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v16 = *(int *)(a1 + 36);
    *uint64_t v4 = 32;
    v4[1] = v16;
    if (v16 > 0x7F)
    {
      v4[1] = v16 | 0x80;
      unint64_t v17 = v16 >> 7;
      v4[2] = v16 >> 7;
      v4 += 3;
      if (v16 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v18 = v17 >> 14;
          v17 >>= 7;
          *v4++ = v17;
        }
        while (v18);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v19 = *(int *)(a1 + 40);
    *uint64_t v4 = 40;
    v4[1] = v19;
    if (v19 > 0x7F)
    {
      v4[1] = v19 | 0x80;
      unint64_t v20 = v19 >> 7;
      v4[2] = v19 >> 7;
      v4 += 3;
      if (v19 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v21 = v20 >> 14;
          v20 >>= 7;
          *v4++ = v20;
        }
        while (v21);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v22 = *(void *)(a1 + 8);
  if ((v22 & 1) == 0) {
    return v4;
  }
  unint64_t v24 = v22 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v24 + 31) < 0)
  {
    uint64_t v25 = *(void **)(v24 + 8);
    uint64_t v26 = *(void *)(v24 + 16);
  }
  else
  {
    uint64_t v25 = (void *)(v24 + 8);
    LODWORD(v26) = *(unsigned __int8 *)(v24 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v26)
  {
    uint64_t v27 = (int)v26;
    memcpy(v4, v25, (int)v26);
    v4 += v27;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v25, v26, v4);
}

uint64_t sub_1765AEC(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 0x1F) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_27;
  }
  if (v1)
  {
    int v3 = *(_DWORD *)(a1 + 24);
    if (v3 < 0)
    {
      uint64_t v2 = 11;
      if ((v1 & 2) == 0) {
        goto LABEL_14;
      }
    }
    else
    {
      uint64_t v2 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v1 & 2) == 0) {
        goto LABEL_14;
      }
    }
  }
  else
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_14;
    }
  }
  int v4 = *(_DWORD *)(a1 + 28);
  if (v4 < 0) {
    uint64_t v5 = 11;
  }
  else {
    uint64_t v5 = ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v2 += v5;
LABEL_14:
  if ((v1 & 4) != 0)
  {
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 32) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 8) == 0)
    {
LABEL_16:
      if ((v1 & 0x10) == 0) {
        goto LABEL_27;
      }
      goto LABEL_23;
    }
  }
  else if ((v1 & 8) == 0)
  {
    goto LABEL_16;
  }
  int v6 = *(_DWORD *)(a1 + 36);
  if (v6 < 0) {
    uint64_t v7 = 11;
  }
  else {
    uint64_t v7 = ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v2 += v7;
  if ((v1 & 0x10) != 0)
  {
LABEL_23:
    int v8 = *(_DWORD *)(a1 + 40);
    if (v8 < 0) {
      uint64_t v9 = 11;
    }
    else {
      uint64_t v9 = ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v9;
  }
LABEL_27:
  uint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v12 + 31) < 0) {
      uint64_t v13 = *(void *)(v12 + 16);
    }
    else {
      uint64_t v13 = *(unsigned __int8 *)(v12 + 31);
    }
    v2 += v13;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_1765C48()
{
  return 1;
}

void *sub_1765C50@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.EvChargingPort");
}

uint64_t sub_1765C60(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_24D8318;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  uint64_t v5 = *(void *)(a2 + 24);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(void *)(a1 + 24) = v5;
  return a1;
}

void sub_1765CE4(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_1765D14(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1765D88(void *a1)
{
  sub_1765D14(a1);

  operator delete();
}

uint64_t sub_1765DC0(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 7) != 0)
  {
    *(_DWORD *)(a1 + 32) = 0;
    *(void *)(a1 + 24) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_1765DE8(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v32 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v32, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    int v8 = v32 + 1;
    unsigned int v9 = *v32;
    if (*v32 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        int v8 = (char *)sub_188C180((uint64_t)v32, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        int v8 = v32 + 2;
      }
    }
    uint64_t v32 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 == 3) {
      break;
    }
    if (v12 == 2)
    {
      if (v9 != 16) {
        goto LABEL_14;
      }
      v5 |= 2u;
      unint64_t v20 = v8 + 1;
      int v21 = *v8;
      if ((*v8 & 0x80000000) == 0) {
        goto LABEL_33;
      }
      int v22 = *v20;
      int v21 = v21 + (v22 << 7) - 128;
      if ((v22 & 0x80000000) == 0)
      {
        unint64_t v20 = v8 + 2;
LABEL_33:
        uint64_t v32 = v20;
        *(_DWORD *)(a1 + 28) = v21;
        goto LABEL_38;
      }
      uint64_t v27 = (char *)sub_188C0D0((uint64_t)v8, v21);
      uint64_t v32 = v27;
      *(_DWORD *)(a1 + 28) = v28;
      if (!v27) {
        goto LABEL_53;
      }
    }
    else
    {
      if (v12 != 1 || v9 != 8) {
        goto LABEL_14;
      }
      v5 |= 1u;
      int v23 = v8 + 1;
      int v24 = *v8;
      if ((*v8 & 0x80000000) == 0) {
        goto LABEL_37;
      }
      int v25 = *v23;
      int v24 = v24 + (v25 << 7) - 128;
      if ((v25 & 0x80000000) == 0)
      {
        int v23 = v8 + 2;
LABEL_37:
        uint64_t v32 = v23;
        *(_DWORD *)(a1 + 24) = v24;
        goto LABEL_38;
      }
      unint64_t v29 = (char *)sub_188C0D0((uint64_t)v8, v24);
      uint64_t v32 = v29;
      *(_DWORD *)(a1 + 24) = v30;
      if (!v29) {
        goto LABEL_53;
      }
    }
LABEL_38:
    if (sub_11947B8((uint64_t)a3, &v32, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 == 24)
  {
    unint64_t v16 = v8 + 1;
    unint64_t v17 = *v8;
    if (*v8 < 0)
    {
      int v18 = *v16;
      int v19 = v17 + (v18 << 7);
      unint64_t v17 = (v19 - 128);
      if (v18 < 0)
      {
        uint64_t v32 = (char *)sub_188C138((uint64_t)v8, (v19 - 128));
        if (!v32) {
          goto LABEL_53;
        }
        unint64_t v17 = v26;
        goto LABEL_27;
      }
      unint64_t v16 = v8 + 2;
    }
    uint64_t v32 = v16;
LABEL_27:
    if (v17 > 2)
    {
      if (*v7) {
        unint64_t v31 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        unint64_t v31 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      sub_188C020(3, v17, v31);
    }
    else
    {
      *(_DWORD *)(a1 + 16) |= 4u;
      *(_DWORD *)(a1 + 32) = v17;
    }
    goto LABEL_38;
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (*v7)
    {
      unsigned int v15 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unsigned int v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v8 = v32;
    }
    uint64_t v32 = (char *)sub_1885AC0(v9, v15, v8, a3);
    if (!v32) {
      goto LABEL_53;
    }
    goto LABEL_38;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_53:
  uint64_t v32 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v32;
}

unsigned char *sub_1766080(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 24);
    *uint64_t v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 28);
    *uint64_t v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v13 = *(int *)(a1 + 32);
    *uint64_t v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unint64_t v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return v4;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    int v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    int v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(v4, v19, (int)v20);
    v4 += v21;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v19, v20, v4);
}

uint64_t sub_17662A0(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 7) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_13;
  }
  if (v1)
  {
    uint64_t v2 = ((9 * (__clz(*(_DWORD *)(a1 + 24) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v2 = 0;
  if ((v1 & 2) != 0) {
LABEL_7:
  }
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 28) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_8:
  if ((v1 & 4) != 0)
  {
    int v3 = *(_DWORD *)(a1 + 32);
    if (v3 < 0) {
      uint64_t v4 = 11;
    }
    else {
      uint64_t v4 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v4;
  }
LABEL_13:
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5)
  {
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v7 + 31) < 0) {
      uint64_t v8 = *(void *)(v7 + 16);
    }
    else {
      uint64_t v8 = *(unsigned __int8 *)(v7 + 31);
    }
    v2 += v8;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_1766378()
{
  return 1;
}

void *sub_1766380@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.EVCharger.Plug.AvailabilityInfo");
}

void *sub_1766390(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1889DE8(a1 + 5);
  sub_1889DE8(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1766414(void *a1)
{
  sub_1766390(a1);

  operator delete();
}

uint64_t sub_176644C(uint64_t a1)
{
  sub_188CC00(a1 + 16);
  uint64_t result = sub_188CC00(a1 + 40);
  char v4 = *(unsigned char *)(a1 + 8);
  int v3 = (uint64_t *)(a1 + 8);
  if (v4)
  {
    return sub_188B4AC(v3);
  }
  return result;
}

uint64_t sub_17664A4(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v30 = a2;
  if ((sub_11947B8((uint64_t)a3, (char **)v30, a3[11].i32[1]) & 1) == 0)
  {
    int v6 = (uint64_t **)(a1 + 40);
    unint64_t v7 = (uint64_t **)(a1 + 16);
    uint64_t v8 = (void *)(a1 + 8);
    while (1)
    {
      unsigned int v9 = (char *)(*(void *)v30 + 1);
      unsigned int v10 = **(unsigned char **)v30;
      if ((char)**(unsigned char **)v30 < 0)
      {
        unsigned int v11 = v10 + (*v9 << 7);
        unsigned int v10 = v11 - 128;
        if (*v9 < 0)
        {
          unsigned int v9 = (char *)sub_188C180(*(uint64_t *)v30, v11 - 128);
          unsigned int v10 = v12;
        }
        else
        {
          unsigned int v9 = (char *)(*(void *)v30 + 2);
        }
      }
      *(void *)int v30 = v9;
      if (v10 >> 3 == 2)
      {
        if (v10 == 18)
        {
          uint64_t v16 = v9 - 1;
          while (1)
          {
            unint64_t v17 = (char *)(v16 + 1);
            *(void *)int v30 = v16 + 1;
            unint64_t v18 = *(_DWORD **)(a1 + 56);
            if (v18 && (uint64_t v19 = *(int *)(a1 + 48), (int)v19 < *v18))
            {
              *(_DWORD *)(a1 + 48) = v19 + 1;
              uint64_t v20 = *(std::string **)&v18[2 * v19 + 2];
            }
            else
            {
              if (!*v6) {
                operator new();
              }
              void *v22 = v21;
              v22[1] = sub_3A6EDC;
              *uint64_t v21 = 0;
              v21[1] = 0;
              int v21[2] = 0;
              uint64_t v20 = (std::string *)sub_188CDC8(a1 + 40, (uint64_t)v21);
              unint64_t v17 = *(char **)v30;
            }
            uint64_t v16 = sub_188C244(v20, v17, (uint64_t)a3);
            *(void *)int v30 = v16;
            if (!v16) {
              goto LABEL_48;
            }
            if (*(void *)a3 <= (unint64_t)v16 || *v16 != 18) {
              goto LABEL_43;
            }
          }
        }
      }
      else if (v10 >> 3 == 1 && v10 == 10)
      {
        int v23 = v9 - 1;
        while (1)
        {
          int v24 = (char *)(v23 + 1);
          *(void *)int v30 = v23 + 1;
          int v25 = *(_DWORD **)(a1 + 32);
          if (v25 && (uint64_t v26 = *(int *)(a1 + 24), (int)v26 < *v25))
          {
            *(_DWORD *)(a1 + 24) = v26 + 1;
            uint64_t v27 = *(std::string **)&v25[2 * v26 + 2];
          }
          else
          {
            if (!*v7) {
              operator new();
            }
            void *v29 = v28;
            v29[1] = sub_3A6EDC;
            *int v28 = 0;
            v28[1] = 0;
            v28[2] = 0;
            uint64_t v27 = (std::string *)sub_188CDC8(a1 + 16, (uint64_t)v28);
            int v24 = *(char **)v30;
          }
          int v23 = sub_188C244(v27, v24, (uint64_t)a3);
          *(void *)int v30 = v23;
          if (!v23) {
            goto LABEL_48;
          }
          if (*(void *)a3 <= (unint64_t)v23 || *v23 != 10) {
            goto LABEL_43;
          }
        }
      }
      if (!v10 || (v10 & 7) == 4) {
        break;
      }
      if (*v8)
      {
        unint64_t v15 = (std::string *)((*v8 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        unint64_t v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        unsigned int v9 = *(char **)v30;
      }
      *(void *)int v30 = sub_1885AC0(v10, v15, v9, a3);
      if (!*(void *)v30) {
        goto LABEL_48;
      }
LABEL_43:
      if (sub_11947B8((uint64_t)a3, (char **)v30, a3[11].i32[1])) {
        return *(void *)v30;
      }
    }
    if (v9)
    {
      a3[10].i32[0] = v10 - 1;
      return *(void *)v30;
    }
LABEL_48:
    *(void *)int v30 = 0;
  }
  return *(void *)v30;
}

char *sub_1766784(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v6 = *(unsigned int *)(a1 + 24);
  if ((int)v6 >= 1)
  {
    uint64_t v7 = 0;
    uint64_t v8 = 8 * v6;
    do
    {
      unsigned int v9 = *(void **)(*(void *)(a1 + 32) + v7 + 8);
      if (*((char *)v9 + 23) < 0)
      {
        int64_t v10 = v9[1];
        if (v10 > 127) {
          goto LABEL_12;
        }
      }
      else
      {
        int64_t v10 = *((unsigned __int8 *)v9 + 23);
      }
      if (*(void *)a3 - (void)__dst + 14 >= v10)
      {
        *__dst = 10;
        __dst[1] = v10;
        if (*((char *)v9 + 23) < 0) {
          unsigned int v9 = (void *)*v9;
        }
        unsigned int v11 = __dst + 2;
        memcpy(v11, v9, v10);
        __dst = &v11[v10];
        goto LABEL_10;
      }
LABEL_12:
      __dst = (char *)sub_188A868(a3, 1, (uint64_t)v9, __dst);
LABEL_10:
      v7 += 8;
    }
    while (v8 != v7);
  }
  uint64_t v12 = *(unsigned int *)(a1 + 48);
  if ((int)v12 >= 1)
  {
    uint64_t v13 = 0;
    uint64_t v14 = 8 * v12;
    do
    {
      unint64_t v15 = *(void **)(*(void *)(a1 + 56) + v13 + 8);
      if (*((char *)v15 + 23) < 0)
      {
        int64_t v16 = v15[1];
        if (v16 > 127) {
          goto LABEL_24;
        }
      }
      else
      {
        int64_t v16 = *((unsigned __int8 *)v15 + 23);
      }
      if (*(void *)a3 - (void)__dst + 14 >= v16)
      {
        *__dst = 18;
        __dst[1] = v16;
        if (*((char *)v15 + 23) < 0) {
          unint64_t v15 = (void *)*v15;
        }
        unint64_t v17 = __dst + 2;
        memcpy(v17, v15, v16);
        __dst = &v17[v16];
        goto LABEL_22;
      }
LABEL_24:
      __dst = (char *)sub_188A868(a3, 2, (uint64_t)v15, __dst);
LABEL_22:
      v13 += 8;
    }
    while (v14 != v13);
  }
  uint64_t v18 = *(void *)(a1 + 8);
  if ((v18 & 1) == 0) {
    return __dst;
  }
  unint64_t v20 = v18 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v20 + 31) < 0)
  {
    uint64_t v21 = *(void **)(v20 + 8);
    uint64_t v22 = *(void *)(v20 + 16);
  }
  else
  {
    uint64_t v21 = (void *)(v20 + 8);
    LODWORD(v22) = *(unsigned __int8 *)(v20 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v22)
  {
    uint64_t v23 = (int)v22;
    memcpy(__dst, v21, (int)v22);
    __dst += v23;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v21, v22, __dst);
}

uint64_t sub_1766994(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 24);
  if ((int)v1 < 1)
  {
    uint64_t v3 = *(unsigned int *)(a1 + 24);
  }
  else
  {
    uint64_t v2 = (uint64_t *)(*(void *)(a1 + 32) + 8);
    uint64_t v3 = *(unsigned int *)(a1 + 24);
    do
    {
      uint64_t v4 = *v2++;
      uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
      uint64_t v6 = *(void *)(v4 + 8);
      if ((v5 & 0x80u) == 0) {
        uint64_t v6 = v5;
      }
      v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6);
      --v1;
    }
    while (v1);
  }
  uint64_t v7 = *(unsigned int *)(a1 + 48);
  uint64_t v8 = v3 + v7;
  if ((int)v7 >= 1)
  {
    unsigned int v9 = (uint64_t *)(*(void *)(a1 + 56) + 8);
    do
    {
      uint64_t v10 = *v9++;
      uint64_t v11 = *(unsigned __int8 *)(v10 + 23);
      uint64_t v12 = *(void *)(v10 + 8);
      if ((v11 & 0x80u) == 0) {
        uint64_t v12 = v11;
      }
      v8 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6);
      --v7;
    }
    while (v7);
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if (v13)
  {
    unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v15 + 31) < 0) {
      uint64_t v16 = *(void *)(v15 + 16);
    }
    else {
      uint64_t v16 = *(unsigned __int8 *)(v15 + 31);
    }
    v8 += v16;
  }
  *(_DWORD *)(a1 + 64) = v8;
  return v8;
}

uint64_t sub_1766A84()
{
  return 1;
}

void *sub_1766A8C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.EVCharger.Plug.ChargerInfo");
}

void *sub_1766A9C(void *a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  a1[1] = v4;
  *a1 = off_24D8418;
  sub_1882BC4((uint64_t)(a1 + 2), a2);
  a1[5] = 0;
  a1[6] = &qword_2550250;
  a1[7] = &qword_2550250;
  a1[9] = 0;
  a1[10] = 0;
  a1[8] = 0;
  return a1;
}

void sub_1766B14(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_1766B44(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_14;
    }
  }
  else if (v4)
  {
    goto LABEL_14;
  }
  uint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 56) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 56));
  }
  if ((uint64_t (***)())a1 != &off_2548830)
  {
    uint64_t v6 = *(void **)(a1 + 64);
    if (v6)
    {
      sub_1765D14(v6);
      operator delete();
    }
    uint64_t v7 = *(void **)(a1 + 72);
    if (v7)
    {
      sub_1766390(v7);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_14:
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1766C54(uint64_t a1)
{
  sub_1766B44(a1);

  operator delete();
}

uint64_t sub_1766C8C(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  int v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 0xF) == 0) {
    goto LABEL_7;
  }
  if (v3)
  {
    unint64_t v6 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v6 + 23) < 0)
    {
      **(unsigned char **)unint64_t v6 = 0;
      *(void *)(v6 + 8) = 0;
      if ((v3 & 2) != 0) {
        goto LABEL_17;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v6 = 0;
      *(unsigned char *)(v6 + 23) = 0;
      if ((v3 & 2) != 0) {
        goto LABEL_17;
      }
    }
LABEL_4:
    if ((v3 & 4) == 0) {
      goto LABEL_5;
    }
    goto LABEL_21;
  }
  if ((v3 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_17:
  unint64_t v7 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v7 + 23) < 0)
  {
    **(unsigned char **)unint64_t v7 = 0;
    *(void *)(v7 + 8) = 0;
    if ((v3 & 4) != 0) {
      goto LABEL_21;
    }
LABEL_5:
    if ((v3 & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  *(unsigned char *)unint64_t v7 = 0;
  *(unsigned char *)(v7 + 23) = 0;
  if ((v3 & 4) == 0) {
    goto LABEL_5;
  }
LABEL_21:
  uint64_t result = sub_1765DC0(*(void *)(a1 + 64));
  if ((v3 & 8) != 0) {
LABEL_6:
  }
    uint64_t result = sub_176644C(*(void *)(a1 + 72));
LABEL_7:
  if ((v3 & 0x30) != 0) {
    *(void *)(a1 + 80) = 0;
  }
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t v4 = a1 + 8;
  *(_DWORD *)(v4 + 32) = 0;
  if (v5)
  {
    return sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

uint64_t sub_1766D80(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unint64_t v35 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v35, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (unsigned __int8 *)(*(void *)v35 + 1);
    unsigned int v9 = **(unsigned char **)v35;
    if ((char)**(unsigned char **)v35 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        uint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v35, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (unsigned __int8 *)(*(void *)v35 + 2);
      }
    }
    *(void *)unint64_t v35 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_42;
        }
        uint64_t v12 = (char *)(v8 + 1);
        unint64_t v13 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        int v15 = v13 + (v14 << 7);
        unint64_t v13 = (v15 - 128);
        if (v14 < 0)
        {
          *(void *)unint64_t v35 = sub_188C138((uint64_t)v8, (v15 - 128));
          if (!*(void *)v35) {
            goto LABEL_65;
          }
          unint64_t v13 = v31;
        }
        else
        {
          uint64_t v12 = (char *)(v8 + 2);
LABEL_13:
          *(void *)unint64_t v35 = v12;
        }
        if (sub_13942C0(v13))
        {
          *(_DWORD *)(a1 + 40) |= 0x10u;
          *(_DWORD *)(a1 + 80) = v13;
        }
        else
        {
          if (*v7) {
            unint64_t v34 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            unint64_t v34 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(1, v13, v34);
        }
        goto LABEL_52;
      case 2u:
        if (v9 != 18) {
          goto LABEL_42;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        uint64_t v16 = *(void *)(a1 + 8);
        unint64_t v17 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
        if (v16) {
          unint64_t v17 = (uint64_t *)*v17;
        }
        uint64_t v18 = (void *)(a1 + 48);
        goto LABEL_24;
      case 3u:
        if (v9 != 26) {
          goto LABEL_42;
        }
        *(_DWORD *)(a1 + 40) |= 2u;
        uint64_t v19 = *(void *)(a1 + 8);
        unint64_t v17 = (uint64_t *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
        if (v19) {
          unint64_t v17 = (uint64_t *)*v17;
        }
        uint64_t v18 = (void *)(a1 + 56);
LABEL_24:
        unint64_t v20 = (std::string *)sub_1880F84(v18, v17);
        uint64_t v21 = (uint64_t)sub_188C244(v20, *(char **)v35, (uint64_t)a3);
        goto LABEL_51;
      case 4u:
        if (v9 != 32) {
          goto LABEL_42;
        }
        v5 |= 0x20u;
        uint64_t v22 = (char *)(v8 + 1);
        int v23 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_29;
        }
        int v24 = *v22;
        int v23 = v23 + (v24 << 7) - 128;
        if (v24 < 0)
        {
          uint64_t v32 = sub_188C0D0((uint64_t)v8, v23);
          *(void *)unint64_t v35 = v32;
          *(_DWORD *)(a1 + 84) = v33;
          if (!v32) {
            goto LABEL_65;
          }
        }
        else
        {
          uint64_t v22 = (char *)(v8 + 2);
LABEL_29:
          *(void *)unint64_t v35 = v22;
          *(_DWORD *)(a1 + 84) = v23;
        }
        goto LABEL_52;
      case 5u:
        if (v9 != 42) {
          goto LABEL_42;
        }
        *(_DWORD *)(a1 + 40) |= 4u;
        uint64_t v25 = *(void *)(a1 + 64);
        if (!v25)
        {
          uint64_t v26 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v26 = (void *)*v26;
          }
          uint64_t v25 = sub_178CF88((uint64_t)v26);
          *(void *)(a1 + 64) = v25;
          uint64_t v8 = *(unsigned __int8 **)v35;
        }
        uint64_t v21 = (uint64_t)sub_176715C(a3, v25, v8);
        goto LABEL_51;
      case 6u:
        if (v9 != 50) {
          goto LABEL_42;
        }
        *(_DWORD *)(a1 + 40) |= 8u;
        uint64_t v27 = *(void *)(a1 + 72);
        if (!v27)
        {
          int v28 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            int v28 = (void *)*v28;
          }
          uint64_t v27 = sub_178D004((uint64_t)v28);
          *(void *)(a1 + 72) = v27;
          uint64_t v8 = *(unsigned __int8 **)v35;
        }
        uint64_t v21 = sub_17671EC(a3, v27, v8);
        goto LABEL_51;
      default:
LABEL_42:
        if (v9) {
          BOOL v29 = (v9 & 7) == 4;
        }
        else {
          BOOL v29 = 1;
        }
        if (!v29)
        {
          if ((v9 - 8000) >> 6 > 0x7C)
          {
            if (*v7)
            {
              int v30 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              int v30 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              uint64_t v8 = *(unsigned __int8 **)v35;
            }
            uint64_t v21 = (uint64_t)sub_1885AC0(v9, v30, (char *)v8, a3);
          }
          else
          {
            uint64_t v21 = (uint64_t)sub_18859DC((uint64_t **)(a1 + 16), v9, (char *)v8, (uint64_t)&off_2548830, (uint64_t *)(a1 + 8), a3);
          }
LABEL_51:
          *(void *)unint64_t v35 = v21;
          if (!v21) {
            goto LABEL_65;
          }
LABEL_52:
          if (sub_11947B8((uint64_t)a3, (char **)v35, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_65:
        }
          *(void *)unint64_t v35 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 40) |= v5;
        return *(void *)v35;
    }
  }
}

char *sub_176715C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1765DE8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_17671EC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17664A4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_176727C(uint64_t a1, char *a2, void *a3)
{
  uint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unint64_t v7 = *(int *)(a1 + 80);
    *uint64_t v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    uint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), v4);
    if ((v6 & 2) == 0)
    {
LABEL_10:
      if ((v6 & 0x20) == 0) {
        goto LABEL_20;
      }
      goto LABEL_14;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_10;
  }
  uint64_t v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x20) == 0) {
    goto LABEL_20;
  }
LABEL_14:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  unsigned int v10 = *(_DWORD *)(a1 + 84);
  *uint64_t v4 = 32;
  v4[1] = v10;
  if (v10 > 0x7F)
  {
    v4[1] = v10 | 0x80;
    unsigned int v11 = v10 >> 7;
    v4[2] = v10 >> 7;
    v4 += 3;
    if (v10 >= 0x4000)
    {
      do
      {
        *(v4 - 1) |= 0x80u;
        unsigned int v12 = v11 >> 14;
        v11 >>= 7;
        *v4++ = v11;
      }
      while (v12);
    }
  }
  else
  {
    v4 += 2;
  }
LABEL_20:
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v13 = *(void *)(a1 + 64);
    *uint64_t v4 = 42;
    unsigned int v14 = *(_DWORD *)(v13 + 20);
    v4[1] = v14;
    if (v14 > 0x7F) {
      int v15 = sub_188A9CC(v14, v4 + 1);
    }
    else {
      int v15 = v4 + 2;
    }
    uint64_t v4 = sub_1766080(v13, (unint64_t)v15, a3);
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v16 = *(void *)(a1 + 72);
    *uint64_t v4 = 50;
    unsigned int v17 = *(_DWORD *)(v16 + 64);
    v4[1] = v17;
    if (v17 > 0x7F) {
      uint64_t v18 = sub_188A9CC(v17, v4 + 1);
    }
    else {
      uint64_t v18 = v4 + 2;
    }
    uint64_t v4 = sub_1766784(v16, v18, a3);
  }
  if (*(_WORD *)(a1 + 26)) {
    uint64_t v4 = sub_1886844(a1 + 16, 1000, 2000, v4, a3);
  }
  uint64_t v19 = *(void *)(a1 + 8);
  if ((v19 & 1) == 0) {
    return v4;
  }
  unint64_t v21 = v19 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v21 + 31) < 0)
  {
    uint64_t v22 = *(void **)(v21 + 8);
    uint64_t v23 = *(void *)(v21 + 16);
  }
  else
  {
    uint64_t v22 = (void *)(v21 + 8);
    LODWORD(v23) = *(unsigned __int8 *)(v21 + 31);
  }
  if (*a3 - (void)v4 >= (int)v23)
  {
    uint64_t v24 = (int)v23;
    memcpy(v4, v22, (int)v23);
    v4 += v24;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v22, v23, v4);
}

uint64_t sub_1767564(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = v2;
  int v4 = *(_DWORD *)(a1 + 40);
  if ((v4 & 0x3F) == 0) {
    goto LABEL_9;
  }
  if (v4)
  {
    unint64_t v7 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v8 = *(unsigned __int8 *)(v7 + 23);
    uint64_t v9 = *(void *)(v7 + 8);
    if ((v8 & 0x80u) == 0) {
      uint64_t v9 = v8;
    }
    uint64_t v3 = v2 + v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v4 & 2) == 0)
    {
LABEL_4:
      if ((v4 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_17;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_4;
  }
  unint64_t v10 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v11 = *(unsigned __int8 *)(v10 + 23);
  uint64_t v12 = *(void *)(v10 + 8);
  if ((v11 & 0x80u) == 0) {
    uint64_t v12 = v11;
  }
  v3 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v4 & 4) == 0)
  {
LABEL_5:
    if ((v4 & 8) == 0) {
      goto LABEL_6;
    }
LABEL_18:
    uint64_t v14 = sub_1766994(*(void *)(a1 + 72));
    v3 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v4 & 0x10) == 0)
    {
LABEL_7:
      if ((v4 & 0x20) == 0) {
        goto LABEL_9;
      }
      goto LABEL_8;
    }
    goto LABEL_19;
  }
LABEL_17:
  uint64_t v13 = sub_17662A0(*(void *)(a1 + 64));
  v3 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v4 & 8) != 0) {
    goto LABEL_18;
  }
LABEL_6:
  if ((v4 & 0x10) == 0) {
    goto LABEL_7;
  }
LABEL_19:
  int v15 = *(_DWORD *)(a1 + 80);
  if (v15 < 0) {
    uint64_t v16 = 11;
  }
  else {
    uint64_t v16 = ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v3 += v16;
  if ((v4 & 0x20) != 0) {
LABEL_8:
  }
    v3 += ((9 * (__clz(*(_DWORD *)(a1 + 84) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_9:
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5)
  {
    unint64_t v17 = v5 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v17 + 31) < 0) {
      uint64_t v18 = *(void *)(v17 + 16);
    }
    else {
      uint64_t v18 = *(unsigned __int8 *)(v17 + 31);
    }
    v3 += v18;
  }
  *(_DWORD *)(a1 + 44) = v3;
  return v3;
}

void sub_1767734(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 40);
  if ((v4 & 0x3F) != 0)
  {
    if (v4)
    {
      int v6 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 40) |= 1u;
      unint64_t v7 = (std::string **)(a1 + 48);
      uint64_t v8 = *(void *)(a1 + 8);
      uint64_t v9 = (uint64_t *)(v8 & 0xFFFFFFFFFFFFFFFCLL);
      if (v8) {
        uint64_t v9 = (uint64_t *)*v9;
      }
      sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_20;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    unint64_t v10 = (long long *)(*(void *)(a2 + 56) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 40) |= 2u;
    uint64_t v11 = *(void *)(a1 + 8);
    uint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
    if (v11) {
      uint64_t v12 = (uint64_t *)*v12;
    }
    sub_1881DF4((std::string **)(a1 + 56), v10, v12);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_28;
    }
LABEL_20:
    *(_DWORD *)(a1 + 40) |= 4u;
    uint64_t v13 = *(std::string **)(a1 + 64);
    if (!v13)
    {
      uint64_t v14 = *(void *)(a1 + 8);
      int v15 = (void *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
      if (v14) {
        int v15 = (void *)*v15;
      }
      uint64_t v13 = (std::string *)sub_178CF88((uint64_t)v15);
      *(void *)(a1 + 64) = v13;
    }
    if (*(void *)(a2 + 64)) {
      uint64_t v16 = *(uint64_t (****)())(a2 + 64);
    }
    else {
      uint64_t v16 = &off_25487C0;
    }
    sub_117EF50(v13, (uint64_t)v16);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0) {
        goto LABEL_7;
      }
      goto LABEL_36;
    }
LABEL_28:
    *(_DWORD *)(a1 + 40) |= 8u;
    unint64_t v17 = *(std::string **)(a1 + 72);
    if (!v17)
    {
      uint64_t v18 = *(void *)(a1 + 8);
      uint64_t v19 = (void *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
      if (v18) {
        uint64_t v19 = (void *)*v19;
      }
      unint64_t v17 = (std::string *)sub_178D004((uint64_t)v19);
      *(void *)(a1 + 72) = v17;
    }
    if (*(void *)(a2 + 72)) {
      unint64_t v20 = *(uint64_t (****)())(a2 + 72);
    }
    else {
      unint64_t v20 = &off_25487E8;
    }
    sub_1216B14(v17, (uint64_t)v20);
    if ((v4 & 0x10) == 0)
    {
LABEL_7:
      if ((v4 & 0x20) == 0)
      {
LABEL_9:
        *(_DWORD *)(a1 + 40) |= v4;
        goto LABEL_10;
      }
LABEL_8:
      *(_DWORD *)(a1 + 84) = *(_DWORD *)(a2 + 84);
      goto LABEL_9;
    }
LABEL_36:
    *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
    if ((v4 & 0x20) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
LABEL_10:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_17678E8(uint64_t a1)
{
  return sub_18856CC(a1 + 16);
}

void *sub_17678F0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.EVCharger.Plug");
}

uint64_t sub_1767900(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  *(void *)(a1 + 8) = v5;
  *(void *)a1 = off_24D8498;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = a2;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  return a1;
}

void sub_1767974(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_17679A4(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = a1 + 16;
  *(void *)a1 = off_24D8498;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  int v6 = (uint64_t *)(a1 + 48);
  *(_DWORD *)(a1 + 68) = 0;
  *(void *)(a1 + 52) = 0;
  *(void *)(a1 + 60) = 0;
  *(void *)(a1 + 44) = 0;
  int v7 = *(_DWORD *)(a2 + 56);
  if (v7)
  {
    uint64_t v8 = *(void *)(a2 + 64);
    uint64_t v9 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_1872858(v6, v9, (uint64_t *)(v8 + 8), v7, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v10 = *(_DWORD *)(a1 + 56) + v7;
    *(_DWORD *)(a1 + 56) = v10;
    uint64_t v11 = *(int **)(a1 + 64);
    if (*v11 < v10) {
      *uint64_t v11 = v10;
    }
  }
  uint64_t v12 = *(void *)(a2 + 8);
  if (v12) {
    sub_188B4F8(v4, (v12 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v5, a2 + 16);
  if (*(unsigned char *)(a2 + 40)) {
    operator new();
  }
  uint64_t v13 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = v13;
  return a1;
}

void sub_1767AF0()
{
}

uint64_t sub_1767B60(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_2548888)
  {
    int v6 = *(void **)(a1 + 72);
    if (v6)
    {
      sub_1765D14(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  sub_18709BC((void *)(a1 + 48));
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1767C2C(uint64_t a1)
{
  sub_1767B60(a1);

  operator delete();
}

char *sub_1767C64(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v30 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v30, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v30 + 1;
    unsigned int v9 = *v30;
    if (*v30 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v30, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v30 + 2;
      }
    }
    int v30 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 != 3) {
      break;
    }
    if (v9 != 24) {
      goto LABEL_14;
    }
    v5 |= 2u;
    uint64_t v16 = v8 + 1;
    uint64_t v17 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_24;
    }
    int v18 = *v16;
    uint64_t v17 = v17 + (v18 << 7) - 128;
    if ((v18 & 0x80000000) == 0)
    {
      uint64_t v16 = v8 + 2;
LABEL_24:
      int v30 = v16;
      *(void *)(a1 + 80) = v17;
      goto LABEL_44;
    }
    int v28 = (char *)sub_188C138((uint64_t)v8, v17);
    int v30 = v28;
    *(void *)(a1 + 80) = v29;
    if (!v28) {
      goto LABEL_51;
    }
LABEL_44:
    if (sub_11947B8((uint64_t)a3, &v30, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v12 == 2)
  {
    if (v9 == 18)
    {
      *(_DWORD *)(a1 + 40) |= 1u;
      uint64_t v19 = *(void *)(a1 + 72);
      if (!v19)
      {
        unint64_t v20 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          unint64_t v20 = (void *)*v20;
        }
        uint64_t v19 = sub_178CF88((uint64_t)v20);
        *(void *)(a1 + 72) = v19;
        uint64_t v8 = v30;
      }
      int v15 = sub_176715C(a3, v19, (unsigned __int8 *)v8);
LABEL_43:
      int v30 = v15;
      if (!v15) {
        goto LABEL_51;
      }
      goto LABEL_44;
    }
  }
  else if (v12 == 1 && v9 == 10)
  {
    unint64_t v21 = v8 - 1;
    while (1)
    {
      uint64_t v22 = (unsigned __int8 *)(v21 + 1);
      int v30 = v21 + 1;
      uint64_t v23 = *(_DWORD **)(a1 + 64);
      if (v23 && (uint64_t v24 = *(int *)(a1 + 56), (int)v24 < *v23))
      {
        *(_DWORD *)(a1 + 56) = v24 + 1;
        uint64_t v25 = *(void *)&v23[2 * v24 + 2];
      }
      else
      {
        uint64_t v26 = sub_178D0A8(*(void *)(a1 + 48));
        uint64_t v25 = sub_188CDC8(a1 + 48, (uint64_t)v26);
        uint64_t v22 = (unsigned __int8 *)v30;
      }
      unint64_t v21 = (char *)sub_1767F2C(a3, v25, v22);
      int v30 = v21;
      if (!v21) {
        goto LABEL_51;
      }
      if (*(void *)a3 <= (unint64_t)v21 || *v21 != 10) {
        goto LABEL_44;
      }
    }
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if ((v9 - 8000) >> 6 > 0x7C)
    {
      if (*v7)
      {
        uint64_t v27 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        uint64_t v27 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        uint64_t v8 = v30;
      }
      int v15 = (char *)sub_1885AC0(v9, v27, v8, a3);
    }
    else
    {
      int v15 = (char *)sub_18859DC((uint64_t **)(a1 + 16), v9, v8, (uint64_t)&off_2548888, (uint64_t *)(a1 + 8), a3);
    }
    goto LABEL_43;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_51:
  int v30 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 40) |= v5;
  return v30;
}

uint64_t sub_1767F2C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1766D80(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1767FBC(uint64_t a1, char *a2, void *a3)
{
  int v6 = *(_DWORD *)(a1 + 56);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 64) + 8 * i + 8);
      *a2 = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 44);
      a2[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, a2 + 1);
      }
      else {
        unsigned int v10 = a2 + 2;
      }
      a2 = sub_176727C(v8, v10, a3);
    }
  }
  int v11 = *(_DWORD *)(a1 + 40);
  if (v11)
  {
    if (*a3 <= (unint64_t)a2) {
      a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    uint64_t v12 = *(void *)(a1 + 72);
    *a2 = 18;
    unsigned int v13 = *(_DWORD *)(v12 + 20);
    a2[1] = v13;
    if (v13 > 0x7F) {
      BOOL v14 = sub_188A9CC(v13, a2 + 1);
    }
    else {
      BOOL v14 = a2 + 2;
    }
    a2 = sub_1766080(v12, (unint64_t)v14, a3);
  }
  if ((v11 & 2) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unint64_t v15 = *(void *)(a1 + 80);
    *a2 = 24;
    a2[1] = v15;
    if (v15 > 0x7F)
    {
      a2[1] = v15 | 0x80;
      unint64_t v16 = v15 >> 7;
      a2[2] = v15 >> 7;
      a2 += 3;
      if (v15 >= 0x4000)
      {
        do
        {
          *(a2 - 1) |= 0x80u;
          unint64_t v17 = v16 >> 14;
          v16 >>= 7;
          *a2++ = v16;
        }
        while (v17);
      }
    }
    else
    {
      a2 += 2;
    }
  }
  if (*(_WORD *)(a1 + 26)) {
    a2 = sub_1886844(a1 + 16, 1000, 2000, a2, a3);
  }
  uint64_t v18 = *(void *)(a1 + 8);
  if ((v18 & 1) == 0) {
    return a2;
  }
  unint64_t v20 = v18 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v20 + 31) < 0)
  {
    unint64_t v21 = *(void **)(v20 + 8);
    uint64_t v22 = *(void *)(v20 + 16);
  }
  else
  {
    unint64_t v21 = (void *)(v20 + 8);
    LODWORD(v22) = *(unsigned __int8 *)(v20 + 31);
  }
  if (*a3 - (void)a2 >= (int)v22)
  {
    uint64_t v23 = (int)v22;
    memcpy(a2, v21, (int)v22);
    a2 += v23;
    return a2;
  }

  return (char *)sub_188A528(a3, (char *)v21, v22, a2);
}

uint64_t sub_1768208(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(int *)(a1 + 56);
  uint64_t v4 = v2 + v3;
  uint64_t v5 = *(void *)(a1 + 64);
  if (v5) {
    int v6 = (uint64_t *)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = sub_1767564(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  int v10 = *(_DWORD *)(a1 + 40);
  if ((v10 & 3) != 0)
  {
    if (v10)
    {
      uint64_t v11 = sub_17662A0(*(void *)(a1 + 72));
      v4 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v10 & 2) != 0) {
      v4 += ((9 * (__clz(*(void *)(a1 + 80) | 1) ^ 0x3F) + 73) >> 6) + 1;
    }
  }
  uint64_t v12 = *(void *)(a1 + 8);
  if (v12)
  {
    unint64_t v14 = v12 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v14 + 31) < 0) {
      uint64_t v15 = *(void *)(v14 + 16);
    }
    else {
      uint64_t v15 = *(unsigned __int8 *)(v14 + 31);
    }
    v4 += v15;
  }
  *(_DWORD *)(a1 + 44) = v4;
  return v4;
}

void *sub_176831C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.EVCharger");
}

uint64_t sub_176832C(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)a1 = off_24D8518;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v5 = (uint64_t *)(a1 + 24);
  *(_DWORD *)(a1 + 44) = 0;
  *(void *)(a1 + 28) = 0;
  *(void *)(a1 + 36) = 0;
  *(void *)(a1 + 20) = 0;
  int v6 = *(_DWORD *)(a2 + 32);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 40);
    uint64_t v8 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_18728E4(v5, v8, (uint64_t *)(v7 + 8), v6, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v9 = *(_DWORD *)(a1 + 32) + v6;
    *(_DWORD *)(a1 + 32) = v9;
    int v10 = *(int **)(a1 + 40);
    if (*v10 < v9) {
      *int v10 = v9;
    }
  }
  uint64_t v11 = *(void *)(a2 + 8);
  if (v11) {
    sub_188B4F8(v4, (v11 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  if (*(unsigned char *)(a2 + 16)) {
    operator new();
  }
  *(void *)(a1 + 48) = 0;
  return a1;
}

void sub_1768450()
{
}

uint64_t sub_17684B4(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_25488E0)
  {
    int v6 = *(void **)(a1 + 48);
    if (v6)
    {
      sub_1779EB4(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  sub_1870A3C((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1768578(uint64_t a1)
{
  sub_17684B4(a1);

  operator delete();
}

char *sub_17685B0(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v23 = a2;
  if (sub_11947B8((uint64_t)a3, &v23, a3[11].i32[1])) {
    return v23;
  }
  int v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v23 + 1;
    unsigned int v8 = *v23;
    if (*v23 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v23, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v23 + 2;
      }
    }
    uint64_t v23 = v7;
    if (v8 >> 3 != 2) {
      break;
    }
    if (v8 != 18) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v15 = *(void *)(a1 + 48);
    if (!v15)
    {
      unint64_t v16 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        unint64_t v16 = (void *)*v16;
      }
      uint64_t v15 = sub_178E2FC((uint64_t)v16);
      *(void *)(a1 + 48) = v15;
      uint64_t v7 = v23;
    }
    unint64_t v14 = sub_1725114(a3, v15, (unsigned __int8 *)v7);
LABEL_26:
    uint64_t v23 = v14;
    if (!v14) {
      return 0;
    }
LABEL_27:
    if (sub_11947B8((uint64_t)a3, &v23, a3[11].i32[1])) {
      return v23;
    }
  }
  if (v8 >> 3 == 1 && v8 == 10)
  {
    unint64_t v17 = v7 - 1;
    while (1)
    {
      uint64_t v18 = (unsigned __int8 *)(v17 + 1);
      uint64_t v23 = v17 + 1;
      uint64_t v19 = *(_DWORD **)(a1 + 40);
      if (v19 && (uint64_t v20 = *(int *)(a1 + 32), (int)v20 < *v19))
      {
        *(_DWORD *)(a1 + 32) = v20 + 1;
        uint64_t v21 = *(void *)&v19[2 * v20 + 2];
      }
      else
      {
        uint64_t v22 = sub_178D1FC(*(void *)(a1 + 24));
        uint64_t v21 = sub_188CDC8(a1 + 24, v22);
        uint64_t v18 = (unsigned __int8 *)v23;
      }
      unint64_t v17 = sub_17687B8(a3, v21, v18);
      uint64_t v23 = v17;
      if (!v17) {
        return 0;
      }
      if (*(void *)a3 <= (unint64_t)v17 || *v17 != 10) {
        goto LABEL_27;
      }
    }
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      unsigned int v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unsigned int v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = v23;
    }
    unint64_t v14 = (char *)sub_1885AC0(v8, v13, v7, a3);
    goto LABEL_26;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v23;
  }
  return 0;
}

char *sub_17687B8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1768D48(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1768848(uint64_t a1, char *__dst, unint64_t *a3)
{
  int v6 = *(_DWORD *)(a1 + 32);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unsigned int v10 = __dst + 2;
      }
      __dst = sub_1768FE8(v8, (unint64_t)v10, a3);
    }
  }
  if (*(unsigned char *)(a1 + 16))
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    uint64_t v11 = *(void *)(a1 + 48);
    *__dst = 18;
    unsigned int v12 = *(_DWORD *)(v11 + 64);
    __dst[1] = v12;
    if (v12 > 0x7F) {
      unsigned int v13 = sub_188A9CC(v12, __dst + 1);
    }
    else {
      unsigned int v13 = __dst + 2;
    }
    __dst = sub_177A1E8(v11, v13, a3);
  }
  uint64_t v14 = *(void *)(a1 + 8);
  if ((v14 & 1) == 0) {
    return __dst;
  }
  unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v16 + 31) < 0)
  {
    unint64_t v17 = *(void **)(v16 + 8);
    uint64_t v18 = *(void *)(v16 + 16);
  }
  else
  {
    unint64_t v17 = (void *)(v16 + 8);
    LODWORD(v18) = *(unsigned __int8 *)(v16 + 31);
  }
  if ((uint64_t)(*a3 - (void)__dst) >= (int)v18)
  {
    uint64_t v19 = (int)v18;
    memcpy(__dst, v17, (int)v18);
    __dst += v19;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v17, v18, __dst);
}

uint64_t sub_17689F4(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_1769174(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  if (*(unsigned char *)(a1 + 16))
  {
    uint64_t v8 = sub_177A350(*(void *)(a1 + 48));
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    v2 += v12;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

void *sub_1768AD8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PlacecardLayoutData");
}

uint64_t sub_1768AE8(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_2548918)
  {
    uint64_t v6 = *(void **)(a1 + 24);
    if (v6)
    {
      sub_17696B8(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1768BA0(uint64_t a1)
{
  sub_1768AE8(a1);

  operator delete();
}

uint64_t sub_1768BD8(uint64_t result)
{
  uint64_t v1 = result;
  if (*(unsigned char *)(result + 16)) {
    uint64_t result = sub_1768C38(*(void *)(result + 24));
  }
  char v3 = *(unsigned char *)(v1 + 8);
  uint64_t v2 = v1 + 8;
  *(_DWORD *)(v2 + 24) = 0;
  *(_DWORD *)(v2 + 8) = 0;
  if (v3)
  {
    return sub_188B4AC((uint64_t *)v2);
  }
  return result;
}

uint64_t sub_1768C38(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if (!(_BYTE)v2) {
    goto LABEL_21;
  }
  if (v2)
  {
    uint64_t result = sub_1769900(*(void *)(result + 24));
    if ((v2 & 2) == 0)
    {
LABEL_4:
      if ((v2 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_12;
    }
  }
  else if ((v2 & 2) == 0)
  {
    goto LABEL_4;
  }
  uint64_t result = sub_176997C(*(void *)(v1 + 32));
  if ((v2 & 4) == 0)
  {
LABEL_5:
    if ((v2 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_13;
  }
LABEL_12:
  uint64_t result = sub_17699F8(*(void *)(v1 + 40));
  if ((v2 & 8) == 0)
  {
LABEL_6:
    if ((v2 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_14;
  }
LABEL_13:
  uint64_t result = sub_1769A90(*(void *)(v1 + 48));
  if ((v2 & 0x10) == 0)
  {
LABEL_7:
    if ((v2 & 0x20) == 0) {
      goto LABEL_8;
    }
    goto LABEL_15;
  }
LABEL_14:
  uint64_t result = sub_1769AE0(*(void *)(v1 + 56));
  if ((v2 & 0x20) == 0)
  {
LABEL_8:
    if ((v2 & 0x40) == 0) {
      goto LABEL_18;
    }
LABEL_16:
    uint64_t v3 = *(void *)(v1 + 72);
    char v4 = *(unsigned char *)(v3 + 8);
    uint64_t result = v3 + 8;
    *(_DWORD *)(result + 8) = 0;
    if (v4) {
      uint64_t result = sub_188B4AC((uint64_t *)result);
    }
    goto LABEL_18;
  }
LABEL_15:
  uint64_t result = sub_1769B74(*(void *)(v1 + 64));
  if ((v2 & 0x40) != 0) {
    goto LABEL_16;
  }
LABEL_18:
  if ((v2 & 0x80) != 0)
  {
    uint64_t v5 = *(void *)(v1 + 80);
    char v6 = *(unsigned char *)(v5 + 8);
    uint64_t result = v5 + 8;
    *(unsigned char *)(result + 16) = 0;
    *(_DWORD *)(result + 8) = 0;
    if (v6) {
      uint64_t result = sub_188B4AC((uint64_t *)result);
    }
  }
LABEL_21:
  if ((v2 & 0x300) != 0)
  {
    if ((v2 & 0x100) != 0) {
      uint64_t result = sub_1769C24(*(void *)(v1 + 88));
    }
    if ((v2 & 0x200) != 0) {
      uint64_t result = sub_1769CA0(*(void *)(v1 + 96));
    }
  }
  char v8 = *(unsigned char *)(v1 + 8);
  uint64_t v7 = v1 + 8;
  *(_DWORD *)(v7 + 8) = 0;
  if (v8)
  {
    return sub_188B4AC((uint64_t *)v7);
  }
  return result;
}

char *sub_1768D48(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v24 = a2;
  if (sub_11947B8((uint64_t)a3, &v24, a3[11].i32[1])) {
    return v24;
  }
  char v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v24 + 1;
    unsigned int v8 = *v24;
    if (*v24 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v24, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v24 + 2;
      }
    }
    uint64_t v24 = v7;
    if (v8 >> 3 != 2) {
      break;
    }
    if (v8 != 18) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v15 = *(void *)(a1 + 24);
    if (!v15)
    {
      unint64_t v16 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        unint64_t v16 = (void *)*v16;
      }
      sub_178D278((uint64_t)v16);
      uint64_t v15 = v17;
      *(void *)(a1 + 24) = v17;
      uint64_t v7 = v24;
    }
    uint64_t v14 = sub_1768F58(a3, v15, (unsigned __int8 *)v7);
LABEL_26:
    uint64_t v24 = v14;
    if (!v14) {
      return 0;
    }
LABEL_34:
    if (sub_11947B8((uint64_t)a3, &v24, a3[11].i32[1])) {
      return v24;
    }
  }
  if (v8 >> 3 == 1 && v8 == 8)
  {
    uint64_t v18 = v7 + 1;
    unint64_t v19 = *v7;
    if ((*v7 & 0x80000000) == 0) {
      goto LABEL_31;
    }
    int v20 = *v18;
    int v21 = v19 + (v20 << 7);
    unint64_t v19 = (v21 - 128);
    if (v20 < 0)
    {
      uint64_t v24 = (char *)sub_188C138((uint64_t)v7, (v21 - 128));
      if (!v24) {
        return 0;
      }
      unint64_t v19 = v22;
    }
    else
    {
      uint64_t v18 = v7 + 2;
LABEL_31:
      uint64_t v24 = v18;
    }
    if (v19 > 0xA)
    {
      if (*v6) {
        uint64_t v23 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        uint64_t v23 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      sub_188C020(1, v19, v23);
    }
    else
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      *(_DWORD *)(a1 + 32) = v19;
    }
    goto LABEL_34;
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      unsigned int v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unsigned int v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = v24;
    }
    uint64_t v14 = (char *)sub_1885AC0(v8, v13, v7, a3);
    goto LABEL_26;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v24;
  }
  return 0;
}

char *sub_1768F58(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1769CFC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_1768FE8(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 32);
    *char v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 24);
    *char v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 20);
    v4[1] = v11;
    if (v11 > 0x7F) {
      BOOL v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      BOOL v12 = v4 + 2;
    }
    char v4 = sub_176A724(v10, (unint64_t)v12, a3);
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    unint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    unint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_1769174(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 3) == 0)
  {
    uint64_t result = 0;
    goto LABEL_11;
  }
  if (v2)
  {
    uint64_t v4 = sub_176ABEC(*(void *)(a1 + 24));
    uint64_t result = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_11;
    }
  }
  else
  {
    uint64_t result = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_11;
    }
  }
  int v5 = *(_DWORD *)(a1 + 32);
  if (v5 < 0) {
    uint64_t v6 = 11;
  }
  else {
    uint64_t v6 = ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  result += v6;
LABEL_11:
  uint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    unint64_t v8 = v7 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v8 + 31) < 0) {
      uint64_t v9 = *(void *)(v8 + 16);
    }
    else {
      uint64_t v9 = *(unsigned __int8 *)(v8 + 31);
    }
    result += v9;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

std::string *sub_1769244(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 3) != 0)
  {
    if (v4)
    {
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      data = (std::string *)result[1].__r_.__value_.__l.__data_;
      if (!data)
      {
        std::string::size_type size = v3->__r_.__value_.__l.__size_;
        uint64_t v7 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
        if (size) {
          uint64_t v7 = (void *)*v7;
        }
        sub_178D278((uint64_t)v7);
        v3[1].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      }
      if (*(void *)(a2 + 24)) {
        unint64_t v8 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        unint64_t v8 = &off_2548940;
      }
      uint64_t result = sub_1769314(data, (uint64_t)v8);
    }
    if ((v4 & 2) != 0) {
      LODWORD(v3[1].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 32);
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

std::string *sub_1769314(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if (!(_BYTE)v4) {
    goto LABEL_75;
  }
  if (v4)
  {
    LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
    data = (std::string *)result[1].__r_.__value_.__l.__data_;
    if (!data)
    {
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v7 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v7 = (void *)*v7;
      }
      data = (std::string *)sub_178D754((uint64_t)v7);
      v3[1].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
    }
    if (*(void *)(a2 + 24)) {
      unint64_t v8 = *(uint64_t (****)())(a2 + 24);
    }
    else {
      unint64_t v8 = &off_2548B00;
    }
    uint64_t result = sub_176AE94(data, (uint64_t)v8);
    if ((v4 & 2) == 0)
    {
LABEL_4:
      if ((v4 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_27;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_4;
  }
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
  uint64_t v9 = (std::string *)v3[1].__r_.__value_.__l.__size_;
  if (!v9)
  {
    std::string::size_type v10 = v3->__r_.__value_.__l.__size_;
    unsigned int v11 = (void *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
    if (v10) {
      unsigned int v11 = (void *)*v11;
    }
    uint64_t v9 = (std::string *)sub_178DA9C((uint64_t)v11);
    v3[1].__r_.__value_.__l.__size_ = (std::string::size_type)v9;
  }
  if (*(void *)(a2 + 32)) {
    BOOL v12 = *(uint64_t (****)())(a2 + 32);
  }
  else {
    BOOL v12 = &off_2548BD8;
  }
  uint64_t result = sub_176AF64(v9, (uint64_t)v12);
  if ((v4 & 4) == 0)
  {
LABEL_5:
    if ((v4 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_35;
  }
LABEL_27:
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
  uint64_t v13 = (std::string *)v3[1].__r_.__value_.__r.__words[2];
  if (!v13)
  {
    std::string::size_type v14 = v3->__r_.__value_.__l.__size_;
    unint64_t v15 = (void *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
    if (v14) {
      unint64_t v15 = (void *)*v15;
    }
    uint64_t v13 = (std::string *)sub_178D400((uint64_t)v15);
    v3[1].__r_.__value_.__r.__words[2] = (std::string::size_type)v13;
  }
  if (*(void *)(a2 + 40)) {
    unint64_t v16 = *(uint64_t (****)())(a2 + 40);
  }
  else {
    unint64_t v16 = &off_25489F0;
  }
  uint64_t result = sub_176B034(v13, (uint64_t)v16);
  if ((v4 & 8) == 0)
  {
LABEL_6:
    if ((v4 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_43;
  }
LABEL_35:
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= 8u;
  uint64_t v17 = (std::string *)v3[2].__r_.__value_.__l.__data_;
  if (!v17)
  {
    std::string::size_type v18 = v3->__r_.__value_.__l.__size_;
    unint64_t v19 = (void *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
    if (v18) {
      unint64_t v19 = (void *)*v19;
    }
    uint64_t v17 = (std::string *)sub_178D300((uint64_t)v19);
    v3[2].__r_.__value_.__r.__words[0] = (std::string::size_type)v17;
  }
  if (*(void *)(a2 + 48)) {
    int v20 = *(uint64_t (****)())(a2 + 48);
  }
  else {
    int v20 = &off_25489A8;
  }
  uint64_t result = sub_176B134(v17, (uint64_t)v20);
  if ((v4 & 0x10) == 0)
  {
LABEL_7:
    if ((v4 & 0x20) == 0) {
      goto LABEL_8;
    }
    goto LABEL_51;
  }
LABEL_43:
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x10u;
  int v21 = (std::string *)v3[2].__r_.__value_.__l.__size_;
  if (!v21)
  {
    std::string::size_type v22 = v3->__r_.__value_.__l.__size_;
    uint64_t v23 = (void *)(v22 & 0xFFFFFFFFFFFFFFFCLL);
    if (v22) {
      uint64_t v23 = (void *)*v23;
    }
    int v21 = (std::string *)sub_178D4A0((uint64_t)v23);
    v3[2].__r_.__value_.__l.__size_ = (std::string::size_type)v21;
  }
  if (*(void *)(a2 + 56)) {
    uint64_t v24 = *(uint64_t (****)())(a2 + 56);
  }
  else {
    uint64_t v24 = &off_2548A28;
  }
  uint64_t result = sub_176B204(v21, (uint64_t)v24);
  if ((v4 & 0x20) == 0)
  {
LABEL_8:
    if ((v4 & 0x40) == 0) {
      goto LABEL_9;
    }
    goto LABEL_59;
  }
LABEL_51:
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x20u;
  uint64_t v25 = (std::string *)v3[2].__r_.__value_.__r.__words[2];
  if (!v25)
  {
    std::string::size_type v26 = v3->__r_.__value_.__l.__size_;
    uint64_t v27 = (void *)(v26 & 0xFFFFFFFFFFFFFFFCLL);
    if (v26) {
      uint64_t v27 = (void *)*v27;
    }
    uint64_t v25 = (std::string *)sub_178D988((uint64_t)v27);
    v3[2].__r_.__value_.__r.__words[2] = (std::string::size_type)v25;
  }
  if (*(void *)(a2 + 64)) {
    int v28 = *(uint64_t (****)())(a2 + 64);
  }
  else {
    int v28 = &off_2548B80;
  }
  uint64_t result = sub_176B32C(v25, (uint64_t)v28);
  if ((v4 & 0x40) == 0)
  {
LABEL_9:
    if ((v4 & 0x80) == 0) {
      goto LABEL_75;
    }
    goto LABEL_67;
  }
LABEL_59:
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x40u;
  uint64_t v29 = (std::string *)v3[3].__r_.__value_.__l.__data_;
  if (!v29)
  {
    std::string::size_type v30 = v3->__r_.__value_.__l.__size_;
    unint64_t v31 = (void *)(v30 & 0xFFFFFFFFFFFFFFFCLL);
    if (v30) {
      unint64_t v31 = (void *)*v31;
    }
    uint64_t v29 = (std::string *)sub_178DA08((uint64_t)v31);
    v3[3].__r_.__value_.__r.__words[0] = (std::string::size_type)v29;
  }
  if (*(void *)(a2 + 72)) {
    uint64_t v32 = *(uint64_t (****)())(a2 + 72);
  }
  else {
    uint64_t v32 = &off_2548BB0;
  }
  uint64_t result = sub_11E43C0(v29, (uint64_t)v32);
  if ((v4 & 0x80) != 0)
  {
LABEL_67:
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x80u;
    int v33 = (std::string *)v3[3].__r_.__value_.__l.__size_;
    if (!v33)
    {
      std::string::size_type v34 = v3->__r_.__value_.__l.__size_;
      unint64_t v35 = (void *)(v34 & 0xFFFFFFFFFFFFFFFCLL);
      if (v34) {
        unint64_t v35 = (void *)*v35;
      }
      int v33 = (std::string *)sub_178D384((uint64_t)v35);
      v3[3].__r_.__value_.__l.__size_ = (std::string::size_type)v33;
    }
    if (*(void *)(a2 + 80)) {
      char v36 = *(uint64_t (****)())(a2 + 80);
    }
    else {
      char v36 = &off_25489D0;
    }
    uint64_t result = sub_13221BC(v33, (uint64_t)v36);
  }
LABEL_75:
  if ((v4 & 0x300) != 0)
  {
    if ((v4 & 0x100) != 0)
    {
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x100u;
      int v37 = (std::string *)v3[3].__r_.__value_.__r.__words[2];
      if (!v37)
      {
        std::string::size_type v38 = v3->__r_.__value_.__l.__size_;
        unint64_t v39 = (void *)(v38 & 0xFFFFFFFFFFFFFFFCLL);
        if (v38) {
          unint64_t v39 = (void *)*v39;
        }
        int v37 = (std::string *)sub_178DB3C((uint64_t)v39);
        v3[3].__r_.__value_.__r.__words[2] = (std::string::size_type)v37;
      }
      if (*(void *)(a2 + 88)) {
        uint64_t v40 = *(uint64_t (****)())(a2 + 88);
      }
      else {
        uint64_t v40 = &off_2548C08;
      }
      uint64_t result = sub_176AF64(v37, (uint64_t)v40);
    }
    if ((v4 & 0x200) != 0)
    {
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x200u;
      uint64_t v41 = (std::string *)v3[4].__r_.__value_.__l.__data_;
      if (!v41)
      {
        std::string::size_type v42 = v3->__r_.__value_.__l.__size_;
        uint64_t v43 = (void *)(v42 & 0xFFFFFFFFFFFFFFFCLL);
        if (v42) {
          uint64_t v43 = (void *)*v43;
        }
        uint64_t v41 = (std::string *)sub_178D54C((uint64_t)v43);
        v3[4].__r_.__value_.__r.__words[0] = (std::string::size_type)v41;
      }
      if (*(void *)(a2 + 96)) {
        int64_t v44 = *(uint64_t (****)())(a2 + 96);
      }
      else {
        int64_t v44 = &off_2548A68;
      }
      uint64_t result = sub_176B454(v41, (uint64_t)v44);
    }
  }
  uint64_t v45 = *(void *)(a2 + 8);
  if (v45)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v45 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_17696A0()
{
  return 1;
}

void *sub_17696A8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.ModuleConfiguration");
}

void *sub_17696B8(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_176973C((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

uint64_t sub_176973C(uint64_t result)
{
  if ((uint64_t (***)())result != &off_2548940)
  {
    uint64_t v1 = (void *)result;
    uint64_t v2 = *(void **)(result + 24);
    if (v2)
    {
      sub_176E484(v2);
      operator delete();
    }
    uint64_t v3 = (void *)v1[4];
    if (v3)
    {
      sub_1770584(v3);
      operator delete();
    }
    int v4 = (void *)v1[5];
    if (v4)
    {
      sub_176BE6C(v4);
      operator delete();
    }
    uint64_t v5 = v1[6];
    if (v5)
    {
      sub_176B514(v5);
      operator delete();
    }
    uint64_t v6 = (void *)v1[7];
    if (v6)
    {
      sub_176C520(v6);
      operator delete();
    }
    uint64_t v7 = v1[8];
    if (v7)
    {
      sub_176F94C(v7);
      operator delete();
    }
    unint64_t v8 = (void *)v1[9];
    if (v8)
    {
      sub_1770108(v8);
      operator delete();
    }
    uint64_t v9 = (void *)v1[10];
    if (v9)
    {
      sub_176BAF4(v9);
      operator delete();
    }
    std::string::size_type v10 = (void *)v1[11];
    if (v10)
    {
      sub_1770A78(v10);
      operator delete();
    }
    uint64_t result = v1[12];
    if (result)
    {
      sub_176CEA8(result);
      operator delete();
    }
  }
  return result;
}

void sub_17698C8(void *a1)
{
  sub_17696B8(a1);

  operator delete();
}

uint64_t sub_1769900(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 24);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 32) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_176DC24(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 24) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = (uint64_t *)(v1 + 8);
  if (v6)
  {
    return sub_188B4AC(v5);
  }
  return result;
}

uint64_t sub_176997C(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 24);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 32) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_1777958(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 24) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = (uint64_t *)(v1 + 8);
  if (v6)
  {
    return sub_188B4AC(v5);
  }
  return result;
}

uint64_t sub_17699F8(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_15B2C80(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  if ((*(unsigned char *)(v1 + 16) & 3) != 0) {
    *(void *)(v1 + 48) = 0x100000000;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = v1 + 8;
  *(_DWORD *)(v5 + 8) = 0;
  if (v6)
  {
    return sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

uint64_t sub_1769A90(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if (v1)
  {
    unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)unint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
    }
  }
  if ((v1 & 6) != 0) {
    *(void *)(a1 + 32) = 0;
  }
  char v4 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v4) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_1769AE0(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_15B2C80(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  if ((*(unsigned char *)(v1 + 16) & 0xF) != 0)
  {
    *(void *)(v1 + 48) = 0;
    *(void *)(v1 + 56) = 0x100000000;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = v1 + 8;
  *(_DWORD *)(v5 + 8) = 0;
  if (v6)
  {
    return sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

uint64_t sub_1769B74(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 3) != 0)
  {
    if (v2)
    {
      uint64_t v3 = *(void *)(result + 24);
      char v4 = *(unsigned char *)(v3 + 8);
      uint64_t result = v3 + 8;
      *(_DWORD *)(result + 16) = 0;
      *(_DWORD *)(result + 8) = 0;
      if (v4) {
        uint64_t result = sub_188B4AC((uint64_t *)result);
      }
    }
    if ((v2 & 2) != 0) {
      uint64_t result = sub_176F3C4(*(void *)(v1 + 32));
    }
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = v1 + 8;
  *(_DWORD *)(v5 + 32) = 0;
  *(_DWORD *)(v5 + 8) = 0;
  if (v6)
  {
    return sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

uint64_t sub_1769BF8(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_1769C0C(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(unsigned char *)(result + 16) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_1769C24(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 24);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 32) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_1777958(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 24) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = (uint64_t *)(v1 + 8);
  if (v6)
  {
    return sub_188B4AC(v5);
  }
  return result;
}

uint64_t sub_1769CA0(uint64_t result)
{
  uint64_t v1 = result;
  if (*(unsigned char *)(result + 16)) {
    uint64_t result = sub_1769AE0(*(void *)(result + 24));
  }
  char v3 = *(unsigned char *)(v1 + 8);
  uint64_t v2 = v1 + 8;
  *(_DWORD *)(v2 + 8) = 0;
  if (v3)
  {
    return sub_188B4AC((uint64_t *)v2);
  }
  return result;
}

char *sub_1769CFC(uint64_t a1, char *a2, int32x2_t *a3)
{
  std::string::size_type v34 = a2;
  if (sub_11947B8((uint64_t)a3, &v34, a3[11].i32[1])) {
    return v34;
  }
  char v6 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v7 = v34 + 1;
    unsigned int v8 = *v34;
    if (*v34 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v34, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v34 + 2;
      }
    }
    std::string::size_type v34 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 10) {
          goto LABEL_69;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v11 = *(void *)(a1 + 24);
        if (!v11)
        {
          BOOL v12 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            BOOL v12 = (void *)*v12;
          }
          uint64_t v11 = sub_178D754((uint64_t)v12);
          *(void *)(a1 + 24) = v11;
          uint64_t v7 = v34;
        }
        uint64_t v13 = sub_176A184(a3, v11, (unsigned __int8 *)v7);
        goto LABEL_76;
      case 2u:
        if (v8 != 18) {
          goto LABEL_69;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v14 = *(void *)(a1 + 32);
        if (!v14)
        {
          unint64_t v15 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            unint64_t v15 = (void *)*v15;
          }
          uint64_t v14 = sub_178DA9C((uint64_t)v15);
          *(void *)(a1 + 32) = v14;
          uint64_t v7 = v34;
        }
        uint64_t v13 = sub_176A214(a3, v14, (unsigned __int8 *)v7);
        goto LABEL_76;
      case 3u:
        if (v8 != 26) {
          goto LABEL_69;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v16 = *(void *)(a1 + 40);
        if (!v16)
        {
          uint64_t v17 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v17 = (void *)*v17;
          }
          uint64_t v16 = sub_178D400((uint64_t)v17);
          *(void *)(a1 + 40) = v16;
          uint64_t v7 = v34;
        }
        uint64_t v13 = sub_176A2A4(a3, v16, (unsigned __int8 *)v7);
        goto LABEL_76;
      case 4u:
        if (v8 != 34) {
          goto LABEL_69;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        std::string::size_type v18 = *(void **)(a1 + 48);
        if (!v18)
        {
          unint64_t v19 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            unint64_t v19 = (void *)*v19;
          }
          std::string::size_type v18 = sub_178D300((uint64_t)v19);
          *(void *)(a1 + 48) = v18;
          uint64_t v7 = v34;
        }
        uint64_t v13 = (char *)sub_176A334(a3, (uint64_t)v18, (unsigned __int8 *)v7);
        goto LABEL_76;
      case 5u:
        if (v8 != 42) {
          goto LABEL_69;
        }
        *(_DWORD *)(a1 + 16) |= 0x10u;
        uint64_t v20 = *(void *)(a1 + 56);
        if (!v20)
        {
          int v21 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            int v21 = (void *)*v21;
          }
          uint64_t v20 = sub_178D4A0((uint64_t)v21);
          *(void *)(a1 + 56) = v20;
          uint64_t v7 = v34;
        }
        uint64_t v13 = sub_176A3C4(a3, v20, (unsigned __int8 *)v7);
        goto LABEL_76;
      case 6u:
        if (v8 != 50) {
          goto LABEL_69;
        }
        *(_DWORD *)(a1 + 16) |= 0x20u;
        uint64_t v22 = *(void *)(a1 + 64);
        if (!v22)
        {
          uint64_t v23 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v23 = (void *)*v23;
          }
          uint64_t v22 = sub_178D988((uint64_t)v23);
          *(void *)(a1 + 64) = v22;
          uint64_t v7 = v34;
        }
        uint64_t v13 = sub_176A454(a3, v22, (unsigned __int8 *)v7);
        goto LABEL_76;
      case 7u:
        if (v8 != 58) {
          goto LABEL_69;
        }
        *(_DWORD *)(a1 + 16) |= 0x40u;
        uint64_t v24 = *(void *)(a1 + 72);
        if (!v24)
        {
          uint64_t v25 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v25 = (void *)*v25;
          }
          uint64_t v24 = sub_178DA08((uint64_t)v25);
          *(void *)(a1 + 72) = v24;
          uint64_t v7 = v34;
        }
        uint64_t v13 = sub_176A4E4(a3, v24, (unsigned __int8 *)v7);
        goto LABEL_76;
      case 8u:
        if (v8 != 66) {
          goto LABEL_69;
        }
        *(_DWORD *)(a1 + 16) |= 0x80u;
        uint64_t v26 = *(void *)(a1 + 80);
        if (!v26)
        {
          uint64_t v27 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v27 = (void *)*v27;
          }
          uint64_t v26 = sub_178D384((uint64_t)v27);
          *(void *)(a1 + 80) = v26;
          uint64_t v7 = v34;
        }
        uint64_t v13 = sub_176A574(a3, v26, (unsigned __int8 *)v7);
        goto LABEL_76;
      case 9u:
        if (v8 != 74) {
          goto LABEL_69;
        }
        *(_DWORD *)(a1 + 16) |= 0x100u;
        uint64_t v28 = *(void *)(a1 + 88);
        if (!v28)
        {
          uint64_t v29 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v29 = (void *)*v29;
          }
          uint64_t v28 = sub_178DB3C((uint64_t)v29);
          *(void *)(a1 + 88) = v28;
          uint64_t v7 = v34;
        }
        uint64_t v13 = sub_176A604(a3, v28, (unsigned __int8 *)v7);
        goto LABEL_76;
      case 0xAu:
        if (v8 != 82) {
          goto LABEL_69;
        }
        *(_DWORD *)(a1 + 16) |= 0x200u;
        std::string::size_type v30 = *(void **)(a1 + 96);
        if (!v30)
        {
          unint64_t v31 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            unint64_t v31 = (void *)*v31;
          }
          std::string::size_type v30 = sub_178D54C((uint64_t)v31);
          *(void *)(a1 + 96) = v30;
          uint64_t v7 = v34;
        }
        uint64_t v13 = sub_176A694(a3, (uint64_t)v30, (unsigned __int8 *)v7);
        goto LABEL_76;
      default:
LABEL_69:
        if (v8) {
          BOOL v32 = (v8 & 7) == 4;
        }
        else {
          BOOL v32 = 1;
        }
        if (!v32)
        {
          if (*v6)
          {
            int v33 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            int v33 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v7 = v34;
          }
          uint64_t v13 = (char *)sub_1885AC0(v8, v33, v7, a3);
LABEL_76:
          std::string::size_type v34 = v13;
          if (!v13) {
            return 0;
          }
          if (sub_11947B8((uint64_t)a3, &v34, a3[11].i32[1])) {
            return v34;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return v34;
    }
  }
}

char *sub_176A184(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_176E53C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_176A214(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_177063C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_176A2A4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_176BF24(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_176A334(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_176B5EC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_176A3C4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_176C5D8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_176A454(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_176FA54(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_176A4E4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17701BC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_176A574(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_176BBA0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_176A604(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1770B30(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_176A694(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_176CF98(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_176A724(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    *uint64_t v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 40);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    uint64_t v4 = sub_176E76C(v7, v9, a3);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_24;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v10 = *(void *)(a1 + 32);
  *uint64_t v4 = 18;
  unsigned int v11 = *(_DWORD *)(v10 + 40);
  v4[1] = v11;
  if (v11 > 0x7F) {
    BOOL v12 = sub_188A9CC(v11, v4 + 1);
  }
  else {
    BOOL v12 = v4 + 2;
  }
  uint64_t v4 = sub_177086C(v10, v12, a3);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_30;
  }
LABEL_24:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v13 = *(void *)(a1 + 40);
  *uint64_t v4 = 26;
  unsigned int v14 = *(_DWORD *)(v13 + 20);
  v4[1] = v14;
  if (v14 > 0x7F) {
    unint64_t v15 = sub_188A9CC(v14, v4 + 1);
  }
  else {
    unint64_t v15 = v4 + 2;
  }
  uint64_t v4 = sub_176C1A4(v13, (unint64_t)v15, a3);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_36;
  }
LABEL_30:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v16 = *(void *)(a1 + 48);
  *uint64_t v4 = 34;
  unsigned int v17 = *(_DWORD *)(v16 + 20);
  v4[1] = v17;
  if (v17 > 0x7F) {
    std::string::size_type v18 = sub_188A9CC(v17, v4 + 1);
  }
  else {
    std::string::size_type v18 = v4 + 2;
  }
  uint64_t v4 = sub_176B87C(v16, v18, a3);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_42;
  }
LABEL_36:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v19 = *(void *)(a1 + 56);
  *uint64_t v4 = 42;
  unsigned int v20 = *(_DWORD *)(v19 + 20);
  v4[1] = v20;
  if (v20 > 0x7F) {
    int v21 = sub_188A9CC(v20, v4 + 1);
  }
  else {
    int v21 = v4 + 2;
  }
  uint64_t v4 = sub_176C9BC(v19, (unint64_t)v21, a3);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_48;
  }
LABEL_42:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v22 = *(void *)(a1 + 64);
  *uint64_t v4 = 50;
  unsigned int v23 = *(_DWORD *)(v22 + 20);
  v4[1] = v23;
  if (v23 > 0x7F) {
    uint64_t v24 = sub_188A9CC(v23, v4 + 1);
  }
  else {
    uint64_t v24 = v4 + 2;
  }
  uint64_t v4 = sub_176FDDC(v22, (unint64_t)v24, a3);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_54;
  }
LABEL_48:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v25 = *(void *)(a1 + 72);
  *uint64_t v4 = 58;
  unsigned int v26 = *(_DWORD *)(v25 + 32);
  v4[1] = v26;
  if (v26 > 0x7F) {
    uint64_t v27 = sub_188A9CC(v26, v4 + 1);
  }
  else {
    uint64_t v27 = v4 + 2;
  }
  uint64_t v4 = sub_17703BC(v25, v27, a3);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_60;
  }
LABEL_54:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v28 = *(void *)(a1 + 80);
  *uint64_t v4 = 66;
  unsigned int v29 = *(_DWORD *)(v28 + 20);
  v4[1] = v29;
  if (v29 > 0x7F) {
    std::string::size_type v30 = sub_188A9CC(v29, v4 + 1);
  }
  else {
    std::string::size_type v30 = v4 + 2;
  }
  uint64_t v4 = sub_176BD30(v28, (unint64_t)v30, a3);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_72;
    }
    goto LABEL_66;
  }
LABEL_60:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v31 = *(void *)(a1 + 88);
  *uint64_t v4 = 74;
  unsigned int v32 = *(_DWORD *)(v31 + 40);
  v4[1] = v32;
  if (v32 > 0x7F) {
    int v33 = sub_188A9CC(v32, v4 + 1);
  }
  else {
    int v33 = v4 + 2;
  }
  uint64_t v4 = sub_1770CD0(v31, v33, a3);
  if ((v6 & 0x200) != 0)
  {
LABEL_66:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v34 = *(void *)(a1 + 96);
    *uint64_t v4 = 82;
    unsigned int v35 = *(_DWORD *)(v34 + 20);
    v4[1] = v35;
    if (v35 > 0x7F) {
      char v36 = sub_188A9CC(v35, v4 + 1);
    }
    else {
      char v36 = v4 + 2;
    }
    uint64_t v4 = sub_176D0F0(v34, (unint64_t)v36, a3);
  }
LABEL_72:
  uint64_t v37 = *(void *)(a1 + 8);
  if ((v37 & 1) == 0) {
    return v4;
  }
  unint64_t v39 = v37 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v39 + 31) < 0)
  {
    uint64_t v40 = *(void **)(v39 + 8);
    uint64_t v41 = *(void *)(v39 + 16);
  }
  else
  {
    uint64_t v40 = (void *)(v39 + 8);
    LODWORD(v41) = *(unsigned __int8 *)(v39 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v41)
  {
    uint64_t v42 = (int)v41;
    memcpy(v4, v40, (int)v41);
    v4 += v42;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v40, v41, v4);
}

uint64_t sub_176ABEC(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if (!(_BYTE)v2)
  {
    uint64_t v3 = 0;
    goto LABEL_22;
  }
  if (v2)
  {
    uint64_t v4 = sub_176E8B0(*(void *)(a1 + 24));
    uint64_t v3 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_7:
    uint64_t v5 = sub_17709B0(*(void *)(a1 + 32));
    v3 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_8:
  if ((v2 & 4) != 0)
  {
    uint64_t v6 = sub_176C3E4(*(void *)(a1 + 40));
    v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 8) == 0)
    {
LABEL_10:
      if ((v2 & 0x10) == 0) {
        goto LABEL_11;
      }
      goto LABEL_17;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_10;
  }
  uint64_t v7 = sub_176BA08(*(void *)(a1 + 48));
  v3 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x10) == 0)
  {
LABEL_11:
    if ((v2 & 0x20) == 0) {
      goto LABEL_12;
    }
    goto LABEL_18;
  }
LABEL_17:
  uint64_t v8 = sub_176CCF4(*(void *)(a1 + 56));
  v3 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x20) == 0)
  {
LABEL_12:
    if ((v2 & 0x40) == 0) {
      goto LABEL_13;
    }
    goto LABEL_19;
  }
LABEL_18:
  uint64_t v9 = sub_176FFE4(*(void *)(a1 + 64));
  v3 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x40) == 0)
  {
LABEL_13:
    if ((v2 & 0x80) == 0) {
      goto LABEL_22;
    }
    goto LABEL_20;
  }
LABEL_19:
  uint64_t v10 = sub_177050C(*(void *)(a1 + 72));
  v3 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x80) == 0) {
    goto LABEL_22;
  }
LABEL_20:
  uint64_t v11 = *(void *)(a1 + 80);
  uint64_t v12 = 2 * (*(_DWORD *)(v11 + 16) & 1);
  uint64_t v13 = *(void *)(v11 + 8);
  if (v13)
  {
    unint64_t v20 = v13 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v20 + 31) < 0) {
      uint64_t v21 = *(void *)(v20 + 16);
    }
    else {
      uint64_t v21 = *(unsigned __int8 *)(v20 + 31);
    }
    v12 += v21;
  }
  *(_DWORD *)(v11 + 20) = v12;
  v3 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_22:
  if ((v2 & 0x300) != 0)
  {
    if ((v2 & 0x100) != 0)
    {
      uint64_t v14 = sub_1770E14(*(void *)(a1 + 88));
      v3 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v2 & 0x200) != 0)
    {
      uint64_t v15 = sub_176D200(*(void *)(a1 + 96));
      v3 += v15 + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if (v16)
  {
    unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v18 + 31) < 0) {
      uint64_t v19 = *(void *)(v18 + 16);
    }
    else {
      uint64_t v19 = *(unsigned __int8 *)(v18 + 31);
    }
    v3 += v19;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_176AE94(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 32) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result->__r_.__value_.__r.__words[2], *(_DWORD *)(a2 + 24));
    uint64_t result = (std::string *)sub_1872970((uint64_t *)&v3->__r_.__value_.__r.__words[2], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__l.__size_ - LODWORD(v3[1].__r_.__value_.__l.__data_));
    int v7 = LODWORD(v3[1].__r_.__value_.__l.__data_) + v4;
    LODWORD(v3[1].__r_.__value_.__l.__data_) = v7;
    std::string::size_type size = (int *)v3[1].__r_.__value_.__l.__size_;
    if (*size < v7) {
      *std::string::size_type size = v7;
    }
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

std::string *sub_176AF64(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 32) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result->__r_.__value_.__r.__words[2], *(_DWORD *)(a2 + 24));
    uint64_t result = (std::string *)sub_1872A78((uint64_t *)&v3->__r_.__value_.__r.__words[2], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__l.__size_ - LODWORD(v3[1].__r_.__value_.__l.__data_));
    int v7 = LODWORD(v3[1].__r_.__value_.__l.__data_) + v4;
    LODWORD(v3[1].__r_.__value_.__l.__data_) = v7;
    std::string::size_type size = (int *)v3[1].__r_.__value_.__l.__size_;
    if (*size < v7) {
      *std::string::size_type size = v7;
    }
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

std::string *sub_176B034(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = sub_12C1E38(v3 + 1, v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2] - LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    uint64_t v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 3) != 0)
  {
    if (v9) {
      LODWORD(v3[2].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 48);
    }
    if ((v9 & 2) != 0) {
      HIDWORD(v3[2].__r_.__value_.__r.__words[0]) = *(_DWORD *)(a2 + 52);
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= v9;
  }
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

std::string *sub_176B134(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 7) != 0)
  {
    if (v4)
    {
      uint64_t v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      int v7 = (std::string **)&result[1];
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      int v9 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        int v9 = (uint64_t *)*v9;
      }
      uint64_t result = sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0)
        {
LABEL_6:
          LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
          goto LABEL_7;
        }
LABEL_5:
        HIDWORD(v3[1].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 36);
        goto LABEL_6;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    v3[1].__r_.__value_.__s.__data_[8] = *(unsigned char *)(a2 + 32);
    if ((v4 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_7:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

std::string *sub_176B204(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = sub_12C1E38(v3 + 1, v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2] - LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    uint64_t v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 0xF) != 0)
  {
    if (v9)
    {
      LODWORD(v3[2].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 48);
      if ((v9 & 2) == 0)
      {
LABEL_7:
        if ((v9 & 4) == 0) {
          goto LABEL_8;
        }
        goto LABEL_17;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_7;
    }
    HIDWORD(v3[2].__r_.__value_.__r.__words[0]) = *(_DWORD *)(a2 + 52);
    if ((v9 & 4) == 0)
    {
LABEL_8:
      if ((v9 & 8) == 0)
      {
LABEL_10:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v9;
        goto LABEL_11;
      }
LABEL_9:
      HIDWORD(v3[2].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 60);
      goto LABEL_10;
    }
LABEL_17:
    LODWORD(v3[2].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 56);
    if ((v9 & 8) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
LABEL_11:
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

std::string *sub_176B32C(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 7) != 0)
  {
    if (v4)
    {
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      data = (std::string *)result[1].__r_.__value_.__l.__data_;
      if (!data)
      {
        std::string::size_type size = v3->__r_.__value_.__l.__size_;
        uint64_t v8 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
        if (size) {
          uint64_t v8 = (void *)*v8;
        }
        data = (std::string *)sub_178D7F4((uint64_t)v8);
        v3[1].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      }
      if (*(void *)(a2 + 24)) {
        int v9 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        int v9 = &off_2548B30;
      }
      uint64_t result = sub_11A7934(data, (uint64_t)v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0)
        {
LABEL_6:
          LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
          goto LABEL_7;
        }
LABEL_5:
        LODWORD(v3[1].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 40);
        goto LABEL_6;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    uint64_t v10 = (std::string *)v3[1].__r_.__value_.__l.__size_;
    if (!v10)
    {
      std::string::size_type v11 = v3->__r_.__value_.__l.__size_;
      uint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        uint64_t v12 = (void *)*v12;
      }
      uint64_t v10 = (std::string *)sub_178D8E8((uint64_t)v12);
      v3[1].__r_.__value_.__l.__size_ = (std::string::size_type)v10;
    }
    if (*(void *)(a2 + 32)) {
      uint64_t v13 = *(uint64_t (****)())(a2 + 32);
    }
    else {
      uint64_t v13 = &off_2548B50;
    }
    uint64_t result = sub_176F864(v10, (uint64_t)v13);
    if ((v4 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_7:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

std::string *sub_176B454(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  if (*(unsigned char *)(a2 + 16))
  {
    int v4 = *(uint64_t (****)())(a2 + 24);
    LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
    data = (std::string *)result[1].__r_.__value_.__l.__data_;
    if (!data)
    {
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      int v7 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        int v7 = (void *)*v7;
      }
      data = (std::string *)sub_178D4A0((uint64_t)v7);
      v3[1].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      int v4 = *(uint64_t (****)())(a2 + 24);
    }
    if (v4) {
      uint64_t v8 = v4;
    }
    else {
      uint64_t v8 = &off_2548A28;
    }
    uint64_t result = sub_176B204(data, (uint64_t)v8);
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_176B4FC()
{
  return 1;
}

void *sub_176B504@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.ModuleConfigurationValue");
}

uint64_t sub_176B514(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_176B5B4(uint64_t a1)
{
  sub_176B514(a1);

  operator delete();
}

uint64_t sub_176B5EC(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v31 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v31, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = (char *)(*(void *)v31 + 1);
    unsigned int v9 = **(unsigned char **)v31;
    if ((char)**(unsigned char **)v31 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180(*(uint64_t *)v31, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (char *)(*(void *)v31 + 2);
      }
    }
    *(void *)uint64_t v31 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 == 3)
    {
      if (v9 != 24) {
        goto LABEL_14;
      }
      unsigned int v17 = v8 + 1;
      unint64_t v18 = *v8;
      if (*v8 < 0)
      {
        int v19 = *v17;
        int v20 = v18 + (v19 << 7);
        unint64_t v18 = (v20 - 128);
        if (v19 < 0)
        {
          *(void *)uint64_t v31 = sub_188C138((uint64_t)v8, (v20 - 128));
          if (!*(void *)v31) {
            goto LABEL_49;
          }
          unint64_t v18 = v27;
          if (v27)
          {
LABEL_40:
            if (*v7) {
              uint64_t v28 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else {
              uint64_t v28 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            }
            sub_188C020(3, v18, v28);
            goto LABEL_36;
          }
          goto LABEL_26;
        }
        unsigned int v17 = v8 + 2;
      }
      *(void *)uint64_t v31 = v17;
      if (v18) {
        goto LABEL_40;
      }
LABEL_26:
      *(_DWORD *)(a1 + 16) |= 4u;
      *(_DWORD *)(a1 + 36) = 0;
      goto LABEL_36;
    }
    if (v12 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_14;
    }
    v5 |= 2u;
    uint64_t v21 = v8 + 1;
    uint64_t v22 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_31;
    }
    int v23 = *v21;
    uint64_t v22 = v22 + (v23 << 7) - 128;
    if ((v23 & 0x80000000) == 0)
    {
      uint64_t v21 = v8 + 2;
LABEL_31:
      *(void *)uint64_t v31 = v21;
      *(unsigned char *)(a1 + 32) = v22 != 0;
      goto LABEL_36;
    }
    uint64_t v29 = sub_188C138((uint64_t)v8, v22);
    *(void *)uint64_t v31 = v29;
    *(unsigned char *)(a1 + 32) = v30 != 0;
    if (!v29) {
      goto LABEL_49;
    }
LABEL_36:
    if (sub_11947B8((uint64_t)a3, (char **)v31, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v12 == 1 && v9 == 10)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v24 = *(void *)(a1 + 8);
    uint64_t v25 = (uint64_t *)(v24 & 0xFFFFFFFFFFFFFFFCLL);
    if (v24) {
      uint64_t v25 = (uint64_t *)*v25;
    }
    unsigned int v26 = (std::string *)sub_1880F84((void *)(a1 + 24), v25);
    uint64_t v16 = (void *)sub_188C244(v26, *(char **)v31, (uint64_t)a3);
LABEL_35:
    *(void *)uint64_t v31 = v16;
    if (!v16) {
      goto LABEL_49;
    }
    goto LABEL_36;
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (*v7)
    {
      uint64_t v15 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = *(char **)v31;
    }
    uint64_t v16 = sub_1885AC0(v9, v15, v8, a3);
    goto LABEL_35;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_49:
  *(void *)uint64_t v31 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return *(void *)v31;
}

unsigned char *sub_176B87C(uint64_t a1, unsigned char *__dst, void *a3)
{
  int v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    int v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_15;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v7 = *(unsigned char *)(a1 + 32);
  *int v4 = 16;
  v4[1] = v7;
  v4 += 2;
  if ((v6 & 4) != 0)
  {
LABEL_9:
    if (*a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v8 = *(int *)(a1 + 36);
    *int v4 = 24;
    v4[1] = v8;
    if (v8 > 0x7F)
    {
      v4[1] = v8 | 0x80;
      unint64_t v9 = v8 >> 7;
      v4[2] = v8 >> 7;
      v4 += 3;
      if (v8 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v10 = v9 >> 14;
          v9 >>= 7;
          *v4++ = v9;
        }
        while (v10);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_15:
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return v4;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    BOOL v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    BOOL v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*a3 - (void)v4 >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(v4, v14, (int)v15);
    v4 += v16;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v14, v15, v4);
}

uint64_t sub_176BA08(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 7) != 0)
  {
    if (v1)
    {
      unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
      uint64_t v5 = *(void *)(v3 + 8);
      if ((v4 & 0x80u) == 0) {
        uint64_t v5 = v4;
      }
      uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    else
    {
      uint64_t v2 = 0;
    }
    if ((v1 & 2) != 0) {
      v2 += 2;
    }
    if ((v1 & 4) != 0)
    {
      int v6 = *(_DWORD *)(a1 + 36);
      uint64_t v7 = ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if (v6 >= 0) {
        uint64_t v8 = v7;
      }
      else {
        uint64_t v8 = 11;
      }
      v2 += v8;
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    v2 += v12;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_176BADC()
{
  return 1;
}

void *sub_176BAE4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.WebModuleConfiguration");
}

void *sub_176BAF4(void *a1)
{
  unint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_176BB68(void *a1)
{
  sub_176BAF4(a1);

  operator delete();
}

char *sub_176BBA0(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v19 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
    goto LABEL_27;
  }
  int v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v19 + 1;
    unsigned int v8 = *v19;
    if (*v19 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v19, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v19 + 2;
      }
    }
    int v19 = v7;
    if (v8 != 8) {
      break;
    }
    unint64_t v13 = v7 + 1;
    uint64_t v14 = *v7;
    if ((*v7 & 0x80000000) == 0) {
      goto LABEL_19;
    }
    int v15 = *v13;
    uint64_t v14 = v14 + (v15 << 7) - 128;
    if ((v15 & 0x80000000) == 0)
    {
      unint64_t v13 = v7 + 2;
LABEL_19:
      int v19 = v13;
      *(unsigned char *)(a1 + 24) = v14 != 0;
      int v5 = 1;
      goto LABEL_20;
    }
    uint64_t v16 = (char *)sub_188C138((uint64_t)v7, v14);
    int v19 = v16;
    *(unsigned char *)(a1 + 24) = v17 != 0;
    int v5 = 1;
    if (!v16) {
      goto LABEL_28;
    }
LABEL_20:
    if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
      goto LABEL_27;
    }
  }
  if (v8) {
    BOOL v11 = (v8 & 7) == 4;
  }
  else {
    BOOL v11 = 1;
  }
  if (!v11)
  {
    if (*v6)
    {
      uint64_t v12 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v12 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = v19;
    }
    int v19 = (char *)sub_1885AC0(v8, v12, v7, a3);
    if (!v19) {
      goto LABEL_28;
    }
    goto LABEL_20;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    goto LABEL_27;
  }
LABEL_28:
  int v19 = 0;
LABEL_27:
  *(_DWORD *)(a1 + 16) |= v5;
  return v19;
}

unsigned char *sub_176BD30(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    char v6 = *(unsigned char *)(a1 + 24);
    *uint64_t v4 = 8;
    v4[1] = v6;
    v4 += 2;
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v9 + 31) < 0)
  {
    unsigned int v10 = *(void **)(v9 + 8);
    uint64_t v11 = *(void *)(v9 + 16);
  }
  else
  {
    unsigned int v10 = (void *)(v9 + 8);
    LODWORD(v11) = *(unsigned __int8 *)(v9 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v11)
  {
    uint64_t v12 = (int)v11;
    memcpy(v4, v10, (int)v11);
    v4 += v12;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v10, v11, v4);
}

uint64_t sub_176BE14(uint64_t a1)
{
  uint64_t v1 = 2 * (*(_DWORD *)(a1 + 16) & 1);
  uint64_t v2 = *(void *)(a1 + 8);
  if (v2)
  {
    unint64_t v4 = v2 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v5 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v5 = *(unsigned __int8 *)(v4 + 31);
    }
    v1 += v5;
  }
  *(_DWORD *)(a1 + 20) = v1;
  return v1;
}

uint64_t sub_176BE54()
{
  return 1;
}

void *sub_176BE5C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.HeaderButtonsConfiguration");
}

void *sub_176BE6C(void *a1)
{
  unint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_12C1DB8(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_176BEEC(void *a1)
{
  sub_176BE6C(a1);

  operator delete();
}

char *sub_176BF24(uint64_t a1, char *a2, int32x2_t *a3)
{
  unsigned int v32 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v32, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    unsigned int v8 = v32 + 1;
    unsigned int v9 = *v32;
    if (*v32 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unsigned int v8 = (char *)sub_188C180((uint64_t)v32, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unsigned int v8 = v32 + 2;
      }
    }
    unsigned int v32 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 == 3)
    {
      if (v9 != 24) {
        goto LABEL_14;
      }
      v5 |= 2u;
      uint64_t v17 = v8 + 1;
      LODWORD(v16) = *v8;
      if ((v16 & 0x80) == 0) {
        goto LABEL_26;
      }
      int v18 = *v17;
      uint64_t v16 = v16 + (v18 << 7) - 128;
      if ((v18 & 0x80000000) == 0)
      {
        uint64_t v17 = v8 + 2;
LABEL_26:
        unsigned int v32 = v17;
        *(_DWORD *)(a1 + 52) = v16;
        goto LABEL_41;
      }
      uint64_t v28 = (char *)sub_188C138((uint64_t)v8, v16);
      unsigned int v32 = v28;
      *(_DWORD *)(a1 + 52) = v29;
      if (!v28) {
        goto LABEL_50;
      }
      goto LABEL_41;
    }
    if (v12 == 2) {
      break;
    }
    if (v12 != 1 || v9 != 8) {
      goto LABEL_14;
    }
    v5 |= 1u;
    unsigned int v26 = v8 + 1;
    LODWORD(v25) = *v8;
    if ((v25 & 0x80) == 0) {
      goto LABEL_40;
    }
    int v27 = *v26;
    uint64_t v25 = v25 + (v27 << 7) - 128;
    if ((v27 & 0x80000000) == 0)
    {
      unsigned int v26 = v8 + 2;
LABEL_40:
      unsigned int v32 = v26;
      *(_DWORD *)(a1 + 48) = v25;
      goto LABEL_41;
    }
    uint64_t v30 = (char *)sub_188C138((uint64_t)v8, v25);
    unsigned int v32 = v30;
    *(_DWORD *)(a1 + 48) = v31;
    if (!v30) {
      goto LABEL_50;
    }
LABEL_41:
    if (sub_11947B8((uint64_t)a3, &v32, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 == 18)
  {
    int v19 = v8 - 1;
    while (1)
    {
      int v20 = (unsigned __int8 *)(v19 + 1);
      unsigned int v32 = v19 + 1;
      uint64_t v21 = *(_DWORD **)(a1 + 40);
      if (v21 && (uint64_t v22 = *(int *)(a1 + 32), (int)v22 < *v21))
      {
        *(_DWORD *)(a1 + 32) = v22 + 1;
        uint64_t v23 = *(void *)&v21[2 * v22 + 2];
      }
      else
      {
        uint64_t v24 = sub_15C1B30(*(void *)(a1 + 24));
        uint64_t v23 = sub_188CDC8(a1 + 24, (uint64_t)v24);
        int v20 = (unsigned __int8 *)v32;
      }
      int v19 = (char *)sub_125CF74(a3, v23, v20);
      unsigned int v32 = v19;
      if (!v19) {
        goto LABEL_50;
      }
      if (*(void *)a3 <= (unint64_t)v19 || *v19 != 18) {
        goto LABEL_41;
      }
    }
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (*v7)
    {
      int v15 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      int v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unsigned int v8 = v32;
    }
    unsigned int v32 = (char *)sub_1885AC0(v9, v15, v8, a3);
    if (!v32) {
      goto LABEL_50;
    }
    goto LABEL_41;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_50:
  unsigned int v32 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v32;
}

char *sub_176C1A4(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  unint64_t v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*a3 <= __dst) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 48);
    *unint64_t v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v10 = *(_DWORD *)(a1 + 32);
  if (v10)
  {
    for (int i = 0; i != v10; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v12 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *unint64_t v4 = 18;
      unsigned int v13 = *(_DWORD *)(v12 + 20);
      v4[1] = v13;
      if (v13 > 0x7F) {
        BOOL v14 = sub_188A9CC(v13, v4 + 1);
      }
      else {
        BOOL v14 = v4 + 2;
      }
      unint64_t v4 = sub_15B2EA4(v12, v14, a3);
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v15 = *(int *)(a1 + 52);
    *unint64_t v4 = 24;
    v4[1] = v15;
    if (v15 > 0x7F)
    {
      v4[1] = v15 | 0x80;
      unint64_t v16 = v15 >> 7;
      v4[2] = v15 >> 7;
      v4 += 3;
      if (v15 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v17 = v16 >> 14;
          v16 >>= 7;
          *v4++ = v16;
        }
        while (v17);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v18 = *(void *)(a1 + 8);
  if ((v18 & 1) == 0) {
    return v4;
  }
  unint64_t v20 = v18 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v20 + 31) < 0)
  {
    uint64_t v21 = *(void **)(v20 + 8);
    uint64_t v22 = *(void *)(v20 + 16);
  }
  else
  {
    uint64_t v21 = (void *)(v20 + 8);
    LODWORD(v22) = *(unsigned __int8 *)(v20 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v22)
  {
    uint64_t v23 = (int)v22;
    memcpy(v4, v21, (int)v22);
    v4 += v23;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v21, v22, v4);
}

uint64_t sub_176C3E4(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    unint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    unint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_15B2F90(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 3) != 0)
  {
    if (v8)
    {
      int v9 = *(_DWORD *)(a1 + 48);
      if (v9 < 0) {
        uint64_t v10 = 11;
      }
      else {
        uint64_t v10 = ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
      v2 += v10;
    }
    if ((v8 & 2) != 0)
    {
      int v11 = *(_DWORD *)(a1 + 52);
      if (v11 < 0) {
        uint64_t v12 = 11;
      }
      else {
        uint64_t v12 = ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
      v2 += v12;
    }
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if (v13)
  {
    unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v15 + 31) < 0) {
      uint64_t v16 = *(void *)(v15 + 16);
    }
    else {
      uint64_t v16 = *(unsigned __int8 *)(v15 + 31);
    }
    v2 += v16;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_176C508()
{
  return 1;
}

void *sub_176C510@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.RelatedPlaceModuleConfiguration");
}

void *sub_176C520(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_12C1DB8(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_176C5A0(void *a1)
{
  sub_176C520(a1);

  operator delete();
}

char *sub_176C5D8(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v41 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v41, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    int v8 = v41 + 1;
    unsigned int v9 = *v41;
    if (*v41 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        int v8 = (char *)sub_188C180((uint64_t)v41, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        int v8 = v41 + 2;
      }
    }
    uint64_t v41 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_43;
        }
        v5 |= 1u;
        uint64_t v13 = v8 + 1;
        LODWORD(v12) = *v8;
        if ((v12 & 0x80) == 0) {
          goto LABEL_13;
        }
        int v14 = *v13;
        uint64_t v12 = v12 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          uint64_t v13 = v8 + 2;
LABEL_13:
          uint64_t v41 = v13;
          *(_DWORD *)(a1 + 48) = v12;
          goto LABEL_50;
        }
        int v33 = (char *)sub_188C138((uint64_t)v8, v12);
        uint64_t v41 = v33;
        *(_DWORD *)(a1 + 48) = v34;
        if (v33) {
          goto LABEL_50;
        }
        goto LABEL_72;
      case 2u:
        if (v9 != 18) {
          goto LABEL_43;
        }
        unint64_t v15 = v8 - 1;
        while (1)
        {
          uint64_t v16 = (unsigned __int8 *)(v15 + 1);
          uint64_t v41 = v15 + 1;
          unint64_t v17 = *(_DWORD **)(a1 + 40);
          if (v17 && (uint64_t v18 = *(int *)(a1 + 32), (int)v18 < *v17))
          {
            *(_DWORD *)(a1 + 32) = v18 + 1;
            uint64_t v19 = *(void *)&v17[2 * v18 + 2];
          }
          else
          {
            unint64_t v20 = sub_15C1B30(*(void *)(a1 + 24));
            uint64_t v19 = sub_188CDC8(a1 + 24, (uint64_t)v20);
            uint64_t v16 = (unsigned __int8 *)v41;
          }
          unint64_t v15 = (char *)sub_125CF74(a3, v19, v16);
          uint64_t v41 = v15;
          if (!v15) {
            goto LABEL_72;
          }
          if (*(void *)a3 <= (unint64_t)v15 || *v15 != 18) {
            goto LABEL_50;
          }
        }
      case 3u:
        if (v9 != 24) {
          goto LABEL_43;
        }
        v5 |= 8u;
        uint64_t v22 = v8 + 1;
        LODWORD(v21) = *v8;
        if ((v21 & 0x80) == 0) {
          goto LABEL_28;
        }
        int v23 = *v22;
        uint64_t v21 = v21 + (v23 << 7) - 128;
        if (v23 < 0)
        {
          unsigned int v35 = (char *)sub_188C138((uint64_t)v8, v21);
          uint64_t v41 = v35;
          *(_DWORD *)(a1 + 60) = v36;
          if (!v35) {
            goto LABEL_72;
          }
        }
        else
        {
          uint64_t v22 = v8 + 2;
LABEL_28:
          uint64_t v41 = v22;
          *(_DWORD *)(a1 + 60) = v21;
        }
        goto LABEL_50;
      case 4u:
        if (v9 != 32) {
          goto LABEL_43;
        }
        uint64_t v24 = v8 + 1;
        unint64_t v25 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_33;
        }
        int v26 = *v24;
        int v27 = v25 + (v26 << 7);
        unint64_t v25 = (v27 - 128);
        if (v26 < 0)
        {
          uint64_t v41 = (char *)sub_188C138((uint64_t)v8, (v27 - 128));
          if (!v41) {
            goto LABEL_72;
          }
          unint64_t v25 = v37;
        }
        else
        {
          uint64_t v24 = v8 + 2;
LABEL_33:
          uint64_t v41 = v24;
        }
        if (v25 <= 2)
        {
          *(_DWORD *)(a1 + 16) |= 2u;
          *(_DWORD *)(a1 + 52) = v25;
          goto LABEL_50;
        }
        if (*v7) {
          unint64_t v39 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          unint64_t v39 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v40 = 4;
        goto LABEL_66;
      case 5u:
        if (v9 != 40) {
          goto LABEL_43;
        }
        uint64_t v28 = v8 + 1;
        unint64_t v25 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_40;
        }
        int v29 = *v28;
        int v30 = v25 + (v29 << 7);
        unint64_t v25 = (v30 - 128);
        if (v29 < 0)
        {
          uint64_t v41 = (char *)sub_188C138((uint64_t)v8, (v30 - 128));
          if (!v41) {
            goto LABEL_72;
          }
          unint64_t v25 = v38;
        }
        else
        {
          uint64_t v28 = v8 + 2;
LABEL_40:
          uint64_t v41 = v28;
        }
        if (v25 > 4)
        {
          if (*v7) {
            unint64_t v39 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            unint64_t v39 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          int v40 = 5;
LABEL_66:
          sub_188C020(v40, v25, v39);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 4u;
          *(_DWORD *)(a1 + 56) = v25;
        }
        goto LABEL_50;
      default:
LABEL_43:
        if (v9) {
          BOOL v31 = (v9 & 7) == 4;
        }
        else {
          BOOL v31 = 1;
        }
        if (!v31)
        {
          if (*v7)
          {
            unsigned int v32 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            unsigned int v32 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            int v8 = v41;
          }
          uint64_t v41 = (char *)sub_1885AC0(v9, v32, v8, a3);
          if (!v41) {
            goto LABEL_72;
          }
LABEL_50:
          if (sub_11947B8((uint64_t)a3, &v41, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_72:
        }
          uint64_t v41 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v41;
    }
  }
}

char *sub_176C9BC(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  unint64_t v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*a3 <= __dst) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 48);
    *unint64_t v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v10 = *(_DWORD *)(a1 + 32);
  if (v10)
  {
    for (int i = 0; i != v10; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v12 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *unint64_t v4 = 18;
      unsigned int v13 = *(_DWORD *)(v12 + 20);
      v4[1] = v13;
      if (v13 > 0x7F) {
        int v14 = sub_188A9CC(v13, v4 + 1);
      }
      else {
        int v14 = v4 + 2;
      }
      unint64_t v4 = sub_15B2EA4(v12, v14, a3);
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v15 = *(int *)(a1 + 60);
    *unint64_t v4 = 24;
    v4[1] = v15;
    if (v15 > 0x7F)
    {
      v4[1] = v15 | 0x80;
      unint64_t v16 = v15 >> 7;
      v4[2] = v15 >> 7;
      v4 += 3;
      if (v15 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v17 = v16 >> 14;
          v16 >>= 7;
          *v4++ = v16;
        }
        while (v17);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v18 = *(int *)(a1 + 52);
    *unint64_t v4 = 32;
    v4[1] = v18;
    if (v18 > 0x7F)
    {
      v4[1] = v18 | 0x80;
      unint64_t v19 = v18 >> 7;
      v4[2] = v18 >> 7;
      v4 += 3;
      if (v18 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v20 = v19 >> 14;
          v19 >>= 7;
          *v4++ = v19;
        }
        while (v20);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v21 = *(int *)(a1 + 56);
    *unint64_t v4 = 40;
    v4[1] = v21;
    if (v21 > 0x7F)
    {
      v4[1] = v21 | 0x80;
      unint64_t v22 = v21 >> 7;
      v4[2] = v21 >> 7;
      v4 += 3;
      if (v21 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v23 = v22 >> 14;
          v22 >>= 7;
          *v4++ = v22;
        }
        while (v23);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v24 = *(void *)(a1 + 8);
  if ((v24 & 1) == 0) {
    return v4;
  }
  unint64_t v26 = v24 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v26 + 31) < 0)
  {
    int v27 = *(void **)(v26 + 8);
    uint64_t v28 = *(void *)(v26 + 16);
  }
  else
  {
    int v27 = (void *)(v26 + 8);
    LODWORD(v28) = *(unsigned __int8 *)(v26 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v28)
  {
    uint64_t v29 = (int)v28;
    memcpy(v4, v27, (int)v28);
    v4 += v29;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v27, v28, v4);
}

uint64_t sub_176CCF4(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    unint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    unint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_15B2F90(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 0xF) == 0) {
    goto LABEL_31;
  }
  if (v8)
  {
    int v9 = *(_DWORD *)(a1 + 48);
    if (v9 < 0) {
      uint64_t v10 = 11;
    }
    else {
      uint64_t v10 = ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v10;
    if ((v8 & 2) == 0)
    {
LABEL_12:
      if ((v8 & 4) == 0) {
        goto LABEL_13;
      }
      goto LABEL_23;
    }
  }
  else if ((v8 & 2) == 0)
  {
    goto LABEL_12;
  }
  int v11 = *(_DWORD *)(a1 + 52);
  if (v11 < 0) {
    uint64_t v12 = 11;
  }
  else {
    uint64_t v12 = ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v2 += v12;
  if ((v8 & 4) == 0)
  {
LABEL_13:
    if ((v8 & 8) == 0) {
      goto LABEL_31;
    }
    goto LABEL_27;
  }
LABEL_23:
  int v13 = *(_DWORD *)(a1 + 56);
  if (v13 < 0) {
    uint64_t v14 = 11;
  }
  else {
    uint64_t v14 = ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v2 += v14;
  if ((v8 & 8) != 0)
  {
LABEL_27:
    int v15 = *(_DWORD *)(a1 + 60);
    if (v15 < 0) {
      uint64_t v16 = 11;
    }
    else {
      uint64_t v16 = ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v16;
  }
LABEL_31:
  uint64_t v17 = *(void *)(a1 + 8);
  if (v17)
  {
    unint64_t v19 = v17 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v19 + 31) < 0) {
      uint64_t v20 = *(void *)(v19 + 16);
    }
    else {
      uint64_t v20 = *(unsigned __int8 *)(v19 + 31);
    }
    v2 += v20;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_176CE90()
{
  return 1;
}

void *sub_176CE98@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.TemplatePlaceModuleConfiguration");
}

uint64_t sub_176CEA8(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  unint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_2548A68)
  {
    uint64_t v6 = *(void **)(a1 + 24);
    if (v6)
    {
      sub_176C520(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_176CF60(uint64_t a1)
{
  sub_176CEA8(a1);

  operator delete();
}

char *sub_176CF98(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v16 = a2;
  if (sub_11947B8((uint64_t)a3, &v16, a3[11].i32[1])) {
    return v16;
  }
  uint64_t v5 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v6 = v16 + 1;
    unsigned int v7 = *v16;
    if (*v16 < 0)
    {
      unsigned int v8 = v7 + (*v6 << 7);
      unsigned int v7 = v8 - 128;
      if (*v6 < 0)
      {
        uint64_t v6 = (char *)sub_188C180((uint64_t)v16, v8 - 128);
        unsigned int v7 = v9;
      }
      else
      {
        uint64_t v6 = v16 + 2;
      }
    }
    uint64_t v16 = v6;
    if (v7 != 10) {
      break;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v13 = *(void *)(a1 + 24);
    if (!v13)
    {
      uint64_t v14 = (void *)(*v5 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v5) {
        uint64_t v14 = (void *)*v14;
      }
      uint64_t v13 = sub_178D4A0((uint64_t)v14);
      *(void *)(a1 + 24) = v13;
      uint64_t v6 = v16;
    }
    uint64_t v12 = sub_176A3C4(a3, v13, (unsigned __int8 *)v6);
LABEL_20:
    uint64_t v16 = v12;
    if (!v12) {
      return 0;
    }
    if (sub_11947B8((uint64_t)a3, &v16, a3[11].i32[1])) {
      return v16;
    }
  }
  if (v7) {
    BOOL v10 = (v7 & 7) == 4;
  }
  else {
    BOOL v10 = 1;
  }
  if (!v10)
  {
    if (*v5)
    {
      int v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      int v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v6 = v16;
    }
    uint64_t v12 = (char *)sub_1885AC0(v7, v11, v6, a3);
    goto LABEL_20;
  }
  if (v6)
  {
    a3[10].i32[0] = v7 - 1;
    return v16;
  }
  return 0;
}

unsigned char *sub_176D0F0(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  unint64_t v4 = (unsigned char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*a3 <= __dst) {
      unint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v6 = *(void *)(a1 + 24);
    *unint64_t v4 = 10;
    unsigned int v7 = *(_DWORD *)(v6 + 20);
    v4[1] = v7;
    if (v7 > 0x7F) {
      unsigned int v8 = sub_188A9CC(v7, v4 + 1);
    }
    else {
      unsigned int v8 = v4 + 2;
    }
    unint64_t v4 = sub_176C9BC(v6, (unint64_t)v8, a3);
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    uint64_t v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    uint64_t v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    v4 += v14;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v12, v13, v4);
}

uint64_t sub_176D200(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    uint64_t v3 = sub_176CCF4(*(void *)(a1 + 24));
    uint64_t result = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  else
  {
    uint64_t result = 0;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v5 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    result += v6;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

uint64_t sub_176D288()
{
  return 1;
}

void *sub_176D290@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.HikingAssociationModuleConfiguration");
}

void *sub_176D2A0(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_176D314(void *a1)
{
  sub_176D2A0(a1);

  operator delete();
}

uint64_t sub_176D34C(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 16) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_176D364(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v19 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
    goto LABEL_27;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    unsigned int v7 = v19 + 1;
    unsigned int v8 = *v19;
    if (*v19 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        unsigned int v7 = (char *)sub_188C180((uint64_t)v19, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        unsigned int v7 = v19 + 2;
      }
    }
    unint64_t v19 = v7;
    if (v8 != 16) {
      break;
    }
    uint64_t v13 = v7 + 1;
    int v14 = *v7;
    if ((*v7 & 0x80000000) == 0) {
      goto LABEL_19;
    }
    int v15 = *v13;
    int v14 = v14 + (v15 << 7) - 128;
    if ((v15 & 0x80000000) == 0)
    {
      uint64_t v13 = v7 + 2;
LABEL_19:
      unint64_t v19 = v13;
      *(_DWORD *)(a1 + 24) = v14;
      int v5 = 1;
      goto LABEL_20;
    }
    uint64_t v16 = (char *)sub_188C0D0((uint64_t)v7, v14);
    unint64_t v19 = v16;
    *(_DWORD *)(a1 + 24) = v17;
    int v5 = 1;
    if (!v16) {
      goto LABEL_28;
    }
LABEL_20:
    if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
      goto LABEL_27;
    }
  }
  if (v8) {
    BOOL v11 = (v8 & 7) == 4;
  }
  else {
    BOOL v11 = 1;
  }
  if (!v11)
  {
    if (*v6)
    {
      uint64_t v12 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v12 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unsigned int v7 = v19;
    }
    unint64_t v19 = (char *)sub_1885AC0(v8, v12, v7, a3);
    if (!v19) {
      goto LABEL_28;
    }
    goto LABEL_20;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    goto LABEL_27;
  }
LABEL_28:
  unint64_t v19 = 0;
LABEL_27:
  *(_DWORD *)(a1 + 16) |= v5;
  return v19;
}

unsigned char *sub_176D4E4(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v6 = *(_DWORD *)(a1 + 24);
    *uint64_t v4 = 16;
    v4[1] = v6;
    if (v6 > 0x7F)
    {
      v4[1] = v6 | 0x80;
      unsigned int v7 = v6 >> 7;
      v4[2] = v6 >> 7;
      v4 += 3;
      if (v6 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v8 = v7 >> 14;
          v7 >>= 7;
          *v4++ = v7;
        }
        while (v8);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    uint64_t v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    uint64_t v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    v4 += v14;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v12, v13, v4);
}

uint64_t sub_176D60C(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16)) {
    uint64_t v1 = ((9 * (__clz(*(_DWORD *)(a1 + 24) | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  else {
    uint64_t v1 = 0;
  }
  uint64_t v2 = *(void *)(a1 + 8);
  if (v2)
  {
    unint64_t v4 = v2 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v5 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v5 = *(unsigned __int8 *)(v4 + 31);
    }
    v1 += v5;
  }
  *(_DWORD *)(a1 + 20) = v1;
  return v1;
}

uint64_t sub_176D674()
{
  return 1;
}

void *sub_176D67C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PlaceRibbonConfiguration.RibbonItem.FactoidRibbonItem");
}

void *sub_176D68C(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1889DA8((uint64_t)(a1 + 2));
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_176D708(void *a1)
{
  sub_176D68C(a1);

  operator delete();
}

uint64_t sub_176D740(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_176D754(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v20 = a2;
  if (sub_11947B8((uint64_t)a3, &v20, a3[11].i32[1])) {
    return v20;
  }
  uint64_t v5 = (void *)(a1 + 8);
  while (1)
  {
    unsigned int v6 = v20 + 1;
    unsigned int v7 = *v20;
    if (*v20 < 0)
    {
      unsigned int v8 = v7 + (*v6 << 7);
      unsigned int v7 = v8 - 128;
      if (*v6 < 0)
      {
        unsigned int v6 = (char *)sub_188C180((uint64_t)v20, v8 - 128);
        unsigned int v7 = v9;
      }
      else
      {
        unsigned int v6 = v20 + 2;
      }
    }
    uint64_t v20 = v6;
    if ((v7 & 0xFFFFFFF8) == 8)
    {
      if (v7 == 8)
      {
        unsigned int v10 = v6 - 1;
        while (1)
        {
          uint64_t v20 = v10 + 1;
          int v11 = v10[1];
          if (v10[1] < 0)
          {
            int v12 = v11 + (v10[2] << 7);
            int v11 = v12 - 128;
            if (v10[2] < 0)
            {
              unsigned int v10 = (char *)sub_188C0D0((uint64_t)(v10 + 1), v12 - 128);
              int v11 = v13;
            }
            else
            {
              v10 += 3;
            }
          }
          else
          {
            v10 += 2;
          }
          uint64_t v20 = v10;
          uint64_t v14 = *(unsigned int *)(a1 + 16);
          if (v14 == *(_DWORD *)(a1 + 20))
          {
            int v15 = v14 + 1;
            sub_188C80C((unsigned int *)(a1 + 16), v14 + 1);
            *(_DWORD *)(*(void *)(a1 + 24) + 4 * v14) = v11;
            unsigned int v10 = v20;
          }
          else
          {
            *(_DWORD *)(*(void *)(a1 + 24) + 4 * v14) = v11;
            int v15 = v14 + 1;
          }
          *(_DWORD *)(a1 + 16) = v15;
          if (!v10) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v10 || *v10 != 8) {
            goto LABEL_32;
          }
        }
      }
      if (v7 == 10)
      {
        uint64_t v16 = sub_188C2CC((unsigned int *)(a1 + 16), (unsigned __int8 *)v6, (uint64_t)a3);
        goto LABEL_31;
      }
    }
    if (!v7 || (v7 & 7) == 4) {
      break;
    }
    if (*v5)
    {
      unint64_t v18 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v18 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unsigned int v6 = v20;
    }
    uint64_t v16 = sub_1885AC0(v7, v18, v6, a3);
LABEL_31:
    uint64_t v20 = (char *)v16;
    if (!v16) {
      return 0;
    }
LABEL_32:
    if (sub_11947B8((uint64_t)a3, &v20, a3[11].i32[1])) {
      return v20;
    }
  }
  if (v6)
  {
    a3[10].i32[0] = v7 - 1;
    return v20;
  }
  return 0;
}

char *sub_176D954(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v6 = *(unsigned int *)(a1 + 16);
  if ((int)v6 >= 1)
  {
    for (uint64_t i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      unsigned int v8 = *(_DWORD *)(*(void *)(a1 + 24) + 4 * i);
      *__dst = 8;
      __dst[1] = v8;
      if (v8 > 0x7F)
      {
        __dst[1] = v8 | 0x80;
        unsigned int v9 = v8 >> 7;
        __dst[2] = v8 >> 7;
        __dst += 3;
        if (v8 >= 0x4000)
        {
          do
          {
            *(__dst - 1) |= 0x80u;
            unsigned int v10 = v9 >> 14;
            v9 >>= 7;
            *__dst++ = v9;
          }
          while (v10);
        }
      }
      else
      {
        __dst += 2;
      }
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return __dst;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    uint64_t v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    uint64_t v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(__dst, v14, (int)v15);
    __dst += v16;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, __dst);
}

uint64_t sub_176DAA4(uint64_t a1)
{
  uint64_t result = sub_188D4F0((unsigned int *)(a1 + 16)) + *(unsigned int *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v4 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v5 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v5 = *(unsigned __int8 *)(v4 + 31);
    }
    result += v5;
  }
  *(_DWORD *)(a1 + 32) = result;
  return result;
}

uint64_t sub_176DB04()
{
  return 1;
}

void *sub_176DB0C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PlaceRibbonConfiguration.RibbonItem.AmenityRibbonItem");
}

uint64_t sub_176DB1C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  unint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  if ((uint64_t (***)())a1 != &off_2548AD0)
  {
    uint64_t v5 = *(void **)(a1 + 24);
    if (v5)
    {
      sub_176D2A0(v5);
      operator delete();
    }
    uint64_t v6 = *(void **)(a1 + 32);
    if (v6)
    {
      sub_176D68C(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_176DBEC(uint64_t a1)
{
  sub_176DB1C(a1);

  operator delete();
}

uint64_t sub_176DC24(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 3) != 0)
  {
    if (v2)
    {
      uint64_t v3 = *(void *)(result + 24);
      char v4 = *(unsigned char *)(v3 + 8);
      uint64_t result = v3 + 8;
      *(_DWORD *)(result + 16) = 0;
      *(_DWORD *)(result + 8) = 0;
      if (v4) {
        uint64_t result = sub_188B4AC((uint64_t *)result);
      }
    }
    if ((v2 & 2) != 0)
    {
      uint64_t v5 = *(void *)(v1 + 32);
      char v6 = *(unsigned char *)(v5 + 8);
      uint64_t result = v5 + 8;
      *(_DWORD *)(result + 8) = 0;
      if (v6) {
        uint64_t result = sub_188B4AC((uint64_t *)result);
      }
    }
  }
  char v8 = *(unsigned char *)(v1 + 8);
  uint64_t v7 = v1 + 8;
  *(_DWORD *)(v7 + 32) = 0;
  *(_DWORD *)(v7 + 8) = 0;
  if (v8)
  {
    return sub_188B4AC((uint64_t *)v7);
  }
  return result;
}

char *sub_176DCB4(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v26 = a2;
  if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
    return v26;
  }
  char v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v26 + 1;
    unsigned int v8 = *v26;
    if (*v26 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v26, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v26 + 2;
      }
    }
    unint64_t v26 = v7;
    unsigned int v11 = v8 >> 3;
    if (v8 >> 3 == 3)
    {
      if (v8 != 26) {
        goto LABEL_14;
      }
      *(_DWORD *)(a1 + 16) |= 2u;
      uint64_t v16 = *(void *)(a1 + 32);
      if (!v16)
      {
        int v17 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          int v17 = (void *)*v17;
        }
        uint64_t v16 = sub_178D640((uint64_t)v17);
        *(void *)(a1 + 32) = v16;
        uint64_t v7 = v26;
      }
      uint64_t v15 = sub_176DFAC(a3, v16, (unsigned __int8 *)v7);
      goto LABEL_33;
    }
    if (v11 != 2) {
      break;
    }
    if (v8 != 18) {
      goto LABEL_14;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v18 = *(void *)(a1 + 24);
    if (!v18)
    {
      unint64_t v19 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        unint64_t v19 = (void *)*v19;
      }
      uint64_t v18 = sub_178D5C4((uint64_t)v19);
      *(void *)(a1 + 24) = v18;
      uint64_t v7 = v26;
    }
    uint64_t v15 = sub_176DF1C(a3, v18, (unsigned __int8 *)v7);
LABEL_33:
    unint64_t v26 = v15;
    if (!v15) {
      return 0;
    }
LABEL_41:
    if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
      return v26;
    }
  }
  if (v11 == 1 && v8 == 8)
  {
    uint64_t v20 = v7 + 1;
    unint64_t v21 = *v7;
    if ((*v7 & 0x80000000) == 0) {
      goto LABEL_38;
    }
    int v22 = *v20;
    int v23 = v21 + (v22 << 7);
    unint64_t v21 = (v23 - 128);
    if (v22 < 0)
    {
      unint64_t v26 = (char *)sub_188C138((uint64_t)v7, (v23 - 128));
      if (!v26) {
        return 0;
      }
      unint64_t v21 = v24;
    }
    else
    {
      uint64_t v20 = v7 + 2;
LABEL_38:
      unint64_t v26 = v20;
    }
    if (v21 > 9)
    {
      if (*v6) {
        unint64_t v25 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        unint64_t v25 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      sub_188C020(1, v21, v25);
    }
    else
    {
      *(_DWORD *)(a1 + 16) |= 4u;
      *(_DWORD *)(a1 + 40) = v21;
    }
    goto LABEL_41;
  }
LABEL_14:
  if (v8) {
    BOOL v13 = (v8 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v6)
    {
      uint64_t v14 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = v26;
    }
    uint64_t v15 = (char *)sub_1885AC0(v8, v14, v7, a3);
    goto LABEL_33;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v26;
  }
  return 0;
}

char *sub_176DF1C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_176D364(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_176DFAC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_176D754(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_176E03C(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 40);
    *char v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 24);
    *char v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 20);
    v4[1] = v11;
    if (v11 > 0x7F) {
      int v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      int v12 = v4 + 2;
    }
    char v4 = sub_176D4E4(v10, (unint64_t)v12, a3);
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v13 = *(void *)(a1 + 32);
    *char v4 = 26;
    unsigned int v14 = *(_DWORD *)(v13 + 32);
    v4[1] = v14;
    if (v14 > 0x7F) {
      uint64_t v15 = sub_188A9CC(v14, v4 + 1);
    }
    else {
      uint64_t v15 = v4 + 2;
    }
    char v4 = sub_176D954(v13, v15, a3);
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return v4;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    unint64_t v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    unint64_t v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(v4, v19, (int)v20);
    v4 += v21;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v19, v20, v4);
}

uint64_t sub_176E238(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 7) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_13;
  }
  if (v2)
  {
    uint64_t v4 = sub_176D60C(*(void *)(a1 + 24));
    uint64_t v3 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_7:
    uint64_t v5 = sub_176DAA4(*(void *)(a1 + 32));
    v3 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_8:
  if ((v2 & 4) != 0)
  {
    int v6 = *(_DWORD *)(a1 + 40);
    if (v6 < 0) {
      uint64_t v7 = 11;
    }
    else {
      uint64_t v7 = ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v3 += v7;
  }
LABEL_13:
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v3 += v11;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_176E344(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 7) != 0)
  {
    if (v4)
    {
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      data = (std::string *)result[1].__r_.__value_.__l.__data_;
      if (!data)
      {
        std::string::size_type size = v3->__r_.__value_.__l.__size_;
        uint64_t v8 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
        if (size) {
          uint64_t v8 = (void *)*v8;
        }
        data = (std::string *)sub_178D5C4((uint64_t)v8);
        v3[1].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      }
      if (*(void *)(a2 + 24)) {
        unint64_t v9 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        unint64_t v9 = &off_2548A88;
      }
      uint64_t result = sub_11A7934(data, (uint64_t)v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0)
        {
LABEL_6:
          LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
          goto LABEL_7;
        }
LABEL_5:
        LODWORD(v3[1].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 40);
        goto LABEL_6;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    unint64_t v10 = (std::string *)v3[1].__r_.__value_.__l.__size_;
    if (!v10)
    {
      std::string::size_type v11 = v3->__r_.__value_.__l.__size_;
      int v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        int v12 = (void *)*v12;
      }
      unint64_t v10 = (std::string *)sub_178D640((uint64_t)v12);
      v3[1].__r_.__value_.__l.__size_ = (std::string::size_type)v10;
    }
    if (*(void *)(a2 + 32)) {
      uint64_t v13 = *(uint64_t (****)())(a2 + 32);
    }
    else {
      uint64_t v13 = &off_2548AA8;
    }
    uint64_t result = sub_11E43C0(v10, (uint64_t)v13);
    if ((v4 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_7:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_176E46C()
{
  return 1;
}

void *sub_176E474@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PlaceRibbonConfiguration.RibbonItem");
}

void *sub_176E484(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1870ABC(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_176E504(void *a1)
{
  sub_176E484(a1);

  operator delete();
}

char *sub_176E53C(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v19 = a2;
  if ((sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v5 = (void *)(a1 + 8);
    while (1)
    {
      int v6 = v19 + 1;
      unsigned int v7 = *v19;
      if (*v19 < 0)
      {
        unsigned int v8 = v7 + (*v6 << 7);
        unsigned int v7 = v8 - 128;
        if (*v6 < 0)
        {
          int v6 = (char *)sub_188C180((uint64_t)v19, v8 - 128);
          unsigned int v7 = v9;
        }
        else
        {
          int v6 = v19 + 2;
        }
      }
      unint64_t v19 = v6;
      if (v7 == 10)
      {
        int v12 = v6 - 1;
        while (1)
        {
          uint64_t v13 = (unsigned __int8 *)(v12 + 1);
          unint64_t v19 = v12 + 1;
          unsigned int v14 = *(_DWORD **)(a1 + 32);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 24), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 24) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            uint64_t v17 = sub_178D6D4(*(void *)(a1 + 16));
            uint64_t v16 = sub_188CDC8(a1 + 16, v17);
            uint64_t v13 = (unsigned __int8 *)v19;
          }
          int v12 = sub_176E6DC(a3, v16, v13);
          unint64_t v19 = v12;
          if (!v12) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_24;
          }
        }
      }
      if (!v7 || (v7 & 7) == 4) {
        break;
      }
      if (*v5)
      {
        std::string::size_type v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        std::string::size_type v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        int v6 = v19;
      }
      unint64_t v19 = (char *)sub_1885AC0(v7, v11, v6, a3);
      if (!v19) {
        return 0;
      }
LABEL_24:
      if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
        return v19;
      }
    }
    if (v6)
    {
      a3[10].i32[0] = v7 - 1;
      return v19;
    }
    return 0;
  }
  return v19;
}

char *sub_176E6DC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_176DCB4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_176E76C(uint64_t a1, char *__dst, _DWORD *a3)
{
  int v6 = *(_DWORD *)(a1 + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unint64_t v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unint64_t v10 = __dst + 2;
      }
      __dst = sub_176E03C(v8, (unint64_t)v10, a3);
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return __dst;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    unsigned int v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    unsigned int v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(__dst, v14, (int)v15);
    __dst += v16;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, __dst);
}

uint64_t sub_176E8B0(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    int v4 = (uint64_t *)(v3 + 8);
  }
  else {
    int v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_176E238(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 40) = v2;
  return v2;
}

uint64_t sub_176E960()
{
  return 1;
}

void *sub_176E968@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PlaceRibbonConfiguration");
}

void *sub_176E978(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_176E9EC(void *a1)
{
  sub_176E978(a1);

  operator delete();
}

uint64_t sub_176EA24(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 16) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_176EA3C(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v19 = a2;
  if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
    return v19;
  }
  uint64_t v5 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v6 = v19 + 1;
    unsigned int v7 = *v19;
    if (*v19 < 0)
    {
      unsigned int v8 = v7 + (*v6 << 7);
      unsigned int v7 = v8 - 128;
      if (*v6 < 0)
      {
        uint64_t v6 = (char *)sub_188C180((uint64_t)v19, v8 - 128);
        unsigned int v7 = v9;
      }
      else
      {
        uint64_t v6 = v19 + 2;
      }
    }
    unint64_t v19 = v6;
    if (v7 == 8)
    {
      int v12 = v6 + 1;
      unint64_t v13 = *v6;
      if (*v6 < 0)
      {
        int v14 = *v12;
        int v15 = v13 + (v14 << 7);
        unint64_t v13 = (v15 - 128);
        if (v14 < 0)
        {
          unint64_t v19 = (char *)sub_188C138((uint64_t)v6, (v15 - 128));
          if (!v19) {
            return 0;
          }
          unint64_t v13 = v16;
          goto LABEL_20;
        }
        int v12 = v6 + 2;
      }
      unint64_t v19 = v12;
LABEL_20:
      if (v13 > 3)
      {
        if (*v5) {
          uint64_t v17 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          uint64_t v17 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        sub_188C020(1, v13, v17);
      }
      else
      {
        *(_DWORD *)(a1 + 16) |= 1u;
        *(_DWORD *)(a1 + 24) = v13;
      }
      goto LABEL_22;
    }
    if (!v7 || (v7 & 7) == 4) {
      break;
    }
    if (*v5)
    {
      uint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v6 = v19;
    }
    unint64_t v19 = (char *)sub_1885AC0(v7, v11, v6, a3);
    if (!v19) {
      return 0;
    }
LABEL_22:
    if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
      return v19;
    }
  }
  if (v6)
  {
    a3[10].i32[0] = v7 - 1;
    return v19;
  }
  return 0;
}

unsigned char *sub_176EBE4(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (unsigned char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v6 = *(int *)(a1 + 24);
    *int v4 = 8;
    v4[1] = v6;
    if (v6 > 0x7F)
    {
      v4[1] = v6 | 0x80;
      unint64_t v7 = v6 >> 7;
      v4[2] = v6 >> 7;
      v4 += 3;
      if (v6 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v8 = v7 >> 14;
          v7 >>= 7;
          *v4++ = v7;
        }
        while (v8);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    int v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    int v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    v4 += v14;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v12, v13, v4);
}

uint64_t sub_176ED0C(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    int v2 = *(_DWORD *)(a1 + 24);
    if (v2 < 0) {
      uint64_t v1 = 11;
    }
    else {
      uint64_t v1 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  else
  {
    uint64_t v1 = 0;
  }
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v5 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    v1 += v6;
  }
  *(_DWORD *)(a1 + 20) = v1;
  return v1;
}

uint64_t sub_176ED80()
{
  return 1;
}

void *sub_176ED88@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PlaceInfosModuleConfiguration.LocationInfoItem");
}

void *sub_176ED98(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_176EE0C(void *a1)
{
  sub_176ED98(a1);

  operator delete();
}

uint64_t sub_176EE44(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 3) != 0) {
    *(void *)(a1 + 24) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_176EE68(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v26 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    unint64_t v8 = v26 + 1;
    unsigned int v9 = *v26;
    if (*v26 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unint64_t v8 = (char *)sub_188C180((uint64_t)v26, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unint64_t v8 = v26 + 2;
      }
    }
    unint64_t v26 = v8;
    if (v9 >> 3 == 2) {
      break;
    }
    if (v9 >> 3 != 1 || v9 != 8) {
      goto LABEL_13;
    }
    unint64_t v19 = v8 + 1;
    int v20 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_31;
    }
    int v21 = *v19;
    int v20 = v20 + (v21 << 7) - 128;
    if ((v21 & 0x80000000) == 0)
    {
      unint64_t v19 = v8 + 2;
LABEL_31:
      unint64_t v26 = v19;
      *(_DWORD *)(a1 + 24) = v20;
      int v5 = 1;
      goto LABEL_32;
    }
    int v23 = (char *)sub_188C0D0((uint64_t)v8, v20);
    unint64_t v26 = v23;
    *(_DWORD *)(a1 + 24) = v24;
    int v5 = 1;
    if (!v23) {
      goto LABEL_45;
    }
LABEL_32:
    if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 == 16)
  {
    int v15 = v8 + 1;
    unint64_t v16 = *v8;
    if (*v8 < 0)
    {
      int v17 = *v15;
      int v18 = v16 + (v17 << 7);
      unint64_t v16 = (v18 - 128);
      if (v17 < 0)
      {
        unint64_t v26 = (char *)sub_188C138((uint64_t)v8, (v18 - 128));
        if (!v26) {
          goto LABEL_45;
        }
        unint64_t v16 = v22;
        goto LABEL_26;
      }
      int v15 = v8 + 2;
    }
    unint64_t v26 = v15;
LABEL_26:
    if (v16 > 2)
    {
      if (*v7) {
        unint64_t v25 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        unint64_t v25 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      sub_188C020(2, v16, v25);
    }
    else
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      *(_DWORD *)(a1 + 28) = v16;
    }
    goto LABEL_32;
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      uint64_t v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unint64_t v8 = v26;
    }
    unint64_t v26 = (char *)sub_1885AC0(v9, v14, v8, a3);
    if (!v26) {
      goto LABEL_45;
    }
    goto LABEL_32;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_45:
  unint64_t v26 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v26;
}

unsigned char *sub_176F0A0(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 24);
    *int v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 28);
    *int v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    unint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    unint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_176F244(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_11;
  }
  if (v1)
  {
    uint64_t v2 = ((9 * (__clz(*(_DWORD *)(a1 + 24) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_11;
    }
  }
  else
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_11;
    }
  }
  int v3 = *(_DWORD *)(a1 + 28);
  if (v3 < 0) {
    uint64_t v4 = 11;
  }
  else {
    uint64_t v4 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v2 += v4;
LABEL_11:
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5)
  {
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v7 + 31) < 0) {
      uint64_t v8 = *(void *)(v7 + 16);
    }
    else {
      uint64_t v8 = *(unsigned __int8 *)(v7 + 31);
    }
    v2 += v8;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_176F2F4()
{
  return 1;
}

void *sub_176F2FC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PlaceInfosModuleConfiguration.FactoidInfoItem.FactoidReference");
}

void *sub_176F30C(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1870B3C(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_176F38C(void *a1)
{
  sub_176F30C(a1);

  operator delete();
}

uint64_t sub_176F3C4(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 24);
  if ((int)v2 >= 1)
  {
    int v3 = (uint64_t *)(*(void *)(result + 32) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_176EE44(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 24) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = (uint64_t *)(v1 + 8);
  if (v6)
  {
    return sub_188B4AC(v5);
  }
  return result;
}

char *sub_176F440(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v19 = a2;
  if ((sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v5 = (void *)(a1 + 8);
    while (1)
    {
      char v6 = v19 + 1;
      unsigned int v7 = *v19;
      if (*v19 < 0)
      {
        unsigned int v8 = v7 + (*v6 << 7);
        unsigned int v7 = v8 - 128;
        if (*v6 < 0)
        {
          char v6 = (char *)sub_188C180((uint64_t)v19, v8 - 128);
          unsigned int v7 = v9;
        }
        else
        {
          char v6 = v19 + 2;
        }
      }
      unint64_t v19 = v6;
      if (v7 == 18)
      {
        unint64_t v12 = v6 - 1;
        while (1)
        {
          uint64_t v13 = (unsigned __int8 *)(v12 + 1);
          unint64_t v19 = v12 + 1;
          uint64_t v14 = *(_DWORD **)(a1 + 32);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 24), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 24) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            uint64_t v17 = sub_178D870(*(void *)(a1 + 16));
            uint64_t v16 = sub_188CDC8(a1 + 16, (uint64_t)v17);
            uint64_t v13 = (unsigned __int8 *)v19;
          }
          unint64_t v12 = sub_176F5E0(a3, v16, v13);
          unint64_t v19 = v12;
          if (!v12) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 18) {
            goto LABEL_24;
          }
        }
      }
      if (!v7 || (v7 & 7) == 4) {
        break;
      }
      if (*v5)
      {
        unint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        unint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        char v6 = v19;
      }
      unint64_t v19 = (char *)sub_1885AC0(v7, v11, v6, a3);
      if (!v19) {
        return 0;
      }
LABEL_24:
      if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
        return v19;
      }
    }
    if (v6)
    {
      a3[10].i32[0] = v7 - 1;
      return v19;
    }
    return 0;
  }
  return v19;
}

char *sub_176F5E0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_176EE68(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_176F670(uint64_t a1, char *__dst, _DWORD *a3)
{
  int v6 = *(_DWORD *)(a1 + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i + 8);
      *__dst = 18;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unint64_t v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unint64_t v10 = __dst + 2;
      }
      __dst = sub_176F0A0(v8, (unint64_t)v10, a3);
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return __dst;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    uint64_t v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    uint64_t v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(__dst, v14, (int)v15);
    __dst += v16;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, __dst);
}

uint64_t sub_176F7B4(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_176F244(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 40) = v2;
  return v2;
}

std::string *sub_176F864(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 32) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result->__r_.__value_.__r.__words[2], *(_DWORD *)(a2 + 24));
    uint64_t result = sub_18729FC((std::string *)&v3->__r_.__value_.__r.__words[2], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__l.__size_ - LODWORD(v3[1].__r_.__value_.__l.__data_));
    int v7 = LODWORD(v3[1].__r_.__value_.__l.__data_) + v4;
    LODWORD(v3[1].__r_.__value_.__l.__data_) = v7;
    std::string::size_type size = (int *)v3[1].__r_.__value_.__l.__size_;
    if (*size < v7) {
      *std::string::size_type size = v7;
    }
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_176F934()
{
  return 1;
}

void *sub_176F93C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PlaceInfosModuleConfiguration.FactoidInfoItem");
}

uint64_t sub_176F94C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  if ((uint64_t (***)())a1 != &off_2548B80)
  {
    uint64_t v5 = *(void **)(a1 + 24);
    if (v5)
    {
      sub_176E978(v5);
      operator delete();
    }
    uint64_t v6 = *(void **)(a1 + 32);
    if (v6)
    {
      sub_176F30C(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_176FA1C(uint64_t a1)
{
  sub_176F94C(a1);

  operator delete();
}

char *sub_176FA54(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v26 = a2;
  if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
    return v26;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    int v7 = v26 + 1;
    unsigned int v8 = *v26;
    if (*v26 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        int v7 = (char *)sub_188C180((uint64_t)v26, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        int v7 = v26 + 2;
      }
    }
    unint64_t v26 = v7;
    unsigned int v11 = v8 >> 3;
    if (v8 >> 3 == 3) {
      break;
    }
    if (v11 == 2)
    {
      if (v8 != 18) {
        goto LABEL_14;
      }
      *(_DWORD *)(a1 + 16) |= 2u;
      uint64_t v20 = *(void *)(a1 + 32);
      if (!v20)
      {
        int v21 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          int v21 = (void *)*v21;
        }
        uint64_t v20 = sub_178D8E8((uint64_t)v21);
        *(void *)(a1 + 32) = v20;
        int v7 = v26;
      }
      uint64_t v15 = sub_176FD4C(a3, v20, (unsigned __int8 *)v7);
    }
    else
    {
      if (v11 != 1 || v8 != 10) {
        goto LABEL_14;
      }
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v22 = *(void *)(a1 + 24);
      if (!v22)
      {
        int v23 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          int v23 = (void *)*v23;
        }
        uint64_t v22 = sub_178D7F4((uint64_t)v23);
        *(void *)(a1 + 24) = v22;
        int v7 = v26;
      }
      uint64_t v15 = sub_176FCBC(a3, v22, (unsigned __int8 *)v7);
    }
LABEL_39:
    unint64_t v26 = v15;
    if (!v15) {
      return 0;
    }
LABEL_40:
    if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
      return v26;
    }
  }
  if (v8 == 24)
  {
    uint64_t v16 = v7 + 1;
    unint64_t v17 = *v7;
    if (*v7 < 0)
    {
      int v18 = *v16;
      int v19 = v17 + (v18 << 7);
      unint64_t v17 = (v19 - 128);
      if (v18 < 0)
      {
        unint64_t v26 = (char *)sub_188C138((uint64_t)v7, (v19 - 128));
        if (!v26) {
          return 0;
        }
        unint64_t v17 = v24;
        goto LABEL_26;
      }
      uint64_t v16 = v7 + 2;
    }
    unint64_t v26 = v16;
LABEL_26:
    if (v17 > 1)
    {
      if (*v6) {
        unint64_t v25 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        unint64_t v25 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      sub_188C020(3, v17, v25);
    }
    else
    {
      *(_DWORD *)(a1 + 16) |= 4u;
      *(_DWORD *)(a1 + 40) = v17;
    }
    goto LABEL_40;
  }
LABEL_14:
  if (v8) {
    BOOL v13 = (v8 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v6)
    {
      uint64_t v14 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v7 = v26;
    }
    uint64_t v15 = (char *)sub_1885AC0(v8, v14, v7, a3);
    goto LABEL_39;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v26;
  }
  return 0;
}

char *sub_176FCBC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_176EA3C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_176FD4C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_176F440(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_176FDDC(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    *int v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    int v4 = sub_176EBE4(v7, (unint64_t)v9, a3);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_23;
      }
      goto LABEL_17;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v10 = *(void *)(a1 + 32);
  *int v4 = 18;
  unsigned int v11 = *(_DWORD *)(v10 + 40);
  v4[1] = v11;
  if (v11 > 0x7F) {
    unint64_t v12 = sub_188A9CC(v11, v4 + 1);
  }
  else {
    unint64_t v12 = v4 + 2;
  }
  int v4 = sub_176F670(v10, v12, a3);
  if ((v6 & 4) != 0)
  {
LABEL_17:
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v13 = *(int *)(a1 + 40);
    *int v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unint64_t v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_23:
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return v4;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    int v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    int v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(v4, v19, (int)v20);
    v4 += v21;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v19, v20, v4);
}

uint64_t sub_176FFE4(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 7) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_13;
  }
  if (v2)
  {
    uint64_t v4 = sub_176ED0C(*(void *)(a1 + 24));
    uint64_t v3 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_7:
    uint64_t v5 = sub_176F7B4(*(void *)(a1 + 32));
    v3 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_8:
  if ((v2 & 4) != 0)
  {
    int v6 = *(_DWORD *)(a1 + 40);
    if (v6 < 0) {
      uint64_t v7 = 11;
    }
    else {
      uint64_t v7 = ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v3 += v7;
  }
LABEL_13:
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v3 += v11;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

uint64_t sub_17700F0()
{
  return 1;
}

void *sub_17700F8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PlaceInfosModuleConfiguration");
}

void *sub_1770108(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1889DA8((uint64_t)(a1 + 2));
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1770184(void *a1)
{
  sub_1770108(a1);

  operator delete();
}

char *sub_17701BC(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v20 = a2;
  if (sub_11947B8((uint64_t)a3, &v20, a3[11].i32[1])) {
    return v20;
  }
  uint64_t v5 = (void *)(a1 + 8);
  while (1)
  {
    int v6 = v20 + 1;
    unsigned int v7 = *v20;
    if (*v20 < 0)
    {
      unsigned int v8 = v7 + (*v6 << 7);
      unsigned int v7 = v8 - 128;
      if (*v6 < 0)
      {
        int v6 = (char *)sub_188C180((uint64_t)v20, v8 - 128);
        unsigned int v7 = v9;
      }
      else
      {
        int v6 = v20 + 2;
      }
    }
    uint64_t v20 = v6;
    if ((v7 & 0xFFFFFFF8) == 8)
    {
      if (v7 == 8)
      {
        unint64_t v10 = v6 - 1;
        while (1)
        {
          uint64_t v20 = v10 + 1;
          int v11 = v10[1];
          if (v10[1] < 0)
          {
            int v12 = v11 + (v10[2] << 7);
            int v11 = v12 - 128;
            if (v10[2] < 0)
            {
              unint64_t v10 = (char *)sub_188C0D0((uint64_t)(v10 + 1), v12 - 128);
              int v11 = v13;
            }
            else
            {
              v10 += 3;
            }
          }
          else
          {
            v10 += 2;
          }
          uint64_t v20 = v10;
          uint64_t v14 = *(unsigned int *)(a1 + 16);
          if (v14 == *(_DWORD *)(a1 + 20))
          {
            int v15 = v14 + 1;
            sub_188C80C((unsigned int *)(a1 + 16), v14 + 1);
            *(_DWORD *)(*(void *)(a1 + 24) + 4 * v14) = v11;
            unint64_t v10 = v20;
          }
          else
          {
            *(_DWORD *)(*(void *)(a1 + 24) + 4 * v14) = v11;
            int v15 = v14 + 1;
          }
          *(_DWORD *)(a1 + 16) = v15;
          if (!v10) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v10 || *v10 != 8) {
            goto LABEL_32;
          }
        }
      }
      if (v7 == 10)
      {
        uint64_t v16 = sub_188C2CC((unsigned int *)(a1 + 16), (unsigned __int8 *)v6, (uint64_t)a3);
        goto LABEL_31;
      }
    }
    if (!v7 || (v7 & 7) == 4) {
      break;
    }
    if (*v5)
    {
      unint64_t v18 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v18 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v6 = v20;
    }
    uint64_t v16 = sub_1885AC0(v7, v18, v6, a3);
LABEL_31:
    uint64_t v20 = (char *)v16;
    if (!v16) {
      return 0;
    }
LABEL_32:
    if (sub_11947B8((uint64_t)a3, &v20, a3[11].i32[1])) {
      return v20;
    }
  }
  if (v6)
  {
    a3[10].i32[0] = v7 - 1;
    return v20;
  }
  return 0;
}

char *sub_17703BC(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v6 = *(unsigned int *)(a1 + 16);
  if ((int)v6 >= 1)
  {
    for (uint64_t i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      unsigned int v8 = *(_DWORD *)(*(void *)(a1 + 24) + 4 * i);
      *__dst = 8;
      __dst[1] = v8;
      if (v8 > 0x7F)
      {
        __dst[1] = v8 | 0x80;
        unsigned int v9 = v8 >> 7;
        __dst[2] = v8 >> 7;
        __dst += 3;
        if (v8 >= 0x4000)
        {
          do
          {
            *(__dst - 1) |= 0x80u;
            unsigned int v10 = v9 >> 14;
            v9 >>= 7;
            *__dst++ = v9;
          }
          while (v10);
        }
      }
      else
      {
        __dst += 2;
      }
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return __dst;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    uint64_t v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    uint64_t v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(__dst, v14, (int)v15);
    __dst += v16;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, __dst);
}

uint64_t sub_177050C(uint64_t a1)
{
  uint64_t result = sub_188D4F0((unsigned int *)(a1 + 16)) + *(unsigned int *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v4 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v5 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v5 = *(unsigned __int8 *)(v4 + 31);
    }
    result += v5;
  }
  *(_DWORD *)(a1 + 32) = result;
  return result;
}

uint64_t sub_177056C()
{
  return 1;
}

void *sub_1770574@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.BusinessInfosModuleConfiguration");
}

void *sub_1770584(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1870BBC(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1770604(void *a1)
{
  sub_1770584(a1);

  operator delete();
}

char *sub_177063C(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v19 = a2;
  if ((sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v5 = (void *)(a1 + 8);
    while (1)
    {
      uint64_t v6 = v19 + 1;
      unsigned int v7 = *v19;
      if (*v19 < 0)
      {
        unsigned int v8 = v7 + (*v6 << 7);
        unsigned int v7 = v8 - 128;
        if (*v6 < 0)
        {
          uint64_t v6 = (char *)sub_188C180((uint64_t)v19, v8 - 128);
          unsigned int v7 = v9;
        }
        else
        {
          uint64_t v6 = v19 + 2;
        }
      }
      int v19 = v6;
      if (v7 == 10)
      {
        int v12 = v6 - 1;
        while (1)
        {
          unint64_t v13 = (unsigned __int8 *)(v12 + 1);
          int v19 = v12 + 1;
          uint64_t v14 = *(_DWORD **)(a1 + 32);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 24), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 24) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            uint64_t v17 = sub_178E0E8(*(void *)(a1 + 16));
            uint64_t v16 = sub_188CDC8(a1 + 16, v17);
            unint64_t v13 = (unsigned __int8 *)v19;
          }
          int v12 = sub_17707DC(a3, v16, v13);
          int v19 = v12;
          if (!v12) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_24;
          }
        }
      }
      if (!v7 || (v7 & 7) == 4) {
        break;
      }
      if (*v5)
      {
        uint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        uint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        uint64_t v6 = v19;
      }
      int v19 = (char *)sub_1885AC0(v7, v11, v6, a3);
      if (!v19) {
        return 0;
      }
LABEL_24:
      if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
        return v19;
      }
    }
    if (v6)
    {
      a3[10].i32[0] = v7 - 1;
      return v19;
    }
    return 0;
  }
  return v19;
}

char *sub_17707DC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17779DC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_177086C(uint64_t a1, char *__dst, unint64_t *a3)
{
  int v6 = *(_DWORD *)(a1 + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unsigned int v10 = __dst + 2;
      }
      __dst = sub_1777D64(v8, (unint64_t)v10, a3);
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return __dst;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    uint64_t v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    uint64_t v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if ((uint64_t)(*a3 - (void)__dst) >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(__dst, v14, (int)v15);
    __dst += v16;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, __dst);
}

uint64_t sub_17709B0(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    unint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    unint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_1777F60(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 40) = v2;
  return v2;
}

uint64_t sub_1770A60()
{
  return 1;
}

void *sub_1770A68@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.ButtonModuleConfiguration");
}

void *sub_1770A78(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1870BBC(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1770AF8(void *a1)
{
  sub_1770A78(a1);

  operator delete();
}

char *sub_1770B30(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v19 = a2;
  if ((sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v5 = (void *)(a1 + 8);
    while (1)
    {
      uint64_t v6 = v19 + 1;
      unsigned int v7 = *v19;
      if (*v19 < 0)
      {
        unsigned int v8 = v7 + (*v6 << 7);
        unsigned int v7 = v8 - 128;
        if (*v6 < 0)
        {
          uint64_t v6 = (char *)sub_188C180((uint64_t)v19, v8 - 128);
          unsigned int v7 = v9;
        }
        else
        {
          uint64_t v6 = v19 + 2;
        }
      }
      int v19 = v6;
      if (v7 == 10)
      {
        int v12 = v6 - 1;
        while (1)
        {
          unint64_t v13 = (unsigned __int8 *)(v12 + 1);
          int v19 = v12 + 1;
          uint64_t v14 = *(_DWORD **)(a1 + 32);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 24), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 24) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            uint64_t v17 = sub_178E0E8(*(void *)(a1 + 16));
            uint64_t v16 = sub_188CDC8(a1 + 16, v17);
            unint64_t v13 = (unsigned __int8 *)v19;
          }
          int v12 = sub_17707DC(a3, v16, v13);
          int v19 = v12;
          if (!v12) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_24;
          }
        }
      }
      if (!v7 || (v7 & 7) == 4) {
        break;
      }
      if (*v5)
      {
        uint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        uint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        uint64_t v6 = v19;
      }
      int v19 = (char *)sub_1885AC0(v7, v11, v6, a3);
      if (!v19) {
        return 0;
      }
LABEL_24:
      if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
        return v19;
      }
    }
    if (v6)
    {
      a3[10].i32[0] = v7 - 1;
      return v19;
    }
    return 0;
  }
  return v19;
}

char *sub_1770CD0(uint64_t a1, char *__dst, unint64_t *a3)
{
  int v6 = *(_DWORD *)(a1 + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unint64_t v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unint64_t v10 = __dst + 2;
      }
      __dst = sub_1777D64(v8, (unint64_t)v10, a3);
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return __dst;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    uint64_t v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    uint64_t v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if ((uint64_t)(*a3 - (void)__dst) >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(__dst, v14, (int)v15);
    __dst += v16;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, __dst);
}

uint64_t sub_1770E14(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    unint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    unint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_1777F60(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 40) = v2;
  return v2;
}

uint64_t sub_1770EC4()
{
  return 1;
}

void *sub_1770ECC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.UnifiedActionModuleConfiguration");
}

void *sub_1770EDC(void *a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  a1[1] = v4;
  *a1 = off_24D8E98;
  sub_1882BC4((uint64_t)(a1 + 2), a2);
  a1[5] = 0;
  a1[6] = &qword_2550250;
  a1[7] = &qword_2550250;
  a1[8] = &qword_2550250;
  a1[9] = &qword_2550250;
  return a1;
}

void sub_1770F50(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_1770F80(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_13;
    }
  }
  else if (v4)
  {
    goto LABEL_13;
  }
  uint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 56) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 56));
  }
  if (*(uint64_t **)(a1 + 64) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 64));
  }
  if (*(uint64_t **)(a1 + 72) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 72));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_13:
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1771068(uint64_t a1)
{
  sub_1770F80(a1);

  operator delete();
}

unsigned char *sub_17710A0(uint64_t a1)
{
  uint64_t result = sub_18843A4((unsigned char *)(a1 + 16));
  int v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 0xF) != 0)
  {
    if ((v3 & 1) == 0)
    {
      if ((v3 & 2) == 0) {
        goto LABEL_4;
      }
LABEL_11:
      unint64_t v5 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v5 + 23) < 0)
      {
        **(unsigned char **)unint64_t v5 = 0;
        *(void *)(v5 + 8) = 0;
        if ((v3 & 4) != 0) {
          goto LABEL_15;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v5 = 0;
        *(unsigned char *)(v5 + 23) = 0;
        if ((v3 & 4) != 0) {
          goto LABEL_15;
        }
      }
LABEL_5:
      if ((v3 & 8) == 0) {
        goto LABEL_22;
      }
LABEL_19:
      unint64_t v7 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v7 + 23) < 0)
      {
        **(unsigned char **)unint64_t v7 = 0;
        *(void *)(v7 + 8) = 0;
      }
      else
      {
        *(unsigned char *)unint64_t v7 = 0;
        *(unsigned char *)(v7 + 23) = 0;
      }
      goto LABEL_22;
    }
    unint64_t v4 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v4 + 23) < 0)
    {
      **(unsigned char **)unint64_t v4 = 0;
      *(void *)(v4 + 8) = 0;
      if ((v3 & 2) != 0) {
        goto LABEL_11;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v4 = 0;
      *(unsigned char *)(v4 + 23) = 0;
      if ((v3 & 2) != 0) {
        goto LABEL_11;
      }
    }
LABEL_4:
    if ((v3 & 4) == 0) {
      goto LABEL_5;
    }
LABEL_15:
    unint64_t v6 = *(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v6 + 23) < 0)
    {
      **(unsigned char **)unint64_t v6 = 0;
      *(void *)(v6 + 8) = 0;
      if ((v3 & 8) == 0) {
        goto LABEL_22;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v6 = 0;
      *(unsigned char *)(v6 + 23) = 0;
      if ((v3 & 8) == 0) {
        goto LABEL_22;
      }
    }
    goto LABEL_19;
  }
LABEL_22:
  char v9 = *(unsigned char *)(a1 + 8);
  uint64_t v8 = a1 + 8;
  *(_DWORD *)(v8 + 32) = 0;
  if (v9)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v8);
  }
  return result;
}

uint64_t sub_17711CC(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v21 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v21, a3[11].i32[1])) {
    return *(void *)v21;
  }
  unint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    unint64_t v7 = (char *)(*(void *)v21 + 1);
    unsigned int v8 = **(unsigned char **)v21;
    if ((char)**(unsigned char **)v21 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        unint64_t v7 = (char *)sub_188C180(*(uint64_t *)v21, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        unint64_t v7 = (char *)(*(void *)v21 + 2);
      }
    }
    *(void *)uint64_t v21 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 10) {
          goto LABEL_29;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        uint64_t v11 = *(void *)(a1 + 8);
        int v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
        if (v11) {
          int v12 = (uint64_t *)*v12;
        }
        unint64_t v13 = (void *)(a1 + 48);
        goto LABEL_25;
      case 2u:
        if (v8 != 18) {
          goto LABEL_29;
        }
        *(_DWORD *)(a1 + 40) |= 2u;
        uint64_t v14 = *(void *)(a1 + 8);
        int v12 = (uint64_t *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
        if (v14) {
          int v12 = (uint64_t *)*v12;
        }
        unint64_t v13 = (void *)(a1 + 56);
        goto LABEL_25;
      case 3u:
        if (v8 != 26) {
          goto LABEL_29;
        }
        *(_DWORD *)(a1 + 40) |= 4u;
        uint64_t v15 = *(void *)(a1 + 8);
        int v12 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          int v12 = (uint64_t *)*v12;
        }
        unint64_t v13 = (void *)(a1 + 64);
        goto LABEL_25;
      case 4u:
        if (v8 != 34) {
          goto LABEL_29;
        }
        *(_DWORD *)(a1 + 40) |= 8u;
        uint64_t v16 = *(void *)(a1 + 8);
        int v12 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
        if (v16) {
          int v12 = (uint64_t *)*v12;
        }
        unint64_t v13 = (void *)(a1 + 72);
LABEL_25:
        uint64_t v17 = (std::string *)sub_1880F84(v13, v12);
        unint64_t v18 = (void *)sub_188C244(v17, *(char **)v21, (uint64_t)a3);
        goto LABEL_26;
      default:
LABEL_29:
        if (v8) {
          BOOL v19 = (v8 & 7) == 4;
        }
        else {
          BOOL v19 = 1;
        }
        if (!v19)
        {
          if ((v8 - 8000) >> 6 > 0x7C)
          {
            if (*v6)
            {
              uint64_t v20 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              uint64_t v20 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              unint64_t v7 = *(char **)v21;
            }
            unint64_t v18 = sub_1885AC0(v8, v20, v7, a3);
          }
          else
          {
            unint64_t v18 = sub_18859DC((uint64_t **)(a1 + 16), v8, v7, (uint64_t)&off_2548C38, (uint64_t *)(a1 + 8), a3);
          }
LABEL_26:
          *(void *)uint64_t v21 = v18;
          if (!v18) {
            return 0;
          }
          if (sub_11947B8((uint64_t)a3, (char **)v21, a3[11].i32[1])) {
            return *(void *)v21;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return *(void *)v21;
    }
  }
}

char *sub_177145C(uint64_t a1, char *a2, void *a3)
{
  unint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if (v6)
  {
    unint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), a2);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  unint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_12:
  unint64_t v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 8) != 0) {
LABEL_5:
  }
    unint64_t v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL), v4);
LABEL_6:
  if (*(_WORD *)(a1 + 26)) {
    unint64_t v4 = sub_1886844(a1 + 16, 1000, 2000, v4, a3);
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v9 + 31) < 0)
  {
    unsigned int v10 = *(void **)(v9 + 8);
    uint64_t v11 = *(void *)(v9 + 16);
  }
  else
  {
    unsigned int v10 = (void *)(v9 + 8);
    LODWORD(v11) = *(unsigned __int8 *)(v9 + 31);
  }
  if (*a3 - (void)v4 >= (int)v11)
  {
    uint64_t v12 = (int)v11;
    memcpy(v4, v10, (int)v11);
    v4 += v12;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v10, v11, v4);
}

uint64_t sub_17715BC(uint64_t a1)
{
  uint64_t result = sub_1889280(a1 + 16);
  int v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 0xF) == 0) {
    goto LABEL_9;
  }
  if (v3)
  {
    unint64_t v8 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v9 = *(unsigned __int8 *)(v8 + 23);
    uint64_t v10 = *(void *)(v8 + 8);
    if ((v9 & 0x80u) == 0) {
      uint64_t v10 = v9;
    }
    result += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v3 & 2) == 0)
    {
LABEL_4:
      if ((v3 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_17;
    }
  }
  else if ((v3 & 2) == 0)
  {
    goto LABEL_4;
  }
  unint64_t v11 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v12 = *(unsigned __int8 *)(v11 + 23);
  uint64_t v13 = *(void *)(v11 + 8);
  if ((v12 & 0x80u) == 0) {
    uint64_t v13 = v12;
  }
  result += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v3 & 4) == 0)
  {
LABEL_5:
    if ((v3 & 8) == 0) {
      goto LABEL_9;
    }
    goto LABEL_6;
  }
LABEL_17:
  unint64_t v14 = *(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v15 = *(unsigned __int8 *)(v14 + 23);
  uint64_t v16 = *(void *)(v14 + 8);
  if ((v15 & 0x80u) == 0) {
    uint64_t v16 = v15;
  }
  result += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v3 & 8) != 0)
  {
LABEL_6:
    unint64_t v4 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
    uint64_t v6 = *(void *)(v4 + 8);
    if ((v5 & 0x80u) == 0) {
      uint64_t v6 = v5;
    }
    result += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_9:
  uint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    unint64_t v17 = v7 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v17 + 31) < 0) {
      uint64_t v18 = *(void *)(v17 + 16);
    }
    else {
      uint64_t v18 = *(unsigned __int8 *)(v17 + 31);
    }
    result += v18;
  }
  *(_DWORD *)(a1 + 44) = result;
  return result;
}

void sub_1771740(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 40);
  if ((v4 & 0xF) == 0) {
    goto LABEL_19;
  }
  if (v4)
  {
    uint64_t v5 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 40) |= 1u;
    uint64_t v6 = (std::string **)(a1 + 48);
    uint64_t v7 = *(void *)(a1 + 8);
    unint64_t v8 = (uint64_t *)(v7 & 0xFFFFFFFFFFFFFFFCLL);
    if (v7) {
      unint64_t v8 = (uint64_t *)*v8;
    }
    sub_1881DF4(v6, v5, v8);
    if ((v4 & 2) == 0)
    {
LABEL_4:
      if ((v4 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_13;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_4;
  }
  uint64_t v9 = (long long *)(*(void *)(a2 + 56) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 40) |= 2u;
  uint64_t v10 = *(void *)(a1 + 8);
  unint64_t v11 = (uint64_t *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
  if (v10) {
    unint64_t v11 = (uint64_t *)*v11;
  }
  sub_1881DF4((std::string **)(a1 + 56), v9, v11);
  if ((v4 & 4) == 0)
  {
LABEL_5:
    if ((v4 & 8) == 0) {
      goto LABEL_19;
    }
    goto LABEL_16;
  }
LABEL_13:
  uint64_t v12 = (long long *)(*(void *)(a2 + 64) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 40) |= 4u;
  uint64_t v13 = *(void *)(a1 + 8);
  unint64_t v14 = (uint64_t *)(v13 & 0xFFFFFFFFFFFFFFFCLL);
  if (v13) {
    unint64_t v14 = (uint64_t *)*v14;
  }
  sub_1881DF4((std::string **)(a1 + 64), v12, v14);
  if ((v4 & 8) != 0)
  {
LABEL_16:
    uint64_t v15 = (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 40) |= 8u;
    uint64_t v16 = *(void *)(a1 + 8);
    unint64_t v17 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
    if (v16) {
      unint64_t v17 = (uint64_t *)*v17;
    }
    sub_1881DF4((std::string **)(a1 + 72), v15, v17);
  }
LABEL_19:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v18 = *(void *)(a2 + 8);
  if (v18)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v18 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_1771898(uint64_t a1)
{
  return sub_18856CC(a1 + 16);
}

void *sub_17718A0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.ActionData.ActionLink.QuickLinkParams");
}

void *sub_17718B0(void *a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  a1[1] = v4;
  *a1 = off_24D8F18;
  sub_1882BC4((uint64_t)(a1 + 2), a2);
  a1[5] = 0;
  a1[6] = &qword_2550250;
  a1[7] = &qword_2550250;
  a1[8] = &qword_2550250;
  a1[9] = &qword_2550250;
  a1[10] = &qword_2550250;
  return a1;
}

void sub_1771928(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_1771958(uint64_t a1)
{
  int v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_15;
    }
  }
  else if (v4)
  {
    goto LABEL_15;
  }
  uint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 56) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 56));
  }
  if (*(uint64_t **)(a1 + 64) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 64));
  }
  if (*(uint64_t **)(a1 + 72) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 72));
  }
  if (*(uint64_t **)(a1 + 80) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 80));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_15:
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1771A54(uint64_t a1)
{
  sub_1771958(a1);

  operator delete();
}

unsigned char *sub_1771A8C(uint64_t a1)
{
  uint64_t result = sub_18843A4((unsigned char *)(a1 + 16));
  int v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 0x1F) != 0)
  {
    if ((v3 & 1) == 0)
    {
      if ((v3 & 2) == 0) {
        goto LABEL_4;
      }
LABEL_12:
      unint64_t v5 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v5 + 23) < 0)
      {
        **(unsigned char **)unint64_t v5 = 0;
        *(void *)(v5 + 8) = 0;
        if ((v3 & 4) != 0) {
          goto LABEL_16;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v5 = 0;
        *(unsigned char *)(v5 + 23) = 0;
        if ((v3 & 4) != 0) {
          goto LABEL_16;
        }
      }
LABEL_5:
      if ((v3 & 8) == 0) {
        goto LABEL_6;
      }
LABEL_20:
      unint64_t v7 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v7 + 23) < 0)
      {
        **(unsigned char **)unint64_t v7 = 0;
        *(void *)(v7 + 8) = 0;
        if ((v3 & 0x10) == 0) {
          goto LABEL_27;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v7 = 0;
        *(unsigned char *)(v7 + 23) = 0;
        if ((v3 & 0x10) == 0) {
          goto LABEL_27;
        }
      }
      goto LABEL_24;
    }
    unint64_t v4 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v4 + 23) < 0)
    {
      **(unsigned char **)unint64_t v4 = 0;
      *(void *)(v4 + 8) = 0;
      if ((v3 & 2) != 0) {
        goto LABEL_12;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v4 = 0;
      *(unsigned char *)(v4 + 23) = 0;
      if ((v3 & 2) != 0) {
        goto LABEL_12;
      }
    }
LABEL_4:
    if ((v3 & 4) == 0) {
      goto LABEL_5;
    }
LABEL_16:
    unint64_t v6 = *(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v6 + 23) < 0)
    {
      **(unsigned char **)unint64_t v6 = 0;
      *(void *)(v6 + 8) = 0;
      if ((v3 & 8) != 0) {
        goto LABEL_20;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v6 = 0;
      *(unsigned char *)(v6 + 23) = 0;
      if ((v3 & 8) != 0) {
        goto LABEL_20;
      }
    }
LABEL_6:
    if ((v3 & 0x10) == 0) {
      goto LABEL_27;
    }
LABEL_24:
    unint64_t v8 = *(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v8 + 23) < 0)
    {
      **(unsigned char **)unint64_t v8 = 0;
      *(void *)(v8 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v8 = 0;
      *(unsigned char *)(v8 + 23) = 0;
    }
  }
LABEL_27:
  char v10 = *(unsigned char *)(a1 + 8);
  uint64_t v9 = a1 + 8;
  *(_DWORD *)(v9 + 32) = 0;
  if (v10)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v9);
  }
  return result;
}

uint64_t sub_1771BEC(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v22 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v22, a3[11].i32[1])) {
    return *(void *)v22;
  }
  unint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    unint64_t v7 = (char *)(*(void *)v22 + 1);
    unsigned int v8 = **(unsigned char **)v22;
    if ((char)**(unsigned char **)v22 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        unint64_t v7 = (char *)sub_188C180(*(uint64_t *)v22, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        unint64_t v7 = (char *)(*(void *)v22 + 2);
      }
    }
    *(void *)uint64_t v22 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 10) {
          goto LABEL_33;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        uint64_t v11 = *(void *)(a1 + 8);
        uint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
        if (v11) {
          uint64_t v12 = (uint64_t *)*v12;
        }
        uint64_t v13 = (void *)(a1 + 48);
        goto LABEL_29;
      case 2u:
        if (v8 != 18) {
          goto LABEL_33;
        }
        *(_DWORD *)(a1 + 40) |= 2u;
        uint64_t v14 = *(void *)(a1 + 8);
        uint64_t v12 = (uint64_t *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
        if (v14) {
          uint64_t v12 = (uint64_t *)*v12;
        }
        uint64_t v13 = (void *)(a1 + 56);
        goto LABEL_29;
      case 3u:
        if (v8 != 26) {
          goto LABEL_33;
        }
        *(_DWORD *)(a1 + 40) |= 4u;
        uint64_t v15 = *(void *)(a1 + 8);
        uint64_t v12 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          uint64_t v12 = (uint64_t *)*v12;
        }
        uint64_t v13 = (void *)(a1 + 64);
        goto LABEL_29;
      case 4u:
        if (v8 != 34) {
          goto LABEL_33;
        }
        *(_DWORD *)(a1 + 40) |= 8u;
        uint64_t v16 = *(void *)(a1 + 8);
        uint64_t v12 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
        if (v16) {
          uint64_t v12 = (uint64_t *)*v12;
        }
        uint64_t v13 = (void *)(a1 + 72);
        goto LABEL_29;
      case 5u:
        if (v8 != 42) {
          goto LABEL_33;
        }
        *(_DWORD *)(a1 + 40) |= 0x10u;
        uint64_t v17 = *(void *)(a1 + 8);
        uint64_t v12 = (uint64_t *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
        if (v17) {
          uint64_t v12 = (uint64_t *)*v12;
        }
        uint64_t v13 = (void *)(a1 + 80);
LABEL_29:
        uint64_t v18 = (std::string *)sub_1880F84(v13, v12);
        BOOL v19 = (void *)sub_188C244(v18, *(char **)v22, (uint64_t)a3);
        goto LABEL_30;
      default:
LABEL_33:
        if (v8) {
          BOOL v20 = (v8 & 7) == 4;
        }
        else {
          BOOL v20 = 1;
        }
        if (!v20)
        {
          if ((v8 - 8000) >> 6 > 0x7C)
          {
            if (*v6)
            {
              uint64_t v21 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              uint64_t v21 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              unint64_t v7 = *(char **)v22;
            }
            BOOL v19 = sub_1885AC0(v8, v21, v7, a3);
          }
          else
          {
            BOOL v19 = sub_18859DC((uint64_t **)(a1 + 16), v8, v7, (uint64_t)&off_2548C88, (uint64_t *)(a1 + 8), a3);
          }
LABEL_30:
          *(void *)uint64_t v22 = v19;
          if (!v19) {
            return 0;
          }
          if (sub_11947B8((uint64_t)a3, (char **)v22, a3[11].i32[1])) {
            return *(void *)v22;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return *(void *)v22;
    }
  }
}

char *sub_1771EB8(uint64_t a1, char *a2, void *a3)
{
  unint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if (v6)
  {
    unint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), a2);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_13;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  unint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_14;
  }
LABEL_13:
  unint64_t v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_14:
  unint64_t v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x10) != 0) {
LABEL_6:
  }
    unint64_t v4 = sub_117A0AC(a3, 5, (const void **)(*(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL), v4);
LABEL_7:
  if (*(_WORD *)(a1 + 26)) {
    unint64_t v4 = sub_1886844(a1 + 16, 1000, 2000, v4, a3);
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v9 + 31) < 0)
  {
    unsigned int v10 = *(void **)(v9 + 8);
    uint64_t v11 = *(void *)(v9 + 16);
  }
  else
  {
    unsigned int v10 = (void *)(v9 + 8);
    LODWORD(v11) = *(unsigned __int8 *)(v9 + 31);
  }
  if (*a3 - (void)v4 >= (int)v11)
  {
    uint64_t v12 = (int)v11;
    memcpy(v4, v10, (int)v11);
    v4 += v12;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v10, v11, v4);
}

uint64_t sub_177203C(uint64_t a1)
{
  uint64_t result = sub_1889280(a1 + 16);
  int v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 0x1F) == 0) {
    goto LABEL_10;
  }
  if (v3)
  {
    unint64_t v8 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v9 = *(unsigned __int8 *)(v8 + 23);
    uint64_t v10 = *(void *)(v8 + 8);
    if ((v9 & 0x80u) == 0) {
      uint64_t v10 = v9;
    }
    result += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v3 & 2) == 0)
    {
LABEL_4:
      if ((v3 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_18;
    }
  }
  else if ((v3 & 2) == 0)
  {
    goto LABEL_4;
  }
  unint64_t v11 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v12 = *(unsigned __int8 *)(v11 + 23);
  uint64_t v13 = *(void *)(v11 + 8);
  if ((v12 & 0x80u) == 0) {
    uint64_t v13 = v12;
  }
  result += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v3 & 4) == 0)
  {
LABEL_5:
    if ((v3 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_21;
  }
LABEL_18:
  unint64_t v14 = *(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v15 = *(unsigned __int8 *)(v14 + 23);
  uint64_t v16 = *(void *)(v14 + 8);
  if ((v15 & 0x80u) == 0) {
    uint64_t v16 = v15;
  }
  result += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v3 & 8) == 0)
  {
LABEL_6:
    if ((v3 & 0x10) == 0) {
      goto LABEL_10;
    }
    goto LABEL_7;
  }
LABEL_21:
  unint64_t v17 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v18 = *(unsigned __int8 *)(v17 + 23);
  uint64_t v19 = *(void *)(v17 + 8);
  if ((v18 & 0x80u) == 0) {
    uint64_t v19 = v18;
  }
  result += v19 + ((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v3 & 0x10) != 0)
  {
LABEL_7:
    unint64_t v4 = *(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
    uint64_t v6 = *(void *)(v4 + 8);
    if ((v5 & 0x80u) == 0) {
      uint64_t v6 = v5;
    }
    result += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  uint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    unint64_t v20 = v7 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v20 + 31) < 0) {
      uint64_t v21 = *(void *)(v20 + 16);
    }
    else {
      uint64_t v21 = *(unsigned __int8 *)(v20 + 31);
    }
    result += v21;
  }
  *(_DWORD *)(a1 + 44) = result;
  return result;
}

void sub_1772208(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 40);
  if ((v4 & 0x1F) == 0) {
    goto LABEL_23;
  }
  if (v4)
  {
    uint64_t v5 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 40) |= 1u;
    uint64_t v6 = (std::string **)(a1 + 48);
    uint64_t v7 = *(void *)(a1 + 8);
    unint64_t v8 = (uint64_t *)(v7 & 0xFFFFFFFFFFFFFFFCLL);
    if (v7) {
      unint64_t v8 = (uint64_t *)*v8;
    }
    sub_1881DF4(v6, v5, v8);
    if ((v4 & 2) == 0)
    {
LABEL_4:
      if ((v4 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_14;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_4;
  }
  uint64_t v9 = (long long *)(*(void *)(a2 + 56) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 40) |= 2u;
  uint64_t v10 = *(void *)(a1 + 8);
  unint64_t v11 = (uint64_t *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
  if (v10) {
    unint64_t v11 = (uint64_t *)*v11;
  }
  sub_1881DF4((std::string **)(a1 + 56), v9, v11);
  if ((v4 & 4) == 0)
  {
LABEL_5:
    if ((v4 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_17;
  }
LABEL_14:
  uint64_t v12 = (long long *)(*(void *)(a2 + 64) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 40) |= 4u;
  uint64_t v13 = *(void *)(a1 + 8);
  unint64_t v14 = (uint64_t *)(v13 & 0xFFFFFFFFFFFFFFFCLL);
  if (v13) {
    unint64_t v14 = (uint64_t *)*v14;
  }
  sub_1881DF4((std::string **)(a1 + 64), v12, v14);
  if ((v4 & 8) == 0)
  {
LABEL_6:
    if ((v4 & 0x10) == 0) {
      goto LABEL_23;
    }
    goto LABEL_20;
  }
LABEL_17:
  uint64_t v15 = (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 40) |= 8u;
  uint64_t v16 = *(void *)(a1 + 8);
  unint64_t v17 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
  if (v16) {
    unint64_t v17 = (uint64_t *)*v17;
  }
  sub_1881DF4((std::string **)(a1 + 72), v15, v17);
  if ((v4 & 0x10) != 0)
  {
LABEL_20:
    uint64_t v18 = (long long *)(*(void *)(a2 + 80) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 40) |= 0x10u;
    uint64_t v19 = *(void *)(a1 + 8);
    unint64_t v20 = (uint64_t *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
    if (v19) {
      unint64_t v20 = (uint64_t *)*v20;
    }
    sub_1881DF4((std::string **)(a1 + 80), v18, v20);
  }
LABEL_23:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v21 = *(void *)(a2 + 8);
  if (v21)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v21 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_1772398(uint64_t a1)
{
  return sub_18856CC(a1 + 16);
}

void *sub_17723A0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.ActionData.ActionLink.AppClipParams");
}

uint64_t sub_17723B0(uint64_t a1)
{
  int v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_11;
    }
  }
  else if (v4)
  {
    goto LABEL_11;
  }
  uint64_t v5 = (void ***)(a1 + 40);
  if (*(uint64_t **)(a1 + 40) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 48));
  }
  if (*(uint64_t **)(a1 + 56) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 56));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_11:
  sub_1889DA8(a1 + 24);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1772484(uint64_t a1)
{
  sub_17723B0(a1);

  operator delete();
}

uint64_t sub_17724BC(uint64_t a1)
{
  *(_DWORD *)(a1 + 24) = 0;
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 7) == 0) {
    goto LABEL_17;
  }
  if (v1)
  {
    unint64_t v2 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)unint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
      if ((v1 & 2) != 0) {
        goto LABEL_10;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
      if ((v1 & 2) != 0) {
        goto LABEL_10;
      }
    }
LABEL_4:
    if ((v1 & 4) == 0) {
      goto LABEL_17;
    }
LABEL_14:
    unint64_t v4 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v4 + 23) < 0)
    {
      **(unsigned char **)unint64_t v4 = 0;
      *(void *)(v4 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v4 = 0;
      *(unsigned char *)(v4 + 23) = 0;
    }
    goto LABEL_17;
  }
  if ((v1 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_10:
  unint64_t v3 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v3 + 23) < 0)
  {
    **(unsigned char **)unint64_t v3 = 0;
    *(void *)(v3 + 8) = 0;
    if ((v1 & 4) == 0) {
      goto LABEL_17;
    }
    goto LABEL_14;
  }
  *(unsigned char *)unint64_t v3 = 0;
  *(unsigned char *)(v3 + 23) = 0;
  if ((v1 & 4) != 0) {
    goto LABEL_14;
  }
LABEL_17:
  char v6 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v6) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_1772578(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v30 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v30, a3[11].i32[1])) {
    return *(void *)v30;
  }
  char v6 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v7 = (char *)(*(void *)v30 + 1);
    unsigned int v8 = **(unsigned char **)v30;
    if ((char)**(unsigned char **)v30 < 0)
    {
      int v9 = *v7;
      unsigned int v10 = v8 + (v9 << 7);
      unsigned int v8 = v10 - 128;
      if (v9 < 0)
      {
        uint64_t v7 = (char *)sub_188C180(*(uint64_t *)v30, v10 - 128);
        unsigned int v8 = v11;
      }
      else
      {
        uint64_t v7 = (char *)(*(void *)v30 + 2);
      }
    }
    *(void *)int v30 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 10) {
          goto LABEL_44;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        unint64_t v14 = (void *)(a1 + 40);
        goto LABEL_41;
      case 2u:
        if (v8 != 18) {
          goto LABEL_44;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v15 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        unint64_t v14 = (void *)(a1 + 48);
        goto LABEL_41;
      case 3u:
        if (v8 == 24)
        {
          uint64_t v16 = (uint64_t)(v7 - 1);
          while (1)
          {
            *(void *)int v30 = v16 + 1;
            unint64_t v17 = *(unsigned __int8 *)(v16 + 1);
            uint64_t v18 = (char *)(v16 + 2);
            if (*(char *)(v16 + 1) < 0)
            {
              int v19 = *v18;
              int v20 = v17 + (v19 << 7);
              unint64_t v17 = (v20 - 128);
              if (v19 < 0)
              {
                *(void *)int v30 = sub_188C138(v16 + 1, (v20 - 128));
                if (!*(void *)v30) {
                  return 0;
                }
                unint64_t v17 = v23;
                goto LABEL_23;
              }
              uint64_t v18 = (char *)(v16 + 3);
            }
            *(void *)int v30 = v18;
LABEL_23:
            if (v17 > 2)
            {
              if (*v6) {
                unint64_t v24 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
              }
              else {
                unint64_t v24 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              }
              sub_188C020(3, v17, v24);
            }
            else
            {
              uint64_t v21 = *(unsigned int *)(a1 + 24);
              if (v21 == *(_DWORD *)(a1 + 28))
              {
                int v22 = v21 + 1;
                sub_188C80C((unsigned int *)(a1 + 24), v21 + 1);
                *(_DWORD *)(*(void *)(a1 + 32) + 4 * v21) = v17;
              }
              else
              {
                *(_DWORD *)(*(void *)(a1 + 32) + 4 * v21) = v17;
                int v22 = v21 + 1;
              }
              *(_DWORD *)(a1 + 24) = v22;
            }
            uint64_t v16 = *(void *)v30;
            if (*(void *)a3 <= *(void *)v30 || **(unsigned char **)v30 != 24) {
              goto LABEL_52;
            }
          }
        }
        if (v8 == 26)
        {
          *(void *)&long long v31 = a1 + 24;
          *((void *)&v31 + 1) = sub_16B5990;
          uint64_t v32 = a1 + 8;
          int v33 = 3;
          int v27 = sub_1112E88((uint64_t)a3, v7, &v31);
LABEL_51:
          *(void *)int v30 = v27;
          if (!v27) {
            return 0;
          }
LABEL_52:
          if (sub_11947B8((uint64_t)a3, (char **)v30, a3[11].i32[1])) {
            return *(void *)v30;
          }
          continue;
        }
LABEL_44:
        if (v8) {
          BOOL v28 = (v8 & 7) == 4;
        }
        else {
          BOOL v28 = 1;
        }
        if (!v28)
        {
          if (*v6)
          {
            uint64_t v29 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v29 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v7 = *(char **)v30;
          }
          int v27 = sub_1885AC0(v8, v29, v7, a3);
          goto LABEL_51;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return *(void *)v30;
      case 4u:
        if (v8 != 34) {
          goto LABEL_44;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v25 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v25 & 0xFFFFFFFFFFFFFFFCLL);
        if (v25) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        unint64_t v14 = (void *)(a1 + 56);
LABEL_41:
        unint64_t v26 = (std::string *)sub_1880F84(v14, v13);
        int v27 = (void *)sub_188C244(v26, *(char **)v30, (uint64_t)a3);
        goto LABEL_51;
      default:
        goto LABEL_44;
    }
  }
}

unsigned char *sub_17728C4(uint64_t a1, unsigned char *__dst, void *a3)
{
  unint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    unint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 2) != 0) {
    unint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v7 = *(unsigned int *)(a1 + 24);
  if ((int)v7 >= 1)
  {
    for (uint64_t i = 0; i != v7; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v9 = *(int *)(*(void *)(a1 + 32) + 4 * i);
      *unint64_t v4 = 24;
      v4[1] = v9;
      if (v9 > 0x7F)
      {
        v4[1] = v9 | 0x80;
        unint64_t v10 = v9 >> 7;
        v4[2] = v9 >> 7;
        v4 += 3;
        if (v9 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v11 = v10 >> 14;
            v10 >>= 7;
            *v4++ = v10;
          }
          while (v11);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  if ((v6 & 4) != 0) {
    unint64_t v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v12 = *(void *)(a1 + 8);
  if ((v12 & 1) == 0) {
    return v4;
  }
  unint64_t v14 = v12 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v14 + 31) < 0)
  {
    uint64_t v15 = *(void **)(v14 + 8);
    uint64_t v16 = *(void *)(v14 + 16);
  }
  else
  {
    uint64_t v15 = (void *)(v14 + 8);
    LODWORD(v16) = *(unsigned __int8 *)(v14 + 31);
  }
  if (*a3 - (void)v4 >= (int)v16)
  {
    uint64_t v17 = (int)v16;
    memcpy(v4, v15, (int)v16);
    v4 += v17;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v15, v16, v4);
}

uint64_t sub_1772A84(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 24);
  if (v1)
  {
    int v2 = 0;
    uint64_t v3 = 0;
    do
    {
      int v4 = *(_DWORD *)(*(void *)(a1 + 32) + 4 * v2);
      if (v4 < 0) {
        uint64_t v5 = 10;
      }
      else {
        uint64_t v5 = (9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6;
      }
      v3 += v5;
      ++v2;
    }
    while (v1 != v2);
  }
  else
  {
    uint64_t v3 = 0;
  }
  uint64_t v6 = v3 + v1;
  int v7 = *(_DWORD *)(a1 + 16);
  if ((v7 & 7) == 0) {
    goto LABEL_16;
  }
  if (v7)
  {
    unint64_t v13 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v14 = *(unsigned __int8 *)(v13 + 23);
    uint64_t v15 = *(void *)(v13 + 8);
    if ((v14 & 0x80u) == 0) {
      uint64_t v15 = v14;
    }
    v6 += v15 + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v7 & 2) == 0)
    {
LABEL_12:
      if ((v7 & 4) == 0) {
        goto LABEL_16;
      }
      goto LABEL_13;
    }
  }
  else if ((v7 & 2) == 0)
  {
    goto LABEL_12;
  }
  unint64_t v16 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v17 = *(unsigned __int8 *)(v16 + 23);
  uint64_t v18 = *(void *)(v16 + 8);
  if ((v17 & 0x80u) == 0) {
    uint64_t v18 = v17;
  }
  v6 += v18 + ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v7 & 4) != 0)
  {
LABEL_13:
    unint64_t v8 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v9 = *(unsigned __int8 *)(v8 + 23);
    uint64_t v10 = *(void *)(v8 + 8);
    if ((v9 & 0x80u) == 0) {
      uint64_t v10 = v9;
    }
    v6 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_16:
  uint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    unint64_t v19 = v11 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v19 + 31) < 0) {
      uint64_t v20 = *(void *)(v19 + 16);
    }
    else {
      uint64_t v20 = *(unsigned __int8 *)(v19 + 31);
    }
    v6 += v20;
  }
  *(_DWORD *)(a1 + 20) = v6;
  return v6;
}

uint64_t sub_1772BF8()
{
  return 1;
}

void *sub_1772C00@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.ActionData.ActionLink.ExtensionParams");
}

uint64_t sub_1772C10(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  *(void *)(a1 + 8) = v4;
  *(void *)a1 = off_24D9018;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = &qword_2550250;
  *(void *)(a1 + 56) = &qword_2550250;
  *(void *)(a1 + 64) = 0;
  *(unsigned char *)(a1 + 72) = 0;
  return a1;
}

void sub_1772C84(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_1772CB4(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_12;
    }
  }
  else if (v4)
  {
    goto LABEL_12;
  }
  uint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 56) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 56));
  }
  if ((uint64_t (***)())a1 != &off_2548D20)
  {
    uint64_t v6 = *(void *)(a1 + 64);
    if (v6)
    {
      sub_16EC668(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_12:
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1772DA4(uint64_t a1)
{
  sub_1772CB4(a1);

  operator delete();
}

uint64_t sub_1772DDC(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  int v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 7) == 0) {
    goto LABEL_6;
  }
  if ((v3 & 1) == 0)
  {
    if ((v3 & 2) == 0) {
      goto LABEL_4;
    }
    goto LABEL_14;
  }
  unint64_t v6 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v6 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v6 = 0;
    *(unsigned char *)(v6 + 23) = 0;
    if ((v3 & 2) != 0) {
      goto LABEL_14;
    }
LABEL_4:
    if ((v3 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  **(unsigned char **)unint64_t v6 = 0;
  *(void *)(v6 + 8) = 0;
  if ((v3 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_14:
  unint64_t v7 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v7 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v7 = 0;
    *(unsigned char *)(v7 + 23) = 0;
    if ((v3 & 4) == 0) {
      goto LABEL_6;
    }
LABEL_5:
    uint64_t result = sub_16EC760(*(void *)(a1 + 64));
    goto LABEL_6;
  }
  **(unsigned char **)unint64_t v7 = 0;
  *(void *)(v7 + 8) = 0;
  if ((v3 & 4) != 0) {
    goto LABEL_5;
  }
LABEL_6:
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t v4 = a1 + 8;
  *(unsigned char *)(v4 + 64) = 0;
  *(_DWORD *)(v4 + 32) = 0;
  if (v5)
  {
    return sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

uint64_t sub_1772EB8(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v27 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v27, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    unint64_t v8 = (unsigned __int8 *)(*(void *)v27 + 1);
    unsigned int v9 = **(unsigned char **)v27;
    if ((char)**(unsigned char **)v27 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        unint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v27, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unint64_t v8 = (unsigned __int8 *)(*(void *)v27 + 2);
      }
    }
    *(void *)int v27 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_29;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        uint64_t v12 = *(void *)(a1 + 8);
        unint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          unint64_t v13 = (uint64_t *)*v13;
        }
        uint64_t v14 = (void *)(a1 + 48);
        goto LABEL_17;
      case 2u:
        if (v9 != 18) {
          goto LABEL_29;
        }
        *(_DWORD *)(a1 + 40) |= 2u;
        uint64_t v15 = *(void *)(a1 + 8);
        unint64_t v13 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          unint64_t v13 = (uint64_t *)*v13;
        }
        uint64_t v14 = (void *)(a1 + 56);
LABEL_17:
        unint64_t v16 = (std::string *)sub_1880F84(v14, v13);
        uint64_t v17 = (void *)sub_188C244(v16, *(char **)v27, (uint64_t)a3);
        goto LABEL_38;
      case 3u:
        if (v9 != 26) {
          goto LABEL_29;
        }
        *(_DWORD *)(a1 + 40) |= 4u;
        uint64_t v18 = *(void *)(a1 + 64);
        if (!v18)
        {
          unint64_t v19 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            unint64_t v19 = (void *)*v19;
          }
          uint64_t v18 = sub_17887C8((uint64_t)v19);
          *(void *)(a1 + 64) = v18;
          unint64_t v8 = *(unsigned __int8 **)v27;
        }
        uint64_t v17 = sub_1724E44(a3, v18, v8);
        goto LABEL_38;
      case 4u:
        if (v9 != 32) {
          goto LABEL_29;
        }
        v5 |= 8u;
        uint64_t v20 = (char *)(v8 + 1);
        uint64_t v21 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_28;
        }
        int v22 = *v20;
        uint64_t v21 = v21 + (v22 << 7) - 128;
        if (v22 < 0)
        {
          uint64_t v25 = sub_188C138((uint64_t)v8, v21);
          *(void *)int v27 = v25;
          *(unsigned char *)(a1 + 72) = v26 != 0;
          if (!v25) {
            goto LABEL_46;
          }
        }
        else
        {
          uint64_t v20 = (char *)(v8 + 2);
LABEL_28:
          *(void *)int v27 = v20;
          *(unsigned char *)(a1 + 72) = v21 != 0;
        }
        goto LABEL_39;
      default:
LABEL_29:
        if (v9) {
          BOOL v23 = (v9 & 7) == 4;
        }
        else {
          BOOL v23 = 1;
        }
        if (!v23)
        {
          if ((v9 - 8000) >> 6 > 0x7C)
          {
            if (*v7)
            {
              unint64_t v24 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              unint64_t v24 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              unint64_t v8 = *(unsigned __int8 **)v27;
            }
            uint64_t v17 = sub_1885AC0(v9, v24, (char *)v8, a3);
          }
          else
          {
            uint64_t v17 = sub_18859DC((uint64_t **)(a1 + 16), v9, (char *)v8, (uint64_t)&off_2548D20, (uint64_t *)(a1 + 8), a3);
          }
LABEL_38:
          *(void *)int v27 = v17;
          if (!v17) {
            goto LABEL_46;
          }
LABEL_39:
          if (sub_11947B8((uint64_t)a3, (char **)v27, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_46:
        }
          *(void *)int v27 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 40) |= v5;
        return *(void *)v27;
    }
  }
}

char *sub_17731A8(uint64_t a1, char *a2, unint64_t *a3)
{
  uint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if (v6)
  {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), a2);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_8;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_17;
    }
    goto LABEL_14;
  }
LABEL_8:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v7 = *(void *)(a1 + 64);
  *uint64_t v4 = 26;
  unsigned int v8 = *(_DWORD *)(v7 + 44);
  v4[1] = v8;
  if (v8 > 0x7F) {
    unsigned int v9 = sub_188A9CC(v8, v4 + 1);
  }
  else {
    unsigned int v9 = v4 + 2;
  }
  uint64_t v4 = sub_16ECA14(v7, v9, a3);
  if ((v6 & 8) != 0)
  {
LABEL_14:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v10 = *(unsigned char *)(a1 + 72);
    *uint64_t v4 = 32;
    v4[1] = v10;
    v4 += 2;
  }
LABEL_17:
  if (*(_WORD *)(a1 + 26)) {
    uint64_t v4 = sub_1886844(a1 + 16, 1000, 2000, v4, a3);
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return v4;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    uint64_t v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    uint64_t v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(v4, v14, (int)v15);
    v4 += v16;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, v4);
}

uint64_t sub_1773370(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = v2;
  int v4 = *(_DWORD *)(a1 + 40);
  if ((v4 & 0xF) == 0) {
    goto LABEL_8;
  }
  if (v4)
  {
    unint64_t v8 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v9 = *(unsigned __int8 *)(v8 + 23);
    uint64_t v10 = *(void *)(v8 + 8);
    if ((v9 & 0x80u) == 0) {
      uint64_t v10 = v9;
    }
    uint64_t v3 = v2 + v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v4 & 2) == 0)
    {
LABEL_4:
      if ((v4 & 4) == 0) {
        goto LABEL_6;
      }
      goto LABEL_5;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_4;
  }
  unint64_t v11 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v12 = *(unsigned __int8 *)(v11 + 23);
  uint64_t v13 = *(void *)(v11 + 8);
  if ((v12 & 0x80u) == 0) {
    uint64_t v13 = v12;
  }
  v3 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v4 & 4) == 0) {
    goto LABEL_6;
  }
LABEL_5:
  uint64_t v5 = sub_16ECBD0(*(void *)(a1 + 64));
  v3 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_6:
  if ((v4 & 8) != 0) {
    v3 += 2;
  }
LABEL_8:
  uint64_t v6 = *(void *)(a1 + 8);
  if (v6)
  {
    unint64_t v14 = v6 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v14 + 31) < 0) {
      uint64_t v15 = *(void *)(v14 + 16);
    }
    else {
      uint64_t v15 = *(unsigned __int8 *)(v14 + 31);
    }
    v3 += v15;
  }
  *(_DWORD *)(a1 + 44) = v3;
  return v3;
}

void sub_17734B4(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 40);
  if ((v4 & 0xF) != 0)
  {
    if (v4)
    {
      uint64_t v6 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 40) |= 1u;
      uint64_t v7 = (std::string **)(a1 + 48);
      uint64_t v8 = *(void *)(a1 + 8);
      uint64_t v9 = (uint64_t *)(v8 & 0xFFFFFFFFFFFFFFFCLL);
      if (v8) {
        uint64_t v9 = (uint64_t *)*v9;
      }
      sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_18;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    uint64_t v10 = (long long *)(*(void *)(a2 + 56) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 40) |= 2u;
    uint64_t v11 = *(void *)(a1 + 8);
    uint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
    if (v11) {
      uint64_t v12 = (uint64_t *)*v12;
    }
    sub_1881DF4((std::string **)(a1 + 56), v10, v12);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0)
      {
LABEL_7:
        *(_DWORD *)(a1 + 40) |= v4;
        goto LABEL_8;
      }
LABEL_6:
      *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
      goto LABEL_7;
    }
LABEL_18:
    *(_DWORD *)(a1 + 40) |= 4u;
    uint64_t v13 = *(void *)(a1 + 64);
    if (!v13)
    {
      uint64_t v14 = *(void *)(a1 + 8);
      uint64_t v15 = (void *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
      if (v14) {
        uint64_t v15 = (void *)*v15;
      }
      uint64_t v13 = sub_17887C8((uint64_t)v15);
      *(void *)(a1 + 64) = v13;
    }
    if (*(void *)(a2 + 64)) {
      uint64_t v16 = *(uint64_t (****)())(a2 + 64);
    }
    else {
      uint64_t v16 = &off_2545AB0;
    }
    sub_16ECCA8(v13, (uint64_t)v16);
    if ((v4 & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_8:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_1773608(uint64_t a1)
{
  uint64_t result = sub_18856CC(a1 + 16);
  if (result)
  {
    if ((*(unsigned char *)(a1 + 40) & 4) == 0) {
      return 1;
    }
    uint64_t result = sub_16ECD84(*(void *)(a1 + 64));
    if (result) {
      return 1;
    }
  }
  return result;
}

void *sub_177364C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.ActionData.ActionLink.WebLinkParams");
}

uint64_t sub_177365C(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  *(void *)(a1 + 8) = v4;
  *(void *)a1 = off_24D9098;
  sub_1882BC4(a1 + 16, a2);
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  return a1;
}

void sub_17736CC(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_17736FC(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_1773788((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

uint64_t sub_1773788(uint64_t result)
{
  if ((uint64_t (***)())result != &off_2548D70)
  {
    uint64_t v1 = (void *)result;
    uint64_t v2 = *(void *)(result + 48);
    if (v2)
    {
      sub_1770F80(v2);
      operator delete();
    }
    uint64_t v3 = v1[7];
    if (v3)
    {
      sub_1771958(v3);
      operator delete();
    }
    uint64_t v4 = v1[8];
    if (v4)
    {
      sub_17723B0(v4);
      operator delete();
    }
    uint64_t result = v1[9];
    if (result)
    {
      sub_1772CB4(result);
      operator delete();
    }
  }
  return result;
}

void sub_1773854(void *a1)
{
  sub_17736FC(a1);

  operator delete();
}

uint64_t sub_177388C(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  int v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 0xF) == 0) {
    goto LABEL_7;
  }
  if ((v3 & 1) == 0)
  {
    if ((v3 & 2) == 0) {
      goto LABEL_4;
    }
LABEL_14:
    uint64_t result = (uint64_t)sub_1771A8C(*(void *)(a1 + 56));
    if ((v3 & 4) == 0)
    {
LABEL_5:
      if ((v3 & 8) == 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
    goto LABEL_15;
  }
  uint64_t result = (uint64_t)sub_17710A0(*(void *)(a1 + 48));
  if ((v3 & 2) != 0) {
    goto LABEL_14;
  }
LABEL_4:
  if ((v3 & 4) == 0) {
    goto LABEL_5;
  }
LABEL_15:
  uint64_t result = sub_17724BC(*(void *)(a1 + 64));
  if ((v3 & 8) != 0) {
LABEL_6:
  }
    uint64_t result = sub_1772DDC(*(void *)(a1 + 72));
LABEL_7:
  if ((v3 & 0x30) != 0) {
    *(void *)(a1 + 80) = 0;
  }
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t v4 = a1 + 8;
  *(_DWORD *)(v4 + 32) = 0;
  if (v5)
  {
    return sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

char *sub_1773938(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v34 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v34, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = v34 + 1;
    unsigned int v9 = *v34;
    if (*v34 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v34, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v34 + 2;
      }
    }
    int v34 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_45;
        }
        uint64_t v12 = v8 + 1;
        unint64_t v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        int v15 = v13 + (v14 << 7);
        unint64_t v13 = (v15 - 128);
        if (v14 < 0)
        {
          int v34 = (char *)sub_188C138((uint64_t)v8, (v15 - 128));
          if (!v34) {
            goto LABEL_68;
          }
          unint64_t v13 = v30;
        }
        else
        {
          uint64_t v12 = v8 + 2;
LABEL_13:
          int v34 = v12;
        }
        if (v13 > 4)
        {
          if (*v7) {
            int v33 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            int v33 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(1, v13, v33);
        }
        else
        {
          *(_DWORD *)(a1 + 40) |= 0x10u;
          *(_DWORD *)(a1 + 80) = v13;
        }
        goto LABEL_55;
      case 2u:
        if (v9 != 18) {
          goto LABEL_45;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        uint64_t v16 = *(void **)(a1 + 48);
        if (!v16)
        {
          uint64_t v17 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v17 = (void *)*v17;
          }
          uint64_t v16 = sub_178DBDC((uint64_t)v17);
          *(void *)(a1 + 48) = v16;
          uint64_t v8 = v34;
        }
        uint64_t v18 = (char *)sub_1773D28(a3, (uint64_t)v16, (unsigned __int8 *)v8);
        goto LABEL_54;
      case 3u:
        if (v9 != 26) {
          goto LABEL_45;
        }
        *(_DWORD *)(a1 + 40) |= 2u;
        unint64_t v19 = *(void **)(a1 + 56);
        if (!v19)
        {
          uint64_t v20 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v20 = (void *)*v20;
          }
          unint64_t v19 = sub_178DC38((uint64_t)v20);
          *(void *)(a1 + 56) = v19;
          uint64_t v8 = v34;
        }
        uint64_t v18 = (char *)sub_1773DB8(a3, (uint64_t)v19, (unsigned __int8 *)v8);
        goto LABEL_54;
      case 4u:
        if (v9 != 34) {
          goto LABEL_45;
        }
        *(_DWORD *)(a1 + 40) |= 4u;
        uint64_t v21 = *(void **)(a1 + 64);
        if (!v21)
        {
          int v22 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            int v22 = (void *)*v22;
          }
          uint64_t v21 = sub_178DC94((uint64_t)v22);
          *(void *)(a1 + 64) = v21;
          uint64_t v8 = v34;
        }
        uint64_t v18 = (char *)sub_1773E48(a3, (uint64_t)v21, (unsigned __int8 *)v8);
        goto LABEL_54;
      case 5u:
        if (v9 != 42) {
          goto LABEL_45;
        }
        *(_DWORD *)(a1 + 40) |= 8u;
        uint64_t v23 = *(void *)(a1 + 72);
        if (!v23)
        {
          unint64_t v24 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            unint64_t v24 = (void *)*v24;
          }
          uint64_t v23 = sub_178DD3C((uint64_t)v24);
          *(void *)(a1 + 72) = v23;
          uint64_t v8 = v34;
        }
        uint64_t v18 = (char *)sub_1773ED8(a3, v23, (unsigned __int8 *)v8);
        goto LABEL_54;
      case 6u:
        if (v9 != 48) {
          goto LABEL_45;
        }
        v5 |= 0x20u;
        uint64_t v25 = v8 + 1;
        int v26 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_44;
        }
        int v27 = *v25;
        int v26 = v26 + (v27 << 7) - 128;
        if (v27 < 0)
        {
          long long v31 = (char *)sub_188C0D0((uint64_t)v8, v26);
          int v34 = v31;
          *(_DWORD *)(a1 + 84) = v32;
          if (!v31) {
            goto LABEL_68;
          }
        }
        else
        {
          uint64_t v25 = v8 + 2;
LABEL_44:
          int v34 = v25;
          *(_DWORD *)(a1 + 84) = v26;
        }
        goto LABEL_55;
      default:
LABEL_45:
        if (v9) {
          BOOL v28 = (v9 & 7) == 4;
        }
        else {
          BOOL v28 = 1;
        }
        if (!v28)
        {
          if ((v9 - 8000) >> 6 > 0x7C)
          {
            if (*v7)
            {
              uint64_t v29 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              uint64_t v29 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              uint64_t v8 = v34;
            }
            uint64_t v18 = (char *)sub_1885AC0(v9, v29, v8, a3);
          }
          else
          {
            uint64_t v18 = (char *)sub_18859DC((uint64_t **)(a1 + 16), v9, v8, (uint64_t)&off_2548D70, (uint64_t *)(a1 + 8), a3);
          }
LABEL_54:
          int v34 = v18;
          if (!v18) {
            goto LABEL_68;
          }
LABEL_55:
          if (sub_11947B8((uint64_t)a3, &v34, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_68:
        }
          int v34 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 40) |= v5;
        return v34;
    }
  }
}

uint64_t sub_1773D28(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17711CC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_1773DB8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1771BEC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_1773E48(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1772578(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_1773ED8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1772EB8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1773F68(uint64_t a1, char *a2, unint64_t *a3)
{
  uint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unint64_t v7 = *(int *)(a1 + 80);
    *uint64_t v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 48);
    *uint64_t v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 44);
    v4[1] = v11;
    if (v11 > 0x7F) {
      uint64_t v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      uint64_t v12 = v4 + 2;
    }
    uint64_t v4 = sub_177145C(v10, v12, a3);
    if ((v6 & 2) == 0)
    {
LABEL_10:
      if ((v6 & 4) == 0) {
        goto LABEL_11;
      }
      goto LABEL_26;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_10;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v13 = *(void *)(a1 + 56);
  *uint64_t v4 = 26;
  unsigned int v14 = *(_DWORD *)(v13 + 44);
  v4[1] = v14;
  if (v14 > 0x7F) {
    int v15 = sub_188A9CC(v14, v4 + 1);
  }
  else {
    int v15 = v4 + 2;
  }
  uint64_t v4 = sub_1771EB8(v13, v15, a3);
  if ((v6 & 4) == 0)
  {
LABEL_11:
    if ((v6 & 8) == 0) {
      goto LABEL_12;
    }
    goto LABEL_32;
  }
LABEL_26:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v16 = *(void *)(a1 + 64);
  *uint64_t v4 = 34;
  unsigned int v17 = *(_DWORD *)(v16 + 20);
  v4[1] = v17;
  if (v17 > 0x7F) {
    uint64_t v18 = sub_188A9CC(v17, v4 + 1);
  }
  else {
    uint64_t v18 = v4 + 2;
  }
  uint64_t v4 = sub_17728C4(v16, v18, a3);
  if ((v6 & 8) == 0)
  {
LABEL_12:
    if ((v6 & 0x20) == 0) {
      goto LABEL_44;
    }
    goto LABEL_38;
  }
LABEL_32:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v19 = *(void *)(a1 + 72);
  *uint64_t v4 = 42;
  unsigned int v20 = *(_DWORD *)(v19 + 44);
  v4[1] = v20;
  if (v20 > 0x7F) {
    uint64_t v21 = sub_188A9CC(v20, v4 + 1);
  }
  else {
    uint64_t v21 = v4 + 2;
  }
  uint64_t v4 = sub_17731A8(v19, v21, a3);
  if ((v6 & 0x20) != 0)
  {
LABEL_38:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v22 = *(_DWORD *)(a1 + 84);
    *uint64_t v4 = 48;
    v4[1] = v22;
    if (v22 > 0x7F)
    {
      v4[1] = v22 | 0x80;
      unsigned int v23 = v22 >> 7;
      v4[2] = v22 >> 7;
      v4 += 3;
      if (v22 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v24 = v23 >> 14;
          v23 >>= 7;
          *v4++ = v23;
        }
        while (v24);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_44:
  if (*(_WORD *)(a1 + 26)) {
    uint64_t v4 = sub_1886844(a1 + 16, 1000, 2000, v4, a3);
  }
  uint64_t v25 = *(void *)(a1 + 8);
  if ((v25 & 1) == 0) {
    return v4;
  }
  unint64_t v27 = v25 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v27 + 31) < 0)
  {
    BOOL v28 = *(void **)(v27 + 8);
    uint64_t v29 = *(void *)(v27 + 16);
  }
  else
  {
    BOOL v28 = (void *)(v27 + 8);
    LODWORD(v29) = *(unsigned __int8 *)(v27 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v29)
  {
    uint64_t v30 = (int)v29;
    memcpy(v4, v28, (int)v29);
    v4 += v30;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v28, v29, v4);
}

uint64_t sub_17742E0(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  int v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 0x3F) == 0) {
    goto LABEL_9;
  }
  if (v3)
  {
    uint64_t v6 = sub_17715BC(*(void *)(a1 + 48));
    v2 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v3 & 2) == 0)
    {
LABEL_4:
      if ((v3 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_13;
    }
  }
  else if ((v3 & 2) == 0)
  {
    goto LABEL_4;
  }
  uint64_t v7 = sub_177203C(*(void *)(a1 + 56));
  v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v3 & 4) == 0)
  {
LABEL_5:
    if ((v3 & 8) == 0) {
      goto LABEL_6;
    }
LABEL_14:
    uint64_t v9 = sub_1773370(*(void *)(a1 + 72));
    v2 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v3 & 0x10) == 0)
    {
LABEL_7:
      if ((v3 & 0x20) == 0) {
        goto LABEL_9;
      }
      goto LABEL_8;
    }
    goto LABEL_15;
  }
LABEL_13:
  uint64_t v8 = sub_1772A84(*(void *)(a1 + 64));
  v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v3 & 8) != 0) {
    goto LABEL_14;
  }
LABEL_6:
  if ((v3 & 0x10) == 0) {
    goto LABEL_7;
  }
LABEL_15:
  int v10 = *(_DWORD *)(a1 + 80);
  if (v10 < 0) {
    uint64_t v11 = 11;
  }
  else {
    uint64_t v11 = ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v2 += v11;
  if ((v3 & 0x20) != 0) {
LABEL_8:
  }
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 84) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_9:
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v12 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v12 + 31) < 0) {
      uint64_t v13 = *(void *)(v12 + 16);
    }
    else {
      uint64_t v13 = *(unsigned __int8 *)(v12 + 31);
    }
    v2 += v13;
  }
  *(_DWORD *)(a1 + 44) = v2;
  return v2;
}

void sub_1774488(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 40);
  if ((v4 & 0x3F) != 0)
  {
    if (v4)
    {
      *(_DWORD *)(a1 + 40) |= 1u;
      uint64_t v6 = *(void **)(a1 + 48);
      if (!v6)
      {
        uint64_t v7 = *(void *)(a1 + 8);
        uint64_t v8 = (void *)(v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (v7) {
          uint64_t v8 = (void *)*v8;
        }
        uint64_t v6 = sub_178DBDC((uint64_t)v8);
        *(void *)(a1 + 48) = v6;
      }
      if (*(void *)(a2 + 48)) {
        uint64_t v9 = *(uint64_t (****)())(a2 + 48);
      }
      else {
        uint64_t v9 = &off_2548C38;
      }
      sub_1771740((uint64_t)v6, (uint64_t)v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_30;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    *(_DWORD *)(a1 + 40) |= 2u;
    int v10 = *(void **)(a1 + 56);
    if (!v10)
    {
      uint64_t v11 = *(void *)(a1 + 8);
      unint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        unint64_t v12 = (void *)*v12;
      }
      int v10 = sub_178DC38((uint64_t)v12);
      *(void *)(a1 + 56) = v10;
    }
    if (*(void *)(a2 + 56)) {
      uint64_t v13 = *(uint64_t (****)())(a2 + 56);
    }
    else {
      uint64_t v13 = &off_2548C88;
    }
    sub_1772208((uint64_t)v10, (uint64_t)v13);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_38;
    }
LABEL_30:
    *(_DWORD *)(a1 + 40) |= 4u;
    unsigned int v14 = *(std::string **)(a1 + 64);
    if (!v14)
    {
      uint64_t v15 = *(void *)(a1 + 8);
      uint64_t v16 = (void *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
      if (v15) {
        uint64_t v16 = (void *)*v16;
      }
      unsigned int v14 = (std::string *)sub_178DC94((uint64_t)v16);
      *(void *)(a1 + 64) = v14;
    }
    if (*(void *)(a2 + 64)) {
      unsigned int v17 = *(uint64_t (****)())(a2 + 64);
    }
    else {
      unsigned int v17 = &off_2548CE0;
    }
    sub_1214D9C(v14, (uint64_t)v17);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0) {
        goto LABEL_7;
      }
      goto LABEL_46;
    }
LABEL_38:
    *(_DWORD *)(a1 + 40) |= 8u;
    uint64_t v18 = *(void *)(a1 + 72);
    if (!v18)
    {
      uint64_t v19 = *(void *)(a1 + 8);
      unsigned int v20 = (void *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
      if (v19) {
        unsigned int v20 = (void *)*v20;
      }
      uint64_t v18 = sub_178DD3C((uint64_t)v20);
      *(void *)(a1 + 72) = v18;
    }
    if (*(void *)(a2 + 72)) {
      uint64_t v21 = *(uint64_t (****)())(a2 + 72);
    }
    else {
      uint64_t v21 = &off_2548D20;
    }
    sub_17734B4(v18, (uint64_t)v21);
    if ((v4 & 0x10) == 0)
    {
LABEL_7:
      if ((v4 & 0x20) == 0)
      {
LABEL_9:
        *(_DWORD *)(a1 + 40) |= v4;
        goto LABEL_10;
      }
LABEL_8:
      *(_DWORD *)(a1 + 84) = *(_DWORD *)(a2 + 84);
      goto LABEL_9;
    }
LABEL_46:
    *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
    if ((v4 & 0x20) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
LABEL_10:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_177466C(uint64_t a1)
{
  uint64_t result = sub_18856CC(a1 + 16);
  if (result)
  {
    int v3 = *(_DWORD *)(a1 + 40);
    if (v3)
    {
      uint64_t result = sub_18856CC(*(void *)(a1 + 48) + 16);
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 2) != 0)
    {
      uint64_t result = sub_18856CC(*(void *)(a1 + 56) + 16);
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 8) == 0) {
      return 1;
    }
    uint64_t result = sub_1773608(*(void *)(a1 + 72));
    if (result) {
      return 1;
    }
  }
  return result;
}

void *sub_17746E0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.ActionData.ActionLink.Link");
}

void *sub_17746F0(void *a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  a1[1] = v5;
  *a1 = off_24D9118;
  sub_1882BC4((uint64_t)(a1 + 2), a2);
  a1[5] = 0;
  a1[6] = a2;
  a1[7] = 0;
  a1[8] = 0;
  a1[9] = &qword_2550250;
  return a1;
}

void sub_1774768(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_1774798(uint64_t a1)
{
  int v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 72);
  if (*(uint64_t **)(a1 + 72) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  sub_1870C3C((void *)(a1 + 48));
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_177484C(uint64_t a1)
{
  sub_1774798(a1);

  operator delete();
}

uint64_t sub_1774884(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  uint64_t v3 = *(unsigned int *)(a1 + 56);
  if ((int)v3 >= 1)
  {
    int v4 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = sub_177388C(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 56) = 0;
  }
  if (*(unsigned char *)(a1 + 40))
  {
    unint64_t v6 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v6 + 23) < 0)
    {
      **(unsigned char **)unint64_t v6 = 0;
      *(void *)(v6 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v6 = 0;
      *(unsigned char *)(v6 + 23) = 0;
    }
  }
  char v8 = *(unsigned char *)(a1 + 8);
  uint64_t v7 = a1 + 8;
  *(_DWORD *)(v7 + 32) = 0;
  if (v8)
  {
    return sub_188B4AC((uint64_t *)v7);
  }
  return result;
}

uint64_t sub_177493C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unsigned int v24 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v24, a3[11].i32[1])) {
    return *(void *)v24;
  }
  unint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = (char *)(*(void *)v24 + 1);
    unsigned int v8 = **(unsigned char **)v24;
    if ((char)**(unsigned char **)v24 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180(*(uint64_t *)v24, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (char *)(*(void *)v24 + 2);
      }
    }
    *(void *)unsigned int v24 = v7;
    if (v8 >> 3 == 2) {
      break;
    }
    if (v8 >> 3 != 1 || v8 != 10) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 40) |= 1u;
    uint64_t v20 = *(void *)(a1 + 8);
    uint64_t v21 = (uint64_t *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
    if (v20) {
      uint64_t v21 = (uint64_t *)*v21;
    }
    unsigned int v22 = (std::string *)sub_1880F84((void *)(a1 + 72), v21);
    uint64_t v13 = (void *)sub_188C244(v22, *(char **)v24, (uint64_t)a3);
LABEL_35:
    *(void *)unsigned int v24 = v13;
    if (!v13) {
      goto LABEL_41;
    }
LABEL_36:
    if (sub_11947B8((uint64_t)a3, (char **)v24, a3[11].i32[1])) {
      return *(void *)v24;
    }
  }
  if (v8 == 18)
  {
    unsigned int v14 = v7 - 1;
    while (1)
    {
      uint64_t v15 = (unsigned __int8 *)(v14 + 1);
      *(void *)unsigned int v24 = v14 + 1;
      uint64_t v16 = *(_DWORD **)(a1 + 64);
      if (v16 && (uint64_t v17 = *(int *)(a1 + 56), (int)v17 < *v16))
      {
        *(_DWORD *)(a1 + 56) = v17 + 1;
        uint64_t v18 = *(void *)&v16[2 * v17 + 2];
      }
      else
      {
        uint64_t v19 = sub_178DD98(*(void *)(a1 + 48));
        uint64_t v18 = sub_188CDC8(a1 + 48, v19);
        uint64_t v15 = *(unsigned __int8 **)v24;
      }
      unsigned int v14 = sub_1774B88(a3, v18, v15);
      *(void *)unsigned int v24 = v14;
      if (!v14) {
        goto LABEL_41;
      }
      if (*(void *)a3 <= (unint64_t)v14 || *v14 != 18) {
        goto LABEL_36;
      }
    }
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if ((v8 - 8000) >> 6 > 0x7C)
    {
      if (*v6)
      {
        unsigned int v23 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        unsigned int v23 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        uint64_t v7 = *(char **)v24;
      }
      uint64_t v13 = sub_1885AC0(v8, v23, v7, a3);
    }
    else
    {
      uint64_t v13 = sub_18859DC((uint64_t **)(a1 + 16), v8, v7, (uint64_t)&off_2548DC8, (uint64_t *)(a1 + 8), a3);
    }
    goto LABEL_35;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v24;
  }
LABEL_41:
  *(void *)unsigned int v24 = 0;
  return *(void *)v24;
}

char *sub_1774B88(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1773938(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1774C18(uint64_t a1, char *a2, unint64_t *a3)
{
  int v4 = a2;
  if (*(unsigned char *)(a1 + 40)) {
    int v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL), a2);
  }
  int v6 = *(_DWORD *)(a1 + 56);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 64) + 8 * i + 8);
      *int v4 = 18;
      unsigned int v9 = *(_DWORD *)(v8 + 44);
      v4[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, v4 + 1);
      }
      else {
        unsigned int v10 = v4 + 2;
      }
      int v4 = sub_1773F68(v8, v10, a3);
    }
  }
  if (*(_WORD *)(a1 + 26)) {
    int v4 = sub_1886844(a1 + 16, 1000, 2000, v4, a3);
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return v4;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    unsigned int v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    unsigned int v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(v4, v14, (int)v15);
    v4 += v16;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, v4);
}

uint64_t sub_1774DA4(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(int *)(a1 + 56);
  uint64_t v4 = v2 + v3;
  uint64_t v5 = *(void *)(a1 + 64);
  if (v5) {
    int v6 = (uint64_t *)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = sub_17742E0(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  if (*(unsigned char *)(a1 + 40))
  {
    unint64_t v10 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v11 = *(unsigned __int8 *)(v10 + 23);
    uint64_t v12 = *(void *)(v10 + 8);
    if ((v11 & 0x80u) == 0) {
      uint64_t v12 = v11;
    }
    v4 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if (v13)
  {
    unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v15 + 31) < 0) {
      uint64_t v16 = *(void *)(v15 + 16);
    }
    else {
      uint64_t v16 = *(unsigned __int8 *)(v15 + 31);
    }
    v4 += v16;
  }
  *(_DWORD *)(a1 + 44) = v4;
  return v4;
}

void sub_1774EA0(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 56);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    int v6 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_1872B04((uint64_t *)(a1 + 48), v6, v5, v4, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v7 = *(_DWORD *)(a1 + 56) + v4;
    *(_DWORD *)(a1 + 56) = v7;
    uint64_t v8 = *(int **)(a1 + 64);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  if (*(unsigned char *)(a2 + 40))
  {
    uint64_t v9 = (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 40) |= 1u;
    uint64_t v10 = *(void *)(a1 + 8);
    uint64_t v11 = (uint64_t *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
    if (v10) {
      uint64_t v11 = (uint64_t *)*v11;
    }
    sub_1881DF4((std::string **)(a1 + 72), v9, v11);
  }
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v12 = *(void *)(a2 + 8);
  if (v12)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v12 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

BOOL sub_1774FB4(uint64_t a1)
{
  if (!sub_18856CC(a1 + 16)) {
    return 0;
  }
  uint64_t v2 = *(unsigned int *)(a1 + 56);
  do
  {
    BOOL v3 = (int)v2 < 1;
    if ((int)v2 < 1) {
      break;
    }
    uint64_t v4 = v2 - 1;
    char v5 = sub_177466C(*(void *)(*(void *)(a1 + 64) + 8 * v2));
    uint64_t v2 = v4;
  }
  while ((v5 & 1) != 0);
  return v3;
}

void *sub_177501C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.ActionData.ActionLink");
}

void *sub_177502C(void *a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  a1[1] = v5;
  *a1 = off_24D9198;
  sub_1882BC4((uint64_t)(a1 + 2), a2);
  a1[5] = 0;
  a1[6] = a2;
  a1[7] = 0;
  a1[8] = 0;
  a1[9] = a2;
  a1[10] = 0;
  a1[11] = 0;
  a1[12] = &qword_2550250;
  a1[13] = &qword_2550250;
  a1[14] = &qword_2550250;
  a1[15] = &qword_2550250;
  return a1;
}

void sub_17750B0(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_17750E0(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = a1 + 16;
  *(void *)a1 = off_24D9198;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  int v6 = (std::string *)(a1 + 48);
  *(_DWORD *)(a1 + 68) = 0;
  *(void *)(a1 + 52) = 0;
  *(void *)(a1 + 60) = 0;
  *(void *)(a1 + 44) = 0;
  int v7 = *(_DWORD *)(a2 + 56);
  if (v7)
  {
    uint64_t v8 = *(void *)(a2 + 64);
    uint64_t v9 = (std::string **)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_12C1E38(v6, v9, (uint64_t *)(v8 + 8), v7, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v10 = *(_DWORD *)(a1 + 56) + v7;
    *(_DWORD *)(a1 + 56) = v10;
    uint64_t v11 = *(int **)(a1 + 64);
    if (*v11 < v10) {
      *uint64_t v11 = v10;
    }
  }
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0;
  int v12 = *(_DWORD *)(a2 + 80);
  if (v12)
  {
    uint64_t v13 = *(void *)(a2 + 88);
    unsigned int v14 = (uint64_t *)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_1872B90((uint64_t *)(a1 + 72), v14, (uint64_t *)(v13 + 8), v12, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v15 = *(_DWORD *)(a1 + 80) + v12;
    *(_DWORD *)(a1 + 80) = v15;
    uint64_t v16 = *(int **)(a1 + 88);
    if (*v16 < v15) {
      int *v16 = v15;
    }
  }
  uint64_t v17 = *(void *)(a2 + 8);
  if (v17) {
    sub_188B4F8(v4, (v17 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v5, a2 + 16);
  *(void *)(a1 + 96) = &qword_2550250;
  int v18 = *(_DWORD *)(a2 + 40);
  if (v18)
  {
    uint64_t v19 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v19 = (uint64_t *)*v19;
    }
    sub_1881DF4((std::string **)(a1 + 96), (long long *)(*(void *)(a2 + 96) & 0xFFFFFFFFFFFFFFFELL), v19);
    int v18 = *(_DWORD *)(a2 + 40);
  }
  *(void *)(a1 + 104) = &qword_2550250;
  if ((v18 & 2) != 0)
  {
    uint64_t v20 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v20 = (uint64_t *)*v20;
    }
    sub_1881DF4((std::string **)(a1 + 104), (long long *)(*(void *)(a2 + 104) & 0xFFFFFFFFFFFFFFFELL), v20);
    int v18 = *(_DWORD *)(a2 + 40);
  }
  *(void *)(a1 + 112) = &qword_2550250;
  if ((v18 & 4) != 0)
  {
    uint64_t v21 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v21 = (uint64_t *)*v21;
    }
    sub_1881DF4((std::string **)(a1 + 112), (long long *)(*(void *)(a2 + 112) & 0xFFFFFFFFFFFFFFFELL), v21);
    int v18 = *(_DWORD *)(a2 + 40);
  }
  *(void *)(a1 + 120) = &qword_2550250;
  if ((v18 & 8) != 0)
  {
    unsigned int v22 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      unsigned int v22 = (uint64_t *)*v22;
    }
    sub_1881DF4((std::string **)(a1 + 120), (long long *)(*(void *)(a2 + 120) & 0xFFFFFFFFFFFFFFFELL), v22);
  }
  return a1;
}

void sub_1775320(_Unwind_Exception *a1)
{
  sub_12C1DB8(v4);
  sub_1882CC0(v3);
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_1775384(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_13;
    }
  }
  else if (v4)
  {
    goto LABEL_13;
  }
  uint64_t v5 = (void ***)(a1 + 96);
  if (*(uint64_t **)(a1 + 96) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 104) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 104));
  }
  if (*(uint64_t **)(a1 + 112) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 112));
  }
  if (*(uint64_t **)(a1 + 120) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 120));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_13:
  sub_1870CBC((void *)(a1 + 72));
  sub_12C1DB8((void *)(a1 + 48));
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1775484(uint64_t a1)
{
  sub_1775384(a1);

  operator delete();
}

uint64_t sub_17754BC(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v33 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v33, a3[11].i32[1])) {
    return *(void *)v33;
  }
  int v6 = (void *)(a1 + 8);
  while (2)
  {
    int v7 = (char *)(*(void *)v33 + 1);
    unsigned int v8 = **(unsigned char **)v33;
    if ((char)**(unsigned char **)v33 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        int v7 = (char *)sub_188C180(*(uint64_t *)v33, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        int v7 = (char *)(*(void *)v33 + 2);
      }
    }
    *(void *)int v33 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 10) {
          goto LABEL_49;
        }
        uint64_t v11 = v7 - 1;
        while (1)
        {
          int v12 = (unsigned __int8 *)(v11 + 1);
          *(void *)int v33 = v11 + 1;
          uint64_t v13 = *(_DWORD **)(a1 + 64);
          if (v13 && (uint64_t v14 = *(int *)(a1 + 56), (int)v14 < *v13))
          {
            *(_DWORD *)(a1 + 56) = v14 + 1;
            uint64_t v15 = *(void *)&v13[2 * v14 + 2];
          }
          else
          {
            uint64_t v16 = sub_15C1B30(*(void *)(a1 + 48));
            uint64_t v15 = sub_188CDC8(a1 + 48, (uint64_t)v16);
            int v12 = *(unsigned __int8 **)v33;
          }
          uint64_t v11 = (char *)sub_125CF74(a3, v15, v12);
          *(void *)int v33 = v11;
          if (!v11) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v11 || *v11 != 10) {
            goto LABEL_47;
          }
        }
      case 2u:
        if (v8 != 18) {
          goto LABEL_49;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        uint64_t v17 = *(void *)(a1 + 8);
        int v18 = (uint64_t *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
        if (v17) {
          int v18 = (uint64_t *)*v18;
        }
        uint64_t v19 = (void *)(a1 + 96);
        goto LABEL_45;
      case 3u:
        if (v8 != 26) {
          goto LABEL_49;
        }
        uint64_t v20 = v7 - 1;
        while (1)
        {
          uint64_t v21 = (unsigned __int8 *)(v20 + 1);
          *(void *)int v33 = v20 + 1;
          unsigned int v22 = *(_DWORD **)(a1 + 88);
          if (v22 && (uint64_t v23 = *(int *)(a1 + 80), (int)v23 < *v22))
          {
            *(_DWORD *)(a1 + 80) = v23 + 1;
            uint64_t v24 = *(void *)&v22[2 * v23 + 2];
          }
          else
          {
            uint64_t v25 = sub_178DDF4(*(void *)(a1 + 72));
            uint64_t v24 = sub_188CDC8(a1 + 72, (uint64_t)v25);
            uint64_t v21 = *(unsigned __int8 **)v33;
          }
          uint64_t v20 = (char *)sub_1775878(a3, v24, v21);
          *(void *)int v33 = v20;
          if (!v20) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v20 || *v20 != 26) {
            goto LABEL_47;
          }
        }
      case 4u:
        if (v8 != 34) {
          goto LABEL_49;
        }
        *(_DWORD *)(a1 + 40) |= 2u;
        uint64_t v26 = *(void *)(a1 + 8);
        int v18 = (uint64_t *)(v26 & 0xFFFFFFFFFFFFFFFCLL);
        if (v26) {
          int v18 = (uint64_t *)*v18;
        }
        uint64_t v19 = (void *)(a1 + 104);
        goto LABEL_45;
      case 5u:
        if (v8 != 42) {
          goto LABEL_49;
        }
        *(_DWORD *)(a1 + 40) |= 4u;
        uint64_t v27 = *(void *)(a1 + 8);
        int v18 = (uint64_t *)(v27 & 0xFFFFFFFFFFFFFFFCLL);
        if (v27) {
          int v18 = (uint64_t *)*v18;
        }
        uint64_t v19 = (void *)(a1 + 112);
        goto LABEL_45;
      case 6u:
        if (v8 != 50) {
          goto LABEL_49;
        }
        *(_DWORD *)(a1 + 40) |= 8u;
        uint64_t v28 = *(void *)(a1 + 8);
        int v18 = (uint64_t *)(v28 & 0xFFFFFFFFFFFFFFFCLL);
        if (v28) {
          int v18 = (uint64_t *)*v18;
        }
        uint64_t v19 = (void *)(a1 + 120);
LABEL_45:
        uint64_t v29 = (std::string *)sub_1880F84(v19, v18);
        uint64_t v30 = (void *)sub_188C244(v29, *(char **)v33, (uint64_t)a3);
        goto LABEL_46;
      default:
LABEL_49:
        if (v8) {
          BOOL v31 = (v8 & 7) == 4;
        }
        else {
          BOOL v31 = 1;
        }
        if (!v31)
        {
          if ((v8 - 8000) >> 6 > 0x7C)
          {
            if (*v6)
            {
              int v32 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              int v32 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              int v7 = *(char **)v33;
            }
            uint64_t v30 = sub_1885AC0(v8, v32, v7, a3);
          }
          else
          {
            uint64_t v30 = sub_18859DC((uint64_t **)(a1 + 16), v8, v7, (uint64_t)&off_2548E18, (uint64_t *)(a1 + 8), a3);
          }
LABEL_46:
          *(void *)int v33 = v30;
          if (!v30) {
            return 0;
          }
LABEL_47:
          if (sub_11947B8((uint64_t)a3, (char **)v33, a3[11].i32[1])) {
            return *(void *)v33;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return *(void *)v33;
    }
  }
}

uint64_t sub_1775878(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_177493C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1775908(uint64_t a1, char *a2, unint64_t *a3)
{
  int v6 = *(_DWORD *)(a1 + 56);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 64) + 8 * i + 8);
      *a2 = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      a2[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, a2 + 1);
      }
      else {
        unsigned int v10 = a2 + 2;
      }
      a2 = sub_15B2EA4(v8, v10, a3);
    }
  }
  int v11 = *(_DWORD *)(a1 + 40);
  if (v11) {
    a2 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 96) & 0xFFFFFFFFFFFFFFFELL), a2);
  }
  int v12 = *(_DWORD *)(a1 + 80);
  if (v12)
  {
    for (int j = 0; j != v12; ++j)
    {
      if (*a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v14 = *(void *)(*(void *)(a1 + 88) + 8 * j + 8);
      *a2 = 26;
      unsigned int v15 = *(_DWORD *)(v14 + 44);
      a2[1] = v15;
      if (v15 > 0x7F) {
        uint64_t v16 = sub_188A9CC(v15, a2 + 1);
      }
      else {
        uint64_t v16 = a2 + 2;
      }
      a2 = sub_1774C18(v14, v16, a3);
    }
  }
  if ((v11 & 2) != 0)
  {
    a2 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 104) & 0xFFFFFFFFFFFFFFFELL), a2);
    if ((v11 & 4) == 0)
    {
LABEL_21:
      if ((v11 & 8) == 0) {
        goto LABEL_23;
      }
      goto LABEL_22;
    }
  }
  else if ((v11 & 4) == 0)
  {
    goto LABEL_21;
  }
  a2 = sub_117A0AC(a3, 5, (const void **)(*(void *)(a1 + 112) & 0xFFFFFFFFFFFFFFFELL), a2);
  if ((v11 & 8) != 0) {
LABEL_22:
  }
    a2 = sub_117A0AC(a3, 6, (const void **)(*(void *)(a1 + 120) & 0xFFFFFFFFFFFFFFFELL), a2);
LABEL_23:
  if (*(_WORD *)(a1 + 26)) {
    a2 = sub_1886844(a1 + 16, 1000, 2000, a2, a3);
  }
  uint64_t v17 = *(void *)(a1 + 8);
  if ((v17 & 1) == 0) {
    return a2;
  }
  unint64_t v19 = v17 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v19 + 31) < 0)
  {
    uint64_t v20 = *(void **)(v19 + 8);
    uint64_t v21 = *(void *)(v19 + 16);
  }
  else
  {
    uint64_t v20 = (void *)(v19 + 8);
    LODWORD(v21) = *(unsigned __int8 *)(v19 + 31);
  }
  if ((uint64_t)(*a3 - (void)a2) >= (int)v21)
  {
    uint64_t v22 = (int)v21;
    memcpy(a2, v20, (int)v21);
    a2 += v22;
    return a2;
  }

  return (char *)sub_188A528(a3, (char *)v20, v21, a2);
}

uint64_t sub_1775B84(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(int *)(a1 + 56);
  uint64_t v4 = v2 + v3;
  uint64_t v5 = *(void *)(a1 + 64);
  if (v5) {
    int v6 = (uint64_t *)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = sub_15B2F90(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  uint64_t v10 = *(int *)(a1 + 80);
  uint64_t v11 = v4 + v10;
  uint64_t v12 = *(void *)(a1 + 88);
  if (v12) {
    uint64_t v13 = (uint64_t *)(v12 + 8);
  }
  else {
    uint64_t v13 = 0;
  }
  if (v10)
  {
    uint64_t v14 = 8 * v10;
    do
    {
      uint64_t v15 = *v13++;
      uint64_t v16 = sub_1774DA4(v15);
      v11 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6);
      v14 -= 8;
    }
    while (v14);
  }
  int v17 = *(_DWORD *)(a1 + 40);
  if ((v17 & 0xF) == 0) {
    goto LABEL_21;
  }
  if ((v17 & 1) == 0)
  {
    if ((v17 & 2) == 0) {
      goto LABEL_16;
    }
LABEL_26:
    unint64_t v26 = *(void *)(a1 + 104) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v27 = *(unsigned __int8 *)(v26 + 23);
    uint64_t v28 = *(void *)(v26 + 8);
    if ((v27 & 0x80u) == 0) {
      uint64_t v28 = v27;
    }
    v11 += v28 + ((9 * (__clz(v28 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v17 & 4) == 0)
    {
LABEL_17:
      if ((v17 & 8) == 0) {
        goto LABEL_21;
      }
      goto LABEL_18;
    }
    goto LABEL_29;
  }
  unint64_t v23 = *(void *)(a1 + 96) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v24 = *(unsigned __int8 *)(v23 + 23);
  uint64_t v25 = *(void *)(v23 + 8);
  if ((v24 & 0x80u) == 0) {
    uint64_t v25 = v24;
  }
  v11 += v25 + ((9 * (__clz(v25 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v17 & 2) != 0) {
    goto LABEL_26;
  }
LABEL_16:
  if ((v17 & 4) == 0) {
    goto LABEL_17;
  }
LABEL_29:
  unint64_t v29 = *(void *)(a1 + 112) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v30 = *(unsigned __int8 *)(v29 + 23);
  uint64_t v31 = *(void *)(v29 + 8);
  if ((v30 & 0x80u) == 0) {
    uint64_t v31 = v30;
  }
  v11 += v31 + ((9 * (__clz(v31 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v17 & 8) != 0)
  {
LABEL_18:
    unint64_t v18 = *(void *)(a1 + 120) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v19 = *(unsigned __int8 *)(v18 + 23);
    uint64_t v20 = *(void *)(v18 + 8);
    if ((v19 & 0x80u) == 0) {
      uint64_t v20 = v19;
    }
    v11 += v20 + ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_21:
  uint64_t v21 = *(void *)(a1 + 8);
  if (v21)
  {
    unint64_t v32 = v21 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v32 + 31) < 0) {
      uint64_t v33 = *(void *)(v32 + 16);
    }
    else {
      uint64_t v33 = *(unsigned __int8 *)(v32 + 31);
    }
    v11 += v33;
  }
  *(_DWORD *)(a1 + 44) = v11;
  return v11;
}

void *sub_1775DB4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.ActionData");
}

void *sub_1775DC4(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1889DA8((uint64_t)(a1 + 2));
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1775E40(void *a1)
{
  sub_1775DC4(a1);

  operator delete();
}

char *sub_1775E78(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v24 = a2;
  if (sub_11947B8((uint64_t)a3, &v24, a3[11].i32[1])) {
    return v24;
  }
  uint64_t v5 = (void *)(a1 + 8);
  while (1)
  {
    int v6 = v24 + 1;
    unsigned int v7 = *v24;
    if (*v24 < 0)
    {
      int v8 = *v6;
      unsigned int v9 = v7 + (v8 << 7);
      unsigned int v7 = v9 - 128;
      if (v8 < 0)
      {
        int v6 = (char *)sub_188C180((uint64_t)v24, v9 - 128);
        unsigned int v7 = v10;
      }
      else
      {
        int v6 = v24 + 2;
      }
    }
    uint64_t v24 = v6;
    if ((v7 & 0xFFFFFFF8) != 8) {
      break;
    }
    if (v7 == 8)
    {
      uint64_t v11 = v6 - 1;
      while (1)
      {
        uint64_t v24 = v11 + 1;
        unint64_t v12 = v11[1];
        uint64_t v13 = v11 + 2;
        if (v11[1] < 0)
        {
          int v14 = *v13;
          int v15 = v12 + (v14 << 7);
          unint64_t v12 = (v15 - 128);
          if (v14 < 0)
          {
            uint64_t v24 = (char *)sub_188C138((uint64_t)(v11 + 1), (v15 - 128));
            if (!v24) {
              return 0;
            }
            unint64_t v12 = v18;
            goto LABEL_14;
          }
          uint64_t v13 = v11 + 3;
        }
        uint64_t v24 = v13;
LABEL_14:
        if (v12 > 4)
        {
          if (*v5) {
            uint64_t v19 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v19 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(1, v12, v19);
        }
        else
        {
          uint64_t v16 = *(unsigned int *)(a1 + 16);
          if (v16 == *(_DWORD *)(a1 + 20))
          {
            int v17 = v16 + 1;
            sub_188C80C((unsigned int *)(a1 + 16), v16 + 1);
            *(_DWORD *)(*(void *)(a1 + 24) + 4 * v16) = v12;
          }
          else
          {
            *(_DWORD *)(*(void *)(a1 + 24) + 4 * v16) = v12;
            int v17 = v16 + 1;
          }
          *(_DWORD *)(a1 + 16) = v17;
        }
        uint64_t v11 = v24;
        if (*(void *)a3 <= (unint64_t)v24 || *v24 != 8) {
          goto LABEL_38;
        }
      }
    }
    if (v7 != 10) {
      break;
    }
    *(void *)&long long v25 = a1 + 16;
    *((void *)&v25 + 1) = sub_16B599C;
    uint64_t v26 = a1 + 8;
    int v27 = 1;
    uint64_t v20 = sub_1112E88((uint64_t)a3, v6, &v25);
LABEL_37:
    uint64_t v24 = v20;
    if (!v20) {
      return 0;
    }
LABEL_38:
    if (sub_11947B8((uint64_t)a3, &v24, a3[11].i32[1])) {
      return v24;
    }
  }
  if (v7) {
    BOOL v21 = (v7 & 7) == 4;
  }
  else {
    BOOL v21 = 1;
  }
  if (!v21)
  {
    if (*v5)
    {
      uint64_t v22 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v22 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v6 = v24;
    }
    uint64_t v20 = (char *)sub_1885AC0(v7, v22, v6, a3);
    goto LABEL_37;
  }
  if (!v6) {
    return 0;
  }
  a3[10].i32[0] = v7 - 1;
  return v24;
}

char *sub_17760C8(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v6 = *(unsigned int *)(a1 + 16);
  if ((int)v6 >= 1)
  {
    for (uint64_t i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      unint64_t v8 = *(int *)(*(void *)(a1 + 24) + 4 * i);
      *__dst = 8;
      __dst[1] = v8;
      if (v8 > 0x7F)
      {
        __dst[1] = v8 | 0x80;
        unint64_t v9 = v8 >> 7;
        __dst[2] = v8 >> 7;
        __dst += 3;
        if (v8 >= 0x4000)
        {
          do
          {
            *(__dst - 1) |= 0x80u;
            unint64_t v10 = v9 >> 14;
            v9 >>= 7;
            *__dst++ = v9;
          }
          while (v10);
        }
      }
      else
      {
        __dst += 2;
      }
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return __dst;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    int v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    int v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(__dst, v14, (int)v15);
    __dst += v16;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, __dst);
}

uint64_t sub_1776218(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 16);
  if (v1)
  {
    int v2 = 0;
    uint64_t v3 = 0;
    do
    {
      int v4 = *(_DWORD *)(*(void *)(a1 + 24) + 4 * v2);
      if (v4 < 0) {
        uint64_t v5 = 10;
      }
      else {
        uint64_t v5 = (9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6;
      }
      v3 += v5;
      ++v2;
    }
    while (v1 != v2);
  }
  else
  {
    uint64_t v3 = 0;
  }
  uint64_t v6 = v3 + v1;
  uint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v9 + 31) < 0) {
      uint64_t v10 = *(void *)(v9 + 16);
    }
    else {
      uint64_t v10 = *(unsigned __int8 *)(v9 + 31);
    }
    v6 += v10;
  }
  *(_DWORD *)(a1 + 32) = v6;
  return v6;
}

uint64_t sub_17762A8()
{
  return 1;
}

void *sub_17762B0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.ActionDataFilter");
}

void *sub_17762C0(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1776334(void *a1)
{
  sub_17762C0(a1);

  operator delete();
}

uint64_t sub_177636C(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 16) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_1776384(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v19 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
    goto LABEL_27;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v19 + 1;
    unsigned int v8 = *v19;
    if (*v19 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v19, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v19 + 2;
      }
    }
    uint64_t v19 = v7;
    if (v8 != 8) {
      break;
    }
    int v14 = v7 + 1;
    LODWORD(v13) = *v7;
    if ((v13 & 0x80) == 0) {
      goto LABEL_19;
    }
    int v15 = *v14;
    uint64_t v13 = v13 + (v15 << 7) - 128;
    if ((v15 & 0x80000000) == 0)
    {
      int v14 = v7 + 2;
LABEL_19:
      uint64_t v19 = v14;
      *(_DWORD *)(a1 + 24) = v13;
      int v5 = 1;
      goto LABEL_20;
    }
    uint64_t v16 = (char *)sub_188C138((uint64_t)v7, v13);
    uint64_t v19 = v16;
    *(_DWORD *)(a1 + 24) = v17;
    int v5 = 1;
    if (!v16) {
      goto LABEL_28;
    }
LABEL_20:
    if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
      goto LABEL_27;
    }
  }
  if (v8) {
    BOOL v11 = (v8 & 7) == 4;
  }
  else {
    BOOL v11 = 1;
  }
  if (!v11)
  {
    if (*v6)
    {
      unint64_t v12 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v12 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = v19;
    }
    uint64_t v19 = (char *)sub_1885AC0(v8, v12, v7, a3);
    if (!v19) {
      goto LABEL_28;
    }
    goto LABEL_20;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    goto LABEL_27;
  }
LABEL_28:
  uint64_t v19 = 0;
LABEL_27:
  *(_DWORD *)(a1 + 16) |= v5;
  return v19;
}

unsigned char *sub_1776500(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (unsigned char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v6 = *(int *)(a1 + 24);
    *int v4 = 8;
    v4[1] = v6;
    if (v6 > 0x7F)
    {
      v4[1] = v6 | 0x80;
      unint64_t v7 = v6 >> 7;
      v4[2] = v6 >> 7;
      v4 += 3;
      if (v6 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v8 = v7 >> 14;
          v7 >>= 7;
          *v4++ = v7;
        }
        while (v8);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    unint64_t v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    unint64_t v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    v4 += v14;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v12, v13, v4);
}

uint64_t sub_1776628(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    int v2 = *(_DWORD *)(a1 + 24);
    if (v2 < 0) {
      uint64_t v1 = 11;
    }
    else {
      uint64_t v1 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  else
  {
    uint64_t v1 = 0;
  }
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v5 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    v1 += v6;
  }
  *(_DWORD *)(a1 + 20) = v1;
  return v1;
}

uint64_t sub_177669C()
{
  return 1;
}

void *sub_17766A4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.ButtonItem.QuickLinkParams");
}

uint64_t sub_17766B4(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  unint64_t v5 = (void ***)(a1 + 72);
  if (*(uint64_t **)(a1 + 72) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  sub_1870BBC(a1 + 48);
  sub_12C1DB8((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_177676C(uint64_t a1)
{
  sub_17766B4(a1);

  operator delete();
}

uint64_t sub_17767A4(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_15B2C80(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  uint64_t v5 = *(unsigned int *)(v1 + 56);
  if ((int)v5 >= 1)
  {
    uint64_t v6 = (uint64_t *)(*(void *)(v1 + 64) + 8);
    do
    {
      uint64_t v7 = *v6++;
      uint64_t result = sub_1777958(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(v1 + 56) = 0;
  }
  if (*(unsigned char *)(v1 + 16))
  {
    unint64_t v8 = *(void *)(v1 + 72) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v8 + 23) < 0)
    {
      **(unsigned char **)unint64_t v8 = 0;
      *(void *)(v8 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v8 = 0;
      *(unsigned char *)(v8 + 23) = 0;
    }
  }
  char v10 = *(unsigned char *)(v1 + 8);
  uint64_t v9 = v1 + 8;
  *(_DWORD *)(v9 + 8) = 0;
  if (v10)
  {
    return sub_188B4AC((uint64_t *)v9);
  }
  return result;
}

uint64_t sub_177687C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v30 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v30, a3[11].i32[1])) {
    return *(void *)v30;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = (char *)(*(void *)v30 + 1);
    unsigned int v8 = **(unsigned char **)v30;
    if ((char)**(unsigned char **)v30 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180(*(uint64_t *)v30, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (char *)(*(void *)v30 + 2);
      }
    }
    *(void *)uint64_t v30 = v7;
    unsigned int v11 = v8 >> 3;
    if (v8 >> 3 == 3) {
      break;
    }
    if (v11 != 2)
    {
      if (v11 == 1 && v8 == 10)
      {
        uint64_t v24 = v7 - 1;
        while (1)
        {
          long long v25 = (unsigned __int8 *)(v24 + 1);
          *(void *)uint64_t v30 = v24 + 1;
          uint64_t v26 = *(_DWORD **)(a1 + 40);
          if (v26 && (uint64_t v27 = *(int *)(a1 + 32), (int)v27 < *v26))
          {
            *(_DWORD *)(a1 + 32) = v27 + 1;
            uint64_t v28 = *(void *)&v26[2 * v27 + 2];
          }
          else
          {
            unint64_t v29 = sub_15C1B30(*(void *)(a1 + 24));
            uint64_t v28 = sub_188CDC8(a1 + 24, (uint64_t)v29);
            long long v25 = *(unsigned __int8 **)v30;
          }
          uint64_t v24 = (char *)sub_125CF74(a3, v28, v25);
          *(void *)uint64_t v30 = v24;
          if (!v24) {
            goto LABEL_50;
          }
          if (*(void *)a3 <= (unint64_t)v24 || *v24 != 10) {
            goto LABEL_36;
          }
        }
      }
      goto LABEL_14;
    }
    if (v8 != 18) {
      goto LABEL_14;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v21 = *(void *)(a1 + 8);
    uint64_t v22 = (uint64_t *)(v21 & 0xFFFFFFFFFFFFFFFCLL);
    if (v21) {
      uint64_t v22 = (uint64_t *)*v22;
    }
    unint64_t v23 = (std::string *)sub_1880F84((void *)(a1 + 72), v22);
    int v15 = (void *)sub_188C244(v23, *(char **)v30, (uint64_t)a3);
LABEL_35:
    *(void *)uint64_t v30 = v15;
    if (!v15) {
      goto LABEL_50;
    }
LABEL_36:
    if (sub_11947B8((uint64_t)a3, (char **)v30, a3[11].i32[1])) {
      return *(void *)v30;
    }
  }
  if (v8 == 26)
  {
    uint64_t v16 = v7 - 1;
    while (1)
    {
      *(void *)uint64_t v30 = v16 + 1;
      int v17 = *(_DWORD **)(a1 + 64);
      if (v17 && (uint64_t v18 = *(int *)(a1 + 56), (int)v18 < *v17))
      {
        *(_DWORD *)(a1 + 56) = v18 + 1;
        uint64_t v19 = *(void *)&v17[2 * v18 + 2];
      }
      else
      {
        uint64_t v20 = sub_178E0E8(*(void *)(a1 + 48));
        uint64_t v19 = sub_188CDC8(a1 + 48, v20);
      }
      uint64_t v16 = (char *)sub_17707DC(a3, v19);
      *(void *)uint64_t v30 = v16;
      if (!v16) {
        goto LABEL_50;
      }
      if (*(void *)a3 <= (unint64_t)v16 || *v16 != 26) {
        goto LABEL_36;
      }
    }
  }
LABEL_14:
  if (v8) {
    BOOL v13 = (v8 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v6)
    {
      uint64_t v14 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = *(char **)v30;
    }
    int v15 = sub_1885AC0(v8, v14, v7, a3);
    goto LABEL_35;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v30;
  }
LABEL_50:
  *(void *)uint64_t v30 = 0;
  return *(void *)v30;
}

char *sub_1776B1C(uint64_t a1, char *__dst, void *a3)
{
  int v6 = *(_DWORD *)(a1 + 32);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unsigned int v10 = __dst + 2;
      }
      __dst = sub_15B2EA4(v8, v10, a3);
    }
  }
  if (*(unsigned char *)(a1 + 16)) {
    __dst = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  int v11 = *(_DWORD *)(a1 + 56);
  if (v11)
  {
    for (int j = 0; j != v11; ++j)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v13 = *(void *)(*(void *)(a1 + 64) + 8 * j + 8);
      *__dst = 26;
      unsigned int v14 = *(_DWORD *)(v13 + 20);
      __dst[1] = v14;
      if (v14 > 0x7F) {
        int v15 = sub_188A9CC(v14, __dst + 1);
      }
      else {
        int v15 = __dst + 2;
      }
      __dst = (char *)sub_1777D64(v13, v15, (int)a3);
    }
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return __dst;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    uint64_t v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    uint64_t v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if (*a3 - (void)__dst >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(__dst, v19, (int)v20);
    __dst += v21;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v19, v20, __dst);
}

uint64_t sub_1776D08(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_15B2F90(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(int *)(a1 + 56);
  uint64_t v9 = v2 + v8;
  uint64_t v10 = *(void *)(a1 + 64);
  if (v10) {
    int v11 = (uint64_t *)(v10 + 8);
  }
  else {
    int v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_1777F60(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v15 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v16 = *(unsigned __int8 *)(v15 + 23);
    uint64_t v17 = *(void *)(v15 + 8);
    if ((v16 & 0x80u) == 0) {
      uint64_t v17 = v16;
    }
    v9 += v17 + ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v18 = *(void *)(a1 + 8);
  if (v18)
  {
    unint64_t v20 = v18 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v20 + 31) < 0) {
      uint64_t v21 = *(void *)(v20 + 16);
    }
    else {
      uint64_t v21 = *(unsigned __int8 *)(v20 + 31);
    }
    v9 += v21;
  }
  *(_DWORD *)(a1 + 20) = v9;
  return v9;
}

std::string *sub_1776E50(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = sub_12C1E38(v3 + 1, v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2] - LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    uint64_t v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  uint64_t v9 = *(unsigned int *)(a2 + 56);
  if (v9)
  {
    uint64_t v10 = *(void *)(a2 + 64) + 8;
    uint64_t v11 = sub_188CCE4((uint64_t)&v3[2], *(_DWORD *)(a2 + 56));
    uint64_t result = (std::string *)sub_1872A78(&v3[2], v11, v10, v9, (*(_DWORD *)v3[2].__r_.__value_.__r.__words[2]- LODWORD(v3[2].__r_.__value_.__r.__words[1])));
    int v12 = LODWORD(v3[2].__r_.__value_.__r.__words[1]) + v9;
    LODWORD(v3[2].__r_.__value_.__r.__words[1]) = v12;
    uint64_t v13 = (_DWORD *)v3[2].__r_.__value_.__r.__words[2];
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  if (*(unsigned char *)(a2 + 16))
  {
    uint64_t v14 = (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
    std::string::size_type size = v3->__r_.__value_.__l.__size_;
    uint64_t v16 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
    if (size) {
      uint64_t v16 = (uint64_t *)*v16;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[3], v14, v16);
  }
  uint64_t v17 = *(void *)(a2 + 8);
  if (v17)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v17 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1776FBC()
{
  return 1;
}

void *sub_1776FC4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.ButtonItem.GroupParams.GroupData");
}

uint64_t sub_1776FD4(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_2548F30)
  {
    uint64_t v6 = *(void *)(a1 + 24);
    if (v6)
    {
      sub_17766B4(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_177708C(uint64_t a1)
{
  sub_1776FD4(a1);

  operator delete();
}

uint64_t sub_17770C4(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if (v2) {
    uint64_t result = sub_17767A4(*(void *)(result + 24));
  }
  if ((v2 & 6) != 0) {
    *(void *)(v1 + 32) = 0;
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_177712C(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v30 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v30, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v30 + 1;
    unsigned int v9 = *v30;
    if (*v30 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v30, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v30 + 2;
      }
    }
    uint64_t v30 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 == 3)
    {
      if (v9 != 26) {
        goto LABEL_14;
      }
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v17 = *(void **)(a1 + 24);
      if (!v17)
      {
        uint64_t v18 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          uint64_t v18 = (void *)*v18;
        }
        uint64_t v17 = sub_178DFBC((uint64_t)v18);
        *(void *)(a1 + 24) = v17;
        uint64_t v8 = v30;
      }
      uint64_t v16 = (char *)sub_17773B4(a3, (uint64_t)v17, (unsigned __int8 *)v8);
LABEL_27:
      uint64_t v30 = v16;
      if (!v16) {
        goto LABEL_53;
      }
      goto LABEL_40;
    }
    if (v12 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_14;
    }
    v5 |= 4u;
    unint64_t v20 = v8 + 1;
    LODWORD(v19) = *v8;
    if ((v19 & 0x80) == 0) {
      goto LABEL_33;
    }
    int v21 = *v20;
    uint64_t v19 = v19 + (v21 << 7) - 128;
    if ((v21 & 0x80000000) == 0)
    {
      unint64_t v20 = v8 + 2;
LABEL_33:
      uint64_t v30 = v20;
      *(_DWORD *)(a1 + 36) = v19;
      goto LABEL_40;
    }
    uint64_t v26 = (char *)sub_188C138((uint64_t)v8, v19);
    uint64_t v30 = v26;
    *(_DWORD *)(a1 + 36) = v27;
    if (!v26) {
      goto LABEL_53;
    }
LABEL_40:
    if (sub_11947B8((uint64_t)a3, &v30, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v12 == 1 && v9 == 8)
  {
    uint64_t v22 = v8 + 1;
    unint64_t v23 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_37;
    }
    int v24 = *v22;
    int v25 = v23 + (v24 << 7);
    unint64_t v23 = (v25 - 128);
    if (v24 < 0)
    {
      uint64_t v30 = (char *)sub_188C138((uint64_t)v8, (v25 - 128));
      if (!v30) {
        goto LABEL_53;
      }
      unint64_t v23 = v28;
    }
    else
    {
      uint64_t v22 = v8 + 2;
LABEL_37:
      uint64_t v30 = v22;
    }
    if (v23 > 1)
    {
      if (*v7) {
        unint64_t v29 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        unint64_t v29 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      sub_188C020(1, v23, v29);
    }
    else
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      *(_DWORD *)(a1 + 32) = v23;
    }
    goto LABEL_40;
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (*v7)
    {
      unint64_t v15 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = v30;
    }
    uint64_t v16 = (char *)sub_1885AC0(v9, v15, v8, a3);
    goto LABEL_27;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_53:
  uint64_t v30 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v30;
}

uint64_t sub_17773B4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_177687C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1777444(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*a3 <= __dst) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 32);
    *char v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 36);
    *char v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v13 = *(void *)(a1 + 24);
    *char v4 = 26;
    unsigned int v14 = *(_DWORD *)(v13 + 20);
    v4[1] = v14;
    if (v14 > 0x7F) {
      unint64_t v15 = sub_188A9CC(v14, v4 + 1);
    }
    else {
      unint64_t v15 = v4 + 2;
    }
    char v4 = sub_1776B1C(v13, v15, a3);
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return v4;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    uint64_t v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    uint64_t v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(v4, v19, (int)v20);
    v4 += v21;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v19, v20, v4);
}

uint64_t sub_177764C(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 7) == 0)
  {
    uint64_t result = 0;
    goto LABEL_16;
  }
  if (v2)
  {
    uint64_t v4 = sub_1776D08(*(void *)(a1 + 24));
    uint64_t result = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_11;
    }
  }
  else
  {
    uint64_t result = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_11;
    }
  }
  int v5 = *(_DWORD *)(a1 + 32);
  if (v5 < 0) {
    uint64_t v6 = 11;
  }
  else {
    uint64_t v6 = ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  result += v6;
LABEL_11:
  if ((v2 & 4) != 0)
  {
    int v7 = *(_DWORD *)(a1 + 36);
    if (v7 < 0) {
      uint64_t v8 = 11;
    }
    else {
      uint64_t v8 = ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    result += v8;
  }
LABEL_16:
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    result += v11;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

std::string *sub_1777750(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 7) != 0)
  {
    if (v4)
    {
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      data = (std::string *)result[1].__r_.__value_.__l.__data_;
      if (!data)
      {
        std::string::size_type size = v3->__r_.__value_.__l.__size_;
        uint64_t v8 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
        if (size) {
          uint64_t v8 = (void *)*v8;
        }
        data = (std::string *)sub_178DFBC((uint64_t)v8);
        v3[1].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      }
      if (*(void *)(a2 + 24)) {
        uint64_t v9 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        uint64_t v9 = &off_2548EE0;
      }
      uint64_t result = sub_1776E50(data, (uint64_t)v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0)
        {
LABEL_6:
          LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
          goto LABEL_7;
        }
LABEL_5:
        HIDWORD(v3[1].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 36);
        goto LABEL_6;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 32);
    if ((v4 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_7:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1777838()
{
  return 1;
}

void *sub_1777840@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.ButtonItem.GroupParams");
}

uint64_t sub_1777850(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  if ((uint64_t (***)())a1 != &off_2548F58)
  {
    uint64_t v5 = *(void **)(a1 + 24);
    if (v5)
    {
      sub_17762C0(v5);
      operator delete();
    }
    uint64_t v6 = *(void *)(a1 + 32);
    if (v6)
    {
      sub_1776FD4(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1777920(uint64_t a1)
{
  sub_1777850(a1);

  operator delete();
}

uint64_t sub_1777958(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 3) != 0)
  {
    if (v2)
    {
      uint64_t v3 = *(void *)(result + 24);
      char v4 = *(unsigned char *)(v3 + 8);
      uint64_t result = v3 + 8;
      *(_DWORD *)(result + 16) = 0;
      *(_DWORD *)(result + 8) = 0;
      if (v4) {
        uint64_t result = sub_188B4AC((uint64_t *)result);
      }
    }
    if ((v2 & 2) != 0) {
      uint64_t result = sub_17770C4(*(void *)(v1 + 32));
    }
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = v1 + 8;
  *(_DWORD *)(v5 + 32) = 0;
  *(_DWORD *)(v5 + 8) = 0;
  if (v6)
  {
    return sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

char *sub_17779DC(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v26 = a2;
  if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
    return v26;
  }
  char v6 = (void *)(a1 + 8);
  while (1)
  {
    int v7 = v26 + 1;
    unsigned int v8 = *v26;
    if (*v26 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        int v7 = (char *)sub_188C180((uint64_t)v26, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        int v7 = v26 + 2;
      }
    }
    uint64_t v26 = v7;
    unsigned int v11 = v8 >> 3;
    if (v8 >> 3 == 3)
    {
      if (v8 != 26) {
        goto LABEL_14;
      }
      *(_DWORD *)(a1 + 16) |= 2u;
      uint64_t v16 = *(void **)(a1 + 32);
      if (!v16)
      {
        uint64_t v17 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          uint64_t v17 = (void *)*v17;
        }
        uint64_t v16 = sub_178E06C((uint64_t)v17);
        *(void *)(a1 + 32) = v16;
        int v7 = v26;
      }
      unint64_t v15 = sub_1777CD4(a3, (uint64_t)v16, (unsigned __int8 *)v7);
      goto LABEL_33;
    }
    if (v11 != 2) {
      break;
    }
    if (v8 != 18) {
      goto LABEL_14;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v18 = *(void *)(a1 + 24);
    if (!v18)
    {
      uint64_t v19 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        uint64_t v19 = (void *)*v19;
      }
      uint64_t v18 = sub_178DF40((uint64_t)v19);
      *(void *)(a1 + 24) = v18;
      int v7 = v26;
    }
    unint64_t v15 = sub_1777C44(a3, v18, (unsigned __int8 *)v7);
LABEL_33:
    uint64_t v26 = v15;
    if (!v15) {
      return 0;
    }
LABEL_41:
    if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
      return v26;
    }
  }
  if (v11 == 1 && v8 == 8)
  {
    uint64_t v20 = v7 + 1;
    unint64_t v21 = *v7;
    if ((*v7 & 0x80000000) == 0) {
      goto LABEL_38;
    }
    int v22 = *v20;
    int v23 = v21 + (v22 << 7);
    unint64_t v21 = (v23 - 128);
    if (v22 < 0)
    {
      uint64_t v26 = (char *)sub_188C138((uint64_t)v7, (v23 - 128));
      if (!v26) {
        return 0;
      }
      unint64_t v21 = v24;
    }
    else
    {
      uint64_t v20 = v7 + 2;
LABEL_38:
      uint64_t v26 = v20;
    }
    if (v21 > 0xF)
    {
      if (*v6) {
        int v25 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        int v25 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      sub_188C020(1, v21, v25);
    }
    else
    {
      *(_DWORD *)(a1 + 16) |= 4u;
      *(_DWORD *)(a1 + 40) = v21;
    }
    goto LABEL_41;
  }
LABEL_14:
  if (v8) {
    BOOL v13 = (v8 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v6)
    {
      unsigned int v14 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unsigned int v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v7 = v26;
    }
    unint64_t v15 = (char *)sub_1885AC0(v8, v14, v7, a3);
    goto LABEL_33;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v26;
  }
  return 0;
}

char *sub_1777C44(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1776384(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1777CD4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_177712C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_1777D64(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 4) != 0)
  {
    if (*a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 40);
    *char v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 24);
    *char v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 20);
    v4[1] = v11;
    if (v11 > 0x7F) {
      unint64_t v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      unint64_t v12 = v4 + 2;
    }
    char v4 = sub_1776500(v10, (unint64_t)v12, a3);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v13 = *(void *)(a1 + 32);
    *char v4 = 26;
    unsigned int v14 = *(_DWORD *)(v13 + 20);
    v4[1] = v14;
    if (v14 > 0x7F) {
      unint64_t v15 = sub_188A9CC(v14, v4 + 1);
    }
    else {
      unint64_t v15 = v4 + 2;
    }
    char v4 = sub_1777444(v13, (unint64_t)v15, a3);
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return v4;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    uint64_t v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    uint64_t v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(v4, v19, (int)v20);
    v4 += v21;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v19, v20, v4);
}

uint64_t sub_1777F60(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 7) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_13;
  }
  if (v2)
  {
    uint64_t v4 = sub_1776628(*(void *)(a1 + 24));
    uint64_t v3 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_7:
    uint64_t v5 = sub_177764C(*(void *)(a1 + 32));
    v3 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_8:
  if ((v2 & 4) != 0)
  {
    int v6 = *(_DWORD *)(a1 + 40);
    if (v6 < 0) {
      uint64_t v7 = 11;
    }
    else {
      uint64_t v7 = ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v3 += v7;
  }
LABEL_13:
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v3 += v11;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_177806C(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 7) != 0)
  {
    if (v4)
    {
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      data = (std::string *)result[1].__r_.__value_.__l.__data_;
      if (!data)
      {
        std::string::size_type size = v3->__r_.__value_.__l.__size_;
        uint64_t v8 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
        if (size) {
          uint64_t v8 = (void *)*v8;
        }
        data = (std::string *)sub_178DF40((uint64_t)v8);
        v3[1].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      }
      if (*(void *)(a2 + 24)) {
        unint64_t v9 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        unint64_t v9 = &off_2548EC0;
      }
      uint64_t result = sub_11A7934(data, (uint64_t)v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0)
        {
LABEL_6:
          LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
          goto LABEL_7;
        }
LABEL_5:
        LODWORD(v3[1].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 40);
        goto LABEL_6;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    unint64_t v10 = (std::string *)v3[1].__r_.__value_.__l.__size_;
    if (!v10)
    {
      std::string::size_type v11 = v3->__r_.__value_.__l.__size_;
      unint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        unint64_t v12 = (void *)*v12;
      }
      unint64_t v10 = (std::string *)sub_178E06C((uint64_t)v12);
      v3[1].__r_.__value_.__l.__size_ = (std::string::size_type)v10;
    }
    if (*(void *)(a2 + 32)) {
      uint64_t v13 = *(uint64_t (****)())(a2 + 32);
    }
    else {
      uint64_t v13 = &off_2548F30;
    }
    uint64_t result = sub_1777750(v10, (uint64_t)v13);
    if ((v4 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_7:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1778194()
{
  return 1;
}

void *sub_177819C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.ButtonItem");
}

uint64_t sub_17781AC(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_177824C(uint64_t a1)
{
  sub_17781AC(a1);

  operator delete();
}

uint64_t sub_1778284(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v1 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v1 + 23) < 0)
    {
      **(unsigned char **)unint64_t v1 = 0;
      *(void *)(v1 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v1 = 0;
      *(unsigned char *)(v1 + 23) = 0;
    }
  }
  char v3 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v3) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_17782C8(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v17 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v17, a3[11].i32[1])) {
    return *(void *)v17;
  }
  uint64_t v5 = (void *)(a1 + 8);
  while (1)
  {
    int v6 = (char *)(*(void *)v17 + 1);
    unsigned int v7 = **(unsigned char **)v17;
    if ((char)**(unsigned char **)v17 < 0)
    {
      unsigned int v8 = v7 + (*v6 << 7);
      unsigned int v7 = v8 - 128;
      if (*v6 < 0)
      {
        int v6 = (char *)sub_188C180(*(uint64_t *)v17, v8 - 128);
        unsigned int v7 = v9;
      }
      else
      {
        int v6 = (char *)(*(void *)v17 + 2);
      }
    }
    *(void *)uint64_t v17 = v6;
    if (v7 != 10) {
      break;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v13 = *(void *)(a1 + 8);
    unsigned int v14 = (uint64_t *)(v13 & 0xFFFFFFFFFFFFFFFCLL);
    if (v13) {
      unsigned int v14 = (uint64_t *)*v14;
    }
    unint64_t v15 = (std::string *)sub_1880F84((void *)(a1 + 24), v14);
    unint64_t v12 = (void *)sub_188C244(v15, *(char **)v17, (uint64_t)a3);
LABEL_18:
    *(void *)uint64_t v17 = v12;
    if (!v12) {
      goto LABEL_25;
    }
    if (sub_11947B8((uint64_t)a3, (char **)v17, a3[11].i32[1])) {
      return *(void *)v17;
    }
  }
  if (v7) {
    BOOL v10 = (v7 & 7) == 4;
  }
  else {
    BOOL v10 = 1;
  }
  if (!v10)
  {
    if (*v5)
    {
      std::string::size_type v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      std::string::size_type v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v6 = *(char **)v17;
    }
    unint64_t v12 = sub_1885AC0(v7, v11, v6, a3);
    goto LABEL_18;
  }
  if (v6)
  {
    a3[10].i32[0] = v7 - 1;
    return *(void *)v17;
  }
LABEL_25:
  *(void *)uint64_t v17 = 0;
  return *(void *)v17;
}

char *sub_1778420(uint64_t a1, char *__dst, void *a3)
{
  int v4 = __dst;
  if (*(unsigned char *)(a1 + 16)) {
    int v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  uint64_t v6 = *(void *)(a1 + 8);
  if ((v6 & 1) == 0) {
    return v4;
  }
  unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v8 + 31) < 0)
  {
    unsigned int v9 = *(void **)(v8 + 8);
    uint64_t v10 = *(void *)(v8 + 16);
  }
  else
  {
    unsigned int v9 = (void *)(v8 + 8);
    LODWORD(v10) = *(unsigned __int8 *)(v8 + 31);
  }
  if (*a3 - (void)v4 >= (int)v10)
  {
    uint64_t v11 = (int)v10;
    memcpy(v4, v9, (int)v10);
    v4 += v11;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v9, v10, v4);
}

uint64_t sub_17784EC(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v3 = *(unsigned __int8 *)(v2 + 23);
    uint64_t v4 = *(void *)(v2 + 8);
    if ((v3 & 0x80u) == 0) {
      uint64_t v4 = v3;
    }
    uint64_t v1 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  else
  {
    uint64_t v1 = 0;
  }
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5)
  {
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v7 + 31) < 0) {
      uint64_t v8 = *(void *)(v7 + 16);
    }
    else {
      uint64_t v8 = *(unsigned __int8 *)(v7 + 31);
    }
    v1 += v8;
  }
  *(_DWORD *)(a1 + 20) = v1;
  return v1;
}

uint64_t sub_1778570()
{
  return 1;
}

void *sub_1778578@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PlacecardLayoutConfiguration.ModuleOptions");
}

void *sub_1778588(void *a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  a1[1] = v4;
  *a1 = off_24D9518;
  sub_1882BC4((uint64_t)(a1 + 2), a2);
  a1[5] = 0;
  a1[7] = 0;
  a1[8] = 0;
  a1[6] = &qword_2550250;
  return a1;
}

void sub_17785FC(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_177862C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  uint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_2548FA8)
  {
    uint64_t v6 = *(void *)(a1 + 56);
    if (v6)
    {
      sub_17781AC(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1778700(uint64_t a1)
{
  sub_177862C(a1);

  operator delete();
}

uint64_t sub_1778738(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  int v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 3) != 0)
  {
    if ((v3 & 1) == 0) {
      goto LABEL_5;
    }
    unint64_t v4 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if ((*(char *)(v4 + 23) & 0x80000000) == 0)
    {
      *(unsigned char *)unint64_t v4 = 0;
      *(unsigned char *)(v4 + 23) = 0;
LABEL_5:
      if ((v3 & 2) == 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
    **(unsigned char **)unint64_t v4 = 0;
    *(void *)(v4 + 8) = 0;
    if ((v3 & 2) != 0) {
LABEL_6:
    }
      uint64_t result = sub_1778284(*(void *)(a1 + 56));
  }
LABEL_7:
  if ((v3 & 0xC) != 0) {
    *(void *)(a1 + 64) = 0;
  }
  char v6 = *(unsigned char *)(a1 + 8);
  uint64_t v5 = a1 + 8;
  *(_DWORD *)(v5 + 32) = 0;
  if (v6)
  {
    return sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

uint64_t sub_17787E0(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unint64_t v32 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v32, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (unsigned __int8 *)(*(void *)v32 + 1);
    unsigned int v9 = **(unsigned char **)v32;
    if ((char)**(unsigned char **)v32 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        uint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v32, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (unsigned __int8 *)(*(void *)v32 + 2);
      }
    }
    *(void *)unint64_t v32 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_34;
        }
        unint64_t v12 = (char *)(v8 + 1);
        unint64_t v13 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        int v15 = v13 + (v14 << 7);
        unint64_t v13 = (v15 - 128);
        if (v14 < 0)
        {
          *(void *)unint64_t v32 = sub_188C138((uint64_t)v8, (v15 - 128));
          if (!*(void *)v32) {
            goto LABEL_57;
          }
          unint64_t v13 = v28;
        }
        else
        {
          unint64_t v12 = (char *)(v8 + 2);
LABEL_13:
          *(void *)unint64_t v32 = v12;
        }
        if ((v13 - 14) >= 0x21 && v13 > 0xC)
        {
          if (*v7) {
            uint64_t v31 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v31 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(1, v13, v31);
        }
        else
        {
          *(_DWORD *)(a1 + 40) |= 4u;
          *(_DWORD *)(a1 + 64) = v13;
        }
        goto LABEL_44;
      case 2u:
        if (v9 != 18) {
          goto LABEL_34;
        }
        *(_DWORD *)(a1 + 40) |= 2u;
        uint64_t v17 = *(void **)(a1 + 56);
        if (!v17)
        {
          unint64_t v18 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            unint64_t v18 = (void *)*v18;
          }
          uint64_t v17 = sub_178E168((uint64_t)v18);
          *(void *)(a1 + 56) = v17;
          uint64_t v8 = *(unsigned __int8 **)v32;
        }
        uint64_t v19 = sub_1778B2C(a3, (uint64_t)v17, v8);
        goto LABEL_43;
      case 3u:
        if (v9 != 26) {
          goto LABEL_34;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        uint64_t v20 = *(void *)(a1 + 8);
        uint64_t v21 = (uint64_t *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
        if (v20) {
          uint64_t v21 = (uint64_t *)*v21;
        }
        int v22 = (std::string *)sub_1880F84((void *)(a1 + 48), v21);
        uint64_t v19 = (uint64_t)sub_188C244(v22, *(char **)v32, (uint64_t)a3);
        goto LABEL_43;
      case 4u:
        if (v9 != 32) {
          goto LABEL_34;
        }
        v5 |= 8u;
        unint64_t v24 = (char *)(v8 + 1);
        LODWORD(v23) = *v8;
        if ((v23 & 0x80) == 0) {
          goto LABEL_33;
        }
        int v25 = *v24;
        uint64_t v23 = v23 + (v25 << 7) - 128;
        if (v25 < 0)
        {
          uint64_t v29 = sub_188C138((uint64_t)v8, v23);
          *(void *)unint64_t v32 = v29;
          *(_DWORD *)(a1 + 68) = v30;
          if (!v29) {
            goto LABEL_57;
          }
        }
        else
        {
          unint64_t v24 = (char *)(v8 + 2);
LABEL_33:
          *(void *)unint64_t v32 = v24;
          *(_DWORD *)(a1 + 68) = v23;
        }
        goto LABEL_44;
      default:
LABEL_34:
        if (v9) {
          BOOL v26 = (v9 & 7) == 4;
        }
        else {
          BOOL v26 = 1;
        }
        if (!v26)
        {
          if ((v9 - 8000) >> 6 > 0x7C)
          {
            if (*v7)
            {
              int v27 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              int v27 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              uint64_t v8 = *(unsigned __int8 **)v32;
            }
            uint64_t v19 = (uint64_t)sub_1885AC0(v9, v27, (char *)v8, a3);
          }
          else
          {
            uint64_t v19 = (uint64_t)sub_18859DC((uint64_t **)(a1 + 16), v9, (char *)v8, (uint64_t)&off_2548FA8, (uint64_t *)(a1 + 8), a3);
          }
LABEL_43:
          *(void *)unint64_t v32 = v19;
          if (!v19) {
            goto LABEL_57;
          }
LABEL_44:
          if (sub_11947B8((uint64_t)a3, (char **)v32, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_57:
        }
          *(void *)unint64_t v32 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 40) |= v5;
        return *(void *)v32;
    }
  }
}

uint64_t sub_1778B2C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17782C8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1778BBC(uint64_t a1, char *a2, void *a3)
{
  unint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unint64_t v7 = *(int *)(a1 + 64);
    *unint64_t v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 56);
    *unint64_t v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 20);
    v4[1] = v11;
    if (v11 > 0x7F) {
      unint64_t v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      unint64_t v12 = v4 + 2;
    }
    unint64_t v4 = sub_1778420(v10, v12, a3);
    if ((v6 & 1) == 0)
    {
LABEL_10:
      if ((v6 & 8) == 0) {
        goto LABEL_25;
      }
      goto LABEL_19;
    }
  }
  else if ((v6 & 1) == 0)
  {
    goto LABEL_10;
  }
  unint64_t v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 8) == 0) {
    goto LABEL_25;
  }
LABEL_19:
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  unint64_t v13 = *(int *)(a1 + 68);
  *unint64_t v4 = 32;
  v4[1] = v13;
  if (v13 > 0x7F)
  {
    v4[1] = v13 | 0x80;
    unint64_t v14 = v13 >> 7;
    v4[2] = v13 >> 7;
    v4 += 3;
    if (v13 >= 0x4000)
    {
      do
      {
        *(v4 - 1) |= 0x80u;
        unint64_t v15 = v14 >> 14;
        v14 >>= 7;
        *v4++ = v14;
      }
      while (v15);
    }
  }
  else
  {
    v4 += 2;
  }
LABEL_25:
  if (*(_WORD *)(a1 + 26)) {
    unint64_t v4 = sub_1886844(a1 + 16, 1000, 2000, v4, a3);
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return v4;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    uint64_t v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    uint64_t v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if (*a3 - (void)v4 >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(v4, v19, (int)v20);
    v4 += v21;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v19, v20, v4);
}

uint64_t sub_1778E20(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = v2;
  int v4 = *(_DWORD *)(a1 + 40);
  if ((v4 & 0xF) == 0) {
    goto LABEL_19;
  }
  if (v4)
  {
    unint64_t v5 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
    uint64_t v7 = *(void *)(v5 + 8);
    if ((v6 & 0x80u) == 0) {
      uint64_t v7 = v6;
    }
    uint64_t v3 = v2 + v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v4 & 2) == 0)
    {
LABEL_4:
      if ((v4 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_11;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_4;
  }
  uint64_t v8 = sub_17784EC(*(void *)(a1 + 56));
  v3 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v4 & 4) == 0)
  {
LABEL_5:
    if ((v4 & 8) == 0) {
      goto LABEL_19;
    }
    goto LABEL_15;
  }
LABEL_11:
  int v9 = *(_DWORD *)(a1 + 64);
  if (v9 < 0) {
    uint64_t v10 = 11;
  }
  else {
    uint64_t v10 = ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v3 += v10;
  if ((v4 & 8) != 0)
  {
LABEL_15:
    int v11 = *(_DWORD *)(a1 + 68);
    if (v11 < 0) {
      uint64_t v12 = 11;
    }
    else {
      uint64_t v12 = ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v3 += v12;
  }
LABEL_19:
  uint64_t v13 = *(void *)(a1 + 8);
  if (v13)
  {
    unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v15 + 31) < 0) {
      uint64_t v16 = *(void *)(v15 + 16);
    }
    else {
      uint64_t v16 = *(unsigned __int8 *)(v15 + 31);
    }
    v3 += v16;
  }
  *(_DWORD *)(a1 + 44) = v3;
  return v3;
}

void sub_1778F80(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 40);
  if ((v4 & 0xF) != 0)
  {
    if (v4)
    {
      uint64_t v6 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 40) |= 1u;
      uint64_t v7 = (std::string **)(a1 + 48);
      uint64_t v8 = *(void *)(a1 + 8);
      int v9 = (uint64_t *)(v8 & 0xFFFFFFFFFFFFFFFCLL);
      if (v8) {
        int v9 = (uint64_t *)*v9;
      }
      sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_23;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    *(_DWORD *)(a1 + 40) |= 2u;
    uint64_t v10 = *(std::string **)(a1 + 56);
    if (!v10)
    {
      uint64_t v11 = *(void *)(a1 + 8);
      uint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        uint64_t v12 = (void *)*v12;
      }
      uint64_t v10 = (std::string *)sub_178E168((uint64_t)v12);
      *(void *)(a1 + 56) = v10;
    }
    if (*(void *)(a2 + 56)) {
      uint64_t v13 = *(uint64_t (****)())(a2 + 56);
    }
    else {
      uint64_t v13 = &off_2548F88;
    }
    sub_12329D0(v10, (uint64_t)v13);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0)
      {
LABEL_7:
        *(_DWORD *)(a1 + 40) |= v4;
        goto LABEL_8;
      }
LABEL_6:
      *(_DWORD *)(a1 + 68) = *(_DWORD *)(a2 + 68);
      goto LABEL_7;
    }
LABEL_23:
    *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
    if ((v4 & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_8:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_17790AC(uint64_t a1)
{
  return sub_18856CC(a1 + 16);
}

void *sub_17790B4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PlacecardLayoutConfiguration.Module");
}

uint64_t sub_17790C4(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 72);
  if (*(uint64_t **)(a1 + 72) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  sub_1870D3C((void *)(a1 + 48));
  sub_1889DE8((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1779178(uint64_t a1)
{
  sub_17790C4(a1);

  operator delete();
}

uint64_t sub_17791B0(uint64_t a1)
{
  uint64_t result = sub_188CC00(a1 + 24);
  uint64_t v3 = *(unsigned int *)(a1 + 56);
  if ((int)v3 >= 1)
  {
    int v4 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = sub_1778738(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 56) = 0;
  }
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v6 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v6 + 23) < 0)
    {
      **(unsigned char **)unint64_t v6 = 0;
      *(void *)(v6 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v6 = 0;
      *(unsigned char *)(v6 + 23) = 0;
    }
  }
  char v8 = *(unsigned char *)(a1 + 8);
  uint64_t v7 = a1 + 8;
  *(_DWORD *)(v7 + 72) = 0;
  *(_DWORD *)(v7 + 8) = 0;
  if (v8)
  {
    return sub_188B4AC((uint64_t *)v7);
  }
  return result;
}

uint64_t sub_177926C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unint64_t v37 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v37, a3[11].i32[1])) {
    return *(void *)v37;
  }
  unint64_t v6 = (void *)(a1 + 8);
  uint64_t v7 = (uint64_t **)(a1 + 24);
  while (2)
  {
    char v8 = (char *)(*(void *)v37 + 1);
    unsigned int v9 = **(unsigned char **)v37;
    if ((char)**(unsigned char **)v37 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        char v8 = (char *)sub_188C180(*(uint64_t *)v37, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        char v8 = (char *)(*(void *)v37 + 2);
      }
    }
    *(void *)unint64_t v37 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_42;
        }
        uint64_t v12 = v8 - 1;
        while (1)
        {
          uint64_t v13 = (char *)(v12 + 1);
          *(void *)unint64_t v37 = v12 + 1;
          unint64_t v14 = *(_DWORD **)(a1 + 40);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 32), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 32) = v15 + 1;
            uint64_t v16 = *(std::string **)&v14[2 * v15 + 2];
          }
          else
          {
            if (!*v7) {
              operator new();
            }
            *unint64_t v18 = v17;
            v18[1] = sub_3A6EDC;
            *uint64_t v17 = 0;
            v17[1] = 0;
            int v17[2] = 0;
            uint64_t v16 = (std::string *)sub_188CDC8(a1 + 24, (uint64_t)v17);
            uint64_t v13 = *(char **)v37;
          }
          uint64_t v12 = sub_188C244(v16, v13, (uint64_t)a3);
          *(void *)unint64_t v37 = v12;
          if (!v12) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_50;
          }
        }
      case 2u:
        if (v9 != 18) {
          goto LABEL_42;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v19 = *(void *)(a1 + 8);
        uint64_t v20 = (uint64_t *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
        if (v19) {
          uint64_t v20 = (uint64_t *)*v20;
        }
        uint64_t v21 = (std::string *)sub_1880F84((void *)(a1 + 72), v20);
        int v22 = (void *)sub_188C244(v21, *(char **)v37, (uint64_t)a3);
        goto LABEL_49;
      case 3u:
        if (v9 != 24) {
          goto LABEL_42;
        }
        uint64_t v23 = v8 + 1;
        unint64_t v24 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_29;
        }
        int v25 = *v23;
        int v26 = v24 + (v25 << 7);
        unint64_t v24 = (v26 - 128);
        if (v25 < 0)
        {
          *(void *)unint64_t v37 = sub_188C138((uint64_t)v8, (v26 - 128));
          if (!*(void *)v37) {
            return 0;
          }
          unint64_t v24 = v35;
        }
        else
        {
          uint64_t v23 = v8 + 2;
LABEL_29:
          *(void *)unint64_t v37 = v23;
        }
        if (v24 > 2)
        {
          if (*v6) {
            int v36 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            int v36 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(3, v24, v36);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 2u;
          *(_DWORD *)(a1 + 80) = v24;
        }
        goto LABEL_50;
      case 4u:
        if (v9 != 34) {
          goto LABEL_42;
        }
        int v27 = v8 - 1;
        while (1)
        {
          unint64_t v28 = (unsigned __int8 *)(v27 + 1);
          *(void *)unint64_t v37 = v27 + 1;
          uint64_t v29 = *(_DWORD **)(a1 + 64);
          if (v29 && (uint64_t v30 = *(int *)(a1 + 56), (int)v30 < *v29))
          {
            *(_DWORD *)(a1 + 56) = v30 + 1;
            uint64_t v31 = *(void *)&v29[2 * v30 + 2];
          }
          else
          {
            unint64_t v32 = sub_178E1EC(*(void *)(a1 + 48));
            uint64_t v31 = sub_188CDC8(a1 + 48, (uint64_t)v32);
            unint64_t v28 = *(unsigned __int8 **)v37;
          }
          int v27 = (char *)sub_1779620(a3, v31, v28);
          *(void *)unint64_t v37 = v27;
          if (!v27) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v27 || *v27 != 34) {
            goto LABEL_50;
          }
        }
      default:
LABEL_42:
        if (v9) {
          BOOL v33 = (v9 & 7) == 4;
        }
        else {
          BOOL v33 = 1;
        }
        if (!v33)
        {
          if (*v6)
          {
            int v34 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            int v34 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            char v8 = *(char **)v37;
          }
          int v22 = sub_1885AC0(v9, v34, v8, a3);
LABEL_49:
          *(void *)unint64_t v37 = v22;
          if (!v22) {
            return 0;
          }
LABEL_50:
          if (sub_11947B8((uint64_t)a3, (char **)v37, a3[11].i32[1])) {
            return *(void *)v37;
          }
          continue;
        }
        if (!v8) {
          return 0;
        }
        a3[10].i32[0] = v9 - 1;
        return *(void *)v37;
    }
  }
}

uint64_t sub_1779620(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17787E0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_17796B0(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v6 = *(unsigned int *)(a1 + 32);
  if ((int)v6 >= 1)
  {
    uint64_t v7 = 0;
    uint64_t v8 = 8 * v6;
    do
    {
      unsigned int v9 = *(void **)(*(void *)(a1 + 40) + v7 + 8);
      if (*((char *)v9 + 23) < 0)
      {
        int64_t v10 = v9[1];
        if (v10 > 127) {
          goto LABEL_12;
        }
      }
      else
      {
        int64_t v10 = *((unsigned __int8 *)v9 + 23);
      }
      if (*(void *)a3 - (void)__dst + 14 >= v10)
      {
        *__dst = 10;
        __dst[1] = v10;
        if (*((char *)v9 + 23) < 0) {
          unsigned int v9 = (void *)*v9;
        }
        unsigned int v11 = __dst + 2;
        memcpy(v11, v9, v10);
        __dst = &v11[v10];
        goto LABEL_10;
      }
LABEL_12:
      __dst = (char *)sub_188A868(a3, 1, (uint64_t)v9, __dst);
LABEL_10:
      v7 += 8;
    }
    while (v8 != v7);
  }
  int v12 = *(_DWORD *)(a1 + 16);
  if (v12) {
    __dst = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v12 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unint64_t v13 = *(int *)(a1 + 80);
    *__dst = 24;
    __dst[1] = v13;
    if (v13 > 0x7F)
    {
      __dst[1] = v13 | 0x80;
      unint64_t v14 = v13 >> 7;
      __dst[2] = v13 >> 7;
      __dst += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unint64_t v15 = v14 >> 14;
          v14 >>= 7;
          *__dst++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      __dst += 2;
    }
  }
  int v16 = *(_DWORD *)(a1 + 56);
  if (v16)
  {
    for (int i = 0; i != v16; ++i)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v18 = *(void *)(*(void *)(a1 + 64) + 8 * i + 8);
      *__dst = 34;
      unsigned int v19 = *(_DWORD *)(v18 + 44);
      __dst[1] = v19;
      if (v19 > 0x7F) {
        uint64_t v20 = sub_188A9CC(v19, __dst + 1);
      }
      else {
        uint64_t v20 = __dst + 2;
      }
      __dst = sub_1778BBC(v18, v20, a3);
    }
  }
  uint64_t v21 = *(void *)(a1 + 8);
  if ((v21 & 1) == 0) {
    return __dst;
  }
  unint64_t v23 = v21 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v23 + 31) < 0)
  {
    unint64_t v24 = *(void **)(v23 + 8);
    uint64_t v25 = *(void *)(v23 + 16);
  }
  else
  {
    unint64_t v24 = (void *)(v23 + 8);
    LODWORD(v25) = *(unsigned __int8 *)(v23 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v25)
  {
    uint64_t v26 = (int)v25;
    memcpy(__dst, v24, (int)v25);
    __dst += v26;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v24, v25, __dst);
}

uint64_t sub_177993C(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  if ((int)v2 < 1)
  {
    uint64_t v4 = *(unsigned int *)(a1 + 32);
  }
  else
  {
    uint64_t v3 = (uint64_t *)(*(void *)(a1 + 40) + 8);
    uint64_t v4 = *(unsigned int *)(a1 + 32);
    do
    {
      uint64_t v5 = *v3++;
      uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
      uint64_t v7 = *(void *)(v5 + 8);
      if ((v6 & 0x80u) == 0) {
        uint64_t v7 = v6;
      }
      v4 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      --v2;
    }
    while (v2);
  }
  uint64_t v8 = *(int *)(a1 + 56);
  uint64_t v9 = v4 + v8;
  uint64_t v10 = *(void *)(a1 + 64);
  if (v10) {
    unsigned int v11 = (uint64_t *)(v10 + 8);
  }
  else {
    unsigned int v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_1778E20(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  int v15 = *(_DWORD *)(a1 + 16);
  if ((v15 & 3) != 0)
  {
    if (v15)
    {
      unint64_t v16 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v17 = *(unsigned __int8 *)(v16 + 23);
      uint64_t v18 = *(void *)(v16 + 8);
      if ((v17 & 0x80u) == 0) {
        uint64_t v18 = v17;
      }
      v9 += v18 + ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v15 & 2) != 0)
    {
      int v19 = *(_DWORD *)(a1 + 80);
      uint64_t v20 = ((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if (v19 >= 0) {
        uint64_t v21 = v20;
      }
      else {
        uint64_t v21 = 11;
      }
      v9 += v21;
    }
  }
  uint64_t v22 = *(void *)(a1 + 8);
  if (v22)
  {
    unint64_t v24 = v22 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v24 + 31) < 0) {
      uint64_t v25 = *(void *)(v24 + 16);
    }
    else {
      uint64_t v25 = *(unsigned __int8 *)(v24 + 31);
    }
    v9 += v25;
  }
  *(_DWORD *)(a1 + 20) = v9;
  return v9;
}

void sub_1779ACC(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (const std::string **)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_188FB98(a1 + 24, v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    uint64_t v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    unsigned int v11 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_1872C1C((uint64_t *)(a1 + 48), v11, v10, v9, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v12 = *(_DWORD *)(a1 + 56) + v9;
    *(_DWORD *)(a1 + 56) = v12;
    uint64_t v13 = *(int **)(a1 + 64);
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 16);
  if ((v14 & 3) != 0)
  {
    if (v14)
    {
      int v15 = (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v16 = *(void *)(a1 + 8);
      uint64_t v17 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
      if (v16) {
        uint64_t v17 = (uint64_t *)*v17;
      }
      sub_1881DF4((std::string **)(a1 + 72), v15, v17);
    }
    if ((v14 & 2) != 0) {
      *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
    }
    *(_DWORD *)(a1 + 16) |= v14;
  }
  uint64_t v18 = *(void *)(a2 + 8);
  if (v18)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v18 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

BOOL sub_1779C58(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 56);
  do
  {
    int v3 = v2;
    if ((int)v2 < 1) {
      break;
    }
    uint64_t v4 = v2 - 1;
    char v5 = sub_18856CC(*(void *)(*(void *)(a1 + 64) + 8 * v2) + 16);
    uint64_t v2 = v4;
  }
  while ((v5 & 1) != 0);
  return v3 < 1;
}

void *sub_1779CB4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PlacecardLayoutConfiguration.ModuleLayoutEntry");
}

uint64_t sub_1779CC4(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  *(void *)(a1 + 8) = v5;
  *(void *)a1 = off_24D9618;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 40) = a2;
  *(_DWORD *)(a1 + 64) = 0;
  return a1;
}

void sub_1779D34(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_1779D64(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = a1 + 16;
  *(void *)a1 = off_24D9618;
  *(_DWORD *)(a1 + 24) = 0;
  uint64_t v6 = (uint64_t *)(a1 + 40);
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  int v7 = *(_DWORD *)(a2 + 48);
  if (v7)
  {
    uint64_t v8 = *(void *)(a2 + 56);
    int v9 = (uint64_t *)sub_188CCE4(a1 + 40, *(_DWORD *)(a2 + 48));
    sub_1872CA8(v6, v9, (uint64_t *)(v8 + 8), v7, **(_DWORD **)(a1 + 56) - *(_DWORD *)(a1 + 48));
    int v10 = *(_DWORD *)(a1 + 48) + v7;
    *(_DWORD *)(a1 + 48) = v10;
    unsigned int v11 = *(int **)(a1 + 56);
    if (*v11 < v10) {
      *unsigned int v11 = v10;
    }
  }
  *(_DWORD *)(a1 + 64) = 0;
  uint64_t v12 = *(void *)(a2 + 8);
  if (v12) {
    sub_188B4F8(v4, (v12 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v5, a2 + 16);
  return a1;
}

void sub_1779E64(_Unwind_Exception *a1)
{
  sub_1882CC0(v3);
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_1779EB4(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1870DBC(a1 + 5);
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1779F3C(void *a1)
{
  sub_1779EB4(a1);

  operator delete();
}

char *sub_1779F74(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v20 = a2;
  if ((sub_11947B8((uint64_t)a3, &v20, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v5 = (void *)(a1 + 8);
    while (1)
    {
      uint64_t v6 = v20 + 1;
      unsigned int v7 = *v20;
      if (*v20 < 0)
      {
        unsigned int v8 = v7 + (*v6 << 7);
        unsigned int v7 = v8 - 128;
        if (*v6 < 0)
        {
          uint64_t v6 = (char *)sub_188C180((uint64_t)v20, v8 - 128);
          unsigned int v7 = v9;
        }
        else
        {
          uint64_t v6 = v20 + 2;
        }
      }
      uint64_t v20 = v6;
      if (v7 == 10)
      {
        uint64_t v12 = v6 - 1;
        while (1)
        {
          uint64_t v13 = (unsigned __int8 *)(v12 + 1);
          uint64_t v20 = v12 + 1;
          int v14 = *(_DWORD **)(a1 + 56);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 48), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 48) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            uint64_t v17 = sub_178E248(*(void *)(a1 + 40));
            uint64_t v16 = sub_188CDC8(a1 + 40, v17);
            uint64_t v13 = (unsigned __int8 *)v20;
          }
          uint64_t v12 = (char *)sub_177A158(a3, v16, v13);
          uint64_t v20 = v12;
          if (!v12) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_27;
          }
        }
      }
      if (!v7 || (v7 & 7) == 4) {
        break;
      }
      if ((v7 - 8000) >> 6 > 0x7C)
      {
        if (*v5)
        {
          uint64_t v18 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else
        {
          uint64_t v18 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          uint64_t v6 = v20;
        }
        unsigned int v11 = sub_1885AC0(v7, v18, v6, a3);
      }
      else
      {
        unsigned int v11 = sub_18859DC((uint64_t **)(a1 + 16), v7, v6, (uint64_t)&off_2548FF0, (uint64_t *)(a1 + 8), a3);
      }
      uint64_t v20 = (char *)v11;
      if (!v11) {
        return 0;
      }
LABEL_27:
      if (sub_11947B8((uint64_t)a3, &v20, a3[11].i32[1])) {
        return v20;
      }
    }
    if (v6)
    {
      a3[10].i32[0] = v7 - 1;
      return v20;
    }
    return 0;
  }
  return v20;
}

uint64_t sub_177A158(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_177926C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_177A1E8(uint64_t a1, char *a2, _DWORD *a3)
{
  int v6 = *(_DWORD *)(a1 + 48);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 56) + 8 * i + 8);
      *a2 = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      a2[1] = v9;
      if (v9 > 0x7F) {
        int v10 = sub_188A9CC(v9, a2 + 1);
      }
      else {
        int v10 = a2 + 2;
      }
      a2 = sub_17796B0(v8, v10, a3);
    }
  }
  if (*(_WORD *)(a1 + 26)) {
    a2 = sub_1886844(a1 + 16, 1000, 2000, a2, a3);
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return a2;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    int v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    int v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*(void *)a3 - (void)a2 >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(a2, v14, (int)v15);
    a2 += v16;
    return a2;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, a2);
}

uint64_t sub_177A350(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(int *)(a1 + 48);
  uint64_t v4 = v2 + v3;
  uint64_t v5 = *(void *)(a1 + 56);
  if (v5) {
    int v6 = (uint64_t *)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = sub_177993C(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  uint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v12 + 31) < 0) {
      uint64_t v13 = *(void *)(v12 + 16);
    }
    else {
      uint64_t v13 = *(unsigned __int8 *)(v12 + 31);
    }
    v4 += v13;
  }
  *(_DWORD *)(a1 + 64) = v4;
  return v4;
}

uint64_t sub_177A404(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 8);
  if ((int)v1 >= 1)
  {
    do
    {
      uint64_t v3 = v1--;
      uint64_t v4 = *(void *)(*(void *)(a1 + 16) + 8 * v1 + 8);
      uint64_t v5 = *(unsigned int *)(v4 + 56);
      while ((int)v5 >= 1)
      {
        uint64_t v6 = v5 - 1;
        char v7 = sub_18856CC(*(void *)(*(void *)(v4 + 64) + 8 * v5) + 16);
        uint64_t v5 = v6;
        if ((v7 & 1) == 0) {
          return 0;
        }
      }
    }
    while (v3 >= 2);
  }
  return 1;
}

void *sub_177A494@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PlacecardLayoutConfiguration");
}

uint64_t sub_177A4A4(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  *(void *)(a1 + 8) = v5;
  *(void *)a1 = off_24D9698;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = a2;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = a2;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  return a1;
}

void sub_177A520(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_177A550(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = a1 + 16;
  *(void *)a1 = off_24D9698;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  uint64_t v6 = (uint64_t *)(a1 + 48);
  *(_DWORD *)(a1 + 68) = 0;
  *(void *)(a1 + 52) = 0;
  *(void *)(a1 + 60) = 0;
  *(void *)(a1 + 44) = 0;
  int v7 = *(_DWORD *)(a2 + 56);
  if (v7)
  {
    uint64_t v8 = *(void *)(a2 + 64);
    uint64_t v9 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_12C4B74(v6, v9, (uint64_t *)(v8 + 8), v7, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v10 = *(_DWORD *)(a1 + 56) + v7;
    *(_DWORD *)(a1 + 56) = v10;
    uint64_t v11 = *(int **)(a1 + 64);
    if (*v11 < v10) {
      *uint64_t v11 = v10;
    }
  }
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0;
  int v12 = *(_DWORD *)(a2 + 80);
  if (v12)
  {
    uint64_t v13 = *(void *)(a2 + 88);
    int v14 = (std::string **)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_12C1E38((std::string *)(a1 + 72), v14, (uint64_t *)(v13 + 8), v12, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v15 = *(_DWORD *)(a1 + 80) + v12;
    *(_DWORD *)(a1 + 80) = v15;
    uint64_t v16 = *(int **)(a1 + 88);
    if (*v16 < v15) {
      int *v16 = v15;
    }
  }
  uint64_t v17 = *(void *)(a2 + 8);
  if (v17) {
    sub_188B4F8(v4, (v17 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v5, a2 + 16);
  int v18 = *(_DWORD *)(a2 + 40);
  if (v18) {
    operator new();
  }
  *(void *)(a1 + 96) = 0;
  if ((v18 & 2) != 0) {
    operator new();
  }
  *(void *)(a1 + 104) = 0;
  if ((v18 & 4) != 0) {
    operator new();
  }
  *(void *)(a1 + 112) = 0;
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  return a1;
}

void sub_177A778()
{
}

uint64_t sub_177A82C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_12;
    }
  }
  else if (v4)
  {
    goto LABEL_12;
  }
  if ((uint64_t (***)())a1 != &off_2549038)
  {
    uint64_t v5 = *(void *)(a1 + 96);
    if (v5)
    {
      sub_184AFBC(v5);
      operator delete();
    }
    uint64_t v6 = *(void **)(a1 + 104);
    if (v6)
    {
      sub_16FBA2C(v6);
      operator delete();
    }
    if (*(void *)(a1 + 112))
    {
      sub_15B2C44();
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_12:
  sub_12C1DB8((void *)(a1 + 72));
  sub_12C45E8((void *)(a1 + 48));
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_177A93C(uint64_t a1)
{
  sub_177A82C(a1);

  operator delete();
}

char *sub_177A974(uint64_t a1, char *a2, int32x2_t *a3)
{
  int64_t v44 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v44, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = v44 + 1;
    unsigned int v9 = *v44;
    if (*v44 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v44, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v44 + 2;
      }
    }
    int64_t v44 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_59;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        uint64_t v12 = *(void *)(a1 + 96);
        if (!v12)
        {
          uint64_t v13 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v13 = (void *)*v13;
          }
          uint64_t v12 = sub_185089C((uint64_t)v13);
          *(void *)(a1 + 96) = v12;
          uint64_t v8 = v44;
        }
        int v14 = sub_12688D0(a3, v12, (unsigned __int8 *)v8);
        goto LABEL_68;
      case 2u:
        if (v9 != 18) {
          goto LABEL_59;
        }
        *(_DWORD *)(a1 + 40) |= 2u;
        uint64_t v15 = *(void *)(a1 + 104);
        if (!v15)
        {
          uint64_t v16 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v16 = (void *)*v16;
          }
          uint64_t v15 = sub_17894DC((uint64_t)v16);
          *(void *)(a1 + 104) = v15;
          uint64_t v8 = v44;
        }
        int v14 = (char *)sub_15435C4(a3, v15, (unsigned __int8 *)v8);
        goto LABEL_68;
      case 3u:
        if (v9 != 26) {
          goto LABEL_59;
        }
        *(_DWORD *)(a1 + 40) |= 4u;
        uint64_t v17 = *(void **)(a1 + 112);
        if (!v17)
        {
          int v18 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            int v18 = (void *)*v18;
          }
          uint64_t v17 = sub_15C1B30((uint64_t)v18);
          *(void *)(a1 + 112) = v17;
          uint64_t v8 = v44;
        }
        int v14 = (char *)sub_125CF74(a3, (uint64_t)v17, (unsigned __int8 *)v8);
        goto LABEL_68;
      case 4u:
        if (v9 != 34) {
          goto LABEL_59;
        }
        int v19 = v8 - 1;
        while (1)
        {
          uint64_t v20 = (unsigned __int8 *)(v19 + 1);
          int64_t v44 = v19 + 1;
          uint64_t v21 = *(_DWORD **)(a1 + 64);
          if (v21 && (uint64_t v22 = *(int *)(a1 + 56), (int)v22 < *v21))
          {
            *(_DWORD *)(a1 + 56) = v22 + 1;
            uint64_t v23 = *(void *)&v21[2 * v22 + 2];
          }
          else
          {
            uint64_t v24 = sub_185089C(*(void *)(a1 + 48));
            uint64_t v23 = sub_188CDC8(a1 + 48, v24);
            uint64_t v20 = (unsigned __int8 *)v44;
          }
          int v19 = sub_12688D0(a3, v23, v20);
          int64_t v44 = v19;
          if (!v19) {
            goto LABEL_82;
          }
          if (*(void *)a3 <= (unint64_t)v19 || *v19 != 34) {
            goto LABEL_69;
          }
        }
      case 5u:
        if (v9 != 40) {
          goto LABEL_59;
        }
        v5 |= 8u;
        uint64_t v25 = v8 + 1;
        int v26 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_41;
        }
        int v27 = *v25;
        int v26 = v26 + (v27 << 7) - 128;
        if (v27 < 0)
        {
          int v40 = (char *)sub_188C0D0((uint64_t)v8, v26);
          int64_t v44 = v40;
          *(_DWORD *)(a1 + 120) = v41;
          if (!v40) {
            goto LABEL_82;
          }
        }
        else
        {
          uint64_t v25 = v8 + 2;
LABEL_41:
          int64_t v44 = v25;
          *(_DWORD *)(a1 + 120) = v26;
        }
        goto LABEL_69;
      case 6u:
        if (v9 != 50) {
          goto LABEL_59;
        }
        unint64_t v28 = v8 - 1;
        while (1)
        {
          uint64_t v29 = (unsigned __int8 *)(v28 + 1);
          int64_t v44 = v28 + 1;
          uint64_t v30 = *(_DWORD **)(a1 + 88);
          if (v30 && (uint64_t v31 = *(int *)(a1 + 80), (int)v31 < *v30))
          {
            *(_DWORD *)(a1 + 80) = v31 + 1;
            uint64_t v32 = *(void *)&v30[2 * v31 + 2];
          }
          else
          {
            BOOL v33 = sub_15C1B30(*(void *)(a1 + 72));
            uint64_t v32 = sub_188CDC8(a1 + 72, (uint64_t)v33);
            uint64_t v29 = (unsigned __int8 *)v44;
          }
          unint64_t v28 = (char *)sub_125CF74(a3, v32, v29);
          int64_t v44 = v28;
          if (!v28) {
            goto LABEL_82;
          }
          if (*(void *)a3 <= (unint64_t)v28 || *v28 != 50) {
            goto LABEL_69;
          }
        }
      case 7u:
        if (v9 != 56) {
          goto LABEL_59;
        }
        int v34 = v8 + 1;
        unint64_t v35 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_56;
        }
        int v36 = *v34;
        int v37 = v35 + (v36 << 7);
        unint64_t v35 = (v37 - 128);
        if (v36 < 0)
        {
          int64_t v44 = (char *)sub_188C138((uint64_t)v8, (v37 - 128));
          if (!v44) {
            goto LABEL_82;
          }
          unint64_t v35 = v42;
        }
        else
        {
          int v34 = v8 + 2;
LABEL_56:
          int64_t v44 = v34;
        }
        if (v35 > 2)
        {
          if (*v7) {
            uint64_t v43 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v43 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(7, v35, v43);
        }
        else
        {
          *(_DWORD *)(a1 + 40) |= 0x10u;
          *(_DWORD *)(a1 + 124) = v35;
        }
        goto LABEL_69;
      default:
LABEL_59:
        if (v9) {
          BOOL v38 = (v9 & 7) == 4;
        }
        else {
          BOOL v38 = 1;
        }
        if (!v38)
        {
          if ((v9 - 8000) >> 6 > 0x7C)
          {
            if (*v7)
            {
              unint64_t v39 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              unint64_t v39 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              uint64_t v8 = v44;
            }
            int v14 = (char *)sub_1885AC0(v9, v39, v8, a3);
          }
          else
          {
            int v14 = (char *)sub_18859DC((uint64_t **)(a1 + 16), v9, v8, (uint64_t)&off_2549038, (uint64_t *)(a1 + 8), a3);
          }
LABEL_68:
          int64_t v44 = v14;
          if (!v14) {
            goto LABEL_82;
          }
LABEL_69:
          if (sub_11947B8((uint64_t)a3, &v44, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_82:
        }
          int64_t v44 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 40) |= v5;
        return v44;
    }
  }
}

char *sub_177AE40(uint64_t a1, char *a2, unint64_t *a3)
{
  uint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if (v6)
  {
    if (*a3 <= (unint64_t)a2) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    uint64_t v7 = *(void *)(a1 + 96);
    *uint64_t v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 44);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    uint64_t v4 = sub_184B3AC(v7, v9, a3);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_23;
      }
      goto LABEL_17;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v10 = *(void *)(a1 + 104);
  *uint64_t v4 = 18;
  unsigned int v11 = *(_DWORD *)(v10 + 44);
  v4[1] = v11;
  if (v11 > 0x7F) {
    uint64_t v12 = sub_188A9CC(v11, v4 + 1);
  }
  else {
    uint64_t v12 = v4 + 2;
  }
  uint64_t v4 = sub_16FC618(v10, v12, a3);
  if ((v6 & 4) != 0)
  {
LABEL_17:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v13 = *(void *)(a1 + 112);
    *uint64_t v4 = 26;
    unsigned int v14 = *(_DWORD *)(v13 + 20);
    v4[1] = v14;
    if (v14 > 0x7F) {
      uint64_t v15 = sub_188A9CC(v14, v4 + 1);
    }
    else {
      uint64_t v15 = v4 + 2;
    }
    uint64_t v4 = sub_15B2EA4(v13, v15, a3);
  }
LABEL_23:
  int v16 = *(_DWORD *)(a1 + 56);
  if (v16)
  {
    for (int i = 0; i != v16; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v18 = *(void *)(*(void *)(a1 + 64) + 8 * i + 8);
      *uint64_t v4 = 34;
      unsigned int v19 = *(_DWORD *)(v18 + 44);
      v4[1] = v19;
      if (v19 > 0x7F) {
        uint64_t v20 = sub_188A9CC(v19, v4 + 1);
      }
      else {
        uint64_t v20 = v4 + 2;
      }
      uint64_t v4 = sub_184B3AC(v18, v20, a3);
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v21 = *(_DWORD *)(a1 + 120);
    *uint64_t v4 = 40;
    v4[1] = v21;
    if (v21 > 0x7F)
    {
      v4[1] = v21 | 0x80;
      unsigned int v22 = v21 >> 7;
      v4[2] = v21 >> 7;
      v4 += 3;
      if (v21 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v23 = v22 >> 14;
          v22 >>= 7;
          *v4++ = v22;
        }
        while (v23);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v24 = *(_DWORD *)(a1 + 80);
  if (v24)
  {
    for (int j = 0; j != v24; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v26 = *(void *)(*(void *)(a1 + 88) + 8 * j + 8);
      *uint64_t v4 = 50;
      unsigned int v27 = *(_DWORD *)(v26 + 20);
      v4[1] = v27;
      if (v27 > 0x7F) {
        unint64_t v28 = sub_188A9CC(v27, v4 + 1);
      }
      else {
        unint64_t v28 = v4 + 2;
      }
      uint64_t v4 = sub_15B2EA4(v26, v28, a3);
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v29 = *(int *)(a1 + 124);
    *uint64_t v4 = 56;
    v4[1] = v29;
    if (v29 > 0x7F)
    {
      v4[1] = v29 | 0x80;
      unint64_t v30 = v29 >> 7;
      v4[2] = v29 >> 7;
      v4 += 3;
      if (v29 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v31 = v30 >> 14;
          v30 >>= 7;
          *v4++ = v30;
        }
        while (v31);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (*(_WORD *)(a1 + 26)) {
    uint64_t v4 = sub_1886844(a1 + 16, 1000, 2000, v4, a3);
  }
  uint64_t v32 = *(void *)(a1 + 8);
  if ((v32 & 1) == 0) {
    return v4;
  }
  unint64_t v34 = v32 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v34 + 31) < 0)
  {
    unint64_t v35 = *(void **)(v34 + 8);
    uint64_t v36 = *(void *)(v34 + 16);
  }
  else
  {
    unint64_t v35 = (void *)(v34 + 8);
    LODWORD(v36) = *(unsigned __int8 *)(v34 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v36)
  {
    uint64_t v37 = (int)v36;
    memcpy(v4, v35, (int)v36);
    v4 += v37;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v35, v36, v4);
}

uint64_t sub_177B260(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(int *)(a1 + 56);
  uint64_t v4 = v2 + v3;
  uint64_t v5 = *(void *)(a1 + 64);
  if (v5) {
    int v6 = (uint64_t *)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = sub_184B568(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  uint64_t v10 = *(int *)(a1 + 80);
  uint64_t v11 = v4 + v10;
  uint64_t v12 = *(void *)(a1 + 88);
  if (v12) {
    uint64_t v13 = (uint64_t *)(v12 + 8);
  }
  else {
    uint64_t v13 = 0;
  }
  if (v10)
  {
    uint64_t v14 = 8 * v10;
    do
    {
      uint64_t v15 = *v13++;
      uint64_t v16 = sub_15B2F90(v15);
      v11 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6);
      v14 -= 8;
    }
    while (v14);
  }
  int v17 = *(_DWORD *)(a1 + 40);
  if ((v17 & 0x1F) != 0)
  {
    if (v17)
    {
      uint64_t v23 = sub_184B568(*(void *)(a1 + 96));
      v11 += v23 + ((9 * (__clz(v23 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v17 & 2) == 0)
      {
LABEL_16:
        if ((v17 & 4) == 0) {
          goto LABEL_17;
        }
        goto LABEL_27;
      }
    }
    else if ((v17 & 2) == 0)
    {
      goto LABEL_16;
    }
    uint64_t v24 = sub_16FCA60(*(void *)(a1 + 104));
    v11 += v24 + ((9 * (__clz(v24 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v17 & 4) == 0)
    {
LABEL_17:
      if ((v17 & 8) == 0) {
        goto LABEL_18;
      }
      goto LABEL_28;
    }
LABEL_27:
    uint64_t v25 = sub_15B2F90(*(void *)(a1 + 112));
    v11 += v25 + ((9 * (__clz(v25 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v17 & 8) == 0)
    {
LABEL_18:
      if ((v17 & 0x10) == 0) {
        goto LABEL_23;
      }
LABEL_19:
      int v18 = *(_DWORD *)(a1 + 124);
      uint64_t v19 = ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if (v18 >= 0) {
        uint64_t v20 = v19;
      }
      else {
        uint64_t v20 = 11;
      }
      v11 += v20;
      goto LABEL_23;
    }
LABEL_28:
    v11 += ((9 * (__clz(*(_DWORD *)(a1 + 120) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v17 & 0x10) == 0) {
      goto LABEL_23;
    }
    goto LABEL_19;
  }
LABEL_23:
  uint64_t v21 = *(void *)(a1 + 8);
  if (v21)
  {
    unint64_t v26 = v21 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v26 + 31) < 0) {
      uint64_t v27 = *(void *)(v26 + 16);
    }
    else {
      uint64_t v27 = *(unsigned __int8 *)(v26 + 31);
    }
    v11 += v27;
  }
  *(_DWORD *)(a1 + 44) = v11;
  return v11;
}

void *sub_177B470@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.Publisher");
}

void *sub_177B480(void *a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  a1[1] = v5;
  *a1 = off_24D9718;
  sub_1882BC4((uint64_t)(a1 + 2), a2);
  a1[5] = 0;
  a1[6] = a2;
  a1[7] = 0;
  a1[8] = 0;
  a1[9] = &qword_2550250;
  a1[10] = &qword_2550250;
  return a1;
}

void sub_177B4FC(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_177B52C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_9;
    }
  }
  else if (v4)
  {
    goto LABEL_9;
  }
  uint64_t v5 = (void ***)(a1 + 72);
  if (*(uint64_t **)(a1 + 72) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 80) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 80));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_9:
  sub_1889DE8((void *)(a1 + 48));
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_177B5F4(uint64_t a1)
{
  sub_177B52C(a1);

  operator delete();
}

uint64_t sub_177B62C(uint64_t a1)
{
  sub_18843A4((unsigned char *)(a1 + 16));
  uint64_t result = sub_188CC00(a1 + 48);
  int v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 3) != 0)
  {
    if (v3)
    {
      unint64_t v4 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v4 + 23) < 0)
      {
        **(unsigned char **)unint64_t v4 = 0;
        *(void *)(v4 + 8) = 0;
        if ((v3 & 2) == 0) {
          goto LABEL_11;
        }
        goto LABEL_6;
      }
      *(unsigned char *)unint64_t v4 = 0;
      *(unsigned char *)(v4 + 23) = 0;
    }
    if ((v3 & 2) == 0) {
      goto LABEL_11;
    }
LABEL_6:
    unint64_t v5 = *(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v5 + 23) < 0)
    {
      **(unsigned char **)unint64_t v5 = 0;
      *(void *)(v5 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v5 = 0;
      *(unsigned char *)(v5 + 23) = 0;
    }
  }
LABEL_11:
  char v7 = *(unsigned char *)(a1 + 8);
  uint64_t v6 = a1 + 8;
  *(_DWORD *)(v6 + 32) = 0;
  if (v7)
  {
    return sub_188B4AC((uint64_t *)v6);
  }
  return result;
}

uint64_t sub_177B6F0(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unint64_t v29 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v29, a3[11].i32[1])) {
    return *(void *)v29;
  }
  uint64_t v6 = (uint64_t **)(a1 + 48);
  char v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = (char *)(*(void *)v29 + 1);
    unsigned int v9 = **(unsigned char **)v29;
    if ((char)**(unsigned char **)v29 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180(*(uint64_t *)v29, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (char *)(*(void *)v29 + 2);
      }
    }
    *(void *)unint64_t v29 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 == 3)
    {
      if (v9 == 26)
      {
        int v17 = v8 - 1;
        while (1)
        {
          int v18 = (char *)(v17 + 1);
          *(void *)unint64_t v29 = v17 + 1;
          uint64_t v19 = *(_DWORD **)(a1 + 64);
          if (v19 && (uint64_t v20 = *(int *)(a1 + 56), (int)v20 < *v19))
          {
            *(_DWORD *)(a1 + 56) = v20 + 1;
            uint64_t v21 = *(std::string **)&v19[2 * v20 + 2];
          }
          else
          {
            if (!*v6) {
              operator new();
            }
            void *v23 = v22;
            v23[1] = sub_3A6EDC;
            void *v22 = 0;
            v22[1] = 0;
            int v22[2] = 0;
            uint64_t v21 = (std::string *)sub_188CDC8(a1 + 48, (uint64_t)v22);
            int v18 = *(char **)v29;
          }
          int v17 = sub_188C244(v21, v18, (uint64_t)a3);
          *(void *)unint64_t v29 = v17;
          if (!v17) {
            goto LABEL_50;
          }
          if (*(void *)a3 <= (unint64_t)v17 || *v17 != 26) {
            goto LABEL_44;
          }
        }
      }
    }
    else if (v12 == 2)
    {
      if (v9 == 18)
      {
        *(_DWORD *)(a1 + 40) |= 2u;
        uint64_t v24 = *(void *)(a1 + 8);
        uint64_t v25 = (uint64_t *)(v24 & 0xFFFFFFFFFFFFFFFCLL);
        if (v24) {
          uint64_t v25 = (uint64_t *)*v25;
        }
        unint64_t v26 = (void *)(a1 + 80);
        goto LABEL_42;
      }
    }
    else if (v12 == 1 && v9 == 10)
    {
      *(_DWORD *)(a1 + 40) |= 1u;
      uint64_t v27 = *(void *)(a1 + 8);
      uint64_t v25 = (uint64_t *)(v27 & 0xFFFFFFFFFFFFFFFCLL);
      if (v27) {
        uint64_t v25 = (uint64_t *)*v25;
      }
      unint64_t v26 = (void *)(a1 + 72);
LABEL_42:
      unint64_t v28 = (std::string *)sub_1880F84(v26, v25);
      uint64_t v16 = (void *)sub_188C244(v28, *(char **)v29, (uint64_t)a3);
      goto LABEL_43;
    }
    if (!v9 || (v9 & 7) == 4) {
      break;
    }
    if (v9 - 1600 < 0xFA0 || (v9 - 8000) >> 6 <= 0x7C)
    {
      uint64_t v16 = sub_18859DC((uint64_t **)(a1 + 16), v9, v8, (uint64_t)&off_25490B8, (uint64_t *)(a1 + 8), a3);
    }
    else
    {
      if (*v7)
      {
        uint64_t v15 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        uint64_t v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        uint64_t v8 = *(char **)v29;
      }
      uint64_t v16 = sub_1885AC0(v9, v15, v8, a3);
    }
LABEL_43:
    *(void *)unint64_t v29 = v16;
    if (!v16) {
      goto LABEL_50;
    }
LABEL_44:
    if (sub_11947B8((uint64_t)a3, (char **)v29, a3[11].i32[1])) {
      return *(void *)v29;
    }
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    return *(void *)v29;
  }
LABEL_50:
  *(void *)unint64_t v29 = 0;
  return *(void *)v29;
}